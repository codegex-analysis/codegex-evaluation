<?xml version="1.0" encoding="utf-8"?>
<BugCollection sequence='0' release='' analysisTimestamp='1642310838080' version='4.1.4' timestamp='1642305222158'><Project projectName='JMH Generators: ASM'><Jar>/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jmh/jmh-generator-asm/target/classes</Jar><AuxClasspathEntry>/home/codegex/.m2/repository/org/openjdk/jmh/jmh-core/1.29-SNAPSHOT/jmh-core-1.29-SNAPSHOT.jar</AuxClasspathEntry><AuxClasspathEntry>/home/codegex/.m2/repository/net/sf/jopt-simple/jopt-simple/4.6/jopt-simple-4.6.jar</AuxClasspathEntry><AuxClasspathEntry>/home/codegex/.m2/repository/org/apache/commons/commons-math3/3.2/commons-math3-3.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/codegex/.m2/repository/org/openjdk/jmh/jmh-generator-reflection/1.29-SNAPSHOT/jmh-generator-reflection-1.29-SNAPSHOT.jar</AuxClasspathEntry><AuxClasspathEntry>/home/codegex/.m2/repository/org/ow2/asm/asm/9.0/asm-9.0.jar</AuxClasspathEntry><SrcDir>/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jmh/jmh-generator-asm/src/main/java</SrcDir><WrkDir>/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jmh/jmh-generator-asm/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='e0356ccc635163eea4be51a1f1933b0c' rank='16' abbrev='BIT' category='BAD_PRACTICE' priority='2' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMClassInfo.isEnum()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMClassInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='57' end='237' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java'><Message>At ASMClassInfo.java:[lines 57-237]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMClassInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' signature='()Z' name='isEnum' primary='true'><SourceLine endBytecode='69' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='215' end='215' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMClassInfo.isEnum()</Message></Method><String value='0x4000 (16384)'><Message>Value 0x4000 (16384)</Message></String><SourceLine endBytecode='8' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='215' end='215' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='8' primary='true'><Message>At ASMClassInfo.java:[line 215]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8d8349504a91791561d162b60e4ef311' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMClassInfo.isAbstract()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMClassInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='57' end='237' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java'><Message>At ASMClassInfo.java:[lines 57-237]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMClassInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' signature='()Z' name='isAbstract' primary='true'><SourceLine endBytecode='69' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='190' end='190' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMClassInfo.isAbstract()</Message></Method><String value='0x400 (1024)'><Message>Value 0x400 (1024)</Message></String><SourceLine endBytecode='8' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='190' end='190' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='8' primary='true'><Message>At ASMClassInfo.java:[line 190]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2440ae64a3ad6307007da99e2cebdd8d' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMClassInfo.isFinal()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMClassInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='57' end='237' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java'><Message>At ASMClassInfo.java:[lines 57-237]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMClassInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' signature='()Z' name='isFinal' primary='true'><SourceLine endBytecode='68' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='205' end='205' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMClassInfo.isFinal()</Message></Method><String value='0x10 (16)'><Message>Value 0x10 (16)</Message></String><SourceLine endBytecode='7' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='205' end='205' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='7' primary='true'><Message>At ASMClassInfo.java:[line 205]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b5952af5a0996890facb7cbb020a623e' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMClassInfo.isPublic()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMClassInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='57' end='237' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java'><Message>At ASMClassInfo.java:[lines 57-237]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMClassInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' signature='()Z' name='isPublic' primary='true'><SourceLine endBytecode='67' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='195' end='195' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMClassInfo.isPublic()</Message></Method><String value='0x1 (1)'><Message>Value 0x1 (1)</Message></String><SourceLine endBytecode='6' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='195' end='195' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='6' primary='true'><Message>At ASMClassInfo.java:[line 195]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8e08616b20b62971a21d191b69fff9e2' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMClassInfo.isStrictFP()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMClassInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='57' end='237' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java'><Message>At ASMClassInfo.java:[lines 57-237]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMClassInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' signature='()Z' name='isStrictFP' primary='true'><SourceLine endBytecode='69' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='200' end='200' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMClassInfo.isStrictFP()</Message></Method><String value='0x800 (2048)'><Message>Value 0x800 (2048)</Message></String><SourceLine endBytecode='8' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='200' end='200' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='8' primary='true'><Message>At ASMClassInfo.java:[line 200]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8b1af11522bacd93854cdf5efb8c2e56' rank='20' abbrev='IIO' category='PERFORMANCE' priority='3' type='IIO_INEFFICIENT_LAST_INDEX_OF' instanceOccurrenceMax='1'><ShortMessage>Inefficient use of String.lastIndexOf(String)</ShortMessage><LongMessage>org.openjdk.jmh.generators.asm.ASMClassInfo.visit(int, int, String, String, String, String[]) uses String.lastIndexOf(String) instead of String.lastIndexOf(int)</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMClassInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='57' end='237' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java'><Message>At ASMClassInfo.java:[lines 57-237]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMClassInfo</Message></Class><Method isStatic='false' role='STRING_MESSAGE' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' signature='(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V' name='visit' primary='true'><SourceLine endBytecode='245' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='78' end='87' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='0'></SourceLine><Message>org.openjdk.jmh.generators.asm.ASMClassInfo.visit(int, int, String, String, String, String[])</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;)I' name='lastIndexOf'><SourceLine endBytecode='61' classname='java.lang.String' start='1751' end='1751' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.lastIndexOf(String)</Message></Method><SourceLine endBytecode='53' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='83' end='83' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='53' primary='true'><Message>At ASMClassInfo.java:[line 83]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='8b1af11522bacd93854cdf5efb8c2e56' rank='20' abbrev='IIO' category='PERFORMANCE' priority='3' type='IIO_INEFFICIENT_LAST_INDEX_OF' instanceOccurrenceMax='1'><ShortMessage>Inefficient use of String.lastIndexOf(String)</ShortMessage><LongMessage>org.openjdk.jmh.generators.asm.ASMClassInfo.visit(int, int, String, String, String, String[]) uses String.lastIndexOf(String) instead of String.lastIndexOf(int)</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMClassInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='57' end='237' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java'><Message>At ASMClassInfo.java:[lines 57-237]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMClassInfo</Message></Class><Method isStatic='false' role='STRING_MESSAGE' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' signature='(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V' name='visit' primary='true'><SourceLine endBytecode='245' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='78' end='87' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='0'></SourceLine><Message>org.openjdk.jmh.generators.asm.ASMClassInfo.visit(int, int, String, String, String, String[])</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;)I' name='lastIndexOf'><SourceLine endBytecode='61' classname='java.lang.String' start='1751' end='1751' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.lastIndexOf(String)</Message></Method><SourceLine endBytecode='96' classname='org.openjdk.jmh.generators.asm.ASMClassInfo' start='86' end='86' sourcepath='org/openjdk/jmh/generators/asm/ASMClassInfo.java' sourcefile='ASMClassInfo.java' startBytecode='96' primary='true'><Message>At ASMClassInfo.java:[line 86]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6d6c09060b7e9a7bfff2ea540f1de2c0' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMFieldInfo.isFinal()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' start='48' end='109' sourcepath='org/openjdk/jmh/generators/asm/ASMFieldInfo.java' sourcefile='ASMFieldInfo.java'><Message>At ASMFieldInfo.java:[lines 48-109]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMFieldInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' signature='()Z' name='isFinal' primary='true'><SourceLine endBytecode='68' classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' start='78' end='78' sourcepath='org/openjdk/jmh/generators/asm/ASMFieldInfo.java' sourcefile='ASMFieldInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMFieldInfo.isFinal()</Message></Method><String value='0x10 (16)'><Message>Value 0x10 (16)</Message></String><SourceLine endBytecode='7' classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' start='78' end='78' sourcepath='org/openjdk/jmh/generators/asm/ASMFieldInfo.java' sourcefile='ASMFieldInfo.java' startBytecode='7' primary='true'><Message>At ASMFieldInfo.java:[line 78]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='83015595785e9d100de9cd45ed754153' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMFieldInfo.isPublic()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' start='48' end='109' sourcepath='org/openjdk/jmh/generators/asm/ASMFieldInfo.java' sourcefile='ASMFieldInfo.java'><Message>At ASMFieldInfo.java:[lines 48-109]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMFieldInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' signature='()Z' name='isPublic' primary='true'><SourceLine endBytecode='67' classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' start='68' end='68' sourcepath='org/openjdk/jmh/generators/asm/ASMFieldInfo.java' sourcefile='ASMFieldInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMFieldInfo.isPublic()</Message></Method><String value='0x1 (1)'><Message>Value 0x1 (1)</Message></String><SourceLine endBytecode='6' classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' start='68' end='68' sourcepath='org/openjdk/jmh/generators/asm/ASMFieldInfo.java' sourcefile='ASMFieldInfo.java' startBytecode='6' primary='true'><Message>At ASMFieldInfo.java:[line 68]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f73b9bfa65b73391596a2562b1850d7b' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMFieldInfo.isStatic()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' start='48' end='109' sourcepath='org/openjdk/jmh/generators/asm/ASMFieldInfo.java' sourcefile='ASMFieldInfo.java'><Message>At ASMFieldInfo.java:[lines 48-109]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMFieldInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' signature='()Z' name='isStatic' primary='true'><SourceLine endBytecode='68' classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' start='73' end='73' sourcepath='org/openjdk/jmh/generators/asm/ASMFieldInfo.java' sourcefile='ASMFieldInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMFieldInfo.isStatic()</Message></Method><String value='0x8 (8)'><Message>Value 0x8 (8)</Message></String><SourceLine endBytecode='7' classname='org.openjdk.jmh.generators.asm.ASMFieldInfo' start='73' end='73' sourcepath='org/openjdk/jmh/generators/asm/ASMFieldInfo.java' sourcefile='ASMFieldInfo.java' startBytecode='7' primary='true'><Message>At ASMFieldInfo.java:[line 73]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='807070d4416951c7f03897799159d0eb' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMMethodInfo.isAbstract()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='42' end='146' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java'><Message>At ASMMethodInfo.java:[lines 42-146]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMMethodInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' signature='()Z' name='isAbstract' primary='true'><SourceLine endBytecode='69' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='121' end='121' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMMethodInfo.isAbstract()</Message></Method><String value='0x400 (1024)'><Message>Value 0x400 (1024)</Message></String><SourceLine endBytecode='8' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='121' end='121' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java' startBytecode='8' primary='true'><Message>At ASMMethodInfo.java:[line 121]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d0f7b1b8a6e5b72fa7d9ad7cb714bf76' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMMethodInfo.isPublic()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='42' end='146' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java'><Message>At ASMMethodInfo.java:[lines 42-146]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMMethodInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' signature='()Z' name='isPublic' primary='true'><SourceLine endBytecode='67' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='116' end='116' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMMethodInfo.isPublic()</Message></Method><String value='0x1 (1)'><Message>Value 0x1 (1)</Message></String><SourceLine endBytecode='6' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='116' end='116' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java' startBytecode='6' primary='true'><Message>At ASMMethodInfo.java:[line 116]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='46646b9edebc6e4edc16d73aabd7b68b' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMMethodInfo.isStatic()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='42' end='146' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java'><Message>At ASMMethodInfo.java:[lines 42-146]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMMethodInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' signature='()Z' name='isStatic' primary='true'><SourceLine endBytecode='68' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='136' end='136' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMMethodInfo.isStatic()</Message></Method><String value='0x8 (8)'><Message>Value 0x8 (8)</Message></String><SourceLine endBytecode='7' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='136' end='136' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java' startBytecode='7' primary='true'><Message>At ASMMethodInfo.java:[line 136]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='60fea2cc678a637f8b5f034b9d02adf0' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMMethodInfo.isStrictFP()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='42' end='146' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java'><Message>At ASMMethodInfo.java:[lines 42-146]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMMethodInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' signature='()Z' name='isStrictFP' primary='true'><SourceLine endBytecode='69' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='131' end='131' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMMethodInfo.isStrictFP()</Message></Method><String value='0x800 (2048)'><Message>Value 0x800 (2048)</Message></String><SourceLine endBytecode='8' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='131' end='131' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java' startBytecode='8' primary='true'><Message>At ASMMethodInfo.java:[line 131]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='792726cf98e564366de5344cd6d25c31' rank='19' abbrev='BIT' category='BAD_PRACTICE' priority='3' type='BIT_SIGNED_CHECK' instanceOccurrenceMax='0'><ShortMessage>Check for sign of bitwise operation</ShortMessage><LongMessage>Check for sign of bitwise operation in org.openjdk.jmh.generators.asm.ASMMethodInfo.isSynchronized()</LongMessage><Class classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' primary='true'><SourceLine classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='42' end='146' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java'><Message>At ASMMethodInfo.java:[lines 42-146]</Message></SourceLine><Message>In class org.openjdk.jmh.generators.asm.ASMMethodInfo</Message></Class><Method isStatic='false' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' signature='()Z' name='isSynchronized' primary='true'><SourceLine endBytecode='68' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='126' end='126' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java' startBytecode='0'></SourceLine><Message>In method org.openjdk.jmh.generators.asm.ASMMethodInfo.isSynchronized()</Message></Method><String value='0x20 (32)'><Message>Value 0x20 (32)</Message></String><SourceLine endBytecode='7' classname='org.openjdk.jmh.generators.asm.ASMMethodInfo' start='126' end='126' sourcepath='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' sourcefile='ASMMethodInfo.java' startBytecode='7' primary='true'><Message>At ASMMethodInfo.java:[line 126]</Message></SourceLine></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugPattern abbrev='BIT' category='BAD_PRACTICE' type='BIT_SIGNED_CHECK'><ShortDescription>Check for sign of bitwise operation</ShortDescription><Details>

&lt;p&gt; This method compares an expression such as
&lt;code&gt;((event.detail &amp;amp; SWT.SELECTED) &amp;gt; 0)&lt;/code&gt;.
Using bit arithmetic and then comparing with the greater than operator can
lead to unexpected results (of course depending on the value of
SWT.SELECTED). If SWT.SELECTED is a negative number, this is a candidate
for a bug. Even when SWT.SELECTED is not negative, it seems good practice
to use '!= 0' instead of '&amp;gt; 0'.
&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='IIO' category='PERFORMANCE' type='IIO_INEFFICIENT_LAST_INDEX_OF'><ShortDescription>Inefficient use of String.lastIndexOf(String)</ShortDescription><Details>

&lt;p&gt; This code passes a constant string of length 1 to String.lastIndexOf().
It is more efficient to use the integer implementations of String.lastIndexOf().
f. e. call &lt;code&gt;myString.lastIndexOf('.')&lt;/code&gt; instead of &lt;code&gt;myString.lastIndexOf(".")&lt;/code&gt;&lt;/p&gt;

    </Details></BugPattern><BugCode abbrev='BIT'><Description>Suspicious bitwise logical expression</Description></BugCode><BugCode abbrev='IIO'><Description>Inefficient use of String.indexOf(String) or String.lastIndexOf(String)</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='1' total_classes='8' priority_2='1' priority_3='14' total_size='399' clock_seconds='1.01' referenced_classes='73' vm_version='11.0.11+9-Ubuntu-0ubuntu2.20.10' total_bugs='15' java_version='11.0.11' gc_seconds='0.01' alloc_mbytes='512.00' cpu_seconds='4.66' peak_mbytes='175.92' timestamp='Sun, 16 Jan 2022 11:53:42 +0800'><FileStats path='org/openjdk/jmh/generators/asm/ASMClassInfo.java' size='108' bugHash='ad5ff438a4e21616e218bd883b57ca33' bugCount='7'></FileStats><FileStats path='org/openjdk/jmh/generators/asm/ASMFieldInfo.java' size='39' bugHash='478d8047aa15b9ce72fed2dee1282282' bugCount='3'></FileStats><FileStats path='org/openjdk/jmh/generators/asm/ASMGeneratorSource.java' size='26' bugCount='0'></FileStats><FileStats path='org/openjdk/jmh/generators/asm/ASMMethodInfo.java' size='59' bugHash='e86c3beb2b35828459b6d6bfbf1f409f' bugCount='5'></FileStats><FileStats path='org/openjdk/jmh/generators/asm/ASMParameterInfo.java' size='8' bugCount='0'></FileStats><FileStats path='org/openjdk/jmh/generators/asm/AnnotationInvocationHandler.java' size='122' bugCount='0'></FileStats><FileStats path='org/openjdk/jmh/generators/asm/ClassInfoRepo.java' size='37' bugCount='0'></FileStats><PackageStats package='org.openjdk.jmh.generators.asm' total_bugs='15' priority_2='1' priority_3='14' total_size='399' total_types='8'><ClassStats bugs='7' size='108' priority_2='1' priority_3='6' interface='false' sourceFile='ASMClassInfo.java' class='org.openjdk.jmh.generators.asm.ASMClassInfo'></ClassStats><ClassStats bugs='3' size='39' priority_3='3' interface='false' sourceFile='ASMFieldInfo.java' class='org.openjdk.jmh.generators.asm.ASMFieldInfo'></ClassStats><ClassStats bugs='0' size='26' interface='false' sourceFile='ASMGeneratorSource.java' class='org.openjdk.jmh.generators.asm.ASMGeneratorSource'></ClassStats><ClassStats bugs='5' size='59' priority_3='5' interface='false' sourceFile='ASMMethodInfo.java' class='org.openjdk.jmh.generators.asm.ASMMethodInfo'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='ASMParameterInfo.java' class='org.openjdk.jmh.generators.asm.ASMParameterInfo'></ClassStats><ClassStats bugs='0' size='109' interface='false' sourceFile='AnnotationInvocationHandler.java' class='org.openjdk.jmh.generators.asm.AnnotationInvocationHandler'></ClassStats><ClassStats bugs='0' size='13' interface='false' sourceFile='AnnotationInvocationHandler.java' class='org.openjdk.jmh.generators.asm.AnnotationInvocationHandler$1'></ClassStats><ClassStats bugs='0' size='37' interface='false' sourceFile='ClassInfoRepo.java' class='org.openjdk.jmh.generators.asm.ClassInfoRepo'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='396' totalMilliseconds='203' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='9190' standardDeviationMicrosecondsPerInvocation='839' invocations='514'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='832' totalMilliseconds='60' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='9800' standardDeviationMicrosecondsPerInvocation='1686' invocations='73'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='212' totalMilliseconds='55' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='10806' standardDeviationMicrosecondsPerInvocation='701' invocations='263'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='557' totalMilliseconds='40' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='7027' standardDeviationMicrosecondsPerInvocation='1026' invocations='73'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='446' totalMilliseconds='35' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='5685' standardDeviationMicrosecondsPerInvocation='1018' invocations='80'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='63' totalMilliseconds='33' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='1857' standardDeviationMicrosecondsPerInvocation='94' invocations='520'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='404' totalMilliseconds='32' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='5506' standardDeviationMicrosecondsPerInvocation='984' invocations='80'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='319' totalMilliseconds='24' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='17891' standardDeviationMicrosecondsPerInvocation='2007' invocations='78'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='216' totalMilliseconds='23' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='10770' standardDeviationMicrosecondsPerInvocation='1056' invocations='107'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='287' totalMilliseconds='22' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='5237' standardDeviationMicrosecondsPerInvocation='820' invocations='78'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2003' totalMilliseconds='22' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='10548' standardDeviationMicrosecondsPerInvocation='2806' invocations='11'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='41' totalMilliseconds='20' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='551' standardDeviationMicrosecondsPerInvocation='71' invocations='481'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>