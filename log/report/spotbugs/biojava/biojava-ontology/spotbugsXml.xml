<?xml version="1.0" encoding="utf-8"?>
<BugCollection sequence='0' release='' analysisTimestamp='1642310435224' version='4.1.4' timestamp='1642303318931'><Project projectName='biojava-ontology'><Jar>/home/codegex/Documents/workspace/rbugs/experiment/top100repos/biojava/biojava-ontology/target/classes</Jar><AuxClasspathEntry>/home/codegex/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar</AuxClasspathEntry><SrcDir>/home/codegex/Documents/workspace/rbugs/experiment/top100repos/biojava/biojava-ontology/src/main/java</SrcDir><WrkDir>/home/codegex/Documents/workspace/rbugs/experiment/top100repos/biojava/biojava-ontology/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='704216b9067cdabddc63be3153af078d' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.biojava.nbio.ontology.IntegerOntology.resolveInt(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead</LongMessage><Class classname='org.biojava.nbio.ontology.IntegerOntology' primary='true'><SourceLine classname='org.biojava.nbio.ontology.IntegerOntology' start='40' end='270' sourcepath='org/biojava/nbio/ontology/IntegerOntology.java' sourcefile='IntegerOntology.java'><Message>At IntegerOntology.java:[lines 40-270]</Message></SourceLine><Message>In class org.biojava.nbio.ontology.IntegerOntology</Message></Class><Method isStatic='false' classname='org.biojava.nbio.ontology.IntegerOntology' signature='(I)Lorg/biojava/nbio/ontology/IntegerOntology$IntTerm;' name='resolveInt' primary='true'><SourceLine endBytecode='159' classname='org.biojava.nbio.ontology.IntegerOntology' start='193' end='201' sourcepath='org/biojava/nbio/ontology/IntegerOntology.java' sourcefile='IntegerOntology.java' startBytecode='0'></SourceLine><Message>In method org.biojava.nbio.ontology.IntegerOntology.resolveInt(int)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Integer' signature='(I)V' name='&lt;init&gt;'><SourceLine endBytecode='69' classname='java.lang.Integer' start='1082' end='1084' sourcepath='java/lang/Integer.java' sourcefile='Integer.java' startBytecode='0'></SourceLine><Message>Called method new Integer(int)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Integer' signature='(I)Ljava/lang/Integer;' name='valueOf'><SourceLine endBytecode='90' classname='java.lang.Integer' start='1057' end='1059' sourcepath='java/lang/Integer.java' sourcefile='Integer.java' startBytecode='0'></SourceLine><Message>Should call Integer.valueOf(int) instead</Message></Method><SourceLine endBytecode='5' classname='org.biojava.nbio.ontology.IntegerOntology' start='193' end='193' sourcepath='org/biojava/nbio/ontology/IntegerOntology.java' sourcefile='IntegerOntology.java' startBytecode='5' primary='true'><Message>At IntegerOntology.java:[line 193]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d4a50e718a9d5f076c3bb8260906c2b1' cweid='597' rank='11' abbrev='ES' category='BAD_PRACTICE' priority='2' type='ES_COMPARING_STRINGS_WITH_EQ' instanceOccurrenceMax='0'><ShortMessage>Comparison of String objects using == or !=</ShortMessage><LongMessage>Comparison of String objects using == or != in org.biojava.nbio.ontology.Term$Impl.equals(Object)</LongMessage><Class classname='org.biojava.nbio.ontology.Term$Impl' primary='true'><SourceLine classname='org.biojava.nbio.ontology.Term$Impl' start='135' end='230' sourcepath='org/biojava/nbio/ontology/Term.java' sourcefile='Term.java'><Message>At Term.java:[lines 135-230]</Message></SourceLine><Message>In class org.biojava.nbio.ontology.Term$Impl</Message></Class><Method isStatic='false' classname='org.biojava.nbio.ontology.Term$Impl' signature='(Ljava/lang/Object;)Z' name='equals' primary='true'><SourceLine endBytecode='26' classname='org.biojava.nbio.ontology.Term$Impl' start='224' end='229' sourcepath='org/biojava/nbio/ontology/Term.java' sourcefile='Term.java' startBytecode='0'></SourceLine><Message>In method org.biojava.nbio.ontology.Term$Impl.equals(Object)</Message></Method><Type role='TYPE_FOUND' descriptor='Ljava/lang/String;'><SourceLine classname='java.lang.String' start='125' end='3345' sourcepath='java/lang/String.java' sourcefile='String.java'><Message>At String.java:[lines 125-3345]</Message></SourceLine><Message>Actual type String</Message></Type><Method isStatic='false' role='METHOD_RETURN_VALUE_OF' classname='org.biojava.nbio.ontology.Term' signature='()Ljava/lang/String;' name='getName'><SourceLine classname='org.biojava.nbio.ontology.Term' sourcepath='org/biojava/nbio/ontology/Term.java' sourcefile='Term.java'></SourceLine><Message>Return value of org.biojava.nbio.ontology.Term.getName() of type String</Message></Method><Method isStatic='false' role='METHOD_RETURN_VALUE_OF' classname='org.biojava.nbio.ontology.Term$Impl' signature='()Ljava/lang/String;' name='getName'><SourceLine endBytecode='46' classname='org.biojava.nbio.ontology.Term$Impl' start='179' end='179' sourcepath='org/biojava/nbio/ontology/Term.java' sourcefile='Term.java' startBytecode='0'></SourceLine><Message>Return value of org.biojava.nbio.ontology.Term$Impl.getName() of type String</Message></Method><SourceLine endBytecode='44' classname='org.biojava.nbio.ontology.Term$Impl' start='230' end='230' sourcepath='org/biojava/nbio/ontology/Term.java' sourcefile='Term.java' startBytecode='44' primary='true'><Message>At Term.java:[line 230]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c644a43448aacc1c249806678da52e96' rank='20' abbrev='IIO' category='PERFORMANCE' priority='3' type='IIO_INEFFICIENT_INDEX_OF' instanceOccurrenceMax='0'><ShortMessage>Inefficient use of String.indexOf(String)</ShortMessage><LongMessage>org.biojava.nbio.ontology.io.TabDelimParser.resolveTerm(String, Ontology) uses String.indexOf(String) instead of String.indexOf(int)</LongMessage><Class classname='org.biojava.nbio.ontology.io.TabDelimParser' primary='true'><SourceLine classname='org.biojava.nbio.ontology.io.TabDelimParser' start='79' end='190' sourcepath='org/biojava/nbio/ontology/io/TabDelimParser.java' sourcefile='TabDelimParser.java'><Message>At TabDelimParser.java:[lines 79-190]</Message></SourceLine><Message>In class org.biojava.nbio.ontology.io.TabDelimParser</Message></Class><Method isStatic='false' role='STRING_MESSAGE' classname='org.biojava.nbio.ontology.io.TabDelimParser' signature='(Ljava/lang/String;Lorg/biojava/nbio/ontology/Ontology;)Lorg/biojava/nbio/ontology/Term;' name='resolveTerm' primary='true'><SourceLine endBytecode='428' classname='org.biojava.nbio.ontology.io.TabDelimParser' start='155' end='178' sourcepath='org/biojava/nbio/ontology/io/TabDelimParser.java' sourcefile='TabDelimParser.java' startBytecode='0'></SourceLine><Message>org.biojava.nbio.ontology.io.TabDelimParser.resolveTerm(String, Ontology)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;)I' name='indexOf'><SourceLine endBytecode='153' classname='java.lang.String' start='1663' end='1670' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.indexOf(String)</Message></Method><SourceLine endBytecode='49' classname='org.biojava.nbio.ontology.io.TabDelimParser' start='162' end='162' sourcepath='org/biojava/nbio/ontology/io/TabDelimParser.java' sourcefile='TabDelimParser.java' startBytecode='49' primary='true'><Message>At TabDelimParser.java:[line 162]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ce2e685b8cf34cbe3bf24ec5755f8ab3' rank='20' abbrev='IIO' category='PERFORMANCE' priority='3' type='IIO_INEFFICIENT_INDEX_OF' instanceOccurrenceMax='0'><ShortMessage>Inefficient use of String.indexOf(String)</ShortMessage><LongMessage>org.biojava.nbio.ontology.io.TabDelimParser.resolveTerm(String, Ontology) uses String.indexOf(String) instead of String.indexOf(int)</LongMessage><Class classname='org.biojava.nbio.ontology.io.TabDelimParser' primary='true'><SourceLine classname='org.biojava.nbio.ontology.io.TabDelimParser' start='79' end='190' sourcepath='org/biojava/nbio/ontology/io/TabDelimParser.java' sourcefile='TabDelimParser.java'><Message>At TabDelimParser.java:[lines 79-190]</Message></SourceLine><Message>In class org.biojava.nbio.ontology.io.TabDelimParser</Message></Class><Method isStatic='false' role='STRING_MESSAGE' classname='org.biojava.nbio.ontology.io.TabDelimParser' signature='(Ljava/lang/String;Lorg/biojava/nbio/ontology/Ontology;)Lorg/biojava/nbio/ontology/Term;' name='resolveTerm' primary='true'><SourceLine endBytecode='428' classname='org.biojava.nbio.ontology.io.TabDelimParser' start='155' end='178' sourcepath='org/biojava/nbio/ontology/io/TabDelimParser.java' sourcefile='TabDelimParser.java' startBytecode='0'></SourceLine><Message>org.biojava.nbio.ontology.io.TabDelimParser.resolveTerm(String, Ontology)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.String' signature='(Ljava/lang/String;I)I' name='indexOf'><SourceLine endBytecode='79' classname='java.lang.String' start='1691' end='1691' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Called method String.indexOf(String, int)</Message></Method><SourceLine endBytecode='61' classname='org.biojava.nbio.ontology.io.TabDelimParser' start='163' end='163' sourcepath='org/biojava/nbio/ontology/io/TabDelimParser.java' sourcefile='TabDelimParser.java' startBytecode='61' primary='true'><Message>At TabDelimParser.java:[line 163]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f53b57a8f965c0c15d8d60dae43cdbdf' rank='18' abbrev='Dm' category='PERFORMANCE' priority='2' type='DM_BOOLEAN_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead</ShortMessage><LongMessage>org.biojava.nbio.ontology.obo.OboFileHandler.newKey(String, String) invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead</LongMessage><Class classname='org.biojava.nbio.ontology.obo.OboFileHandler' primary='true'><SourceLine classname='org.biojava.nbio.ontology.obo.OboFileHandler' start='44' end='201' sourcepath='org/biojava/nbio/ontology/obo/OboFileHandler.java' sourcefile='OboFileHandler.java'><Message>At OboFileHandler.java:[lines 44-201]</Message></SourceLine><Message>In class org.biojava.nbio.ontology.obo.OboFileHandler</Message></Class><Method isStatic='false' classname='org.biojava.nbio.ontology.obo.OboFileHandler' signature='(Ljava/lang/String;Ljava/lang/String;)V' name='newKey' primary='true'><SourceLine endBytecode='1010' classname='org.biojava.nbio.ontology.obo.OboFileHandler' start='116' end='194' sourcepath='org/biojava/nbio/ontology/obo/OboFileHandler.java' sourcefile='OboFileHandler.java' startBytecode='0'></SourceLine><Message>In method org.biojava.nbio.ontology.obo.OboFileHandler.newKey(String, String)</Message></Method><SourceLine endBytecode='266' classname='org.biojava.nbio.ontology.obo.OboFileHandler' start='158' end='158' sourcepath='org/biojava/nbio/ontology/obo/OboFileHandler.java' sourcefile='OboFileHandler.java' startBytecode='266' primary='true'><Message>At OboFileHandler.java:[line 158]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='84802aa4747503a0ee5dda536190e506' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.biojava.nbio.ontology.obo.OboFileParser.&lt;static initializer for OboFileParser&gt;() invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead</LongMessage><Class classname='org.biojava.nbio.ontology.obo.OboFileParser' primary='true'><SourceLine classname='org.biojava.nbio.ontology.obo.OboFileParser' start='51' end='600' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java'><Message>At OboFileParser.java:[lines 51-600]</Message></SourceLine><Message>In class org.biojava.nbio.ontology.obo.OboFileParser</Message></Class><Method isStatic='true' classname='org.biojava.nbio.ontology.obo.OboFileParser' signature='()V' name='&lt;clinit&gt;' primary='true'><SourceLine endBytecode='686' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='51' end='91' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='0'></SourceLine><Message>In method org.biojava.nbio.ontology.obo.OboFileParser.&lt;static initializer for OboFileParser&gt;()</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Character' signature='(C)V' name='&lt;init&gt;'><SourceLine endBytecode='69' classname='java.lang.Character' start='7913' end='7915' sourcepath='java/lang/Character.java' sourcefile='Character.java' startBytecode='0'></SourceLine><Message>Called method new Character(char)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Character' signature='(C)Ljava/lang/Character;' name='valueOf'><SourceLine endBytecode='79' classname='java.lang.Character' start='7947' end='7950' sourcepath='java/lang/Character.java' sourcefile='Character.java' startBytecode='0'></SourceLine><Message>Should call Character.valueOf(char) instead</Message></Method><SourceLine endBytecode='37' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='70' end='70' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='37' primary='true'><Message>At OboFileParser.java:[line 70]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='64' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='71' end='71' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='64'><Message>Another occurrence at OboFileParser.java:[line 71]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='91' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='72' end='72' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='91'><Message>Another occurrence at OboFileParser.java:[line 72]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='118' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='73' end='73' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='118'><Message>Another occurrence at OboFileParser.java:[line 73]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='145' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='74' end='74' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='145'><Message>Another occurrence at OboFileParser.java:[line 74]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='172' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='75' end='75' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='172'><Message>Another occurrence at OboFileParser.java:[line 75]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='199' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='76' end='76' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='199'><Message>Another occurrence at OboFileParser.java:[line 76]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='226' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='77' end='77' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='226'><Message>Another occurrence at OboFileParser.java:[line 77]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='253' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='78' end='78' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='253'><Message>Another occurrence at OboFileParser.java:[line 78]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='280' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='79' end='79' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='280'><Message>Another occurrence at OboFileParser.java:[line 79]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='307' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='80' end='80' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='307'><Message>Another occurrence at OboFileParser.java:[line 80]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='334' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='81' end='81' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='334'><Message>Another occurrence at OboFileParser.java:[line 81]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='361' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='82' end='82' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='361'><Message>Another occurrence at OboFileParser.java:[line 82]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='388' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='83' end='83' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='388'><Message>Another occurrence at OboFileParser.java:[line 83]</Message></SourceLine><SourceLine role='SOURCE_LINE_ANOTHER_INSTANCE' endBytecode='415' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='84' end='84' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='415'><Message>Another occurrence at OboFileParser.java:[line 84]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b2636f25aa291e75025c3b89ea558f5e' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.biojava.nbio.ontology.obo.OboFileParser.escape(String, boolean) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead</LongMessage><Class classname='org.biojava.nbio.ontology.obo.OboFileParser' primary='true'><SourceLine classname='org.biojava.nbio.ontology.obo.OboFileParser' start='51' end='600' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java'><Message>At OboFileParser.java:[lines 51-600]</Message></SourceLine><Message>In class org.biojava.nbio.ontology.obo.OboFileParser</Message></Class><Method isStatic='true' classname='org.biojava.nbio.ontology.obo.OboFileParser' signature='(Ljava/lang/String;Z)Ljava/lang/String;' name='escape' primary='true'><SourceLine endBytecode='275' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='417' end='430' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='0'></SourceLine><Message>In method org.biojava.nbio.ontology.obo.OboFileParser.escape(String, boolean)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Character' signature='(C)V' name='&lt;init&gt;'><SourceLine endBytecode='69' classname='java.lang.Character' start='7913' end='7915' sourcepath='java/lang/Character.java' sourcefile='Character.java' startBytecode='0'></SourceLine><Message>Called method new Character(char)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Character' signature='(C)Ljava/lang/Character;' name='valueOf'><SourceLine endBytecode='79' classname='java.lang.Character' start='7947' end='7950' sourcepath='java/lang/Character.java' sourcefile='Character.java' startBytecode='0'></SourceLine><Message>Should call Character.valueOf(char) instead</Message></Method><SourceLine endBytecode='34' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='420' end='420' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='34' primary='true'><Message>At OboFileParser.java:[line 420]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3ab4c048d5ffbd074be2681addfd1853' rank='18' abbrev='Bx' category='PERFORMANCE' priority='2' type='DM_NUMBER_CTOR' instanceOccurrenceMax='0'><ShortMessage>Method invokes inefficient Number constructor; use static valueOf instead</ShortMessage><LongMessage>org.biojava.nbio.ontology.obo.OboFileParser.unescape(String, char, int, int, boolean) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead</LongMessage><Class classname='org.biojava.nbio.ontology.obo.OboFileParser' primary='true'><SourceLine classname='org.biojava.nbio.ontology.obo.OboFileParser' start='51' end='600' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java'><Message>At OboFileParser.java:[lines 51-600]</Message></SourceLine><Message>In class org.biojava.nbio.ontology.obo.OboFileParser</Message></Class><Method isStatic='false' classname='org.biojava.nbio.ontology.obo.OboFileParser' signature='(Ljava/lang/String;CIIZ)Lorg/biojava/nbio/ontology/obo/OboFileParser$SOPair;' name='unescape' primary='true'><SourceLine endBytecode='459' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='444' end='467' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='0'></SourceLine><Message>In method org.biojava.nbio.ontology.obo.OboFileParser.unescape(String, char, int, int, boolean)</Message></Method><Method isStatic='false' role='METHOD_CALLED' classname='java.lang.Character' signature='(C)V' name='&lt;init&gt;'><SourceLine endBytecode='69' classname='java.lang.Character' start='7913' end='7915' sourcepath='java/lang/Character.java' sourcefile='Character.java' startBytecode='0'></SourceLine><Message>Called method new Character(char)</Message></Method><Method isStatic='true' role='SHOULD_CALL' classname='java.lang.Character' signature='(C)Ljava/lang/Character;' name='valueOf'><SourceLine endBytecode='79' classname='java.lang.Character' start='7947' end='7950' sourcepath='java/lang/Character.java' sourcefile='Character.java' startBytecode='0'></SourceLine><Message>Should call Character.valueOf(char) instead</Message></Method><SourceLine endBytecode='57' classname='org.biojava.nbio.ontology.obo.OboFileParser' start='451' end='451' sourcepath='org/biojava/nbio/ontology/obo/OboFileParser.java' sourcefile='OboFileParser.java' startBytecode='57' primary='true'><Message>At OboFileParser.java:[line 451]</Message></SourceLine></BugInstance><BugCategory category='BAD_PRACTICE'><Description>Bad practice</Description></BugCategory><BugCategory category='PERFORMANCE'><Description>Performance</Description></BugCategory><BugPattern abbrev='Dm' category='PERFORMANCE' type='DM_BOOLEAN_CTOR'><ShortDescription>Method invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead</ShortDescription><Details>

  &lt;p&gt; Creating new instances of &lt;code&gt;java.lang.Boolean&lt;/code&gt; wastes
  memory, since &lt;code&gt;Boolean&lt;/code&gt; objects are immutable and there are
  only two useful values of this type.&amp;nbsp; Use the &lt;code&gt;Boolean.valueOf()&lt;/code&gt;
  method (or Java 1.5 autoboxing) to create &lt;code&gt;Boolean&lt;/code&gt; objects instead.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='Bx' category='PERFORMANCE' type='DM_NUMBER_CTOR'><ShortDescription>Method invokes inefficient Number constructor; use static valueOf instead</ShortDescription><Details>
      
      &lt;p&gt;
      Using &lt;code&gt;new Integer(int)&lt;/code&gt; is guaranteed to always result in a new object whereas
      &lt;code&gt;Integer.valueOf(int)&lt;/code&gt; allows caching of values to be done by the compiler, class library, or JVM.
      Using of cached values avoids object allocation and the code will be faster.
      &lt;/p&gt;
      &lt;p&gt;
      Values between -128 and 127 are guaranteed to have corresponding cached instances
      and using &lt;code&gt;valueOf&lt;/code&gt; is approximately 3.5 times faster than using constructor.
      For values outside the constant range the performance of both styles is the same.
      &lt;/p&gt;
      &lt;p&gt;
      Unless the class must be compatible with JVMs predating Java 1.5,
      use either autoboxing or the &lt;code&gt;valueOf()&lt;/code&gt; method when creating instances of
      &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Short&lt;/code&gt;, &lt;code&gt;Character&lt;/code&gt;, and &lt;code&gt;Byte&lt;/code&gt;.
      &lt;/p&gt;
      
    </Details></BugPattern><BugPattern abbrev='ES' category='BAD_PRACTICE' type='ES_COMPARING_STRINGS_WITH_EQ'><ShortDescription>Comparison of String objects using == or !=</ShortDescription><Details>

  &lt;p&gt;This code compares &lt;code&gt;java.lang.String&lt;/code&gt; objects for reference
equality using the == or != operators.
Unless both strings are either constants in a source file, or have been
interned using the &lt;code&gt;String.intern()&lt;/code&gt; method, the same string
value may be represented by two different String objects. Consider
using the &lt;code&gt;equals(Object)&lt;/code&gt; method instead.&lt;/p&gt;

    </Details></BugPattern><BugPattern abbrev='IIO' category='PERFORMANCE' type='IIO_INEFFICIENT_INDEX_OF'><ShortDescription>Inefficient use of String.indexOf(String)</ShortDescription><Details>

&lt;p&gt; This code passes a constant string of length 1 to String.indexOf().
It is more efficient to use the integer implementations of String.indexOf().
f. e. call &lt;code&gt;myString.indexOf('.')&lt;/code&gt; instead of &lt;code&gt;myString.indexOf(".")&lt;/code&gt;&lt;/p&gt;

    </Details></BugPattern><BugCode abbrev='Bx'><Description>Questionable Boxing of primitive value</Description></BugCode><BugCode abbrev='Dm'><Description>Dubious method used</Description></BugCode><BugCode cweid='597' abbrev='ES'><Description>Checking String equality using == or !=</Description></BugCode><BugCode abbrev='IIO'><Description>Inefficient use of String.indexOf(String) or String.lastIndexOf(String)</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='5' total_classes='59' priority_2='6' priority_3='2' total_size='1826' clock_seconds='1.52' referenced_classes='186' vm_version='11.0.11+9-Ubuntu-0ubuntu2.20.10' total_bugs='8' java_version='11.0.11' gc_seconds='0.02' alloc_mbytes='512.00' cpu_seconds='7.23' peak_mbytes='180.20' timestamp='Sun, 16 Jan 2022 11:21:58 +0800'><FileStats path='demo/ParseGO.java' size='23' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/AbstractTerm.java' size='7' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/AlreadyExistsException.java' size='8' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/App.java' size='9' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/DefaultOps.java' size='4' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/IntegerOntology.java' size='115' bugHash='e7bca1caf13fc0398f7eabb9568d9349' bugCount='1'></FileStats><FileStats path='org/biojava/nbio/ontology/InvalidTermException.java' size='14' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/OntoTools.java' size='50' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/Ontology.java' size='199' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/OntologyException.java' size='14' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/OntologyFactory.java' size='2' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/OntologyOps.java' size='2' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/OntologyTerm.java' size='44' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/RemoteTerm.java' size='45' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/Synonym.java' size='43' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/Term.java' size='69' bugHash='24e1677df87a7aa3f15a8d46295ebd0d' bugCount='1'></FileStats><FileStats path='org/biojava/nbio/ontology/Triple.java' size='90' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/Variable.java' size='9' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/io/GOParser.java' size='63' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/io/OboParser.java' size='15' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/io/TabDelimParser.java' size='55' bugHash='affbc917f20a328caf403f7e992edb7d' bugCount='2'></FileStats><FileStats path='org/biojava/nbio/ontology/obo/OboFileEventListener.java' size='7' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/obo/OboFileHandler.java' size='103' bugHash='f32609a1276c0a9076c38f0a5c51e173' bugCount='1'></FileStats><FileStats path='org/biojava/nbio/ontology/obo/OboFileParser.java' size='395' bugHash='45202ae0490e36a55f04800eda67d6c7' bugCount='3'></FileStats><FileStats path='org/biojava/nbio/ontology/utils/AbstractAnnotation.java' size='79' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/utils/Annotatable.java' size='2' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/utils/Annotation.java' size='10' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/utils/AssertionFailure.java' size='12' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/utils/EmptyAnnotation.java' size='25' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/utils/KeyedWeakReference.java' size='12' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/utils/SmallAnnotation.java' size='17' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/utils/SmallMap.java' size='150' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/utils/StaticMemberPlaceHolder.java' size='17' bugCount='0'></FileStats><FileStats path='org/biojava/nbio/ontology/utils/WeakValueHashMap.java' size='117' bugCount='0'></FileStats><PackageStats package='demo' total_bugs='0' total_size='23' total_types='1'><ClassStats bugs='0' size='23' interface='false' sourceFile='ParseGO.java' class='demo.ParseGO'></ClassStats></PackageStats><PackageStats package='org.biojava.nbio.ontology' total_bugs='2' priority_2='2' total_size='724' total_types='30'><ClassStats bugs='0' size='7' interface='false' sourceFile='AbstractTerm.java' class='org.biojava.nbio.ontology.AbstractTerm'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='AlreadyExistsException.java' class='org.biojava.nbio.ontology.AlreadyExistsException'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='App.java' class='org.biojava.nbio.ontology.App'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='DefaultOps.java' class='org.biojava.nbio.ontology.DefaultOps'></ClassStats><ClassStats bugs='1' size='52' priority_2='1' interface='false' sourceFile='IntegerOntology.java' class='org.biojava.nbio.ontology.IntegerOntology'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='IntegerOntology.java' class='org.biojava.nbio.ontology.IntegerOntology$1'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='IntegerOntology.java' class='org.biojava.nbio.ontology.IntegerOntology$1$1'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='IntegerOntology.java' class='org.biojava.nbio.ontology.IntegerOntology$2'></ClassStats><ClassStats bugs='0' size='33' interface='false' sourceFile='IntegerOntology.java' class='org.biojava.nbio.ontology.IntegerOntology$IntTerm'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='InvalidTermException.java' class='org.biojava.nbio.ontology.InvalidTermException'></ClassStats><ClassStats bugs='0' size='45' interface='false' sourceFile='OntoTools.java' class='org.biojava.nbio.ontology.OntoTools'></ClassStats><ClassStats bugs='0' size='5' interface='false' sourceFile='OntoTools.java' class='org.biojava.nbio.ontology.OntoTools$1'></ClassStats><ClassStats bugs='0' size='18' interface='true' sourceFile='Ontology.java' class='org.biojava.nbio.ontology.Ontology'></ClassStats><ClassStats bugs='0' size='174' interface='false' sourceFile='Ontology.java' class='org.biojava.nbio.ontology.Ontology$Impl'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='Ontology.java' class='org.biojava.nbio.ontology.Ontology$Impl$1'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='OntologyException.java' class='org.biojava.nbio.ontology.OntologyException'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='OntologyFactory.java' class='org.biojava.nbio.ontology.OntologyFactory'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='OntologyOps.java' class='org.biojava.nbio.ontology.OntologyOps'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='OntologyTerm.java' class='org.biojava.nbio.ontology.OntologyTerm'></ClassStats><ClassStats bugs='0' size='42' interface='false' sourceFile='OntologyTerm.java' class='org.biojava.nbio.ontology.OntologyTerm$Impl'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='RemoteTerm.java' class='org.biojava.nbio.ontology.RemoteTerm'></ClassStats><ClassStats bugs='0' size='43' interface='false' sourceFile='RemoteTerm.java' class='org.biojava.nbio.ontology.RemoteTerm$Impl'></ClassStats><ClassStats bugs='0' size='37' interface='false' sourceFile='Synonym.java' class='org.biojava.nbio.ontology.Synonym'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='Synonym.java' class='org.biojava.nbio.ontology.Synonym$1'></ClassStats><ClassStats bugs='0' size='8' interface='true' sourceFile='Term.java' class='org.biojava.nbio.ontology.Term'></ClassStats><ClassStats bugs='1' size='61' priority_2='1' interface='false' sourceFile='Term.java' class='org.biojava.nbio.ontology.Term$Impl'></ClassStats><ClassStats bugs='0' size='6' interface='true' sourceFile='Triple.java' class='org.biojava.nbio.ontology.Triple'></ClassStats><ClassStats bugs='0' size='84' interface='false' sourceFile='Triple.java' class='org.biojava.nbio.ontology.Triple$Impl'></ClassStats><ClassStats bugs='0' size='1' interface='true' sourceFile='Variable.java' class='org.biojava.nbio.ontology.Variable'></ClassStats><ClassStats bugs='0' size='8' interface='false' sourceFile='Variable.java' class='org.biojava.nbio.ontology.Variable$Impl'></ClassStats></PackageStats><PackageStats package='org.biojava.nbio.ontology.io' total_bugs='2' priority_3='2' total_size='133' total_types='3'><ClassStats bugs='0' size='63' interface='false' sourceFile='GOParser.java' class='org.biojava.nbio.ontology.io.GOParser'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='OboParser.java' class='org.biojava.nbio.ontology.io.OboParser'></ClassStats><ClassStats bugs='2' size='55' priority_3='2' interface='false' sourceFile='TabDelimParser.java' class='org.biojava.nbio.ontology.io.TabDelimParser'></ClassStats></PackageStats><PackageStats package='org.biojava.nbio.ontology.obo' total_bugs='4' priority_2='4' total_size='505' total_types='5'><ClassStats bugs='0' size='40' interface='false' sourceFile='OboFileParser.java' class='org.biojava.nbio.ontology.obo.NestedValue'></ClassStats><ClassStats bugs='0' size='7' interface='true' sourceFile='OboFileEventListener.java' class='org.biojava.nbio.ontology.obo.OboFileEventListener'></ClassStats><ClassStats bugs='1' size='103' priority_2='1' interface='false' sourceFile='OboFileHandler.java' class='org.biojava.nbio.ontology.obo.OboFileHandler'></ClassStats><ClassStats bugs='3' size='339' priority_2='3' interface='false' sourceFile='OboFileParser.java' class='org.biojava.nbio.ontology.obo.OboFileParser'></ClassStats><ClassStats bugs='0' size='16' interface='false' sourceFile='OboFileParser.java' class='org.biojava.nbio.ontology.obo.OboFileParser$SOPair'></ClassStats></PackageStats><PackageStats package='org.biojava.nbio.ontology.utils' total_bugs='0' total_size='441' total_types='20'><ClassStats bugs='0' size='79' interface='false' sourceFile='AbstractAnnotation.java' class='org.biojava.nbio.ontology.utils.AbstractAnnotation'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='Annotatable.java' class='org.biojava.nbio.ontology.utils.Annotatable'></ClassStats><ClassStats bugs='0' size='10' interface='true' sourceFile='Annotation.java' class='org.biojava.nbio.ontology.utils.Annotation'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='AssertionFailure.java' class='org.biojava.nbio.ontology.utils.AssertionFailure'></ClassStats><ClassStats bugs='0' size='25' interface='false' sourceFile='EmptyAnnotation.java' class='org.biojava.nbio.ontology.utils.EmptyAnnotation'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='KeyedWeakReference.java' class='org.biojava.nbio.ontology.utils.KeyedWeakReference'></ClassStats><ClassStats bugs='0' size='17' interface='false' sourceFile='SmallAnnotation.java' class='org.biojava.nbio.ontology.utils.SmallAnnotation'></ClassStats><ClassStats bugs='0' size='68' interface='false' sourceFile='SmallMap.java' class='org.biojava.nbio.ontology.utils.SmallMap'></ClassStats><ClassStats bugs='0' size='1' interface='false' sourceFile='SmallMap.java' class='org.biojava.nbio.ontology.utils.SmallMap$1'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='SmallMap.java' class='org.biojava.nbio.ontology.utils.SmallMap$EntryIterator'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='SmallMap.java' class='org.biojava.nbio.ontology.utils.SmallMap$EntrySet'></ClassStats><ClassStats bugs='0' size='19' interface='false' sourceFile='SmallMap.java' class='org.biojava.nbio.ontology.utils.SmallMap$KeyIterator'></ClassStats><ClassStats bugs='0' size='9' interface='false' sourceFile='SmallMap.java' class='org.biojava.nbio.ontology.utils.SmallMap$KeySet'></ClassStats><ClassStats bugs='0' size='25' interface='false' sourceFile='SmallMap.java' class='org.biojava.nbio.ontology.utils.SmallMap$MapEntry'></ClassStats><ClassStats bugs='0' size='17' interface='false' sourceFile='StaticMemberPlaceHolder.java' class='org.biojava.nbio.ontology.utils.StaticMemberPlaceHolder'></ClassStats><ClassStats bugs='0' size='44' interface='false' sourceFile='WeakValueHashMap.java' class='org.biojava.nbio.ontology.utils.WeakValueHashMap'></ClassStats><ClassStats bugs='0' size='1' interface='false' sourceFile='WeakValueHashMap.java' class='org.biojava.nbio.ontology.utils.WeakValueHashMap$1'></ClassStats><ClassStats bugs='0' size='34' interface='false' sourceFile='WeakValueHashMap.java' class='org.biojava.nbio.ontology.utils.WeakValueHashMap$WVEntryIterator'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='WeakValueHashMap.java' class='org.biojava.nbio.ontology.utils.WeakValueHashMap$WVEntrySet'></ClassStats><ClassStats bugs='0' size='24' interface='false' sourceFile='WeakValueHashMap.java' class='org.biojava.nbio.ontology.utils.WeakValueHashMap$WVMapEntry'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='344' totalMilliseconds='269' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='13029' standardDeviationMicrosecondsPerInvocation='818' invocations='784'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='537' totalMilliseconds='99' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='9757' standardDeviationMicrosecondsPerInvocation='1208' invocations='186'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='421' totalMilliseconds='78' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='6006' standardDeviationMicrosecondsPerInvocation='854' invocations='186'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='113' totalMilliseconds='77' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='1709' standardDeviationMicrosecondsPerInvocation='186' invocations='678'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='224' totalMilliseconds='72' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='6968' standardDeviationMicrosecondsPerInvocation='650' invocations='324'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='210' totalMilliseconds='68' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='7059' standardDeviationMicrosecondsPerInvocation='678' invocations='324'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='154' totalMilliseconds='49' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='4878' standardDeviationMicrosecondsPerInvocation='371' invocations='319'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='186' totalMilliseconds='46' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='3460' standardDeviationMicrosecondsPerInvocation='451' invocations='248'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1529' totalMilliseconds='45' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='9860' standardDeviationMicrosecondsPerInvocation='2145' invocations='30'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='52' totalMilliseconds='42' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='1746' standardDeviationMicrosecondsPerInvocation='83' invocations='796'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='93' totalMilliseconds='34' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='17579' standardDeviationMicrosecondsPerInvocation='917' invocations='367'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='124' totalMilliseconds='28' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='7474' standardDeviationMicrosecondsPerInvocation='522' invocations='230'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='32' totalMilliseconds='24' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='763' standardDeviationMicrosecondsPerInvocation='58' invocations='741'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='128' totalMilliseconds='23' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='2484' standardDeviationMicrosecondsPerInvocation='322' invocations='186'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='123' totalMilliseconds='22' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='5389' standardDeviationMicrosecondsPerInvocation='434' invocations='186'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>