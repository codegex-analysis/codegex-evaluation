{"repo": "jmh", "total": 7, "items": [{"type": "VA_FORMAT_STRING_USES_NEWLINE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jmh/jmh-core/src/main/java/org/openjdk/jmh/profile/ProfilerFactory.java", "commit_sha": "", "line_no": 134, "priority": 2, "description": "Format string should use %n rather than \\n", "line_content": "                supported.append(String.format(\"%\" + maxLen + \"s: %s %s\\n\", s, prof.getDescription(), \"\"));\n"}, {"type": "VA_FORMAT_STRING_USES_NEWLINE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jmh/jmh-core/src/main/java/org/openjdk/jmh/profile/ProfilerFactory.java", "commit_sha": "", "line_no": 136, "priority": 2, "description": "Format string should use %n rather than \\n", "line_content": "                unsupported.append(String.format(\"%\" + maxLen + \"s: %s %s\\n\", s, \"<none>\", \"\"));\n"}, {"type": "VA_FORMAT_STRING_USES_NEWLINE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jmh/jmh-core/src/main/java/org/openjdk/jmh/profile/ProfilerFactory.java", "commit_sha": "", "line_no": 145, "priority": 2, "description": "Format string should use %n rather than \\n", "line_content": "                supported.append(String.format(\"%\" + maxLen + \"s: %s %s\\n\", s.getCanonicalName(), prof.getDescription(), \"(discovered)\"));\n"}, {"type": "VA_FORMAT_STRING_USES_NEWLINE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jmh/jmh-core/src/main/java/org/openjdk/jmh/profile/ProfilerFactory.java", "commit_sha": "", "line_no": 147, "priority": 2, "description": "Format string should use %n rather than \\n", "line_content": "                unsupported.append(String.format(\"%\" + maxLen + \"s: %s %s\\n\", s, s.getCanonicalName(), \"\"));\n"}, {"type": "VA_FORMAT_STRING_USES_NEWLINE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jmh/jmh-core/src/main/java/org/openjdk/jmh/results/Result.java", "commit_sha": "", "line_no": 275, "priority": 2, "description": "Format string should use %n rather than \\n", "line_content": "            sb.append(String.format(\"    %11s = %s %s\\n\",\n                    \"p(\" + String.format(\"%.4f\", p * 100) + \")\",\n                    ScoreFormatter.format(10, stats.getPercentile(p * 100)),\n                    getScoreUnit()\n                    ));\n"}, {"type": "SA_SELF_COMPARISON", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jmh/jmh-core/src/main/java/org/openjdk/jmh/results/format/JSONResultFormat.java", "commit_sha": "", "line_no": 237, "priority": 2, "description": "Self comparison of value or field with itself", "line_content": "        if (d != d)\n            return \"\\\"NaN\\\"\";\n"}, {"type": "DM_INVALID_MIN_MAX", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jmh/jmh-core/src/main/java/org/openjdk/jmh/profile/LinuxPerfNormProfiler.java", "commit_sha": "", "line_no": 273, "priority": 1, "description": "Incorrect combination of Math.max and Math.min", "line_content": "                        multiplier = Math.max(1D, Math.min(0D, multiplier));\n"}]}