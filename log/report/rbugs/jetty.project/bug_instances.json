{"repo": "jetty.project", "total": 29, "items": [{"type": "EQ_COMPARING_CLASS_NAMES", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-webapp/src/main/java/org/eclipse/jetty/webapp/Configurations.java", "commit_sha": "", "line_no": 468, "priority": 2, "description": "Equals method compares class names rather than class objects", "line_content": "            if (c.getClass().getName().equals(configuration.getClass().getName()))\n                return; "}, {"type": "NM_SAME_SIMPLE_NAME_AS_INTERFACE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-jndi/src/main/java/org/eclipse/jetty/jndi/InitialContextFactory.java", "commit_sha": "", "line_no": 36, "priority": 2, "description": "Class or interface names shouldn\u2019t shadow simple name of implemented interface", "line_content": "public class InitialContextFactory implements javax.naming.spi.InitialContextFactory\n{\n"}, {"type": "NM_SAME_SIMPLE_NAME_AS_SUPERCLASS", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-webapp/src/main/java/org/eclipse/jetty/webapp/DecoratingListener.java", "commit_sha": "", "line_no": 23, "priority": 1, "description": "Class names shouldn\u2019t shadow simple name of superclass", "line_content": "public class DecoratingListener extends org.eclipse.jetty.servlet.DecoratingListener\n{\n"}, {"type": "RV_EXCEPTION_NOT_THROWN", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-ant/src/main/java/org/eclipse/jetty/ant/ServerProxyImpl.java", "commit_sha": "", "line_no": 286, "priority": 2, "description": "Exception created and dropped rather than thrown", "line_content": "            new RuntimeException(e);\n"}, {"type": "RV_EXCEPTION_NOT_THROWN", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-ant/src/main/java/org/eclipse/jetty/ant/ServerProxyImpl.java", "commit_sha": "", "line_no": 291, "priority": 2, "description": "Exception created and dropped rather than thrown", "line_content": "            new RuntimeException(e);\n"}, {"type": "NM_SAME_SIMPLE_NAME_AS_SUPERCLASS", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-client/src/main/java/org/eclipse/jetty/client/GZIPContentDecoder.java", "commit_sha": "", "line_no": 23, "priority": 1, "description": "Class names shouldn\u2019t shadow simple name of superclass", "line_content": "public class GZIPContentDecoder extends org.eclipse.jetty.http.GZIPContentDecoder implements ContentDecoder\n{\n"}, {"type": "RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-webapp/src/main/java/org/eclipse/jetty/webapp/ClassMatcher.java", "commit_sha": "", "line_no": 772, "priority": 2, "description": "Suspicious reference comparison of Boolean values", "line_content": "        if (Boolean.FALSE == byName)\n            return false;\n"}, {"type": "RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-webapp/src/main/java/org/eclipse/jetty/webapp/ClassMatcher.java", "commit_sha": "", "line_no": 780, "priority": 2, "description": "Suspicious reference comparison of Boolean values", "line_content": "        if (Boolean.FALSE == byLocation || (locations.hasExcludes() && uri == null))\n            return false;\n"}, {"type": "RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-webapp/src/main/java/org/eclipse/jetty/webapp/ClassMatcher.java", "commit_sha": "", "line_no": 785, "priority": 2, "description": "Suspicious reference comparison of Boolean values", "line_content": "        if (names.hasIncludes() || locations.hasIncludes())\n            return byName == Boolean.TRUE || byLocation == Boolean.TRUE;\n"}, {"type": "NM_SAME_SIMPLE_NAME_AS_SUPERCLASS", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-osgi/jetty-osgi-boot/src/main/java/org/eclipse/jetty/osgi/annotations/AnnotationParser.java", "commit_sha": "", "line_no": 36, "priority": 1, "description": "Class names shouldn\u2019t shadow simple name of superclass", "line_content": "public class AnnotationParser extends org.eclipse.jetty.annotations.AnnotationParser\n{\n"}, {"type": "NM_CLASS_NAMING_CONVENTION", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-jndi/src/main/java/org/eclipse/jetty/jndi/java/javaURLContextFactory.java", "commit_sha": "", "line_no": 34, "priority": 2, "description": "Nm: Class names should start with an upper case letter", "line_content": "public class javaURLContextFactory implements ObjectFactory\n{\n"}, {"type": "NM_SAME_SIMPLE_NAME_AS_SUPERCLASS", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-osgi/jetty-osgi-boot/src/main/java/org/eclipse/jetty/osgi/annotations/AnnotationConfiguration.java", "commit_sha": "", "line_no": 40, "priority": 1, "description": "Class names shouldn\u2019t shadow simple name of superclass", "line_content": "public class AnnotationConfiguration extends org.eclipse.jetty.annotations.AnnotationConfiguration\n{\n"}, {"type": "RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-http/src/main/java/org/eclipse/jetty/http/HttpGenerator.java", "commit_sha": "", "line_no": 649, "priority": 2, "description": "Suspicious reference comparison of Boolean values", "line_content": "                            if (keepAlive && _persistent == Boolean.FALSE)\n                            {\n"}, {"type": "RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-security/src/main/java/org/eclipse/jetty/security/authentication/LoginAuthenticator.java", "commit_sha": "", "line_no": 121, "priority": 2, "description": "Suspicious reference comparison of Boolean values", "line_content": "                if (httpSession.getAttribute(Session.SESSION_CREATED_SECURE) != Boolean.TRUE)\n                {\n"}, {"type": "RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-http/src/main/java/org/eclipse/jetty/http/HttpURI.java", "commit_sha": "", "line_no": 1262, "priority": 2, "description": "Suspicious reference comparison of Boolean values", "line_content": "                if (ambiguous == Boolean.TRUE)\n                    _ambiguous.add(Ambiguous.SEGMENT);\n"}, {"type": "RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-http/src/main/java/org/eclipse/jetty/http/HttpURI.java", "commit_sha": "", "line_no": 1264, "priority": 2, "description": "Suspicious reference comparison of Boolean values", "line_content": "                else if (param && ambiguous == Boolean.FALSE)\n                    _ambiguous.add(Ambiguous.PARAM);\n"}, {"type": "SA_SELF_ASSIGNMENT", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-security/src/main/java/org/eclipse/jetty/security/authentication/SslClientCertAuthenticator.java", "commit_sha": "", "line_no": 150, "priority": 1, "description": "SA: Self assignment of field or variable", "line_content": "        validateCerts = validateCerts;\n"}, {"type": "NM_CLASS_NAMING_CONVENTION", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-jndi/src/main/java/org/eclipse/jetty/jndi/java/javaRootURLContext.java", "commit_sha": "", "line_no": 41, "priority": 2, "description": "Nm: Class names should start with an upper case letter", "line_content": "public class javaRootURLContext implements Context\n{\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-websocket/websocket-javax-tests/src/main/java/org/eclipse/jetty/websocket/javax/tests/WSServer.java", "commit_sha": "", "line_no": 55, "priority": 1, "description": "Random object created and used only once", "line_content": "        String baseDirName = Long.toString(Math.abs(new Random().nextLong()));\n"}, {"type": "VA_FORMAT_STRING_USES_NEWLINE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-http/src/main/java/org/eclipse/jetty/http/HttpTester.java", "commit_sha": "", "line_no": 541, "priority": 2, "description": "Format string should use %n rather than \\n", "line_content": "            return String.format(\"%s %s %s\\n%s\\n\", _method, _uri, _version, super.toString());\n"}, {"type": "VA_FORMAT_STRING_USES_NEWLINE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-http/src/main/java/org/eclipse/jetty/http/HttpTester.java", "commit_sha": "", "line_no": 582, "priority": 2, "description": "Format string should use %n rather than \\n", "line_content": "            return String.format(\"%s %s %s\\n%s\\n\", _version, _status, _reason, super.toString());\n"}, {"type": "NM_CLASS_NAMING_CONVENTION", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-jndi/src/main/java/org/eclipse/jetty/jndi/java/javaNameParser.java", "commit_sha": "", "line_no": 29, "priority": 2, "description": "Nm: Class names should start with an upper case letter", "line_content": "public class javaNameParser implements NameParser\n{\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-keystore/src/main/java/org/eclipse/jetty/keystore/KeystoreGenerator.java", "commit_sha": "", "line_no": 59, "priority": 1, "description": "Random object created and used only once", "line_content": "        BigInteger serial = BigInteger.valueOf(new SecureRandom().nextLong());\n"}, {"type": "UI_INHERITANCE_UNSAFE_GETRESOURCE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/demos/demo-jetty-webapp/src/main/java/com/acme/Dump.java", "commit_sha": "", "line_no": 780, "priority": 3, "description": "Usage of GetResource may be unsafe if class is extended", "line_content": "                pout.write(\"<td>\" + this.getClass().getResource(res) + \"</td>\");\n"}, {"type": "RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/demos/demo-jetty-webapp/src/main/java/com/acme/Dump.java", "commit_sha": "", "line_no": 177, "priority": 2, "description": "Suspicious reference comparison of Boolean values", "line_content": "        if (request.getParameter(\"startAsync\") != null && request.getAttribute(\"ASYNC\") != Boolean.TRUE)\n        {\n"}, {"type": "VA_FORMAT_STRING_USES_NEWLINE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-start/src/main/java/org/eclipse/jetty/start/Main.java", "commit_sha": "", "line_no": 158, "priority": 2, "description": "Format string should use %n rather than \\n", "line_content": "            System.out.printf(\"%2d: %24s | %s\\n\", i++, getVersion(element), baseHome.toShortForm(element));\n"}, {"type": "NM_CLASS_NAMING_CONVENTION", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-jndi/src/main/java/org/eclipse/jetty/jndi/local/localContextRoot.java", "commit_sha": "", "line_no": 48, "priority": 2, "description": "Nm: Class names should start with an upper case letter", "line_content": "public class localContextRoot implements Context\n{\n"}, {"type": "UI_INHERITANCE_UNSAFE_GETRESOURCE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-server/src/main/java/org/eclipse/jetty/server/handler/DefaultHandler.java", "commit_sha": "", "line_no": 63, "priority": 2, "description": "Usage of GetResource may be unsafe if class is extended", "line_content": "            URL fav = getClass().getResource(faviconRef);\n"}, {"type": "VA_FORMAT_STRING_USES_NEWLINE", "file_name": "/home/codegex/Documents/workspace/rbugs/experiment/top100repos/jetty.project/jetty-client/src/main/java/org/eclipse/jetty/client/proxy/ProxyProtocolClientConnectionFactory.java", "commit_sha": "", "line_no": 93, "priority": 2, "description": "Format string should use %n rather than \\n", "line_content": "            String line = String.format(\"PROXY %s %s %s %d %d\\r\\n\", ipv6 ? \"TCP6\" : \"TCP4\", proxiedIP, serverIP, proxiedPort, serverPort);\n"}]}