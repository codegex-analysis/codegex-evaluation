{
  "Correctness (CORRECTNESS)": [
    "FE: Doomed test for equality to NaN (FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER)",
    "RV: Exception created and dropped rather than thrown (RV_EXCEPTION_NOT_THROWN)",
    "BIT: Incompatible bit masks (BIT_AND)",
    "SA: Nonsensical self computation involving a variable (e.g., x & x) (SA_LOCAL_SELF_COMPUTATION)",
    "Se: The readResolve method must not be declared as a static method. (SE_READ_RESOLVE_IS_STATIC)",
    "DMI: Vacuous call to collections (DMI_VACUOUS_SELF_COLLECTION_CALL)",
    "DMI: Bad constant value for month (DMI_BAD_MONTH)",
    "Nm: Class defines tostring(); should it be toString()? (NM_LCASE_TOSTRING)",
    "SA: Self assignment of local rather than assignment to field (SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD)",
    "SA: Self assignment of field (SA_FIELD_SELF_ASSIGNMENT)",
    "BIT: Bitwise OR of signed byte value (BIT_IOR_OF_SIGNED_BYTE)",
    "SA: Self comparison of value with itself (SA_LOCAL_SELF_COMPARISON)",
    "SA: Self comparison of field with itself (SA_FIELD_SELF_COMPARISON)",
    "EC: Call to equals(null) (EC_NULL_ARG)",
    "Nm: Class defines hashcode(); should it be hashCode()? (NM_LCASE_HASHCODE)",
    "BC: Impossible downcast of toArray() result (BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY)",
    "Nm: Class defines equal(Object); should it be equals(Object)? (NM_BAD_EQUAL)",
    "Dm: Incorrect combination of Math.max and Math.min (DM_INVALID_MIN_MAX)",
    "RV: Random value from 0 to 1 is coerced to the integer 0 (RV_01_TO_INT)",
    "BIT: Check to see if ((\u2026) & 0) == 0 (BIT_AND_ZZ)",
    "RE: \u201c.\u201d or \u201c|\u201d used for regular expression (RE_POSSIBLE_UNINTENDED_PATTERN)",
    "DMI: Collections should not contain themselves (DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES)",
    "SA: Nonsensical self computation involving a field (e.g., x & x) (SA_FIELD_SELF_COMPUTATION)",
    "DLS: Overwritten increment (DLS_OVERWRITTEN_INCREMENT)",
    "DLS: Useless increment in return statement (DLS_DEAD_LOCAL_INCREMENT_IN_RETURN)",
    "BSHIFT: Possible bad parsing of shift operation (BSHIFT_WRONG_ADD_PRIORITY)",
    "QBA: Method assigns boolean literal in boolean expression (QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT)",
    "IL: A collection is added to itself (IL_CONTAINER_ADDED_TO_ITSELF)",
    "RE: File.separator used for regular expression (RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION)",
    "Se: Method must be private in order for serialization to work (SE_METHOD_MUST_BE_PRIVATE)",
    "Eq: equals method compares class names rather than class objects (EQ_COMPARING_CLASS_NAMES)",
    "BIT: Check for sign of bitwise operation involving negative number (BIT_SIGNED_CHECK_HIGH_BIT)"
  ],
  "Bad practice (BAD_PRACTICE)": [
    "Se: serialVersionUID isn\u2019t static (SE_NONSTATIC_SERIALVERSIONID)",
    "Se: serialVersionUID isn\u2019t final (SE_NONFINAL_SERIALVERSIONID)",
    "DMI: Random object created and used only once (DMI_RANDOM_USED_ONLY_ONCE)",
    "CNT: Rough value of known constant found (CNT_ROUGH_CONSTANT_VALUE)",
    "UI: Usage of GetResource may be unsafe if class is extended (UI_INHERITANCE_UNSAFE_GETRESOURCE)",
    "DMI: Don\u2019t use removeAll to clear a collection (DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION)",
    "FI: Explicit invocation of finalizer (FI_EXPLICIT_INVOCATION)",
    "Nm: Class names should start with an upper case letter (NM_CLASS_NAMING_CONVENTION)",
    "IMSE: Dubious catching of IllegalMonitorStateException (IMSE_DONT_CATCH_IMSE)",
    "RC: Suspicious reference comparison of Boolean values (RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN)",
    "Se: The readResolve method must be declared with a return type of Object. (SE_READ_RESOLVE_MUST_RETURN_OBJECT)",
    "Nm: Use of identifier that is a keyword in later versions of Java (NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER)",
    "BIT: Check for sign of bitwise operation (BIT_SIGNED_CHECK)",
    "Nm: Class names shouldn\u2019t shadow simple name of implemented interface (NM_SAME_SIMPLE_NAME_AS_INTERFACE)",
    "Se: serialVersionUID isn\u2019t long (SE_NONLONG_SERIALVERSIONID)",
    "Nm: Class names shouldn\u2019t shadow simple name of superclass (NM_SAME_SIMPLE_NAME_AS_SUPERCLASS)",
    "Dm: Method invokes dangerous method runFinalizersOnExit (DM_RUN_FINALIZERS_ON_EXIT)",
    "Nm: Method names should start with a lower case letter (NM_METHOD_NAMING_CONVENTION)",
    "Nm: Use of identifier that is a keyword in later versions of Java (NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER)",
    "FS: Format string should use %n rather than n (VA_FORMAT_STRING_USES_NEWLINE)",
    "ES: Comparison of String objects using == or != (ES_COMPARING_STRINGS_WITH_EQ)"
  ],
  "Malicious code vulnerability (MALICIOUS_CODE)": [
    "FI: Finalizer should be protected, not public (FI_PUBLIC_SHOULD_BE_PROTECTED)"
  ],
  "Dodgy code (STYLE)": [
    "SA: Double assignment of field (SA_FIELD_DOUBLE_ASSIGNMENT)",
    "SA: Double assignment of local variable (SA_LOCAL_DOUBLE_ASSIGNMENT)"
  ],
  "Performance (PERFORMANCE)": [
    "Dm: Method invokes inefficient new String() constructor (DM_STRING_VOID_CTOR)",
    "Dm: Method invokes inefficient new String(String) constructor (DM_STRING_CTOR)"
  ],
  "Multithreaded correctness (MT_CORRECTNESS)": [
    "STCAL: Static DateFormat (STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE)",
    "STCAL: Static Calendar field (STCAL_STATIC_CALENDAR_INSTANCE)"
  ]
}