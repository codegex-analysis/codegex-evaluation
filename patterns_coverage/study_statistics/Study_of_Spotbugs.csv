Patterns,Category,Can we detect this using only code change (partial analysis is sufficient),Feasibility using Regex,# Note,inter-class,import,signature,field,body,signature,local variable,field,body,statement,type,annotation,java version,data flow/control flow/call graph/inheritance graph/no,name(class/method/field/variable),expression text(operator/keyword),constant,
JUA:  Asserting value of instanceof in tests is not recommended.  (JUA_DONT_ASSERT_INSTANCEOF_IN_TESTS),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,,,Y,,,Y,,,,,,
CNT: Rough value of known constant found (CNT_ROUGH_CONSTANT_VALUE),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,,,Y,
NP: Method with Boolean return type returns explicit null (NP_BOOLEAN_RETURN_NULL),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,,,,,,,,
SW: Certain swing methods needs to be invoked in Swing thread (SW_SWING_METHODS_INVOKED_IN_SWING_THREAD),Bad practice (BAD_PRACTICE),No,No for regex limitation,,,,,,,Y,,,Y,,,,,call graph,,,,
FI: Finalizer only nulls fields (FI_FINALIZER_ONLY_NULLS_FIELDS),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,Y,Y,,,,,data flow,,,,
FI: Finalizer nulls fields (FI_FINALIZER_NULLS_FIELDS),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,Y,Y,,,,,data flow,,,,
UI: Usage of GetResource may be unsafe if class is extended (UI_INHERITANCE_UNSAFE_GETRESOURCE),Bad practice (BAD_PRACTICE),No,Yes and implemented,,,,,,,,,,Y,,,,,,,,,
AM: Creates an empty zip file entry (AM_CREATES_EMPTY_ZIP_FILE_ENTRY),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
AM: Creates an empty jar file entry (AM_CREATES_EMPTY_JAR_FILE_ENTRY),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
IMSE: Dubious catching of IllegalMonitorStateException (IMSE_DONT_CATCH_IMSE),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,control flow,Y,Y,,
CN: Class defines clone() but doesn’t implement Cloneable (CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,,,,,,inheritance graph,,,,
CN: Class implements Cloneable but does not define or use clone method (CN_IDIOM),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,Y,,,,,,,,,inheritance graph,,,,
CN: clone method does not call super.clone() (CN_IDIOM_NO_SUPER_CALL),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,,,,"inheritance graph, call graph",,,,
DE: Method might drop exception (DE_MIGHT_DROP),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
DE: Method might ignore exception (DE_MIGHT_IGNORE),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
Dm: Method invokes System.exit(…) (DM_EXIT),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,,,,,,,,
Nm: Use of identifier that is a keyword in later versions of Java (NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,,Y,,,,,,,,,,,
Nm: Use of identifier that is a keyword in later versions of Java (NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,Y,,,,,,,,,,,,,,
JCIP: Fields of immutable classes should be final (JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,Y,,,,,,,,Y,,,,,,
Dm: Method invokes dangerous method runFinalizersOnExit (DM_RUN_FINALIZERS_ON_EXIT),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,,,,,Y,,,,,Y,,,
NP: equals() method does not check for null argument (NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,,,,,,,,
FI: Empty finalizer should be deleted (FI_EMPTY),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,,,,,,,,
FI: Finalizer nullifies superclass finalizer (FI_NULLIFY_SUPER),Bad practice (BAD_PRACTICE),No,No for regex limitation,,Y,,,,,,,,,,,,,inheritance graph,,,,
FI: Finalizer does nothing but call superclass finalizer (FI_USELESS),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,,,,call graph,,,,
FI: Finalizer does not call superclass finalizer (FI_MISSING_SUPER_CALL),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,,,,call graph,,,,
FI: Explicit invocation of finalizer (FI_EXPLICIT_INVOCATION),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,,,,,Y,,,,,Y,,,
Eq: Equals checks for incompatible operand (EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS),Bad practice (BAD_PRACTICE),No,No for regex limitation,,,,,,,Y,,,Y,,,,,inheritance graph,,,,
Eq: equals method fails for subtypes (EQ_GETCLASS_AND_CLASS_CONSTANT),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,Y,,Y,,,,,,,,,,,,,
Eq: Covariant equals() method defined (EQ_SELF_NO_OBJECT),Bad practice (BAD_PRACTICE),Yes,No for multi-line,,,,,,,Y,,,,,,,,,Y,,,
Co: Covariant compareTo() method defined (CO_SELF_NO_OBJECT),Bad practice (BAD_PRACTICE),Yes,No for multi-line,,,,,,,Y,,,,,,,,inheritance graph,Y,,,
Co: compareTo()/compare() returns Integer.MIN_VALUE (CO_COMPARETO_RESULTS_MIN_VALUE),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,,,,,,,,
Co: compareTo()/compare() incorrectly handles float or double value (CO_COMPARETO_INCORRECT_FLOATING),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,Y,,,,,,,
RV: Negating the result of compareTo()/compare() (RV_NEGATING_RESULT_OF_COMPARETO),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,,,Y,,,,,,,,,
ES: Comparison of String objects using == or != (ES_COMPARING_STRINGS_WITH_EQ),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,,Y,Y,
ES: Comparison of String parameter using == or != (ES_COMPARING_PARAMETER_STRING_WITH_EQ),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,Y,,,,,,,
Eq: Class defines compareTo(…) and uses Object.equals() (EQ_COMPARETO_USE_OBJECT_EQUALS),Bad practice (BAD_PRACTICE),No,No for multi-line,,Y,,,,,,,,,,,,,inheritance graph,,,,
HE: Class defines hashCode() and uses Object.equals() (HE_HASHCODE_USE_OBJECT_EQUALS),Bad practice (BAD_PRACTICE),No,No for multi-line,,Y,,,,,,,,,,,,,inheritance graph,,,,
HE: Class defines hashCode() but not equals() (HE_HASHCODE_NO_EQUALS),Bad practice (BAD_PRACTICE),No,No for regex limitation,,,,,,Y,,,,,,,,,,,,,
HE: Class defines equals() and uses Object.hashCode() (HE_EQUALS_USE_HASHCODE),Bad practice (BAD_PRACTICE),No,No for multi-line,,Y,,,,,,,,,,,,,inheritance graph,,,,
HE: Class inherits equals() and uses Object.hashCode() (HE_INHERITS_EQUALS_USE_HASHCODE),Bad practice (BAD_PRACTICE),No,No for regex limitation,,Y,,,,,,,,,,,,,inheritance graph,,,,
HE: Class defines equals() but not hashCode() (HE_EQUALS_NO_HASHCODE),Bad practice (BAD_PRACTICE),No,No for regex limitation,,,,,,Y,,,,,,,,,,,,,
Eq: Abstract class defines covariant equals() method (EQ_ABSTRACT_SELF),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,Y,,Y,,,,,,,,,,,,,
Co: Abstract class defines covariant compareTo() method (CO_ABSTRACT_SELF),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,Y,,Y,,,,,,,,,,,,,
IC: Superclass uses subclass during initialization (IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION),Bad practice (BAD_PRACTICE),No,No for regex limitation,,,,,,,Y,,,Y,,,,,"inheritance graph, call graph",,,,
SI: Static initializer creates instance before all static final fields assigned (SI_INSTANCE_BEFORE_FINALS_ASSIGNED),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,Y,Y,,,,,,,,,,,,,
It: Iterator next() method can’t throw NoSuchElementException (IT_NO_SUCH_ELEMENT),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,Y,,,inheritance graph,,,,
ME: Enum field is public and mutable (ME_MUTABLE_ENUM_FIELD),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,Y,Y,,,,,,,,,,,,Y,,
ME: Public enum method unconditionally sets its field (ME_ENUM_FIELD_SETTER),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,Y,Y,Y,,,,,,,,,,,,,
Nm: Method names should start with a lower case letter (NM_METHOD_NAMING_CONVENTION),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,Y,,,,,,,,,Y,,,
Nm: Field names should start with a lower case letter (NM_FIELD_NAMING_CONVENTION),Bad practice (BAD_PRACTICE),No,Yes and implemented,,,,,Y,,,,,,,,,,,,,,
Nm: Class names shouldn’t shadow simple name of implemented interface (NM_SAME_SIMPLE_NAME_AS_INTERFACE),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,Y,,,,,,,,,,,inheritance graph,Y,Y,,
Nm: Class names shouldn’t shadow simple name of superclass (NM_SAME_SIMPLE_NAME_AS_SUPERCLASS),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,Y,,,,,,,,,,,inheritance graph,Y,Y,,
Nm: Class names should start with an upper case letter (NM_CLASS_NAMING_CONVENTION),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,Y,,,,,,,,,,,,Y,Y,,
Nm: Very confusing method names (but perhaps intentional) (NM_VERY_CONFUSING_INTENTIONAL),Bad practice (BAD_PRACTICE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
Nm: Method doesn’t override method in superclass due to wrong package for parameter (NM_WRONG_PACKAGE_INTENTIONAL),Bad practice (BAD_PRACTICE),No,No for regex limitation,,Y,,,,,,,,,,,,,inheritance graph,,,,
Nm: Confusing method names (NM_CONFUSING),Bad practice (BAD_PRACTICE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
"Nm: Class is not derived from an Exception, even though it is named as such (NM_CLASS_NOT_EXCEPTION)",Bad practice (BAD_PRACTICE),No,Yes but no time,,,,Y,,,,,,,,,,,inheritance graph,,,,
RR: Method ignores results of InputStream.read() (RR_NOT_CHECKED),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
RR: Method ignores results of InputStream.skip() (SR_NOT_CHECKED),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
Se: Class is Serializable but its superclass doesn’t define a void constructor (SE_NO_SUITABLE_CONSTRUCTOR),Bad practice (BAD_PRACTICE),No,No for regex limitation,,Y,,,,,,,,,,,,,inheritance graph,,,,
Se: Class is Externalizable but doesn’t define a void constructor (SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,Y,,,,,,,,,inheritance graph,,,,
Se: Comparator doesn’t implement Serializable (SE_COMPARATOR_SHOULD_BE_SERIALIZABLE),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,Y,,,,,,,,,,,inheritance graph,,,,
"SnVI: Class is Serializable, but doesn’t define serialVersionUID (SE_NO_SERIALVERSIONID)",Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,Y,,,,,,,,,,inheritance graph,,,,
Se: The readResolve method must be declared with a return type of Object. (SE_READ_RESOLVE_MUST_RETURN_OBJECT),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,Y,,,,,,,,inheritance graph,Y,Y,,
Se: Transient field that isn’t set by deserialization. (SE_TRANSIENT_FIELD_NOT_RESTORED),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,Y,Y,,,,,,Y,,,inheritance graph,,,,
Se: serialVersionUID isn’t final (SE_NONFINAL_SERIALVERSIONID),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,Y,,,,,,,Y,,,inheritance graph,Y,Y,,
Se: serialVersionUID isn’t static (SE_NONSTATIC_SERIALVERSIONID),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,Y,,,,,,,Y,,,inheritance graph,Y,Y,,
Se: serialVersionUID isn’t long (SE_NONLONG_SERIALVERSIONID),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,Y,,,,,,,Y,,,inheritance graph,Y,Y,,
Se: Non-transient non-serializable instance field in serializable class (SE_BAD_FIELD),Bad practice (BAD_PRACTICE),No,No for regex limitation,,,,,Y,,,,,,,,,,inheritance graph,,,,
Se: Serializable inner class (SE_INNER_CLASS),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,Y,,,,,,,,,,inheritance graph,,,,
Se: Non-serializable class has a serializable inner class (SE_BAD_FIELD_INNER_CLASS),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,Y,,,,,,,,,,inheritance graph,,,,
Se: Non-serializable value stored into instance field of a serializable class (SE_BAD_FIELD_STORE),Bad practice (BAD_PRACTICE),No,No for regex limitation,,,,,Y,Y,,,,,,Y,,,inheritance graph,,,,
RV: Method ignores exceptional return value (RV_RETURN_VALUE_IGNORED_BAD_PRACTICE),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,,,,Y,,,,,,,,
NP: toString method may return null (NP_TOSTRING_COULD_RETURN_NULL),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,,,,data flow,,,,
NP: Clone method may return null (NP_CLONE_COULD_RETURN_NULL),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,,,,data flow,,,,
OS: Method may fail to close stream (OS_OPEN_STREAM),Bad practice (BAD_PRACTICE),No,No for multi-line,only check for never closures,,,,,,,Y,,Y,,Y,,,,,,,
OS: Method may fail to close stream on exception (OS_OPEN_STREAM_EXCEPTION_PATH),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,Y,,Y,,Y,,,control flow,,,,
RC: Suspicious reference comparison to constant (RC_REF_COMPARISON_BAD_PRACTICE),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
RC: Suspicious reference comparison of Boolean values (RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,,Y,Y,
FS: Format string should use %n rather than n (VA_FORMAT_STRING_USES_NEWLINE),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,,,,,Y,,,,,Y,,Y,
BIT: Check for sign of bitwise operation (BIT_SIGNED_CHECK),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,,Y,Y,
ODR: Method may fail to close database resource (ODR_OPEN_DATABASE_RESOURCE),Bad practice (BAD_PRACTICE),No,No for multi-line,only check for never closures,,,,,,,Y,,Y,,Y,,,,,,,
ODR: Method may fail to close database resource on exception (ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,Y,,Y,,Y,,,control flow,,,,
ISC: Needless instantiation of class that only supplies static methods (ISC_INSTANTIATE_STATIC_CLASS),Bad practice (BAD_PRACTICE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
DMI: Random object created and used only once (DMI_RANDOM_USED_ONLY_ONCE),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,only check case of unassigned to to variable,,,,,,,Y,,Y,,Y,,,,Y,Y,,
BC: Equals method should not assume anything about the type of its argument (BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,Y,,,Y,,,,,,,,,
J2EE: Store of non serializable object into HttpSession (J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION),Bad practice (BAD_PRACTICE),No,No for regex limitation,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
GC: Unchecked type in generic call (GC_UNCHECKED_TYPE_IN_GENERIC_CALL),Bad practice (BAD_PRACTICE),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
PZ: Don’t reuse entry objects in iterators (PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS),Bad practice (BAD_PRACTICE),No,Yes but no time,,,,Y,,,,,,,,,,,inheritance graph,,,,
DMI: Adding elements of an entry set may fail due to reuse of Entry objects (DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS),Bad practice (BAD_PRACTICE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
DMI: Don’t use removeAll to clear a collection (DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION),Bad practice (BAD_PRACTICE),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,Y,,,
"CN: Super method is annotated with @OverridingMethodsMustInvokeSuper, but the overriding method isn’t calling the super method. (OVERRIDING_METHODS_MUST_INVOKE_SUPER)",Correctness (CORRECTNESS),No,No for regex limitation,,Y,,,,,,,,,,,,,call graph,,,,
NP: Method with Optional return type returns explicit null (NP_OPTIONAL_RETURN_NULL),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
NP: Non-null field is not initialized (NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR),Correctness (CORRECTNESS),No,No for multi-line,,,,,Y,Y,,,,,,,Y,,,,,,
VR: Class makes reference to unresolvable class or method (VR_UNRESOLVABLE_REFERENCE),Correctness (CORRECTNESS),No,No for regex limitation,,,Y,,,Y,,,,,,,,,,,,,
IL: An apparent infinite loop (IL_INFINITE_LOOP),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,Y,,,,,control flow,,,,
IO: Doomed attempt to append to an object output stream (IO_APPENDING_TO_OBJECT_OUTPUT_STREAM),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
IL: An apparent infinite recursive loop (IL_INFINITE_RECURSIVE_LOOP),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,Y,,,Y,,,,,call graph,,,,
IL: A collection is added to itself (IL_CONTAINER_ADDED_TO_ITSELF),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,Y,,,
RpC: Repeated conditional tests (RpC_REPEATED_CONDITIONAL_TEST),Correctness (CORRECTNESS),Yes,Yes but no time,only detect simple conditional test,,,,,,,,,,Y,,,,,,Y,,
FL: Method performs math using floating point precision (FL_MATH_USING_FLOAT_PRECISION),Correctness (CORRECTNESS),Yes,No for multi-line,,,,,,,Y,,,Y,,Y,,,,,Y,Y,
CAA: Possibly incompatible element is stored in covariant array (CAA_COVARIANT_ARRAY_ELEMENT_STORE),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
Dm: Useless/vacuous call to EasyMock method (DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD),Correctness (CORRECTNESS),Yes,Yes but no time,,,,,,,,,,,Y,,,,,Y,,,
Dm: Futile attempt to change max pool size of ScheduledThreadPoolExecutor (DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR),Correctness (CORRECTNESS),Yes,No for multi-line,,,,,,,,,,,Y,Y,,,,Y,,,
DMI: BigDecimal constructed from double that isn’t represented precisely (DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE),Correctness (CORRECTNESS),Yes,Yes but no time,only check constant parameter,,,,,,,,,,Y,Y,,,,Y,,Y,
Dm: Creation of ScheduledThreadPoolExecutor with zero core threads (DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS),Correctness (CORRECTNESS),No,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,Disabled by spotbugs since users can change the number of core threads for a scheduled thread pool executor
Dm: Can’t use reflection to check for presence of annotation without runtime retention (DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION),Correctness (CORRECTNESS),Yes,No for regex limitation,,,,,,,,,,,Y,Y,,,,Y,,,
NP: Method does not check for null argument (NP_ARGUMENT_MIGHT_BE_NULL),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,Y,,,Y,,,,,data flow,,,,
RV: Bad attempt to compute absolute value of signed random integer (RV_ABSOLUTE_VALUE_OF_RANDOM_INT),Correctness (CORRECTNESS),Yes,No for multi-line,,,,,,,,,,Y,,Y,,,data flow,Y,,,
RV: Bad attempt to compute absolute value of signed 32-bit hashcode (RV_ABSOLUTE_VALUE_OF_HASHCODE),Correctness (CORRECTNESS),Yes,No for multi-line,,,,,,,,,,Y,,Y,,,data flow,Y,,,
RV: Random value from 0 to 1 is coerced to the integer 0 (RV_01_TO_INT),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,Y,,Y,,,,Y,,,
Dm: Incorrect combination of Math.max and Math.min (DM_INVALID_MIN_MAX),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,Y,,,,,,Y,,Y,
Eq: equals method compares class names rather than class objects (EQ_COMPARING_CLASS_NAMES),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,Y,,,Y,,Y,,,,,,,
Eq: equals method always returns true (EQ_ALWAYS_TRUE),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,Y,,,Y,,Y,,,data flow,,,,
Eq: equals method always returns false (EQ_ALWAYS_FALSE),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,Y,,,Y,,Y,,,data flow,,,,
Eq: equals method overrides equals in superclass and may not be symmetric (EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC),Correctness (CORRECTNESS),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
Eq: Covariant equals() method defined for enum (EQ_DONT_DEFINE_EQUALS_FOR_ENUM),Correctness (CORRECTNESS),No,No for multi-line,,,,Y,,Y,,,,,,,,,,,,,
"Eq: Covariant equals() method defined, Object.equals(Object) inherited (EQ_SELF_USE_OBJECT)",Correctness (CORRECTNESS),No,No for regex limitation,,Y,,,,,,,,,,,,,inheritance graph,,,,
Eq: equals() method defined that doesn’t override Object.equals(Object) (EQ_OTHER_USE_OBJECT),Correctness (CORRECTNESS),No,No for multi-line,,,,,,Y,,,,,,,,,inheritance graph,,,,
Eq: equals() method defined that doesn’t override equals(Object) (EQ_OTHER_NO_OBJECT),Correctness (CORRECTNESS),No,No for regex limitation,,Y,,,,,,,,,,,,,inheritance graph,,,,
HE: Signature declares use of unhashable class in hashed construct (HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS),Correctness (CORRECTNESS),No,No for regex limitation,,,,,Y,Y,,,,,,,,,inheritance graph,,,,
HE: Use of class without a hashCode() method in a hashed data structure (HE_USE_OF_UNHASHABLE_CLASS),Correctness (CORRECTNESS),No,No for regex limitation,,Y,,,,,,,,,,,,,inheritance graph,,,,
UR: Uninitialized read of field in constructor (UR_UNINIT_READ),Correctness (CORRECTNESS),No,No for multi-line,,,Y,,Y,Y,,,,,,,,,,,,,
UR: Uninitialized read of field method called from constructor of superclass (UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR),Correctness (CORRECTNESS),No,No for regex limitation,,Y,,,,,,,,,,,,,inheritance graph,,,,
Nm: Very confusing method names (NM_VERY_CONFUSING),Correctness (CORRECTNESS),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
Nm: Method doesn’t override method in superclass due to wrong package for parameter (NM_WRONG_PACKAGE),Correctness (CORRECTNESS),No,No for regex limitation,,Y,,,,,,,,,,,,,inheritance graph,,,,
Nm: Apparent method/constructor confusion (NM_METHOD_CONSTRUCTOR_CONFUSION),Correctness (CORRECTNESS),Yes,No for multi-line,,,,,,Y,,,,,,,,,,Y,Y,,
Nm: Class defines hashcode(); should it be hashCode()? (NM_LCASE_HASHCODE),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,Y,,,,,,,,,Y,Y,,
Nm: Class defines tostring(); should it be toString()? (NM_LCASE_TOSTRING),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,Y,,,,,,,,,Y,Y,,
Nm: Class defines equal(Object); should it be equals(Object)? (NM_BAD_EQUAL),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,Y,,,,,,,,,Y,Y,,
Se: The readResolve method must not be declared as a static method. (SE_READ_RESOLVE_IS_STATIC),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,Y,,,,,,,,inheritance graph,Y,Y,,
Se: Method must be private in order for serialization to work (SE_METHOD_MUST_BE_PRIVATE),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,Y,,,,,,,,inheritance graph,Y,Y,,
SF: Dead store due to switch statement fall through (SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
SF: Dead store due to switch statement fall through to throw (SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
NP: Read of unwritten field (NP_UNWRITTEN_FIELD),Correctness (CORRECTNESS),No,No for regex limitation,,,,,Y,Y,,,,,,,,,data flow,,,,
UwF: Field only ever set to null (UWF_NULL_FIELD),Correctness (CORRECTNESS),No,No for multi-line,,,,,Y,Y,,,,,,,,,data flow,,,,
UwF: Unwritten field (UWF_UNWRITTEN_FIELD),Correctness (CORRECTNESS),No,No for multi-line,,,,,Y,Y,,,,,,,,,,,,,
SIC: Deadly embrace of non-static inner class and thread local (SIC_THREADLOCAL_DEADLY_EMBRACE),Correctness (CORRECTNESS),No,No for regex limitation,,,,,Y,,,,,,,,,,inheritance graph,,,,
RANGE: Array index is out of bounds (RANGE_ARRAY_INDEX),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,Y,,,,,,Y,,,,,,,
RANGE: Array offset is out of bounds (RANGE_ARRAY_OFFSET),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,Y,,,,,,Y,,,,,,,
RANGE: Array length is out of bounds (RANGE_ARRAY_LENGTH),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,Y,,,,,,Y,,,,,,,
RANGE: String index is out of bounds (RANGE_STRING_INDEX),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,Y,,,,,,Y,,,,,,,
RV: Method ignores return value (RV_RETURN_VALUE_IGNORED),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
RV: Exception created and dropped rather than thrown (RV_EXCEPTION_NOT_THROWN),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,,,,,Y,,,
RV: Code checks for specific values returned by compareTo (RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE),Correctness (CORRECTNESS),Yes,No for multi-line,,,,,,,,,,Y,,,,,,Y,,Y,
NP: Null pointer dereference (NP_ALWAYS_NULL),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,,,data flow,,,,
NP: close() invoked on a value that is always null (NP_CLOSING_NULL),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,,,data flow,,,,
NP: Store of null value into field annotated @Nonnull (NP_STORE_INTO_NONNULL_FIELD),Correctness (CORRECTNESS),No,No for multi-line,,,,,Y,Y,,,,,,,Y,,data flow,,,,
NP: Null pointer dereference in method on exception path (NP_ALWAYS_NULL_EXCEPTION),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,Y,,,,,"data flow, control flow",,,,
NP: Possible null pointer dereference (NP_NULL_ON_SOME_PATH),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,Y,,,,,"data flow, control flow",,,,
NP: Possible null pointer dereference in method on exception path (NP_NULL_ON_SOME_PATH_EXCEPTION),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,Y,,,,,"data flow, control flow",,,,
NP: Method call passes null for non-null parameter (NP_NULL_PARAM_DEREF),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,Y,,data flow,,,,
NP: Non-virtual method call passes null for non-null parameter (NP_NULL_PARAM_DEREF_NONVIRTUAL),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,Y,,data flow,,,,
NP: Method call passes null for non-null parameter (NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,Y,,data flow,,,,
NP: Method call passes null to a non-null parameter (NP_NONNULL_PARAM_VIOLATION),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,Y,,data flow,,,,
"NP: Method may return null, but is declared @Nonnull (NP_NONNULL_RETURN_VIOLATION)",Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,,Y,,data flow,,,,
NP: Null value is guaranteed to be dereferenced (NP_GUARANTEED_DEREF),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,,,data flow,,,,
NP: Value is null and guaranteed to be dereferenced on exception path (NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,,,data flow,,,,
DMI: Reversed method arguments (DMI_ARGUMENTS_WRONG_ORDER),Correctness (CORRECTNESS),Yes,Yes but no time,only case of constant,,,,,,,,,Y,,,,,data flow,Y,,Y,
RCN: Nullcheck of value previously dereferenced (RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,,,,,,,,
RC: Suspicious reference comparison (RC_REF_COMPARISON),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
VA: Primitive array passed to function expecting a variable number of object arguments (VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
EC: Using pointer equality to compare different types (EC_UNRELATED_TYPES_USING_POINTER_EQUALITY),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
EC: Call to equals() comparing different types (EC_UNRELATED_TYPES),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
EC: equals() used to compare array and nonarray (EC_ARRAY_AND_NONARRAY),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
EC: Call to equals(null) (EC_NULL_ARG),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,,,,,Y,,Y,
EC: Call to equals() comparing different interface types (EC_UNRELATED_INTERFACES),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
EC: Call to equals() comparing unrelated class and interface (EC_UNRELATED_CLASS_AND_INTERFACE),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
SA: Self assignment of local rather than assignment to field (SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD),Correctness (CORRECTNESS),No,No for multi-line,enhanced with multiline,,,,,,,Y,,,,,,,,,,,
INT: Bad comparison of int value with long constant (INT_BAD_COMPARISON_WITH_INT_VALUE),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
INT: Bad comparison of signed byte (INT_BAD_COMPARISON_WITH_SIGNED_BYTE),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
INT: Bad comparison of nonnegative value with negative constant or zero (INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,,,data flow,,,,
BIT: Bitwise add of signed byte value (BIT_ADD_OF_SIGNED_BYTE),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
BIT: Bitwise OR of signed byte value (BIT_IOR_OF_SIGNED_BYTE),Correctness (CORRECTNESS),No,Yes and implemented,,,,,,,,,,,Y,Y,,,,,,,
BIT: Check for sign of bitwise operation involving negative number (BIT_SIGNED_CHECK_HIGH_BIT),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,,Y,Y,
BIT: Incompatible bit masks (BIT_AND),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,,Y,Y,
BIT: Check to see if ((…) & 0) == 0 (BIT_AND_ZZ),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,,Y,Y,
BIT: Incompatible bit masks (BIT_IOR),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,,Y,Y,
SA: Self assignment of field (SA_FIELD_SELF_ASSIGNMENT),Correctness (CORRECTNESS),No,Yes and implemented,enhanced with multiline,,,,,,,,Y,,,,,,,,,,
"SA: Nonsensical self computation involving a field (e.g., x & x) (SA_FIELD_SELF_COMPUTATION)",Correctness (CORRECTNESS),No,Yes and implemented,enhanced with multiline,,,,,,,,Y,,,,,,,,,,
"SA: Nonsensical self computation involving a variable (e.g., x & x) (SA_LOCAL_SELF_COMPUTATION)",Correctness (CORRECTNESS),No,Yes and implemented,enhanced with multiline,,,,,,,Y,,,,,,,,Y,Y,,
SA: Self comparison of field with itself (SA_FIELD_SELF_COMPARISON),Correctness (CORRECTNESS),No,Yes and implemented,enhanced with multiline,,,,,,,,Y,,,,,,,,,,
SA: Self comparison of value with itself (SA_LOCAL_SELF_COMPARISON),Correctness (CORRECTNESS),No,Yes and implemented,enhanced with multiline,,,,,,,Y,,,,,,,,Y,Y,,
UMAC: Uncallable method defined in anonymous class (UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,Y,,,,,,,,,
IJU: JUnit assertion in run method will not be noticed by JUnit (IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,Y,,,Y,,,,,"inheritance graph, call graph",,,,
IJU: TestCase declares a bad suite method (IJU_BAD_SUITE_METHOD),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,Y,,,,,,,,inheritance graph,Y,,,
IJU: TestCase defines setUp that doesn’t call super.setUp() (IJU_SETUP_NO_SUPER),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,Y,,,Y,,,,,"inheritance graph, call graph",,,,
IJU: TestCase defines tearDown that doesn’t call super.tearDown() (IJU_TEARDOWN_NO_SUPER),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,Y,,,Y,,,,,"inheritance graph, call graph",,,,
IJU: TestCase implements a non-static suite method (IJU_SUITE_NOT_STATIC),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,Y,,,,,,,,inheritance graph,,,,
IJU: TestCase has no tests (IJU_NO_TESTS),Correctness (CORRECTNESS),No,No for multi-line,,,,,,Y,,,,,,,,,inheritance graph,,,,
BOA: Class overrides a method implemented in super class Adapter wrongly (BOA_BADLY_OVERRIDDEN_ADAPTER),Correctness (CORRECTNESS),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
SQL: Method attempts to access a result set field with index 0 (SQL_BAD_RESULTSET_ACCESS),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
SQL: Method attempts to access a prepared statement parameter with index 0 (SQL_BAD_PREPARED_STATEMENT_ACCESS),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
SIO: Unnecessary type check done using instanceof operator (SIO_SUPERFLUOUS_INSTANCEOF),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
BAC: Bad Applet Constructor relies on uninitialized AppletStub (BAC_BAD_APPLET_CONSTRUCTOR),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,Y,,,,,call graph,,,,
EC: equals(…) used to compare incompatible arrays (EC_INCOMPATIBLE_ARRAY_COMPARE),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
"EC: Invocation of equals() on an array, which is equivalent to == (EC_BAD_ARRAY_COMPARE)",Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
"STI: Unneeded use of currentThread() call, to call interrupted() (STI_INTERRUPTED_ON_CURRENTTHREAD)",Correctness (CORRECTNESS),Yes,No for multi-line,,,,,,,,,,Y,,Y,,,,Y,,,
STI: Static Thread.interrupted() method invoked on thread instance (STI_INTERRUPTED_ON_UNKNOWNTHREAD),Correctness (CORRECTNESS),Yes,No for multi-line,,,,,,,,,,,Y,Y,,,,Y,,,
DLS: Useless increment in return statement (DLS_DEAD_LOCAL_INCREMENT_IN_RETURN),Correctness (CORRECTNESS),Yes,Yes and implemented,enhanced with multiline,,,,,,,Y,,,,Y,,,,Y,,,
DLS: Dead store of class literal (DLS_DEAD_STORE_OF_CLASS_LITERAL),Correctness (CORRECTNESS),No,No for multi-line,,,,,,Y,,,,,,,,,,,,,
IP: A parameter is dead upon entry to a method but overwritten (IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,Y,,,Y,,,,,,,,,
MF: Method defines a variable that obscures a field (MF_METHOD_MASKS_FIELD),Correctness (CORRECTNESS),No,No for multi-line,only for field in current class,Y,,,,,,,,,,,,,,,,,
MF: Class defines field that masks a superclass field (MF_CLASS_MASKS_FIELD),Correctness (CORRECTNESS),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
FE: Doomed test for equality to NaN (FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,Y,Y,,
ICAST: int value converted to long and used as absolute time (ICAST_INT_2_LONG_AS_INSTANT),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,Y,,Y,,,,,,,
ICAST: Integral value cast to double and then passed to Math.ceil (ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
ICAST: int value cast to float and then passed to Math.round (ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
NP: A known null value is checked to see if it is an instance of a type (NP_NULL_INSTANCEOF),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,,,,data flow,,,,
DMI: Double.longBitsToDouble invoked on an int (DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
BC: Impossible cast (BC_IMPOSSIBLE_CAST),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
BC: Impossible downcast (BC_IMPOSSIBLE_DOWNCAST),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
BC: Impossible downcast of toArray() result (BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,Y,,Y,,,inheritance graph,Y,,,
BC: instanceof will always return false (BC_IMPOSSIBLE_INSTANCEOF),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
RE: “.” or “|” used for regular expression (RE_POSSIBLE_UNINTENDED_PATTERN),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,Y,,Y,
RE: Invalid syntax for regular expression (RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
RE: File.separator used for regular expression (RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,Y,,,
DLS: Overwritten increment (DLS_OVERWRITTEN_INCREMENT),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,Y,Y,,
BSHIFT: 32 bit int shifted by an amount not in the range -31..31 (ICAST_BAD_SHIFT_AMOUNT),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
BSHIFT: Possible bad parsing of shift operation (BSHIFT_WRONG_ADD_PRIORITY),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,,Y,,
IM: Integer multiply of result of integer remainder (IM_MULTIPLYING_RESULT_OF_IREM),Correctness (CORRECTNESS),Yes,Yes but no time,No because SP didn't report it,,,,,,,,,Y,,Y,,,,,Y,,
DMI: Invocation of hashCode on an array (DMI_INVOKING_HASHCODE_ON_ARRAY),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
USELESS_STRING: Invocation of toString on an array (DMI_INVOKING_TOSTRING_ON_ARRAY),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
USELESS_STRING: Invocation of toString on an unnamed array (DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY),Correctness (CORRECTNESS),Yes,Yes but no time,,,,,,,,,,,Y,Y,,,,Y,Y,,
DMI: Bad constant value for month (DMI_BAD_MONTH),Correctness (CORRECTNESS),Yes,Yes and implemented,enhanced with multiline,,,,,,,,,,Y,Y,,,,Y,Y,,
DMI: hasNext method invokes next (DMI_CALLING_NEXT_FROM_HASNEXT),Correctness (CORRECTNESS),No,No for multi-line,,,,,,,Y,,,Y,,,,,"inheritance graph, call graph",,,,
QBA: Method assigns boolean literal in boolean expression (QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,control flow,,Y,Y,
GC: No relationship between generic parameter and method argument (GC_UNRELATED_TYPES),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
DMI: Vacuous call to collections (DMI_VACUOUS_SELF_COLLECTION_CALL),Correctness (CORRECTNESS),Yes,Yes and implemented,enhanced with multiline,,,,,,,,,,Y,Y,,,,Y,,,
DMI: D’oh! A nonsensical method invocation (DMI_DOH),Correctness (CORRECTNESS),Yes,No for multi-line,,,,,,,,,,,Y,Y,,,,Y,,,
DMI: Collections should not contain themselves (DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES),Correctness (CORRECTNESS),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,Y,,,
TQ: Value without a type qualifier used where a value is required to have that qualifier (TQ_UNKNOWN_VALUE_USED_WHERE_ALWAYS_STRICTLY_REQUIRED),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,Y,,,,,,
TQ: Comparing values with incompatible type qualifiers (TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,Y,,,,,,
TQ: Value annotated as carrying a type qualifier used where a value that must not carry that qualifier is required (TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,Y,,,,,,
TQ: Value annotated as never carrying a type qualifier used where value carrying that qualifier is required (TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,Y,,,,,,
TQ: Value that might not carry a type qualifier is always used in a way requires that type qualifier (TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,Y,,,,,,
TQ: Value that might carry a type qualifier is always used in a way prohibits it from having that type qualifier (TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK),Correctness (CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,,Y,,,,,,
FB: Unexpected/undesired warning from SpotBugs (FB_UNEXPECTED_WARNING),Correctness (CORRECTNESS),No,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,only for spotbugs
FB: Missing expected or desired warning from SpotBugs (FB_MISSING_EXPECTED_WARNING),Correctness (CORRECTNESS),No,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,only for spotbugs
SKIPPED: Class too big for analysis (SKIPPED_CLASS_TOO_BIG),Experimental (EXPERIMENTAL),No,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,only for spotbugs
TEST: Unknown bug pattern (UNKNOWN),Experimental (EXPERIMENTAL),No,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,only for spotbugs
TEST: Testing (TESTING),Experimental (EXPERIMENTAL),No,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,only for spotbugs
TEST: Testing 1 (TESTING1),Experimental (EXPERIMENTAL),No,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,only for spotbugs
TEST: Testing 2 (TESTING2),Experimental (EXPERIMENTAL),No,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,only for spotbugs
TEST: Testing 3 (TESTING3),Experimental (EXPERIMENTAL),No,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,-,only for spotbugs
OBL: Method may fail to clean up stream or resource (OBL_UNSATISFIED_OBLIGATION),Experimental (EXPERIMENTAL),No,No for multi-line,,,,,,,,Y,,Y,,Y,,,,,,,
OBL: Method may fail to clean up stream or resource on checked exception (OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE),Experimental (EXPERIMENTAL),No,No for multi-line,,,,,,,,Y,,Y,,Y,,,control flow,,,,
LG: Potential lost logger changes due to weak reference in OpenJDK (LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE),Experimental (EXPERIMENTAL),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
Dm: Consider using Locale parameterized version of invoked method (DM_CONVERT_CASE),Internationalization (I18N),Yes,No for multi-line,,,,,,,,,,,Y,Y,,,,Y,,,
Dm: Reliance on default encoding (DM_DEFAULT_ENCODING),Internationalization (I18N),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
DP: Method invoked that should be only be invoked inside a doPrivileged block (DP_DO_INSIDE_DO_PRIVILEGED),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,only case without any inheritance relationship,,,,,,Y,,,Y,,,,,inheritance graph,,,,
DP: Classloaders should only be created inside doPrivileged block (DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,only case without any inheritance relationship,,,,,,Y,,,Y,,,,,inheritance graph,,,,
"FI: Finalizer should be protected, not public (FI_PUBLIC_SHOULD_BE_PROTECTED)",Malicious code vulnerability (MALICIOUS_CODE),Yes,Yes and implemented,,,,,,,Y,,,,,,,,,Y,Y,,
MS: Public static method may expose internal representation by returning array (MS_EXPOSE_REP),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,,,,,,,Y,,Y,Y,,,,,,,,,
EI: May expose internal representation by returning reference to mutable object (EI_EXPOSE_REP),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,,,,,,,Y,,Y,Y,,,,,,,,,
EI2: May expose internal representation by incorporating reference to mutable object (EI_EXPOSE_REP2),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,,,,,,,Y,,Y,Y,,Y,,,,,,,
MS: May expose internal static state by storing a mutable object into a static field (EI_EXPOSE_STATIC_REP2),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,,,,,,,Y,,Y,Y,,Y,,,,,,,
MS: Field should be moved out of an interface and made package protected (MS_OOI_PKGPROTECT),Malicious code vulnerability (MALICIOUS_CODE),No,No for regex limitation,,Y,,,,,,,,,,Y,,,,,,,
MS: Field should be both final and package protected (MS_FINAL_PKGPROTECT),Malicious code vulnerability (MALICIOUS_CODE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
MS: Field isn’t final but should be (MS_SHOULD_BE_FINAL),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,,,,,Y,,,,,,,,,,,,,,
MS: Field isn’t final but should be refactored to be so (MS_SHOULD_BE_REFACTORED_TO_BE_FINAL),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,,,,,Y,Y,,,,,,,,,,,,,
MS: Field should be package protected (MS_PKGPROTECT),Malicious code vulnerability (MALICIOUS_CODE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
MS: Field is a mutable Hashtable (MS_MUTABLE_HASHTABLE),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,,,,,Y,,,,,,,Y,,,,,,,
MS: Field is a mutable array (MS_MUTABLE_ARRAY),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,,,,,Y,,,,,,,Y,,,,,,,
MS: Field is a mutable collection (MS_MUTABLE_COLLECTION),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,,,,,Y,,,,,,,Y,,,,,,,
MS: Field is a mutable collection which should be package protected (MS_MUTABLE_COLLECTION_PKGPROTECT),Malicious code vulnerability (MALICIOUS_CODE),No,No for regex limitation,,Y,,,,,,,,,,Y,,,,,,,
MS: Field isn’t final and can’t be protected from malicious code (MS_CANNOT_BE_FINAL),Malicious code vulnerability (MALICIOUS_CODE),No,No for multi-line,,,,,Y,,,,,,,Y,,,,,,,
AT: Sequence of calls to concurrent abstraction may not be atomic (AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
STCAL: Static Calendar field (STCAL_STATIC_CALENDAR_INSTANCE),Multithreaded correctness (MT_CORRECTNESS),Yes,Yes and implemented,,,,,Y,,,,,,,Y,,,,Y,Y,,
STCAL: Static DateFormat (STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE),Multithreaded correctness (MT_CORRECTNESS),Yes,Yes and implemented,,,,,Y,,,,,,,Y,,,,Y,Y,,
STCAL: Call to static Calendar (STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE),Multithreaded correctness (MT_CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
STCAL: Call to static DateFormat (STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE),Multithreaded correctness (MT_CORRECTNESS),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
NP: Synchronize and null check on the same field. (NP_SYNC_AND_NULL_CHECK_FIELD),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,Y,Y,,,,,control flow,,,,
VO: A volatile reference to an array doesn’t treat the array elements as volatile (VO_VOLATILE_REFERENCE_TO_ARRAY),Multithreaded correctness (MT_CORRECTNESS),Yes,Yes but no time,,,,,Y,,,,,,,Y,,,,,Y,,
VO: An increment to a volatile field isn’t atomic (VO_VOLATILE_INCREMENT),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,Y,,,,,,,,Y,,
Dm: Monitor wait() called on Condition (DM_MONITOR_WAIT_ON_CONDITION),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
Dm: A thread was created using the default empty run method (DM_USELESS_THREAD),Multithreaded correctness (MT_CORRECTNESS),Yes,No for multi-line,,,,,,,,,,,Y,Y,,,,Y,Y,,
DC: Possible double check of field (DC_DOUBLECHECK),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,Y,Y,,,,,control flow,,,,
DC: Possible exposure of partially initialized object (DC_PARTIALLY_CONSTRUCTED),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,Y,Y,,,,,control flow,,,,
DL: Synchronization on interned String (DL_SYNCHRONIZATION_ON_SHARED_CONSTANT),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
DL: Synchronization on Boolean (DL_SYNCHRONIZATION_ON_BOOLEAN),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
DL: Synchronization on boxed primitive (DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
DL: Synchronization on boxed primitive values (DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
WL: Synchronization on getClass rather than class literal (WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL),Multithreaded correctness (MT_CORRECTNESS),Yes,Yes but no time,,,,,,,,,,Y,,Y,,,,Y,Y,,
ESync: Empty synchronized block (ESync_EMPTY_SYNC),Multithreaded correctness (MT_CORRECTNESS),Yes,No for multi-line,,,,,,,,,,Y,,,,,,,Y,,
MSF: Mutable servlet field (MSF_MUTABLE_SERVLET_FIELD),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,Y,,Y,,,,,,,,,,inheritance graph,,,,
IS: Inconsistent synchronization (IS2_INCONSISTENT_SYNC),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,Y,Y,,,,,,,,,,,,,
NN: Naked notify (NN_NAKED_NOTIFY),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,Y,Y,,,,,,,,,,,,,
Ru: Invokes run on a thread (did you mean to start it instead?) (RU_INVOKE_RUN),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
SP: Method spins on field (SP_SPIN_ON_FIELD),Multithreaded correctness (MT_CORRECTNESS),No,No for regex limitation,,,,,,,,,Y,Y,,,,,control flow,,,,
TLW: Wait with two locks held (TLW_TWO_LOCK_WAIT),Multithreaded correctness (MT_CORRECTNESS),No,No for regex limitation,,,,,,,,,,Y,,Y,,,,,,,
UW: Unconditional wait (UW_UNCOND_WAIT),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,,,,,,,,
"UG: Unsynchronized get method, synchronized set method (UG_SYNC_SET_UNSYNC_GET)",Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,Y,,,,,,,,,,,,,
IS: Field not guarded against concurrent access (IS_FIELD_NOT_GUARDED),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,Y,Y,,,Y,,,,,,
ML: Synchronization on field in futile attempt to guard that field (ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,Y,Y,,,Y,,,,,,
ML: Method synchronizes on an updated field (ML_SYNC_ON_UPDATED_FIELD),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,Y,,,Y,,,,,,,
WS: Class’s writeObject() method is synchronized but nothing else is (WS_WRITEOBJECT_SYNC),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,Y,,,,,,,,,,,,,
RS: Class’s readObject() method is synchronized (RS_READOBJECT_SYNC),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,Y,,,,,,,,inheritance graph,,,,
SC: Constructor invokes Thread.start() (SC_START_IN_CTOR),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,,,,call graph,,,,
Wa: Wait not in loop (WA_NOT_IN_LOOP),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,,,,,,,,
Wa: Condition.await() not in loop (WA_AWAIT_NOT_IN_LOOP),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
No: Using notify() rather than notifyAll() (NO_NOTIFY_NOT_NOTIFYALL),Multithreaded correctness (MT_CORRECTNESS),Yes,Yes but no time,,,,,,,,,,,Y,,,,,Y,,,
UL: Method does not release lock on all paths (UL_UNRELEASED_LOCK),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,Y,,,control flow,,,,
UL: Method does not release lock on all exception paths (UL_UNRELEASED_LOCK_EXCEPTION_PATH),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,Y,,,control flow,,,,
MWN: Mismatched wait() (MWN_MISMATCHED_WAIT),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
MWN: Mismatched notify() (MWN_MISMATCHED_NOTIFY),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
LI: Incorrect lazy initialization of static field (LI_LAZY_INIT_STATIC),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,Y,,Y,Y,,,,,,,,,
LI: Incorrect lazy initialization and update of static field (LI_LAZY_INIT_UPDATE_STATIC),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,Y,,Y,Y,,,,,,,,,
JLM: Synchronization performed on util.concurrent instance (JLM_JSR166_UTILCONCURRENT_MONITORENTER),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
JLM: Using monitor style wait methods on util.concurrent abstraction (JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
JLM: Synchronization performed on Lock (JLM_JSR166_LOCK_MONITORENTER),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,cannot detect the subtypes of Lock,,,,,,,,,,Y,Y,,,inheritance graph,,,,
SWL: Method calls Thread.sleep() with a lock held (SWL_SLEEP_WITH_LOCK_HELD),Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
"RV: Return value of putIfAbsent ignored, value passed to putIfAbsent reused (RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED)",Multithreaded correctness (MT_CORRECTNESS),No,No for multi-line,,,,,,,,,,Y,,Y,,,inheritance graph,,,,
NOISE: Bogus warning about a null pointer dereference (NOISE_NULL_DEREFERENCE),Bogus random noise (NOISE),No,-,,-,-,-,-,-,-,-,-,-,-,-,,,-,,,,
NOISE: Bogus warning about a method call (NOISE_METHOD_CALL),Bogus random noise (NOISE),No,-,,-,-,-,-,-,-,-,-,-,-,-,,,-,,,,
NOISE: Bogus warning about a field reference (NOISE_FIELD_REFERENCE),Bogus random noise (NOISE),No,-,,-,-,-,-,-,-,-,-,-,-,-,,,-,,,,
NOISE: Bogus warning about an operation (NOISE_OPERATION),Bogus random noise (NOISE),No,-,,-,-,-,-,-,-,-,-,-,-,-,,,-,,,,
HSC: Huge string constants is duplicated across multiple class files (HSC_HUGE_SHARED_STRING_CONSTANT),Performance (PERFORMANCE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
Dm: The equals and hashCode methods of URL are blocking (DMI_BLOCKING_METHODS_ON_URL),Performance (PERFORMANCE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
Dm: Maps and sets of URLs can be performance hogs (DMI_COLLECTION_OF_URLS),Performance (PERFORMANCE),No,Yes but no time,enhanced with multiline,,,,Y,Y,,,,,,Y,,,,,,,
Dm: Method invokes inefficient new String(String) constructor (DM_STRING_CTOR),Performance (PERFORMANCE),Yes,Yes and implemented,enhanced with multiline,,,,,,,,,,Y,Y,,,,Y,Y,Y,
Dm: Method invokes inefficient new String() constructor (DM_STRING_VOID_CTOR),Performance (PERFORMANCE),Yes,Yes and implemented,,,,,,,,,,,Y,Y,,,,Y,Y,,
Dm: Method invokes toString() method on a String (DM_STRING_TOSTRING),Performance (PERFORMANCE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
Dm: Explicit garbage collection; extremely dubious except in benchmarking code (DM_GC),Performance (PERFORMANCE),No,No for multi-line,,,,,,,Y,,,Y,,,,,,,,,
Dm: Method invokes inefficient Boolean constructor; use Boolean.valueOf(…) instead (DM_BOOLEAN_CTOR),Performance (PERFORMANCE),Yes,Yes but no time,enhanced with multiline,,,,,,,,,,Y,Y,,Y,,Y,Y,,
Bx: Method invokes inefficient Number constructor; use static valueOf instead (DM_NUMBER_CTOR),Performance (PERFORMANCE),Yes,Yes but no time,enhanced with multiline,,,,,,,,,,Y,Y,,Y,inheritance graph,Y,Y,Y,
Bx: Method invokes inefficient floating-point Number constructor; use static valueOf instead (DM_FP_NUMBER_CTOR),Performance (PERFORMANCE),Yes,Yes but no time,enhanced with multiline,,,,,,,,,,Y,Y,,Y,,Y,Y,Y,
Bx: Method allocates a boxed primitive just to call toString (DM_BOXED_PRIMITIVE_TOSTRING),Performance (PERFORMANCE),Yes,Yes but no time,,,,,,,,,,Y,,Y,,,,Y,Y,Y,
Bx: Boxing/unboxing to parse a primitive (DM_BOXED_PRIMITIVE_FOR_PARSING),Performance (PERFORMANCE),Yes,Yes but no time,,,,,,,,,,Y,,Y,,,,Y,Y,Y,
Bx: Boxing a primitive to compare (DM_BOXED_PRIMITIVE_FOR_COMPARE),Performance (PERFORMANCE),Yes,Yes but no time,,,,,,,,,,Y,,Y,,Y,,Y,,,
Bx: Primitive value is unboxed and coerced for ternary operator (BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR),Performance (PERFORMANCE),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
Bx: Boxed value is unboxed and then immediately reboxed (BX_UNBOXING_IMMEDIATELY_REBOXED),Performance (PERFORMANCE),No,No for regex limitation,,,,,,,,,,,Y,Y,,Y,,,,,
Bx: Primitive value is boxed and then immediately unboxed (BX_BOXING_IMMEDIATELY_UNBOXED),Performance (PERFORMANCE),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
Bx: Primitive value is boxed then unboxed to perform primitive coercion (BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION),Performance (PERFORMANCE),Yes,Yes but no time,,,,,,,,,,Y,,Y,,,,Y,Y,Y,
"Dm: Method allocates an object, only to get the class object (DM_NEW_FOR_GETCLASS)",Performance (PERFORMANCE),Yes,Yes but no time,,,,,,,,,,Y,,Y,,,,Y,Y,,
Dm: Use the nextInt method of Random rather than nextDouble to generate a random integer (DM_NEXTINT_VIA_NEXTDOUBLE),Performance (PERFORMANCE),Yes,Yes but no time,,,,,,,,,,Y,,Y,,,,Y,Y,Y,
SS: Unread field: should this field be static? (SS_SHOULD_BE_STATIC),Performance (PERFORMANCE),No,No for multi-line,,,,,Y,Y,,,,,,,,,,,,,
UuF: Unused field (UUF_UNUSED_FIELD),Performance (PERFORMANCE),No,No for multi-line,,,,,Y,Y,,,,,,,,,,,,,
UrF: Unread field (URF_UNREAD_FIELD),Performance (PERFORMANCE),No,No for multi-line,,,,,Y,Y,,,,,,,,,,,,,
SIC: Should be a static inner class (SIC_INNER_SHOULD_BE_STATIC),Performance (PERFORMANCE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
SIC: Could be refactored into a static inner class (SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS),Performance (PERFORMANCE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
SIC: Could be refactored into a named static inner class (SIC_INNER_SHOULD_BE_STATIC_ANON),Performance (PERFORMANCE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
UPM: Private method is never called (UPM_UNCALLED_PRIVATE_METHOD),Performance (PERFORMANCE),No,No for multi-line,,,,,,Y,,,,,,,,,,,,,
SBSC: Method concatenates strings using + in a loop (SBSC_USE_STRINGBUFFER_CONCATENATION),Performance (PERFORMANCE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
IIL: NodeList.getLength() called in a loop (IIL_ELEMENTS_GET_LENGTH_IN_LOOP),Performance (PERFORMANCE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
IIL: Method calls prepareStatement in a loop (IIL_PREPARE_STATEMENT_IN_LOOP),Performance (PERFORMANCE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
IIL: Method calls Pattern.compile in a loop (IIL_PATTERN_COMPILE_IN_LOOP),Performance (PERFORMANCE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
IIL: Method compiles the regular expression in a loop (IIL_PATTERN_COMPILE_IN_LOOP_INDIRECT),Performance (PERFORMANCE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
IIO: Inefficient use of String.indexOf(String) (IIO_INEFFICIENT_INDEX_OF),Performance (PERFORMANCE),Yes,Yes but no time,,,,,,,,,,,Y,Y,,,,Y,,Y,
IIO: Inefficient use of String.lastIndexOf(String) (IIO_INEFFICIENT_LAST_INDEX_OF),Performance (PERFORMANCE),Yes,Yes but no time,,,,,,,,,,,Y,Y,,,,Y,,Y,
ITA: Method uses toArray() with zero-length array argument (ITA_INEFFICIENT_TO_ARRAY),Performance (PERFORMANCE),No,No for regex limitation,,,,,,,,,,Y,,Y,,,,,,,
WMI: Inefficient use of keySet iterator instead of entrySet iterator (WMI_WRONG_MAP_ITERATOR),Performance (PERFORMANCE),No,No for multi-line,,,,,,,,Y,,Y,,Y,,,,,,,
UM: Method calls static Math class method on a constant value (UM_UNNECESSARY_MATH),Performance (PERFORMANCE),Yes,Yes but no time,,,,,,,,,,,Y,Y,,,,Y,,Y,
IMA: Method accesses a private member variable of owning class (IMA_INEFFICIENT_MEMBER_ACCESS),Performance (PERFORMANCE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
XSS: Servlet reflected cross site scripting vulnerability in error page (XSS_REQUEST_PARAMETER_TO_SEND_ERROR),Security (SECURITY),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
XSS: Servlet reflected cross site scripting vulnerability (XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER),Security (SECURITY),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
XSS: JSP reflected cross site scripting vulnerability (XSS_REQUEST_PARAMETER_TO_JSP_WRITER),Security (SECURITY),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
HRS: HTTP Response splitting vulnerability (HRS_REQUEST_PARAMETER_TO_HTTP_HEADER),Security (SECURITY),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
HRS: HTTP cookie formed from untrusted input (HRS_REQUEST_PARAMETER_TO_COOKIE),Security (SECURITY),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
PT: Absolute path traversal in servlet (PT_ABSOLUTE_PATH_TRAVERSAL),Security (SECURITY),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
PT: Relative path traversal in servlet (PT_RELATIVE_PATH_TRAVERSAL),Security (SECURITY),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
Dm: Hardcoded constant database password (DMI_CONSTANT_DB_PASSWORD),Security (SECURITY),Yes,Yes but no time,enhaced with multiline,,,,,,,,,,Y,Y,,,,Y,,Y,
Dm: Empty database password (DMI_EMPTY_DB_PASSWORD),Security (SECURITY),Yes,Yes but no time,enhaced with multiline,,,,,,,,,,Y,Y,,,,Y,,Y,
SQL: Nonconstant string passed to execute or addBatch method on an SQL statement (SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE),Security (SECURITY),No,Yes but no time,enhaced with multiline,,,,,,,,,Y,,Y,,,,,,,
SQL: A prepared statement is generated from a nonconstant String (SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING),Security (SECURITY),No,Yes but no time,enhaced with multiline,,,,,,,,,Y,,Y,,,,,,,
CAA: Covariant array assignment to a field (CAA_COVARIANT_ARRAY_FIELD),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,Y,,,Y,,,inheritance graph,,,,
CAA: Covariant array is returned from the method (CAA_COVARIANT_ARRAY_RETURN),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,,Y,Y,,,inheritance graph,,,,
CAA: Covariant array assignment to a local variable (CAA_COVARIANT_ARRAY_LOCAL),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,Y,,,,,,,inheritance graph,,,,
Dm: Call to unsupported method (DMI_UNSUPPORTED_METHOD),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
Dm: Thread passed where Runnable expected (DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
NP: Dereference of the result of readLine() without nullcheck (NP_DEREFERENCE_OF_READLINE_VALUE),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,Y,,Y,,, data flow,,,,
NP: Immediate dereference of the result of readLine() (NP_IMMEDIATE_DEREFERENCE_OF_READLINE),Dodgy code (STYLE),Yes,Yes but no time,,,,,,,,,,,Y,Y,,,,Y,,,
RV: Remainder of 32-bit signed random integer (RV_REM_OF_RANDOM_INT),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
RV: Remainder of hashCode could be negative (RV_REM_OF_HASHCODE),Dodgy code (STYLE),Yes,No for multi-line,,,,,,,,,,Y,,Y,,,,Y,Y,,
Eq: Unusual equals method (EQ_UNUSUAL),Dodgy code (STYLE),No,No for regex limitation,,,,,,,Y,,,Y,,Y,,,inheritance graph,,,,
Eq: Class doesn’t override equals in superclass (EQ_DOESNT_OVERRIDE_EQUALS),Dodgy code (STYLE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
NS: Questionable use of non-short-circuit logic (NS_NON_SHORT_CIRCUIT),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
NS: Potentially dangerous use of non-short-circuit logic (NS_DANGEROUS_NON_SHORT_CIRCUIT),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
IC: Initialization circularity (IC_INIT_CIRCULARITY),Dodgy code (STYLE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
IA: Potentially ambiguous invocation of either an inherited or outer method (IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD),Dodgy code (STYLE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
Se: Private readResolve method not inherited by subclasses (SE_PRIVATE_READ_RESOLVE_NOT_INHERITED),Dodgy code (STYLE),Yes,No for multi-line,,,,,,,Y,,,,,,,,inheritance graph,Y,Y,,
Se: Transient field of class that isn’t Serializable. (SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS),Dodgy code (STYLE),Yes,No for regex limitation,,,,,Y,,,,,,,,,,inheritance graph,Y,Y,,
SF: Switch statement found where one case falls through to the next case (SF_SWITCH_FALLTHROUGH),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
SF: Switch statement found where default case is missing (SF_SWITCH_NO_DEFAULT),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
UuF: Unused public or protected field (UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD),Dodgy code (STYLE),No,No for multi-line,,,,,Y,Y,,,,,,,,,,,,,
UrF: Unread public/protected field (URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD),Dodgy code (STYLE),No,No for multi-line,,,,,Y,Y,,,,,,,,,,,,,
"QF: Complicated, subtle or wrong increment in for-loop (QF_QUESTIONABLE_FOR_LOOP)",Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
NP: Read of unwritten public or protected field (NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD),Dodgy code (STYLE),No,No for multi-line,,,,,Y,Y,,,,,,,,,data flow,,,,
UwF: Field not initialized in constructor but dereferenced without null check (UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR),Dodgy code (STYLE),No,No for multi-line,,,,,Y,Y,,,,,,,,,data flow,,,,
UwF: Unwritten public or protected field (UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD),Dodgy code (STYLE),No,No for multi-line,,,,,Y,Y,,,,,,,,,data flow,,,,
UC: Useless non-empty void method (UC_USELESS_VOID_METHOD),Dodgy code (STYLE),No,No for regex limitation,,,,Y,,Y,,,,,,,,,,,,,
UC: Condition has no effect (UC_USELESS_CONDITION),Dodgy code (STYLE),No,No for regex limitation,,,,,,Y,,,,,,Y,,,control flow,,,,
UC: Condition has no effect due to the variable type (UC_USELESS_CONDITION_TYPE),Dodgy code (STYLE),No,No for regex limitation,,,,,,Y,,,,,,Y,,,control flow,,,,
UC: Useless object created (UC_USELESS_OBJECT),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,Y,,,,,,,,,
UC: Useless object created on stack (UC_USELESS_OBJECT_STACK),Dodgy code (STYLE),Yes,Yes but no time,,,,,,,,,,,Y,,,,,,Y,,
"RV: Method ignores return value, is this OK? (RV_RETURN_VALUE_IGNORED_INFERRED)",Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
RV: Return value of method without side effect is ignored (RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT),Dodgy code (STYLE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
RV: Method checks to see if result of String.indexOf is positive (RV_CHECK_FOR_POSITIVE_INDEXOF),Dodgy code (STYLE),Yes,No for multi-line,,,,,,,,,,Y,,,,,control flow,Y,Y,,
RV: Method discards result of readLine after checking if it is non-null (RV_DONT_JUST_NULL_CHECK_READLINE),Dodgy code (STYLE),Yes,Yes but no time,,,,,,,,,,Y,,,,,"control flow, data flow",,,,
NP: Parameter must be non-null but is marked as nullable (NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE),Dodgy code (STYLE),No,No for regex limitation,,,,,,,Y,,,Y,,,Y,,,,,,
NP: Possible null pointer dereference due to return value of called method (NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE),Dodgy code (STYLE),Yes,No for regex limitation,,,,,,,,,,Y,,,,,,Y,,,
NP: Possible null pointer dereference on branch that might be infeasible (NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,Y,,,,,"control flow, data flow",,,,
NP: Load of known null value (NP_LOAD_OF_KNOWN_NULL_VALUE),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,Y,,,,,data flow,,,,
PZLA: Consider returning a zero length array rather than null (PZLA_PREFER_ZERO_LENGTH_ARRAYS),Dodgy code (STYLE),No,No for multi-line,,,,,,,Y,,,Y,,,,,data flow,,,,
UCF: Useless control flow (UCF_USELESS_CONTROL_FLOW),Dodgy code (STYLE),No,No for multi-line,only empty if-statement block,,,,,,,,,Y,,,,,control flow,,,,
UCF: Useless control flow to next line (UCF_USELESS_CONTROL_FLOW_NEXT_LINE),Dodgy code (STYLE),Yes,Yes but no time,,,,,,,,,,Y,,,,,control flow,,Y,,
RCN: Redundant nullcheck of value known to be null (RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,Y,,,,,"control flow, data flow",,,,
RCN: Redundant nullcheck of value known to be non-null (RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,Y,,,,,"control flow, data flow",,,,
RCN: Redundant comparison of two null values (RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,Y,,,,,"control flow, data flow",,,,
RCN: Redundant comparison of non-null value to null (RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,Y,,,,,"control flow, data flow",,,,
SA: Self assignment of local variable (SA_LOCAL_SELF_ASSIGNMENT),Dodgy code (STYLE),No,Yes and implemented,enhanced with multiline,,,,,,,Y,,,,,,,,,,,
INT: Integer remainder modulo 1 (INT_BAD_REM_BY_1),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
INT: Vacuous comparison of integer value (INT_VACUOUS_COMPARISON),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
INT: Vacuous bit mask operation on integer value (INT_VACUOUS_BIT_OPERATION),Dodgy code (STYLE),Yes,No for multi-line,,,,,,,,,,,Y,Y,,,,,Y,Y,
SA: Double assignment of local variable (SA_LOCAL_DOUBLE_ASSIGNMENT),Dodgy code (STYLE),No,Yes and implemented,enhanced with multiline,,,,,,,Y,,,,,,,,,,,
SA: Double assignment of field (SA_FIELD_DOUBLE_ASSIGNMENT),Dodgy code (STYLE),No,Yes and implemented,enhanced with multiline,,,,,,,Y,,,,,,,,,,,
DLS: Useless assignment in return statement (DLS_DEAD_LOCAL_STORE_IN_RETURN),Dodgy code (STYLE),No,No for multi-line,,,,,,,,Y,,,,,,,,,,,
DLS: Dead store to local variable (DLS_DEAD_LOCAL_STORE),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,Y,,Y,,,,,,,,,
DLS: Dead store to local variable that shadows field (DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD),Dodgy code (STYLE),No,No for regex limitation,,,,,Y,Y,,,,,,,,,,,,,
DLS: Dead store of null to local variable (DLS_DEAD_LOCAL_STORE_OF_NULL),Dodgy code (STYLE),No,No for multi-line,,,,,,,,Y,,Y,,,,,data flow,,,,
REC: Exception is caught when Exception is not thrown (REC_CATCH_EXCEPTION),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,Y,,,,,control flow,,,,
FE: Test for floating point equality (FE_FLOATING_POINT_EQUALITY),Dodgy code (STYLE),Yes,No for multi-line,,,,,,,,,,,Y,Y,,,,,Y,Y,
CD: Test for circular dependencies among classes (CD_CIRCULAR_DEPENDENCY),Dodgy code (STYLE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
RI: Class implements same interface as superclass (RI_REDUNDANT_INTERFACES),Dodgy code (STYLE),No,No for regex limitation,,Y,,,,,,,,,,,,,inheritance graph,,,,
MTIA: Class extends Struts Action class and uses instance variables (MTIA_SUSPECT_STRUTS_INSTANCE_FIELD),Dodgy code (STYLE),No,No for multi-line,,,,,Y,,,,,,,,,,inheritance graph,,,,
MTIA: Class extends Servlet class and uses instance variables (MTIA_SUSPECT_SERVLET_INSTANCE_FIELD),Dodgy code (STYLE),No,No for multi-line,,,,,Y,,,,,,,,,,inheritance graph,,,,
PS: Class exposes synchronization and semaphores in its public interface (PS_PUBLIC_SEMAPHORES),Dodgy code (STYLE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
ICAST: Result of integer multiplication cast to long (ICAST_INTEGER_MULTIPLY_CAST_TO_LONG),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
ICAST: Integral division result cast to double or float (ICAST_IDIV_CAST_TO_DOUBLE),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
BC: Questionable cast to concrete collection (BC_BAD_CAST_TO_CONCRETE_COLLECTION),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
BC: Unchecked/unconfirmed cast (BC_UNCONFIRMED_CAST),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
BC: Unchecked/unconfirmed cast of return value from method (BC_UNCONFIRMED_CAST_OF_RETURN_VALUE),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,Y,,Y,,,,,,,
BC: instanceof will always return true (BC_VACUOUS_INSTANCEOF),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,,Y,Y,,,,,,,
BC: Questionable cast to abstract collection (BC_BAD_CAST_TO_ABSTRACT_COLLECTION),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,,Y,Y,,,,,,,
IM: Check for oddness that won’t work for negative numbers (IM_BAD_CHECK_FOR_ODD),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,Y,,Y,,,,,,,
IM: Computation of average could overflow (IM_AVERAGE_COMPUTATION_COULD_OVERFLOW),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
BSHIFT: Unsigned right shift cast to short/byte (ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,Y,,Y,,,,,,,
DMI: Code contains a hard coded reference to an absolute pathname (DMI_HARDCODED_ABSOLUTE_FILENAME),Dodgy code (STYLE),Yes,Yes but no time,enhanced by multiline,,,,,,,,,,Y,,,,,Y,,Y,
"DMI: Invocation of substring(0), which returns the original value (DMI_USELESS_SUBSTRING)",Dodgy code (STYLE),Yes,Yes but no time,,,,,,,,,,,Y,,,,data flow,Y,,Y,
ST: Write to static field from instance method (ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD),Dodgy code (STYLE),No,No for multi-line,,,,,,,Y,,Y,,,,,,,,,,
DMI: Non serializable object written to ObjectOutput (DMI_NONSERIALIZABLE_OBJECT_WRITTEN),Dodgy code (STYLE),No,No for regex limitation,,,,,,,,,,,Y,,,,inheritance graph,,,,
DB: Method uses the same code for two branches (DB_DUPLICATE_BRANCHES),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
DB: Method uses the same code for two switch clauses (DB_DUPLICATE_SWITCH_CLAUSES),Dodgy code (STYLE),No,No for multi-line,,,,,,,,,,Y,,,,,control flow,,,,
XFB: Method directly allocates a specific implementation of xml interfaces (XFB_XML_FACTORY_BYPASS),Dodgy code (STYLE),Yes,No for multi-line,,,Y,,,Y,,,,,,,,,,Y,Y,,
USM: Method superfluously delegates to parent class method (USM_USELESS_SUBCLASS_METHOD),Dodgy code (STYLE),No,No for multi-line,"only invocations on ""super""",Y,,,,,,,,,,,,,call graph,,,,
USM: Abstract Method is already defined in implemented interface (USM_USELESS_ABSTRACT_METHOD),Dodgy code (STYLE),No,No for regex limitation,,Y,,,,,,,,,,,,,,,,,
CI: Class is final but declares protected field (CI_CONFUSED_INHERITANCE),Dodgy code (STYLE),No,No for multi-line,,,,Y,Y,,,,,,,,,,,,,,
"TQ: Value required to not have type qualifier, but marked as unknown (TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK)",Dodgy code (STYLE),No,No for regex limitation,,,,,,,Y,,,Y,,,Y,,,,,,
"TQ: Value required to have type qualifier, but marked as unknown (TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK)",Dodgy code (STYLE),No,No for regex limitation,,,,,,,Y,,,Y,,,Y,,,,,,
NP: Method relaxes nullness annotation on return value (NP_METHOD_RETURN_RELAXING_ANNOTATION),Dodgy code (STYLE),No,No for regex limitation,,Y,,,,,,,,,,,Y,,,,,,
NP: Method tightens nullness annotation on parameter (NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION),Dodgy code (STYLE),No,No for regex limitation,,Y,,,,,,,,,,,Y,,,,,,