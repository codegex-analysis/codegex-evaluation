{"repo": "superword", "total": 24, "items": [{"type": "IIO_INEFFICIENT_INDEX_OF", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/tools/PdfParser.java", "commit_sha": "", "line_no": 654, "priority": 3, "description": "IIO: Inefficient use of String.indexOf(String)", "line_content": "            while ((index = paragraph.indexOf(\".\", index)) > -1) {\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/extract/HyphenExtractor.java", "commit_sha": "", "line_no": 180, "priority": 1, "description": "Random object created and used only once", "line_content": "        String url = ICIBA + word + \"?renovate=\" + (new Random(System.currentTimeMillis()).nextInt(899999)+100000);\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/tools/WordClassifierForYouDao.java", "commit_sha": "", "line_no": 258, "priority": 1, "description": "Random object created and used only once", "line_content": "        String url = YOUDAO + word + \"&renovate=\" + (new Random(System.currentTimeMillis()).nextInt(899999)+100000);\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/model/Quiz.java", "commit_sha": "", "line_no": 238, "priority": 1, "description": "Random object created and used only once", "line_content": "                Word word = words.get(new Random(System.nanoTime()).nextInt(words.size()));\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/tools/WordClassifierForOxford.java", "commit_sha": "", "line_no": 201, "priority": 1, "description": "Random object created and used only once", "line_content": "        String url = OXFORD + word + \"?renovate=\" + (new Random(System.currentTimeMillis()).nextInt(899999)+100000);\n"}, {"type": "DM_BOXED_PRIMITIVE_FOR_COMPARE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/rule/WordVector.java", "commit_sha": "", "line_no": 151, "priority": 1, "description": "Boxing/unboxing to parse a primitive", "line_content": "            return ((Float)score).compareTo(((Score)o).score);\n"}, {"type": "STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/model/HistoryRecord.java", "commit_sha": "", "line_no": 29, "priority": 2, "description": "simpleDateFormat is a static field of type java.text.DateFormat, which isn't thread safe", "line_content": "    protected static SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n"}, {"type": "STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/model/User.java", "commit_sha": "", "line_no": 29, "priority": 2, "description": "simpleDateFormat is a static field of type java.text.DateFormat, which isn't thread safe", "line_content": "    protected static SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/model/QuizItem.java", "commit_sha": "", "line_no": 77, "priority": 1, "description": "Random object created and used only once", "line_content": "        String selectedDefinition = attrs[new Random(System.nanoTime()).nextInt(attrs.length)].trim();\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/model/QuizItem.java", "commit_sha": "", "line_no": 105, "priority": 1, "description": "Random object created and used only once", "line_content": "            Word word = words.get(new Random(System.nanoTime()).nextInt(words.size()));\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/model/QuizItem.java", "commit_sha": "", "line_no": 128, "priority": 1, "description": "Random object created and used only once", "line_content": "                String candidate = words.get(new Random(System.nanoTime()).nextInt(words.size())).getWord();\n"}, {"type": "IIO_INEFFICIENT_INDEX_OF", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/model/QuizItem.java", "commit_sha": "", "line_no": 86, "priority": 3, "description": "IIO: Inefficient use of String.indexOf(String)", "line_content": "            for (char c : selectedDefinition.substring(selectedDefinition.indexOf(\".\") + 1).toCharArray()) {\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/tools/WordClassifier.java", "commit_sha": "", "line_no": 259, "priority": 1, "description": "Random object created and used only once", "line_content": "        String url = ICIBA + word + \"?renovate=\" + (new Random(System.currentTimeMillis()).nextInt(899999)+100000);\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/tools/WordClassifierForWebster.java", "commit_sha": "", "line_no": 200, "priority": 1, "description": "Random object created and used only once", "line_content": "        String url = WEBSTER + word + \"?renovate=\" + (new Random(System.currentTimeMillis()).nextInt(899999)+100000);\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/extract/ChineseSynonymAntonymExtractor.java", "commit_sha": "", "line_no": 305, "priority": 1, "description": "Random object created and used only once", "line_content": "        int first = new Random().nextInt(254)+1;\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/extract/ChineseSynonymAntonymExtractor.java", "commit_sha": "", "line_no": 308, "priority": 1, "description": "Random object created and used only once", "line_content": "            first = new Random().nextInt(254)+1;\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/extract/ChineseSynonymAntonymExtractor.java", "commit_sha": "", "line_no": 310, "priority": 1, "description": "Random object created and used only once", "line_content": "        int second = new Random().nextInt(254)+1;\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/extract/ChineseSynonymAntonymExtractor.java", "commit_sha": "", "line_no": 313, "priority": 1, "description": "Random object created and used only once", "line_content": "            first = new Random().nextInt(254)+1;\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/extract/ChineseSynonymAntonymExtractor.java", "commit_sha": "", "line_no": 314, "priority": 1, "description": "Random object created and used only once", "line_content": "            second = new Random().nextInt(254)+1;\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/extract/ChineseSynonymAntonymExtractor.java", "commit_sha": "", "line_no": 318, "priority": 1, "description": "Random object created and used only once", "line_content": "            first = new Random().nextInt(254)+1;\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/extract/ChineseSynonymAntonymExtractor.java", "commit_sha": "", "line_no": 319, "priority": 1, "description": "Random object created and used only once", "line_content": "            second = new Random().nextInt(254)+1;\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/extract/ChineseSynonymAntonymExtractor.java", "commit_sha": "", "line_no": 321, "priority": 1, "description": "Random object created and used only once", "line_content": "        int third = new Random().nextInt(254)+1;\n"}, {"type": "DMI_RANDOM_USED_ONLY_ONCE", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/extract/ChineseSynonymAntonymExtractor.java", "commit_sha": "", "line_no": 322, "priority": 1, "description": "Random object created and used only once", "line_content": "        int forth = new Random().nextInt(254)+1;\n"}, {"type": "DM_NUMBER_CTOR", "file_name": "/home/codegex/Documents/workspace/codegex/rbugs_experiments/top100repos/superword/src/main/java/org/apdplat/superword/extract/ChineseSynonymAntonymExtractor.java", "commit_sha": "", "line_no": 360, "priority": 2, "description": "Method invokes inefficient Number constructor; use static valueOf instead", "line_content": "        parseSynonymAntonym(Files.readAllLines(Paths.get(\"src/main/resources/dic.txt\")).stream().sorted((a, b) -> new Integer(a.length()).compareTo(b.length())).collect(Collectors.toList()));\n"}]}