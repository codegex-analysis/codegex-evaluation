[
  {
    "sha": "eb99e38f2f30492adb53041d21fd97922463dc0e",
    "filename": "CHANGELOG.md",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/CHANGELOG.md",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/CHANGELOG.md?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -7,6 +7,10 @@ to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n \n ## [Unreleased]\n \n+### Added\n+\n+- Publishing and sharing SHACL shapes between FDPs\n+\n ## [1.8.0]\n \n ### Added"
  },
  {
    "sha": "f4ca16b421da9fdc9def4b1e3883607240cc2176",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/pom.xml",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/pom.xml",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/pom.xml?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -10,7 +10,7 @@\n     </parent>\r\n     <groupId>nl.dtls</groupId>\r\n     <artifactId>fairdatapoint</artifactId>\r\n-    <version>1.8.0</version>\r\n+    <version>1.9.0-SNAPSHOT</version>\r\n     <packaging>jar</packaging>\r\n \r\n     <name>FairDataPoint</name>\r"
  },
  {
    "sha": "cf755c46dbdfc87a5f8769e1dbf7ea1faf00ebeb",
    "filename": "src/main/java/nl/dtls/fairdatapoint/api/controller/shape/ShapeController.java",
    "status": "modified",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/api/controller/shape/ShapeController.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/api/controller/shape/ShapeController.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/api/controller/shape/ShapeController.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -24,12 +24,14 @@\n \n import nl.dtls.fairdatapoint.api.dto.shape.ShapeChangeDTO;\n import nl.dtls.fairdatapoint.api.dto.shape.ShapeDTO;\n+import nl.dtls.fairdatapoint.api.dto.shape.ShapeRemoteDTO;\n import nl.dtls.fairdatapoint.entity.exception.ResourceNotFoundException;\n import nl.dtls.fairdatapoint.service.shape.ShapeService;\n import org.eclipse.rdf4j.model.Model;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n import org.springframework.web.bind.annotation.*;\n \n import javax.validation.Valid;\n@@ -51,6 +53,27 @@\n         return new ResponseEntity<>(dto, HttpStatus.OK);\n     }\n \n+    @RequestMapping(value = \"/public\", method = RequestMethod.GET)\n+    public ResponseEntity<List<ShapeDTO>> getPublishedShapes() {\n+        List<ShapeDTO> dto = shapeService.getPublishedShapes();\n+        return new ResponseEntity<>(dto, HttpStatus.OK);\n+    }\n+\n+    @PreAuthorize(\"hasRole('ADMIN')\")\n+    @RequestMapping(value = \"/import\", method = RequestMethod.GET)\n+    public ResponseEntity<List<ShapeRemoteDTO>> getImportableShapes(@RequestParam(name = \"from\") String fdpUrl) {\n+        List<ShapeRemoteDTO> dto = shapeService.getRemoteShapes(fdpUrl);\n+        return new ResponseEntity<>(dto, HttpStatus.OK);\n+    }\n+\n+    @PreAuthorize(\"hasRole('ADMIN')\")\n+    @RequestMapping(value = \"/import\", method = RequestMethod.POST)\n+    public ResponseEntity<List<ShapeDTO>> importShapes(@RequestBody @Valid List<ShapeRemoteDTO> reqDtos) {\n+        List<ShapeDTO> dto = shapeService.importShapes(reqDtos);\n+        return new ResponseEntity<>(dto, HttpStatus.OK);\n+    }\n+\n+    @PreAuthorize(\"hasRole('ADMIN')\")\n     @RequestMapping(method = RequestMethod.POST)\n     public ResponseEntity<ShapeDTO> createShape(@RequestBody @Valid ShapeChangeDTO reqDto) {\n         ShapeDTO dto = shapeService.createShape(reqDto);\n@@ -68,6 +91,7 @@\n         }\n     }\n \n+    @PreAuthorize(\"hasRole('ADMIN')\")\n     @RequestMapping(value = \"/{uuid}\", method = RequestMethod.GET, produces = {\"!application/json\"})\n     public ResponseEntity<Model> getShapeContent(@PathVariable final String uuid)\n             throws ResourceNotFoundException {\n@@ -79,6 +103,7 @@\n         }\n     }\n \n+    @PreAuthorize(\"hasRole('ADMIN')\")\n     @RequestMapping(value = \"/{uuid}\", method = RequestMethod.PUT)\n     public ResponseEntity<ShapeDTO> putShape(@PathVariable final String uuid,\n                                              @RequestBody @Valid ShapeChangeDTO reqDto) throws ResourceNotFoundException {\n@@ -90,6 +115,7 @@\n         }\n     }\n \n+    @PreAuthorize(\"hasRole('ADMIN')\")\n     @RequestMapping(value = \"/{uuid}\", method = RequestMethod.DELETE)\n     public ResponseEntity<Void> deleteShape(@PathVariable final String uuid)\n             throws ResourceNotFoundException {"
  },
  {
    "sha": "e92baed495d66cff480cdf6c04e17a6214e9dce3",
    "filename": "src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeChangeDTO.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeChangeDTO.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeChangeDTO.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeChangeDTO.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -28,6 +28,7 @@\n import lombok.Setter;\n \n import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n \n @NoArgsConstructor\n @AllArgsConstructor\n@@ -38,6 +39,9 @@\n     @NotBlank\n     private String name;\n \n+    @NotNull\n+    private Boolean published;\n+\n     private String definition;\n \n }"
  },
  {
    "sha": "0b427a99ac44b56f2c0c19737051311f0e905091",
    "filename": "src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeDTO.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeDTO.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeDTO.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeDTO.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -38,6 +38,8 @@\n \n     private String name;\n \n+    private Boolean published;\n+\n     private ShapeType type;\n \n     private String definition;"
  },
  {
    "sha": "0d0eb3b1ec4b6983c066e2d39ab4a7aa695c68a8",
    "filename": "src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeRemoteDTO.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeRemoteDTO.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeRemoteDTO.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/api/dto/shape/ShapeRemoteDTO.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -0,0 +1,20 @@\n+package nl.dtls.fairdatapoint.api.dto.shape;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@Getter\n+@Setter\n+public class ShapeRemoteDTO {\n+    private String from;\n+\n+    private String uuid;\n+\n+    private String name;\n+\n+    private String definition;\n+}"
  },
  {
    "sha": "51ed9e3aceedcb6fbca17069d87d7f39f236ea4d",
    "filename": "src/main/java/nl/dtls/fairdatapoint/database/mongo/migration/development/shape/data/ShapeFixtures.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/database/mongo/migration/development/shape/data/ShapeFixtures.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/database/mongo/migration/development/shape/data/ShapeFixtures.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/database/mongo/migration/development/shape/data/ShapeFixtures.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -34,6 +34,7 @@ public Shape resourceShape() {\n                 null,\n                 \"6a668323-3936-4b53-8380-a4fd2ed082ee\",\n                 \"Resource\",\n+                false,\n                 ShapeType.INTERNAL,\n                 \"@prefix :         <http://fairdatapoint.org/> .\\n\" +\n                         \"@prefix dash:     <http://datashapes.org/dash#> .\\n\" +\n@@ -107,6 +108,7 @@ public Shape repositoryShape() {\n                 null,\n                 \"a92958ab-a414-47e6-8e17-68ba96ba3a2b\",\n                 \"Repository\",\n+                false,\n                 ShapeType.INTERNAL,\n                 \"@prefix :         <http://fairdatapoint.org/> .\\n\" +\n                         \"@prefix dash:     <http://datashapes.org/dash#> .\\n\" +\n@@ -156,6 +158,7 @@ public Shape catalogShape() {\n                 null,\n                 \"2aa7ba63-d27a-4c0e-bfa6-3a4e250f4660\",\n                 \"Catalog\",\n+                false,\n                 ShapeType.INTERNAL,\n                 \"@prefix :         <http://fairdatapoint.org/> .\\n\" +\n                         \"@prefix dash:     <http://datashapes.org/dash#> .\\n\" +\n@@ -195,6 +198,7 @@ public Shape datasetShape() {\n                 null,\n                 \"866d7fb8-5982-4215-9c7c-18d0ed1bd5f3\",\n                 \"Dataset\",\n+                false,\n                 ShapeType.INTERNAL,\n                 \"@prefix :         <http://fairdatapoint.org/> .\\n\" +\n                         \"@prefix dash:     <http://datashapes.org/dash#> .\\n\" +\n@@ -248,6 +252,7 @@ public Shape distributionShape() {\n                 null,\n                 \"ebacbf83-cd4f-4113-8738-d73c0735b0ab\",\n                 \"Distribution\",\n+                false,\n                 ShapeType.INTERNAL,\n                 \"@prefix :         <http://fairdatapoint.org/> .\\n\" +\n                         \"@prefix dash:     <http://datashapes.org/dash#> .\\n\" +\n@@ -307,6 +312,7 @@ public Shape customShape() {\n                 null,\n                 \"ceba9984-9838-4be2-a2a7-12213016fd96\",\n                 \"Custom Shape\",\n+                false,\n                 ShapeType.CUSTOM,\n                 \"@prefix :         <http://fairdatapoint.org/> .\\n\" +\n                         \"@prefix sh:       <http://www.w3.org/ns/shacl#> .\\n\" +\n@@ -329,6 +335,7 @@ public Shape customShapeEdited() {\n                 null,\n                 customShape().getUuid(),\n                 customShape().getName(),\n+                false,\n                 customShape().getType(),\n                 \"@prefix :         <http://fairdatapoint.org/> .\\n\" +\n                         \"@prefix sh:       <http://www.w3.org/ns/shacl#> .\\n\" +"
  },
  {
    "sha": "7ca740b21b725a37c4c83cb29d30ab178a2e6b0c",
    "filename": "src/main/java/nl/dtls/fairdatapoint/database/mongo/migration/production/Migration_0006_ShapesSharing.java",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/database/mongo/migration/production/Migration_0006_ShapesSharing.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/database/mongo/migration/production/Migration_0006_ShapesSharing.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/database/mongo/migration/production/Migration_0006_ShapesSharing.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -0,0 +1,51 @@\n+/**\n+ * The MIT License\n+ * Copyright © 2017 DTL\n+ * <p>\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ * <p>\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ * <p>\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package nl.dtls.fairdatapoint.database.mongo.migration.production;\n+\n+import com.github.mongobee.changeset.ChangeLog;\n+import com.github.mongobee.changeset.ChangeSet;\n+import com.mongodb.client.MongoCollection;\n+import com.mongodb.client.MongoDatabase;\n+import com.mongodb.client.model.Filters;\n+import com.mongodb.client.model.Updates;\n+import nl.dtls.fairdatapoint.Profiles;\n+import org.bson.Document;\n+import org.springframework.context.annotation.Profile;\n+\n+@ChangeLog(order = \"0006\")\n+@Profile(Profiles.PRODUCTION)\n+public class Migration_0006_ShapesSharing {\n+\n+    @ChangeSet(order = \"0006\", id = \"Migration_0005_ShapesSharing\", author = \"migrationBot\")\n+    public void run(MongoDatabase db) {\n+        addShapeDefinitions(db);\n+    }\n+\n+    private void addShapeDefinitions(MongoDatabase db) {\n+        MongoCollection<Document> shapeCol = db.getCollection(\"shape\");\n+        shapeCol.updateMany(\n+                Filters.exists(\"published\", false),\n+                Updates.set(\"published\", false)\n+        );\n+    }\n+}"
  },
  {
    "sha": "3bf428f92d7e66fd1ca745041bfb8e170b23cb7c",
    "filename": "src/main/java/nl/dtls/fairdatapoint/database/mongo/repository/ShapeRepository.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/database/mongo/repository/ShapeRepository.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/database/mongo/repository/ShapeRepository.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/database/mongo/repository/ShapeRepository.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -25,10 +25,13 @@\n import nl.dtls.fairdatapoint.entity.shape.Shape;\n import org.springframework.data.mongodb.repository.MongoRepository;\n \n+import java.util.List;\n import java.util.Optional;\n \n public interface ShapeRepository extends MongoRepository<Shape, String> {\n \n     Optional<Shape> findByUuid(String uuid);\n \n+    List<Shape> findAllByPublishedIsTrue();\n+\n }"
  },
  {
    "sha": "a4099d42a675de7ebcbc514580d1409cfb4139ea",
    "filename": "src/main/java/nl/dtls/fairdatapoint/entity/exception/CommunicationException.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/entity/exception/CommunicationException.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/entity/exception/CommunicationException.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/entity/exception/CommunicationException.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -0,0 +1,15 @@\n+package nl.dtls.fairdatapoint.entity.exception;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+\n+@ResponseStatus(value = HttpStatus.BAD_REQUEST)\n+@Getter\n+@AllArgsConstructor\n+public class CommunicationException extends RuntimeException {\n+\n+    private final String message;\n+\n+}"
  },
  {
    "sha": "044fd612c6686e977ee5c8f0a4f4c3c647e302e9",
    "filename": "src/main/java/nl/dtls/fairdatapoint/entity/shape/Shape.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/entity/shape/Shape.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/entity/shape/Shape.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/entity/shape/Shape.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -42,6 +42,8 @@\n \n     private String name;\n \n+    private Boolean published;\n+\n     private ShapeType type;\n \n     private String definition;"
  },
  {
    "sha": "c305012e14d986eeeaee6ed293146753c77a9370",
    "filename": "src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeMapper.java",
    "status": "modified",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeMapper.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeMapper.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeMapper.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -24,6 +24,7 @@\n \n import nl.dtls.fairdatapoint.api.dto.shape.ShapeChangeDTO;\n import nl.dtls.fairdatapoint.api.dto.shape.ShapeDTO;\n+import nl.dtls.fairdatapoint.api.dto.shape.ShapeRemoteDTO;\n import nl.dtls.fairdatapoint.entity.shape.Shape;\n import nl.dtls.fairdatapoint.entity.shape.ShapeType;\n import org.springframework.stereotype.Service;\n@@ -36,6 +37,7 @@ public ShapeDTO toDTO(Shape shape) {\n                 new ShapeDTO(\n                         shape.getUuid(),\n                         shape.getName(),\n+                        shape.getPublished(),\n                         shape.getType(),\n                         shape.getDefinition());\n     }\n@@ -46,6 +48,7 @@ public Shape fromChangeDTO(ShapeChangeDTO dto, String uuid) {\n                         null,\n                         uuid,\n                         dto.getName(),\n+                        dto.getPublished(),\n                         ShapeType.CUSTOM,\n                         dto.getDefinition());\n \n@@ -56,7 +59,27 @@ public Shape fromChangeDTO(ShapeChangeDTO dto, Shape shape) {\n                 shape\n                         .toBuilder()\n                         .name(dto.getName())\n+                        .published(dto.getPublished())\n                         .definition(dto.getDefinition())\n                         .build();\n     }\n+\n+    public ShapeRemoteDTO toRemoteDTO(String fdpUrl, ShapeDTO shape) {\n+        return\n+                new ShapeRemoteDTO(\n+                        fdpUrl,\n+                        shape.getUuid(),\n+                        shape.getName(),\n+                        shape.getDefinition()\n+                );\n+    }\n+\n+    public ShapeChangeDTO fromRemoteDTO(ShapeRemoteDTO shape) {\n+        return\n+                new ShapeChangeDTO(\n+                        shape.getName(),\n+                        false,\n+                        shape.getDefinition()\n+                );\n+    }\n }"
  },
  {
    "sha": "f4064ff0f908fddc1d32b3febe1a61cd8bceeb50",
    "filename": "src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeRetrievalUtils.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeRetrievalUtils.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeRetrievalUtils.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeRetrievalUtils.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -0,0 +1,42 @@\n+package nl.dtls.fairdatapoint.service.shape;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import nl.dtls.fairdatapoint.api.dto.shape.ShapeDTO;\n+import org.springframework.http.HttpHeaders;\n+\n+import java.net.URI;\n+import java.net.http.HttpClient;\n+import java.net.http.HttpRequest;\n+import java.net.http.HttpResponse;\n+import java.time.Duration;\n+import java.util.List;\n+import java.util.Optional;\n+\n+public class ShapeRetrievalUtils {\n+\n+    private static final HttpClient client = HttpClient.newBuilder()\n+            .version(HttpClient.Version.HTTP_2)\n+            .followRedirects(HttpClient.Redirect.ALWAYS)\n+            .connectTimeout(Duration.ofMinutes(1))\n+            .build();\n+\n+    private static final ObjectMapper objectMapper = new ObjectMapper();\n+\n+    private static final TypeReference<List<ShapeDTO>> responseType = new TypeReference<>() {\n+    };\n+\n+    public static Optional<List<ShapeDTO>> retrievePublishedShapes(String fdpUrl) {\n+        try {\n+            HttpRequest request = HttpRequest.newBuilder()\n+                    .uri(URI.create(fdpUrl.replaceAll(\"/$\", \"\") + \"/shapes/public\"))\n+                    .header(HttpHeaders.ACCEPT, \"application/json\")\n+                    .GET().build();\n+            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());\n+            List<ShapeDTO> parsedBody = objectMapper.readValue(response.body(), responseType);\n+            return Optional.of(parsedBody);\n+        } catch (Exception e) {\n+            return Optional.empty();\n+        }\n+    }\n+}"
  },
  {
    "sha": "c6041de065dc8a492c0d17ed06201d765e9811df",
    "filename": "src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeService.java",
    "status": "modified",
    "additions": 33,
    "deletions": 1,
    "changes": 34,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeService.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeService.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/main/java/nl/dtls/fairdatapoint/service/shape/ShapeService.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -24,7 +24,9 @@\n \n import nl.dtls.fairdatapoint.api.dto.shape.ShapeChangeDTO;\n import nl.dtls.fairdatapoint.api.dto.shape.ShapeDTO;\n+import nl.dtls.fairdatapoint.api.dto.shape.ShapeRemoteDTO;\n import nl.dtls.fairdatapoint.database.mongo.repository.ShapeRepository;\n+import nl.dtls.fairdatapoint.entity.exception.CommunicationException;\n import nl.dtls.fairdatapoint.entity.exception.ValidationException;\n import nl.dtls.fairdatapoint.entity.shape.Shape;\n import nl.dtls.fairdatapoint.entity.shape.ShapeType;\n@@ -39,6 +41,7 @@\n import java.util.List;\n import java.util.Optional;\n import java.util.UUID;\n+import java.util.stream.Collectors;\n \n import static java.util.Optional.empty;\n import static java.util.Optional.of;\n@@ -65,6 +68,15 @@\n                         .collect(toList());\n     }\n \n+    public List<ShapeDTO> getPublishedShapes() {\n+        List<Shape> shapes = shapeRepository.findAllByPublishedIsTrue();\n+        return\n+                shapes\n+                        .stream()\n+                        .map(shapeMapper::toDTO)\n+                        .collect(toList());\n+    }\n+\n     public Optional<ShapeDTO> getShapeByUuid(String uuid) {\n         return\n                 shapeRepository\n@@ -125,4 +137,24 @@ public Model getShaclFromShapes() {\n         return shacl;\n     }\n \n-}\n\\ No newline at end of file\n+    public List<ShapeRemoteDTO> getRemoteShapes(String fdpUrl) {\n+        Optional<List<ShapeDTO>> shapes = ShapeRetrievalUtils.retrievePublishedShapes(fdpUrl);\n+        if (shapes.isEmpty()) {\n+            throw new CommunicationException(\"Cannot retrieve shapes from \" + fdpUrl);\n+        }\n+        return shapes\n+                .get()\n+                .stream()\n+                .map(s -> shapeMapper.toRemoteDTO(fdpUrl, s))\n+                .collect(Collectors.toList());\n+    }\n+\n+    public List<ShapeDTO> importShapes(List<ShapeRemoteDTO> reqDtos) {\n+        return\n+                reqDtos\n+                        .stream()\n+                        .map(s -> shapeMapper.fromRemoteDTO(s))\n+                        .map(this::createShape)\n+                        .collect(Collectors.toList());\n+    }\n+}"
  },
  {
    "sha": "c83780962f708732e8cd6ab86d993103fada8a07",
    "filename": "src/test/java/nl/dtls/fairdatapoint/acceptance/shape/Detail_PUT.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/test/java/nl/dtls/fairdatapoint/acceptance/shape/Detail_PUT.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/test/java/nl/dtls/fairdatapoint/acceptance/shape/Detail_PUT.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/test/java/nl/dtls/fairdatapoint/acceptance/shape/Detail_PUT.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -53,7 +53,7 @@ private URI url(String uuid) {\n     }\n \n     private ShapeChangeDTO reqDto(Shape shape) {\n-        return new ShapeChangeDTO(format(\"EDITED: %s\", shape.getName()), shape.getDefinition());\n+        return new ShapeChangeDTO(format(\"EDITED: %s\", shape.getName()), false, shape.getDefinition());\n     }\n \n     @Autowired"
  },
  {
    "sha": "4da914265c8c9044de72435974b404b3ce96238c",
    "filename": "src/test/java/nl/dtls/fairdatapoint/acceptance/shape/List_POST.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/blob/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/test/java/nl/dtls/fairdatapoint/acceptance/shape/List_POST.java",
    "raw_url": "https://github.com/FAIRDataTeam/FAIRDataPoint/raw/2b4261b4f101ee0be3503c1c6ac353fb938b5155/src/test/java/nl/dtls/fairdatapoint/acceptance/shape/List_POST.java",
    "contents_url": "https://api.github.com/repos/FAIRDataTeam/FAIRDataPoint/contents/src/test/java/nl/dtls/fairdatapoint/acceptance/shape/List_POST.java?ref=2b4261b4f101ee0be3503c1c6ac353fb938b5155",
    "patch": "@@ -53,7 +53,7 @@ private URI url() {\n     }\n \n     private ShapeChangeDTO reqDto(Shape shape) {\n-        return new ShapeChangeDTO(shape.getName(), shape.getDefinition());\n+        return new ShapeChangeDTO(shape.getName(), false, shape.getDefinition());\n     }\n \n     @Test"
  }
]
