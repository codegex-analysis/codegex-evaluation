[
  {
    "sha": "096cf989a61531fded57a43f93e984afd1aec241",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 9,
    "deletions": 2,
    "changes": 11,
    "blob_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/blob/aa61c8713cb68aa8085a6a8f834693883ac61d17/pom.xml",
    "raw_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/raw/aa61c8713cb68aa8085a6a8f834693883ac61d17/pom.xml",
    "contents_url": "https://api.github.com/repos/gasparbarancelli/spring-boot-source-generator/contents/pom.xml?ref=aa61c8713cb68aa8085a6a8f834693883ac61d17",
    "patch": "@@ -10,16 +10,23 @@\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-compiler-plugin</artifactId>\n+        <version>3.8.1</version>\n         <configuration>\n-          <source>8</source>\n-          <target>8</target>\n+          <source>9</source>\n+          <target>9</target>\n         </configuration>\n       </plugin>\n     </plugins>\n   </build>\n   <name>spring-boot-source-generator Maven Mojo</name>\n   <url>http://maven.apache.org</url>\n   <dependencies>\n+    <dependency>\n+      <groupId>com.google.code.gson</groupId>\n+      <artifactId>gson</artifactId>\n+      <version>2.8.6</version>\n+      <scope>compile</scope>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.maven</groupId>\n       <artifactId>maven-plugin-api</artifactId>"
  },
  {
    "sha": "a21228c1a2d4a7d704c65debcdd23c065774f2c6",
    "filename": "src/main/java/org/example/adapters/TemplateAdapter.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/blob/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/adapters/TemplateAdapter.java",
    "raw_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/raw/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/adapters/TemplateAdapter.java",
    "contents_url": "https://api.github.com/repos/gasparbarancelli/spring-boot-source-generator/contents/src/main/java/org/example/adapters/TemplateAdapter.java?ref=aa61c8713cb68aa8085a6a8f834693883ac61d17",
    "patch": "@@ -0,0 +1,31 @@\n+package org.example.adapters;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.stream.JsonReader;\n+import org.example.data.Template;\n+\n+import java.io.FileNotFoundException;\n+import java.io.FileReader;\n+\n+/***\n+ * Class to handle the template search\n+ */\n+public class TemplateAdapter {\n+\n+    /***\n+     *\n+     * @param templatePath for fetching the correct file\n+     * @return Template\n+     * @throws RuntimeException if file is not found\n+     */\n+    public static Template findTemplate(String templatePath) {\n+        try {\n+            Gson gson = new Gson();\n+            JsonReader reader = new JsonReader(new FileReader(templatePath));\n+            return gson.fromJson(reader, Template.class);\n+        } catch (FileNotFoundException e) {\n+            e.printStackTrace();\n+            throw new RuntimeException(\"Template not found\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "50227c1cf333a8c919eb40ce4a575eb1ed09d700",
    "filename": "src/main/java/org/example/data/Dependency.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/blob/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/data/Dependency.java",
    "raw_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/raw/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/data/Dependency.java",
    "contents_url": "https://api.github.com/repos/gasparbarancelli/spring-boot-source-generator/contents/src/main/java/org/example/data/Dependency.java?ref=aa61c8713cb68aa8085a6a8f834693883ac61d17",
    "patch": "@@ -0,0 +1,31 @@\n+package org.example.data;\n+\n+/***\n+ * Class that contains all the dependency information to be added in the project\n+ */\n+public class Dependency {\n+\n+    private String groupId;\n+    private String artifactId;\n+    private String scope;\n+\n+    public String getGroupId() {\n+        return groupId;\n+    }\n+\n+    public String getArtifactId() {\n+        return artifactId;\n+    }\n+\n+    public String getScope() {\n+        return scope;\n+    }\n+\n+    public org.apache.maven.model.Dependency toMavenDependency() {\n+        final org.apache.maven.model.Dependency dependency = new org.apache.maven.model.Dependency();\n+        dependency.setGroupId(this.groupId);\n+        dependency.setScope(this.scope);\n+        dependency.setArtifactId(this.artifactId);\n+        return dependency;\n+    }\n+}"
  },
  {
    "sha": "f222cf2774d2d3681121e4a8103143ac992dcf70",
    "filename": "src/main/java/org/example/data/Property.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/blob/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/data/Property.java",
    "raw_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/raw/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/data/Property.java",
    "contents_url": "https://api.github.com/repos/gasparbarancelli/spring-boot-source-generator/contents/src/main/java/org/example/data/Property.java?ref=aa61c8713cb68aa8085a6a8f834693883ac61d17",
    "patch": "@@ -0,0 +1,22 @@\n+package org.example.data;\n+\n+/***\n+ * Class that contains all the application.properties key value information\n+ */\n+public class Property {\n+    private String key;\n+    private String defaultValue;\n+\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    public String getDefaultValue() {\n+        return defaultValue;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return key + \"=\" + defaultValue;\n+    }\n+}"
  },
  {
    "sha": "6cf8e51a8569f5163c0fc854e245283f8cab9739",
    "filename": "src/main/java/org/example/data/Template.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/blob/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/data/Template.java",
    "raw_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/raw/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/data/Template.java",
    "contents_url": "https://api.github.com/repos/gasparbarancelli/spring-boot-source-generator/contents/src/main/java/org/example/data/Template.java?ref=aa61c8713cb68aa8085a6a8f834693883ac61d17",
    "patch": "@@ -0,0 +1,25 @@\n+package org.example.data;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Class that parse the template file in the resource\n+ */\n+public class Template {\n+    private List<Dependency> dependencyList;\n+    private List<Property> propertyList;\n+\n+    public List<org.apache.maven.model.Dependency> getMavenDependencyList() {\n+        final List<org.apache.maven.model.Dependency> mavenDependencies = new ArrayList<>();\n+        for (Dependency dependency : dependencyList) {\n+            final org.apache.maven.model.Dependency mavenDependency = dependency.toMavenDependency();\n+            mavenDependencies.add(mavenDependency);\n+        }\n+        return mavenDependencies;\n+    }\n+\n+    public List<Property> getPropertyList() {\n+        return propertyList;\n+    }\n+}"
  },
  {
    "sha": "86f3a2202081ce80a07d387f90764e6a9af64999",
    "filename": "src/main/java/org/example/mojos/CommandHelperMojo.java",
    "status": "modified",
    "additions": 3,
    "deletions": 6,
    "changes": 9,
    "blob_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/blob/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/mojos/CommandHelperMojo.java",
    "raw_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/raw/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/mojos/CommandHelperMojo.java",
    "contents_url": "https://api.github.com/repos/gasparbarancelli/spring-boot-source-generator/contents/src/main/java/org/example/mojos/CommandHelperMojo.java?ref=aa61c8713cb68aa8085a6a8f834693883ac61d17",
    "patch": "@@ -3,16 +3,13 @@\n import org.apache.maven.plugin.AbstractMojo;\n import org.apache.maven.plugins.annotations.LifecyclePhase;\n import org.apache.maven.plugins.annotations.Mojo;\n-import org.example.services.CommandService;\n-import org.example.services.CommandServiceImpl;\n+import org.example.useCases.commands.CommandsListing;\n \n @Mojo(name = \"list-commands\", defaultPhase = LifecyclePhase.COMPILE)\n public class CommandHelperMojo extends AbstractMojo {\n \n-    private CommandService commandService = new CommandServiceImpl();\n-\n     public void execute() {\n-        final String allCommands = commandService.listAllCommands();\n-        getLog().info(allCommands);\n+        final CommandsListing commands = new CommandsListing();\n+        getLog().info(commands.listAllCommands());\n     }\n }"
  },
  {
    "sha": "2b0d119ae9d7a6101d7f59e2542867da252ac53e",
    "filename": "src/main/java/org/example/mojos/H2Mojo.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/blob/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/mojos/H2Mojo.java",
    "raw_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/raw/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/mojos/H2Mojo.java",
    "contents_url": "https://api.github.com/repos/gasparbarancelli/spring-boot-source-generator/contents/src/main/java/org/example/mojos/H2Mojo.java?ref=aa61c8713cb68aa8085a6a8f834693883ac61d17",
    "patch": "@@ -0,0 +1,21 @@\n+package org.example.mojos;\n+\n+import org.apache.maven.plugin.AbstractMojo;\n+import org.apache.maven.plugins.annotations.LifecyclePhase;\n+import org.apache.maven.plugins.annotations.Mojo;\n+import org.apache.maven.plugins.annotations.Parameter;\n+import org.apache.maven.project.MavenProject;\n+import org.example.useCases.h2.H2Config;\n+\n+@Mojo(name = \"config-h2\", defaultPhase = LifecyclePhase.COMPILE)\n+public class H2Mojo extends AbstractMojo {\n+\n+    @Parameter(defaultValue = \"${project}\", readonly = true, required = true)\n+    private MavenProject mavenProject;\n+\n+    @Override\n+    public void execute() {\n+        final H2Config h2Config = new H2Config(getLog(), mavenProject);\n+        h2Config.config();\n+    }\n+}"
  },
  {
    "sha": "df317f0479d92e04575851b390e6bc0d9fdabf61",
    "filename": "src/main/java/org/example/services/CommandService.java",
    "status": "removed",
    "additions": 0,
    "deletions": 5,
    "changes": 5,
    "blob_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/blob/a86709a2591ce305273f5082fdb43160b7e001b2/src/main/java/org/example/services/CommandService.java",
    "raw_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/raw/a86709a2591ce305273f5082fdb43160b7e001b2/src/main/java/org/example/services/CommandService.java",
    "contents_url": "https://api.github.com/repos/gasparbarancelli/spring-boot-source-generator/contents/src/main/java/org/example/services/CommandService.java?ref=a86709a2591ce305273f5082fdb43160b7e001b2",
    "patch": "@@ -1,5 +0,0 @@\n-package org.example.services;\n-\n-public interface CommandService {\n-    String listAllCommands();\n-}"
  },
  {
    "sha": "87c403f7246e64f1ba57566ed2a20d9003373711",
    "filename": "src/main/java/org/example/useCases/commands/CommandsListing.java",
    "status": "renamed",
    "additions": 6,
    "deletions": 3,
    "changes": 9,
    "blob_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/blob/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/useCases/commands/CommandsListing.java",
    "raw_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/raw/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/useCases/commands/CommandsListing.java",
    "contents_url": "https://api.github.com/repos/gasparbarancelli/spring-boot-source-generator/contents/src/main/java/org/example/useCases/commands/CommandsListing.java?ref=aa61c8713cb68aa8085a6a8f834693883ac61d17",
    "patch": "@@ -1,13 +1,16 @@\n-package org.example.services;\n+package org.example.useCases.commands;\n \n-public class CommandServiceImpl implements CommandService {\n+/***\n+ * This class will be used for listing the possible commands\n+ */\n+public class CommandsListing {\n \n-    @Override\n     public String listAllCommands() {\n         return getTemplateCommandHelper(\"help\", \"list all the possible commands\");\n     }\n \n     private String getTemplateCommandHelper(final String command, final String description) {\n         return String.format(\"%s      %s\", command, description);\n     }\n+\n }",
    "previous_filename": "src/main/java/org/example/services/CommandServiceImpl.java"
  },
  {
    "sha": "f5e128c1ae19044d9b31caf9690fada3aaeeb801",
    "filename": "src/main/java/org/example/useCases/h2/H2Config.java",
    "status": "added",
    "additions": 91,
    "deletions": 0,
    "changes": 91,
    "blob_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/blob/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/useCases/h2/H2Config.java",
    "raw_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/raw/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/java/org/example/useCases/h2/H2Config.java",
    "contents_url": "https://api.github.com/repos/gasparbarancelli/spring-boot-source-generator/contents/src/main/java/org/example/useCases/h2/H2Config.java?ref=aa61c8713cb68aa8085a6a8f834693883ac61d17",
    "patch": "@@ -0,0 +1,91 @@\n+package org.example.useCases.h2;\n+\n+import org.apache.maven.model.Dependency;\n+import org.apache.maven.model.Model;\n+import org.apache.maven.plugin.logging.Log;\n+import org.apache.maven.project.MavenProject;\n+import org.example.adapters.TemplateAdapter;\n+import org.example.data.Property;\n+import org.example.data.Template;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.net.URI;\n+import java.net.URL;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/***\n+ * This class perform all the actions necessary to config h2 database\n+ */\n+public class H2Config {\n+\n+    private static final String DEFAULT_APPLICATION_PROPERTIES_PATH = \"application.properties\";\n+    private static final String H2_TEMPLATE_PATH = \"/templates/spring-boot/databases/h2.json\";\n+\n+    private final Log log;\n+    private final MavenProject mavenProject;\n+\n+    public H2Config(final Log log, final MavenProject mavenProject) {\n+        this.log = log;\n+        this.mavenProject = mavenProject;\n+    }\n+\n+    public void config() {\n+        this.log.info(\"Configuring H2 in default mode\");\n+\n+        final Template template = TemplateAdapter.findTemplate(H2_TEMPLATE_PATH);\n+        this.addDependencies(template);\n+\n+        final boolean fileSuccessfullyUpdated = this.addApplicationPropertiesConfigs(template.getPropertyList());\n+        if (!fileSuccessfullyUpdated) {\n+            this.log.info(\"An error occurred trying to update your application.properties\");\n+            return;\n+        }\n+\n+        this.log.info(\"Your h2 is correctly configured and ready to use\");\n+    }\n+\n+    /***\n+     * This method will basically add all the necessary dependencies to the project\n+     * @param template that contains all the dependencies\n+     */\n+    private void addDependencies(final Template template) {\n+        this.log.info(\"Adding dependencies\");\n+\n+        final List<Dependency> mavenDependencyList = template.getMavenDependencyList();\n+\n+        final Model model = this.mavenProject.getModel();\n+        for (Dependency dependency : mavenDependencyList) {\n+            model.addDependency(dependency);\n+        }\n+    }\n+\n+    /***\n+     * This method will write all the needed configurations in the application.properties file\n+     * @param propertyList contains all the properties necessary to update application.properties\n+     */\n+    private boolean addApplicationPropertiesConfigs(final List<Property> propertyList) {\n+        final ClassLoader classLoader = this.getClass().getClassLoader();\n+        final URL resource = classLoader.getResource(H2Config.DEFAULT_APPLICATION_PROPERTIES_PATH);\n+        try {\n+            if (Objects.isNull(resource)) {\n+                this.log.info(\"Application property file not found\");\n+                return false;\n+            }\n+\n+            final URI uri = resource.toURI();\n+            final File applicationProperties = new File(uri);\n+            final FileWriter fileWriter = new FileWriter(applicationProperties);\n+\n+            this.log.info(\"Writing application properties configs\");\n+            for (Property property : propertyList) {\n+                fileWriter.append(property.toString()).append(\"\\n\");\n+            }\n+\n+        } catch (Exception exception) {\n+            return false;\n+        }\n+        return true;\n+    }\n+}"
  },
  {
    "sha": "b6f10bf5defd3c797ec5e82f9dd60e4291820f97",
    "filename": "src/main/resources/templates/spring-boot/databases/h2/h2.json",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/blob/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/resources/templates/spring-boot/databases/h2/h2.json",
    "raw_url": "https://github.com/gasparbarancelli/spring-boot-source-generator/raw/aa61c8713cb68aa8085a6a8f834693883ac61d17/src/main/resources/templates/spring-boot/databases/h2/h2.json",
    "contents_url": "https://api.github.com/repos/gasparbarancelli/spring-boot-source-generator/contents/src/main/resources/templates/spring-boot/databases/h2/h2.json?ref=aa61c8713cb68aa8085a6a8f834693883ac61d17",
    "patch": "@@ -0,0 +1,47 @@\n+{\n+  \"dependencies\": [\n+    {\n+      \"groupId\": \"org.springframework.boot\",\n+      \"artifactId\": \"spring-boot-starter-data-jpa\"\n+    },\n+    {\n+      \"groupId\": \"com.h2database\",\n+      \"artifactId\": \"h2\",\n+      \"scope\": \"runtime\"\n+    }\n+  ],\n+  \"properties\": [\n+    {\n+      \"key\": \"spring.datasource.url\",\n+      \"defaultValue\": \"jdbc:h2:file:./data/exemplo\"\n+    },\n+    {\n+      \"key\": \"spring.datasource.driverClassName\",\n+      \"defaultValue\": \"org.h2.Driver\"\n+    },\n+    {\n+      \"key\": \"spring.datasource.username\",\n+      \"defaultValue\": \"sa\"\n+    },\n+    {\n+      \"key\": \"spring.datasource.password\",\n+      \"defaultValue\": \"password\"\n+    },\n+    {\n+      \"key\": \"spring.h2.console.enabled\",\n+      \"defaultValue\": \"true\"\n+    },\n+    {\n+      \"key\": \"spring.h2.console.path\",\n+      \"defaultValue\": \"/h2-console\"\n+    },\n+    {\n+      \"key\": \"spring.jpa.database-platform\",\n+      \"defaultValue\": \"org.hibernate.dialect.H2Dialect\"\n+    },\n+    {\n+      \"key\": \"spring.jpa.hibernate.ddl-auto\",\n+      \"defaultValue\": \"update\"\n+    }\n+  ]\n+}"
  }
]
