[
  {
    "sha": "4c0a947205a298e28d7df0f09e619feaa5b66059",
    "filename": "hw11/pom.xml",
    "status": "added",
    "additions": 101,
    "deletions": 0,
    "changes": 101,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/pom.xml",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/pom.xml",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/pom.xml?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,101 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.4.0</version>\n+        <relativePath/>\n+    </parent>\n+\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>hw11</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+    <description>hw 11. WebFlux</description>\n+\n+    <properties>\n+        <maven.compiler.source>11</maven.compiler.source>\n+        <maven.compiler.target>11</maven.compiler.target>\n+    </properties>\n+\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-thymeleaf</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.webjars</groupId>\n+            <artifactId>jquery</artifactId>\n+            <version>3.3.1</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-webflux</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-data-mongodb</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>de.flapdoodle.embed</groupId>\n+            <artifactId>de.flapdoodle.embed.mongo</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.github.mongobee</groupId>\n+            <artifactId>mongobee</artifactId>\n+            <version>0.13</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-configuration-processor</artifactId>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.fasterxml.jackson.core</groupId>\n+            <artifactId>jackson-databind</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-devtools</artifactId>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.github.cloudyrock.mongock</groupId>\n+            <artifactId>mongock-spring-v5</artifactId>\n+            <version>4.1.14</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.github.cloudyrock.mongock</groupId>\n+            <artifactId>mongodb-springdata-v3-driver</artifactId>\n+            <version>4.1.14</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.github.cloudyrock.mongock</groupId>\n+            <artifactId>mongodb-springdata-v3-driver</artifactId>\n+            <version>4.1.14</version>\n+            <scope>compile</scope>\n+        </dependency>\n+    </dependencies>\n+\n+</project>"
  },
  {
    "sha": "a3df65fa6f00537ec54b8129459f22fe87cc10fe",
    "filename": "hw11/src/main/java/ru/otus/spring/Main.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/Main.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/Main.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/Main.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,17 @@\n+package ru.otus.spring;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+import java.io.IOException;\n+\n+\n+@SpringBootApplication\n+public class Main {\n+\n+    public static void main(String[] args) throws IOException {\n+\n+        SpringApplication.run(Main.class, args);\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "05422d52e0184bc854cd2752bc743bb14dd54f60",
    "filename": "hw11/src/main/java/ru/otus/spring/config/ObjectMapperConfig.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/config/ObjectMapperConfig.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/config/ObjectMapperConfig.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/config/ObjectMapperConfig.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.otus.spring.config;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude.Include;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.fasterxml.jackson.databind.SerializationFeature;\n+\n+@Configuration\n+public class ObjectMapperConfig {\n+\n+    @Bean\n+    public ObjectMapper objectMapper() {\n+        ObjectMapper mapper = new ObjectMapper();\n+        mapper.configure(SerializationFeature.INDENT_OUTPUT, true);\n+        mapper.setSerializationInclusion(Include.NON_NULL);\n+        return mapper;\n+    }\n+}"
  },
  {
    "sha": "b775570be8cfb5f5abb2627eb8143f0a9b20427a",
    "filename": "hw11/src/main/java/ru/otus/spring/domain/Author.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/domain/Author.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/domain/Author.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/domain/Author.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,35 @@\n+package ru.otus.spring.domain;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import lombok.*;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.mongodb.core.mapping.DBRef;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+import org.springframework.data.mongodb.core.mapping.Field;\n+\n+import java.util.Set;\n+\n+@Data\n+@Builder\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Document(collection = \"authors\")\n+public class Author {\n+\n+    @Id\n+    private String id;\n+    \n+    @Field(\"lastname\")\n+    private String lastname;\n+    \n+    @Field(\"firstname\")\n+    private String firstname;\n+    \n+    @Field(\"middlename\")\n+    private String middlename;\n+    \n+    @JsonIgnore\n+    @EqualsAndHashCode.Exclude\n+    @DBRef\n+    private Set<Book> books;\n+}"
  },
  {
    "sha": "b484be0375dc4d7ec4f37261d1f5a0b2e4b56818",
    "filename": "hw11/src/main/java/ru/otus/spring/domain/Book.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/domain/Book.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/domain/Book.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/domain/Book.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,36 @@\n+package ru.otus.spring.domain;\n+\n+import lombok.*;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.mongodb.core.mapping.DBRef;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+import java.util.ArrayList;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+@Data\n+@EqualsAndHashCode(of = {\"id\"})\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@Document(collection = \"book\")\n+public class Book {\n+    @Id\n+    private String id;\n+\n+    private String name;\n+\n+    @NonNull\n+    @DBRef\n+    private Set<Author> author = new HashSet<>();\n+\n+    @NonNull\n+    @DBRef\n+    private Set<Genre> genre = new HashSet<>();\n+\n+\n+    public Book(String name) {\n+        this.name = name;\n+    }\n+}"
  },
  {
    "sha": "be5ed6f6fa5c955d98fa5938908c2ca5f33a062d",
    "filename": "hw11/src/main/java/ru/otus/spring/domain/Comment.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/domain/Comment.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/domain/Comment.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/domain/Comment.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,27 @@\n+package ru.otus.spring.domain;\n+\n+import lombok.*;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+import java.time.Instant;\n+import java.util.UUID;\n+\n+@Data\n+@EqualsAndHashCode(of = \"uuid\")\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@Document(collection = \"comment\")\n+public class Comment {\n+    private UUID uuid;\n+    @NonNull\n+    private String text;\n+\n+    @NonNull\n+    private Instant timestamp;\n+\n+    public Comment(String text, Instant timestamp) {\n+        this.uuid = UUID.randomUUID();\n+        this.text = text;\n+        this.timestamp = timestamp;\n+    }\n+}"
  },
  {
    "sha": "806d1b9af2d08a39fd078ac3305f518436d525f8",
    "filename": "hw11/src/main/java/ru/otus/spring/domain/Genre.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/domain/Genre.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/domain/Genre.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/domain/Genre.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,21 @@\n+package ru.otus.spring.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@Document(collection = \"genres\")\n+public class Genre {\n+    @Id\n+    private String id;\n+    private String name;\n+\n+    public Genre(String name) {\n+        this.name = name;\n+    }\n+}"
  },
  {
    "sha": "8df297be6dd969a957379994a552e27dcfa8fb05",
    "filename": "hw11/src/main/java/ru/otus/spring/exception/AuthorNotFoundException.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/exception/AuthorNotFoundException.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/exception/AuthorNotFoundException.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/exception/AuthorNotFoundException.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.otus.spring.exception;\n+\n+public class AuthorNotFoundException extends OtusLibraryException {\n+\n+    private static final long serialVersionUID = 2408210704070684240L;\n+\n+    public AuthorNotFoundException(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+\n+    public AuthorNotFoundException(String message) {\n+        super(message);\n+    }\n+}"
  },
  {
    "sha": "890fd37b7cfe74f2297cf0a28ff7f8ac40f20a48",
    "filename": "hw11/src/main/java/ru/otus/spring/exception/OtusLibraryException.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/exception/OtusLibraryException.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/exception/OtusLibraryException.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/exception/OtusLibraryException.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.otus.spring.exception;\n+\n+public class OtusLibraryException extends RuntimeException {\n+\n+    private static final long serialVersionUID = -1009903067189947331L;\n+\n+    public OtusLibraryException(String message) {\n+        super(message);\n+    }\n+\n+    public OtusLibraryException(String message, Throwable cause) {\n+        super(message, cause);\n+    }\n+}"
  },
  {
    "sha": "399634cfb49d2d18835ccc4a06402f6527dea1f2",
    "filename": "hw11/src/main/java/ru/otus/spring/mongock/MongockConfig.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/mongock/MongockConfig.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/mongock/MongockConfig.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/mongock/MongockConfig.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,29 @@\n+package ru.otus.spring.mongock;\n+\n+import com.github.cloudyrock.mongock.driver.mongodb.springdata.v3.SpringDataMongo3Driver;\n+import com.github.cloudyrock.spring.v5.MongockSpring5;\n+import com.mongodb.Mongo;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.env.Environment;\n+import com.mongodb.MongoClient;\n+import org.springframework.data.mongodb.core.MongoTemplate;\n+import ru.otus.spring.mongock.changelog.DatabaseChangelog;\n+\n+@Configuration\n+public class MongockConfig {\n+    @Bean\n+    public MongockSpring5.MongockInitializingBeanRunner mongockApplicationRunner(\n+            ApplicationContext springContext,\n+            MongoTemplate mongoTemplate\n+    ) {\n+        return MongockSpring5.builder()\n+                .setDriver(SpringDataMongo3Driver.withDefaultLock(mongoTemplate))\n+                .addChangeLogsScanPackage(\"ru.otus.spring.mongock.changelog\")\n+                .setSpringContext(springContext)\n+                .buildInitializingBeanRunner();\n+    }\n+}"
  },
  {
    "sha": "d1cfc58113e53226734f7c8d12c52174e2e6b4da",
    "filename": "hw11/src/main/java/ru/otus/spring/mongock/changelog/DatabaseChangelog.java",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/mongock/changelog/DatabaseChangelog.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/mongock/changelog/DatabaseChangelog.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/mongock/changelog/DatabaseChangelog.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,73 @@\n+package ru.otus.spring.mongock.changelog;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.github.cloudyrock.mongock.ChangeLog;\n+import com.github.cloudyrock.mongock.ChangeSet;\n+import com.mongodb.BasicDBObject;\n+import com.mongodb.DB;\n+import com.mongodb.DBCollection;\n+import com.mongodb.DBObject;\n+import com.mongodb.DBRef;\n+\n+@ChangeLog\n+public class DatabaseChangelog {\n+\n+    private static final String GENRE = \"genre\";\n+    private static final String AUTHOR = \"author\";\n+    private static final String title = \"title\";\n+    private static final String AND = \"$and\";\n+\n+    private static final String NAME = \"name\";\n+\n+    @ChangeSet(order = \"001\", id = \"addGenre\", author = \"oposokhin\")\n+    public void insertGenre(DB db) {\n+        DBCollection myCollection = db.getCollection(\"genre\");\n+        myCollection.insert(\n+                new BasicDBObject().append(NAME, \"Fantastic\"),\n+                new BasicDBObject().append(NAME, \"story\"),\n+                new BasicDBObject().append(NAME, \"Detective\"));\n+    }\n+\n+    @ChangeSet(order = \"002\", id = \"addAuthor\", author = \"oposokhin\")\n+    public void insertAuthor(DB db) {\n+        DBCollection myCollection = db.getCollection(\"author\");\n+        myCollection.insert(\n+                new BasicDBObject().append(NAME, \"J.K.Rowling\"),\n+                new BasicDBObject().append(NAME, \"Alan Alexander Milne\"),\n+                new BasicDBObject().append(NAME, \"Arthur Conan Doyle\"));\n+    }\n+\n+    @ChangeSet(order = \"003\", id = \"addBook\", author = \"oposokhin\")\n+    public void insertBook(DB db) {\n+        DBRef author = getAuthor(db);\n+        DBRef genre = getGenre(db);\n+\n+        DBCollection myCollection = db.getCollection(\"book\");\n+        myCollection.insert(\n+                new BasicDBObject().append(title, \"Harry Potter and the Philosophers Stone\").append(AUTHOR, author).append(GENRE, genre),\n+                new BasicDBObject().append(title, \"Wonnie-the-Pooh\").append(AUTHOR, author).append(GENRE, genre),\n+                new BasicDBObject().append(title, \"Sherlock Holmes\").append(AUTHOR, author).append(GENRE, genre)\n+        );\n+    }\n+\n+    private DBRef getGenre(DB db) {\n+        BasicDBObject query = new BasicDBObject();\n+        query.put(\"name\", \"Fantastic\");\n+        DBObject genre = db.getCollection(\"genre\").findOne(query);\n+        return new DBRef(\"genre\", genre.get(\"_id\"));\n+    }\n+\n+    private DBRef getAuthor(DB db) {\n+        BasicDBObject andQuery = new BasicDBObject();\n+        List<BasicDBObject> obj = new ArrayList<>();\n+        obj.add(new BasicDBObject(NAME, \"J.K.Rowling\"));;\n+        andQuery.put(AND, obj);\n+        DBObject author = db.getCollection(\"author\").findOne(andQuery);\n+        return new DBRef(\"author\", author.get(\"_id\"));\n+    }\n+    \n+\n+    }\n+"
  },
  {
    "sha": "1829d01cfae6001716840034c521f7c02269aac6",
    "filename": "hw11/src/main/java/ru/otus/spring/repository/AuthorRepository.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/repository/AuthorRepository.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/repository/AuthorRepository.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/repository/AuthorRepository.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,9 @@\n+package ru.otus.spring.repository;\n+\n+import org.springframework.data.mongodb.repository.ReactiveMongoRepository;\n+import org.springframework.stereotype.Repository;\n+import ru.otus.spring.domain.Author;\n+\n+@Repository\n+public interface AuthorRepository extends ReactiveMongoRepository<Author, String>{\n+}"
  },
  {
    "sha": "df60f3988f9ec1c23e7fd4e4ea9b6e8b80a57dae",
    "filename": "hw11/src/main/java/ru/otus/spring/repository/BookRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/repository/BookRepository.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/repository/BookRepository.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/repository/BookRepository.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.otus.spring.repository;\n+\n+import org.springframework.data.mongodb.repository.ReactiveMongoRepository;\n+import org.springframework.stereotype.Repository;\n+import reactor.core.publisher.Flux;\n+import ru.otus.spring.domain.Book;\n+\n+@Repository\n+public interface BookRepository extends ReactiveMongoRepository<Book, String>{\n+\n+    Flux<Book> findByName(String name);\n+    Flux<Book> findAllBookInfosBy();\n+\n+}"
  },
  {
    "sha": "61cf5a5b45558ef843b450cccf5baef732087e40",
    "filename": "hw11/src/main/java/ru/otus/spring/repository/GenreRepository.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/repository/GenreRepository.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/repository/GenreRepository.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/repository/GenreRepository.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.spring.repository;\n+\n+import org.springframework.data.mongodb.repository.ReactiveMongoRepository;\n+import org.springframework.stereotype.Repository;\n+import ru.otus.spring.domain.Genre;\n+\n+import java.util.Optional;\n+\n+@Repository\n+public interface GenreRepository extends ReactiveMongoRepository<Genre, String>{\n+\n+    Optional<Genre> findByName(String name);\n+}"
  },
  {
    "sha": "53451d11cb925e00a0b3cf2c81d5ec7b3e38602a",
    "filename": "hw11/src/main/java/ru/otus/spring/rest/AuthorController.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/AuthorController.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/AuthorController.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/rest/AuthorController.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,21 @@\n+package ru.otus.spring.rest;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+import reactor.core.publisher.Flux;\n+import ru.otus.spring.domain.Author;\n+import ru.otus.spring.repository.AuthorRepository;\n+\n+@RequiredArgsConstructor\n+@RestController\n+public class AuthorController {\n+\n+    private final AuthorRepository authorRepository;\n+\n+    @GetMapping(\"api/author\")\n+    public Flux<Author> findAllAuthors() {\n+        return authorRepository.findAll();\n+    }\n+\n+}"
  },
  {
    "sha": "e7c8cdcd5e81444d395ac1d01af4b1dddec1316d",
    "filename": "hw11/src/main/java/ru/otus/spring/rest/BookController.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/BookController.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/BookController.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/rest/BookController.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,76 @@\n+package ru.otus.spring.rest;\n+\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.http.MediaType;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.web.reactive.function.server.RouterFunction;\n+import org.springframework.web.reactive.function.server.ServerResponse;\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+import ru.otus.spring.domain.Author;\n+import ru.otus.spring.domain.Book;\n+import ru.otus.spring.domain.Genre;\n+import ru.otus.spring.repository.AuthorRepository;\n+import ru.otus.spring.repository.BookRepository;\n+import ru.otus.spring.rest.dto.AuthorDto;\n+import ru.otus.spring.rest.dto.BookDto;\n+import ru.otus.spring.rest.dto.GenreDto;\n+\n+import java.util.function.Function;\n+\n+import static org.springframework.http.MediaType.APPLICATION_JSON;\n+import static org.springframework.web.reactive.function.server.RequestPredicates.accept;\n+import static org.springframework.web.reactive.function.server.RouterFunctions.route;\n+import static org.springframework.web.reactive.function.server.ServerResponse.ok;\n+\n+\n+@RequiredArgsConstructor\n+@RestController\n+public class BookController {\n+//    @Bean\n+//    public RouterFunction<ServerResponse> bookRoutes(BookRepository bookRepository, ModelMapper modelMapper, AuthorRepository authorRepository, GenreRepository genreRepository) {\n+//        final Function<Object, BookDto> bookInfoToDtoMapper = book -> modelMapper.map(book, BookDto.class);\n+//        final Function<Author, AuthorDto> authorToDtoMapper = (Author author) -> modelMapper.map(author, AuthorDto.class);\n+//        final Function<Genre, GenreDto> genreToDtoMapper = (Genre genre) -> modelMapper.map(genre, GenreDto.class);\n+//        return route()\n+//                .GET(\"/api/book\",\n+//                        request -> ok().contentType(APPLICATION_JSON)\n+//                                .body(bookRepository.findAllBookInfosBy()\n+//                                        .map(bookInfoToDtoMapper), BookDto.class))\n+\n+    private final BookRepository bookRepository;\n+\n+    @GetMapping(\"/api/book\")\n+    public Flux<Book> findBook() {\n+        return bookRepository.findAll();\n+    }\n+//\n+//    .GET(\"/api/books\",\n+//         request -> ok().contentType(APPLICATION_JSON)\n+//                                .body(bookRepository.findAllBookInfosBy()\n+//                                        .map(bookInfoToDtoMapper), BookDto.class))\n+//\n+    @GetMapping(\"/api/book/{id}\")\n+    public Mono<Book> findBookById(@PathVariable(name = \"id\") String id) {\n+        return bookRepository.findById(id);\n+    }\n+\n+    @PostMapping(value = \"/api/book\", consumes = MediaType.APPLICATION_JSON_VALUE)\n+    public Mono<Book> createBook(@RequestBody Book book) {\n+        return bookRepository.save(book);\n+    }\n+\n+    @DeleteMapping(\"/api/book/{id}\")\n+    public Mono<Void> deleteBookById(@PathVariable(name = \"id\") String id) {\n+        return bookRepository.deleteById(id);\n+    }\n+    }\n+"
  },
  {
    "sha": "7ca1920cac69b0cbc767797435a8b9fc3abea25f",
    "filename": "hw11/src/main/java/ru/otus/spring/rest/GenreController.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/GenreController.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/GenreController.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/rest/GenreController.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,22 @@\n+package ru.otus.spring.rest;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+import reactor.core.publisher.Flux;\n+import ru.otus.spring.domain.Genre;\n+import ru.otus.spring.repository.GenreRepository;\n+\n+@RequiredArgsConstructor\n+@RestController\n+public class GenreController {\n+\n+    private final GenreRepository genreRepository;\n+    \n+    @GetMapping(\"api/genre\")\n+    public Flux<Genre> findAllGenres() {\n+\n+        return genreRepository.findAll();\n+    }\n+\n+}"
  },
  {
    "sha": "1b5c95330f9e67d7a3e45ff869b2d2f26c252f16",
    "filename": "hw11/src/main/java/ru/otus/spring/rest/PageController.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/PageController.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/PageController.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/rest/PageController.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.otus.spring.rest;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+\n+@RequiredArgsConstructor\n+@Controller\n+public class PageController {\n+\n+    @GetMapping(\"/welcome\")\n+    public String getWelcomePage(Model model) {\n+        return \"index\";\n+    }\n+}"
  },
  {
    "sha": "20e83dd204cc2ff5775e5d5baa9437e1f3d0ae0b",
    "filename": "hw11/src/main/java/ru/otus/spring/rest/dto/AuthorDto.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/dto/AuthorDto.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/dto/AuthorDto.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/rest/dto/AuthorDto.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.spring.rest.dto;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class AuthorDto {\n+    private String id;\n+    private String name;\n+}"
  },
  {
    "sha": "b66e3f16fdcb8c224de63262995f105bbb0af088",
    "filename": "hw11/src/main/java/ru/otus/spring/rest/dto/BookDto.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/dto/BookDto.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/dto/BookDto.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/rest/dto/BookDto.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,17 @@\n+package ru.otus.spring.rest.dto;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import java.util.List;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class BookDto {\n+    private String id;\n+    private String name;\n+    private List<AuthorDto> author;\n+    private List<GenreDto> genre;\n+}"
  },
  {
    "sha": "7b8352373ece081e1edc39543bbc5e0a1b0af128",
    "filename": "hw11/src/main/java/ru/otus/spring/rest/dto/CommentDto.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/dto/CommentDto.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/dto/CommentDto.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/rest/dto/CommentDto.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.otus.spring.rest.dto;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import java.time.Instant;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class CommentDto {\n+    private long id;\n+    private String text;\n+    private Instant timestamp;\n+}"
  },
  {
    "sha": "99f36d1221687fbd57a381f298eafca9b54a20f5",
    "filename": "hw11/src/main/java/ru/otus/spring/rest/dto/GenreDto.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/dto/GenreDto.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/java/ru/otus/spring/rest/dto/GenreDto.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/java/ru/otus/spring/rest/dto/GenreDto.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.spring.rest.dto;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class GenreDto {\n+    private String id;\n+    private String name;\n+}"
  },
  {
    "sha": "0271614842e31e3880f206cc016a9abb156f24ba",
    "filename": "hw11/src/main/resources/DatabaseChangelog.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/DatabaseChangelog.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/DatabaseChangelog.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/resources/DatabaseChangelog.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,59 @@\n+package ru.otus.spring.mongock.changelog;\n+\n+\n+import com.github.cloudyrock.mongock.ChangeLog;\n+import com.github.cloudyrock.mongock.ChangeSet;\n+import com.mongodb.DBRef;\n+import com.mongodb.client.MongoCollection;\n+import com.mongodb.client.MongoDatabase;\n+import lombok.extern.slf4j.Slf4j;\n+import org.bson.Document;\n+\n+import java.util.Collections;\n+\n+@ChangeLog\n+@Slf4j\n+public class DatabaseChangelog {\n+    @ChangeSet(order = \"001\", id = \"initialData\", author = \"oposokhin\")\n+    public void t(MongoDatabase db) {\n+        MongoCollection<Document> author = db.getCollection(\"author\");\n+        Document author1 = new Document(\"name\", \"J.K.Rowling\");\n+        String authorId1 = author.insertOne(author1).getInsertedId().toString();\n+\n+        Document author2 = new Document(\"name\", \"Alan Alexander Milne\");\n+        String authorId2 = author.insertOne(author2).getInsertedId().toString();\n+\n+        Document author3 = new Document(\"name\", \"Arthur Conan Doyle\");\n+        String authorId3 = author.insertOne(author3).getInsertedId().toString();\n+\n+        MongoCollection<Document> genre = db.getCollection(\"genre\");\n+\n+        Document genre1 = new Document(\"name\", \"Fantastic\");\n+        String genreId1 = genre.insertOne(genre1).getInsertedId().toString();\n+\n+        Document genre2 = new Document(\"name\", \"Story\");\n+        String genreId2 = genre.insertOne(genre2).getInsertedId().toString();\n+\n+        Document genre3= new Document(\"name\", \"Detective\");\n+        String genreId3 = genre.insertOne(genre3).getInsertedId().toString();\n+\n+        MongoCollection<Document> book = db.getCollection(\"book\");\n+\n+        Document book1 = new Document(\"name\", \"Harry Potter and the Philosophers Stone\")\n+                .append(\"author\", (new DBRef(\"author\", authorId1)))\n+                .append(\"genre\", (new DBRef(\"genre\", genreId1)));\n+        book.insertOne(book1);\n+\n+        Document book2 = new Document(\"name\", \"Wonnie-the-Pooh\")\n+                .append(\"author\", Collections.singletonList(new DBRef(\"author\", authorId2.get(\"_id\"))))\n+                .append(\"genre\", Collections.singletonList(new DBRef(\"genre\", genreId2)));\n+\n+        book.insertOne(book2);\n+\n+        Document book3 = new Document(\"name\", \"Sherlock Holmes\")\n+                .append(\"author\", Collections.singletonList(new DBRef(\"author\", authorId3)))\n+                .append(\"genre\", Collections.singletonList(new DBRef(\"genre\", genreId3)));\n+\n+        book.insertOne(book3);\n+    }\n+}"
  },
  {
    "sha": "06788d42c9d5df923020c93130ff3305441f9eac",
    "filename": "hw11/src/main/resources/DatabaseChangelog_old.java",
    "status": "added",
    "additions": 70,
    "deletions": 0,
    "changes": 70,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/DatabaseChangelog_old.java",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/DatabaseChangelog_old.java",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/resources/DatabaseChangelog_old.java?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,70 @@\n+package ru.otus.spring.mongock.changelog;\n+\n+\n+import com.github.cloudyrock.mongock.ChangeLog;\n+import com.github.cloudyrock.mongock.ChangeSet;\n+import com.mongodb.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@ChangeLog\n+public class DatabaseChangelog_old {\n+\n+    private static final String GENRE = \"genre\";\n+    private static final String AUTHOR = \"author\";\n+    private static final String title = \"title\";\n+    private static final String AND = \"$and\";\n+\n+    private static final String NAME = \"name\";\n+\n+    @ChangeSet(order = \"001\", id = \"addGenre\", author = \"oposokhin\")\n+    public void insertGenre(DB db) {\n+        DBCollection myCollection = db.getCollection(\"genre\");\n+        myCollection.insert(\n+                new BasicDBObject().append(NAME, \"Fantastic\"),\n+                new BasicDBObject().append(NAME, \"story\"),\n+                new BasicDBObject().append(NAME, \"Detective\"));\n+    }\n+\n+    @ChangeSet(order = \"002\", id = \"addAuthor\", author = \"oposokhin\")\n+    public void insertAuthor(DB db) {\n+        DBCollection myCollection = db.getCollection(\"author\");\n+        myCollection.insert(\n+                new BasicDBObject().append(NAME, \"J.K.Rowling\"),\n+                new BasicDBObject().append(NAME, \"Alan Alexander Milne\"),\n+                new BasicDBObject().append(NAME, \"Arthur Conan Doyle\"));\n+    }\n+\n+    @ChangeSet(order = \"003\", id = \"addBook\", author = \"oposokhin\")\n+    public void insertBook(DB db) {\n+        DBRef author = getAuthor(db);\n+        DBRef genre = getGenre(db);\n+\n+        DBCollection myCollection = db.getCollection(\"book\");\n+        myCollection.insert(\n+                new BasicDBObject().append(title, \"Harry Potter and the Philosophers Stone\").append(AUTHOR, author).append(GENRE, genre),\n+                new BasicDBObject().append(title, \"Wonnie-the-Pooh\").append(AUTHOR, author).append(GENRE, genre),\n+                new BasicDBObject().append(title, \"Sherlock Holmes\").append(AUTHOR, author).append(GENRE, genre)\n+        );\n+    }\n+\n+    private DBRef getGenre(DB db) {\n+        BasicDBObject query = new BasicDBObject();\n+        query.put(\"name\", \"Fantastic\");\n+        DBObject genre = db.getCollection(\"genre\").findOne(query);\n+        return new DBRef(\"genre\", genre.get(\"_id\"));\n+    }\n+\n+    private DBRef getAuthor(DB db) {\n+        BasicDBObject andQuery = new BasicDBObject();\n+        List<BasicDBObject> obj = new ArrayList<>();\n+        obj.add(new BasicDBObject(NAME, \"J.K.Rowling\"));;\n+        andQuery.put(AND, obj);\n+        DBObject author = db.getCollection(\"author\").findOne(andQuery);\n+        return new DBRef(\"author\", author.get(\"_id\"));\n+    }\n+    \n+\n+    }\n+"
  },
  {
    "sha": "ee98d1377279719934366ba4d7d7618b06ff707c",
    "filename": "hw11/src/main/resources/application.yml",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/application.yml",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/resources/application.yml?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,8 @@\n+spring:\n+  data:\n+    mongodb:\n+      database: hw11\n+      host: 127.0.0.1\n+      port: 27017\n+mongock:\n+  change-logs-scan-package: ru.otus.spring.mongock.changelog"
  },
  {
    "sha": "94621393d92a1501cfa532c0590cda7e16b30d11",
    "filename": "hw11/src/main/resources/static/book.html",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/static/book.html",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/static/book.html",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/resources/static/book.html?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,78 @@\n+<!DOCTYPE html>\n+<html>\n+<head>\n+    <meta charset=\"UTF-8\" />\n+    <title>Список книг</title>\n+    <style type=\"text/css\">\n+        body {\n+            padding: 50px;\n+        }\n+\n+        .books, .books td {\n+            border: 1px solid lightgray;\n+            padding: 5px;\n+        }\n+\n+        input[type=text] {\n+            width: 50%;\n+        }\n+    </style>\n+<script src=\"webjars/jquery/3.3.1/jquery.min.js\"></script>\n+</head>\n+<body>\n+<h1>Книги</h1>\n+<div class=\"container\">\n+    <div id=\"search\">\n+        <input id=\"bookSearchInput\" type=\"text\" />\n+    </div>\n+    <div id=\"table\">\n+        <table class=\"book\" border=\"1\">\n+            <thead>\n+            <tr>\n+                <th id=\"book.column.id\">ID</th>\n+                <th id=\"book.column.author\">Автор</th>\n+                <th id=\"book.column.name\">Название</th>\n+                <th id=\"book.column.genre\">Жанр</th>\n+            </tr>\n+            </thead>\n+            <tbody id=\"bookTableBody\">\n+            </tbody>\n+        </table>\n+    </div>\n+    <div>\n+        <button id=\"returnButton\">Назад</button>\n+    </div>\n+</div>\n+<script>\n+    $(function () {\n+        $.get('/api/book').done(function (book) {\n+            book.forEach(function (book) {\n+                $('tbody').append(`\n+\t\t                    <tr>\n+\t\t                        <td>${book.id}</td>\n+\t\t                        <td>${book.author.name}</td>\n+\t\t                        <td>${book.name}</td>\n+\t\t                        <td>${book.genre.name}</td>\n+\t\t                        <td><a href=\"/bookAdd.html\">Добавить</a></td>\n+\t\t                        <td><a href=\"/bookEdit.html?id=${book.id}&genreid=${book.genre.id}&authorid=${book.author.id}\">Изменить</a></td>\n+\t\t                        <td><a href=\"/bookDel.html?id=${book.id}\">Удалить</a></td>\n+\t\t                    </tr>\n+\t\t                `)\n+            });\n+        })\n+    });\n+    $(document).ready(function(){\n+        $(\"#bookSearchInput\").on(\"keyup\", function() {\n+            var value = $(this).val().toLowerCase();\n+            $(\"#bookTableBody tr\").filter(function() {\n+                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n+            });\n+        });\n+    });\n+    $(\"#returnButton\").click(function() {\n+        var url = \"/\";\n+        $(location).attr('href',url);\n+    });\n+</script>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "0b96b1d91d56ae84d92b5105ec36f708912dcf78",
    "filename": "hw11/src/main/resources/static/style.css",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/static/style.css",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/static/style.css",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/resources/static/style.css?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,8 @@\n+nav > div {\n+    display: inline; /* the default for span */\n+    width: 30px;\n+    height: 30px;\n+    padding: 10px;\n+    border: 1px solid blue;\n+    background-color: yellow;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "350603e797c0d3c8fe8a2591ee124330e24b3234",
    "filename": "hw11/src/main/resources/templates/author.html",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/templates/author.html",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/templates/author.html",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/resources/templates/author.html?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,35 @@\n+<!DOCTYPE html>\n+<html xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <title>author</title>\n+    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\" integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin=\"anonymous\">\n+    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx\" crossorigin=\"anonymous\"></script>\n+</head>\n+<body>\n+<div th:insert=\"header :: header\"></div>\n+<form action=\"#\" th:action=\"@{/author}\" th:object=\"${authorToAdd}\" method=\"post\">\n+    <input type=\"text\" th:field=\"*{name}\"/>\n+    <button type=\"submit\">add</button>\n+</form>\n+<table>\n+    <thead>\n+    <tr>\n+        <th>Id</th>\n+        <th>Name</th>\n+    </tr>\n+    </thead>\n+    <tbody>\n+    <tr th:each=\"author : ${author}\">\n+        <td th:text=\"${author.id}\"></td>\n+        <td th:text=\"${author.name}\"></td>\n+        <td>\n+            <form action=\"#\" th:action=\"@{/author/{authorId}/delete (authorId=${author.id})}\" method=\"post\">\n+                <button type=\"submit\">delete</button>\n+            </form>\n+        </td>\n+    </tr>\n+    </tbody>\n+</table>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "dbbd06ed3886caf792ad8f78019916ef27468486",
    "filename": "hw11/src/main/resources/templates/book.html",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/templates/book.html",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/templates/book.html",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/resources/templates/book.html?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,66 @@\n+<!DOCTYPE html>\n+<html xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <title>author</title>\n+    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\" integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin=\"anonymous\">\n+    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx\" crossorigin=\"anonymous\"></script>\n+<script src=\"webjars/jquery/3.3.1/jquery.min.js\"></script>\n+</head>\n+<body>\n+<h1>Книги</h1>\n+<div class=\"container\">\n+    <div id=\"search\">\n+        <input id=\"bookSearchInput\" type=\"text\" />\n+    </div>\n+    <div id=\"table\">\n+        <table class=\"book\" border=\"1\">\n+            <thead>\n+            <tr>\n+                <th id=\"book.column.id\">ID</th>\n+                <th id=\"book.column.author\">Автор</th>\n+                <th id=\"book.column.name\">Название</th>\n+                <th id=\"book.column.genre\">Жанр</th>\n+            </tr>\n+            </thead>\n+            <tbody id=\"bookTableBody\">\n+            </tbody>\n+        </table>\n+    </div>\n+    <div>\n+        <button id=\"returnButton\">Назад</button>\n+    </div>\n+</div>\n+<script>\n+    $(function () {\n+        $.get('/api/book').done(function (book) {\n+            book.forEach(function (book) {\n+                $('tbody').append(`\n+\t\t                    <tr>\n+\t\t                        <td>${book.id}</td>\n+\t\t                        <td>${book.author.name}</td>\n+\t\t                        <td>${book.name}</td>\n+\t\t                        <td>${book.genre.name}</td>\n+\t\t                        <td><a href=\"/bookAdd.html\">Добавить</a></td>\n+\t\t                        <td><a href=\"/bookEdit.html?id=${book.id}&genreid=${book.genre.id}&authorid=${book.author.id}\">Изменить</a></td>\n+\t\t                        <td><a href=\"/bookDel.html?id=${book.id}\">Удалить</a></td>\n+\t\t                    </tr>\n+\t\t                `)\n+            });\n+        })\n+    });\n+    $(document).ready(function(){\n+        $(\"#bookSearchInput\").on(\"keyup\", function() {\n+            var value = $(this).val().toLowerCase();\n+            $(\"#bookTableBody tr\").filter(function() {\n+                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)\n+            });\n+        });\n+    });\n+    $(\"#returnButton\").click(function() {\n+        var url = \"/index.html\";\n+        $(location).attr('href',url);\n+    });\n+</script>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "df32e6ff032bebebc3d44d2050eed1949a4607d1",
    "filename": "hw11/src/main/resources/templates/bookAdd.html",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/blob/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/templates/bookAdd.html",
    "raw_url": "https://github.com/OPosokhin/2020-11-otus-spring-posokhin/raw/3eeac8ccc60cb8083bb06efcb100cad74124b372/hw11/src/main/resources/templates/bookAdd.html",
    "contents_url": "https://api.github.com/repos/OPosokhin/2020-11-otus-spring-posokhin/contents/hw11/src/main/resources/templates/bookAdd.html?ref=3eeac8ccc60cb8083bb06efcb100cad74124b372",
    "patch": "@@ -0,0 +1,79 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <title>Book info</title>\n+    <style type=\"text/css\">\n+        body {\n+            padding: 50px;\n+        }\n+\n+        label {\n+            display: inline-block;\n+            width: 100px;\n+        }\n+\n+        input:read-only {\n+            background: #d3d3d3;\n+        }\n+\n+        .row {\n+            margin-top: 10px;\n+        }\n+    </style>\n+    <script src=\"/webjars/jquery/3.3.1/jquery.min.js\">\n+    </script>\n+</head>\n+<body>\n+<a href=\"/book\">Return to book</a>\n+    <form id=\"book-form\" action=\"javascript:void(0);\">\n+    <h1>New Book:</h1>\n+\n+    <div class=\"row\" hidden>\n+        <label for=\"id-input\">id:</label>\n+        <input id=\"id-input\" name=\"id\" type=\"text\" readonly=\"readonly\" th:value=\"${book.id}\" value=\"0\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"name-input\">Name:</label>\n+        <input id=\"name-input\" name=\"name\" type=\"text\" th:value=\"${book.name}\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"author-input\">Author:</label>\n+        <select id=\"author-input\" th:field=\"${book.author.id}\">\n+            <option th:each=\"author : ${author}\" th:value=\"${author.id}\" th:text=\"${author.name}\"></option>\n+        </select>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"genre-input\">Genre:</label>\n+        <select id=\"genre-input\" th:field=\"${book.genre.id}\">\n+            <option th:each=\"genre : ${genre}\" th:value=\"${genre.id}\" th:text=\"${genre.name}\"></option>\n+        </select>\n+    </div>\n+\n+    <div class=\"row\">\n+        <button type=\"submit\">Save</button>\n+    </div>\n+\n+</form>\n+<script inline=\"javascript\">\n+    var bookId = $('#id-input')[0].value;\n+\n+    /*Add книги*/\n+    $('#book-form').on('submit', (function (e) {\n+        var data = {\n+            \"name\": $('#name-input')[0].value,\n+            \"authorid\": $('#author-input option:selected')[0].value,\n+            \"genreid\": $('#genre-input option:selected')[0].value\n+        }\n+        $.ajax({\n+            type: \"POST\",\n+            url: '/api/bookAdd/' + bookId,\n+            data: data\n+        });\n+    }));\n+\n+</script>\n+</body>"
  }
]
