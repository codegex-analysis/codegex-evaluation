[
  {
    "sha": "c2059234cba39ea64976a3d49b967c72a99e31dd",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/controller/AppController.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/AppController.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/AppController.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/AppController.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -26,7 +26,7 @@\n \n import dk.dtu.compute.se.pisd.roborally.RoboRally;\n \n-import dk.dtu.compute.se.pisd.roborally.model.Board;\n+import dk.dtu.compute.se.pisd.roborally.model.board.Board;\n import dk.dtu.compute.se.pisd.roborally.model.Player;\n \n import javafx.application.Platform;"
  },
  {
    "sha": "88112cc53249e90589f09af2b2e89214c7c1aec0",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/controller/GameController.java",
    "status": "modified",
    "additions": 51,
    "deletions": 13,
    "changes": 64,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/GameController.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/GameController.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/GameController.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -21,9 +21,18 @@\n  */\n package dk.dtu.compute.se.pisd.roborally.controller;\n \n+import dk.dtu.compute.se.pisd.roborally.interfaces.IActivateable;\n import dk.dtu.compute.se.pisd.roborally.model.*;\n+import dk.dtu.compute.se.pisd.roborally.model.board.Board;\n+import dk.dtu.compute.se.pisd.roborally.model.board.boardElement.activationElements.ActivationElement;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Command;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Phase;\n import org.jetbrains.annotations.NotNull;\n \n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.PriorityQueue;\n+\n /**\n  * ...\n  *\n@@ -170,31 +179,60 @@ private void executeNextStep() {\n \n     /**\n      * <p>Handles what happens after a player instruction has been executed.</p>\n-     * <p>If the last player of the round has been activated then the players are sorted\n-     * and register № is incremented. If also the entire activation is completed the programming phase is started.\n+     * <p>If the last player of the round has been activated then the {@link ActivationElement}s\n+     * are activated, the players are sorted and register № is incremented. If also the entire\n+     * activation phase is completed the programming phase is started.\n      * No matter what, the next player is always set.</p>\n      *\n      * @author Rasmus Nylander, s205418@student.dtu.dk\n      * @see Board#getStep()\n+     * @see #activateBoardElements()\n      */\n     private void subRoundComplete() {\n         if (board.getPhase() != Phase.ACTIVATION) {\n             assert false;\n             return;\n         }\n-        if (!board.isActivationQueueEmpty()) { //The round is not over\n-            board.setCurrentPlayer(board.nextPlayer());\n-        } else { //The round is over\n-            int step = board.getStep() + 1;\n-            board.playerQueueForceRepopulate();\n+\n+        if (!board.isPlayerActivationQueueEmpty()) { //Not all players have been activated yet\n             board.setCurrentPlayer(board.nextPlayer());\n-            if (step < Player.NO_REGISTERS) {\n-                makeProgramFieldsVisible(step);\n-                board.setStep(step);\n-            } else {\n-                startProgrammingPhase();\n-            }\n+            return;\n+        }\n+\n+        activateElements();\n+        int step = board.getStep() + 1;\n+        board.playerQueueForceRepopulate();\n+        board.setCurrentPlayer(board.nextPlayer());\n+\n+        if (step < Player.NO_REGISTERS) { //The activation phase is not complete\n+            makeProgramFieldsVisible(step);\n+            board.setStep(step);\n+            return;\n         }\n+\n+        startProgrammingPhase();\n+    }\n+\n+    /**\n+     * <p>Handles activation of all {@link ActivationElement}s and robot lasers.</p>\n+     *\n+     * @author Rasmus Nylander, s205418@student.dtu.dk\n+     */\n+    private void activateElements(){\n+        /*\n+        PriorityQueue<IActivateable> priorityQueue = new PriorityQueue<>(6, Comparator.comparingInt(e -> {\n+            if (e instanceof ActivationElement) {\n+                return ((ActivationElement) e).getPriority();\n+            } else return 6;//if (e instanceof RobotLaser){return RobotLaser.getPriority();}\n+        }));\n+        for (int i = 0; i < board.getPlayersNumber(); i++) {\n+            ActivationElement[] activationElements = board.getPlayer(i).getSpace().getActivationElements();\n+            if (activationElements != null && activationElements.length > 0)\n+                priorityQueue.addAll(Arrays.asList(activationElements));\n+        }\n+        priorityQueue.forEach(IActivateable::activate);\n+         */\n+\n     }\n \n     /**"
  },
  {
    "sha": "39412b7445caa72eee0ca1ddb712899508aaa592",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/controller/PlayerController.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/PlayerController.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/PlayerController.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/PlayerController.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -2,6 +2,9 @@\n \n import dk.dtu.compute.se.pisd.roborally.interfaces.ILaser;\n import dk.dtu.compute.se.pisd.roborally.model.*;\n+import dk.dtu.compute.se.pisd.roborally.model.board.Space;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Command;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Heading;\n \n public class PlayerController implements ILaser {\n     Player player;"
  },
  {
    "sha": "c6fff250544464a39e558b9369b08cb7201963b9",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/BoardLaserController.java",
    "status": "modified",
    "additions": 3,
    "deletions": 16,
    "changes": 19,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/BoardLaserController.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/BoardLaserController.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/BoardLaserController.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -1,31 +1,18 @@\n package dk.dtu.compute.se.pisd.roborally.controller.boardElementController;\n \n import dk.dtu.compute.se.pisd.roborally.interfaces.ILaser;\n-import dk.dtu.compute.se.pisd.roborally.model.Command;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Command;\n import dk.dtu.compute.se.pisd.roborally.model.CommandCard;\n import dk.dtu.compute.se.pisd.roborally.model.Player;\n-import dk.dtu.compute.se.pisd.roborally.model.Space;\n-import dk.dtu.compute.se.pisd.roborally.model.boardElement.BoardLaser;\n-import dk.dtu.compute.se.pisd.roborally.model.boardElement.MoveHazard;\n+import dk.dtu.compute.se.pisd.roborally.model.board.Space;\n+import dk.dtu.compute.se.pisd.roborally.model.board.boardElement.activationElements.BoardLaser;\n \n public class BoardLaserController implements IBoardElementController, ILaser {\n     private BoardLaser model;\n     public BoardLaserController(BoardLaser model){\n         this.model = model;\n     }\n \n-\n-    /**\n-     * <p> Fires the laser upon activation </p>\n-     */\n-    @Override\n-    public void activate() {\n-        //Player player = model.getSpace().getPlayer();\n-        //if (player == null) return;\n-        fire();\n-    }\n-\n-\n     /**\n      * <p>Fire in the direction the owner\n      * robot is facing. Their range has no"
  },
  {
    "sha": "88ad62a620cc34c837e771cdaef9231cbebca3dc",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/IBoardElementController.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/IBoardElementController.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/IBoardElementController.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/IBoardElementController.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -1,10 +1,12 @@\n package dk.dtu.compute.se.pisd.roborally.controller.boardElementController;\n \n \n+import dk.dtu.compute.se.pisd.roborally.interfaces.IActivateable;\n+\n /**\n  * This interface defines how a board element controller, such as a {@link MoveHazardController}, should look.\n  * @author Rasmus Nylander, s205418@student.dtu.dk\n  */\n-public interface IBoardElementController {\n-    public void activate();\n+public interface IBoardElementController extends IActivateable {\n+\n }"
  },
  {
    "sha": "e5d2e15884dd082565d129dee60e456298d96d01",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/MoveHazardController.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/MoveHazardController.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/MoveHazardController.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/controller/boardElementController/MoveHazardController.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -1,6 +1,6 @@\n package dk.dtu.compute.se.pisd.roborally.controller.boardElementController;\n \n-import dk.dtu.compute.se.pisd.roborally.model.boardElement.MoveHazard;\n+import dk.dtu.compute.se.pisd.roborally.model.board.boardElement.activationElements.MoveHazard;\n import dk.dtu.compute.se.pisd.roborally.model.Player;\n \n /**\n@@ -17,7 +17,7 @@ public MoveHazardController(MoveHazard model){\n     public void activate() {\n         Player player = model.getSpace().getPlayer();\n         if (player == null) return;\n-        player.playerController.move(model.direction, model.distance);\n+        player.playerController.move(model.getDirection(), model.distance);\n         player.playerController.turn(model.rotation);\n     }\n }"
  },
  {
    "sha": "6cdfde4216db769c60fc37773d2d73419d371d1c",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/imageFinder/BoardElementImageFinder.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/imageFinder/BoardElementImageFinder.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/imageFinder/BoardElementImageFinder.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/imageFinder/BoardElementImageFinder.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -1,6 +1,6 @@\n package dk.dtu.compute.se.pisd.roborally.imageFinder;\n \n-import dk.dtu.compute.se.pisd.roborally.model.boardElement.BoardElement;\n+import dk.dtu.compute.se.pisd.roborally.model.board.boardElement.BoardElement;\n \n /**\n  * <p>This class is responsible for determining and finding"
  },
  {
    "sha": "4cf90e349818844b6a637dfeb94df7d98fe4c00f",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/interfaces/IActivateable.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/interfaces/IActivateable.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/interfaces/IActivateable.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/interfaces/IActivateable.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -0,0 +1,14 @@\n+package dk.dtu.compute.se.pisd.roborally.interfaces;\n+\n+import dk.dtu.compute.se.pisd.roborally.model.board.boardElement.activationElements.ActivationElement;\n+\n+/**\n+ * <p>Represents something that can be activated, e.g. an {@link ActivationElement} or a robot laser.</p>\n+ */\n+public interface IActivateable{\n+\n+    /**\n+     * <p>Activates the activateable object.</p>\n+     */\n+    public void activate();\n+}"
  },
  {
    "sha": "8c34bb64feb207030f68892464aad1ccee52aa5b",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/interfaces/ILaser.java",
    "status": "modified",
    "additions": 9,
    "deletions": 2,
    "changes": 11,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/interfaces/ILaser.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/interfaces/ILaser.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/interfaces/ILaser.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -1,8 +1,15 @@\n package dk.dtu.compute.se.pisd.roborally.interfaces;\n \n-import dk.dtu.compute.se.pisd.roborally.model.Board;\n+public interface ILaser extends IActivateable{\n+\n+    /**\n+     * <p>Fires the laser upon activation.</p>\n+     */\n+    @Override\n+    default void activate(){\n+        fire();\n+    }\n \n-public interface ILaser {\n     /**\n      * <p>Fires a laser according to it's implementation.</p>\n      */"
  },
  {
    "sha": "0843ea60c9f18ffbcfbfcb840a6d686b6b36d7f0",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/CommandCard.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/CommandCard.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/CommandCard.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/CommandCard.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -22,6 +22,7 @@\n package dk.dtu.compute.se.pisd.roborally.model;\n \n import dk.dtu.compute.se.pisd.designpatterns.observer.Subject;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Command;\n import org.jetbrains.annotations.NotNull;\n \n /**"
  },
  {
    "sha": "ad56fb1098d8d891cb19886d3664c5a96b22a71e",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/Player.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/Player.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/Player.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/Player.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -23,9 +23,12 @@\n \n import dk.dtu.compute.se.pisd.designpatterns.observer.Subject;\n import dk.dtu.compute.se.pisd.roborally.controller.PlayerController;\n+import dk.dtu.compute.se.pisd.roborally.model.board.Board;\n+import dk.dtu.compute.se.pisd.roborally.model.board.Space;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Heading;\n import org.jetbrains.annotations.NotNull;\n \n-import static dk.dtu.compute.se.pisd.roborally.model.Heading.SOUTH;\n+import static dk.dtu.compute.se.pisd.roborally.model.enums.Heading.SOUTH;\n \n /**\n  * ..."
  },
  {
    "sha": "cf2b36d5622c131a9a37f32c19fa4966c633989a",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/Board.java",
    "status": "renamed",
    "additions": 6,
    "deletions": 3,
    "changes": 9,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/Board.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/Board.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/Board.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -19,14 +19,17 @@\n  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n  *\n  */\n-package dk.dtu.compute.se.pisd.roborally.model;\n+package dk.dtu.compute.se.pisd.roborally.model.board;\n \n import dk.dtu.compute.se.pisd.designpatterns.observer.Subject;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Heading;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Phase;\n+import dk.dtu.compute.se.pisd.roborally.model.Player;\n import org.jetbrains.annotations.NotNull;\n \n import java.util.*;\n \n-import static dk.dtu.compute.se.pisd.roborally.model.Phase.INITIALISATION;\n+import static dk.dtu.compute.se.pisd.roborally.model.enums.Phase.INITIALISATION;\n \n /**\n  * ...\n@@ -309,7 +312,7 @@ public Player nextPlayer() {\n      * @return Returns a boolean indicating whether the activation queue is empty or the next element is null\n      * @author Rasmus Nylander, s205418@student.dtu.dk\n      */\n-    public boolean isActivationQueueEmpty() {\n+    public boolean isPlayerActivationQueueEmpty() {\n         return playerActivationQueue.isEmpty() || playerActivationQueue.peek() == null;\n     }\n ",
    "previous_filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/Board.java"
  },
  {
    "sha": "024a826677b6b5064a70173b79344e6fb15d5f7b",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/Space.java",
    "status": "renamed",
    "additions": 93,
    "deletions": 14,
    "changes": 107,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/Space.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/Space.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/Space.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -19,10 +19,15 @@\n  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n  *\n  */\n-package dk.dtu.compute.se.pisd.roborally.model;\n+package dk.dtu.compute.se.pisd.roborally.model.board;\n \n import dk.dtu.compute.se.pisd.designpatterns.observer.Subject;\n-import dk.dtu.compute.se.pisd.roborally.model.boardElement.BoardElement;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Heading;\n+import dk.dtu.compute.se.pisd.roborally.model.Player;\n+import dk.dtu.compute.se.pisd.roborally.model.board.boardElement.activationElements.ActivationElement;\n+import dk.dtu.compute.se.pisd.roborally.model.board.boardElement.BoardElement;\n+\n+import java.util.*;\n \n /**\n  * ...\n@@ -34,18 +39,31 @@\n public class Space extends Subject {\n \n     /**\n-     * The board which this space is a part of.\n+     * <p>The board which this space is a part of.</p>\n      */\n     public final Board board;\n \n+    /**\n+     * <p>The x coordinate of the space.</p>\n+     */\n     public final int x;\n+    /**\n+     * <p>The y coordinate of the space.</p>\n+     */\n     public final int y;\n-    public Heading[] walls;\n \n     /**\n-     * Represents the elements on this space.\n+     * <p>Represents the elements on this space.</p>\n      */\n-    public final BoardElement element;\n+    private final ArrayList<BoardElement> elements;\n+\n+    /**\n+     * <p>A list of only the {@link ActivationElement}s on this space\n+     * sorted by priority.</p>\n+     * @see #elements\n+     * @see ActivationElement#getPriority()\n+     */\n+    private final ArrayList<ActivationElement> activationElements;\n \n \n     /**\n@@ -54,14 +72,71 @@\n      */\n     private Player player;\n \n-    public Space(Board board, int x, int y, BoardElement element, Heading... walls) {\n+    public Space(Board board, int x, int y, BoardElement... elements) {\n         this.board = board;\n         this.x = x;\n         this.y = y;\n         player = null;\n \n-        this.element = element;\n-        this.walls = walls;\n+        this.elements = new ArrayList<>();\n+        activationElements = new ArrayList<>();\n+\n+        if (elements == null) return;\n+        Collections.addAll(this.elements, elements);\n+\n+        for (BoardElement element: elements) {\n+            if (element instanceof ActivationElement) activationElements.add((ActivationElement) element);\n+        }\n+        activationElements.sort(Comparator.comparingInt(ActivationElement::getPriority));\n+    }\n+\n+    /**\n+     * <p>Returns an array of all {@link BoardElement}s on this\n+     * space. The returned array is safe; any changes to the\n+     * array will not be reflected in the {@link #elements}\n+     * of this space.</p>\n+     * @return a safe array of all the board elements on this space\n+     */\n+    public BoardElement[] getElements() {\n+        if (elements == null || elements.size() < 1) return new BoardElement[0];\n+        return (BoardElement[]) elements.toArray();\n+    }\n+\n+    /**\n+     * <p>Adds a {@link BoardElement} to this space.</p>\n+     * @param boardElement the board element to add\n+     */\n+    public void addBoardElement(BoardElement boardElement){\n+        if (boardElement == null) return;\n+        elements.add(boardElement);\n+        if (boardElement instanceof ActivationElement){\n+            activationElements.add((ActivationElement) boardElement);\n+            activationElements.sort(Comparator.comparingInt(ActivationElement::getPriority));\n+        }\n+        notifyChange();\n+    }\n+\n+    /**\n+     * <p>Removes a {@link BoardElement} to this space.</p>\n+     * @param boardElement the board element to remove\n+     */\n+    public void removeBoardElement(BoardElement boardElement){\n+        if (boardElement == null || elements == null) return;\n+        elements.remove(boardElement);\n+        if (boardElement instanceof ActivationElement) activationElements.remove(boardElement);\n+        notifyChange();\n+    }\n+\n+    /**\n+     * <p>Returns an array of all {@link ActivationElement}s on this\n+     * space sorted by priority. The returned array is safe; any changes\n+     * to the array will not be reflected in the {@link #activationElements}\n+     * of this space.</p>\n+     * @return a safe array of all the activation elements on this space sorted by priority or null\n+     */\n+    public ActivationElement[] getActivationElements(){\n+        if (activationElements == null || activationElements.size() < 1) return new ActivationElement[0];\n+        return (ActivationElement[]) activationElements.toArray();\n     }\n \n     /**\n@@ -100,6 +175,8 @@ public void setPlayer(Player player) {\n         }\n     }\n \n+\n+\n     /**\n      * <p>Returns a boolean indicating whether <b>this</b> space contains\n      * an obstacle preventing movement in the heading specified by the argument.</p>\n@@ -110,10 +187,7 @@ public void setPlayer(Player player) {\n      * @see #containsObstacleFrom(Heading)\n      */\n     public boolean containsObstacleTo(Heading heading) {\n-        for (Heading direction: walls) {\n-            if (direction == heading) return true;\n-        }\n-        return false;\n+        return containsObstacleFrom(heading.next().next());\n     }\n \n     /**\n@@ -128,10 +202,15 @@ public boolean containsObstacleTo(Heading heading) {\n      * @see #containsObstacleTo(Heading)\n      */\n     public boolean containsObstacleFrom(Heading heading) {\n+        for (BoardElement boardElement: elements) {\n+            for (Heading direction: boardElement.getImpassableFrom()) {\n+                if (direction == heading) return true;\n+            }\n+        }\n         return containsObstacleTo(heading.next().next());\n     }\n \n-    void playerChanged() {\n+    public void playerChanged() {\n         // This is a minor hack; since some views that are registered with the space\n         // also need to update when some player attributes change, the player can\n         // notify the space of these changes by calling this method.",
    "previous_filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/Space.java"
  },
  {
    "sha": "87f49df20364e192fbd45ac3c0b02894bc087850",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/BoardElement.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/BoardElement.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/BoardElement.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/BoardElement.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -0,0 +1,62 @@\n+package dk.dtu.compute.se.pisd.roborally.model.board.boardElement;\n+\n+import dk.dtu.compute.se.pisd.designpatterns.observer.Subject;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Heading;\n+\n+/**\n+ * Represents the element on the board, e.g. walls, push panels, the priority antenna, etc.\n+ * @author Rasmus Nylander, s205418@student.dtu.dk\n+ */\n+public abstract class BoardElement extends Subject {\n+    /**\n+     * <p>Whether this element is passable by robots\n+     * coming from a certain direction. If a direction is\n+     * not contained herein it is considered to be\n+     * passable from that direction.</p>\n+     */\n+    protected Heading[] impassableFrom;\n+\n+    /**\n+     * <p>Whether the element is opaque to standard lasers\n+     * coming from a certain direction. If a direction is\n+     * not contained herein it is considered to not be\n+     * opaque from that direction.</p>\n+     */\n+    protected Heading[] opaqueFrom;\n+\n+    /**\n+     * <p>Which way the element is pointing. May be null if the element has no direction.</p>\n+     */\n+    protected Heading direction;\n+\n+\n+    /*Getters and setters*/\n+    public Heading[] getImpassableFrom(){ return impassableFrom.clone();}\n+\n+    public Heading[] getOpaqueFrom() {return opaqueFrom.clone();}\n+\n+    public Heading getDirection() {\n+        return direction;\n+    }\n+\n+    public void setDirection(Heading direction) {\n+        this.direction = direction;\n+        notifyChange();\n+    }\n+\n+\n+    protected BoardElement() {\n+        this(null, null);\n+    }\n+\n+    /*Constructors*/\n+    protected BoardElement(Heading[] impassableFrom, Heading[] opaqueFrom) {\n+        this(impassableFrom, opaqueFrom, null);\n+    }\n+\n+    protected BoardElement(Heading[] impassableFrom, Heading[] opaqueFrom, Heading direction) {\n+        this.impassableFrom = impassableFrom;\n+        this.opaqueFrom = opaqueFrom;\n+        this.direction = direction;\n+    }\n+}"
  },
  {
    "sha": "31d2b3aec635c7b262918df150e830109aad389a",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/ActivationElement.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/ActivationElement.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/ActivationElement.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/ActivationElement.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -0,0 +1,32 @@\n+package dk.dtu.compute.se.pisd.roborally.model.board.boardElement.activationElements;\n+\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Heading;\n+import dk.dtu.compute.se.pisd.roborally.model.board.Space;\n+import dk.dtu.compute.se.pisd.roborally.model.board.boardElement.BoardElement;\n+\n+/**\n+ * Represents {@link BoardElement}s that can be activated in the activation phase.\n+ * @author Rasmus Nylander, s205418@student.dtu.dk\n+ */\n+public abstract class ActivationElement extends BoardElement {\n+    /**\n+     * <p>The space this {@link ActivationElement} is occupying</p>\n+     */\n+    protected Space space;\n+    /**\n+     * <p>The activation priority of the element.</p>\n+     */\n+    protected int priority;\n+\n+    protected ActivationElement(Heading[] impassableFrom, Heading[] opaqueFrom, Heading direction, Space space, int priority){\n+        super(impassableFrom, opaqueFrom, direction);\n+        this.space = space;\n+        this.priority = priority;\n+    }\n+\n+    public Space getSpace() {\n+        return space;\n+    }\n+\n+    public int getPriority() {return priority;}\n+}"
  },
  {
    "sha": "778bcf63f8e46a200029cad2d47e588bb5322393",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/BoardLaser.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/BoardLaser.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/BoardLaser.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/BoardLaser.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -0,0 +1,20 @@\n+package dk.dtu.compute.se.pisd.roborally.model.board.boardElement.activationElements;\n+\n+import dk.dtu.compute.se.pisd.roborally.model.board.Space;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Heading;\n+\n+public class BoardLaser extends ActivationElement {\n+\n+\n+    protected BoardLaser(Heading[] impassableFrom, Heading[] opaqueFrom, Heading direction, Space space, int priority){\n+        super(impassableFrom, opaqueFrom, direction, space, priority);\n+\n+    }\n+\n+    /**\n+     * <p>Represents the start and end points of the laser.</p>\n+     * <p>{start x, start y, end x, end y}</p>\n+     */\n+    int[] endPoints;\n+\n+}"
  },
  {
    "sha": "5f850953dc239fc65088ab9157ec7adf3309765e",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/MoveHazard.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/MoveHazard.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/MoveHazard.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/activationElements/MoveHazard.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -0,0 +1,29 @@\n+package dk.dtu.compute.se.pisd.roborally.model.board.boardElement.activationElements;\n+\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Heading;\n+import dk.dtu.compute.se.pisd.roborally.model.Player;\n+import dk.dtu.compute.se.pisd.roborally.model.board.Space;\n+\n+/**\n+ * <p>Represents a {@link ActivationElement} that moves the player.\n+ * E.g. push panels and conveyor belts.</p>\n+ * @author Rasmus Nylander, s205418@student.dtu.dk\n+ */\n+public class MoveHazard extends ActivationElement {\n+    /**\n+     * <p>The number of clockwise turns. May be negative.</p>\n+     */\n+    public int rotation;\n+    /**\n+     * <p>The distance to move a {@link Player}.</p>\n+     */\n+    public int distance;\n+\n+\n+    protected MoveHazard(Heading[] impassableFrom, Heading[] opaqueFrom, Heading direction, Space space, int priority, int rotation, int distance){\n+        super(impassableFrom, opaqueFrom, direction, space, priority);\n+        this.rotation = rotation;\n+        this.distance = distance;\n+    }\n+\n+}"
  },
  {
    "sha": "6722169fa536b60c210580ad9d8f801db293a462",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/wall.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/wall.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/wall.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/board/boardElement/wall.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -0,0 +1,30 @@\n+package dk.dtu.compute.se.pisd.roborally.model.board.boardElement;\n+\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Heading;\n+\n+\n+public class wall extends BoardElement{\n+\n+\n+    public wall(Heading position){\n+        super(northEastSouthWestArray(), northEastSouthWestArray(), position);\n+    }\n+\n+    public Heading getPosition(){\n+        return direction;\n+    }\n+\n+    /**\n+     * <p>Returns a new {@link Heading} array containing\n+     * {{@link Heading#NORTH}, {@link Heading#EAST},{@link Heading#SOUTH},\n+     * {@link Heading#WEST}}. This is done, because there seems to be a\n+     * problem with importing, resulting in ridiculously long names.</p>\n+     * @return A new Heading array containing the four cardinal directions\n+     */\n+    private static Heading[] northEastSouthWestArray(){\n+        return new Heading[] {\n+            Heading.NORTH, Heading.EAST,\n+                    Heading.SOUTH, Heading.WEST\n+        };\n+    }\n+}"
  },
  {
    "sha": "57bbb0342aaae7dd7665d6117b6e1cf590b6ca38",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/ActivationElement.java",
    "status": "removed",
    "additions": 0,
    "deletions": 20,
    "changes": 20,
    "blob_url": "https://github.com/gruppe17/roborally/blob/a846f6e7f583ff5cce48508d4377981191ddcd5c/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/ActivationElement.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/a846f6e7f583ff5cce48508d4377981191ddcd5c/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/ActivationElement.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/ActivationElement.java?ref=a846f6e7f583ff5cce48508d4377981191ddcd5c",
    "patch": "@@ -1,20 +0,0 @@\n-package dk.dtu.compute.se.pisd.roborally.model.boardElement;\n-\n-import dk.dtu.compute.se.pisd.roborally.model.Space;\n-\n-/**\n- * Represents {@link BoardElement}s that can be activated in the activation phase.\n- * @author Rasmus Nylander, s205418@student.dtu.dk\n- */\n-public abstract class ActivationElement extends BoardElement{\n-    protected Space space;\n-\n-    protected ActivationElement(boolean passable, boolean isOpaque, Space space){\n-        super(passable, isOpaque);\n-        this.space = space;\n-    }\n-\n-    public Space getSpace() {\n-        return space;\n-    }\n-}"
  },
  {
    "sha": "12fd5fe70a77f16de808ee8b5bac09d7471d66e4",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/BoardElement.java",
    "status": "removed",
    "additions": 0,
    "deletions": 66,
    "changes": 66,
    "blob_url": "https://github.com/gruppe17/roborally/blob/a846f6e7f583ff5cce48508d4377981191ddcd5c/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/BoardElement.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/a846f6e7f583ff5cce48508d4377981191ddcd5c/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/BoardElement.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/BoardElement.java?ref=a846f6e7f583ff5cce48508d4377981191ddcd5c",
    "patch": "@@ -1,66 +0,0 @@\n-package dk.dtu.compute.se.pisd.roborally.model.boardElement;\n-\n-import dk.dtu.compute.se.pisd.designpatterns.observer.Subject;\n-import dk.dtu.compute.se.pisd.roborally.model.Heading;\n-import dk.dtu.compute.se.pisd.roborally.model.Space;\n-\n-/**\n- * Represents the element on the board, e.g. walls, push panels, the priority antenna, etc.\n- * @author Rasmus Nylander, s205418@student.dtu.dk\n- */\n-public abstract class BoardElement extends Subject {\n-    /**\n-     * <p>Whether this element is passable by robots.</p>\n-     */\n-    protected boolean passable;\n-\n-    /**\n-     * <p>Whether the element is opaque to standard lasers.</p>\n-     */\n-    protected boolean isOpaque;\n-\n-    /**\n-     * <p>Which way the element is pointing. May be null if the element has no direction.</p>\n-     */\n-    protected Heading direction;\n-\n-    protected Space space;\n-\n-    /*Getters and setters*/\n-    public void setPassable(boolean passable) {\n-        this.passable = passable;\n-    }\n-\n-    public boolean isPassable() {\n-        return passable;\n-    }\n-\n-    public boolean isOpaque() {\n-        return isOpaque;\n-    }\n-\n-    public void setOpaque(boolean opaque) {\n-        isOpaque = opaque;\n-    }\n-\n-    public Heading getDirection() {\n-        return direction;\n-    }\n-\n-    public void setDirection(Heading direction) {\n-        this.direction = direction;\n-    }\n-\n-\n-\n-    /*Constructors*/\n-    protected BoardElement(boolean passable, boolean isOpaque) {\n-        this(passable, isOpaque, null);\n-    }\n-\n-    protected BoardElement(boolean passable, boolean isOpaque, Heading direction) {\n-        this.passable = passable;\n-        this.isOpaque = isOpaque;\n-        this.direction = direction;\n-    }\n-}"
  },
  {
    "sha": "d1df1f0a63960cb82334ff9fcef6921f82fcde7d",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/BoardLaser.java",
    "status": "removed",
    "additions": 0,
    "deletions": 20,
    "changes": 20,
    "blob_url": "https://github.com/gruppe17/roborally/blob/a846f6e7f583ff5cce48508d4377981191ddcd5c/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/BoardLaser.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/a846f6e7f583ff5cce48508d4377981191ddcd5c/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/BoardLaser.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/BoardLaser.java?ref=a846f6e7f583ff5cce48508d4377981191ddcd5c",
    "patch": "@@ -1,20 +0,0 @@\n-package dk.dtu.compute.se.pisd.roborally.model.boardElement;\n-\n-import dk.dtu.compute.se.pisd.roborally.interfaces.ILaser;\n-import dk.dtu.compute.se.pisd.roborally.model.*;\n-\n-public class BoardLaser extends ActivationElement {\n-\n-\n-    protected BoardLaser(boolean passable, boolean isOpaque, Space space) {\n-        super(passable, isOpaque, space);\n-        \n-    }\n-\n-\n-    /**\n-     * <p>Represents the start and end points of the laser.</p>\n-     * <p>{start x, start y, end x, end y}</p>\n-     */\n-    int[] endPoints;\n-}"
  },
  {
    "sha": "85727e52e3d57b886ce743bb99d2903a85d5d5e1",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/MoveHazard.java",
    "status": "removed",
    "additions": 0,
    "deletions": 30,
    "changes": 30,
    "blob_url": "https://github.com/gruppe17/roborally/blob/a846f6e7f583ff5cce48508d4377981191ddcd5c/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/MoveHazard.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/a846f6e7f583ff5cce48508d4377981191ddcd5c/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/MoveHazard.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/boardElement/MoveHazard.java?ref=a846f6e7f583ff5cce48508d4377981191ddcd5c",
    "patch": "@@ -1,30 +0,0 @@\n-package dk.dtu.compute.se.pisd.roborally.model.boardElement;\n-\n-import dk.dtu.compute.se.pisd.roborally.model.Heading;\n-import dk.dtu.compute.se.pisd.roborally.model.Player;\n-import dk.dtu.compute.se.pisd.roborally.model.Space;\n-\n-/**\n- * <p>Represents a {@link ActivationElement} that moves the player.\n- * E.g. push panels and conveyor belts.</p>\n- * @author Rasmus Nylander, s205418@student.dtu.dk\n- */\n-public class MoveHazard extends ActivationElement {\n-    /**\n-     * <p>The direction this {@link MoveHazard} moves a {@link Player} in. May be null.</p>\n-     */\n-    public Heading direction;\n-    /**\n-     * <p>The number of clockwise turns. May be negative.</p>\n-     */\n-    public int rotation;\n-    /**\n-     * <p>The distance to move a {@link Player}.</p>\n-     */\n-    public int distance;\n-\n-    protected MoveHazard(boolean passable, boolean isOpaque, Space space){\n-        super(passable, isOpaque, space);\n-    }\n-\n-}"
  },
  {
    "sha": "1bb4672a82df18b4b0488c1e1901dcd396bb2d6e",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Command.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Command.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Command.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Command.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -19,7 +19,7 @@\n  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n  *\n  */\n-package dk.dtu.compute.se.pisd.roborally.model;\n+package dk.dtu.compute.se.pisd.roborally.model.enums;\n \n import java.util.List;\n ",
    "previous_filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/Command.java"
  },
  {
    "sha": "4398487764915ea9c396edb72c861247037b837c",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Heading.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Heading.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Heading.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Heading.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -19,7 +19,7 @@\n  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n  *\n  */\n-package dk.dtu.compute.se.pisd.roborally.model;\n+package dk.dtu.compute.se.pisd.roborally.model.enums;\n \n /**\n  * A heading along a basis vector.",
    "previous_filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/Heading.java"
  },
  {
    "sha": "764c27a8c85f89f70e139ad0c51fe08670de3a8a",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Phase.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Phase.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Phase.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/model/enums/Phase.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -19,7 +19,7 @@\n  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n  *\n  */\n-package dk.dtu.compute.se.pisd.roborally.model;\n+package dk.dtu.compute.se.pisd.roborally.model.enums;\n \n /**\n  * <p>Represents the current state of the program.</p>",
    "previous_filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/model/Phase.java"
  },
  {
    "sha": "bce0a05646fc2afa24b468bffe1218cfa7a3ee6d",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/view/BoardElementView.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/view/BoardElementView.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/view/BoardElementView.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/view/BoardElementView.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -2,7 +2,7 @@\n \n import dk.dtu.compute.se.pisd.designpatterns.observer.Subject;\n import dk.dtu.compute.se.pisd.roborally.imageFinder.BoardElementImageFinder;\n-import dk.dtu.compute.se.pisd.roborally.model.boardElement.BoardElement;\n+import dk.dtu.compute.se.pisd.roborally.model.board.boardElement.BoardElement;\n import javafx.scene.image.Image;\n import javafx.scene.image.ImageView;\n import javafx.scene.layout.BorderPane;\n@@ -16,7 +16,6 @@\n  */\n public class BoardElementView extends BorderPane implements ViewObserver {\n \n-\n     private BoardElementImageFinder imageFinder;\n     private ImageView imageView;\n "
  },
  {
    "sha": "2048899c38e62d3c6bb8ebbe594238a91e0c3d52",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/view/BoardView.java",
    "status": "modified",
    "additions": 7,
    "deletions": 5,
    "changes": 12,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/view/BoardView.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/view/BoardView.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/view/BoardView.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -24,7 +24,9 @@\n import dk.dtu.compute.se.pisd.designpatterns.observer.Subject;\n import dk.dtu.compute.se.pisd.roborally.RoboRally;\n import dk.dtu.compute.se.pisd.roborally.controller.GameController;\n-import dk.dtu.compute.se.pisd.roborally.model.*;\n+import dk.dtu.compute.se.pisd.roborally.model.board.Board;\n+import dk.dtu.compute.se.pisd.roborally.model.board.Space;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Phase;\n import javafx.scene.control.Label;\n import javafx.scene.layout.GridPane;\n import javafx.scene.layout.VBox;\n@@ -43,7 +45,7 @@\n     private GridPane mainBoardPane;\n     private SpaceView[][] spaces;\n \n-    private PlayersView playersView;\n+    private PlayerMatsView playerMatsView;\n \n     private Label statusLabel;\n \n@@ -52,15 +54,15 @@ public BoardView(@NotNull GameController gameController) {\n         board = gameController.board;\n \n         mainBoardPane = new GridPane();\n-        playersView = new PlayersView(gameController);\n+        playerMatsView = new PlayerMatsView(gameController);\n         statusLabel = new Label(\"<no status>\");\n \n         this.getChildren().add(mainBoardPane);\n-        this.getChildren().add(playersView);\n+        this.getChildren().add(playerMatsView);\n         this.getChildren().add(statusLabel);\n \n         RoboRally.bindSize(mainBoardPane, this, 1, 0.6);\n-        RoboRally.bindSize(playersView, this, 1, 0.38);\n+        RoboRally.bindSize(playerMatsView, this, 1, 0.38);\n         RoboRally.bindSize(statusLabel, this, 1, 0.02);\n \n         spaces = new SpaceView[board.width][board.height];"
  },
  {
    "sha": "713c4bf09a3a8591aa4c4062edcdf25025e4d18e",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/view/CardFieldView.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/view/CardFieldView.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/view/CardFieldView.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/view/CardFieldView.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -25,7 +25,7 @@\n import dk.dtu.compute.se.pisd.roborally.controller.GameController;\n import dk.dtu.compute.se.pisd.roborally.model.CommandCard;\n import dk.dtu.compute.se.pisd.roborally.model.CommandCardField;\n-import dk.dtu.compute.se.pisd.roborally.model.Phase;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Phase;\n import dk.dtu.compute.se.pisd.roborally.model.Player;\n import javafx.event.EventHandler;\n import javafx.geometry.Insets;"
  },
  {
    "sha": "4cb0b3590e22d0fa3c06d3bf08e7e4fe8eeb420d",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/view/PlayerMatView.java",
    "status": "renamed",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/view/PlayerMatView.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/view/PlayerMatView.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/view/PlayerMatView.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -25,6 +25,8 @@\n import dk.dtu.compute.se.pisd.roborally.RoboRally;\n import dk.dtu.compute.se.pisd.roborally.controller.GameController;\n import dk.dtu.compute.se.pisd.roborally.model.*;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Command;\n+import dk.dtu.compute.se.pisd.roborally.model.enums.Phase;\n import javafx.geometry.Pos;\n import javafx.scene.control.Button;\n import javafx.scene.control.Label;\n@@ -42,7 +44,7 @@\n  * @author Rasmus Nylander, s205418@student.dtu.dk\n  *\n  */\n-public class PlayerView extends Tab implements ViewObserver {\n+public class PlayerMatView extends Tab implements ViewObserver {\n \n     /**\n      * The player which this is a view for.\n@@ -120,7 +122,7 @@\n     private Button stepButton;\n \n \n-    public PlayerView(@NotNull GameController gameController, @NotNull Player player) {\n+    public PlayerMatView(@NotNull GameController gameController, @NotNull Player player) {\n         super(player.getName());\n         this.setStyle(\"-fx-text-base-color: \" + player.getColor() + \";\");\n ",
    "previous_filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/view/PlayerView.java"
  },
  {
    "sha": "acd40e0490e7951a8d6deda726f747cf8054c776",
    "filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/view/PlayerMatsView.java",
    "status": "renamed",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/gruppe17/roborally/blob/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/view/PlayerMatsView.java",
    "raw_url": "https://github.com/gruppe17/roborally/raw/4209dbc039173159b9ed829db2ca0982ccdc5ef8/src/main/java/dk/dtu/compute/se/pisd/roborally/view/PlayerMatsView.java",
    "contents_url": "https://api.github.com/repos/gruppe17/roborally/contents/src/main/java/dk/dtu/compute/se/pisd/roborally/view/PlayerMatsView.java?ref=4209dbc039173159b9ed829db2ca0982ccdc5ef8",
    "patch": "@@ -23,7 +23,7 @@\n \n import dk.dtu.compute.se.pisd.designpatterns.observer.Subject;\n import dk.dtu.compute.se.pisd.roborally.controller.GameController;\n-import dk.dtu.compute.se.pisd.roborally.model.Board;\n+import dk.dtu.compute.se.pisd.roborally.model.board.Board;\n import dk.dtu.compute.se.pisd.roborally.model.Player;\n import javafx.scene.control.TabPane;\n \n@@ -33,21 +33,21 @@\n  * @author Ekkart Kindler, ekki@dtu.dk\n  *\n  */\n-public class PlayersView extends TabPane implements ViewObserver {\n+public class PlayerMatsView extends TabPane implements ViewObserver {\n \n     private Board board;\n \n-    private PlayerView[] playerViews;\n+    private PlayerMatView[] playerMatViews;\n \n-    public PlayersView(GameController gameController) {\n+    public PlayerMatsView(GameController gameController) {\n         board = gameController.board;\n \n         this.setTabClosingPolicy(TabClosingPolicy.UNAVAILABLE);\n \n-        playerViews = new PlayerView[board.getPlayersNumber()];\n+        playerMatViews = new PlayerMatView[board.getPlayersNumber()];\n         for (int i = 0; i < board.getPlayersNumber(); i++) {\n-            playerViews[i] = new PlayerView(gameController, board.getPlayer(i));\n-            this.getTabs().add(playerViews[i]);\n+            playerMatViews[i] = new PlayerMatView(gameController, board.getPlayer(i));\n+            this.getTabs().add(playerMatViews[i]);\n         }\n         board.attach(this);\n         update(board);",
    "previous_filename": "src/main/java/dk/dtu/compute/se/pisd/roborally/view/PlayersView.java"
  }
]
