[
  {
    "sha": "a6d0c3803efb02d85ead9517fa67473d2b705c7d",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/.gitignore",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/.gitignore",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/.gitignore?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -1,6 +1,6 @@\n-# maven\n-target/\n-\n-# idea\n-.idea/\n-*.iml\n\\ No newline at end of file\n+target\n+.settings\n+.project\n+.classpath\n+.idea\n+*.iml"
  },
  {
    "sha": "bb8c4bced81b4610e8fb41edc0b4bc9b63325d86",
    "filename": "generator/generator.go",
    "status": "modified",
    "additions": 142,
    "deletions": 7,
    "changes": 149,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/generator/generator.go",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/generator/generator.go",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/generator/generator.go?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -21,11 +21,12 @@ var TYPE_SOURCE_OUTPUT_DIR = path.Join(SOURCE_OUTPUT_DIR, \"type\")\n var SERVICE_SOURCE_OUTPUT_DIR = path.Join(SOURCE_OUTPUT_DIR, \"service\")\n \n var (\n-\tblackListTypes    map[string]bool\n-\tblackListActions  map[string]bool\n-\tnoConversionTypes map[string]bool\n-\tunderscoreRegexp  *regexp.Regexp = regexp.MustCompile(`([a-z])([A-Z])`)\n-\tschemaExists      map[string]bool\n+\tblackListTypes        map[string]bool\n+\tblackListActions      map[string]bool\n+\tblackListIncludeables map[string]bool\n+\tnoConversionTypes     map[string]bool\n+\tunderscoreRegexp      *regexp.Regexp = regexp.MustCompile(`([a-z])([A-Z])`)\n+\tschemaExists          map[string]bool\n )\n \n type metadata struct {\n@@ -71,6 +72,9 @@ func init() {\n \tblackListActions[\"create\"] = true\n \tblackListActions[\"update\"] = true\n \n+\tblackListIncludeables = make(map[string]bool)\n+\tblackListIncludeables[\"clusters\"] = true\n+\n \tnoConversionTypes = make(map[string]bool)\n \tnoConversionTypes[\"string\"] = true\n \n@@ -90,6 +94,7 @@ func getTypeMap(schema client.Schema) (map[string]string, metadata) {\n \t\timportTypes:       map[string]bool{},\n \t\tactionImportTypes: map[string]bool{},\n \t}\n+\n \tresult := map[string]string{}\n \tfor name, field := range schema.ResourceFields {\n \t\tif name == \"id\" {\n@@ -172,10 +177,140 @@ func generateType(schema client.Schema) error {\n \treturn generateTemplate(schema, path.Join(TYPE_SOURCE_OUTPUT_DIR, capitalize(schema.Id)+\".java\"), \"type.template\")\n }\n \n-func generateService(schema client.Schema) error {\n+func generateService(schema client.Schema, schemas client.Schemas) error {\n+\tfor _, includeableLink := range schema.IncludeableLinks {\n+\t\tif _, ok := blackListIncludeables[includeableLink]; ok {\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\tclassNamePrefix := capitalize(schema.Id) + capitalizeClassSuffix(includeableLink)\n+\t\terr := generateTemplateIncludeable(getIncludeableSchema(schemas, includeableLink), getPrefix(schema), classNamePrefix, path.Join(SERVICE_SOURCE_OUTPUT_DIR, classNamePrefix+\"Service.java\"), \"includeable.template\")\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t}\n \treturn generateTemplate(schema, path.Join(SERVICE_SOURCE_OUTPUT_DIR, capitalize(schema.Id)+\"Service.java\"), \"service.template\")\n }\n \n+func capitalizeClassSuffix(includeableLink string) string {\n+\tvar capitalizedClassSuffix string\n+\tswitch includeableLink {\n+\tcase \"consumedservices\":\n+\t\tcapitalizedClassSuffix = \"ConsumedServices\"\n+\tcase \"consumedbyservices\":\n+\t\tcapitalizedClassSuffix = \"ConsumedByServices\"\n+\tdefault:\n+\t\tcapitalizedClassSuffix = capitalize(includeableLink)\n+\t}\n+\treturn capitalizedClassSuffix\n+}\n+\n+func getIncludeableSchema(schemas client.Schemas, includeableLink string) client.Schema {\n+\tvar result client.Schema\n+\tvar schemaId string\n+\n+\tswitch includeableLink {\n+\tcase \"networkContainer\":\n+\t\tschemaId = \"network\"\n+\tcase \"consumedService\":\n+\t\tschemaId = \"service\"\n+\tcase \"consumedservices\":\n+\t\tschemaId = \"service\"\n+\tcase \"consumedbyservices\":\n+\t\tschemaId = \"service\"\n+\tcase \"targetInstance\":\n+\t\tschemaId = \"instance\"\n+\tcase \"targetInstanceLinks\":\n+\t\tschemaId = \"instanceLink\"\n+\tcase \"hostLabels\":\n+\t\tschemaId = \"label\"\n+\tcase \"instanceLabels\":\n+\t\tschemaId = \"label\"\n+\tcase \"authenticatedAsAccount\":\n+\t\tschemaId = \"account\"\n+\tcase \"reportedAccount\":\n+\t\tschemaId = \"account\"\n+\tcase \"privateIpAddress\":\n+\t\tschemaId = \"ipAddress\"\n+\tcase \"publicIpAddress\":\n+\t\tschemaId = \"ipAddress\"\n+\tcase \"privatePorts\":\n+\t\tschemaId = \"port\"\n+\tcase \"publicPorts\":\n+\t\tschemaId = \"port\"\n+\tdefault:\n+\t\tif includeableLink[len(includeableLink)-3:] == \"ses\" {\n+\t\t\tschemaId = includeableLink[:len(includeableLink)-2]\n+\t\t} else if includeableLink[len(includeableLink)-1:] == \"s\" {\n+\t\t\tschemaId = includeableLink[:len(includeableLink)-1]\n+\t\t} else {\n+\t\t\tschemaId = includeableLink\n+\t\t}\n+\t}\n+\n+\tfor _, schema := range schemas.Data {\n+\t\tif schema.Id == schemaId {\n+\t\t\tresult = schema\n+\t\t\treturn result\n+\t\t}\n+\t}\n+\n+\treturn result\n+}\n+\n+func getPrefix(schema client.Schema) string {\n+\tvar prefix string\n+\tschemaId := schema.Id\n+\tif schemaId[len(schemaId)-1:] == \"s\" {\n+\t\tprefix = schemaId + \"es\"\n+\t} else {\n+\t\tprefix = schemaId + \"s\"\n+\t}\n+\treturn prefix\n+}\n+\n+func generateTemplateIncludeable(schema client.Schema, prefix string, classNamePrefix string, outputPath string, templateName string) error {\n+\terr := setupDirectory(path.Dir(outputPath))\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\toutput, err := os.Create(outputPath)\n+\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\tdefer output.Close()\n+\n+\ttypeMap, metadata := getTypeMap(schema)\n+\tdata := map[string]interface{}{\n+\t\t\"schema\":          schema,\n+\t\t\"classNamePrefix\": classNamePrefix,\n+\t\t\"class\":           capitalize(schema.Id),\n+\t\t\"collection\":      capitalize(schema.Id) + \"Collection\",\n+\t\t\"structFields\":    typeMap,\n+\t\t\"resourceActions\": getResourceActions(schema, metadata),\n+\t\t\"type\":            schema.Id,\n+\t\t\"meta\":            metadata,\n+\t\t\"prefix\":          prefix,\n+\t}\n+\n+\tfuncMap := template.FuncMap{\n+\t\t\"toCamelCase\":       ToLowerCamelCase,\n+\t\t\"toLowerUnderscore\": addUnderscore,\n+\t\t\"capitalize\":        capitalize,\n+\t\t\"upper\":             strings.ToUpper,\n+\t}\n+\n+\ttypeTemplate, err := template.New(templateName).Funcs(funcMap).ParseFiles(templateName)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\treturn typeTemplate.Execute(output, data)\n+}\n+\n func generateTemplate(schema client.Schema, outputPath string, templateName string) error {\n \terr := setupDirectory(path.Dir(outputPath))\n \tif err != nil {\n@@ -262,7 +397,7 @@ func generateFiles() error {\n \t\tif err != nil {\n \t\t\treturn err\n \t\t}\n-\t\terr = generateService(schema)\n+\t\terr = generateService(schema, schemas)\n \t\tif err != nil {\n \t\t\treturn err\n \t\t}"
  },
  {
    "sha": "216d773bc75487fb9acbcad53e034949c9a35664",
    "filename": "generator/includeable.template",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/generator/includeable.template",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/generator/includeable.template",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/generator/includeable.template?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,43 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.{{$.class}};{{range $import := .meta.ListActionImports}}\n+import {{$import}};{{end}}\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface {{.classNamePrefix}}Service {\n+\n+    @GET(\"{{.prefix}}/{projectId}/{{.type}}\")\n+    Call<TypeCollection<{{.class}}>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"{{.prefix}}/{projectId}/{{.type}}\")\n+    Call<TypeCollection<{{.class}}>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"{{.prefix}}/{projectId}/{{.type}}/{id}\")\n+    Call<{{.class}}> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"{{.prefix}}/{projectId}/{{.type}}\")\n+    Call<{{.class}}> create(@Path(\"projectId\") String projectId, @Body {{.class}} {{.type}});\n+\n+    @PUT(\"{{.prefix}}/{projectId}/{{.type}}/{id}\")\n+    Call<{{.class}}> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body {{.class}} {{.type}});\n+\n+    @DELETE(\"{{.prefix}}/{projectId}/{{.type}}/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    {{range $key, $value := .resourceActions}}\n+    @POST(\"{{$.prefix}}/{projectId}/{{$.type}}/{id}?action={{$key}}\"){{if eq $value.Input \"\" }}\n+    Call<{{.Output | capitalize}}> {{$key}}(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    {{else}}\n+    Call<{{.Output | capitalize}}> {{$key}}(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body {{.Input | capitalize}} {{.Input}});\n+    {{end}}{{end}}\n+}"
  },
  {
    "sha": "a86c54f225f402ec6383bb92eacfb13fca21e453",
    "filename": "generator/service.template",
    "status": "modified",
    "additions": 18,
    "deletions": 18,
    "changes": 36,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/generator/service.template",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/generator/service.template",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/generator/service.template?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -17,27 +17,27 @@ import retrofit2.http.QueryMap;\n \n public interface {{.class}}Service {\n \n-  @GET(\"{{.type}}\")\n-  Call<TypeCollection<{{.class}}>> list();\n+    @GET(\"{{.type}}\")\n+    Call<TypeCollection<{{.class}}>> list();\n \n-  @GET(\"{{.type}}\")\n-  Call<TypeCollection<{{.class}}>> list(@QueryMap Filters filters);\n+    @GET(\"{{.type}}\")\n+    Call<TypeCollection<{{.class}}>> list(@QueryMap Filters filters);\n \n-  @GET(\"{{.type}}/{id}\")\n-  Call<{{.class}}> get(@Path(\"id\") String id);\n+    @GET(\"{{.type}}/{id}\")\n+    Call<{{.class}}> get(@Path(\"id\") String id);\n \n-  @POST(\"{{.type}}\")\n-  Call<{{.class}}> create(@Body {{.class}} {{.type}});\n+    @POST(\"{{.type}}\")\n+    Call<{{.class}}> create(@Body {{.class}} {{.type}});\n \n-  @PUT(\"{{.type}}/{id}\")\n-  Call<{{.class}}> update(@Path(\"id\") String id, @Body {{.class}} {{.type}});\n+    @PUT(\"{{.type}}/{id}\")\n+    Call<{{.class}}> update(@Path(\"id\") String id, @Body {{.class}} {{.type}});\n \n-  @DELETE(\"{{.type}}/{id}\")\n-  Call<Response> delete(@Path(\"id\") String id);\n-  {{range $key, $value := .resourceActions}}\n-  @POST(\"{{$.type}}/{id}?action={{$key}}\"){{if eq $value.Input \"\" }}\n-  Call<{{.Output | capitalize}}> {{$key}}(@Path(\"id\") String id);\n-  {{else}}\n-  Call<{{.Output | capitalize}}> {{$key}}(@Path(\"id\") String id, @Body {{.Input | capitalize}} {{.Input}});\n-  {{end}}{{end}}\n+    @DELETE(\"{{.type}}/{id}\")\n+    Call<Response> delete(@Path(\"id\") String id);\n+    {{range $key, $value := .resourceActions}}\n+    @POST(\"{{$.type}}/{id}?action={{$key}}\"){{if eq $value.Input \"\" }}\n+    Call<{{.Output | capitalize}}> {{$key}}(@Path(\"id\") String id);\n+    {{else}}\n+    Call<{{.Output | capitalize}}> {{$key}}(@Path(\"id\") String id, @Body {{.Input | capitalize}} {{.Input}});\n+    {{end}}{{end}}\n }"
  },
  {
    "sha": "ab7a01ef74e7332fd79a14fe63e9a9ae50691886",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 125,
    "deletions": 2,
    "changes": 127,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/pom.xml",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/pom.xml",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/pom.xml?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -4,9 +4,131 @@\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n     <modelVersion>4.0.0</modelVersion>\n \n+    <parent>\n+        <groupId>org.sonatype.oss</groupId>\n+        <artifactId>oss-parent</artifactId>\n+        <version>9</version>\n+    </parent>\n+\n     <groupId>xausky.github.io</groupId>\n     <artifactId>rancher-java-client</artifactId>\n-    <version>1.0.0</version>\n+    <version>1.6.26-SNAPSHOT</version>\n+\n+    <scm>\n+        <developerConnection>scm:git:ssh://git@github.com:xausky/rancher-java-client.git</developerConnection>\n+        <connection>scm:git:ssh://git@github.com:xausky/rancher-java-client.git</connection>\n+        <url>https://github.com/xausky/rancher-java-client</url>\n+        <tag>HEAD</tag>\n+    </scm>\n+\n+    <distributionManagement>\n+        <snapshotRepository>\n+            <id>ossrh</id>\n+            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n+        </snapshotRepository>\n+        <repository>\n+            <id>ossrh</id>\n+            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n+        </repository>\n+    </distributionManagement>\n+\n+    <properties>\n+        <targetJdk>1.8</targetJdk>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+\n+    <profiles>\n+        <profile>\n+            <id>ossrh</id>\n+            <activation>\n+                <property>\n+                    <name>performRelease</name>\n+                    <value>true</value>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-source-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>attach-sources</id>\n+                                <goals>\n+                                    <goal>jar-no-fork</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-javadoc-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>attach-javadocs</id>\n+                                <goals>\n+                                    <goal>jar</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-gpg-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>sign-artifacts</id>\n+                                <phase>verify</phase>\n+                                <goals>\n+                                    <goal>sign</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.sonatype.plugins</groupId>\n+                        <artifactId>nexus-staging-maven-plugin</artifactId>\n+                        <extensions>true</extensions>\n+                        <configuration>\n+                            <serverId>ossrh</serverId>\n+                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n+                            <autoReleaseAfterClose>true</autoReleaseAfterClose>\n+                        </configuration>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+\n+    <build>\n+        <pluginManagement>\n+            <plugins>\n+                <plugin>\n+                    <groupId>org.apache.maven.plugins</groupId>\n+                    <artifactId>maven-compiler-plugin</artifactId>\n+                    <configuration>\n+                        <source>${targetJdk}</source>\n+                        <target>${targetJdk}</target>\n+                        <encoding>${project.build.sourceEncoding}</encoding>\n+                    </configuration>\n+                </plugin>\n+                <plugin>\n+                    <groupId>org.apache.maven.plugins</groupId>\n+                    <artifactId>maven-release-plugin</artifactId>\n+                    <configuration>\n+                        <tagNameFormat>@{project.version}</tagNameFormat>\n+                        <autoVersionSubmodules>true</autoVersionSubmodules>\n+                        <useReleaseProfile>false</useReleaseProfile>\n+                        <releaseProfiles>ossrh</releaseProfiles>\n+                        <localCheckout>true</localCheckout>\n+                        <pushChanges>false</pushChanges>\n+                        <goals>deploy</goals>\n+                    </configuration>\n+                </plugin>\n+            </plugins>\n+        </pluginManagement>\n+    </build>\n+\n     <dependencies>\n         <dependency>\n             <groupId>com.squareup.retrofit2</groupId>\n@@ -24,4 +146,5 @@\n             <version>4.12</version>\n         </dependency>\n     </dependencies>\n-</project>\n\\ No newline at end of file\n+\n+</project>"
  },
  {
    "sha": "4a25c263a7fbd4b005f5f9dc34e641a55cba4ace",
    "filename": "src/main/java/io/rancher/Rancher.java",
    "status": "modified",
    "additions": 8,
    "deletions": 9,
    "changes": 17,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/Rancher.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/Rancher.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/Rancher.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -1,15 +1,16 @@\n package io.rancher;\n \n+import java.net.URL;\n+\n import com.fasterxml.jackson.annotation.JsonInclude;\n import com.fasterxml.jackson.databind.DeserializationFeature;\n import com.fasterxml.jackson.databind.ObjectMapper;\n+\n import io.rancher.client.BasicAuthInterceptor;\n import okhttp3.OkHttpClient;\n import retrofit2.Retrofit;\n import retrofit2.converter.jackson.JacksonConverterFactory;\n \n-import java.net.URL;\n-\n public class Rancher {\n \n     private final Retrofit retrofit;\n@@ -19,12 +20,10 @@ public Rancher(final Config config) {\n                 BasicAuthInterceptor.auth(config.getAccessKey(), config.getSecretKey())\n         );\n \n-        this.retrofit = new Retrofit.Builder()\n-                .baseUrl(config.getUrl().toString())\n-                .client(builder.build())\n-                .addConverterFactory(JacksonConverterFactory.create(configureObjectMapper()))\n-                .build();\n-\n+        this.retrofit = new Retrofit.Builder().baseUrl(config.getUrl().toString())\n+                                              .client(builder.build())\n+                                              .addConverterFactory(JacksonConverterFactory.create(configureObjectMapper()))\n+                                              .build();\n     }\n \n     private ObjectMapper configureObjectMapper() {\n@@ -39,7 +38,6 @@ private ObjectMapper configureObjectMapper() {\n     }\n \n     public static class Config {\n-\n         private URL url;\n         private String accessKey;\n         private String secretKey;\n@@ -74,4 +72,5 @@ public void setSecretKey(String secretKey) {\n             this.secretKey = secretKey;\n         }\n     }\n+\n }"
  },
  {
    "sha": "3a7979bb843be5a3734f17073c2c11e90478cca6",
    "filename": "src/main/java/io/rancher/base/AbstractType.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/base/AbstractType.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/base/AbstractType.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/base/AbstractType.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -11,4 +11,5 @@ public String getId() {\n     public void setId(String id) {\n         this.id = id;\n     }\n+\n }"
  },
  {
    "sha": "4b233a44a170e8e3d9e5a3cd741805797cdb8ce0",
    "filename": "src/main/java/io/rancher/base/Filters.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/base/Filters.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/base/Filters.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/base/Filters.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -2,5 +2,4 @@\n \n import java.util.HashMap;\n \n-public class Filters extends HashMap<String, String> {\n-}\n+public class Filters extends HashMap<String, String> {}"
  },
  {
    "sha": "c032fc8fdd83fc367e58ecfc6e2327ae8ec295f8",
    "filename": "src/main/java/io/rancher/base/TypeCollection.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/base/TypeCollection.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/base/TypeCollection.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/base/TypeCollection.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -13,4 +13,5 @@\n     public void setData(List<T> data) {\n         this.data = data;\n     }\n+\n }"
  },
  {
    "sha": "b4ed34d3cc08cbaf216aac847f2e2d1878b2a885",
    "filename": "src/main/java/io/rancher/client/BasicAuthInterceptor.java",
    "status": "modified",
    "additions": 8,
    "deletions": 9,
    "changes": 17,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/client/BasicAuthInterceptor.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/client/BasicAuthInterceptor.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/client/BasicAuthInterceptor.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -1,12 +1,12 @@\n package io.rancher.client;\n \n+import java.io.IOException;\n+import java.util.Base64;\n+\n import okhttp3.Interceptor;\n import okhttp3.Request;\n import okhttp3.Response;\n \n-import java.io.IOException;\n-import java.util.Base64;\n-\n public class BasicAuthInterceptor implements Interceptor {\n \n     private final Credentials credentials;\n@@ -18,12 +18,10 @@ public BasicAuthInterceptor(Credentials credentials) {\n     @Override\n     public Response intercept(Chain chain) throws IOException {\n         Request request = chain.request();\n-        Request modifiedRequest = request.newBuilder().addHeader(\n-                \"Authorization\",\n-                \"Basic \" +\n-                        Base64.getEncoder().encodeToString(\n-                                (credentials.getUsername() + \":\" + credentials.getPassword()).getBytes())\n-        ).build();\n+        Request modifiedRequest = request.newBuilder().addHeader(\"Authorization\",\n+                                                                 \"Basic \" + Base64.getEncoder()\n+                                                                                  .encodeToString((credentials.getUsername() + \":\" + credentials.getPassword()).getBytes()))\n+                                         .build();\n         return chain.proceed(modifiedRequest);\n     }\n \n@@ -53,4 +51,5 @@ public static Credentials of(String username, String password) {\n             return new Credentials(username, password);\n         }\n     }\n+\n }"
  },
  {
    "sha": "c1538d1d8e2382693bda2827682a3de300ecc2a7",
    "filename": "src/main/java/io/rancher/service/AccountAuditLogsService.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountAuditLogsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountAuditLogsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountAuditLogsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,37 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.AuditLog;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountAuditLogsService {\n+\n+    @GET(\"accounts/{projectId}/auditLog\")\n+    Call<TypeCollection<AuditLog>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/auditLog\")\n+    Call<TypeCollection<AuditLog>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/auditLog/{id}\")\n+    Call<AuditLog> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/auditLog\")\n+    Call<AuditLog> create(@Path(\"projectId\") String projectId, @Body AuditLog auditLog);\n+\n+    @PUT(\"accounts/{projectId}/auditLog/{id}\")\n+    Call<AuditLog> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body AuditLog auditLog);\n+\n+    @DELETE(\"accounts/{projectId}/auditLog/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "ff38956f21d9ce26738606f3c77df96f58ebf837",
    "filename": "src/main/java/io/rancher/service/AccountBackupTargetsService.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountBackupTargetsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountBackupTargetsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountBackupTargetsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,40 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.BackupTarget;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountBackupTargetsService {\n+\n+    @GET(\"accounts/{projectId}/backupTarget\")\n+    Call<TypeCollection<BackupTarget>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/backupTarget\")\n+    Call<TypeCollection<BackupTarget>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/backupTarget/{id}\")\n+    Call<BackupTarget> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/backupTarget\")\n+    Call<BackupTarget> create(@Path(\"projectId\") String projectId, @Body BackupTarget backupTarget);\n+\n+    @PUT(\"accounts/{projectId}/backupTarget/{id}\")\n+    Call<BackupTarget> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body BackupTarget backupTarget);\n+\n+    @DELETE(\"accounts/{projectId}/backupTarget/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/backupTarget/{id}?action=remove\")\n+    Call<BackupTarget> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "8a40f85bce0ab5f6ad493cc931c68a5576b039fc",
    "filename": "src/main/java/io/rancher/service/AccountBackupsService.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountBackupsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountBackupsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountBackupsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,40 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.Backup;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountBackupsService {\n+\n+    @GET(\"accounts/{projectId}/backup\")\n+    Call<TypeCollection<Backup>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/backup\")\n+    Call<TypeCollection<Backup>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/backup/{id}\")\n+    Call<Backup> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/backup\")\n+    Call<Backup> create(@Path(\"projectId\") String projectId, @Body Backup backup);\n+\n+    @PUT(\"accounts/{projectId}/backup/{id}\")\n+    Call<Backup> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body Backup backup);\n+\n+    @DELETE(\"accounts/{projectId}/backup/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/backup/{id}?action=remove\")\n+    Call<Backup> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "b87dbbcac649a16b9fff27ae02058d90c0d252af",
    "filename": "src/main/java/io/rancher/service/AccountCertificatesService.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountCertificatesService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountCertificatesService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountCertificatesService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,40 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.Certificate;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountCertificatesService {\n+\n+    @GET(\"accounts/{projectId}/certificate\")\n+    Call<TypeCollection<Certificate>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/certificate\")\n+    Call<TypeCollection<Certificate>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/certificate/{id}\")\n+    Call<Certificate> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/certificate\")\n+    Call<Certificate> create(@Path(\"projectId\") String projectId, @Body Certificate certificate);\n+\n+    @PUT(\"accounts/{projectId}/certificate/{id}\")\n+    Call<Certificate> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body Certificate certificate);\n+\n+    @DELETE(\"accounts/{projectId}/certificate/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/certificate/{id}?action=remove\")\n+    Call<Certificate> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "8fa310f873b48984174a8ef8882a6a1f9276da39",
    "filename": "src/main/java/io/rancher/service/AccountContainerEventsService.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountContainerEventsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountContainerEventsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountContainerEventsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,40 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.ContainerEvent;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountContainerEventsService {\n+\n+    @GET(\"accounts/{projectId}/containerEvent\")\n+    Call<TypeCollection<ContainerEvent>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/containerEvent\")\n+    Call<TypeCollection<ContainerEvent>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/containerEvent/{id}\")\n+    Call<ContainerEvent> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/containerEvent\")\n+    Call<ContainerEvent> create(@Path(\"projectId\") String projectId, @Body ContainerEvent containerEvent);\n+\n+    @PUT(\"accounts/{projectId}/containerEvent/{id}\")\n+    Call<ContainerEvent> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body ContainerEvent containerEvent);\n+\n+    @DELETE(\"accounts/{projectId}/containerEvent/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/containerEvent/{id}?action=remove\")\n+    Call<ContainerEvent> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "0da3ceee3f9eb7ef36c9e171e09e4e19dce9432c",
    "filename": "src/main/java/io/rancher/service/AccountCredentialsService.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountCredentialsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountCredentialsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountCredentialsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,49 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.Credential;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountCredentialsService {\n+\n+    @GET(\"accounts/{projectId}/credential\")\n+    Call<TypeCollection<Credential>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/credential\")\n+    Call<TypeCollection<Credential>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/credential/{id}\")\n+    Call<Credential> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/credential\")\n+    Call<Credential> create(@Path(\"projectId\") String projectId, @Body Credential credential);\n+\n+    @PUT(\"accounts/{projectId}/credential/{id}\")\n+    Call<Credential> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body Credential credential);\n+\n+    @DELETE(\"accounts/{projectId}/credential/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/credential/{id}?action=activate\")\n+    Call<Credential> activate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/credential/{id}?action=deactivate\")\n+    Call<Credential> deactivate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/credential/{id}?action=purge\")\n+    Call<Credential> purge(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/credential/{id}?action=remove\")\n+    Call<Credential> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "2325b28c1573a8bdbaa8fb9c40a98661a7bb18ad",
    "filename": "src/main/java/io/rancher/service/AccountExternalEventsService.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountExternalEventsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountExternalEventsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountExternalEventsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,40 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.ExternalEvent;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountExternalEventsService {\n+\n+    @GET(\"accounts/{projectId}/externalEvent\")\n+    Call<TypeCollection<ExternalEvent>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/externalEvent\")\n+    Call<TypeCollection<ExternalEvent>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/externalEvent/{id}\")\n+    Call<ExternalEvent> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/externalEvent\")\n+    Call<ExternalEvent> create(@Path(\"projectId\") String projectId, @Body ExternalEvent externalEvent);\n+\n+    @PUT(\"accounts/{projectId}/externalEvent/{id}\")\n+    Call<ExternalEvent> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body ExternalEvent externalEvent);\n+\n+    @DELETE(\"accounts/{projectId}/externalEvent/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/externalEvent/{id}?action=remove\")\n+    Call<ExternalEvent> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "387cdd626032a8e195b26f97303b6ea4831bbe4f",
    "filename": "src/main/java/io/rancher/service/AccountGenericObjectsService.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountGenericObjectsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountGenericObjectsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountGenericObjectsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,40 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.GenericObject;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountGenericObjectsService {\n+\n+    @GET(\"accounts/{projectId}/genericObject\")\n+    Call<TypeCollection<GenericObject>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/genericObject\")\n+    Call<TypeCollection<GenericObject>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/genericObject/{id}\")\n+    Call<GenericObject> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/genericObject\")\n+    Call<GenericObject> create(@Path(\"projectId\") String projectId, @Body GenericObject genericObject);\n+\n+    @PUT(\"accounts/{projectId}/genericObject/{id}\")\n+    Call<GenericObject> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body GenericObject genericObject);\n+\n+    @DELETE(\"accounts/{projectId}/genericObject/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/genericObject/{id}?action=remove\")\n+    Call<GenericObject> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "f110c231b4b6d281f332d7cb39cc9348578771c2",
    "filename": "src/main/java/io/rancher/service/AccountHealthcheckInstanceHostMapsService.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountHealthcheckInstanceHostMapsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountHealthcheckInstanceHostMapsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountHealthcheckInstanceHostMapsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,40 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.HealthcheckInstanceHostMap;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountHealthcheckInstanceHostMapsService {\n+\n+    @GET(\"accounts/{projectId}/healthcheckInstanceHostMap\")\n+    Call<TypeCollection<HealthcheckInstanceHostMap>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/healthcheckInstanceHostMap\")\n+    Call<TypeCollection<HealthcheckInstanceHostMap>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/healthcheckInstanceHostMap/{id}\")\n+    Call<HealthcheckInstanceHostMap> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/healthcheckInstanceHostMap\")\n+    Call<HealthcheckInstanceHostMap> create(@Path(\"projectId\") String projectId, @Body HealthcheckInstanceHostMap healthcheckInstanceHostMap);\n+\n+    @PUT(\"accounts/{projectId}/healthcheckInstanceHostMap/{id}\")\n+    Call<HealthcheckInstanceHostMap> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body HealthcheckInstanceHostMap healthcheckInstanceHostMap);\n+\n+    @DELETE(\"accounts/{projectId}/healthcheckInstanceHostMap/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/healthcheckInstanceHostMap/{id}?action=remove\")\n+    Call<HealthcheckInstanceHostMap> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "3119d2b96274c564ee6d9525b73d9e2729d2a1e5",
    "filename": "src/main/java/io/rancher/service/AccountHostTemplatesService.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountHostTemplatesService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountHostTemplatesService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountHostTemplatesService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,40 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.HostTemplate;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountHostTemplatesService {\n+\n+    @GET(\"accounts/{projectId}/hostTemplate\")\n+    Call<TypeCollection<HostTemplate>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/hostTemplate\")\n+    Call<TypeCollection<HostTemplate>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/hostTemplate/{id}\")\n+    Call<HostTemplate> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/hostTemplate\")\n+    Call<HostTemplate> create(@Path(\"projectId\") String projectId, @Body HostTemplate hostTemplate);\n+\n+    @PUT(\"accounts/{projectId}/hostTemplate/{id}\")\n+    Call<HostTemplate> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body HostTemplate hostTemplate);\n+\n+    @DELETE(\"accounts/{projectId}/hostTemplate/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/hostTemplate/{id}?action=remove\")\n+    Call<HostTemplate> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "9c48490465f03bede01eedcd3395df0fb07b0d3c",
    "filename": "src/main/java/io/rancher/service/AccountHostsService.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountHostsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountHostsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountHostsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,62 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.Host;\n+import io.rancher.type.HostAccess;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountHostsService {\n+\n+    @GET(\"accounts/{projectId}/host\")\n+    Call<TypeCollection<Host>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/host\")\n+    Call<TypeCollection<Host>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/host/{id}\")\n+    Call<Host> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/host\")\n+    Call<Host> create(@Path(\"projectId\") String projectId, @Body Host host);\n+\n+    @PUT(\"accounts/{projectId}/host/{id}\")\n+    Call<Host> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body Host host);\n+\n+    @DELETE(\"accounts/{projectId}/host/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/host/{id}?action=activate\")\n+    Call<Host> activate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/host/{id}?action=deactivate\")\n+    Call<Host> deactivate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/host/{id}?action=dockersocket\")\n+    Call<HostAccess> dockersocket(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/host/{id}?action=error\")\n+    Call<Host> error(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/host/{id}?action=evacuate\")\n+    Call<Host> evacuate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/host/{id}?action=provision\")\n+    Call<Host> provision(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/host/{id}?action=purge\")\n+    Call<Host> purge(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/host/{id}?action=remove\")\n+    Call<Host> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "7b9c40cc69ae4be40303ba3049bed2156bfc7b7f",
    "filename": "src/main/java/io/rancher/service/AccountImagesService.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountImagesService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountImagesService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountImagesService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,49 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.Image;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountImagesService {\n+\n+    @GET(\"accounts/{projectId}/image\")\n+    Call<TypeCollection<Image>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/image\")\n+    Call<TypeCollection<Image>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/image/{id}\")\n+    Call<Image> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/image\")\n+    Call<Image> create(@Path(\"projectId\") String projectId, @Body Image image);\n+\n+    @PUT(\"accounts/{projectId}/image/{id}\")\n+    Call<Image> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body Image image);\n+\n+    @DELETE(\"accounts/{projectId}/image/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/image/{id}?action=activate\")\n+    Call<Image> activate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/image/{id}?action=deactivate\")\n+    Call<Image> deactivate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/image/{id}?action=purge\")\n+    Call<Image> purge(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/image/{id}?action=remove\")\n+    Call<Image> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "f0b424bcbc0f1521f454c44dd1dada8bc3284b58",
    "filename": "src/main/java/io/rancher/service/AccountInstanceLinksService.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountInstanceLinksService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountInstanceLinksService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountInstanceLinksService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,49 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.InstanceLink;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountInstanceLinksService {\n+\n+    @GET(\"accounts/{projectId}/instanceLink\")\n+    Call<TypeCollection<InstanceLink>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/instanceLink\")\n+    Call<TypeCollection<InstanceLink>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/instanceLink/{id}\")\n+    Call<InstanceLink> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/instanceLink\")\n+    Call<InstanceLink> create(@Path(\"projectId\") String projectId, @Body InstanceLink instanceLink);\n+\n+    @PUT(\"accounts/{projectId}/instanceLink/{id}\")\n+    Call<InstanceLink> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body InstanceLink instanceLink);\n+\n+    @DELETE(\"accounts/{projectId}/instanceLink/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instanceLink/{id}?action=activate\")\n+    Call<InstanceLink> activate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instanceLink/{id}?action=deactivate\")\n+    Call<InstanceLink> deactivate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instanceLink/{id}?action=purge\")\n+    Call<InstanceLink> purge(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instanceLink/{id}?action=remove\")\n+    Call<InstanceLink> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "99766cdb5c97fd62e5c456d8196d79d4bd0a6153",
    "filename": "src/main/java/io/rancher/service/AccountInstancesService.java",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountInstancesService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountInstancesService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountInstancesService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,79 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.Instance;\n+import io.rancher.type.InstanceStop;\n+import io.rancher.type.InstanceConsoleInput;\n+import io.rancher.type.InstanceConsole;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountInstancesService {\n+\n+    @GET(\"accounts/{projectId}/instance\")\n+    Call<TypeCollection<Instance>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/instance\")\n+    Call<TypeCollection<Instance>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/instance/{id}\")\n+    Call<Instance> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/instance\")\n+    Call<Instance> create(@Path(\"projectId\") String projectId, @Body Instance instance);\n+\n+    @PUT(\"accounts/{projectId}/instance/{id}\")\n+    Call<Instance> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body Instance instance);\n+\n+    @DELETE(\"accounts/{projectId}/instance/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=allocate\")\n+    Call<Instance> allocate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=console\")\n+    Call<InstanceConsole> console(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body InstanceConsoleInput instanceConsoleInput);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=deallocate\")\n+    Call<Instance> deallocate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=error\")\n+    Call<Instance> error(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=migrate\")\n+    Call<Instance> migrate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=purge\")\n+    Call<Instance> purge(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=remove\")\n+    Call<Instance> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=restart\")\n+    Call<Instance> restart(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=start\")\n+    Call<Instance> start(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=stop\")\n+    Call<Instance> stop(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body InstanceStop instanceStop);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=updatehealthy\")\n+    Call<Instance> updatehealthy(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=updatereinitializing\")\n+    Call<Instance> updatereinitializing(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/instance/{id}?action=updateunhealthy\")\n+    Call<Instance> updateunhealthy(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "a16809b83d566c04855d4a92cdd8cebe540c8d43",
    "filename": "src/main/java/io/rancher/service/AccountIpAddressesService.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountIpAddressesService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountIpAddressesService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountIpAddressesService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,55 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.IpAddress;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountIpAddressesService {\n+\n+    @GET(\"accounts/{projectId}/ipAddress\")\n+    Call<TypeCollection<IpAddress>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/ipAddress\")\n+    Call<TypeCollection<IpAddress>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/ipAddress/{id}\")\n+    Call<IpAddress> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/ipAddress\")\n+    Call<IpAddress> create(@Path(\"projectId\") String projectId, @Body IpAddress ipAddress);\n+\n+    @PUT(\"accounts/{projectId}/ipAddress/{id}\")\n+    Call<IpAddress> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body IpAddress ipAddress);\n+\n+    @DELETE(\"accounts/{projectId}/ipAddress/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/ipAddress/{id}?action=activate\")\n+    Call<IpAddress> activate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/ipAddress/{id}?action=associate\")\n+    Call<IpAddress> associate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/ipAddress/{id}?action=deactivate\")\n+    Call<IpAddress> deactivate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/ipAddress/{id}?action=disassociate\")\n+    Call<IpAddress> disassociate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/ipAddress/{id}?action=purge\")\n+    Call<IpAddress> purge(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/ipAddress/{id}?action=remove\")\n+    Call<IpAddress> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "6550058ce951ee85bdb084b90653f6471dd84a69",
    "filename": "src/main/java/io/rancher/service/AccountLabelsService.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountLabelsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountLabelsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountLabelsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,40 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.Label;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountLabelsService {\n+\n+    @GET(\"accounts/{projectId}/label\")\n+    Call<TypeCollection<Label>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/label\")\n+    Call<TypeCollection<Label>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/label/{id}\")\n+    Call<Label> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/label\")\n+    Call<Label> create(@Path(\"projectId\") String projectId, @Body Label label);\n+\n+    @PUT(\"accounts/{projectId}/label/{id}\")\n+    Call<Label> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body Label label);\n+\n+    @DELETE(\"accounts/{projectId}/label/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/label/{id}?action=remove\")\n+    Call<Label> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "5b696afd2ebb02c2201ae587458b7dea7b982b26",
    "filename": "src/main/java/io/rancher/service/AccountMountsService.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountMountsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountMountsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountMountsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,43 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.Mount;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountMountsService {\n+\n+    @GET(\"accounts/{projectId}/mount\")\n+    Call<TypeCollection<Mount>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/mount\")\n+    Call<TypeCollection<Mount>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/mount/{id}\")\n+    Call<Mount> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/mount\")\n+    Call<Mount> create(@Path(\"projectId\") String projectId, @Body Mount mount);\n+\n+    @PUT(\"accounts/{projectId}/mount/{id}\")\n+    Call<Mount> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body Mount mount);\n+\n+    @DELETE(\"accounts/{projectId}/mount/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/mount/{id}?action=deactivate\")\n+    Call<Mount> deactivate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/mount/{id}?action=remove\")\n+    Call<Mount> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "11bc11cfd98293c10d0be7bb628473a6f4a3c8fd",
    "filename": "src/main/java/io/rancher/service/AccountNetworkDriversService.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountNetworkDriversService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountNetworkDriversService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountNetworkDriversService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,46 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.NetworkDriver;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountNetworkDriversService {\n+\n+    @GET(\"accounts/{projectId}/networkDriver\")\n+    Call<TypeCollection<NetworkDriver>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/networkDriver\")\n+    Call<TypeCollection<NetworkDriver>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/networkDriver/{id}\")\n+    Call<NetworkDriver> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/networkDriver\")\n+    Call<NetworkDriver> create(@Path(\"projectId\") String projectId, @Body NetworkDriver networkDriver);\n+\n+    @PUT(\"accounts/{projectId}/networkDriver/{id}\")\n+    Call<NetworkDriver> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body NetworkDriver networkDriver);\n+\n+    @DELETE(\"accounts/{projectId}/networkDriver/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/networkDriver/{id}?action=activate\")\n+    Call<NetworkDriver> activate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/networkDriver/{id}?action=deactivate\")\n+    Call<NetworkDriver> deactivate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/networkDriver/{id}?action=remove\")\n+    Call<NetworkDriver> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "e03d6c78a138c80509a24e8ce601175af9cd653a",
    "filename": "src/main/java/io/rancher/service/AccountNetworksService.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountNetworksService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountNetworksService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountNetworksService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,49 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.Network;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountNetworksService {\n+\n+    @GET(\"accounts/{projectId}/network\")\n+    Call<TypeCollection<Network>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/network\")\n+    Call<TypeCollection<Network>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/network/{id}\")\n+    Call<Network> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/network\")\n+    Call<Network> create(@Path(\"projectId\") String projectId, @Body Network network);\n+\n+    @PUT(\"accounts/{projectId}/network/{id}\")\n+    Call<Network> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body Network network);\n+\n+    @DELETE(\"accounts/{projectId}/network/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/network/{id}?action=activate\")\n+    Call<Network> activate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/network/{id}?action=deactivate\")\n+    Call<Network> deactivate(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/network/{id}?action=purge\")\n+    Call<Network> purge(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/network/{id}?action=remove\")\n+    Call<Network> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  },
  {
    "sha": "31b1b9fbe01c27be0f7acb45ef51a4b6509e19dc",
    "filename": "src/main/java/io/rancher/service/AccountPhysicalHostsService.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/xausky/rancher-java-client/blob/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountPhysicalHostsService.java",
    "raw_url": "https://github.com/xausky/rancher-java-client/raw/d9efbf56b154255c3d3834f0e5cfada354f046b1/src/main/java/io/rancher/service/AccountPhysicalHostsService.java",
    "contents_url": "https://api.github.com/repos/xausky/rancher-java-client/contents/src/main/java/io/rancher/service/AccountPhysicalHostsService.java?ref=d9efbf56b154255c3d3834f0e5cfada354f046b1",
    "patch": "@@ -0,0 +1,46 @@\n+package io.rancher.service;\n+\n+import io.rancher.base.Filters;\n+import io.rancher.base.TypeCollection;\n+import io.rancher.type.PhysicalHost;\n+\n+import retrofit2.Call;\n+import retrofit2.Response;\n+import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n+import retrofit2.http.GET;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.QueryMap;\n+\n+public interface AccountPhysicalHostsService {\n+\n+    @GET(\"accounts/{projectId}/physicalHost\")\n+    Call<TypeCollection<PhysicalHost>> list(@Path(\"projectId\") String projectId);\n+\n+    @GET(\"accounts/{projectId}/physicalHost\")\n+    Call<TypeCollection<PhysicalHost>> list(@Path(\"projectId\") String projectId, @QueryMap Filters filters);\n+\n+    @GET(\"accounts/{projectId}/physicalHost/{id}\")\n+    Call<PhysicalHost> get(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+\n+    @POST(\"accounts/{projectId}/physicalHost\")\n+    Call<PhysicalHost> create(@Path(\"projectId\") String projectId, @Body PhysicalHost physicalHost);\n+\n+    @PUT(\"accounts/{projectId}/physicalHost/{id}\")\n+    Call<PhysicalHost> update(@Path(\"projectId\") String projectId, @Path(\"id\") String id, @Body PhysicalHost physicalHost);\n+\n+    @DELETE(\"accounts/{projectId}/physicalHost/{id}\")\n+    Call<Response> delete(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/physicalHost/{id}?action=bootstrap\")\n+    Call<PhysicalHost> bootstrap(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/physicalHost/{id}?action=error\")\n+    Call<PhysicalHost> error(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+    @POST(\"accounts/{projectId}/physicalHost/{id}?action=remove\")\n+    Call<PhysicalHost> remove(@Path(\"projectId\") String projectId, @Path(\"id\") String id);\n+    \n+}"
  }
]
