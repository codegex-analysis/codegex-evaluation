[
  {
    "sha": "86b2e391ca3dd9990ec65e0bca0a8982d27b83cd",
    "filename": "resources/assets.py",
    "status": "modified",
    "additions": 332,
    "deletions": 16,
    "changes": 348,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/resources/assets.py",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/resources/assets.py",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/resources/assets.py?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -115,6 +115,28 @@ def generate(rm: ResourceManager):\n                             loot_tables.set_count(1, 4)\n                         ]\n                     })\n+                elif block_type == 'gravel':\n+                    block.with_block_loot({\n+                        'entries': [{\n+                            'type': 'minecraft:alternatives',\n+                            'children': utils.loot_entry_list([{\n+                                'conditions': [silk_touch()],\n+                                'name': 'tfc:rock/gravel/%s' % rock\n+                            }, utils.loot_entry_list([{\n+                                'type': 'minecraft:alternatives',\n+                                'conditions': 'minecraft:survives_explosion',\n+                                'children': [{\n+                                        'type': 'minecraft:item',\n+                                        'conditions': [fortune_table([0.1, 0.14285715, 0.25, 1.0])],\n+                                        'name': 'minecraft:flint'\n+                                    }, {\n+                                        'type': 'minecraft:item',\n+                                        'name': 'tfc:rock/gravel/%s' % rock\n+                                    }]\n+                                }])\n+                            ])\n+                        }]\n+                    })\n                 else:\n                     block.with_block_loot('tfc:rock/%s/%s' % (block_type, rock))\n                 # Lang\n@@ -194,15 +216,45 @@ def generate(rm: ResourceManager):\n             block.with_block_loot('tfc:groundcover/%s' % misc)\n             rm.item_model(('groundcover', misc), 'tfc:item/groundcover/%s' % misc)\n \n-    # Peat\n-    block = rm.blockstate('peat')\n-    block.with_block_model('tfc:block/peat')\n-    block.with_item_model()\n-    block.with_block_loot('tfc:peat')\n-    block.with_lang(lang('Peat'))\n-\n+    rm.blockstate('peat').with_block_model().with_item_model().with_lang('tfc:peat').with_lang(lang('Peat'))\n+    rm.blockstate('aggregate').with_block_model().with_item_model().with_block_loot('tfc:aggregate').with_lang(lang('Aggregate'))\n+    rm.blockstate('fire_bricks').with_block_model().with_item_model().with_block_loot('tfc:fire_bricks').with_lang(lang('Fire Bricks'))\n+    rm.blockstate('fire_clay_block').with_block_model().with_item_model().with_block_loot('tfc:fire_clay_block').with_lang(lang('Fire Clay Block'))\n     rm.blockstate('thatch').with_block_model().with_item_model().with_block_loot('tfc:thatch').with_lang(lang('Thatch'))\n \n+    rm.blockstate(('alabaster', 'raw', 'alabaster')).with_block_model().with_item_model().with_block_loot('tfc:alabaster/raw/alabaster').with_lang(lang('Alabaster'))\n+    rm.blockstate(('alabaster', 'raw', 'alabaster_bricks')).with_block_model().with_item_model().with_block_loot('tfc:alabaster/raw/alabaster_bricks').with_lang(lang('Alabaster Bricks'))\n+    rm.blockstate(('alabaster', 'raw', 'polished_alabaster')).with_block_model().with_item_model().with_block_loot('tfc:alabaster/raw/polished_alabaster').with_lang(lang('Polished Alabaster'))\n+\n+    for color in COLORS:\n+        rm.blockstate(('alabaster', 'stained', color + '_raw_alabaster')).with_block_model().with_item_model().with_block_loot('tfc:alabaster/stained/' + color + '_raw_alabaster').with_lang(lang('%s Raw Alabaster', color))\n+        rm.blockstate(('alabaster', 'stained', color + '_alabaster_bricks')).with_block_model().with_item_model().with_block_loot('tfc:alabaster/stained/' + color + '_alabaster_bricks').with_lang(lang('%s Alabaster Bricks', color))\n+        rm.blockstate(('alabaster', 'stained', color + '_polished_alabaster')).with_block_model().with_item_model().with_block_loot('tfc:alabaster/stained/' + color + '_polished_alabaster').with_lang(lang('%s Polished Alabaster', color))\n+\n+    rm.item_model('torch', 'minecraft:block/torch')\n+    rm.item_model('dead_torch', 'tfc:block/torch_off')\n+    rm.block_model('dead_torch', parent='minecraft:block/template_torch', textures={'torch': 'tfc:block/torch_off'})\n+    rm.block_model('dead_wall_torch', parent='minecraft:block/template_torch_wall', textures={'torch': 'tfc:block/torch_off'})\n+    rm.blockstate('wall_torch', variants={\n+        'facing=east': {'model': 'minecraft:block/wall_torch'},\n+        'facing=north': {'model': 'minecraft:block/wall_torch', 'y': 270},\n+        'facing=south': {'model': 'minecraft:block/wall_torch', 'y': 90},\n+        'facing=west': {'model': 'minecraft:block/wall_torch', 'y': 180}\n+    }).with_lang(lang('Torch')).with_block_loot('minecraft:stick')\n+    rm.blockstate('dead_wall_torch', variants={\n+        'facing=east': {'model': 'tfc:block/dead_wall_torch'},\n+        'facing=north': {'model': 'tfc:block/dead_wall_torch', 'y': 270},\n+        'facing=south': {'model': 'tfc:block/dead_wall_torch', 'y': 90},\n+        'facing=west': {'model': 'tfc:block/dead_wall_torch', 'y': 180}\n+    }).with_lang(lang('Torch')).with_block_loot('minecraft:stick').with_lang(lang('Burnt Out Torch')).with_block_loot('tfc:torch')\n+    rm.blockstate('torch', 'minecraft:block/torch').with_lang(lang('Torch'))\n+    rm.blockstate('dead_torch', 'tfc:block/dead_torch').with_lang(lang('Burnt Out Torch'))\n+\n+    rm.blockstate('charcoal_pile', variants=dict((('layers=%d' % i), {'model': 'tfc:block/charcoal_pile/charcoal_height%d' % (i * 2) if i != 8 else 'tfc:block/charcoal_pile/charcoal_block'}) for i in range(1, 1 + 8))).with_lang(lang('Charcoal Pile')).with_block_loot('minecraft:charcoal')\n+    rm.blockstate('log_pile', variants={'axis=x': {'model': 'tfc:block/log_pile', 'y': 90, 'x': 90}, 'axis=z': {'model': 'tfc:block/log_pile', 'x': 90}}) \\\n+        .with_block_model(textures={'side': 'tfc:block/log_pile_side', 'end': 'tfc:block/log_pile_front'}, parent='minecraft:block/cube_column_horizontal').with_lang(lang('Log Pile'))\n+    rm.blockstate('burning_log_pile', model='tfc:block/burning_log_pile').with_block_model(parent='minecraft:block/cube_all', textures={'all': 'tfc:block/devices/charcoal_forge/lit'}).with_lang(lang('Burning Log Pile'))\n+\n     block = rm.block_model('thatch_bed').with_item_model().with_lang(lang('Thatch Bed'))\n     block.with_block_loot({\n         'entries': [{\n@@ -215,6 +267,44 @@ def generate(rm: ResourceManager):\n         ]\n     })\n \n+    rm.blockstate('firepit', variants={\n+        'lit=true': {'model': 'tfc:block/firepit_lit'},\n+        'lit=false': {'model': 'tfc:block/firepit_unlit'}\n+    }).with_lang(lang('Firepit')).with_block_loot([{\n+        'entries': 'tfc:powder/wood_ash',\n+        'functions': [\n+            loot_tables.set_count(1, 4)\n+        ],\n+    }])\n+    rm.item_model('firepit', parent='tfc:block/firepit_unlit')\n+\n+    rm.blockstate_multipart('grill', [\n+        ({'model': 'tfc:block/firepit_grill'}),\n+        ({'lit': True}, {'model': 'tfc:block/firepit_lit'}),\n+        ({'lit': False}, {'model': 'tfc:block/firepit_unlit'})\n+    ]).with_lang(lang('Grill')).with_block_loot([{\n+        'entries': 'tfc:powder/wood_ash',\n+        'functions': [\n+            loot_tables.set_count(1, 4)\n+        ],\n+    }, {'entries': 'tfc:wrought_iron_grill'}])\n+    rm.item_model('grill', parent='tfc:block/firepit_grill')\n+\n+    rm.blockstate_multipart('pot', [\n+        ({'model': 'tfc:block/firepit_pot'}),\n+        ({'lit': True}, {'model': 'tfc:block/firepit_lit'}),\n+        ({'lit': False}, {'model': 'tfc:block/firepit_unlit'})\n+    ]).with_lang(lang('Pot')).with_block_loot([{\n+        'entries': 'tfc:powder/wood_ash',\n+        'functions': [\n+            loot_tables.set_count(1, 4)\n+        ],\n+    }, {'entries': 'tfc:ceramic/pot'}])\n+    rm.item_model('pot', parent='tfc:block/firepit_pot')\n+\n+    rm.blockstate('placed_item', 'tfc:block/empty')\n+    rm.blockstate('pit_kiln', variants=dict((('stage=%d' % i), {'model': 'tfc:block/pitkiln/pitkiln_%d' % i}) for i in range(0, 1 + 16))).with_lang(lang('Pit Kiln'))\n+\n     # Dirt\n     for soil in SOIL_BLOCK_VARIANTS:\n         # Regular Dirt\n@@ -370,30 +460,251 @@ def snow_block_loot_table(block: str):\n                 block.with_lang(lang('%s %s' % (metal, metal_block)))\n                 block.with_item_model()\n \n-    # Gems\n+    # Misc Items\n     for gem in GEMS:\n         rm.item_model(('gem', gem)).with_lang(lang('cut %s', gem))\n         rm.item_model(('powder', gem)).with_lang(lang('%s powder', gem))\n-\n+    for powder in GENERIC_POWDERS:\n+        rm.item_model(('powder', powder)).with_lang(lang('%s Powder', powder))\n+    for powder in POWDERS:\n+        rm.item_model(('powder', powder)).with_lang(lang(powder))\n+    for item in SIMPLE_ITEMS:\n+        rm.item_model(item).with_lang(lang(item))\n+    for pottery in PAIRED_POTTERY:\n+        rm.item_model(('ceramic', pottery)).with_lang(lang(pottery))\n+        rm.item_model(('ceramic', 'unfired_' + pottery)).with_lang(lang('Unfired %s', pottery))\n+    for pottery in UNFIRED_ITEMS:\n+        rm.item_model(('ceramic', 'unfired_' + pottery)).with_lang(lang('Unfired %s', pottery))\n+    # todo: custom model\n+    rm.item_model(('ceramic', 'jug')).with_lang(lang('Jug'))\n+    for color in COLORS:\n+        rm.item_model(('ceramic', color + '_unfired_vessel')).with_lang(lang('%s Unfired Vessel', color))\n+        rm.item_model(('ceramic', color + '_glazed_vessel')).with_lang(lang('%s Glazed Vessel', color))\n     # Plants\n     for plant, plant_data in PLANTS.items():\n         rm.lang('block.tfc.plant.%s' % plant, lang(plant))\n     for plant in MISC_PLANT_FEATURES:\n         rm.lang('block.tfc.plant.%s' % plant, lang(plant))\n     for plant in ('tree_fern', 'arundo', 'winged_kelp', 'leafy_kelp', 'giant_kelp_flower'):\n         rm.lang('block.tfc.plant.%s' % plant, lang(plant))\n+        # todo: knife harvesting of plants\n+        rm.block_loot('tfc:plant/%s' % plant, 'tfc:plant/%s' % plant)\n     rm.lang('block.tfc.sea_pickle', lang('sea_pickle'))\n \n+    # Berry Stuff\n+    for berry in BERRIES.keys():\n+        rm.item_model('food/' + berry).with_lang(lang(berry))\n+\n+    rm.blockstate('berry_bush/dead_bush', variants={\n+        'stage=0': {'model': 'tfc:block/berry_bush/dead_bush_0'},\n+        'stage=1': {'model': 'tfc:block/berry_bush/dead_bush_1'},\n+        'stage=2': {'model': 'tfc:block/berry_bush/dead_bush_2'}\n+    }).with_lang(lang('Dead Bush')).with_tag('any_spreading_bush')\n+    rm.blockstate('berry_bush/dead_cane', variants={\n+        'facing=east,stage=0': {'model': 'tfc:block/berry_bush/dead_bush_side_0', 'y': 90},\n+        'facing=north,stage=0': {'model': 'tfc:block/berry_bush/dead_bush_side_0'},\n+        'facing=south,stage=0': {'model': 'tfc:block/berry_bush/dead_bush_side_0', 'y': 180},\n+        'facing=west,stage=0': {'model': 'tfc:block/berry_bush/dead_bush_side_0', 'y': 270},\n+        'facing=east,stage=1': {'model': 'tfc:block/berry_bush/dead_bush_side_1', 'y': 90},\n+        'facing=north,stage=1': {'model': 'tfc:block/berry_bush/dead_bush_side_1'},\n+        'facing=south,stage=1': {'model': 'tfc:block/berry_bush/dead_bush_side_1', 'y': 180},\n+        'facing=west,stage=1': {'model': 'tfc:block/berry_bush/dead_bush_side_1', 'y': 270},\n+        'facing=east,stage=2': {'model': 'tfc:block/berry_bush/dead_bush_side_2', 'y': 90},\n+        'facing=north,stage=2': {'model': 'tfc:block/berry_bush/dead_bush_side_2'},\n+        'facing=south,stage=2': {'model': 'tfc:block/berry_bush/dead_bush_side_2', 'y': 180},\n+        'facing=west,stage=2': {'model': 'tfc:block/berry_bush/dead_bush_side_2', 'y': 270}\n+    }).with_lang(lang('Dead Cane')).with_tag('any_spreading_bush')\n+    for berry in ('blackberry', 'raspberry', 'blueberry', 'elderberry'):\n+        rm.blockstate('berry_bush/%s_bush' % berry, variants={\n+            'lifecycle=healthy,stage=0': {'model': 'tfc:block/berry_bush/%s_bush_0' % berry},\n+            'lifecycle=healthy,stage=1': {'model': 'tfc:block/berry_bush/%s_bush_1' % berry},\n+            'lifecycle=healthy,stage=2': {'model': 'tfc:block/berry_bush/%s_bush_2' % berry},\n+            'lifecycle=dormant,stage=0': {'model': 'tfc:block/berry_bush/dry_%s_bush_0' % berry},\n+            'lifecycle=dormant,stage=1': {'model': 'tfc:block/berry_bush/dry_%s_bush_1' % berry},\n+            'lifecycle=dormant,stage=2': {'model': 'tfc:block/berry_bush/dry_%s_bush_2' % berry},\n+            'lifecycle=fruiting,stage=0': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_0' % berry},\n+            'lifecycle=fruiting,stage=1': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_1' % berry},\n+            'lifecycle=fruiting,stage=2': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_2' % berry},\n+            'lifecycle=flowering,stage=0': {'model': 'tfc:block/berry_bush/flowering_%s_bush_0' % berry},\n+            'lifecycle=flowering,stage=1': {'model': 'tfc:block/berry_bush/flowering_%s_bush_1' % berry},\n+            'lifecycle=flowering,stage=2': {'model': 'tfc:block/berry_bush/flowering_%s_bush_2' % berry},\n+        }).with_lang(lang('%s Bush', berry))\n+        rm.blockstate('berry_bush/%s_bush_cane' % berry, variants={\n+            'lifecycle=healthy,facing=east,stage=0': {'model': 'tfc:block/berry_bush/%s_bush_side_0' % berry, 'y': 90},\n+            'lifecycle=healthy,facing=north,stage=0': {'model': 'tfc:block/berry_bush/%s_bush_side_0' % berry},\n+            'lifecycle=healthy,facing=south,stage=0': {'model': 'tfc:block/berry_bush/%s_bush_side_0' % berry, 'y': 180},\n+            'lifecycle=healthy,facing=west,stage=0': {'model': 'tfc:block/berry_bush/%s_bush_side_0' % berry, 'y': 270},\n+            'lifecycle=healthy,facing=east,stage=1': {'model': 'tfc:block/berry_bush/%s_bush_side_1' % berry, 'y': 90},\n+            'lifecycle=healthy,facing=north,stage=1': {'model': 'tfc:block/berry_bush/%s_bush_side_1' % berry},\n+            'lifecycle=healthy,facing=south,stage=1': {'model': 'tfc:block/berry_bush/%s_bush_side_1' % berry, 'y': 180},\n+            'lifecycle=healthy,facing=west,stage=1': {'model': 'tfc:block/berry_bush/%s_bush_side_1' % berry, 'y': 270},\n+            'lifecycle=healthy,facing=east,stage=2': {'model': 'tfc:block/berry_bush/%s_bush_side_2' % berry, 'y': 90},\n+            'lifecycle=healthy,facing=north,stage=2': {'model': 'tfc:block/berry_bush/%s_bush_side_2' % berry},\n+            'lifecycle=healthy,facing=south,stage=2': {'model': 'tfc:block/berry_bush/%s_bush_side_2' % berry, 'y': 180},\n+            'lifecycle=healthy,facing=west,stage=2': {'model': 'tfc:block/berry_bush/%s_bush_side_2' % berry, 'y': 270},\n+            'lifecycle=dormant,facing=east,stage=0': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_0' % berry, 'y': 90},\n+            'lifecycle=dormant,facing=north,stage=0': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_0' % berry},\n+            'lifecycle=dormant,facing=south,stage=0': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_0' % berry, 'y': 180},\n+            'lifecycle=dormant,facing=west,stage=0': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_0' % berry, 'y': 270},\n+            'lifecycle=dormant,facing=east,stage=1': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_1' % berry, 'y': 90},\n+            'lifecycle=dormant,facing=north,stage=1': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_1' % berry},\n+            'lifecycle=dormant,facing=south,stage=1': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_1' % berry, 'y': 180},\n+            'lifecycle=dormant,facing=west,stage=1': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_1' % berry, 'y': 270},\n+            'lifecycle=dormant,facing=east,stage=2': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_2' % berry, 'y': 90},\n+            'lifecycle=dormant,facing=north,stage=2': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_2' % berry},\n+            'lifecycle=dormant,facing=south,stage=2': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_2' % berry, 'y': 180},\n+            'lifecycle=dormant,facing=west,stage=2': {'model': 'tfc:block/berry_bush/dry_%s_bush_side_2' % berry, 'y': 270},\n+            'lifecycle=fruiting,facing=east,stage=0': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_0' % berry, 'y': 90},\n+            'lifecycle=fruiting,facing=north,stage=0': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_0' % berry},\n+            'lifecycle=fruiting,facing=south,stage=0': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_0' % berry, 'y': 180},\n+            'lifecycle=fruiting,facing=west,stage=0': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_0' % berry, 'y': 270},\n+            'lifecycle=fruiting,facing=east,stage=1': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_1' % berry, 'y': 90},\n+            'lifecycle=fruiting,facing=north,stage=1': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_1' % berry},\n+            'lifecycle=fruiting,facing=south,stage=1': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_1' % berry, 'y': 180},\n+            'lifecycle=fruiting,facing=west,stage=1': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_1' % berry, 'y': 270},\n+            'lifecycle=fruiting,facing=east,stage=2': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_2' % berry, 'y': 90},\n+            'lifecycle=fruiting,facing=north,stage=2': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_2' % berry},\n+            'lifecycle=fruiting,facing=south,stage=2': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_2' % berry, 'y': 180},\n+            'lifecycle=fruiting,facing=west,stage=2': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_side_2' % berry, 'y': 270},\n+            'lifecycle=flowering,facing=east,stage=0': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_0' % berry, 'y': 90},\n+            'lifecycle=flowering,facing=north,stage=0': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_0' % berry},\n+            'lifecycle=flowering,facing=south,stage=0': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_0' % berry, 'y': 180},\n+            'lifecycle=flowering,facing=west,stage=0': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_0' % berry, 'y': 270},\n+            'lifecycle=flowering,facing=east,stage=1': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_1' % berry, 'y': 90},\n+            'lifecycle=flowering,facing=north,stage=1': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_1' % berry},\n+            'lifecycle=flowering,facing=south,stage=1': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_1' % berry, 'y': 180},\n+            'lifecycle=flowering,facing=west,stage=1': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_1' % berry, 'y': 270},\n+            'lifecycle=flowering,facing=east,stage=2': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_2' % berry, 'y': 90},\n+            'lifecycle=flowering,facing=north,stage=2': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_2' % berry},\n+            'lifecycle=flowering,facing=south,stage=2': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_2' % berry, 'y': 180},\n+            'lifecycle=flowering,facing=west,stage=2': {'model': 'tfc:block/berry_bush/flowering_%s_bush_side_2' % berry, 'y': 270},\n+        }).with_lang(lang('%s Cane', berry))\n+        rm.item_model('berry_bush/%s_bush' % berry, 'tfc:block/berry_bush/%s_cane' % berry)\n+        for state in ('', 'flowering_', 'dry_', 'fruiting_'):\n+            bush_textures = {'cane': 'tfc:block/berry_bush/' + state + '%s_cane' % berry, 'bush': 'tfc:block/berry_bush/' + state + '%s_bush' % berry}\n+            for i in range(0, 3):\n+                rm.block_model('berry_bush/' + state + berry + '_bush_%d' % i, parent='tfc:block/berry_bush/berry_bush_%d' % i, textures=bush_textures)\n+                rm.block_model('berry_bush/' + state + berry + '_bush_side_%d' % i, parent='tfc:block/berry_bush/berry_bush_side_%d' % i, textures=bush_textures)\n+        rm.block_tag('spreading_bush', 'berry_bush/%s_bush' % berry, 'berry_bush/%s_bush_cane' % berry)\n+    for i in range(0, 3):\n+        rm.block_model('berry_bush/dead_bush_%d' % i, parent='tfc:block/berry_bush/berry_bush_%d' % i, textures={'cane': 'tfc:block/berry_bush/dead_cane', 'bush': 'tfc:block/berry_bush/dead_bush'})\n+        rm.block_model('berry_bush/dead_bush_side_%d' % i, parent='tfc:block/berry_bush/berry_bush_side_%d' % i, textures={'cane': 'tfc:block/berry_bush/dead_cane', 'bush': 'tfc:block/berry_bush/dead_bush'})\n+    for berry in ('gooseberry', 'snowberry', 'bunchberry', 'cloudberry', 'wintergreen_berry', 'strawberry', 'cranberry'):\n+        rm.blockstate('berry_bush/%s_bush' % berry, variants={\n+            'lifecycle=healthy,stage=0': {'model': 'tfc:block/berry_bush/%s_bush_0' % berry},\n+            'lifecycle=healthy,stage=1': {'model': 'tfc:block/berry_bush/%s_bush_1' % berry},\n+            'lifecycle=healthy,stage=2': {'model': 'tfc:block/berry_bush/%s_bush_2' % berry},\n+            'lifecycle=dormant,stage=0': {'model': 'tfc:block/berry_bush/dry_%s_bush_0' % berry},\n+            'lifecycle=dormant,stage=1': {'model': 'tfc:block/berry_bush/dry_%s_bush_1' % berry},\n+            'lifecycle=dormant,stage=2': {'model': 'tfc:block/berry_bush/dry_%s_bush_2' % berry},\n+            'lifecycle=fruiting,stage=0': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_0' % berry},\n+            'lifecycle=fruiting,stage=1': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_1' % berry},\n+            'lifecycle=fruiting,stage=2': {'model': 'tfc:block/berry_bush/fruiting_%s_bush_2' % berry},\n+            'lifecycle=flowering,stage=0': {'model': 'tfc:block/berry_bush/flowering_%s_bush_0' % berry},\n+            'lifecycle=flowering,stage=1': {'model': 'tfc:block/berry_bush/flowering_%s_bush_1' % berry},\n+            'lifecycle=flowering,stage=2': {'model': 'tfc:block/berry_bush/flowering_%s_bush_2' % berry},\n+        }).with_lang(lang('%s Bush', berry))\n+        rm.item_model('berry_bush/%s_bush' % berry, 'tfc:block/berry_bush/%s_bush' % berry)\n+        for state in ('', 'flowering_', 'dry_', 'fruiting_'):\n+            for i in range(0, 3):\n+                rm.block_model('berry_bush/' + state + berry + '_bush_%d' % i, parent='tfc:block/berry_bush/stationary_bush_%d' % i, textures={'bush': 'tfc:block/berry_bush/' + state + '%s_bush' % berry})\n+\n+    for fruit in FRUITS.keys():\n+        if fruit != 'banana':\n+            for prefix in ('', 'growing_'):\n+                block = rm.blockstate_multipart('fruit_tree/' + fruit + '_' + prefix + 'branch', [\n+                    ({'model': 'tfc:block/fruit_tree/%s_branch_core' % fruit}),\n+                    ({'down': True}, {'model': 'tfc:block/fruit_tree/%s_branch_down' % fruit}),\n+                    ({'up': True}, {'model': 'tfc:block/fruit_tree/%s_branch_up' % fruit}),\n+                    ({'north': True}, {'model': 'tfc:block/fruit_tree/%s_branch_side' % fruit, 'y': 90}),\n+                    ({'south': True}, {'model': 'tfc:block/fruit_tree/%s_branch_side' % fruit, 'y': 270}),\n+                    ({'west': True}, {'model': 'tfc:block/fruit_tree/%s_branch_side' % fruit}),\n+                    ({'east': True}, {'model': 'tfc:block/fruit_tree/%s_branch_side' % fruit, 'y': 180})\n+                ]).with_tag('fruit_tree_branch').with_item_model().with_lang(lang('%s Branch', fruit))\n+                if prefix == '':\n+                    block.with_block_loot({\n+                        'entries': [{\n+                            'type': 'minecraft:item',\n+                            'conditions': [{\n+                                'condition': 'alternative',\n+                                'terms': [\n+                                    block_state_property('tfc:fruit_tree/%s_branch' % fruit, {'up': 'true', 'west': 'true'}),\n+                                    block_state_property('tfc:fruit_tree/%s_branch' % fruit, {'up': 'true', 'east': 'true'}),\n+                                    block_state_property('tfc:fruit_tree/%s_branch' % fruit, {'up': 'true', 'north': 'true'}),\n+                                    block_state_property('tfc:fruit_tree/%s_branch' % fruit, {'up': 'true', 'south': 'true'})\n+                                ]\n+                            }],\n+                            'name': 'tfc:fruit_tree/%s_sapling' % fruit\n+                        }]\n+                    })\n+            for part in ('down', 'side', 'up', 'core'):\n+                rm.block_model('tfc:fruit_tree/%s_branch_%s' % (fruit, part), parent='tfc:block/fruit_tree/branch_%s' % part, textures={'bark': 'tfc:block/fruit_tree/%s_branch' % fruit})\n+            rm.blockstate('fruit_tree/%s_leaves' % fruit, variants={\n+                'lifecycle=flowering': {'model': 'tfc:block/fruit_tree/%s_flowering_leaves' % fruit},\n+                'lifecycle=fruiting': {'model': 'tfc:block/fruit_tree/%s_fruiting_leaves' % fruit},\n+                'lifecycle=dormant': {'model': 'tfc:block/fruit_tree/%s_dry_leaves' % fruit},\n+                'lifecycle=healthy': {'model': 'tfc:block/fruit_tree/%s_leaves' % fruit}\n+            }).with_lang('%s Leaves', fruit).with_item_model().with_tag('minecraft:leaves').with_tag('fruit_tree_leaves').with_lang(lang('%s Leaves', fruit))\n+            for life in ('', '_fruiting', '_flowering', '_dry'):\n+                rm.block_model('tfc:fruit_tree/%s%s_leaves' % (fruit, life), parent='block/leaves', textures={'all': 'tfc:block/fruit_tree/%s%s_leaves' % (fruit, life)})\n+\n+            rm.blockstate(('fruit_tree', '%s_sapling' % fruit), variants={'saplings=%d' % i: {'model': 'tfc:block/fruit_tree/%s_sapling_%d' % (fruit, i)} for i in range(1, 4 + 1)}).with_lang(lang('%s Sapling', fruit)).with_tag('fruit_tree_sapling')\n+            rm.block_loot(('fruit_tree', '%s_sapling' % fruit), {\n+                'entries': [{\n+                    'name': 'tfc:fruit_tree/%s_sapling' % fruit,\n+                    'functions': [\n+                        {**loot_tables.set_count(1), 'conditions': [block_state_property('tfc:fruit_tree/%s_sapling' % fruit, {'saplings': '1'})]},\n+                        {**loot_tables.set_count(2), 'conditions': [block_state_property('tfc:fruit_tree/%s_sapling' % fruit, {'saplings': '2'})]},\n+                        {**loot_tables.set_count(3), 'conditions': [block_state_property('tfc:fruit_tree/%s_sapling' % fruit, {'saplings': '3'})]},\n+                        {**loot_tables.set_count(4), 'conditions': [block_state_property('tfc:fruit_tree/%s_sapling' % fruit, {'saplings': '4'})]},\n+                        explosion_decay()\n+                    ]\n+                }]\n+            })\n+            for i in range(2, 4 + 1):\n+                rm.block_model(('fruit_tree', '%s_sapling_%d' % (fruit, i)), parent='tfc:block/fruit_tree/cross_%s' % i, textures={'cross': 'tfc:block/fruit_tree/%s_sapling' % fruit})\n+            rm.block_model(('fruit_tree', '%s_sapling_1' % fruit), {'cross': 'tfc:block/fruit_tree/%s_sapling' % fruit}, 'block/cross')\n+        else:\n+            rm.blockstate('fruit_tree/banana_plant', variants={\n+                'lifecycle=healthy,stage=0': {'model': 'tfc:block/fruit_tree/banana_trunk_0'},\n+                'lifecycle=healthy,stage=1': {'model': 'tfc:block/fruit_tree/banana_trunk_1'},\n+                'lifecycle=healthy,stage=2': {'model': 'tfc:block/fruit_tree/banana_trunk_2'},\n+                'lifecycle=dormant,stage=0': {'model': 'tfc:block/fruit_tree/banana_trunk_0'},\n+                'lifecycle=dormant,stage=1': {'model': 'tfc:block/fruit_tree/banana_trunk_1'},\n+                'lifecycle=dormant,stage=2': {'model': 'tfc:block/fruit_tree/banana_trunk_2'},\n+                'lifecycle=fruiting,stage=0': {'model': 'tfc:block/fruit_tree/banana_trunk_0'},\n+                'lifecycle=fruiting,stage=1': {'model': 'tfc:block/fruit_tree/banana_trunk_1'},\n+                'lifecycle=fruiting,stage=2': {'model': 'tfc:block/fruit_tree/banana_trunk_2_fruiting'},\n+                'lifecycle=flowering,stage=0': {'model': 'tfc:block/fruit_tree/banana_trunk_0'},\n+                'lifecycle=flowering,stage=1': {'model': 'tfc:block/fruit_tree/banana_trunk_1'},\n+                'lifecycle=flowering,stage=2': {'model': 'tfc:block/fruit_tree/banana_trunk_2_flowering'},\n+            }).with_lang(lang('Banana Plant')).with_tag('fruit_tree_branch').with_block_loot({\n+                'entries': [{\n+                    'name': 'tfc:fruit_tree/banana_sapling',\n+                    'functions': [{**loot_tables.set_count(1, 2)}],\n+                    'conditions': [block_state_property('tfc:fruit_tree/banana_plant', {'stage': '2'})]\n+                }]\n+            })\n+\n+            rm.block_model(('fruit_tree', 'banana_sapling'), textures={'cross': 'tfc:block/fruit_tree/banana_sapling'}, parent='block/cross')\n+            rm.blockstate(('fruit_tree', 'banana_sapling'), model='tfc:block/fruit_tree/banana_sapling').with_lang(lang('Banana Sapling')).with_tag('fruit_tree_sapling')\n+\n+        rm.item_model(('fruit_tree', '%s_sapling' % fruit), 'tfc:block/fruit_tree/%s_sapling' % fruit)\n+        rm.item_model(('food', fruit), 'tfc:item/food/%s' % fruit).with_lang(lang(fruit))\n+\n     # Wood Blocks\n-    for wood in WOODS:\n+    for wood in WOODS.keys():\n         # Logs\n         for variant in ('log', 'stripped_log', 'wood', 'stripped_wood'):\n             block = rm.blockstate(('wood', variant, wood), variants={\n                 'axis=y': {'model': 'tfc:block/wood/%s/%s' % (variant, wood)},\n                 'axis=z': {'model': 'tfc:block/wood/%s/%s' % (variant, wood), 'x': 90},\n                 'axis=x': {'model': 'tfc:block/wood/%s/%s' % (variant, wood), 'x': 90, 'y': 90}\n             }, use_default_model=False)\n-            block.with_item_model()\n+            if variant != 'log':\n+                block.with_item_model()\n+            else:\n+                rm.item_model(('wood', variant, wood), 'tfc:item/wood/log/' + wood)\n             end = 'tfc:block/wood/%s/%s' % (variant.replace('log', 'log_top').replace('wood', 'log'), wood)\n             side = 'tfc:block/wood/%s/%s' % (variant.replace('wood', 'log'), wood)\n             block.with_block_model({'end': end, 'side': side}, parent='block/cube_column')\n@@ -403,6 +714,7 @@ def snow_block_loot_table(block: str):\n                 block.with_lang(lang('%s %s', wood, variant))\n             if variant == 'log':\n                 block.with_tag('minecraft:logs')\n+        rm.item_model(('wood', 'lumber', wood)).with_lang(lang('%s Lumber', wood))\n \n         # Groundcover\n         for variant in ('twig', 'fallen_leaves'):\n@@ -412,14 +724,15 @@ def snow_block_loot_table(block: str):\n                 'facing=south': {'model': 'tfc:block/wood/%s/%s' % (variant, wood), 'y': 180},\n                 'facing=west': {'model': 'tfc:block/wood/%s/%s' % (variant, wood), 'y': 270}\n             })\n-            block.with_item_model()\n             block.with_lang(lang('%s %s', wood, variant))\n \n             if variant == 'twig':\n                 block.with_block_model({'side': 'tfc:block/wood/log/%s' % wood, 'top': 'tfc:block/wood/log_top/%s' % wood}, parent='tfc:block/groundcover/%s' % variant)\n                 block.with_block_loot('minecraft:stick')\n+                rm.item_model('wood/%s/%s' % (variant, wood), 'tfc:item/wood/twig/%s' % wood)\n             elif variant == 'fallen_leaves':\n                 block.with_block_model('tfc:block/wood/leaves/%s' % wood, parent='tfc:block/groundcover/%s' % variant)\n+                rm.item_model('wood/%s/%s' % (variant, wood), 'tfc:item/groundcover/fallen_leaves')\n                 block.with_block_loot('tfc:wood/%s/%s' % (variant, wood))\n \n             block.with_tag('can_be_snow_piled')\n@@ -556,9 +869,6 @@ def molten_fluid(name: str):\n         rm.block_model(variant, textures={'0': texture, 'particle': texture}, parent='tfc:block/thin_spike')\n         rm.block_model(variant + '_tip', textures={'0': texture, 'particle': texture}, parent='tfc:block/thin_spike_tip')\n \n-    # Misc Items\n-    rm.item_model('mortar').with_lang(lang('mortar')).with_tag('tfc:mortar')\n-\n     def corals(color: str, dead: bool):\n         # vanilla and tfc have a different convention for dead/color order\n         left = 'dead_' + color if dead else color\n@@ -584,7 +894,6 @@ def corals(color: str, dead: bool):\n         corals(color, False)\n         corals(color, True)\n \n-\n def alternatives(entries: utils.Json) -> Dict[str, Any]:\n     return {\n         'entries': [{\n@@ -618,3 +927,10 @@ def silk_touch() -> Dict[str, Any]:\n             }]\n         }\n     }\n+\n+def fortune_table(chances: List[float]) -> Dict[str, Any]:\n+    return {\n+        'condition': 'minecraft:table_bonus',\n+        'enchantment': 'minecraft:fortune',\n+        'chances': chances\n+    }"
  },
  {
    "sha": "06f7f8fdc1ad45b70716c78f17612d371986e5d7",
    "filename": "resources/constants.py",
    "status": "modified",
    "additions": 72,
    "deletions": 5,
    "changes": 77,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/resources/constants.py",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/resources/constants.py",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/resources/constants.py?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -10,6 +10,10 @@\n OreGrade = NamedTuple('OreGrade', weight=int)\n Vein = NamedTuple('Vein', ore=str, type=str, rarity=int, size=int, min_y=int, max_y=int, density=float, poor=float, normal=float, rich=float, rocks=List[str])\n Plant = NamedTuple('Plant', clay=bool, min_temp=float, max_temp=float, min_rain=float, max_rain=float, type=str)\n+Wood = NamedTuple('Wood', temp=float, amount=int)\n+Berry = NamedTuple('Berry', min_temp=float, max_temp=float, min_rain=float, max_rain=float, type=str, min_forest=str, max_forest=str)\n+Fruit = NamedTuple('Fruit', min_temp=float, max_temp=float, min_rain=float, max_rain=float)\n+\n \n HORIZONTAL_DIRECTIONS: List[str] = ['east', 'west', 'north', 'south']\n \n@@ -47,17 +51,17 @@\n     'bronze': Metal(2, {'part', 'tool', 'armor', 'utility'}, 0.35, 950),\n     'brass': Metal(2, {'part'}, 0.35, 930),\n     'copper': Metal(1, {'part', 'tool', 'armor', 'utility'}, 0.35, 1080),\n-    'gold': Metal(1, {'part'}, 0.6, 1060),\n+    'gold': Metal(1, {'part', 'rod'}, 0.6, 1060),\n     'nickel': Metal(1, {'part'}, 0.48, 1453),\n     'rose_gold': Metal(1, {'part'}, 0.35, 960),\n     'silver': Metal(1, {'part'}, 0.48, 961),\n     'tin': Metal(1, {'part'}, 0.14, 230),\n     'zinc': Metal(1, {'part'}, 0.21, 420),\n     'sterling_silver': Metal(1, {'part'}, 0.35, 950),\n-    'wrought_iron': Metal(3, {'part', 'tool', 'armor', 'utility'}, 0.35, 1535),\n+    'wrought_iron': Metal(3, {'part', 'tool', 'armor', 'utility', 'rod'}, 0.35, 1535),\n     'cast_iron': Metal(1, {'part'}, 0.35, 1535),\n     'pig_iron': Metal(3, set(), 0.35, 1535),\n-    'steel': Metal(4, {'part', 'tool', 'armor', 'utility'}, 0.35, 1540),\n+    'steel': Metal(4, {'part', 'tool', 'armor', 'utility', 'rod'}, 0.35, 1540),\n     'black_steel': Metal(5, {'part', 'tool', 'armor', 'utility'}, 0.35, 1485),\n     'blue_steel': Metal(6, {'part', 'tool', 'armor', 'utility'}, 0.35, 1540),\n     'red_steel': Metal(6, {'part', 'tool', 'armor', 'utility'}, 0.35, 1540),\n@@ -79,7 +83,7 @@\n     'double_ingot': MetalItem('part', 200, 'item/generated', 'forge:double_ingots'),\n     'sheet': MetalItem('part', 200, 'item/generated', 'forge:sheets'),\n     'double_sheet': MetalItem('part', 400, 'item/generated', 'forge:double_sheets'),\n-    'rod': MetalItem('part', 100, 'item/generated', 'forge:rods'),\n+    'rod': MetalItem('rod', 100, 'item/generated', 'forge:rods'),\n \n     'tuyere': MetalItem('tool', 100, 'item/generated', None),\n     'pickaxe': MetalItem('tool', 100, 'item/handheld', None),\n@@ -219,7 +223,27 @@\n \n COLORS = ('white', 'orange', 'magenta', 'light_blue', 'yellow', 'lime', 'pink', 'gray', 'light_gray', 'cyan', 'purple', 'blue', 'brown', 'green', 'red', 'black')\n \n-WOODS = ('acacia', 'ash', 'aspen', 'birch', 'blackwood', 'chestnut', 'douglas_fir', 'hickory', 'kapok', 'maple', 'oak', 'palm', 'pine', 'rosewood', 'sequoia', 'spruce', 'sycamore', 'white_cedar', 'willow')\n+WOODS: Dict[str, Wood] = {\n+    'acacia': Wood(650, 1000),\n+    'ash': Wood(696, 1250),\n+    'aspen': Wood(611, 1000),\n+    'birch': Wood(652, 1750),\n+    'blackwood': Wood(720, 1750),\n+    'chestnut': Wood(651, 1500),\n+    'douglas_fir': Wood(707, 1500),\n+    'hickory': Wood(762, 2000),\n+    'kapok': Wood(645, 1000),\n+    'maple': Wood(745, 2000),\n+    'oak': Wood(728, 2250),\n+    'palm': Wood(730, 1250),\n+    'pine': Wood(627, 1250),\n+    'rosewood': Wood(640, 1500),\n+    'sequoia': Wood(612, 1750),\n+    'spruce': Wood(608, 1500),\n+    'sycamore': Wood(653, 1750),\n+    'white_cedar': Wood(625, 1500),\n+    'willow': Wood(603, 1000)\n+}\n \n PLANTS: Dict[str, Plant] = {\n     'allium': Plant(False, 10, 18, 150, 400, 'standard'),\n@@ -301,11 +325,44 @@\n     'yucca': Plant(False, -34, 36, 0, 75, 'dry')\n }\n \n+SIMPLE_ITEMS = ('alabaster_brick', 'brass_mechanisms', 'burlap_cloth', 'dirty_jute_net', 'fire_clay', 'firestarter', 'glass_shard', 'glue',\n+                'halter', 'jute', 'jute_disc', 'jute_fiber', 'jute_net', 'mortar', 'olive_jute_disc', 'olive_paste', 'silk_cloth', 'spindle',\n+                'stick_bunch', 'stick_bundle', 'straw', 'wool', 'wool_cloth', 'wool_yarn', 'wrought_iron_grill')\n+GENERIC_POWDERS = ('charcoal', 'coke', 'graphite', 'hematite', 'kaolinite', 'limonite', 'malachite')\n+POWDERS = ('fertilizer', 'flux', 'salt', 'saltpeter', 'sulfur', 'wood_ash')\n+PAIRED_POTTERY = ('bowl', 'fire_brick', 'pot', 'spindle_head', 'vessel')\n+UNFIRED_ITEMS = ('brick', 'crucible', 'flower_pot', 'jug')\n+VANILLA_TOOL_MATERIALS = ('netherite', 'diamond', 'iron', 'stone', 'wooden', 'golden')\n SHORE_DECORATORS = ['driftwood', 'clam', 'mollusk', 'mussel', 'sticks_shore', 'seaweed']\n FOREST_DECORATORS = ['sticks_forest', 'pinecone', 'salt_lick', 'dead_grass', 'podzol']\n OCEAN_PLANT_TYPES = ['grass_water', 'floating', 'water', 'emergent', 'tall_water']\n MISC_PLANT_FEATURES = ['hanging_vines', 'hanging_vines_cave', 'ivy', 'jungle_vines', 'liana']\n \n+BERRIES: Dict[str, Berry] = {\n+    'blackberry': Berry(7, 20, 100, 400, 'spreading', 'edge', 'edge'),\n+    'raspberry': Berry(5, 20, 100, 400, 'spreading', 'edge', 'edge'),\n+    'blueberry': Berry(7, 25, 100, 400, 'spreading', 'edge', 'edge'),\n+    'elderberry': Berry(10, 29, 100, 400, 'spreading', 'edge', 'edge'),\n+    'bunchberry': Berry(15, 30, 100, 400, 'stationary', 'edge', 'normal'),\n+    'gooseberry': Berry(5, 27, 100, 400, 'stationary', 'none', 'sparse'),\n+    'snowberry': Berry(-5, 18, 100, 400, 'stationary', 'normal', 'old_growth'),\n+    'cloudberry': Berry(3, 17, 80, 370, 'stationary', 'normal', 'old_growth'),\n+    'strawberry': Berry(5, 28, 100, 400, 'stationary', 'none', 'sparse'),\n+    'wintergreen_berry': Berry(-5, 17, 100, 400, 'stationary', 'old_growth', 'old_growth'),\n+    'cranberry': Berry(-5, 17, 250, 500, 'waterlogged', 'edge', 'old_growth')\n+}\n+\n+FRUITS: Dict[str, Fruit] = {\n+    'banana': Fruit(23, 35, 280, 480),\n+    'cherry': Fruit(5, 21, 100, 350),\n+    'green_apple': Fruit(8, 25, 110, 280),\n+    'lemon': Fruit(10, 30, 180, 470),\n+    'olive': Fruit(13, 30, 150, 380),\n+    'orange': Fruit(23, 36, 250, 480),\n+    'peach': Fruit(9, 27, 60, 230),\n+    'plum': Fruit(18, 31, 250, 400),\n+    'red_apple': Fruit(9, 25, 100, 280)\n+}\n \n # This is here because it's used all over, and it's easier to import with all constants\n def lang(key: str, *args) -> str:\n@@ -320,6 +377,14 @@ def lang_enum(name: str, values: Sequence[str]) -> Dict[str, str]:\n DEFAULT_LANG = {\n     # Misc\n     'generator.tfc.tng': 'TerraFirmaCraft',\n+    'death.attack.grill': '%1$s grilled themself to death',\n+    'death.attack.grill.player': '%1$s grilled themselves while trying to escape %2$s',\n+    'death.attack.pot': '%1$s boiled themselves into soup',\n+    'death.attack.pot.player': '%1$s boiled themself while trying to escape %2$s',\n+    'tfc.tile_entity.pot': 'Pot',\n+    'tfc.tile_entity.grill': 'Grill',\n+    'tfc.tile_entity.firepit': 'Firepit',\n+    'tfc.tile_entity.log_pile': 'Log Pile',\n     # Item groups\n     'itemGroup.tfc.earth': 'TFC Earth',\n     'itemGroup.tfc.ores': 'TFC Ores',\n@@ -330,6 +395,7 @@ def lang_enum(name: str, values: Sequence[str]) -> Dict[str, str]:\n     'itemGroup.tfc.devices': 'TFC Devices',\n     'itemGroup.tfc.food': 'TFC Food',\n     'itemGroup.tfc.misc': 'TFC Misc',\n+    'itemGroup.tfc.decorations': 'TFC Decorations',\n     # Containers\n     'tfc.screen.calendar': 'Calendar',\n     'tfc.screen.nutrition': 'Nutrition',\n@@ -339,6 +405,7 @@ def lang_enum(name: str, values: Sequence[str]) -> Dict[str, str]:\n     'tfc.tooltip.units': '%d units',\n     'tfc.tooltip.forging': '§f - Can Work',\n     'tfc.tooltip.welding': '§f - Can Weld',\n+    'tfc.tooltip.fuel': 'Fuel Amount: %d Temp: %d',\n     'tfc.tooltip.calendar_days_years': '%d, %04d',\n     'tfc.tooltip.calendar_season': 'Season : ',\n     'tfc.tooltip.calendar_day': 'Day : ',"
  },
  {
    "sha": "e6dde5c118500db5a2af217aad29f1d6a24afc71",
    "filename": "resources/data.py",
    "status": "modified",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/resources/data.py",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/resources/data.py",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/resources/data.py?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -24,6 +24,8 @@ def generate(rm: ResourceManager):\n                     ingredient = item_stack('tag!%s/%s' % (item_data.tag, metal))\n                 else:\n                     ingredient = item_stack('tfc:metal/%s/%s' % (item, metal))\n+                if item == 'shovel':\n+                    rm.item_tag('extinguisher', 'tfc:metal/shovel/' + metal)\n \n                 # The IMetal capability\n                 rm.data(('tfc', 'metal_items', metal, item), {\n@@ -44,6 +46,10 @@ def generate(rm: ResourceManager):\n         if 'tool' in metal_data.types:\n             for tool in ('hammer', 'chisel', 'axe', 'pickaxe', 'shovel'):\n                 rm.item_tag('tfc:%ss' % tool, 'tfc:metal/%s/%s' % (tool, metal))\n+            rm.item_tag('forge:shears', 'tfc:metal/shears/%s' % metal)\n+    # Grill\n+    rm.data(('tfc', 'metal_items', 'wrought_iron', 'grill'), metal_item('tfc:wrought_iron_grill', 'tfc:wrought_iron', 100))\n+    rm.data(('tfc', 'item_heats', 'wrought_iron', 'grill'), item_heat('tfc:wrought_iron_grill', 0.35, 1535))\n \n     # Rocks\n     for rock, rock_data in ROCKS.items():\n@@ -76,24 +82,91 @@ def block(block_type: str):\n     # Forge you dingus, use vanilla tags\n     rm.block_tag('forge:sand', '#minecraft:sand')\n \n+    for wood, wood_data in WOODS.items():\n+        rm.item_tag('minecraft:logs', 'tfc:wood/log/%s' % wood)\n+        rm.item_tag('minecraft:logs', 'tfc:wood/wood/%s' % wood)\n+        rm.block_tag('lit_by_dropped_torch', 'tfc:wood/fallen_leaves/' + wood)\n+        rm.data(('tfc', 'fuels', 'wood', wood + '_log'), fuel('tfc:wood/log/' + wood, wood_data.amount, wood_data.temp))\n+    rm.item_tag('log_pile_logs', 'tfc:stick_bundle')\n+    rm.item_tag('pit_kiln_straw', 'tfc:straw')\n+    rm.item_tag('firepit_logs', '#minecraft:logs')\n+    rm.item_tag('log_pile_logs', '#minecraft:logs')\n+    rm.item_tag('pit_kiln_logs', '#minecraft:logs')\n+\n+    rm.data(('tfc', 'fuels', 'coal'), fuel('minecraft:coal', 2200, 1415, forge=True))  # vanilla coal for compat\n+    rm.data(('tfc', 'fuels', 'bituminous_coal'), fuel('tfc:ore/bituminous_coal', 2200, 1415, forge=True))\n+    rm.data(('tfc', 'fuels', 'lignite'), fuel('tfc:ore/lignite', 2000, 1350, forge=True))\n+    rm.data(('tfc', 'fuels', 'charcoal'), fuel('minecraft:charcoal', 1800, 1350, forge=True, bloomery=True))\n+    rm.data(('tfc', 'fuels', 'peat'), fuel('tfc:peat', 2500, 680))\n+    rm.data(('tfc', 'fuels', 'stick_bundle'), fuel('tfc:stick_bundle', 600, 900))\n+\n     # Tags\n     rm.item_tag('forge:ingots/cast_iron', 'minecraft:iron_ingot')\n+    rm.item_tag('firepit_sticks', '#forge:rods/wooden')\n+    rm.item_tag('firepit_kindling', 'tfc:straw', 'minecraft:paper', 'minecraft:book', 'tfc:groundcover/pinecone')\n+    rm.item_tag('starts_fires_with_durability', 'minecraft:flint_and_steel')\n+    rm.item_tag('starts_fires_with_items', 'minecraft:fire_charge')\n     rm.block_tag('tree_grows_on', 'minecraft:grass_block', '#forge:dirt', '#tfc:grass')\n     rm.block_tag('supports_landslide', 'minecraft:grass_path')\n     rm.block_tag('bush_plantable_on', 'minecraft:grass_block', '#forge:dirt', '#tfc:grass')\n+    rm.block_tag('small_spike', 'tfc:calcite')\n     rm.block_tag('sea_bush_plantable_on', '#forge:dirt', '#minecraft:sand', '#forge:gravel')\n     rm.block_tag('creeping_plantable_on', 'minecraft:grass_block', '#tfc:grass', '#minecraft:base_stone_overworld', '#minecraft:logs')\n     rm.block_tag('minecraft:bamboo_plantable_on', '#tfc:grass')\n     rm.block_tag('minecraft:climbable', 'tfc:plant/hanging_vines', 'tfc:plant/hanging_vines_plant', 'tfc:plant/liana', 'tfc:plant/liana_plant')\n     rm.block_tag('kelp_tree', 'tfc:plant/giant_kelp_flower', 'tfc:plant/giant_kelp_plant')\n     rm.block_tag('kelp_flower', 'tfc:plant/giant_kelp_flower')\n     rm.block_tag('kelp_branch', 'tfc:plant/giant_kelp_plant')\n+    rm.block_tag('lit_by_dropped_torch', 'tfc:log_pile', 'tfc:thatch', 'tfc:pit_kiln')\n+    rm.block_tag('charcoal_cover_whitelist', 'tfc:log_pile', 'tfc:charcoal_pile', 'tfc:burning_log_pile')\n+    rm.block_tag('any_spreading_bush', '#tfc:spreading_bush')\n \n     # Thatch Bed\n     rm.item_tag('thatch_bed_hides', 'tfc:large_raw_hide', 'tfc:large_sheepskin_hide')\n     rm.block_tag('thatch_bed_thatch', 'tfc:thatch')\n \n+    # Misc\n+    rm.item_tag('mortar', 'tfc:mortar')\n+\n+    for mat in VANILLA_TOOL_MATERIALS:\n+        rm.item_tag('extinguisher', 'minecraft:' + mat + '_shovel')\n+\n+    # Plants\n+    for plant in PLANTS.keys():\n+        rm.block_tag('can_be_snow_piled', 'tfc:plant/%s' % plant)\n+\n     rm.block_tag('snow', 'minecraft:snow', 'minecraft:snow_block', 'tfc:snow_pile')\n \n     # Valid spawn tag - grass, sand, or raw rock\n     rm.block_tag('minecraft:valid_spawn', *['tfc:grass/%s' % v for v in SOIL_BLOCK_VARIANTS], *['tfc:sand/%s' % c for c in SAND_BLOCK_TYPES], *['tfc:rock/raw/%s' % r for r in ROCKS.keys()])\n+    rm.block_tag('forge:dirt', *['tfc:dirt/%s' % v for v in SOIL_BLOCK_VARIANTS])\n+\n+def metal_item(ingredient: str, metal: str, amount: int):\n+    return {\n+        'ingredient': item_stack(ingredient),\n+        'metal': metal,\n+        'amount': amount\n+    }\n+\n+def item_heat(ingredient: str, heat_capacity: float, melt_temperature: int = 0):\n+    if melt_temperature > 0:\n+        return {\n+            'ingredient': item_stack(ingredient),\n+            'heat_capacity': heat_capacity,\n+            'forging_temperature': melt_temperature * 0.6,\n+            'welding_temperature': melt_temperature * 0.8\n+        }\n+    else:\n+        return {\n+            'ingredient': item_stack(ingredient),\n+            'heat_capacity': heat_capacity\n+        }\n+\n+def fuel(ingredient: str, amount: int, temp: float, forge=False, bloomery=False):\n+    return {\n+        'ingredient': item_stack(ingredient),\n+        'amount': amount,\n+        'temperature': temp,\n+        'isForgeFuel': forge,\n+        'isBloomeryFuel': bloomery\n+    }"
  },
  {
    "sha": "efad2f1deea6abffe28f736495c7a7a3b8b19785",
    "filename": "resources/generate_textures.py",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/resources/generate_textures.py",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/resources/generate_textures.py",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/resources/generate_textures.py?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -142,7 +142,7 @@ def create_chest(wood: str):\n     right_trapped.save(path + 'entity/chest/trapped_right/%s' % wood + '.png')\n \n def main():\n-    for wood in WOODS:\n+    for wood in WOODS.keys():\n         overlay_image('texture_templates/bookshelf', path + 'block/wood/planks/%s' % wood, path + 'block/wood/planks/%s_bookshelf' % wood)\n         overlay_image('texture_templates/log_top/%s' % wood, path + 'block/wood/log/%s' % wood, path + 'block/wood/log_top/%s' % wood)\n         overlay_image('texture_templates/log_top/%s' % wood, path + 'block/wood/stripped_log/%s' % wood, path + 'block/wood/stripped_log_top/%s' % wood)"
  },
  {
    "sha": "0fa77514547d74c6a72492a06fa0840e8550b759",
    "filename": "resources/recipes.py",
    "status": "modified",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/resources/recipes.py",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/resources/recipes.py",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/resources/recipes.py?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -30,6 +30,33 @@ def damage_shapeless(name_parts: utils.ResourceIdentifier, ingredients: utils.Js\n         })\n         return RecipeContext(rm, res)\n \n+    def heat_recipe(name, item: str, result: str, count: int = 1, temperature: float = 1599, heat_capacity: float = 0) -> RecipeContext:\n+        if heat_capacity > 0:\n+            rm.data(('tfc', 'item_heats', name), {\n+                'ingredient': utils.ingredient(item),\n+                'heat_capacity': heat_capacity\n+            })\n+        return rm.recipe(('heating', name), 'tfc:heating', {\n+            'ingredient': utils.ingredient(item),\n+            'result': utils.item_stack((count, result)),\n+            'temperature': temperature\n+        })\n+\n+    def pot_recipe(name: utils.ResourceIdentifier, ingredients: List[str], outputs: List[str], fluid_in: str, fluid_out: str, duration: int, temperature: float) -> RecipeContext:\n+        res = utils.resource_location(rm.domain, name)\n+        rm.recipe(('simple_pot', name), 'tfc:simple_pot', {\n+            'ingredients': [utils.ingredient(i) for i in ingredients],\n+            'outputs': [utils.item_stack(i) for i in outputs],\n+            'fluidInput': fluid_stack(fluid_in, 1000),\n+            'fluidOutput': fluid_stack(fluid_out, 1000),\n+            'duration': duration,\n+            'temperature': temperature\n+        })\n+        return RecipeContext(rm, res)\n+\n+    def fluid_stack(fluid: str, amount: int):\n+        return {'FluidName': fluid, 'Amount': amount}\n+\n     # Rock Things\n     for rock in ROCKS.keys():\n \n@@ -70,3 +97,19 @@ def damage_shapeless(name_parts: utils.ResourceIdentifier, ingredients: utils.Js\n         rm.crafting_shaped('crafting/rock/%s_bricks' % rock, ['XMX', 'MXM', 'XMX'], {'X': brick, 'M': 'tag!tfc:mortar'}, (4, bricks)).with_advancement(brick)\n \n         damage_shapeless('crafting/rock/%s_cracked' % rock, (bricks, 'tag!tfc:hammers'), cracked_bricks).with_advancement(bricks)\n+\n+    heat_recipe('stick', 'tag!forge:rods/wooden', 'tfc:torch', count=2, temperature=40, heat_capacity=0.1)\n+    heat_recipe('stick_bunch', 'tfc:stick_bunch', 'minecraft:torch', count=18, temperature=60, heat_capacity=0.2)\n+    heat_recipe('glass_shard', 'tfc:glass_shard', 'minecraft:glass', temperature=600, heat_capacity=1.0)\n+    heat_recipe('sand', 'tag!forge:sand', 'minecraft:glass', temperature=600, heat_capacity=1.0)\n+    heat_recipe('unfired_brick', 'tfc:ceramic/unfired_brick', 'minecraft:brick', heat_capacity=1.1)\n+    heat_recipe('unfired_flower_pot', 'tfc:ceramic/unfired_flower_pot', 'minecraft:flower_pot', heat_capacity=1.0)\n+    heat_recipe('unfired_jug', 'tfc:ceramic/unfired_jug', 'tfc:ceramic/jug', heat_capacity=1.0)\n+    # todo: crucible\n+    heat_recipe('clay_block', 'minecraft:clay', 'minecraft:terracotta', temperature=600, heat_capacity=1.0)\n+    for color in COLORS:\n+        heat_recipe('terracotta_%s' % color, 'minecraft:%s_terracotta' % color, 'minecraft:%s_glazed_terracotta' % color, temperature=1200, heat_capacity=1.0)\n+    for pottery in PAIRED_POTTERY:\n+        heat_recipe(pottery, 'tfc:ceramic/' + pottery, 'tfc:ceramic/unfired_' + pottery, heat_capacity=1.0)\n+\n+    pot_recipe('test', ['tfc:jute', 'tfc:jute', 'tfc:straw'], ['tfc:glue', 'tfc:glass_shard'], 'minecraft:water', 'tfc:salt_water', 200, 500)"
  },
  {
    "sha": "89d1ef81b08714bb475832854c1a1c5df8395858",
    "filename": "resources/world_gen.py",
    "status": "modified",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/resources/world_gen.py",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/resources/world_gen.py",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/resources/world_gen.py?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -383,6 +383,32 @@ def generate(rm: ResourceManager):\n     rm.feature(('plant', 'morning_glory_cover'), wg.configure_decorated(plant_feature('tfc:plant/morning_glory[age=1,stage=1,up=false,down=true,north=false,east=false,west=false,south=false]', 'minecraft:simple_block_placer', 1, 6), decorate_climate(5, 19, 160, 440, True, fuzzy=True), decorate_carving_mask(0.002, 0, 130), decorate_range(64, 130)))\n     rm.feature(('plant', 'reindeer_lichen_cover'), wg.configure_decorated(plant_feature('tfc:plant/reindeer_lichen[age=1,stage=1,up=false,down=true,north=false,east=false,west=false,south=false]', 'minecraft:simple_block_placer', 1, 6), decorate_climate(-7, 7, 110, 390, True, fuzzy=True), decorate_carving_mask(0.002, 0, 130), decorate_range(64, 130)))\n \n+    for berry, info in BERRIES.items():\n+        config = {\n+            'min_temperature': info.min_temp,\n+            'max_temperature': info.max_temp,\n+            'min_rainfall': info.min_rain,\n+            'max_rainfall': info.max_rain,\n+            'min_forest': info.min_forest,\n+            'max_forest': info.max_forest,\n+            'fuzzy': False\n+        }\n+        rm.feature(('plant', berry), wg.configure_decorated(wg.configure('tfc:berry_bushes', {'state': 'tfc:berry_bush/%s_bush' % berry}), 'minecraft:heightmap_world_surface', 'minecraft:square', ('tfc:climate', config), decorate_chance(15)))\n+    for fruit, info in FRUITS.items():\n+        config = {\n+            'min_temperature': info.min_temp,\n+            'max_temperature': info.max_temp,\n+            'min_rainfall': info.min_rain,\n+            'max_rainfall': info.max_rain,\n+            'max_forest': 'normal'\n+        }\n+        feature = 'tfc:fruit_trees'\n+        state = 'tfc:fruit_tree/%s_growing_branch' % fruit\n+        if fruit == 'banana':\n+            feature = 'tfc:bananas'\n+            state = 'tfc:fruit_tree/banana_plant'\n+        rm.feature(('plant', fruit), wg.configure_decorated(wg.configure(feature, {'state': state}), 'minecraft:heightmap_world_surface', 'minecraft:square', ('tfc:climate', config), decorate_chance(60)))\n+\n     # todo: convert the creeping plant blocks to use the target climate thing natively in the spreadsheet rather than here\n \n     rm.feature('bamboo', wg.configure_decorated(wg.configure('minecraft:bamboo', {'probability': 0.2}), decorate_chance(30), decorate_climate(18, 28, 300, 500, True, fuzzy=True), ('minecraft:count_noise_biased', {\n@@ -770,6 +796,8 @@ def biome(rm: ResourceManager, name: str, temp: BiomeTemperature, rain: BiomeRai\n         # leaving freshwater plants to spawn anywhere so that they populate small lakes (something vanilla doesn't think to do)\n         features[Decoration.VEGETAL_DECORATION] += ['tfc:plant/%s' % plant for plant, data in PLANTS.items() if data.type not in OCEAN_PLANT_TYPES]\n         features[Decoration.VEGETAL_DECORATION] += ['tfc:plant/moss_cover', 'tfc:plant/reindeer_lichen_cover', 'tfc:plant/morning_glory_cover', 'tfc:plant/tree_fern', 'tfc:plant/arundo']\n+        features[Decoration.VEGETAL_DECORATION] += ['tfc:plant/%s' % berry for berry in BERRIES]\n+        features[Decoration.VEGETAL_DECORATION] += ['tfc:plant/%s' % fruit for fruit in FRUITS]\n \n     if volcano_features:\n         features[Decoration.SURFACE_STRUCTURES] += ['tfc:volcano_rivulet', 'tfc:volcano_caldera']"
  },
  {
    "sha": "7fbd5506186b875ed8d611272abcb4d06eb6b57e",
    "filename": "src/main/java/net/dries007/tfc/ForgeEventHandler.java",
    "status": "modified",
    "additions": 101,
    "deletions": 5,
    "changes": 106,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/ForgeEventHandler.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/ForgeEventHandler.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/ForgeEventHandler.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -10,14 +10,19 @@\n \n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n+import net.minecraft.block.AbstractFireBlock;\n import net.minecraft.block.Block;\n import net.minecraft.block.BlockState;\n import net.minecraft.block.Blocks;\n+import net.minecraft.entity.projectile.AbstractArrowEntity;\n+import net.minecraft.entity.projectile.DamagingProjectileEntity;\n import net.minecraft.item.ItemStack;\n import net.minecraft.resources.IReloadableResourceManager;\n import net.minecraft.util.Direction;\n import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.BlockRayTraceResult;\n import net.minecraft.util.math.ChunkPos;\n+import net.minecraft.util.math.RayTraceResult;\n import net.minecraft.world.GameRules;\n import net.minecraft.world.IWorld;\n import net.minecraft.world.World;\n@@ -26,10 +31,13 @@\n import net.minecraft.world.gen.ChunkGenerator;\n import net.minecraft.world.server.ServerWorld;\n import net.minecraft.world.storage.IServerWorldInfo;\n+import net.minecraftforge.common.MinecraftForge;\n import net.minecraftforge.event.AddReloadListenerEvent;\n import net.minecraftforge.event.AttachCapabilitiesEvent;\n import net.minecraftforge.event.RegisterCommandsEvent;\n import net.minecraftforge.event.TickEvent;\n+import net.minecraftforge.event.entity.ProjectileImpactEvent;\n+import net.minecraftforge.event.entity.player.EntityItemPickupEvent;\n import net.minecraftforge.event.world.*;\n import net.minecraftforge.eventbus.api.SubscribeEvent;\n import net.minecraftforge.fml.common.Mod;\n@@ -38,23 +46,24 @@\n import net.minecraftforge.fml.network.PacketDistributor;\n \n import net.dries007.tfc.common.TFCTags;\n-import net.dries007.tfc.common.blocks.TFCBlocks;\n+import net.dries007.tfc.common.blocks.*;\n import net.dries007.tfc.common.capabilities.forge.ForgingCapability;\n import net.dries007.tfc.common.capabilities.forge.ForgingHandler;\n import net.dries007.tfc.common.capabilities.heat.HeatCapability;\n import net.dries007.tfc.common.capabilities.heat.HeatDefinition;\n import net.dries007.tfc.common.capabilities.heat.HeatManager;\n import net.dries007.tfc.common.command.TFCCommands;\n+import net.dries007.tfc.common.items.TFCItems;\n import net.dries007.tfc.common.recipes.CollapseRecipe;\n-import net.dries007.tfc.common.types.MetalItemManager;\n-import net.dries007.tfc.common.types.MetalManager;\n-import net.dries007.tfc.common.types.Rock;\n-import net.dries007.tfc.common.types.RockManager;\n+import net.dries007.tfc.common.tileentity.PitKilnTileEntity;\n+import net.dries007.tfc.common.tileentity.TickCounterTileEntity;\n+import net.dries007.tfc.common.types.*;\n import net.dries007.tfc.config.TFCConfig;\n import net.dries007.tfc.network.ChunkUnwatchPacket;\n import net.dries007.tfc.network.PacketHandler;\n import net.dries007.tfc.util.CacheInvalidationListener;\n import net.dries007.tfc.util.Helpers;\n+import net.dries007.tfc.util.events.StartFireEvent;\n import net.dries007.tfc.util.support.SupportManager;\n import net.dries007.tfc.util.tracker.WorldTracker;\n import net.dries007.tfc.util.tracker.WorldTrackerCapability;\n@@ -235,6 +244,7 @@ public static void addReloadListeners(AddReloadListenerEvent event)\n         resourceManager.registerReloadListener(RockManager.INSTANCE);\n         resourceManager.registerReloadListener(MetalManager.INSTANCE);\n         resourceManager.registerReloadListener(MetalItemManager.INSTANCE);\n+        resourceManager.registerReloadListener(FuelManager.INSTANCE);\n         resourceManager.registerReloadListener(SupportManager.INSTANCE);\n         resourceManager.registerReloadListener(HeatManager.INSTANCE);\n \n@@ -397,4 +407,90 @@ else if (originalBlock == Blocks.BASALT)\n             event.setNewState(TFCBlocks.ROCK_BLOCKS.get(Rock.Default.BASALT).get(Rock.BlockType.HARDENED).get().defaultBlockState());\n         }\n     }\n+\n+    @SubscribeEvent\n+    public static void onFireStart(StartFireEvent event)\n+    {\n+        World world = event.getLevel();\n+        BlockPos pos = event.getPos();\n+        BlockState state = event.getState();\n+        Block block = state.getBlock();\n+\n+        if (!world.isClientSide())\n+        {\n+            if (block.is(TFCBlocks.FIREPIT.get()) || block.is(TFCBlocks.POT.get()) || block.is(TFCBlocks.GRILL.get()))\n+            {\n+                world.setBlock(pos, state.setValue(TFCBlockStateProperties.LIT, true), 2);\n+                event.setCanceled(true);\n+            }\n+            else if (block.is(TFCBlocks.TORCH.get()) || block.is(TFCBlocks.WALL_TORCH.get()))\n+            {\n+                TickCounterTileEntity te = Helpers.getTileEntity(world, pos, TickCounterTileEntity.class);\n+                if (te != null)\n+                    te.resetCounter();\n+                event.setCanceled(true);\n+            }\n+            else if (block.is(TFCBlocks.DEAD_TORCH.get()))\n+            {\n+                world.setBlockAndUpdate(pos, TFCBlocks.TORCH.get().defaultBlockState());\n+                event.setCanceled(true);\n+            }\n+            else if (block.is(TFCBlocks.DEAD_WALL_TORCH.get()))\n+            {\n+                Direction direction = state.getValue(DeadWallTorchBlock.FACING);\n+                world.setBlockAndUpdate(pos, TFCBlocks.WALL_TORCH.get().defaultBlockState().setValue(TFCWallTorchBlock.FACING, direction));\n+                event.setCanceled(true);\n+            }\n+            else if (block.is(TFCBlocks.LOG_PILE.get()))\n+            {\n+                BurningLogPileBlock.tryLightLogPile(world, pos);\n+                event.setCanceled(true);\n+            }\n+            else if (block.is(TFCBlocks.PIT_KILN.get()) && state.getValue(PitKilnBlock.STAGE) == 15)\n+            {\n+                PitKilnTileEntity kiln = Helpers.getTileEntity(world, pos, PitKilnTileEntity.class);\n+                if (kiln != null)\n+                    kiln.tryLight();\n+            }\n+\n+            ItemStack item = event.getItemStack();\n+            if (item != null && item.getItem() == TFCItems.TORCH.get())\n+            {\n+                event.setCanceled(true); // so torches don't start fires\n+            }\n+        }\n+\n+        if (!event.isCanceled() && AbstractFireBlock.canBePlacedAt(world, pos, event.getTargetedFace()))\n+            world.setBlock(pos, AbstractFireBlock.getState(world, pos), 11);\n+    }\n+\n+    @SubscribeEvent\n+    public static void onArrowHit(ProjectileImpactEvent.Arrow event)\n+    {\n+        if (!TFCConfig.SERVER.enableFireArrowSpreading.get()) return;\n+        AbstractArrowEntity arrow = event.getArrow();\n+        RayTraceResult result = event.getRayTraceResult();\n+        if (result.getType() == RayTraceResult.Type.BLOCK && arrow.isOnFire())\n+        {\n+            BlockRayTraceResult blockResult = (BlockRayTraceResult) result;\n+            BlockPos pos = blockResult.getBlockPos();\n+            World world = arrow.level;\n+            StartFireEvent.startFire(world, pos, world.getBlockState(pos), blockResult.getDirection(), null, ItemStack.EMPTY);\n+        }\n+    }\n+\n+    @SubscribeEvent\n+    public static void onArrowHit(ProjectileImpactEvent.Fireball event)\n+    {\n+        if (!TFCConfig.SERVER.enableFireArrowSpreading.get()) return;\n+        DamagingProjectileEntity fireball = event.getFireball();\n+        RayTraceResult result = event.getRayTraceResult();\n+        if (result.getType() == RayTraceResult.Type.BLOCK)\n+        {\n+            BlockRayTraceResult blockResult = (BlockRayTraceResult) result;\n+            BlockPos pos = blockResult.getBlockPos();\n+            World world = fireball.level;\n+            StartFireEvent.startFire(world, pos, world.getBlockState(pos), blockResult.getDirection(), null, ItemStack.EMPTY);\n+        }\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "53ccb7c0137630056390ddde01115f02abee6d2c",
    "filename": "src/main/java/net/dries007/tfc/TerraFirmaCraft.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/TerraFirmaCraft.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/TerraFirmaCraft.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/TerraFirmaCraft.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -17,6 +17,7 @@\n import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;\n \n import net.dries007.tfc.client.TFCSounds;\n+import net.dries007.tfc.client.particle.TFCParticles;\n import net.dries007.tfc.common.blocks.TFCBlocks;\n import net.dries007.tfc.common.capabilities.forge.ForgingCapability;\n import net.dries007.tfc.common.capabilities.heat.HeatCapability;\n@@ -70,6 +71,7 @@ public TerraFirmaCraft()\n         TFCFluids.FLUIDS.register(modEventBus);\n         TFCRecipeSerializers.RECIPE_SERIALIZERS.register(modEventBus);\n         TFCSounds.SOUNDS.register(modEventBus);\n+        TFCParticles.PARTICLE_TYPES.register(modEventBus);\n         TFCTileEntities.TILE_ENTITIES.register(modEventBus);\n \n         TFCBiomes.BIOMES.register(modEventBus);"
  },
  {
    "sha": "cfa5211b1746d54b1907343a323cf83d7b20fe64",
    "filename": "src/main/java/net/dries007/tfc/client/ClientEventHandler.java",
    "status": "modified",
    "additions": 49,
    "deletions": 7,
    "changes": 56,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/ClientEventHandler.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/ClientEventHandler.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/ClientEventHandler.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -13,37 +13,42 @@\n import net.minecraft.block.Block;\n import net.minecraft.client.Minecraft;\n import net.minecraft.client.gui.ScreenManager;\n+import net.minecraft.client.particle.ParticleManager;\n import net.minecraft.client.renderer.RenderType;\n import net.minecraft.client.renderer.RenderTypeLookup;\n import net.minecraft.client.renderer.color.BlockColors;\n import net.minecraft.client.renderer.color.ItemColors;\n import net.minecraft.client.renderer.entity.FallingBlockRenderer;\n-import net.minecraft.client.world.DimensionRenderInfo;\n import net.minecraft.item.Item;\n import net.minecraft.resources.IReloadableResourceManager;\n import net.minecraft.util.math.BlockPos;\n-import net.minecraft.world.DimensionType;\n import net.minecraftforge.api.distmarker.Dist;\n import net.minecraftforge.client.event.ColorHandlerEvent;\n import net.minecraftforge.client.event.ParticleFactoryRegisterEvent;\n import net.minecraftforge.eventbus.api.SubscribeEvent;\n import net.minecraftforge.fml.RegistryObject;\n+import net.minecraftforge.fml.client.registry.ClientRegistry;\n import net.minecraftforge.fml.client.registry.RenderingRegistry;\n import net.minecraftforge.fml.common.Mod;\n import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;\n \n-import net.dries007.tfc.client.screen.CalendarScreen;\n-import net.dries007.tfc.client.screen.ClimateScreen;\n-import net.dries007.tfc.client.screen.NutritionScreen;\n+import net.dries007.tfc.client.particle.BubbleParticle;\n+import net.dries007.tfc.client.particle.SteamParticle;\n+import net.dries007.tfc.client.particle.TFCParticles;\n+import net.dries007.tfc.client.render.GrillTileEntityRenderer;\n+import net.dries007.tfc.client.render.PitKilnTileEntityRenderer;\n+import net.dries007.tfc.client.render.PlacedItemTileEntityRenderer;\n+import net.dries007.tfc.client.render.PotTileEntityRenderer;\n+import net.dries007.tfc.client.screen.*;\n import net.dries007.tfc.common.blocks.TFCBlocks;\n import net.dries007.tfc.common.blocks.plant.Plant;\n import net.dries007.tfc.common.blocks.soil.SoilBlockType;\n import net.dries007.tfc.common.container.TFCContainerTypes;\n import net.dries007.tfc.common.entities.TFCEntities;\n import net.dries007.tfc.common.fluids.TFCFluids;\n+import net.dries007.tfc.common.tileentity.TFCTileEntities;\n import net.dries007.tfc.common.types.Rock;\n import net.dries007.tfc.common.types.Wood;\n-import net.dries007.tfc.mixin.client.world.DimensionRenderInfoAccessor;\n import net.dries007.tfc.mixin.world.biome.BiomeColorsAccessor;\n \n import static net.dries007.tfc.TerraFirmaCraft.MOD_ID;\n@@ -62,6 +67,13 @@ public static void clientSetup(FMLClientSetupEvent event)\n         ScreenManager.register(TFCContainerTypes.CALENDAR.get(), CalendarScreen::new);\n         ScreenManager.register(TFCContainerTypes.NUTRITION.get(), NutritionScreen::new);\n         ScreenManager.register(TFCContainerTypes.CLIMATE.get(), ClimateScreen::new);\n+        ScreenManager.register(TFCContainerTypes.FIREPIT.get(), FirepitScreen::new);\n+        ScreenManager.register(TFCContainerTypes.GRILL.get(), GrillScreen::new);\n+        ScreenManager.register(TFCContainerTypes.POT.get(), PotScreen::new);\n+        ScreenManager.register(TFCContainerTypes.LOG_PILE.get(), LogPileScreen::new);\n+\n+        // Keybindings\n+        ClientRegistry.registerKeyBinding(TFCKeyBindings.PLACE_BLOCK);\n \n         // Render Types\n         final RenderType cutout = RenderType.cutout();\n@@ -96,6 +108,23 @@ public static void clientSetup(FMLClientSetupEvent event)\n         // Plants\n         TFCBlocks.PLANTS.values().forEach(reg -> RenderTypeLookup.setRenderLayer(reg.get(), cutout));\n         TFCBlocks.CORAL.values().forEach(map -> map.values().forEach(reg -> RenderTypeLookup.setRenderLayer(reg.get(), cutout)));\n+        TFCBlocks.SPREADING_BUSHES.values().forEach(bush -> RenderTypeLookup.setRenderLayer(bush.get(), cutoutMipped));\n+        TFCBlocks.SPREADING_CANES.values().forEach(bush -> RenderTypeLookup.setRenderLayer(bush.get(), cutoutMipped));\n+        TFCBlocks.STATIONARY_BUSHES.values().forEach(bush -> RenderTypeLookup.setRenderLayer(bush.get(), cutoutMipped));\n+        TFCBlocks.WATERLOGGED_BUSHES.values().forEach(bush -> RenderTypeLookup.setRenderLayer(bush.get(), cutoutMipped));\n+        RenderTypeLookup.setRenderLayer(TFCBlocks.DEAD_BERRY_BUSH.get(), cutout);\n+        RenderTypeLookup.setRenderLayer(TFCBlocks.DEAD_CANE.get(), cutout);\n+        TFCBlocks.FRUIT_TREE_LEAVES.values().forEach(leaves -> RenderTypeLookup.setRenderLayer(leaves.get(), cutoutMipped));\n+        TFCBlocks.FRUIT_TREE_SAPLINGS.values().forEach(leaves -> RenderTypeLookup.setRenderLayer(leaves.get(), cutout));\n+        RenderTypeLookup.setRenderLayer(TFCBlocks.BANANA_PLANT.get(), cutout);\n+        RenderTypeLookup.setRenderLayer(TFCBlocks.BANANA_SAPLING.get(), cutout);\n+\n+        // Other\n+        RenderTypeLookup.setRenderLayer(TFCBlocks.FIREPIT.get(), cutout);\n+        RenderTypeLookup.setRenderLayer(TFCBlocks.TORCH.get(), cutout);\n+        RenderTypeLookup.setRenderLayer(TFCBlocks.WALL_TORCH.get(), cutout);\n+        RenderTypeLookup.setRenderLayer(TFCBlocks.DEAD_TORCH.get(), cutout);\n+        RenderTypeLookup.setRenderLayer(TFCBlocks.DEAD_WALL_TORCH.get(), cutout);\n \n         // Fluids\n         RenderTypeLookup.setRenderLayer(TFCFluids.SALT_WATER.getFlowing(), translucent);\n@@ -106,6 +135,13 @@ public static void clientSetup(FMLClientSetupEvent event)\n         // Entity Rendering\n         RenderingRegistry.registerEntityRenderingHandler(TFCEntities.FALLING_BLOCK.get(), FallingBlockRenderer::new);\n \n+        // TE Rendering\n+\n+        ClientRegistry.bindTileEntityRenderer(TFCTileEntities.POT.get(), PotTileEntityRenderer::new);\n+        ClientRegistry.bindTileEntityRenderer(TFCTileEntities.GRILL.get(), GrillTileEntityRenderer::new);\n+        ClientRegistry.bindTileEntityRenderer(TFCTileEntities.PLACED_ITEM.get(), PlacedItemTileEntityRenderer::new);\n+        ClientRegistry.bindTileEntityRenderer(TFCTileEntities.PIT_KILN.get(), PitKilnTileEntityRenderer::new);\n+\n         // Misc\n         BiomeColorsAccessor.accessor$setWaterColorResolver(TFCColors.FRESH_WATER);\n     }\n@@ -146,13 +182,15 @@ public static void registerColorHandlerBlocks(ColorHandlerEvent.Block event)\n     @SubscribeEvent\n     public static void registerColorHandlerItems(ColorHandlerEvent.Item event)\n     {\n-        LOGGER.debug(\"Registering Color Handler Blocks\");\n+        LOGGER.debug(\"Registering Color Handler Items\");\n         final ItemColors registry = event.getItemColors();\n \n         Item[] leafyPlants = Stream.of(Plant.values()).filter(Plant::isLeafColored).map(p -> TFCBlocks.PLANTS.get(p).get().asItem()).toArray(Item[]::new);\n         Item[] grassyPlants = Stream.of(Plant.values()).filter(Plant::needsItemColor).map(p -> TFCBlocks.PLANTS.get(p).get().asItem()).toArray(Item[]::new);\n         registry.register((itemStack, tintIndex) -> TFCColors.getGrassColor(new BlockPos(0, 96, 0), tintIndex), grassyPlants);\n         registry.register((itemStack, tintIndex) -> TFCColors.getFoliageColor(new BlockPos(0, 96, 0), tintIndex), leafyPlants);\n+\n+        TFCBlocks.WOODS.forEach((key, value) -> registry.register((itemStack, tintIndex) -> TFCColors.getFoliageColor(new BlockPos(0, 96, 0), tintIndex), value.get(Wood.BlockType.FALLEN_LEAVES).get().asItem()));\n     }\n \n     @SubscribeEvent\n@@ -175,5 +213,9 @@ public static void registerParticleFactoriesAndOtherStuff(ParticleFactoryRegiste\n         resourceManager.registerReloadListener(new ColorMapReloadListener(TFCColors::setFoliageColors, TFCColors.FOLIAGE_COLORS_LOCATION));\n         resourceManager.registerReloadListener(new ColorMapReloadListener(TFCColors::setFoliageFallColors, TFCColors.FOLIAGE_FALL_COLORS_LOCATION));\n         resourceManager.registerReloadListener(new ColorMapReloadListener(TFCColors::setFoliageWinterColors, TFCColors.FOLIAGE_WINTER_COLORS_LOCATION));\n+\n+        ParticleManager particleEngine = Minecraft.getInstance().particleEngine;\n+        particleEngine.register(TFCParticles.BUBBLE.get(), BubbleParticle.Factory::new);\n+        particleEngine.register(TFCParticles.STEAM.get(), SteamParticle.Factory::new);\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "ad41899d346ed4d70504c01d4412aedbbfcd0775",
    "filename": "src/main/java/net/dries007/tfc/client/ClientForgeEventHandler.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/ClientForgeEventHandler.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/ClientForgeEventHandler.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/ClientForgeEventHandler.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -22,21 +22,26 @@\n import net.minecraft.world.level.ColorResolver;\n import net.minecraftforge.api.distmarker.Dist;\n import net.minecraftforge.client.event.GuiScreenEvent;\n+import net.minecraftforge.client.event.InputEvent;\n import net.minecraftforge.client.event.RenderGameOverlayEvent;\n import net.minecraftforge.event.TickEvent;\n import net.minecraftforge.event.entity.player.ItemTooltipEvent;\n import net.minecraftforge.event.world.WorldEvent;\n import net.minecraftforge.eventbus.api.SubscribeEvent;\n import net.minecraftforge.fml.common.Mod;\n+import net.minecraftforge.fml.network.PacketDistributor;\n \n import it.unimi.dsi.fastutil.objects.Object2ObjectArrayMap;\n import net.dries007.tfc.TerraFirmaCraft;\n import net.dries007.tfc.client.screen.button.PlayerInventoryTabButton;\n import net.dries007.tfc.common.capabilities.heat.HeatCapability;\n+import net.dries007.tfc.common.types.FuelManager;\n import net.dries007.tfc.common.types.MetalItemManager;\n import net.dries007.tfc.config.TFCConfig;\n import net.dries007.tfc.mixin.client.world.ClientWorldAccessor;\n import net.dries007.tfc.mixin.client.world.DimensionRenderInfoAccessor;\n+import net.dries007.tfc.network.PacketHandler;\n+import net.dries007.tfc.network.PlaceBlockSpecialPacket;\n import net.dries007.tfc.network.SwitchInventoryTabPacket;\n import net.dries007.tfc.util.Climate;\n import net.dries007.tfc.util.Helpers;\n@@ -97,6 +102,10 @@ public static void onItemTooltip(ItemTooltipEvent event)\n         {\n             MetalItemManager.addTooltipInfo(stack, text);\n             stack.getCapability(HeatCapability.CAPABILITY).ifPresent(cap -> cap.addHeatInfo(stack, text));\n+            if (event.getFlags().isAdvanced())\n+            {\n+                FuelManager.addTooltipInfo(stack, text);\n+            }\n         }\n     }\n \n@@ -146,4 +155,13 @@ public static void onClientTick(TickEvent.ClientTickEvent event)\n             ClimateRenderCache.INSTANCE.onClientTick();\n         }\n     }\n+\n+    @SubscribeEvent\n+    public static void onKeyEvent(InputEvent.KeyInputEvent event)\n+    {\n+        if (TFCKeyBindings.PLACE_BLOCK.isDown())\n+        {\n+            PacketHandler.send(PacketDistributor.SERVER.noArg(), new PlaceBlockSpecialPacket());\n+        }\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "4bd4ff9414e4fc551da205a2afee57827c993700",
    "filename": "src/main/java/net/dries007/tfc/client/TFCKeyBindings.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/TFCKeyBindings.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/TFCKeyBindings.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/TFCKeyBindings.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,13 @@\n+package net.dries007.tfc.client;\n+\n+import org.lwjgl.glfw.GLFW;\n+import net.minecraft.client.settings.KeyBinding;\n+import net.minecraft.client.util.InputMappings;\n+import net.minecraftforge.client.settings.KeyConflictContext;\n+\n+import static net.dries007.tfc.TerraFirmaCraft.MOD_NAME;\n+\n+public class TFCKeyBindings\n+{\n+    public static final KeyBinding PLACE_BLOCK = new KeyBinding(\"tfc.key.place_block\", KeyConflictContext.IN_GAME, InputMappings.Type.KEYSYM, GLFW.GLFW_KEY_V, MOD_NAME);\n+}"
  },
  {
    "sha": "dee745425b0c2a4b241182477415c184d44b9271",
    "filename": "src/main/java/net/dries007/tfc/client/TFCSounds.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/TFCSounds.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/TFCSounds.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/TFCSounds.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -7,6 +7,7 @@\n package net.dries007.tfc.client;\n \n import net.minecraft.util.SoundEvent;\n+import net.minecraftforge.common.util.ForgeSoundType;\n import net.minecraftforge.fml.RegistryObject;\n import net.minecraftforge.registries.DeferredRegister;\n import net.minecraftforge.registries.ForgeRegistries;\n@@ -23,6 +24,16 @@\n     public static final RegistryObject<SoundEvent> ROCK_SLIDE_SHORT = create(\"rock_slide_short\");\n     public static final RegistryObject<SoundEvent> DIRT_SLIDE_SHORT = create(\"dirt_slide_short\");\n \n+    public static final RegistryObject<SoundEvent> CHARCOAL_PILE_BREAK = create(\"charcoal_break\");\n+    public static final RegistryObject<SoundEvent> CHARCOAL_PILE_FALL = create(\"charcoal_fall\");\n+    public static final RegistryObject<SoundEvent> CHARCOAL_PILE_HIT = create(\"charcoal_hit\");\n+    public static final RegistryObject<SoundEvent> CHARCOAL_PILE_PLACE = create(\"charcoal_place\");\n+    public static final RegistryObject<SoundEvent> CHARCOAL_PILE_STEP = create(\"charcoal_step\");\n+\n+    public static final RegistryObject<SoundEvent> FIRESTARTER = create(\"item.firestarter\");\n+\n+    public static final ForgeSoundType CHARCOAL = new ForgeSoundType(1.0F, 1.0F, CHARCOAL_PILE_BREAK, CHARCOAL_PILE_STEP, CHARCOAL_PILE_PLACE, CHARCOAL_PILE_STEP, CHARCOAL_PILE_FALL);\n+\n     private static RegistryObject<SoundEvent> create(String name)\n     {\n         return SOUNDS.register(name, () -> new SoundEvent(Helpers.identifier(name)));"
  },
  {
    "sha": "09754e433fe7648d5989dd71a4975efe64604f59",
    "filename": "src/main/java/net/dries007/tfc/client/particle/BubbleParticle.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/particle/BubbleParticle.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/particle/BubbleParticle.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/particle/BubbleParticle.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,66 @@\n+package net.dries007.tfc.client.particle;\n+\n+import net.minecraft.client.particle.*;\n+import net.minecraft.client.world.ClientWorld;\n+import net.minecraft.particles.BasicParticleType;\n+import net.minecraftforge.api.distmarker.Dist;\n+import net.minecraftforge.api.distmarker.OnlyIn;\n+\n+/**\n+ * This is {@link BubbleColumnUpParticle} minus the fluid tag check and with a short lifecycle\n+ */\n+public class BubbleParticle extends SpriteTexturedParticle\n+{\n+    private BubbleParticle(ClientWorld worldIn, double x, double y, double z, double motionX, double motionY, double motionZ)\n+    {\n+        super(worldIn, x, y, z);\n+        this.setSize(0.02F, 0.02F);\n+        this.quadSize *= random.nextFloat() * 0.6F + 0.2F;\n+        this.xd = motionX * 0.2D + (Math.random() * 2.0D - 1.0D) * 0.02D;\n+        this.yd = motionY * 0.2D + (Math.random() * 2.0D - 1.0D) * 0.02D;\n+        this.zd = motionZ * 0.2D + (Math.random() * 2.0D - 1.0D) * 0.02D;\n+        this.lifetime = 3 + random.nextInt(3);\n+    }\n+\n+    @Override\n+    public void tick()\n+    {\n+        xo = x;\n+        yo = y;\n+        zo = z;\n+        yd += 0.005D;\n+        if (lifetime-- <= 0)\n+        {\n+            remove();\n+        }\n+        else\n+        {\n+            move(xd, yd, zd);\n+            xd *= 0.85F;\n+            yd *= 0.85F;\n+            zd *= 0.85F;\n+        }\n+    }\n+\n+    public IParticleRenderType getRenderType()\n+    {\n+        return IParticleRenderType.PARTICLE_SHEET_OPAQUE;\n+    }\n+\n+    public static class Factory implements IParticleFactory<BasicParticleType>\n+    {\n+        private final IAnimatedSprite sprite;\n+\n+        public Factory(IAnimatedSprite spriteSet)\n+        {\n+            sprite = spriteSet;\n+        }\n+\n+        public Particle createParticle(BasicParticleType typeIn, ClientWorld worldIn, double x, double y, double z, double xSpeed, double ySpeed, double zSpeed)\n+        {\n+            BubbleParticle particle = new BubbleParticle(worldIn, x, y, z, xSpeed, ySpeed, zSpeed);\n+            particle.pickSprite(sprite);\n+            return particle;\n+        }\n+    }\n+}"
  },
  {
    "sha": "ed96c71ad739db4d525bd7db2972d5296bcecf7f",
    "filename": "src/main/java/net/dries007/tfc/client/particle/SteamParticle.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/particle/SteamParticle.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/particle/SteamParticle.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/particle/SteamParticle.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,40 @@\n+package net.dries007.tfc.client.particle;\n+\n+import net.minecraft.client.particle.*;\n+import net.minecraft.client.world.ClientWorld;\n+import net.minecraft.particles.BasicParticleType;\n+import net.minecraftforge.api.distmarker.Dist;\n+import net.minecraftforge.api.distmarker.OnlyIn;\n+\n+public class SteamParticle extends SpriteTexturedParticle\n+{\n+    private SteamParticle(ClientWorld worldIn, double x, double y, double z, double motionX, double motionY, double motionZ)\n+    {\n+        super(worldIn, x, y, z, motionX, motionY, motionZ);\n+        setAlpha(0.05F);\n+        setLifetime((int) (12.0F / (random.nextFloat() * 0.9F + 0.1F)));\n+    }\n+\n+    @Override\n+    public IParticleRenderType getRenderType()\n+    {\n+        return IParticleRenderType.PARTICLE_SHEET_TRANSLUCENT;\n+    }\n+\n+    public static class Factory implements IParticleFactory<BasicParticleType>\n+    {\n+        private final IAnimatedSprite sprite;\n+\n+        public Factory(IAnimatedSprite spriteSet)\n+        {\n+            sprite = spriteSet;\n+        }\n+\n+        public Particle createParticle(BasicParticleType typeIn, ClientWorld worldIn, double x, double y, double z, double xSpeed, double ySpeed, double zSpeed)\n+        {\n+            SteamParticle particle = new SteamParticle(worldIn, x, y, z, xSpeed, ySpeed, zSpeed);\n+            particle.pickSprite(sprite);\n+            return particle;\n+        }\n+    }\n+}"
  },
  {
    "sha": "eb7e3c721dee3d0ff6a90385971ead88ee275475",
    "filename": "src/main/java/net/dries007/tfc/client/particle/TFCParticles.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/particle/TFCParticles.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/particle/TFCParticles.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/particle/TFCParticles.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,17 @@\n+package net.dries007.tfc.client.particle;\n+\n+import net.minecraft.particles.BasicParticleType;\n+import net.minecraft.particles.ParticleType;\n+import net.minecraftforge.fml.RegistryObject;\n+import net.minecraftforge.registries.DeferredRegister;\n+import net.minecraftforge.registries.ForgeRegistries;\n+\n+import static net.dries007.tfc.TerraFirmaCraft.MOD_ID;\n+\n+public class TFCParticles\n+{\n+    public static final DeferredRegister<ParticleType<?>> PARTICLE_TYPES = DeferredRegister.create(ForgeRegistries.PARTICLE_TYPES, MOD_ID);\n+\n+    public static final RegistryObject<BasicParticleType> BUBBLE = PARTICLE_TYPES.register(\"bubble\", () -> new BasicParticleType(false));\n+    public static final RegistryObject<BasicParticleType> STEAM = PARTICLE_TYPES.register(\"steam\", () -> new BasicParticleType(false));\n+}"
  },
  {
    "sha": "3d26453444661998a36cab2e36a116b7cf2433ad",
    "filename": "src/main/java/net/dries007/tfc/client/particle/package-info.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/particle/package-info.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/particle/package-info.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/particle/package-info.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,13 @@\n+/*\n+ * Licensed under the EUPL, Version 1.2.\n+ * You may obtain a copy of the Licence at:\n+ * https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12\n+ */\n+\n+@MethodsReturnNonnullByDefault\n+@ParametersAreNonnullByDefault\n+package net.dries007.tfc.client.particle;\n+\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+import mcp.MethodsReturnNonnullByDefault;\n\\ No newline at end of file"
  },
  {
    "sha": "ebcddec5ca2a997cd8278488f4ffe39aa1795036",
    "filename": "src/main/java/net/dries007/tfc/client/render/GrillTileEntityRenderer.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/render/GrillTileEntityRenderer.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/render/GrillTileEntityRenderer.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/render/GrillTileEntityRenderer.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,64 @@\n+package net.dries007.tfc.client.render;\n+\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.model.ItemCameraTransforms;\n+import net.minecraft.client.renderer.tileentity.TileEntityRenderer;\n+import net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.math.vector.Vector3f;\n+import net.minecraftforge.items.CapabilityItemHandler;\n+\n+import com.mojang.blaze3d.matrix.MatrixStack;\n+import net.dries007.tfc.common.tileentity.GrillTileEntity;\n+\n+import static net.dries007.tfc.common.tileentity.GrillTileEntity.SLOT_EXTRA_INPUT_END;\n+import static net.dries007.tfc.common.tileentity.GrillTileEntity.SLOT_EXTRA_INPUT_START;\n+\n+public class GrillTileEntityRenderer extends TileEntityRenderer<GrillTileEntity>\n+{\n+    public GrillTileEntityRenderer(TileEntityRendererDispatcher dispatcher)\n+    {\n+        super(dispatcher);\n+    }\n+\n+    @Override\n+    public void render(GrillTileEntity te, float partialTicks, MatrixStack matrixStack, IRenderTypeBuffer buffer, int combinedLight, int combinedOverlay)\n+    {\n+        te.getCapability(CapabilityItemHandler.ITEM_HANDLER_CAPABILITY).ifPresent(cap -> {\n+            for (int i = SLOT_EXTRA_INPUT_START; i <= SLOT_EXTRA_INPUT_END; i++)\n+            {\n+                ItemStack item = cap.getStackInSlot(i);\n+                if (!item.isEmpty())\n+                {\n+                    float yOffset = 0.625f;\n+                    matrixStack.pushPose();\n+                    matrixStack.translate(0.3, 0.003125D + yOffset, 0.28);\n+                    matrixStack.scale(0.3f, 0.3f, 0.3f);\n+                    matrixStack.mulPose(Vector3f.XP.rotationDegrees(90F));\n+                    matrixStack.mulPose(Vector3f.ZP.rotationDegrees(180F));\n+\n+                    float translateAmount = -1.4F;\n+                    int ordinal = i - SLOT_EXTRA_INPUT_START;\n+                    if (ordinal == 1 || ordinal == 3)\n+                    {\n+                        matrixStack.translate(translateAmount, 0, 0);\n+                    }\n+                    if (ordinal == 2 || ordinal == 3)\n+                    {\n+                        matrixStack.translate(0, translateAmount, 0);\n+                    }\n+                    if (ordinal == 4)\n+                    {\n+                        matrixStack.translate(translateAmount / 2, translateAmount / 2, 0);\n+                    }\n+\n+                    Minecraft.getInstance().getItemRenderer().renderStatic(item, ItemCameraTransforms.TransformType.FIXED, combinedLight, combinedOverlay, matrixStack, buffer);\n+                    matrixStack.popPose();\n+                }\n+            }\n+        });\n+    }\n+}"
  },
  {
    "sha": "0302491bdfc86f9a53ed0a5eb8ca3ac7cf476fc3",
    "filename": "src/main/java/net/dries007/tfc/client/render/PitKilnTileEntityRenderer.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/render/PitKilnTileEntityRenderer.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/render/PitKilnTileEntityRenderer.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/render/PitKilnTileEntityRenderer.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,62 @@\n+package net.dries007.tfc.client.render;\n+\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.ItemRenderer;\n+import net.minecraft.client.renderer.model.ItemCameraTransforms;\n+import net.minecraft.client.renderer.tileentity.TileEntityRenderer;\n+import net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.math.vector.Vector3f;\n+\n+import net.minecraftforge.items.CapabilityItemHandler;\n+\n+import com.mojang.blaze3d.matrix.MatrixStack;\n+import net.dries007.tfc.common.blocks.PitKilnBlock;\n+import net.dries007.tfc.common.tileentity.PitKilnTileEntity;\n+\n+public class PitKilnTileEntityRenderer extends TileEntityRenderer<PitKilnTileEntity>\n+{\n+    public PitKilnTileEntityRenderer(TileEntityRendererDispatcher dispatcher)\n+    {\n+        super(dispatcher);\n+    }\n+\n+    @Override\n+    public void render(PitKilnTileEntity te, float partialTicks, MatrixStack matrixStack, IRenderTypeBuffer buffer, int combinedLight, int combinedOverlay)\n+    {\n+        if (te.getBlockState().getValue(PitKilnBlock.STAGE) > 9) return;\n+\n+        ItemRenderer itemRenderer = Minecraft.getInstance().getItemRenderer();\n+        te.getCapability(CapabilityItemHandler.ITEM_HANDLER_CAPABILITY).ifPresent(cap -> {\n+            float timeD = (float) (360.0 * (System.currentTimeMillis() & 0x3FFFL) / 0x3FFFL);\n+            matrixStack.translate(0.25D, 0.25D, 0.25D);\n+            if (te.holdingLargeItem())\n+            {\n+                ItemStack stack = cap.getStackInSlot(0);\n+                if (!stack.isEmpty())\n+                {\n+                    matrixStack.pushPose();\n+                    matrixStack.translate(0.25D, 0, 0.25D);\n+                    matrixStack.mulPose(Vector3f.YP.rotationDegrees(90F));\n+                    itemRenderer.renderStatic(stack, ItemCameraTransforms.TransformType.FIXED, combinedLight, combinedOverlay, matrixStack, buffer);\n+                    matrixStack.popPose();\n+                }\n+            }\n+            else\n+            {\n+                matrixStack.scale(0.5F, 0.5F, 0.5F);\n+                for (int i = 0; i < cap.getSlots(); i++)\n+                {\n+                    ItemStack stack = cap.getStackInSlot(i);\n+                    if (stack.isEmpty()) continue;\n+                    matrixStack.pushPose();\n+                    matrixStack.translate((i % 2 == 0 ? 1 : 0), 0, (i < 2 ? 1 : 0));\n+                    matrixStack.mulPose(Vector3f.YP.rotationDegrees(timeD));\n+                    itemRenderer.renderStatic(stack, ItemCameraTransforms.TransformType.FIXED, combinedLight, combinedOverlay, matrixStack, buffer);\n+                    matrixStack.popPose();\n+                }\n+            }\n+        });\n+    }\n+}"
  },
  {
    "sha": "5fafe63aa65815a06065f6aa29f04fb7dd7fed7f",
    "filename": "src/main/java/net/dries007/tfc/client/render/PlacedItemTileEntityRenderer.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/render/PlacedItemTileEntityRenderer.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/render/PlacedItemTileEntityRenderer.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/render/PlacedItemTileEntityRenderer.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,61 @@\n+package net.dries007.tfc.client.render;\n+\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.ItemRenderer;\n+import net.minecraft.client.renderer.model.ItemCameraTransforms;\n+import net.minecraft.client.renderer.tileentity.TileEntityRenderer;\n+import net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.math.vector.Vector3f;\n+\n+import net.minecraftforge.items.CapabilityItemHandler;\n+\n+import com.mojang.blaze3d.matrix.MatrixStack;\n+import net.dries007.tfc.common.tileentity.PlacedItemTileEntity;\n+\n+public class PlacedItemTileEntityRenderer extends TileEntityRenderer<PlacedItemTileEntity>\n+{\n+    public PlacedItemTileEntityRenderer(TileEntityRendererDispatcher dispatcher)\n+    {\n+        super(dispatcher);\n+    }\n+\n+    @Override\n+    public void render(PlacedItemTileEntity te, float partialTicks, MatrixStack matrixStack, IRenderTypeBuffer buffer, int combinedLight, int combinedOverlay)\n+    {\n+        ItemRenderer itemRenderer = Minecraft.getInstance().getItemRenderer();\n+        te.getCapability(CapabilityItemHandler.ITEM_HANDLER_CAPABILITY).ifPresent(cap -> {\n+            float timeD = (float) (360.0 * (System.currentTimeMillis() & 0x3FFFL) / 0x3FFFL);\n+            matrixStack.translate(0.25D, 0.25D, 0.25D);\n+            if (te.holdingLargeItem())\n+            {\n+                ItemStack stack = cap.getStackInSlot(0);\n+                if (!stack.isEmpty())\n+                {\n+                    matrixStack.pushPose();\n+                    matrixStack.translate(0.25D, 0, 0.25D);\n+                    matrixStack.mulPose(Vector3f.YP.rotationDegrees(90F));\n+                    itemRenderer.renderStatic(stack, ItemCameraTransforms.TransformType.FIXED, combinedLight, combinedOverlay, matrixStack, buffer);\n+                    matrixStack.popPose();\n+                }\n+            }\n+            else\n+            {\n+                matrixStack.scale(0.5F, 0.5F, 0.5F);\n+                for (int i = 0; i < cap.getSlots(); i++)\n+                {\n+                    ItemStack stack = cap.getStackInSlot(i);\n+                    if (stack.isEmpty()) continue;\n+                    matrixStack.pushPose();\n+                    matrixStack.translate((i % 2 == 0 ? 1 : 0), 0, (i < 2 ? 1 : 0));\n+                    matrixStack.mulPose(Vector3f.YP.rotationDegrees(timeD));\n+                    itemRenderer.renderStatic(stack, ItemCameraTransforms.TransformType.FIXED, combinedLight, combinedOverlay, matrixStack, buffer);\n+                    matrixStack.popPose();\n+                }\n+            }\n+        });\n+    }\n+}"
  },
  {
    "sha": "d6fdb5767a3c5ef250cd93f0e931cd35ae9d70f1",
    "filename": "src/main/java/net/dries007/tfc/client/render/PotTileEntityRenderer.java",
    "status": "added",
    "additions": 96,
    "deletions": 0,
    "changes": 96,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/render/PotTileEntityRenderer.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/render/PotTileEntityRenderer.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/render/PotTileEntityRenderer.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,96 @@\n+package net.dries007.tfc.client.render;\n+\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.renderer.IRenderTypeBuffer;\n+import net.minecraft.client.renderer.RenderType;\n+import net.minecraft.client.renderer.model.ItemCameraTransforms;\n+import net.minecraft.client.renderer.texture.AtlasTexture;\n+import net.minecraft.client.renderer.texture.TextureAtlasSprite;\n+import net.minecraft.client.renderer.tileentity.TileEntityRenderer;\n+import net.minecraft.client.renderer.tileentity.TileEntityRendererDispatcher;\n+import net.minecraft.fluid.Fluid;\n+import net.minecraft.fluid.Fluids;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraft.util.math.vector.Matrix4f;\n+import net.minecraft.util.math.vector.Vector3f;\n+\n+import net.minecraftforge.fluids.FluidAttributes;\n+import net.minecraftforge.fluids.FluidStack;\n+import net.minecraftforge.items.CapabilityItemHandler;\n+\n+import com.mojang.blaze3d.matrix.MatrixStack;\n+import com.mojang.blaze3d.vertex.IVertexBuilder;\n+import net.dries007.tfc.common.tileentity.PotTileEntity;\n+\n+import static net.dries007.tfc.common.tileentity.PotTileEntity.SLOT_EXTRA_INPUT_END;\n+import static net.dries007.tfc.common.tileentity.PotTileEntity.SLOT_EXTRA_INPUT_START;\n+\n+public class PotTileEntityRenderer extends TileEntityRenderer<PotTileEntity>\n+{\n+\n+    public PotTileEntityRenderer(TileEntityRendererDispatcher dispatcher)\n+    {\n+        super(dispatcher);\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"deprecation\")\n+    public void render(PotTileEntity te, float partialTicks, MatrixStack matrixStack, IRenderTypeBuffer buffer, int combinedLight, int combinedOverlay)\n+    {\n+        if (te.getLevel() == null) return;\n+        FluidStack fluidStack = te.getFluidContained();\n+        boolean useDefault = te.hasOutput() && te.getOutput().renderDefaultFluid();\n+        if (!fluidStack.isEmpty() || useDefault)\n+        {\n+            Fluid fluid = useDefault ? Fluids.WATER : fluidStack.getFluid();\n+\n+            FluidAttributes attributes = fluid.getAttributes();\n+            ResourceLocation texture = attributes.getStillTexture(fluidStack);\n+            TextureAtlasSprite sprite = Minecraft.getInstance().getTextureAtlas(AtlasTexture.LOCATION_BLOCKS).apply(texture);\n+            int color = attributes.getColor();\n+\n+            float r = ((color >> 16) & 0xFF) / 255F;\n+            float g = ((color >> 8) & 0xFF) / 255F;\n+            float b = (color & 0xFF) / 255F;\n+            float a = ((color >> 24) & 0xFF) / 255F;\n+\n+            if (useDefault)\n+            {\n+                b = 0;\n+                g /= 4;\n+                r *= 3;\n+            }\n+\n+            IVertexBuilder builder = buffer.getBuffer(RenderType.entityTranslucentCull(AtlasTexture.LOCATION_BLOCKS));\n+            Matrix4f matrix4f = matrixStack.last().pose();\n+\n+            builder.vertex(matrix4f, 0.3125F, 0.625F, 0.3125F).color(r, g, b, a).uv(sprite.getU(5), sprite.getV(5)).overlayCoords(combinedOverlay).uv2(combinedLight).normal(0, 0, 1).endVertex();\n+            builder.vertex(matrix4f, 0.3125F, 0.625F, 0.6875F).color(r, g, b, a).uv(sprite.getU(5), sprite.getV(11)).overlayCoords(combinedOverlay).uv2(combinedLight).normal(0, 0, 1).endVertex();\n+            builder.vertex(matrix4f, 0.6875F, 0.625F, 0.6875F).color(r, g, b, a).uv(sprite.getU(11), sprite.getV(11)).overlayCoords(combinedOverlay).uv2(combinedLight).normal(0, 0, 1).endVertex();\n+            builder.vertex(matrix4f, 0.6875F, 0.625F, 0.3125F).color(r, g, b, a).uv(sprite.getU(11), sprite.getV(5)).overlayCoords(combinedOverlay).uv2(combinedLight).normal(0, 0, 1).endVertex();\n+        }\n+\n+        te.getCapability(CapabilityItemHandler.ITEM_HANDLER_CAPABILITY).ifPresent(cap -> {\n+            for (int i = SLOT_EXTRA_INPUT_START; i <= SLOT_EXTRA_INPUT_END; i++)\n+            {\n+                ItemStack item = cap.getStackInSlot(i);\n+                if (!item.isEmpty())\n+                {\n+                    float yOffset = 0.46f;\n+                    matrixStack.pushPose();\n+                    matrixStack.translate(0.5, 0.003125D + yOffset, 0.5);\n+                    matrixStack.scale(0.3f, 0.3f, 0.3f);\n+                    matrixStack.mulPose(Vector3f.XP.rotationDegrees(90F));\n+                    matrixStack.mulPose(Vector3f.ZP.rotationDegrees(180F));\n+\n+                    int ordinal = i - SLOT_EXTRA_INPUT_START;\n+                    matrixStack.translate(0, 0, -0.12F * ordinal);\n+\n+                    Minecraft.getInstance().getItemRenderer().renderStatic(item, ItemCameraTransforms.TransformType.FIXED, combinedLight, combinedOverlay, matrixStack, buffer);\n+                    matrixStack.popPose();\n+                }\n+            }\n+        });\n+    }\n+}"
  },
  {
    "sha": "0e883024af4a644e5e49771767d951b7e3aa65b0",
    "filename": "src/main/java/net/dries007/tfc/client/render/package-info.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/render/package-info.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/render/package-info.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/render/package-info.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,13 @@\n+/*\n+ * Licensed under the EUPL, Version 1.2.\n+ * You may obtain a copy of the Licence at:\n+ * https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12\n+ */\n+\n+@MethodsReturnNonnullByDefault\n+@ParametersAreNonnullByDefault\n+package net.dries007.tfc.client.render;\n+\n+import javax.annotation.ParametersAreNonnullByDefault;\n+\n+import mcp.MethodsReturnNonnullByDefault;\n\\ No newline at end of file"
  },
  {
    "sha": "b19c6a04051b7f7450561a197414e4190e2ca127",
    "filename": "src/main/java/net/dries007/tfc/client/screen/FirepitScreen.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/FirepitScreen.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/FirepitScreen.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/screen/FirepitScreen.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,33 @@\n+package net.dries007.tfc.client.screen;\n+\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraft.util.text.ITextComponent;\n+\n+import com.mojang.blaze3d.matrix.MatrixStack;\n+import net.dries007.tfc.common.capabilities.heat.Heat;\n+import net.dries007.tfc.common.container.FirepitContainer;\n+import net.dries007.tfc.common.tileentity.FirepitTileEntity;\n+\n+import static net.dries007.tfc.TerraFirmaCraft.MOD_ID;\n+\n+public class FirepitScreen extends TileEntityScreen<FirepitTileEntity, FirepitContainer>\n+{\n+    private static final ResourceLocation FIREPIT = new ResourceLocation(MOD_ID, \"textures/gui/fire_pit.png\");\n+\n+    public FirepitScreen(FirepitContainer container, PlayerInventory playerInventory, ITextComponent name)\n+    {\n+        super(container, playerInventory, name, FIREPIT);\n+        inventoryLabelY += 20;\n+        imageHeight += 20;\n+    }\n+\n+    @Override\n+    protected void renderBg(MatrixStack matrixStack, float partialTicks, int mouseX, int mouseY)\n+    {\n+        super.renderBg(matrixStack, partialTicks, mouseX, mouseY);\n+        int temp = (int) (51 * ((FirepitTileEntity) tile).getSyncableData().get(0) / Heat.maxVisibleTemperature());\n+        if (temp > 0)\n+            blit(matrixStack, leftPos + 30, topPos + 84 - Math.min(51, temp), 176, 0, 15, 5);\n+    }\n+}"
  },
  {
    "sha": "3b66b1ce0c47fbe0e85d8ee8938f7e9a7a71fa3b",
    "filename": "src/main/java/net/dries007/tfc/client/screen/GrillScreen.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/GrillScreen.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/GrillScreen.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/screen/GrillScreen.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,34 @@\n+package net.dries007.tfc.client.screen;\n+\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraft.util.text.ITextComponent;\n+\n+import com.mojang.blaze3d.matrix.MatrixStack;\n+import net.dries007.tfc.common.capabilities.heat.Heat;\n+import net.dries007.tfc.common.container.GrillContainer;\n+import net.dries007.tfc.common.tileentity.FirepitTileEntity;\n+import net.dries007.tfc.common.tileentity.GrillTileEntity;\n+\n+import static net.dries007.tfc.TerraFirmaCraft.MOD_ID;\n+\n+public class GrillScreen extends TileEntityScreen<GrillTileEntity, GrillContainer>\n+{\n+    private static final ResourceLocation BACKGROUND = new ResourceLocation(MOD_ID, \"textures/gui/fire_pit_grill.png\");\n+\n+    public GrillScreen(GrillContainer container, PlayerInventory playerInventory, ITextComponent name)\n+    {\n+        super(container, playerInventory, name, BACKGROUND);\n+        inventoryLabelY += 20;\n+        imageHeight += 20;\n+    }\n+\n+    @Override\n+    protected void renderBg(MatrixStack matrixStack, float partialTicks, int mouseX, int mouseY)\n+    {\n+        super.renderBg(matrixStack, partialTicks, mouseX, mouseY);\n+        int temp = (int) (51 * ((FirepitTileEntity) tile).getSyncableData().get(0) / Heat.maxVisibleTemperature());\n+        if (temp > 0)\n+            blit(matrixStack, leftPos + 30, topPos + 84 - Math.min(51, temp), 176, 0, 15, 5);\n+    }\n+}"
  },
  {
    "sha": "6d6a9d3bc9bf40006719da36a721830216040d70",
    "filename": "src/main/java/net/dries007/tfc/client/screen/LogPileScreen.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/LogPileScreen.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/LogPileScreen.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/screen/LogPileScreen.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,14 @@\n+package net.dries007.tfc.client.screen;\n+\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.util.text.ITextComponent;\n+\n+import net.dries007.tfc.common.container.LogPileContainer;\n+\n+public class LogPileScreen extends TFCContainerScreen<LogPileContainer>\n+{\n+    public LogPileScreen(LogPileContainer container, PlayerInventory playerInventory, ITextComponent name)\n+    {\n+        super(container, playerInventory, name, SMALL_INV);\n+    }\n+}"
  },
  {
    "sha": "94b39bd35c761d53d460b670e4b248c30e7dc19d",
    "filename": "src/main/java/net/dries007/tfc/client/screen/PotScreen.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/PotScreen.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/PotScreen.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/screen/PotScreen.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,34 @@\n+package net.dries007.tfc.client.screen;\n+\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraft.util.text.ITextComponent;\n+\n+import com.mojang.blaze3d.matrix.MatrixStack;\n+import net.dries007.tfc.common.capabilities.heat.Heat;\n+import net.dries007.tfc.common.container.PotContainer;\n+import net.dries007.tfc.common.tileentity.FirepitTileEntity;\n+import net.dries007.tfc.common.tileentity.PotTileEntity;\n+\n+import static net.dries007.tfc.TerraFirmaCraft.MOD_ID;\n+\n+public class PotScreen extends TileEntityScreen<PotTileEntity, PotContainer>\n+{\n+    private static final ResourceLocation BACKGROUND = new ResourceLocation(MOD_ID, \"textures/gui/fire_pit_cooking_pot.png\");\n+\n+    public PotScreen(PotContainer container, PlayerInventory playerInventory, ITextComponent name)\n+    {\n+        super(container, playerInventory, name, BACKGROUND);\n+        inventoryLabelY += 20;\n+        imageHeight += 20;\n+    }\n+\n+    @Override\n+    protected void renderBg(MatrixStack matrixStack, float partialTicks, int mouseX, int mouseY)\n+    {\n+        super.renderBg(matrixStack, partialTicks, mouseX, mouseY);\n+        int temp = (int) (51 * ((FirepitTileEntity) tile).getSyncableData().get(0) / Heat.maxVisibleTemperature());\n+        if (temp > 0)\n+            blit(matrixStack, leftPos + 30, topPos + 84 - Math.min(51, temp), 176, 0, 15, 5);\n+    }\n+}"
  },
  {
    "sha": "d359648947f6577657b530763990bfaef59c1b70",
    "filename": "src/main/java/net/dries007/tfc/client/screen/TFCContainerScreen.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/TFCContainerScreen.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/TFCContainerScreen.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/screen/TFCContainerScreen.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -15,8 +15,11 @@\n import com.mojang.blaze3d.matrix.MatrixStack;\n import com.mojang.blaze3d.systems.RenderSystem;\n \n-public abstract class TFCContainerScreen<C extends Container> extends ContainerScreen<C>\n+import static net.dries007.tfc.TerraFirmaCraft.MOD_ID;\n+\n+public class TFCContainerScreen<C extends Container> extends ContainerScreen<C>\n {\n+    protected static final ResourceLocation SMALL_INV = new ResourceLocation(MOD_ID, \"textures/gui/small_inventory.png\");\n     protected final ResourceLocation texture;\n \n     public TFCContainerScreen(C container, PlayerInventory playerInventory, ITextComponent name, ResourceLocation texture)"
  },
  {
    "sha": "d2dbdd19a9204fc52529ec77f41a2e2bed2e2c58",
    "filename": "src/main/java/net/dries007/tfc/client/screen/TileEntityScreen.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/TileEntityScreen.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/client/screen/TileEntityScreen.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/client/screen/TileEntityScreen.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,19 @@\n+package net.dries007.tfc.client.screen;\n+\n+import net.minecraft.entity.player.PlayerInventory;\n+import net.minecraft.util.ResourceLocation;\n+import net.minecraft.util.text.ITextComponent;\n+\n+import net.dries007.tfc.common.container.TileEntityContainer;\n+import net.dries007.tfc.common.tileentity.InventoryTileEntity;\n+\n+public class TileEntityScreen<T extends InventoryTileEntity, C extends TileEntityContainer<T>> extends TFCContainerScreen<C>\n+{\n+    protected final InventoryTileEntity tile;\n+\n+    public TileEntityScreen(C container, PlayerInventory playerInventory, ITextComponent name, ResourceLocation texture)\n+    {\n+        super(container, playerInventory, name, texture);\n+        this.tile = container.getTileEntity();\n+    }\n+}"
  },
  {
    "sha": "db19bd8249e8b2e0a4a208a211c5a02fbd855e2a",
    "filename": "src/main/java/net/dries007/tfc/common/TFCItemGroup.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/common/TFCItemGroup.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/common/TFCItemGroup.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/common/TFCItemGroup.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -8,6 +8,7 @@\n \n import java.util.function.Supplier;\n \n+import net.minecraft.item.DyeColor;\n import net.minecraft.item.ItemGroup;\n import net.minecraft.item.ItemStack;\n import net.minecraft.item.Items;\n@@ -34,6 +35,7 @@\n     public static final ItemGroup WOOD = new TFCItemGroup(\"wood\", () -> new ItemStack(TFCBlocks.WOODS.get(Wood.Default.DOUGLAS_FIR).get(Wood.BlockType.LOG).get()));\n     public static final ItemGroup FOOD = new TFCItemGroup(\"food\", MISSING_ITEM);\n     public static final ItemGroup FLORA = new TFCItemGroup(\"flora\", () -> new ItemStack(TFCBlocks.PLANTS.get(Plant.GOLDENROD).get()));\n+    public static final ItemGroup DECORATIONS = new TFCItemGroup(\"decorations\", () -> new ItemStack(TFCBlocks.ALABASTER_BRICKS.get(DyeColor.CYAN).get()));\n     public static final ItemGroup MISC = new TFCItemGroup(\"misc\", MISSING_ITEM);\n \n     private final Lazy<ItemStack> iconStack;"
  },
  {
    "sha": "092682f43c93b2ce7c1b199bc06cdeb74ba962df",
    "filename": "src/main/java/net/dries007/tfc/common/TFCTags.java",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/common/TFCTags.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/common/TFCTags.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/common/TFCTags.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -36,13 +36,21 @@\n         public static final ITag.INamedTag<Block> KELP_BRANCH = create(\"kelp_branch\");\n         public static final ITag.INamedTag<Block> WALL_CORALS = create(\"wall_corals\");\n         public static final ITag.INamedTag<Block> CORALS = create(\"corals\");\n+        public static final ITag.INamedTag<Block> SPREADING_BUSH = create(\"spreading_bush\");\n+        public static final ITag.INamedTag<Block> ANY_SPREADING_BUSH = create(\"any_spreading_bush\");\n+        public static final ITag.INamedTag<Block> FRUIT_TREE_BRANCH = create(\"fruit_tree_branch\");\n+        public static final ITag.INamedTag<Block> FRUIT_TREE_LEAVES = create(\"fruit_tree_leaves\");\n+        public static final ITag.INamedTag<Block> FRUIT_TREE_SAPLING = create(\"fruit_tree_sapling\");\n \n         public static final ITag.INamedTag<Block> THATCH_BED_THATCH = create(\"thatch_bed_thatch\");\n \n         public static final ITag.INamedTag<Block> SNOW = create(\"snow\"); // Blocks that cover grass with snow.\n         public static final ITag.INamedTag<Block> CAN_BE_SNOW_PILED = create(\"can_be_snow_piled\"); // Blocks that can be replaced with snow piles\n \n         public static final ITag.INamedTag<Block> BREAKS_WHEN_ISOLATED = create(\"breaks_when_isolated\"); // When surrounded on all six sides by air, this block will break and drop itself\n+        public static final ITag.INamedTag<Block> SMALL_SPIKE = create(\"small_spike\");\n+        public static final ITag.INamedTag<Block> LIT_BY_DROPPED_TORCH = create(\"lit_by_dropped_torch\"); // Causes dropped torches to start fires on them\n+        public static final ITag.INamedTag<Block> CHARCOAL_COVER_WHITELIST = create(\"charcoal_cover_whitelist\"); // things that skip the valid cover block check on charcoal pits\n \n         private static ITag.INamedTag<Block> create(String id)\n         {\n@@ -63,6 +71,15 @@\n     public static class Items\n     {\n         public static final ITag.INamedTag<Item> THATCH_BED_HIDES = create(\"thatch_bed_hides\");\n+        public static final ITag.INamedTag<Item> FIREPIT_KINDLING = create(\"firepit_kindling\");\n+        public static final ITag.INamedTag<Item> FIREPIT_STICKS = create(\"firepit_sticks\");\n+        public static final ITag.INamedTag<Item> FIREPIT_LOGS = create(\"firepit_logs\");\n+        public static final ITag.INamedTag<Item> STARTS_FIRES_WITH_DURABILITY = create(\"starts_fires_with_durability\");\n+        public static final ITag.INamedTag<Item> STARTS_FIRES_WITH_ITEMS = create(\"starts_fires_with_items\");\n+        public static final ITag.INamedTag<Item> EXTINGUISHER = create(\"extinguisher\");\n+        public static final ITag.INamedTag<Item> LOG_PILE_LOGS = create(\"log_pile_logs\");\n+        public static final ITag.INamedTag<Item> PIT_KILN_STRAW = create(\"pit_kiln_straw\");\n+        public static final ITag.INamedTag<Item> PIT_KILN_LOGS = create(\"pit_kiln_logs\");\n \n         private static ITag.INamedTag<Item> create(String id)\n         {"
  },
  {
    "sha": "7ad509fc3413d95c09fd692ead8abca8ef487c16",
    "filename": "src/main/java/net/dries007/tfc/common/blocks/BurningLogPileBlock.java",
    "status": "added",
    "additions": 119,
    "deletions": 0,
    "changes": 119,
    "blob_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/blob/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/common/blocks/BurningLogPileBlock.java",
    "raw_url": "https://github.com/TerraFirmaCraft/TerraFirmaCraft/raw/9358dcb755974accca34e680aaffd9585a9820fd/src/main/java/net/dries007/tfc/common/blocks/BurningLogPileBlock.java",
    "contents_url": "https://api.github.com/repos/TerraFirmaCraft/TerraFirmaCraft/contents/src/main/java/net/dries007/tfc/common/blocks/BurningLogPileBlock.java?ref=9358dcb755974accca34e680aaffd9585a9820fd",
    "patch": "@@ -0,0 +1,119 @@\n+package net.dries007.tfc.common.blocks;\n+\n+import java.util.Random;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.block.Blocks;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.item.Items;\n+import net.minecraft.particles.ParticleTypes;\n+import net.minecraft.util.Direction;\n+import net.minecraft.util.SoundCategory;\n+import net.minecraft.util.SoundEvents;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.RayTraceResult;\n+import net.minecraft.world.IBlockReader;\n+import net.minecraft.world.World;\n+import net.minecraft.world.server.ServerWorld;\n+\n+import net.dries007.tfc.common.TFCTags;\n+import net.dries007.tfc.common.tileentity.BurningLogPileTileEntity;\n+import net.dries007.tfc.common.tileentity.LogPileTileEntity;\n+import net.dries007.tfc.util.Helpers;\n+\n+public class BurningLogPileBlock extends Block implements IForgeBlockProperties\n+{\n+    public static void tryLightLogPile(World world, BlockPos pos)\n+    {\n+        LogPileTileEntity pile = Helpers.getTileEntity(world, pos, LogPileTileEntity.class);\n+        if (pile != null)\n+        {\n+            int logs = pile.countLogs();\n+            pile.clearContent(); // avoid dumping when onRemove is called\n+            world.setBlockAndUpdate(pos, TFCBlocks.BURNING_LOG_PILE.get().defaultBlockState());\n+            Helpers.playSound(world, pos, SoundEvents.BLAZE_SHOOT);\n+\n+            BurningLogPileTileEntity newPile = Helpers.getTileEntity(world, pos, BurningLogPileTileEntity.class);\n+            if (newPile != null)\n+            {\n+                newPile.light(logs);\n+                tryLightNearby(world, pos);\n+            }\n+        }\n+    }\n+\n+    private static boolean isValidCoverBlock(BlockState offsetState, World world, BlockPos pos, Direction side)\n+    {\n+        if (offsetState.is(TFCTags.Blocks.CHARCOAL_COVER_WHITELIST))// log pile, charcoal pile, this\n+        {\n+            return true;\n+        }\n+        return !offsetState.getMaterial().isFlammable() && offsetState.isFaceSturdy(world, pos, side);\n+    }\n+\n+    private static void tryLightNearby(World world, BlockPos pos)\n+    {\n+        if (world.isClientSide()) return;\n+        for (Direction side : Helpers.DIRECTIONS)\n+        {\n+            final BlockPos offsetPos = pos.relative(side);\n+            BlockState offsetState = world.getBlockState(offsetPos);\n+            if (isValidCoverBlock(offsetState, world, offsetPos, side.getOpposite()))\n+            {\n+                if (offsetState.is(TFCBlocks.LOG_PILE.get()))\n+                {\n+                    tryLightLogPile(world, offsetPos);\n+                }\n+            }\n+            else\n+            {\n+                world.setBlockAndUpdate(offsetPos, Blocks.FIRE.defaultBlockState());\n+            }\n+        }\n+    }\n+    private final ForgeBlockProperties properties;\n+\n+    public BurningLogPileBlock(ForgeBlockProperties properties)\n+    {\n+        super(properties.properties());\n+        this.properties = properties;\n+    }\n+\n+    @Override\n+    public ForgeBlockProperties getForgeProperties()\n+    {\n+        return properties;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"deprecation\")\n+    public void randomTick(BlockState state, ServerWorld world, BlockPos pos, Random rand)\n+    {\n+        tryLightNearby(world, pos);\n+    }\n+\n+    @Override\n+    public void animateTick(BlockState stateIn, World worldIn, BlockPos pos, Random rand)\n+    {\n+        double x = pos.getX() + rand.nextFloat();\n+        double y = pos.getY() + 1;\n+        double z = pos.getZ() + rand.nextFloat();\n+        worldIn.addParticle(ParticleTypes.SMOKE, x, y, z, 0f, 0.1f + 0.1f * rand.nextFloat(), 0f);\n+        if (rand.nextInt(12) == 0)\n+        {\n+            worldIn.playLocalSound(x, y, z, SoundEvents.CAMPFIRE_CRACKLE, SoundCategory.BLOCKS, 0.5F + rand.nextFloat(), rand.nextFloat() * 0.7F + 0.6F, false);\n+        }\n+        for (int i = 0; i < rand.nextInt(3); i++)\n+        {\n+            worldIn.addParticle(ParticleTypes.CAMPFIRE_COSY_SMOKE, x, y, z, (0.5F - rand.nextFloat()) / 10, 0.1f + rand.nextFloat() / 8, (0.5F - rand.nextFloat()) / 10);\n+        }\n+    }\n+\n+    @Override\n+    public ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player)\n+    {\n+        return new ItemStack(Items.CHARCOAL);\n+    }\n+}"
  }
]
