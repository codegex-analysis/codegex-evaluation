[
  {
    "sha": "8a71757032575593ad12bd5bc64184da83145d08",
    "filename": "homework/homework02/homework02.md",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/parkerbath/CMSI387-KylePatrickParker/blob/49b7c69e69d5df0adad009216d33e49be9881b2a/homework/homework02/homework02.md",
    "raw_url": "https://github.com/parkerbath/CMSI387-KylePatrickParker/raw/49b7c69e69d5df0adad009216d33e49be9881b2a/homework/homework02/homework02.md",
    "contents_url": "https://api.github.com/repos/parkerbath/CMSI387-KylePatrickParker/contents/homework/homework02/homework02.md?ref=49b7c69e69d5df0adad009216d33e49be9881b2a",
    "patch": "@@ -38,7 +38,11 @@ Refer to BoundedBuffer.java\n     is involved, the write action stores that new value as an entity in a different location.\n \n 6. Assume a page size of 4 KB and the page mapping shown in Figure 6.10 on page 225. What are the virtual addresses of the first and last 4-byte words in page 6? What physical addresses do these translate into?<br>\n-   `ANSWER HERE`\n+   \n+#### Answer:\n+\n+    The first 4 byte word would have a virtual address of 12,288, since page 6 maps to page frame 3 and 4096 multiplied by 3 is 12,288. This virtual address translates to the     physical address of 24,576 since that is 4096 multiplied by 6, which is the page number coresponding to page frame 3. The last 4 byte word would have a virtual address of     16,380. That is because we need to add 4092 to the original virtual address of 12,288 to get the last 4 byte word instead of 4096 because it is the end of the block so we     need to subtract 4. The corresponding physical address can be calculated the same way by adding 4092 to the original physical address to get 28,668.\n+   \n \n 7. At the lower right of Figure 6.13 on page 236 are page numbers 1047552 and 1047553. Explain how these page numbers were calculated.<br>\n    `ANSWER HERE`"
  }
]
