[
  {
    "sha": "508437944e004583f486861dc3dba83b9892b6b3",
    "filename": ".github/workflows/ci.yml",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/prestodb/presto/blob/dcede88215b8f9cabbcdba67d34e862dd2bed7b7/.github/workflows/ci.yml",
    "raw_url": "https://github.com/prestodb/presto/raw/dcede88215b8f9cabbcdba67d34e862dd2bed7b7/.github/workflows/ci.yml",
    "contents_url": "https://api.github.com/repos/prestodb/presto/contents/.github/workflows/ci.yml?ref=dcede88215b8f9cabbcdba67d34e862dd2bed7b7",
    "patch": "@@ -165,9 +165,8 @@ jobs:\n         run: presto-product-tests/bin/run_on_docker.sh singlenode-mysql -g mysql_connector,mysql\n       - name: Product Tests Specific 2.4\n         run: presto-product-tests/bin/run_on_docker.sh singlenode-postgresql -g postgresql_connector\n-# Fails currently https://github.com/prestodb/presto/issues/15749\n-#      - name: Product Tests Specific 2.5\n-#        run: presto-product-tests/bin/run_on_docker.sh singlenode-cassandra -g cassandra\n+      - name: Product Tests Specific 2.5\n+        run: presto-product-tests/bin/run_on_docker.sh singlenode-cassandra -g cassandra\n       - name: Product Tests Specific 2.6\n         run: presto-product-tests/bin/run_on_docker.sh singlenode-kerberos-hdfs-impersonation-with-wire-encryption -g storage_formats,cli,hdfs_impersonation,authorization\n       - name: Product Tests Specific 2.7"
  },
  {
    "sha": "6cea3d9f1ad7f9cda37c1084822399cda212bf59",
    "filename": "presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraClientConfig.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/prestodb/presto/blob/dcede88215b8f9cabbcdba67d34e862dd2bed7b7/presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraClientConfig.java",
    "raw_url": "https://github.com/prestodb/presto/raw/dcede88215b8f9cabbcdba67d34e862dd2bed7b7/presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraClientConfig.java",
    "contents_url": "https://api.github.com/repos/prestodb/presto/contents/presto-cassandra/src/main/java/com/facebook/presto/cassandra/CassandraClientConfig.java?ref=dcede88215b8f9cabbcdba67d34e862dd2bed7b7",
    "patch": "@@ -70,7 +70,7 @@\n     private Duration noHostAvailableRetryTimeout = new Duration(1, MINUTES);\n     private int speculativeExecutionLimit = 1;\n     private Duration speculativeExecutionDelay = new Duration(500, MILLISECONDS);\n-    private ProtocolVersion protocolVersion = ProtocolVersion.V3;\n+    private ProtocolVersion protocolVersion = ProtocolVersion.V4;\n     private boolean tlsEnabled;\n     private File truststorePath;\n     private String truststorePassword;"
  },
  {
    "sha": "c443a0cce52184b1d89b469dd2221f2f73832bbc",
    "filename": "presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/DataTypesTableDefinition.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/prestodb/presto/blob/dcede88215b8f9cabbcdba67d34e862dd2bed7b7/presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/DataTypesTableDefinition.java",
    "raw_url": "https://github.com/prestodb/presto/raw/dcede88215b8f9cabbcdba67d34e862dd2bed7b7/presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/DataTypesTableDefinition.java",
    "contents_url": "https://api.github.com/repos/prestodb/presto/contents/presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/DataTypesTableDefinition.java?ref=dcede88215b8f9cabbcdba67d34e862dd2bed7b7",
    "patch": "@@ -53,7 +53,7 @@ private DataTypesTableDefinition() {}\n             try {\n                 return ImmutableList.<List<Object>>of(\n                         ImmutableList.of(\"\\0\", Long.MIN_VALUE, Bytes.fromHexString(\"0x00\"), false,\n-                                BigDecimal.ZERO, Double.MIN_VALUE, Float.MIN_VALUE, LocalDate.fromYearMonthDay(1970, 1, 2), ImmutableSet.of(0),\n+                                BigDecimal.ZERO, Double.MIN_VALUE, LocalDate.fromYearMonthDay(1970, 1, 2), Float.MIN_VALUE, ImmutableSet.of(0),\n                                 Inet4Address.getByName(\"0.0.0.0\"), Integer.MIN_VALUE, ImmutableList.of(0),\n                                 ImmutableMap.of(\"a\", 0, \"\\0\", Integer.MIN_VALUE), ImmutableSet.of(0), Short.MIN_VALUE,\n                                 \"\\0\", Byte.MIN_VALUE, Timestamp.valueOf(LocalDateTime.of(1970, 1, 1, 0, 0)),"
  },
  {
    "sha": "4e58cb4989c629e543f80a272a669ab2aa0c5341",
    "filename": "presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/TestInsertIntoCassandraTable.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/prestodb/presto/blob/dcede88215b8f9cabbcdba67d34e862dd2bed7b7/presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/TestInsertIntoCassandraTable.java",
    "raw_url": "https://github.com/prestodb/presto/raw/dcede88215b8f9cabbcdba67d34e862dd2bed7b7/presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/TestInsertIntoCassandraTable.java",
    "contents_url": "https://api.github.com/repos/prestodb/presto/contents/presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/TestInsertIntoCassandraTable.java?ref=dcede88215b8f9cabbcdba67d34e862dd2bed7b7",
    "patch": "@@ -73,7 +73,7 @@ public void testInsertIntoValuesToCassandraTableAllSimpleTypes()\n         // TODO Following types are not supported now. We need to change null into the value after fixing it\n         // blob, frozen<set<type>>, inet, list<type>, map<type,type>, set<type>, timeuuid, decimal, uuid, varint\n         query(\"INSERT INTO \" + tableNameInDatabase +\n-                \"(a, b, bl, bo, d, do, dt, f, fr, i, ti, si, integer, l, m, s, t, ti, tu, u, v, vari) VALUES (\" +\n+                \"(a, b, bl, bo, d, do, dt, f, fr, i, ti, si, integer, l, m, s, t, ts, tu, u, v, vari) VALUES (\" +\n                 \"'ascii value', \" +\n                 \"BIGINT '99999', \" +\n                 \"null, \" +\n@@ -124,7 +124,7 @@ public void testInsertIntoValuesToCassandraTableAllSimpleTypes()\n \n         // insert null for all datatypes\n         query(\"INSERT INTO \" + tableNameInDatabase +\n-                \"(a, b, bl, bo, d, do, dt, f, fr, i, ti, si, integer, l, m, s, t, ts, ti, tu, u, v, vari) VALUES (\" +\n+                \"(a, b, bl, bo, d, do, dt, f, fr, i, ti, si, integer, l, m, s, t, ts, tu, u, v, vari) VALUES (\" +\n                 \"'key 1', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null) \");\n         assertThat(query(format(\"SELECT * FROM %s WHERE a = 'key 1'\", tableNameInDatabase))).containsOnly(\n                 row(\"key 1\", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null));"
  },
  {
    "sha": "d4760b418a24325461b917bfc8321ad7d9cd9734",
    "filename": "presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/TestSelect.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/prestodb/presto/blob/dcede88215b8f9cabbcdba67d34e862dd2bed7b7/presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/TestSelect.java",
    "raw_url": "https://github.com/prestodb/presto/raw/dcede88215b8f9cabbcdba67d34e862dd2bed7b7/presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/TestSelect.java",
    "contents_url": "https://api.github.com/repos/prestodb/presto/contents/presto-product-tests/src/main/java/com/facebook/presto/tests/cassandra/TestSelect.java?ref=dcede88215b8f9cabbcdba67d34e862dd2bed7b7",
    "patch": "@@ -170,7 +170,7 @@ public void testAllDataTypes()\n     {\n         // NOTE: DECIMAL is treated like DOUBLE\n         QueryResult query = query(format(\n-                \"SELECT a, b, bl, bo, d, do, f, fr, i, integer, l, m, s, t, ti, tu, u, v, vari FROM %s.%s.%s\",\n+                \"SELECT a, b, bl, bo, d, do, f, fr, i, integer, l, m, s, t, ts, tu, u, v, vari FROM %s.%s.%s\",\n                 CONNECTOR_NAME, KEY_SPACE, CASSANDRA_ALL_TYPES.getName()));\n \n         assertThat(query)\n@@ -251,7 +251,7 @@ public void testSelectAllTypePartitioningMaterializedView()\n                 new Duration(1, MINUTES));\n \n         QueryResult query = query(format(\n-                \"SELECT a, b, bl, bo, d, do, f, fr, i, integer, l, m, s, t, ti, tu, u, v, vari FROM %s.%s.%s WHERE a = '\\0'\",\n+                \"SELECT a, b, bl, bo, d, do, f, fr, i, integer, l, m, s, t, ts, tu, u, v, vari FROM %s.%s.%s WHERE a = '\\0'\",\n                 CONNECTOR_NAME, KEY_SPACE, materializedViewName));\n \n         assertThat(query)"
  }
]
