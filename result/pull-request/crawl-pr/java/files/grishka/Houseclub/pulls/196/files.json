[
  {
    "sha": "0766cf1c3005553bd44b50ebda66b7440aebb276",
    "filename": "EventsFragment.java",
    "status": "added",
    "additions": 235,
    "deletions": 0,
    "changes": 235,
    "blob_url": "https://github.com/grishka/Houseclub/blob/7a8edcf661b7c0603538c6ef4be101ea13af8635/EventsFragment.java",
    "raw_url": "https://github.com/grishka/Houseclub/raw/7a8edcf661b7c0603538c6ef4be101ea13af8635/EventsFragment.java",
    "contents_url": "https://api.github.com/repos/grishka/Houseclub/contents/EventsFragment.java?ref=7a8edcf661b7c0603538c6ef4be101ea13af8635",
    "patch": "@@ -0,0 +1,235 @@\n+package me.grishka.houseclub.fragments;\n+\n+import android.app.Activity;\n+import android.content.res.Configuration;\n+import android.graphics.Bitmap;\n+import android.graphics.Outline;\n+import android.graphics.Rect;\n+import android.graphics.drawable.ColorDrawable;\n+import android.graphics.drawable.Drawable;\n+import android.os.Bundle;\n+import android.view.Menu;\n+import android.view.MenuInflater;\n+import android.view.MenuItem;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.ViewOutlineProvider;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import androidx.annotation.NonNull;\n+import androidx.recyclerview.widget.RecyclerView;\n+\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.Calendar;\n+import java.util.Date;\n+import java.util.stream.Collectors;\n+\n+import me.grishka.appkit.Nav;\n+import me.grishka.appkit.api.SimpleCallback;\n+import me.grishka.appkit.fragments.BaseRecyclerFragment;\n+import me.grishka.appkit.imageloader.ImageLoaderRecyclerAdapter;\n+import me.grishka.appkit.imageloader.ImageLoaderViewHolder;\n+import me.grishka.appkit.utils.BindableViewHolder;\n+import me.grishka.appkit.utils.V;\n+import me.grishka.houseclub.MainActivity;\n+import me.grishka.houseclub.R;\n+import me.grishka.houseclub.api.ClubhouseSession;\n+import me.grishka.houseclub.api.methods.GetEvents;\n+import me.grishka.houseclub.api.model.Channel;\n+import me.grishka.houseclub.api.model.Event;\n+\n+public class EventsFragment extends BaseRecyclerFragment<Event>{\n+\n+\tprivate EventsAdapter adapter;\n+\tprivate ViewOutlineProvider roundedCornersOutline =new ViewOutlineProvider(){\n+\t\t@Override\n+\t\tpublic void getOutline(View view, Outline outline){\n+\t\t\toutline.setRoundRect(0, 0, view.getWidth(), view.getHeight(), V.dp(8));\n+\t\t}\n+\t};\n+\n+\tpublic EventsFragment(){\n+\t\tsuper(20);\n+\t}\n+\n+\t@Override\n+\tpublic void onAttach(Activity activity){\n+\t\tsuper.onAttach(activity);\n+\t\tsetTitle(R.string.event_title);\n+\t\tloadData();\n+\t\tsetHasOptionsMenu(true);\n+\t}\n+\n+\t@Override\n+\tprotected void doLoadData(int offset, int count){\n+\t\tcurrentRequest=new GetEvents()\n+\t\t\t\t.setCallback(new SimpleCallback<GetEvents.Response>(this){\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void onSuccess(GetEvents.Response result){\n+\t\t\t\t\t\tcurrentRequest=null;\n+\t\t\t\t\t\tonDataLoaded(result.events, false);\n+\t\t\t\t\t}\n+\t\t\t\t}).exec();\n+\t}\n+\n+\t@Override\n+\tpublic void onViewCreated(View view, Bundle savedInstanceState){\n+\t\tsuper.onViewCreated(view, savedInstanceState);\n+\t\tlist.addItemDecoration(new RecyclerView.ItemDecoration(){\n+\t\t\t@Override\n+\t\t\tpublic void getItemOffsets(@NonNull Rect outRect, @NonNull View view, @NonNull RecyclerView parent, @NonNull RecyclerView.State state){\n+\t\t\t\toutRect.bottom=outRect.top=V.dp(8);\n+\t\t\t\toutRect.left=outRect.right=V.dp(16);\n+\t\t\t}\n+\t\t});\n+\t\tgetToolbar().setElevation(0);\n+\t}\n+\n+\t@Override\n+\tpublic void onConfigurationChanged(Configuration newConfig){\n+\t\tsuper.onConfigurationChanged(newConfig);\n+\t\tgetToolbar().setElevation(0);\n+\t}\n+\n+\t@Override\n+\tprotected RecyclerView.Adapter getAdapter(){\n+\t\tif(adapter==null){\n+\t\t\tadapter=new EventsAdapter();\n+\t\t\tadapter.setHasStableIds(true);\n+\t\t}\n+\t\treturn adapter;\n+\t}\n+\n+\t@Override\n+\tpublic boolean wantsLightNavigationBar(){\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\tpublic boolean wantsLightStatusBar(){\n+\t\treturn true;\n+\t}\n+\n+\tprivate class EventsAdapter extends RecyclerView.Adapter<EventViewHolder> implements ImageLoaderRecyclerAdapter{\n+\n+\t\t@NonNull\n+\t\t@Override\n+\t\tpublic EventViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType){\n+\t\t\treturn new EventViewHolder();\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onBindViewHolder(@NonNull EventViewHolder holder, int position){\n+\t\t\tholder.bind(data.get(position));\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic int getItemCount(){\n+\t\t\treturn data.size();\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic long getItemId(int position){\n+\t\t\treturn data.get(position).eventId;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic int getImageCountForItem(int position){\n+\t\t\tEvent eve= data.get(position);\n+\t\t\tint count=0;\n+\t\t\tfor(int i=0;i<Math.min(2, eve.hosts.size());i++){\n+\t\t\t\tif(eve.hosts.get(i).photoUrl!=null)\n+\t\t\t\t\tcount++;\n+\t\t\t}\n+\t\t\treturn count;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic String getImageURL(int position, int image){\n+\t\t\tEvent eve=data.get(position);\n+\t\t\tfor(int i=0;i<Math.min(2, eve.hosts.size());i++){\n+\t\t\t\tif(eve.hosts.get(i).photoUrl!=null){\n+\t\t\t\t\tif(image==0)\n+\t\t\t\t\t\treturn eve.hosts.get(i).photoUrl;\n+\t\t\t\t\telse\n+\t\t\t\t\t\timage--;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n+\tprivate class EventViewHolder extends BindableViewHolder<Event> implements View.OnClickListener, ImageLoaderViewHolder{\n+\n+\t\tprivate TextView start_at ,  topic, hosts,description;\n+\t\tprivate ImageView pic1, pic2;\n+\t\tprivate Drawable placeholder=new ColorDrawable(getResources().getColor(R.color.grey));\n+\n+\n+\t\tpublic EventViewHolder() {\n+\t\t\tsuper(getActivity(), R.layout.event_row);\n+\t\t\tstart_at=findViewById(R.id.event_start_time);\n+\t\t\ttopic=findViewById(R.id.topic);\n+\t\t\tdescription=findViewById(R.id.description);\n+\t\t\thosts=findViewById(R.id.hosts);\n+\t\t\tpic1=findViewById(R.id.pic1);\n+\t\t\tpic2=findViewById(R.id.pic2);\n+\n+\t\t\titemView.setOutlineProvider(roundedCornersOutline);\n+\t\t\titemView.setClipToOutline(true);\n+\t\t\titemView.setElevation(V.dp(2));\n+\t\t\titemView.setOnClickListener(this);\n+\n+\t\t}\n+\n+\n+\n+\t\t@Override\n+\t\tpublic void onBind(Event item){\n+\n+\t\t\tDateFormat dateFormat = new SimpleDateFormat(\"dd MMMM yyyy hh:mm\");\n+\t\t\tString strDate = dateFormat.format(item.timeStart);\n+\t\t\tstart_at.setText(strDate);\n+\n+\t\t\ttopic.setText(item.name);\n+\n+\t\t\tdescription.setText(item.description);\n+\n+\t\t\thosts.setText(\n+\n+\t\t\t\t\titem.hosts.stream()\n+\t\t\t\t\t\t\t.map(hosts-> hosts.name)\n+\t\t\t\t\t\t\t.collect(Collectors.joining(\"\\n\"))\n+\t\t\t);\n+\n+\t\t\timgLoader.bindViewHolder(adapter, this, getAdapterPosition());\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onClick(View view) {\n+\n+\t\t}\n+\n+\t\tprivate ImageView imgForIndex(int index){\n+\t\t\tif(index==0)\n+\t\t\t\treturn pic1;\n+\t\t\treturn pic2;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void setImage(int index, Bitmap bitmap) {\n+\t\t\tif(index==0 && item.hosts.get(0).photoUrl==null)\n+\t\t\t\tindex=1;\n+\t\t\timgForIndex(index).setImageBitmap(bitmap);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void clearImage(int index){\n+\t\t\timgForIndex(index).setImageDrawable(placeholder);\n+\t\t}\n+\n+\n+\t}\n+}"
  },
  {
    "sha": "20ef638c2d174d96ebf6353edf721c5c162e9c1e",
    "filename": "GetEvents.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/grishka/Houseclub/blob/7a8edcf661b7c0603538c6ef4be101ea13af8635/GetEvents.java",
    "raw_url": "https://github.com/grishka/Houseclub/raw/7a8edcf661b7c0603538c6ef4be101ea13af8635/GetEvents.java",
    "contents_url": "https://api.github.com/repos/grishka/Houseclub/contents/GetEvents.java?ref=7a8edcf661b7c0603538c6ef4be101ea13af8635",
    "patch": "@@ -0,0 +1,17 @@\n+package me.grishka.houseclub.api.methods;\n+\n+import java.util.List;\n+\n+import me.grishka.houseclub.api.ClubhouseAPIRequest;\n+import me.grishka.houseclub.api.model.Channel;\n+import me.grishka.houseclub.api.model.Event;\n+\n+public class GetEvents extends ClubhouseAPIRequest<GetEvents.Response>{\n+\tpublic GetEvents(){\n+\t\tsuper(\"GET\", \"get_events\", Response.class);\n+\t}\n+\n+\tpublic static class Response{\n+\t\tpublic List<Event> events;\n+\t}\n+}"
  },
  {
    "sha": "256e967b7939ecc697ca96d3ee53336f37c5a5e2",
    "filename": "HomeFragment.java",
    "status": "added",
    "additions": 263,
    "deletions": 0,
    "changes": 263,
    "blob_url": "https://github.com/grishka/Houseclub/blob/7a8edcf661b7c0603538c6ef4be101ea13af8635/HomeFragment.java",
    "raw_url": "https://github.com/grishka/Houseclub/raw/7a8edcf661b7c0603538c6ef4be101ea13af8635/HomeFragment.java",
    "contents_url": "https://api.github.com/repos/grishka/Houseclub/contents/HomeFragment.java?ref=7a8edcf661b7c0603538c6ef4be101ea13af8635",
    "patch": "@@ -0,0 +1,263 @@\n+package me.grishka.houseclub.fragments;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.res.Configuration;\n+import android.graphics.Bitmap;\n+import android.graphics.Outline;\n+import android.graphics.Rect;\n+import android.graphics.drawable.ColorDrawable;\n+import android.graphics.drawable.Drawable;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.Menu;\n+import android.view.MenuInflater;\n+import android.view.MenuItem;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.ViewOutlineProvider;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import androidx.annotation.NonNull;\n+import androidx.recyclerview.widget.RecyclerView;\n+import me.grishka.appkit.Nav;\n+import me.grishka.appkit.api.SimpleCallback;\n+import me.grishka.appkit.fragments.BaseRecyclerFragment;\n+import me.grishka.appkit.imageloader.ImageLoaderRecyclerAdapter;\n+import me.grishka.appkit.imageloader.ImageLoaderViewHolder;\n+import me.grishka.appkit.utils.BindableViewHolder;\n+import me.grishka.appkit.utils.V;\n+import me.grishka.houseclub.MainActivity;\n+import me.grishka.houseclub.R;\n+import me.grishka.houseclub.VoiceService;\n+import me.grishka.houseclub.api.ClubhouseSession;\n+import me.grishka.houseclub.api.methods.GetChannels;\n+import me.grishka.houseclub.api.model.Channel;\n+\n+public class HomeFragment extends BaseRecyclerFragment<Channel>{\n+\n+\tprivate ChannelAdapter adapter;\n+\tprivate ViewOutlineProvider roundedCornersOutline=new ViewOutlineProvider(){\n+\t\t@Override\n+\t\tpublic void getOutline(View view, Outline outline){\n+\t\t\toutline.setRoundRect(0, 0, view.getWidth(), view.getHeight(), V.dp(8));\n+\t\t}\n+\t};\n+\n+\tpublic HomeFragment(){\n+\t\tsuper(20);\n+\t}\n+\n+\t@Override\n+\tpublic void onAttach(Activity activity){\n+\t\tsuper.onAttach(activity);\n+\t\tloadData();\n+\t\tsetHasOptionsMenu(true);\n+\t}\n+\n+\t@Override\n+\tprotected void doLoadData(int offset, int count){\n+\t\tcurrentRequest=new GetChannels()\n+\t\t\t\t.setCallback(new SimpleCallback<GetChannels.Response>(this){\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void onSuccess(GetChannels.Response result){\n+\t\t\t\t\t\tcurrentRequest=null;\n+\t\t\t\t\t\tonDataLoaded(result.channels, false);\n+\t\t\t\t\t}\n+\t\t\t\t}).exec();\n+\t}\n+\n+\t@Override\n+\tpublic void onViewCreated(View view, Bundle savedInstanceState){\n+\t\tsuper.onViewCreated(view, savedInstanceState);\n+\t\tlist.addItemDecoration(new RecyclerView.ItemDecoration(){\n+\t\t\t@Override\n+\t\t\tpublic void getItemOffsets(@NonNull Rect outRect, @NonNull View view, @NonNull RecyclerView parent, @NonNull RecyclerView.State state){\n+\t\t\t\toutRect.bottom=outRect.top=V.dp(8);\n+\t\t\t\toutRect.left=outRect.right=V.dp(16);\n+\t\t\t}\n+\t\t});\n+\t\tgetToolbar().setElevation(0);\n+\t}\n+\n+\t@Override\n+\tpublic void onConfigurationChanged(Configuration newConfig){\n+\t\tsuper.onConfigurationChanged(newConfig);\n+\t\tgetToolbar().setElevation(0);\n+\t}\n+\n+\t@Override\n+\tprotected RecyclerView.Adapter getAdapter(){\n+\t\tif(adapter==null){\n+\t\t\tadapter=new ChannelAdapter();\n+\t\t\tadapter.setHasStableIds(true);\n+\t\t}\n+\t\treturn adapter;\n+\t}\n+\n+\t@Override\n+\tpublic boolean wantsLightNavigationBar(){\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\tpublic boolean wantsLightStatusBar(){\n+\t\treturn true;\n+\t}\n+\n+\t@Override\n+\tpublic void onCreateOptionsMenu(Menu menu, MenuInflater inflater){\n+//\t\tmenu.add(0,0,0,\"\").setIcon(R.drawable.ic_notifications).setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS);\n+//\t\tmenu.add(0,1,0,\"\").setIcon(R.drawable.ic_baseline_person_24).setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS);\n+//\t\tmenu.add(0,2,0,\"\").setIcon(R.drawable.ic_baseline_person_24).setShowAsAction(MenuItem.SHOW_AS_ACTION_ALWAYS);\n+\n+\t\tinflater.inflate(R.menu.menu_home, menu);\n+\n+\n+\t}\n+\n+\t@Override\n+\tpublic boolean onOptionsItemSelected(MenuItem item){\n+//\t\tBundle args=new Bundle();\n+//\t\targs.putInt(\"id\", Integer.parseInt(ClubhouseSession.userID));\n+\n+\t\tif (item.getItemId() == R.id.homeMenuProfile) {\n+\t\t\tBundle args=new Bundle();\n+\t\t\targs.putInt(\"id\", Integer.parseInt(ClubhouseSession.userID));\n+\t\t\tNav.go(getActivity(), ProfileFragment.class, args);\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if (item.getItemId() == R.id.homeMenuSearchPeople) {\n+\t\t\tBundle args = new Bundle();\n+\t\t\tNav.go(getActivity(), SearchListFragment.class, args);\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if (item.getItemId() == R.id.homeMenuNotifications) {\n+\t\t\tBundle args = new Bundle();\n+\t\t\targs.putInt(\"id\", Integer.parseInt(ClubhouseSession.userID));\n+\t\t\tNav.go(getActivity(), NotificationListFragment.class, args);\n+\t\t\treturn true;\n+\t\t}\n+\t\telse if (item.getItemId() == R.id.homeMenuEvents) {\n+\t\t\tBundle args = new Bundle();\n+\t\t\targs.putInt(\"id\", Integer.parseInt(ClubhouseSession.userID));\n+\t\t\tNav.go(getActivity(), EventsFragment.class, args);\n+\t\t\treturn true;\n+\t\t}\n+\t\treturn super.onOptionsItemSelected(item);\n+\n+\t}\n+\n+\tprivate class ChannelAdapter extends RecyclerView.Adapter<ChannelViewHolder> implements ImageLoaderRecyclerAdapter{\n+\n+\t\t@NonNull\n+\t\t@Override\n+\t\tpublic ChannelViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType){\n+\t\t\treturn new ChannelViewHolder();\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onBindViewHolder(@NonNull ChannelViewHolder holder, int position){\n+\t\t\tholder.bind(data.get(position));\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic int getItemCount(){\n+\t\t\treturn data.size();\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic long getItemId(int position){\n+\t\t\treturn data.get(position).channelId;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic int getImageCountForItem(int position){\n+\t\t\tChannel chan=data.get(position);\n+\t\t\tint count=0;\n+\t\t\tfor(int i=0;i<Math.min(2, chan.users.size());i++){\n+\t\t\t\tif(chan.users.get(i).photoUrl!=null)\n+\t\t\t\t\tcount++;\n+\t\t\t}\n+\t\t\treturn count;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic String getImageURL(int position, int image){\n+\t\t\tChannel chan=data.get(position);\n+\t\t\tfor(int i=0;i<Math.min(2, chan.users.size());i++){\n+\t\t\t\tif(chan.users.get(i).photoUrl!=null){\n+\t\t\t\t\tif(image==0)\n+\t\t\t\t\t\treturn chan.users.get(i).photoUrl;\n+\t\t\t\t\telse\n+\t\t\t\t\t\timage--;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n+\tprivate class ChannelViewHolder extends BindableViewHolder<Channel> implements View.OnClickListener, ImageLoaderViewHolder{\n+\n+\t\tprivate TextView topic, speakers, numMembers, numSpeakers;\n+\t\tprivate ImageView pic1, pic2;\n+\t\tprivate Drawable placeholder=new ColorDrawable(getResources().getColor(R.color.grey));\n+\n+\t\tpublic ChannelViewHolder(){\n+\t\t\tsuper(getActivity(), R.layout.channel_row);\n+\t\t\ttopic=findViewById(R.id.topic);\n+\t\t\tspeakers=findViewById(R.id.speakers);\n+\t\t\tnumSpeakers=findViewById(R.id.num_speakers);\n+\t\t\tnumMembers=findViewById(R.id.num_members);\n+\t\t\tpic1=findViewById(R.id.pic1);\n+\t\t\tpic2=findViewById(R.id.pic2);\n+\n+\t\t\titemView.setOutlineProvider(roundedCornersOutline);\n+\t\t\titemView.setClipToOutline(true);\n+\t\t\titemView.setElevation(V.dp(2));\n+\t\t\titemView.setOnClickListener(this);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onBind(Channel item){\n+\t\t\ttopic.setText(item.topic);\n+\t\t\tnumMembers.setText(\"\"+item.numAll);\n+\t\t\tnumSpeakers.setText(\"\"+item.numSpeakers);\n+\t\t\tspeakers.setText(\n+\t\t\t\t\titem.users.stream().map(user->user.isSpeaker ? (user.name+\" 💬\") : user.name)\n+\t\t\t\t\t.collect(Collectors.joining(\"\\n\")));\n+\n+\t\t\timgLoader.bindViewHolder(adapter, this, getAdapterPosition());\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onClick(View view){\n+\t\t\t((MainActivity)getActivity()).joinChannel(item);\n+\t\t}\n+\n+\t\tprivate ImageView imgForIndex(int index){\n+\t\t\tif(index==0)\n+\t\t\t\treturn pic1;\n+\t\t\treturn pic2;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void setImage(int index, Bitmap bitmap){\n+\t\t\tif(index==0 && item.users.get(0).photoUrl==null)\n+\t\t\t\tindex=1;\n+\t\t\timgForIndex(index).setImageBitmap(bitmap);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void clearImage(int index){\n+\t\t\timgForIndex(index).setImageDrawable(placeholder);\n+\t\t}\n+\t}\n+}"
  },
  {
    "sha": "51cbb2dedde1751188a68aa9bf313b7d6ed6dd72",
    "filename": "Java/me/grishka/houseclub/api/model/Event,java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/grishka/Houseclub/blob/7a8edcf661b7c0603538c6ef4be101ea13af8635/Java/me/grishka/houseclub/api/model/Event,java",
    "raw_url": "https://github.com/grishka/Houseclub/raw/7a8edcf661b7c0603538c6ef4be101ea13af8635/Java/me/grishka/houseclub/api/model/Event,java",
    "contents_url": "https://api.github.com/repos/grishka/Houseclub/contents/Java/me/grishka/houseclub/api/model/Event,java?ref=7a8edcf661b7c0603538c6ef4be101ea13af8635",
    "patch": "@@ -0,0 +1,14 @@\n+package me.grishka.houseclub.api.model;\n+\n+import java.util.Date;\n+import java.util.List;\n+\n+public class Event{\n+\tpublic String channel;\n+\tpublic boolean isExpired;\n+\tpublic Date timeStart;\n+\tpublic String description, name;\n+\tpublic int eventId;\n+\tpublic boolean isMemberOnly;\n+\tpublic List<FullUser> hosts;\n+}"
  },
  {
    "sha": "ef17c3faf03320be6ad4e800140f37f10a62f75a",
    "filename": "UserListFragment.java",
    "status": "added",
    "additions": 148,
    "deletions": 0,
    "changes": 148,
    "blob_url": "https://github.com/grishka/Houseclub/blob/7a8edcf661b7c0603538c6ef4be101ea13af8635/UserListFragment.java",
    "raw_url": "https://github.com/grishka/Houseclub/raw/7a8edcf661b7c0603538c6ef4be101ea13af8635/UserListFragment.java",
    "contents_url": "https://api.github.com/repos/grishka/Houseclub/contents/UserListFragment.java?ref=7a8edcf661b7c0603538c6ef4be101ea13af8635",
    "patch": "@@ -0,0 +1,148 @@\n+package me.grishka.houseclub.fragments;\n+\n+import android.app.Activity;\n+import android.content.res.Configuration;\n+import android.graphics.Bitmap;\n+import android.graphics.drawable.ColorDrawable;\n+import android.graphics.drawable.Drawable;\n+import android.os.Bundle;\n+import android.text.TextUtils;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import androidx.annotation.NonNull;\n+import androidx.recyclerview.widget.RecyclerView;\n+import me.grishka.appkit.Nav;\n+import me.grishka.appkit.fragments.BaseRecyclerFragment;\n+import me.grishka.appkit.imageloader.ImageLoaderRecyclerAdapter;\n+import me.grishka.appkit.imageloader.ImageLoaderViewHolder;\n+import me.grishka.appkit.utils.BindableViewHolder;\n+import me.grishka.appkit.views.UsableRecyclerView;\n+import me.grishka.houseclub.R;\n+import me.grishka.houseclub.api.ClubhouseSession;\n+import me.grishka.houseclub.api.model.FullUser;\n+\n+public abstract class UserListFragment extends BaseRecyclerFragment<FullUser>{\n+\n+\tprivate int selfID=Integer.parseInt(ClubhouseSession.userID);\n+\tprivate UserListAdapter adapter;\n+\n+\tpublic UserListFragment(){\n+\t\tsuper(50);\n+\t}\n+\n+\t@Override\n+\tpublic void onAttach(Activity activity){\n+\t\tsuper.onAttach(activity);\n+\t\tloadData();\n+\t}\n+\n+\t@Override\n+\tprotected RecyclerView.Adapter getAdapter(){\n+\t\tif(adapter==null){\n+\t\t\tadapter=new UserListAdapter();\n+\t\t}\n+\t\treturn adapter;\n+\t}\n+\n+\t@Override\n+\tpublic void onViewCreated(View view, Bundle savedInstanceState){\n+\t\tsuper.onViewCreated(view, savedInstanceState);\n+\t\tgetToolbar().setElevation(0);\n+\t}\n+\n+\t@Override\n+\tpublic void onConfigurationChanged(Configuration newConfig){\n+\t\tsuper.onConfigurationChanged(newConfig);\n+\t\tgetToolbar().setElevation(0);\n+\t}\n+\n+\tprivate class UserListAdapter extends RecyclerView.Adapter<UserViewHolder> implements ImageLoaderRecyclerAdapter{\n+\n+\t\t@NonNull\n+\t\t@Override\n+\t\tpublic UserViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType){\n+\t\t\treturn new UserViewHolder();\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onBindViewHolder(@NonNull UserViewHolder holder, int position){\n+\t\t\tholder.bind(data.get(position));\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic int getItemCount(){\n+\t\t\treturn data.size();\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic int getImageCountForItem(int position){\n+\t\t\treturn data.get(position).photoUrl!=null ? 1 : 0;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic String getImageURL(int position, int image){\n+\t\t\treturn data.get(position).photoUrl !=null ? data.get(position).photoUrl : \"https://upload.wikimedia.org/wikipedia/commons/7/70/User_icon_BLACK-01.png\" ;\n+\t\t}\n+\t}\n+\n+\tprivate class UserViewHolder extends BindableViewHolder<FullUser> implements ImageLoaderViewHolder, UsableRecyclerView.Clickable{\n+\n+\t\tpublic TextView name, bio;\n+\t\tpublic Button followBtn;\n+\t\tpublic ImageView photo;\n+\t\tprivate Drawable placeholder=new ColorDrawable(getResources().getColor(R.color.grey));\n+\n+\t\tpublic UserViewHolder(){\n+\t\t\tsuper(getActivity(), R.layout.user_list_row);\n+\n+\t\t\tname=findViewById(R.id.name);\n+\t\t\tbio=findViewById(R.id.bio);\n+\t\t\tfollowBtn=findViewById(R.id.follow_btn);\n+\t\t\tphoto=findViewById(R.id.photo);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onBind(FullUser item){\n+\t\t\tname.setText(item.name);\n+\t\t\tif(TextUtils.isEmpty(item.bio)){\n+\t\t\t\tbio.setVisibility(View.GONE);\n+\t\t\t}else{\n+\t\t\t\tbio.setVisibility(View.VISIBLE);\n+\t\t\t\tbio.setText(item.bio);\n+\t\t\t}\n+\t\t\t// TODO get_followers/get_following don't return current follow status?\n+//\t\t\tif(item.userId==selfID){\n+\t\t\t\tfollowBtn.setVisibility(View.GONE);\n+//\t\t\t}else{\n+//\t\t\t\tfollowBtn.setVisibility(View.VISIBLE);\n+//\t\t\t\tfollowBtn.setText(item.isFollowed() ? R.string.following : R.string.follow);\n+//\t\t\t}\n+\n+\t\t\tif(item.photoUrl!=null)\n+\t\t\t\timgLoader.bindViewHolder(adapter, this, getAdapterPosition());\n+\t\t\telse\n+\t\t\t\tphoto.setImageDrawable(placeholder);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void setImage(int index, Bitmap bitmap){\n+\t\t\tphoto.setImageBitmap(bitmap);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void clearImage(int index){\n+\t\t\tphoto.setImageDrawable(placeholder);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void onClick(){\n+\t\t\tBundle args = new Bundle();\n+\t\t\targs.putInt(\"id\", item.userId);\n+\t\t\tNav.go(getActivity(), ProfileFragment.class, args);\n+\t\t}\n+\t}\n+}"
  },
  {
    "sha": "7ff72ca30f7815529f744f5b7d056b52f8593f23",
    "filename": "event_row.xml",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/grishka/Houseclub/blob/7a8edcf661b7c0603538c6ef4be101ea13af8635/event_row.xml",
    "raw_url": "https://github.com/grishka/Houseclub/raw/7a8edcf661b7c0603538c6ef4be101ea13af8635/event_row.xml",
    "contents_url": "https://api.github.com/repos/grishka/Houseclub/contents/event_row.xml?ref=7a8edcf661b7c0603538c6ef4be101ea13af8635",
    "patch": "@@ -0,0 +1,71 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+\tandroid:layout_width=\"match_parent\"\n+\tandroid:layout_height=\"wrap_content\"\n+\txmlns:tools=\"http://schemas.android.com/tools\"\n+\tandroid:padding=\"16dp\"\n+\tandroid:background=\"#FFF\"\n+\tandroid:foreground=\"?android:selectableItemBackground\">\n+\n+\n+\t<TextView\n+\t\tandroid:id=\"@+id/event_start_time\"\n+\t\tandroid:layout_width=\"match_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:layout_marginBottom=\"16dp\"\n+\t\tandroid:textColor=\"#A69E9E\"\n+\t\tandroid:textSize=\"12dp\"\n+\t\ttools:text=\"Monday 10:00 AM\"/>\n+\n+\t<TextView\n+\t\tandroid:id=\"@+id/topic\"\n+\t\tandroid:layout_width=\"match_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:layout_marginTop=\"20dp\"\n+\t\tandroid:layout_marginBottom=\"16dp\"\n+\t\tandroid:fontFamily=\"sans-serif-medium\"\n+\t\ttools:text=\"Event topic\"/>\n+\n+\t<me.grishka.houseclub.views.SquircleImageView\n+\t\tandroid:id=\"@+id/pic1\"\n+\t\tandroid:layout_width=\"40dp\"\n+\t\tandroid:layout_height=\"40dp\"\n+\t\tandroid:layout_below=\"@id/topic\"\n+\t\ttools:src=\"#0f0\"/>\n+\n+\t<me.grishka.houseclub.views.SquircleImageView\n+\t\tandroid:id=\"@+id/pic2\"\n+\t\tandroid:layout_width=\"40dp\"\n+\t\tandroid:layout_height=\"40dp\"\n+\t\tandroid:layout_alignLeft=\"@id/pic1\"\n+\t\tandroid:layout_marginLeft=\"45dp\"\n+\t\tandroid:layout_below=\"@id/topic\"\n+\t\ttools:src=\"#00f\"/>\n+\n+\n+\t<TextView\n+\t\tandroid:id=\"@+id/hosts\"\n+\t\tandroid:layout_width=\"match_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:layout_toRightOf=\"@id/pic2\"\n+\t\tandroid:layout_marginLeft=\"16dp\"\n+\t\tandroid:layout_below=\"@id/topic\"\n+\t\ttools:text=\"Host list\"/>\n+\n+\n+\t<TextView\n+\t\tandroid:id=\"@+id/description\"\n+\t\tandroid:layout_width=\"match_parent\"\n+\t\tandroid:layout_height=\"wrap_content\"\n+\t\tandroid:layout_marginTop=\"40dp\"\n+\t\tandroid:layout_marginBottom=\"16dp\"\n+\t\tandroid:fontFamily=\"sans-serif-medium\"\n+\t\tandroid:textFontWeight=\"300\"\n+\t\tandroid:textSize=\"14dp\"\n+\t\tandroid:layout_below=\"@+id/hosts\"\n+\t\ttools:text=\"Event Description \"/>\n+\n+\n+\n+\n+</RelativeLayout>\n\\ No newline at end of file"
  },
  {
    "sha": "74c0bc091a6cc3edca41e7f8961d8691c4fee498",
    "filename": "menu_home.xml",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/grishka/Houseclub/blob/7a8edcf661b7c0603538c6ef4be101ea13af8635/menu_home.xml",
    "raw_url": "https://github.com/grishka/Houseclub/raw/7a8edcf661b7c0603538c6ef4be101ea13af8635/menu_home.xml",
    "contents_url": "https://api.github.com/repos/grishka/Houseclub/contents/menu_home.xml?ref=7a8edcf661b7c0603538c6ef4be101ea13af8635",
    "patch": "@@ -0,0 +1,38 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n+<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n+    xmlns:tools=\"http://schemas.android.com/tools\">\r\n+\r\n+\r\n+    <item\r\n+        android:id=\"@+id/homeMenuEvents\"\r\n+        android:icon=\"@drawable/ic_baseline_calendar_today_24\"\r\n+        android:showAsAction=\"always\"\r\n+        android:title=\"\" />\r\n+\r\n+    <item\r\n+        android:id=\"@+id/homeMenuInvite\"\r\n+        android:icon=\"@drawable/ic_baseline_mail_outline_24\"\r\n+        android:showAsAction=\"always\"\r\n+        android:title=\"\" />\r\n+\r\n+    <item\r\n+        android:id=\"@+id/homeMenuSearchPeople\"\r\n+        android:icon=\"@drawable/ic_baseline_search_24\"\r\n+        android:showAsAction=\"always\"\r\n+        android:title=\"\"\r\n+        tools:ignore=\"AlwaysShowAction\" />\r\n+    <item\r\n+        android:id=\"@+id/homeMenuNotifications\"\r\n+        android:icon=\"@drawable/ic_notifications\"\r\n+        android:showAsAction=\"always\"\r\n+        android:title=\"\" />\r\n+\r\n+    <item\r\n+        android:id=\"@+id/homeMenuProfile\"\r\n+        android:icon=\"@drawable/ic_baseline_person_24\"\r\n+        android:showAsAction=\"always\"\r\n+        android:title=\"\" />\r\n+\r\n+\r\n+\r\n+</menu>\n\\ No newline at end of file"
  }
]
