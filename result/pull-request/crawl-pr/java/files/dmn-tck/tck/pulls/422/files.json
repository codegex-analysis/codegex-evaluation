[
  {
    "sha": "8b2c275869f85f53b1a0ca511dcc4f85e68dee10",
    "filename": "TestCases/compliance-level-3/0104-allowed-values/0104-allowed-values-test-01.xml",
    "status": "added",
    "additions": 1161,
    "deletions": 0,
    "changes": 1161,
    "blob_url": "https://github.com/dmn-tck/tck/blob/08a1d51513b2100aef3472f8f64f070dd5354ea8/TestCases/compliance-level-3/0104-allowed-values/0104-allowed-values-test-01.xml",
    "raw_url": "https://github.com/dmn-tck/tck/raw/08a1d51513b2100aef3472f8f64f070dd5354ea8/TestCases/compliance-level-3/0104-allowed-values/0104-allowed-values-test-01.xml",
    "contents_url": "https://api.github.com/repos/dmn-tck/tck/contents/TestCases/compliance-level-3/0104-allowed-values/0104-allowed-values-test-01.xml?ref=08a1d51513b2100aef3472f8f64f070dd5354ea8",
    "patch": "@@ -0,0 +1,1161 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n+<!-- Contributed to DMN TCK by StrayAlien -->\n+<testCases xmlns=\"http://www.omg.org/spec/DMN/20160719/testcase\"\n+           xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+           xsi:schemaLocation=\"\"\n+           xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\n+    <modelName>0104-allowed-values.dmn</modelName>\n+\n+    <!-- STRING -->\n+\n+    <testCase id=\"string_001\">\n+        <description>complies with string domain</description>\n+        <resultNode name=\"decision_string_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"string_002\">\n+        <description>does not comply with string domain</description>\n+        <resultNode name=\"decision_string_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"string_003\">\n+        <description>input value complies with input string domain</description>\n+        <inputNode name=\"tFooBarStringInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tFooBarInput_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"string_004\">\n+        <description>input value does not comply with input string domain</description>\n+        <inputNode name=\"tFooBarStringInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tFooBarInput_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"string_005\">\n+        <!-- test uses a item defn with no allowed values, but the item defn uses a base\n+        type _with_ allowed values.  We're asserting the base values are indeed associated\n+        with the new type -->\n+        <description>complies with copy of type string domain</description>\n+        <resultNode name=\"decision_string_003\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"string_006\">\n+        <!-- test uses a item defn with no allowed values, but the item defn uses a base\n+        type _with_ allowed values.  We're asserting the base values are indeed associated\n+        with the new type -->\n+        <description>does not comply with copy string domain</description>\n+        <resultNode name=\"decision_string_004\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- NUMBER -->\n+\n+    <testCase id=\"number_001\">\n+        <description>complies with number domain</description>\n+        <resultNode name=\"number_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:decimal\">17</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"number_002\">\n+        <description>does not comply with number domain</description>\n+        <resultNode name=\"number_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"number_003\">\n+        <description>input value complies with number domain</description>\n+        <inputNode name=\"tNumberRangeTypeInput\">\n+            <value xsi:type=\"xsd:decimal\">17</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tNumberRangeType_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:decimal\">17</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"number_004\">\n+        <description>input value does not comply with number domain</description>\n+        <inputNode name=\"tNumberRangeTypeInput\">\n+            <value xsi:type=\"xsd:decimal\">20</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tNumberRangeType_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- DATE -->\n+\n+    <testCase id=\"date_001\">\n+        <description>complies with date domain</description>\n+        <resultNode name=\"date_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:date\">1960-02-01</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"date_002\">\n+        <description>does not comply with date domain</description>\n+        <resultNode name=\"date_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"date_003\">\n+        <description>input value complies with date domain</description>\n+        <inputNode name=\"tDateRangeTypeInput\">\n+            <value xsi:type=\"xsd:date\">1960-02-01</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tDateRangeType_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:date\">1960-02-01</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"date_004\">\n+        <description>input value does not comply with date domain</description>\n+        <inputNode name=\"tDateRangeTypeInput\">\n+            <value xsi:type=\"xsd:date\">1970-01-01</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tDateRangeType_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- DATETIME -->\n+\n+    <testCase id=\"dateTime_001\">\n+        <description>complies with dateTime domain</description>\n+        <resultNode name=\"dateTime_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:dateTime\">1960-01-01T00:00:01</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"dateTime_002\">\n+        <description>does not comply with dateTime domain</description>\n+        <resultNode name=\"dateTime_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"dateTime_003\">\n+        <description>input value complies with dateTime domain</description>\n+        <inputNode name=\"tDateTimeRangeTypeInput\">\n+            <value xsi:type=\"xsd:dateTime\">1960-01-01T00:00:01</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tDateTimeRangeType_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:dateTime\">1960-01-01T00:00:01</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"dateTime_004\">\n+        <description>input value does not comply with dateTime domain</description>\n+        <inputNode name=\"tDateTimeRangeTypeInput\">\n+            <value xsi:type=\"xsd:dateTime\">1970-01-01T00:00:00</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tDateTimeRangeType_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- TIME -->\n+\n+    <testCase id=\"time_001\">\n+        <description>complies with time domain</description>\n+        <resultNode name=\"time_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:time\">10:00:00</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"time_002\">\n+        <description>does not comply with time domain</description>\n+        <resultNode name=\"time_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"time_003\">\n+        <description>input value complies with time domain</description>\n+        <inputNode name=\"tTimeRangeTypeInput\">\n+            <value xsi:type=\"xsd:time\">10:00:00</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tTimeRangeType_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:time\">10:00:00</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"time_004\">\n+        <description>input value does not comply with time domain</description>\n+        <inputNode name=\"tTimeRangeTypeInput\">\n+            <value xsi:type=\"xsd:time\">13:00:00</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tTimeRangeType_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- YEARS AND MONTHS DURATION -->\n+\n+    <testCase id=\"ymd_001\">\n+        <description>complies with ymd domain</description>\n+        <resultNode name=\"ymd_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:duration\">P2Y</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"ymd_002\">\n+        <description>does not comply with ymd domain</description>\n+        <resultNode name=\"ymd_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"ymd_003\">\n+        <description>input value complies with ymd domain</description>\n+        <inputNode name=\"tYmdRangeTypeInput\">\n+            <value xsi:type=\"xsd:duration\">P2Y</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tYmdRangeType_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:duration\">P2Y</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"ymd_004\">\n+        <description>input value does not comply with ymd domain</description>\n+        <inputNode name=\"tYmdRangeTypeInput\">\n+            <value xsi:type=\"xsd:duration\">P6Y</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tYmdRangeType_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- DAYS AND TIME DURATION -->\n+\n+    <testCase id=\"dtd_001\">\n+        <description>complies with dtd domain</description>\n+        <resultNode name=\"dtd_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:duration\">P2D</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"dtd_002\">\n+        <description>does not comply with dtd domain</description>\n+        <resultNode name=\"dtd_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"dtd_003\">\n+        <description>input value complies with dtd domain</description>\n+        <inputNode name=\"tDtdRangeTypeInput\">\n+            <value xsi:type=\"xsd:duration\">P2D</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tDtdRangeType_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:duration\">P2D</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"dtd_004\">\n+        <description>input value does not comply with dtd domain</description>\n+        <inputNode name=\"tDtdRangeTypeInput\">\n+            <value xsi:type=\"xsd:duration\">P6D</value>\n+        </inputNode>\n+        <resultNode name=\"decision_tDtdRangeType_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- STRUCTURAL / ESOTERIC -->\n+\n+    <testCase id=\"override_001\">\n+        <description>complies with string domain for 'overridden' base type</description>\n+        <resultNode name=\"override_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">left</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"override_002\">\n+        <description>does not comply with string domain for 'overridden' base type</description>\n+        <resultNode name=\"override_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- BKM -->\n+\n+    <testCase id=\"bkm_001\">\n+        <description>BKM argument complies with parameter domain</description>\n+        <inputNode name=\"tFooBarStringInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_bkm_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"bkm_002\">\n+        <description>BKM argument does not comply with parameter domain</description>\n+        <inputNode name=\"tFooBarStringInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_bkm_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"bkm_003\">\n+        <description>BKM return type complies with encapsulatedLogic typed function return type domain</description>\n+        <inputNode name=\"tFooBarStringInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_bkm_002\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"bkm_004\">\n+        <description>BKM return type does not comply with encapsulatedLogic typed typed function return type domain</description>\n+        <inputNode name=\"tFooBarStringInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_bkm_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"bkm_005\">\n+        <description>BKM return type complies with variable typeRef function return type domain</description>\n+        <inputNode name=\"tFooBarStringInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_bkm_003\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"bkm_006\">\n+        <description>BKM return type does not comply with variable typRef function return type domain</description>\n+        <inputNode name=\"tFooBarStringInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_bkm_003\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- DECISION SERVICE -->\n+\n+    <testCase id=\"ds_001\" invocableName=\"a_decisionservice_with_typed_result\" type=\"decisionService\">\n+        <description>Decision Service return value complies with return type domain</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"a_decisionservice_with_typed_result\" >\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"ds_002\" invocableName=\"a_decisionservice_with_typed_result\" type=\"decisionService\">\n+        <description>Decision Service return value does not comply with return type domain</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"a_decisionservice_with_typed_result\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"ds_003\" invocableName=\"a_decisionservice_with_typed_param\" type=\"decisionService\">\n+        <description>Decision Service param value complies with param type domain</description>\n+        <inputNode name=\"ds_inputdecision\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"a_decisionservice_with_typed_param\" >\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"ds_004\" invocableName=\"a_decisionservice_with_typed_param\" type=\"decisionService\">\n+        <description>Decision Service param value does not comply with param type domain</description>\n+        <inputNode name=\"ds_inputdecision\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"a_decisionservice_with_typed_param\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- LAMBDA -->\n+\n+    <testCase id=\"lambda_001\">\n+        <description>lambda argument complies with parameter domain</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_lambda_expression_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"lambda_002\">\n+        <description>lambda argument does not comply with parameter domain</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_lambda_expression_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"lambda_003\">\n+        <description>function definition return result complies with function result domain</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_lambda_expression_002\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"lambda_004\">\n+        <description>function definition return result does not comply with function result domain</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_lambda_expression_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- FUNCTION DEFINITION -->\n+\n+    <testCase id=\"functiondefinition_001\">\n+        <description>function definition argument complies with parameter domain</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_funcdef_expression_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"functiondefinition_002\">\n+        <description>function definition argument does not comply with parameter domain</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_funcdef_expression_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"functiondefinition_003\">\n+        <description>function definition return result complies with function result domain</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_funcdef_expression_002\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"functiondefinition_004\">\n+        <description>function definition return result does not comply with function result domain</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_funcdef_expression_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- LIST -->\n+\n+    <testCase id=\"list_001\">\n+        <description>complies with list type with contained item type</description>\n+        <resultNode name=\"list_001\" type=\"decision\">\n+            <expected>\n+                <list>\n+                    <item>\n+                        <value xsi:type=\"xsd:string\">foo</value>\n+                    </item>\n+                    <item>\n+                        <value xsi:type=\"xsd:string\">foo</value>\n+                    </item>\n+                    <item>\n+                        <value xsi:type=\"xsd:string\">bar</value>\n+                    </item>\n+                </list>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"list_002\">\n+        <description>does not comply with list type with contained item type</description>\n+        <resultNode name=\"list_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"list_boxed_001\">\n+        <description>complies with list type with contained item type</description>\n+        <resultNode name=\"list_boxed_001\" type=\"decision\">\n+            <expected>\n+                <list>\n+                    <item>\n+                        <value xsi:type=\"xsd:string\">foo</value>\n+                    </item>\n+                    <item>\n+                        <value xsi:type=\"xsd:string\">foo</value>\n+                    </item>\n+                    <item>\n+                        <value xsi:type=\"xsd:string\">bar</value>\n+                    </item>\n+                </list>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"list_boxed_002\">\n+        <description>does not comply with list type with contained item type</description>\n+        <resultNode name=\"list_boxed_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- CONTEXT -->\n+\n+    <testCase id=\"context_001\">\n+        <description>complies with context type with contained property type</description>\n+        <resultNode name=\"context_001\" type=\"decision\">\n+            <expected>\n+                <component name=\"prop1\">\n+                    <value xsi:type=\"xsd:string\">foo</value>\n+                </component>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"context_002\">\n+        <description>does not comply with context type with contained property type</description>\n+        <resultNode name=\"context_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"context_boxed_001\">\n+        <description>complies with context type with contained property type</description>\n+        <resultNode name=\"context_boxed_001\" type=\"decision\">\n+            <expected>\n+                <component name=\"prop1\">\n+                    <value xsi:type=\"xsd:string\">foo</value>\n+                </component>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"context_boxed_002\">\n+        <description>does not comply with context type with contained property type</description>\n+        <resultNode name=\"context_boxed_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"context_003\">\n+        <description>complies with context type with contained list property type</description>\n+        <resultNode name=\"context_003\" type=\"decision\">\n+            <expected>\n+                <component name=\"prop1\">\n+                    <list>\n+                        <item>\n+                            <value xsi:type=\"xsd:string\">foo</value>\n+                        </item>\n+                        <item>\n+                            <value xsi:type=\"xsd:string\">foo</value>\n+                        </item>\n+                        <item>\n+                            <value xsi:type=\"xsd:string\">bar</value>\n+                        </item>\n+                    </list>\n+                </component>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"context_004\">\n+        <description>does not comply with context type with contained list property type</description>\n+        <resultNode name=\"context_004\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"context_input_001\">\n+        <description>context input data complies with constrained input type</description>\n+        <inputNode name=\"tFooBarContextInput\">\n+            <component name=\"prop1\">\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </component>\n+        </inputNode>\n+        <resultNode name=\"context_input_decision_001\" type=\"decision\">\n+            <expected>\n+                <component name=\"prop1\">\n+                    <value xsi:type=\"xsd:string\">foo</value>\n+                </component>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"context_input_002\">\n+        <description>context input data does not comply with constrained input type</description>\n+        <inputNode name=\"tFooBarContextInput\">\n+            <component name=\"prop1\">\n+                <value xsi:type=\"xsd:string\">baz</value>\n+            </component>\n+        </inputNode>\n+        <resultNode name=\"context_input_decision_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- LITERAL EXPRESSION -->\n+\n+    <testCase id=\"decision_literal_expression_001\">\n+        <description>literal expression typeRef complies with type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_literal_expression_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_literal_expression_002\">\n+        <description>literal expression typeRef does not comply with type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_literal_expression_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- CONTEXT EXPRESSION -->\n+\n+    <testCase id=\"decision_context_expression_001\">\n+        <description>context expression typeRef complies with type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_context_expression_001\" type=\"decision\">\n+            <expected>\n+                <component name=\"prop1\">\n+                    <value xsi:type=\"xsd:string\">foo</value>\n+                </component>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_context_expression_002\">\n+        <description>context expression typeRef does not comply with type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_context_expression_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- CONTEXT ENTRY -->\n+\n+    <testCase id=\"decision_contextentry_expression_001\">\n+        <description>contextentry expression typeRef complies with type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_contextentry_expression_001\" type=\"decision\">\n+            <expected>\n+                <component name=\"prop1\">\n+                    <value xsi:type=\"xsd:string\">foo</value>\n+                </component>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_contextentry_expression_002\">\n+        <description>contextentry expression typeRef does not comply with type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_contextentry_expression_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <component name=\"prop1\">\n+                    <value xsi:nil=\"true\"></value>\n+                </component>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- LIST EXPRESSION -->\n+\n+    <testCase id=\"decision_list_expression_001\">\n+        <description>list expression typeRef complies with type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_list_expression_001\" type=\"decision\">\n+            <expected>\n+                <list>\n+                    <item>\n+                        <value xsi:type=\"xsd:string\">foo</value>\n+                    </item>\n+                </list>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_list_expression_002\">\n+        <description>list expression typeRef does not comply with type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_list_expression_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <list>\n+                    <item>\n+                        <value xsi:nil=\"true\"></value>\n+                    </item>\n+                </list>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"list_input_001\">\n+        <description>list input data complies with constrained input type</description>\n+        <inputNode name=\"tFooBarListInput\">\n+            <list>\n+                <item>\n+                    <value xsi:type=\"xsd:string\">foo</value>\n+                </item>\n+            </list>\n+        </inputNode>\n+        <resultNode name=\"list_input_decision_001\" type=\"decision\">\n+            <expected>\n+                <list>\n+                    <item>\n+                        <value xsi:type=\"xsd:string\">foo</value>\n+                    </item>\n+                </list>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"list_input_002\">\n+        <description>list input data does not comply with constrained input type</description>\n+        <inputNode name=\"tFooBarListInput\">\n+            <list>\n+                <item>\n+                    <value xsi:type=\"xsd:string\">baz</value>\n+                </item>\n+            </list>\n+        </inputNode>\n+        <resultNode name=\"list_input_decision_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- RELATION EXPRESSION -->\n+\n+    <testCase id=\"decision_relation_expression_001\">\n+        <description>relation expression typeRef complies with type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_relation_expression_001\" type=\"decision\">\n+            <expected>\n+                <list>\n+                    <item>\n+                        <component name=\"col1\">\n+                            <value xsi:type=\"xsd:string\">foo</value>\n+                        </component>\n+                    </item>\n+                </list>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_relation_expression_002\">\n+        <description>relation expression typeRef does not comply with type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_relation_expression_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- RELATION ROW -->\n+\n+    <testCase id=\"decision_relationrow_expression_001\">\n+        <description>relation row expression complies with column typeRef</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_relationrow_expression_001\" type=\"decision\">\n+            <expected>\n+                <list>\n+                    <item>\n+                        <component name=\"col1\">\n+                            <value xsi:type=\"xsd:string\">foo</value>\n+                        </component>\n+                    </item>\n+                </list>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_relationrow_expression_002\">\n+        <description>relation row expression does not comply with column typeRef</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_relationrow_expression_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <list>\n+                    <item>\n+                        <component name=\"col1\">\n+                            <value xsi:nil=\"true\"></value>\n+                        </component>\n+                    </item>\n+                </list>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- DECISION TABLE EXPRESSION -->\n+\n+    <testCase id=\"decision_dt_expression_001\">\n+        <description>DT single output complies with DT typeRef</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_dt_expression_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_dt_expression_002\">\n+        <description>DT single output complies with DT typeRef</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_dt_expression_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_dt_expression_003\">\n+        <description>DT multiple output values complies with output entry typeRef</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_dt_expression_002\" type=\"decision\">\n+            <expected>\n+                <component name=\"col1\">\n+                    <value xsi:type=\"xsd:string\">foo</value>\n+                </component>\n+                <component name=\"col2\">\n+                    <value xsi:type=\"xsd:string\">foo</value>\n+                </component>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_dt_expression_004\">\n+        <description>DT multiple output values do not comply with output entry typeRef</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_dt_expression_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <component name=\"col1\">\n+                    <value xsi:nil=\"true\"></value>\n+                </component>\n+                <component name=\"col2\">\n+                    <value xsi:type=\"xsd:string\">baz</value>\n+                </component>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_dt_expression_005\">\n+        <description>DT multiple output values complies with output clause typeRef</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_dt_expression_003\" type=\"decision\">\n+            <expected>\n+                <component name=\"col1\">\n+                    <value xsi:type=\"xsd:string\">foo</value>\n+                </component>\n+                <component name=\"col2\">\n+                    <value xsi:type=\"xsd:string\">foo</value>\n+                </component>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_dt_expression_006\">\n+        <description>DT multiple output values do not comply with output clause typeRef</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_dt_expression_003\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <component name=\"col1\">\n+                    <value xsi:nil=\"true\"></value>\n+                </component>\n+                <component name=\"col2\">\n+                    <value xsi:type=\"xsd:string\">baz</value>\n+                </component>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_dt_expression_007\">\n+        <description>DT input value complies with input clause clause inputValues</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_dt_expression_004\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">complies</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_dt_expression_008\">\n+        <description>DT input value does not comply with input clause clause inputValues</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_dt_expression_004\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">does not comply</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_dt_expression_009\">\n+        <description>DT output value complies with output clause clause outputValues</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_dt_expression_005\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_dt_expression_010\">\n+        <description>DT output value does not comply with output clause clause outputValues</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_dt_expression_005\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <!-- INVOCATION EXPRESSION -->\n+\n+    <testCase id=\"decision_invocation_expression_001\">\n+        <description>Invocation binding value complies with binding type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_invocation_expression_001\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_invocation_expression_002\">\n+        <description>Invocation binding value does not comply with binding type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_invocation_expression_001\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_invocation_expression_003\">\n+        <description>Invocation return value complies with invocation return type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">foo</value>\n+        </inputNode>\n+        <resultNode name=\"decision_invocation_expression_002\" type=\"decision\">\n+            <expected>\n+                <value xsi:type=\"xsd:string\">foo</value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+    <testCase id=\"decision_invocation_expression_004\">\n+        <description>Invocation return value does not comply with invocation return type</description>\n+        <inputNode name=\"tUntypedInput\">\n+            <value xsi:type=\"xsd:string\">baz</value>\n+        </inputNode>\n+        <resultNode name=\"decision_invocation_expression_002\" type=\"decision\" errorResult=\"true\">\n+            <expected>\n+                <value xsi:nil=\"true\"></value>\n+            </expected>\n+        </resultNode>\n+    </testCase>\n+\n+</testCases>"
  },
  {
    "sha": "8331c332ddc3ae615bc0662cac54a6f47baf8c97",
    "filename": "TestCases/compliance-level-3/0104-allowed-values/0104-allowed-values.dmn",
    "status": "added",
    "additions": 1029,
    "deletions": 0,
    "changes": 1029,
    "blob_url": "https://github.com/dmn-tck/tck/blob/08a1d51513b2100aef3472f8f64f070dd5354ea8/TestCases/compliance-level-3/0104-allowed-values/0104-allowed-values.dmn",
    "raw_url": "https://github.com/dmn-tck/tck/raw/08a1d51513b2100aef3472f8f64f070dd5354ea8/TestCases/compliance-level-3/0104-allowed-values/0104-allowed-values.dmn",
    "contents_url": "https://api.github.com/repos/dmn-tck/tck/contents/TestCases/compliance-level-3/0104-allowed-values/0104-allowed-values.dmn?ref=08a1d51513b2100aef3472f8f64f070dd5354ea8",
    "patch": "@@ -0,0 +1,1029 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n+<definitions namespace=\"http://www.montera.com.au/spec/DMN/0104-allowed-values\"\n+             name=\"0104-allowed-values\"\n+             id=\"_i9fboPUUEeesLuP4RHs4vA\"\n+             xmlns=\"https://www.omg.org/spec/DMN/20191111/MODEL/\"\n+             xmlns:di=\"http://www.omg.org/spec/DMN/20180521/DI/\"\n+             xmlns:dmndi=\"https://www.omg.org/spec/DMN/20191111/DMNDI/\"\n+             xmlns:dc=\"http://www.omg.org/spec/DMN/20180521/DC/\"\n+             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <description>allowed values</description>\n+\n+    <!--\n+\n+        for each type that can have allowed values\n+          - type a decision variable and assign it a non/conforming value\n+          - type an input variable and assign it a non/conforming value\n+\n+        then sanity check other place using just a string type in various guises\n+\n+        BKM variable param\n+        BKM variable return\n+        BKM encapsulatedLogic param\n+        BKM encapsulatedLogic result\n+        lambda param\n+        lambda result\n+        function defn param\n+        function defn result\n+        decision service param\n+        decision service result\n+        literal expression\n+        list - boxed and literal\n+        context - boxed and literal\n+        contextEntry\n+        relation\n+        relation column\n+        decision table\n+        decision table output clause\n+        decision table output values\n+        decision table output entry\n+        decision table input values\n+        decision table input/rule\n+        invocation result\n+        invocation param\n+    -->\n+\n+    <!-- a context type with a constrained property -->\n+    <itemDefinition name=\"tFooBarContext\">\n+        <itemComponent name=\"prop1\">\n+            <typeRef>tFooBarString</typeRef>\n+        </itemComponent>\n+    </itemDefinition>\n+\n+    <!-- a context type with a constrained list property -->\n+    <itemDefinition name=\"tFooBarListContext\">\n+        <itemComponent name=\"prop1\">\n+            <typeRef>tFooBarList</typeRef>\n+        </itemComponent>\n+    </itemDefinition>\n+\n+    <!-- a type suitable for a relation - a list of contexts, though\n+    each with a contrained property -->\n+    <itemDefinition name=\"tFooBarRelation\" isCollection=\"true\">\n+        <itemComponent name=\"col1\">\n+            <typeRef>tFooBarString</typeRef>\n+        </itemComponent>\n+    </itemDefinition>\n+\n+    <!-- a list with a contrained string type -->\n+    <itemDefinition name=\"tFooBarList\" isCollection=\"true\">\n+        <typeRef>tFooBarString</typeRef>\n+    </itemDefinition>\n+\n+    <itemDefinition name=\"tFooBarString\">\n+        <typeRef>string</typeRef>\n+        <allowedValues>\n+            <text>\"foo\", \"bar\"</text>\n+        </allowedValues>\n+    </itemDefinition>\n+\n+    <itemDefinition name=\"tFooBarString_copy\">\n+        <!-- note we're using the tFooBarString as a base type here and not providing\n+        allowedValue.  We expect the allowed values of tFooBarString to pertain to\n+        this type as well -->\n+        <typeRef>tFooBarString</typeRef>\n+    </itemDefinition>\n+\n+    <!-- function type with constrained return type -->\n+    <itemDefinition name=\"tFooBarFunction\">\n+        <functionItem outputTypeRef=\"tFooBarString\">\n+            <parameters name=\"a\"/>\n+        </functionItem>\n+    </itemDefinition>\n+\n+    <!-- function type for decision service with untyped param and constrained return type -->\n+    <itemDefinition name=\"tFooBarDSFunctionWithTypedReturn\">\n+        <functionItem outputTypeRef=\"tFooBarString\">\n+            <parameters name=\"tUntypedInput\"/>\n+        </functionItem>\n+    </itemDefinition>\n+\n+    <!-- function type for decision service with constrained param and no return type -->\n+    <itemDefinition name=\"tFooBarDSFunctionWithTypedParam\">\n+        <functionItem>\n+            <parameters name=\"ds_inputdecision\" typeRef=\"tFooBarString\"/>\n+        </functionItem>\n+    </itemDefinition>\n+\n+    <!-- function type with a constrained parameter type -->\n+    <itemDefinition name=\"tTypedParamFooBarFunction\">\n+        <functionItem>\n+            <parameters name=\"a\" typeRef=\"tFooBarString\"/>\n+        </functionItem>\n+    </itemDefinition>\n+\n+    <itemDefinition name=\"tDirectionsString\">\n+        <!-- note this type uses another string type as a base.  We expect\n+        the allowed values to be 'overridden' here.  That is, the allowed values\n+        in tFooBarString will not longer apply -->\n+        <typeRef>tFooBarString</typeRef>\n+        <allowedValues>\n+            <text>\"left\", \"right\"</text>\n+        </allowedValues>\n+    </itemDefinition>\n+\n+    <!-- a constrained number type -->\n+    <itemDefinition name=\"tNumberRangeType\">\n+        <typeRef>number</typeRef>\n+        <allowedValues>\n+            <text>[13..19]</text>\n+        </allowedValues>\n+    </itemDefinition>\n+\n+    <!-- a constrained date type -->\n+    <itemDefinition name=\"tDateRangeType\">\n+        <typeRef>date</typeRef>\n+        <allowedValues>\n+            <text>[@\"1960-01-01\" .. @\"1969-12-31\"]</text>\n+        </allowedValues>\n+    </itemDefinition>\n+\n+    <!-- a constrained dateTime type -->\n+    <itemDefinition name=\"tDateTimeRangeType\">\n+        <typeRef>dateTime</typeRef>\n+        <allowedValues>\n+            <text>[@\"1960-01-01T00:00:00\" .. @\"1969-12-31T23:59:59\"]</text>\n+        </allowedValues>\n+    </itemDefinition>\n+\n+    <!-- a constrained time type -->\n+    <itemDefinition name=\"tTimeRangeType\">\n+        <typeRef>time</typeRef>\n+        <allowedValues>\n+            <text>&lt;@\"12:00:00\"</text>\n+        </allowedValues>\n+    </itemDefinition>\n+\n+    <!-- a constrained years and months duration type -->\n+    <itemDefinition name=\"tYmdRangeType\">\n+        <typeRef>years and months duration</typeRef>\n+        <allowedValues>\n+            <text>[@\"P1Y\"..@\"P5Y\"]</text>\n+        </allowedValues>\n+    </itemDefinition>\n+\n+    <!-- a constrained days and time duration type -->\n+    <itemDefinition name=\"tDtdRangeType\">\n+        <typeRef>days and time duration</typeRef>\n+        <allowedValues>\n+            <text>[@\"P1D\"..@\"P5D\"]</text>\n+        </allowedValues>\n+    </itemDefinition>\n+\n+    <!-- a means to provide untyped input to decisions -->\n+    <inputData name=\"tUntypedInput\" id=\"_tUntypedInput\">\n+        <variable name=\"tUntypedInput\"/>\n+    </inputData>\n+\n+    <inputData name=\"tFooBarStringInput\" id=\"_tFooBarStringInput\">\n+        <variable name=\"tFooBarStringInput\" typeRef=\"tFooBarString\"/>\n+    </inputData>\n+\n+    <inputData name=\"tNumberRangeTypeInput\" id=\"_tNumberRangeTypeInput\">\n+        <variable name=\"tNumberRangeTypeInput\" typeRef=\"tNumberRangeType\"/>\n+    </inputData>\n+\n+    <inputData name=\"tTimeRangeTypeInput\" id=\"_tTimeRangeTypeInput\">\n+        <variable name=\"tTimeRangeTypeInput\" typeRef=\"tTimeRangeType\"/>\n+    </inputData>\n+\n+    <inputData name=\"tDateRangeTypeInput\" id=\"_tDateRangeTypeInput\">\n+        <variable name=\"tDateRangeTypeInput\" typeRef=\"tDateRangeType\"/>\n+    </inputData>\n+\n+    <inputData name=\"tDateTimeRangeTypeInput\" id=\"_tDateTimeRangeTypeInput\">\n+        <variable name=\"tDateTimeRangeTypeInput\" typeRef=\"tDateTimeRangeType\"/>\n+    </inputData>\n+\n+    <inputData name=\"tYmdRangeTypeInput\" id=\"_tYmdRangeTypeInput\">\n+        <variable name=\"tYmdRangeTypeInput\" typeRef=\"tYmdRangeType\"/>\n+    </inputData>\n+\n+    <inputData name=\"tDtdRangeTypeInput\" id=\"_tDtdRangeTypeInput\">\n+        <variable name=\"tDtdRangeTypeInput\" typeRef=\"tDtdRangeType\"/>\n+    </inputData>\n+\n+    <inputData name=\"tFooBarContextInput\" id=\"_tFooBarContextInput\">\n+        <variable name=\"tFooBarContextInput\" typeRef=\"tFooBarContext\"/>\n+    </inputData>\n+\n+    <inputData name=\"tFooBarListInput\" id=\"_tFooBarListInput\">\n+        <variable name=\"tFooBarListInput\" typeRef=\"tFooBarList\"/>\n+    </inputData>\n+\n+    <!-- STRING -->\n+\n+    <!-- compliant assignment to variable -->\n+    <decision name=\"decision_string_001\" id=\"_decision_string_001\">\n+        <variable name=\"decision_string_001\" typeRef=\"tFooBarString\"/>\n+        <literalExpression>\n+            <text>\"foo\"</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- non-compliant assignment to variable -->\n+    <decision name=\"decision_string_002\" id=\"_decision_string_002\">\n+        <variable name=\"decision_string_002\" typeRef=\"tFooBarString\"/>\n+        <literalExpression>\n+            <text>\"baz\"</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- decision accepting typed input and echoping the value -->\n+    <decision name=\"decision_tFooBarInput_001\" id=\"_decision_tFooBarInput_001\">\n+        <variable name=\"decision_tFooBarInput_001\" typeRef=\"tFooBarString\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tFooBarStringInput\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>tFooBarStringInput</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- compliant assignment to variable typed with copy of constrained type -->\n+    <decision name=\"decision_string_003\" id=\"_decision_string_003\">\n+        <variable name=\"decision_string_003\" typeRef=\"tFooBarString_copy\"/>\n+        <literalExpression>\n+            <text>\"foo\"</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- non-compliant to variable typed with copy of constrained type -->\n+    <decision name=\"decision_string_004\" id=\"_decision_string_004\">\n+        <variable name=\"decision_string_004\" typeRef=\"tFooBarString_copy\"/>\n+        <literalExpression>\n+            <text>\"baz\"</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- NUMBER -->\n+\n+    <!-- compliant assignment to variable -->\n+    <decision name=\"number_001\" id=\"_number_001\">\n+        <variable name=\"number_001\" typeRef=\"tNumberRangeType\"/>\n+        <literalExpression>\n+            <text>17</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- non-compliant assignment to variable -->\n+    <decision name=\"number_002\" id=\"_number_002\">\n+        <variable name=\"number_002\" typeRef=\"tNumberRangeType\"/>\n+        <literalExpression>\n+            <text>20</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- decision accepting typed input -->\n+    <decision name=\"decision_tNumberRangeType_001\" id=\"_decision_tNumberRangeType_001\">\n+        <variable name=\"decision_tNumberRangeType_001\" typeRef=\"tNumberRangeType\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tNumberRangeTypeInput\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>tNumberRangeTypeInput</text>\n+        </literalExpression>\n+    </decision>\n+\n+\n+    <!-- DATE -->\n+\n+    <!-- compliant assignment to variable -->\n+    <decision name=\"date_001\" id=\"_date_001\">\n+        <variable name=\"date_001\" typeRef=\"tDateRangeType\"/>\n+        <literalExpression>\n+            <text>date(\"1960-02-01\")</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- non-compliant assignment to variable -->\n+    <decision name=\"date_002\" id=\"_date_002\">\n+        <variable name=\"date_002\" typeRef=\"tDateRangeType\"/>\n+        <literalExpression>\n+            <text>date(\"1970-01-01\")</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- decision accepting typed input -->\n+    <decision name=\"decision_tDateRangeType_001\" id=\"_decision_tDateRangeType_001\">\n+        <variable name=\"decision_tDateRangeType_001\" typeRef=\"tDateRangeType\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tDateRangeTypeInput\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>tDateRangeTypeInput</text>\n+        </literalExpression>\n+    </decision>\n+\n+\n+    <!-- DATE TIME -->\n+\n+    <!-- compliant assignment to variable -->\n+    <decision name=\"dateTime_001\" id=\"_dateTime_001\">\n+        <variable name=\"dateTime_001\" typeRef=\"tDateTimeRangeType\"/>\n+        <literalExpression>\n+            <text>date and time(\"1960-01-01T00:00:01\")</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- non-compliant assignment to variable -->\n+    <decision name=\"dateTime_002\" id=\"_dateTime_002\">\n+        <variable name=\"dateTime_002\" typeRef=\"tDateTimeRangeType\"/>\n+        <literalExpression>\n+            <text>date and time(\"1970-01-01T00:00:00\")</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- decision accepting typed input -->\n+    <decision name=\"decision_tDateTimeRangeType_001\" id=\"_decision_tDateTimeRangeType_001\">\n+        <variable name=\"decision_tDateTimeRangeType_001\" typeRef=\"tDateTimeRangeType\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tDateTimeRangeTypeInput\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>tDateTimeRangeTypeInput</text>\n+        </literalExpression>\n+    </decision>\n+\n+\n+    <!-- TIME -->\n+\n+    <!-- compliant assignment to variable -->\n+    <decision name=\"time_001\" id=\"_time_001\">\n+        <variable name=\"time_001\" typeRef=\"tTimeRangeType\"/>\n+        <literalExpression>\n+            <text>time(\"10:00:00\")</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- non-compliant assignment to variable -->\n+    <decision name=\"time_002\" id=\"_time_002\">\n+        <variable name=\"time_002\" typeRef=\"tTimeRangeType\"/>\n+        <literalExpression>\n+            <text>time(\"13:00:00\")</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- decision accepting typed input -->\n+    <decision name=\"decision_tTimeRangeType_001\" id=\"_decision_tTimeRangeType_001\">\n+        <variable name=\"decision_tTimeRangeType_001\" typeRef=\"tTimeRangeType\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tTimeRangeTypeInput\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>tTimeRangeTypeInput</text>\n+        </literalExpression>\n+    </decision>\n+\n+\n+    <!-- YEARS AND MONTHS DURATION -->\n+\n+    <!-- compliant assignment to variable -->\n+    <decision name=\"ymd_001\" id=\"_ymd_001\">\n+        <variable name=\"ymd_001\" typeRef=\"tYmdRangeType\"/>\n+        <literalExpression>\n+            <text>duration(\"P2Y\")</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- non-compliant assignment to variable -->\n+    <decision name=\"ymd_002\" id=\"_ymd_002\">\n+        <variable name=\"ymd_002\" typeRef=\"tYmdRangeType\"/>\n+        <literalExpression>\n+            <text>duration(\"P6Y\")</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- decision accepting typed input -->\n+    <decision name=\"decision_tYmdRangeType_001\" id=\"_decision_tYmdRangeType_001\">\n+        <variable name=\"decision_tYmdRangeType_001\" typeRef=\"tYmdRangeType\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tYmdRangeTypeInput\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>tYmdRangeTypeInput</text>\n+        </literalExpression>\n+    </decision>\n+\n+\n+    <!-- DAYS AND TIME DURATION -->\n+\n+    <!-- compliant assignment to variable -->\n+    <decision name=\"dtd_001\" id=\"_dtd_001\">\n+        <variable name=\"dtd_001\" typeRef=\"tDtdRangeType\"/>\n+        <literalExpression>\n+            <text>duration(\"P2D\")</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- non-compliant assignment to variable -->\n+    <decision name=\"dtd_002\" id=\"_dtd_002\">\n+        <variable name=\"dtd_002\" typeRef=\"tDtdRangeType\"/>\n+        <literalExpression>\n+            <text>duration(\"P6D\")</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- decision accepting typed input -->\n+    <decision name=\"decision_tDtdRangeType_001\" id=\"_decision_tDtdRangeType_001\">\n+        <variable name=\"decision_tDtdRangeType_001\" typeRef=\"tDtdRangeType\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tDtdRangeTypeInput\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>tDtdRangeTypeInput</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- LAMBDA -->\n+\n+    <decision name=\"decision_lambda_expression_001\" id=\"_decision_lambda_expression_001\">\n+        <variable name=\"decision_lambda_expression_001\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>(function(a: tFooBarString) a)(tUntypedInput)</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <decision name=\"a_function_typed_lambda\" id=\"_a_function_typed_lambda\">\n+        <variable name=\"a_function_typed_lambda\" />\n+        <!-- the literal expression (that returns a lambda) is typed with a function type -->\n+        <literalExpression typeRef=\"tFooBarFunction\">\n+            <text>(function(a: tFooBarString) a)</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <decision name=\"decision_lambda_expression_002\" id=\"_decision_lambda_expression_002\">\n+        <variable name=\"decision_lambda_expression_002\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <informationRequirement>\n+            <requiredDecision href=\"#_a_function_typed_lambda\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>a_function_typed_lambda(tUntypedInput)</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- FUNCTION DEFINITION -->\n+\n+    <decision name=\"a_funcdef_with_typed_param\" id=\"_a_funcdef_with_typed_param\">\n+        <variable name=\"a_funcdef_with_typed_param\" />\n+        <!-- a function definition parameter is typed  -->\n+        <functionDefinition>\n+            <formalParameter name=\"a\" typeRef=\"tFooBarString\"/>\n+            <literalExpression>\n+                <text>a</text>\n+            </literalExpression>\n+        </functionDefinition>\n+    </decision>\n+\n+    <decision name=\"decision_funcdef_expression_001\" id=\"_decision_funcdef_expression_001\">\n+        <variable name=\"decision_funcdef_expression_001\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <informationRequirement>\n+            <requiredDecision href=\"#_a_funcdef_with_typed_param\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>a_funcdef_with_typed_param(tUntypedInput)</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <decision name=\"a_function_typed_funcdef\" id=\"_a_function_typed_funcdef\">\n+        <variable name=\"a_function_typed_funcdef\" />\n+        <!-- the function definition is typed with a function type -->\n+        <functionDefinition typeRef=\"tFooBarFunction\">\n+            <formalParameter name=\"a\"/>\n+            <literalExpression>\n+                <text>a</text>\n+            </literalExpression>\n+        </functionDefinition>\n+    </decision>\n+\n+    <decision name=\"decision_funcdef_expression_002\" id=\"_decision_funcdef_expression_002\">\n+        <variable name=\"decision_funcdef_expression_002\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <informationRequirement>\n+            <requiredDecision href=\"#_a_function_typed_funcdef\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>a_function_typed_funcdef(tUntypedInput)</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- BKM -->\n+\n+    <!-- BKM accepting a param of tFooBarString and echoing it.  Encapsulated logic and\n+    variable are untyped.  Used to assert argument assignment compatibility  -->\n+    <businessKnowledgeModel name=\"a_bkm_with_typed_param\" id=\"_a_bkm_with_typed_param\">\n+        <variable name=\"a_bkm_with_typed_param\" />\n+        <encapsulatedLogic>\n+            <formalParameter typeRef=\"tFooBarString\" name=\"a\"/>\n+            <literalExpression>\n+                <text>a</text>\n+            </literalExpression>\n+        </encapsulatedLogic>\n+    </businessKnowledgeModel>\n+\n+    <!-- BKM with a function typed encapsulatedLogic.  Used to assert on return type\n+    compatibility -->\n+    <businessKnowledgeModel name=\"a_bkm_with_function_typed_logic\" id=\"_a_bkm_with_function_typed_logic\">\n+        <variable name=\"a_bkm_with_function_typed_logic\" />\n+        <encapsulatedLogic typeRef=\"tFooBarFunction\">\n+            <formalParameter name=\"a\"/>\n+            <literalExpression>\n+                <text>a</text>\n+            </literalExpression>\n+        </encapsulatedLogic>\n+    </businessKnowledgeModel>\n+\n+    <!-- BKM with a function typed typeRef.  Used to assert on return type\n+    compatibility -->\n+    <businessKnowledgeModel name=\"a_bkm_with_function_typed_typeRef\" id=\"_a_bkm_with_function_typed_typeRef\">\n+        <variable name=\"a_bkm_with_function_typed_typeRef\" typeRef=\"tFooBarFunction\" />\n+        <encapsulatedLogic>\n+            <formalParameter name=\"a\"/>\n+            <literalExpression>\n+                <text>a</text>\n+            </literalExpression>\n+        </encapsulatedLogic>\n+    </businessKnowledgeModel>\n+\n+    <!-- decision invoking a_bkm_with_typed_param passing it input data. The\n+      function argument will be checked against constrained BKM param type -->\n+    <decision name=\"decision_bkm_001\" id=\"_decision_bkm_001\">\n+        <variable name=\"decision_bkm_001\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tFooBarStringInput\"/>\n+        </informationRequirement>\n+        <knowledgeRequirement>\n+            <requiredKnowledge href=\"#_a_bkm_with_typed_param\"/>\n+        </knowledgeRequirement>\n+        <literalExpression>\n+            <text>a_bkm_with_typed_param(tFooBarStringInput)</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- decision invoking a_bkm_with_function_typed_logic passing it input data. The function\n+       return result will be checked against constrained function return type -->\n+    <decision name=\"decision_bkm_002\" id=\"_decision_bkm_002\">\n+        <variable name=\"decision_bkm_002\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tFooBarStringInput\"/>\n+        </informationRequirement>\n+        <knowledgeRequirement>\n+            <requiredKnowledge href=\"#_a_bkm_with_function_typed_logic\"/>\n+        </knowledgeRequirement>\n+        <literalExpression>\n+            <text>a_bkm_with_function_typed_logic(tFooBarStringInput)</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- decision invoking a_bkm_with_function_typed_typeRef passing it input data. The function\n+       return result will be checked against constrained typeRef function return type -->\n+    <decision name=\"decision_bkm_003\" id=\"_decision_bkm_003\">\n+        <variable name=\"decision_bkm_003\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tFooBarStringInput\"/>\n+        </informationRequirement>\n+        <knowledgeRequirement>\n+            <requiredKnowledge href=\"#_a_bkm_with_function_typed_typeRef\"/>\n+        </knowledgeRequirement>\n+        <literalExpression>\n+            <text>a_bkm_with_function_typed_typeRef(tFooBarStringInput)</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- DECISION SERVICE -->\n+    <decision name=\"ds_echo_from_inputdata_decision\" id=\"_ds_echo_from_inputdata_decision\">\n+        <variable name=\"ds_echo_from_inputdata_decision\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>tUntypedInput</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- Decision service accepting an untyped param echoing it.  The DS variable is a constrained type.\n+    Used to assert the return value of a DS -->\n+    <decisionService name=\"a_decisionservice_with_typed_result\" id=\"_a_decisionservice_with_typed_result\">\n+        <variable name=\"a_decisionservice_with_typed_result\" typeRef=\"tFooBarDSFunctionWithTypedReturn\"/>\n+        <outputDecision href=\"#_ds_echo_from_inputdata_decision\"/>\n+        <inputData href=\"#_tUntypedInput\"/>\n+    </decisionService>\n+\n+    <decision name=\"ds_inputdecision\" id=\"_ds_inputdecision\">\n+        <variable name=\"ds_inputdecision\" />\n+        <literalExpression>\n+            <text>\"never called\"</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <decision name=\"ds_echo_from_inputdecision_decision\" id=\"_ds_echo_from_inputdecision_decision\">\n+        <variable name=\"ds_echo_from_inputdecision_decision\" />\n+        <informationRequirement>\n+            <requiredDecision href=\"#_ds_inputdecision\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>ds_inputdecision</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- Decision service accepting an contrained param and echoing it.  The DS variable has no return type -->\n+    <decisionService name=\"a_decisionservice_with_typed_param\" id=\"_a_decisionservice_with_typed_param\">\n+        <variable name=\"a_decisionservice_with_typed_param\" typeRef=\"tFooBarDSFunctionWithTypedParam\"/>\n+        <outputDecision href=\"#_ds_echo_from_inputdecision_decision\"/>\n+        <inputDecision href=\"#_ds_inputdecision\"/>\n+    </decisionService>\n+\n+    <!-- Content / list cases + some esoteric stuff -->\n+\n+    <!-- compliant assignment to 'overridden' variable type.  -->\n+    <decision name=\"override_001\" id=\"_override_001\">\n+        <variable name=\"override_001\" typeRef=\"tDirectionsString\"/>\n+        <literalExpression>\n+            <text>\"left\"</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- non-compliant assignment to to 'overridden' variable type -->\n+    <decision name=\"override_004\" id=\"_override_004\">\n+        <variable name=\"override_004\" typeRef=\"tDirectionsString\"/>\n+        <literalExpression>\n+            <text>\"foo\"</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- compliant assignment to 'list' variable type with constrained element type -->\n+    <decision name=\"list_001\" id=\"_list_001\">\n+        <variable name=\"list_001\" typeRef=\"tFooBarList\"/>\n+        <literalExpression>\n+            <text>[\"foo\", \"foo\", \"bar\"]</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <decision name=\"list_boxed_001\" id=\"_list_box_001\">\n+        <variable name=\"list_boxed_001\" typeRef=\"tFooBarList\"/>\n+        <list>\n+            <literalExpression><text>\"foo\"</text></literalExpression>\n+            <literalExpression><text>\"foo\"</text></literalExpression>\n+            <literalExpression><text>\"bar\"</text></literalExpression>\n+        </list>\n+    </decision>\n+\n+    <!-- non-compliant assignment to 'list' variable type with constrained element type -->\n+    <decision name=\"list_002\" id=\"_list_002\">\n+        <variable name=\"list_002\" typeRef=\"tFooBarList\"/>\n+        <literalExpression>\n+            <text>[\"foo\", \"baz\"]</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <decision name=\"list_boxed_002\" id=\"_list_box_002\">\n+        <variable name=\"list_boxed_002\" typeRef=\"tFooBarList\"/>\n+        <list>\n+            <literalExpression><text>\"foo\"</text></literalExpression>\n+            <literalExpression><text>\"baz\"</text></literalExpression>\n+        </list>\n+    </decision>\n+\n+    <!-- decision echo value for an input that is a list with a constrained element type -->\n+    <decision name=\"list_input_decision_001\" id=\"list_input_decision_001\">\n+        <variable name=\"list_input_decision_001\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tFooBarListInput\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>tFooBarListInput</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- compliant assignment to 'context' variable type with constrained property type -->\n+    <decision name=\"context_001\" id=\"_context_001\">\n+        <variable name=\"context_001\" typeRef=\"tFooBarContext\"/>\n+        <literalExpression>\n+            <text>{prop1: \"foo\"}</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <decision name=\"context_boxed_001\" id=\"_context_boxed_001\">\n+        <variable name=\"context_boxed_001\" typeRef=\"tFooBarContext\"/>\n+        <context>\n+            <contextEntry>\n+                <variable name=\"prop1\"/>\n+                <literalExpression><text>\"foo\"</text></literalExpression>\n+            </contextEntry>\n+        </context>\n+    </decision>\n+\n+    <!-- non-compliant assignment to 'context' variable type with constrained property type -->\n+    <decision name=\"context_002\" id=\"_context_002\">\n+        <variable name=\"context_002\" typeRef=\"tFooBarContext\"/>\n+        <literalExpression>\n+            <text>{prop1: \"baz\"}</text>\n+        </literalExpression>\n+    </decision>\n+\n+\n+    <!-- compliant assignment to 'context' variable type with constrained list property type -->\n+    <decision name=\"context_003\" id=\"_context_003\">\n+        <variable name=\"context_003\" typeRef=\"tFooBarListContext\"/>\n+        <literalExpression>\n+            <text>{prop1: [\"foo\", \"foo\", \"bar\"]}</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- non-compliant assignment to 'context' variable type with constrained list property type -->\n+    <decision name=\"context_004\" id=\"_context_004\">\n+        <variable name=\"context_004\" typeRef=\"tFooBarListContext\"/>\n+        <literalExpression>\n+            <text>{prop1: [\"foo\", \"foo\", \"baz\"]}</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- decision echo value for an input that is a context with a constrained property type -->\n+    <decision name=\"context_input_decision_001\" id=\"_context_input_decision_001\">\n+        <variable name=\"context_input_decision_001\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tFooBarContextInput\"/>\n+        </informationRequirement>\n+        <literalExpression>\n+            <text>tFooBarContextInput</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <!-- decision with typed literal expression echoing an (untyped) input -->\n+    <decision name=\"decision_literal_expression_001\" id=\"_decision_literal_expression_001\">\n+        <variable name=\"decision_literal_expression_001\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <literalExpression typeRef=\"tFooBarString\">\n+            <text>tUntypedInput</text>\n+        </literalExpression>\n+    </decision>\n+\n+    <decision name=\"decision_context_expression_001\" id=\"_decision_context_expression_001\">\n+        <variable name=\"decision_context_expression_001\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <!-- return context is typed -->\n+        <context typeRef=\"tFooBarContext\">\n+            <contextEntry >\n+                <variable name=\"prop1\"/>\n+                <literalExpression>\n+                    <text>tUntypedInput</text>\n+                </literalExpression>\n+            </contextEntry>\n+        </context>\n+    </decision>\n+\n+    <decision name=\"decision_contextentry_expression_001\" id=\"_decision_contextentry_expression_001\">\n+        <variable name=\"decision_contextentry_expression_001\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <!-- return context is untyped -->\n+        <context>\n+            <!-- but context entry is typed -->\n+            <contextEntry>\n+                <variable name=\"prop1\" typeRef=\"tFooBarString\"/>\n+                <literalExpression>\n+                    <text>tUntypedInput</text>\n+                </literalExpression>\n+            </contextEntry>\n+        </context>\n+    </decision>\n+\n+    <decision name=\"decision_list_expression_001\" id=\"_decision_list_expression_001\">\n+        <variable name=\"decision_list_expression_001\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <!-- return list is typed -->\n+        <list typeRef=\"tFooBarList\">\n+            <literalExpression>\n+                <text>tUntypedInput</text>\n+            </literalExpression>\n+        </list>\n+    </decision>\n+\n+    <decision name=\"decision_list_expression_002\" id=\"_decision_list_expression_002\">\n+        <variable name=\"decision_list_expression_002\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <list>\n+            <!-- list element is typed -->\n+            <literalExpression typeRef=\"tFooBarString\">\n+                <text>tUntypedInput</text>\n+            </literalExpression>\n+        </list>\n+    </decision>\n+\n+    <decision name=\"decision_relation_expression_001\" id=\"_decision_relation_expression_001\">\n+        <variable name=\"decision_relation_expression_001\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <!-- return relation is typed -->\n+        <relation typeRef=\"tFooBarRelation\">\n+            <column name=\"col1\"/>\n+            <row>\n+                <literalExpression>\n+                    <text>tUntypedInput</text>\n+                </literalExpression>\n+            </row>\n+        </relation>\n+    </decision>\n+\n+    <decision name=\"decision_relationrow_expression_001\" id=\"_decision_relationrow_expression_001\">\n+        <variable name=\"decision_relationrow_expression_001\" />\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <relation>\n+            <!-- relation column is typed -->\n+            <column name=\"col1\" typeRef=\"tFooBarString\"/>\n+            <row>\n+                <literalExpression>\n+                    <text>tUntypedInput</text>\n+                </literalExpression>\n+            </row>\n+        </relation>\n+    </decision>\n+\n+    <!-- DECISION TABLES -->\n+\n+    <!-- decision with a single output decision table having no inputs that just echoes a given\n+    input as an output entry.  The DT has a variable typeRef so we can assert on\n+    the decision out -->\n+    <decision name=\"decision_dt_expression_001\" id=\"_decision_dt_expression_001\">\n+        <variable name=\"decision_dt_expression_001\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <decisionTable typeRef=\"tFooBarString\">\n+            <output/>\n+            <rule>\n+                <outputEntry>\n+                    <text>tUntypedInput</text>\n+                </outputEntry>\n+            </rule>\n+        </decisionTable>\n+    </decision>\n+\n+\n+    <!-- a decision with a multiple output decision table having no inputs that just echoes a given\n+    input as an output entries.  One output entry has a constrained typeRef -->\n+    <decision name=\"decision_dt_expression_002\" id=\"_decision_dt_expression_002\">\n+        <variable name=\"decision_dt_expression_002\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <decisionTable>\n+            <output name=\"col1\"/>\n+            <output name=\"col2\"/>\n+            <rule>\n+                <outputEntry typeRef=\"tFooBarString\">\n+                    <text>tUntypedInput</text>\n+                </outputEntry>\n+                <outputEntry>\n+                    <text>tUntypedInput</text>\n+                </outputEntry>\n+            </rule>\n+        </decisionTable>\n+    </decision>\n+\n+\n+    <!-- a decision with a multiple output decision table having no inputs that just echoes a given\n+    input as an output entries.  One output clause has a constrained typeRef -->\n+    <decision name=\"decision_dt_expression_003\" id=\"_decision_dt_expression_003\">\n+        <variable name=\"decision_dt_expression_003\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <decisionTable>\n+            <output name=\"col1\"  typeRef=\"tFooBarString\"/>\n+            <output name=\"col2\"/>\n+            <rule>\n+                <outputEntry>\n+                    <text>tUntypedInput</text>\n+                </outputEntry>\n+                <outputEntry>\n+                    <text>tUntypedInput</text>\n+                </outputEntry>\n+            </rule>\n+        </decisionTable>\n+    </decision>\n+\n+\n+    <!-- a decision with a single output decision table having a single input with\n+    a constrained type.  -->\n+    <decision name=\"decision_dt_expression_004\" id=\"_decision_dt_expression_004\">\n+        <variable name=\"decision_dt_expression_004\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <decisionTable>\n+            <input>\n+                <inputExpression>\n+                    <text>tUntypedInput</text>\n+                </inputExpression>\n+                <inputValues>\n+                    <text>\"foo\", \"bar\"</text>\n+                </inputValues>\n+            </input>\n+            <output/>\n+            <rule>\n+                <!-- complies with constrained input -->\n+                <inputEntry>\n+                    <text>\"foo\"</text>\n+                </inputEntry>\n+                <outputEntry>\n+                    <text>\"complies\"</text>\n+                </outputEntry>\n+            </rule>\n+            <rule>\n+                <!-- does not comply with constrained input -->\n+                <inputEntry>\n+                    <text>null</text>\n+                </inputEntry>\n+                <outputEntry>\n+                    <text>\"does not comply\"</text>\n+                </outputEntry>\n+            </rule>\n+        </decisionTable>\n+    </decision>\n+\n+    <!-- decision with a single output decision table having no inputs that just echoes a given\n+    input as an output entry.  The output clause is constrained by outputValues -->\n+    <decision name=\"decision_dt_expression_005\" id=\"_decision_dt_expression_005\">\n+        <variable name=\"decision_dt_expression_005\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <decisionTable typeRef=\"tFooBarString\">\n+            <output>\n+                <outputValues>\n+                    <text>\"foo\", \"bar\"</text>\n+                </outputValues>\n+            </output>\n+            <rule>\n+                <outputEntry>\n+                    <text>tUntypedInput</text>\n+                </outputEntry>\n+            </rule>\n+        </decisionTable>\n+    </decision>\n+\n+    <!-- INVOCATION -->\n+\n+    <!-- invocation defines a constrained param type -->\n+    <decision name=\"decision_invocation_expression_001\" id=\"_decision_invocation_expression_001\">\n+        <variable name=\"decision_invocation_expression_001\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <invocation>\n+            <literalExpression>\n+                <text>function(a) a</text>\n+            </literalExpression>\n+            <binding>\n+                <parameter name=\"a\" typeRef=\"tFooBarString\"/>\n+                <literalExpression><text>tUntypedInput</text></literalExpression>\n+            </binding>\n+        </invocation>\n+    </decision>\n+\n+    <!-- invocation defines a constrained return type -->\n+    <decision name=\"decision_invocation_expression_002\" id=\"_decision_invocation_expression_002\">\n+        <variable name=\"decision_invocation_expression_002\"/>\n+        <informationRequirement>\n+            <requiredInput href=\"#_tUntypedInput\"/>\n+        </informationRequirement>\n+        <invocation typeRef=\"tFooBarString\">\n+            <literalExpression>\n+                <text>function(a) a</text>\n+            </literalExpression>\n+            <binding>\n+                <parameter name=\"a\"/>\n+                <literalExpression><text>tUntypedInput</text></literalExpression>\n+            </binding>\n+        </invocation>\n+    </decision>\n+\n+\n+\n+\n+</definitions>\n+"
  }
]
