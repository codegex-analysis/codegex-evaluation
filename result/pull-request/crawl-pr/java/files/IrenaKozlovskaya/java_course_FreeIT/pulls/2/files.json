[
  {
    "sha": "c704c0535a53b74cbb77890fd3e48fae6a148583",
    "filename": "lesson_2/homework_2/additional_task_1/src/PositiveOrNegative.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_1/src/PositiveOrNegative.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_1/src/PositiveOrNegative.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_1/src/PositiveOrNegative.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,27 @@\n+public class PositiveOrNegative {\n+    /**\n+     * В переменную записываем число. Надо вывести на экран сколько в этом числе цифр и положительное оно или\n+     * отрицательное. Например, \"это однозначное положительное число\". Достаточно будет определить, является ли число\n+     * однозначным, \"двухзначным или трехзначным и более.\n+     */\n+    public static void main(String[] args) {\n+        int number = (int) (Math.random() * 1999) - 999;\n+        if (number == 0) {\n+            System.out.println(\"This number is 0\");\n+        } else if (number % 10 == number && number > 0) {\n+            System.out.println(number + \" This is a one-digit positive number\");\n+        } else if (number % 10 == number && number < 0) {\n+            System.out.println(number + \" This is a one-digit negative number\");\n+        } else if (number % 100 == number && number > 0) {\n+            System.out.println(number + \" This is a two-digit positive number\");\n+        } else if (number % 100 == number && number < 0) {\n+            System.out.println(number + \" This is a two-digit negative number\");\n+        } else if (number % 1000 == number && number > 0) {\n+            System.out.println(number + \" This is a three-digit positive number\");\n+        } else if (number % 1000 == number && number < 0) {\n+            System.out.println(number + \" This is a three-digit negative number\");\n+        }\n+\n+\n+    }\n+}"
  },
  {
    "sha": "581f0b306262f731ffcc809bf40c9ba5b49b337f",
    "filename": "lesson_2/homework_2/additional_task_10/src/SumOfNumbers.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_10/src/SumOfNumbers.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_10/src/SumOfNumbers.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_10/src/SumOfNumbers.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,12 @@\n+public class SumOfNumbers {\n+    /**\n+     * Вычислить: 1+2+4+8+...+256\n+     */\n+    public static void main(String[] args) {\n+        int sum = 0;\n+        for (int i = 1; i < 257; i += i) {\n+            sum += i;\n+        }\n+        System.out.println(sum);\n+    }\n+}"
  },
  {
    "sha": "d686cf8031f2ac633fc2d4807750536e95975f41",
    "filename": "lesson_2/homework_2/additional_task_11/src/Multiplication.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_11/src/Multiplication.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_11/src/Multiplication.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_11/src/Multiplication.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,14 @@\n+public class Multiplication {\n+    /**\n+     * Составьте программу, вычисляющую A*B, не пользуясь операцией умножения.\n+     */\n+    public static void main(String[] args) {\n+        int a = 5;\n+        int b = 8;\n+        int result = 0;\n+        for (int i = a; i > 0; i--) {\n+            result += b;\n+        }\n+        System.out.println(result);\n+    }\n+}"
  },
  {
    "sha": "533b6d41d3cb78bc566d70e88d2838c131f1ca72",
    "filename": "lesson_2/homework_2/additional_task_12/src/DistanceTable.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_12/src/DistanceTable.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_12/src/DistanceTable.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_12/src/DistanceTable.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,20 @@\n+public class DistanceTable {\n+    /**\n+     * Напишите программу печати таблицы перевода расстояний из дюймов в сантиметры\n+     * для значений длин от 1 до 20 дюймов. 1 дюйм = 2,54 см\n+     */\n+    public static void main(String[] args) {\n+        double centimeters = 2.54;\n+        for (int j = 1; j < 21; j++) {\n+            System.out.print(j + \" \");\n+        }\n+        System.out.println(\" \");\n+        for (int i = 1; i < 21; i++) {\n+            System.out.print(i * centimeters + \" \");\n+        }\n+\n+    }\n+}\n+\n+\n+"
  },
  {
    "sha": "7e5e4380fa4f625a689adce9215d5d857cecbfeb",
    "filename": "lesson_2/homework_2/additional_task_13/src/EvenNumbers.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_13/src/EvenNumbers.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_13/src/EvenNumbers.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_13/src/EvenNumbers.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,13 @@\n+public class EvenNumbers {\n+    /**\n+     * Напишите программу вывода всех четных чисел от 2 до 100 включительно\n+     */\n+    public static void main(String[] args) {\n+        for (int i = 2; i < 101; i++) {\n+            if (i % 2 == 0) {\n+                System.out.print(i + \" \");\n+            }\n+        }\n+    }\n+}\n+"
  },
  {
    "sha": "d841465c2ff3e69f5232bb39d951459875f1b721",
    "filename": "lesson_2/homework_2/additional_task_14/src/SumNegativeNumbers.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_14/src/SumNegativeNumbers.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_14/src/SumNegativeNumbers.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_14/src/SumNegativeNumbers.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,14 @@\n+public class SumNegativeNumbers {\n+    /**\n+     * Напишите программу, определяющую сумму всех нечетных чисел от 1 до 99\n+     */\n+    public static void main(String[] args) {\n+        int sum = 0;\n+        for (int i = 1; i < 100; i++) {\n+            if (i % 2 != 0) {\n+                sum += i;\n+            }\n+        }\n+        System.out.println(sum);\n+    }\n+}"
  },
  {
    "sha": "4275959e9680d2e9c593534b5b5b41063f59a479",
    "filename": "lesson_2/homework_2/additional_task_2/src/Triangle.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_2/src/Triangle.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_2/src/Triangle.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_2/src/Triangle.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,18 @@\n+public class Triangle {\n+    /**\n+     * Треугольник существует только тогда, когда сумма любых двух его сторон больше третьей.\n+     * Определить существует ли такой треугольник. Дано: a, b, c –стороны предполагаемого треугольника.\n+     * Требуется сравнить длину каждого отрезка-стороны с суммой двух других. Если хотя бы в одном случае\n+     * отрезок окажется больше суммы двух других, то треугольника с такими сторонами не существует.\n+     */\n+    public static void main(String[] args) {\n+        int a = (int) (Math.random() * 10);\n+        int b = (int) (Math.random() * 10);\n+        int c = (int) (Math.random() * 10);\n+        if (a + b > c && a + c > b && c + b > a) {\n+            System.out.println(a + \" \" + b + \" \" + c + \" Such a triangle exists\");\n+        } else {\n+            System.out.println(\"No such triangle exists\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "63df07961fe89d4f7a3ad055c43b3b26dbc3acc1",
    "filename": "lesson_2/homework_2/additional_task_3/src/IntegerActions.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_3/src/IntegerActions.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_3/src/IntegerActions.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_3/src/IntegerActions.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,19 @@\n+public class IntegerActions {\n+    /**\n+     * Дано целое число. Если оно является положительным, то прибавить к нему 1.\n+     * Если отрицательным, то вычесть из него 2. Если нулевым, то заменить его на 10.\n+     * Вывести полученное число\n+     */\n+    public static void main(String[] args) {\n+        int number = (int) (Math.random() * 21) - 10;\n+        System.out.println(number);\n+        if (number > 0) {\n+            number += 1;\n+        } else if (number < 0) {\n+            number -= 2;\n+        } else {\n+            number = 10;\n+        }\n+        System.out.println(number);\n+    }\n+}"
  },
  {
    "sha": "87d7a97427ed9412d4fb2af7a9b3fe1c24385ac0",
    "filename": "lesson_2/homework_2/additional_task_4/src/PositiveNumbers.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_4/src/PositiveNumbers.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_4/src/PositiveNumbers.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_4/src/PositiveNumbers.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,17 @@\n+public class PositiveNumbers {\n+    /**\n+     * Даны 3 целых числа. Найти количество положительных чисел в исходном наборе.\n+     */\n+\n+    public static void main(String[] args) {\n+        int positive = 0;\n+        for (int i = 0; i < 3; i++) {\n+            int a = (int) (Math.random() * 21) - 10;\n+            System.out.println(a);\n+            if (a > 0) {\n+                positive++;\n+            }\n+        }\n+        System.out.println(positive + \" positive numbers\");\n+    }\n+}"
  },
  {
    "sha": "7b316accbece51f436d004107ab662ae2e219f5b",
    "filename": "lesson_2/homework_2/additional_task_5/src/ExceptZero.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_5/src/ExceptZero.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_5/src/ExceptZero.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_5/src/ExceptZero.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,19 @@\n+public class ExceptZero {\n+    /**\n+     * Даны 3 целых числа. Найти количество положительных и отрицательных чисел в исходном наборе.\n+     */\n+    public static void main(String[] args) {\n+        int positive = 0;\n+        int negative = 0;\n+        for (int i = 0; i < 3; i++) {\n+            int number = (int) (Math.random() * 21) - 10;\n+            System.out.println(number);\n+            if (number > 0) {\n+                positive++;\n+            } else if (number < 0) {\n+                negative++;\n+            }\n+        }\n+        System.out.println(positive + \" positive numbers and \" + negative + \" negative numbers\");\n+    }\n+}"
  },
  {
    "sha": "4b5e7fb8146d3e019dec6c234e4e7f6a8a2ca9d1",
    "filename": "lesson_2/homework_2/additional_task_6/src/MaxNumber.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_6/src/MaxNumber.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_6/src/MaxNumber.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_6/src/MaxNumber.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,10 @@\n+public class MaxNumber {\n+    /**\n+     * Даны 2 числа. Вывести большее из них\n+     */\n+    public static void main(String[] args) {\n+        int a = 2;\n+        int b = -2;\n+        System.out.println(Math.max(a, b));\n+    }\n+}"
  },
  {
    "sha": "8a020e7ce98d08d06b212030ff98040c735b11f4",
    "filename": "lesson_2/homework_2/additional_task_7/src/Programmers.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_7/src/Programmers.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_7/src/Programmers.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_7/src/Programmers.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,27 @@\n+public class Programmers {\n+    /**\n+     * В переменную записываете количество программистов.\n+     * В зависимости от количества программистов необходимо вывести правильно окончание.\n+     * Например: • 2 программиста • 1 программиста • 10 программистов • и т.д.\n+     */\n+    public static void main(String[] args) {\n+        int programmers = (int) (Math.random() * 100);\n+        if (programmers % 100 == 11 || programmers % 100 == 12 || programmers % 100 == 13 || programmers % 100 == 14) {\n+            System.out.println(programmers + \" программистов\");\n+        } else {\n+            switch (programmers % 10) {\n+                case 1:\n+                    System.out.println(programmers + \" программист\");\n+                    break;\n+                case 2:\n+                case 3:\n+                case 4:\n+                    System.out.println(programmers + \" программиста\");\n+                    break;\n+                default:\n+                    System.out.println(programmers + \" программистов\");\n+                    break;\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "f1e0cb5b7649d55b52186b917703d105462d04fa",
    "filename": "lesson_2/homework_2/additional_task_8/src/Sportsman.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_8/src/Sportsman.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_8/src/Sportsman.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_8/src/Sportsman.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,17 @@\n+public class Sportsman {\n+    /**\n+     * Начав тренировки, спортсмен в первый день пробежал 10 км.\n+     * Каждый день он увеличивал дневную норму на 10% нормы предыдущего дня.\n+     * Какой суммарный путь пробежит спортсмен за 7 дней?\n+     */\n+    public static void main(String[] args) {\n+        double km = 10;\n+\n+        for (int i = 0; i < 7; i++) {\n+            km += km / 100 * 10;\n+        }\n+        System.out.printf(\"%.2f\", km);\n+    }\n+\n+\n+}"
  },
  {
    "sha": "814d04307b8c2ce535d3a4c5bbb638fea07a1747",
    "filename": "lesson_2/homework_2/additional_task_9/src/Amoeba.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_9/src/Amoeba.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/homework_2/additional_task_9/src/Amoeba.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/homework_2/additional_task_9/src/Amoeba.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,14 @@\n+public class Amoeba {\n+    /**\n+     * Одноклеточная амеба каждые 3 часа делится на 2 клетки.\n+     * Определить,сколько амеб будет через 3, 6, 9, 12,..., 24 часа.\n+     */\n+\n+    public static void main(String[] args) {\n+        int cells = 1;\n+        for (int i = 3; i < 25; i += 3) {\n+            cells *= 2;\n+            System.out.println(cells + \" cells after \" + i + \" hours\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "03479bce967134bdbe6ece87096d82d3af60f826",
    "filename": "lesson_2/task_10/src/FactorialinRange.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_10/src/FactorialinRange.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_10/src/FactorialinRange.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_10/src/FactorialinRange.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,13 @@\n+public class FactorialinRange {\n+    /**\n+     * Посчитать факториал числа в границах от 10 до 15 (не используя рекурсию).\n+     */\n+    public static void main(String... arg) {\n+        int factorial = 1;\n+        int x = (int) (Math.random() * (15 - 10) + 10);\n+        for (int i = 1; i <= x; i++) {\n+            factorial = factorial * i;\n+        }\n+        System.out.println(factorial + \" this is a factorial of the number \" + x);\n+    }\n+}"
  },
  {
    "sha": "4f0975b44bd08c67be0960a54226601c36aabacf",
    "filename": "lesson_2/task_11/src/PrimeNumber.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_11/src/PrimeNumber.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_11/src/PrimeNumber.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_11/src/PrimeNumber.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,24 @@\n+public class PrimeNumber {\n+    /**\n+     * Имеется целое число, определить является ли это число простым, т.е.\n+     * делится без остатка только на 1 и себя.\n+     */\n+    public static void main(String... arg) {\n+        int count = 0;\n+        int number = (int) (Math.random() * 100);\n+        if (number == 0 || number == 1) {\n+            System.out.println(number + \" the number is not prime\");\n+        } else {\n+            for (int i = 2; i < number; i++) {\n+                if (number % i == 0 && number != i) {\n+                    System.out.println(number + \" the number is not prime\");\n+                    count++;\n+                    break;\n+                }\n+            }\n+            if (count == 0) {\n+                System.out.println(number + \" the number is prime\");\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "73d924f425fdcb1172bae4a9d04527cd8518fc59",
    "filename": "lesson_2/task_12/src/Sum.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_12/src/Sum.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_12/src/Sum.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_12/src/Sum.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,21 @@\n+public class Sum {\n+    /**\n+     * Найдите сумму первых n целых чисел, которые делятся на 3.\n+     */\n+    public static void main(String... arg) {\n+        int sum = 0;\n+        int numbers = 0;\n+        int n = (int) (Math.random() * 10);\n+        for (int i = 0; i < n; i++) {\n+            while (true) {\n+                numbers = (int) (Math.random() * 100);\n+                if (numbers % 3 == 0) {\n+                    System.out.println(numbers);\n+                    break;\n+                }\n+            }\n+            sum += numbers;\n+        }\n+        System.out.println(\"The sum of the first \" + n + \" numbers is \" + sum);\n+    }\n+}"
  },
  {
    "sha": "3a9106d7470b9d4dddff870fa45226be3aebb3d9",
    "filename": "lesson_2/task_13/src/ArrayofNumbers.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_13/src/ArrayofNumbers.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_13/src/ArrayofNumbers.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_13/src/ArrayofNumbers.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,17 @@\n+public class ArrayofNumbers {\n+    /**\n+     * Создать последовательность случайных чисел, найти и вывести наибольшее\n+     * из них.\n+     */\n+    public static void main(String... arg) {\n+        int minNumber = -2147483648;\n+        for (int i = 0; i < 10; i++) {\n+            int numbers = (int) (Math.random() * 201) - 100;\n+            System.out.println(numbers);\n+            if (numbers > minNumber) {\n+                minNumber = numbers;\n+            }\n+        }\n+        System.out.println(minNumber + \" is MAX\");\n+    }\n+}"
  },
  {
    "sha": "fa56519a3d9a235cbe0320de5661e96b72d95d82",
    "filename": "lesson_2/task_14/src/ArrayofMarks.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_14/src/ArrayofMarks.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_14/src/ArrayofMarks.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_14/src/ArrayofMarks.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,23 @@\n+public class ArrayofMarks {\n+    /**\n+     * Создать массив оценок произвольной длины, вывести максимальную и\n+     * минимальную оценку, её (их) номера.\n+     */\n+    public static void main(String... arg) {\n+\n+        int[] array = new int[]{6, -5, 10, 8, 9, 4, 2, -12, 1, 3};\n+        int maxNumber = 0;\n+        int minNumber = 0;\n+        for (int i = 1; i < array.length - 1; i++) {\n+            if (array[maxNumber] < array[i]) {\n+                array[maxNumber] = array[i];\n+                maxNumber = i;\n+            } else if (array[minNumber] > array[i]) {\n+                array[minNumber] = array[i];\n+                minNumber = i;\n+            }\n+        }\n+        System.out.println(maxNumber);\n+        System.out.println(minNumber);\n+    }\n+}"
  },
  {
    "sha": "54881fd6d2dea2fab26d26892d116419c1ec5f9b",
    "filename": "lesson_2/task_15/src/TurnArray.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_15/src/TurnArray.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_15/src/TurnArray.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_15/src/TurnArray.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,25 @@\n+public class TurnArray {\n+    /**\n+     * Создать массив, заполнить его случайными элементами, распечатать,\n+     * перевернуть, и снова распечатать (при переворачивании нежелательно создавать\n+     * еще один массив).\n+     */\n+    public static void main(String[] args) {\n+        int keeper = 0;\n+        int[] array = new int[10];\n+        for (int i = 0; i < array.length; i++) {\n+            array[i] = (int) (Math.random() * 100);\n+            System.out.println(array[i]);\n+        }\n+        System.out.println(\" \");\n+\n+        for (int i = 0; i < array.length / 2; i++) {\n+            keeper = array[array.length - i - 1];\n+            array[array.length - i - 1] = array[i];\n+            array[i] = keeper;\n+        }\n+        for (int i = 0; i < array.length; i++) {\n+            System.out.println(array[i]);\n+        }\n+    }\n+}"
  },
  {
    "sha": "7e5714a8829e3350506f29d0216ffe28b69b3088",
    "filename": "lesson_2/task_16/src/SumArray.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_16/src/SumArray.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_16/src/SumArray.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_16/src/SumArray.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,28 @@\n+public class SumArray {\n+    /**\n+     * Определите сумму элементов одномерного массива, расположенных между\n+     * минимальным и максимальным значениями.\n+     */\n+    public static void main(String[] args) {\n+        int[] array = new int[]{15, 7, 10, 30, 26, 8, 11, 1, 12, 13, 2};\n+        int sum = 0;\n+        int indexMax = 0;\n+        int indexMin = 0;\n+        int max = array[array.length - 1];\n+        int min = array[array.length - 1];\n+        for (int i = 0; i < array.length - 1; i++) {\n+            if (max < array[i]) {\n+                max = array[i];\n+                indexMax = i;\n+            } else if (min > array[i]) {\n+                min = array[i];\n+                indexMin = i;\n+            }\n+        }\n+        for (int i = Math.min(indexMax, indexMin) + 1; i < Math.max(indexMax, indexMin); i++) {\n+            sum += array[i];\n+        }\n+        System.out.println(sum);\n+\n+    }\n+}"
  },
  {
    "sha": "86ba1565d4e288725c937a9e4a5b466c42ecce36",
    "filename": "lesson_2/task_17/src/Butterfly.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_17/src/Butterfly.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_17/src/Butterfly.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_17/src/Butterfly.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,30 @@\n+public class Butterfly {\n+    /**\n+     * Создать двухмерный квадратный массив, и заполнить его «бабочкой», т.е\n+     * таким образом:\n+     * 1 1 1 1 1\n+     * 0 1 1 1 0\n+     * 0 0 1 0 0\n+     * 0 1 1 1 0\n+     * 1 1 1 1 1\n+     */\n+    public static void main(String[] args) {\n+        int[][] array = new int[5][5];\n+        for (int i = 0; i < array.length; i++) {\n+            for (int j = 0; j < array[i].length; j++) {\n+                if (i <= array.length / 2) {\n+                    if (i <= j && array.length - i > j) {\n+                        array[i][j] = 1;\n+                    }\n+                }\n+                if (i > array.length / 2) {\n+                    if (i >= j && array.length - j - 1 <= i) {\n+                        array[i][j] = 1;\n+                    }\n+                }\n+                System.out.print(array[i][j] + \" \");\n+            }\n+            System.out.println(\" \");\n+        }\n+    }\n+}"
  },
  {
    "sha": "6b43cef900392da760e48839a25da18b1527750d",
    "filename": "lesson_2/task_6/src/CreateNumber.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_6/src/CreateNumber.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_6/src/CreateNumber.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_6/src/CreateNumber.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,24 @@\n+import java.util.Random;\n+\n+public class CreateNumber {\n+    /**\n+     * Создайте число. Определите, является ли число трехзначным. Определите, является\n+     * ли его последняя цифра семеркой. Определите, является ли число четным.\n+     */\n+    public static void main(String... arg) {\n+        int number = (int) (Math.random() * 1000);\n+        String s = Integer.toString(number);\n+        System.out.println(number);\n+        if (s.length() == 3) {\n+            System.out.println(\"This is a three-digit number\");\n+        }\n+        if (number % 10 == 7) {\n+            System.out.println(\"The last digit is 7\");\n+        }\n+        if (number % 2 == 0) {\n+            System.out.println(\"This number is even\");\n+        }\n+\n+\n+    }\n+}"
  },
  {
    "sha": "e9fd82ec0460dc2950a3f7aea94176cecad59c12",
    "filename": "lesson_2/task_7/src/Theorem.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_7/src/Theorem.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_7/src/Theorem.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_7/src/Theorem.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,18 @@\n+public class Theorem {\n+    /**\n+     * Имеется прямоугольное отверстие размерами a и b, определить, можно ли его\n+     * полностью закрыть круглой картонкой радиусом r.\n+     */\n+    public static void main(String... arg) {\n+        int r = 4;       // radius\n+        int a = 2;       // length\n+        int b = 6;       // width\n+        int hypotenuse = (int) Math.sqrt(a * a + b * b);\n+        int diameter = r * 2;\n+        if (diameter > hypotenuse) {\n+            System.out.println(\"True\");\n+        } else {\n+            System.out.println(\"False\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "45d735d721bf64ac3a2b325324f88ca70e91cc0c",
    "filename": "lesson_2/task_8/src/Rubles.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_8/src/Rubles.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_8/src/Rubles.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_8/src/Rubles.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,22 @@\n+import java.util.Random;\n+\n+public class Rubles {\n+    /**\n+     *Имеется целове число (задать с помощью Random rand = new Random(); int x =\n+     * rand.nextInt() ). Это число – количесво денег в рублях. Вывести это число, добавив к\n+     * нему слово «рублей» в правильном падеже.\n+     */\n+    public static void main(String... arg) {\n+        Random rand = new Random();\n+        int x = rand.nextInt();\n+        if (x % 10 == 1 || x % 10 == -1) {\n+            System.out.println(x + \" рубль\");\n+        } else if (x % 100 == 12 || x % 100 == -12 || x % 100 == 13 || x % 100 == -13 || x % 100 == 14 || x % 100 == -14) {\n+            System.out.println(x + \" рублей\");\n+        } else if (x % 10 == 2 || x % 10 == -2 || x % 10 == 3 || x % 10 == -3 || x % 10 == 4 || x % 10 == -4) {\n+            System.out.println(x + \" рубля\");\n+        } else {\n+            System.out.println(x + \" рублей\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "7e778dec79ba96c8be8902f96084e3cc204ffb81",
    "filename": "lesson_2/task_9/src/Factorial.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/blob/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_9/src/Factorial.java",
    "raw_url": "https://github.com/IrenaKozlovskaya/java_course_FreeIT/raw/465ad2430cdbfed57d26c37866cdb87f6b7f73b1/lesson_2/task_9/src/Factorial.java",
    "contents_url": "https://api.github.com/repos/IrenaKozlovskaya/java_course_FreeIT/contents/lesson_2/task_9/src/Factorial.java?ref=465ad2430cdbfed57d26c37866cdb87f6b7f73b1",
    "patch": "@@ -0,0 +1,35 @@\n+public class Factorial {\n+    /**\n+     * Изменить пример с суммой чисел таким образом, чтобы рассчитывалась не сумма, а\n+     * произведение, т.е. факториал числа.\n+     * <p>\n+     * <p>\n+     * double averageSum = 0;\n+     * double sum = 0;\n+     * int n = 0;\n+     * int x = (int)(Math.random() * 20);\n+     * while(x != 0) {\n+     * sum += x;\n+     * n ++;\n+     * x = (int)(Math.random()*20);\n+     * }\n+     * if(n != 0){\n+     * averageSum = sum / n;\n+     * } else {\n+     * averageSum = 0;\n+     * }\n+     * System.out.println(\"среднее:\" + averageSum);\n+     */\n+    public static void main(String... arg) {\n+        long factorial = 1;\n+        int x = (int) (Math.random() * 20);\n+        while (x != 0) {\n+            for (int i = 1; i <= x; i++) {\n+                factorial = factorial * i;\n+            }\n+            System.out.println(factorial + \" this is a factorial of the number \" + x);\n+            factorial = 1;\n+            x = (int) (Math.random() * 20);\n+        }\n+    }\n+}"
  }
]
