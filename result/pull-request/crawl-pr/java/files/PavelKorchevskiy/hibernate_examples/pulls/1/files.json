[
  {
    "sha": "5b2ca104de322c2201e415615fdc18e5a3f78646",
    "filename": "src/main/java/com/examples/joined_table/AnimalJ.java",
    "status": "modified",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/joined_table/AnimalJ.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/joined_table/AnimalJ.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/joined_table/AnimalJ.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,6 +1,7 @@\n package com.examples.joined_table;\n \n import java.io.Serializable;\n+import java.util.Objects;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.GeneratedValue;\n@@ -46,4 +47,28 @@ public void setName(String name) {\n     this.name = name;\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    AnimalJ animalJ = (AnimalJ) o;\n+    return id == animalJ.id && Objects.equals(name, animalJ.name);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(id, name);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"AnimalJ{\" +\n+        \"id=\" + id +\n+        \", name='\" + name + '\\'' +\n+        '}';\n+  }\n }"
  },
  {
    "sha": "f63836e5acc2ff507260c1951d5b490222cb77b2",
    "filename": "src/main/java/com/examples/joined_table/CatJ.java",
    "status": "modified",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/joined_table/CatJ.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/joined_table/CatJ.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/joined_table/CatJ.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,5 +1,6 @@\n package com.examples.joined_table;\n \n+import java.util.Objects;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.PrimaryKeyJoinColumn;\n@@ -26,4 +27,33 @@ public int getCountOfEatenMice() {\n   public void setCountOfEatenMice(int countOfEatenMice) {\n     this.countOfEatenMice = countOfEatenMice;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    CatJ catJ = (CatJ) o;\n+    return countOfEatenMice == catJ.countOfEatenMice;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(super.hashCode(), countOfEatenMice);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"CatJ{\" +\n+        \"id=\" + getId() +\n+        \", name=\" + getName() +\n+        \", countOfEatenMice=\" + countOfEatenMice +\n+        '}';\n+  }\n }"
  },
  {
    "sha": "721cb28f232e6aa96692e7919b9a16c59d98b853",
    "filename": "src/main/java/com/examples/joined_table/DogJ.java",
    "status": "modified",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/joined_table/DogJ.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/joined_table/DogJ.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/joined_table/DogJ.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,5 +1,6 @@\n package com.examples.joined_table;\n \n+import java.util.Objects;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.PrimaryKeyJoinColumn;\n@@ -28,4 +29,33 @@ public boolean isGoodBoy() {\n   public void setGoodBoy(boolean goodBoy) {\n     isGoodBoy = goodBoy;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    DogJ dogJ = (DogJ) o;\n+    return isGoodBoy == dogJ.isGoodBoy;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(super.hashCode(), isGoodBoy);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"DogJ{\" +\n+        \"id=\" + getId() +\n+        \", name=\" + getName() +\n+        \", isGoodBoy=\" + isGoodBoy +\n+        '}';\n+  }\n }"
  },
  {
    "sha": "77393798bfe72bc344ccc77a14b26744f0e475bd",
    "filename": "src/main/java/com/examples/joined_table/Start.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/joined_table/Start.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/joined_table/Start.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/joined_table/Start.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,7 +1,9 @@\n package com.examples.joined_table;\n \n import com.examples.HibernateSessionFactory;\n+import java.util.List;\n import org.hibernate.Session;\n+import org.hibernate.query.Query;\n \n public class Start {\n \n@@ -14,6 +16,13 @@ public static void main(String[] args) {\n     session.save(dog);\n     session.getTransaction().commit();\n     session.close();\n+    System.out.println(getAnimals());\n+  }\n+\n+  private static List<AnimalJ> getAnimals() {\n+    Session session = HibernateSessionFactory.getSessionFactory().openSession();\n+    Query<AnimalJ> query = session.createQuery(\"from AnimalJ \");\n+    return query.list();\n   }\n \n }"
  },
  {
    "sha": "f825b759c4aef25ea6f323dcb251c5bc767131a8",
    "filename": "src/main/java/com/examples/mapping/Start.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/mapping/Start.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/mapping/Start.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/mapping/Start.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -30,11 +30,11 @@ public static void main(String[] args) {\n     System.out\n         .println(\"_______ \" + query.stream().findAny().orElseThrow(IllegalArgumentException::new));\n     //criteria\n-    System.out.println(\"____________________________________-\");\n+    System.out.println(\"__________________________________-\");\n     Criteria criteria = session.createCriteria(Barista.class)\n         .add(Restrictions.eq(\"name\", \"Jaugen\"));\n     criteria.list().forEach(System.out::println);\n-    System.out.println(\"____________________________________-\");\n+    System.out.println(\"__________________________________-\");\n     //criteria 2.0\n     CriteriaBuilder criteriaBuilder = session.getCriteriaBuilder();\n     CriteriaQuery<Table> criteriaQuery = criteriaBuilder.createQuery(Table.class);"
  },
  {
    "sha": "f57d5c97697b42d956d22fcbb193ca94edda361e",
    "filename": "src/main/java/com/examples/single_table/Animal.java",
    "status": "modified",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/single_table/Animal.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/single_table/Animal.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/single_table/Animal.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,6 +1,7 @@\n package com.examples.single_table;\n \n import java.io.Serializable;\n+import java.util.Objects;\n import javax.persistence.Column;\n import javax.persistence.DiscriminatorColumn;\n import javax.persistence.DiscriminatorType;\n@@ -48,4 +49,28 @@ public void setName(String name) {\n     this.name = name;\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    Animal animal = (Animal) o;\n+    return id == animal.id && Objects.equals(name, animal.name);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(id, name);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"Animal{\" +\n+        \"id=\" + id +\n+        \", name='\" + name + '\\'' +\n+        '}';\n+  }\n }"
  },
  {
    "sha": "4322c055e61df8a2654892d78d6b478e8994d817",
    "filename": "src/main/java/com/examples/single_table/Cat.java",
    "status": "modified",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/single_table/Cat.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/single_table/Cat.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/single_table/Cat.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,5 +1,6 @@\n package com.examples.single_table;\n \n+import java.util.Objects;\n import javax.persistence.Column;\n import javax.persistence.DiscriminatorValue;\n import javax.persistence.Entity;\n@@ -26,4 +27,31 @@ public int getCountOfEatenMice() {\n   public void setCountOfEatenMice(int countOfEatenMice) {\n     this.countOfEatenMice = countOfEatenMice;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    Cat cat = (Cat) o;\n+    return countOfEatenMice == cat.countOfEatenMice;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(super.hashCode(), countOfEatenMice);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"Cat{\" +\n+        \"countOfEatenMice=\" + countOfEatenMice +\n+        \"} \" + super.toString();\n+  }\n }"
  },
  {
    "sha": "b3163fddb6db31bc2ea0126fdc8fb0e20168a6e9",
    "filename": "src/main/java/com/examples/single_table/Dog.java",
    "status": "modified",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/single_table/Dog.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/single_table/Dog.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/single_table/Dog.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,5 +1,6 @@\n package com.examples.single_table;\n \n+import java.util.Objects;\n import javax.persistence.Column;\n import javax.persistence.DiscriminatorValue;\n import javax.persistence.Entity;\n@@ -28,4 +29,31 @@ public boolean isGoodBoy() {\n   public void setGoodBoy(boolean goodBoy) {\n     isGoodBoy = goodBoy;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    Dog dog = (Dog) o;\n+    return isGoodBoy == dog.isGoodBoy;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(super.hashCode(), isGoodBoy);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"Dog{\" +\n+        \"isGoodBoy=\" + isGoodBoy +\n+        \"} \" + super.toString();\n+  }\n }"
  },
  {
    "sha": "9d9b3f22793d536b342ac78d7fca185fb268fc9b",
    "filename": "src/main/java/com/examples/single_table/Start.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/single_table/Start.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/single_table/Start.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/single_table/Start.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,7 +1,9 @@\n package com.examples.single_table;\n \n import com.examples.HibernateSessionFactory;\n+import java.util.List;\n import org.hibernate.Session;\n+import org.hibernate.query.Query;\n \n public class Start {\n \n@@ -14,6 +16,12 @@ public static void main(String[] args) {\n     session.save(dog);\n     session.getTransaction().commit();\n     session.close();\n+    System.out.println(getAllAnimals());\n   }\n \n+  private static List<Animal> getAllAnimals() {\n+    Session session = HibernateSessionFactory.getSessionFactory().openSession();\n+    Query<Animal> query = session.createQuery(\"from Animal \");\n+    return query.list();\n+  }\n }"
  },
  {
    "sha": "c0d8b34fc01854552cf029caed124e13844104e0",
    "filename": "src/main/java/com/examples/table_per_class/AnimalTC.java",
    "status": "modified",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/table_per_class/AnimalTC.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/table_per_class/AnimalTC.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/table_per_class/AnimalTC.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,6 +1,7 @@\n package com.examples.table_per_class;\n \n import java.io.Serializable;\n+import java.util.Objects;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.GeneratedValue;\n@@ -46,4 +47,28 @@ public void setName(String name) {\n     this.name = name;\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    AnimalTC animalTC = (AnimalTC) o;\n+    return id == animalTC.id && Objects.equals(name, animalTC.name);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(id, name);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"AnimalTC{\" +\n+        \"id=\" + id +\n+        \", name='\" + name + '\\'' +\n+        '}';\n+  }\n }"
  },
  {
    "sha": "783be9110e98316336da81ec56e9040ffefe391b",
    "filename": "src/main/java/com/examples/table_per_class/CatTC.java",
    "status": "modified",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/table_per_class/CatTC.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/table_per_class/CatTC.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/table_per_class/CatTC.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,6 +1,7 @@\n package com.examples.table_per_class;\n \n \n+import java.util.Objects;\n import javax.persistence.Column;\n import javax.persistence.DiscriminatorValue;\n import javax.persistence.Entity;\n@@ -27,4 +28,31 @@ public int getCountOfEatenMice() {\n   public void setCountOfEatenMice(int countOfEatenMice) {\n     this.countOfEatenMice = countOfEatenMice;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    CatTC catTC = (CatTC) o;\n+    return countOfEatenMice == catTC.countOfEatenMice;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(super.hashCode(), countOfEatenMice);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"CatTC{\" +\n+        \"countOfEatenMice=\" + countOfEatenMice +\n+        \"} \" + super.toString();\n+  }\n }"
  },
  {
    "sha": "58f83b16813cf794e42aca24c5af74a51dae1240",
    "filename": "src/main/java/com/examples/table_per_class/DogTC.java",
    "status": "modified",
    "additions": 28,
    "deletions": 1,
    "changes": 29,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/table_per_class/DogTC.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/table_per_class/DogTC.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/table_per_class/DogTC.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,6 +1,7 @@\n package com.examples.table_per_class;\n \n \n+import java.util.Objects;\n import javax.persistence.Column;\n import javax.persistence.DiscriminatorValue;\n import javax.persistence.Entity;\n@@ -12,7 +13,6 @@\n   @Column(name = \"isGoodBoy\")\n   private boolean isGoodBoy;\n \n-  //all dogs default good boys)\n   public DogTC() {\n     this.isGoodBoy = true;\n   }\n@@ -29,4 +29,31 @@ public boolean isGoodBoy() {\n   public void setGoodBoy(boolean goodBoy) {\n     isGoodBoy = goodBoy;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    DogTC dogTC = (DogTC) o;\n+    return isGoodBoy == dogTC.isGoodBoy;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(super.hashCode(), isGoodBoy);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"DogTC{\" +\n+        \"isGoodBoy=\" + isGoodBoy +\n+        \"} \" + super.toString();\n+  }\n }"
  },
  {
    "sha": "6861eb6875a6cce60078f4d7a24d681304a161f1",
    "filename": "src/main/java/com/examples/table_per_class/Start.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/PavelKorchevskiy/hibernate_examples/blob/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/table_per_class/Start.java",
    "raw_url": "https://github.com/PavelKorchevskiy/hibernate_examples/raw/77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1/src/main/java/com/examples/table_per_class/Start.java",
    "contents_url": "https://api.github.com/repos/PavelKorchevskiy/hibernate_examples/contents/src/main/java/com/examples/table_per_class/Start.java?ref=77ffe51e8dbdd7549ae73aeb172676d6ce0a22b1",
    "patch": "@@ -1,7 +1,9 @@\n package com.examples.table_per_class;\n \n import com.examples.HibernateSessionFactory;\n+import java.util.List;\n import org.hibernate.Session;\n+import org.hibernate.query.Query;\n \n public class Start {\n \n@@ -14,6 +16,13 @@ public static void main(String[] args) {\n     session.save(dog);\n     session.getTransaction().commit();\n     session.close();\n+    System.out.println(getAllAnimals());\n+  }\n+\n+  private static List<AnimalTC> getAllAnimals() {\n+    Session session = HibernateSessionFactory.getSessionFactory().openSession();\n+    Query<AnimalTC> query = session.createQuery(\"from AnimalTC \");\n+    return query.list();\n   }\n \n }"
  }
]
