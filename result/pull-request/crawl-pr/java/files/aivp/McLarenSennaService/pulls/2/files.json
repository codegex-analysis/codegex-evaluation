[
  {
    "sha": "f1b46f3d5d4c26f501d19f835978cac4e83f514e",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 16,
    "deletions": 1,
    "changes": 17,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/pom.xml",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/pom.xml",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/pom.xml?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -16,7 +16,7 @@\n     </parent>\n     <groupId>aiot.mclaren</groupId>\n     <artifactId>senna</artifactId>\n-    <version>0.0.3-SNAPSHOT</version>\n+    <version>0.0.6-SNAPSHOT</version>\n     <name>senna</name>\n     <description>dms project for aiot system</description>\n     <properties>\n@@ -125,6 +125,12 @@\n                 <version>${mybatis.plus.version}</version>\n             </dependency>\n \n+            <dependency>\n+                <groupId>com.baomidou</groupId>\n+                <artifactId>mybatis-plus-annotation</artifactId>\n+                <version>${mybatis.plus.version}</version>\n+            </dependency>\n+\n             <dependency>\n                 <groupId>com.baomidou</groupId>\n                 <artifactId>mybatis-plus-generator</artifactId>\n@@ -192,4 +198,13 @@\n             </snapshots>\n         </repository>\n     </repositories>\n+\n+    <distributionManagement>\n+        <repository>\n+            <!--必须与 settings.xml 的 id 一致-->\n+            <id>njaidong-maven-base</id>\n+            <name>base</name>\n+            <url>https://njaidong-maven.pkg.coding.net/repository/maven/base/</url>\n+        </repository>\n+    </distributionManagement>\n </project>"
  },
  {
    "sha": "32b15c32482dd97c9efbe59ce9c6d68777825f25",
    "filename": "senna-host/pom.xml",
    "status": "modified",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/pom.xml",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/pom.xml",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/pom.xml?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -5,7 +5,7 @@\n     <parent>\n         <artifactId>senna</artifactId>\n         <groupId>aiot.mclaren</groupId>\n-        <version>0.0.3-SNAPSHOT</version>\n+        <version>0.0.6-SNAPSHOT</version>\n     </parent>\n     <modelVersion>4.0.0</modelVersion>\n     <packaging>jar</packaging>\n@@ -61,6 +61,11 @@\n             <artifactId>senna-sdk</artifactId>\n         </dependency>\n \n+        <dependency>\n+            <groupId>aiot.mclaren</groupId>\n+            <artifactId>commons</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>io.springfox</groupId>\n             <artifactId>springfox-swagger2</artifactId>\n@@ -132,6 +137,11 @@\n             <artifactId>spring-boot-starter-actuator</artifactId>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-quartz</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>com.aliyun.oss</groupId>\n             <artifactId>aliyun-sdk-oss</artifactId>"
  },
  {
    "sha": "cf53c78f547dc9530e962b8b9c667957e752735a",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/SennaApplication.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/SennaApplication.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/SennaApplication.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/SennaApplication.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -4,6 +4,7 @@\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n import org.springframework.cloud.client.discovery.EnableDiscoveryClient;\n import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.scheduling.annotation.EnableAsync;\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n \n /**\n@@ -14,6 +15,7 @@\n @EnableTransactionManagement\n @EnableDiscoveryClient\n @ComponentScan(basePackages = \"aiot.mclaren\")\n+@EnableAsync\n public class SennaApplication {\n     public static void main(String[] args) {\n         SpringApplication.run(SennaApplication.class, args);"
  },
  {
    "sha": "903d18dc4982ffdfca349555fcde7ecf46f96ebf",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/common/OssKeyUtil.java",
    "status": "modified",
    "additions": 19,
    "deletions": 3,
    "changes": 22,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/common/OssKeyUtil.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/common/OssKeyUtil.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/common/OssKeyUtil.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -1,5 +1,6 @@\n package aiot.mclaren.senna.host.common;\n \n+import cn.hutool.core.util.IdUtil;\n import cn.hutool.core.util.RandomUtil;\n \n import java.time.Instant;\n@@ -10,9 +11,24 @@\n  */\n public class OssKeyUtil {\n     public static final String OSS_KEY_PREFIX = \"iot/\";\n+    public static final String THING_CONFIG_KEY = \"thingConfig/\";\n+    public static final String OTA_FIRMWARE_KEY = \"ota/\";\n \n-    public static String getKey(String productKey, String mod) {\n-        return OSS_KEY_PREFIX + productKey + \"/\" + mod + \"/\" + Instant.now().toEpochMilli() + \"_\" + RandomUtil\n-            .randomString(8);\n+    private static String generateKey(String mod, String... childKeys) {\n+        StringBuilder key = new StringBuilder(OSS_KEY_PREFIX + mod);\n+        for (String childPath : childKeys) {\n+            key.append(childPath).append(\"/\");\n+        }\n+        key.append(IdUtil.fastSimpleUUID()).append(\"_\").append(Instant.now().toEpochMilli());\n+        return key.toString();\n     }\n+\n+    public static String generateThingConfigKey(String productKey) {\n+        return generateKey(THING_CONFIG_KEY, productKey);\n+    }\n+\n+    public static String generateOtaFirmwareKey(String fileType) {\n+        return generateKey(OTA_FIRMWARE_KEY) + fileType;\n+    }\n+\n }"
  },
  {
    "sha": "84c03f91d4b18cf0a51931c40d77ed1dd0511019",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/common/OtaUtils.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/common/OtaUtils.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/common/OtaUtils.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/common/OtaUtils.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,34 @@\n+package aiot.mclaren.senna.host.common;\n+\n+/**\n+ * @author lsj\n+ * @date 2021/3/18 9:26\n+ */\n+public class OtaUtils {\n+    /**\n+     * 一分钟的毫秒数\n+     */\n+    public static final int MILLIS_OF_MINUTES = 60000;\n+    public static final String LAST_TIME_UPGRADE_HAS_NOT_FINISHED = \"上一次升级尚未完成\";\n+    public static final String CANCEL_UPGRADE = \"取消升级\";\n+    public static final String DEVICE_NOT_FOUND = \"设备不存在\";\n+    public static final String DEVICE_NOT_ACTIVE = \"设备未激活\";\n+    public static final String DEVICE_OFFLINE = \"设备离线\";\n+    public static final String DEVICE_REPORT_VERSION_NO_MATCH = \"设备上报版本与升级的目标版本不一致\";\n+    public static final String DEVICE_UPGRADE_SUCCESS = \"升级成功\";\n+    public static final String OTA_TASK_SUFFIX = \":ota:task\";\n+    public static final String OTA_JOB_SUFFIX = \":ota:job\";\n+\n+    public static String getTaskGroup(String group) {\n+        return getGroup(group, OTA_TASK_SUFFIX);\n+    }\n+\n+    public static String getJobGroup(String group) {\n+        return getGroup(group, OTA_JOB_SUFFIX);\n+    }\n+\n+\n+    private static String getGroup(String group, String suffix) {\n+        return group + suffix;\n+    }\n+}"
  },
  {
    "sha": "1ce0f24ec09f83d974cc9f89fc59e72b16e56866",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/controller/DeviceController.java",
    "status": "modified",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/DeviceController.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/DeviceController.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/controller/DeviceController.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -6,6 +6,7 @@\n import aiot.mclaren.senna.model.enums.DeviceEnableEnum;\n import aiot.mclaren.senna.sdk.api.DeviceApi;\n import aiot.mclaren.senna.sdk.dto.DeviceDTO;\n+import aiot.mclaren.senna.sdk.dto.DeviceStatisticsDTO;\n import aiot.mclaren.senna.sdk.request.*;\n import aiot.mclaren.senna.sdk.response.PageList;\n import cn.hutool.crypto.SecureUtil;\n@@ -44,6 +45,11 @@\n         return DataResponse.success(deviceService.queryPage(query));\n     }\n \n+    @Override\n+    public DataResponse<List<DeviceDTO>> list(DeviceListQuery query) {\n+        return DataResponse.success(deviceService.queryList(query));\n+    }\n+\n     @Override\n     public DataResponse<DeviceDTO> getById(Long id) {\n         return DataResponse.success(DeviceConverter.INSTANCE.toDeviceDTO(deviceService.getById(id)));\n@@ -69,9 +75,24 @@\n         return DataResponse.success(deviceService.removeById(id));\n     }\n \n+    @Override\n+    public DataResponse<Boolean> deleteByProductKeyAndDeviceName(String productKey, String deviceName) {\n+        return DataResponse.success(deviceService.deleteByProductKeyAndDeviceName(productKey, deviceName));\n+    }\n+\n     @Override\n     public DataResponse<Boolean> updateDeviceStatus(DeviceStatusBody body) {\n         return DataResponse.success(deviceService.updateDeviceStatus(body));\n     }\n+\n+    @Override\n+    public DataResponse<Boolean> updateFirmwareInfo(DeviceFirmwareInfoBody body) {\n+        return DataResponse.success(deviceService.updateFirmwareInfo(body));\n+    }\n+\n+    @Override\n+    public DataResponse<DeviceStatisticsDTO> queryDeviceStatistics(DeviceStatisticsQuery query) {\n+        return DataResponse.success(deviceService.queryDeviceStatistics(query));\n+    }\n }\n "
  },
  {
    "sha": "9d8c391d3c130c14752b98255e106a60e0a26528",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/controller/DeviceMessageController.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/DeviceMessageController.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/DeviceMessageController.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/controller/DeviceMessageController.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -2,8 +2,11 @@\n \n import aiot.mclaren.commons.response.DataResponse;\n import aiot.mclaren.senna.host.service.IDeviceMessageService;\n+import aiot.mclaren.senna.host.service.IFirmwareService;\n import aiot.mclaren.senna.sdk.api.DeviceMessageApi;\n import aiot.mclaren.senna.sdk.request.InvokeServiceBody;\n+import aiot.mclaren.senna.sdk.request.PushConfigBody;\n+import aiot.mclaren.senna.sdk.request.PushOtaFirmwareBody;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RestController;\n \n@@ -21,4 +24,19 @@\n     public DataResponse<Boolean> invokeService(InvokeServiceBody body) {\n         return DataResponse.success(deviceMessageService.invokeService(body));\n     }\n+\n+    @Override\n+    public DataResponse<Boolean> disconnectClient(String productKey, String deviceName) {\n+        return DataResponse.success(deviceMessageService.disconnectClient(productKey, deviceName));\n+    }\n+\n+    @Override\n+    public DataResponse<Boolean> pushThingConfig(PushConfigBody body) {\n+        return DataResponse.success(deviceMessageService.pushThingConfig(body));\n+    }\n+\n+    @Override\n+    public DataResponse<Boolean> pushFirmwareInfo(PushOtaFirmwareBody body) {\n+        return DataResponse.success(deviceMessageService.pushFirmwareInfo(body));\n+    }\n }"
  },
  {
    "sha": "772bde3c44dc35f3a52c4b46bd7e4ed3594d15a1",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/controller/FirmwareController.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/FirmwareController.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/FirmwareController.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/controller/FirmwareController.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,56 @@\n+package aiot.mclaren.senna.host.controller;\n+\n+\n+import aiot.mclaren.commons.response.DataResponse;\n+import aiot.mclaren.senna.host.service.IFirmwareService;\n+import aiot.mclaren.senna.sdk.api.FirmwareApi;\n+import aiot.mclaren.senna.sdk.dto.FileUploadResultDTO;\n+import aiot.mclaren.senna.sdk.dto.FirmwareDTO;\n+import aiot.mclaren.senna.sdk.request.FirmwarePageQuery;\n+import aiot.mclaren.senna.sdk.request.FirmwareBody;\n+import aiot.mclaren.senna.sdk.response.PageList;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import org.springframework.web.bind.annotation.RestController;\n+import org.springframework.web.multipart.MultipartFile;\n+\n+/**\n+ * <p>\n+ *  前端控制器\n+ * </p>\n+ *\n+ * @author lsj\n+ * @since 2021-03-12\n+ */\n+@RestController\n+public class FirmwareController implements FirmwareApi {\n+\n+    @Autowired\n+    private IFirmwareService firmwareService;\n+\n+    @Override\n+    public DataResponse<FirmwareDTO> create(FirmwareBody body) {\n+        return DataResponse.success(firmwareService.create(body));\n+    }\n+\n+    @Override\n+    public DataResponse<PageList<FirmwareDTO>> pageList(FirmwarePageQuery query) {\n+        return DataResponse.success(firmwareService.queryPage(query));\n+    }\n+\n+    @Override\n+    public DataResponse<FileUploadResultDTO> uploadFirmwareFile(MultipartFile file) {\n+        return DataResponse.success(firmwareService.uploadFirmwareFile(file));\n+    }\n+\n+    /*@Override\n+    public DataResponse<FirmwareDTO> queryLastDetail(String productKey, String moduleName) {\n+        return DataResponse.success(firmwareService.queryLastDetail(productKey, moduleName));\n+    }*/\n+\n+    @Override\n+    public DataResponse<Boolean> removeByFirmwareId(String firmwareId) {\n+        return DataResponse.success(firmwareService.removeByFirmwareId(firmwareId));\n+    }\n+}\n+"
  },
  {
    "sha": "37af1f22596b75135b86a649a44d5d48c168cdb5",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaModuleController.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaModuleController.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaModuleController.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaModuleController.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,21 @@\n+package aiot.mclaren.senna.host.controller;\n+\n+\n+import org.springframework.web.bind.annotation.RequestMapping;\n+\n+import org.springframework.web.bind.annotation.RestController;\n+\n+/**\n+ * <p>\n+ *  前端控制器\n+ * </p>\n+ *\n+ * @author lsj\n+ * @since 2021-03-12\n+ */\n+@RestController\n+@RequestMapping(\"/ota-module\")\n+public class OtaModuleController {\n+\n+}\n+"
  },
  {
    "sha": "dccd7e151cc1131408b72896e6ea278880cb3d67",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaUpgradeJobController.java",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaUpgradeJobController.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaUpgradeJobController.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaUpgradeJobController.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,53 @@\n+package aiot.mclaren.senna.host.controller;\n+\n+import aiot.mclaren.commons.response.DataResponse;\n+import aiot.mclaren.senna.host.service.IOtaUpgradeJobService;\n+import aiot.mclaren.senna.host.service.IOtaUpgradeManagerService;\n+import aiot.mclaren.senna.sdk.api.OtaUpgradeJobApi;\n+import aiot.mclaren.senna.sdk.dto.FirmwareDTO;\n+import aiot.mclaren.senna.sdk.request.BatchCancelJobBody;\n+import aiot.mclaren.senna.sdk.request.CheckModuleVersionBody;\n+import aiot.mclaren.senna.sdk.request.OtaUpgradeJobByProgressMessageBody;\n+import aiot.mclaren.senna.sdk.request.OtaUpgradeTaskFirmwareQuery;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n+import org.springframework.web.bind.annotation.RestController;\n+\n+/**\n+ * <p>\n+ * 前端控制器\n+ * </p>\n+ *\n+ * @author lsj\n+ * @since 2021-03-16\n+ */\n+@RestController\n+public class OtaUpgradeJobController implements OtaUpgradeJobApi {\n+\n+    @Autowired\n+    private IOtaUpgradeManagerService otaUpgradeManagerService;\n+\n+    @Autowired\n+    private IOtaUpgradeJobService otaUpgradeJobService;\n+\n+    @Override\n+    public DataResponse<FirmwareDTO> getOtaUpgradeJobFirmware(OtaUpgradeTaskFirmwareQuery query) {\n+        return DataResponse.success(otaUpgradeManagerService.getOtaUpgradeTaskFirmware(query));\n+    }\n+\n+    @Override\n+    public DataResponse<Boolean> updateStatusByProgressMessage(OtaUpgradeJobByProgressMessageBody body) {\n+        return DataResponse.success(otaUpgradeManagerService.updateOtaUpgradeJobStatusByProgressMessage(body));\n+    }\n+\n+    @Override\n+    public DataResponse<Object> checkModuleVersionAndUpdateJobStatus(CheckModuleVersionBody body) {\n+        return DataResponse.success(otaUpgradeManagerService.checkModuleVersionAndUpdateJobStatus(body));\n+    }\n+\n+    @Override\n+    public DataResponse<Boolean> cancel(BatchCancelJobBody body) {\n+        return DataResponse.success(otaUpgradeJobService.cancel(body));\n+    }\n+}\n+"
  },
  {
    "sha": "ea35e0e902f2501b5a87e829072c4ee662c4e1b7",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaUpgradeTaskController.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaUpgradeTaskController.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaUpgradeTaskController.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/controller/OtaUpgradeTaskController.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,39 @@\n+package aiot.mclaren.senna.host.controller;\n+\n+\n+import aiot.mclaren.commons.response.DataResponse;\n+import aiot.mclaren.senna.host.service.IOtaUpgradeTaskService;\n+import aiot.mclaren.senna.sdk.api.OtaUpgradeTaskApi;\n+import aiot.mclaren.senna.sdk.dto.OtaTaskCreateResultDTO;\n+import aiot.mclaren.senna.sdk.dto.OtaUpgradeTaskDTO;\n+import aiot.mclaren.senna.sdk.request.BatchCancelTaskBody;\n+import aiot.mclaren.senna.sdk.request.OtaUpgradeTaskBody;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+/**\n+ * <p>\n+ *  前端控制器\n+ * </p>\n+ *\n+ * @author lsj\n+ * @since 2021-03-16\n+ */\n+@RestController\n+public class OtaUpgradeTaskController implements OtaUpgradeTaskApi {\n+\n+    @Autowired\n+    private IOtaUpgradeTaskService otaUpgradeTaskService;\n+\n+    @Override\n+    public DataResponse<OtaTaskCreateResultDTO> create(OtaUpgradeTaskBody body) {\n+        return DataResponse.success(otaUpgradeTaskService.create(body));\n+    }\n+\n+    @Override\n+    public DataResponse<Boolean> cancel(BatchCancelTaskBody body) {\n+        return DataResponse.success(otaUpgradeTaskService.cancel(body));\n+    }\n+}\n+"
  },
  {
    "sha": "f4e48aa9a6fb3359bb0a5d8923b57edec2599925",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/controller/SchedulerController.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/SchedulerController.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/controller/SchedulerController.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/controller/SchedulerController.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,67 @@\n+package aiot.mclaren.senna.host.controller;\n+\n+import aiot.mclaren.commons.response.DataResponse;\n+import aiot.mclaren.senna.host.job.TestJob;\n+import aiot.mclaren.senna.host.service.ISchedulerService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.Date;\n+import java.util.HashMap;\n+\n+/**\n+ * @author lsj\n+ * @date 2021/3/17 14:10\n+ */\n+@RestController\n+@RequestMapping(\"schedules\")\n+public class SchedulerController {\n+\n+    @Autowired\n+    private ISchedulerService schedulerService;\n+\n+    @PostMapping(\"test\")\n+    public DataResponse<Object> startTest() {\n+        HashMap<String, Object> jobData = new HashMap<>();\n+        jobData.put(\"age\", 40);\n+        jobData.put(\"name\", \"xiaohong\");\n+        schedulerService.start(new Date(), null, 3000, -1, \"test\", \"test\", TestJob.class, jobData);\n+        return DataResponse.success();\n+    }\n+\n+    @PutMapping(\"pause-trigger\")\n+    public DataResponse<Object> pauseTrigger(String name, String group) {\n+        schedulerService.pauseTrigger(name, group);\n+        return DataResponse.success();\n+    }\n+\n+    @PutMapping(\"resume-trigger\")\n+    public DataResponse<Object> resumeTrigger(String name, String group) {\n+        schedulerService.resumeTrigger(name, group);\n+        return DataResponse.success();\n+    }\n+\n+    @PutMapping(\"pause-job\")\n+    public DataResponse<Object> pauseJob(String name, String group) {\n+        schedulerService.pauseJob(name, group);\n+        return DataResponse.success();\n+    }\n+\n+    @PutMapping(\"resume-job\")\n+    public DataResponse<Object> resumeJob(String name, String group) {\n+        schedulerService.resumeJob(name, group);\n+        return DataResponse.success();\n+    }\n+\n+    @DeleteMapping(\"trigger\")\n+    public DataResponse<Object> deleteTrigger(String name, String group) {\n+        schedulerService.deleteTrigger(name, group);\n+        return DataResponse.success();\n+    }\n+\n+    @DeleteMapping(\"job\")\n+    public DataResponse<Object> deleteJob(String name, String group) {\n+        schedulerService.deleteJob(name, group);\n+        return DataResponse.success();\n+    }\n+}"
  },
  {
    "sha": "854ee888ffc19d415226bcd24f2c59703108af01",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/job/OtaUpgradeExecuteJob.java",
    "status": "added",
    "additions": 91,
    "deletions": 0,
    "changes": 91,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/job/OtaUpgradeExecuteJob.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/job/OtaUpgradeExecuteJob.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/job/OtaUpgradeExecuteJob.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,91 @@\n+package aiot.mclaren.senna.host.job;\n+\n+import aiot.mclaren.senna.host.common.OtaUtils;\n+import aiot.mclaren.senna.host.service.IDeviceMessageService;\n+import aiot.mclaren.senna.host.service.IDeviceService;\n+import aiot.mclaren.senna.host.service.IOtaUpgradeJobService;\n+import aiot.mclaren.senna.host.service.ISchedulerService;\n+import aiot.mclaren.senna.model.entity.Device;\n+import aiot.mclaren.senna.model.enums.DeviceStatusEnum;\n+import aiot.mclaren.senna.model.enums.JobStatusEnum;\n+import aiot.mclaren.senna.sdk.request.OtaUpgradeJobStatusUpdateBody;\n+import lombok.extern.slf4j.Slf4j;\n+import org.quartz.*;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+import org.springframework.util.ObjectUtils;\n+\n+import java.util.Collections;\n+\n+/**\n+ * @author lsj\n+ * @date 2021/3/16 17:13\n+ */\n+\n+@Component\n+@Slf4j\n+public class OtaUpgradeExecuteJob implements Job {\n+\n+    @Autowired\n+    private IDeviceService deviceService;\n+\n+    @Autowired\n+    private IOtaUpgradeJobService otaUpgradeJobService;\n+\n+    @Autowired\n+    private IDeviceMessageService deviceMessageService;\n+\n+    @Autowired\n+    private ISchedulerService schedulerService;\n+\n+    @Override\n+    public void execute(JobExecutionContext context) throws JobExecutionException {\n+        JobDataMap jobDataMap = context.getMergedJobDataMap();\n+        String productKey = jobDataMap.getString(\"productKey\");\n+        String deviceName = jobDataMap.getString(\"deviceName\");\n+        String firmwareId = jobDataMap.getString(\"firmwareId\");\n+        String jobId = jobDataMap.getString(\"jobId\");\n+        Device device = deviceService.getByDeviceNameAndProductKey(deviceName, productKey);\n+\n+        OtaUpgradeJobStatusUpdateBody body = new OtaUpgradeJobStatusUpdateBody();\n+        body.setJobIds(Collections.singletonList(jobId));\n+\n+        if (ObjectUtils.isEmpty(device)) {\n+            /* 设备不存在移除挂载的任务 */\n+            body.setSrcStatuses(null);\n+            body.setTargetStatus(JobStatusEnum.FAILED.getValue());\n+            body.setTargetJobDesc(OtaUtils.DEVICE_NOT_FOUND);\n+            log.info(\"OtaUpgradeExecuteJob device not found update jobId: {} status: {}\", jobId, JobStatusEnum.FAILED);\n+            schedulerService.deleteTriggersAndJobs(Collections.singletonList(jobId), OtaUtils.getJobGroup(productKey));\n+        } else {\n+            DeviceStatusEnum statusEnum = DeviceStatusEnum.valueOf(device.getDeviceStatus());\n+            switch (statusEnum) {\n+                case UNACTIVE:\n+                    body.setSrcStatuses(Collections.singletonList(JobStatusEnum.QUEUED.getValue()));\n+                    body.setTargetStatus(JobStatusEnum.QUEUED.getValue());\n+                    body.setTargetJobDesc(OtaUtils.DEVICE_NOT_ACTIVE);\n+                    log.info(\"OtaUpgradeExecuteJob device not active update jobId: {} status: {}\", jobId, JobStatusEnum.QUEUED);\n+                    break;\n+                case ONLINE:\n+                    /* 推送成功后移除挂载的任务 */\n+                    if (deviceMessageService.pushFirmwareInfo(productKey, deviceName, firmwareId)) {\n+                        body.setSrcStatuses(Collections.singletonList(JobStatusEnum.QUEUED.getValue()));\n+                        body.setTargetStatus(JobStatusEnum.NOTIFIED.getValue());\n+                        body.setTargetJobDesc(\"\");\n+                        schedulerService.deleteTriggersAndJobs(Collections.singletonList(jobId), OtaUtils.getJobGroup(productKey));\n+                        log.info(\"OtaUpgradeExecuteJob firmware info push success update jobId: {} status: {}\", jobId, JobStatusEnum.NOTIFIED);\n+                    }\n+                    break;\n+                case OFFLINE:\n+                    body.setSrcStatuses(Collections.singletonList(JobStatusEnum.QUEUED.getValue()));\n+                    body.setTargetStatus(JobStatusEnum.QUEUED.getValue());\n+                    body.setTargetJobDesc(OtaUtils.DEVICE_OFFLINE);\n+                    log.info(\"OtaUpgradeExecuteJob device offline update jobId: {} status: {}\", jobId, JobStatusEnum.QUEUED);\n+                    break;\n+                default:\n+                    break;\n+            }\n+        }\n+        otaUpgradeJobService.updateJobStatus(body);\n+    }\n+}"
  },
  {
    "sha": "0d77ee76a8aaad1dab200d07c1a6bbdc83eea511",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/job/OtaUpgradeExecutorTask.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/job/OtaUpgradeExecutorTask.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/job/OtaUpgradeExecutorTask.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/job/OtaUpgradeExecutorTask.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,72 @@\n+package aiot.mclaren.senna.host.job;\n+\n+import aiot.mclaren.senna.host.common.OtaUtils;\n+import aiot.mclaren.senna.host.service.IOtaUpgradeJobService;\n+import aiot.mclaren.senna.host.service.IOtaUpgradeTaskService;\n+import aiot.mclaren.senna.host.service.ISchedulerService;\n+import aiot.mclaren.senna.model.entity.OtaUpgradeJob;\n+import aiot.mclaren.senna.model.enums.JobStatusEnum;\n+import aiot.mclaren.senna.model.enums.TaskExecuteStateEnum;\n+import aiot.mclaren.senna.sdk.dto.OtaUpgradeTaskDTO;\n+import lombok.extern.slf4j.Slf4j;\n+import org.quartz.Job;\n+import org.quartz.JobExecutionContext;\n+import org.quartz.JobExecutionException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+import org.springframework.util.ObjectUtils;\n+\n+import java.time.LocalDateTime;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * @author lsj\n+ * @date 2021/3/18 12:01\n+ * 执行升级 Task的Job\n+ */\n+@Component\n+@Slf4j\n+public class OtaUpgradeExecutorTask implements Job {\n+\n+    @Autowired\n+    private IOtaUpgradeTaskService otaUpgradeTaskService;\n+\n+    @Autowired\n+    private ISchedulerService schedulerService;\n+\n+    @Autowired\n+    private IOtaUpgradeJobService otaUpgradeJobService;\n+\n+    @Override\n+    public void execute(JobExecutionContext context) throws JobExecutionException {\n+        OtaUpgradeTaskDTO task = otaUpgradeTaskService.getByTaskId(context.getMergedJobDataMap().getString(\"taskId\"));\n+        LocalDateTime now = LocalDateTime.now();\n+        List<String> taskIds = Collections.singletonList(task.getTaskId());\n+        /* 检查当前执行的Task是否开始 默认是已经是开始的 */\n+        if (ObjectUtils.isEmpty(task) || now.isBefore(task.getScheduleStartDt())) {\n+            log.info(\"OtaUpgradeExecutorTask task is null or task not time start update taskId: {} \", task.getTaskId());\n+            return;\n+        }\n+\n+        /* 如果 Task预定的结束时间 已经过去 那么直接更新Task为完成 */\n+        if (task.getScheduleEndDt() != null && now.isAfter(task.getScheduleEndDt())) {\n+            log.info(\"OtaUpgradeExecutorTask task over schedule end time update taskId: {} state: {}\", task.getTaskId(), TaskExecuteStateEnum.COMPLETED);\n+            otaUpgradeTaskService.updateExecuteState(taskIds, TaskExecuteStateEnum.COMPLETED);\n+            schedulerService.deleteTriggersAndJobs(taskIds, OtaUtils.getTaskGroup(task.getProductKey()));\n+            return;\n+        }\n+        /* 检查关联的Job是否都完成了, 如果没有处于待推送, 已推送, 升级中的则 表示已完成 */\n+        List<OtaUpgradeJob> otaUpgradeJobs = otaUpgradeJobService\n+            .listByTaskIdsAndStatuses(Collections.singletonList(task.getTaskId()),\n+                Arrays.asList(JobStatusEnum.QUEUED, JobStatusEnum.NOTIFIED, JobStatusEnum.IN_PROGRESS));\n+        if (otaUpgradeJobs.size() <= 0) {\n+            log.info(\"OtaUpgradeExecutorTask all associated jobs are completed  update taskId: {} state: {}\", task.getTaskId(), TaskExecuteStateEnum.COMPLETED);\n+            otaUpgradeTaskService.updateExecuteState(taskIds, TaskExecuteStateEnum.COMPLETED);\n+            schedulerService.deleteTriggersAndJobs(taskIds, OtaUtils.getTaskGroup(task.getProductKey()));\n+        }\n+\n+    }\n+\n+}"
  },
  {
    "sha": "013260cc7bd924bb403be86b0cd19c6bc44eaa7b",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/job/TestJob.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/job/TestJob.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/job/TestJob.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/job/TestJob.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,18 @@\n+package aiot.mclaren.senna.host.job;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.quartz.Job;\n+import org.quartz.JobExecutionContext;\n+import org.quartz.JobExecutionException;\n+\n+/**\n+ * @author lsj\n+ * @date 2021/3/17 14:08\n+ */\n+@Slf4j\n+public class TestJob implements Job {\n+    @Override\n+    public void execute(JobExecutionContext context) throws JobExecutionException {\n+      log.info(\"Test Job Executed\");\n+    }\n+}"
  },
  {
    "sha": "2247bf42ed156e81c3a22d0a3874c14134a6962f",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/mapper/DeviceMapper.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/DeviceMapper.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/DeviceMapper.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/DeviceMapper.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -1,8 +1,11 @@\n package aiot.mclaren.senna.host.mapper;\n \n+import aiot.mclaren.senna.model.bo.DeviceStatisticsBO;\n import aiot.mclaren.senna.model.entity.Device;\n import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n \n+import java.util.List;\n+\n /**\n  * <p>\n  *  Mapper 接口\n@@ -13,4 +16,5 @@\n  */\n public interface DeviceMapper extends BaseMapper<Device> {\n \n+    List<DeviceStatisticsBO> selectCountGroupByDeviceStatus(List<String> productKeys);\n }"
  },
  {
    "sha": "f96c2bbf9dfb880cb7d18465723f3b79f5172ad5",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/mapper/FirmwareMapper.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/FirmwareMapper.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/FirmwareMapper.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/FirmwareMapper.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,16 @@\n+package aiot.mclaren.senna.host.mapper;\n+\n+import aiot.mclaren.senna.model.entity.Firmware;\n+import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n+\n+/**\n+ * <p>\n+ *  Mapper 接口\n+ * </p>\n+ *\n+ * @author lsj\n+ * @since 2021-03-12\n+ */\n+public interface FirmwareMapper extends BaseMapper<Firmware> {\n+\n+}"
  },
  {
    "sha": "c0a1b5cd120b21a0e99d0c3ef2b5b64e772e0b23",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaModuleMapper.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaModuleMapper.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaModuleMapper.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaModuleMapper.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,16 @@\n+package aiot.mclaren.senna.host.mapper;\n+\n+import aiot.mclaren.senna.model.entity.OtaModule;\n+import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n+\n+/**\n+ * <p>\n+ *  Mapper 接口\n+ * </p>\n+ *\n+ * @author lsj\n+ * @since 2021-03-12\n+ */\n+public interface OtaModuleMapper extends BaseMapper<OtaModule> {\n+\n+}"
  },
  {
    "sha": "c87476b9c1cc03b849663a96e4274cb4afb8c413",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaUpgradeJobMapper.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaUpgradeJobMapper.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaUpgradeJobMapper.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaUpgradeJobMapper.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,20 @@\n+package aiot.mclaren.senna.host.mapper;\n+\n+import aiot.mclaren.senna.model.entity.OtaUpgradeJob;\n+import aiot.mclaren.senna.model.message.SpiderOtaProgressStatus;\n+import aiot.mclaren.senna.sdk.request.OtaUpgradeJobStatusUpdateBody;\n+import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n+\n+import java.util.List;\n+\n+/**\n+ * <p>\n+ *  Mapper 接口\n+ * </p>\n+ *\n+ * @author lsj\n+ * @since 2021-03-16\n+ */\n+public interface OtaUpgradeJobMapper extends BaseMapper<OtaUpgradeJob> {\n+    List<SpiderOtaProgressStatus> selectSpiderOtaProgressStatus(OtaUpgradeJobStatusUpdateBody body);\n+}"
  },
  {
    "sha": "86e88569542ffee7fb4893ddebfc4c3ff91edb5e",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaUpgradeTaskMapper.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaUpgradeTaskMapper.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaUpgradeTaskMapper.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/mapper/OtaUpgradeTaskMapper.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,16 @@\n+package aiot.mclaren.senna.host.mapper;\n+\n+import aiot.mclaren.senna.model.entity.OtaUpgradeTask;\n+import com.baomidou.mybatisplus.core.mapper.BaseMapper;\n+\n+/**\n+ * <p>\n+ *  Mapper 接口\n+ * </p>\n+ *\n+ * @author lsj\n+ * @since 2021-03-16\n+ */\n+public interface OtaUpgradeTaskMapper extends BaseMapper<OtaUpgradeTask> {\n+\n+}"
  },
  {
    "sha": "11d245e7591cc18f985210fdfb36ce8a245aec22",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/FirmwareConverter.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/FirmwareConverter.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/FirmwareConverter.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/FirmwareConverter.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,48 @@\n+package aiot.mclaren.senna.host.mapstruct;\n+\n+import aiot.mclaren.senna.model.entity.Firmware;\n+import aiot.mclaren.senna.model.enums.SignTypeEnum;\n+import aiot.mclaren.senna.model.message.SpiderFirmware;\n+import aiot.mclaren.senna.sdk.dto.FirmwareDTO;\n+import aiot.mclaren.senna.sdk.request.FirmwareBody;\n+import aiot.mclaren.senna.sdk.response.PageList;\n+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n+import org.mapstruct.*;\n+import org.mapstruct.factory.Mappers;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+\n+/**\n+ * @author lsj\n+ * @date 2021/3/12 14:54\n+ */\n+@Mapper\n+public interface FirmwareConverter {\n+    FirmwareConverter INSTANCE = Mappers.getMapper(FirmwareConverter.class);\n+\n+    Firmware fromFirmwareBody(FirmwareBody body);\n+\n+    FirmwareDTO toFirmwareDTO(Firmware firmware);\n+\n+    PageList<FirmwareDTO> toFirmwareDTOPages(Page<Firmware> pages);\n+\n+    @Mappings({\n+        @Mapping(source = \"firmwareSize\", target = \"size\"),\n+        @Mapping(source = \"firmwareSign\", target = \"sign\"),\n+        @Mapping(source = \"destVersion\", target = \"version\"),\n+        @Mapping(source = \"type\", target = \"isDiff\"),\n+        @Mapping(source = \"firmwareUrl\", target = \"url\"),\n+        @Mapping(source = \"moduleName\", target = \"module\"),\n+    })\n+    SpiderFirmware toSpiderFirmware(FirmwareDTO firmwareDTO);\n+\n+    @AfterMapping\n+    default void toSpiderFirmwareSignMap(FirmwareDTO firmwareDTO, @MappingTarget SpiderFirmware target) {\n+        if (SignTypeEnum.MD5.name().equals(target.getSignMethod())) {\n+            target.setMd5(firmwareDTO.getFirmwareSign());\n+        } else {\n+            target.setMd5(\"\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "711bc6f73d25085b2f5d0642b141be8c8216960e",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaModuleConverter.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaModuleConverter.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaModuleConverter.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaModuleConverter.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,17 @@\n+package aiot.mclaren.senna.host.mapstruct;\n+\n+import aiot.mclaren.senna.model.entity.OtaModule;\n+import aiot.mclaren.senna.sdk.dto.OtaModuleDTO;\n+import org.mapstruct.Mapper;\n+import org.mapstruct.factory.Mappers;\n+\n+/**\n+ * @author lsj\n+ * @date 2021/3/12 16:03\n+ */\n+@Mapper\n+public interface OtaModuleConverter {\n+    OtaModuleConverter INSTANCE = Mappers.getMapper(OtaModuleConverter.class);\n+\n+    OtaModuleDTO toOtaModuleDTO(OtaModule otaModule);\n+}"
  },
  {
    "sha": "5699f172999de37c60c9baf078ad3ba2ed9303aa",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaUpgradeJobConverter.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaUpgradeJobConverter.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaUpgradeJobConverter.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaUpgradeJobConverter.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,21 @@\n+package aiot.mclaren.senna.host.mapstruct;\n+\n+import aiot.mclaren.senna.model.entity.OtaUpgradeJob;\n+import aiot.mclaren.senna.sdk.dto.OtaUpgradeJobDTO;\n+import org.mapstruct.Mapper;\n+import org.mapstruct.factory.Mappers;\n+\n+import java.util.List;\n+\n+/**\n+ * @author lsj\n+ * @date 2021/3/16 20:04\n+ */\n+@Mapper\n+public interface OtaUpgradeJobConverter {\n+    OtaUpgradeJobConverter INSTANCE = Mappers.getMapper(OtaUpgradeJobConverter.class);\n+\n+    OtaUpgradeJobDTO toOtaUpgradeJobDTO(OtaUpgradeJob otaUpgradeJob);\n+\n+    List<OtaUpgradeJobDTO> toOtaUpgradeJobDTOs(List<OtaUpgradeJob> otaUpgradeJobs);\n+}"
  },
  {
    "sha": "779eb2cd87ec5cd2b018e898abc7ae17666c6e58",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaUpgradeTaskConverter.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaUpgradeTaskConverter.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaUpgradeTaskConverter.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtaUpgradeTaskConverter.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,61 @@\n+package aiot.mclaren.senna.host.mapstruct;\n+\n+import aiot.mclaren.senna.host.common.JsonUtils;\n+import aiot.mclaren.senna.model.entity.OtaUpgradeTask;\n+import aiot.mclaren.senna.model.enums.TaskExecuteStateEnum;\n+import aiot.mclaren.senna.model.enums.TaskTypeEnum;\n+import aiot.mclaren.senna.model.enums.UpgradeTypeEnum;\n+import aiot.mclaren.senna.sdk.dto.OtaTaskCreateResultDTO;\n+import aiot.mclaren.senna.sdk.dto.OtaUpgradeTaskDTO;\n+import aiot.mclaren.senna.sdk.request.OtaUpgradeTaskBody;\n+import org.mapstruct.AfterMapping;\n+import org.mapstruct.Mapper;\n+import org.mapstruct.MappingTarget;\n+import org.mapstruct.factory.Mappers;\n+import org.springframework.util.ObjectUtils;\n+import org.springframework.util.StringUtils;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * @author lsj\n+ * @date 2021/3/15 18:03\n+ */\n+@Mapper\n+public interface OtaUpgradeTaskConverter {\n+    OtaUpgradeTaskConverter INSTANCE = Mappers.getMapper(OtaUpgradeTaskConverter.class);\n+\n+    OtaUpgradeTaskDTO toOtaUpgradeTaskDTO(OtaUpgradeTask otaUpgradeTask);\n+\n+    OtaUpgradeTask toOtaUpgradeTask(OtaUpgradeTaskBody body);\n+\n+    @AfterMapping\n+    default void afterToOtaJob(OtaUpgradeTaskBody body, @MappingTarget OtaUpgradeTask otaUpgradeTask) {\n+\n+        otaUpgradeTask.setTaskType(TaskTypeEnum.UPGRADE_FIRMWARE.name());\n+        if (!StringUtils.isEmpty(body.getTaskType()) && TaskTypeEnum.VERIFY_FIRMWARE.name().equals(body.getTaskType())) {\n+            otaUpgradeTask.setTaskType(TaskTypeEnum.VERIFY_FIRMWARE.name());\n+        }\n+\n+        otaUpgradeTask.setUpgradeType(UpgradeTypeEnum.STATIC.name());\n+        if (!StringUtils.isEmpty(body.getUpgradeType()) && UpgradeTypeEnum.DYNAMIC.name().equals(body.getUpgradeType())) {\n+            otaUpgradeTask.setUpgradeType(UpgradeTypeEnum.DYNAMIC.name());\n+        }\n+\n+        if (!ObjectUtils.isEmpty(body.getSrcVersion())) {\n+            Map<String, List<String>> temp = new HashMap<>();\n+            temp.put(\"srcVersion\", body.getSrcVersion());\n+            otaUpgradeTask.setSrcVersions(JsonUtils.toJson(temp));\n+        }\n+\n+        if (!ObjectUtils.isEmpty(body.getTargetDeviceName())) {\n+            Map<String, List<String>> temp = new HashMap<>();\n+            temp.put(\"targetDeviceName\", body.getTargetDeviceName());\n+            otaUpgradeTask.setTargetDeviceNames(JsonUtils.toJson(temp));\n+        }\n+\n+    }\n+\n+}"
  },
  {
    "sha": "0213673e1751a01f2e5d7d0e622ea8199f796aad",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtherObjectConverter.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtherObjectConverter.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtherObjectConverter.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/OtherObjectConverter.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,24 @@\n+package aiot.mclaren.senna.host.mapstruct;\n+\n+import aiot.mclaren.senna.sdk.request.*;\n+import org.mapstruct.Mapper;\n+import org.mapstruct.Mapping;\n+import org.mapstruct.Mappings;\n+import org.mapstruct.factory.Mappers;\n+\n+/**\n+ * @author lsj\n+ * @date 2021/3/11 18:03\n+ */\n+@Mapper\n+public interface OtherObjectConverter {\n+    OtherObjectConverter INSTANCE = Mappers.getMapper(OtherObjectConverter.class);\n+\n+    ThingConfigDetailQuery toThingConfigDetailQuery(PushConfigBody pushConfigBody);\n+\n+    OtaUpgradeJobDetailQuery toOtaUpgradeJobDetailQuery(OtaUpgradeTaskFirmwareQuery query);\n+\n+    OtaUpgradeJobDetailQuery toOtaUpgradeJobDetailQuery(OtaUpgradeJobByProgressMessageBody body);\n+\n+    OtaUpgradeJobDetailQuery toOtaUpgradeJobDetailQuery(CheckModuleVersionBody body);\n+}"
  },
  {
    "sha": "a9dd5899ab7457e53aa95061a5e312b10663707e",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/ThingConfigConverter.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/ThingConfigConverter.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/ThingConfigConverter.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/mapstruct/ThingConfigConverter.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -1,10 +1,13 @@\n package aiot.mclaren.senna.host.mapstruct;\n \n import aiot.mclaren.senna.model.entity.ThingConfig;\n+import aiot.mclaren.senna.model.message.SpiderDownConfig;\n import aiot.mclaren.senna.sdk.dto.ThingConfigDTO;\n import aiot.mclaren.senna.sdk.response.PageList;\n import com.baomidou.mybatisplus.core.metadata.IPage;\n import org.mapstruct.Mapper;\n+import org.mapstruct.Mapping;\n+import org.mapstruct.Mappings;\n import org.mapstruct.factory.Mappers;\n \n /**\n@@ -19,4 +22,10 @@\n \n     PageList<ThingConfigDTO> toThingConfigDTOPages(IPage<ThingConfig> page);\n \n+    @Mappings({\n+        @Mapping(source = \"ossUrl\", target = \"url\")\n+    })\n+    SpiderDownConfig thingConfigDTOtoSpiderDownConfig(ThingConfigDTO configDTO);\n+\n+\n }"
  },
  {
    "sha": "82b5a6b7e1a899cfa70e3bc93668f6f3a21ac943",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/service/IDeviceMessageService.java",
    "status": "modified",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/service/IDeviceMessageService.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/service/IDeviceMessageService.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/service/IDeviceMessageService.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -1,12 +1,65 @@\n package aiot.mclaren.senna.host.service;\n \n+import aiot.mclaren.senna.model.message.SpiderOtaProgressStatus;\n import aiot.mclaren.senna.sdk.request.InvokeServiceBody;\n+import aiot.mclaren.senna.sdk.request.PushConfigBody;\n+import aiot.mclaren.senna.sdk.request.PushOtaFirmwareBody;\n+\n+import java.util.List;\n \n /**\n  * @author lsj\n  * @date 2021/3/8 20:31\n  */\n \n public interface IDeviceMessageService {\n+    /**\n+     * 服务调用\n+     *\n+     * @param body\n+     * @return\n+     */\n     boolean invokeService(InvokeServiceBody body);\n+\n+    /**\n+     * 关闭客户端连接\n+     *\n+     * @param productKey\n+     * @param deviceName\n+     * @return\n+     */\n+    boolean disconnectClient(String productKey, String deviceName);\n+\n+    /**\n+     * 推送物配置\n+     *\n+     * @param body\n+     * @return\n+     */\n+    boolean pushThingConfig(PushConfigBody body);\n+\n+    /**\n+     * 推送升级包信息\n+     *\n+     * @param body\n+     * @return\n+     */\n+    boolean pushFirmwareInfo(PushOtaFirmwareBody body);\n+\n+    /**\n+     * 推送升级包信息根据升级包ID\n+     *\n+     * @param productKey\n+     * @param deviceName\n+     * @param firmwareId\n+     * @return\n+     */\n+    boolean pushFirmwareInfo(String productKey, String deviceName, String firmwareId);\n+\n+    /**\n+     * 推送升级进度消息\n+     * @param spiderOtaProgressStatuses\n+     * @return\n+     */\n+    boolean pushOtaProgressInfo(List<SpiderOtaProgressStatus> spiderOtaProgressStatuses);\n }"
  },
  {
    "sha": "db14a5db5395e9ec32115739591b5797b12581c7",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/service/IDeviceService.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/service/IDeviceService.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/service/IDeviceService.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/service/IDeviceService.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -3,7 +3,9 @@\n import aiot.mclaren.senna.model.entity.Device;\n import aiot.mclaren.senna.model.enums.DeviceEnableEnum;\n import aiot.mclaren.senna.sdk.dto.DeviceDTO;\n+import aiot.mclaren.senna.sdk.dto.DeviceStatisticsDTO;\n import aiot.mclaren.senna.sdk.request.*;\n+import aiot.mclaren.senna.model.bo.DeviceStatisticsBO;\n import aiot.mclaren.senna.sdk.response.PageList;\n import com.baomidou.mybatisplus.extension.service.IService;\n \n@@ -25,10 +27,18 @@\n \n     PageList<DeviceDTO> queryPage(DeviceQuery query);\n \n+    List<DeviceDTO> queryList(DeviceListQuery query);\n+\n     Device getByDeviceNameAndProductKey(String deviceName, String productKey);\n \n     boolean updateEnableStatus(DeviceEnableBody body, DeviceEnableEnum enable);\n \n     boolean updateDeviceStatus(DeviceStatusBody body);\n \n+    boolean updateFirmwareInfo(DeviceFirmwareInfoBody body);\n+\n+    boolean deleteByProductKeyAndDeviceName(String deviceName, String productKey);\n+\n+    DeviceStatisticsDTO queryDeviceStatistics(DeviceStatisticsQuery query);\n+\n }"
  },
  {
    "sha": "e3c69b9a1df68ac1af32a1aa40fb3d4e1e1dbd5c",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/service/IFirmwareService.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/service/IFirmwareService.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/service/IFirmwareService.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/service/IFirmwareService.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,34 @@\n+package aiot.mclaren.senna.host.service;\n+\n+import aiot.mclaren.senna.model.entity.Firmware;\n+import aiot.mclaren.senna.sdk.dto.FileUploadResultDTO;\n+import aiot.mclaren.senna.sdk.dto.FirmwareDTO;\n+import aiot.mclaren.senna.sdk.request.FirmwarePageQuery;\n+import aiot.mclaren.senna.sdk.request.FirmwareBody;\n+import aiot.mclaren.senna.sdk.response.PageList;\n+import com.baomidou.mybatisplus.extension.service.IService;\n+import org.springframework.web.multipart.MultipartFile;\n+\n+/**\n+ * <p>\n+ *  服务类\n+ * </p>\n+ *\n+ * @author lsj\n+ * @since 2021-03-12\n+ */\n+public interface IFirmwareService extends IService<Firmware> {\n+\n+    FirmwareDTO create(FirmwareBody body);\n+\n+    PageList<FirmwareDTO> queryPage(FirmwarePageQuery query);\n+\n+    FirmwareDTO queryLastDetail(String productKey, String moduleName);\n+\n+    FileUploadResultDTO uploadFirmwareFile(MultipartFile file);\n+\n+    boolean removeByFirmwareId(String firmwareId);\n+\n+    FirmwareDTO getByFirmwareId(String firmwareId);\n+\n+}"
  },
  {
    "sha": "d89b73cd352950eaee141cc2659cf7266c846117",
    "filename": "senna-host/src/main/java/aiot/mclaren/senna/host/service/IOtaModuleService.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/aivp/McLarenSennaService/blob/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/service/IOtaModuleService.java",
    "raw_url": "https://github.com/aivp/McLarenSennaService/raw/dd40578d701cd26e07518726c88242ecbb2c1417/senna-host/src/main/java/aiot/mclaren/senna/host/service/IOtaModuleService.java",
    "contents_url": "https://api.github.com/repos/aivp/McLarenSennaService/contents/senna-host/src/main/java/aiot/mclaren/senna/host/service/IOtaModuleService.java?ref=dd40578d701cd26e07518726c88242ecbb2c1417",
    "patch": "@@ -0,0 +1,19 @@\n+package aiot.mclaren.senna.host.service;\n+\n+import aiot.mclaren.senna.model.entity.OtaModule;\n+import aiot.mclaren.senna.sdk.dto.OtaModuleDTO;\n+import com.baomidou.mybatisplus.extension.service.IService;\n+\n+/**\n+ * <p>\n+ *  服务类\n+ * </p>\n+ *\n+ * @author lsj\n+ * @since 2021-03-12\n+ */\n+public interface IOtaModuleService extends IService<OtaModule> {\n+\n+    OtaModuleDTO queryByProductKey(String productKey);\n+\n+}"
  }
]
