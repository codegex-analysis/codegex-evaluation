[
  {
    "sha": "f0290f45ddc9a11c9db0407a0e5944339f5ce69b",
    "filename": "level_03/hw_04/pom.xml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04/pom.xml",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04/pom.xml",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04/pom.xml?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>ru.geekbrains.courses.java.level03.itia</groupId>\n+    <artifactId>ru.geekbrains.level03.itia</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <properties>\n+        <maven.compiler.source>8</maven.compiler.source>\n+        <maven.compiler.target>8</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "473c154b9af1e7a273066ebf1103b8602125a3f3",
    "filename": "level_03/hw_04/src/main/java/hw_04_thread/WaitNotifyABC.java",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04/src/main/java/hw_04_thread/WaitNotifyABC.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04/src/main/java/hw_04_thread/WaitNotifyABC.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04/src/main/java/hw_04_thread/WaitNotifyABC.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,79 @@\n+package hw_04_thread;\n+\n+public class WaitNotifyABC {\n+    private static final Object mon = new Object();\n+    private static volatile char currentLetter = 'A';\n+\n+    public static void main(String[] args) {\n+        WaitNotifyABC wABC = new WaitNotifyABC();\n+\n+        Thread tA = new Thread(() -> {\n+            wABC.printA();\n+        });\n+\n+        Thread tB = new Thread(() -> {\n+            wABC.printB();\n+        });\n+\n+        Thread tC = new Thread(() -> {\n+            wABC.printC();\n+        });\n+\n+        tA.start();\n+        tB.start();\n+        tC.start();\n+\n+    }\n+\n+    public void printA(){\n+        synchronized (mon) {\n+            try {\n+                for (int i = 0; i < 5; i++){\n+                    while (currentLetter != 'A'){\n+                        mon.wait();\n+                    }\n+                    System.out.print(\"A\");\n+                    currentLetter = 'B';\n+                    mon.notifyAll();\n+                }\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    public void printB(){\n+        synchronized (mon){\n+            try {\n+                for (int i = 0; i < 5; i++){\n+                    while (currentLetter != 'B'){\n+                        mon.wait();\n+                    }\n+                    System.out.print(\"B\");\n+                    currentLetter = 'C';\n+                    mon.notifyAll();\n+                }\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    public void printC(){\n+        synchronized (mon){\n+            try {\n+                for (int i = 0; i < 5; i++){\n+                    while (currentLetter != 'C'){\n+                        mon.wait();\n+                    }\n+                    System.out.print(\"C\");\n+                    currentLetter = 'A';\n+                    mon.notifyAll();\n+                }\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "830a070b88405d2f7371b1d2b6dde94020f03ae2",
    "filename": "level_03/hw_04/target/classes/hw_04_thread/WaitNotifyABC.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04/target/classes/hw_04_thread/WaitNotifyABC.class",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04/target/classes/hw_04_thread/WaitNotifyABC.class",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04/target/classes/hw_04_thread/WaitNotifyABC.class?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6"
  },
  {
    "sha": "1e349ca78751b5c86dc2fafb5b3ae20f653e8b27",
    "filename": "level_03/hw_04chat/bcow.db",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/bcow.db",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/bcow.db",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/bcow.db?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6"
  },
  {
    "sha": "c9ba0230afa488a1253217c4d734363bd1216669",
    "filename": "level_03/hw_04chat/client/pom.xml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/pom.xml",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/pom.xml",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/pom.xml?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>ru.geekbrains.level03.itia</artifactId>\n+        <groupId>ru.geekbrains.courses.java.level03.itia</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>client</artifactId>\n+\n+    <properties>\n+        <maven.compiler.source>8</maven.compiler.source>\n+        <maven.compiler.target>8</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "9f390afe9557a8240b1927c15e1dc7005f6ea0c2",
    "filename": "level_03/hw_04chat/client/src/main/java/client/Controller.java",
    "status": "added",
    "additions": 250,
    "deletions": 0,
    "changes": 250,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/java/client/Controller.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/java/client/Controller.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/src/main/java/client/Controller.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,250 @@\n+package client;\n+\n+import commands.Command;\n+import javafx.application.Platform;\n+import javafx.event.ActionEvent;\n+import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n+import javafx.fxml.Initializable;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.scene.control.ListView;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextArea;\n+import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseEvent;\n+import javafx.scene.layout.HBox;\n+import javafx.stage.Modality;\n+import javafx.stage.Stage;\n+import javafx.stage.StageStyle;\n+\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.net.Socket;\n+import java.net.URL;\n+import java.util.ResourceBundle;\n+\n+public class Controller implements Initializable {\n+    @FXML\n+    public TextArea textArea;\n+    @FXML\n+    public TextField textField;\n+    @FXML\n+    public TextField loginField;\n+    @FXML\n+    public PasswordField passwordField;\n+    @FXML\n+    public HBox authPanel;\n+    @FXML\n+    public HBox msgPanel;\n+    @FXML\n+    public ListView<String> clientList;\n+\n+    private Socket socket;\n+    private DataInputStream in;\n+    private DataOutputStream out;\n+    private final int PORT = 8189;\n+    private final String IP_ADDRESS = \"localhost\";\n+\n+    private boolean authenticated;\n+    private String nickname;\n+    private Stage stage;\n+    private Stage regStage;\n+    private RegController regController;\n+\n+    private String login;\n+\n+    public void setAuthenticated(boolean authenticated) {\n+        this.authenticated = authenticated;\n+        msgPanel.setVisible(authenticated);\n+        msgPanel.setManaged(authenticated);\n+        authPanel.setVisible(!authenticated);\n+        authPanel.setManaged(!authenticated);\n+        clientList.setVisible(authenticated);\n+        clientList.setManaged(authenticated);\n+\n+        if (!authenticated) {\n+            nickname = \"\";\n+            LocalChatHistoryFile.stopLocalHistory();\n+        }\n+        textArea.clear();\n+        setTitle(nickname);\n+        login = loginField.getText().trim();\n+    }\n+\n+    @Override\n+    public void initialize(URL location, ResourceBundle resources) {\n+        Platform.runLater(() -> {\n+            stage = (Stage) textArea.getScene().getWindow();\n+            stage.setOnCloseRequest(event -> {\n+                System.out.println(\"bye\");\n+                if (socket != null && !socket.isClosed()) {\n+                    try {\n+                        out.writeUTF(Command.END);\n+                    } catch (IOException e) {\n+                        e.printStackTrace();\n+                    }\n+                }\n+            });\n+        });\n+        setAuthenticated(false);\n+    }\n+\n+    private void connect() {\n+        try {\n+            socket = new Socket(IP_ADDRESS, PORT);\n+            in = new DataInputStream(socket.getInputStream());\n+            out = new DataOutputStream(socket.getOutputStream());\n+\n+            new Thread(() -> {\n+                try {\n+                    // цикл аутентификации\n+                    while (true) {\n+                        String str = in.readUTF();\n+\n+                        if (str.startsWith(\"/\")) {\n+                            if (str.equals(Command.END)) {\n+                                throw new RuntimeException(\"Сервак нас отключает\");\n+                            }\n+                            if (str.startsWith(Command.AUTH_OK)) {\n+                                String[] token = str.split(\"\\\\s\");\n+                                nickname = token[1];\n+                                setAuthenticated(true);\n+                                // *** читаем и выводим историю из файла *** //\n+                                //textArea.appendText(LocalChatHistoryFile.getLocalChatHistory(login, 100));\n+                                // история сообщений в локальный файл\n+                                //LocalChatHistoryFile.startLocalHistory(login);\n+\n+                                break;\n+                            }\n+\n+                            if(str.equals(Command.REG_OK)){\n+                                regController.setResultTryToReg(Command.REG_OK);\n+                            }\n+\n+                            if(str.equals(Command.REG_NO)){\n+                                regController.setResultTryToReg(Command.REG_NO);\n+                            }\n+                        } else {\n+                            textArea.appendText(str + \"\\n\");\n+                        }\n+                    }\n+                    //цикл работы\n+                    while (true) {\n+                        String str = in.readUTF();\n+\n+                        if (str.startsWith(\"/\")) {\n+                            if (str.equals(Command.END)) {\n+                                System.out.println(\"Client disconnected\");\n+                                break;\n+                            }\n+                            if (str.startsWith(Command.CLIENT_LIST)) {\n+                                String[] token = str.split(\"\\\\s\");\n+                                Platform.runLater(() -> {\n+                                    clientList.getItems().clear();\n+                                    for (int i = 1; i < token.length; i++) {\n+                                        clientList.getItems().add(token[i]);\n+                                    }\n+                                });\n+                            }\n+\n+                            // смена ника\n+                            if (str.startsWith(Command.NEW_NICK)){\n+                                nickname = str.split(\"\\\\s\")[1];\n+                                setTitle(nickname);\n+                            }\n+\n+                        } else {\n+                            textArea.appendText(str + \"\\n\");\n+                            // сообщение пишем в файл с локальной историей\n+                            //LocalChatHistoryFile.writeLine(str);\n+                        }\n+                    }\n+                } catch (RuntimeException e) {\n+                    System.out.println(e.getMessage());\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n+                } finally {\n+                    setAuthenticated(false);\n+                    try {\n+                        socket.close();\n+                    } catch (IOException e) {\n+                        e.printStackTrace();\n+                    }\n+                }\n+            }).start();\n+\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public void sendMsg(ActionEvent actionEvent) {\n+        try {\n+            out.writeUTF(textField.getText());\n+            textField.clear();\n+            textField.requestFocus();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public void tryToAuth(ActionEvent actionEvent) {\n+        if (socket == null || socket.isClosed()) {\n+            connect();\n+        }\n+\n+        try {\n+            out.writeUTF(String.format(\"%s %s %s\", Command.AUTH, loginField.getText().trim(), passwordField.getText().trim()));\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        } finally {\n+            passwordField.clear();\n+        }\n+    }\n+\n+    private void setTitle(String nickname) {\n+        Platform.runLater(() -> {\n+            if (nickname.equals(\"\")) {\n+                stage.setTitle(\"Best chat of World\");\n+            } else {\n+                stage.setTitle(String.format(\"Best chat of World - [ %s ]\", nickname));\n+            }\n+        });\n+    }\n+\n+    public void clientListMouseReleased(MouseEvent mouseEvent) {\n+        System.out.println(clientList.getSelectionModel().getSelectedItem());\n+        String msg = String.format(\"%s %s \", Command.PRIVATE_MSG, clientList.getSelectionModel().getSelectedItem());\n+        textField.setText(msg);\n+    }\n+\n+    public void showRegWindow(ActionEvent actionEvent) {\n+        if (regStage == null) {\n+            initRegWindow();\n+        }\n+        regStage.show();\n+    }\n+\n+    private void initRegWindow() {\n+        try {\n+            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"/reg.fxml\"));\n+            Parent root = fxmlLoader.load();\n+\n+            regController = fxmlLoader.getController();\n+            regController.setController(this);\n+\n+            regStage = new Stage();\n+            regStage.setTitle(\"Best chat of World registration\");\n+            regStage.setScene(new Scene(root, 450, 350));\n+            regStage.initStyle(StageStyle.UTILITY);\n+            regStage.initModality(Modality.APPLICATION_MODAL);\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}"
  },
  {
    "sha": "45a7d8a8d9ae8ca37f7e143533ab9f1ed65750c3",
    "filename": "level_03/hw_04chat/client/src/main/java/client/LocalChatHistoryFile.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/java/client/LocalChatHistoryFile.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/java/client/LocalChatHistoryFile.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/src/main/java/client/LocalChatHistoryFile.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,57 @@\n+package client;\n+\n+import commands.Command;\n+\n+import java.io.*;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+public class LocalChatHistoryFile {\n+    private static PrintStream outPrintStream;\n+\n+    public static void startLocalHistory(String login){\n+        try {\n+            outPrintStream = new PrintStream(new FileOutputStream(getLocalFileHistoryByLogin(login),true));\n+        } catch (FileNotFoundException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public static void stopLocalHistory(){\n+        if (outPrintStream != null){\n+            outPrintStream.close();\n+        }\n+    }\n+\n+    public static void writeLine(String message){\n+        outPrintStream.println(message);\n+    }\n+\n+    private static String getLocalFileHistoryByLogin(String login){\n+        return Command.HISTORY_FILE_PATH + \"history_\" + login + \".txt\";\n+    }\n+\n+    public static String getLocalChatHistory(String login, int showLineFrom){\n+        if (!Files.exists(Paths.get(getLocalFileHistoryByLogin(login)))) {\n+            return \"Не найден файл истории\";\n+        }\n+        StringBuilder sb = new StringBuilder();\n+        try {\n+            List<String> chatHistory = Files.readAllLines( Paths.get(getLocalFileHistoryByLogin(login)) );\n+            int startPosition = 0;\n+            if (chatHistory.size() > showLineFrom){\n+                startPosition = chatHistory.size() - showLineFrom;\n+            }\n+            for (int i = startPosition; i < chatHistory.size(); i++){\n+                sb.append(chatHistory.get(i)).append(System.lineSeparator());\n+            }\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        return sb.toString();\n+    }\n+\n+}"
  },
  {
    "sha": "f3eb8a7f61292751566a11960e546de40404dbb3",
    "filename": "level_03/hw_04chat/client/src/main/java/client/Main.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/java/client/Main.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/java/client/Main.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/src/main/java/client/Main.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,23 @@\n+package client;\n+\n+import javafx.application.Application;\n+import javafx.fxml.FXMLLoader;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.stage.Stage;\n+\n+public class Main extends Application {\n+\n+    @Override\n+    public void start(Stage primaryStage) throws Exception{\n+        Parent root = FXMLLoader.load(getClass().getResource(\"/sample.fxml\"));\n+        primaryStage.setTitle(\"Best chat of World\");\n+        primaryStage.setScene(new Scene(root, 500, 375));\n+        primaryStage.show();\n+    }\n+\n+\n+    public static void main(String[] args) {\n+        launch(args);\n+    }\n+}"
  },
  {
    "sha": "1fde52046ba73a1d3389bb749252caeaab95e3a9",
    "filename": "level_03/hw_04chat/client/src/main/java/client/RegController.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/java/client/RegController.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/java/client/RegController.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/src/main/java/client/RegController.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,44 @@\n+package client;\n+\n+import commands.Command;\n+import javafx.event.ActionEvent;\n+import javafx.fxml.FXML;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextArea;\n+import javafx.scene.control.TextField;\n+\n+public class RegController {\n+    @FXML\n+    private TextField loginField;\n+    @FXML\n+    private PasswordField passwordField;\n+    @FXML\n+    private TextField nicknameField;\n+    @FXML\n+    private TextArea textArea;\n+\n+    private Controller controller;\n+\n+    public void setController(Controller controller) {\n+        this.controller = controller;\n+    }\n+\n+    public void setResultTryToReg(String command) {\n+        if (command.equals(Command.REG_OK)) {\n+            textArea.appendText(\"Регистрация прошла успешно\\n\");\n+        }\n+        if (command.equals(Command.REG_NO)) {\n+            textArea.appendText(\"Логин или никнейм уже заняты\\n\");\n+        }\n+    }\n+\n+    public void tryToReg(ActionEvent actionEvent) {\n+        String login = loginField.getText().trim();\n+        String password = passwordField.getText().trim();\n+        String nickname = nicknameField.getText().trim();\n+\n+        if (login.length() * password.length() * nickname.length() == 0) {\n+            return;\n+        }\n+    }\n+}"
  },
  {
    "sha": "88225fafbd4317a43920a44f34cf580508085bb9",
    "filename": "level_03/hw_04chat/client/src/main/resources/css/style.css",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/resources/css/style.css",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/resources/css/style.css",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/src/main/resources/css/style.css?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,3 @@\n+.root{\n+    -fx-font-size: 16;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "9b3bc4dca09525897654e9c8e402ac1943464271",
    "filename": "level_03/hw_04chat/client/src/main/resources/reg.fxml",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/resources/reg.fxml",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/resources/reg.fxml",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/src/main/resources/reg.fxml?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,23 @@\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.TextArea?>\n+<?import javafx.scene.control.TextField?>\n+<?import javafx.scene.layout.HBox?>\n+<?import javafx.scene.layout.VBox?>\n+<?import java.net.URL?>\n+<?import javafx.scene.control.PasswordField?>\n+<?import javafx.scene.control.ListView?>\n+<VBox fx:controller=\"client.RegController\"\n+      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\">\n+    <stylesheets>\n+        <URL value=\"@/css/style.css\"/>\n+    </stylesheets>\n+\n+    <TextField fx:id=\"loginField\" promptText=\"login\"/>\n+    <PasswordField fx:id=\"passwordField\" promptText=\"password\"/>\n+    <TextField fx:id=\"nicknameField\" promptText=\"nickname\"/>\n+    <TextArea fx:id=\"textArea\" VBox.vgrow=\"ALWAYS\"/>\n+\n+    <Button text=\"reg\" minWidth=\"100\" onAction=\"#tryToReg\"/>\n+\n+\n+</VBox>\n\\ No newline at end of file"
  },
  {
    "sha": "3cda20569214601abdc0f01e556dd9c4d6a6ffa9",
    "filename": "level_03/hw_04chat/client/src/main/resources/sample.fxml",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/resources/sample.fxml",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/src/main/resources/sample.fxml",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/src/main/resources/sample.fxml?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,33 @@\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.TextArea?>\n+<?import javafx.scene.control.TextField?>\n+<?import javafx.scene.layout.HBox?>\n+<?import javafx.scene.layout.VBox?>\n+<?import java.net.URL?>\n+<?import javafx.scene.control.PasswordField?>\n+<?import javafx.scene.control.ListView?>\n+<VBox fx:controller=\"client.Controller\"\n+      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\">\n+    <stylesheets>\n+        <URL value=\"@/css/style.css\"/>\n+    </stylesheets>\n+\n+    <HBox fx:id=\"authPanel\">\n+        <TextField fx:id=\"loginField\" HBox.hgrow=\"ALWAYS\" promptText=\"login\"/>\n+        <PasswordField fx:id=\"passwordField\" HBox.hgrow=\"ALWAYS\" promptText=\"password\" onAction=\"#tryToAuth\"/>\n+        <Button text=\"auth\" onAction=\"#tryToAuth\" minWidth=\"100\"/>\n+        <Button text=\"reg\" onAction=\"#showRegWindow\" minWidth=\"100\"/>\n+    </HBox>\n+\n+    <HBox VBox.vgrow =\"ALWAYS\">\n+        <TextArea fx:id=\"textArea\" HBox.hgrow=\"ALWAYS\" editable=\"false\"/>\n+        <ListView fx:id=\"clientList\" visible=\"false\" managed=\"false\" minWidth=\"100\"\n+                  onMouseReleased=\"#clientListMouseReleased\"/>\n+    </HBox>\n+\n+\n+    <HBox fx:id=\"msgPanel\" visible=\"false\" managed=\"false\">\n+        <TextField fx:id=\"textField\" HBox.hgrow=\"ALWAYS\" promptText=\"input text\" onAction=\"#sendMsg\"/>\n+        <Button text=\"send\" onAction=\"#sendMsg\"/>\n+    </HBox>\n+</VBox>\n\\ No newline at end of file"
  },
  {
    "sha": "d469e07ac45bde6d1e17b8e8ab16b6d367645a8e",
    "filename": "level_03/hw_04chat/client/target/classes/client/Controller.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/client/Controller.class",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/client/Controller.class",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/target/classes/client/Controller.class?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6"
  },
  {
    "sha": "6539fec301f1253cf38c9dbb9b6a13ab525b485f",
    "filename": "level_03/hw_04chat/client/target/classes/client/LocalChatHistoryFile.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/client/LocalChatHistoryFile.class",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/client/LocalChatHistoryFile.class",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/target/classes/client/LocalChatHistoryFile.class?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6"
  },
  {
    "sha": "83e0c612830e097b07bb638e3ef0cd4cefdb5788",
    "filename": "level_03/hw_04chat/client/target/classes/client/Main.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/client/Main.class",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/client/Main.class",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/target/classes/client/Main.class?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6"
  },
  {
    "sha": "cacd1e490f1cd5f8873fcd1d5c28cc6669a77a5e",
    "filename": "level_03/hw_04chat/client/target/classes/client/RegController.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/client/RegController.class",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/client/RegController.class",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/target/classes/client/RegController.class?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6"
  },
  {
    "sha": "88225fafbd4317a43920a44f34cf580508085bb9",
    "filename": "level_03/hw_04chat/client/target/classes/css/style.css",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/css/style.css",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/css/style.css",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/target/classes/css/style.css?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,3 @@\n+.root{\n+    -fx-font-size: 16;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "9b3bc4dca09525897654e9c8e402ac1943464271",
    "filename": "level_03/hw_04chat/client/target/classes/reg.fxml",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/reg.fxml",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/reg.fxml",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/target/classes/reg.fxml?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,23 @@\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.TextArea?>\n+<?import javafx.scene.control.TextField?>\n+<?import javafx.scene.layout.HBox?>\n+<?import javafx.scene.layout.VBox?>\n+<?import java.net.URL?>\n+<?import javafx.scene.control.PasswordField?>\n+<?import javafx.scene.control.ListView?>\n+<VBox fx:controller=\"client.RegController\"\n+      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\">\n+    <stylesheets>\n+        <URL value=\"@/css/style.css\"/>\n+    </stylesheets>\n+\n+    <TextField fx:id=\"loginField\" promptText=\"login\"/>\n+    <PasswordField fx:id=\"passwordField\" promptText=\"password\"/>\n+    <TextField fx:id=\"nicknameField\" promptText=\"nickname\"/>\n+    <TextArea fx:id=\"textArea\" VBox.vgrow=\"ALWAYS\"/>\n+\n+    <Button text=\"reg\" minWidth=\"100\" onAction=\"#tryToReg\"/>\n+\n+\n+</VBox>\n\\ No newline at end of file"
  },
  {
    "sha": "3cda20569214601abdc0f01e556dd9c4d6a6ffa9",
    "filename": "level_03/hw_04chat/client/target/classes/sample.fxml",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/sample.fxml",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/client/target/classes/sample.fxml",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/client/target/classes/sample.fxml?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,33 @@\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.TextArea?>\n+<?import javafx.scene.control.TextField?>\n+<?import javafx.scene.layout.HBox?>\n+<?import javafx.scene.layout.VBox?>\n+<?import java.net.URL?>\n+<?import javafx.scene.control.PasswordField?>\n+<?import javafx.scene.control.ListView?>\n+<VBox fx:controller=\"client.Controller\"\n+      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\">\n+    <stylesheets>\n+        <URL value=\"@/css/style.css\"/>\n+    </stylesheets>\n+\n+    <HBox fx:id=\"authPanel\">\n+        <TextField fx:id=\"loginField\" HBox.hgrow=\"ALWAYS\" promptText=\"login\"/>\n+        <PasswordField fx:id=\"passwordField\" HBox.hgrow=\"ALWAYS\" promptText=\"password\" onAction=\"#tryToAuth\"/>\n+        <Button text=\"auth\" onAction=\"#tryToAuth\" minWidth=\"100\"/>\n+        <Button text=\"reg\" onAction=\"#showRegWindow\" minWidth=\"100\"/>\n+    </HBox>\n+\n+    <HBox VBox.vgrow =\"ALWAYS\">\n+        <TextArea fx:id=\"textArea\" HBox.hgrow=\"ALWAYS\" editable=\"false\"/>\n+        <ListView fx:id=\"clientList\" visible=\"false\" managed=\"false\" minWidth=\"100\"\n+                  onMouseReleased=\"#clientListMouseReleased\"/>\n+    </HBox>\n+\n+\n+    <HBox fx:id=\"msgPanel\" visible=\"false\" managed=\"false\">\n+        <TextField fx:id=\"textField\" HBox.hgrow=\"ALWAYS\" promptText=\"input text\" onAction=\"#sendMsg\"/>\n+        <Button text=\"send\" onAction=\"#sendMsg\"/>\n+    </HBox>\n+</VBox>\n\\ No newline at end of file"
  },
  {
    "sha": "8bbf6df2d92bc5840e96e59750d626fd2425604b",
    "filename": "level_03/hw_04chat/command/pom.xml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/command/pom.xml",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/command/pom.xml",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/command/pom.xml?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>ru.geekbrains.level03.itia</artifactId>\n+        <groupId>ru.geekbrains.courses.java.level03.itia</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>command</artifactId>\n+\n+    <properties>\n+        <maven.compiler.source>8</maven.compiler.source>\n+        <maven.compiler.target>8</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "4c2293316bb4f39bdb24c149654d9fb179096483",
    "filename": "level_03/hw_04chat/command/src/main/java/commands/Command.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/command/src/main/java/commands/Command.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/command/src/main/java/commands/Command.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/command/src/main/java/commands/Command.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,16 @@\n+package commands;\n+\n+public class Command {\n+    public static final String END = \"/end\";\n+    public static final String AUTH = \"/auth\";\n+    public static final String AUTH_OK = \"/authok\";\n+    public static final String PRIVATE_MSG = \"/w\";\n+    public static final String CLIENT_LIST = \"/clientlist\";\n+    public static final String REG = \"/reg\";\n+    public static final String REG_OK = \"/regok\";\n+    public static final String REG_NO = \"/regno\";\n+    public static final String CHANGE_NICK = \"/chnick\";\n+    public static final String NEW_NICK = \"/newnick \";\n+    public static final String HISTORY_FILE_PATH = \"client_chat_history/\";\n+\n+}"
  },
  {
    "sha": "5b89bc9c42cf9a33bb9f3a14b28b89b8a3ef814e",
    "filename": "level_03/hw_04chat/command/target/classes/commands/Command.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/command/target/classes/commands/Command.class",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/command/target/classes/commands/Command.class",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/command/target/classes/commands/Command.class?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6"
  },
  {
    "sha": "763f94d632a7db44d6eed9444e22973eb2d9730d",
    "filename": "level_03/hw_04chat/pom.xml",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/pom.xml",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/pom.xml",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/pom.xml?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>ru.geekbrains.courses.java.level03.itia</groupId>\n+    <artifactId>ru.geekbrains.level03.itia</artifactId>\n+    <packaging>pom</packaging>\n+    <version>1.0-SNAPSHOT</version>\n+    <modules>\n+        <module>client</module>\n+        <module>command</module>\n+        <module>server</module>\n+    </modules>\n+\n+    <properties>\n+        <maven.compiler.source>8</maven.compiler.source>\n+        <maven.compiler.target>8</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "9c6ad95c70ccab6b8e68960f363b02c246c07906",
    "filename": "level_03/hw_04chat/server/pom.xml",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/pom.xml",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/pom.xml",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/server/pom.xml?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>ru.geekbrains.level03.itia</artifactId>\n+        <groupId>ru.geekbrains.courses.java.level03.itia</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>server</artifactId>\n+\n+    <properties>\n+        <maven.compiler.source>8</maven.compiler.source>\n+        <maven.compiler.target>8</maven.compiler.target>\n+    </properties>\n+\n+    <dependencies>\n+        <!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->\n+        <dependency>\n+            <groupId>org.xerial</groupId>\n+            <artifactId>sqlite-jdbc</artifactId>\n+            <version>3.32.3.2</version>\n+        </dependency>\n+    </dependencies>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "f48ec63c399179d7c798bef65ac5195133f8fb08",
    "filename": "level_03/hw_04chat/server/src/main/java/server/AuthService.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/AuthService.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/AuthService.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/server/src/main/java/server/AuthService.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,7 @@\n+package server;\n+\n+public interface AuthService {\n+    String getNicknameByLoginAndPassword(String login, String password);\n+    boolean registration(String login, String password, String nickname);\n+    boolean changeNickname(String nickname, String newNickname);\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2e4498c558f9d974466e113938e8da9f799b739c",
    "filename": "level_03/hw_04chat/server/src/main/java/server/ClientHandler.java",
    "status": "added",
    "additions": 173,
    "deletions": 0,
    "changes": 173,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/ClientHandler.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/ClientHandler.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/server/src/main/java/server/ClientHandler.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,173 @@\n+package server;\n+\n+import commands.Command;\n+\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.net.Socket;\n+import java.net.SocketTimeoutException;\n+\n+public class ClientHandler {\n+    private Server server;\n+    private Socket socket;\n+    private DataInputStream in;\n+    private DataOutputStream out;\n+\n+    private String nickname;\n+    private String login;\n+\n+    public ClientHandler(Server server, Socket socket) {\n+        try {\n+            this.server = server;\n+            this.socket = socket;\n+            in = new DataInputStream(socket.getInputStream());\n+            out = new DataOutputStream(socket.getOutputStream());\n+\n+            //одиночный поток отключаем\n+//            new Thread(() -> {\n+\n+            // автоматические потоки на сервере в пуле потоков через Executor Service\n+            server.getExecutorService().execute(() -> {\n+                try {\n+                    // установка сокет тайм аут\n+                    socket.setSoTimeout(120000);\n+\n+                    // цикл аутентификации\n+                    while (true) {\n+                        String str = in.readUTF();\n+\n+                        //если команда отключиться\n+                        if (str.equals(Command.END)) {\n+                            out.writeUTF(Command.END);\n+                            throw new RuntimeException(\"Клиент захотел отключиться\");\n+                        }\n+\n+                        //если команда аутентификация\n+                        if (str.startsWith(Command.AUTH)) {\n+                            String[] token = str.split(\"\\\\s\", 3);\n+                            if (token.length < 3) {\n+                                continue;\n+                            }\n+                            String newNick = server.getAuthService()\n+                                    .getNicknameByLoginAndPassword(token[1], token[2]);\n+                            login = token[1];\n+                            if (newNick != null) {\n+                                if (!server.isLoginAuthenticated(login)) {\n+                                    nickname = newNick;\n+                                    sendMsg(Command.AUTH_OK + \" \" + nickname);\n+                                    server.subscribe(this);\n+                                    System.out.println(\"client: \" + socket.getRemoteSocketAddress() +\n+                                            \" connected with nick: \" + nickname);\n+                                    socket.setSoTimeout(0);\n+\n+                                    // отключение сообщений из БД\n+                                    sendMsg(SQLHandler.getMessageForNik(nickname));\n+\n+                                    break;\n+                                } else {\n+                                    sendMsg(\"Данная учетная запись уже используется\");\n+                                }\n+                            } else {\n+                                sendMsg(\"Неверный логин / пароль\");\n+                            }\n+                        }\n+\n+                        //если команда регистрация\n+                        if (str.startsWith(Command.REG)) {\n+                            String[] token = str.split(\"\\\\s\", 4);\n+                            if (token.length < 4) {\n+                                continue;\n+                            }\n+                            boolean regSuccess = server.getAuthService()\n+                                    .registration(token[1], token[2], token[3]);\n+                            if (regSuccess) {\n+                                sendMsg(Command.REG_OK);\n+                            } else {\n+                                sendMsg(Command.REG_NO);\n+                            }\n+                        }\n+                    }\n+\n+                    //цикл работы\n+                    while (true) {\n+                        String str = in.readUTF();\n+\n+                        if (str.startsWith(\"/\")) {\n+                            if (str.equals(Command.END)) {\n+                                out.writeUTF(Command.END);\n+                                break;\n+                            }\n+\n+                            if (str.startsWith(Command.PRIVATE_MSG)) {\n+                                String[] token = str.split(\"\\\\s\", 3);\n+                                if (token.length < 3) {\n+                                    continue;\n+                                }\n+                                server.privateMsg(this, token[1], token[2]);\n+                            }\n+\n+                            // смена ника\n+                            if (str.startsWith(Command.CHANGE_NICK)){\n+                                String[] token = str.split(\"\\\\s\", 2);\n+                                if (token.length < 2) {\n+                                    continue;\n+                                }\n+                                if (token[1].contains(\" \")){\n+                                    sendMsg(\"Ник не может содержать пробелы\");\n+                                    continue;\n+                                }\n+                                if (server.getAuthService().changeNickname(this.nickname, token[1])){\n+                                    sendMsg(Command.NEW_NICK + token[1]);\n+                                    sendMsg(\"Ваш ник изменился на \" + token[1]);\n+                                    this.nickname = token[1];\n+                                    server.broadcastClientlist();\n+                                } else {\n+                                    sendMsg(\"Не удалось изменить ник. Ник \" + token[1] + \" уже существует!\");\n+                                }\n+                            }\n+\n+\n+                        } else {\n+                            server.broadcastMsg(this, str);\n+                        }\n+                    }\n+                } catch (SocketTimeoutException e) {\n+                    sendMsg(Command.END);\n+                } catch (RuntimeException e) {\n+                    System.out.println(e.getMessage());\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n+                } finally {\n+                    server.unsubscribe(this);\n+                    System.out.println(\"Client disconnected: \" + nickname);\n+                    try {\n+                        socket.close();\n+                    } catch (IOException e) {\n+                        e.printStackTrace();\n+                    }\n+                }\n+// одиночный поток отключаем\n+                //            }).start();\n+            });\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public void sendMsg(String msg) {\n+        try {\n+            out.writeUTF(msg);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public String getNickname() {\n+        return nickname;\n+    }\n+\n+    public String getLogin() {\n+        return login;\n+    }\n+}"
  },
  {
    "sha": "3c64dbb46fcc5a2fabb4b5d118444ade65c3b921",
    "filename": "level_03/hw_04chat/server/src/main/java/server/DatabaseAuthService.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/DatabaseAuthService.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/DatabaseAuthService.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/server/src/main/java/server/DatabaseAuthService.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,18 @@\n+package server;\n+\n+public class DatabaseAuthService implements AuthService {\n+    @Override\n+    public String getNicknameByLoginAndPassword(String login, String password) {\n+        return SQLHandler.getNicknameByLoginAndPassword(login, password);\n+    }\n+\n+    @Override\n+    public boolean registration(String login, String password, String nickname) {\n+        return SQLHandler.registration(login, password, nickname);\n+    }\n+\n+    @Override\n+    public boolean changeNickname(String nickname, String newNickname) {\n+        return SQLHandler.changeNick(nickname, newNickname);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "d09d2c58d613620721673d0eae37c2fd6627a2db",
    "filename": "level_03/hw_04chat/server/src/main/java/server/SQLHandler.java",
    "status": "added",
    "additions": 123,
    "deletions": 0,
    "changes": 123,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/SQLHandler.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/SQLHandler.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/server/src/main/java/server/SQLHandler.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,123 @@\n+package server;\n+\n+import java.sql.*;\n+\n+public class SQLHandler {\n+    private static Connection connection;\n+    private static PreparedStatement psGetNickname;\n+    private static PreparedStatement psRegistration;\n+    private static PreparedStatement psChangeNick;\n+    private static PreparedStatement psAddMessage;\n+    private static PreparedStatement psGetMessage;\n+\n+    public static boolean connect(){\n+\n+        try {\n+            Class.forName(\"org.sqlite.JDBC\");\n+            connection = DriverManager.getConnection(\"jdbc:sqlite:bcow.db\");\n+            prepareAllStatements();\n+            return true;\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            return false;\n+        }\n+    }\n+\n+    public static void disconnect() throws SQLException {\n+        connection.close();\n+    }\n+\n+    private static void prepareAllStatements() throws SQLException {\n+        psGetNickname = connection.prepareStatement(\"SELECT nickname FROM users WHERE login = ? AND password = ?;\");\n+        psRegistration = connection.prepareStatement(\"INSERT INTO users (login, password, nickname) VALUES (?, ?, ?);\");\n+        psChangeNick = connection.prepareStatement(\"UPDATE users SET nickname = ? WHERE nickname = ?;\");\n+\n+        psAddMessage = connection.prepareStatement(\"INSERT INTO messages (sender_id, receiver_id, message, date) VALUES ((SELECT id FROM users WHERE nickname = ?), (SELECT id FROM users WHERE nickname = ?), ?, ?);\");\n+        psGetMessage = connection.prepareStatement(\"SELECT (SELECT nickname FROM users WHERE id = sender_id), (SELECT id FROM users WHERE id = receiver_id), message, date FROM messages WHERE sender_id = (SELECT id FROM users WHERE nickname = ?) OR receiver_id = (SELECT id FROM users WHERE nickname = ?) OR receiver_id = 1;\");\n+    }\n+\n+    public static String getNicknameByLoginAndPassword(String login, String password){\n+        String nick = null;\n+        try {\n+            psGetNickname.setString(1, login);\n+            psGetNickname.setString(2, password);\n+            ResultSet rs = psGetNickname.executeQuery();\n+\n+            if (rs.next()){\n+                nick = rs.getString(1);\n+            }\n+            rs.close();\n+        } catch (SQLException throwables) {\n+            throwables.printStackTrace();\n+        }\n+        return nick;\n+    }\n+\n+    public static boolean registration(String login, String password, String nickname){\n+        try {\n+            psRegistration.setString(1, login);\n+            psRegistration.setString(2, password);\n+            psRegistration.setString(3, nickname);\n+            psRegistration.executeUpdate();\n+            return true;\n+        } catch (SQLException throwables) {\n+            throwables.printStackTrace();\n+            return false;\n+        }\n+    }\n+\n+    public static boolean changeNick(String oldNickname, String newNickname){\n+        try {\n+            psChangeNick.setString(1, newNickname);\n+            psChangeNick.setString(2, oldNickname);\n+            psChangeNick.executeUpdate();\n+            return true;\n+        } catch (SQLException throwables) {\n+            throwables.printStackTrace();\n+            return false;\n+        }\n+    }\n+\n+    public static boolean addMessage(String sender, String receiver, String message, String date){\n+        try {\n+            psAddMessage.setString(1, sender);\n+            psAddMessage.setString(2, receiver);\n+            psAddMessage.setString(3, message);\n+            psAddMessage.setString(4, date);\n+            psAddMessage.executeUpdate();\n+            return true;\n+        } catch (SQLException throwables) {\n+            throwables.printStackTrace();\n+            return false;\n+        }\n+    }\n+\n+    public static String getMessageForNik(String nickname){\n+        StringBuilder sb = new StringBuilder();\n+\n+        try {\n+            psGetMessage.setString(1, nickname);\n+            psGetMessage.setString(2, nickname);\n+            ResultSet rs = psGetMessage.executeQuery();\n+\n+            while (rs.next()){\n+                String sender = rs.getString(1);\n+                String receiver = rs.getString(2);\n+                String message = rs.getString(3);\n+                String dateMsg = rs.getString(4);\n+\n+                if (receiver.equals(\"1\")){\n+                    sb.append(String.format(\"[ %s ]: %s\\n\", sender, message));\n+                } else {\n+                    sb.append(String.format(\"[ %s ] to [ %s ]: %s\\n\", sender, receiver, message));\n+                }\n+            }\n+            rs.close();\n+\n+        } catch (SQLException throwables) {\n+            throwables.printStackTrace();\n+        }\n+        return sb.toString();\n+    }\n+\n+}"
  },
  {
    "sha": "ef5459777cb7f71191d7500dd12444823248f792",
    "filename": "level_03/hw_04chat/server/src/main/java/server/Server.java",
    "status": "added",
    "additions": 146,
    "deletions": 0,
    "changes": 146,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/Server.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/Server.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/server/src/main/java/server/Server.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,146 @@\n+package server;\n+\n+import commands.Command;\n+\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+import java.sql.*;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Scanner;\n+import java.util.Vector;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+public class Server {\n+    private final int PORT = 8189;\n+    private ServerSocket server;\n+    private Socket socket;\n+    private DataInputStream in;\n+    private DataOutputStream out;\n+\n+    private List<ClientHandler> clients;\n+    private AuthService authService;\n+\n+    private Connection connection;\n+    private Statement stmt;\n+    private PreparedStatement psUpdate;\n+\n+    private ExecutorService executorService;\n+\n+    public Server() {\n+        executorService = Executors.newCachedThreadPool();\n+\n+        clients = new CopyOnWriteArrayList<>();\n+//        authService = new SimpleAuthService();\n+\n+        if (!SQLHandler.connect()) {\n+            throw new RuntimeException(\"Не удалось подключиться к БД\");\n+        }\n+        authService = new DatabaseAuthService();\n+\n+        try {\n+            server = new ServerSocket(PORT);\n+            System.out.println(\"Server started\");\n+\n+            while (true) {\n+                socket = server.accept();\n+                System.out.println(\"Client connected\");\n+                System.out.println(\"client: \" + socket.getRemoteSocketAddress());\n+                new ClientHandler(this, socket);\n+            }\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        } finally {\n+            try {\n+                SQLHandler.disconnect();\n+            } catch (SQLException throwables) {\n+                throwables.printStackTrace();\n+            }\n+            try {\n+                socket.close();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            try {\n+                server.close();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+    }\n+\n+    public void broadcastMsg(ClientHandler sender, String msg){\n+        String message = String.format(\"[ %s ]: %s\", sender.getNickname(), msg);\n+        SQLHandler.addMessage(sender.getNickname(), \"null\", msg, \"2021.03.11 10:10\");\n+\n+        for (ClientHandler c : clients) {\n+            c.sendMsg(message);\n+        }\n+    }\n+\n+    public void privateMsg(ClientHandler sender,String receiver, String msg){\n+        String message = String.format(\"[ %s ] to [ %s ]: %s\", sender.getNickname(), receiver, msg);\n+        for (ClientHandler c : clients) {\n+            if(c.getNickname().equals(receiver)){\n+                c.sendMsg(message);\n+\n+                SQLHandler.addMessage(sender.getNickname(), receiver, message, \"2021.03.11 12:12\");\n+\n+                if(!c.equals(sender)){\n+                    sender.sendMsg(message);\n+                }\n+                return;\n+            }\n+        }\n+        sender.sendMsg(\"not found user: \"+ receiver);\n+    }\n+\n+    public void subscribe(ClientHandler clientHandler){\n+        clients.add(clientHandler);\n+        broadcastClientlist();\n+    }\n+\n+    public void unsubscribe(ClientHandler clientHandler){\n+        clients.remove(clientHandler);\n+        broadcastClientlist();\n+    }\n+\n+    public AuthService getAuthService() {\n+        return authService;\n+    }\n+\n+    public boolean isLoginAuthenticated(String login){\n+        for (ClientHandler c : clients) {\n+            if(c.getLogin().equals(login)){\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public void broadcastClientlist(){\n+        StringBuilder sb = new StringBuilder(Command.CLIENT_LIST);\n+\n+        for (ClientHandler c : clients) {\n+            sb.append(\" \").append(c.getNickname());\n+        }\n+\n+        String msg = sb.toString();\n+\n+        for (ClientHandler c : clients) {\n+            c.sendMsg(msg);\n+        }\n+    }\n+\n+    public ExecutorService getExecutorService() {\n+        return executorService;\n+    }\n+}"
  },
  {
    "sha": "c3c32c33b17eb2ee7f923f91afaa58b1efe6cf9e",
    "filename": "level_03/hw_04chat/server/src/main/java/server/SimpleAuthService.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/ateresit/geekbrains_java/blob/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/SimpleAuthService.java",
    "raw_url": "https://github.com/ateresit/geekbrains_java/raw/41300efdfecd18438e582be6b9ed4db74ba4ffc6/level_03/hw_04chat/server/src/main/java/server/SimpleAuthService.java",
    "contents_url": "https://api.github.com/repos/ateresit/geekbrains_java/contents/level_03/hw_04chat/server/src/main/java/server/SimpleAuthService.java?ref=41300efdfecd18438e582be6b9ed4db74ba4ffc6",
    "patch": "@@ -0,0 +1,61 @@\n+package server;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class SimpleAuthService implements AuthService {\n+    private class UserData {\n+        String login;\n+        String password;\n+        String nickname;\n+\n+        public UserData(String login, String password, String nickname) {\n+            this.login = login;\n+            this.password = password;\n+            this.nickname = nickname;\n+        }\n+    }\n+\n+    private List<UserData> users;\n+\n+    public SimpleAuthService() {\n+        users = new ArrayList<>();\n+        users.add(new UserData(\"qwe\", \"qwe\", \"qwe\"));\n+        users.add(new UserData(\"asd\", \"asd\", \"asd\"));\n+        users.add(new UserData(\"zxc\", \"zxc\", \"zxc\"));\n+\n+        for (int i = 1; i < 10; i++) {\n+            users.add(new UserData(\"login\" + i, \"pass\" + i, \"nick\" + i));\n+        }\n+    }\n+\n+    @Override\n+    public String getNicknameByLoginAndPassword(String login, String password) {\n+        for (UserData user : users) {\n+            if(user.login.equals(login) && user.password.equals(password)){\n+                return user.nickname;\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    @Override\n+    public boolean registration(String login, String password, String nickname) {\n+        for (UserData user : users) {\n+            if(user.login.equals(login) || user.nickname.equals(nickname)){\n+                return false;\n+            }\n+        }\n+\n+        users.add(new UserData(login, password, nickname));\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean changeNickname(String nickname, String newNickname) {\n+        return false;\n+    }\n+\n+\n+}"
  }
]
