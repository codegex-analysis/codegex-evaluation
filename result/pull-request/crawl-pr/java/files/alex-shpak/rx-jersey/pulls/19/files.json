[
  {
    "sha": "fc615fb88ee3305cce7221140994e02158fec41d",
    "filename": "rxjava2-client/src/main/java/net/winterly/rxjersey/client/rxjava2/FlowableClientMethodInvoker.java",
    "status": "modified",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/alex-shpak/rx-jersey/blob/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/main/java/net/winterly/rxjersey/client/rxjava2/FlowableClientMethodInvoker.java",
    "raw_url": "https://github.com/alex-shpak/rx-jersey/raw/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/main/java/net/winterly/rxjersey/client/rxjava2/FlowableClientMethodInvoker.java",
    "contents_url": "https://api.github.com/repos/alex-shpak/rx-jersey/contents/rxjava2-client/src/main/java/net/winterly/rxjersey/client/rxjava2/FlowableClientMethodInvoker.java?ref=5eace164fa45e8ae623015efde378ad12462f98b",
    "patch": "@@ -25,13 +25,19 @@ public FlowableClientMethodInvoker() {\n \n     @Override\n     public <T> Object method(Invocation.Builder builder, String name, GenericType<T> responseType) {\n+        if (!isConvertibleType(responseType)) {\n+            return builder.method(name, responseType);\n+        }\n         GenericType<?> responseValueType = getValueTypeIfPossible(responseType);\n         Flowable<?> flowable = builder.rx(RxFlowableInvoker.class).method(name, responseValueType);\n         return convert(flowable, responseType);\n     }\n \n     @Override\n     public <T> Object method(Invocation.Builder builder, String name, Entity<?> entity, GenericType<T> responseType) {\n+        if (!isConvertibleType(responseType)) {\n+            return builder.method(name, entity, responseType);\n+        }\n         GenericType<?> responseValueType = getValueTypeIfPossible(responseType);\n         Flowable<?> flowable = builder.rx(RxFlowableInvoker.class).method(name, entity, responseValueType);\n         return convert(flowable, responseType);\n@@ -57,7 +63,11 @@ public FlowableClientMethodInvoker() {\n     }\n \n     private <T> boolean isConvertibleParameterizedType(GenericType<T> type) {\n-        return converters.containsKey(type.getRawType()) && type.getType() instanceof ParameterizedType;\n+        return isConvertibleType(type) && type.getType() instanceof ParameterizedType;\n+    }\n+\n+    private <T> boolean isConvertibleType(GenericType<T> type) {\n+        return converters.containsKey(type.getRawType());\n     }\n \n     private GenericType getContainedType(ParameterizedType type) {"
  },
  {
    "sha": "7b95080a08251ff93e6d4ef229591c3956a51efa",
    "filename": "rxjava2-client/src/test/java/FlowableResourceTest.java",
    "status": "modified",
    "additions": 28,
    "deletions": 4,
    "changes": 32,
    "blob_url": "https://github.com/alex-shpak/rx-jersey/blob/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/FlowableResourceTest.java",
    "raw_url": "https://github.com/alex-shpak/rx-jersey/raw/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/FlowableResourceTest.java",
    "contents_url": "https://api.github.com/repos/alex-shpak/rx-jersey/contents/rxjava2-client/src/test/java/FlowableResourceTest.java?ref=5eace164fa45e8ae623015efde378ad12462f98b",
    "patch": "@@ -12,30 +12,46 @@\n \n     @Test\n     public void shouldReturnContent() {\n-        ObservableResource resource = target(ObservableResource.class);\n+        Resource resource = target(Resource.class);\n         String message = resource.echo(\"hello\").blockingFirst();\n \n         assertEquals(\"hello\", message);\n     }\n \n     @Test\n     public void shouldReturnNoContentOnNull() {\n-        ObservableResource resource = target(ObservableResource.class);\n+        Resource resource = target(Resource.class);\n         String message = resource.empty().blockingFirst();\n \n         assertEquals(\"\", message);\n     }\n \n     @Test(expected = BadRequestException.class)\n     public void shouldHandleError() {\n-        ObservableResource resource = target(ObservableResource.class);\n+        Resource resource = target(Resource.class);\n         String message = resource.error().blockingFirst();\n \n         assertEquals(\"\", message);\n     }\n \n+    @Test\n+    public void shouldReturnContentForNonRxTypes() {\n+        Resource resource = target(Resource.class);\n+        String message = resource.string();\n+\n+        assertEquals(\"string\", message);\n+    }\n+\n+    @Test\n+    public void shouldReturnContentForNonRxTypesWithParam() {\n+        Resource resource = target(Resource.class);\n+        Entity entity = resource.json(\"message\");\n+\n+        assertEquals(\"message\", entity.message);\n+    }\n+\n     @Path(\"/endpoint\")\n-    public interface ObservableResource {\n+    public interface Resource {\n \n         @GET\n         @Path(\"echo\")\n@@ -48,5 +64,13 @@ public void shouldHandleError() {\n         @GET\n         @Path(\"error\")\n         Flowable<String> error();\n+\n+        @GET\n+        @Path(\"string\")\n+        String string();\n+\n+        @GET\n+        @Path(\"json\")\n+        Entity json(@QueryParam(\"message\") String message);\n     }\n }"
  },
  {
    "sha": "49fdb2a98c40c96c0d0d3ae84e608eafcbde64d2",
    "filename": "rxjava2-client/src/test/java/FlowableResponseTest.java",
    "status": "modified",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/alex-shpak/rx-jersey/blob/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/FlowableResponseTest.java",
    "raw_url": "https://github.com/alex-shpak/rx-jersey/raw/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/FlowableResponseTest.java",
    "contents_url": "https://api.github.com/repos/alex-shpak/rx-jersey/contents/rxjava2-client/src/test/java/FlowableResponseTest.java?ref=5eace164fa45e8ae623015efde378ad12462f98b",
    "patch": "@@ -34,6 +34,22 @@ public void shouldHandleError() {\n         assertEquals(Response.Status.BAD_REQUEST.getStatusCode(), response.getStatus());\n     }\n \n+    @Test\n+    public void shouldReturnContentForNonRxTypes() {\n+        Resource resource = target(Resource.class);\n+        Response response = resource.string();\n+\n+        assertEquals(\"string\", response.readEntity(String.class));\n+    }\n+\n+    @Test\n+    public void shouldReturnContentForNonRxTypesWithParam() {\n+        Resource resource = target(Resource.class);\n+        Response response = resource.echo(\"message\");\n+\n+        assertEquals(\"message\", response.readEntity(String.class));\n+    }\n+\n     @Path(\"/endpoint\")\n     public interface Resource {\n \n@@ -48,5 +64,13 @@ public void shouldHandleError() {\n         @GET\n         @Path(\"error\")\n         Flowable<Response> error();\n+\n+        @GET\n+        @Path(\"string\")\n+        Response string();\n+\n+        @GET\n+        @Path(\"echo\")\n+        Response echo(@QueryParam(\"message\") String message);\n     }\n }"
  },
  {
    "sha": "fd8842e2b15b30f5d81d7a7cf529709e58a8e9b7",
    "filename": "rxjava2-client/src/test/java/MaybeResourceTest.java",
    "status": "modified",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/alex-shpak/rx-jersey/blob/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/MaybeResourceTest.java",
    "raw_url": "https://github.com/alex-shpak/rx-jersey/raw/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/MaybeResourceTest.java",
    "contents_url": "https://api.github.com/repos/alex-shpak/rx-jersey/contents/rxjava2-client/src/test/java/MaybeResourceTest.java?ref=5eace164fa45e8ae623015efde378ad12462f98b",
    "patch": "@@ -34,6 +34,22 @@ public void shouldHandleError() {\n         assertEquals(\"\", message);\n     }\n \n+    @Test\n+    public void shouldReturnContentForNonRxTypes() {\n+        Resource resource = target(Resource.class);\n+        String message = resource.string();\n+\n+        assertEquals(\"string\", message);\n+    }\n+\n+    @Test\n+    public void shouldReturnContentForNonRxTypesWithParam() {\n+        Resource resource = target(Resource.class);\n+        Entity entity = resource.json(\"message\");\n+\n+        assertEquals(\"message\", entity.message);\n+    }\n+\n     @Path(\"/endpoint\")\n     public interface Resource {\n \n@@ -48,5 +64,13 @@ public void shouldHandleError() {\n         @GET\n         @Path(\"error\")\n         Maybe<String> error();\n+\n+        @GET\n+        @Path(\"string\")\n+        String string();\n+\n+        @GET\n+        @Path(\"json\")\n+        Entity json(@QueryParam(\"message\") String message);\n     }\n }"
  },
  {
    "sha": "82d600e297e1b022d20b15a6a9f7bc7509692d14",
    "filename": "rxjava2-client/src/test/java/MaybeResponseTest.java",
    "status": "modified",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/alex-shpak/rx-jersey/blob/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/MaybeResponseTest.java",
    "raw_url": "https://github.com/alex-shpak/rx-jersey/raw/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/MaybeResponseTest.java",
    "contents_url": "https://api.github.com/repos/alex-shpak/rx-jersey/contents/rxjava2-client/src/test/java/MaybeResponseTest.java?ref=5eace164fa45e8ae623015efde378ad12462f98b",
    "patch": "@@ -34,6 +34,22 @@ public void shouldHandleError() {\n         assertEquals(Response.Status.BAD_REQUEST.getStatusCode(), response.getStatus());\n     }\n \n+    @Test\n+    public void shouldReturnContentForNonRxTypes() {\n+        Resource resource = target(Resource.class);\n+        Response response = resource.string();\n+\n+        assertEquals(\"string\", response.readEntity(String.class));\n+    }\n+\n+    @Test\n+    public void shouldReturnContentForNonRxTypesWithParam() {\n+        Resource resource = target(Resource.class);\n+        Response response = resource.echo(\"message\");\n+\n+        assertEquals(\"message\", response.readEntity(String.class));\n+    }\n+\n     @Path(\"/endpoint\")\n     public interface Resource {\n \n@@ -48,5 +64,13 @@ public void shouldHandleError() {\n         @GET\n         @Path(\"error\")\n         Maybe<Response> error();\n+\n+        @GET\n+        @Path(\"string\")\n+        Response string();\n+\n+        @GET\n+        @Path(\"echo\")\n+        Response echo(@QueryParam(\"message\") String message);\n     }\n }"
  },
  {
    "sha": "dd102eb53af7c916b86b738ab571fb7fc952eb99",
    "filename": "rxjava2-client/src/test/java/ObservableResourceTest.java",
    "status": "modified",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/alex-shpak/rx-jersey/blob/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/ObservableResourceTest.java",
    "raw_url": "https://github.com/alex-shpak/rx-jersey/raw/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/ObservableResourceTest.java",
    "contents_url": "https://api.github.com/repos/alex-shpak/rx-jersey/contents/rxjava2-client/src/test/java/ObservableResourceTest.java?ref=5eace164fa45e8ae623015efde378ad12462f98b",
    "patch": "@@ -34,6 +34,22 @@ public void shouldHandleError() {\n         assertEquals(\"\", message);\n     }\n \n+    @Test\n+    public void shouldReturnContentForNonRxTypes() {\n+        Resource resource = target(Resource.class);\n+        String message = resource.string();\n+\n+        assertEquals(\"string\", message);\n+    }\n+\n+    @Test\n+    public void shouldReturnContentForNonRxTypesWithParam() {\n+        Resource resource = target(Resource.class);\n+        Entity entity = resource.json(\"message\");\n+\n+        assertEquals(\"message\", entity.message);\n+    }\n+\n     @Path(\"/endpoint\")\n     public interface Resource {\n \n@@ -48,5 +64,13 @@ public void shouldHandleError() {\n         @GET\n         @Path(\"error\")\n         Observable<String> error();\n+\n+        @GET\n+        @Path(\"string\")\n+        String string();\n+\n+        @GET\n+        @Path(\"json\")\n+        Entity json(@QueryParam(\"message\") String message);\n     }\n }"
  },
  {
    "sha": "8e98aa5af018f35d56bb0672b5ec102e262b30d0",
    "filename": "rxjava2-client/src/test/java/ObservableResponseTest.java",
    "status": "modified",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/alex-shpak/rx-jersey/blob/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/ObservableResponseTest.java",
    "raw_url": "https://github.com/alex-shpak/rx-jersey/raw/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/ObservableResponseTest.java",
    "contents_url": "https://api.github.com/repos/alex-shpak/rx-jersey/contents/rxjava2-client/src/test/java/ObservableResponseTest.java?ref=5eace164fa45e8ae623015efde378ad12462f98b",
    "patch": "@@ -34,6 +34,22 @@ public void shouldHandleError() {\n         assertEquals(Response.Status.BAD_REQUEST.getStatusCode(), response.getStatus());\n     }\n \n+    @Test\n+    public void shouldReturnContentForNonRxTypes() {\n+        Resource resource = target(Resource.class);\n+        Response response = resource.string();\n+\n+        assertEquals(\"string\", response.readEntity(String.class));\n+    }\n+\n+    @Test\n+    public void shouldReturnContentForNonRxTypesWithParam() {\n+        Resource resource = target(Resource.class);\n+        Response response = resource.echo(\"message\");\n+\n+        assertEquals(\"message\", response.readEntity(String.class));\n+    }\n+\n     @Path(\"/endpoint\")\n     public interface Resource {\n \n@@ -48,5 +64,13 @@ public void shouldHandleError() {\n         @GET\n         @Path(\"error\")\n         Observable<Response> error();\n+\n+        @GET\n+        @Path(\"string\")\n+        Response string();\n+\n+        @GET\n+        @Path(\"echo\")\n+        Response echo(@QueryParam(\"message\") String message);\n     }\n }"
  },
  {
    "sha": "8786595b4f843db0e19be5019964aa8b55bda0af",
    "filename": "rxjava2-client/src/test/java/RxJerseyTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/alex-shpak/rx-jersey/blob/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/RxJerseyTest.java",
    "raw_url": "https://github.com/alex-shpak/rx-jersey/raw/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/RxJerseyTest.java",
    "contents_url": "https://api.github.com/repos/alex-shpak/rx-jersey/contents/rxjava2-client/src/test/java/RxJerseyTest.java?ref=5eace164fa45e8ae623015efde378ad12462f98b",
    "patch": "@@ -97,6 +97,12 @@ public String error() {\n             throw new BadRequestException();\n         }\n \n+        @GET\n+        @Path(\"string\")\n+        public String string() {\n+            return \"string\";\n+        }\n+\n         @Path(\"subresource/{id}\")\n         public ServerSubResource subResource(@PathParam(\"id\") String id) {\n             return new ServerSubResource(id);"
  },
  {
    "sha": "f740c72e5c5e78fc35feecad469b199388f771b0",
    "filename": "rxjava2-client/src/test/java/SingleResourceTest.java",
    "status": "modified",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/alex-shpak/rx-jersey/blob/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/SingleResourceTest.java",
    "raw_url": "https://github.com/alex-shpak/rx-jersey/raw/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/SingleResourceTest.java",
    "contents_url": "https://api.github.com/repos/alex-shpak/rx-jersey/contents/rxjava2-client/src/test/java/SingleResourceTest.java?ref=5eace164fa45e8ae623015efde378ad12462f98b",
    "patch": "@@ -34,6 +34,22 @@ public void shouldHandleError() {\n         assertEquals(\"\", message);\n     }\n \n+    @Test\n+    public void shouldReturnContentForNonRxTypes() {\n+        Resource resource = target(Resource.class);\n+        String message = resource.string();\n+\n+        assertEquals(\"string\", message);\n+    }\n+\n+    @Test\n+    public void shouldReturnContentForNonRxTypesWithParam() {\n+        Resource resource = target(Resource.class);\n+        Entity entity = resource.json(\"message\");\n+\n+        assertEquals(\"message\", entity.message);\n+    }\n+\n     @Path(\"/endpoint\")\n     public interface Resource {\n \n@@ -48,5 +64,13 @@ public void shouldHandleError() {\n         @GET\n         @Path(\"error\")\n         Single<String> error();\n+\n+        @GET\n+        @Path(\"string\")\n+        String string();\n+\n+        @GET\n+        @Path(\"json\")\n+        Entity json(@QueryParam(\"message\") String message);\n     }\n }"
  },
  {
    "sha": "0f5dbe08fe9265e0e7c0d05b55608add5bd8a11b",
    "filename": "rxjava2-client/src/test/java/SingleResponseTest.java",
    "status": "modified",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/alex-shpak/rx-jersey/blob/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/SingleResponseTest.java",
    "raw_url": "https://github.com/alex-shpak/rx-jersey/raw/5eace164fa45e8ae623015efde378ad12462f98b/rxjava2-client/src/test/java/SingleResponseTest.java",
    "contents_url": "https://api.github.com/repos/alex-shpak/rx-jersey/contents/rxjava2-client/src/test/java/SingleResponseTest.java?ref=5eace164fa45e8ae623015efde378ad12462f98b",
    "patch": "@@ -34,6 +34,22 @@ public void shouldHandleError() {\n         assertEquals(Response.Status.BAD_REQUEST.getStatusCode(), response.getStatus());\n     }\n \n+    @Test\n+    public void shouldReturnContentForNonRxTypes() {\n+        Resource resource = target(Resource.class);\n+        Response response = resource.string();\n+\n+        assertEquals(\"string\", response.readEntity(String.class));\n+    }\n+\n+    @Test\n+    public void shouldReturnContentForNonRxTypesWithParam() {\n+        Resource resource = target(Resource.class);\n+        Response response = resource.echo(\"message\");\n+\n+        assertEquals(\"message\", response.readEntity(String.class));\n+    }\n+\n     @Path(\"/endpoint\")\n     public interface Resource {\n \n@@ -48,5 +64,13 @@ public void shouldHandleError() {\n         @GET\n         @Path(\"error\")\n         Single<Response> error();\n+\n+        @GET\n+        @Path(\"string\")\n+        Response string();\n+\n+        @GET\n+        @Path(\"echo\")\n+        Response echo(@QueryParam(\"message\") String message);\n     }\n }"
  }
]
