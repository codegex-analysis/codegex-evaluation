[
  {
    "sha": "5036a1dc107e25fcd949235f301ff277acaa4ee0",
    "filename": "Java/Java 2/Lesson 1/Main.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/Su4a/GeekBrains-teach/blob/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/Main.java",
    "raw_url": "https://github.com/Su4a/GeekBrains-teach/raw/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/Main.java",
    "contents_url": "https://api.github.com/repos/Su4a/GeekBrains-teach/contents/Java/Java%202/Lesson%201/Main.java?ref=0e59f61ff3a99cc28003cf3a7ceab917a7e14748",
    "patch": "@@ -0,0 +1,38 @@\n+import obstacle.Obstacle;\n+import obstacle.RunningRoad;\n+import obstacle.Wall;\n+import participant.Cat;\n+import participant.Human;\n+import participant.Participant;\n+import participant.Robot;\n+\n+public class Main {\n+    public static void main(String[] args) {\n+        Participant[] participants = {\n+                new Cat(50),\n+                new Human(10, 200),\n+                new Robot(100, 400)};\n+        Obstacle[] obstacles = {\n+                new RunningRoad(220),\n+                new Wall(48)};\n+\n+        for (int i = 0; i < obstacles.length; i++) {\n+            for (int j = 0; j < participants.length; j++) {\n+                System.out.println(obstacles[i].doIt(participants[j]));\n+            }\n+        }\n+    }\n+}\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+"
  },
  {
    "sha": "7c7a1d4ec945cf785e7ec23e4709bb3f3c1f5d8f",
    "filename": "Java/Java 2/Lesson 1/obstacle/Obstacle.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Su4a/GeekBrains-teach/blob/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/obstacle/Obstacle.java",
    "raw_url": "https://github.com/Su4a/GeekBrains-teach/raw/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/obstacle/Obstacle.java",
    "contents_url": "https://api.github.com/repos/Su4a/GeekBrains-teach/contents/Java/Java%202/Lesson%201/obstacle/Obstacle.java?ref=0e59f61ff3a99cc28003cf3a7ceab917a7e14748",
    "patch": "@@ -0,0 +1,7 @@\n+package obstacle;\n+\n+import participant.Participant;\n+\n+public interface Obstacle {\n+    boolean doIt(Participant participant);\n+}"
  },
  {
    "sha": "17d3686b700ffcafbf1dddc874df601cde28169e",
    "filename": "Java/Java 2/Lesson 1/obstacle/RunningRoad.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/Su4a/GeekBrains-teach/blob/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/obstacle/RunningRoad.java",
    "raw_url": "https://github.com/Su4a/GeekBrains-teach/raw/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/obstacle/RunningRoad.java",
    "contents_url": "https://api.github.com/repos/Su4a/GeekBrains-teach/contents/Java/Java%202/Lesson%201/obstacle/RunningRoad.java?ref=0e59f61ff3a99cc28003cf3a7ceab917a7e14748",
    "patch": "@@ -0,0 +1,21 @@\n+package obstacle;\n+\n+import participant.Participant;\n+import participant.Runnable;\n+\n+public class RunningRoad implements Obstacle {\n+    private final int width;\n+\n+    public RunningRoad(int width) {\n+        this.width = width;\n+    }\n+\n+    @Override\n+    public boolean doIt(Participant participant) {\n+        if (participant instanceof Runnable) {                                                                          //Сравнение типов participant и Runnable\n+            return ((Runnable) participant).run(width);                                                                 //Cast партикипанта к интерфейсу бегу. Выволнение возможно т.к. было сравнение типов Participant и Runnable, при котором сравнение будет true\n+        }\n+        System.out.println(participant.getClass().getSimpleName() + \" cannot run\");\n+        return false;\n+    }\n+}"
  },
  {
    "sha": "9bfbc254123c186ce2d223631e8d2bd0f1effc2b",
    "filename": "Java/Java 2/Lesson 1/obstacle/Wall.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/Su4a/GeekBrains-teach/blob/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/obstacle/Wall.java",
    "raw_url": "https://github.com/Su4a/GeekBrains-teach/raw/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/obstacle/Wall.java",
    "contents_url": "https://api.github.com/repos/Su4a/GeekBrains-teach/contents/Java/Java%202/Lesson%201/obstacle/Wall.java?ref=0e59f61ff3a99cc28003cf3a7ceab917a7e14748",
    "patch": "@@ -0,0 +1,21 @@\n+package obstacle;\n+\n+import participant.Jumpable;\n+import participant.Participant;\n+\n+public class Wall implements Obstacle {\n+    private final int height;\n+\n+    public Wall(int height) {\n+        this.height = height;\n+    }\n+\n+    @Override\n+    public boolean doIt(Participant participant) {\n+        if (participant instanceof Jumpable) {                                                                          //Сравнение типов participant и Jumpable\n+            return ((Jumpable) participant).jump(height);                                                                      //Cast партикипанта к интерфейсу бегу. Выволнение возможно т.к. было сравнение типов Participant и Runnable, при котором сравнение будет true\n+        }\n+        System.out.println(participant.getClass().getSimpleName() + \" cannot jump\");\n+        return false;\n+    }\n+}"
  },
  {
    "sha": "d6242584e6b878637b47f17c1d0ee28371b01fcf",
    "filename": "Java/Java 2/Lesson 1/participant/Cat.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/Su4a/GeekBrains-teach/blob/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Cat.java",
    "raw_url": "https://github.com/Su4a/GeekBrains-teach/raw/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Cat.java",
    "contents_url": "https://api.github.com/repos/Su4a/GeekBrains-teach/contents/Java/Java%202/Lesson%201/participant/Cat.java?ref=0e59f61ff3a99cc28003cf3a7ceab917a7e14748",
    "patch": "@@ -0,0 +1,14 @@\n+package participant;\n+\n+public class Cat implements Jumpable, Participant {\n+    private final int maxJumpDistance;\n+\n+    public Cat(int maxJumpDistance) {\n+        this.maxJumpDistance = maxJumpDistance;\n+    }\n+    @Override\n+    public boolean jump(int distance) {\n+        System.out.println(\"Cat attempts jump\");\n+        return maxJumpDistance <= distance;\n+    }\n+}"
  },
  {
    "sha": "9bfdbcad99ce3a7b3f973e8aded9f0edeae59d28",
    "filename": "Java/Java 2/Lesson 1/participant/Human.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/Su4a/GeekBrains-teach/blob/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Human.java",
    "raw_url": "https://github.com/Su4a/GeekBrains-teach/raw/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Human.java",
    "contents_url": "https://api.github.com/repos/Su4a/GeekBrains-teach/contents/Java/Java%202/Lesson%201/participant/Human.java?ref=0e59f61ff3a99cc28003cf3a7ceab917a7e14748",
    "patch": "@@ -0,0 +1,23 @@\n+package participant;\n+\n+public class Human implements Jumpable, Runnable, Participant {\n+    private final int maxJumpDistance;\n+    private final int maxRunDistance;\n+\n+    public Human(int maxJumpDistance, int maxRunDistance) {\n+        this.maxJumpDistance = maxJumpDistance;\n+        this.maxRunDistance = maxRunDistance;\n+    }\n+\n+    @Override\n+    public boolean jump(int distance) {\n+        System.out.println(\"Human attempts jump\");\n+        return maxJumpDistance <= distance;\n+    }\n+\n+    @Override\n+    public boolean run(int distance) {\n+        System.out.println(\"Human attempts run\");\n+        return maxRunDistance <= distance;\n+    }\n+}"
  },
  {
    "sha": "3b258b7cf981991062ca274ad86e012cb217f63b",
    "filename": "Java/Java 2/Lesson 1/participant/Jumpable.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Su4a/GeekBrains-teach/blob/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Jumpable.java",
    "raw_url": "https://github.com/Su4a/GeekBrains-teach/raw/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Jumpable.java",
    "contents_url": "https://api.github.com/repos/Su4a/GeekBrains-teach/contents/Java/Java%202/Lesson%201/participant/Jumpable.java?ref=0e59f61ff3a99cc28003cf3a7ceab917a7e14748",
    "patch": "@@ -0,0 +1,5 @@\n+package participant;\n+\n+public interface Jumpable {\n+    boolean jump(int distance);\n+}"
  },
  {
    "sha": "011eea2ce11d7657906fa8449f41522df2df6341",
    "filename": "Java/Java 2/Lesson 1/participant/Participant.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Su4a/GeekBrains-teach/blob/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Participant.java",
    "raw_url": "https://github.com/Su4a/GeekBrains-teach/raw/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Participant.java",
    "contents_url": "https://api.github.com/repos/Su4a/GeekBrains-teach/contents/Java/Java%202/Lesson%201/participant/Participant.java?ref=0e59f61ff3a99cc28003cf3a7ceab917a7e14748",
    "patch": "@@ -0,0 +1,8 @@\n+package participant;\n+\n+/**\n+ * Маркерный интерфейс\n+ */\n+public interface Participant {\n+\n+}"
  },
  {
    "sha": "90c94cee62ecb4a4dc10863161ddd0b26e44cc99",
    "filename": "Java/Java 2/Lesson 1/participant/Robot.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/Su4a/GeekBrains-teach/blob/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Robot.java",
    "raw_url": "https://github.com/Su4a/GeekBrains-teach/raw/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Robot.java",
    "contents_url": "https://api.github.com/repos/Su4a/GeekBrains-teach/contents/Java/Java%202/Lesson%201/participant/Robot.java?ref=0e59f61ff3a99cc28003cf3a7ceab917a7e14748",
    "patch": "@@ -0,0 +1,23 @@\n+package participant;\n+\n+public class Robot implements Jumpable, Runnable, Participant {\n+    private final int maxJumpDistance;\n+    private final int maxRunDistance;\n+\n+    public Robot(int maxJumpDistance, int maxRunDistance) {\n+        this.maxJumpDistance = maxJumpDistance;\n+        this.maxRunDistance = maxRunDistance;\n+    }\n+\n+    @Override\n+    public boolean jump(int distance) {\n+        System.out.println(\"Robot attempts jump\");\n+        return maxJumpDistance <= distance;\n+    }\n+\n+    @Override\n+    public boolean run(int distance) {\n+        System.out.println(\"Robot attempts run\");\n+        return maxRunDistance <= distance;\n+    }\n+}"
  },
  {
    "sha": "5b70f4c294ec51bca63f74112a5fbb57b172f6b5",
    "filename": "Java/Java 2/Lesson 1/participant/Runnable.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Su4a/GeekBrains-teach/blob/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Runnable.java",
    "raw_url": "https://github.com/Su4a/GeekBrains-teach/raw/0e59f61ff3a99cc28003cf3a7ceab917a7e14748/Java/Java%202/Lesson%201/participant/Runnable.java",
    "contents_url": "https://api.github.com/repos/Su4a/GeekBrains-teach/contents/Java/Java%202/Lesson%201/participant/Runnable.java?ref=0e59f61ff3a99cc28003cf3a7ceab917a7e14748",
    "patch": "@@ -0,0 +1,5 @@\n+package participant;\n+\n+public interface Runnable {\n+    boolean run(int distance);\n+}"
  }
]
