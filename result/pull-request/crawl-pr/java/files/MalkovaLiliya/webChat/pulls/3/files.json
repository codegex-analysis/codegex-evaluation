[
  {
    "sha": "edeff37200fde7650767d76b2dd0d5584ddc4ba8",
    "filename": "out/production/webChat/client/Controller$1.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/client/Controller$1.class",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/client/Controller$1.class",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/out/production/webChat/client/Controller$1.class?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8"
  },
  {
    "sha": "1945dd15b18cf76499fdeb9c3c8d45d9c3c24060",
    "filename": "out/production/webChat/client/Controller.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/client/Controller.class",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/client/Controller.class",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/out/production/webChat/client/Controller.class?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8"
  },
  {
    "sha": "9b2404b9c89fc2a00953c7c10768a8c8498b050d",
    "filename": "out/production/webChat/client/sample.fxml",
    "status": "modified",
    "additions": 15,
    "deletions": 18,
    "changes": 33,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/client/sample.fxml",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/client/sample.fxml",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/out/production/webChat/client/sample.fxml?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8",
    "patch": "@@ -1,27 +1,24 @@\n-<?import javafx.geometry.Insets?>\n-<?import javafx.scene.layout.GridPane?>\n-\n-<?import javafx.scene.control.Button?>\n-<?import javafx.scene.control.Label?>\n-<?import javafx.scene.layout.VBox?>\n-<?import javafx.scene.control.TextArea?>\n-<?import javafx.scene.layout.HBox?>\n-<?import javafx.scene.control.TextField?>\n-<?import javafx.scene.control.PasswordField?>\n+<?import javafx.scene.control.*?>\n+<?import javafx.scene.layout.*?>\n <VBox fx:controller=\"client.Controller\"\n-      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\" >\n+      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\">\n \n-    <HBox fx:id = \"authPanel\" visible=\"true\" managed=\"true\">\n-        <TextField fx:id = \"loginField\" promptText=\"login\" HBox.hgrow=\"ALWAYS\"/>\n+    <HBox fx:id=\"authPanel\" visible=\"true\" managed=\"true\">\n+        <TextField fx:id=\"loginField\" promptText=\"login\" HBox.hgrow=\"ALWAYS\"/>\n         <PasswordField fx:id=\"passwordField\" promptText=\"password\" HBox.hgrow=\"ALWAYS\"\n-                       onAction = \"#tryToAuth\"/>\n-        <Button text=\"auth\" onAction = \"#tryToAuth\" minWidth=\"50\"/>\n+                       onAction=\"#tryToAuth\"/>\n+        <Button text=\"auth\" onAction=\"#tryToAuth\" minWidth=\"50\"/>\n+        <Button text=\"reg\" onAction=\"#registration\" minWidth=\"50\"/>\n     </HBox>\n \n-    <TextArea fx:id = \"textArea\" VBox.vgrow=\"ALWAYS\" editable=\"false\"/>\n+    <HBox VBox.vgrow=\"ALWAYS\">\n+        <TextArea fx:id=\"textArea\" VBox.vgrow=\"ALWAYS\" editable=\"false\" wrapText=\"true\"/>\n+        <ListView fx:id=\"clientList\" visible=\"false\" managed=\"false\" minWidth=\"70\"\n+                  onMouseClicked=\"#clickClientList\"/>\n+    </HBox>\n \n-    <HBox fx:id = \"msgPanel\" visible=\"false\" managed=\"false\">\n-        <TextField fx:id = \"textField\" promptText=\"input messge\" HBox.hgrow=\"ALWAYS\"\n+    <HBox fx:id=\"msgPanel\" visible=\"false\" managed=\"false\">\n+        <TextField fx:id=\"textField\" promptText=\"input messge\" HBox.hgrow=\"ALWAYS\"\n                    onAction=\"#sendMsg\"/>\n         <Button text=\"send\" onAction=\"#sendMsg\"/>\n     </HBox>"
  },
  {
    "sha": "8ee3d2fa83fdca5968ecc90b73d180b4fe0ddfc6",
    "filename": "out/production/webChat/server/AuthService.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/server/AuthService.class",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/server/AuthService.class",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/out/production/webChat/server/AuthService.class?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8"
  },
  {
    "sha": "89cb65ab68ae7b7e1a79efc7472df03e78075c61",
    "filename": "out/production/webChat/server/ClientHandler.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/server/ClientHandler.class",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/server/ClientHandler.class",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/out/production/webChat/server/ClientHandler.class?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8"
  },
  {
    "sha": "a60e83e33a44c098cdb5122b3654eaeb61d7d290",
    "filename": "out/production/webChat/server/Server.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/server/Server.class",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/server/Server.class",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/out/production/webChat/server/Server.class?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8"
  },
  {
    "sha": "725262ac6b15d61ba3827f28aff9458b2260de35",
    "filename": "out/production/webChat/server/SimpleAuthService$UserData.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/server/SimpleAuthService$UserData.class",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/server/SimpleAuthService$UserData.class",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/out/production/webChat/server/SimpleAuthService$UserData.class?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8"
  },
  {
    "sha": "bd603027f39878b06ae4ecb2091b6a3c3633b768",
    "filename": "out/production/webChat/server/SimpleAuthService.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/server/SimpleAuthService.class",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/out/production/webChat/server/SimpleAuthService.class",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/out/production/webChat/server/SimpleAuthService.class?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8"
  },
  {
    "sha": "6d62d9fd27a4d88921e8c500f4776c3a81924183",
    "filename": "src/client/Controller.java",
    "status": "modified",
    "additions": 110,
    "deletions": 14,
    "changes": 124,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/client/Controller.java",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/client/Controller.java",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/src/client/Controller.java?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8",
    "patch": "@@ -2,20 +2,29 @@\n \n import javafx.application.Platform;\n import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n import javafx.fxml.Initializable;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.scene.control.ListView;\n import javafx.scene.control.PasswordField;\n import javafx.scene.control.TextArea;\n import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseEvent;\n import javafx.scene.layout.HBox;\n+import javafx.stage.Modality;\n import javafx.stage.Stage;\n+import javafx.stage.WindowEvent;\n \n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n+import java.io.EOFException;\n import java.io.IOException;\n import java.net.Socket;\n+import java.net.SocketTimeoutException;\n import java.net.URL;\n-import java.util.Locale;\n import java.util.ResourceBundle;\n \n public class Controller implements Initializable {\n@@ -32,27 +41,33 @@\n     public PasswordField passwordField;\n     @FXML\n     public HBox msgPanel;\n+    @FXML\n+    public ListView<String> clientList;\n \n     private final String IP_ADDRESS = \"localhost\";\n     private final int PORT = 8189;\n \n-\n     private Socket socket;\n     DataInputStream in;\n     DataOutputStream out;\n \n     private boolean authenticated;\n     private String nickName;\n     private final String TITLE = \"justБлаБлашка\";\n+    private Stage stage;\n+    private Stage regStage;\n+    private RegController regController;\n \n-    public void setAuthenticated(boolean authenticated){\n+    public void setAuthenticated(boolean authenticated) {\n         this.authenticated = authenticated;\n         authPanel.setVisible(!authenticated);\n         authPanel.setManaged(!authenticated);\n         msgPanel.setVisible(authenticated);\n         msgPanel.setManaged(authenticated);\n+        clientList.setVisible(authenticated);\n+        clientList.setManaged(authenticated);\n \n-        if(!authenticated){\n+        if (!authenticated) {\n             nickName = \"\";\n         }\n         setTitle(nickName);\n@@ -61,6 +76,23 @@ public void setAuthenticated(boolean authenticated){\n     @Override\n     public void initialize(URL location, ResourceBundle resources) {\n         setAuthenticated(false);\n+        createRegWindow();\n+        Platform.runLater(() -> {\n+            stage = (Stage) textField.getScene().getWindow();\n+            stage.setOnCloseRequest(new EventHandler<WindowEvent>() {\n+                @Override\n+                public void handle(WindowEvent event) {\n+//                    System.out.println(\"bye\");\n+                    if (socket != null && !socket.isClosed()) {\n+                        try {\n+                            out.writeUTF(\"/end\");\n+                        } catch (IOException e) {\n+                            e.printStackTrace();\n+                        }\n+                    }\n+                }\n+            });\n+        });\n     }\n \n \n@@ -75,7 +107,7 @@ public void sendMsg(ActionEvent actionEvent) {\n     }\n \n     public void tryToAuth(ActionEvent actionEvent) {\n-        if(socket == null || socket.isClosed()){\n+        if (socket == null || socket.isClosed()) {\n             connect();\n         }\n         try {\n@@ -99,24 +131,48 @@ private void connect() {\n                 public void run() {\n                     try {\n                         // цикл аутентификации\n-                        while (true){\n+                        while (true) {\n                             String str = in.readUTF();\n-                            if(str.startsWith(\"/authok\")){\n+                            if (str.startsWith(\"/authok\")) {\n                                 nickName = str.split(\" \", 2)[1];\n                                 setAuthenticated(true);\n                                 break;\n                             }\n+\n+                            if(str.startsWith(\"/regok\")){\n+                                regController.addMsgToTextArea(\"Регистрация прошла успешно\");\n+                            }\n+\n+                            if(str.startsWith(\"/regno\")){\n+                                regController.addMsgToTextArea(\"Регистрация не получилась \\n возможно логин или ник заняты\");\n+                            }\n+\n                             textArea.appendText(str + \"\\n\");\n                         }\n \n                         // цикл работы\n                         while (true) {\n                             String str = in.readUTF();\n-                            if (str.equals(\"/end\")) {\n-                                break;\n+                            if (str.startsWith(\"/\")) {\n+                                if (str.equals(\"/end\")) {\n+                                    break;\n+                                }\n+                                if (str.startsWith(\"/clientsList \")){\n+                                    String[] token = str.split(\"\\\\s+\");\n+                                    Platform.runLater(()->{\n+                                        clientList.getItems().clear();\n+                                        for (int i = 1; i < token.length; i++) {\n+                                            clientList.getItems().add(token[i]);\n+                                        }\n+                                    });\n+                                }\n+                            } else {\n+                                textArea.appendText(str + \"\\n\");\n                             }\n-                            textArea.appendText(str + \"\\n\");\n                         }\n+                    }\n+                    catch (EOFException eof) {\n+                        System.out.println(\"Таймаут подключения\");\n                     } catch (IOException e) {\n                         e.printStackTrace();\n                     } finally {\n@@ -136,9 +192,49 @@ public void run() {\n         }\n     }\n \n-    private void setTitle(String nick){\n-        Platform.runLater(()->{\n-            ((Stage)textField.getScene().getWindow()).setTitle(TITLE + \" \" + nick);\n+    private void setTitle(String nick) {\n+        Platform.runLater(() -> {\n+            ((Stage) textField.getScene().getWindow()).setTitle(TITLE + \" \" + nick);\n         });\n     }\n-}\n\\ No newline at end of file\n+\n+    public void clickClientList(MouseEvent mouseEvent) {\n+        String receiver = clientList.getSelectionModel().getSelectedItem();\n+        textField.setText(\"/w \" + receiver + \" \");\n+    }\n+\n+    private void createRegWindow(){\n+        try {\n+            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"reg.fxml\"));\n+            Parent root = fxmlLoader.load();\n+            regStage = new Stage();\n+            regStage.setTitle(\"Reg window\");\n+            regStage.setScene(new Scene(root, 400, 250));\n+\n+            regController = fxmlLoader.getController();\n+            regController.setController(this);\n+\n+            regStage.initModality(Modality.APPLICATION_MODAL);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public void registration(ActionEvent actionEvent) {\n+        regStage.show();\n+    }\n+\n+    public void tryToReg(String login, String password, String nickname){\n+        String msg = String.format(\"/reg %s %s %s\", login, password, nickname);\n+\n+        if(socket == null || socket.isClosed()){\n+            connect();\n+        }\n+\n+        try {\n+            out.writeUTF(msg);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}"
  },
  {
    "sha": "17aaaf4d7a786eb307a340bc86b9a092108fec5a",
    "filename": "src/client/RegController.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/client/RegController.java",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/client/RegController.java",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/src/client/RegController.java?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8",
    "patch": "@@ -0,0 +1,33 @@\n+package client;\n+\n+import javafx.event.ActionEvent;\n+import javafx.fxml.FXML;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextArea;\n+import javafx.scene.control.TextField;\n+\n+public class RegController {\n+    private Controller controller;\n+    @FXML\n+    public TextField loginField;\n+    @FXML\n+    public TextField nickField;\n+    @FXML\n+    public PasswordField passwordField;\n+    @FXML\n+    public TextArea textArea;\n+\n+    public void tryToReg(ActionEvent actionEvent) {\n+        controller.tryToReg(loginField.getText().trim(),\n+                passwordField.getText().trim(),\n+                nickField.getText().trim());\n+    }\n+\n+    public void setController(Controller controller) {\n+        this.controller = controller;\n+    }\n+\n+    public void addMsgToTextArea(String msg){\n+        textArea.appendText(msg + \"\\n\");\n+    }\n+}"
  },
  {
    "sha": "5351531f890b3e5b7757f301a1aacea174ca4de0",
    "filename": "src/client/reg.fxml",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/client/reg.fxml",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/client/reg.fxml",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/src/client/reg.fxml?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8",
    "patch": "@@ -0,0 +1,25 @@\n+<?import javafx.scene.control.*?>\n+<?import javafx.scene.layout.*?>\n+<VBox fx:controller=\"client.RegController\"\n+      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\">\n+\n+    <HBox>\n+        <Label text=\"Login: \" prefWidth=\"100\"/>\n+        <TextField fx:id=\"loginField\" promptText=\"login\" HBox.hgrow=\"ALWAYS\"/>\n+    </HBox>\n+\n+    <HBox>\n+        <Label text = \"NickName: \" prefWidth=\"100\"/>\n+        <TextField fx:id=\"nickField\" promptText=\"nickname\" HBox.hgrow=\"ALWAYS\"/>\n+    </HBox>\n+\n+    <HBox>\n+        <Label text = \"Password: \" prefWidth=\"100\"/>\n+        <PasswordField fx:id=\"passwordField\" promptText=\"password\" HBox.hgrow=\"ALWAYS\"/>\n+    </HBox>\n+\n+    <TextArea fx:id=\"textArea\" VBox.vgrow=\"ALWAYS\"/>\n+\n+    <Button text=\"Зарегестрироваться\" onAction=\"#tryToReg\"/>\n+\n+</VBox>\n\\ No newline at end of file"
  },
  {
    "sha": "9b2404b9c89fc2a00953c7c10768a8c8498b050d",
    "filename": "src/client/sample.fxml",
    "status": "modified",
    "additions": 15,
    "deletions": 18,
    "changes": 33,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/client/sample.fxml",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/client/sample.fxml",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/src/client/sample.fxml?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8",
    "patch": "@@ -1,27 +1,24 @@\n-<?import javafx.geometry.Insets?>\n-<?import javafx.scene.layout.GridPane?>\n-\n-<?import javafx.scene.control.Button?>\n-<?import javafx.scene.control.Label?>\n-<?import javafx.scene.layout.VBox?>\n-<?import javafx.scene.control.TextArea?>\n-<?import javafx.scene.layout.HBox?>\n-<?import javafx.scene.control.TextField?>\n-<?import javafx.scene.control.PasswordField?>\n+<?import javafx.scene.control.*?>\n+<?import javafx.scene.layout.*?>\n <VBox fx:controller=\"client.Controller\"\n-      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\" >\n+      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\">\n \n-    <HBox fx:id = \"authPanel\" visible=\"true\" managed=\"true\">\n-        <TextField fx:id = \"loginField\" promptText=\"login\" HBox.hgrow=\"ALWAYS\"/>\n+    <HBox fx:id=\"authPanel\" visible=\"true\" managed=\"true\">\n+        <TextField fx:id=\"loginField\" promptText=\"login\" HBox.hgrow=\"ALWAYS\"/>\n         <PasswordField fx:id=\"passwordField\" promptText=\"password\" HBox.hgrow=\"ALWAYS\"\n-                       onAction = \"#tryToAuth\"/>\n-        <Button text=\"auth\" onAction = \"#tryToAuth\" minWidth=\"50\"/>\n+                       onAction=\"#tryToAuth\"/>\n+        <Button text=\"auth\" onAction=\"#tryToAuth\" minWidth=\"50\"/>\n+        <Button text=\"reg\" onAction=\"#registration\" minWidth=\"50\"/>\n     </HBox>\n \n-    <TextArea fx:id = \"textArea\" VBox.vgrow=\"ALWAYS\" editable=\"false\"/>\n+    <HBox VBox.vgrow=\"ALWAYS\">\n+        <TextArea fx:id=\"textArea\" VBox.vgrow=\"ALWAYS\" editable=\"false\" wrapText=\"true\"/>\n+        <ListView fx:id=\"clientList\" visible=\"false\" managed=\"false\" minWidth=\"70\"\n+                  onMouseClicked=\"#clickClientList\"/>\n+    </HBox>\n \n-    <HBox fx:id = \"msgPanel\" visible=\"false\" managed=\"false\">\n-        <TextField fx:id = \"textField\" promptText=\"input messge\" HBox.hgrow=\"ALWAYS\"\n+    <HBox fx:id=\"msgPanel\" visible=\"false\" managed=\"false\">\n+        <TextField fx:id=\"textField\" promptText=\"input messge\" HBox.hgrow=\"ALWAYS\"\n                    onAction=\"#sendMsg\"/>\n         <Button text=\"send\" onAction=\"#sendMsg\"/>\n     </HBox>"
  },
  {
    "sha": "2ba05d3c9f920ee9764f3ba0d5f9558f84ee73ec",
    "filename": "src/server/AuthService.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/server/AuthService.java",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/server/AuthService.java",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/src/server/AuthService.java?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8",
    "patch": "@@ -1,5 +1,12 @@\n package server;\n \n public interface AuthService {\n+\n+    /**\n+     * @return nickname если пользователь есть\n+     * @return null если пользователя нет\n+     */\n     String getNickByLoginAndPassword(String login, String password);\n+\n+    boolean registration(String login, String password, String nickname);\n }"
  },
  {
    "sha": "0ce99eb6dfc5b84eaefa43ec3ae11ad627f3f01d",
    "filename": "src/server/ClientHandler.java",
    "status": "modified",
    "additions": 71,
    "deletions": 32,
    "changes": 103,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/server/ClientHandler.java",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/server/ClientHandler.java",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/src/server/ClientHandler.java?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8",
    "patch": "@@ -4,13 +4,15 @@\n import java.io.DataOutputStream;\n import java.io.IOException;\n import java.net.Socket;\n+import java.net.SocketTimeoutException;\n \n public class ClientHandler {\n     private Server server;\n     private Socket socket;\n     private DataInputStream in;\n     private DataOutputStream out;\n     private String nickName;\n+    private String login;\n \n     public ClientHandler(Server server, Socket socket) {\n \n@@ -22,47 +24,80 @@ public ClientHandler(Server server, Socket socket) {\n \n             new Thread(() -> {\n                 try {\n-                    // цикл аутентифиукаии\n-                    while (true) {\n-                        String str = in.readUTF();\n-                        if (str.startsWith(\"/auth\")) {\n-                            String[] token = str.split(\"\\\\s\");\n-                            String newNick = server.getAuthService()\n-                                    .getNickByLoginAndPassword(token[1], token[2]);\n-                            if (newNick != null) {\n-                                nickName = newNick;\n-                                sendMsg(\"/authok \" + nickName);\n-                                server.subscribe(this);\n-                                System.out.println(\"Клиент \" + nickName + \" подключился\");\n-                                break;\n-                            } else {\n-                                sendMsg(\"Неверный логин / пароль\");\n+//                    socket.setSoTimeout(5000);\n+//                    socket.setSoTimeout(0);\n+                    // цикл аутентификации\n+                        socket.setSoTimeout(120000);\n+                        while (true) {\n+                            String str = in.readUTF();\n+                            if (str.startsWith(\"/auth\")) {\n+                                String[] token = str.split(\"\\\\s\");\n+                                if (token.length < 3) {\n+                                    continue;\n+                                }\n+                                String newNick = server.getAuthService()\n+                                        .getNickByLoginAndPassword(token[1], token[2]);\n+                                login = token[1];\n+                                if (newNick != null) {\n+                                    if (!server.isLoginAuthenticated(login)) {\n+                                        nickName = newNick;\n+                                        sendMsg(\"/authok \" + nickName);\n+                                        server.subscribe(this);\n+                                        System.out.println(\"Клиент \" + nickName + \" подключился\");\n+                                        socket.setSoTimeout(0);\n+                                        break;\n+                                    } else {\n+                                        sendMsg(\"С данной учетной записью уже зашли\");\n+                                    }\n+                                } else {\n+                                    sendMsg(\"Неверный логин / пароль\");\n+                                }\n+\n                             }\n+\n+                            if (str.startsWith(\"/reg\")) {\n+                                String[] token = str.split(\"\\\\s\");\n+                                if (token.length < 4) {\n+                                    continue;\n+                                }\n+                                boolean isRegistration = server.getAuthService()\n+                                        .registration(token[1], token[2], token[3]);\n+                                if (isRegistration) {\n+                                    sendMsg(\"/regok\");\n+                                } else {\n+                                    sendMsg(\"/regno\");\n+                                }\n+                            }\n+\n                         }\n-                    }\n+\n+\n \n                     //цикл работы\n                     while (true) {\n                         String str = in.readUTF();\n-                        if (str.equals(\"/end\")) {\n-                            break;\n-                        }\n-                        else if (str.startsWith(\"/w\")) {\n-                            String[] parts = str.split(\"\\\\s\", 3);\n-                            if (parts.length != 3) {\n-                                sendMsg(\"Ошибка в команде\");\n-                                continue;\n+\n+                        if (str.startsWith(\"/\")) {\n+                            System.out.println(str);\n+                            if (str.equals(\"/end\")) {\n+                                out.writeUTF(\"/end\");\n+                                break;\n                             }\n-                            if (!server.sendPrivateMsg(this,parts[1],parts[2])){\n-                                sendMsg(\"Ошибка при отправке личного сообщения\");\n+                            if (str.startsWith(\"/w\")) {\n+                                String[] token = str.split(\"\\\\s+\", 3);\n+                                if (token.length < 3) {\n+                                    continue;\n+                                }\n+                                server.privateMsg(this, token[1], token[2]);\n                             }\n+                        } else {\n+                            server.broadcastMsg(this, str);\n                         }\n-//                            System.out.println(\"Клиент \" + str);\n-//                            out.writeUTF(\"echo: \" + str);\n-                        else\n-                        server.broadcastMsg(this, str);\n                     }\n-                } catch (IOException e) {\n+                }catch (SocketTimeoutException to) {\n+                    System.out.println(\"Таймаут подключения\");\n+                    sendMsg(\"Таймаут подключения! Попробуйте перезапустить клиента\");\n+                }  catch (IOException e) {\n                     e.printStackTrace();\n                 } finally {\n                     System.out.println(\"Клиент отключился\");\n@@ -88,7 +123,11 @@ void sendMsg(String msg) {\n         }\n     }\n \n-    public String getNickName(){\n+    public String getNickName() {\n         return nickName;\n     }\n+\n+    public String getLogin() {\n+        return login;\n+    }\n }"
  },
  {
    "sha": "793977c305d556a45554f13248f1ffe815a4da94",
    "filename": "src/server/Server.java",
    "status": "modified",
    "additions": 36,
    "deletions": 20,
    "changes": 56,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/server/Server.java",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/server/Server.java",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/src/server/Server.java?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8",
    "patch": "@@ -3,10 +3,13 @@\n import java.io.IOException;\n import java.net.ServerSocket;\n import java.net.Socket;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n import java.util.List;\n import java.util.Vector;\n \n public class Server{\n+    SimpleDateFormat formater = new SimpleDateFormat(\"HH:mm:ss\");\n     List<ClientHandler> clients;\n     private AuthService authService;\n \n@@ -43,45 +46,58 @@ public Server() {\n     }\n \n     public void broadcastMsg(ClientHandler sender, String msg) {\n-        String message = String.format(\"%s : %s\", sender.getNickName(), msg);\n+        String message = String.format(\"%s %s : %s\",formater.format(new Date()), sender.getNickName(), msg);\n         for (ClientHandler client : clients) {\n             client.sendMsg(message);\n         }\n     }\n \n-    public boolean sendPrivateMsg(ClientHandler from, String nickname, String msg) {\n-        ClientHandler to = getClientByNickname(nickname);\n-        if (to == null) {\n-            return false;\n-        }\n-\n-        String message = String.format(\"[ %s --> %s ] : %s\", from.getNickName(), to.getNickName(), msg);\n-        from.sendMsg(message);\n-        to.sendMsg(message);\n-\n-        return true;\n-    }\n-\n-    private ClientHandler getClientByNickname(String nickname) {\n-        for (ClientHandler client : clients) {\n-            if (client.getNickName().equals(nickname)) {\n-                return client;\n+    public void privateMsg(ClientHandler sender, String receiver, String msg) {\n+        String message = String.format(\"%s [%s] private [%s] : %s\",formater.format(new Date()), sender.getNickName(), receiver, msg);\n+        for (ClientHandler c : clients) {\n+            if (c.getNickName().equals(receiver)) {\n+                c.sendMsg(message);\n+                if (!c.equals(sender)) {    // отправитель != получателю\n+                    sender.sendMsg(message);\n+                }\n+                return;\n             }\n         }\n \n-        return null;\n+        sender.sendMsg(\"not found user: \" + receiver);\n     }\n \n-\n     public void subscribe(ClientHandler clientHandler) {\n         clients.add(clientHandler);\n+        broadcastClientList();\n     }\n \n     public void unsubscribe(ClientHandler clientHandler) {\n         clients.remove(clientHandler);\n+        broadcastClientList();\n     }\n \n     public AuthService getAuthService(){\n         return authService;\n     }\n+\n+    public boolean isLoginAuthenticated(String login){\n+        for (ClientHandler c : clients) {\n+            if (c.getLogin().equals(login)){\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private void broadcastClientList(){\n+        StringBuilder sb = new StringBuilder(\"/clientsList \");\n+        for (ClientHandler c : clients) {\n+            sb.append(c.getNickName()).append(\" \");\n+        }\n+        String msg = sb.toString();\n+        for (ClientHandler c : clients) {\n+            c.sendMsg(msg);\n+        }\n+    }\n }"
  },
  {
    "sha": "77194a9883a51ea793911d754bbdc1b900cf1e03",
    "filename": "src/server/SimpleAuthService.java",
    "status": "modified",
    "additions": 21,
    "deletions": 11,
    "changes": 32,
    "blob_url": "https://github.com/MalkovaLiliya/webChat/blob/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/server/SimpleAuthService.java",
    "raw_url": "https://github.com/MalkovaLiliya/webChat/raw/9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8/src/server/SimpleAuthService.java",
    "contents_url": "https://api.github.com/repos/MalkovaLiliya/webChat/contents/src/server/SimpleAuthService.java?ref=9b2ae7b02d7c5afc71998f30e105e2ff8611a2c8",
    "patch": "@@ -3,40 +3,50 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-public class SimpleAuthService implements AuthService {\n+public class SimpleAuthService implements AuthService{\n \n     private class UserData {\n         String login;\n         String password;\n-        String nickname;\n+        String nickName;\n \n-        public UserData(String login, String password, String nickname) {\n+        public UserData(String login, String password, String nickName) {\n             this.login = login;\n             this.password = password;\n-            this.nickname = nickname;\n+            this.nickName = nickName;\n         }\n     }\n \n-    private final List<UserData> users;\n+    List<UserData> users;\n \n     public SimpleAuthService() {\n         users = new ArrayList<>();\n+        for (int i = 0; i < 10; i++) {\n+            users.add(new UserData(\"login\" + i, \"pass\" + i, \"nick\" + i));\n+        }\n         users.add(new UserData(\"qwe\", \"qwe\", \"qwe\"));\n         users.add(new UserData(\"asd\", \"asd\", \"asd\"));\n         users.add(new UserData(\"zxc\", \"zxc\", \"zxc\"));\n-        for (int i = 1; i < 10; i++) {\n-            users.add(new UserData(\"login\" + i, \"pass\" + i, \"nick\" + i));\n-        }\n     }\n \n     @Override\n     public String getNickByLoginAndPassword(String login, String password) {\n-        for (UserData user : users) {\n+        for(UserData user : users){\n             if(user.login.equals(login) && user.password.equals(password)){\n-                return user.nickname;\n+                return user.nickName;\n             }\n         }\n-\n         return null;\n     }\n+\n+    @Override\n+    public boolean registration(String login, String password, String nickname) {\n+        for (UserData user : users) {\n+            if(user.login.equals(login) || user.nickName.equals(nickname)){\n+                return false;\n+            }\n+        }\n+        users.add(new UserData(login, password, nickname));\n+        return true;\n+    }\n }"
  }
]
