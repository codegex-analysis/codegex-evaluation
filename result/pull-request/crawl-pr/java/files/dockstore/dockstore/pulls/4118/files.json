[
  {
    "sha": "49973bcf7092a8c2063b1d24d72c147e5f38fb98",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/dockstore/dockstore/blob/7393264d17ddfba8a93afc080a76d96cc4e51127/.gitignore",
    "raw_url": "https://github.com/dockstore/dockstore/raw/7393264d17ddfba8a93afc080a76d96cc4e51127/.gitignore",
    "contents_url": "https://api.github.com/repos/dockstore/dockstore/contents/.gitignore?ref=7393264d17ddfba8a93afc080a76d96cc4e51127",
    "patch": "@@ -61,5 +61,4 @@ dockstore-integration-testing/src/test/resources/dockstoreTest.yml\n # The tarball of the above three confidential files\n dockstore-integration-testing/src/test/resources/secrets.tar\n \n-\n dockstore-webservice/src/main/resources/openapi3/unsortedopenapi.yaml"
  },
  {
    "sha": "f34f2b3d7fca8d8a3c15f5c51b48d97eaf07d16e",
    "filename": "dockstore-integration-testing/src/test/java/io/dockstore/client/cli/OrganizationIT.java",
    "status": "modified",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/dockstore/dockstore/blob/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/OrganizationIT.java",
    "raw_url": "https://github.com/dockstore/dockstore/raw/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/OrganizationIT.java",
    "contents_url": "https://api.github.com/repos/dockstore/dockstore/contents/dockstore-integration-testing/src/test/java/io/dockstore/client/cli/OrganizationIT.java?ref=7393264d17ddfba8a93afc080a76d96cc4e51127",
    "patch": "@@ -6,6 +6,10 @@\n \n import io.dockstore.common.CommonTestUtilities;\n import io.dockstore.common.ConfidentialTest;\n+// import io.dockstore.common.DescriptorLanguage;\n+// import io.dockstore.common.SourceControl;\n+// import io.dockstore.common.DescriptorLanguage;\n+// import io.dockstore.common.SourceControl;\n import io.dockstore.openapi.client.api.EventsApi;\n import io.dockstore.webservice.core.OrganizationUser;\n import io.dockstore.webservice.jdbi.EventDAO;\n@@ -16,6 +20,8 @@\n import io.swagger.client.api.EntriesApi;\n import io.swagger.client.api.OrganizationsApi;\n import io.swagger.client.api.UsersApi;\n+// import io.swagger.client.api.WorkflowsApi;\n+// import io.swagger.client.api.WorkflowsApi;\n import io.swagger.client.model.Collection;\n import io.swagger.client.model.CollectionOrganization;\n import io.swagger.client.model.Event;\n@@ -24,6 +30,8 @@\n import io.swagger.client.model.PublishRequest;\n import io.swagger.client.model.StarRequest;\n import io.swagger.client.model.User;\n+// import io.swagger.client.model.Workflow;\n+// import io.swagger.client.model.Workflow;\n import org.apache.http.HttpStatus;\n import org.junit.Assert;\n import org.junit.Before;\n@@ -1683,6 +1691,66 @@ public void testDuplicateAliasOperations() {\n         }\n     }\n \n+    /**\n+     * Tests that we are getting the number of workflows and tools correctly\n+     */\n+    @Test\n+    public void testWorkflowsToolsLength() {\n+        // Setup user who creates Organization and collection\n+        final ApiClient webClientUser2 = getWebClient(USER_2_USERNAME, testingPostgres);\n+        OrganizationsApi organizationsApi = new OrganizationsApi(webClientUser2);\n+\n+        final ApiClient webClientAdminUser = getWebClient(ADMIN_USERNAME, testingPostgres);\n+        OrganizationsApi organizationsApiAdmin = new OrganizationsApi(webClientAdminUser);\n+\n+        // Create the Organization and collection\n+        Organization organization = createOrg(organizationsApi);\n+        Collection stubCollection = stubCollectionObject();\n+\n+        long orgId = organization.getId();\n+\n+        // Attach collections\n+        Collection collection = organizationsApi.createCollection(orgId, stubCollection);\n+\n+        long collectionId = collection.getId();\n+\n+        // Approve the org\n+        organization = organizationsApiAdmin.approveOrganization(organization.getId());\n+\n+        // Publish a tool\n+        long entryId = 2;\n+        ContainersApi containersApi = new ContainersApi(webClientUser2);\n+        PublishRequest publishRequest = SwaggerUtility.createPublishRequest(true);\n+        containersApi.publish(entryId, publishRequest);\n+\n+        // Add tool to collection\n+        organizationsApi.addEntryToCollection(orgId, collectionId, entryId, null);\n+\n+        //manually register a workflow\n+        //WorkflowsApi workflowsApi = new WorkflowsApi(webClientUser2);\n+        //workflowsApi.manualRegister(\"GITHUB\", \"DockstoreTestUser/dockstore-whalesay-wdl\", \"/dockstore.wdl\", \"test\", \"WDL\", \"\");\n+        //Workflow workflow = workflowsApi.manualRegister(SourceControl.BITBUCKET.name(), \"dockstore_testuser2/dockstore-workflow\", \"/dockstore.wdl\", \"\",\n+        //         DescriptorLanguage.WDL.getShortName(), \"\");\n+        //workflow = workflowsApi.refresh(workflow.getId(), false);\n+        //System.out.println(workflow.getId());\n+        //workflow = workflowsApi.publish(workflow.getId(), SwaggerUtility.createPublishRequest(true));\n+        //organizationsApi.addEntryToCollection(organization.getId(), collectionId, workflow.getId(), null);\n+\n+        //add a published workflow to collection\n+        //ApiClient client = getWebClient();\n+        //WorkflowsApi workflowsApi = new WorkflowsApi(client);\n+        //Workflow workflow = workflowsApi.getPublishedWorkflowByPath(\"github.com/A/l\", null, false, null);\n+        //long workflowId = workflow.getId();\n+        //organizationsApi.addEntryToCollection(orgId, collectionId, 5705L, null);\n+        Collection addedCollection = organizationsApi.getCollectionById(orgId, collectionId);\n+\n+        long toolsCount = addedCollection.getToolsLength();\n+        //long workflowsCount = addedCollection.getWorkflowsLength();\n+\n+        assertEquals(1, toolsCount);\n+        //assertEquals(1, workflowsCount);\n+    }\n+\n     /**\n      * This tests that you can update the name and description of a collection.\n      * Also tests when name is a duplicate."
  },
  {
    "sha": "d052fb36bb4944b2b7c4ae0d4a2e6558b66ed896",
    "filename": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Collection.java",
    "status": "modified",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/dockstore/dockstore/blob/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Collection.java",
    "raw_url": "https://github.com/dockstore/dockstore/raw/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Collection.java",
    "contents_url": "https://api.github.com/repos/dockstore/dockstore/contents/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Collection.java?ref=7393264d17ddfba8a93afc080a76d96cc4e51127",
    "patch": "@@ -38,6 +38,7 @@\n \n import com.fasterxml.jackson.annotation.JsonIgnore;\n import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n import io.swagger.v3.oas.annotations.media.Schema;\n@@ -98,6 +99,16 @@\n     @Schema(description = \"Short description of the collection\", required = true, example = \"A collection of alignment algorithms\")\n     private String topic;\n \n+    @Transient\n+    @JsonSerialize\n+    @ApiModelProperty(value = \"Number of workflows inside this collection\", position = 5)\n+    private long workflowsLength;\n+\n+    @Transient\n+    @JsonSerialize\n+    @ApiModelProperty(value = \"Number of tools inside this collection\", position = 6)\n+    private long toolsLength;\n+\n     @OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.LAZY)\n     @JoinColumns({\n             @JoinColumn(name = \"collection_id\", nullable = false),\n@@ -229,6 +240,22 @@ public void setDisplayName(String displayName) {\n         this.displayName = displayName;\n     }\n \n+    public void setWorkflowsLength(long pworkflowsLength) {\n+        this.workflowsLength = pworkflowsLength;\n+    }\n+\n+    public long getWorkflowsLength() {\n+        return this.workflowsLength;\n+    }\n+\n+    public void setToolsLength(long ptoolsLength) {\n+        this.toolsLength = ptoolsLength;\n+    }\n+\n+    public long getToolsLength() {\n+        return this.toolsLength;\n+    }\n+\n     public long getOrganizationID() {\n         return organizationID;\n     }"
  },
  {
    "sha": "7cfdfc696b461e485cee6f205479b5f4882b2647",
    "filename": "dockstore-webservice/src/main/java/io/dockstore/webservice/core/Entry.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/dockstore/dockstore/blob/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Entry.java",
    "raw_url": "https://github.com/dockstore/dockstore/raw/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Entry.java",
    "contents_url": "https://api.github.com/repos/dockstore/dockstore/contents/dockstore-webservice/src/main/java/io/dockstore/webservice/core/Entry.java?ref=7393264d17ddfba8a93afc080a76d96cc4e51127",
    "patch": "@@ -85,11 +85,13 @@\n         @NamedQuery(name = \"Entry.getGenericEntryByAlias\", query = \"SELECT e from Entry e JOIN e.aliases a WHERE KEY(a) IN :alias\"),\n         @NamedQuery(name = \"io.dockstore.webservice.core.Entry.findCollectionsByEntryId\", query = \"select new io.dockstore.webservice.core.CollectionOrganization(col.id, col.name, col.displayName, organization.id, organization.name, organization.displayName) from Collection col join col.entries as entry join col.organization as organization where entry.entry.id = :entryId and organization.status = 'APPROVED'\"),\n         @NamedQuery(name = \"Entry.getCollectionWorkflows\", query = \"SELECT new io.dockstore.webservice.core.CollectionEntry(w.id, w.dbUpdateDate, 'workflow', w.sourceControl, w.organization, w.repository, w.workflowName) from BioWorkflow w, Collection col join col.entries as e where col.id = :collectionId and e.version is null and w.id = e.entry.id and w.isPublished = true\"),\n+        @NamedQuery(name = \"Entry.getWorkflowsLength\", query = \"SELECT COUNT(w.id) FROM BioWorkflow w, Collection col join col.entries as e where col.id = :collectionId and e.version is null and w.id = e.entry.id and w.isPublished = true\"),\n         @NamedQuery(name = \"Entry.getCollectionServices\", query = \"SELECT new io.dockstore.webservice.core.CollectionEntry(w.id, w.dbUpdateDate, 'service', w.sourceControl, w.organization, w.repository, w.workflowName) from Service w, Collection col join col.entries as e where col.id = :collectionId and e.version is null and w.id = e.entry.id and w.isPublished = true\"),\n-        @NamedQuery(name = \"Entry.getCollectionTools\", query = \"SELECT new io.dockstore.webservice.core.CollectionEntry(w.id, w.dbUpdateDate, 'tool', w.registry, w.namespace, w.name, w.toolname) from Tool w, Collection col join col.entries as e where col.id = :collectionId and w.id = e.entry.id and e.version is null and w.isPublished = true\"),\n+        @NamedQuery(name = \"Entry.getCollectionTools\", query = \"SELECT new io.dockstore.webservice.core.CollectionEntry(t.id, t.dbUpdateDate, 'tool', t.registry, t.namespace, t.name, t.toolname) from Tool t, Collection col join col.entries as e where col.id = :collectionId and t.id = e.entry.id and e.version is null and t.isPublished = true\"),\n+        @NamedQuery(name = \"Entry.getToolsLength\", query = \"SELECT COUNT(t.id) FROM Tool t, Collection col join col.entries as e where col.id = :collectionId and t.id = e.entry.id and e.version is null and t.isPublished = true\"),\n         @NamedQuery(name = \"Entry.getCollectionWorkflowsWithVersions\", query = \"SELECT new io.dockstore.webservice.core.CollectionEntry(w.id, w.dbUpdateDate, 'workflow', w.sourceControl, w.organization, w.repository, w.workflowName, v.name) from Version v, BioWorkflow w, Collection col join col.entries as e where v.id = e.version.id and col.id = :collectionId and w.id = e.entry.id and w.isPublished = true\"),\n         @NamedQuery(name = \"Entry.getCollectionServicesWithVersions\", query = \"SELECT new io.dockstore.webservice.core.CollectionEntry(w.id, w.dbUpdateDate, 'service', w.sourceControl, w.organization, w.repository, w.workflowName, v.name) from Version v, Service w, Collection col join col.entries as e where v.id = e.version.id and col.id = :collectionId and w.id = e.entry.id and w.isPublished = true\"),\n-        @NamedQuery(name = \"Entry.getCollectionToolsWithVersions\", query = \"SELECT new io.dockstore.webservice.core.CollectionEntry(w.id, w.dbUpdateDate, 'tool', w.registry, w.namespace, w.name, w.toolname, v.name) from Version v, Tool w, Collection col join col.entries as e where v.id = e.version.id and col.id = :collectionId and w.id = e.entry.id and w.isPublished = true\"),\n+        @NamedQuery(name = \"Entry.getCollectionToolsWithVersions\", query = \"SELECT new io.dockstore.webservice.core.CollectionEntry(t.id, t.dbUpdateDate, 'tool', t.registry, t.namespace, t.name, t.toolname, v.name) from Version v, Tool t, Collection col join col.entries as e where v.id = e.version.id and col.id = :collectionId and t.id = e.entry.id and t.isPublished = true\"),\n \n })\n // TODO: Replace this with JPA when possible"
  },
  {
    "sha": "4806c723ec5bebf6df2817329d6de0248cb258c7",
    "filename": "dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EntryDAO.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/dockstore/dockstore/blob/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EntryDAO.java",
    "raw_url": "https://github.com/dockstore/dockstore/raw/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EntryDAO.java",
    "contents_url": "https://api.github.com/repos/dockstore/dockstore/contents/dockstore-webservice/src/main/java/io/dockstore/webservice/jdbi/EntryDAO.java?ref=7393264d17ddfba8a93afc080a76d96cc4e51127",
    "patch": "@@ -165,6 +165,10 @@ public T findPublishedById(long id) {\n         return list(this.currentSession().getNamedQuery(\"Entry.getCollectionWorkflows\").setParameter(\"collectionId\", collectionId));\n     }\n \n+    public long getWorkflowsLength(long collectionId) {\n+        return (long)(this.currentSession().getNamedQuery(\"Entry.getWorkflowsLength\").setParameter(\"collectionId\", collectionId).getSingleResult());\n+    }\n+\n     public List<CollectionEntry> getCollectionServices(long collectionId) {\n         return list(this.currentSession().getNamedQuery(\"Entry.getCollectionServices\").setParameter(\"collectionId\", collectionId));\n     }\n@@ -173,6 +177,10 @@ public T findPublishedById(long id) {\n         return list(this.currentSession().getNamedQuery(\"Entry.getCollectionTools\").setParameter(\"collectionId\", collectionId));\n     }\n \n+    public long getToolsLength(long collectionId) {\n+        return (long)(this.currentSession().getNamedQuery(\"Entry.getToolsLength\").setParameter(\"collectionId\", collectionId).getSingleResult());\n+    }\n+\n     public List<CollectionEntry> getCollectionWorkflowsWithVersions(long collectionId) {\n         return list(this.currentSession().getNamedQuery(\"Entry.getCollectionWorkflowsWithVersions\").setParameter(\"collectionId\", collectionId));\n     }"
  },
  {
    "sha": "10ce8e9ea0bf65b143e5a6a7eeb0b67322804f37",
    "filename": "dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/dockstore/dockstore/blob/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java",
    "raw_url": "https://github.com/dockstore/dockstore/raw/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java",
    "contents_url": "https://api.github.com/repos/dockstore/dockstore/contents/dockstore-webservice/src/main/java/io/dockstore/webservice/resources/CollectionResource.java?ref=7393264d17ddfba8a93afc080a76d96cc4e51127",
    "patch": "@@ -224,6 +224,8 @@ private void addCollectionEntriesToCollection(Collection collection) {\n         collectionEntries.addAll(collectionServicesWithVersions);\n         collectionEntries.addAll(collectionToolsWithVersions);\n         collection.setCollectionEntries(collectionEntries);\n+        collection.setWorkflowsLength(collectionWorkflows.size());\n+        collection.setToolsLength(collectionTools.size());\n     }\n \n     private void throwExceptionForNullCollection(Collection collection) {\n@@ -419,6 +421,8 @@ private Collection getAndCheckCollection(Optional<Long> organizationId, Long col\n             collections.forEach(collection -> {\n                 currentSession.evict(collection);\n                 collection.setEntries(new HashSet<>());\n+                collection.setWorkflowsLength(workflowDAO.getWorkflowsLength(collection.getId()));\n+                collection.setToolsLength(workflowDAO.getToolsLength(collection.getId()));\n             });\n         }\n         return collections;"
  },
  {
    "sha": "0b2eddc2f09df1f734daf57c4f008827ad662ce2",
    "filename": "dockstore-webservice/src/main/resources/openapi3/openapi.yaml",
    "status": "modified",
    "additions": 6180,
    "deletions": 6177,
    "changes": 12357,
    "blob_url": "https://github.com/dockstore/dockstore/blob/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/resources/openapi3/openapi.yaml",
    "raw_url": "https://github.com/dockstore/dockstore/raw/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/resources/openapi3/openapi.yaml",
    "contents_url": "https://api.github.com/repos/dockstore/dockstore/contents/dockstore-webservice/src/main/resources/openapi3/openapi.yaml?ref=7393264d17ddfba8a93afc080a76d96cc4e51127"
  },
  {
    "sha": "6b3fdc92bd6bddc1a9890f2c6ffe7208bfd3a2bb",
    "filename": "dockstore-webservice/src/main/resources/swagger.yaml",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/dockstore/dockstore/blob/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/resources/swagger.yaml",
    "raw_url": "https://github.com/dockstore/dockstore/raw/7393264d17ddfba8a93afc080a76d96cc4e51127/dockstore-webservice/src/main/resources/swagger.yaml",
    "contents_url": "https://api.github.com/repos/dockstore/dockstore/contents/dockstore-webservice/src/main/resources/swagger.yaml?ref=7393264d17ddfba8a93afc080a76d96cc4e51127",
    "patch": "@@ -6246,6 +6246,16 @@ definitions:\n         type: \"string\"\n         position: 4\n         description: \"Short description of the collection\"\n+      workflowsLength:\n+        type: \"integer\"\n+        format: \"int64\"\n+        position: 5\n+        description: \"Number of workflows inside this collection\"\n+      toolsLength:\n+        type: \"integer\"\n+        format: \"int64\"\n+        position: 6\n+        description: \"Number of tools inside this collection\"\n   CollectionEntry:\n     type: \"object\"\n     properties:"
  }
]
