[
  {
    "sha": "cb534a4a317a505bbd2e138cd67076783ce5d282",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 97,
    "deletions": 77,
    "changes": 174,
    "blob_url": "https://github.com/TUWien/DocScan/blob/cd6499c47b9d022546c0772334ee8a8ded387f19/.gitignore",
    "raw_url": "https://github.com/TUWien/DocScan/raw/cd6499c47b9d022546c0772334ee8a8ded387f19/.gitignore",
    "contents_url": "https://api.github.com/repos/TUWien/DocScan/contents/.gitignore?ref=cd6499c47b9d022546c0772334ee8a8ded387f19",
    "patch": "@@ -1,80 +1,100 @@\n-# Compiled Object files\n-*.slo\n-*.lo\n-*.o\n-*.obj\n-*.o.d\n-\n-# Precompiled Headers\n-*.gch\n-*.pch\n-\n-# Compiled Dynamic libraries\n-*.so\n-*.dylib\n-*.dll\n-\n-# Fortran module files\n-*.mod\n-*.smod\n-\n-# Compiled Static libraries\n-*.lai\n-*.la\n-*.a\n-*.lib\n-\n-# Executables\n-*.exe\n-*.out\n-*.app\n+\n+# Created by https://www.toptal.com/developers/gitignore/api/android\n+# Edit at https://www.toptal.com/developers/gitignore?templates=android\n+\n+### Android ###\n+# Built application files\n *.apk\n+*.aar\n+*.ap_\n+*.aab\n \n-# Android\n-*.iml\n-*.gradle\n-/gradle.properties\n-/local.properties\n-/.idea/workspace.xml\n-/.idea/libraries\n-.DS_Store\n-/build\n-/captures\n-Android.mk\n-/.idea/*\n-app/build\n-openCVLibrary310\n-import-summary.txt\n-camera_view.xml\n-/api_info.txt\n-app/.externalNativeBuild/*\n-\n-\n-# msvc\n-build2015*\n-CMakeUser.cmake\n-testimg.jpg\n-/testimg-syn.jpg\n-/testimg-syn-g.jpg\n-/testimg-syn-g-r.jpg\n-/testimg-orig.jpg\n-/testimg-g.jpg\n-/test.png\n-/result.tif\n+# Files for the ART/Dalvik VM\n+*.dex\n+\n+# Java class files\n+*.class\n+\n+# Generated files\n bin/\n-img/\n-api_info.txt\n-/app/.externalNativeBuild\n-/app/src/main/java/at/ac/tuwien/caa/docscan/camera/MediaSaver.java\n-/app/src/main/java/at/ac/tuwien/caa/docscan/camera/Storage.java\n-/projectFilesBackup/.idea/workspace.xml\n-/app/src/main/java/at/ac/tuwien/caa/docscan/camera/Util.java\n-/app/src/main/res/drawable/ic_photo_album_black_24dp.xml\n-/app/src/main/res/layout/test_activity.xml\n-/app/src/main/res/drawable/cat.png\n-/app/src/main/res/drawable/puppy.png\n-/openCVLibrary/*\n-/app/release\n-/app/CMakeLists.txt\n-/app/src/main/jniLibs\n-/app/src/main/include\n+gen/\n+out/\n+#  Uncomment the following line in case you need and you don't have the release build type files in your app\n+# release/\n+\n+# Gradle files\n+.gradle/\n+build/\n+\n+# Local configuration file (sdk path, etc)\n+local.properties\n+\n+# Proguard folder generated by Eclipse\n+proguard/\n+\n+# Log Files\n+*.log\n+\n+# Android Studio Navigation editor temp files\n+.navigation/\n+\n+# Android Studio captures folder\n+captures/\n+\n+# IntelliJ\n+*.iml\n+.idea/workspace.xml\n+.idea/tasks.xml\n+.idea/gradle.xml\n+.idea/assetWizardSettings.xml\n+.idea/dictionaries\n+.idea/libraries\n+# Android Studio 3 in .gitignore file.\n+.idea/caches\n+.idea/modules.xml\n+# Comment next line if keeping position of elements in Navigation Editor is relevant for you\n+.idea/navEditor.xml\n+.idea/*\n+\n+# Keystore files\n+# Uncomment the following lines if you do not want to check your keystore files in.\n+#*.jks\n+#*.keystore\n+\n+# External native build folder generated in Android Studio 2.2 and later\n+.externalNativeBuild\n+.cxx/\n+\n+# Google Services (e.g. APIs or Firebase)\n+# google-services.json\n+\n+# Freeline\n+freeline.py\n+freeline/\n+freeline_project_description.json\n+\n+# fastlane\n+fastlane/report.xml\n+fastlane/Preview.html\n+fastlane/screenshots\n+fastlane/test_output\n+fastlane/readme.md\n+\n+# Version control\n+vcs.xml\n+\n+# lint\n+lint/intermediates/\n+lint/generated/\n+lint/outputs/\n+lint/tmp/\n+# lint/reports/\n+\n+### Android Patch ###\n+gen-external-apklibs\n+output.json\n+\n+# Replacement of .externalNativeBuild directories introduced\n+# with Android Studio 3.5.\n+\n+# End of https://www.toptal.com/developers/gitignore/api/android"
  },
  {
    "sha": "c7bbff59ba4698624ac9a8fb3e1aaa0658d6b712",
    "filename": ".gitmodules",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/TUWien/DocScan/blob/cd6499c47b9d022546c0772334ee8a8ded387f19/.gitmodules",
    "raw_url": "https://github.com/TUWien/DocScan/raw/cd6499c47b9d022546c0772334ee8a8ded387f19/.gitmodules",
    "contents_url": "https://api.github.com/repos/TUWien/DocScan/contents/.gitmodules?ref=cd6499c47b9d022546c0772334ee8a8ded387f19",
    "patch": "@@ -0,0 +1,3 @@\n+[submodule \"opencv_libs\"]\n+\tpath = opencv_libs\n+\turl = git@github.com:hollaus/opencv_libs.git"
  },
  {
    "sha": "4089232b2c5b211d5880d5310b9357dcf040cd00",
    "filename": ".travis.yml",
    "status": "modified",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/TUWien/DocScan/blob/cd6499c47b9d022546c0772334ee8a8ded387f19/.travis.yml",
    "raw_url": "https://github.com/TUWien/DocScan/raw/cd6499c47b9d022546c0772334ee8a8ded387f19/.travis.yml",
    "contents_url": "https://api.github.com/repos/TUWien/DocScan/contents/.travis.yml?ref=cd6499c47b9d022546c0772334ee8a8ded387f19",
    "patch": "@@ -39,14 +39,6 @@ before_install:\n - chmod +x gradle/wrapper/gradle-wrapper.jar\n - chmod +x gradlew\n before_script:\n-#  - ls -lh\n-#  - git clone https://github.com/hollaus/opencv_libs.git OpenCV-android-sdk\n-- ls -lh\n-- git clone https://github.com/hollaus/opencv_libs.git opencv_libs\n-- cd app/src/main\n-- ln -s ../../../opencv_libs/sdk/native/libs jniLibs\n-- ln -s ../../../opencv_libs/sdk/native/jni/include include\n-- cd ../../..\n #  unfortunately we do not have abi for android-27. Tested images can be found here:\n #  https://stackoverflow.com/questions/45100298/how-to-setup-an-emulator-running-api-25-using-a-build-matrix-on-travis-ci\n #  TODO: test other images as well"
  },
  {
    "sha": "396311d83f759b277d5451898c0fa5edf423b97c",
    "filename": "README.md",
    "status": "modified",
    "additions": 4,
    "deletions": 30,
    "changes": 34,
    "blob_url": "https://github.com/TUWien/DocScan/blob/cd6499c47b9d022546c0772334ee8a8ded387f19/README.md",
    "raw_url": "https://github.com/TUWien/DocScan/raw/cd6499c47b9d022546c0772334ee8a8ded387f19/README.md",
    "contents_url": "https://api.github.com/repos/TUWien/DocScan/contents/README.md?ref=cd6499c47b9d022546c0772334ee8a8ded387f19",
    "patch": "@@ -8,36 +8,10 @@ Fabian Hollaus,\n Florian Kleber,\n Markus Diem\n \n-## Build Instructions\n-DocScan makes use of native (C++) OpenCV and OpenCV Java API. The Java part is automatically downloaded after syncing.\n-### Download native library\n-For the native part you have to clone this repo:\n-\n-```shell\n-git clone https://github.com/hollaus/opencv_libs.git opencv_native\n-```\n-### Add native library to the project\n-Next you have to copy two folders from the native library to the project.\n-- copy `opencv_native/sdk/native/libs` to `app/src/main/jniLibs`\n-- copy `opencv_native/sdk/native/jni/include` to `app/src/main/include`\n-\n-Alternatively, you can create symlinks - as written below. It is assumed that your project root folder (DocScan) and the opencv_native folder are on the same hierarchy level.\n-\n-Windows:\n-\n-```shell\n-cd app/src/main\n-mklink /d jniLibs ..\\..\\..\\..\\opencv_native\\sdk\\native\\libs\n-mklink /d include ..\\..\\..\\..\\opencv_native\\sdk\\native\\jni\\include\n-```\n-\n-Linux:\n-```shell\n-cd app/src/main\n-ln -s ../../../opencv_native/sdk/native/libs jniLibs\n-ln -s ../../../opencv_native/sdk/native/jni/include include\n-```\n-\n+### Build Instructions\n+DocScan makes use of native (C++) OpenCV and OpenCV Java API. The Java part is automatically downloaded after syncing,\n+the native part is imported as a git submodule from `https://github.com/hollaus/opencv_libs.git` which also automatically\n+downloads the resources.\n \n ### Sync and build the project\n "
  },
  {
    "sha": "bef6f015c06d03a69351da84a98b9666e42b695e",
    "filename": "app/CMakeLists.txt",
    "status": "modified",
    "additions": 25,
    "deletions": 24,
    "changes": 49,
    "blob_url": "https://github.com/TUWien/DocScan/blob/cd6499c47b9d022546c0772334ee8a8ded387f19/app/CMakeLists.txt",
    "raw_url": "https://github.com/TUWien/DocScan/raw/cd6499c47b9d022546c0772334ee8a8ded387f19/app/CMakeLists.txt",
    "contents_url": "https://api.github.com/repos/TUWien/DocScan/contents/app/CMakeLists.txt?ref=cd6499c47b9d022546c0772334ee8a8ded387f19",
    "patch": "@@ -5,31 +5,32 @@\n \n cmake_minimum_required(VERSION 3.4.1)\n \n-# The includes and executables can be found in https://github.com/hollaus/opencv_native\n-include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src/main/include/)\n+# The includes and executables can be found in https://github.com/hollaus/opencv_native which are\n+# imported as a git submodule\n+include_directories(${PATH_TO_OPENCV_NATIVE}/jni/include/)\n \n-add_library( lib_opencv SHARED IMPORTED )\n-set_target_properties(lib_opencv PROPERTIES IMPORTED_LOCATION ${CMAKE_CURRENT_SOURCE_DIR}/src/main/jniLibs/${ANDROID_ABI}/libopencv_java3.so)\n+add_library(lib_opencv SHARED IMPORTED)\n+set_target_properties(lib_opencv PROPERTIES IMPORTED_LOCATION ${PATH_TO_OPENCV_NATIVE}/libs/${ANDROID_ABI}/libopencv_java3.so)\n \n # Creates and names a library, sets it as either STATIC\n # or SHARED, and provides the relative paths to its source code.\n # You can define multiple libraries, and CMake builds them for you.\n # Gradle automatically packages shared libraries with your APK.\n \n add_library( # Sets the name of the library.\n-             docscan-native\n+        docscan-native\n \n-             # Sets the library as a shared library.\n-             SHARED\n+        # Sets the library as a shared library.\n+        SHARED\n \n-             # Provides a relative path to your source file(s).\n-             src/main/cpp/DocScanInterface.cpp\n-             src/main/cpp/FocusMeasure.cpp\n-             src/main/cpp/DkMath.cpp\n-             src/main/cpp/PageSegmentationUtils.cpp\n-             src/main/cpp/PageSegmentation.cpp\n-             src/main/cpp/Utils.cpp\n-             src/main/cpp/Illumination.cpp )\n+        # Provides a relative path to your source file(s).\n+        src/main/cpp/DocScanInterface.cpp\n+        src/main/cpp/FocusMeasure.cpp\n+        src/main/cpp/DkMath.cpp\n+        src/main/cpp/PageSegmentationUtils.cpp\n+        src/main/cpp/PageSegmentation.cpp\n+        src/main/cpp/Utils.cpp\n+        src/main/cpp/Illumination.cpp)\n \n # Searches for a specified prebuilt library and stores the path as a\n # variable. Because CMake includes system libraries in the search path by\n@@ -38,19 +39,19 @@ add_library( # Sets the name of the library.\n # completing its build.\n \n find_library( # Sets the name of the path variable.\n-              log-lib\n+        log-lib\n \n-              # Specifies the name of the NDK library that\n-              # you want CMake to locate.\n-              log )\n+        # Specifies the name of the NDK library that\n+        # you want CMake to locate.\n+        log)\n \n # Specifies libraries CMake should link to your target library. You\n # can link multiple libraries, such as libraries you define in this\n # build script, prebuilt third-party libraries, or system libraries.\n \n target_link_libraries( # Specifies the target library.\n-                       docscan-native\n-                       lib_opencv\n-                       # Links the target library to the log library\n-                       # included in the NDK.\n-                       ${log-lib} )\n\\ No newline at end of file\n+        docscan-native\n+        lib_opencv\n+        # Links the target library to the log library\n+        # included in the NDK.\n+        ${log-lib})\n\\ No newline at end of file"
  },
  {
    "sha": "fda2665de27e052b9e4c27b169e4527c9056c30f",
    "filename": "app/build.gradle",
    "status": "modified",
    "additions": 141,
    "deletions": 135,
    "changes": 276,
    "blob_url": "https://github.com/TUWien/DocScan/blob/cd6499c47b9d022546c0772334ee8a8ded387f19/app/build.gradle",
    "raw_url": "https://github.com/TUWien/DocScan/raw/cd6499c47b9d022546c0772334ee8a8ded387f19/app/build.gradle",
    "contents_url": "https://api.github.com/repos/TUWien/DocScan/contents/app/build.gradle?ref=cd6499c47b9d022546c0772334ee8a8ded387f19",
    "patch": "@@ -1,146 +1,152 @@\n-apply plugin: 'kotlin-kapt'\n apply plugin: 'com.android.application'\n apply plugin: 'kotlin-android'\n+apply plugin: 'kotlin-kapt'\n apply plugin: 'kotlin-android-extensions'\n apply plugin: 'io.fabric'\n apply plugin: 'com.google.gms.google-services'\n \n+// the open cv native libs are added as a submodule to the repo, so that they are downloaded\n+// automatically.\n+def path_to_opencv_native = new File(getProjectDir(), \"../opencv_libs/sdk/native\")\n+\n android {\n \n-\tcompileOptions {\n-\t\tsourceCompatibility JavaVersion.VERSION_1_8\n-\t\ttargetCompatibility JavaVersion.VERSION_1_8\n-\t}\n+    compileOptions {\n+        sourceCompatibility JavaVersion.VERSION_1_8\n+        targetCompatibility JavaVersion.VERSION_1_8\n+    }\n \n     compileSdkVersion 30\n-\tdefaultConfig {\n-\t\tapplicationId \"at.ac.tuwien.caa.docscan\"\n-\t\tminSdkVersion 16\n-\t\ttargetSdkVersion 30\n-\t\tversionCode 156\n-\t\tversionName \"1.7.54\"\n-\n-\t\tmultiDexEnabled true\n+    defaultConfig {\n+        applicationId \"at.ac.tuwien.caa.docscan\"\n+        minSdkVersion 16\n+        targetSdkVersion 30\n+        versionCode 156\n+        versionName \"1.7.54\"\n+\n+        multiDexEnabled true\n //\t\tthis is used to show the build time in the AboutActivity\n-\t\tbuildConfigField \"long\", \"TIMESTAMP\", System.currentTimeMillis() + \"L\"\n-\t\t// we need vectorDrawables.useSupportLibrary to get rid of this error:\n+        buildConfigField \"long\", \"TIMESTAMP\", System.currentTimeMillis() + \"L\"\n+        // we need vectorDrawables.useSupportLibrary to get rid of this error:\n //\t\tReferences to other resources are not supported by build-time PNG generation\n-\t\tvectorDrawables.useSupportLibrary = true\n+        vectorDrawables.useSupportLibrary = true\n+        testInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'\n \n-\t\tndk {\n-\t\t\t// Specifies the ABI configurations of your native\n-\t\t\t// libraries Gradle should build and package with your APK.\n+        ndk {\n+            // Specifies the ABI configurations of your native\n+            // libraries Gradle should build and package with your APK.\n //            Note this also effects externalNativeBuild.cmake, so we do not to define this anymore:\n-\t\t\tabiFilters 'armeabi-v7a', 'arm64-v8a'\n+            abiFilters 'armeabi-v7a', 'arm64-v8a'\n //\t\t\tabiFilters 'x86'\n-\t\t}\n-\t\ttestInstrumentationRunner = 'androidx.test.runner.AndroidJUnitRunner'\n-\t}\n+        }\n+        externalNativeBuild {\n+            cmake {\n+                // specify the path for the opencv native files and pass it to CMakeLists.txt as\n+                // argument\n+                arguments \"-DPATH_TO_OPENCV_NATIVE:STRING=${path_to_opencv_native}\"\n+            }\n+        }\n+    }\n \n-\text.enableCrashlytics = true\n+    externalNativeBuild {\n+        cmake {\n+            path \"CMakeLists.txt\"\n+        }\n+    }\n \n-\tbuildTypes {\n+    ext.enableCrashlytics = true\n+\n+    buildTypes {\n //        The dropbox api key is hidden based on the 2nd example in this post:\n //        https://rammic.github.io/2015/07/28/hiding-secrets-in-android-apps/\n //        If you want to receive the api key, please send a mail to docscan@cvl.tuwien.ac.at\n-\t\tdebug {\n-\t\t\tbuildConfigField \"String\", \"DropboxApiKey\", \"\\\"${getProps(\"DropboxApiKey\")}\\\"\"\n-\t\t\tresValue 'string', \"dropbox_api_key\", \"\\\"${getProps(\"DropboxManifestApiKey\")}\\\"\"\n-\t\t}\n-\t\trelease {\n-\t\t\tminifyEnabled false\n-\t\t\tproguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n-\t\t\tbuildConfigField \"String\", \"DropboxApiKey\", \"\\\"${getProps(\"DropboxApiKey\")}\\\"\"\n-\t\t\tresValue 'string', \"dropbox_api_key\", \"\\\"${getProps(\"DropboxManifestApiKey\")}\\\"\"\n+        debug {\n+            buildConfigField \"String\", \"DropboxApiKey\", \"\\\"${getProps(\"DropboxApiKey\")}\\\"\"\n+            resValue 'string', \"dropbox_api_key\", \"\\\"${getProps(\"DropboxManifestApiKey\")}\\\"\"\n+        }\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n+            buildConfigField \"String\", \"DropboxApiKey\", \"\\\"${getProps(\"DropboxApiKey\")}\\\"\"\n+            resValue 'string', \"dropbox_api_key\", \"\\\"${getProps(\"DropboxManifestApiKey\")}\\\"\"\n //\t\t\tUncomment this line if you want to run a release configuration without signing:\n-\t\t\tsigningConfig debug.signingConfig\n-\t\t}\n-\t}\n-\n-\tflavorDimensions \"version\"\n-\n-\tproductFlavors {\n-\t\t// When building a variant that uses this flavor, the following configurations\n-\t\t// override those in the defaultConfig block.\n-\t\tdev {\n-\t\t\t// To avoid using legacy multidex when building from the command line,\n-\t\t\t// set minSdkVersion to 21 or higher. When using Android Studio 2.3 or higher,\n-\t\t\t// the build automatically avoids legacy multidex when deploying to a device running\n-\t\t\t// API level 21 or higher—regardless of what you set as your minSdkVersion.\n+            signingConfig debug.signingConfig\n+        }\n+    }\n+\n+    flavorDimensions \"version\"\n+\n+    productFlavors {\n+        // When building a variant that uses this flavor, the following configurations\n+        // override those in the defaultConfig block.\n+        dev {\n+            // To avoid using legacy multidex when building from the command line,\n+            // set minSdkVersion to 21 or higher. When using Android Studio 2.3 or higher,\n+            // the build automatically avoids legacy multidex when deploying to a device running\n+            // API level 21 or higher—regardless of what you set as your minSdkVersion.\n //\t\t\tapplicationID \"at.ac.tuwien.caa.docscan\"\n-\t\t\tdimension \"version\"\n+            dimension \"version\"\n //\t\t\tminSdkVersion 21\n-\t\t\tversionNameSuffix \"-dev\"\n+            versionNameSuffix \"-dev\"\n //\t\t\tapplicationIdSuffix '.dev'\n-\t\t}\n-\n-\t\tprod {\n-\t\t\t// If you've configured the defaultConfig block for the release version of\n-\t\t\t// your app, you can leave this block empty and Gradle uses configurations in\n-\t\t\t// the defaultConfig block instead. You still need to create this flavor.\n-\t\t\t// Otherwise, all variants use the \"dev\" flavor configurations.\n-\t\t\tdimension \"version\"\n-\n-\t\t}\n-\t}\n-\n-\n-\texternalNativeBuild {\n-\t\tcmake {\n-\t\t\tpath \"CMakeLists.txt\"\n-\t\t}\n-\t}\n-\tsourceSets {\n-\t\tmain {\n-\t\t\tjniLibs.srcDirs = ['src/main/jniLibs']\n-\t\t}\n-\t}\n-\t// Fixed build error : Duplicate files copied in APK META-INF/xxx\n-\tpackagingOptions {\n-\n-\t\texclude 'META-INF/DEPENDENCIES'\n-\t\texclude 'META-INF/NOTICE'\n-\t\texclude 'META-INF/LICENSE'\n-\t\texclude 'META-INF/NOTICE.txt'\n-\t\texclude 'META-INF/LICENSE.txt'\n-\t}\n-\tlintOptions {\n-\t\tabortOnError false\n-\t}\n-\n-\tuseLibrary 'android.test.runner'\n-\n-\ttestOptions {\n-\t\t// Encapsulates options for local unit tests.\n-\t\tunitTests {\n-\t\t\t// By default, local unit tests throw an exception any time the code you are testing tries to access\n-\t\t\t// Android platform APIs (unless you mock Android dependencies yourself or with a testing\n-\t\t\t// framework like Mockito). However, you can enable the following property so that the test\n-\t\t\t// returns either null or zero when accessing platform APIs, rather than throwing an exception.\n-\t\t\treturnDefaultValues true\n-\n-\t\t\t// Encapsulates options for controlling how Gradle executes local unit tests. For a list\n-\t\t\t// of all the options you can specify, read Gradle's reference documentation.\n-\t\t\tall {\n-\t\t\t\t// Sets JVM argument(s) for the test JVM(s).\n-\t\t\t\tjvmArgs '-XX:MaxPermSize=256m'\n-\n-\t\t\t\t// You can also check the task name to apply options to only the tests you specify.\n-\t\t\t\tif (it.name == 'testDebugUnitTest') {\n-\t\t\t\t\tsystemProperty 'debug', 'true'\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\t}\n+        }\n+\n+        prod {\n+            // If you've configured the defaultConfig block for the release version of\n+            // your app, you can leave this block empty and Gradle uses configurations in\n+            // the defaultConfig block instead. You still need to create this flavor.\n+            // Otherwise, all variants use the \"dev\" flavor configurations.\n+            dimension \"version\"\n+\n+        }\n+    }\n+\n+    // Fixed build error : Duplicate files copied in APK META-INF/xxx\n+    packagingOptions {\n+\n+        exclude 'META-INF/DEPENDENCIES'\n+        exclude 'META-INF/NOTICE'\n+        exclude 'META-INF/LICENSE'\n+        exclude 'META-INF/NOTICE.txt'\n+        exclude 'META-INF/LICENSE.txt'\n+    }\n+    lintOptions {\n+        abortOnError false\n+    }\n+\n+    useLibrary 'android.test.runner'\n+\n+    testOptions {\n+        // Encapsulates options for local unit tests.\n+        unitTests {\n+            // By default, local unit tests throw an exception any time the code you are testing tries to access\n+            // Android platform APIs (unless you mock Android dependencies yourself or with a testing\n+            // framework like Mockito). However, you can enable the following property so that the test\n+            // returns either null or zero when accessing platform APIs, rather than throwing an exception.\n+            returnDefaultValues true\n+\n+            // Encapsulates options for controlling how Gradle executes local unit tests. For a list\n+            // of all the options you can specify, read Gradle's reference documentation.\n+            all {\n+                // Sets JVM argument(s) for the test JVM(s).\n+                jvmArgs '-XX:MaxPermSize=256m'\n+\n+                // You can also check the task name to apply options to only the tests you specify.\n+                if (it.name == 'testDebugUnitTest') {\n+                    systemProperty 'debug', 'true'\n+                }\n+            }\n+        }\n+    }\n \n //\tbuildToolsVersion '27.0.3'\n }\n \n \n def getProps(String propName) {\n \n-\tdef propsFile = rootProject.file('api_info.txt')\n-\tif (propsFile.exists()) {\n+    def propsFile = rootProject.file('api_info.txt')\n+    if (propsFile.exists()) {\n         def props = new Properties()\n //\t\tif (props.hasProperty(propName)) {\n         props.load(new FileInputStream(propsFile))\n@@ -156,28 +162,28 @@ def getProps(String propName) {\n dependencies {\n     implementation fileTree(include: ['*.jar'], dir: 'libs')\n     testImplementation 'junit:junit:4.13'\n-\tandroidTestImplementation 'androidx.test:core:1.2.0'\n+    androidTestImplementation 'androidx.test:core:1.2.0'\n \n //\tkapt(\"groupId:artifactId:version\")\n \n //    Took this lines from:\n //    https://medium.com/androiddevelopers/write-once-run-everywhere-tests-on-android-88adb2ba20c5\n-\tandroidTestImplementation('androidx.test:runner:1.2.0')\n-\tandroidTestImplementation('androidx.test.ext:junit:1.1.1')\n-\tandroidTestImplementation('androidx.test.espresso:espresso-intents:3.2.0')\n-\tandroidTestImplementation('androidx.test.espresso:espresso-core:3.2.0')\n-\tandroidTestImplementation('androidx.test.ext:truth:1.2.0')\n-\ttestImplementation('org.robolectric:robolectric:4.3.1')\n-\ttestImplementation ('org.robolectric:robolectric:4.3.1')\n-\n-\tandroid {\n-\t\ttestOptions.unitTests.includeAndroidResources = true\n-\t}\n-\n-\timplementation 'com.github.hollaus:OpenCVLibrary:1.0'\n+    androidTestImplementation('androidx.test:runner:1.2.0')\n+    androidTestImplementation('androidx.test.ext:junit:1.1.1')\n+    androidTestImplementation('androidx.test.espresso:espresso-intents:3.2.0')\n+    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0')\n+    androidTestImplementation('androidx.test.ext:truth:1.2.0')\n+    testImplementation('org.robolectric:robolectric:4.3.1')\n+    testImplementation('org.robolectric:robolectric:4.3.1')\n+\n+    android {\n+        testOptions.unitTests.includeAndroidResources = true\n+    }\n+\n+    implementation 'com.github.hollaus:OpenCVLibrary:1.0'\n     implementation 'androidx.appcompat:appcompat:1.1.0'\n     implementation 'com.dropbox.core:dropbox-core-sdk:3.1.3'\n-\timplementation 'androidx.exifinterface:exifinterface:1.3.1'\n+    implementation 'androidx.exifinterface:exifinterface:1.3.1'\n //    implementation 'androidx.exifinterface:exifinterface:1.3.1'\n     implementation 'androidx.preference:preference:1.1.0'\n     implementation 'androidx.cardview:cardview:1.0.0'\n@@ -192,14 +198,14 @@ dependencies {\n     implementation 'com.itextpdf:itextg:5.5.10'\n     implementation 'com.github.smart-fun:XmlToJson:1.4.0'\n     implementation 'androidx.multidex:multidex:2.0.1'\n-\timplementation 'com.squareup.okhttp3:logging-interceptor:4.3.0'\n+    implementation 'com.squareup.okhttp3:logging-interceptor:4.3.0'\n     implementation 'com.koushikdutta.ion:ion:3.0.8'\n     implementation 'com.google.android.gms:play-services-auth:17.0.0'\n     // we need this for the ProviderInstaller\n     implementation 'me.dm7.barcodescanner:zxing:1.9.8'\n     implementation 'com.github.bumptech.glide:glide:4.10.0'\n-\tkapt 'com.github.bumptech.glide:compiler:4.10.0'\n-\tkapt 'androidx.annotation:annotation:1.1.0'\n+    kapt 'com.github.bumptech.glide:compiler:4.10.0'\n+    kapt 'androidx.annotation:annotation:1.1.0'\n     //\timplementation project(':openCVLibrary')\n     implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'\n     implementation 'me.drakeet.support:toastcompat:1.1.0'\n@@ -208,12 +214,12 @@ dependencies {\n     implementation 'com.google.firebase:firebase-core:17.2.1'\n     // Add dependency\n     implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'\n-\tandroidTestImplementation 'androidx.test.ext:junit:1.1.1'\n+    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\n     androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0', {\n         exclude group: 'com.android.support', module: 'support-annotations'\n     }\n     androidTestImplementation 'androidx.test:rules:1.2.0'\n-\tandroidTestImplementation \"android.arch.core:core-testing:1.1.1\"\n+    androidTestImplementation \"android.arch.core:core-testing:1.1.1\"\n     androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0', {\n         exclude group: 'com.android.support', module: 'support-annotations'\n         exclude group: 'com.android.support', module: 'support-v4'\n@@ -223,9 +229,9 @@ dependencies {\n         exclude group: 'com.android.support', module: 'recyclerview-v7'\n     }\n     implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\n-\timplementation 'android.arch.navigation:navigation-fragment:1.0.0'\n-\timplementation 'android.arch.navigation:navigation-ui:1.0.0'\n-\timplementation 'it.xabaras.android.espresso:recyclerview-child-actions:1.0'\n+    implementation 'android.arch.navigation:navigation-fragment:1.0.0'\n+    implementation 'android.arch.navigation:navigation-ui:1.0.0'\n+    implementation 'it.xabaras.android.espresso:recyclerview-child-actions:1.0'\n \n }\n repositories {"
  },
  {
    "sha": "87c8234ff800d0abea2e16f6490464f8526ab1f9",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 4,
    "deletions": 7,
    "changes": 11,
    "blob_url": "https://github.com/TUWien/DocScan/blob/cd6499c47b9d022546c0772334ee8a8ded387f19/build.gradle",
    "raw_url": "https://github.com/TUWien/DocScan/raw/cd6499c47b9d022546c0772334ee8a8ded387f19/build.gradle",
    "contents_url": "https://api.github.com/repos/TUWien/DocScan/contents/build.gradle?ref=cd6499c47b9d022546c0772334ee8a8ded387f19",
    "patch": "@@ -2,20 +2,17 @@ ext {\n     var = kotlin_version\n }// Top-level build file where you can add configuration options common to all sub-projects/modules.\n buildscript {\n-    ext.kotlin_version = '1.3.61'\n+    ext.kotlin_version = '1.4.21'\n     repositories {\n         jcenter()\n         google()\n         maven {\n             url 'https://maven.fabric.io/public'\n         }\n-\n     }\n \n-\n-\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:3.5.3'\n+        classpath 'com.android.tools.build:gradle:4.1.2'\n         classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n \n         // Check for v3.1.2 or higher\n@@ -32,8 +29,8 @@ buildscript {\n allprojects {\n     repositories {\n         jcenter()\n-        maven { url \"https://jitpack.io\" }\t\t// necessary for XmlToJson\n-        maven { url \"https://maven.google.com\" }\t\t// necessary for Google Play Services\n+        maven { url \"https://jitpack.io\" }        // necessary for XmlToJson\n+        maven { url \"https://maven.google.com\" }        // necessary for Google Play Services\n         google()\n     }\n }"
  },
  {
    "sha": "236cf162a8974cb449ac8324896959165ad97385",
    "filename": "gradle.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/TUWien/DocScan/blob/cd6499c47b9d022546c0772334ee8a8ded387f19/gradle.properties",
    "raw_url": "https://github.com/TUWien/DocScan/raw/cd6499c47b9d022546c0772334ee8a8ded387f19/gradle.properties",
    "contents_url": "https://api.github.com/repos/TUWien/DocScan/contents/gradle.properties?ref=cd6499c47b9d022546c0772334ee8a8ded387f19",
    "patch": "@@ -33,6 +33,6 @@ org.gradle.configureondemand=false\n android.useAndroidX=true\n android.enableJetifier=true\n \n-org.gradle.java.home=C\\:\\\\Program Files\\\\Java\\\\jdk1.8.0_241\n+#org.gradle.java.home=C\\:\\\\Program Files\\\\Java\\\\jdk1.8.0_241\n kapt.incremental.apt=true\n org.gradle.caching=true\n\\ No newline at end of file"
  },
  {
    "sha": "0ca0cb63485af0fa5cd43e7cea40fb58028fc52b",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/TUWien/DocScan/blob/cd6499c47b9d022546c0772334ee8a8ded387f19/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/TUWien/DocScan/raw/cd6499c47b9d022546c0772334ee8a8ded387f19/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/TUWien/DocScan/contents/gradle/wrapper/gradle-wrapper.properties?ref=cd6499c47b9d022546c0772334ee8a8ded387f19",
    "patch": "@@ -1,6 +1,6 @@\n-#Fri Jan 10 13:39:35 CET 2020\n+#Sun Mar 07 10:13:09 CET 2021\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-5.4.1-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-bin.zip"
  },
  {
    "sha": "8117651467fff4c0fd8fdae56a4ae9a935c90779",
    "filename": "opencv_libs",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": null,
    "raw_url": null,
    "contents_url": "https://api.github.com/repos/TUWien/DocScan/contents/opencv_libs?ref=cd6499c47b9d022546c0772334ee8a8ded387f19",
    "patch": "@@ -0,0 +1 @@\n+Subproject commit 8117651467fff4c0fd8fdae56a4ae9a935c90779"
  }
]
