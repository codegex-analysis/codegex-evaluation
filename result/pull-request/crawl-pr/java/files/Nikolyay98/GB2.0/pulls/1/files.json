[
  {
    "sha": "8d930585a7ea7d79aa7202e98815e2c46d130a8a",
    "filename": "src/Main.java",
    "status": "modified",
    "additions": 0,
    "deletions": 25,
    "changes": 25,
    "blob_url": "https://github.com/Nikolyay98/GB2.0/blob/3144359864c0533b25d0192f54fc2704d7db950e/src/Main.java",
    "raw_url": "https://github.com/Nikolyay98/GB2.0/raw/3144359864c0533b25d0192f54fc2704d7db950e/src/Main.java",
    "contents_url": "https://api.github.com/repos/Nikolyay98/GB2.0/contents/src/Main.java?ref=3144359864c0533b25d0192f54fc2704d7db950e",
    "patch": "@@ -5,41 +5,30 @@ public static void main(String[] args) {\n //        //задание 1\n         System.out.println(\"Task 1.\");\n         int[] array = {1, 1, 0, 0, 1, 1, 0, 0};\n-\n         System.out.println(Arrays.toString(array));\n         changeZeroesAndOnes(array);\n         System.out.println(Arrays.toString(array));\n-\n         //задание2\n         System.out.println(\"Task 2\");\n         int[] emptyArray = new int[8];\n-\n         System.out.println(Arrays.toString(emptyArray));\n         fillArrayWithProgression(emptyArray);\n         System.out.println(Arrays.toString(emptyArray));\n-\n         // задание 3\n-\n         System.out.println(\"Task 3\");\n         int[] myArray = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};\n-\n         System.out.println(Arrays.toString(myArray));\n         multiplyOnSixIn(myArray);\n         System.out.println(Arrays.toString(myArray));\n-\n         //задание 4\n         System.out.println(\"Task 4\");\n-\n         int[][] square = new int[10][10]; // Создать квадратный двумерный целочисленный массив (количество строк и столбцов одинаковое)\n         System.out.println(\"With zeroes\");\n         printSquare(square);\n-\n         fillDiagonalWithOnes(square);\n         System.out.println(\"With ones.\");\n         printSquare(square);\n-\n //             задание 5\n-\n         System.out.println(\"Task 5\");\n         int[] minMaxArray = {1, 2, 7, 4, 0};\n         System.out.println(Arrays.toString(minMaxArray));\n@@ -52,12 +41,7 @@ public static void main(String[] args) {\n         System.out.println(Arrays.toString(sumsArray));\n         boolean isBalanced = hasBalance(sumsArray);\n         System.out.println(\"Суммы правой и левой части где либо равны? \" + isBalanced);\n-\n-\n-\n-\n //                Задание 7\n-\n         System.out.println(\"Task 7.\");\n         int[] rightShiftArray = { 1, 2, 3, 4, 5, 6, 7 };\n         System.out.println(Arrays.toString(rightShiftArray));\n@@ -70,8 +54,6 @@ public static void main(String[] args) {\n         System.out.println(Arrays.toString(leftShiftArray));\n \n     }\n-\n-\n     static void changeZeroesAndOnes(int[] inputArray){\n         for (int i = 0; i < inputArray.length; i++){\n             inputArray[i] = 1 - inputArray[i];\n@@ -92,7 +74,6 @@ static void fillDiagonalWithOnes(int[][] square) {\n         for (int i = 0; i < square.length; i++) {\n             // диагональные элементы имеют одинаковые индексы\n             square[i][i] = 1;\n-\n             // заполнение другой диагонали\n             square[i][square[i].length - 1 - i] = 1;\n         }\n@@ -117,12 +98,9 @@ static void printMinAndMax(int[] inputArray) {\n                 max = inputArray[i];\n             }\n         }\n-\n         System.out.println(\"Minimum: \" + min);\n         System.out.println(\"Maximum: \" + max);\n     }\n-\n-\n     static boolean hasBalance(int[] inputArray){\n         int leftSum = 0;\n         // метод должен вернуть true, если в массиве есть место, в котором сумма левой и правой части массива равны.\n@@ -136,10 +114,8 @@ static boolean hasBalance(int[] inputArray){\n                 return true;\n             }\n         }\n-\n         return false;\n     }\n-\n     static void rightShift(int [] inputArray){\n         int buffer = inputArray[0];\n         inputArray[0] = inputArray[inputArray.length - 1];\n@@ -163,7 +139,6 @@ static void shiftArray(int[] array, int shift) {\n             }\n         }\n     }\n-\n     static void leftShift(int [] inputArray){\n         int buffer = inputArray[inputArray.length - 1];\n         inputArray[inputArray.length - 1] = inputArray[0];"
  }
]
