[
  {
    "sha": "6b1c3250a1fdb6ec4449dcebb296b65aa4f50bf7",
    "filename": "BOJ/BOJ_16235.java",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/ssafy10-5-algo/AlgorithmStudy/blob/60735a34f6d04f2a16da933c49bb8baf95eeaa78/BOJ/BOJ_16235.java",
    "raw_url": "https://github.com/ssafy10-5-algo/AlgorithmStudy/raw/60735a34f6d04f2a16da933c49bb8baf95eeaa78/BOJ/BOJ_16235.java",
    "contents_url": "https://api.github.com/repos/ssafy10-5-algo/AlgorithmStudy/contents/BOJ/BOJ_16235.java?ref=60735a34f6d04f2a16da933c49bb8baf95eeaa78",
    "patch": "@@ -0,0 +1,124 @@\n+import java.io.BufferedReader;\n+import java.io.InputStreamReader;\n+import java.util.Arrays;\n+import java.util.LinkedList;\n+import java.util.PriorityQueue;\n+import java.util.Queue;\n+import java.util.StringTokenizer;\n+\n+// 나무 재테크\n+// 1268ms\n+\n+public class BOJ_16235 {\n+\tstatic int N, M, K;\n+\tstatic int[][] food, ground;\n+\tstatic Queue<Tree> pq;\n+\tstatic Queue<Tree> aliveTree;\n+\tstatic Queue<Tree> deadTree;\n+\n+\tpublic static void main(String[] args) throws Exception {\n+\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n+\t\tStringTokenizer st = new StringTokenizer(br.readLine());\n+\t\t\n+\t\tN = Integer.parseInt(st.nextToken());\t\t// 땅 크기\n+\t\tM = Integer.parseInt(st.nextToken());\t\t// 나무 수\n+\t\tK = Integer.parseInt(st.nextToken());\t\t// 몇년 지나야 하는지\n+\n+\t\tfood = new int[N][N];\t\t// 겨울철 로봇이 뿌릴 양분\n+\t\tground = new int[N][N];\t\t// 현재 땅에 있는 양분\n+\t\tpq = new PriorityQueue<Tree>();\t\t\t// 나무 위치와 나이 정보 저장할 pq\n+\t\taliveTree = new PriorityQueue<Tree>();\n+\t\tdeadTree = new LinkedList<Tree>();\n+\t\t\n+\t\tfor (int i = 0; i < N; i++) {\t\t// 로봇이 뿌릴 양분 입력받기\n+\t\t\tst = new StringTokenizer(br.readLine(), \" \");\n+\t\t\tfor (int j = 0; j < N; j++) {\n+\t\t\t\tfood[i][j] = Integer.parseInt(st.nextToken());\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\tfor (int i = 0; i < N; i++) {\n+\t\t\tArrays.fill(ground[i], 5);\t\t\t\t// 제일 처음 땅 양분은 5로 초기화\n+\t\t}\n+\t\t\n+\t\tfor (int i = 0; i < M; i++) {\t\t\t\t// 나무 위치, 나이 정보 입력받기\n+\t\t\tst = new StringTokenizer(br.readLine(), \" \");\n+\t\t\tpq.add(new Tree(Integer.parseInt(st.nextToken())-1, Integer.parseInt(st.nextToken())-1, Integer.parseInt(st.nextToken())));\n+\t\t}\n+\t\t\n+\t\tfor (int i = 0; i < K; i++) {\t\t\t// K년 반복\n+\t\t\tspring();\t\t\t// 봄\n+\t\t\tsummer();\n+\t\t\tfall();\t\t\t\t// 가을\n+\t\t\twinter();\t\t\t// 겨울\n+\t\t}\n+\t\t\n+\t\tSystem.out.println(pq.size());\n+\t}\n+\n+\tstatic int[] dx = {-1, -1, -1, 0, 0, 1, 1, 1};\n+\tstatic int[] dy = {-1, 0, 1, -1, 1, -1, 0, 1};\n+\tprivate static void spring() {\n+\t\twhile(!pq.isEmpty()) {\t\t\t// pq 돌면서\n+\t\t\tTree tree = pq.poll();\n+\t\t\tif (ground[tree.x][tree.y] < tree.age) {\t\t// 땅에 있는 양분이 나이보다 작을 때만\n+\t\t\t\tdeadTree.add(tree);\t\t\t// 나무 죽는다\n+\t\t\t} else {\n+\t\t\t\tground[tree.x][tree.y] -= tree.age;\t\t\t// 나이만큼 양분을 먹고\n+\t\t\t\ttree.age++;\t\t\t// 나이도 한살 먹기\n+\t\t\t\taliveTree.add(tree);\n+\t\t\t}\n+\t\t}\n+\t}\n+\t\n+\tprivate static void summer() {\n+\t\twhile (!deadTree.isEmpty()) {\n+\t\t\tTree tree = deadTree.poll();\n+\t\t\tground[tree.x][tree.y] += tree.age/2;\t\t\t\t// 나이/2 만큼 양분으로 돌아감\n+\t\t}\n+\t\t\n+\t}\n+\t\n+\tprivate static void fall() {\n+\t\twhile (!aliveTree.isEmpty()) {\n+\t\t\tTree tree = aliveTree.poll();\n+\t\t\t\n+\t\t\tif (tree.age % 5 == 0) {\t\t// 나이가 5의 배수이면\n+\t\t\t\tfor (int i = 0; i < 8; i++) {\n+\t\t\t\t\tint nx = tree.x + dx[i];\n+\t\t\t\t\tint ny = tree.y + dy[i];\n+\t\t\t\t\t\n+\t\t\t\t\tif (nx >= 0 && nx < N && ny >= 0 && ny < N) {\t\t// 범위 체크\n+\t\t\t\t\t\tpq.add(new Tree(nx, ny, 1));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tpq.add(tree);\n+\t\t}\n+\t}\n+\t\n+\tprivate static void winter() {\n+\t\tfor (int i = 0; i < N; i++) {\n+\t\t\tfor (int j = 0; j < N; j++) {\n+\t\t\t\tground[i][j] += food[i][j];\t\t// 땅에 영양분 추가\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+class Tree implements Comparable<Tree>{\n+\tint x, y, age;\n+\tboolean life;\n+\t\n+\tpublic Tree(int x, int y, int age) {\n+\t\tthis.x = x;\n+\t\tthis.y = y;\n+\t\tthis.age = age;\n+\t\tthis.life = true;\n+\t}\n+\n+\t@Override\n+\tpublic int compareTo(Tree o) {\n+\t\treturn this.age - o.age;\n+\t}\n+}\n\\ No newline at end of file"
  }
]
