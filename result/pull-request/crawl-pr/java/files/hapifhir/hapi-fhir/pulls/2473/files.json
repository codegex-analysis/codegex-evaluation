[
  {
    "sha": "cad77bb1d0227223b4cea1b743df0e89579953d2",
    "filename": "hapi-fhir-base/src/main/java/ca/uhn/fhir/parser/RDFParser.java",
    "status": "modified",
    "additions": 13,
    "deletions": 4,
    "changes": 17,
    "blob_url": "https://github.com/hapifhir/hapi-fhir/blob/0a106c1bdf718c84dc80deeba521c6b0be1e8630/hapi-fhir-base/src/main/java/ca/uhn/fhir/parser/RDFParser.java",
    "raw_url": "https://github.com/hapifhir/hapi-fhir/raw/0a106c1bdf718c84dc80deeba521c6b0be1e8630/hapi-fhir-base/src/main/java/ca/uhn/fhir/parser/RDFParser.java",
    "contents_url": "https://api.github.com/repos/hapifhir/hapi-fhir/contents/hapi-fhir-base/src/main/java/ca/uhn/fhir/parser/RDFParser.java?ref=0a106c1bdf718c84dc80deeba521c6b0be1e8630",
    "patch": "@@ -300,7 +300,7 @@ private Model encodeChildElementToStreamWriter(final IBaseResource resource, IBa\n \n \t\t\t\t\t\t\tString propertyName = constructPredicateName(resource, childDefinition, childName, parentElement);\n \t\t\t\t\t\t\tif (element != null) {\n-\t\t\t\t\t\t\t\tXSDDatatype dataType = getXSDDataTypeForFhirType(element.fhirType());\n+\t\t\t\t\t\t\t\tXSDDatatype dataType = getXSDDataTypeForFhirType(element.fhirType(), encodedValue);\n \t\t\t\t\t\t\t\trdfResource.addProperty(rdfModel.createProperty(propertyName), this.createFhirValueBlankNode(rdfModel, encodedValue, dataType, cardinalityIndex));\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n@@ -314,7 +314,7 @@ private Model encodeChildElementToStreamWriter(final IBaseResource resource, IBa\n \t\t\t\t\tif (value != null || !hasNoExtensions(pd)) {\n \t\t\t\t\t\tif (value != null) {\n \t\t\t\t\t\t\tString propertyName = constructPredicateName(resource, childDefinition, childName, parentElement);\n-\t\t\t\t\t\t\tXSDDatatype dataType = getXSDDataTypeForFhirType(pd.fhirType());\n+\t\t\t\t\t\t\tXSDDatatype dataType = getXSDDataTypeForFhirType(pd.fhirType(), value);\n \t\t\t\t\t\t\tResource valueResource = this.createFhirValueBlankNode(rdfModel, value, dataType, cardinalityIndex);\n \t\t\t\t\t\t\tif (!hasNoExtensions(pd)) {\n \t\t\t\t\t\t\t\tIBaseHasExtensions hasExtension = (IBaseHasExtensions)pd;\n@@ -411,7 +411,7 @@ else if (element instanceof IBaseElement) {\n \t * @param fhirType hapi field type\n \t * @return XSDDatatype value\n \t */\n-\tprivate XSDDatatype getXSDDataTypeForFhirType(String fhirType) {\n+\tprivate XSDDatatype getXSDDataTypeForFhirType(String fhirType, String value) {\n \t\tswitch (fhirType) {\n \t\t\tcase \"boolean\":\n \t\t\t\treturn XSDDatatype.XSDboolean;\n@@ -423,7 +423,16 @@ private XSDDatatype getXSDDataTypeForFhirType(String fhirType) {\n \t\t\t\treturn XSDDatatype.XSDdate;\n \t\t\tcase \"dateTime\":\n \t\t\tcase \"instant\":\n-\t\t\t\treturn XSDDatatype.XSDdateTime;\n+\t\t\t\tswitch (value.length()) { // assumes valid lexical value\n+\t\t\t\t\tcase 4:\n+\t\t\t\t\t\treturn XSDDatatype.XSDgYear;\n+\t\t\t\t\tcase 7:\n+\t\t\t\t\t\treturn XSDDatatype.XSDgYearMonth;\n+\t\t\t\t\tcase 10:\n+\t\t\t\t\t\treturn XSDDatatype.XSDdate;\n+\t\t\t\t\tdefault:\n+\t\t\t\t\t\treturn XSDDatatype.XSDdateTime;\n+\t\t\t\t}\n \t\t\tcase \"code\":\n \t\t\tcase \"string\":\n \t\t\tdefault:"
  }
]
