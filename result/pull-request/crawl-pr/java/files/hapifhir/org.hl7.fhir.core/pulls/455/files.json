[
  {
    "sha": "abcc031058e98745acef6cf97552297b0fef10bb",
    "filename": "RELEASE_NOTES.md",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/hapifhir/org.hl7.fhir.core/blob/5187fdd3982a1b884f317db958ebaf09433258a3/RELEASE_NOTES.md",
    "raw_url": "https://github.com/hapifhir/org.hl7.fhir.core/raw/5187fdd3982a1b884f317db958ebaf09433258a3/RELEASE_NOTES.md",
    "contents_url": "https://api.github.com/repos/hapifhir/org.hl7.fhir.core/contents/RELEASE_NOTES.md?ref=5187fdd3982a1b884f317db958ebaf09433258a3",
    "patch": "@@ -0,0 +1 @@\n+* minor fixes in code generators for R4B\r"
  },
  {
    "sha": "3bc4ded0323befa3defb8ec7cef1485e605716ea",
    "filename": "org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/VersionConvertor_40_50.java",
    "status": "modified",
    "additions": 19,
    "deletions": 2,
    "changes": 21,
    "blob_url": "https://github.com/hapifhir/org.hl7.fhir.core/blob/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/VersionConvertor_40_50.java",
    "raw_url": "https://github.com/hapifhir/org.hl7.fhir.core/raw/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/VersionConvertor_40_50.java",
    "contents_url": "https://api.github.com/repos/hapifhir/org.hl7.fhir.core/contents/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/VersionConvertor_40_50.java?ref=5187fdd3982a1b884f317db958ebaf09433258a3",
    "patch": "@@ -967,7 +967,7 @@ protected static void copyBackboneElement(org.hl7.fhir.r4.model.BackboneType src\n     if (src == null) return null;\n     org.hl7.fhir.r5.model.DataRequirement tgt = new org.hl7.fhir.r5.model.DataRequirement();\n     copyElement(src, tgt);\n-    if (src.hasType()) tgt.setType(org.hl7.fhir.r5.model.Enumerations.FHIRAllTypes.fromCode(src.getType()));\n+    if (src.hasType()) tgt.setType(org.hl7.fhir.r5.model.Enumerations.FHIRAllTypes.fromCode(convertResourceName4to5(src.getType())));\n     for (org.hl7.fhir.r4.model.CanonicalType t : src.getProfile()) tgt.getProfile().add(convertCanonical(t));\n     if (src.hasSubject()) tgt.setSubject(convertType(src.getSubject()));\n     for (org.hl7.fhir.r4.model.StringType t : src.getMustSupport()) tgt.getMustSupport().add(convertString(t));\n@@ -981,11 +981,12 @@ protected static void copyBackboneElement(org.hl7.fhir.r4.model.BackboneType src\n     return tgt;\n   }\n \n+\n   public static org.hl7.fhir.r4.model.DataRequirement convertDataRequirement(org.hl7.fhir.r5.model.DataRequirement src) throws FHIRException {\n     if (src == null) return null;\n     org.hl7.fhir.r4.model.DataRequirement tgt = new org.hl7.fhir.r4.model.DataRequirement();\n     copyElement(src, tgt);\n-    if (src.hasType()) tgt.setType(src.getType().toCode());\n+    if (src.hasType()) tgt.setType(convertResourceName5to4(src.getType().toCode()));\n     for (org.hl7.fhir.r5.model.CanonicalType t : src.getProfile()) tgt.getProfile().add(convertCanonical(t));\n     if (src.hasSubject()) tgt.setSubject(convertType(src.getSubject()));\n     for (org.hl7.fhir.r5.model.StringType t : src.getMustSupport()) tgt.getMustSupport().add(convertString(t));\n@@ -999,6 +1000,22 @@ protected static void copyBackboneElement(org.hl7.fhir.r4.model.BackboneType src\n     return tgt;\n   }\n \n+  private static String convertResourceName4to5(String name) {\n+    if (name == null) return null;\n+    if (name.equals(\"MedicationStatement\")) {\n+      return \"MedicationUsage\";\n+    }\n+    return name;\n+  }\n+\n+  private static String convertResourceName5to4(String name) {\n+    if (name == null) return null;\n+    if (name.equals(\"MedicationUsage\")) {\n+      return \"MedicationStatement\";\n+    }\n+    return name;\n+  }\n+\n   public static org.hl7.fhir.r5.model.DataRequirement.DataRequirementCodeFilterComponent convertDataRequirementCodeFilterComponent(org.hl7.fhir.r4.model.DataRequirement.DataRequirementCodeFilterComponent src) throws FHIRException {\n     if (src == null) return null;\n     org.hl7.fhir.r5.model.DataRequirement.DataRequirementCodeFilterComponent tgt = new org.hl7.fhir.r5.model.DataRequirement.DataRequirementCodeFilterComponent();"
  },
  {
    "sha": "36a628011edcc0071c49cea3e0434d5b7db3b7af",
    "filename": "org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/conv40_50/Enumerations40_50.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/hapifhir/org.hl7.fhir.core/blob/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/conv40_50/Enumerations40_50.java",
    "raw_url": "https://github.com/hapifhir/org.hl7.fhir.core/raw/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/conv40_50/Enumerations40_50.java",
    "contents_url": "https://api.github.com/repos/hapifhir/org.hl7.fhir.core/contents/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/conv40_50/Enumerations40_50.java?ref=5187fdd3982a1b884f317db958ebaf09433258a3",
    "patch": "@@ -210,6 +210,9 @@\n             case _4_0_1:\n                 tgt.setValue(org.hl7.fhir.r5.model.Enumerations.FHIRVersion._4_0_1);\n                 break;\n+            case _4_1_0:\n+              tgt.setValue(org.hl7.fhir.r5.model.Enumerations.FHIRVersion._4_1_0);\n+              break;\n             default:\n                 tgt.setValue(org.hl7.fhir.r5.model.Enumerations.FHIRVersion.NULL);\n                 break;\n@@ -292,6 +295,9 @@\n             case _4_0_1:\n                 tgt.setValue(org.hl7.fhir.r4.model.Enumerations.FHIRVersion._4_0_1);\n                 break;\n+            case _4_1_0:\n+              tgt.setValue(org.hl7.fhir.r4.model.Enumerations.FHIRVersion._4_1_0);\n+              break;\n             default:\n                 tgt.setValue(org.hl7.fhir.r4.model.Enumerations.FHIRVersion.NULL);\n                 break;"
  },
  {
    "sha": "25e2b377f71ce71ddf30eb9818e1c919e74487a7",
    "filename": "org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Enumerations.java",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/hapifhir/org.hl7.fhir.core/blob/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Enumerations.java",
    "raw_url": "https://github.com/hapifhir/org.hl7.fhir.core/raw/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Enumerations.java",
    "contents_url": "https://api.github.com/repos/hapifhir/org.hl7.fhir.core/contents/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Enumerations.java?ref=5187fdd3982a1b884f317db958ebaf09433258a3",
    "patch": "@@ -10032,6 +10032,10 @@ public String toSystem(FHIRDefinedType code) {\n          * added to help the parsers\n          */\n         _4_0_1, \n+        /**\n+         * R4B - manually added\n+         */\n+        _4_1_0, \n         NULL;\n         public static FHIRVersion fromCode(String codeString) throws FHIRException {\n             if (codeString == null || \"\".equals(codeString))\n@@ -10082,6 +10086,8 @@ public static FHIRVersion fromCode(String codeString) throws FHIRException {\n           return _4_0_0;\n         if (\"4.0.1\".equals(codeString))\n           return _4_0_1;\n+        if (\"4.1.0\".equals(codeString))\n+          return _4_1_0;\n         throw new FHIRException(\"Unknown FHIRVersion code '\"+codeString+\"'\");\n         }\n         @Override\n@@ -10113,6 +10119,7 @@ public String toCode() {\n             case _3_5_0: return \"3.5.0\";\n             case _4_0_0: return \"4.0.0\";\n             case _4_0_1: return \"4.0.1\";\n+            case _4_1_0: return \"4.1.0\";\n             case NULL: return null;\r\n             default: return \"?\";\n           }\n@@ -10142,6 +10149,7 @@ public String getSystem() {\n             case _3_5_0: return \"http://hl7.org/fhir/FHIR-version\";\n             case _4_0_0: return \"http://hl7.org/fhir/FHIR-version\";\n             case _4_0_1: return \"http://hl7.org/fhir/FHIR-version\";\n+            case _4_1_0: return \"http://hl7.org/fhir/FHIR-version\";\n             case NULL: return null;\r\n             default: return \"?\";\n           }\n@@ -10171,6 +10179,7 @@ public String getDefinition() {\n             case _3_5_0: return \"R4 Ballot #2.\";\n             case _4_0_0: return \"FHIR Release 4 (Normative + STU).\";\n             case _4_0_1: return \"FHIR Release 4 Technical Correction #1.\";\n+            case _4_1_0: return \"FHIR Release 4B\";\n             case NULL: return null;\r\n             default: return \"?\";\n           }\n@@ -10200,6 +10209,7 @@ public String getDisplay() {\n             case _3_5_0: return \"3.5.0\";\n             case _4_0_0: return \"4.0.0\";\n             case _4_0_1: return \"4.0.1\";\n+            case _4_1_0: return \"4.1.0\";\n             case NULL: return null;\r\n             default: return \"?\";\n           }\n@@ -10263,6 +10273,8 @@ public FHIRVersion fromCode(String codeString) throws IllegalArgumentException {\n           return FHIRVersion._4_0_0;\n         if (\"4.0.1\".equals(codeString))\n           return FHIRVersion._4_0_1;\n+        if (\"4.1.0\".equals(codeString))\n+          return FHIRVersion._4_1_0;\n         throw new IllegalArgumentException(\"Unknown FHIRVersion code '\"+codeString+\"'\");\n         }\n         public Enumeration<FHIRVersion> fromType(Base code) throws FHIRException {\n@@ -10319,6 +10331,8 @@ public FHIRVersion fromCode(String codeString) throws IllegalArgumentException {\n           return new Enumeration<FHIRVersion>(this, FHIRVersion._4_0_0);\n         if (\"4.0.1\".equals(codeString))\n           return new Enumeration<FHIRVersion>(this, FHIRVersion._4_0_1);\n+        if (\"4.1.0\".equals(codeString))\n+          return new Enumeration<FHIRVersion>(this, FHIRVersion._4_1_0);\n         throw new FHIRException(\"Unknown FHIRVersion code '\"+codeString+\"'\");\n         }\n     public String toCode(FHIRVersion code) {\n@@ -10368,6 +10382,8 @@ public String toCode(FHIRVersion code) {\n         return \"4.0.0\";\n       if (code == FHIRVersion._4_0_1)\n         return \"4.0.1\";\n+      if (code == FHIRVersion._4_1_0)\n+        return \"4.1.0\";\n       return \"?\";\n       }\n     public String toSystem(FHIRVersion code) {"
  },
  {
    "sha": "2e9e27a0503a5fafe16c5a4d7bf9e4332e0a9b4f",
    "filename": "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/conformance/ProfileUtilities.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/hapifhir/org.hl7.fhir.core/blob/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/conformance/ProfileUtilities.java",
    "raw_url": "https://github.com/hapifhir/org.hl7.fhir.core/raw/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/conformance/ProfileUtilities.java",
    "contents_url": "https://api.github.com/repos/hapifhir/org.hl7.fhir.core/contents/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/conformance/ProfileUtilities.java?ref=5187fdd3982a1b884f317db958ebaf09433258a3",
    "patch": "@@ -4628,7 +4628,7 @@ private void genFixedValue(HierarchicalTableGenerator gen, Row erow, DataType va\n             erow.getSubRows().add(row);\n             Cell c = gen.new Cell();\n             row.getCells().add(c);\n-            c.addPiece(gen.new Piece((ed.getBase().getPath().equals(ed.getPath()) ? ref+ed.getPath() : corePath+(VersionUtilities.isThisOrLater(\"4.1\", context.getVersion()) ? \"types-definitions.html#\"+ed.getBase().getPath() : \"element-definitions.html#\"+ed.getBase().getPath())), t.getName(), null));\n+            c.addPiece(gen.new Piece((ed.getBase().getPath().equals(ed.getPath()) ? ref+ed.getPath() : corePath+(VersionUtilities.isR5Ver(context.getVersion()) ? \"types-definitions.html#\"+ed.getBase().getPath() : \"element-definitions.html#\"+ed.getBase().getPath())), t.getName(), null));\n             c = gen.new Cell();\n             row.getCells().add(c);\n             c.addPiece(gen.new Piece(null, null, null));"
  },
  {
    "sha": "c283fd6d15cfa7643399c9188da412235d40dd0f",
    "filename": "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Enumerations.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/hapifhir/org.hl7.fhir.core/blob/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Enumerations.java",
    "raw_url": "https://github.com/hapifhir/org.hl7.fhir.core/raw/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Enumerations.java",
    "contents_url": "https://api.github.com/repos/hapifhir/org.hl7.fhir.core/contents/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/model/Enumerations.java?ref=5187fdd3982a1b884f317db958ebaf09433258a3",
    "patch": "@@ -6568,7 +6568,7 @@ public String toSystem(FHIRAllTypes code) {\n          */\r\n         NULL;\r\n       \r\n-      public static final FHIRVersion R4B = FHIRVersion._4_0_1; \r\n+      public static final FHIRVersion R4B = FHIRVersion._4_1_0; \r\n \r\n         public static FHIRVersion fromCode(String codeString) throws FHIRException {\r\n             if (codeString == null || \"\".equals(codeString))\r\n@@ -6824,6 +6824,10 @@ public static boolean isValidCode(String codeString) {\n         public String toString() {\r\n           return toCode();\r\n         }\r\n+        \r\n+        public boolean isR4B() {\r\n+          return toCode().startsWith(\"4.1\");\r\n+        }\r\n // end addition\r\n     }\r\n \r"
  },
  {
    "sha": "186ee3d9cdfc5ae89f528e41776a787a8d0e825a",
    "filename": "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/GraphQLSchemaGenerator.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/hapifhir/org.hl7.fhir.core/blob/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/GraphQLSchemaGenerator.java",
    "raw_url": "https://github.com/hapifhir/org.hl7.fhir.core/raw/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/GraphQLSchemaGenerator.java",
    "contents_url": "https://api.github.com/repos/hapifhir/org.hl7.fhir.core/contents/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/GraphQLSchemaGenerator.java?ref=5187fdd3982a1b884f317db958ebaf09433258a3",
    "patch": "@@ -67,10 +67,12 @@\n   private static final String INNER_TYPE_NAME = \"gql.type.name\";\n   IWorkerContext context;\n   private ProfileUtilities profileUtilities;\n+  private String version;\n \n-  public GraphQLSchemaGenerator(IWorkerContext context) {\n+  public GraphQLSchemaGenerator(IWorkerContext context, String version) {\n     super();\n     this.context = context;\n+    this.version = version;\n     profileUtilities = new ProfileUtilities(context, null, null); \n   }\n   \n@@ -87,7 +89,7 @@ public void generateTypes(OutputStream stream) throws IOException, FHIRException\n         tl.put(sd.getName(), sd);\n       }\n     }\n-    writer.write(\"# FHIR GraphQL Schema. Version \"+Constants.VERSION+\"\\r\\n\\r\\n\");\n+    writer.write(\"# FHIR GraphQL Schema. Version \"+version+\"\\r\\n\\r\\n\");\n     writer.write(\"# FHIR Defined Primitive types\\r\\n\");\n     for (String n : sorted(pl.keySet()))\n       generatePrimitive(writer, pl.get(n));\n@@ -107,7 +109,7 @@ public void generateTypes(OutputStream stream) throws IOException, FHIRException\n \n   public void generateResource(OutputStream stream, StructureDefinition sd, List<SearchParameter> parameters, EnumSet<FHIROperationType> operations) throws IOException, FHIRException {\n     BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(stream));\n-    writer.write(\"# FHIR GraphQL Schema. Version \"+Constants.VERSION+\"\\r\\n\\r\\n\");\n+    writer.write(\"# FHIR GraphQL Schema. Version \"+version+\"\\r\\n\\r\\n\");\n     writer.write(\"# import the types from 'types.graphql'\\r\\n\\r\\n\");\n     generateType(writer, sd);\n     if (operations.contains(FHIROperationType.READ))"
  },
  {
    "sha": "8a7596a80429f5062ea3f576e2bffa7f1ba23acd",
    "filename": "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/NPMPackageGenerator.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/hapifhir/org.hl7.fhir.core/blob/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/NPMPackageGenerator.java",
    "raw_url": "https://github.com/hapifhir/org.hl7.fhir.core/raw/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/NPMPackageGenerator.java",
    "contents_url": "https://api.github.com/repos/hapifhir/org.hl7.fhir.core/contents/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/NPMPackageGenerator.java?ref=5187fdd3982a1b884f317db958ebaf09433258a3",
    "patch": "@@ -276,6 +276,8 @@ private String packageForVersion(String v) {\n       return \"hl7.fhir.r3.core\";\n     if (v.startsWith(\"4.0\"))\n       return \"hl7.fhir.r4.core\";\n+    if (v.startsWith(\"4.1\"))\n+      return \"hl7.fhir.r4b.core\";\n     return null;\n   }\n "
  },
  {
    "sha": "7c210a24754570dd8d8a8622771a111b23278fa4",
    "filename": "org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/TypesUtilities.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/hapifhir/org.hl7.fhir.core/blob/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/TypesUtilities.java",
    "raw_url": "https://github.com/hapifhir/org.hl7.fhir.core/raw/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/TypesUtilities.java",
    "contents_url": "https://api.github.com/repos/hapifhir/org.hl7.fhir.core/contents/org.hl7.fhir.r5/src/main/java/org/hl7/fhir/r5/utils/TypesUtilities.java?ref=5187fdd3982a1b884f317db958ebaf09433258a3",
    "patch": "@@ -111,7 +111,7 @@ public TypeClassification getClassification() {\n     res.add(new WildcardInformation(\"id\", TypeClassification.PRIMITIVE));\n     res.add(new WildcardInformation(\"instant\", TypeClassification.PRIMITIVE));\n     res.add(new WildcardInformation(\"integer\", TypeClassification.PRIMITIVE));\n-    if (!version.startsWith(\"4.0\")) {\n+    if (!version.startsWith(\"4.1\")) {\n       res.add(new WildcardInformation(\"integer64\", TypeClassification.PRIMITIVE));\n     }\n     res.add(new WildcardInformation(\"markdown\", TypeClassification.PRIMITIVE));"
  },
  {
    "sha": "5c4327c492df62abf694c3762df435865a9c3945",
    "filename": "org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/VersionUtilities.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/hapifhir/org.hl7.fhir.core/blob/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/VersionUtilities.java",
    "raw_url": "https://github.com/hapifhir/org.hl7.fhir.core/raw/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/VersionUtilities.java",
    "contents_url": "https://api.github.com/repos/hapifhir/org.hl7.fhir.core/contents/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/VersionUtilities.java?ref=5187fdd3982a1b884f317db958ebaf09433258a3",
    "patch": "@@ -465,4 +465,5 @@ public static String getVersionForPackage(String pid) {\n     return null;\r\n   }\r\n \r\n+\r\n }\n\\ No newline at end of file"
  },
  {
    "sha": "a8cbc6ec9d8aa23efda14588dfdae8617576e9e2",
    "filename": "org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xml/XmlGenerator.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/hapifhir/org.hl7.fhir.core/blob/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xml/XmlGenerator.java",
    "raw_url": "https://github.com/hapifhir/org.hl7.fhir.core/raw/5187fdd3982a1b884f317db958ebaf09433258a3/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xml/XmlGenerator.java",
    "contents_url": "https://api.github.com/repos/hapifhir/org.hl7.fhir.core/contents/org.hl7.fhir.utilities/src/main/java/org/hl7/fhir/utilities/xml/XmlGenerator.java?ref=5187fdd3982a1b884f317db958ebaf09433258a3",
    "patch": "@@ -111,7 +111,7 @@ private void processComment(Comment node) throws DOMException, IOException  {\n \t}\n \n \tprivate void processElement(Element element) throws IOException, FHIRException  {\n-\t\tif (!xml.getDefaultNamespace().equals(element.getNamespaceURI()))\n+\t\tif (xml.getDefaultNamespace() == null || !xml.getDefaultNamespace().equals(element.getNamespaceURI()))\n \t\t\txml.setDefaultNamespace(element.getNamespaceURI());\n \n \t\tprocessAttributes(element);"
  }
]
