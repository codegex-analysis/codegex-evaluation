[
  {
    "sha": "efb782d31d1743a4467934d11e017f5d438acc4b",
    "filename": "README.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/README.md",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/README.md",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/README.md?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -1,6 +1,6 @@\n # AntiHaxerman\n \n-AntiHaxerman started out as a meme anticheat, and when it got real good I was like damn I should release this, SO I DID and now its real good and can smash thru haxers. Wreck cheaters with AntiHaxerman :D.\n+Dont skid or gay\n \n Spigot: https://www.spigotmc.org/resources/83198/\n "
  },
  {
    "sha": "f5ba04d3704d9ca0785ff3603cbc3f035dfecada",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 12,
    "deletions": 6,
    "changes": 18,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/pom.xml",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/pom.xml",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/pom.xml?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -39,6 +39,12 @@\n                         <configuration>\n                             <createDependencyReducedPom>false</createDependencyReducedPom>\n                             <finalName>AntiHaxerman</finalName>\n+                            <relocations>\n+                                <relocation>\n+                                    <pattern>io.github.retrooper.packetevents</pattern>\n+                                    <shadedPattern>me.tecnio.antihaxerman.packetevents</shadedPattern> <!--relocate packetevents package-->\n+                                </relocation>\n+                            </relocations>\n                         </configuration>\n                     </execution>\n                 </executions>\n@@ -58,16 +64,16 @@\n             <url>https://jitpack.io</url>\n         </repository>\n         <repository>\n-            <id>spigot-repo</id>\n-            <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>\n+            <id>funkemunky-releases</id>\n+            <url>https://nexus.funkemunky.cc/content/repositories/releases/</url>\n         </repository>\n     </repositories>\n \n     <dependencies>\n         <dependency>\n-            <groupId>org.spigotmc</groupId>\n-            <artifactId>spigot</artifactId>\n-            <version>1.8.8-R0.1-SNAPSHOT</version>\n+            <groupId>org.github.spigot</groupId>\n+            <artifactId>1.8</artifactId>\n+            <version>1.8</version>\n             <scope>provided</scope>\n         </dependency>\n         <dependency>\n@@ -79,7 +85,7 @@\n         <dependency>\n             <groupId>com.github.retrooper</groupId>\n             <artifactId>packetevents</artifactId>\n-            <version>v1.8-pre-4</version>\n+            <version>v1.8-pre-5</version>\n         </dependency>\n         <dependency>\n             <groupId>org.projectlombok</groupId>"
  },
  {
    "sha": "b4436f1e3ffa3c8efb3da56182dba2a6f02e8b48",
    "filename": "src/main/java/me/tecnio/antihaxerman/AntiHaxerman.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/AntiHaxerman.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/AntiHaxerman.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/AntiHaxerman.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -108,9 +108,8 @@ public void stop(final AntiHaxermanPlugin plugin) {\n \n     private void setupPacketEvents() {\n         PacketEvents.create(plugin).getSettings()\n-                .injectAsync(true)\n-                .ejectAsync(true)\n-                .injectEarly(true)\n+                .compatInjector(false)\n+                .checkForUpdates(false)\n                 .backupServerVersion(ServerVersion.v_1_7_10);\n \n         PacketEvents.get().load();"
  },
  {
    "sha": "ee0d1a06f804500e4e7c6a674a23a6eb5a706e59",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/movement/noslow/NoSlowA.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/movement/noslow/NoSlowA.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/movement/noslow/NoSlowA.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/movement/noslow/NoSlowA.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -40,7 +40,7 @@ public void handle(final Packet packet) {\n             final boolean invalid = blocking && sprinting;\n \n             if (invalid && !exempt) {\n-                if (increaseBuffer() > 8) {\n+                if (increaseBuffer() > 4) {\n                     fail();\n                     data.getPlayer().setItemInHand(data.getPlayer().getItemInHand());\n                 }"
  },
  {
    "sha": "5fe870268f02235d6695d1a5fe7e6091d78148dc",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/movement/strafe/StrafeA.java",
    "status": "modified",
    "additions": 8,
    "deletions": 48,
    "changes": 56,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/movement/strafe/StrafeA.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/movement/strafe/StrafeA.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/movement/strafe/StrafeA.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -22,25 +22,18 @@\n import me.tecnio.antihaxerman.data.PlayerData;\n import me.tecnio.antihaxerman.exempt.type.ExemptType;\n import me.tecnio.antihaxerman.packet.Packet;\n-import me.tecnio.antihaxerman.util.BlockUtil;\n-import me.tecnio.antihaxerman.util.PlayerUtil;\n-import org.bukkit.Location;\n-import org.bukkit.entity.Player;\n-import org.bukkit.potion.PotionEffectType;\n \n @CheckInfo(name = \"Strafe\", type = \"A\", description = \"Checks for invalid strafing.\", experimental = true)\n public final class StrafeA extends Check {\n \n-    private double blockSlipperiness = 0.91;\n-\n     public StrafeA(final PlayerData data) {\n         super(data);\n     }\n \n     @Override\n     public void handle(final Packet packet) {\n-        if (packet.isFlying()) {\n-            final Player player = data.getPlayer();\n+        if (packet.isPosition()) {\n+            final boolean sprinting = data.getActionProcessor().isSprinting();\n \n             final double deltaX = data.getPositionProcessor().getDeltaX();\n             final double deltaZ = data.getPositionProcessor().getDeltaZ();\n@@ -50,61 +43,28 @@ public void handle(final Packet packet) {\n             final double lastDeltaX = data.getPositionProcessor().getLastDeltaX();\n             final double lastDeltaZ = data.getPositionProcessor().getLastDeltaZ();\n \n-            double blockSlipperiness = this.blockSlipperiness;\n-            double attributeSpeed = 1.d;\n-\n-            final boolean onGround = data.getPositionProcessor().isOnGround();\n-            final boolean sprinting = data.getActionProcessor().isSprinting();\n-\n             final int airTicks = data.getPositionProcessor().getClientAirTicks();\n-            final int groundTicks = data.getPositionProcessor().getGroundTicks();\n-\n-            attributeSpeed += PlayerUtil.getPotionLevel(player, PotionEffectType.SPEED) * (float) 0.2 * attributeSpeed;\n-            attributeSpeed += PlayerUtil.getPotionLevel(player, PotionEffectType.SLOW) * (float) -.15 * attributeSpeed;\n \n-            if (onGround) {\n-                blockSlipperiness *= 0.91f;\n+            double blockSlipperiness = 0.91F;\n+            double attributeSpeed = sprinting ? 0.026 : 0.02;;\n \n-                if (sprinting) attributeSpeed *= 1.3;\n-                attributeSpeed *= 0.16277136 / Math.pow(blockSlipperiness, 3);\n-\n-                // getAiSpeed but I can't run it the way I am using right now\n-                attributeSpeed *= data.getPlayer().getWalkSpeed() / 2.0;\n-                // cancel not usable in this way\n-                attributeSpeed = 1000;\n-            } else {\n-                attributeSpeed = sprinting ? 0.026 : 0.02;\n-\n-                blockSlipperiness = 0.91f;\n-            }\n-\n-            final double predictedDeltaX = lastDeltaX * blockSlipperiness + attributeSpeed;\n-            final double predictedDeltaZ = lastDeltaZ * blockSlipperiness + attributeSpeed;\n+            final double predictedDeltaX = lastDeltaX * blockSlipperiness + attributeSpeed ;\n+            final double predictedDeltaZ = lastDeltaZ * blockSlipperiness + attributeSpeed ;\n \n             final double diffX = deltaX - predictedDeltaX;\n             final double diffZ = deltaZ - predictedDeltaZ;\n \n-            final double limit = 0.01;\n-\n             final boolean exempt = this.isExempt(ExemptType.TPS, ExemptType.TELEPORT, ExemptType.PISTON, ExemptType.FLYING, ExemptType.UNDERBLOCK, ExemptType.VEHICLE, ExemptType.CLIMBABLE, ExemptType.LIQUID, ExemptType.VELOCITY, ExemptType.UNDERBLOCK, ExemptType.CHUNK);\n-            final boolean invalid = (diffX > limit || diffZ > limit) && deltaXZ > .175 && (airTicks > 2 || groundTicks > 2);\n+            final boolean invalid = (diffX > 0.01 || diffZ > 0.01) && deltaXZ > .175 && airTicks > 2;\n \n             if (invalid && !exempt) {\n                 if (increaseBuffer() > 3) {\n-                    fail(String.format(\"diffX: %.3f diffZ: %.3f airT: %s groundT: %s\", diffX, diffZ, airTicks, groundTicks));\n+                    fail(String.format(\"diffX: %.3f diffZ: %.3f airT: %s\", diffX, diffZ, airTicks));\n                 }\n             } else {\n                 decreaseBufferBy(0.1);\n             }\n \n-            final double x = data.getPositionProcessor().getX();\n-            final double y = data.getPositionProcessor().getY();\n-            final double z = data.getPositionProcessor().getZ();\n-\n-            final Location blockLocation = new Location(data.getPlayer().getWorld(), x, Math.floor(y - 0.1), z);\n-\n-            this.blockSlipperiness = BlockUtil.getBlockFriction(blockLocation) * 0.91F;\n-\n             debug(String.format(\"diffX: %.2f diffZ: %.2f buffer: %.2f airT: %s\", diffX, diffZ, getBuffer(), airTicks));\n         }\n     }"
  },
  {
    "sha": "b8e260b3ec9a263d0a787194ec7ab93d69c01150",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsA.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsA.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsA.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsA.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -33,9 +33,7 @@ public void handle(final Packet packet) {\n         if (packet.isFlying()) {\n             final float pitch = data.getRotationProcessor().getPitch();\n \n-            if (Math.abs(pitch)> 90.0f) {\n-                ban();\n-            }\n+            if (Math.abs(pitch) > 90.0F) ban();\n         }\n     }\n }"
  },
  {
    "sha": "98ef913e16131e94d1fb020b83296e8ac4774531",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsG.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsG.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsG.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsG.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -34,9 +34,7 @@ public void handle(final Packet packet) {\n         if (packet.isUseEntity()) {\n             final WrappedPacketInUseEntity wrapper = new WrappedPacketInUseEntity(packet.getRawPacket());\n \n-            if (data.getPlayer().getEntityId() == wrapper.getEntityId()) {\n-                ban();\n-            }\n+            if (data.getPlayer().getEntityId() == wrapper.getEntityId()) ban();\n         }\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "13494fe910c5111f4a43048b50970e7fdc950010",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsH.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsH.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsH.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsH.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -35,7 +35,7 @@ public void handle(final Packet packet) {\n             final double deltaY = data.getPositionProcessor().getDeltaY();\n \n             final int groundTicks = data.getPositionProcessor().getGroundTicks();\n-            final int airTicks = data.getPositionProcessor().getAirTicks();\n+            final int airTicks = data.getPositionProcessor().getClientAirTicks();\n \n             final boolean exempt = isExempt(ExemptType.SLIME);\n             final boolean invalid = deltaY == 0.0 && groundTicks == 1 && airTicks == 0;"
  },
  {
    "sha": "5ad7f0e360368ccf69760e59910cdde38452d5ef",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsI.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsI.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsI.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/player/badpackets/BadPacketsI.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -42,9 +42,7 @@ public void handle(final Packet packet) {\n                 return;\n             }\n \n-            if (++streak > 20) {\n-                ban();\n-            }\n+            if (++streak > 20) fail();\n         } else if (packet.isSteerVehicle()) {\n             streak = 0;\n         }"
  },
  {
    "sha": "ffd3584353e1255b8c68cee6e37026bdc01ba079",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractA.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractA.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractA.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractA.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -37,7 +37,11 @@ public void handle(final Packet packet) {\n         if (packet.isBlockDig()) {\n             final WrappedPacketInBlockDig wrapper = new WrappedPacketInBlockDig(packet.getRawPacket());\n \n-            final Block block = BlockUtil.getBlockAsync(new Location(data.getPlayer().getWorld(), wrapper.getX(), wrapper.getY(), wrapper.getZ()));\n+            final Block block = BlockUtil.getBlockAsync(new Location(data.getPlayer().getWorld(),\n+                    wrapper.getBlockPosition().getX(),\n+                    wrapper.getBlockPosition().getY(),\n+                    wrapper.getBlockPosition().getZ())\n+            );\n             if (block == null) return;\n \n             if (block.isLiquid()) {"
  },
  {
    "sha": "603e2ea500605eb44df29a4992d1a1cab2cf47f4",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractB.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractB.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractB.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractB.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -41,7 +41,11 @@ public void handle(final Packet packet) {\n         if (packet.isBlockPlace()) {\n             final WrappedPacketInBlockPlace wrapper = new WrappedPacketInBlockPlace(packet.getRawPacket());\n \n-            final Location blockLocation = new Location(data.getPlayer().getWorld(), wrapper.getX(), wrapper.getY(), wrapper.getZ());\n+            final Location blockLocation = new Location(data.getPlayer().getWorld(),\n+                    wrapper.getBlockPosition().getX(),\n+                    wrapper.getBlockPosition().getY(),\n+                    wrapper.getBlockPosition().getZ()\n+            );\n             final Direction direction = wrapper.getDirection();\n \n             final Block block = BlockUtil.getBlockAsync(blockLocation);"
  },
  {
    "sha": "48fc56cd55eb9924a3071f267c34e3c0c37d3044",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractC.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractC.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractC.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractC.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -44,7 +44,11 @@ public void handle(final Packet packet) {\n         } else if (packet.isFlying()) {\n             if (wrapper != null) {\n                 final Vector eyeLocation = data.getPlayer().getEyeLocation().toVector();\n-                final Vector blockLocation = new Vector(wrapper.getX(), wrapper.getY(), wrapper.getZ());\n+                final Vector blockLocation = new Vector(\n+                        wrapper.getBlockPosition().getX(),\n+                        wrapper.getBlockPosition().getY(),\n+                        wrapper.getBlockPosition().getZ()\n+                );\n \n                 final double deltaXZ = Math.abs(data.getPositionProcessor().getDeltaXZ());\n                 final double deltaY = Math.abs(data.getPositionProcessor().getDeltaY());"
  },
  {
    "sha": "c3c6f33219f313270c6cd1182357adaad96186d3",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractD.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractD.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractD.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractD.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -40,7 +40,11 @@ public void handle(final Packet packet) {\n         } else if (packet.isFlying()) {\n             if (wrapper != null) {\n                 final Vector eyeLocation = data.getPlayer().getEyeLocation().toVector();\n-                final Vector blockLocation = new Vector(wrapper.getX(), wrapper.getY(), wrapper.getZ());\n+                final Vector blockLocation = new Vector(\n+                        wrapper.getBlockPosition().getX(),\n+                        wrapper.getBlockPosition().getY(),\n+                        wrapper.getBlockPosition().getZ()\n+                );\n \n                 final Vector directionToDestination = blockLocation.clone().subtract(eyeLocation);\n                 final Vector playerDirection = data.getPlayer().getEyeLocation().getDirection();"
  },
  {
    "sha": "9238a4eccc14189c6074e8ccc67d0808d806a869",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractE.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractE.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractE.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/player/interact/InteractE.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -41,9 +41,9 @@ public void handle(final Packet packet) {\n \n             if (wrapper.getDirection() == Direction.INVALID) fail();\n \n-            final float x = wrapper.getCursorX();\n-            final float y = wrapper.getCursorY();\n-            final float z = wrapper.getCursorZ();\n+            final float x = wrapper.getCursorPosition().getX();\n+            final float y = wrapper.getCursorPosition().getY();\n+            final float z = wrapper.getCursorPosition().getZ();\n \n             for (final float value : new float[]{x, y, z}) {\n                 // The variable value cannot be larger than 1 or smaller than 0, as stated here."
  },
  {
    "sha": "fe951c5a82efb8a493d4b66c52ad535d89059db6",
    "filename": "src/main/java/me/tecnio/antihaxerman/check/impl/player/scaffold/ScaffoldA.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/scaffold/ScaffoldA.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/check/impl/player/scaffold/ScaffoldA.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/check/impl/player/scaffold/ScaffoldA.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -37,7 +37,7 @@ public void handle(final Packet packet) {\n             final WrappedPacketInBlockPlace wrapper = new WrappedPacketInBlockPlace(packet.getRawPacket());\n \n             final double locationY = data.getPositionProcessor().getY();\n-            final double blockY = wrapper.getY();\n+            final double blockY = wrapper.getBlockPosition().getY();\n \n             final Direction direction = wrapper.getDirection();\n "
  },
  {
    "sha": "e2924336348ffc735ef658bdbae58867468eb3c9",
    "filename": "src/main/java/me/tecnio/antihaxerman/util/MathUtil.java",
    "status": "modified",
    "additions": 4,
    "deletions": 19,
    "changes": 23,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/util/MathUtil.java",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/java/me/tecnio/antihaxerman/util/MathUtil.java",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/java/me/tecnio/antihaxerman/util/MathUtil.java?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -19,11 +19,13 @@\n \n import com.google.common.collect.Lists;\n import lombok.experimental.UtilityClass;\n-import net.minecraft.server.v1_8_R3.Tuple;\n import org.bukkit.Location;\n import org.bukkit.util.Vector;\n \n-import java.util.*;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n \n @UtilityClass\n public class MathUtil {\n@@ -160,23 +162,6 @@ private double getMedian(final List<Double> data) {\n         }\n     }\n \n-    public <T extends Number> T getModeNiggar(final Collection<T> collect) {\n-        final Map<T, Integer> repeated = new HashMap<>();\n-\n-        //Sorting each value by how to repeat into a map.\n-        collect.forEach(val -> {\n-            final int number = repeated.getOrDefault(val, 0);\n-\n-            repeated.put(val, number + 1);\n-        });\n-\n-        //Calculating the largest value to the key, which would be the mode.\n-        return repeated.keySet().stream()\n-                .map(key -> new Tuple<>(key, repeated.get(key))) //We map it into a Tuple for easier sorting.\n-                .max(Comparator.comparing(Tuple::b, Comparator.naturalOrder()))\n-                .orElseThrow(NullPointerException::new).a();\n-    }\n-\n     public boolean isExponentiallySmall(final Number number) {\n         return number.doubleValue() < 1 && (Double.toString(number.doubleValue()).contains(\"E\") || number.doubleValue() == 0.0);\n     }"
  },
  {
    "sha": "c42f4cfe83c486161057ee53cf063da20f343f6e",
    "filename": "src/main/resources/plugin.yml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/steviebeenz/AntiHaxerman/blob/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/resources/plugin.yml",
    "raw_url": "https://github.com/steviebeenz/AntiHaxerman/raw/cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a/src/main/resources/plugin.yml",
    "contents_url": "https://api.github.com/repos/steviebeenz/AntiHaxerman/contents/src/main/resources/plugin.yml?ref=cb3e6b26a53c195d3fa24e25cffd13eb7eb6e90a",
    "patch": "@@ -3,6 +3,7 @@ version: 3.0\n main: me.tecnio.antihaxerman.AntiHaxermanPlugin\n authors: [Tecnio]\n description: AntiHaxerman AntiCheat\n+load: STARTUP\n \n commands:\n   antihaxerman:"
  }
]
