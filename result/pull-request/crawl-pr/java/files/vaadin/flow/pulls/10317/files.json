[
  {
    "sha": "e86882442659b1d6d6cd62641ee7ee3effc27ea9",
    "filename": "flow-tests/test-root-context/src/main/java/com/vaadin/flow/uitest/ui/PushLongPollingWithPreserveOnRefreshView.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/vaadin/flow/blob/e711c2918cde53ab0ee34ff0ef121cbc0efac9a2/flow-tests/test-root-context/src/main/java/com/vaadin/flow/uitest/ui/PushLongPollingWithPreserveOnRefreshView.java",
    "raw_url": "https://github.com/vaadin/flow/raw/e711c2918cde53ab0ee34ff0ef121cbc0efac9a2/flow-tests/test-root-context/src/main/java/com/vaadin/flow/uitest/ui/PushLongPollingWithPreserveOnRefreshView.java",
    "contents_url": "https://api.github.com/repos/vaadin/flow/contents/flow-tests/test-root-context/src/main/java/com/vaadin/flow/uitest/ui/PushLongPollingWithPreserveOnRefreshView.java?ref=e711c2918cde53ab0ee34ff0ef121cbc0efac9a2",
    "patch": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2000-2021 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.uitest.ui;\n+\n+import com.vaadin.flow.component.html.Div;\n+import com.vaadin.flow.component.html.NativeButton;\n+import com.vaadin.flow.component.page.Push;\n+import com.vaadin.flow.router.PreserveOnRefresh;\n+import com.vaadin.flow.router.Route;\n+import com.vaadin.flow.shared.ui.Transport;\n+\n+@PreserveOnRefresh\n+@Push(transport = Transport.LONG_POLLING)\n+@Route(\"com.vaadin.flow.uitest.ui.PushLongPollingWithPreserveOnRefreshView\")\n+public class PushLongPollingWithPreserveOnRefreshView extends Div {\n+\n+    public static final String ADD_BUTTON_ID = \"add-button-id\";\n+    public static final String TEST_DIV_ID = \"test-div-id\";\n+    public static final String TEXT_IN_DIV = \"text in div\";\n+\n+    public PushLongPollingWithPreserveOnRefreshView() {\n+        NativeButton button = new NativeButton(\"Open Dialog\",\n+                    e -> e.getSource().getUI().ifPresent(ui -> {\n+                        Div div = new Div();\n+                        div.setText(TEXT_IN_DIV);\n+                        div.setId(TEST_DIV_ID);\n+                        ui.add(div);\n+                    })\n+            );\n+        button.setId(ADD_BUTTON_ID);\n+        add(button);\n+    }\n+}"
  },
  {
    "sha": "199c5ee8564299c2c091664c4ace7f47b5fd18c0",
    "filename": "flow-tests/test-root-context/src/test/java/com/vaadin/flow/uitest/ui/PushLongPollingWithPreserveOnRefreshIT.java",
    "status": "added",
    "additions": 74,
    "deletions": 0,
    "changes": 74,
    "blob_url": "https://github.com/vaadin/flow/blob/e711c2918cde53ab0ee34ff0ef121cbc0efac9a2/flow-tests/test-root-context/src/test/java/com/vaadin/flow/uitest/ui/PushLongPollingWithPreserveOnRefreshIT.java",
    "raw_url": "https://github.com/vaadin/flow/raw/e711c2918cde53ab0ee34ff0ef121cbc0efac9a2/flow-tests/test-root-context/src/test/java/com/vaadin/flow/uitest/ui/PushLongPollingWithPreserveOnRefreshIT.java",
    "contents_url": "https://api.github.com/repos/vaadin/flow/contents/flow-tests/test-root-context/src/test/java/com/vaadin/flow/uitest/ui/PushLongPollingWithPreserveOnRefreshIT.java?ref=e711c2918cde53ab0ee34ff0ef121cbc0efac9a2",
    "patch": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2000-2021 Vaadin Ltd.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n+ * use this file except in compliance with the License. You may obtain a copy of\n+ * the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations under\n+ * the License.\n+ */\n+\n+package com.vaadin.flow.uitest.ui;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.NoSuchElementException;\n+\n+import com.vaadin.flow.testcategory.IgnoreOSGi;\n+import com.vaadin.flow.testutil.ChromeBrowserTest;\n+\n+import static com.vaadin.flow.uitest.ui.PushLongPollingWithPreserveOnRefreshView.ADD_BUTTON_ID;\n+import static com.vaadin.flow.uitest.ui.PushLongPollingWithPreserveOnRefreshView.TEST_DIV_ID;\n+import static com.vaadin.flow.uitest.ui.PushLongPollingWithPreserveOnRefreshView.TEXT_IN_DIV;\n+\n+@Category(IgnoreOSGi.class)\n+public class PushLongPollingWithPreserveOnRefreshIT extends ChromeBrowserTest {\n+\n+    @Test\n+    public void addDiv_refreshThePage_ensureNoErrorHappensAndDivIsPresent() {\n+\n+        open();\n+\n+        waitPageLoad();\n+\n+        findElement(By.id(ADD_BUTTON_ID)).click();\n+\n+        ensureDivIsPresent();\n+\n+        // refresh the browser\n+        getDriver().navigate().refresh();\n+\n+        waitPageLoad();\n+\n+        ensureNoErrorIsDisplayed();\n+\n+        ensureDivIsPresent();\n+    }\n+\n+    private void waitPageLoad() {\n+        WebElement loadingIndicator = findElement(\n+                By.className(\"v-loading-indicator\"));\n+        waitUntil(driver -> !loadingIndicator.isDisplayed());\n+    }\n+\n+    private void ensureNoErrorIsDisplayed() {\n+        Assert.assertThrows(NoSuchElementException.class, () ->\n+            findElement(By.className(\"v-system-error\")) );\n+    }\n+\n+    private void ensureDivIsPresent() {\n+        WebElement div = findElement(By.id(TEST_DIV_ID));\n+\n+        Assert.assertNotNull(div);\n+        Assert.assertEquals(TEXT_IN_DIV, div.getText());\n+    }\n+}"
  }
]
