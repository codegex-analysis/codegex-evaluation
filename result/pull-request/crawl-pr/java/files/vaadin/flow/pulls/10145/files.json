[
  {
    "sha": "f205f9ec1e17cf8a89a328424bcce8117bf85ec0",
    "filename": "flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java",
    "status": "modified",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/vaadin/flow/blob/d7f1f781123edb2701c6cdb2f2306d5730081840/flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java",
    "raw_url": "https://github.com/vaadin/flow/raw/d7f1f781123edb2701c6cdb2f2306d5730081840/flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java",
    "contents_url": "https://api.github.com/repos/vaadin/flow/contents/flow-server/src/main/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandler.java?ref=d7f1f781123edb2701c6cdb2f2306d5730081840",
    "patch": "@@ -280,6 +280,12 @@ protected void writeBootstrapPage(String contentType,\n         ArrayList<com.vaadin.flow.dom.Element> elementsForShadows = new ArrayList<>();\n         try (BufferedWriter writer = new BufferedWriter(\n                 new OutputStreamWriter(response.getOutputStream(), UTF_8))) {\n+            writer.write(\"(function () {\\n\"\n+                    + \"var hasScript = function(src) {\\n\"\n+                    + \"  var scriptTags = Array.from(document.head.querySelectorAll('script'));\\n\"\n+                    + \"  return scriptTags.some(script => script.src.endsWith(src))\\n\"\n+                    + \"};\\n\");\n+\n             String varName = \"headElem\"; // generated head element\n             writer.append(\"var \").append(varName).append(\"=null;\");\n             for (Element element : head.children()) {\n@@ -288,6 +294,11 @@ protected void writeBootstrapPage(String contentType,\n                             .ifPresent(elementsForShadows::add);\n                     continue;\n                 }\n+                String conditionalFilename = getVaadinFilenameIfVaadinScript(element);\n+                if (conditionalFilename != null) {\n+                    writer.append(\"if (!hasScript(\\\"\" + conditionalFilename\n+                            + \"\\\")) {\\n\");\n+                }\n                 writer.append(varName).append(\"=\");\n                 writer.append(\"document.createElement('\")\n                         .append(element.tagName()).append(\"');\");\n@@ -300,6 +311,10 @@ protected void writeBootstrapPage(String contentType,\n                 }\n                 writer.append(\"document.head.appendChild(\").append(varName)\n                         .append(\");\");\n+                if (conditionalFilename != null) {\n+                    writer.append(\"}\\n\");\n+                }\n+                writer.append(\"})();\");\n             }\n         }\n \n@@ -308,6 +323,22 @@ protected void writeBootstrapPage(String contentType,\n                 .setShadowDomElements(elementsForShadows);\n     }\n \n+    private static String getVaadinFilenameIfVaadinScript(Element element) {\n+        if (!\"script\".equalsIgnoreCase(element.tagName())) {\n+            return null;\n+        }\n+        // Injecting a webpack bundle twice can never work.\n+        // The bundle contains web components that register\n+        // themselves and loading twice will always cause\n+        // custom element conflicts\n+        String src = element.attr(\"src\");\n+        int index = src.indexOf(\"/VAADIN/\");\n+        if (index != -1) {\n+            return src.substring(index);\n+        }\n+\n+        return null;\n+    }\n     private static boolean elementShouldNotBeTransferred(Element element) {\n         // we skip base href adjustment, since we are in a 3rd party\n         // context, also \"meta\" and \"style\" affects the page globally and should"
  },
  {
    "sha": "dc07dccbbb98467de5169ca40bbb3638766f5d95",
    "filename": "flow-server/src/test/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandlerTest.java",
    "status": "modified",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/vaadin/flow/blob/d7f1f781123edb2701c6cdb2f2306d5730081840/flow-server/src/test/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandlerTest.java",
    "raw_url": "https://github.com/vaadin/flow/raw/d7f1f781123edb2701c6cdb2f2306d5730081840/flow-server/src/test/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandlerTest.java",
    "contents_url": "https://api.github.com/repos/vaadin/flow/contents/flow-server/src/test/java/com/vaadin/flow/server/communication/WebComponentBootstrapHandlerTest.java?ref=d7f1f781123edb2701c6cdb2f2306d5730081840",
    "patch": "@@ -198,7 +198,7 @@ protected PwaRegistry getPwaRegistry() {\n     }\n \n     @Test\n-    public void writeBootstrapPage_devmodeGizmoIsDisabled()\n+    public void writeBootstrapPage_scriptGuadedAndGizmoDisabled()\n             throws IOException, ServiceException {\n         TestWebComponentBootstrapHandler handler = new TestWebComponentBootstrapHandler();\n         VaadinServletService service = new MockVaadinServletService();\n@@ -223,6 +223,16 @@ public void writeBootstrapPage_devmodeGizmoIsDisabled()\n         handler.synchronizedHandleRequest(session, request, response);\n \n         String result = stream.toString(StandardCharsets.UTF_8.name());\n+\n+        int scriptIndex = result.indexOf(\"var hasScript = function(src)\");\n+        Assert.assertTrue(scriptIndex >= 0);\n+\n+        int guardIndex = result.indexOf(\"if (!hasScript(\\\"/VAADIN/build/vaadin-export-2222.cache.js\\\")) {\");\n+        Assert.assertTrue(guardIndex > scriptIndex);\n+\n+        int createScriptIndex = result.indexOf(\"document.createElement('script')\");\n+        Assert.assertTrue(createScriptIndex > guardIndex);\n+\n         Assert.assertTrue(\n                 result.contains(\"\\\\\\\"devmodeGizmoEnabled\\\\\\\": false\"));\n     }"
  }
]
