[
  {
    "sha": "a78f85cbca4c432c7952c11977080f1ee36ff24f",
    "filename": "api/src/main/java/com/codeforcommunity/api/IImportProcessor.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/blob/08304fcd96539e870a194e33c904a21d0e2cf47e/api/src/main/java/com/codeforcommunity/api/IImportProcessor.java",
    "raw_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/raw/08304fcd96539e870a194e33c904a21d0e2cf47e/api/src/main/java/com/codeforcommunity/api/IImportProcessor.java",
    "contents_url": "https://api.github.com/repos/Code-4-Community/speak-for-the-trees-backend-v2/contents/api/src/main/java/com/codeforcommunity/api/IImportProcessor.java?ref=08304fcd96539e870a194e33c904a21d0e2cf47e",
    "patch": "@@ -4,11 +4,14 @@\n import com.codeforcommunity.dto.imports.ImportBlocksRequest;\n import com.codeforcommunity.dto.imports.ImportNeighborhoodsRequest;\n import com.codeforcommunity.dto.imports.ImportReservationsRequest;\n+import com.codeforcommunity.dto.imports.ImportSitesRequest;\n \n public interface IImportProcessor {\n   void importBlocks(JWTData userData, ImportBlocksRequest importBlocksRequest);\n \n   void importNeighborhoods(JWTData userData, ImportNeighborhoodsRequest importNeighborhoodsRequest);\n \n   void importReservations(JWTData userData, ImportReservationsRequest importReservationsRequest);\n+\n+  void importSites(JWTData userData, ImportSitesRequest importSitesRequest);\n }"
  },
  {
    "sha": "3e490dd1b051808e26b036204b546f1a4101d6b2",
    "filename": "api/src/main/java/com/codeforcommunity/dto/imports/ImportSitesRequest.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/blob/08304fcd96539e870a194e33c904a21d0e2cf47e/api/src/main/java/com/codeforcommunity/dto/imports/ImportSitesRequest.java",
    "raw_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/raw/08304fcd96539e870a194e33c904a21d0e2cf47e/api/src/main/java/com/codeforcommunity/dto/imports/ImportSitesRequest.java",
    "contents_url": "https://api.github.com/repos/Code-4-Community/speak-for-the-trees-backend-v2/contents/api/src/main/java/com/codeforcommunity/dto/imports/ImportSitesRequest.java?ref=08304fcd96539e870a194e33c904a21d0e2cf47e",
    "patch": "@@ -0,0 +1,38 @@\n+package com.codeforcommunity.dto.imports;\n+\n+import com.codeforcommunity.dto.ApiDto;\n+import com.codeforcommunity.exceptions.HandledException;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class ImportSitesRequest extends ApiDto {\n+  private List<SiteImport> sites;\n+\n+  public ImportSitesRequest(List<SiteImport> sites) {\n+    this.sites = sites;\n+  }\n+\n+  private ImportSitesRequest() {}\n+\n+  public List<SiteImport> getSites() {\n+    return sites;\n+  }\n+\n+  public void setSites(List<SiteImport> sites) {\n+    this.sites = sites;\n+  }\n+\n+  @Override\n+  public List<String> validateFields(String fieldPrefix) throws HandledException {\n+    String newFieldPrefix = fieldPrefix + \"importSitesRequest.\";\n+\n+    if (sites == null) {\n+      return Collections.singletonList(newFieldPrefix + \"reservations\");\n+    }\n+\n+    return sites.stream()\n+        .flatMap(ni -> ni.validateFields(newFieldPrefix).stream())\n+        .collect(Collectors.toList());\n+  }\n+}"
  },
  {
    "sha": "c517a432624a538dda6852bf752fd3cf8cde7e0e",
    "filename": "api/src/main/java/com/codeforcommunity/dto/imports/SiteImport.java",
    "status": "added",
    "additions": 92,
    "deletions": 0,
    "changes": 92,
    "blob_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/blob/08304fcd96539e870a194e33c904a21d0e2cf47e/api/src/main/java/com/codeforcommunity/dto/imports/SiteImport.java",
    "raw_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/raw/08304fcd96539e870a194e33c904a21d0e2cf47e/api/src/main/java/com/codeforcommunity/dto/imports/SiteImport.java",
    "contents_url": "https://api.github.com/repos/Code-4-Community/speak-for-the-trees-backend-v2/contents/api/src/main/java/com/codeforcommunity/dto/imports/SiteImport.java?ref=08304fcd96539e870a194e33c904a21d0e2cf47e",
    "patch": "@@ -0,0 +1,92 @@\n+package com.codeforcommunity.dto.imports;\n+\n+import com.codeforcommunity.dto.ApiDto;\n+import com.codeforcommunity.exceptions.HandledException;\n+import com.fasterxml.jackson.annotation.JsonFormat;\n+\n+import java.math.BigDecimal;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class SiteImport extends ApiDto {\n+  private Integer blockId;\n+  private BigDecimal lat;\n+  private BigDecimal lng;\n+  private String city;\n+  private String zip;\n+  private String address;\n+  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"MM/dd/yyyy\")\n+  private Timestamp deletedAt;\n+\n+  private Integer siteId;\n+  private Integer userId;\n+  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"MM/dd/yyyy\")\n+  private Timestamp updatedAt;\n+  private Boolean treePresent;\n+  private String genus;\n+  private String species;\n+  private String commonName;\n+  private String confidence;\n+  private Double diameter;\n+  private Double circumference;\n+  private String coverage;\n+  private String pruning;\n+  private String condition;\n+  private Boolean discoloring;\n+  private Boolean leaning;\n+  private Boolean constrictingGate;\n+  private Boolean wounds;\n+  private Boolean pooling;\n+  private Boolean stakesWithWires;\n+  private Boolean stakesWithoutWires;\n+  private Boolean light;\n+  private Boolean bicycle;\n+  private Boolean bagEmpty;\n+  private Boolean bagFilled;\n+  private Boolean tape;\n+  private Boolean suckerGrowth;\n+  private String siteType;\n+  private String sidewalkWidth;\n+  private Double siteWidth;\n+  private Double siteLength;\n+  private String material;\n+  private Boolean raisedBed;\n+  private Boolean fence;\n+  private Boolean trash;\n+  private Boolean wires;\n+  private Boolean grate;\n+  private Boolean stump;\n+  private String treeNotes;\n+  private String siteNotes;\n+  private String melneaCassTrees;\n+  private Integer mcbNumber;\n+  private String treeDedicatedTo;\n+\n+\n+  public SiteImport(Integer siteId) {\n+    this.siteId = siteId;\n+  }\n+\n+  private SiteImport() {}\n+\n+  public Integer getSiteId() {\n+    return siteId;\n+  }\n+\n+  public void setSiteId(Integer siteId) {\n+    this.siteId = siteId;\n+  }\n+\n+  @Override\n+  public List<String> validateFields(String fieldPrefix) throws HandledException {\n+    String fieldName = fieldPrefix + \"sites.\";\n+    List<String> fields = new ArrayList<>();\n+\n+    if (siteId == null) {\n+      fields.add(fieldName + \"blockId\");\n+    }\n+\n+    return fields;\n+  }\n+}"
  },
  {
    "sha": "b7f93dcde292636a0aad9daa8ca8a2167c37c2bd",
    "filename": "api/src/main/java/com/codeforcommunity/rest/subrouter/ImportRouter.java",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/blob/08304fcd96539e870a194e33c904a21d0e2cf47e/api/src/main/java/com/codeforcommunity/rest/subrouter/ImportRouter.java",
    "raw_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/raw/08304fcd96539e870a194e33c904a21d0e2cf47e/api/src/main/java/com/codeforcommunity/rest/subrouter/ImportRouter.java",
    "contents_url": "https://api.github.com/repos/Code-4-Community/speak-for-the-trees-backend-v2/contents/api/src/main/java/com/codeforcommunity/rest/subrouter/ImportRouter.java?ref=08304fcd96539e870a194e33c904a21d0e2cf47e",
    "patch": "@@ -7,6 +7,7 @@\n import com.codeforcommunity.dto.imports.ImportBlocksRequest;\n import com.codeforcommunity.dto.imports.ImportNeighborhoodsRequest;\n import com.codeforcommunity.dto.imports.ImportReservationsRequest;\n+import com.codeforcommunity.dto.imports.ImportSitesRequest;\n import com.codeforcommunity.rest.IRouter;\n import com.codeforcommunity.rest.RestFunctions;\n import io.vertx.core.Vertx;\n@@ -29,6 +30,7 @@ public Router initializeRouter(Vertx vertx) {\n     registerImportBlocks(router);\n     registerImportNeighborhoods(router);\n     registerImportReservations(router);\n+    registerImportSites(router);\n \n     return router;\n   }\n@@ -48,6 +50,11 @@ private void registerImportReservations(Router router) {\n     importReservationsRoute.handler(this::handleImportReservationsRoute);\n   }\n \n+  private void registerImportSites(Router router) {\n+    Route importSitesRoute = router.post(\"/sites\");\n+    importSitesRoute.handler(this::handleImportSitesRoute);\n+  }\n+\n   private void handleImportBlocksRoute(RoutingContext ctx) {\n     JWTData userData = ctx.get(\"jwt_data\");\n     ImportBlocksRequest importBlocksRequest =\n@@ -77,4 +84,14 @@ private void handleImportReservationsRoute(RoutingContext ctx) {\n \n     end(ctx.response(), 200);\n   }\n+\n+  private void handleImportSitesRoute(RoutingContext ctx) {\n+    JWTData userData = ctx.get(\"jwt_data\");\n+    ImportSitesRequest importSitesRequest =\n+        RestFunctions.getJsonBodyAsClass(ctx, ImportSitesRequest.class);\n+\n+    processor.importSites(userData, importSitesRequest);\n+\n+    end(ctx.response(), 200);\n+  }\n }"
  },
  {
    "sha": "0be966dc355aa41ef1b7eb22c42abe1252827550",
    "filename": "persist/src/main/resources/db/migration/V2__Add_Sites.sql",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/blob/08304fcd96539e870a194e33c904a21d0e2cf47e/persist/src/main/resources/db/migration/V2__Add_Sites.sql",
    "raw_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/raw/08304fcd96539e870a194e33c904a21d0e2cf47e/persist/src/main/resources/db/migration/V2__Add_Sites.sql",
    "contents_url": "https://api.github.com/repos/Code-4-Community/speak-for-the-trees-backend-v2/contents/persist/src/main/resources/db/migration/V2__Add_Sites.sql?ref=08304fcd96539e870a194e33c904a21d0e2cf47e",
    "patch": "@@ -0,0 +1,83 @@\n+CREATE TABLE IF NOT EXISTS sites (\n+    id                  SERIAL          NOT NULL PRIMARY KEY,\n+    block_id            INT             NOT NULL,\n+    lat                 NUMERIC(17, 14) NOT NULL,\n+    lng                 NUMERIC(17, 14) NOT NULL,\n+    city                VARCHAR(30)     NOT NULL,\n+    zip                 VARCHAR(5)      NOT NULL,\n+    address             VARCHAR(100)    NOT NULL,\n+    deleted_at          TIMESTAMP,\n+\n+    CONSTRAINT sites_block_id_fk FOREIGN KEY (block_id) REFERENCES blocks (id)\n+);\n+\n+CREATE TABLE IF NOT EXISTS site_entries (\n+    id                      SERIAL          NOT NULL PRIMARY KEY,\n+    site_id                 INT             NOT NULL,\n+    user_id                 INT             NOT NULL,\n+    updated_at              TIMESTAMP       NOT NULL,\n+    tree_present            BOOLEAN,\n+    status                  VARCHAR(30),\n+    genus                   VARCHAR(30),\n+    species                 VARCHAR(30),\n+    common_name             VARCHAR(30),\n+    confidence              VARCHAR(30),\n+    diameter                DECIMAL,\n+    circumference           DECIMAL,\n+    coverage                VARCHAR(30),\n+    pruning                 VARCHAR(30),\n+    condition               VARCHAR(30),\n+    discoloring             BOOLEAN,\n+    leaning                 BOOLEAN,\n+    constricting_gate       BOOLEAN,\n+    wounds                  BOOLEAN,\n+    pooling                 BOOLEAN,\n+    stakes_with_wires       BOOLEAN,\n+    stakes_without_wires    BOOLEAN,\n+    light                   BOOLEAN,\n+    bicycle                 BOOLEAN,\n+    bag_empty               BOOLEAN,\n+    bag_filled              BOOLEAN,\n+    tape                    BOOLEAN,\n+    sucker_growth           BOOLEAN,\n+    site_type               VARCHAR(30),\n+    sidewalk_width          VARCHAR(30),\n+    site_width              DECIMAL,\n+    site_length             DECIMAL,\n+    material                VARCHAR(50),\n+    raised_bed              BOOLEAN,\n+    fence                   BOOLEAN,\n+    trash                   BOOLEAN,\n+    wires                   BOOLEAN,\n+    grate                   BOOLEAN,\n+    stump                   BOOLEAN, --check this\n+    tree_notes              TEXT,\n+    site_notes              TEXT,\n+    melnea_cass_trees       VARCHAR(30),\n+    mcb_number              INTEGER,\n+    tree_dedicated_to       VARCHAR(50),\n+\n+    CONSTRAINT site_entries_site_id_fk FOREIGN KEY (site_id) REFERENCES sites (id),\n+    CONSTRAINT site_entries_user_id_fk FOREIGN KEY (user_id) REFERENCES users (id)\n+);\n+\n+CREATE TABLE IF NOT EXISTS potential_sites (\n+    id                  SERIAL          NOT NULL PRIMARY KEY,\n+    block_id            INT             NOT NULL,\n+    user_id             INT             NOT NULL,\n+    lat                 NUMERIC(17, 14) NOT NULL,\n+    lng                 NUMERIC(17, 14) NOT NULL,\n+    city                VARCHAR(30)     NOT NULL,\n+    zip                 VARCHAR(5)      NOT NULL,\n+    address             VARCHAR(100)    NOT NULL,\n+    light_pole          BOOLEAN         NOT NULL,\n+    driveway            BOOLEAN         NOT NULL,\n+    hydrant             BOOLEAN         NOT NULL,\n+    intersection        BOOLEAN         NOT NULL,\n+    building_entrance   BOOLEAN         NOT NULL,\n+    notes               TEXT,\n+    deleted_at          TIMESTAMP,\n+\n+    CONSTRAINT potential_sites_block_id_fk FOREIGN KEY (block_id) REFERENCES blocks (id),\n+    CONSTRAINT potential_sites_user_id_fk FOREIGN KEY (user_id) REFERENCES users (id)\n+);\n\\ No newline at end of file"
  },
  {
    "sha": "86a2eae3e2c4995167ddf1c87f4a621bddd1a989",
    "filename": "service/src/main/java/com/codeforcommunity/processor/ImportProcessorImpl.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/blob/08304fcd96539e870a194e33c904a21d0e2cf47e/service/src/main/java/com/codeforcommunity/processor/ImportProcessorImpl.java",
    "raw_url": "https://github.com/Code-4-Community/speak-for-the-trees-backend-v2/raw/08304fcd96539e870a194e33c904a21d0e2cf47e/service/src/main/java/com/codeforcommunity/processor/ImportProcessorImpl.java",
    "contents_url": "https://api.github.com/repos/Code-4-Community/speak-for-the-trees-backend-v2/contents/service/src/main/java/com/codeforcommunity/processor/ImportProcessorImpl.java?ref=08304fcd96539e870a194e33c904a21d0e2cf47e",
    "patch": "@@ -10,6 +10,7 @@\n import com.codeforcommunity.dto.imports.ImportBlocksRequest;\n import com.codeforcommunity.dto.imports.ImportNeighborhoodsRequest;\n import com.codeforcommunity.dto.imports.ImportReservationsRequest;\n+import com.codeforcommunity.dto.imports.ImportSitesRequest;\n import com.codeforcommunity.dto.imports.NeighborhoodImport;\n import com.codeforcommunity.enums.PrivilegeLevel;\n import com.codeforcommunity.exceptions.AuthException;\n@@ -129,4 +130,21 @@ public void importReservations(\n       record.store();\n     }\n   }\n+\n+  @Override\n+  public void importSites(JWTData userData, ImportSitesRequest importSitesRequest) {\n+    if (userData.getPrivilegeLevel() != PrivilegeLevel.SUPER_ADMIN) {\n+      throw new AuthException(\"User does not have the required privilege level.\");\n+    }\n+\n+    // First check that none of the entries contain invalid inputs\n+    importSitesRequest\n+        .getSites()\n+        .forEach(\n+            siteImport -> {\n+              if (siteImport.getSiteId() == null) {\n+                throw new IllegalArgumentException(\"Site ID cannot be null\");\n+              }\n+            });\n+  }\n }"
  }
]
