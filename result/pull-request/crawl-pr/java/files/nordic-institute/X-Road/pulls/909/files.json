[
  {
    "sha": "0cdd3a44d5a05c9208d3ae89078515f361185f2d",
    "filename": "src/packages/lxc_ss_push.sh",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/lxc_ss_push.sh",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/lxc_ss_push.sh",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/packages/lxc_ss_push.sh?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -0,0 +1,32 @@\n+#!/bin/bash\n+\n+# Development support script for copying files to running lxd security server running on local machine.\n+#exit on errors\n+set -e\n+\n+LXDHOST=$1\n+DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" &> /dev/null && pwd )\"\n+TARGET=$LXDHOST/usr/share/xroad/scripts/\n+\n+BASESCRIPTDIR=$DIR/src/xroad/common/base/usr/share/xroad/scripts\n+PROXYSCRIPTDIR=$DIR/src/xroad/common/proxy/usr/share/xroad/scripts\n+\n+# maybe move this to common script?\n+lxc file push $BASESCRIPTDIR/_backup_restore_common.sh $TARGET\n+lxc file push $BASESCRIPTDIR/_backup_xroad.sh $TARGET\n+lxc file push $BASESCRIPTDIR/_restore_xroad.sh $TARGET\n+lxc file push $BASESCRIPTDIR/_setup_db.sh $TARGET\n+lxc file push $BASESCRIPTDIR/generate_certificate.sh $TARGET\n+lxc file push $BASESCRIPTDIR/xroad-base.sh $TARGET\n+\n+# proxy specific part\n+lxc file push $PROXYSCRIPTDIR/autobackup_xroad_proxy_configuration.sh $TARGET\n+lxc file push $PROXYSCRIPTDIR/backup_db.sh $TARGET\n+lxc file push $PROXYSCRIPTDIR/backup_xroad_proxy_configuration.sh $TARGET\n+lxc file push $PROXYSCRIPTDIR/get_security_server_id.sh $TARGET\n+lxc file push $PROXYSCRIPTDIR/restore_db.sh $TARGET\n+lxc file push $PROXYSCRIPTDIR/restore_xroad_proxy_configuration.sh $TARGET\n+lxc file push $PROXYSCRIPTDIR/setup_serverconf_db.sh $TARGET\n+lxc file push $PROXYSCRIPTDIR/verify_internal_configuration.sh $TARGET\n+\n+"
  },
  {
    "sha": "4e1ceae788e0e12e9b5363cadb3f9b0bb7172bed",
    "filename": "src/packages/src/xroad/common/base/usr/share/xroad/scripts/_backup_xroad.sh",
    "status": "modified",
    "additions": 37,
    "deletions": 3,
    "changes": 40,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/base/usr/share/xroad/scripts/_backup_xroad.sh",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/base/usr/share/xroad/scripts/_backup_xroad.sh",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/packages/src/xroad/common/base/usr/share/xroad/scripts/_backup_xroad.sh?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -48,8 +48,17 @@ create_database_backup () {\n }\n \n create_backup_tarball () {\n-  echo \"CREATING TAR ARCHIVE TO ${BACKUP_FILENAME}\"\n-  tar --create -v --label \"${TARBALL_LABEL}\" --file ${BACKUP_FILENAME} --exclude=\"tmp*.tmp\" --exclude=\"/etc/xroad/postgresql\" ${BACKED_UP_PATHS}\n+  if [[ $ENCRYPT_BACKUP = true ]] ; then\n+    echo \"CREATING ENCRYPTED TAR ARCHIVE TO ${BACKUP_FILENAME}\"\n+    tar --create -v --label \"${TARBALL_LABEL}\" \\\n+        --exclude=\"tmp*.tmp\" --exclude=\"/etc/xroad/postgresql\" --exclude=\"/etc/xroad/backupkeys/gpghome\" \\\n+        ${BACKED_UP_PATHS} \\\n+    | gpg --homedir /etc/xroad/backupkeys/gpghome --encrypt --sign --recipient backup@xroad --output ${BACKUP_FILENAME}\n+\n+  else\n+    echo \"CREATING TAR ARCHIVE TO ${BACKUP_FILENAME}\"\n+    tar --create -v --label \"${TARBALL_LABEL}\" --file ${BACKUP_FILENAME} --exclude=\"tmp*.tmp\" --exclude=\"/etc/xroad/postgresql\" ${BACKED_UP_PATHS}\n+  fi\n   if [ $? != 0 ] ; then\n     echo \"Removing incomplete backup archive\"\n     rm -v ${BACKUP_FILENAME}\n@@ -59,7 +68,28 @@ create_backup_tarball () {\n   echo \"Backup file saved to ${BACKUP_FILENAME}\"\n }\n \n-while getopts \":t:i:s:n:f:bS\" opt ; do\n+# TODO this should be in setup somewhere, also this function is not robust enough\n+generate_private_key_if_needed () {\n+  if [[ $ENCRYPT_BACKUP = true ]] ; then\n+    if [ ! -d \"/etc/xroad/backupkeys/gpghome\" ] ; then\n+      echo \"GENERATING NEW KEYPAIR\"\n+      mkdir -p /etc/xroad/backupkeys/gpghome\n+      chmod 700 /etc/xroad/backupkeys/gpghome\n+\n+      gpg --homedir /etc/xroad/backupkeys/gpghome --batch --gen-key <<EOF\n+Key-Type: 1\n+Key-Length: 4096\n+Name-Real: XRoad Backup\n+Name-Email: backup@xroad\n+Expire-Date: 0\n+%no-protection\n+EOF\n+\n+    fi\n+  fi\n+}\n+\n+while getopts \":t:i:s:n:f:bSE\" opt ; do\n   case $opt in\n     S)\n       SKIP_DB_BACKUP=true\n@@ -82,6 +112,9 @@ while getopts \":t:i:s:n:f:bS\" opt ; do\n     b)\n       USE_BASE_64=true\n       ;;\n+    E)\n+      ENCRYPT_BACKUP=true\n+      ;;\n     \\?)\n       echo \"Invalid option $OPTARG -- did you use the correct wrapper script?\"\n       exit 2\n@@ -95,6 +128,7 @@ done\n check_server_type\n create_database_backup\n make_tarball_label\n+generate_private_key_if_needed\n create_backup_tarball\n \n # vim: ts=2 sw=2 sts=2 et filetype=sh"
  },
  {
    "sha": "321d8118a8ff4d2624ceba3359b3e584637a89a4",
    "filename": "src/packages/src/xroad/common/base/usr/share/xroad/scripts/_restore_xroad.sh",
    "status": "modified",
    "additions": 30,
    "deletions": 7,
    "changes": 37,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/base/usr/share/xroad/scripts/_restore_xroad.sh",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/base/usr/share/xroad/scripts/_restore_xroad.sh",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/packages/src/xroad/common/base/usr/share/xroad/scripts/_restore_xroad.sh?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -14,6 +14,10 @@ source /usr/share/xroad/scripts/_backup_restore_common.sh\n PRE_RESTORE_DATABASE_DUMP_FILENAME=${DATABASE_DUMP_FILENAME}\n PRE_RESTORE_TARBALL_FILENAME=\"/var/lib/xroad/conf_prerestore_backup.tar\"\n \n+RESTORE_DIR=/var/tmp/xroad/restore\n+TEMP_TAR_DIR=/var/tmp/xroad\n+TEMP_TAR_FILE=${TEMP_TAR_DIR}/decrypted_temporary.tar\n+\n RESTORE_LOCK_FILENAME=\"/var/lib/xroad/restore_lock\"\n RESTORE_IN_PROGRESS_FILENAME=\"/var/lib/xroad/restore_in_progress\"\n \n@@ -22,8 +26,6 @@ XROAD_SERVICES=\n \n acquire_lock () {\n     [ \"${FLOCKER}\" != \"$0\" ] && exec env FLOCKER=\"$0\" flock -n $RESTORE_LOCK_FILENAME \"$0\" \"$@\" || true\n-\n-    trap \"rm -f ${RESTORE_IN_PROGRESS_FILENAME}\" EXIT\n     touch \"${RESTORE_IN_PROGRESS_FILENAME}\"\n }\n \n@@ -40,6 +42,17 @@ check_restore_options () {\n   fi\n }\n \n+decrypt_tarball_if_encrypted () {\n+    if [[ $ENCRYPTED_BACKUP = true ]] ; then\n+      rm  -f ${TEMP_TAR_FILE}\n+      mkdir -p ${TEMP_TAR_DIR}\n+      GPG_FILENAME=${BACKUP_FILENAME}\n+      BACKUP_FILENAME=${TEMP_TAR_FILE}\n+      echo \"Exctracting encrypted tarball to ${BACKUP_FILENAME}\"\n+      gpg --homedir /etc/xroad/backupkeys/gpghome --decrypt --output ${BACKUP_FILENAME} ${GPG_FILENAME}\n+    fi\n+}\n+\n check_tarball_label () {\n   # Expecting the value has been validated and the error message has been given in\n   # wrapper scripts.\n@@ -96,7 +109,8 @@ stop_services () {\n create_pre_restore_backup () {\n   echo \"CREATING PRE-RESTORE BACKUP\"\n   # we will run this through eval to get a multi-line list\n-  local backed_up_files_cmd=\"find /etc/xroad -not -path '/etc/xroad/postgresql/*' -type f; find /etc/nginx/ -name \\\"*xroad*\\\"\"\n+  local backed_up_files_cmd=\"find /etc/xroad -not -path '/etc/xroad/postgresql/*' \\\n+-not -path '/etc/xroad/backupkeys/gpghome/*' -type f; find /etc/nginx/ -name \\\"*xroad*\\\"\"\n \n   if [ -x ${DATABASE_BACKUP_SCRIPT} ] ; then\n     echo \"Creating database dump to ${PRE_RESTORE_DATABASE_DUMP_FILENAME}\"\n@@ -134,16 +148,18 @@ remove_old_existing_files () {\n }\n \n setup_tmp_restore_dir() {\n-  RESTORE_DIR=/var/tmp/xroad/restore\n   rm -rf ${RESTORE_DIR}\n   mkdir -p ${RESTORE_DIR}\n }\n \n extract_to_tmp_restore_dir () {\n   # Restore to temporary directory and fix permissions before copying\n   # etc/xroad is always included in the backup, etc/nginx only when backup is for CS\n+  echo \"Exctracting tar archive to etc/xroad\"\n   tar xfv ${BACKUP_FILENAME} -C ${RESTORE_DIR} etc/xroad || die \"Extracting etc/xroad failed\"\n+\n   if tar -tf ${BACKUP_FILENAME} etc/nginx >/dev/null 2>&1; then\n+    echo \"Extracting tar archive to etc/nginx\"\n     tar xfv ${BACKUP_FILENAME} -C ${RESTORE_DIR} etc/nginx || die \"Extracting etc/nginx failed\"\n   else\n     echo \"No etc/nginx in backup\"\n@@ -193,8 +209,10 @@ restore_database () {\n   fi\n }\n \n-remove_tmp_restore_dir() {\n+remove_tmp_files() {\n+  rm -f ${RESTORE_IN_PROGRESS_FILENAME}\n   rm -rf ${RESTORE_DIR}\n+  rm -rf ${TEMP_TAR_DIR}\n }\n \n restart_services () {\n@@ -209,7 +227,7 @@ restart_services () {\n   done\n }\n \n-while getopts \":RFSt:i:s:n:f:b\" opt ; do\n+while getopts \":RFSt:i:s:n:f:bE\" opt ; do\n   case ${opt} in\n     R)\n       SKIP_REMOVAL=true\n@@ -238,6 +256,9 @@ while getopts \":RFSt:i:s:n:f:b\" opt ; do\n     b)\n       USE_BASE_64=true\n       ;;\n+    E)\n+      ENCRYPTED_BACKUP=true\n+      ;;\n     \\?)\n       echo \"Invalid option $OPTARG -- did you use the correct wrapper script?\"\n       exit 2\n@@ -248,8 +269,11 @@ while getopts \":RFSt:i:s:n:f:b\" opt ; do\n   esac\n done\n \n+trap remove_tmp_files EXIT\n+\n acquire_lock \"$@\"\n check_server_type\n+decrypt_tarball_if_encrypted\n check_is_correct_tarball\n check_restore_options\n make_tarball_label\n@@ -262,7 +286,6 @@ extract_to_tmp_restore_dir\n remove_old_existing_files\n restore_configuration_files\n restore_database\n-remove_tmp_restore_dir\n restart_services\n \n # vim: ts=2 sw=2 sts=2 et filetype=sh"
  },
  {
    "sha": "de135ff4987282674e2b68928ac99c72481cbc12",
    "filename": "src/packages/src/xroad/common/proxy/usr/share/xroad/db/backup_and_remove_non-member_permissions.sh",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/proxy/usr/share/xroad/db/backup_and_remove_non-member_permissions.sh",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/proxy/usr/share/xroad/db/backup_and_remove_non-member_permissions.sh",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/packages/src/xroad/common/proxy/usr/share/xroad/db/backup_and_remove_non-member_permissions.sh?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -9,7 +9,7 @@ then\n     echo -e \"No instance identifier found, skipping backup\"\n else\n     echo -e \"Creating backup before removing non-subsystem accessrights related objects.\\nBackup can be found: $filename\"\n-    su - xroad -c sh -c \"/usr/share/xroad/scripts/backup_xroad_proxy_configuration.sh -s \\\"${instance}\\\" -f \\\"${filename}\\\"\"\n+    su - xroad -c sh -c \"/usr/share/xroad/scripts/backup_xroad_proxy_configuration.sh -E -s \\\"${instance}\\\" -f \\\"${filename}\\\"\"\n \n     if [[ $? -ne 0 ]]\n     then"
  },
  {
    "sha": "98cc2f2508e037f22ff55d43802f0640d4fb65a6",
    "filename": "src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/autobackup_xroad_proxy_configuration.sh",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/autobackup_xroad_proxy_configuration.sh",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/autobackup_xroad_proxy_configuration.sh",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/autobackup_xroad_proxy_configuration.sh?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -3,6 +3,6 @@\n ID=$(source /usr/share/xroad/scripts/get_security_server_id.sh)\n if [[ -n \"${ID}\" ]] ; then\n   SCRIPT=\"/usr/share/xroad/scripts/backup_xroad_proxy_configuration.sh\"\n-  FILENAME=\"/var/lib/xroad/backup/ss-automatic-backup-$(date +%Y_%m_%d_%H%M%S).tar\"\n+  FILENAME=\"/var/lib/xroad/backup/ss-automatic-backup-$(date +%Y_%m_%d_%H%M%S).gpg\"\n   ${SCRIPT} -s ${ID} -f ${FILENAME}\n fi"
  },
  {
    "sha": "78c4e60d825061e3ee5b6975e6fb65ba4762ab0a",
    "filename": "src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/backup_xroad_proxy_configuration.sh",
    "status": "modified",
    "additions": 9,
    "deletions": 2,
    "changes": 11,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/backup_xroad_proxy_configuration.sh",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/backup_xroad_proxy_configuration.sh",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/backup_xroad_proxy_configuration.sh?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -5,7 +5,7 @@\n source /usr/share/xroad/scripts/_backup_restore_common.sh\n \n COMMON_BACKUP_SCRIPT=/usr/share/xroad/scripts/_backup_xroad.sh\n-THIS_FILE=$(pwd)/$0 \n+THIS_FILE=$(pwd)/$0\n \n usage () {\n cat << EOF\n@@ -20,6 +20,7 @@ OPTIONS:\n     -s ID of the security server.\n     -f Absolute path of the resulting tar archive.\n     -S Skip database backup\n+    -E encrypt backup\n EOF\n }\n \n@@ -32,6 +33,9 @@ execute_backup () {\n     if [[ $SKIP_DB_BACKUP = true ]] ; then\n       args=\"${args} -S\"\n     fi\n+    if [[ $ENCRYPT_BACKUP = true ]] ; then\n+      args=\"${args} -E\"\n+    fi\n     ${COMMON_BACKUP_SCRIPT} ${args}\n     if [ $? -ne 0 ] ; then\n       echo \"Failed to back up the configuration of the X-Road security server\"\n@@ -43,7 +47,7 @@ execute_backup () {\n   fi\n }\n \n-while getopts \":s:f:Sbh\" opt ; do\n+while getopts \":s:f:SbhE\" opt ; do\n   case $opt in\n     h)\n       usage\n@@ -61,6 +65,9 @@ while getopts \":s:f:Sbh\" opt ; do\n     b)\n       USE_BASE_64=true\n       ;;\n+    E)\n+      ENCRYPT_BACKUP=true\n+      ;;\n     \\?)\n       echo \"Invalid option $OPTARG\"\n       usage"
  },
  {
    "sha": "369e2e80669283019d4196206e40a23c6aae43da",
    "filename": "src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/restore_xroad_proxy_configuration.sh",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/restore_xroad_proxy_configuration.sh",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/restore_xroad_proxy_configuration.sh",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/packages/src/xroad/common/proxy/usr/share/xroad/scripts/restore_xroad_proxy_configuration.sh?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -39,6 +39,9 @@ execute_restore () {\n     if [ -n ${SKIP_REMOVAL} ] && [[ ${SKIP_REMOVAL} = true ]] ; then\n       args=\"${args} -R\"\n     fi\n+    if [[ $ENCRYPT_BACKUP = true ]] ; then\n+      args=\"${args} -E\"\n+    fi\n     sudo -u root ${COMMON_RESTORE_SCRIPT} ${args} 2>&1\n     if [ $? -ne 0 ] ; then\n       echo \"Failed to restore the configuration of the X-Road security server\"\n@@ -50,7 +53,7 @@ execute_restore () {\n   fi\n }\n \n-while getopts \":RFs:f:bh\" opt ; do\n+while getopts \":RFs:f:bhE\" opt ; do\n   case $opt in\n     h)\n       usage\n@@ -71,6 +74,9 @@ while getopts \":RFs:f:bh\" opt ; do\n     b)\n       USE_BASE_64=true\n       ;;\n+    E)\n+      ENCRYPT_BACKUP=true\n+      ;;\n     \\?)\n       echo \"Invalid option $OPTARG\"\n       usage"
  },
  {
    "sha": "f319bc1030ad6076d15eaba2d4fceaeda7d36fe7",
    "filename": "src/packages/src/xroad/redhat/SOURCES/proxy/xroad-proxy",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/redhat/SOURCES/proxy/xroad-proxy",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/redhat/SOURCES/proxy/xroad-proxy",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/packages/src/xroad/redhat/SOURCES/proxy/xroad-proxy?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -4,4 +4,4 @@\n 15 3 * * * xroad /usr/share/xroad/scripts/autobackup_xroad_proxy_configuration.sh\n \n # backup retention policy, delete backups older that 30 days\n-10 * * * * xroad find /var/lib/xroad/backup -type f -name \"ss-automatic-backup*.tar\" -mtime 30 -delete\n+10 * * * * xroad find /var/lib/xroad/backup -type f -name \"ss-automatic-backup*.gpg\" -mtime 30 -delete"
  },
  {
    "sha": "f319bc1030ad6076d15eaba2d4fceaeda7d36fe7",
    "filename": "src/packages/src/xroad/ubuntu/generic/xroad-proxy.cron.d",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/ubuntu/generic/xroad-proxy.cron.d",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/packages/src/xroad/ubuntu/generic/xroad-proxy.cron.d",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/packages/src/xroad/ubuntu/generic/xroad-proxy.cron.d?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -4,4 +4,4 @@\n 15 3 * * * xroad /usr/share/xroad/scripts/autobackup_xroad_proxy_configuration.sh\n \n # backup retention policy, delete backups older that 30 days\n-10 * * * * xroad find /var/lib/xroad/backup -type f -name \"ss-automatic-backup*.tar\" -mtime 30 -delete\n+10 * * * * xroad find /var/lib/xroad/backup -type f -name \"ss-automatic-backup*.gpg\" -mtime 30 -delete"
  },
  {
    "sha": "420d1e20ca49a488e40ae30e1742e826d6ea7c96",
    "filename": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/BackupService.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/BackupService.java",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/BackupService.java",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/BackupService.java?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -125,7 +125,7 @@ public BackupFile generateBackup() throws InterruptedException {\n         String filename = generateBackupFileName();\n         auditDataHelper.putBackupFilename(backupRepository.getFilePath(filename));\n         String fullPath = backupRepository.getConfigurationBackupPath() + filename;\n-        String[] args = new String[] {\"-s\", securityServerId.toShortString(), \"-f\", fullPath};\n+        String[] args = new String[] {\"-s\", securityServerId.toShortString(), \"-f\", fullPath, \"-E\"};\n \n         try {\n             log.info(\"Run configuration backup with command '\"\n@@ -216,7 +216,7 @@ private void setCreatedAt(BackupFile backupFile) {\n      */\n     public String generateBackupFileName() {\n         DateTimeFormatter dtf = DateTimeFormatter.ofPattern(BACKUP_FILENAME_DATE_TIME_FORMAT);\n-        return \"conf_backup_\" + LocalDateTime.now().format(dtf) + \".tar\";\n+        return \"conf_backup_\" + LocalDateTime.now().format(dtf) + \".gpg\";\n     }\n \n     private String getFileNotFoundExceptionMessage(String filename) {"
  },
  {
    "sha": "553071629508e735f598dd97cd0d00e6b8e72e11",
    "filename": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/util/FormatUtils.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/util/FormatUtils.java",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/util/FormatUtils.java",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/util/FormatUtils.java?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -54,8 +54,10 @@\n     public static final String URL_HOST_REGEX = \"^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\\\-]*[a-zA-Z0-9])\\\\.)*\"\n             + \"([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\\\-]*[A-Za-z0-9])$\";\n     // Criteria for a valid backup file name:\n-    // 1) cannot start with \".\", 2) must contain one or more word characters ([a-zA-Z_0-9.-]), 3) must end with \".tar\"\n-    private static final String BACKUP_FILENAME_PATTERN = \"^(?!\\\\.)[\\\\w\\\\.\\\\-]+\\\\.tar$\";\n+    // 1) cannot start with \".\"\n+    // 2) must contain one or more word characters ([a-zA-Z_0-9.-]),\n+    // 3) must end with \".tar\" or \".gpg\"\n+    private static final Pattern BACKUP_FILENAME_PATTERN = Pattern.compile(\"^(?!\\\\.)[\\\\w\\\\.\\\\-]+\\\\.(tar|gpg)$\");\n \n     private FormatUtils() {\n         // noop\n@@ -214,7 +216,7 @@ public static String xRoadIdToEncodedId(XRoadId xRoadId) {\n      * @return\n      */\n     public static boolean isValidBackupFilename(String filename) {\n-        return Pattern.compile(BACKUP_FILENAME_PATTERN).matcher(filename).matches();\n+        return BACKUP_FILENAME_PATTERN.matcher(filename).matches();\n     }\n \n     /**"
  },
  {
    "sha": "13e5bfeab1c4447112fd8af6d22c5ccfc5061933",
    "filename": "src/proxy-ui-api/src/main/resources/common-application.yml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/nordic-institute/X-Road/blob/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/proxy-ui-api/src/main/resources/common-application.yml",
    "raw_url": "https://github.com/nordic-institute/X-Road/raw/becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc/src/proxy-ui-api/src/main/resources/common-application.yml",
    "contents_url": "https://api.github.com/repos/nordic-institute/X-Road/contents/src/proxy-ui-api/src/main/resources/common-application.yml?ref=becd6581d7368e3d00f1c8a9ee0b9a939b6a9afc",
    "patch": "@@ -78,7 +78,7 @@ script:\n     path: /usr/share/xroad/scripts/verify_external_configuration.sh\n   restore-configuration:\n     path: /usr/share/xroad/scripts/restore_xroad_proxy_configuration.sh\n-    args: -b -s %s -f %s\n+    args: -b -s %s -f %s -E\n \n url:\n   download-configuration-anchor: http://localhost:%s/execute"
  }
]
