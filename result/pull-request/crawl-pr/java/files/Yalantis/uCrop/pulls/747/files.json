[
  {
    "sha": "c7c6967c43425617c98decbc78e581ff6fe81b20",
    "filename": "ucrop/src/main/java/com/yalantis/ucrop/UCrop.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Yalantis/uCrop/blob/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/UCrop.java",
    "raw_url": "https://github.com/Yalantis/uCrop/raw/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/UCrop.java",
    "contents_url": "https://api.github.com/repos/Yalantis/uCrop/contents/ucrop/src/main/java/com/yalantis/ucrop/UCrop.java?ref=ded4d8cbf27753e62fd7d49e37ee8d5c13725b76",
    "patch": "@@ -39,6 +39,7 @@\n     public static final String EXTRA_INPUT_URI = EXTRA_PREFIX + \".InputUri\";\n     public static final String EXTRA_OUTPUT_URI = EXTRA_PREFIX + \".OutputUri\";\n     public static final String EXTRA_OUTPUT_CROP_ASPECT_RATIO = EXTRA_PREFIX + \".CropAspectRatio\";\n+    public static final String EXTRA_OUTPUT_CIRCLE_CROP = EXTRA_PREFIX + \".CircleCrop\";\n     public static final String EXTRA_OUTPUT_IMAGE_WIDTH = EXTRA_PREFIX + \".ImageWidth\";\n     public static final String EXTRA_OUTPUT_IMAGE_HEIGHT = EXTRA_PREFIX + \".ImageHeight\";\n     public static final String EXTRA_OUTPUT_OFFSET_X = EXTRA_PREFIX + \".OffsetX\";\n@@ -220,6 +221,16 @@ public static float getOutputCropAspectRatio(@NonNull Intent intent) {\n         return intent.getFloatExtra(EXTRA_OUTPUT_CROP_ASPECT_RATIO, 0f);\n     }\n \n+    /**\n+     * Retrieve if image is circle cropped from the result Intent\n+     *\n+     * @param intent crop result intent\n+     * @return circle crop flag\n+     */\n+    public static boolean getOutputCircleCrop(@NonNull Intent intent) {\n+        return intent.getBooleanExtra(EXTRA_OUTPUT_CIRCLE_CROP, false);\n+    }\n+\n     /**\n      * Method retrieves error from the result intent.\n      *"
  },
  {
    "sha": "45b3bce275ec92fe6e4b5abf00d717b3429922f3",
    "filename": "ucrop/src/main/java/com/yalantis/ucrop/UCropActivity.java",
    "status": "modified",
    "additions": 14,
    "deletions": 7,
    "changes": 21,
    "blob_url": "https://github.com/Yalantis/uCrop/blob/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/UCropActivity.java",
    "raw_url": "https://github.com/Yalantis/uCrop/raw/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/UCropActivity.java",
    "contents_url": "https://api.github.com/repos/Yalantis/uCrop/contents/ucrop/src/main/java/com/yalantis/ucrop/UCropActivity.java?ref=ded4d8cbf27753e62fd7d49e37ee8d5c13725b76",
    "patch": "@@ -101,9 +101,9 @@\n     private boolean mShowBottomControls;\n     private boolean mShowLoader = true;\n \n-    private UCropView mUCropView;\n-    private GestureCropImageView mGestureCropImageView;\n-    private OverlayView mOverlayView;\n+    protected UCropView mUCropView;\n+    protected GestureCropImageView mGestureCropImageView;\n+    protected OverlayView mOverlayView;\n     private ViewGroup mWrapperStateAspectRatio, mWrapperStateRotate, mWrapperStateScale;\n     private ViewGroup mLayoutAspectRatio, mLayoutRotate, mLayoutScale;\n     private List<ViewGroup> mCropAspectRatioViews = new ArrayList<>();\n@@ -269,6 +269,7 @@ private void processOptions(@NonNull Intent intent) {\n         } else if (aspectRatioList != null && aspectRationSelectedByDefault < aspectRatioList.size()) {\n             mGestureCropImageView.setTargetAspectRatio(aspectRatioList.get(aspectRationSelectedByDefault).getAspectRatioX() /\n                     aspectRatioList.get(aspectRationSelectedByDefault).getAspectRatioY());\n+            setCircleCrop(aspectRatioList.get(aspectRationSelectedByDefault).isCircle());\n         } else {\n             mGestureCropImageView.setTargetAspectRatio(CropImageView.SOURCE_IMAGE_ASPECT_RATIO);\n         }\n@@ -283,6 +284,10 @@ private void processOptions(@NonNull Intent intent) {\n         }\n     }\n \n+    protected void setCircleCrop(boolean circleCrop) {\n+        mGestureCropImageView.setCircleCrop(circleCrop);\n+    }\n+\n     private void setupViews(@NonNull Intent intent) {\n         mStatusBarColor = intent.getIntExtra(UCrop.Options.EXTRA_STATUS_BAR_COLOR, ContextCompat.getColor(this, R.color.ucrop_color_statusbar));\n         mToolbarColor = intent.getIntExtra(UCrop.Options.EXTRA_TOOL_BAR_COLOR, ContextCompat.getColor(this, R.color.ucrop_color_toolbar));\n@@ -470,9 +475,10 @@ private void setupAspectRatioWidget(@NonNull Intent intent) {\n             cropAspectRatioView.setOnClickListener(new View.OnClickListener() {\n                 @Override\n                 public void onClick(View v) {\n-                    mGestureCropImageView.setTargetAspectRatio(\n-                            ((AspectRatioTextView) ((ViewGroup) v).getChildAt(0)).getAspectRatio(v.isSelected()));\n+                    AspectRatioTextView ratioTextView = ((AspectRatioTextView) ((ViewGroup) v).getChildAt(0));\n+                    mGestureCropImageView.setTargetAspectRatio(ratioTextView.getAspectRatio(v.isSelected()));\n                     mGestureCropImageView.setImageToWrapCropBounds();\n+                    setCircleCrop(ratioTextView.isCircle());\n                     if (!v.isSelected()) {\n                         for (ViewGroup cropAspectRatioView : mCropAspectRatioViews) {\n                             cropAspectRatioView.setSelected(cropAspectRatioView == v);\n@@ -669,7 +675,7 @@ protected void cropAndSaveImage() {\n \n             @Override\n             public void onBitmapCropped(@NonNull Uri resultUri, int offsetX, int offsetY, int imageWidth, int imageHeight) {\n-                setResultUri(resultUri, mGestureCropImageView.getTargetAspectRatio(), offsetX, offsetY, imageWidth, imageHeight);\n+                setResultUri(resultUri, mGestureCropImageView.getTargetAspectRatio(), mGestureCropImageView.isCircleCrop(), offsetX, offsetY, imageWidth, imageHeight);\n                 finish();\n             }\n \n@@ -681,10 +687,11 @@ public void onCropFailure(@NonNull Throwable t) {\n         });\n     }\n \n-    protected void setResultUri(Uri uri, float resultAspectRatio, int offsetX, int offsetY, int imageWidth, int imageHeight) {\n+    protected void setResultUri(Uri uri, float resultAspectRatio, boolean circleCrop, int offsetX, int offsetY, int imageWidth, int imageHeight) {\n         setResult(RESULT_OK, new Intent()\n                 .putExtra(UCrop.EXTRA_OUTPUT_URI, uri)\n                 .putExtra(UCrop.EXTRA_OUTPUT_CROP_ASPECT_RATIO, resultAspectRatio)\n+                .putExtra(UCrop.EXTRA_OUTPUT_CIRCLE_CROP, circleCrop)\n                 .putExtra(UCrop.EXTRA_OUTPUT_IMAGE_WIDTH, imageWidth)\n                 .putExtra(UCrop.EXTRA_OUTPUT_IMAGE_HEIGHT, imageHeight)\n                 .putExtra(UCrop.EXTRA_OUTPUT_OFFSET_X, offsetX)"
  },
  {
    "sha": "f3f08634bf510a18ebdd92b4ea6f9d410648fa82",
    "filename": "ucrop/src/main/java/com/yalantis/ucrop/UCropFragment.java",
    "status": "modified",
    "additions": 14,
    "deletions": 7,
    "changes": 21,
    "blob_url": "https://github.com/Yalantis/uCrop/blob/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/UCropFragment.java",
    "raw_url": "https://github.com/Yalantis/uCrop/raw/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/UCropFragment.java",
    "contents_url": "https://api.github.com/repos/Yalantis/uCrop/contents/ucrop/src/main/java/com/yalantis/ucrop/UCropFragment.java?ref=ded4d8cbf27753e62fd7d49e37ee8d5c13725b76",
    "patch": "@@ -81,9 +81,9 @@\n \n     private Transition mControlsTransition;\n \n-    private UCropView mUCropView;\n-    private GestureCropImageView mGestureCropImageView;\n-    private OverlayView mOverlayView;\n+    protected UCropView mUCropView;\n+    protected GestureCropImageView mGestureCropImageView;\n+    protected OverlayView mOverlayView;\n     private ViewGroup mWrapperStateAspectRatio, mWrapperStateRotate, mWrapperStateScale;\n     private ViewGroup mLayoutAspectRatio, mLayoutRotate, mLayoutScale;\n     private List<ViewGroup> mCropAspectRatioViews = new ArrayList<>();\n@@ -250,6 +250,7 @@ private void processOptions(@NonNull Bundle bundle) {\n         } else if (aspectRatioList != null && aspectRationSelectedByDefault < aspectRatioList.size()) {\n             mGestureCropImageView.setTargetAspectRatio(aspectRatioList.get(aspectRationSelectedByDefault).getAspectRatioX() /\n                     aspectRatioList.get(aspectRationSelectedByDefault).getAspectRatioY());\n+            setCircleCrop(aspectRatioList.get(aspectRationSelectedByDefault).isCircle());\n         } else {\n             mGestureCropImageView.setTargetAspectRatio(CropImageView.SOURCE_IMAGE_ASPECT_RATIO);\n         }\n@@ -264,6 +265,10 @@ private void processOptions(@NonNull Bundle bundle) {\n         }\n     }\n \n+    protected void setCircleCrop(boolean circleCrop) {\n+        mGestureCropImageView.setCircleCrop(circleCrop);\n+    }\n+\n     private void initiateRootViews(View view) {\n         mUCropView = view.findViewById(R.id.ucrop);\n         mGestureCropImageView = mUCropView.getCropImageView();\n@@ -353,9 +358,10 @@ private void setupAspectRatioWidget(@NonNull Bundle bundle, View view) {\n             cropAspectRatioView.setOnClickListener(new View.OnClickListener() {\n                 @Override\n                 public void onClick(View v) {\n-                    mGestureCropImageView.setTargetAspectRatio(\n-                            ((AspectRatioTextView) ((ViewGroup) v).getChildAt(0)).getAspectRatio(v.isSelected()));\n+                    AspectRatioTextView ratioTextView = ((AspectRatioTextView) ((ViewGroup) v).getChildAt(0));\n+                    mGestureCropImageView.setTargetAspectRatio(ratioTextView.getAspectRatio(v.isSelected()));\n                     mGestureCropImageView.setImageToWrapCropBounds();\n+                    setCircleCrop(ratioTextView.isCircle());\n                     if (!v.isSelected()) {\n                         for (ViewGroup cropAspectRatioView : mCropAspectRatioViews) {\n                             cropAspectRatioView.setSelected(cropAspectRatioView == v);\n@@ -550,7 +556,7 @@ public void cropAndSaveImage() {\n \n             @Override\n             public void onBitmapCropped(@NonNull Uri resultUri, int offsetX, int offsetY, int imageWidth, int imageHeight) {\n-                callback.onCropFinish(getResult(resultUri, mGestureCropImageView.getTargetAspectRatio(), offsetX, offsetY, imageWidth, imageHeight));\n+                callback.onCropFinish(getResult(resultUri, mGestureCropImageView.getTargetAspectRatio(), mGestureCropImageView.isCircleCrop(), offsetX, offsetY, imageWidth, imageHeight));\n                 callback.loadingProgress(false);\n             }\n \n@@ -561,10 +567,11 @@ public void onCropFailure(@NonNull Throwable t) {\n         });\n     }\n \n-    protected UCropResult getResult(Uri uri, float resultAspectRatio, int offsetX, int offsetY, int imageWidth, int imageHeight) {\n+    protected UCropResult getResult(Uri uri, float resultAspectRatio, boolean circleCrop, int offsetX, int offsetY, int imageWidth, int imageHeight) {\n         return new UCropResult(RESULT_OK, new Intent()\n                 .putExtra(UCrop.EXTRA_OUTPUT_URI, uri)\n                 .putExtra(UCrop.EXTRA_OUTPUT_CROP_ASPECT_RATIO, resultAspectRatio)\n+                .putExtra(UCrop.EXTRA_OUTPUT_CIRCLE_CROP, circleCrop)\n                 .putExtra(UCrop.EXTRA_OUTPUT_IMAGE_WIDTH, imageWidth)\n                 .putExtra(UCrop.EXTRA_OUTPUT_IMAGE_HEIGHT, imageHeight)\n                 .putExtra(UCrop.EXTRA_OUTPUT_OFFSET_X, offsetX)"
  },
  {
    "sha": "b82e2543a3747fef78270e9ad1f203ad809d107b",
    "filename": "ucrop/src/main/java/com/yalantis/ucrop/model/AspectRatio.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Yalantis/uCrop/blob/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/model/AspectRatio.java",
    "raw_url": "https://github.com/Yalantis/uCrop/raw/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/model/AspectRatio.java",
    "contents_url": "https://api.github.com/repos/Yalantis/uCrop/contents/ucrop/src/main/java/com/yalantis/ucrop/model/AspectRatio.java?ref=ded4d8cbf27753e62fd7d49e37ee8d5c13725b76",
    "patch": "@@ -14,24 +14,32 @@\n     private final String mAspectRatioTitle;\n     private final float mAspectRatioX;\n     private final float mAspectRatioY;\n+    private final boolean mCircle;\n \n     public AspectRatio(@Nullable String aspectRatioTitle, float aspectRatioX, float aspectRatioY) {\n+        this(aspectRatioTitle, aspectRatioX, aspectRatioY, false);\n+    }\n+\n+    public AspectRatio(@Nullable String aspectRatioTitle, float aspectRatioX, float aspectRatioY, boolean circle) {\n         mAspectRatioTitle = aspectRatioTitle;\n         mAspectRatioX = aspectRatioX;\n         mAspectRatioY = aspectRatioY;\n+        mCircle = circle;\n     }\n \n     protected AspectRatio(Parcel in) {\n         mAspectRatioTitle = in.readString();\n         mAspectRatioX = in.readFloat();\n         mAspectRatioY = in.readFloat();\n+        mCircle = in.readInt() != 0;\n     }\n \n     @Override\n     public void writeToParcel(Parcel dest, int flags) {\n         dest.writeString(mAspectRatioTitle);\n         dest.writeFloat(mAspectRatioX);\n         dest.writeFloat(mAspectRatioY);\n+        dest.writeInt(mCircle ? 1 : 0);\n     }\n \n     @Override\n@@ -64,4 +72,7 @@ public float getAspectRatioY() {\n         return mAspectRatioY;\n     }\n \n+    public boolean isCircle() {\n+        return mCircle;\n+    }\n }"
  },
  {
    "sha": "36cfcf376f3a6dbb347596dfe6d05915de1630f9",
    "filename": "ucrop/src/main/java/com/yalantis/ucrop/view/CropImageView.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Yalantis/uCrop/blob/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/view/CropImageView.java",
    "raw_url": "https://github.com/Yalantis/uCrop/raw/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/view/CropImageView.java",
    "contents_url": "https://api.github.com/repos/Yalantis/uCrop/contents/ucrop/src/main/java/com/yalantis/ucrop/view/CropImageView.java?ref=ded4d8cbf27753e62fd7d49e37ee8d5c13725b76",
    "patch": "@@ -44,6 +44,7 @@\n     private final Matrix mTempMatrix = new Matrix();\n \n     private float mTargetAspectRatio;\n+    private boolean mCircleCrop;\n     private float mMaxScaleMultiplier = DEFAULT_MAX_SCALE_MULTIPLIER;\n \n     private CropBoundsChangeListener mCropBoundsChangeListener;\n@@ -109,6 +110,13 @@ public float getTargetAspectRatio() {\n         return mTargetAspectRatio;\n     }\n \n+    /**\n+     * @return - whether circle crop is enabled or not\n+     */\n+    public boolean isCircleCrop() {\n+        return mCircleCrop;\n+    }\n+\n     /**\n      * Updates current crop rectangle with given. Also recalculates image properties and position\n      * to fit new crop rectangle.\n@@ -148,6 +156,10 @@ public void setTargetAspectRatio(float targetAspectRatio) {\n         }\n     }\n \n+    public void setCircleCrop(boolean circleCrop) {\n+        mCircleCrop = circleCrop;\n+    }\n+\n     @Nullable\n     public CropBoundsChangeListener getCropBoundsChangeListener() {\n         return mCropBoundsChangeListener;"
  },
  {
    "sha": "b94ea828fe84b99c36b25ca1145ea4d2f467144f",
    "filename": "ucrop/src/main/java/com/yalantis/ucrop/view/widget/AspectRatioTextView.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Yalantis/uCrop/blob/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/view/widget/AspectRatioTextView.java",
    "raw_url": "https://github.com/Yalantis/uCrop/raw/ded4d8cbf27753e62fd7d49e37ee8d5c13725b76/ucrop/src/main/java/com/yalantis/ucrop/view/widget/AspectRatioTextView.java",
    "contents_url": "https://api.github.com/repos/Yalantis/uCrop/contents/ucrop/src/main/java/com/yalantis/ucrop/view/widget/AspectRatioTextView.java?ref=ded4d8cbf27753e62fd7d49e37ee8d5c13725b76",
    "patch": "@@ -36,6 +36,7 @@\n \n     private String mAspectRatioTitle;\n     private float mAspectRatioX, mAspectRatioY;\n+    private boolean mCircle;\n \n     public AspectRatioTextView(Context context) {\n         this(context, null);\n@@ -71,6 +72,7 @@ public void setAspectRatio(@NonNull AspectRatio aspectRatio) {\n         mAspectRatioTitle = aspectRatio.getAspectRatioTitle();\n         mAspectRatioX = aspectRatio.getAspectRatioX();\n         mAspectRatioY = aspectRatio.getAspectRatioY();\n+        mCircle = aspectRatio.isCircle();\n \n         if (mAspectRatioX == CropImageView.SOURCE_IMAGE_ASPECT_RATIO || mAspectRatioY == CropImageView.SOURCE_IMAGE_ASPECT_RATIO) {\n             mAspectRatio = CropImageView.SOURCE_IMAGE_ASPECT_RATIO;\n@@ -89,6 +91,10 @@ public float getAspectRatio(boolean toggleRatio) {\n         return mAspectRatio;\n     }\n \n+    public boolean isCircle() {\n+        return mCircle;\n+    }\n+\n     @Override\n     protected void onDraw(Canvas canvas) {\n         super.onDraw(canvas);"
  }
]
