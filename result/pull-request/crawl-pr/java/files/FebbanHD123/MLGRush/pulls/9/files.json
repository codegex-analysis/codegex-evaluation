[
  {
    "sha": "4bf0e80275b04f09fe8c209772b09296bb1d912e",
    "filename": ".gitignore",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/FebbanHD123/MLGRush/blob/a7754fd5812c2f3a079d78b3b1d284e64b405179/.gitignore",
    "raw_url": "https://github.com/FebbanHD123/MLGRush/raw/a7754fd5812c2f3a079d78b3b1d284e64b405179/.gitignore",
    "contents_url": "https://api.github.com/repos/FebbanHD123/MLGRush/contents/.gitignore?ref=a7754fd5812c2f3a079d78b3b1d284e64b405179",
    "patch": "@@ -0,0 +1,30 @@\n+### Git-ignore file for java\n+# Compiled class file\n+*.class\n+\n+# Log file\n+*.log\n+\n+# BlueJ files\n+*.ctxt\n+\n+# Mobile Tools for Java (J2ME)\n+.mtj.tmp/\n+\n+# Package Files #\n+*.jar\n+*.war\n+*.nar\n+*.ear\n+*.zip\n+*.tar.gz\n+*.rar\n+\n+# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\n+hs_err_pid*\n+\n+target/\n+.idea\n+dependency-reduced-pom.xml\n+AdvancedMLGRush.iml\n+"
  },
  {
    "sha": "5f493f1c45d4be6dd378a5027ec776d700061a14",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 20,
    "deletions": 11,
    "changes": 31,
    "blob_url": "https://github.com/FebbanHD123/MLGRush/blob/a7754fd5812c2f3a079d78b3b1d284e64b405179/pom.xml",
    "raw_url": "https://github.com/FebbanHD123/MLGRush/raw/a7754fd5812c2f3a079d78b3b1d284e64b405179/pom.xml",
    "contents_url": "https://api.github.com/repos/FebbanHD123/MLGRush/contents/pom.xml?ref=a7754fd5812c2f3a079d78b3b1d284e64b405179",
    "patch": "@@ -6,13 +6,20 @@\n \n     <groupId>de.febanhd</groupId>\n     <artifactId>AdvancedMLGRush</artifactId>\n-    <version>2.2.9</version>\n+    <version>2.3.2</version>\n \n     <repositories>\n+\n         <repository>\n             <id>CodeMC</id>\n             <url>https://repo.codemc.org/repository/maven-public/</url>\n         </repository>\n+\n+        <!-- Spigot repository -->\n+        <repository>\n+            <id>spigot-repo</id>\n+            <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>\n+        </repository>\n     </repositories>\n \n     <dependencies>\n@@ -39,29 +46,31 @@\n         </dependency>\n \n         <dependency>\n-            <groupId>org.spigot</groupId>\n-            <artifactId>spigot-1_16</artifactId>\n-            <version>1.16.1</version>\n-            <systemPath>G:/development/api/spigot/spigot_1.16.1.jar</systemPath>\n-            <scope>system</scope>\n+            <groupId>org.spigotmc</groupId>\n+            <artifactId>spigot-api</artifactId>\n+            <version>1.16.5-R0.1-SNAPSHOT</version>\n+            <scope>provided</scope>\n         </dependency>\n+\n         <dependency>\n-            <groupId>org.spigot</groupId>\n-            <artifactId>spigot-1_8</artifactId>\n-            <version>1.8</version>\n-            <systemPath>G:/development/api/spigot/spigot_1.8_R3.jar</systemPath>\n-            <scope>system</scope>\n+            <groupId>org.spigotmc</groupId>\n+            <artifactId>spigot-api</artifactId>\n+            <version>1.16.5-R0.1-SNAPSHOT</version>\n+            <scope>provided</scope>\n         </dependency>\n+\n         <dependency>\n             <groupId>io.micrometer</groupId>\n             <artifactId>micrometer-core</artifactId>\n             <version>1.5.4</version>\n         </dependency>\n+\n         <dependency>\n             <groupId>org.slf4j</groupId>\n             <artifactId>slf4j-api</artifactId>\n             <version>1.7.30</version>\n         </dependency>\n+\n         <dependency>\n             <groupId>com.zaxxer</groupId>\n             <artifactId>HikariCP</artifactId>"
  },
  {
    "sha": "5750e2454fbc05638da0f1d687431a200abd26eb",
    "filename": "src/main/java/de/febanhd/mlgrush/MLGRush.java",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/FebbanHD123/MLGRush/blob/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/MLGRush.java",
    "raw_url": "https://github.com/FebbanHD123/MLGRush/raw/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/MLGRush.java",
    "contents_url": "https://api.github.com/repos/FebbanHD123/MLGRush/contents/src/main/java/de/febanhd/mlgrush/MLGRush.java?ref=a7754fd5812c2f3a079d78b3b1d284e64b405179",
    "patch": "@@ -14,7 +14,6 @@\n import de.febanhd.mlgrush.listener.PlayerConnectionListener;\n import de.febanhd.mlgrush.map.MapManager;\n import de.febanhd.mlgrush.map.setup.MapTemplateWorld;\n-import de.febanhd.mlgrush.nms.NMSUtil;\n import de.febanhd.mlgrush.stats.StatsCach;\n import de.febanhd.mlgrush.stats.StatsDataHandler;\n import de.febanhd.mlgrush.updatechecker.UpdateChecker;\n@@ -83,17 +82,13 @@ public void onEnable() {\n         pm.registerEvents(new InventoryListener(), this);\n         pm.registerEvents(new PlayerConnectionListener(), this);\n         pm.registerEvents(new InteractListener(), this);\n-        pm.registerEvents(new GameListener(this.gameHandler), this);\n+        Bukkit.getPluginManager().registerEvents(new GameListener(this.gameHandler, this.getConfig().getBoolean(\"no-damage\")), this);\n \n         this.startProtectionTask();\n \n         this.mapTemplateWorld = new MapTemplateWorld();\n         this.mapTemplateWorld.create();\n \n-        this.loadSql();\n-        this.statsDataHandler = new StatsDataHandler(this.sqlHandler);\n-        this.inventorySortingDataHandler = new InventorySortingDataHandler(this.sqlHandler);\n-\n         Bukkit.getOnlinePlayers().forEach(player -> {\n             StatsCach.loadStats(player);\n             InventorySortingCach.loadSorting(player);\n@@ -154,6 +149,11 @@ private void loadConfig() {\n         if(this.getConfig().contains(\"paste.distance\")) {\n             MapManager.DISTANCE = this.getConfig().getInt(\"paste.distance\");\n         }\n+\n+        this.loadSql();\n+        this.statsDataHandler = new StatsDataHandler(this.sqlHandler);\n+        this.inventorySortingDataHandler = new InventorySortingDataHandler(this.sqlHandler, this.getConfig().getInt(\"knockback-amplifier\"));\n+\n     }\n \n     private void loadSql() {\n@@ -211,4 +211,5 @@ public static String getString(String key) {\n             message = ChatColor.translateAlternateColorCodes('&', MLGRush.getInstance().getConfig().getString(key));\n         return message;\n     }\n+\n }"
  },
  {
    "sha": "629c55dfac6bb3deaa4dccd71460abba5403f1b2",
    "filename": "src/main/java/de/febanhd/mlgrush/game/GameSession.java",
    "status": "modified",
    "additions": 20,
    "deletions": 6,
    "changes": 26,
    "blob_url": "https://github.com/FebbanHD123/MLGRush/blob/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/game/GameSession.java",
    "raw_url": "https://github.com/FebbanHD123/MLGRush/raw/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/game/GameSession.java",
    "contents_url": "https://api.github.com/repos/FebbanHD123/MLGRush/contents/src/main/java/de/febanhd/mlgrush/game/GameSession.java?ref=a7754fd5812c2f3a079d78b3b1d284e64b405179",
    "patch": "@@ -1,6 +1,7 @@\n package de.febanhd.mlgrush.game;\n \n import com.google.common.collect.Maps;\n+import com.google.common.collect.Sets;\n import de.febanhd.mlgrush.MLGRush;\n import de.febanhd.mlgrush.game.lobby.inventorysorting.InventorySorting;\n import de.febanhd.mlgrush.game.lobby.inventorysorting.InventorySortingCach;\n@@ -20,15 +21,14 @@\n import org.bukkit.potion.PotionEffect;\n import org.bukkit.potion.PotionEffectType;\n \n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.Random;\n-import java.util.UUID;\n+import java.util.*;\n \n @Getter\n public class GameSession {\n \n     private final Player player1, player2;\n+    private boolean player1Respawning;\n+    private boolean player2Respawning;\n \n     private MapTemplate mapTemplate;\n     private Map map;\n@@ -108,21 +108,25 @@ public void setPointsForWin(int pointsForWin) {\n \n     public void respawn(Player player, boolean death) {\n         Player otherPlayer = this.isPlayer1(player) ? player2 : player1;\n+        player.setFallDistance(0.0F);\n         Location location;\n         if(otherPlayer.equals(player1)) {\n             location = this.map.getSpawnLocation()[1];\n         }else {\n             location = this.map.getSpawnLocation()[0];\n         }\n+\n         player.teleport(location);\n+\n         if(death) {\n             player.addPotionEffect(new PotionEffect(PotionEffectType.SLOW, (int)Math.round(20D * MLGRush.getInstance().getConfig().getDouble(\"no_move_time\")), 10));\n             StatsCach.getStats(player).addDeaths();\n             StatsCach.getStats(otherPlayer).addKill();\n             otherPlayer.playSound(otherPlayer.getLocation(), Sounds.LEVEL_UP.getSound(), 3, 2);\n         }\n         this.setItems(player);\n-    }\n+        player.setHealth(20.0D);\n+     }\n \n     private void setItems(Player player) {\n         player.getInventory().clear();\n@@ -256,10 +260,20 @@ private void resetPlacedBlocks() {\n \n     private void startIngameTask() {\n         this.taskID = Bukkit.getScheduler().scheduleSyncRepeatingTask(MLGRush.getInstance(), () -> {\n+            SpectatorHandler spectatorHandler = MLGRush.getInstance().getGameHandler().getLobbyHandler().getSpectatorHandler();\n+\n+            Set<Player> spectators = Sets.newHashSet();\n+            spectators.addAll(spectatorHandler.getSpectatorsOf(player1));\n+            spectators.addAll(spectatorHandler.getSpectatorsOf(player2));\n+\n             String actionbarString = ChatColor.RED + player1.getDisplayName() + \" ยง7\" + this.getPoints(player1) + \" ยง8| ยง7\" + this.getPoints(player2) + \" \" + ChatColor.BLUE + player2.getDisplayName();\n             NMSUtil.sendActionbar(player1, actionbarString);\n             NMSUtil.sendActionbar(player2, actionbarString);\n-        }, 0, 5);\n+\n+            spectators.forEach(spectator -> {\n+                NMSUtil.sendActionbar(spectator, actionbarString);\n+            });\n+        }, 0, 20L);\n     }\n \n     private void startWaitingTask() {"
  },
  {
    "sha": "65bb94101bab8e2d9014889b563570e7ddf17ecb",
    "filename": "src/main/java/de/febanhd/mlgrush/game/lobby/inventorysorting/InventorySortingDataHandler.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/FebbanHD123/MLGRush/blob/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/game/lobby/inventorysorting/InventorySortingDataHandler.java",
    "raw_url": "https://github.com/FebbanHD123/MLGRush/raw/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/game/lobby/inventorysorting/InventorySortingDataHandler.java",
    "contents_url": "https://api.github.com/repos/FebbanHD123/MLGRush/contents/src/main/java/de/febanhd/mlgrush/game/lobby/inventorysorting/InventorySortingDataHandler.java?ref=a7754fd5812c2f3a079d78b3b1d284e64b405179",
    "patch": "@@ -19,9 +19,11 @@\n public class InventorySortingDataHandler {\n \n     private final SimpleSQL databaseHandler;\n+    private final int enchantmentPower;\n \n-    public InventorySortingDataHandler(SimpleSQL databaseHandler) {\n+    public InventorySortingDataHandler(SimpleSQL databaseHandler, int enchantmentPower) {\n         this.databaseHandler = databaseHandler;\n+        this.enchantmentPower = enchantmentPower;\n     }\n \n     public ItemStack getPickAxeStack() {\n@@ -50,7 +52,7 @@ public ItemStack getPickAxeStack() {\n \n     public ArrayList<InventorySorting.ItemElement> getDefaultElements() {\n         ArrayList<InventorySorting.ItemElement> list = Lists.newArrayList(Arrays.asList(\n-                new InventorySorting.ItemElement(new ItemBuilder(Material.STICK).setDisplayName(MLGRush.getString(\"items.stick\")).addEnchant(Enchantment.KNOCKBACK, 1).build(), 0),\n+                new InventorySorting.ItemElement(new ItemBuilder(Material.STICK).setDisplayName(MLGRush.getString(\"items.stick\")).addEnchant(Enchantment.KNOCKBACK, enchantmentPower).build(), 0),\n                 new InventorySorting.ItemElement(this.getPickAxeStack(), 1)));\n         int blockAmount = MLGRush.getInstance().getConfig().getInt(\"blockamount\");\n         if(blockAmount <= 0) {"
  },
  {
    "sha": "749d289aaacd32e58899cd25d572c6096f7a6469",
    "filename": "src/main/java/de/febanhd/mlgrush/game/lobby/spectator/SpectatorHandler.java",
    "status": "modified",
    "additions": 13,
    "deletions": 3,
    "changes": 16,
    "blob_url": "https://github.com/FebbanHD123/MLGRush/blob/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/game/lobby/spectator/SpectatorHandler.java",
    "raw_url": "https://github.com/FebbanHD123/MLGRush/raw/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/game/lobby/spectator/SpectatorHandler.java",
    "contents_url": "https://api.github.com/repos/FebbanHD123/MLGRush/contents/src/main/java/de/febanhd/mlgrush/game/lobby/spectator/SpectatorHandler.java?ref=a7754fd5812c2f3a079d78b3b1d284e64b405179",
    "patch": "@@ -13,9 +13,7 @@\n import org.bukkit.potion.PotionEffect;\n import org.bukkit.potion.PotionEffectType;\n \n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n+import java.util.*;\n \n public class SpectatorHandler {\n \n@@ -60,6 +58,18 @@ public Player getTarget(Player player) {\n         return this.targetMap.get(player);\n     }\n \n+    public Set<Player> getSpectatorsOf(Player target) {\n+        Set<Player> output = new HashSet<>();\n+        for (Map.Entry<Player, Player> entry : targetMap.entrySet()) {\n+            Player spectator = entry.getKey();\n+            Player specTarget = entry.getValue();\n+            if (specTarget.getName().equalsIgnoreCase(target.getName())) {\n+                output.add(spectator);\n+            }\n+        }\n+        return output;\n+    }\n+\n     public List<Player> getPlayersWithCertainTarget(Player t) {\n         List<Player> players = Lists.newArrayList();\n         this.targetMap.forEach((player, target) -> {"
  },
  {
    "sha": "51f9f344762093232db4c74b32c8a38c5dff5f9a",
    "filename": "src/main/java/de/febanhd/mlgrush/gui/SpectatorGui.java",
    "status": "modified",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/FebbanHD123/MLGRush/blob/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/gui/SpectatorGui.java",
    "raw_url": "https://github.com/FebbanHD123/MLGRush/raw/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/gui/SpectatorGui.java",
    "contents_url": "https://api.github.com/repos/FebbanHD123/MLGRush/contents/src/main/java/de/febanhd/mlgrush/gui/SpectatorGui.java?ref=a7754fd5812c2f3a079d78b3b1d284e64b405179",
    "patch": "@@ -1,17 +1,13 @@\n package de.febanhd.mlgrush.gui;\n \n import com.google.common.collect.Lists;\n-import com.mojang.authlib.GameProfile;\n import de.febanhd.mlgrush.MLGRush;\n import de.febanhd.mlgrush.game.GameSession;\n-import de.febanhd.mlgrush.nms.NMSUtil;\n import de.febanhd.mlgrush.util.Materials;\n-import de.febanhd.mlgrush.util.SkullBuilder;\n import org.bukkit.Bukkit;\n import org.bukkit.entity.Player;\n import org.bukkit.inventory.Inventory;\n import org.bukkit.inventory.ItemStack;\n-import org.bukkit.inventory.meta.ItemMeta;\n import org.bukkit.inventory.meta.SkullMeta;\n \n import java.util.ArrayList;"
  },
  {
    "sha": "4d4371d09d0c4a30d5d0a23304716d3b1e7bbaf2",
    "filename": "src/main/java/de/febanhd/mlgrush/listener/GameListener.java",
    "status": "modified",
    "additions": 13,
    "deletions": 2,
    "changes": 15,
    "blob_url": "https://github.com/FebbanHD123/MLGRush/blob/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/listener/GameListener.java",
    "raw_url": "https://github.com/FebbanHD123/MLGRush/raw/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/listener/GameListener.java",
    "contents_url": "https://api.github.com/repos/FebbanHD123/MLGRush/contents/src/main/java/de/febanhd/mlgrush/listener/GameListener.java?ref=a7754fd5812c2f3a079d78b3b1d284e64b405179",
    "patch": "@@ -33,17 +33,28 @@\n public class GameListener implements Listener {\n \n     private GameHandler gameHandler;\n+    private boolean noDamage;\n \n-    public GameListener(GameHandler gameHandler) {\n+    public GameListener(GameHandler gameHandler, boolean noDamage) {\n         this.gameHandler = gameHandler;\n+        this.noDamage = noDamage;\n     }\n \n     @EventHandler\n     public void onDamage(EntityDamageEvent event) {\n         if(event.getEntity() instanceof Player) {\n             Player player = (Player)event.getEntity();\n+            GameSession session = gameHandler.getSessionByPlayer(player);\n             if(gameHandler.isInSession(player) && gameHandler.getSessionByPlayer(player).isIngame()) {\n-                event.setDamage(0);\n+                if (noDamage) {\n+                    event.setDamage(0);\n+                } else if (session.isPlayer1Respawning() && session.isPlayer1(player)) {\n+                    event.setDamage(0);\n+                    event.setCancelled(true);\n+                } else if (session.isPlayer2Respawning() && !session.isPlayer1(player)) {\n+                    event.setDamage(0);\n+                    event.setCancelled(true);\n+                }\n             }else {\n                 event.setCancelled(true);\n             }"
  },
  {
    "sha": "82461d7a4624a9b86f851aa1f1a761b0b2722395",
    "filename": "src/main/java/de/febanhd/mlgrush/map/Map.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/FebbanHD123/MLGRush/blob/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/map/Map.java",
    "raw_url": "https://github.com/FebbanHD123/MLGRush/raw/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/map/Map.java",
    "contents_url": "https://api.github.com/repos/FebbanHD123/MLGRush/contents/src/main/java/de/febanhd/mlgrush/map/Map.java?ref=a7754fd5812c2f3a079d78b3b1d284e64b405179",
    "patch": "@@ -1,13 +1,11 @@\n package de.febanhd.mlgrush.map;\n \n import com.google.common.collect.Lists;\n-import com.sun.javafx.collections.MapListenerHelper;\n import de.febanhd.mlgrush.MLGRush;\n import de.febanhd.mlgrush.map.elements.BedObject;\n import de.febanhd.mlgrush.util.Cuboid;\n import lombok.Getter;\n import org.bukkit.Bukkit;\n-import org.bukkit.Effect;\n import org.bukkit.Location;\n import org.bukkit.Material;\n import org.bukkit.block.Block;"
  },
  {
    "sha": "7f2f2241e15b2488c391d810f603d97a8c60df49",
    "filename": "src/main/java/de/febanhd/mlgrush/nms/NMSUtil.java",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/FebbanHD123/MLGRush/blob/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/nms/NMSUtil.java",
    "raw_url": "https://github.com/FebbanHD123/MLGRush/raw/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/java/de/febanhd/mlgrush/nms/NMSUtil.java",
    "contents_url": "https://api.github.com/repos/FebbanHD123/MLGRush/contents/src/main/java/de/febanhd/mlgrush/nms/NMSUtil.java?ref=a7754fd5812c2f3a079d78b3b1d284e64b405179",
    "patch": "@@ -3,18 +3,15 @@\n import de.febanhd.mlgrush.MLGRush;\n import de.febanhd.mlgrush.game.lobby.LobbyHandler;\n import net.md_5.bungee.api.ChatMessageType;\n-import net.md_5.bungee.api.chat.BaseComponent;\n import net.md_5.bungee.api.chat.TextComponent;\n import net.minecraft.server.v1_8_R3.NBTTagCompound;\n import org.bukkit.Bukkit;\n import org.bukkit.Location;\n import org.bukkit.block.Block;\n-import org.bukkit.craftbukkit.v1_8_R3.block.CraftBlock;\n import org.bukkit.craftbukkit.v1_8_R3.entity.CraftEntity;\n import org.bukkit.entity.Entity;\n import org.bukkit.entity.EntityType;\n import org.bukkit.entity.Player;\n-import org.bukkit.inventory.ItemStack;\n \n import java.lang.reflect.Field;\n import java.lang.reflect.InvocationTargetException;"
  },
  {
    "sha": "1d343e62c46916edf23aca9498ce65238bcf3d61",
    "filename": "src/main/resources/config.yml",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/FebbanHD123/MLGRush/blob/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/resources/config.yml",
    "raw_url": "https://github.com/FebbanHD123/MLGRush/raw/a7754fd5812c2f3a079d78b3b1d284e64b405179/src/main/resources/config.yml",
    "contents_url": "https://api.github.com/repos/FebbanHD123/MLGRush/contents/src/main/resources/config.yml?ref=a7754fd5812c2f3a079d78b3b1d284e64b405179",
    "patch": "@@ -13,6 +13,15 @@ queue_entity_type: ENDER_CRYSTAL\n #The time in seconds when you cannot move\n no_move_time: 1.5\n \n+# The power of the knockback enchantment on the stick\n+knockback-amplifier: 1\n+\n+# Whether players get damage in a round when fighting with a pickaxe, getting fall damage, etc.\n+# If set to 'true', players will only see the damage animation, but will keep their 20HP\n+# so they cannot die from hit damage\n+# If set to 'false', players might die from fall damage\n+no-damage: true\n+\n #Blocks per Tick which will place\n map_generation.spawningrate: 13\n "
  }
]
