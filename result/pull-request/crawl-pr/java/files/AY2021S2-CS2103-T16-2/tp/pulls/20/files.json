[
  {
    "sha": "442d9132ea32808ad980df4bd233b359f76341a7",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/gradle/wrapper/gradle-wrapper.properties?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -1,5 +1,5 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-5.2.1-bin.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.8.3-bin.zip\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists"
  },
  {
    "sha": "35b91210653acce3d0346997b340fac0a90140cf",
    "filename": "src/main/java/seedu/address/logic/commands/EditCommand.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/commands/EditCommand.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/commands/EditCommand.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/commands/EditCommand.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -24,6 +24,7 @@\n import seedu.address.model.person.Name;\n import seedu.address.model.person.Person;\n import seedu.address.model.person.Phone;\n+import seedu.address.model.person.Remark;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -98,8 +99,9 @@ private static Person createEditedPerson(Person personToEdit, EditPersonDescript\n         Email updatedEmail = editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());\n         Address updatedAddress = editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());\n         Set<Tag> updatedTags = editPersonDescriptor.getTags().orElse(personToEdit.getTags());\n+        Remark updatedRemark = personToEdit.getRemark();\n \n-        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);\n+        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedRemark, updatedTags);\n     }\n \n     @Override"
  },
  {
    "sha": "4d43cce16c38fbeab275a961a304a14fd52a628f",
    "filename": "src/main/java/seedu/address/logic/commands/RemarkCommand.java",
    "status": "added",
    "additions": 91,
    "deletions": 0,
    "changes": 91,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/commands/RemarkCommand.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/commands/RemarkCommand.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/commands/RemarkCommand.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -0,0 +1,91 @@\n+package seedu.address.logic.commands;\n+\n+import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;\n+\n+import java.util.List;\n+\n+import seedu.address.commons.core.Messages;\n+import seedu.address.commons.core.index.Index;\n+import seedu.address.logic.commands.exceptions.CommandException;\n+import seedu.address.model.Model;\n+import seedu.address.model.person.Person;\n+import seedu.address.model.person.Remark;\n+\n+\n+/**\n+ * Changes the remark of an existing person in the address book.\n+ */\n+public class RemarkCommand extends Command {\n+\n+    public static final String COMMAND_WORD = \"remark\";\n+\n+    public static final String MESSAGE_USAGE = COMMAND_WORD + \": Edits the remark of the person identified \"\n+            + \"by the index number used in the last person listing. \"\n+            + \"Existing remark will be overwritten by the input.\\n\"\n+            + \"Parameters: INDEX (must be a positive integer) \"\n+            + \"r/ [REMARK]\\n\"\n+            + \"Example: \" + COMMAND_WORD + \" 1 \"\n+            + \"r/ Likes to swim.\";\n+\n+    public static final String MESSAGE_NOT_IMPLEMENTED_YET = \"Remark command not implemented yet\";\n+\n+    public static final String MESSAGE_ARGUMENTS = \"Index: %1$d, Remark: %2$s\";\n+\n+    public static final String MESSAGE_ADD_REMARK_SUCCESS = \"Added remark to Person: %1$s\";\n+    public static final String MESSAGE_DELETE_REMARK_SUCCESS = \"Removed remark from Person: %1$s\";\n+    private final Index index;\n+    private final Remark remark;\n+\n+    /**\n+     * @param index  of the person in the filtered person list to edit the remark\n+     * @param remark of the person to be updated to\n+     */\n+    public RemarkCommand(Index index, Remark remark) {\n+        this.index = index;\n+        this.remark = remark;\n+    }\n+\n+    @Override\n+    public CommandResult execute(Model model) throws CommandException {\n+        List<Person> lastShownList = model.getFilteredPersonList();\n+\n+        if (index.getZeroBased() >= lastShownList.size()) {\n+            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);\n+        }\n+\n+        Person personToEdit = lastShownList.get(index.getZeroBased());\n+        Person editedPerson = new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),\n+                personToEdit.getAddress(), remark, personToEdit.getTags());\n+        model.setPerson(personToEdit, editedPerson);\n+        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);\n+\n+        return new CommandResult(generateSuccessMessage(editedPerson));\n+    }\n+\n+    /**\n+     * Generates a command execution success message based on whether the remark is added to or removed from\n+     * {@code personToEdit}.\n+     */\n+    private String generateSuccessMessage(Person personToEdit) {\n+        String message = !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;\n+        return String.format(message, personToEdit);\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+        // short circuit if same object\n+        if (other == this) {\n+            return true;\n+        }\n+\n+        // instanceof handles nulls\n+        if (!(other instanceof RemarkCommand)) {\n+            return false;\n+        }\n+\n+        // state check\n+        RemarkCommand e = (RemarkCommand) other;\n+        return index.equals(e.index)\n+                && remark.equals(e.remark);\n+    }\n+}"
  },
  {
    "sha": "2303f400c58a4a8edeee8b68e9a27cb10ba965c3",
    "filename": "src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/parser/AddCommandParser.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -17,6 +17,7 @@\n import seedu.address.model.person.Name;\n import seedu.address.model.person.Person;\n import seedu.address.model.person.Phone;\n+import seedu.address.model.person.Remark;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -43,8 +44,9 @@ public AddCommand parse(String args) throws ParseException {\n         Email email = ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());\n         Address address = ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());\n         Set<Tag> tagList = ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));\n+        Remark remark = new Remark(\"\");\n \n-        Person person = new Person(name, phone, email, address, tagList);\n+        Person person = new Person(name, phone, email, address, remark, tagList);\n \n         return new AddCommand(person);\n     }"
  },
  {
    "sha": "d8af6bc86643ce60ffbec2dce0557390ed968387",
    "filename": "src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/parser/AddressBookParser.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -15,6 +15,7 @@\n import seedu.address.logic.commands.FindCommand;\n import seedu.address.logic.commands.HelpCommand;\n import seedu.address.logic.commands.ListCommand;\n+import seedu.address.logic.commands.RemarkCommand;\n import seedu.address.logic.parser.exceptions.ParseException;\n \n /**\n@@ -65,6 +66,9 @@ public Command parseCommand(String userInput) throws ParseException {\n         case ExitCommand.COMMAND_WORD:\n             return new ExitCommand();\n \n+        case RemarkCommand.COMMAND_WORD:\n+            return new RemarkCommandParser().parse(arguments);\n+\n         case HelpCommand.COMMAND_WORD:\n             return new HelpCommand();\n \n@@ -73,4 +77,5 @@ public Command parseCommand(String userInput) throws ParseException {\n         }\n     }\n \n+\n }"
  },
  {
    "sha": "96be13b3772054877f32a657a7ffd8f9c85ad303",
    "filename": "src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/parser/CliSyntax.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -11,5 +11,6 @@\n     public static final Prefix PREFIX_EMAIL = new Prefix(\"e/\");\n     public static final Prefix PREFIX_ADDRESS = new Prefix(\"a/\");\n     public static final Prefix PREFIX_TAG = new Prefix(\"t/\");\n+    public static final Prefix PREFIX_REMARK = new Prefix(\"r/\");\n \n }"
  },
  {
    "sha": "b96f9824946937362de1976124e16c141849602c",
    "filename": "src/main/java/seedu/address/logic/parser/RemarkCommandParser.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/parser/RemarkCommandParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/logic/parser/RemarkCommandParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/parser/RemarkCommandParser.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -0,0 +1,38 @@\n+package seedu.address.logic.parser;\n+\n+import static java.util.Objects.requireNonNull;\n+import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;\n+import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;\n+\n+import seedu.address.commons.core.index.Index;\n+import seedu.address.commons.exceptions.IllegalValueException;\n+import seedu.address.logic.commands.RemarkCommand;\n+import seedu.address.logic.parser.exceptions.ParseException;\n+import seedu.address.model.person.Remark;\n+\n+public class RemarkCommandParser implements Parser<RemarkCommand> {\n+    /**\n+     * Parses {@code userInput} into a command and returns it.\n+     *\n+     * @param args\n+     * @throws ParseException if {@code userInput} does not conform the expected format\n+     */\n+    @Override\n+    public RemarkCommand parse(String args) throws ParseException {\n+        requireNonNull(args);\n+        ArgumentMultimap argMultimap = ArgumentTokenizer.tokenize(args,\n+                PREFIX_REMARK);\n+\n+        Index index;\n+        try {\n+            index = ParserUtil.parseIndex(argMultimap.getPreamble());\n+        } catch (IllegalValueException ive) {\n+            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,\n+                    RemarkCommand.MESSAGE_USAGE), ive);\n+        }\n+\n+        String remark = argMultimap.getValue(PREFIX_REMARK).orElse(\"\");\n+\n+        return new RemarkCommand(index, new Remark(remark));\n+    }\n+}"
  },
  {
    "sha": "e7fee7a2fec6953c3cc3ca69b57b7ea68ea0d7ac",
    "filename": "src/main/java/seedu/address/model/person/Person.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/model/person/Person.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/model/person/Person.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/model/person/Person.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -22,17 +22,20 @@\n \n     // Data fields\n     private final Address address;\n+\n+    private final Remark remark;\n     private final Set<Tag> tags = new HashSet<>();\n \n     /**\n      * Every field must be present and not null.\n      */\n-    public Person(Name name, Phone phone, Email email, Address address, Set<Tag> tags) {\n+    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set<Tag> tags) {\n         requireAllNonNull(name, phone, email, address, tags);\n         this.name = name;\n         this.phone = phone;\n         this.email = email;\n         this.address = address;\n+        this.remark = remark;\n         this.tags.addAll(tags);\n     }\n \n@@ -52,6 +55,9 @@ public Address getAddress() {\n         return address;\n     }\n \n+    public Remark getRemark() {\n+        return remark;\n+    }\n     /**\n      * Returns an immutable tag set, which throws {@code UnsupportedOperationException}\n      * if modification is attempted."
  },
  {
    "sha": "5d9941699d771cb60bcf06f1234014d8734dd21e",
    "filename": "src/main/java/seedu/address/model/person/Remark.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/model/person/Remark.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/model/person/Remark.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/model/person/Remark.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -0,0 +1,37 @@\n+package seedu.address.model.person;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+/**\n+ * Represents a Person's remark in the address book.\n+ * Guarantees: immutable; is always valid\n+ */\n+public class Remark {\n+    public final String value;\n+\n+    /**\n+     * Remark\n+     * @param remark\n+     */\n+    public Remark(String remark) {\n+        requireNonNull(remark);\n+        value = remark;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return value;\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+        return other == this // short circuit if same object\n+                || (other instanceof Remark // instanceof handles nulls\n+                && value.equals(((Remark) other).value)); // state check\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return value.hashCode();\n+    }\n+}"
  },
  {
    "sha": "1a593f6f05ba913c541c18e81d266cc1d2fd7a7a",
    "filename": "src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/model/util/SampleDataUtil.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -11,6 +11,7 @@\n import seedu.address.model.person.Name;\n import seedu.address.model.person.Person;\n import seedu.address.model.person.Phone;\n+import seedu.address.model.person.Remark;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -20,22 +21,22 @@\n     public static Person[] getSamplePersons() {\n         return new Person[] {\n             new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),\n-                new Address(\"Blk 30 Geylang Street 29, #06-40\"),\n+                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Remark(\"\"),\n                 getTagSet(\"friends\")),\n             new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),\n-                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),\n+                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Remark(\"\"),\n                 getTagSet(\"colleagues\", \"friends\")),\n             new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),\n-                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),\n+                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"\"),\n                 getTagSet(\"neighbours\")),\n             new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),\n-                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),\n+                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Remark(\"\"),\n                 getTagSet(\"family\")),\n             new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),\n-                new Address(\"Blk 47 Tampines Street 20, #17-35\"),\n+                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"\"),\n                 getTagSet(\"classmates\")),\n             new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),\n-                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),\n+                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"\"),\n                 getTagSet(\"colleagues\"))\n         };\n     }"
  },
  {
    "sha": "410e72198c586a0b2ae00ec62c601e8b7e9d3f57",
    "filename": "src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/storage/JsonAdaptedPerson.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -15,6 +15,7 @@\n import seedu.address.model.person.Name;\n import seedu.address.model.person.Person;\n import seedu.address.model.person.Phone;\n+import seedu.address.model.person.Remark;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -28,6 +29,7 @@\n     private final String phone;\n     private final String email;\n     private final String address;\n+    private final String remark;\n     private final List<JsonAdaptedTag> tagged = new ArrayList<>();\n \n     /**\n@@ -36,11 +38,13 @@\n     @JsonCreator\n     public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,\n             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,\n+            @JsonProperty(\"remark\") String remark,\n             @JsonProperty(\"tagged\") List<JsonAdaptedTag> tagged) {\n         this.name = name;\n         this.phone = phone;\n         this.email = email;\n         this.address = address;\n+        this.remark = remark;\n         if (tagged != null) {\n             this.tagged.addAll(tagged);\n         }\n@@ -54,6 +58,7 @@ public JsonAdaptedPerson(Person source) {\n         phone = source.getPhone().value;\n         email = source.getEmail().value;\n         address = source.getAddress().value;\n+        remark = source.getRemark().value;\n         tagged.addAll(source.getTags().stream()\n                 .map(JsonAdaptedTag::new)\n                 .collect(Collectors.toList()));\n@@ -103,7 +108,9 @@ public Person toModelType() throws IllegalValueException {\n         final Address modelAddress = new Address(address);\n \n         final Set<Tag> modelTags = new HashSet<>(personTags);\n-        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);\n+\n+        final Remark modelRemark = new Remark(remark);\n+        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags);\n     }\n \n }"
  },
  {
    "sha": "0c2c79b079835ccc4c0431c7181fd31ecd618eda",
    "filename": "src/main/java/seedu/address/ui/PersonCard.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/ui/PersonCard.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/java/seedu/address/ui/PersonCard.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/ui/PersonCard.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -39,6 +39,8 @@\n     @FXML\n     private Label email;\n     @FXML\n+    private Label remark;\n+    @FXML\n     private FlowPane tags;\n \n     /**\n@@ -52,6 +54,7 @@ public PersonCard(Person person, int displayedIndex) {\n         phone.setText(person.getPhone().value);\n         address.setText(person.getAddress().value);\n         email.setText(person.getEmail().value);\n+        remark.setText(person.getRemark().value);\n         person.getTags().stream()\n                 .sorted(Comparator.comparing(tag -> tag.tagName))\n                 .forEach(tag -> tags.getChildren().add(new Label(tag.tagName)));"
  },
  {
    "sha": "d1a7eb614f8352b847c07754be9b80cd299dd51e",
    "filename": "src/main/resources/view/PersonListCard.fxml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/resources/view/PersonListCard.fxml",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/main/resources/view/PersonListCard.fxml",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/resources/view/PersonListCard.fxml?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -31,6 +31,7 @@\n       <Label fx:id=\"phone\" styleClass=\"cell_small_label\" text=\"\\$phone\" />\n       <Label fx:id=\"address\" styleClass=\"cell_small_label\" text=\"\\$address\" />\n       <Label fx:id=\"email\" styleClass=\"cell_small_label\" text=\"\\$email\" />\n+      <Label fx:id=\"remark\" styleClass=\"cell_small_label\" text=\"\\$remark\" />\n     </VBox>\n   </GridPane>\n </HBox>"
  },
  {
    "sha": "050ef7487c54417f3a15d9acfee1910423ccb938",
    "filename": "src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -3,11 +3,13 @@\n     \"name\": \"Valid Person\",\n     \"phone\": \"9482424\",\n     \"email\": \"hans@example.com\",\n-    \"address\": \"4th street\"\n+    \"address\": \"4th street\",\n+    \"remark\": \"anything\"\n   }, {\n     \"name\": \"Person With Invalid Phone Field\",\n     \"phone\": \"948asdf2424\",\n     \"email\": \"hans@example.com\",\n-    \"address\": \"4th street\"\n+    \"address\": \"4th street\",\n+    \"remark\": \"anything\"\n   } ]\n }"
  },
  {
    "sha": "0cc699e21e780f4dcc7d562c54a53d0dabeff08e",
    "filename": "src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -4,11 +4,13 @@\n     \"phone\": \"94351253\",\n     \"email\": \"alice@example.com\",\n     \"address\": \"123, Jurong West Ave 6, #08-111\",\n+    \"remark\": \"yooo\",\n     \"tagged\": [ \"friends\" ]\n   }, {\n     \"name\": \"Alice Pauline\",\n     \"phone\": \"94351253\",\n     \"email\": \"pauline@example.com\",\n+    \"remark\": \"yooo\",\n     \"address\": \"4th street\"\n   } ]\n }"
  },
  {
    "sha": "a21ef18a763e509ff080fc0c34865d8085755ea9",
    "filename": "src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -5,42 +5,49 @@\n     \"phone\" : \"94351253\",\n     \"email\" : \"alice@example.com\",\n     \"address\" : \"123, Jurong West Ave 6, #08-111\",\n+    \"remark\": \"yooo\",\n     \"tagged\" : [ \"friends\" ]\n   }, {\n     \"name\" : \"Benson Meier\",\n     \"phone\" : \"98765432\",\n     \"email\" : \"johnd@example.com\",\n     \"address\" : \"311, Clementi Ave 2, #02-25\",\n+    \"remark\": \"yooo\",\n     \"tagged\" : [ \"owesMoney\", \"friends\" ]\n   }, {\n     \"name\" : \"Carl Kurz\",\n     \"phone\" : \"95352563\",\n     \"email\" : \"heinz@example.com\",\n     \"address\" : \"wall street\",\n+    \"remark\": \"yooo\",\n     \"tagged\" : [ ]\n   }, {\n     \"name\" : \"Daniel Meier\",\n     \"phone\" : \"87652533\",\n     \"email\" : \"cornelia@example.com\",\n     \"address\" : \"10th street\",\n+    \"remark\": \"yooo\",\n     \"tagged\" : [ \"friends\" ]\n   }, {\n     \"name\" : \"Elle Meyer\",\n     \"phone\" : \"9482224\",\n     \"email\" : \"werner@example.com\",\n     \"address\" : \"michegan ave\",\n+    \"remark\": \"yooo\",\n     \"tagged\" : [ ]\n   }, {\n     \"name\" : \"Fiona Kunz\",\n     \"phone\" : \"9482427\",\n     \"email\" : \"lydia@example.com\",\n     \"address\" : \"little tokyo\",\n+    \"remark\": \"yooo\",\n     \"tagged\" : [ ]\n   }, {\n     \"name\" : \"George Best\",\n     \"phone\" : \"9482442\",\n     \"email\" : \"anna@example.com\",\n     \"address\" : \"4th street\",\n+    \"remark\": \"yooo\",\n     \"tagged\" : [ ]\n   } ]\n }"
  },
  {
    "sha": "850d303af1a52ff10d322d07d63d199c27898946",
    "filename": "src/test/java/seedu/address/logic/commands/RemarkCommandTest.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/java/seedu/address/logic/commands/RemarkCommandTest.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/java/seedu/address/logic/commands/RemarkCommandTest.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/java/seedu/address/logic/commands/RemarkCommandTest.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -0,0 +1,38 @@\n+package seedu.address.logic.commands;\n+\n+import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;\n+import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;\n+import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import seedu.address.model.AddressBook;\n+import seedu.address.model.Model;\n+import seedu.address.model.ModelManager;\n+import seedu.address.model.UserPrefs;\n+import seedu.address.model.person.Person;\n+import seedu.address.model.person.Remark;\n+import seedu.address.testutil.PersonBuilder;\n+\n+class RemarkCommandTest {\n+\n+    private static final String REMARK_STUB = \"Some remark\";\n+\n+    private Model model = new ModelManager(getTypicalAddressBook(), new UserPrefs());\n+\n+    @Test\n+    void execute_addRemarkUnfilteredList_success() {\n+        Person firstPerson = model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());\n+        Person editedPerson = new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();\n+\n+        RemarkCommand remarkCommand = new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));\n+\n+        String expectedMessage = String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);\n+\n+        Model expectedModel = new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());\n+        expectedModel.setPerson(firstPerson, editedPerson);\n+\n+        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);\n+\n+    }\n+}"
  },
  {
    "sha": "481a3877929b5841459389e764335e32e476048e",
    "filename": "src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java",
    "status": "modified",
    "additions": 14,
    "deletions": 9,
    "changes": 23,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -28,6 +28,7 @@\n     private static final String VALID_PHONE = BENSON.getPhone().toString();\n     private static final String VALID_EMAIL = BENSON.getEmail().toString();\n     private static final String VALID_ADDRESS = BENSON.getAddress().toString();\n+    private static final String VALID_REMARK = \"anything remark something\";\n     private static final List<JsonAdaptedTag> VALID_TAGS = BENSON.getTags().stream()\n             .map(JsonAdaptedTag::new)\n             .collect(Collectors.toList());\n@@ -41,59 +42,63 @@ public void toModelType_validPersonDetails_returnsPerson() throws Exception {\n     @Test\n     public void toModelType_invalidName_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = Name.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullName_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,\n+                VALID_REMARK, VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_invalidPhone_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = Phone.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullPhone_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,\n+                VALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_invalidEmail_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = Email.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullEmail_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,\n+                VALID_REMARK, VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_invalidAddress_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = Address.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullAddress_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,\n+                null, VALID_REMARK, VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n@@ -103,7 +108,7 @@ public void toModelType_invalidTags_throwsIllegalValueException() {\n         List<JsonAdaptedTag> invalidTags = new ArrayList<>(VALID_TAGS);\n         invalidTags.add(new JsonAdaptedTag(INVALID_TAG));\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);\n+                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, invalidTags);\n         assertThrows(IllegalValueException.class, person::toModelType);\n     }\n "
  },
  {
    "sha": "960231a3fa7a5318e9e5d060dcf299725bae1ba1",
    "filename": "src/test/java/seedu/address/testutil/PersonBuilder.java",
    "status": "modified",
    "additions": 16,
    "deletions": 1,
    "changes": 17,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/java/seedu/address/testutil/PersonBuilder.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/063c1838d5c8729e8cec056bb0cb72cdc2853ba4/src/test/java/seedu/address/testutil/PersonBuilder.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/java/seedu/address/testutil/PersonBuilder.java?ref=063c1838d5c8729e8cec056bb0cb72cdc2853ba4",
    "patch": "@@ -8,6 +8,7 @@\n import seedu.address.model.person.Name;\n import seedu.address.model.person.Person;\n import seedu.address.model.person.Phone;\n+import seedu.address.model.person.Remark;\n import seedu.address.model.tag.Tag;\n import seedu.address.model.util.SampleDataUtil;\n \n@@ -20,11 +21,13 @@\n     public static final String DEFAULT_PHONE = \"85355255\";\n     public static final String DEFAULT_EMAIL = \"amy@gmail.com\";\n     public static final String DEFAULT_ADDRESS = \"123, Jurong West Ave 6, #08-111\";\n+    public static final String DEFAULT_REMARK = \"Something remark something\";\n \n     private Name name;\n     private Phone phone;\n     private Email email;\n     private Address address;\n+    private Remark remark;\n     private Set<Tag> tags;\n \n     /**\n@@ -36,6 +39,7 @@ public PersonBuilder() {\n         email = new Email(DEFAULT_EMAIL);\n         address = new Address(DEFAULT_ADDRESS);\n         tags = new HashSet<>();\n+        remark = new Remark(DEFAULT_REMARK);\n     }\n \n     /**\n@@ -47,6 +51,7 @@ public PersonBuilder(Person personToCopy) {\n         email = personToCopy.getEmail();\n         address = personToCopy.getAddress();\n         tags = new HashSet<>(personToCopy.getTags());\n+        remark = personToCopy.getRemark();\n     }\n \n     /**\n@@ -89,8 +94,18 @@ public PersonBuilder withEmail(String email) {\n         return this;\n     }\n \n+    /**\n+     * Set the remark of the person\n+     * @param remark\n+     * @return\n+     */\n+    public PersonBuilder withRemark(String remark) {\n+        this.remark = new Remark(remark);\n+        return this;\n+    }\n+\n     public Person build() {\n-        return new Person(name, phone, email, address, tags);\n+        return new Person(name, phone, email, address, remark, tags);\n     }\n \n }"
  }
]
