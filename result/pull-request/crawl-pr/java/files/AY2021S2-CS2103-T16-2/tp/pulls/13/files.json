[
  {
    "sha": "442b4ec4ec35137b1092f6fef3dd3851834b4414",
    "filename": "src/main/java/seedu/address/logic/commands/EditCommand.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/commands/EditCommand.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/commands/EditCommand.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/commands/EditCommand.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -19,11 +19,7 @@\n import seedu.address.commons.util.CollectionUtil;\n import seedu.address.logic.commands.exceptions.CommandException;\n import seedu.address.model.Model;\n-import seedu.address.model.person.Address;\n-import seedu.address.model.person.Email;\n-import seedu.address.model.person.Name;\n-import seedu.address.model.person.Person;\n-import seedu.address.model.person.Phone;\n+import seedu.address.model.person.*;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -98,8 +94,10 @@ private static Person createEditedPerson(Person personToEdit, EditPersonDescript\n         Email updatedEmail = editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());\n         Address updatedAddress = editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());\n         Set<Tag> updatedTags = editPersonDescriptor.getTags().orElse(personToEdit.getTags());\n+        //Dont change the edit remark for now.\n+        Remark remark = personToEdit.getRemark();\n \n-        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);\n+        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, remark);\n     }\n \n     @Override"
  },
  {
    "sha": "d77473004628352e840787171ce87c7ce866dd51",
    "filename": "src/main/java/seedu/address/logic/commands/RemarkCommand.java",
    "status": "added",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/commands/RemarkCommand.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/commands/RemarkCommand.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/commands/RemarkCommand.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -0,0 +1,87 @@\n+package seedu.address.logic.commands;\n+\n+import seedu.address.commons.core.Messages;\n+import seedu.address.commons.core.index.Index;\n+import seedu.address.logic.commands.exceptions.CommandException;\n+import seedu.address.model.Model;\n+import seedu.address.model.person.Person;\n+import seedu.address.model.person.Remark;\n+\n+import java.util.List;\n+\n+import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;\n+import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;\n+import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;\n+\n+/**\n+     * Changes the remark of an existing person in the address book.\n+     */\n+    public class RemarkCommand extends Command {\n+\n+        public static final String MESSAGE_ARGUMENTS = \"Index: %1$d, Remark: %2$s\";\n+        public static final String COMMAND_WORD = \"remark\";\n+\n+        public static final String MESSAGE_USAGE = COMMAND_WORD + \":\" + \" adds a remark under a person at a certain index. \"\n+                + \" Parameters : \\n\"\n+                + \"1 \"\n+                + PREFIX_REMARK\n+                + \"It's the anime man\";\n+\n+        private final Index index;\n+        private final Remark remark;\n+\n+        public static final String MESSAGE_ADD_REMARK_SUCCESS = \"MARKED SUCCESS\";\n+        public static final String MESSAGE_DELETE_REMARK_SUCCESS = \"MESSAGE DELETED!\";\n+\n+        /**\n+         * @param index of the person in the filtered person list to edit the remark\n+         * @param remark of the person to be updated to\n+         */\n+        public RemarkCommand(Index index, Remark remark) {\n+            requireAllNonNull(index, remark);\n+\n+            this.index = index;\n+            this.remark = remark;\n+        }\n+        @Override\n+        public CommandResult execute(Model model) throws CommandException {\n+            List<Person> lastShownList = model.getFilteredPersonList();\n+\n+            if (index.getZeroBased() >= lastShownList.size()) {\n+                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);\n+            }\n+\n+            Person personToEdit = lastShownList.get(index.getZeroBased());\n+            Person editedPerson = new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),\n+                    personToEdit.getAddress(),personToEdit.getTags(), remark);\n+\n+            model.setPerson(personToEdit, editedPerson);\n+            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);\n+\n+            return new CommandResult(generateSuccessMessage(editedPerson));\n+        }\n+\n+        private String generateSuccessMessage(Person personToEdit) {\n+            String message = !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;\n+            return String.format(message, personToEdit);\n+        }\n+\n+        @Override\n+        public boolean equals(Object other) {\n+            // short circuit if same object\n+            if (other == this) {\n+                return true;\n+            }\n+\n+            // instanceof handles nulls\n+            if (!(other instanceof RemarkCommand)) {\n+                return false;\n+            }\n+\n+            // state check\n+            RemarkCommand e = (RemarkCommand) other;\n+            return index.equals(e.index)\n+                    && remark.equals(e.remark);\n+        }\n+    }\n+"
  },
  {
    "sha": "7417979168d292faa01079c826b8b6f3f8be8e5d",
    "filename": "src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "status": "modified",
    "additions": 5,
    "deletions": 12,
    "changes": 17,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/parser/AddCommandParser.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -1,22 +1,14 @@\n package seedu.address.logic.parser;\n \n import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;\n-import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;\n-import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;\n-import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;\n-import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;\n-import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;\n+import static seedu.address.logic.parser.CliSyntax.*;\n \n import java.util.Set;\n import java.util.stream.Stream;\n \n import seedu.address.logic.commands.AddCommand;\n import seedu.address.logic.parser.exceptions.ParseException;\n-import seedu.address.model.person.Address;\n-import seedu.address.model.person.Email;\n-import seedu.address.model.person.Name;\n-import seedu.address.model.person.Person;\n-import seedu.address.model.person.Phone;\n+import seedu.address.model.person.*;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -31,7 +23,7 @@\n      */\n     public AddCommand parse(String args) throws ParseException {\n         ArgumentMultimap argMultimap =\n-                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);\n+                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_REMARK);\n \n         if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)\n                 || !argMultimap.getPreamble().isEmpty()) {\n@@ -43,8 +35,9 @@ public AddCommand parse(String args) throws ParseException {\n         Email email = ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());\n         Address address = ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());\n         Set<Tag> tagList = ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));\n+        Remark remark = ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));\n \n-        Person person = new Person(name, phone, email, address, tagList);\n+        Person person = new Person(name, phone, email, address, tagList, remark);\n \n         return new AddCommand(person);\n     }"
  },
  {
    "sha": "0c75474bea73bbded2d6befd8fe7d4c5b7f40092",
    "filename": "src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "status": "modified",
    "additions": 4,
    "deletions": 9,
    "changes": 13,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/parser/AddressBookParser.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -6,15 +6,7 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n-import seedu.address.logic.commands.AddCommand;\n-import seedu.address.logic.commands.ClearCommand;\n-import seedu.address.logic.commands.Command;\n-import seedu.address.logic.commands.DeleteCommand;\n-import seedu.address.logic.commands.EditCommand;\n-import seedu.address.logic.commands.ExitCommand;\n-import seedu.address.logic.commands.FindCommand;\n-import seedu.address.logic.commands.HelpCommand;\n-import seedu.address.logic.commands.ListCommand;\n+import seedu.address.logic.commands.*;\n import seedu.address.logic.parser.exceptions.ParseException;\n \n /**\n@@ -68,6 +60,9 @@ public Command parseCommand(String userInput) throws ParseException {\n         case HelpCommand.COMMAND_WORD:\n             return new HelpCommand();\n \n+        case RemarkCommand.COMMAND_WORD:\n+            return new RemarkCommandParser().parse(arguments);\n+\n         default:\n             throw new ParseException(MESSAGE_UNKNOWN_COMMAND);\n         }"
  },
  {
    "sha": "96be13b3772054877f32a657a7ffd8f9c85ad303",
    "filename": "src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/parser/CliSyntax.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -11,5 +11,6 @@\n     public static final Prefix PREFIX_EMAIL = new Prefix(\"e/\");\n     public static final Prefix PREFIX_ADDRESS = new Prefix(\"a/\");\n     public static final Prefix PREFIX_TAG = new Prefix(\"t/\");\n+    public static final Prefix PREFIX_REMARK = new Prefix(\"r/\");\n \n }"
  },
  {
    "sha": "e7a67febc05fe41fd0a404681fb648ed7880262f",
    "filename": "src/main/java/seedu/address/logic/parser/ParserUtil.java",
    "status": "modified",
    "additions": 11,
    "deletions": 4,
    "changes": 15,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/parser/ParserUtil.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/parser/ParserUtil.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/parser/ParserUtil.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -9,10 +9,7 @@\n import seedu.address.commons.core.index.Index;\n import seedu.address.commons.util.StringUtil;\n import seedu.address.logic.parser.exceptions.ParseException;\n-import seedu.address.model.person.Address;\n-import seedu.address.model.person.Email;\n-import seedu.address.model.person.Name;\n-import seedu.address.model.person.Phone;\n+import seedu.address.model.person.*;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -121,4 +118,14 @@ public static Tag parseTag(String tag) throws ParseException {\n         }\n         return tagSet;\n     }\n+\n+    public static Remark parseRemark(String args) throws ParseException{\n+        requireNonNull(args);\n+        String trimmedString = args.trim();\n+        if (!Remark.isValidRemark(trimmedString)) {\n+            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);\n+        } else {\n+            return new Remark(trimmedString);\n+        }\n+    }\n }"
  },
  {
    "sha": "e871d23750df3896b8e356d601300615af38d6a1",
    "filename": "src/main/java/seedu/address/logic/parser/RemarkCommandParser.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/parser/RemarkCommandParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/logic/parser/RemarkCommandParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/logic/parser/RemarkCommandParser.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -0,0 +1,32 @@\n+package seedu.address.logic.parser;\n+\n+import seedu.address.commons.core.index.Index;\n+import seedu.address.commons.exceptions.IllegalValueException;\n+import seedu.address.logic.commands.Command;\n+import seedu.address.logic.commands.RemarkCommand;\n+import seedu.address.logic.parser.exceptions.ParseException;\n+import seedu.address.model.person.Remark;\n+\n+import static java.util.Objects.requireNonNull;\n+import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;\n+import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;\n+\n+public class RemarkCommandParser implements Parser {\n+    public RemarkCommand parse(String args) throws ParseException {\n+        requireNonNull(args);\n+        ArgumentMultimap argMultimap = ArgumentTokenizer.tokenize(args,\n+                PREFIX_REMARK);\n+\n+        Index index;\n+        try {\n+            index = ParserUtil.parseIndex(argMultimap.getPreamble());\n+        } catch (IllegalValueException ive) {\n+            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,\n+                    RemarkCommand.MESSAGE_USAGE), ive);\n+        }\n+\n+        Remark remark = ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));\n+\n+        return new RemarkCommand(index, remark);\n+    }\n+}"
  },
  {
    "sha": "8fb9ceecc3e48cd6cefea222b9b74d497007032c",
    "filename": "src/main/java/seedu/address/model/person/Person.java",
    "status": "modified",
    "additions": 11,
    "deletions": 4,
    "changes": 15,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/model/person/Person.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/model/person/Person.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/model/person/Person.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -19,6 +19,7 @@\n     private final Name name;\n     private final Phone phone;\n     private final Email email;\n+    private final Remark remark;\n \n     // Data fields\n     private final Address address;\n@@ -27,13 +28,14 @@\n     /**\n      * Every field must be present and not null.\n      */\n-    public Person(Name name, Phone phone, Email email, Address address, Set<Tag> tags) {\n-        requireAllNonNull(name, phone, email, address, tags);\n+    public Person(Name name, Phone phone, Email email, Address address, Set<Tag> tag, Remark remark) {\n+        requireAllNonNull(name, phone, email, address, tag, remark);\n         this.name = name;\n         this.phone = phone;\n         this.email = email;\n         this.address = address;\n-        this.tags.addAll(tags);\n+        this.tags.addAll(tag);\n+        this.remark = remark;\n     }\n \n     public Name getName() {\n@@ -52,6 +54,10 @@ public Address getAddress() {\n         return address;\n     }\n \n+    public Remark getRemark() {\n+        return remark;\n+    }\n+\n     /**\n      * Returns an immutable tag set, which throws {@code UnsupportedOperationException}\n      * if modification is attempted.\n@@ -92,7 +98,8 @@ public boolean equals(Object other) {\n                 && otherPerson.getPhone().equals(getPhone())\n                 && otherPerson.getEmail().equals(getEmail())\n                 && otherPerson.getAddress().equals(getAddress())\n-                && otherPerson.getTags().equals(getTags());\n+                && otherPerson.getTags().equals(getTags())\n+                && otherPerson.getRemark().equals(getRemark());\n     }\n \n     @Override"
  },
  {
    "sha": "94cd751e94be19cef0c276d3c19e29069c257077",
    "filename": "src/main/java/seedu/address/model/person/Remark.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/model/person/Remark.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/model/person/Remark.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/model/person/Remark.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -0,0 +1,57 @@\n+package seedu.address.model.person;\n+\n+import static java.util.Objects.requireNonNull;\n+import static seedu.address.commons.util.AppUtil.checkArgument;\n+\n+/**\n+ * Represents a Person's remarks in the address book.\n+ * Guarantees: immutable; is valid as declared in {@link #isValidRemark(String)}\n+ */\n+public class Remark {\n+\n+    public static final String MESSAGE_CONSTRAINTS = \"Remark can take any values, and it should not be blank\";\n+\n+    /*\n+     * The first character of the address must not be a whitespace,\n+     * otherwise \" \" (a blank string) becomes a valid input.\n+     */\n+    public static final String VALIDATION_REGEX = \"[^\\\\s].*|\";\n+\n+    public final String value;\n+\n+    /**\n+     * Constructs an {@code Address}.\n+     *\n+     * @param remark A valid address.\n+     */\n+    public Remark(String remark) {\n+        requireNonNull(remark);\n+        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);\n+        value = remark;\n+    }\n+\n+    /**\n+     * Returns true if a given string is a valid email.\n+     */\n+    public static boolean isValidRemark(String test) {\n+        return test.matches(VALIDATION_REGEX);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return value;\n+    }\n+\n+    @Override\n+    public boolean equals(Object other) {\n+        return other == this // short circuit if same object\n+                || (other instanceof Remark // instanceof handles nulls\n+                && value.equals(((Remark) other).value)); // state check\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return value.hashCode();\n+    }\n+\n+}"
  },
  {
    "sha": "dbc6216b22c736fc25db2a545eddcadf0283b29f",
    "filename": "src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "status": "modified",
    "additions": 8,
    "deletions": 11,
    "changes": 19,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/model/util/SampleDataUtil.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -6,37 +6,34 @@\n \n import seedu.address.model.AddressBook;\n import seedu.address.model.ReadOnlyAddressBook;\n-import seedu.address.model.person.Address;\n-import seedu.address.model.person.Email;\n-import seedu.address.model.person.Name;\n-import seedu.address.model.person.Person;\n-import seedu.address.model.person.Phone;\n+import seedu.address.model.person.*;\n import seedu.address.model.tag.Tag;\n \n /**\n  * Contains utility methods for populating {@code AddressBook} with sample data.\n  */\n public class SampleDataUtil {\n     public static Person[] getSamplePersons() {\n+        Remark remark = new Remark(\"\");\n         return new Person[] {\n             new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),\n                 new Address(\"Blk 30 Geylang Street 29, #06-40\"),\n-                getTagSet(\"friends\")),\n+                getTagSet(\"friends\"), remark),\n             new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),\n                 new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),\n-                getTagSet(\"colleagues\", \"friends\")),\n+                getTagSet(\"colleagues\", \"friends\"), remark),\n             new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),\n                 new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),\n-                getTagSet(\"neighbours\")),\n+                getTagSet(\"neighbours\"), remark),\n             new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),\n                 new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),\n-                getTagSet(\"family\")),\n+                getTagSet(\"family\"), remark),\n             new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),\n                 new Address(\"Blk 47 Tampines Street 20, #17-35\"),\n-                getTagSet(\"classmates\")),\n+                getTagSet(\"classmates\"), remark),\n             new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),\n                 new Address(\"Blk 45 Aljunied Street 85, #11-31\"),\n-                getTagSet(\"colleagues\"))\n+                getTagSet(\"colleagues\"), remark)\n         };\n     }\n "
  },
  {
    "sha": "a3f531ba83bdbe34902a66b83acf59846ff4411d",
    "filename": "src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "status": "modified",
    "additions": 15,
    "deletions": 6,
    "changes": 21,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/storage/JsonAdaptedPerson.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -10,11 +10,7 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n \n import seedu.address.commons.exceptions.IllegalValueException;\n-import seedu.address.model.person.Address;\n-import seedu.address.model.person.Email;\n-import seedu.address.model.person.Name;\n-import seedu.address.model.person.Person;\n-import seedu.address.model.person.Phone;\n+import seedu.address.model.person.*;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -28,6 +24,7 @@\n     private final String phone;\n     private final String email;\n     private final String address;\n+    private final String remark;\n     private final List<JsonAdaptedTag> tagged = new ArrayList<>();\n \n     /**\n@@ -36,11 +33,13 @@\n     @JsonCreator\n     public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,\n             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,\n+            @JsonProperty(\"remark\") String remark,\n             @JsonProperty(\"tagged\") List<JsonAdaptedTag> tagged) {\n         this.name = name;\n         this.phone = phone;\n         this.email = email;\n         this.address = address;\n+        this.remark = remark;\n         if (tagged != null) {\n             this.tagged.addAll(tagged);\n         }\n@@ -54,6 +53,7 @@ public JsonAdaptedPerson(Person source) {\n         phone = source.getPhone().value;\n         email = source.getEmail().value;\n         address = source.getAddress().value;\n+        remark = source.getRemark().value;\n         tagged.addAll(source.getTags().stream()\n                 .map(JsonAdaptedTag::new)\n                 .collect(Collectors.toList()));\n@@ -100,10 +100,19 @@ public Person toModelType() throws IllegalValueException {\n         if (!Address.isValidAddress(address)) {\n             throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);\n         }\n+\n         final Address modelAddress = new Address(address);\n \n+        if (remark == null) {\n+            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));\n+        }\n+        if(!Remark.isValidRemark(remark)) {\n+            throw new IllegalValueException(Remark.MESSAGE_CONSTRAINTS);\n+        }\n+        final Remark modelRemark = new Remark(remark);\n+\n         final Set<Tag> modelTags = new HashSet<>(personTags);\n-        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);\n+        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelRemark);\n     }\n \n }"
  },
  {
    "sha": "4547baf311151e823793b86acbea99f079732a1c",
    "filename": "src/main/java/seedu/address/ui/PersonCard.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/ui/PersonCard.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/java/seedu/address/ui/PersonCard.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/java/seedu/address/ui/PersonCard.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -40,6 +40,8 @@\n     private Label email;\n     @FXML\n     private FlowPane tags;\n+    @FXML\n+    private Label remark;\n \n     /**\n      * Creates a {@code PersonCode} with the given {@code Person} and index to display.\n@@ -52,6 +54,7 @@ public PersonCard(Person person, int displayedIndex) {\n         phone.setText(person.getPhone().value);\n         address.setText(person.getAddress().value);\n         email.setText(person.getEmail().value);\n+        remark.setText(person.getRemark().value);\n         person.getTags().stream()\n                 .sorted(Comparator.comparing(tag -> tag.tagName))\n                 .forEach(tag -> tags.getChildren().add(new Label(tag.tagName)));"
  },
  {
    "sha": "d1a7eb614f8352b847c07754be9b80cd299dd51e",
    "filename": "src/main/resources/view/PersonListCard.fxml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/resources/view/PersonListCard.fxml",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/main/resources/view/PersonListCard.fxml",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/main/resources/view/PersonListCard.fxml?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -31,6 +31,7 @@\n       <Label fx:id=\"phone\" styleClass=\"cell_small_label\" text=\"\\$phone\" />\n       <Label fx:id=\"address\" styleClass=\"cell_small_label\" text=\"\\$address\" />\n       <Label fx:id=\"email\" styleClass=\"cell_small_label\" text=\"\\$email\" />\n+      <Label fx:id=\"remark\" styleClass=\"cell_small_label\" text=\"\\$remark\" />\n     </VBox>\n   </GridPane>\n </HBox>"
  },
  {
    "sha": "af82a20e33b20d2ebc35153230429746c2b9ce2e",
    "filename": "src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -4,11 +4,13 @@\n     \"phone\": \"94351253\",\n     \"email\": \"alice@example.com\",\n     \"address\": \"123, Jurong West Ave 6, #08-111\",\n+    \"remark\" : \"\",\n     \"tagged\": [ \"friends\" ]\n   }, {\n     \"name\": \"Alice Pauline\",\n     \"phone\": \"94351253\",\n     \"email\": \"pauline@example.com\",\n+    \"remark\": \"\",\n     \"address\": \"4th street\"\n   } ]\n }"
  },
  {
    "sha": "2ac17303fcad69acb79b63a8f82803a99ce5c05c",
    "filename": "src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -3,6 +3,7 @@\n     \"name\": \"Hans Muster\",\n     \"phone\": \"9482424\",\n     \"email\": \"invalid@email!3e\",\n-    \"address\": \"4th street\"\n+    \"address\": \"4th street\",\n+    \"remark\" : \"\"\n   } ]\n }"
  },
  {
    "sha": "12d54c48c3ac25453302236d2689db273679184e",
    "filename": "src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -5,42 +5,49 @@\n     \"phone\" : \"94351253\",\n     \"email\" : \"alice@example.com\",\n     \"address\" : \"123, Jurong West Ave 6, #08-111\",\n+    \"remark\" : \"She likes AadVarks\",\n     \"tagged\" : [ \"friends\" ]\n   }, {\n     \"name\" : \"Benson Meier\",\n     \"phone\" : \"98765432\",\n     \"email\" : \"johnd@example.com\",\n+    \"remark\" : \"He likes beer?\",\n     \"address\" : \"311, Clementi Ave 2, #02-25\",\n     \"tagged\" : [ \"owesMoney\", \"friends\" ]\n   }, {\n     \"name\" : \"Carl Kurz\",\n     \"phone\" : \"95352563\",\n     \"email\" : \"heinz@example.com\",\n     \"address\" : \"wall street\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ ]\n   }, {\n     \"name\" : \"Daniel Meier\",\n     \"phone\" : \"87652533\",\n     \"email\" : \"cornelia@example.com\",\n     \"address\" : \"10th street\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ \"friends\" ]\n   }, {\n     \"name\" : \"Elle Meyer\",\n     \"phone\" : \"9482224\",\n     \"email\" : \"werner@example.com\",\n     \"address\" : \"michegan ave\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ ]\n   }, {\n     \"name\" : \"Fiona Kunz\",\n     \"phone\" : \"9482427\",\n     \"email\" : \"lydia@example.com\",\n     \"address\" : \"little tokyo\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ ]\n   }, {\n     \"name\" : \"George Best\",\n     \"phone\" : \"9482442\",\n     \"email\" : \"anna@example.com\",\n     \"address\" : \"4th street\",\n+    \"remark\" : \"\",\n     \"tagged\" : [ ]\n   } ]\n }"
  },
  {
    "sha": "1d0c8272bc702d13e25711316b0a9e896686112c",
    "filename": "src/test/java/seedu/address/logic/commands/RemarkCommandTest.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/java/seedu/address/logic/commands/RemarkCommandTest.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/java/seedu/address/logic/commands/RemarkCommandTest.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/java/seedu/address/logic/commands/RemarkCommandTest.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -0,0 +1,44 @@\n+package seedu.address.logic.commands;\n+\n+\n+import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;\n+import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;\n+import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;\n+\n+\n+import org.junit.jupiter.api.Test;\n+\n+\n+import seedu.address.model.AddressBook;\n+import seedu.address.model.Model;\n+import seedu.address.model.ModelManager;\n+import seedu.address.model.UserPrefs;\n+import seedu.address.model.person.Person;\n+import seedu.address.model.person.Remark;\n+import seedu.address.testutil.PersonBuilder;\n+\n+\n+\n+class RemarkCommandTest {\n+\n+    private static final String REMARK_STUB = \"Some remark\";\n+\n+    private Model model = new ModelManager(getTypicalAddressBook(), new UserPrefs());\n+\n+\n+    @Test\n+    public void execute_addRemarkUnfilteredList_success() {\n+        final Remark remark = new Remark(\"Some remark\");\n+        Person firstPerson = model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());\n+        Person editedPerson = new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();\n+\n+        RemarkCommand remarkCommand = new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));\n+\n+        String expectedMessage = String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);\n+\n+        Model expectedModel = new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());\n+        expectedModel.setPerson(firstPerson, editedPerson);\n+\n+        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);\n+    }\n+}"
  },
  {
    "sha": "74f14b9db52aa432b68aef1b93469f71084735fe",
    "filename": "src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java",
    "status": "modified",
    "additions": 10,
    "deletions": 9,
    "changes": 19,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -28,6 +28,7 @@\n     private static final String VALID_PHONE = BENSON.getPhone().toString();\n     private static final String VALID_EMAIL = BENSON.getEmail().toString();\n     private static final String VALID_ADDRESS = BENSON.getAddress().toString();\n+    private static final String VALID_REMARK = BENSON.getRemark().toString();\n     private static final List<JsonAdaptedTag> VALID_TAGS = BENSON.getTags().stream()\n             .map(JsonAdaptedTag::new)\n             .collect(Collectors.toList());\n@@ -41,59 +42,59 @@ public void toModelType_validPersonDetails_returnsPerson() throws Exception {\n     @Test\n     public void toModelType_invalidName_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK,VALID_TAGS);\n         String expectedMessage = Name.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullName_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,VALID_REMARK, VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_invalidPhone_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,VALID_REMARK , VALID_TAGS);\n         String expectedMessage = Phone.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullPhone_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,VALID_REMARK, VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_invalidEmail_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,VALID_REMARK, VALID_TAGS);\n         String expectedMessage = Email.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullEmail_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,VALID_REMARK , VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_invalidAddress_throwsIllegalValueException() {\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);\n+                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,VALID_REMARK, VALID_TAGS);\n         String expectedMessage = Address.MESSAGE_CONSTRAINTS;\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n \n     @Test\n     public void toModelType_nullAddress_throwsIllegalValueException() {\n-        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);\n+        JsonAdaptedPerson person = new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_REMARK,VALID_TAGS);\n         String expectedMessage = String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());\n         assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);\n     }\n@@ -103,7 +104,7 @@ public void toModelType_invalidTags_throwsIllegalValueException() {\n         List<JsonAdaptedTag> invalidTags = new ArrayList<>(VALID_TAGS);\n         invalidTags.add(new JsonAdaptedTag(INVALID_TAG));\n         JsonAdaptedPerson person =\n-                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);\n+                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK ,invalidTags);\n         assertThrows(IllegalValueException.class, person::toModelType);\n     }\n "
  },
  {
    "sha": "8780f188f6f9192dda0eab289cd1dd3b59f349d8",
    "filename": "src/test/java/seedu/address/testutil/PersonBuilder.java",
    "status": "modified",
    "additions": 11,
    "deletions": 6,
    "changes": 17,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/java/seedu/address/testutil/PersonBuilder.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/java/seedu/address/testutil/PersonBuilder.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/java/seedu/address/testutil/PersonBuilder.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -3,11 +3,7 @@\n import java.util.HashSet;\n import java.util.Set;\n \n-import seedu.address.model.person.Address;\n-import seedu.address.model.person.Email;\n-import seedu.address.model.person.Name;\n-import seedu.address.model.person.Person;\n-import seedu.address.model.person.Phone;\n+import seedu.address.model.person.*;\n import seedu.address.model.tag.Tag;\n import seedu.address.model.util.SampleDataUtil;\n \n@@ -20,12 +16,14 @@\n     public static final String DEFAULT_PHONE = \"85355255\";\n     public static final String DEFAULT_EMAIL = \"amy@gmail.com\";\n     public static final String DEFAULT_ADDRESS = \"123, Jurong West Ave 6, #08-111\";\n+    public static final String DEFAULT_REMARK = \"She likes AadVarks\";\n \n     private Name name;\n     private Phone phone;\n     private Email email;\n     private Address address;\n     private Set<Tag> tags;\n+    private Remark remark;\n \n     /**\n      * Creates a {@code PersonBuilder} with the default details.\n@@ -35,6 +33,7 @@ public PersonBuilder() {\n         phone = new Phone(DEFAULT_PHONE);\n         email = new Email(DEFAULT_EMAIL);\n         address = new Address(DEFAULT_ADDRESS);\n+        remark = new Remark(DEFAULT_REMARK);\n         tags = new HashSet<>();\n     }\n \n@@ -46,6 +45,7 @@ public PersonBuilder(Person personToCopy) {\n         phone = personToCopy.getPhone();\n         email = personToCopy.getEmail();\n         address = personToCopy.getAddress();\n+        remark = personToCopy.getRemark();\n         tags = new HashSet<>(personToCopy.getTags());\n     }\n \n@@ -89,8 +89,13 @@ public PersonBuilder withEmail(String email) {\n         return this;\n     }\n \n+    public PersonBuilder withRemark(String remark) {\n+        this.remark = new Remark(remark);\n+        return this;\n+    }\n+\n     public Person build() {\n-        return new Person(name, phone, email, address, tags);\n+        return new Person(name, phone, email, address, tags, remark);\n     }\n \n }"
  },
  {
    "sha": "5ee61c3a1ecffcb41d3844597800166d6878bef6",
    "filename": "src/test/java/seedu/address/testutil/PersonUtil.java",
    "status": "modified",
    "additions": 3,
    "deletions": 6,
    "changes": 9,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/java/seedu/address/testutil/PersonUtil.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/java/seedu/address/testutil/PersonUtil.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/java/seedu/address/testutil/PersonUtil.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -1,18 +1,14 @@\n package seedu.address.testutil;\n \n-import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;\n-import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;\n-import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;\n-import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;\n-import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;\n-\n import java.util.Set;\n \n import seedu.address.logic.commands.AddCommand;\n import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;\n import seedu.address.model.person.Person;\n import seedu.address.model.tag.Tag;\n \n+import static seedu.address.logic.parser.CliSyntax.*;\n+\n /**\n  * A utility class for Person.\n  */\n@@ -34,6 +30,7 @@ public static String getPersonDetails(Person person) {\n         sb.append(PREFIX_PHONE + person.getPhone().value + \" \");\n         sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");\n         sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");\n+        sb.append(PREFIX_REMARK + person.getRemark().value + \" \");\n         person.getTags().stream().forEach(\n             s -> sb.append(PREFIX_TAG + s.tagName + \" \")\n         );"
  },
  {
    "sha": "5daa8be2a08a2a43fc928ca4be6005cf5620d104",
    "filename": "src/test/java/seedu/address/testutil/TypicalPersons.java",
    "status": "modified",
    "additions": 11,
    "deletions": 11,
    "changes": 22,
    "blob_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/blob/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/java/seedu/address/testutil/TypicalPersons.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-T16-2/tp/raw/bbd29ae4c298ce3b8d24daf94f4af2d56079c98d/src/test/java/seedu/address/testutil/TypicalPersons.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-T16-2/tp/contents/src/test/java/seedu/address/testutil/TypicalPersons.java?ref=bbd29ae4c298ce3b8d24daf94f4af2d56079c98d",
    "patch": "@@ -26,32 +26,32 @@\n     public static final Person ALICE = new PersonBuilder().withName(\"Alice Pauline\")\n             .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")\n             .withPhone(\"94351253\")\n-            .withTags(\"friends\").build();\n+            .withTags(\"friends\").withRemark(\"She likes AadVarks\").build();\n     public static final Person BENSON = new PersonBuilder().withName(\"Benson Meier\")\n             .withAddress(\"311, Clementi Ave 2, #02-25\")\n             .withEmail(\"johnd@example.com\").withPhone(\"98765432\")\n-            .withTags(\"owesMoney\", \"friends\").build();\n+            .withTags(\"owesMoney\", \"friends\").withRemark(\"He likes beer?\").build();\n     public static final Person CARL = new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")\n-            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();\n+            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withRemark(\"\").build();\n     public static final Person DANIEL = new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")\n-            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();\n+            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").withRemark(\"\").build();\n     public static final Person ELLE = new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")\n-            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();\n+            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withRemark(\"\").build();\n     public static final Person FIONA = new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")\n-            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();\n+            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withRemark(\"\").build();\n     public static final Person GEORGE = new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")\n-            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();\n+            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withRemark(\"\").build();\n \n     // Manually added\n     public static final Person HOON = new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")\n-            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();\n+            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withRemark(\"\").build();\n     public static final Person IDA = new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")\n-            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();\n+            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withRemark(\"\").build();\n \n     // Manually added - Person's details found in {@code CommandTestUtil}\n-    public static final Person AMY = new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)\n+    public static final Person AMY = new PersonBuilder().withName(VALID_NAME_AMY).withRemark(\"\").withPhone(VALID_PHONE_AMY)\n             .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();\n-    public static final Person BOB = new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)\n+    public static final Person BOB = new PersonBuilder().withName(VALID_NAME_BOB).withRemark(\"\").withPhone(VALID_PHONE_BOB)\n             .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)\n             .build();\n "
  }
]
