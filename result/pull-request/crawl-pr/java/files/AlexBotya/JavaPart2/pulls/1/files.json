[
  {
    "sha": "c24f544d43509d41527c3c1e0da5231c972d1e10",
    "filename": "JavaLevel2/src/Obstacles/Obstacle.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/AlexBotya/JavaPart2/blob/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Obstacles/Obstacle.java",
    "raw_url": "https://github.com/AlexBotya/JavaPart2/raw/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Obstacles/Obstacle.java",
    "contents_url": "https://api.github.com/repos/AlexBotya/JavaPart2/contents/JavaLevel2/src/Obstacles/Obstacle.java?ref=2fdd6c429f642001e5916f6267e6cebe532e83e2",
    "patch": "@@ -0,0 +1,7 @@\n+package Obstacles;\n+\n+import Sportsmans.Sportsman;\n+\n+public interface Obstacle {\n+    boolean doIt(Sportsman sportsman);\n+}"
  },
  {
    "sha": "b04c22daaac9d02eda5fa5f2eb71a8f05adf43ee",
    "filename": "JavaLevel2/src/Obstacles/Road.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/AlexBotya/JavaPart2/blob/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Obstacles/Road.java",
    "raw_url": "https://github.com/AlexBotya/JavaPart2/raw/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Obstacles/Road.java",
    "contents_url": "https://api.github.com/repos/AlexBotya/JavaPart2/contents/JavaLevel2/src/Obstacles/Road.java?ref=2fdd6c429f642001e5916f6267e6cebe532e83e2",
    "patch": "@@ -0,0 +1,24 @@\n+package Obstacles;\n+\n+import Sportsmans.RunAbility;\n+import Sportsmans.Sportsman;\n+\n+public class Road implements Obstacle {\n+    private final int distance;\n+\n+    public Road(int distance) {\n+        this.distance = distance;\n+    }\n+\n+    @Override\n+    public boolean doIt(Sportsman sportsman) {\n+        if (sportsman instanceof RunAbility) {\n+            return ((RunAbility) sportsman).run(distance);\n+\n+        }\n+        return false;\n+    }\n+}\n+\n+\n+"
  },
  {
    "sha": "f7dfd9269f54247bd1741fbae471760dc909695f",
    "filename": "JavaLevel2/src/Obstacles/Wall.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/AlexBotya/JavaPart2/blob/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Obstacles/Wall.java",
    "raw_url": "https://github.com/AlexBotya/JavaPart2/raw/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Obstacles/Wall.java",
    "contents_url": "https://api.github.com/repos/AlexBotya/JavaPart2/contents/JavaLevel2/src/Obstacles/Wall.java?ref=2fdd6c429f642001e5916f6267e6cebe532e83e2",
    "patch": "@@ -0,0 +1,21 @@\n+package Obstacles;\n+\n+import Sportsmans.JumpAbility;\n+import Sportsmans.Sportsman;\n+\n+public class Wall implements Obstacle {\n+    private final int height;\n+\n+    public Wall(int height) {\n+\n+        this.height = height;\n+    }\n+\n+    @Override\n+    public boolean doIt(Sportsman sportsman) {\n+        if (sportsman instanceof JumpAbility) {\n+            return ((JumpAbility) sportsman).jump(height);\n+        }\n+        return false;\n+    }\n+}"
  },
  {
    "sha": "a592127a632a77b59cb1b822f983ebbf4968cf16",
    "filename": "JavaLevel2/src/Sportsmans/Cat.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/AlexBotya/JavaPart2/blob/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/Cat.java",
    "raw_url": "https://github.com/AlexBotya/JavaPart2/raw/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/Cat.java",
    "contents_url": "https://api.github.com/repos/AlexBotya/JavaPart2/contents/JavaLevel2/src/Sportsmans/Cat.java?ref=2fdd6c429f642001e5916f6267e6cebe532e83e2",
    "patch": "@@ -0,0 +1,16 @@\n+package Sportsmans;\n+\n+public class Cat implements Sportsman, JumpAbility {\n+    private final int maxJumpHeight;\n+\n+\n+    public Cat(int maxJumpHeight) {\n+        this.maxJumpHeight = maxJumpHeight;\n+    }\n+\n+    @Override\n+    public boolean jump(int height) {\n+        System.out.println(\"Cat is trying to jump..\");\n+        return height <= maxJumpHeight;\n+    }\n+}"
  },
  {
    "sha": "84f3e70870bf62fd84de39e5f87f68ec46c3cf0d",
    "filename": "JavaLevel2/src/Sportsmans/Human.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/AlexBotya/JavaPart2/blob/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/Human.java",
    "raw_url": "https://github.com/AlexBotya/JavaPart2/raw/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/Human.java",
    "contents_url": "https://api.github.com/repos/AlexBotya/JavaPart2/contents/JavaLevel2/src/Sportsmans/Human.java?ref=2fdd6c429f642001e5916f6267e6cebe532e83e2",
    "patch": "@@ -0,0 +1,28 @@\n+package Sportsmans;\n+\n+import Obstacles.Obstacle;\n+\n+public class Human implements Sportsman, RunAbility, JumpAbility {\n+    private final int maxJumpHeight;\n+    private final int maxRunDistance;\n+\n+    public Human(int maxJumpHeight, int maxRunDistance) {\n+        this.maxJumpHeight = maxJumpHeight;\n+        this.maxRunDistance = maxRunDistance;\n+    }\n+\n+    @Override\n+    public boolean run(int distance) {\n+        System.out.println(\"Human is trying to run..\");\n+        return distance <= maxRunDistance;\n+\n+    }\n+\n+    @Override\n+    public boolean jump(int height) {\n+        System.out.println(\"Human is trying to jump..\");\n+        return height <= maxJumpHeight;\n+\n+    }\n+}\n+"
  },
  {
    "sha": "735cf79a0d858d3e83d5f8ef7f7eb2670d5c8c90",
    "filename": "JavaLevel2/src/Sportsmans/JumpAbility.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/AlexBotya/JavaPart2/blob/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/JumpAbility.java",
    "raw_url": "https://github.com/AlexBotya/JavaPart2/raw/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/JumpAbility.java",
    "contents_url": "https://api.github.com/repos/AlexBotya/JavaPart2/contents/JavaLevel2/src/Sportsmans/JumpAbility.java?ref=2fdd6c429f642001e5916f6267e6cebe532e83e2",
    "patch": "@@ -0,0 +1,7 @@\n+package Sportsmans;\n+\n+import Obstacles.Obstacle;\n+\n+public interface JumpAbility {\n+    boolean jump(int height);\n+}"
  },
  {
    "sha": "911aebbfd407399f11c1b9172c73ba254aa88f81",
    "filename": "JavaLevel2/src/Sportsmans/Robot.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/AlexBotya/JavaPart2/blob/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/Robot.java",
    "raw_url": "https://github.com/AlexBotya/JavaPart2/raw/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/Robot.java",
    "contents_url": "https://api.github.com/repos/AlexBotya/JavaPart2/contents/JavaLevel2/src/Sportsmans/Robot.java?ref=2fdd6c429f642001e5916f6267e6cebe532e83e2",
    "patch": "@@ -0,0 +1,26 @@\n+package Sportsmans;\n+\n+public class Robot implements Sportsman, JumpAbility, RunAbility {\n+\n+    private final int maxJumpHeight;\n+    private final int maxRunDistance;\n+\n+    public Robot(int maxJumpHeight, int maxRunDistance) {\n+        this.maxJumpHeight = maxJumpHeight;\n+        this.maxRunDistance = maxRunDistance;\n+    }\n+\n+    @Override\n+    public boolean run(int distance) {\n+        System.out.println(\"Robot is trying to run..\");\n+        return distance <= maxRunDistance;\n+\n+    }\n+\n+    @Override\n+    public boolean jump(int height) {\n+        System.out.println(\"Robot is trying to jump..\");\n+        return height <= maxJumpHeight;\n+\n+    }\n+}"
  },
  {
    "sha": "5e4c560492029c2e4ba5e656bb511f74ba688af6",
    "filename": "JavaLevel2/src/Sportsmans/RunAbility.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/AlexBotya/JavaPart2/blob/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/RunAbility.java",
    "raw_url": "https://github.com/AlexBotya/JavaPart2/raw/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/RunAbility.java",
    "contents_url": "https://api.github.com/repos/AlexBotya/JavaPart2/contents/JavaLevel2/src/Sportsmans/RunAbility.java?ref=2fdd6c429f642001e5916f6267e6cebe532e83e2",
    "patch": "@@ -0,0 +1,8 @@\n+package Sportsmans;\n+\n+import Obstacles.Obstacle;\n+\n+public interface RunAbility {\n+    boolean run(int distance);\n+\n+}"
  },
  {
    "sha": "cd77f235a0b2565fecc443e9bdf808e0a215413d",
    "filename": "JavaLevel2/src/Sportsmans/Sportsman.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/AlexBotya/JavaPart2/blob/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/Sportsman.java",
    "raw_url": "https://github.com/AlexBotya/JavaPart2/raw/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/Sportsmans/Sportsman.java",
    "contents_url": "https://api.github.com/repos/AlexBotya/JavaPart2/contents/JavaLevel2/src/Sportsmans/Sportsman.java?ref=2fdd6c429f642001e5916f6267e6cebe532e83e2",
    "patch": "@@ -0,0 +1,5 @@\n+package Sportsmans;\n+\n+public interface Sportsman {\n+\n+}"
  },
  {
    "sha": "adec55ea8da008f4ad1ecd982b9ac04e3f7c8425",
    "filename": "JavaLevel2/src/main.java",
    "status": "modified",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/AlexBotya/JavaPart2/blob/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/main.java",
    "raw_url": "https://github.com/AlexBotya/JavaPart2/raw/2fdd6c429f642001e5916f6267e6cebe532e83e2/JavaLevel2/src/main.java",
    "contents_url": "https://api.github.com/repos/AlexBotya/JavaPart2/contents/JavaLevel2/src/main.java?ref=2fdd6c429f642001e5916f6267e6cebe532e83e2",
    "patch": "@@ -1,2 +1,32 @@\n+import Obstacles.Obstacle;\n+import Obstacles.Road;\n+import Obstacles.Wall;\n+import Sportsmans.*;\n+\n+\n public class main {\n+\n+\n+    public static void main(String[] args) {\n+        Sportsman[] sportsmans = {\n+                new Human(2, 200),\n+                new Robot(10, 500),\n+                new Cat(20)\n+        };\n+\n+        Obstacle[] obstacles = {\n+                new Road(200),\n+                new Wall(5)\n+        };\n+\n+        for (int i = 0; i < sportsmans.length; i++) {\n+            for (int j = 0; j < obstacles.length; j++) {\n+                System.out.println(obstacles[j].doIt(sportsmans[i]));\n+\n+            }\n+\n+        }\n+\n+    }\n }\n+"
  }
]
