[
  {
    "sha": "76d530aeeb92a4f750bf6fe4b48d7ade2691361a",
    "filename": "bin/javaStudy/JavaStudy.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kentamatsuoBiz/JavaStudy/blob/0bc205fe875e1a9083726484312bc0cef7d8994b/bin/javaStudy/JavaStudy.class",
    "raw_url": "https://github.com/kentamatsuoBiz/JavaStudy/raw/0bc205fe875e1a9083726484312bc0cef7d8994b/bin/javaStudy/JavaStudy.class",
    "contents_url": "https://api.github.com/repos/kentamatsuoBiz/JavaStudy/contents/bin/javaStudy/JavaStudy.class?ref=0bc205fe875e1a9083726484312bc0cef7d8994b"
  },
  {
    "sha": "1c16aa2622d72cf36f238c4fc86b32e5fdae214b",
    "filename": "bin/javaStudy/Question.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kentamatsuoBiz/JavaStudy/blob/0bc205fe875e1a9083726484312bc0cef7d8994b/bin/javaStudy/Question.class",
    "raw_url": "https://github.com/kentamatsuoBiz/JavaStudy/raw/0bc205fe875e1a9083726484312bc0cef7d8994b/bin/javaStudy/Question.class",
    "contents_url": "https://api.github.com/repos/kentamatsuoBiz/JavaStudy/contents/bin/javaStudy/Question.class?ref=0bc205fe875e1a9083726484312bc0cef7d8994b"
  },
  {
    "sha": "93d0cbd4f2b1d126b8d02e542054d740f4381b6b",
    "filename": "src/javaStudy/JavaStudy.java",
    "status": "modified",
    "additions": 105,
    "deletions": 37,
    "changes": 142,
    "blob_url": "https://github.com/kentamatsuoBiz/JavaStudy/blob/0bc205fe875e1a9083726484312bc0cef7d8994b/src/javaStudy/JavaStudy.java",
    "raw_url": "https://github.com/kentamatsuoBiz/JavaStudy/raw/0bc205fe875e1a9083726484312bc0cef7d8994b/src/javaStudy/JavaStudy.java",
    "contents_url": "https://api.github.com/repos/kentamatsuoBiz/JavaStudy/contents/src/javaStudy/JavaStudy.java?ref=0bc205fe875e1a9083726484312bc0cef7d8994b",
    "patch": "@@ -1,44 +1,112 @@\n package javaStudy;\n \n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Scanner;\n+\n public class JavaStudy {\n \n \tpublic static void main(String[] args) {\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n+\t\t// 入力を受け付ける\n+\t\tScanner sc = new Scanner(System.in);\n+\n+\t\twhile (true)\n+\t\t{\n+\t\t\t// 問題数※Question.javaの成績gradesに対応させること\n+\t\t\tint quizNumbers = 10;\n+\t\t\t// 正答数\n+\t\t\tint quizgrade = 0;\n+\n+\t\t\t// ルール説明分の表示\n+\t\t\tSystem.out.println(\"ポケモンタイプ相性問題！全\" + quizNumbers + \"問！\");\n+\t\t\tSystem.out.println(\"\");\n+\t\t\tSystem.out.println(\"番号をカンマで区切り、すべて入力してください\");\n+\t\t\tSystem.out.println(\"良い例：1,2,3　6,4,5　7　 悪い例：123　6 4 5　７\");\n+\t\t\tSystem.out.println(\"--------------------------------------------------\");\n+\n+\t\t\t// 問題と正答をランダムな順序にする\n+\t\t\tList<Integer> questionNumber = new ArrayList<>(Arrays.asList//\n+\t\t\t(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17));\n+\t\t\tCollections.shuffle(questionNumber);\n+\n+\t\t\t// 問題繰り返し\n+\t\t\tfor (int quizNumber = 1; quizNumber <= quizNumbers; quizNumber++)\n+\t\t\t{\n+\t\t\t\t// 正答の宣言\n+\t\t\t\tString[][] correctAnswer = {\n+\t\t\t\t\t{\"7\"}, // 1.ノーマル_7.かくとう\n+\t\t\t\t\t{\"13\", \"3\", \"9\"}, // 2.ほのお_3.みず9.じめん13.いわ\n+\t\t\t\t\t{\"4\", \"5\"}, // 3.みず_4.でんき5.くさ\n+\t\t\t\t\t{\"9\"}, // 4.でんき_9.じめん\n+\t\t\t\t\t{\"10\", \"12\", \"2\", \"6\", \"8\"}, // 5.くさ_2.ほのお6.こおり8.どく10.ひこう12.むし\n+\t\t\t\t\t{\"13\", \"17\", \"2\", \"7\"}, // 6.こおり_2.ほのお7.かくとう13.いわ17.はがね\n+\t\t\t\t\t{\"10\", \"11\", \"18\"}, // 7.かくとう_10.ひこう11.エスパー18.フェアリー\n+\t\t\t\t\t{\"11\", \"9\"}, // 8.どく_9.じめん11.エスパー\n+\t\t\t\t\t{\"3\", \"5\", \"6\"}, // 9.じめん_3.みず5.くさ6.こおり\n+\t\t\t\t\t{\"13\", \"4\", \"6\"}, // 10.ひこう_4.でんき6.こおり13.いわ\n+\t\t\t\t\t{\"12\", \"14\", \"16\"}, // 11.エスパー_12.むし14.ゴースト16.あく\n+\t\t\t\t\t{\"10\", \"13\", \"2\"}, // 12.むし_2.ほのお10.ひこう13.いわ\n+\t\t\t\t\t{\"17\", \"3\", \"5\", \"7\", \"9\"}, // 13.いわ_3.みず5.くさ7.かくとう9.じめん17.はがね\n+\t\t\t\t\t{\"14\", \"16\"}, // 14.ゴースト_14.ゴースト16.あく\n+\t\t\t\t\t{\"15\", \"18\", \"6\"}, // 15.ドラゴン_6.こおり15.ドラゴン18.フェアリー\n+\t\t\t\t\t{\"12\", \"18\", \"7\"}, // 16.あく_7.かくとう12.むし18.フェアリー\n+\t\t\t\t\t{\"2\", \"7\", \"9\"}, // 17.はがね_2.ほのお7.かくとう9.じめん\n+\t\t\t\t\t{\"17\", \"8\"} // 18.フェアリー_8.どく17.はがね\n+\t\t\t\t};\n+\n+\t\t\t\t// 第[quizNumber]問に合わせて問題を選択する\n+\n+\t\t\t\tArrayList<String> correct = new ArrayList<String>();\n+\t\t\t\tfor (int j = 0; j < correctAnswer[questionNumber.get(quizNumber - 1)].length; j++)\n+\t\t\t\t{\n+\t\t\t\t\tcorrect.add(correctAnswer[questionNumber.get(quizNumber - 1)][j]);\n+\t\t\t\t}\n+\n+\t\t\t\t// 問題を宣言、表示\n+\t\t\t\tQuestion question1 = new Question(quizNumber, questionNumber.get(quizNumber - 1),\n+\t\t\t\t\tcorrect);\n+\t\t\t\tquestion1.setQuestion();\n+\n+\t\t\t\t// デバック用\n+\t\t\t\t// System.out.println(\"-----------------デバック用に表示-----------------\");\n+\t\t\t\t// System.out.println(\"出題順序\" + questionNumber);// 順序の表示\n+\t\t\t\t// System.out.println(\"問題番号[\" + questionNumber.get(quizNumber - 1) + \"]\");// 問題の番号\n+\t\t\t\t// System.out.println(\"正答\" + correct);// 正答の表示\n+\t\t\t\t// System.out.println(\"--------------------------------------------------\");\n+\n+\t\t\t\t// 解答を配列として格納、ソートし、Listに変換して比較できるようにする\n+\t\t\t\tString answers = sc.nextLine();\n+\t\t\t\tString[] answer = answers.split(\",\");\n+\t\t\t\tArrays.sort(answer);\n+\t\t\t\tList<String> answerlist = Arrays.asList(answer);\n+\n+\t\t\t\t// 解答と正答を表示\n+\t\t\t\tquestion1.confirmationAnswer(answerlist);\n+\t\t\t\t// 解答と正答を比較した結果を表示し、正答数を取得する\n+\t\t\t\tquizgrade = quizgrade + question1.checkAnswerGetGrade(answerlist);\n+\n+\t\t\t\t// 成績発表\n+\t\t\t\tif (quizNumber == 10)\n+\t\t\t\t{\n+\t\t\t\t\tquestion1.printGrade(quizgrade);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tSystem.out.println(\"\");\n+\t\t\tSystem.out.println(\"もう一度挑戦・・・[y]を入力\");\n+\t\t\tSystem.out.println(\"終了・・・・・・・[n]を入力\");\n+\t\t\tSystem.out.println(\"--------------------------------------------------\");\n+\t\t\tString answer = sc.nextLine();\n+\t\t\tif (answer.equals(\"y\"))\n+\t\t\t{\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tsc.close();\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n \t}\n-\n }"
  },
  {
    "sha": "f5571dac7e857a048e605082df4ed93f9880e878",
    "filename": "src/javaStudy/Question.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/kentamatsuoBiz/JavaStudy/blob/0bc205fe875e1a9083726484312bc0cef7d8994b/src/javaStudy/Question.java",
    "raw_url": "https://github.com/kentamatsuoBiz/JavaStudy/raw/0bc205fe875e1a9083726484312bc0cef7d8994b/src/javaStudy/Question.java",
    "contents_url": "https://api.github.com/repos/kentamatsuoBiz/JavaStudy/contents/src/javaStudy/Question.java?ref=0bc205fe875e1a9083726484312bc0cef7d8994b",
    "patch": "@@ -0,0 +1,78 @@\n+package javaStudy;\n+\n+import java.util.List;\n+\n+public class Question\n+{\n+\tprivate int questionId;\n+\tprivate int questionType;\n+\tList<String> correctAnswers;\n+\tprivate String[] types = {\n+\t\t\"ノーマル\", \"ほのお\", \"みず\", \"でんき\", \"くさ\", \"こおり\", \"かくとう\",\n+\t\t\"どく\", \"じめん\", \"ひこう\", \"エスパー\", \"むし\", \"いわ\", \"ゴースト\",\n+\t\t\"ドラゴン\", \"あく\", \"はがね\", \"フェアリー\"};\n+\n+\tpublic Question(int quizNumber, Integer type, List<String> correct)\n+\t{\n+\t\tthis.questionId = quizNumber;\n+\t\tthis.questionType = type;\n+\t\tthis.correctAnswers = correct;\n+\t}\n+\n+\tpublic void setQuestion()// 問題を表示する\n+\t{\n+\t\tSystem.out.print(\"第\" + questionId + \"問！　\");\n+\t\tSystem.out.println(types[questionType] + \"タイプの弱点は次のうちどれ？\");\n+\t\tSystem.out.println(\" 1.ノーマル  2.ほのお　  3.みず　　  4.でんき\");\n+\t\tSystem.out.println(\" 5.くさ　　  6.こおり　  7.かくとう  8.どく\");\n+\t\tSystem.out.println(\" 9.じめん　 10.ひこう　 11.エスパー 12.むし\");\n+\t\tSystem.out.println(\"13.いわ　　 14.ゴースト 15.ドラゴン 16.あく\");\n+\t\tSystem.out.println(\"17.はがね　 18.フェアリー\");\n+\t\tSystem.out.println(\"--------------------------------------------------\");\n+\t}\n+\n+\tpublic void confirmationAnswer(List<String> answerlist1)// 解答、正答の表示\n+\t{\n+\t\tList<String> answerlist = answerlist1;\n+\t\tSystem.out.print(\"解答\");\n+\t\tfor (String answer1 : answerlist)\n+\t\t{\n+\t\t\tSystem.out.print(\"[\" + types[Integer.parseInt(answer1) - 1] + \"]\");\n+\t\t}\n+\t\tSystem.out.println(\"\");\n+\t\tSystem.out.print(\"正答\");\n+\t\tfor (String correct1 : this.correctAnswers)\n+\t\t{\n+\t\t\tSystem.out.print(\"[\" + types[Integer.parseInt(correct1) - 1] + \"]\");\n+\t\t}\n+\t\tSystem.out.println(\"\");\n+\t}\n+\n+\tpublic int checkAnswerGetGrade(List<String> answerlist1)// 解答、正答を比較し、正解なら１を返す\n+\t{\n+\t\tList<String> answerlist = answerlist1;\n+\t\tif (answerlist.equals(this.correctAnswers))\n+\t\t{\n+\t\t\tSystem.out.println(\"正解！！\");\n+\t\t\tSystem.out.println(\"--------------------------------------------------\");\n+\t\t\treturn 1;\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tSystem.out.println(\"不正解\");\n+\t\t\tSystem.out.println(\"--------------------------------------------------\");\n+\t\t\treturn 0;\n+\t\t}\n+\t}\n+\n+\tpublic void printGrade(int quizgrade)// 正答数に応じた成績を表示する\n+\t{\n+\t\tSystem.out.println(\"成績発表！\");\n+\t\tSystem.out.println(\"全\" + this.questionId + \"問中、\" + quizgrade + \"問正解！\");\n+\t\tString[] grades = // 問題数10問の場合\n+\t\t\t{\"ポケモン初心者\", \"ポケモン初心者\", \"ポケモン初心者\", \"ポケモン中級者\", \"ポケモン中級者\",\n+\t\t\t\t\"ポケモン上級者\", \"ポケモン上級者\", \"ポケモン上級者\", \"ポケモン上級者\", \"ポケモンマスター\"};\n+\t\tString grade = grades[quizgrade];\n+\t\tSystem.out.println(\"あなたは\" + grade + \"！\");\n+\t}\n+}"
  }
]
