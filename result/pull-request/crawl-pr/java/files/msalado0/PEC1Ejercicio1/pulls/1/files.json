[
  {
    "sha": "6713a4e9dcb1c0cf60926972c3bf36530d346b47",
    "filename": "app/src/main/ic_libro-playstore.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/ic_libro-playstore.png",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/ic_libro-playstore.png",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/ic_libro-playstore.png?ref=adaf8de0808e00d960d553c78e8789e7b549cd88"
  },
  {
    "sha": "776f8afa5020116bed9a3de76a45584bfee566f5",
    "filename": "app/src/main/java/com/example/pec1ejercicio1/BookDetailActivity.java",
    "status": "modified",
    "additions": 8,
    "deletions": 2,
    "changes": 10,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/BookDetailActivity.java",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/BookDetailActivity.java",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/java/com/example/pec1ejercicio1/BookDetailActivity.java?ref=adaf8de0808e00d960d553c78e8789e7b549cd88",
    "patch": "@@ -43,8 +43,14 @@ public void onClick(View view) {\n         Se recoge la informacion provenientes del adaptador, y se enviara al Layout correspondiente a esta actividad.\r\n          */\r\n         Bundle bundle = new Bundle();\r\n-        bundle.putString(\"id\",\r\n-                getIntent().getStringExtra(\"id\"));\r\n+        bundle.putString(\"titulo\",\r\n+                getIntent().getStringExtra(\"titulo\"));\r\n+        bundle.putString(\"autor\",\r\n+                getIntent().getStringExtra(\"autor\"));\r\n+        bundle.putString(\"fecha\",\r\n+                getIntent().getStringExtra(\"fecha\"));\r\n+        bundle.putString(\"descripcion\",\r\n+                getIntent().getStringExtra(\"descripcion\"));\r\n \r\n         BookDetailFragment bookFragment = new BookDetailFragment();\r\n         bookFragment.setArguments(bundle);\r"
  },
  {
    "sha": "437d4855ed1539ed543261fe8fa12197d31f58db",
    "filename": "app/src/main/java/com/example/pec1ejercicio1/BookDetailFragment.java",
    "status": "modified",
    "additions": 21,
    "deletions": 7,
    "changes": 28,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/BookDetailFragment.java",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/BookDetailFragment.java",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/java/com/example/pec1ejercicio1/BookDetailFragment.java?ref=adaf8de0808e00d960d553c78e8789e7b549cd88",
    "patch": "@@ -8,6 +8,7 @@\n import android.view.LayoutInflater;\r\n import android.view.View;\r\n import android.view.ViewGroup;\r\n+import android.widget.ImageView;\r\n import android.widget.TextView;\r\n \r\n import com.google.android.material.appbar.CollapsingToolbarLayout;\r\n@@ -23,7 +24,10 @@\n     Debemos de declarar una variable para poder construir la informacion del libro (en este caso se necesita un atributo,\r\n     ya que la el nombre se puede construir a partir de este valor).\r\n      */\r\n-    private String idLibro;\r\n+    private String titulo;\r\n+    private String autor;\r\n+    private String fecha;\r\n+    private String descripcion;\r\n \r\n     /*\r\n     Implementamos un constructor vacio, para cuando se selecciona un segundo libro, este pueda limpiar la informacion del libro\r\n@@ -40,28 +44,38 @@ public void onCreate(Bundle savedInstanceState) {\n         Se recoge la informacion provenientes del adaptador, y se actualizara el layout del Toolbar para que muestre\r\n         el nombre del libro.\r\n          */\r\n-        idLibro = getArguments().getString(\"id\");\r\n+        titulo = getArguments().getString(\"titulo\");\r\n+        autor = getArguments().getString(\"autor\");\r\n+        fecha = getArguments().getString(\"fecha\");\r\n+        descripcion = getArguments().getString(\"descripcion\");\r\n \r\n         Activity activity = this.getActivity();\r\n         CollapsingToolbarLayout appBarLayout = (CollapsingToolbarLayout) activity.findViewById(R.id.toolbar_layout);\r\n         if (appBarLayout != null) {\r\n-            appBarLayout.setTitle(\"Item \"+idLibro);\r\n+            appBarLayout.setTitle(titulo);\r\n         }\r\n     }\r\n     /*\r\n     En este metodo se construira la informacion que se quiere mostrar por pantalla y se enviara al elemento corrspondiente\r\n     del layout que corresponde al del propio Frament.\r\n      */\r\n-    @Override\r\n+   @Override\r\n     public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                              Bundle savedInstanceState) {\r\n         View rootView = inflater.inflate(R.layout.fragment_book_detail, container, false);\r\n \r\n-        if (idLibro != null) {\r\n-            String textoDetalle = \"Details about Item: \"+idLibro+\"\\nMore details information here.\";\r\n-            ((TextView) rootView.findViewById(R.id.item_detail)).setText(textoDetalle);\r\n+        if (autor != null) {\r\n+            ((TextView) rootView.findViewById(R.id.autor_detail_book)).setText(autor);\r\n         }\r\n \r\n+       if (fecha != null) {\r\n+           ((TextView) rootView.findViewById(R.id.fecha_detail_book)).setText(fecha);\r\n+       }\r\n+\r\n+       if (descripcion != null) {\r\n+           ((TextView) rootView.findViewById(R.id.descripcion_detail_book)).setText(descripcion);\r\n+       }\r\n+\r\n         return rootView;\r\n     }\r\n }\r"
  },
  {
    "sha": "e63f00b28144bcc6fa296b7300665e8d7c0c73b2",
    "filename": "app/src/main/java/com/example/pec1ejercicio1/BookListActivity.java",
    "status": "modified",
    "additions": 12,
    "deletions": 2,
    "changes": 14,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/BookListActivity.java",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/BookListActivity.java",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/java/com/example/pec1ejercicio1/BookListActivity.java?ref=adaf8de0808e00d960d553c78e8789e7b549cd88",
    "patch": "@@ -26,6 +26,11 @@\n     para saber en que tipo de pantalla estamos, si estamos en un ancho mayor de 900 nuestra aplicacion mostrara\r\n     una visual algo cambiada.\r\n      */\r\n+\r\n+    /*\r\n+    La activity se modificara desde el ejercicio 2 en adelante para que la aplicacion, pueda manejar los nuevos\r\n+    cambios a√±adidos en las clases que se encuentran en el paquete modelo.\r\n+     */\r\n     private RecyclerView recyclerView;\r\n     private List<BookItem> listaLibros;\r\n     private boolean detailFragment;\r\n@@ -48,15 +53,20 @@ protected void onCreate(Bundle savedInstanceState) {\n         }\r\n \r\n         /*\r\n-        Cargamos nuestra lista de libros con un metodo de utilidad declarado en la clase BookModel.\r\n+        Cargamos nuestra lista de libros con la variable static declarada y cargada con la informacion de la clase\r\n+        java BookModel.\r\n          */\r\n-        listaLibros = BookModel.rellenarListaLibros();\r\n+        listaLibros = BookModel.ITEMS;\r\n \r\n         /*\r\n         Una vez sepamos en que clase de pantalla se esta ejecutando la aplicacion, y tengamos cargada nuestra\r\n         lista de libros, es necesarios enviar la informacion a nuestro adaptador, para que visualice los datos,\r\n         por lo que lanzamos el adaptador.\r\n          */\r\n+        /*\r\n+        Como se puede observar, nuestro adaptador lo hemos hecho en una clase java independiente, esto es debido a que en el\r\n+        ejercicio 1 se implemento de forma independente a esta activity, por lo que seguimos con la misma dinamica.\r\n+         */\r\n         recyclerView = findViewById(R.id.item_list);\r\n         BookRecyclerViewAdapter view = new BookRecyclerViewAdapter(listaLibros, detailFragment, this);\r\n         recyclerView.setAdapter(view);\r"
  },
  {
    "sha": "9626986ad0a5b2b0300538d40f62f664da359665",
    "filename": "app/src/main/java/com/example/pec1ejercicio1/BookRecyclerViewAdapter.java",
    "status": "modified",
    "additions": 63,
    "deletions": 10,
    "changes": 73,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/BookRecyclerViewAdapter.java",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/BookRecyclerViewAdapter.java",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/java/com/example/pec1ejercicio1/BookRecyclerViewAdapter.java?ref=adaf8de0808e00d960d553c78e8789e7b549cd88",
    "patch": "@@ -1,78 +1,131 @@\n package com.example.pec1ejercicio1;\r\n \r\n import android.content.Intent;\r\n+import android.graphics.Color;\r\n+import android.graphics.ColorMatrix;\r\n import android.os.Bundle;\r\n import android.view.LayoutInflater;\r\n import android.view.View;\r\n import android.view.ViewGroup;\r\n import android.widget.TextView;\r\n \r\n+import androidx.cardview.widget.CardView;\r\n import androidx.recyclerview.widget.RecyclerView;\r\n \r\n import com.example.pec1ejercicio1.modelo.BookItem;\r\n \r\n+import java.text.DateFormat;\r\n+import java.text.SimpleDateFormat;\r\n import java.util.List;\r\n-\r\n+/*\r\n+En esta clase java, se desarrolla nuestro adaptador personalizado para la aplicacion, que mostrara\r\n+en forma de lista los libros cargados que son pasado a esta clase, este adaptador es muy util ya que\r\n+ademas de expresar la informacion en formato lista siendo muy comun para las aplicaciones moviles, nos\r\n+indica con que elemento esta interactuando el usuario, por lo que lo identificamos rapidamente para poder\r\n+visualizar en este caso dicha informacion.\r\n+ */\r\n public class BookRecyclerViewAdapter extends RecyclerView.Adapter<BookRecyclerViewAdapter.ViewHolder> {\r\n-\r\n+/*\r\n+Declaramos los 3 atributos necesarios, en este caso una lsita de libros, un boolean para comprobar si estamos\r\n+en una pantalla con un ancho mayor de 900dp, y la actividad padre al que invoca este adaptador.\r\n+ */\r\n     private List<BookItem> listaLibros;\r\n     private boolean detailFragment;\r\n     private final BookListActivity bookListActivity;\r\n \r\n+    /*\r\n+    Aqui tenemos el contructor del adaptador.\r\n+     */\r\n     public BookRecyclerViewAdapter(List<BookItem> libros, boolean detailF, BookListActivity listActivity){\r\n         listaLibros = libros;\r\n         detailFragment = detailF;\r\n         bookListActivity = listActivity;\r\n     }\r\n \r\n+    /*\r\n+    En este metodo cargamos la el layout deseado para visualizar los datos deseados, y mandarlos a cada\r\n+    elemento correspondiente.\r\n+     */\r\n     @Override\r\n     public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n         View view = LayoutInflater.from(parent.getContext())\r\n                 .inflate(R.layout.book_list_content, parent, false);\r\n         return new ViewHolder(view);\r\n     }\r\n \r\n+    /*\r\n+    Este elemento quizas sea el mas util de todos lo que tenemos aquim ya que nos indica que elemento esta\r\n+    teniendo alguna iteracion con el usuario, y podemos mandar dicha informacion alguna actividad para que\r\n+    gestiones esta informacion.\r\n+     */\r\n     @Override\r\n     public void onBindViewHolder(final ViewHolder holder, int position) {\r\n         final BookItem book = listaLibros.get(position);\r\n-        holder.mIdView.setText(book.id);\r\n-        holder.mContentView.setText(book.contenido);\r\n+        holder.titulo.setText(book.getTitulo());\r\n+        holder.autor.setText(book.getAutor());\r\n         holder.itemView.setTag(listaLibros.get(position));\r\n \r\n+        /*\r\n+        A√±adimos un color diferente si la posicion es impar o par.\r\n+         */\r\n+        if (position % 2 == 0){\r\n+            holder.card.setCardBackgroundColor(Color.parseColor(\"#FFFFFF\"));\r\n+        }else {\r\n+            holder.card.setCardBackgroundColor(Color.parseColor(\"#C3C9EF\"));\r\n+        }\r\n+\r\n         holder.itemView.setOnClickListener(new View.OnClickListener() {\r\n             @Override\r\n             public void onClick(View view) {\r\n                 BookItem aux = (BookItem) view.getTag();\r\n                 if(detailFragment) {\r\n                     Bundle bundle = new Bundle();\r\n-                    bundle.putString(\"id\", aux.id);\r\n+                    bundle.putString(\"titulo\", aux.getTitulo());\r\n+                    bundle.putString(\"autor\", aux.getAutor());\r\n+                    DateFormat dateFormat =  new SimpleDateFormat( \"dd-MM-yyyy\");\r\n+                    bundle.putString(\"fecha\", dateFormat.format(aux.getFecha()));\r\n+                    bundle.putString(\"descripcion\", aux.getDescripcion());\r\n                     BookDetailFragment fragment = new BookDetailFragment();\r\n                     fragment.setArguments(bundle);\r\n                     bookListActivity.getSupportFragmentManager().beginTransaction()\r\n                             .replace(R.id.item_detail_container, fragment)\r\n                             .commit();\r\n                 }else{\r\n                     Intent intent = new Intent(view.getContext(), BookDetailActivity.class);\r\n-                    intent.putExtra(\"id\", aux.id);\r\n+                    intent.putExtra(\"titulo\", aux.getTitulo());\r\n+                    intent.putExtra(\"autor\", aux.getAutor());\r\n+                    DateFormat dateFormat =  new SimpleDateFormat( \"dd-MM-yyyy\");\r\n+                    intent.putExtra(\"fecha\", dateFormat.format(aux.getFecha()));\r\n+                    intent.putExtra(\"descripcion\", aux.getDescripcion());\r\n                     view.getContext().startActivity(intent);\r\n                 }\r\n             }\r\n         });\r\n     }\r\n \r\n+    /*\r\n+    El adaptador como toda buena lista, necesita conocer cual sera el numero de lineas que necesita representar,\r\n+    por lo que solamente miramos (en este caso) el numero de libros que tenemos cargado en el atributo lista.\r\n+     */\r\n     @Override\r\n     public int getItemCount() {\r\n         return listaLibros.size();\r\n     }\r\n \r\n+    /*\r\n+    Aqui tenemos una clase vista, y es donde se inicializa en el adaptador los elementos de layout, para\r\n+    poder cargar y mostrar la informacion de los libros.\r\n+     */\r\n     class ViewHolder extends RecyclerView.ViewHolder {\r\n-        final TextView mIdView;\r\n-        final TextView mContentView;\r\n+        final TextView titulo;\r\n+        final TextView autor;\r\n+        final CardView card;\r\n \r\n         ViewHolder(View view) {\r\n             super(view);\r\n-            mIdView = (TextView) view.findViewById(R.id.id_text);\r\n-            mContentView = (TextView) view.findViewById(R.id.content);\r\n+            titulo = (TextView) view.findViewById(R.id.titulo_book);\r\n+            autor = (TextView) view.findViewById(R.id.autor_book);\r\n+            card = (CardView) view.findViewById(R.id.linea);\r\n         }\r\n     }\r\n }\r"
  },
  {
    "sha": "d34f6ec201cf9a76da32bf64139c2a15f0a6169e",
    "filename": "app/src/main/java/com/example/pec1ejercicio1/modelo/BookItem.java",
    "status": "modified",
    "additions": 62,
    "deletions": 6,
    "changes": 68,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/modelo/BookItem.java",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/modelo/BookItem.java",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/java/com/example/pec1ejercicio1/modelo/BookItem.java?ref=adaf8de0808e00d960d553c78e8789e7b549cd88",
    "patch": "@@ -1,19 +1,75 @@\n package com.example.pec1ejercicio1.modelo;\r\n \r\n+import java.util.Date;\r\n+\r\n /*\r\n La clase BookItem es donde tendremos nuestro objeto libro, el cual recogera sus atributos para poder construir\r\n el objeto.\r\n  */\r\n+/*\r\n+Para la segunda parte del codigo (ejercicios 2 en adelante), actualizaremos la clase BookItem con los atributos\r\n+solicitados.\r\n+ */\r\n public class BookItem {\r\n+    //En primer lugar declaramos los atributos del objeto.\r\n+    private int identificador;\r\n+    private String titulo;\r\n+    private String autor;\r\n+    private Date fecha;\r\n+    private String descripcion;\r\n+    private String url;\r\n \r\n-    public String id;\r\n-    public String contenido;\r\n-    public BookItem(String id, String contenido) {\r\n-        this.id = id;\r\n-        this.contenido = contenido;\r\n+    /*\r\n+    Continuamos crearemos un  constructor que permita construir el libro con todos\r\n+    los atributos anteriores.\r\n+     */\r\n+    public BookItem(int identificador, String titulo, String autor, Date fecha, String descripcion, String url) {\r\n+        this.identificador = identificador;\r\n+        this.titulo = titulo;\r\n+        this.autor = autor;\r\n+        this.fecha = fecha;\r\n+        this.descripcion = descripcion;\r\n+        this.url = url;\r\n     }\r\n+\r\n+    /*\r\n+    Crearemos los metodos get de los atributos.\r\n+     */\r\n+\r\n+    public int getIdentificador() {\r\n+        return this.identificador;\r\n+    }\r\n+\r\n+    public String getTitulo() {\r\n+        return this.titulo;\r\n+    }\r\n+\r\n+    public String getAutor() {\r\n+        return this.autor;\r\n+    }\r\n+\r\n+    public Date getFecha() {\r\n+        return this.fecha;\r\n+    }\r\n+\r\n+    public String getDescripcion() {\r\n+        return this.descripcion;\r\n+    }\r\n+\r\n+    public String getUrl() {\r\n+        return this.url;\r\n+    }\r\n+\r\n+    /*\r\n+    Crearemos elmetodo toString para visualizar un libro.\r\n+    */\r\n     public String toString() {\r\n-        return contenido;\r\n+        return \"Identificador: \"+this.getIdentificador()+\r\n+                \"Titulo: \"+this.getTitulo()+\r\n+                \"Autor: \"+this.getAutor()+\r\n+                \"Fecha: \"+this.getFecha()+\r\n+                \"Descripcion: \"+this.getDescripcion()+\r\n+                \"URL: \"+this.getUrl();\r\n     }\r\n \r\n }\r"
  },
  {
    "sha": "03500ae2715bf81ebd856b9c661da94a7f6bebbc",
    "filename": "app/src/main/java/com/example/pec1ejercicio1/modelo/BookModel.java",
    "status": "modified",
    "additions": 17,
    "deletions": 12,
    "changes": 29,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/modelo/BookModel.java",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/java/com/example/pec1ejercicio1/modelo/BookModel.java",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/java/com/example/pec1ejercicio1/modelo/BookModel.java?ref=adaf8de0808e00d960d553c78e8789e7b549cd88",
    "patch": "@@ -1,27 +1,32 @@\n package com.example.pec1ejercicio1.modelo;\r\n \r\n import java.util.ArrayList;\r\n+import java.util.Date;\r\n import java.util.List;\r\n \r\n /*\r\n La clase BookModel es una clase de utilidades para el objeto BookItem, y recogeran todos los metodos auxiliares necesarios\r\n para nuestra aplicacion movil.\r\n  */\r\n+/*\r\n+Para la segunda parte del codigo (ejercicios 2 en adelante), actualizaremos la clase BookModel con un\r\n+atributo static, y se cargara los datos mediante un metodo tambien static.\r\n+ */\r\n public class BookModel {\r\n \r\n     /*\r\n-    El metodo rellenarListaLibros, se dise√±a para crear un numero determinados de BookItem, en este caso\r\n-    el numero de libros que devolvera sera en la que se defina en la variable \"numeroLibros\", dichos BookItem\r\n-    se crean mediante un numero del 1 a n.\r\n+    Se declara una lista de tipo BookItem, el cual contendra nuestros libros que son los que se visualizaran\r\n+    en nuestra app.\r\n      */\r\n-    public static List<BookItem> rellenarListaLibros(){\r\n-        List<BookItem> res = new ArrayList<>();\r\n-        int numeroLibros = 15;\r\n-        for(int i = 0; i < numeroLibros; i++){\r\n-            Integer j = i;\r\n-            j++;\r\n-            res.add(new BookItem(j.toString(), \"Item \"+j.toString()));\r\n-        }\r\n-        return res;\r\n+    public static final List <BookItem> ITEMS = new ArrayList <> ();\r\n+    /*\r\n+    A continuacion, se crea un metodo static que permitira cargar nuestro atributo anterior de libros.\r\n+     */\r\n+    static {\r\n+        BookItem book1 = new BookItem(0, \"Title1\", \"Author1\", new Date(), \"Description\", null);\r\n+        BookItem book2 = new BookItem(1, \"Title2\", \"Author2\", new Date(), \"Description2\", null);\r\n+        ITEMS.add (book1);\r\n+        ITEMS.add (book2);\r\n     }\r\n+\r\n }\r"
  },
  {
    "sha": "5212d730364a31fe3c84aac3b976080a81ae49ba",
    "filename": "app/src/main/res/layout/book_list_content.xml",
    "status": "modified",
    "additions": 60,
    "deletions": 16,
    "changes": 76,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/layout/book_list_content.xml",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/layout/book_list_content.xml",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/res/layout/book_list_content.xml?ref=adaf8de0808e00d960d553c78e8789e7b549cd88",
    "patch": "@@ -3,22 +3,66 @@\n solo se mostrara el id del libro con su nombre correspondiente, por lo que se definiran dos\r\n TextView\r\n  -->\r\n+\r\n <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n-    android:layout_width=\"wrap_content\"\r\n+    xmlns:tools=\"http://schemas.android.com/tools\"\r\n+    android:layout_width=\"match_parent\"\r\n     android:layout_height=\"wrap_content\"\r\n-    android:orientation=\"horizontal\">\r\n-\r\n-    <TextView\r\n-        android:id=\"@+id/id_text\"\r\n-        android:layout_width=\"wrap_content\"\r\n-        android:layout_height=\"wrap_content\"\r\n-        android:layout_margin=\"@dimen/text_margin\"\r\n-        android:textAppearance=\"?attr/textAppearanceListItem\" />\r\n-\r\n-    <TextView\r\n-        android:id=\"@+id/content\"\r\n-        android:layout_width=\"wrap_content\"\r\n-        android:layout_height=\"wrap_content\"\r\n-        android:layout_margin=\"@dimen/text_margin\"\r\n-        android:textAppearance=\"?attr/textAppearanceListItem\" />\r\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n+\r\n+        <androidx.cardview.widget.CardView\r\n+            android:id=\"@+id/linea\"\r\n+            android:layout_width=\"match_parent\"\r\n+            android:layout_height=\"70dp\"\r\n+            app:cardBackgroundColor=\"#FFF\"\r\n+            app:cardCornerRadius=\"4dp\"\r\n+            app:cardElevation=\"2dp\"\r\n+            app:cardPreventCornerOverlap=\"true\"\r\n+            app:cardUseCompatPadding=\"true\"\r\n+            app:contentPadding=\"5dp\"\r\n+            android:layout_marginTop=\"@dimen/card_margin_top\"\r\n+            android:layout_marginBottom=\"@dimen/card_margin_bottom\"\r\n+            app:layout_constraintEnd_toEndOf=\"parent\"\r\n+            app:layout_constraintStart_toStartOf=\"parent\"\r\n+            app:layout_constraintTop_toTopOf=\"parent\">\r\n+\r\n+         <!--\r\n+        En el ejercicio 3 se engloba los dos TextView creados en el apartado anterior.\r\n+        -->\r\n+            <androidx.constraintlayout.widget.ConstraintLayout\r\n+                android:layout_width=\"match_parent\"\r\n+                android:layout_height=\"match_parent\"\r\n+                android:orientation=\"horizontal\">\r\n+        <!--\r\n+        Se a√±ade dos Textview para visualizar el titulo y el autor del libro.\r\n+        -->\r\n+                <TextView\r\n+                    android:id=\"@+id/titulo_book\"\r\n+                    android:layout_width=\"0dp\"\r\n+                    android:layout_height=\"wrap_content\"\r\n+                    android:text=\"Titulo Libro\"\r\n+                    android:textSize=\"@dimen/text_size_title\"\r\n+                    android:layout_marginLeft=\"@dimen/text_margin_left\"\r\n+                    android:layout_marginTop=\"@dimen/text_margin_top\"\r\n+                    android:textColor=\"#000\"\r\n+                    app:layout_constraintStart_toStartOf=\"parent\"\r\n+                    app:layout_constraintTop_toTopOf=\"parent\"/>\r\n+\r\n+                <TextView\r\n+                    android:id=\"@+id/autor_book\"\r\n+                    android:layout_width=\"0dp\"\r\n+                    android:layout_height=\"wrap_content\"\r\n+                    android:textColor=\"#757373\"\r\n+                    android:layout_marginRight=\"@dimen/text_margin_right\"\r\n+                    android:layout_marginBottom=\"@dimen/text_margin_bottom\"\r\n+                    android:text=\"Autor\"\r\n+                    android:textSize=\"@dimen/text_size_autor\"\r\n+                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n+                    app:layout_constraintBottom_toBottomOf=\"parent\"/>\r\n+\r\n+            </androidx.constraintlayout.widget.ConstraintLayout>\r\n+        </androidx.cardview.widget.CardView>\r\n+\r\n </LinearLayout>\r\n+\r\n+\r"
  },
  {
    "sha": "765d1a6e0833c08af8195a4b6ec001111e684ef1",
    "filename": "app/src/main/res/layout/fragment_book_detail.xml",
    "status": "modified",
    "additions": 52,
    "deletions": 8,
    "changes": 60,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/layout/fragment_book_detail.xml",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/layout/fragment_book_detail.xml",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/res/layout/fragment_book_detail.xml?ref=adaf8de0808e00d960d553c78e8789e7b549cd88",
    "patch": "@@ -2,12 +2,56 @@\n <!-- Este layout corresponde a la vista del frament BookDetailFragment,\r\n y que visualizara la informacion correspondiente a los detalles de un libro.\r\n -->\r\n-<TextView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n-    xmlns:tools=\"http://schemas.android.com/tools\"\r\n-    android:id=\"@+id/item_detail\"\r\n-    style=\"?android:attr/textAppearanceLarge\"\r\n+\r\n+<!-- En primer lugar, crearemos un LinearLayout global con una orientacion horizontal,\r\n+que recogera un ImageView y otro LinearLayout\r\n+-->\r\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n     android:layout_width=\"match_parent\"\r\n-    android:layout_height=\"match_parent\"\r\n-    android:padding=\"16dp\"\r\n-    android:textIsSelectable=\"true\"\r\n-    tools:context=\".BookDetailFragment\" />\n\\ No newline at end of file\n+    android:layout_height=\"wrap_content\"\r\n+    android:orientation=\"horizontal\">\r\n+\r\n+    <ImageView\r\n+        android:id=\"@+id/imagen_detail_book\"\r\n+        android:layout_width=\"@dimen/imagen_width\"\r\n+        android:layout_height=\"@dimen/imagen_heigth\"\r\n+        android:layout_margin=\"@dimen/imagen_margin\"\r\n+        android:src=\"@mipmap/libroejercicio2\"/>\r\n+\r\n+<!-- En este LinearLayout tendra una orientacion vertical y recogera el autor, fecha y\r\n+descripcion del libro\r\n+-->\r\n+    <LinearLayout\r\n+        android:layout_width=\"match_parent\"\r\n+        android:layout_height=\"wrap_content\"\r\n+        android:orientation=\"vertical\"\r\n+        android:layout_marginTop=\"32dp\"\r\n+        android:layout_marginRight=\"@dimen/text_margin\"\r\n+        android:layout_marginEnd=\"@dimen/text_margin\">\r\n+\r\n+        <TextView\r\n+            android:id=\"@+id/autor_detail_book\"\r\n+            android:layout_width=\"match_parent\"\r\n+            android:layout_height=\"wrap_content\"\r\n+            android:text=\"Autor\"\r\n+            android:textSize=\"@dimen/text_size_autor\"\r\n+            android:textColor=\"#000000\"/>\r\n+\r\n+        <TextView\r\n+            android:id=\"@+id/fecha_detail_book\"\r\n+            android:layout_width=\"match_parent\"\r\n+            android:layout_height=\"wrap_content\"\r\n+            android:text=\"Fecha\"\r\n+            android:textSize=\"@dimen/text_size_fecha\"\r\n+            android:textColor=\"#000000\"/>\r\n+\r\n+        <TextView\r\n+            android:id=\"@+id/descripcion_detail_book\"\r\n+            android:layout_width=\"match_parent\"\r\n+            android:layout_height=\"wrap_content\"\r\n+            android:text=\"Descripcion\"\r\n+            android:textSize=\"@dimen/text_size_descripcion\"\r\n+            android:textColor=\"#000000\"/>\r\n+\r\n+    </LinearLayout>\r\n+</LinearLayout>\r"
  },
  {
    "sha": "6563fd6f88f9ff341e32bef800f916c259692a47",
    "filename": "app/src/main/res/mipmap-hdpi/libroejercicio2.jpg",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/mipmap-hdpi/libroejercicio2.jpg",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/mipmap-hdpi/libroejercicio2.jpg",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/res/mipmap-hdpi/libroejercicio2.jpg?ref=adaf8de0808e00d960d553c78e8789e7b549cd88"
  },
  {
    "sha": "6be752187952f7e1824b8e024642e84047dde89f",
    "filename": "app/src/main/res/values/colors.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/values/colors.xml",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/values/colors.xml",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/res/values/colors.xml?ref=adaf8de0808e00d960d553c78e8789e7b549cd88",
    "patch": "@@ -3,4 +3,5 @@\n     <color name=\"colorPrimary\">#6200EE</color>\r\n     <color name=\"colorPrimaryDark\">#3700B3</color>\r\n     <color name=\"colorAccent\">#03DAC5</color>\r\n+\r\n </resources>\r"
  },
  {
    "sha": "49ac4089fce8d38acac9301fe6c2b10e0bb8a6ea",
    "filename": "app/src/main/res/values/dimens.xml",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/values/dimens.xml",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/values/dimens.xml",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/res/values/dimens.xml?ref=adaf8de0808e00d960d553c78e8789e7b549cd88",
    "patch": "@@ -4,4 +4,19 @@\n     <dimen name=\"app_bar_height\">200dp</dimen>\r\n     <dimen name=\"item_width\">200dp</dimen>\r\n     <dimen name=\"text_margin\">16dp</dimen>\r\n+    <dimen name=\"text_margin_left\">8dp</dimen>\r\n+    <dimen name=\"text_margin_right\">8dp</dimen>\r\n+    <dimen name=\"text_margin_bottom\">8dp</dimen>\r\n+    <dimen name=\"text_margin_top\">8dp</dimen>\r\n+    <dimen name=\"text_size_title\">18sp</dimen>\r\n+    <dimen name=\"text_size_autor\">18sp</dimen>\r\n+    <dimen name=\"text_size_fecha\">18sp</dimen>\r\n+    <dimen name=\"text_size_descripcion\">18sp</dimen>\r\n+    <dimen name=\"card_margin_top\">10dp</dimen>\r\n+    <dimen name=\"card_margin_bottom\">10dp</dimen>\r\n+\r\n+    <dimen name=\"imagen_width\">110dp</dimen>\r\n+    <dimen name=\"imagen_heigth\">160dp</dimen>\r\n+    <dimen name=\"imagen_margin\">16dp</dimen>\r\n+\r\n </resources>\r"
  },
  {
    "sha": "148c0554e21e382c2c7ca9a801fbbf2e2a0e52fa",
    "filename": "app/src/main/res/values/strings.xml",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/msalado0/PEC1Ejercicio1/blob/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/values/strings.xml",
    "raw_url": "https://github.com/msalado0/PEC1Ejercicio1/raw/adaf8de0808e00d960d553c78e8789e7b549cd88/app/src/main/res/values/strings.xml",
    "contents_url": "https://api.github.com/repos/msalado0/PEC1Ejercicio1/contents/app/src/main/res/values/strings.xml?ref=adaf8de0808e00d960d553c78e8789e7b549cd88",
    "patch": "@@ -1,7 +1,5 @@\n <resources>\r\n     <string name=\"app_name\">Pec1Android</string>\r\n-    <string name=\"title_item_detail\">Item Detail</string>\r\n \r\n     <!-- TODO: Remove or change this placeholder text -->\r\n-    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n </resources>\n\\ No newline at end of file"
  }
]
