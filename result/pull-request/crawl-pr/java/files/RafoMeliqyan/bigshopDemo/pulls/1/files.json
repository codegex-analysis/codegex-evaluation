[
  {
    "sha": "f5ae466bc6e4959fb83e73c01fe0e3f7f008ccc9",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 35,
    "deletions": 2,
    "changes": 37,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/pom.xml",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/pom.xml",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/pom.xml?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -5,10 +5,10 @@\n     <parent>\n         <groupId>org.springframework.boot</groupId>\n         <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.4.3</version>\n+        <version>2.4.2</version>\n         <relativePath/> <!-- lookup parent from repository -->\n     </parent>\n-    <groupId>am.bigshopDemo</groupId>\n+    <groupId>am.bigshop</groupId>\n     <artifactId>demo</artifactId>\n     <version>0.0.1-SNAPSHOT</version>\n     <name>demo</name>\n@@ -21,11 +21,35 @@\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-data-jpa</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-security</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-thymeleaf</artifactId>\n+        </dependency>\n         <dependency>\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-web</artifactId>\n         </dependency>\n \n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-mail</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>io.jsonwebtoken</groupId>\n+            <artifactId>jjwt</artifactId>\n+            <version>0.7.0</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.thymeleaf.extras</groupId>\n+            <artifactId>thymeleaf-extras-springsecurity5</artifactId>\n+        </dependency>\n+\n         <dependency>\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-devtools</artifactId>\n@@ -47,6 +71,15 @@\n             <artifactId>spring-boot-starter-test</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.springframework.security</groupId>\n+            <artifactId>spring-security-test</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-security</artifactId>\n+        </dependency>\n     </dependencies>\n \n     <build>"
  },
  {
    "sha": "71ba28e1c142b71ac4441f087c686a1644ed92e3",
    "filename": "src/main/java/am/bigshopdemo/demo/config/WebSecurityConfig.java",
    "status": "added",
    "additions": 77,
    "deletions": 0,
    "changes": 77,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/config/WebSecurityConfig.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/config/WebSecurityConfig.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/config/WebSecurityConfig.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,77 @@\n+package am.bigshopdemo.demo.config;\n+\n+import am.bigshopdemo.demo.security.JwtAuthenticationEntryPoint;\n+import am.bigshopdemo.demo.security.JwtAuthenticationTokenFilter;\n+import am.bigshopdemo.demo.security.UserDetailServiceImpl;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.config.http.SessionCreationPolicy;\n+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n+import org.springframework.security.crypto.password.PasswordEncoder;\n+import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n+\n+@Configuration\n+@EnableWebSecurity\n+public class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n+\n+    @Autowired\n+    private UserDetailServiceImpl userDetailsService;\n+\n+    @Autowired\n+    private PasswordEncoder passwordEncoder;\n+\n+    @Autowired\n+    private JwtAuthenticationEntryPoint unauthorizedHandler;\n+\n+    @Override\n+    protected void configure(HttpSecurity http) throws Exception {\n+        http.csrf().disable()\n+                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS)\n+                .and()\n+                .exceptionHandling().authenticationEntryPoint(unauthorizedHandler)\n+                .and()\n+                .authorizeRequests()\n+                .antMatchers(\"/address/add\").hasAnyAuthority(\"USER\")\n+                .antMatchers(\"/address/{userId}\").hasAnyAuthority(\"ADMIN\")\n+                .antMatchers(\"/delete/user/{id}\").hasAnyAuthority(\"ADMIN\")\n+                .antMatchers(\"/add/cart\").hasAnyAuthority(\"ADMIN\")\n+                .antMatchers(\"/add/order\").hasAnyAuthority(\"ADMIN\")\n+                .antMatchers(\"/add/product\").hasAnyAuthority(\"ADMIN\")\n+                .antMatchers(\"/product/update/{id}\").hasAnyAuthority(\"ADMIN\")\n+                .antMatchers(\"/product/delete/{id}\").hasAnyAuthority(\"ADMIN\")\n+                .antMatchers(\"/cart/{id}\").hasAnyAuthority(\"ADMIN\")\n+                .antMatchers(\"/addToCart/{userId}/{productId}\").hasAnyAuthority(\"USER\")\n+                .antMatchers(\"/ordersByUserId/{userId}\").hasAnyAuthority(\"ADMIN\")\n+                .antMatchers(\"/buy/{userId}/{productId}\").hasAnyAuthority(\"USER\")\n+                .antMatchers(\"/register\").hasAnyAuthority(\"USER\")\n+                .antMatchers(\"/activate/{email},{token}\").hasAnyAuthority(\"USER\")\n+                .antMatchers(\"/allUsers\").hasAnyAuthority(\"ADMIN\")\n+                .antMatchers(\"/user/{id}\").hasAnyAuthority(\"ADMIN\")\n+                .anyRequest().permitAll();\n+        http.addFilterBefore(authenticationTokenFilterBean(), UsernamePasswordAuthenticationFilter.class);\n+\n+        http.headers().cacheControl();\n+    }\n+\n+    @Override\n+    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n+        auth.userDetailsService(userDetailsService)\n+                .passwordEncoder(passwordEncoder);\n+    }\n+\n+    @Bean\n+    public PasswordEncoder encoder() {\n+        return new BCryptPasswordEncoder();\n+    }\n+\n+    @Bean\n+    public JwtAuthenticationTokenFilter authenticationTokenFilterBean() throws Exception{\n+        return new JwtAuthenticationTokenFilter();\n+    }\n+\n+}"
  },
  {
    "sha": "f8149f44d2363f0ab844610c266a4084ea086790",
    "filename": "src/main/java/am/bigshopdemo/demo/endpoint/AddressController.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/AddressController.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/AddressController.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/endpoint/AddressController.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,19 @@\n+package am.bigshopdemo.demo.endpoint;\n+\n+import am.bigshopdemo.demo.model.Address;\n+import am.bigshopdemo.demo.service.AddressService;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.web.bind.annotation.*;\n+\n+@RestController\n+@RequiredArgsConstructor\n+public class AddressController {\n+\n+    private final AddressService addressService;\n+\n+    @PostMapping(\"/address/add\")\n+    public void addAddress(@RequestBody Address address) {\n+        addressService.save(address);\n+    }\n+\n+}"
  },
  {
    "sha": "93fa830c501e26540049c83f15a78af99e817536",
    "filename": "src/main/java/am/bigshopdemo/demo/endpoint/AdminController.java",
    "status": "added",
    "additions": 99,
    "deletions": 0,
    "changes": 99,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/AdminController.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/AdminController.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/endpoint/AdminController.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,99 @@\n+package am.bigshopdemo.demo.endpoint;\n+\n+import am.bigshopdemo.demo.model.*;\n+import am.bigshopdemo.demo.service.*;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.web.bind.annotation.*;\n+import org.springframework.web.multipart.MultipartFile;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@RestController\n+@RequiredArgsConstructor\n+public class AdminController {\n+\n+    private final UserService userService;\n+    private final CartService cartService;\n+    private final OrdersService ordersService;\n+    private final ProductService productService;\n+    private final AddressService addressService;\n+    private final CategoryService categoryService;\n+    private final ImageService imageService;\n+\n+    @GetMapping(\"/delete/user/{id}\")\n+    public void deleteById(@PathVariable(\"id\") int id) {\n+        userService.deleteById(id);\n+    }\n+\n+    @PostMapping(\"/add/cart\")\n+    public void addCart(@RequestBody Cart cart) {\n+        cartService.save(cart);\n+    }\n+\n+    @PostMapping(\"/add/order\")\n+    public void addOrder(@RequestBody Orders orders) {\n+        ordersService.save(orders);\n+    }\n+\n+    @PostMapping(\"/add/product\")\n+    public void addProducts(@RequestBody Product product, @PathVariable(\"image\") MultipartFile file) {\n+        productService.save(product);\n+    }\n+\n+    @PutMapping(\"/product/update/{id}\")\n+    public void updateProduct(@RequestBody Product product, @PathVariable(\"id\") int id) throws Exception {\n+        Product product1 = productService.findById(id)\n+                .orElseThrow(() -> new Exception(\"Product does not exist\"));\n+        product1.setName(product.getName());\n+        product1.setPrice(product.getPrice());\n+        product1.setDescription(product.getDescription());\n+        product1.setCategory(product.getCategory());\n+        product1.setAction(product.getAction());\n+        product1.setCount(product.getCount());\n+        product1.setStatus(product.getStatus());\n+        product1.setFeaturing(product.getFeaturing());\n+        productService.save(product1);\n+    }\n+\n+    @DeleteMapping(\"/product/delete/{id}\")\n+    public void deleteProduct(@PathVariable(\"id\") int id) {\n+        productService.deleteById(id);\n+    }\n+\n+    @GetMapping(\"/cart/{id}\")\n+    public Cart getCart(@PathVariable(\"id\") int id) {\n+        return cartService.findCartById(id);\n+    }\n+\n+    @GetMapping(\"/address/{userId}\")\n+    public Address addresses(@PathVariable(\"userId\") int userId) {\n+        return addressService.findByUserId(userId);\n+    }\n+\n+    @PostMapping(\"/category/add\")\n+    public void addCategory(@RequestBody Category category) {\n+        categoryService.save(category);\n+    }\n+\n+    @DeleteMapping(\"/image/delete/{id}\")\n+    public void delete(@PathVariable(\"id\") int id) {\n+        imageService.deleteById(id);\n+    }\n+\n+    @GetMapping(\"/ordersByUserId/{userId}\")\n+    public Orders orders(@PathVariable(\"userId\") int userId) {\n+        return ordersService.findByUserId(userId);\n+    }\n+\n+    @GetMapping(\"/allUsers\")\n+    public List<User> users() {\n+        return userService.findAll();\n+    }\n+\n+    @GetMapping(\"/user/{id}\")\n+    public Optional<User> userById(@PathVariable(\"id\") int id) {\n+        return userService.findById(id);\n+    }\n+\n+}"
  },
  {
    "sha": "9b402f82d0b03b1f30567a25920b7c9282203db8",
    "filename": "src/main/java/am/bigshopdemo/demo/endpoint/CartController.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/CartController.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/CartController.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/endpoint/CartController.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,36 @@\n+package am.bigshopdemo.demo.endpoint;\n+\n+import am.bigshopdemo.demo.model.Cart;\n+import am.bigshopdemo.demo.model.Product;\n+import am.bigshopdemo.demo.model.User;\n+import am.bigshopdemo.demo.service.CartService;\n+import am.bigshopdemo.demo.service.ProductService;\n+import am.bigshopdemo.demo.service.UserService;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequiredArgsConstructor\n+public class CartController {\n+\n+    private final CartService cartService;\n+    private final ProductService productService;\n+    private final UserService userService;\n+\n+    //todo\n+    //CurrentUser\n+    @PutMapping(\"/addToCart/{userId}/{productId}\")\n+    public void addToCart(@PathVariable(\"userId\") int userId,\n+                          @PathVariable(\"productId\") int productId) {\n+        User one = userService.getOne(userId);\n+        List<Product> one1 = productService.getOne(productId);\n+        Cart cartByUserId = cartService.findCartByUserId(userId);\n+        cartByUserId.setUser(one);\n+        cartByUserId.setProducts(one1);\n+        cartService.save(cartByUserId);\n+    }\n+\n+}\n+"
  },
  {
    "sha": "79fa8d8d7da17f22e627c9d42b64b196eecdf90d",
    "filename": "src/main/java/am/bigshopdemo/demo/endpoint/CategoryController.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/CategoryController.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/CategoryController.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/endpoint/CategoryController.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,22 @@\n+package am.bigshopdemo.demo.endpoint;\n+\n+import am.bigshopdemo.demo.model.Category;\n+import am.bigshopdemo.demo.service.CategoryService;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequiredArgsConstructor\n+public class CategoryController {\n+\n+    private final CategoryService categoryService;\n+\n+    @GetMapping(\"/categories\")\n+    public List<Category> categories() {\n+        return categoryService.findAll();\n+    }\n+\n+}"
  },
  {
    "sha": "3a57fcdcc00f5accaff9680f41fbc01ca1948eb6",
    "filename": "src/main/java/am/bigshopdemo/demo/endpoint/ImageController.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/ImageController.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/ImageController.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/endpoint/ImageController.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,19 @@\n+package am.bigshopdemo.demo.endpoint;\n+\n+import am.bigshopdemo.demo.model.Image;\n+import am.bigshopdemo.demo.service.ImageService;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.web.bind.annotation.*;\n+\n+@RestController\n+@RequiredArgsConstructor\n+public class ImageController {\n+\n+    private final ImageService imageService;\n+\n+    @PostMapping(\"/add/image\")\n+    public void addImage(@RequestBody Image image) {\n+        imageService.save(image);\n+    }\n+\n+}"
  },
  {
    "sha": "e09c485fefab4c6e7a2404cce7f4d778bd7dc65d",
    "filename": "src/main/java/am/bigshopdemo/demo/endpoint/OrdersController.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/OrdersController.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/OrdersController.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/endpoint/OrdersController.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,39 @@\n+package am.bigshopdemo.demo.endpoint;\n+\n+import am.bigshopdemo.demo.model.Orders;\n+import am.bigshopdemo.demo.model.Product;\n+import am.bigshopdemo.demo.repository.ProductRepository;\n+import am.bigshopdemo.demo.service.OrdersService;\n+import am.bigshopdemo.demo.service.ProductService;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequiredArgsConstructor\n+public class OrdersController {\n+\n+    private final OrdersService ordersService;\n+    private final ProductService productService;\n+    private final ProductRepository productRepository;\n+\n+    @GetMapping(\"/ordersById/{id}\")\n+    public Orders ordersById(@PathVariable(\"id\") int id) {\n+        return ordersService.findOrdersById(id);\n+    }\n+\n+    //CurrentUser\n+    @PutMapping(\"/buy/{userId}/{productId}\")\n+    public void buy(@PathVariable(\"userId\") int userId,\n+                    @PathVariable(\"productId\") int productId) {\n+        Orders byUserId = ordersService.findByUserId(userId);\n+        List<Product> one = productService.getOne(productId);\n+        Product one1 = productRepository.getOne(productId);\n+        byUserId.setProducts(one);\n+        ordersService.save(byUserId);\n+        one1.setCount(one1.getCount()-1);\n+        productService.save(one1);\n+    }\n+\n+}"
  },
  {
    "sha": "22be4b44944ba87b10dcf085857648dc7e7945c5",
    "filename": "src/main/java/am/bigshopdemo/demo/endpoint/ProductController.java",
    "status": "added",
    "additions": 91,
    "deletions": 0,
    "changes": 91,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/ProductController.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/ProductController.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/endpoint/ProductController.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,91 @@\n+package am.bigshopdemo.demo.endpoint;\n+\n+import am.bigshopdemo.demo.model.Featuring;\n+import am.bigshopdemo.demo.model.Product;\n+import am.bigshopdemo.demo.model.Status;\n+import am.bigshopdemo.demo.repository.ProductRepository;\n+import am.bigshopdemo.demo.service.ProductService;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@RestController\n+@RequiredArgsConstructor\n+public class ProductController {\n+\n+    private final ProductRepository productRepository;\n+    private final ProductService productService;\n+\n+    @GetMapping(\"/allProducts\")\n+    public List<Product> allProducts() {\n+        return productService.findAll();\n+    }\n+\n+    @GetMapping(\"/searchProducts/{name}\")\n+    public List<Product> searchProducts(@PathVariable(\"name\") String name) {\n+        return productService.findAllByNameContaining(name);\n+    }\n+\n+    @GetMapping(\"/product/{id}\")\n+    public Optional<Product> product(@PathVariable(\"id\") int id) {\n+        return productService.findById(id);\n+    }\n+\n+    @GetMapping(\"/newProducts/{status}\")\n+    public List<Product> newProducts(@PathVariable(\"status\") Status status) {\n+        return productService.findAllByStatus(status);\n+    }\n+\n+    @GetMapping(\"/featuringProducts/{featuring}\")\n+    public List<Product> featuringProducts(@PathVariable(\"featuring\") Featuring featuring) {\n+        return productService.findAllByFeaturing(featuring);\n+    }\n+\n+    //Filters\n+    @GetMapping(\"/filterByBrand/{brand}\")\n+    public List<Product> productByBrand(@PathVariable(\"brand\") String brand) {\n+        return productService.findAllByBrand(brand);\n+    }\n+\n+    @GetMapping(\"/filterByCategory/{id}\")\n+    public List<Product> products(@PathVariable(\"id\") int id) {\n+        return productService.findAllByCategory_Id(id);\n+    }\n+\n+    @GetMapping(\"/filterByPrice/{min}/{max}\")\n+    public List<Product> filterByMinAndMax(@PathVariable(\"min\") int min,@PathVariable(\"max\") int max) {\n+        return productRepository.filterProductsByPrice(min, max);\n+    }\n+\n+    @GetMapping(\"/filterByCategoryAndBrand/{categoryId},{brand}\")\n+    public List<Product> filter(@PathVariable(\"categoryId\") int categoryId,@PathVariable(\"brand\") String brand) {\n+        return productRepository.findAllByCategoryIdAndBrand(categoryId, brand);\n+    }\n+\n+    @GetMapping(\"/filterByPriceAndCategory/{min}/{max}/{categoryId}\")\n+    public List<Product> filterByPriceAndCategory(@PathVariable(\"min\") int min,\n+                                                  @PathVariable(\"max\") int max,\n+                                                  @PathVariable(\"categoryId\") int categoryId) {\n+        return productRepository.filterProductsByPriceAndCategoryId(min,max,categoryId);\n+    }\n+\n+    @GetMapping(\"/filterByPriceAndBrand/{min}/{max}/{brand}\")\n+    public List<Product> filterByPriceAndBrand(@PathVariable(\"min\") int min,\n+                                               @PathVariable(\"max\") int max,\n+                                               @PathVariable(\"brand\") String brand) {\n+        return productRepository.filterProductsByPriceAndBrand(min,max,brand);\n+    }\n+\n+    @GetMapping(\"/filterByPriceAndBrandAndCategory/{min}/{max}/{brand}/{categoryId}\")\n+    public List<Product> filterByPriceAndBrandAndCategory(@PathVariable(\"min\") int min,\n+                                                          @PathVariable(\"max\") int max,\n+                                                          @PathVariable(\"brand\") String brand,\n+                                                          @PathVariable(\"categoryId\") int categoryId) {\n+        return productRepository.filterProductsByPriceAndBrandAndCategory(min,max,brand,categoryId);\n+    }\n+\n+}"
  },
  {
    "sha": "f4e718496a5acebf2002c13a912a45f84d67aab3",
    "filename": "src/main/java/am/bigshopdemo/demo/endpoint/UserController.java",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/UserController.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/endpoint/UserController.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/endpoint/UserController.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,69 @@\n+package am.bigshopdemo.demo.endpoint;\n+\n+import am.bigshopdemo.demo.model.Cart;\n+import am.bigshopdemo.demo.model.Orders;\n+import am.bigshopdemo.demo.model.User;\n+import am.bigshopdemo.demo.service.CartService;\n+import am.bigshopdemo.demo.service.EmailService;\n+import am.bigshopdemo.demo.service.OrdersService;\n+import am.bigshopdemo.demo.service.UserService;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.security.crypto.password.PasswordEncoder;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.Optional;\n+import java.util.UUID;\n+\n+@RestController\n+@RequiredArgsConstructor\n+public class UserController {\n+\n+    @Value(\"${file.upload.dir}\")\n+    private String uploadDir;\n+\n+    private final UserService userService;\n+    private final PasswordEncoder passwordEncoder;\n+    private final EmailService emailService;\n+    private final CartService cartService;\n+    private final OrdersService ordersService;\n+\n+    @PostMapping(\"/register\")\n+    public void register(@RequestBody User user, Cart cart, Orders orders) {\n+        Optional<User> byUsername = userService.findByEmail(user.getEmail());\n+        if (byUsername.isPresent()) {\n+            return;\n+        }\n+        user.setPassword(passwordEncoder.encode(user.getPassword()));\n+//        String profilePic = System.currentTimeMillis() + \"_\" + file.getOriginalFilename();\n+//        File image = new File(uploadDir, profilePic);\n+//        file.transferTo(image);\n+//        user.setImage(profilePic);\n+        user.setActive(false);\n+        user.setToken(UUID.randomUUID().toString());\n+        userService.save(user);\n+        cart.setUser(user);\n+        cart.setSum(0);\n+        cartService.save(cart);\n+        orders.setUser(user);\n+        orders.setSum(0);\n+        ordersService.save(orders);\n+        String link = \"http://localhost:8080/activate?email=\" + user.getEmail() + \"&token=\" + user.getToken();\n+        emailService.send(user.getEmail(),\n+                \"Welcome\", \"Dear \" + user.getName() + \" You have successfully registered. Please activate your account by clicking on: \" + link);\n+    }\n+\n+    @GetMapping(\"/activate/{email},{token}\")\n+    public void activate(@PathVariable(\"email\") String email, @PathVariable(\"token\") String token) {\n+        Optional<User> byEmail = userService.findByEmail(email);\n+        if (byEmail.isPresent()) {\n+            User user = byEmail.get();\n+            if (user.getToken().equals(token)) {\n+                user.setActive(true);\n+                user.setToken(\"\");\n+                userService.save(user);\n+            }\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "609fd9a9b966098d4ed9633ed2e25de2d7a7747d",
    "filename": "src/main/java/am/bigshopdemo/demo/model/Action.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Action.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Action.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/Action.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,5 @@\n+package am.bigshopdemo.demo.model;\n+\n+public enum Action {\n+    PAYED,PAY\n+}"
  },
  {
    "sha": "7fdf567fa9b4f158dd4d346ad8c68574efc2a35e",
    "filename": "src/main/java/am/bigshopdemo/demo/model/Address.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Address.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Address.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/Address.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,28 @@\n+package am.bigshopdemo.demo.model;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.persistence.*;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Entity\n+@Builder\n+@Table(name = \"address\")\n+public class Address {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private int id;\n+    private String country;\n+    private String region;\n+    private String city;\n+    private int phone;\n+    @ManyToOne\n+    private User user;\n+\n+}"
  },
  {
    "sha": "cdf55a318a66d039f074fa2c99c49a138a12340d",
    "filename": "src/main/java/am/bigshopdemo/demo/model/Cart.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Cart.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Cart.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/Cart.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,31 @@\n+package am.bigshopdemo.demo.model;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.persistence.*;\n+import java.util.List;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Entity\n+@Builder\n+@Table(name = \"cart\")\n+public class Cart {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private int id;\n+    @ManyToOne\n+    private User user;\n+    private int sum;\n+    @ManyToMany\n+    @JoinTable(name = \"cart_product\",\n+            joinColumns = @JoinColumn(name = \"cart_id\", referencedColumnName = \"id\"),\n+            inverseJoinColumns = @JoinColumn(name = \"product_id\", referencedColumnName = \"id\"))\n+    private List<Product> products;\n+\n+}"
  },
  {
    "sha": "587f774bfb79c9a87ced7858a4e3e4cdd33aba0a",
    "filename": "src/main/java/am/bigshopdemo/demo/model/Category.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Category.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Category.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/Category.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,23 @@\n+package am.bigshopdemo.demo.model;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.persistence.*;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Entity\n+@Builder\n+@Table(name = \"category\")\n+public class Category {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private int id;\n+    private String name;\n+\n+}"
  },
  {
    "sha": "065082117dd6bb19a115b24aa2583d45f05bfcd0",
    "filename": "src/main/java/am/bigshopdemo/demo/model/Featuring.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Featuring.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Featuring.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/Featuring.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,5 @@\n+package am.bigshopdemo.demo.model;\n+\n+public enum Featuring {\n+    FEATURED,NOT_FEATURED\n+}"
  },
  {
    "sha": "cb8a18139054913334512daba5a170391d8ad448",
    "filename": "src/main/java/am/bigshopdemo/demo/model/Gender.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Gender.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Gender.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/Gender.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,5 @@\n+package am.bigshopdemo.demo.model;\n+\n+public enum Gender {\n+    MALE,FEMALE\n+}"
  },
  {
    "sha": "c4b203352d150fded258a1e50a9a1fad4c88cb02",
    "filename": "src/main/java/am/bigshopdemo/demo/model/Image.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Image.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Image.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/Image.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,27 @@\n+package am.bigshopdemo.demo.model;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Entity\n+@Builder\n+@Table(name = \"image\")\n+public class Image {\n+\n+    @Id\n+    private int id;\n+    private String name;\n+    @ManyToOne\n+    private Product product;\n+\n+}"
  },
  {
    "sha": "a2fc5352b0607c2018522d7070a2b7c980d85a9d",
    "filename": "src/main/java/am/bigshopdemo/demo/model/Orders.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Orders.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Orders.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/Orders.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,31 @@\n+package am.bigshopdemo.demo.model;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.persistence.*;\n+import java.util.List;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Entity\n+@Builder\n+@Table(name = \"orders\")\n+public class Orders {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private int id;\n+    @ManyToOne\n+    private User user;\n+    private int sum;\n+    @ManyToMany\n+    @JoinTable(name = \"orders_product\",\n+            joinColumns = @JoinColumn(name = \"orders_id\", referencedColumnName = \"id\"),\n+            inverseJoinColumns = @JoinColumn(name = \"product_id\", referencedColumnName = \"id\"))\n+    private List<Product> products;\n+\n+}"
  },
  {
    "sha": "e53aab6aedb4727d2481ed8cffb082e7e5230fd9",
    "filename": "src/main/java/am/bigshopdemo/demo/model/Product.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Product.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Product.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/Product.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,35 @@\n+package am.bigshopdemo.demo.model;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.persistence.*;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Entity\n+@Builder\n+@Table(name = \"product\")\n+public class Product {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private int id;\n+    private String name;\n+    private int price;\n+    private String description;\n+    @ManyToOne\n+    private Category category;\n+    @Enumerated(value = EnumType.STRING)\n+    private Action action;\n+    private int count;\n+    @Enumerated(value = EnumType.STRING)\n+    private Status status;\n+    @Enumerated(value = EnumType.STRING)\n+    private Featuring featuring;\n+    private String brand;\n+\n+}"
  },
  {
    "sha": "7990c8c9c13c00df403c5984cb3fd406b243daa2",
    "filename": "src/main/java/am/bigshopdemo/demo/model/Role.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Role.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Role.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/Role.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,5 @@\n+package am.bigshopdemo.demo.model;\n+\n+public enum Role {\n+    USER,ADMIN\n+}"
  },
  {
    "sha": "b629488f0f2f7bd545338130437ad20b8f1ec645",
    "filename": "src/main/java/am/bigshopdemo/demo/model/Status.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Status.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/Status.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/Status.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,5 @@\n+package am.bigshopdemo.demo.model;\n+\n+public enum Status {\n+    NEW,OLD\n+}"
  },
  {
    "sha": "03183e630f1928470d963f35088291cd010258b4",
    "filename": "src/main/java/am/bigshopdemo/demo/model/User.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/User.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/model/User.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/model/User.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,34 @@\n+package am.bigshopdemo.demo.model;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.persistence.*;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Entity\n+@Builder\n+@Table(name = \"user\")\n+public class User {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private int id;\n+    private String name;\n+    private String surname;\n+    private int age;\n+    private String email;\n+    private String password;\n+    @Enumerated(value = EnumType.STRING)\n+    private Gender gender;\n+    @Enumerated(value = EnumType.STRING)\n+    private Role role;\n+    private String image;\n+    private boolean active;\n+    private String token;\n+\n+}"
  },
  {
    "sha": "cd3d79350b38bed950d7027a54c8643214684075",
    "filename": "src/main/java/am/bigshopdemo/demo/repository/AddressRepository.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/AddressRepository.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/AddressRepository.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/repository/AddressRepository.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,12 @@\n+package am.bigshopdemo.demo.repository;\n+\n+import am.bigshopdemo.demo.model.Address;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface AddressRepository extends JpaRepository<Address, Integer> {\n+\n+    Address findByUserId(Integer userId);\n+\n+}"
  },
  {
    "sha": "17fc35dd369f468d187317c4a4770908bcbb3339",
    "filename": "src/main/java/am/bigshopdemo/demo/repository/CartRepository.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/CartRepository.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/CartRepository.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/repository/CartRepository.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,18 @@\n+package am.bigshopdemo.demo.repository;\n+\n+import am.bigshopdemo.demo.model.Cart;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface CartRepository extends JpaRepository<Cart, Integer> {\n+\n+    Cart findCartByUserId(Integer userId);\n+    Cart findCartById(Integer id);\n+\n+    @Query(value = \"DELETE FROM cart WHERE products.id =:productId\",  nativeQuery = true)\n+    void deleteProducts(@Param(\"productId\") Integer productId);\n+\n+}"
  },
  {
    "sha": "b876fcf1a502747d8c6e2af48fce0000c46b2989",
    "filename": "src/main/java/am/bigshopdemo/demo/repository/CategoryRepository.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/CategoryRepository.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/CategoryRepository.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/repository/CategoryRepository.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,10 @@\n+package am.bigshopdemo.demo.repository;\n+\n+import am.bigshopdemo.demo.model.Category;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface CategoryRepository extends JpaRepository<Category, Integer> {\n+\n+}"
  },
  {
    "sha": "96d0de8bdd4c9f39c1d90e152299248f19c0ee7d",
    "filename": "src/main/java/am/bigshopdemo/demo/repository/ImageRepository.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/ImageRepository.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/ImageRepository.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/repository/ImageRepository.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,12 @@\n+package am.bigshopdemo.demo.repository;\n+\n+import am.bigshopdemo.demo.model.Image;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface ImageRepository extends JpaRepository<Image, Integer> {\n+\n+\n+\n+}"
  },
  {
    "sha": "fe13e8646b88753c989dbfb130176f847d1646ad",
    "filename": "src/main/java/am/bigshopdemo/demo/repository/OrdersRepository.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/OrdersRepository.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/OrdersRepository.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/repository/OrdersRepository.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,13 @@\n+package am.bigshopdemo.demo.repository;\n+\n+import am.bigshopdemo.demo.model.Orders;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+\n+@Repository\n+public interface OrdersRepository extends JpaRepository<Orders, Integer> {\n+\n+    Orders findByUserId(Integer userId);\n+    Orders findOrdersById(Integer id);\n+\n+}"
  },
  {
    "sha": "78b7b85f0be462b617c4f4ca5b340484f9ea65d8",
    "filename": "src/main/java/am/bigshopdemo/demo/repository/ProductRepository.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/ProductRepository.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/ProductRepository.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/repository/ProductRepository.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,39 @@\n+package am.bigshopdemo.demo.repository;\n+\n+import am.bigshopdemo.demo.model.Featuring;\n+import am.bigshopdemo.demo.model.Product;\n+import am.bigshopdemo.demo.model.Status;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import java.util.List;\n+\n+@Repository\n+public interface ProductRepository extends JpaRepository<Product, Integer> {\n+\n+    List<Product> findAllByNameContaining(String name);\n+    List<Product> findAllByStatus(Status status);\n+    List<Product> findAllByFeaturing(Featuring featuring);\n+    List<Product> findAllById(Integer id);\n+\n+    //Filters\n+    List<Product> findAllByBrand(String brand);\n+    List<Product> findAllByCategory_Id(Integer id);\n+\n+    List<Product> findAllByCategoryIdAndBrand(Integer categoryId, String brand);\n+\n+    @Query(value = \"SELECT * FROM product WHERE price >=:min and price <=:max\", nativeQuery = true)\n+    List<Product> filterProductsByPrice(@Param(\"min\") Integer min, @Param(\"max\") Integer max);\n+\n+    @Query(value = \"SELECT * FROM product WHERE price >=:min and price <=:max and category_id = :categoryId\", nativeQuery = true)\n+    List<Product> filterProductsByPriceAndCategoryId(@Param(\"min\") Integer min, @Param(\"max\") Integer max, @Param(\"categoryId\") Integer categoryId);\n+\n+    @Query(value = \"SELECT * FROM product WHERE price >=:min and price <=:max and brand = :brand\", nativeQuery = true)\n+    List<Product> filterProductsByPriceAndBrand(@Param(\"min\") Integer min, @Param(\"max\") Integer max, @Param(\"brand\") String brand);\n+\n+    @Query(value = \"SELECT * FROM product WHERE price >=:min and price <=:max and brand = :brand and category_id = :categoryId\", nativeQuery = true)\n+    List<Product> filterProductsByPriceAndBrandAndCategory(@Param(\"min\") Integer min, @Param(\"max\") Integer max, @Param(\"brand\") String brand, @Param(\"categoryId\") Integer categoryId);\n+\n+}"
  },
  {
    "sha": "b537507d187eec670596bff0889905a02e24a42b",
    "filename": "src/main/java/am/bigshopdemo/demo/repository/UserRepository.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/UserRepository.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/repository/UserRepository.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/repository/UserRepository.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,12 @@\n+package am.bigshopdemo.demo.repository;\n+\n+import am.bigshopdemo.demo.model.User;\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+\n+import java.util.Optional;\n+\n+@Repository\n+public interface UserRepository extends JpaRepository<User, Integer> {\n+    Optional<User> findByEmail(String email);\n+}"
  },
  {
    "sha": "03af578b4325e9e9d8f3d05aa78b9feab2889921",
    "filename": "src/main/java/am/bigshopdemo/demo/security/CurrentUser.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/RafoMeliqyan/bigshopDemo/blob/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/security/CurrentUser.java",
    "raw_url": "https://github.com/RafoMeliqyan/bigshopDemo/raw/6b0382cb5e9fe7316440a632695cbe6ba564a639/src/main/java/am/bigshopdemo/demo/security/CurrentUser.java",
    "contents_url": "https://api.github.com/repos/RafoMeliqyan/bigshopDemo/contents/src/main/java/am/bigshopdemo/demo/security/CurrentUser.java?ref=6b0382cb5e9fe7316440a632695cbe6ba564a639",
    "patch": "@@ -0,0 +1,19 @@\n+package am.bigshopdemo.demo.security;\n+\n+import am.bigshopdemo.demo.model.User;\n+import org.springframework.security.core.authority.AuthorityUtils;\n+\n+public class CurrentUser extends org.springframework.security.core.userdetails.User {\n+\n+    private final User user;\n+\n+    public CurrentUser(User user) {\n+        super(user.getEmail(), user.getPassword(),\n+                AuthorityUtils.createAuthorityList(user.getRole().name()));\n+        this.user = user;\n+    }\n+\n+    public User getUser() {\n+        return user;\n+    }\n+}"
  }
]
