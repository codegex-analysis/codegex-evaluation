[
  {
    "sha": "b6b0063932156daac58716513043c882e1dcb1dd",
    "filename": "IoTHub-to-GraphQL/Azure IoT Hub to Hasura GraphQL.md",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/gschmutz/various-demos/blob/5f13ee8df7de0cdd789d98cedb124c8f5f81fd7d/IoTHub-to-GraphQL/Azure%20IoT%20Hub%20to%20Hasura%20GraphQL.md",
    "raw_url": "https://github.com/gschmutz/various-demos/raw/5f13ee8df7de0cdd789d98cedb124c8f5f81fd7d/IoTHub-to-GraphQL/Azure%20IoT%20Hub%20to%20Hasura%20GraphQL.md",
    "contents_url": "https://api.github.com/repos/gschmutz/various-demos/contents/IoTHub-to-GraphQL/Azure%20IoT%20Hub%20to%20Hasura%20GraphQL.md?ref=5f13ee8df7de0cdd789d98cedb124c8f5f81fd7d",
    "patch": "@@ -107,7 +107,7 @@ The following Avro schema for the message is available in the `src/main/meta` ma\n Using maven we can easily register it in the schema registry using: \n \n ```\n-mvn schema:registry:register\n+mvn schema-registry:register\n ```\n \n For that to work the alias `dataplatform` has to be set in `/etc/hosts`.\n@@ -132,6 +132,8 @@ Import the StreamSets data flow in `src/streamsets`.\n ## PostgreSQL\n \n ```\n+CREATE SCHEMA IF NOT EXISTS sensor_readings;\n+\n DROP TABLE IF EXISTS \"readings\";\n CREATE TABLE \"sensor_readings\".\"readings\" (\n     \"uuid\" text NOT NULL,"
  }
]
