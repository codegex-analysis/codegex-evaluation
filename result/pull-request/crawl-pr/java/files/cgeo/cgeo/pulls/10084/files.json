[
  {
    "sha": "b1a47060e815891ed22d80aa2e11dc4dd482bbc4",
    "filename": "main/AndroidManifest.xml",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/AndroidManifest.xml",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/AndroidManifest.xml?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -823,6 +823,19 @@\n             </intent-filter>\n         </activity>\n \n+        <activity\n+            android:name=\"cgeo.geocaching.settings.LCAuthorizationActivity\"\n+            android:configChanges=\"keyboardHidden|orientation|screenSize\"\n+            android:label=\"@string/app_name\"\n+            android:launchMode=\"singleTask\"\n+            android:windowSoftInputMode=\"stateHidden\" >\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.VIEW\" />\n+\n+                <category android:name=\"android.intent.category.DEFAULT\" />\n+            </intent-filter>\n+        </activity>\n+\n         <activity\n             android:name=\"cgeo.geocaching.connector.su.SuAuthorizationActivity\"\n             android:configChanges=\"keyboardHidden|orientation|screenSize\""
  },
  {
    "sha": "c98550b858b70f0067a45f962d2a14b677162ca0",
    "filename": "main/res/drawable-hdpi/dot_advlab.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/drawable-hdpi/dot_advlab.png",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/drawable-hdpi/dot_advlab.png",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/res/drawable-hdpi/dot_advlab.png?ref=84ab7eddd2385f4849ae6270a978feaed83276bf"
  },
  {
    "sha": "e5028a36324208b69e714cc8b2e757fa91645aad",
    "filename": "main/res/drawable-hdpi/type_advlab.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/drawable-hdpi/type_advlab.png",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/drawable-hdpi/type_advlab.png",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/res/drawable-hdpi/type_advlab.png?ref=84ab7eddd2385f4849ae6270a978feaed83276bf"
  },
  {
    "sha": "5428a9ca7677bed9454ece77a864c53462500ee7",
    "filename": "main/res/drawable-mdpi/dot_advlab.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/drawable-mdpi/dot_advlab.png",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/drawable-mdpi/dot_advlab.png",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/res/drawable-mdpi/dot_advlab.png?ref=84ab7eddd2385f4849ae6270a978feaed83276bf"
  },
  {
    "sha": "0806bfe63ca9dfa021085b96da6f0afb0e8aa21a",
    "filename": "main/res/drawable-mdpi/type_advlab.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/drawable-mdpi/type_advlab.png",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/drawable-mdpi/type_advlab.png",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/res/drawable-mdpi/type_advlab.png?ref=84ab7eddd2385f4849ae6270a978feaed83276bf"
  },
  {
    "sha": "36fb371182f2899c18c3ed7051154647fe9e0015",
    "filename": "main/res/values/preference_keys.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/values/preference_keys.xml",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/values/preference_keys.xml",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/res/values/preference_keys.xml?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -17,6 +17,7 @@\n     <string translatable=\"false\" name=\"preference_screen_ocro\">preference_screen_ocro</string>\n     <string translatable=\"false\" name=\"preference_screen_ocuk\">preference_screen_ocuk</string>\n     <string translatable=\"false\" name=\"preference_screen_ec\">preference_screen_ec</string>\n+    <string translatable=\"false\" name=\"preference_screen_lc\">preference_screen_lc</string>\n     <string translatable=\"false\" name=\"preference_screen_su\">preference_screen_su</string>\n     <string translatable=\"false\" name=\"preference_screen_twitter\">preference_screen_twitter</string>\n     <string translatable=\"false\" name=\"preference_screen_navigation_menu\">fakekey_navigation_menu_screen</string>\n@@ -34,6 +35,7 @@\n     <string translatable=\"false\" name=\"pref_fakekey_geokrety_authorization\">fakekey_geokrety_authorization</string>\n     <string translatable=\"false\" name=\"pref_fakekey_gc_authorization\">fakekey_gc_authorization</string>\n     <string translatable=\"false\" name=\"pref_fakekey_ec_authorization\">fakekey_ec_authorization</string>\n+    <string translatable=\"false\" name=\"pref_fakekey_lc_authorization\">fakekey_lc_authorization</string>\n     <string translatable=\"false\" name=\"pref_fakekey_su_authorization\">fakekey_su_authorization</string>\n     <string translatable=\"false\" name=\"pref_fakekey_gcvote_authorization\">fakekey_gcvote_authorization</string>\n     <string translatable=\"false\" name=\"pref_connectorGCActive\">connectorGCActive</string>\n@@ -48,10 +50,14 @@\n     <string translatable=\"false\" name=\"pref_connectorSUActive\">connectorSUActive</string>\n     <string translatable=\"false\" name=\"pref_ecusername\">ecusername</string>\n     <string translatable=\"false\" name=\"pref_ecpassword\">ecpassword</string>\n+    <string translatable=\"false\" name=\"pref_lcusername\">lcusername</string>\n+    <string translatable=\"false\" name=\"pref_lcpassword\">lcpassword</string>\n     <string translatable=\"false\" name=\"pref_ec_avatar\">ec_avatar</string>\n+    <string translatable=\"false\" name=\"pref_lc_avatar\">lc_avatar</string>\n     <string translatable=\"false\" name=\"pref_gc_avatar\">gc_avatar</string>\n     <string translatable=\"false\" name=\"pref_gcvote_avatar\">gcvote_avatar</string>\n     <string translatable=\"false\" name=\"pref_connectorECActive\">connectorECActive</string>\n+    <string translatable=\"false\" name=\"pref_connectorLCActive\">connectorLCActive</string>\n     <string translatable=\"false\" name=\"pref_connectorGeokretyActive\">connectorGeokretyActive</string>\n     <string translatable=\"false\" name=\"pref_user_vote\">user-vote</string>\n     <string translatable=\"false\" name=\"pref_pass_vote\">pass-vote</string>\n@@ -233,6 +239,7 @@\n     <string translatable=\"false\" name=\"pref_fakekey_ocuk_register\">fakekey_ocuk_register</string>\n     <string translatable=\"false\" name=\"pref_fakekey_ocuk_website\">fakekey_ocuk_website</string>\n     <string translatable=\"false\" name=\"pref_fakekey_ec_website\">fakekey_ec_website</string>\n+    <string translatable=\"false\" name=\"pref_fakekey_lc_website\">fakekey_lc_website</string>\n     <string translatable=\"false\" name=\"pref_fakekey_su_website\">fakekey_su_website</string>\n     <string translatable=\"false\" name=\"pref_su_tokensecret\">su_tokensecret</string>\n     <string translatable=\"false\" name=\"pref_su_tokenpublic\">su_tokenpublic</string>"
  },
  {
    "sha": "1a39641216e86c0dc8a3d4f3ade055b5ecdc5541",
    "filename": "main/res/values/strings.xml",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/values/strings.xml",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/values/strings.xml",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/res/values/strings.xml?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -36,6 +36,7 @@\n     <string name=\"gps\">GPS Adventures Exhibit</string>\n     <string name=\"block\">Geocaching HQ Block Party</string>\n     <string name=\"locationless\">Locationless (Reverse) Cache</string>\n+    <string name=\"advlab\">Adventure Lab Cache</string>\n     <string name=\"userdefined\">User defined cache</string>\n     <string name=\"unknown\">Unknown Type</string>\n \n@@ -180,6 +181,7 @@\n     <string name=\"err_captcha\">Captcha required. Please refer to our <a href=\"https://www.cgeo.org/faq#login-failed\">FAQ</a> for guidance.</string>\n     <string name=\"err_server\">Unable to contact Geocaching.com. The website may be down or your internet connection not working.</string>\n     <string name=\"err_server_ec\">Unable to contact Extremcaching.com. The website may be down or your internet connection not working.</string>\n+    <string name=\"err_server_lc\">Unable to contact labs.geocaching.com. The website may be down or your internet connection not working.</string>\n     <string name=\"err_server_su\">Unable to contact Geocaching.su. The website may be down or your internet connection not working.</string>\n     <string name=\"err_server_gk\">Unable to contact GeoKrety.org. The website may be down or your internet connection not working.</string>\n     <string name=\"err_login\">No Login information stored</string>\n@@ -231,6 +233,7 @@\n     <string name=\"err_log_post_missing_coordinates\">Coordinates are missing.</string>\n     <string name=\"err_log_post_failed\">It seems that your log was not posted. Please check it on the cache originating website.</string>\n     <string name=\"err_log_post_failed_ec\">It seems that your log was not posted. Please check it on Extremcaching.com.</string>\n+    <string name=\"err_log_post_failed_lc\">It seems that your log was not posted. Please check it on labs.geocaching.com.</string>\n     <string name=\"err_log_post_failed_gk\">It seems that your log was not posted. Please check it on GeoKrety.org.</string>\n     <string name=\"err_logimage_post_failed\">It seems that your log image was not uploaded. Please check it on the cache originating website.</string>\n     <string name=\"err_parse_lat\">c:geo can\\'t parse latitude.</string>\n@@ -526,13 +529,15 @@\n \n     <string name=\"settings_activate_gc\">Activate</string>\n     <string name=\"settings_activate_ec\">Activate</string>\n+    <string name=\"settings_activate_lc\">Activate</string>\n     <string name=\"settings_gc_legal_note\">With using the service of geocaching.com, you accept the Groundspeak Terms of Use.</string>\n     <string name=\"settings_info_facebook_login_title\">Login using Facebook or Google</string>\n     <string name=\"settings_info_facebook_login\">You can\\'t make c:geo login to geocaching.com with your Facebook or Google account. But there is a simple workaround…</string>\n     <string name=\"settings_authorize\">Authorize c:geo</string>\n     <string name=\"settings_reauthorize\">Update or remove authorization</string>\n     <string name=\"settings_gc_description\">Authorize c:geo with geocaching.com to search for caches.</string>\n     <string name=\"settings_ec_description\">Authorize c:geo with extremcaching.com to search for caches and access/filter your found caches.</string>\n+    <string name=\"settings_lc_description\">Authorize c:geo with labs.geocaching.com to search for caches and access/filter your found caches.</string>\n     <string name=\"settings_su_description\">Authorize c:geo with geocaching.su to search for caches.</string>\n     <string name=\"settings_activate_oc\">Activate</string>\n     <string name=\"init_summary_oc_de\">Load caches from opencaching.de</string>"
  },
  {
    "sha": "a1cd5d3675e5a0d63315a432c2c60d39b2d4bc96",
    "filename": "main/res/values/strings_not_translatable.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/values/strings_not_translatable.xml",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/values/strings_not_translatable.xml",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/res/values/strings_not_translatable.xml?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -161,6 +161,7 @@\n     <string translatable=\"false\" name=\"caches_map_locus\">Locus</string>\n     <string translatable=\"false\" name=\"settings_title_gc\">Geocaching.com</string>\n     <string translatable=\"false\" name=\"settings_title_ec\">Extremcaching.com</string>\n+    <string translatable=\"false\" name=\"settings_title_lc\">Labs.geocaching.com</string>\n     <string translatable=\"false\" name=\"init_oc\">Opencaching.de</string>\n     <string translatable=\"false\" name=\"auth_ocde\">opencaching.de</string>\n     <string translatable=\"false\" name=\"init_oc_pl\">Opencaching.pl</string>"
  },
  {
    "sha": "13663f385fdbf6daa7306bfe25ac8b745baa7566",
    "filename": "main/res/xml/preferences.xml",
    "status": "modified",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/xml/preferences.xml",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/res/xml/preferences.xml",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/res/xml/preferences.xml?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -323,6 +323,37 @@\n                         app:connector=\"SU\" />\n                 </PreferenceCategory>\n             </PreferenceScreen>\n+\n+            <PreferenceScreen\n+                android:key=\"@string/preference_screen_lc\"\n+                android:title=\"@string/settings_title_lc\" >\n+\n+                <PreferenceCategory android:title=\"@string/settings_settings\"\n+                    android:layout=\"@layout/preference_category\" >\n+                    <CheckBoxPreference\n+                        android:defaultValue=\"false\"\n+                        android:key=\"@string/pref_connectorLCActive\"\n+                        android:title=\"@string/settings_activate_lc\" />\n+                    <cgeo.geocaching.settings.TextPreference\n+                        android:dependency=\"@string/pref_connectorLCActive\"\n+                        android:layout=\"@layout/text_preference\"\n+                        android:text=\"@string/settings_lc_description\" />\n+                    <cgeo.geocaching.settings.CredentialsPreference\n+                        android:dependency=\"@string/pref_connectorLCActive\"\n+                        android:summary=\"@string/auth_unconnected\"\n+                        android:key=\"@string/pref_fakekey_lc_authorization\" />\n+                </PreferenceCategory>\n+\n+                <PreferenceCategory android:title=\"@string/settings_information\"\n+                    android:layout=\"@layout/preference_category\" >\n+                    <Preference\n+                        android:key=\"@string/pref_fakekey_lc_website\"\n+                        android:title=\"@string/settings_open_website\" />\n+                    <cgeo.geocaching.settings.CapabilitiesPreference\n+                        android:title=\"@string/settings_features\"\n+                        app:connector=\"LC\" />\n+                </PreferenceCategory>\n+            </PreferenceScreen>\n         </PreferenceCategory>\n \n         <PreferenceCategory android:title=\"@string/settings_category_geocaching_additionals\""
  },
  {
    "sha": "faf48acc2205d6e98cdc0ecbacf7e6585052f0ce",
    "filename": "main/src/cgeo/geocaching/connector/ConnectorFactory.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/connector/ConnectorFactory.java",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/connector/ConnectorFactory.java",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/src/cgeo/geocaching/connector/ConnectorFactory.java?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -11,6 +11,7 @@\n import cgeo.geocaching.connector.capability.ISearchByOwner;\n import cgeo.geocaching.connector.capability.ISearchByViewPort;\n import cgeo.geocaching.connector.ec.ECConnector;\n+import cgeo.geocaching.connector.lc.LCConnector;\n import cgeo.geocaching.connector.ga.GeocachingAustraliaConnector;\n import cgeo.geocaching.connector.gc.GCConnector;\n import cgeo.geocaching.connector.ge.GeopeitusConnector;\n@@ -59,6 +60,7 @@\n     @NonNull private static final Collection<IConnector> CONNECTORS = Collections.unmodifiableCollection(Arrays.<IConnector> asList(\n             GCConnector.getInstance(),\n             ECConnector.getInstance(),\n+            LCConnector.getInstance(),\n             new OCDEConnector(),\n             new OCCZConnector(),\n             new OCApiLiveConnector(\"opencache.uk\", \"opencache.uk\", false, \"OK\", \"CC BY-NC-SA 2.5\","
  },
  {
    "sha": "66dd7d27a4d045e80621b358da9ee5554f524767",
    "filename": "main/src/cgeo/geocaching/connector/lc/LCApi.java",
    "status": "added",
    "additions": 265,
    "deletions": 0,
    "changes": 265,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/connector/lc/LCApi.java",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/connector/lc/LCApi.java",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/src/cgeo/geocaching/connector/lc/LCApi.java?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -0,0 +1,265 @@\n+package cgeo.geocaching.connector.lc;\n+\n+import cgeo.geocaching.enumerations.CacheSize;\n+import cgeo.geocaching.enumerations.CacheType;\n+import cgeo.geocaching.enumerations.LoadFlags.SaveFlag;\n+import cgeo.geocaching.enumerations.StatusCode;\n+import cgeo.geocaching.enumerations.WaypointType;\n+import cgeo.geocaching.location.Geopoint;\n+import cgeo.geocaching.location.Viewport;\n+import cgeo.geocaching.models.Geocache;\n+import cgeo.geocaching.models.Waypoint;\n+import cgeo.geocaching.network.Network;\n+import cgeo.geocaching.network.Parameters;\n+import cgeo.geocaching.storage.DataStore;\n+import cgeo.geocaching.utils.JsonUtils;\n+import cgeo.geocaching.utils.Log;\n+import cgeo.geocaching.utils.SynchronizedDateFormat;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import java.text.ParseException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.EnumSet;\n+import java.util.List;\n+import java.util.Locale;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.fasterxml.jackson.databind.node.ArrayNode;\n+import io.reactivex.rxjava3.core.Single;\n+import io.reactivex.rxjava3.functions.Function;\n+import okhttp3.Response;\n+\n+final class LCApi {\n+\n+    private static final SynchronizedDateFormat DATE_FORMAT = new SynchronizedDateFormat(\"yyyy-MM-dd\", Locale.getDefault());\n+    @NonNull\n+    private static final String API_HOST = \"https://labs-api.geocaching.com/Api/Adventures/\";\n+\n+    @NonNull\n+    private static final LCLogin lcLogin = LCLogin.getInstance();\n+\n+    private LCApi() {\n+        // utility class with static methods\n+    }\n+\n+    @Nullable\n+    protected static Geocache searchByGeocode(final String geocode) {\n+        try {\n+            final Response response = apiRequest(geocode.substring(2)).blockingGet();\n+            return importCacheFromJSON(response);\n+        } catch (final Exception ignored) {\n+            return null;\n+        }\n+    }\n+\n+    @NonNull\n+    protected static Collection<Geocache> searchByBBox(final Viewport viewport) {\n+\n+        if (viewport.getLatitudeSpan() == 0 || viewport.getLongitudeSpan() == 0) {\n+            return Collections.emptyList();\n+        }\n+\n+        final double latcenter = (viewport.getLatitudeMax()  + viewport.getLatitudeMin())  / 2;\n+        final double loncenter = (viewport.getLongitudeMax() + viewport.getLongitudeMin()) / 2;\n+        final Geopoint center = new Geopoint(latcenter, loncenter);\n+        return searchByCenter(center);\n+    }\n+\n+    @NonNull\n+    protected static Collection<Geocache> searchByCenter(final Geopoint center) {\n+        final Parameters params = new Parameters(\"skip\", \"0\");\n+        params.add(\"take\", \"100\");\n+        params.add(\"radiusMeters\", \"10000\");\n+        params.add(\"origin.latitude\", String.valueOf(center.getLatitude()));\n+        params.add(\"origin.longitude\", String.valueOf(center.getLongitude()));\n+        try {\n+            final Response response = apiRequest(\"SearchV3\", params).blockingGet();\n+            return importCachesFromJSON(response);\n+        } catch (final Exception ignored) {\n+            return Collections.emptyList();\n+        }\n+    }\n+\n+    @NonNull\n+    private static Single<Response> apiRequest(final String uri) {\n+        return Network.getRequest(API_HOST + uri);\n+    }\n+\n+    @NonNull\n+    private static Single<Response> apiRequest(final String uri, final Parameters params) {\n+        return apiRequest(uri, params, false);\n+    }\n+\n+    @NonNull\n+    private static Single<Response> apiRequest(final String uri, final Parameters params, final boolean isRetry) {\n+\n+        final Single<Response> response = Network.getRequest(API_HOST + uri, params);\n+\n+        // retry at most one time\n+        return response.flatMap((Function<Response, Single<Response>>) response1 -> {\n+            if (!isRetry && response1.code() == 403 && lcLogin.login() == StatusCode.NO_ERROR) {\n+                return apiRequest(uri, params, true);\n+            }\n+            return Single.just(response1);\n+        });\n+    }\n+\n+    @NonNull\n+    private static Geocache importCacheFromJSON(final Response response) {\n+        try {\n+            final JsonNode json = JsonUtils.reader.readTree(Network.getResponseData(response));\n+            //Log.e(json.toPrettyString());\n+            return parseCacheDetail(json);\n+        } catch (final Exception e) {\n+            Log.w(\"importCacheFromJSON\", e);\n+            return null;\n+        }\n+    }\n+\n+    @NonNull\n+    private static List<Geocache> importCachesFromJSON(final Response response) {\n+        try {\n+            final JsonNode json = JsonUtils.reader.readTree(Network.getResponseData(response));\n+            final JsonNode items = json.at(\"/Items\");\n+            if (!items.isArray()) {\n+                return Collections.emptyList();\n+            }\n+            final List<Geocache> caches = new ArrayList<>(items.size());\n+            for (final JsonNode node : items) {\n+                //Log.e(node.toPrettyString());\n+                final Geocache cache = parseCache(node);\n+                if (cache != null) {\n+                    caches.add(cache);\n+                }\n+            }\n+            return caches;\n+        } catch (final Exception e) {\n+            Log.w(\"importCachesFromJSON\", e);\n+            return Collections.emptyList();\n+        }\n+    }\n+\n+    @Nullable\n+    private static Geocache parseCache(final JsonNode response) {\n+        try {\n+            final Geocache cache = new Geocache();\n+            final JsonNode location = response.at(\"/Location\");\n+            final String firebaseDynamicLink = response.get(\"FirebaseDynamicLink\").asText();\n+            final String[] segments = firebaseDynamicLink.split(\"/\");\n+            final String id = segments[segments.length - 1];\n+            final String uuid = response.get(\"Id\").asText();\n+            cache.setReliableLatLon(true);\n+            cache.setGeocode(\"LC\" + uuid);\n+            cache.setCacheId(id);\n+            cache.setName(response.get(\"Title\").asText());\n+            cache.setCoords(new Geopoint(location.get(\"Latitude\").asText(), location.get(\"Longitude\").asText()));\n+            cache.setType(CacheType.ADVLAB);\n+            cache.setDifficulty((float) 1);\n+            cache.setTerrain((float) 1);\n+            cache.setSize(CacheSize.getById(\"virtual\"));\n+            cache.setFound(false);\n+            DataStore.saveCache(cache, EnumSet.of(SaveFlag.CACHE));\n+            return cache;\n+        } catch (final NullPointerException e) {\n+            Log.e(\"LCApi.parseCache\", e);\n+            return null;\n+        }\n+    }\n+\n+    // Having a separate parser for details is required because the API provider\n+    // decided to use different upper/lower case wordings for the same entities\n+\n+    @Nullable\n+    private static Geocache parseCacheDetail(final JsonNode response) {\n+        try {\n+            final Geocache cache = new Geocache();\n+            final JsonNode location = response.at(\"/Location\");\n+            final String firebaseDynamicLink = response.get(\"FirebaseDynamicLink\").asText();\n+            final String[] segments = firebaseDynamicLink.split(\"/\");\n+            final String id = segments[segments.length - 1];\n+            final String uuid = response.get(\"Id\").asText();\n+            final String ilink = response.get(\"KeyImageUrl\").asText();\n+            final String desc = response.get(\"Description\").asText();\n+            cache.setReliableLatLon(true);\n+            cache.setGeocode(\"LC\" + uuid);\n+            cache.setCacheId(id);\n+            cache.setName(response.get(\"Title\").asText());\n+            cache.setDescription(\"<img src=\\\"\" + ilink + \"\\\" </img><p><p>\" + desc);\n+            cache.setCoords(new Geopoint(location.get(\"Latitude\").asText(), location.get(\"Longitude\").asText()));\n+            cache.setType(CacheType.ADVLAB);\n+            cache.setDifficulty((float) 1);\n+            cache.setTerrain((float) 1);\n+            cache.setSize(CacheSize.getById(\"virtual\"));\n+            cache.setFound(false);\n+            cache.setDisabled(false);\n+            cache.setHidden(parseDate(response.get(\"PublishedUtc\").asText()));\n+            cache.setOwnerDisplayName(response.get(\"OwnerUsername\").asText());\n+            cache.setWaypoints(parseWaypoints((ArrayNode) response.path(\"GeocacheSummaries\")), false);\n+            cache.setDetailedUpdatedNow();\n+            DataStore.saveCache(cache, EnumSet.of(SaveFlag.DB));\n+            return cache;\n+        } catch (final NullPointerException e) {\n+            Log.e(\"LCApi.parseCache\", e);\n+            return null;\n+        }\n+    }\n+\n+    @Nullable\n+    private static List<Waypoint> parseWaypoints(final ArrayNode wptsJson) {\n+        List<Waypoint> result = null;\n+        final Geopoint pointZero = new Geopoint(0, 0);\n+        int stageCounter = 0;\n+        for (final JsonNode wptResponse: wptsJson) {\n+            //Log.e(wptResponse.toPrettyString());\n+            stageCounter++;\n+            try {\n+                final Waypoint wpt = new Waypoint(wptResponse.get(\"Title\").asText(), WaypointType.PUZZLE, false);\n+                final JsonNode location = wptResponse.at(\"/Location\");\n+                final String ilink = wptResponse.get(\"KeyImageUrl\").asText();\n+                final String desc  = wptResponse.get(\"Description\").asText();\n+\n+                // For ALCs, waypoints don't have a geocode, of course they have an id (a uuid) though.\n+                // We artificially create a geocode and a prefix as at least the prefix is used when\n+                // showing waypoints on the map. It seems that the geocode from the parent is used but\n+                // prefixed with what we set here. Not clear where the geocode of a waypoint comes into play\n+                // but we will eventually figure that out.\n+\n+                wpt.setGeocode(String.valueOf(stageCounter));\n+                wpt.setPrefix(String.valueOf(stageCounter));\n+\n+                wpt.setNote(\"<img style=\\\"width: 100%;\\\" src=\\\"\" + ilink + \"\\\"</img><p><p>\" + desc + \"<p><p>\" + wptResponse.get(\"Question\").asText());\n+\n+                final Geopoint pt = new Geopoint(location.get(\"Latitude\").asDouble(), location.get(\"Longitude\").asDouble());\n+                if (pt != null && !pt.equals(pointZero)) {\n+                    wpt.setCoords(pt);\n+                } else {\n+                    wpt.setOriginalCoordsEmpty(true);\n+                }\n+                if (result == null) {\n+                    result = new ArrayList<>();\n+                }\n+\n+                result.add(wpt);\n+            } catch (final NullPointerException e) {\n+                Log.e(\"LCApi.parseWaypoints\", e);\n+            }\n+        }\n+        return result;\n+    }\n+\n+    @Nullable\n+    private static Date parseDate(final String date) {\n+        try {\n+            return DATE_FORMAT.parse(date);\n+        } catch (final ParseException e) {\n+            return new Date(0);\n+        }\n+\n+    }\n+}\n+"
  },
  {
    "sha": "6085ea7863f8c0aa3c3de3392886296b98a91a40",
    "filename": "main/src/cgeo/geocaching/connector/lc/LCConnector.java",
    "status": "added",
    "additions": 208,
    "deletions": 0,
    "changes": 208,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/connector/lc/LCConnector.java",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/connector/lc/LCConnector.java",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/src/cgeo/geocaching/connector/lc/LCConnector.java?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -0,0 +1,208 @@\n+package cgeo.geocaching.connector.lc;\n+\n+import cgeo.geocaching.R;\n+import cgeo.geocaching.SearchResult;\n+import cgeo.geocaching.connector.AbstractConnector;\n+import cgeo.geocaching.connector.capability.ICredentials;\n+import cgeo.geocaching.connector.capability.ILogin;\n+import cgeo.geocaching.connector.capability.ISearchByCenter;\n+import cgeo.geocaching.connector.capability.ISearchByGeocode;\n+import cgeo.geocaching.connector.capability.ISearchByViewPort;\n+import cgeo.geocaching.enumerations.StatusCode;\n+import cgeo.geocaching.location.Geopoint;\n+import cgeo.geocaching.location.Viewport;\n+import cgeo.geocaching.models.Geocache;\n+import cgeo.geocaching.settings.Credentials;\n+import cgeo.geocaching.settings.Settings;\n+import cgeo.geocaching.utils.DisposableHandler;\n+import cgeo.geocaching.utils.Log;\n+\n+import android.app.Activity;\n+import android.os.Handler;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import java.util.Collection;\n+import java.util.regex.Pattern;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class LCConnector extends AbstractConnector implements ISearchByGeocode, ISearchByCenter, ISearchByViewPort, ILogin, ICredentials {\n+\n+    @NonNull\n+    private static final String CACHE_URL = \"https://adventurelab.page.link/\";\n+\n+    /**\n+     * Pattern for LC codes\n+     */\n+    @NonNull\n+    private static final Pattern PATTERN_LC_CODE = Pattern.compile(\"LC[-\\\\w]+\", Pattern.CASE_INSENSITIVE);\n+\n+    @NonNull\n+    private final LCLogin lcLogin = LCLogin.getInstance();\n+\n+    private LCConnector() {\n+        // singleton\n+    }\n+\n+    /**\n+     * initialization on demand holder pattern\n+     */\n+    private static class Holder {\n+        @NonNull private static final LCConnector INSTANCE = new LCConnector();\n+    }\n+\n+    @NonNull\n+    public static LCConnector getInstance() {\n+        return Holder.INSTANCE;\n+    }\n+\n+    @Override\n+    public boolean canHandle(@NonNull final String geocode) {\n+        return PATTERN_LC_CODE.matcher(geocode).matches();\n+    }\n+\n+    @Override\n+    @NonNull\n+    public String getCacheUrl(@NonNull final Geocache cache) {\n+        return CACHE_URL + cache.getCacheId();\n+    }\n+\n+    @Override\n+    @NonNull\n+    public String getName() {\n+        return \"labs.geocaching.com\";\n+    }\n+\n+    @Override\n+    @NonNull\n+    public String getNameAbbreviated() {\n+        return \"LC\";\n+    }\n+\n+    @Override\n+    @NonNull\n+    public String getHost() {\n+        return \"labs.geocaching.com\";\n+    }\n+\n+    @Override\n+    public SearchResult searchByGeocode(@Nullable final String geocode, @Nullable final String guid, final DisposableHandler handler) {\n+        Log.e(\"searchByGeocode: geocode = \" + geocode);\n+        if (geocode == null) {\n+            return null;\n+        }\n+        DisposableHandler.sendLoadProgressDetail(handler, R.string.cache_dialog_loading_details_status_loadpage);\n+        final Geocache cache = LCApi.searchByGeocode(geocode);\n+        return cache != null ? new SearchResult(cache) : null;\n+    }\n+\n+    @Override\n+    @NonNull\n+    public SearchResult searchByViewport(@NonNull final Viewport viewport) {\n+        final Collection<Geocache> caches = LCApi.searchByBBox(viewport);\n+        final SearchResult searchResult = new SearchResult(caches);\n+        return searchResult.filterSearchResults(false, false, Settings.getCacheType());\n+    }\n+\n+    @Override\n+    @NonNull\n+    public SearchResult searchByCenter(@NonNull final Geopoint center) {\n+        final Collection<Geocache> caches = LCApi.searchByCenter(center);\n+        final SearchResult searchResult = new SearchResult(caches);\n+        return searchResult.filterSearchResults(false, false, Settings.getCacheType());\n+    }\n+\n+    @Override\n+    public boolean isOwner(@NonNull final Geocache cache) {\n+        return false;\n+    }\n+\n+    @Override\n+    @NonNull\n+    protected String getCacheUrlPrefix() {\n+        return CACHE_URL;\n+    }\n+\n+    @Override\n+    public boolean isActive() {\n+        return Settings.isLCConnectorActive();\n+    }\n+\n+    @Override\n+    public boolean login(final Handler handler, @Nullable final Activity fromActivity) {\n+        // login\n+        final StatusCode status = lcLogin.login();\n+\n+        return status == StatusCode.NO_ERROR;\n+    }\n+\n+    @Override\n+    public String getUserName() {\n+        return lcLogin.getActualUserName();\n+    }\n+\n+    @Override\n+    public Credentials getCredentials() {\n+        return Settings.getCredentials(R.string.pref_lcusername, R.string.pref_lcpassword);\n+    }\n+\n+    @Override\n+    public int getCachesFound() {\n+        return lcLogin.getActualCachesFound();\n+    }\n+\n+    @Override\n+    public String getLoginStatusString() {\n+        return lcLogin.getActualStatus();\n+    }\n+\n+    @Override\n+    public boolean isLoggedIn() {\n+        return lcLogin.isActualLoginStatus();\n+    }\n+\n+    @Override\n+    public int getCacheMapMarkerId(final boolean disabled) {\n+        return disabled ? R.drawable.marker_disabled : R.drawable.marker;\n+    }\n+\n+\n+    @Override\n+    public int getMaxTerrain() {\n+        return 1;\n+    }\n+\n+    @Override\n+    public int getUsernamePreferenceKey() {\n+        return R.string.pref_lcusername;\n+    }\n+\n+    @Override\n+    public int getPasswordPreferenceKey() {\n+        return R.string.pref_lcpassword;\n+    }\n+\n+    @Override\n+    public int getAvatarPreferenceKey() {\n+        return R.string.pref_lc_avatar;\n+    }\n+\n+    @Override\n+    @Nullable\n+    public String getGeocodeFromUrl(@NonNull final String url) {\n+        final String geocode = \"LC\" + StringUtils.substringAfter(url, \"https://adventurelab.page.link/\");\n+        if (canHandle(geocode)) {\n+            return geocode;\n+        }\n+        return super.getGeocodeFromUrl(url);\n+    }\n+\n+    @Override\n+    @NonNull\n+    public String getCreateAccountUrl() {\n+        return \"https://www.geocaching.com/account/join\";\n+    }\n+}\n+"
  },
  {
    "sha": "c15a979968bb86495f1d185828207e8169aea7ce",
    "filename": "main/src/cgeo/geocaching/connector/lc/LCLogin.java",
    "status": "added",
    "additions": 114,
    "deletions": 0,
    "changes": 114,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/connector/lc/LCLogin.java",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/connector/lc/LCLogin.java",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/src/cgeo/geocaching/connector/lc/LCLogin.java?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -0,0 +1,114 @@\n+package cgeo.geocaching.connector.lc;\n+\n+import cgeo.geocaching.CgeoApplication;\n+import cgeo.geocaching.R;\n+import cgeo.geocaching.connector.AbstractLogin;\n+import cgeo.geocaching.enumerations.StatusCode;\n+import cgeo.geocaching.network.Network;\n+import cgeo.geocaching.network.Parameters;\n+import cgeo.geocaching.settings.Credentials;\n+import cgeo.geocaching.settings.Settings;\n+import cgeo.geocaching.utils.Log;\n+\n+import android.app.Application;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+\n+public class LCLogin extends AbstractLogin {\n+\n+    private final Boolean fakeLogin = true;\n+\n+    private LCLogin() {\n+        // singleton\n+    }\n+\n+    private static class SingletonHolder {\n+        @NonNull\n+        private static final LCLogin INSTANCE = new LCLogin();\n+    }\n+\n+    @NonNull\n+    public static LCLogin getInstance() {\n+        return SingletonHolder.INSTANCE;\n+    }\n+\n+    @Override\n+    @NonNull\n+    protected StatusCode login(final boolean retry) {\n+        return login(retry, Settings.getCredentials(LCConnector.getInstance()));\n+    }\n+\n+    @Override\n+    @NonNull\n+    protected StatusCode login(final boolean retry, @NonNull final Credentials credentials) {\n+        if (credentials.isInvalid()) {\n+            clearLoginInfo();\n+            Log.w(\"LCLogin.login: No login information stored\");\n+            return StatusCode.NO_LOGIN_INFO_STORED;\n+        }\n+\n+        setActualStatus(CgeoApplication.getInstance().getString(R.string.init_login_popup_working));\n+\n+        final Parameters params = new Parameters(\"user\", credentials.getUserName(), \"pass\", credentials.getPassword());\n+\n+        String loginData = \"\";\n+\n+        if (fakeLogin) {\n+            loginData = \"faking a good login\"; // TODO real login disabled by baiti\n+        } else {\n+            loginData = Network.getResponseData(Network.postRequest(\"https://\", params));\n+        }\n+        if (StringUtils.isBlank(loginData)) {\n+            Log.e(\"LCLogin.login: Failed to retrieve login data\");\n+            return StatusCode.CONNECTION_FAILED_LC; // no login page\n+        }\n+\n+        if (loginData.contains(\"Wrong username or password\")) { // hardcoded in English\n+            Log.i(\"Failed to log in labs.geocaching.com as \" + credentials.getUserName() + \" because of wrong username/password\");\n+            return StatusCode.WRONG_LOGIN_DATA; // wrong login\n+        }\n+\n+        if (getLoginStatus(credentials.getUserName())) {\n+            Log.i(\"Successfully logged in labs.geocaching.com as \" + credentials.getUserName());\n+\n+            return StatusCode.NO_ERROR; // logged in\n+        }\n+\n+        Log.i(\"Failed to log in labs.geocaching.com as \" + credentials.getUserName() + \" for some unknown reason\");\n+        if (retry) {\n+            return login(false, credentials);\n+        }\n+\n+        return StatusCode.UNKNOWN_ERROR; // can't login\n+    }\n+\n+\n+    /**\n+     * Check if the user has been logged in when he retrieved the data.\n+     *\n+     * @return {@code true} if user is logged in, {@code false} otherwise\n+     */\n+    private boolean getLoginStatus(@Nullable final String username) {\n+        if (StringUtils.isBlank(username) || StringUtils.equals(username, \"[]\")) {\n+            Log.e(\"LCLogin.getLoginStatus: No or empty data given\");\n+            return false;\n+        }\n+\n+        final Application application = CgeoApplication.getInstance();\n+        setActualStatus(application.getString(R.string.init_login_popup_ok));\n+\n+        setActualLoginStatus(true);\n+        setActualUserName(username);\n+        setActualCachesFound(0);\n+        return true;\n+    }\n+\n+    @Override\n+    protected void resetLoginStatus() {\n+        setActualLoginStatus(false);\n+    }\n+}"
  },
  {
    "sha": "a4f56c6f558a999417dba57dc027dfc8c6c526ac",
    "filename": "main/src/cgeo/geocaching/connector/lc/package-info.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/connector/lc/package-info.java",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/connector/lc/package-info.java",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/src/cgeo/geocaching/connector/lc/package-info.java?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -0,0 +1,5 @@\n+/**\n+ * <a https://labs.geocaching.com/\">Geocaching Adventure Lab</a> implementation.\n+ */\n+package cgeo.geocaching.connector.lc;\n+"
  },
  {
    "sha": "e6e215001ea78ee65e50bcbdd5e861491df7eb00",
    "filename": "main/src/cgeo/geocaching/enumerations/CacheType.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/enumerations/CacheType.java",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/enumerations/CacheType.java",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/src/cgeo/geocaching/enumerations/CacheType.java?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -36,6 +36,7 @@\n     GPS_EXHIBIT(\"gps\", \"GPS Adventures Exhibit\", \"72e69af2-7986-4990-afd9-bc16cbbb4ce3\", R.string.gps, R.drawable.type_event, \"1304\", R.drawable.dot_event), // icon missing\n     BLOCK_PARTY(\"block\", \"Geocaching HQ Block Party\", \"bc2f3df2-1aab-4601-b2ff-b5091f6c02e3\", R.string.block, R.drawable.type_event, \"4738\", R.drawable.dot_event), // icon missing\n     LOCATIONLESS(\"locationless\", \"Locationless (Reverse) Cache\", \"8f6dd7bc-ff39-4997-bd2e-225a0d2adf9d\", R.string.locationless, R.drawable.type_virtual, \"12\", R.drawable.dot_virtual), // icon missing\n+    ADVLAB(\"advlab\", \"Adventure Lab Cache\", \"\", R.string.advlab, R.drawable.type_advlab, \"7777\", R.drawable.dot_advlab),\n \n     // insert other official cache types before USER_DEFINED and UNKNOWN\n     USER_DEFINED(\"userdefined\", \"User defined cache\", \"\", R.string.userdefined, R.drawable.type_cgeo, \"\", R.drawable.dot_virtual),"
  },
  {
    "sha": "dcecadfb57baa66f0c62c412ecba8834c0cb5d7c",
    "filename": "main/src/cgeo/geocaching/enumerations/StatusCode.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/enumerations/StatusCode.java",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/enumerations/StatusCode.java",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/src/cgeo/geocaching/enumerations/StatusCode.java?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -15,6 +15,7 @@\n     LOGIN_CAPTCHA_ERROR(R.string.err_captcha),\n     CONNECTION_FAILED(R.string.err_server),\n     CONNECTION_FAILED_EC(R.string.err_server_ec),\n+    CONNECTION_FAILED_LC(R.string.err_server_lc),\n     CONNECTION_FAILED_SU(R.string.err_server_su),\n     CONNECTION_FAILED_GK(R.string.err_server_gk),\n     NO_LOGIN_INFO_STORED(R.string.err_login),"
  },
  {
    "sha": "8dab1a90f54e829f12190b3aa6d0f8cd9fdc522b",
    "filename": "main/src/cgeo/geocaching/settings/CredentialsPreference.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/settings/CredentialsPreference.java",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/settings/CredentialsPreference.java",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/src/cgeo/geocaching/settings/CredentialsPreference.java?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -6,6 +6,7 @@\n import cgeo.geocaching.connector.capability.ICredentials;\n import cgeo.geocaching.connector.ec.ECConnector;\n import cgeo.geocaching.connector.gc.GCConnector;\n+import cgeo.geocaching.connector.lc.LCConnector;\n import cgeo.geocaching.gcvote.GCVote;\n import cgeo.geocaching.network.Cookies;\n import cgeo.geocaching.network.HtmlImage;\n@@ -33,6 +34,7 @@\n     private enum CredentialActivityMapping {\n         GEOCACHING(R.string.pref_fakekey_gc_authorization, GCAuthorizationActivity.class, GCConnector.getInstance()),\n         EXTREMCACHING(R.string.pref_fakekey_ec_authorization, ECAuthorizationActivity.class, ECConnector.getInstance()),\n+        LABCACHING(R.string.pref_fakekey_lc_authorization, LCAuthorizationActivity.class, LCConnector.getInstance()),\n         GCVOTE(R.string.pref_fakekey_gcvote_authorization, GCVoteAuthorizationActivity.class, GCVote.getInstance());\n \n         public final int prefKeyId;"
  },
  {
    "sha": "7bf098ab3326e272b94f9a54d8ec5d60d26a5caf",
    "filename": "main/src/cgeo/geocaching/settings/LCAuthorizationActivity.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/settings/LCAuthorizationActivity.java",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/settings/LCAuthorizationActivity.java",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/src/cgeo/geocaching/settings/LCAuthorizationActivity.java?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -0,0 +1,30 @@\n+package cgeo.geocaching.settings;\n+\n+import cgeo.geocaching.R;\n+import cgeo.geocaching.connector.lc.LCConnector;\n+import cgeo.geocaching.connector.lc.LCLogin;\n+import cgeo.geocaching.enumerations.StatusCode;\n+\n+public class LCAuthorizationActivity extends AbstractCredentialsAuthorizationActivity {\n+\n+    @Override\n+    protected String getCreateAccountUrl() {\n+        return LCConnector.getInstance().getCreateAccountUrl();\n+    }\n+\n+    @Override\n+    protected void setCredentials(final Credentials credentials) {\n+        Settings.setCredentials(LCConnector.getInstance(), credentials);\n+    }\n+\n+    @Override\n+    protected String getAuthTitle() {\n+        return res.getString(R.string.settings_title_lc);\n+    }\n+\n+    @Override\n+    protected StatusCode checkCredentials(final Credentials credentials) {\n+        return LCLogin.getInstance().login(credentials);\n+    }\n+}\n+"
  },
  {
    "sha": "9ef78ff821ce7f844d1ae4be21e4bb9acac44bdb",
    "filename": "main/src/cgeo/geocaching/settings/Settings.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/settings/Settings.java",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/settings/Settings.java",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/src/cgeo/geocaching/settings/Settings.java?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -490,6 +490,10 @@ public static boolean isECConnectorActive() {\n         return getBoolean(R.string.pref_connectorECActive, false);\n     }\n \n+    public static boolean isLCConnectorActive() {\n+        return getBoolean(R.string.pref_connectorLCActive, false);\n+    }\n+\n     public static boolean isSUConnectorActive() {\n         return getBoolean(R.string.pref_connectorSUActive, false);\n     }"
  },
  {
    "sha": "3de8d2f4c788aba7b187aa317cce52d04a9f4ce2",
    "filename": "main/src/cgeo/geocaching/settings/SettingsActivity.java",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/cgeo/cgeo/blob/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/settings/SettingsActivity.java",
    "raw_url": "https://github.com/cgeo/cgeo/raw/84ab7eddd2385f4849ae6270a978feaed83276bf/main/src/cgeo/geocaching/settings/SettingsActivity.java",
    "contents_url": "https://api.github.com/repos/cgeo/cgeo/contents/main/src/cgeo/geocaching/settings/SettingsActivity.java?ref=84ab7eddd2385f4849ae6270a978feaed83276bf",
    "patch": "@@ -9,6 +9,7 @@\n import cgeo.geocaching.connector.capability.ICredentials;\n import cgeo.geocaching.connector.ec.ECConnector;\n import cgeo.geocaching.connector.gc.GCConnector;\n+import cgeo.geocaching.connector.lc.LCConnector;\n import cgeo.geocaching.connector.su.SuConnector;\n import cgeo.geocaching.downloader.MapDownloaderUtils;\n import cgeo.geocaching.gcvote.GCVote;\n@@ -220,6 +221,10 @@ private void initServicePreferences() {\n         setWebsite(R.string.pref_fakekey_ec_website, ECConnector.getInstance().getHost());\n         getPreference(R.string.preference_screen_ec).setSummary(getServiceSummary(Settings.isECConnectorActive()));\n \n+        getPreference(R.string.pref_connectorLCActive).setOnPreferenceChangeListener(this);\n+        setWebsite(R.string.pref_fakekey_lc_website, LCConnector.getInstance().getHost());\n+        getPreference(R.string.preference_screen_lc).setSummary(getServiceSummary(Settings.isLCConnectorActive()));\n+\n         getPreference(R.string.pref_connectorSUActive).setOnPreferenceChangeListener(this);\n         setWebsite(R.string.pref_fakekey_su_website, SuConnector.getInstance().getHost());\n         getPreference(R.string.preference_screen_su).setSummary(getServiceSummary(Settings.isSUConnectorActive()));\n@@ -618,6 +623,10 @@ public void setAuthTitle(final int prefKeyId) {\n                 setAuthTitle(prefKeyId, ECConnector.getInstance());\n                 setConnectedUsernameTitle(prefKeyId, ECConnector.getInstance());\n                 break;\n+            case R.string.pref_fakekey_lc_authorization:\n+                setAuthTitle(prefKeyId, LCConnector.getInstance());\n+                setConnectedUsernameTitle(prefKeyId, LCConnector.getInstance());\n+                break;\n             case R.string.pref_fakekey_su_authorization:\n                 setSuAuthTitle();\n                 setConnectedTitle(prefKeyId, Settings.hasOAuthAuthorization(R.string.pref_su_tokenpublic, R.string.pref_su_tokensecret));\n@@ -744,6 +753,11 @@ protected void onActivityResult(final int requestCode, final int resultCode, fin\n                 setConnectedUsernameTitle(requestCode, ECConnector.getInstance());\n                 redrawScreen(R.string.preference_screen_ec);\n                 break;\n+            case R.string.pref_fakekey_lc_authorization:\n+                setAuthTitle(requestCode, LCConnector.getInstance());\n+                setConnectedUsernameTitle(requestCode, LCConnector.getInstance());\n+                redrawScreen(R.string.preference_screen_lc);\n+                break;\n             case R.string.pref_fakekey_gcvote_authorization:\n                 setAuthTitle(requestCode, GCVote.getInstance());\n                 setConnectedUsernameTitle(requestCode, GCVote.getInstance());\n@@ -806,6 +820,7 @@ public boolean onPreferenceChange(final Preference preference, final Object valu\n                 || isPreference(preference, R.string.pref_connectorOCUKActive)\n                 || isPreference(preference, R.string.pref_connectorGCActive)\n                 || isPreference(preference, R.string.pref_connectorECActive)\n+                || isPreference(preference, R.string.pref_connectorLCActive)\n                 || isPreference(preference, R.string.pref_connectorSUActive)) {\n             // update summary\n             final boolean boolVal = (Boolean) value;\n@@ -817,6 +832,8 @@ public boolean onPreferenceChange(final Preference preference, final Object valu\n                 preference.getPreferenceManager().findPreference(getKey(R.string.preference_screen_gc)).setSummary(summary);\n             } else if (isPreference(preference, R.string.pref_connectorECActive)) {\n                 preference.getPreferenceManager().findPreference(getKey(R.string.preference_screen_ec)).setSummary(summary);\n+            } else if (isPreference(preference, R.string.pref_connectorLCActive)) {\n+                preference.getPreferenceManager().findPreference(getKey(R.string.preference_screen_lc)).setSummary(summary);\n             } else if (isPreference(preference, R.string.pref_connectorSUActive)) {\n                 preference.getPreferenceManager().findPreference(getKey(R.string.preference_screen_su)).setSummary(summary);\n             }"
  }
]
