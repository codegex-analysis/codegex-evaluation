[
  {
    "sha": "ef3fbf8fe6d9e7efce6fcd3d7cb1f440e731461c",
    "filename": "11-spring-data-jpa/.gitignore",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/.gitignore",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/.gitignore",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/.gitignore?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,37 @@\n+.idea/\n+HELP.md\n+target/\n+dependency-reduced-pom.xml\n+!.mvn/wrapper/maven-wrapper.jar\n+!**/src/main/**/target/\n+!**/src/test/**/target/\n+spring-shell.log\n+\n+### STS ###\n+.apt_generated\n+.classpath\n+.factorypath\n+.project\n+.settings\n+.springBeans\n+.sts4-cache\n+\n+### IntelliJ IDEA ###\n+.idea\n+*.iws\n+*.iml\n+*.ipr\n+\n+### NetBeans ###\n+/nbproject/private/\n+/nbbuild/\n+/dist/\n+/nbdist/\n+/.nb-gradle/\n+build/\n+!**/src/main/**/build/\n+!**/src/test/**/build/\n+\n+### VS Code ###\n+.vscode/\n+"
  },
  {
    "sha": "64c78c41c27f0e93d72536e587fc3b4e3ebb081c",
    "filename": "11-spring-data-jpa/README.md",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/README.md",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/README.md",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/README.md?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,25 @@\n+## Homework â„–7 (theme: \"White Magic Spring Data: Spring Data JPA\") Kryukov Sergey Alexandrovich on the course otus \"Developer on Spring Framework\"\n+\n+### Task\n+* Create an application that stores information about books in a library in a relational database (Spring Data JPA)\n+It is a refactoring of 09-library-books-hibernate-spring-orm\n+\n+### Job Requirements\n+* Cover custom methods of repositories with tests, using H2 database\n+* Disable DDL via Hibernate\n+* @Transactional put only on service methods\n+\n+### Used technologies\n+* Spring boot\n+* spring-boot-starter-data-jpa\n+* spring-boot-starter-test\n+* Annotation-based configuration\n+* Lombok\n+* YML application configuration\n+* Spring Shell\n+* H2 Embedded database for tests\n+* Liquibase\n+* JUnit 5\n+* @DataJpaTest, @Transactional\n+* asciitable\n+* maven (maven-shade-plugin, maven-enforcer-plugin, etc)\n\\ No newline at end of file"
  },
  {
    "sha": "55616eb6e3e770b95c527fc64a43c465059b74db",
    "filename": "11-spring-data-jpa/pom.xml",
    "status": "added",
    "additions": 138,
    "deletions": 0,
    "changes": 138,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/pom.xml",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/pom.xml",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/pom.xml?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,138 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>otus.student.kryukov.dz</groupId>\n+    <artifactId>11-spring-data-jpa</artifactId>\n+    <version>1.0-SNAPSHOT</version>\n+\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.4.1</version>\n+    </parent>\n+\n+    <properties>\n+        <java.version>11</java.version>\n+        <minimal.maven.version>3.3.9</minimal.maven.version>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-data-jpa</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <version>1.4.200</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>1.18.16</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-test</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.shell</groupId>\n+            <artifactId>spring-shell-starter</artifactId>\n+            <version>2.0.1.RELEASE</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>de.vandermeer</groupId>\n+            <artifactId>asciitable</artifactId>\n+            <version>0.3.2</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.liquibase</groupId>\n+            <artifactId>liquibase-core</artifactId>\n+            <version>${liquibase.version}</version>\n+        </dependency>        <dependency>\n+        <groupId>org.yaml</groupId>\n+        <artifactId>snakeyaml</artifactId>\n+        <version>${snakeyaml.version}</version>\n+    </dependency>\n+    </dependencies>\n+\n+    <build>\n+    <plugins>\n+        <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-compiler-plugin</artifactId>\n+            <version>3.8.1</version>\n+            <configuration>\n+                <release>11</release>\n+            </configuration>\n+        </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-jar-plugin</artifactId>\n+                <version>3.2.0</version>\n+                <configuration>\n+                    <archive>\n+                        <manifest>\n+                            <addClasspath>true</addClasspath>\n+                            <classpathPrefix>lib/</classpathPrefix>\n+                            <mainClass>otus.student.kryukov.dz.Main</mainClass>\n+                        </manifest>\n+                    </archive>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-shade-plugin</artifactId>\n+                <version>3.2.4</version>\n+                <executions>\n+                    <execution>\n+                        <phase>package</phase>\n+                        <goals>\n+                            <goal>shade</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+                <configuration>\n+                    <excludes>\n+                        <exclude>\n+                            <groupId>org.projectlombok</groupId>\n+                            <artifactId>lombok</artifactId>\n+                        </exclude>\n+                    </excludes>\n+                </configuration>\n+            </plugin>\n+            <plugin>\n+                <artifactId>maven-enforcer-plugin</artifactId>\n+                <version>3.0.0-M3</version>\n+                <executions>\n+                    <execution>\n+                        <id>enforce-maven</id>\n+                        <goals>\n+                            <goal>enforce</goal>\n+                        </goals>\n+                        <configuration>\n+                            <rules>\n+                                <dependencyConvergence/>\n+                                <requireMavenVersion>\n+                                    <version>${minimal.maven.version}</version>\n+                                </requireMavenVersion>\n+                            </rules>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>"
  },
  {
    "sha": "3d555be1f5c214cd02aab51fa9be086f35822f89",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/Main.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/Main.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/Main.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/Main.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,16 @@\n+package otus.student.kryukov.dz;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.context.ConfigurableApplicationContext;\n+\n+@SpringBootApplication\n+public class Main {\n+\n+    public static void main(String[] args) {\n+\n+        ConfigurableApplicationContext context = SpringApplication.run(Main.class);\n+        context.close();\n+\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "80b78895662a31a3c2f0beade088f29c48d01327",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Author.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Author.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Author.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Author.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,26 @@\n+package otus.student.kryukov.dz.domain;\n+\n+import lombok.Data;\n+\n+import javax.persistence.*;\n+\n+@Data\n+@Entity\n+@Table(name = \"authors\")\n+public class Author {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"author_id\")\n+    private Long authorId;\n+\n+    @Column(name = \"author\")\n+    private String author;\n+\n+    public Author() {\n+    }\n+\n+    public Author(String author) {\n+        this.author = author;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b7c5b5f4e21c50862e11e58764e727e3e3613aab",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Book.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Book.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Book.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Book.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,50 @@\n+package otus.student.kryukov.dz.domain;\n+\n+import lombok.Data;\n+import org.hibernate.annotations.Fetch;\n+import org.hibernate.annotations.FetchMode;\n+\n+import javax.persistence.*;\n+import java.util.List;\n+\n+@Data\n+@Entity\n+@Table(name = \"books\")\n+public class Book {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"book_id\")\n+    private Long bookId;\n+\n+    @Column(name = \"title\")\n+    private String title;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"author_id\")\n+    private Author authorObject;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"genre_id\")\n+    private Genre genreObject;\n+\n+    @Fetch(FetchMode.SUBSELECT)\n+    @OneToMany(targetEntity = Comment.class, fetch = FetchType.LAZY, mappedBy = \"bookObject\")\n+    private List<Comment> comments;\n+\n+    public Book() {\n+    }\n+\n+    public Book(String title, Author authorObject, Genre genreObject) {\n+        this.title = title;\n+        this.authorObject = authorObject;\n+        this.genreObject = genreObject;\n+    }\n+\n+    public Book(Long bookId, String title, Author authorObject, Genre genreObject) {\n+        this.bookId = bookId;\n+        this.title = title;\n+        this.authorObject = authorObject;\n+        this.genreObject = genreObject;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "95f7dfb2cc7dda5159067b04ed80762cd36792e3",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Comment.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Comment.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Comment.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Comment.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,37 @@\n+package otus.student.kryukov.dz.domain;\n+\n+import lombok.Data;\n+\n+import javax.persistence.*;\n+\n+@Data\n+@Entity\n+@Table(name = \"comments\")\n+public class Comment {\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"comment_id\")\n+    private Long commentId;\n+\n+    @Column(name = \"comment\")\n+    private String comment;\n+\n+    @ManyToOne(targetEntity = Book.class, fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"book_id\")\n+    private Book bookObject;\n+\n+    public Comment() {\n+    }\n+\n+    public Comment(String comment, Book bookObject) {\n+        this.comment = comment;\n+        this.bookObject = bookObject;\n+    }\n+\n+    public Comment(Long commentId, String comment, Book bookObject) {\n+        this.commentId = commentId;\n+        this.comment = comment;\n+        this.bookObject = bookObject;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "80db927ee3d1ae8acc214b361c8808529ed8c7e3",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Genre.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Genre.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Genre.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/domain/Genre.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,25 @@\n+package otus.student.kryukov.dz.domain;\n+\n+import lombok.Data;\n+\n+import javax.persistence.*;\n+\n+@Data\n+@Entity\n+@Table(name = \"genres\")\n+public class Genre {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"genre_id\")\n+    private Long genreId;\n+\n+    @Column(name = \"genre\")\n+    private String genre;\n+\n+    public Genre() {\n+    }\n+\n+    public Genre(String genre) {\n+        this.genre = genre;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "3e50588b9d3092d386068692ada418bce33771b7",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/EmptyEntityInsertException.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/EmptyEntityInsertException.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/EmptyEntityInsertException.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/EmptyEntityInsertException.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,10 @@\n+package otus.student.kryukov.dz.exception;\n+\n+import lombok.Data;\n+import lombok.RequiredArgsConstructor;\n+\n+@Data\n+@RequiredArgsConstructor\n+public class EmptyEntityInsertException extends RuntimeException {\n+    private final String message;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0befcedc5f41bd83ca8657443c8490760f87a328",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/NoSuchEntityException.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/NoSuchEntityException.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/NoSuchEntityException.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/NoSuchEntityException.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,10 @@\n+package otus.student.kryukov.dz.exception;\n+\n+import lombok.Data;\n+import lombok.RequiredArgsConstructor;\n+\n+@Data\n+@RequiredArgsConstructor\n+public class NoSuchEntityException extends RuntimeException {\n+    private final String message;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "26222ec2c08bcffc36b7cfe94eada83b5df38d3b",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/SameEntityExistsException.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/SameEntityExistsException.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/SameEntityExistsException.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/exception/SameEntityExistsException.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,10 @@\n+package otus.student.kryukov.dz.exception;\n+\n+import lombok.Data;\n+import lombok.RequiredArgsConstructor;\n+\n+@Data\n+@RequiredArgsConstructor\n+public class SameEntityExistsException extends RuntimeException {\n+    private final String message;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "23915698e6dd2ab878f24eac3e1bc42d97d72b35",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/DrawTable.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/DrawTable.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/DrawTable.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/DrawTable.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,21 @@\n+package otus.student.kryukov.dz.print;\n+\n+import otus.student.kryukov.dz.domain.Author;\n+import otus.student.kryukov.dz.domain.Book;\n+import otus.student.kryukov.dz.domain.Comment;\n+import otus.student.kryukov.dz.domain.Genre;\n+\n+import java.util.List;\n+\n+public interface DrawTable {\n+\n+    void drawAsciiTableAuthor(List<Author> authors, List<String> titles);\n+\n+    void drawAsciiTableBook(List<Book> books, List<String> titles);\n+\n+    void drawAsciiTableComment(List<Comment> comments, List<String> titles);\n+\n+    void drawAsciiTableCommentsForBook(Book bookObject, List<String> titles);\n+\n+    void drawAsciiTableGenre(List<Genre> genres, List<String> titles);\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "862083c9a86fbb9afd25f18e4975dbacce3fcc42",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/DrawTableImpl.java",
    "status": "added",
    "additions": 95,
    "deletions": 0,
    "changes": 95,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/DrawTableImpl.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/DrawTableImpl.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/DrawTableImpl.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,95 @@\n+package otus.student.kryukov.dz.print;\n+\n+import de.vandermeer.asciitable.AT_Row;\n+import de.vandermeer.asciitable.AsciiTable;\n+import de.vandermeer.asciitable.CWC_LongestLine;\n+import de.vandermeer.skb.interfaces.transformers.textformat.TextAlignment;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Service;\n+import otus.student.kryukov.dz.domain.Author;\n+import otus.student.kryukov.dz.domain.Book;\n+import otus.student.kryukov.dz.domain.Comment;\n+import otus.student.kryukov.dz.domain.Genre;\n+import otus.student.kryukov.dz.service.CommentService;\n+\n+import java.util.LinkedList;\n+import java.util.List;\n+\n+@Service\n+@RequiredArgsConstructor\n+public class DrawTableImpl implements DrawTable {\n+    private final PrintService printService;\n+    private final CommentService commentService;\n+\n+    @Override\n+    public void drawAsciiTableAuthor(List<Author> authors, List<String> titles) {\n+        AsciiTable table = new AsciiTable();\n+        for (Author authorObject : authors) {\n+            table.addRow(authorObject.getAuthorId(), authorObject.getAuthor());\n+        }\n+        drawAsciiTable(table.getRawContent(), titles, \"author\");\n+    }\n+\n+    @Override\n+    public void drawAsciiTableBook(List<Book> books, List<String> titles) {\n+        AsciiTable table = new AsciiTable();\n+        for (Book bookObject : books) {\n+            table.addRow(bookObject.getBookId(), bookObject.getTitle(), bookObject.getAuthorObject().getAuthor(), bookObject.getGenreObject().getGenre());\n+        }\n+        drawAsciiTable(table.getRawContent(), titles, \"book\");\n+    }\n+\n+    @Override\n+    public void drawAsciiTableComment(List<Comment> comments, List<String> titles) {\n+        AsciiTable table = new AsciiTable();\n+        for (Comment commentObject : comments) {\n+            table.addRow(commentObject.getCommentId(), commentObject.getComment(), commentObject.getBookObject().getTitle());\n+        }\n+        drawAsciiTable(table.getRawContent(), titles, \"comment\");\n+    }\n+\n+    @Override\n+    public void drawAsciiTableCommentsForBook(Book bookObject, List<String> titles) {\n+        AsciiTable table = new AsciiTable();\n+        List<Comment> comments = bookObject.getComments();\n+        for (Comment commentObject : comments) {\n+            table.addRow(commentObject.getCommentId(), commentObject.getComment());\n+        }\n+        drawAsciiTable(table.getRawContent(), titles, \"comment\");\n+    }\n+\n+    @Override\n+    public void drawAsciiTableGenre(List<Genre> genres, List<String> titles) {\n+        AsciiTable table = new AsciiTable();\n+        for (Genre genreObject : genres) {\n+            table.addRow(genreObject.getGenreId(), genreObject.getGenre());\n+        }\n+        drawAsciiTable(table.getRawContent(), titles, \"genre\");\n+    }\n+\n+    private void drawAsciiTable(LinkedList<AT_Row> rows, List<String> titles, String entity) {\n+        AsciiTable table = new AsciiTable();\n+        table.addRule();\n+        AT_Row rowHeader = table.addRow(titles);\n+        rowHeader.setTextAlignment(TextAlignment.CENTER);\n+        table.addRule();\n+        if(\"comment\".equals(entity))\n+        {\n+            for (AT_Row row : rows) {\n+                AT_Row rowData = table.addRow(row.getCells());\n+                rowData.setTextAlignment(TextAlignment.LEFT);\n+                rowData.getCells().get(0).getContext().setTextAlignment(TextAlignment.CENTER);\n+                table.addRule();\n+            }\n+        } else {\n+            for (AT_Row row : rows) {\n+                table.addRow(row.getCells());\n+                table.addRule();\n+            }\n+        }\n+        if(!\"comment\".equals(entity))\n+            table.setTextAlignment(TextAlignment.CENTER);\n+        table.getRenderer().setCWC(new CWC_LongestLine());\n+        printService.out(table.render());\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "e8465f92f27fffe9a43842fc6e43a36144bf696f",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/PrintService.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/PrintService.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/PrintService.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/PrintService.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,7 @@\n+package otus.student.kryukov.dz.print;\n+\n+public interface PrintService {\n+\n+    void out(String message);\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0aea4fbfed2bd12faaa5194393a84bd446a447e6",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/PrintServiceConsole.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/PrintServiceConsole.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/PrintServiceConsole.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/print/PrintServiceConsole.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,21 @@\n+package otus.student.kryukov.dz.print;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.stereotype.Service;\n+\n+import java.io.PrintStream;\n+\n+@Service\n+public class PrintServiceConsole implements PrintService {\n+\n+    private final PrintStream out;\n+\n+    public PrintServiceConsole(@Value(\"#{T(java.lang.System).out}\") PrintStream out) {\n+        this.out = out;\n+    }\n+\n+    @Override\n+    public void out(String message) {\n+        out.println(message);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "22e9ee3fe69312a8d47c2f674290b4af37a5594f",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/AuthorRepository.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/AuthorRepository.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/AuthorRepository.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/AuthorRepository.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,13 @@\n+package otus.student.kryukov.dz.repository;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import otus.student.kryukov.dz.domain.Author;\n+\n+public interface AuthorRepository extends JpaRepository<Author, Long> {\n+\n+    @Query(\"select a from Author a where a.author = :author\")\n+    Author findByAuthor(@Param(\"author\") String author);\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2532305a9f322687eac908fd3ce07e3816fe3a9e",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/BookRepository.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/BookRepository.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/BookRepository.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/BookRepository.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,18 @@\n+package otus.student.kryukov.dz.repository;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import otus.student.kryukov.dz.domain.Book;\n+\n+import java.util.List;\n+\n+public interface BookRepository extends JpaRepository<Book, Long> {\n+\n+   @Query(\"select b from Book b join fetch b.authorObject join fetch b.genreObject\")\n+    List<Book> findAllFetch();\n+\n+    @Query(\"select b from Book b join fetch b.authorObject join fetch b.genreObject where b.title = :title\")\n+    List<Book> findByTitle(@Param(\"title\") String title);\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2c95de97e5520093a3c69ad7674ddcf4a2e3886c",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/CommentRepository.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/CommentRepository.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/CommentRepository.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/CommentRepository.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,18 @@\n+package otus.student.kryukov.dz.repository;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import otus.student.kryukov.dz.domain.Comment;\n+\n+import java.util.List;\n+\n+public interface CommentRepository extends JpaRepository<Comment, Long> {\n+\n+    @Query(\"select c from Comment c join fetch c.bookObject b join fetch b.authorObject join fetch b.genreObject\")\n+    List<Comment> findAllFetch();\n+\n+   @Query(\"select c from Comment c join fetch c.bookObject b join fetch b.authorObject join fetch b.genreObject where c.comment = :comment\")\n+   List<Comment> findByComment(@Param(\"comment\") String comment);\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "73915c5eb43c53b2a0900eaefb09ee54762a2ada",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/GenreRepository.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/GenreRepository.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/GenreRepository.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/repository/GenreRepository.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,13 @@\n+package otus.student.kryukov.dz.repository;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import otus.student.kryukov.dz.domain.Genre;\n+\n+public interface GenreRepository extends JpaRepository<Genre, Long> {\n+\n+    @Query(\"select g from Genre g where g.genre = :genre\")\n+    Genre findByGenre(@Param(\"genre\") String genre);\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "61b21aed071cd2f662d842823c3be12eef5ed702",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/AuthorService.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/AuthorService.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/AuthorService.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/AuthorService.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,17 @@\n+package otus.student.kryukov.dz.service;\n+\n+import otus.student.kryukov.dz.domain.Author;\n+\n+import java.util.Optional;\n+\n+public interface AuthorService {\n+\n+    Optional<Author> getByAuthor(String author);\n+\n+    Optional<Author> getByAuthorId(Long authorId);\n+\n+    void create(String author);\n+\n+    void checkEmptyAuthor(String author);\n+\n+}"
  },
  {
    "sha": "3b2c396b850a011781a334583e089c9cbda47b20",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/AuthorServiceImpl.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/AuthorServiceImpl.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/AuthorServiceImpl.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/AuthorServiceImpl.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,43 @@\n+package otus.student.kryukov.dz.service;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import otus.student.kryukov.dz.repository.AuthorRepository;\n+import otus.student.kryukov.dz.domain.Author;\n+import otus.student.kryukov.dz.exception.EmptyEntityInsertException;\n+\n+import java.util.Optional;\n+\n+@Service\n+@RequiredArgsConstructor\n+public class AuthorServiceImpl implements AuthorService {\n+\n+    private final AuthorRepository authorRepository;\n+\n+    @Override\n+    @Transactional(readOnly = true)\n+    public Optional<Author> getByAuthor(String author) {\n+        return Optional.ofNullable(authorRepository.findByAuthor(author));\n+    }\n+\n+    @Override\n+    @Transactional(readOnly = true)\n+    public Optional<Author> getByAuthorId(Long authorId) {\n+        return authorRepository.findById(authorId);\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void create(String author) {\n+        checkEmptyAuthor(author);\n+        authorRepository.save(new Author(author));\n+    }\n+\n+    @Override\n+    public void checkEmptyAuthor(String author) {\n+        if (author == null || author.trim().equals(\"\"))\n+            throw new EmptyEntityInsertException(\"author cannot be empty\");\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "8387dc57d027d294506573b7d4b745e34061d62e",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/BookService.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/BookService.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/BookService.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/BookService.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,22 @@\n+package otus.student.kryukov.dz.service;\n+\n+import otus.student.kryukov.dz.domain.Book;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public interface BookService {\n+\n+    void create(String title, String author, String genre);\n+\n+    Book getByBookId(Long bookId);\n+\n+    List<Book> getAllBooks();\n+\n+    void update(Long bookId, String title, String author, String genre);\n+\n+    void delete(Long bookId);\n+\n+    Optional<Book> getByAllParams(String title, String author, String genre);\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "7244727d5098456011a7d91673601a74f85506ed",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/BookServiceImpl.java",
    "status": "added",
    "additions": 125,
    "deletions": 0,
    "changes": 125,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/BookServiceImpl.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/BookServiceImpl.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/BookServiceImpl.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,125 @@\n+package otus.student.kryukov.dz.service;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import otus.student.kryukov.dz.repository.BookRepository;\n+import otus.student.kryukov.dz.domain.Author;\n+import otus.student.kryukov.dz.domain.Book;\n+import otus.student.kryukov.dz.domain.Genre;\n+import otus.student.kryukov.dz.exception.EmptyEntityInsertException;\n+import otus.student.kryukov.dz.exception.NoSuchEntityException;\n+import otus.student.kryukov.dz.exception.SameEntityExistsException;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Service\n+@RequiredArgsConstructor\n+public class BookServiceImpl implements BookService {\n+\n+    private final BookRepository bookRepository;\n+    private final AuthorService authorService;\n+    private final GenreService genreService;\n+\n+    @Override\n+    @Transactional\n+    public void create(String title, String author, String genre) {\n+        checkBook(title, author, genre);\n+        Author authorObject = prepareAuthor(author);\n+        Genre genreObject = prepareGenre(genre);\n+        Book bookObject = new Book(title, authorObject, genreObject);\n+        bookRepository.save(bookObject);\n+    }\n+\n+    @Override\n+    @Transactional(readOnly = true)\n+    public Book getByBookId(Long bookId) {\n+        Book bookObject = bookRepository.findById(bookId)\n+                .orElseThrow(() -> new NoSuchEntityException(\"no such book exists\"));\n+        bookObject.getComments().size(); // get List<Comment> and avoid FetchType.EAGER in domain\n+        return bookObject;\n+    }\n+\n+    @Override\n+    @Transactional(readOnly = true)\n+    public List<Book> getAllBooks() {\n+        return bookRepository.findAllFetch();\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void update(Long bookId, String title, String author, String genre) {\n+        checkBook(title, author, genre);\n+        Book bookObject = getByBookId(bookId);\n+        Author authorObject = bookObject.getAuthorObject();\n+        Genre genreObject = bookObject.getGenreObject();\n+        if (authorObject.getAuthor() != author)\n+            authorObject = prepareAuthor(author);\n+        if (genreObject.getGenre() != genre)\n+            genreObject = prepareGenre(genre);\n+        bookObject = new Book(bookId, title, authorObject, genreObject);\n+        bookRepository.save(bookObject);\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void delete(Long bookId) {\n+        bookRepository.deleteById(bookId);\n+    }\n+\n+    @Override\n+    @Transactional(readOnly = true)\n+    public Optional<Book> getByAllParams(String title, String author, String genre) {\n+        Optional<Book> optionalBook = Optional.empty();\n+        List<Book> bookList = bookRepository.findByTitle(title);\n+        for (Book bookInList : bookList) {\n+            if (bookInList.getAuthorObject().getAuthor().equals(author) && bookInList.getGenreObject().getGenre().equals(genre)) {\n+                optionalBook = Optional.ofNullable(bookInList);\n+                break;\n+            }\n+        }\n+        return optionalBook;\n+    }\n+\n+    private Author prepareAuthor(String author) {\n+        return authorService.getByAuthor(author)\n+                .orElseGet(() -> prepareCreateAuthor(author));\n+    }\n+\n+    private Author prepareCreateAuthor(String author) {\n+        authorService.create(author);\n+        return authorService.getByAuthor(author).get();\n+    }\n+\n+    private Genre prepareGenre(String genre) {\n+        return genreService.getByGenre(genre)\n+                .orElseGet(() -> prepareCreateGenre(genre));\n+    }\n+\n+    private Genre prepareCreateGenre(String genre) {\n+        genreService.create(genre);\n+        return genreService.getByGenre(genre).get();\n+    }\n+\n+    private void checkBook(String title, String author, String genre) {\n+        checkEmptyBook(title, author, genre);\n+        checkIsSameBook(title, author, genre);\n+    }\n+\n+    private void checkEmptyTitle(String title) {\n+        if (title == null || title.trim().equals(\"\"))\n+            throw new EmptyEntityInsertException(\"title cannot be empty\");\n+    }\n+\n+    private void checkEmptyBook(String title, String author, String genre) {\n+        checkEmptyTitle(title);\n+        authorService.checkEmptyAuthor(author);\n+        genreService.checkEmptyGenre(genre);\n+    }\n+\n+    private void checkIsSameBook(String title, String author, String genre) {\n+        if (!getByAllParams(title, author, genre).isEmpty())\n+            throw new SameEntityExistsException(\"already such a book in the database\");\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "9e76c58d7139eb28b7ce750efad3b3dd7e15190d",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/CommentService.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/CommentService.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/CommentService.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/CommentService.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,23 @@\n+package otus.student.kryukov.dz.service;\n+\n+import otus.student.kryukov.dz.domain.Book;\n+import otus.student.kryukov.dz.domain.Comment;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public interface CommentService {\n+\n+    void create(String comment, Book bookObject);\n+\n+    Comment getByCommentId(Long commentId);\n+\n+    List<Comment> getAllComments();\n+\n+    void update(Long commentId, String comment);\n+\n+    void delete(Long commentId);\n+\n+    Optional<Comment> getByCommentOrAllParams(String comment, Long bookId);\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "314787524cea59da1526adefd28cef73dddfc24f",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/CommentServiceImpl.java",
    "status": "added",
    "additions": 81,
    "deletions": 0,
    "changes": 81,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/CommentServiceImpl.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/CommentServiceImpl.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/CommentServiceImpl.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,81 @@\n+package otus.student.kryukov.dz.service;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import otus.student.kryukov.dz.repository.CommentRepository;\n+import otus.student.kryukov.dz.domain.Book;\n+import otus.student.kryukov.dz.domain.Comment;\n+import otus.student.kryukov.dz.exception.EmptyEntityInsertException;\n+import otus.student.kryukov.dz.exception.NoSuchEntityException;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Service\n+@RequiredArgsConstructor\n+public class CommentServiceImpl implements CommentService {\n+\n+    private final CommentRepository commentRepository;\n+\n+    @Override\n+    @Transactional\n+    public void create(String comment, Book bookObject) {\n+        checkEmptyComment(comment);\n+        Comment commentObject = new Comment(comment, bookObject);\n+        commentRepository.save(commentObject);\n+    }\n+\n+    @Override\n+    @Transactional(readOnly = true)\n+    public Comment getByCommentId(Long commentId) {\n+        return commentRepository.findById(commentId)\n+                .orElseThrow(() -> new NoSuchEntityException(\"no such comment exists\"));\n+    }\n+\n+    @Override\n+    @Transactional(readOnly = true)\n+    public List<Comment> getAllComments() {\n+        return commentRepository.findAllFetch();\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void update(Long commentId, String comment) {\n+        checkEmptyComment(comment);\n+        Comment commentObject = getByCommentId(commentId);\n+        commentObject.setComment(comment);\n+        commentRepository.save(commentObject);\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void delete(Long commentId) {\n+        commentRepository.deleteById(commentId);\n+    }\n+\n+\n+    @Override\n+    @Transactional(readOnly = true)\n+    public Optional<Comment> getByCommentOrAllParams(String comment, Long bookId) {\n+        Optional<Comment> optionalComment = Optional.empty();\n+        List<Comment> commentList = commentRepository.findByComment(comment);\n+        int commentListSize = commentList.size();\n+        if (commentListSize == 1) optionalComment = Optional.ofNullable(commentList.get(0));\n+        else {\n+            for (Comment commentInList : commentList) {\n+                if (commentInList.getBookObject().getBookId() == bookId) {\n+                    optionalComment = Optional.ofNullable(commentInList);\n+                    break;\n+                }\n+            }\n+        }\n+        return optionalComment;\n+    }\n+\n+    private void checkEmptyComment(String comment) {\n+        if (comment == null || comment.trim().equals(\"\"))\n+            throw new EmptyEntityInsertException(\"comment cannot be empty\");\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "8ad1d15330c32fc6584a5031c41956e10314f3d9",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/GenreService.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/GenreService.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/GenreService.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/GenreService.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,17 @@\n+package otus.student.kryukov.dz.service;\n+\n+import otus.student.kryukov.dz.domain.Genre;\n+\n+import java.util.Optional;\n+\n+public interface GenreService {\n+\n+    Optional<Genre> getByGenre(String genre);\n+\n+    Optional<Genre> getByGenreId(Long genreId);\n+\n+    void create(String genre);\n+\n+    void checkEmptyGenre(String genre);\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "dd140a142516514e49aefbeec56f8327ca63119a",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/GenreServiceImpl.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/GenreServiceImpl.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/GenreServiceImpl.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/service/GenreServiceImpl.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,42 @@\n+package otus.student.kryukov.dz.service;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import otus.student.kryukov.dz.repository.GenreRepository;\n+import otus.student.kryukov.dz.domain.Genre;\n+import otus.student.kryukov.dz.exception.EmptyEntityInsertException;\n+\n+import java.util.Optional;\n+\n+@Service\n+@RequiredArgsConstructor\n+public class GenreServiceImpl implements GenreService {\n+\n+    private final GenreRepository genreRepository;\n+\n+    @Override\n+    @Transactional(readOnly = true)\n+    public Optional<Genre> getByGenre(String genre) {\n+        return Optional.ofNullable(genreRepository.findByGenre(genre));\n+    }\n+\n+    @Override\n+    @Transactional(readOnly = true)\n+    public Optional<Genre> getByGenreId(Long genreId) {\n+        return genreRepository.findById(genreId);\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void create(String genre) {\n+        checkEmptyGenre(genre);\n+        genreRepository.save(new Genre(genre));\n+    }\n+\n+    @Override\n+    public void checkEmptyGenre(String genre) {\n+        if (genre == null || genre.trim().equals(\"\"))\n+            throw new EmptyEntityInsertException(\"genre cannot be empty\");\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "c4299d1e29e031860712138edab8e4ef509eae75",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/AuthorCommands.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/AuthorCommands.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/AuthorCommands.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/AuthorCommands.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,46 @@\n+package otus.student.kryukov.dz.shell;\n+\n+import org.springframework.shell.standard.ShellComponent;\n+import org.springframework.shell.standard.ShellMethod;\n+import org.springframework.shell.standard.ShellOption;\n+import otus.student.kryukov.dz.domain.Author;\n+import otus.student.kryukov.dz.exception.NoSuchEntityException;\n+import otus.student.kryukov.dz.print.DrawTable;\n+import otus.student.kryukov.dz.print.PrintService;\n+import otus.student.kryukov.dz.service.AuthorService;\n+\n+import java.util.Arrays;\n+\n+@ShellComponent\n+public class AuthorCommands {\n+    private final AuthorService authorService;\n+    private final PrintService printService;\n+    private final DrawTable drawTable;\n+\n+    public AuthorCommands(AuthorService authorService, PrintService printService, DrawTable drawTable) {\n+        this.authorService = authorService;\n+        this.printService = printService;\n+        this.drawTable = drawTable;\n+    }\n+\n+    @ShellMethod(value = \"get author-object by author\", key = {\"ga\", \"getByAuthor\"})\n+    public void getByAuthor(@ShellOption String author) {\n+        Author authorObject = authorService.getByAuthor(author)\n+                .orElseThrow(() -> new NoSuchEntityException(\"no such author exists\"));\n+        drawTable.drawAsciiTableAuthor(Arrays.asList(authorObject), Arrays.asList(\"author_id\", \"author\"));\n+    }\n+\n+    @ShellMethod(value = \"get author-object by author_id\", key = {\"gaid\", \"getByAuthorId\"})\n+    public void getByAuthorId(@ShellOption Long authorId) {\n+        Author authorObject = authorService.getByAuthorId(authorId)\n+                .orElseThrow(() -> new NoSuchEntityException(\"no such author exists\"));\n+        drawTable.drawAsciiTableAuthor(Arrays.asList(authorObject), Arrays.asList(\"author_id\", \"author\"));\n+    }\n+\n+    @ShellMethod(value = \"create author-object in database\", key = {\"ca\", \"createByAuthor\"})\n+    public void createByAuthor(@ShellOption String author) {\n+        authorService.create(author);\n+        printService.out(\"author created:\");\n+        getByAuthor(author);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "d0c713ba409a97211fff425f79a0dc7143cc6aac",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/BookCommands.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/BookCommands.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/BookCommands.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/BookCommands.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,66 @@\n+package otus.student.kryukov.dz.shell;\n+\n+import org.springframework.shell.standard.ShellComponent;\n+import org.springframework.shell.standard.ShellMethod;\n+import org.springframework.shell.standard.ShellOption;\n+import otus.student.kryukov.dz.domain.Book;\n+import otus.student.kryukov.dz.exception.NoSuchEntityException;\n+import otus.student.kryukov.dz.print.DrawTable;\n+import otus.student.kryukov.dz.print.PrintService;\n+import otus.student.kryukov.dz.service.BookService;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+@ShellComponent\n+public class BookCommands {\n+    private final BookService bookService;\n+    private final PrintService printService;\n+    private final DrawTable drawTable;\n+\n+    public BookCommands(BookService bookService, PrintService printService, DrawTable drawTable) {\n+        this.bookService = bookService;\n+        this.printService = printService;\n+        this.drawTable = drawTable;\n+    }\n+\n+    @ShellMethod(value = \"create book-object in database\", key = {\"cb\", \"createBook\"})\n+    public void createBook(@ShellOption String title, @ShellOption String author, @ShellOption String genre) {\n+        bookService.create(title, author, genre);\n+        printService.out(\"book created:\");\n+        getBookByAllParams(title, author, genre);\n+    }\n+\n+    @ShellMethod(value = \"get book-object by book_id\", key = {\"gbid\", \"getByBookId\"})\n+    public void getByBookId(@ShellOption Long bookId) {\n+        Book bookObject = bookService.getByBookId(bookId);\n+        drawTable.drawAsciiTableBook(Arrays.asList(bookObject), Arrays.asList(\"book_id\", \"title\", \"author\", \"genre\"));\n+        drawTable.drawAsciiTableCommentsForBook(bookObject, Arrays.asList(\"comment_id\", \"comment\"));\n+    }\n+\n+    @ShellMethod(value = \"get all book-objects\", key = {\"gab\", \"getAllBooks\"})\n+    public void getAllBooks() {\n+        List<Book> books = bookService.getAllBooks();\n+        drawTable.drawAsciiTableBook(books, Arrays.asList(\"book_id\", \"title\", \"author\", \"genre\"));\n+    }\n+\n+    @ShellMethod(value = \"update book-object in database\", key = {\"ub\", \"updateBook\"})\n+    public void updateBook(@ShellOption Long bookId, @ShellOption String title, @ShellOption String author, @ShellOption String genre) {\n+        bookService.update(bookId, title, author, genre);\n+        printService.out(\"book updated:\");\n+        getByBookId(bookId);\n+    }\n+\n+    @ShellMethod(value = \"delete book-object from database\", key = {\"db\", \"deleteBook\"})\n+    public void deleteBook(@ShellOption Long bookId) {\n+        bookService.delete(bookId);\n+        printService.out(\"book deleted\");\n+    }\n+\n+    @ShellMethod(value = \"get book-object by all params\", key = {\"gb\", \"getBookByAllParams\"})\n+    public void getBookByAllParams(@ShellOption String title, @ShellOption String author, @ShellOption String genre) {\n+        Book bookObject = bookService.getByAllParams(title, author, genre)\n+                .orElseThrow(() -> new NoSuchEntityException(\"no such book exists\"));\n+        drawTable.drawAsciiTableBook(Arrays.asList(bookObject), Arrays.asList(\"book_id\", \"title\", \"author\", \"genre\"));\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2e9c50c7323f374b4001eff969c0953240fb6db5",
    "filename": "11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/CommentCommands.java",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/blob/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/CommentCommands.java",
    "raw_url": "https://github.com/MrMasterZ/HW-2020-11-otus-spring-kryukov/raw/9516693292dc318baf0735961673d879f1ebae0d/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/CommentCommands.java",
    "contents_url": "https://api.github.com/repos/MrMasterZ/HW-2020-11-otus-spring-kryukov/contents/11-spring-data-jpa/src/main/java/otus/student/kryukov/dz/shell/CommentCommands.java?ref=9516693292dc318baf0735961673d879f1ebae0d",
    "patch": "@@ -0,0 +1,69 @@\n+package otus.student.kryukov.dz.shell;\n+\n+import org.springframework.shell.standard.ShellComponent;\n+import org.springframework.shell.standard.ShellMethod;\n+import org.springframework.shell.standard.ShellOption;\n+import otus.student.kryukov.dz.domain.Comment;\n+import otus.student.kryukov.dz.exception.NoSuchEntityException;\n+import otus.student.kryukov.dz.print.DrawTable;\n+import otus.student.kryukov.dz.print.PrintService;\n+import otus.student.kryukov.dz.service.BookService;\n+import otus.student.kryukov.dz.service.CommentService;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+@ShellComponent\n+public class CommentCommands {\n+    private final CommentService commentService;\n+    private final BookService bookService;\n+    private final PrintService printService;\n+    private final DrawTable drawTable;\n+\n+    public CommentCommands(CommentService commentService, BookService bookService, PrintService printService, DrawTable drawTable) {\n+        this.commentService = commentService;\n+        this.bookService = bookService;\n+        this.printService = printService;\n+        this.drawTable = drawTable;\n+    }\n+\n+    @ShellMethod(value = \"create comment-object in database\", key = {\"cc\", \"createComment\"})\n+    public void createComment(@ShellOption String comment, @ShellOption Long bookId) {\n+        commentService.create(comment, bookService.getByBookId(bookId));\n+        printService.out(\"comment created:\");\n+        getCommentByCommentOrAllParams(comment, bookId);\n+    }\n+\n+    @ShellMethod(value = \"get comment-object by comment_id\", key = {\"gcid\", \"getByCommentId\"})\n+    public void getByCommentId(@ShellOption Long commentId) {\n+        Comment commentObject = commentService.getByCommentId(commentId);\n+        drawTable.drawAsciiTableComment(Arrays.asList(commentObject), Arrays.asList(\"comment_id\", \"comment\", \"book title\"));\n+    }\n+\n+    @ShellMethod(value = \"get all comment-objects\", key = {\"gac\", \"getAllComments\"})\n+    public void getAllComments() {\n+        List<Comment> comments = commentService.getAllComments();\n+        drawTable.drawAsciiTableComment(comments, Arrays.asList(\"comment_id\", \"comment\", \"book title\"));\n+    }\n+\n+    @ShellMethod(value = \"update comment-object in database\", key = {\"uc\", \"updateComment\"})\n+    public void updateComment(@ShellOption Long commentId, @ShellOption String comment) {\n+        commentService.update(commentId, comment);\n+        printService.out(\"comment updated:\");\n+        getByCommentId(commentId);\n+    }\n+\n+    @ShellMethod(value = \"delete comment-object from database\", key = {\"dc\", \"deleteComment\"})\n+    public void deleteComment(@ShellOption Long commentId) {\n+        commentService.delete(commentId);\n+        printService.out(\"comment deleted\");\n+    }\n+\n+    @ShellMethod(value = \"get comment-object by comment-string or all params\", key = {\"gc\", \"getCommentByCommentOrAllParams\"})\n+    public void getCommentByCommentOrAllParams(@ShellOption String comment, @ShellOption Long bookId) {\n+        Comment commentObject = commentService.getByCommentOrAllParams(comment, bookId)\n+                .orElseThrow(() -> new NoSuchEntityException(\"no such comment exists\"));\n+        drawTable.drawAsciiTableComment(Arrays.asList(commentObject), Arrays.asList(\"comment_id\", \"comment\", \"book title\"));\n+    }\n+\n+}\n\\ No newline at end of file"
  }
]
