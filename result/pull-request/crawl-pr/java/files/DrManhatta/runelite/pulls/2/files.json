[
  {
    "sha": "e172908cc28d37f97132146ed7624c59d1dc6736",
    "filename": ".github/ISSUE_TEMPLATE/Bug_report.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/.github/ISSUE_TEMPLATE/Bug_report.md",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/.github/ISSUE_TEMPLATE/Bug_report.md",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/.github/ISSUE_TEMPLATE/Bug_report.md?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -29,4 +29,4 @@ If applicable, add screenshots to help explain your problem.\n \n **Additional context**\n Add any other context about the problem here, e.g. logs. Your client logs can usually be found in\n-`C:\\Users\\<your_user_name>\\.runelite\\logs` on Windows and `~/.runelite/logs` on Linux and macOS.\n+`C:\\Users\\<your_user_name>\\.openosrs\\logs` on Windows and `~/.openosrs/logs` on Linux and macOS."
  },
  {
    "sha": "8d16f9b50ca40e35aa1f44d038f1ab6bb935ea1d",
    "filename": ".github/workflows/gradle.yml",
    "status": "modified",
    "additions": 0,
    "deletions": 22,
    "changes": 22,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/.github/workflows/gradle.yml",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/.github/workflows/gradle.yml",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/.github/workflows/gradle.yml?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -26,25 +26,3 @@ jobs:\n           body: This is an auto-generated PR with an updated gradle version\n           labels: automated-pull-request, gradle\n           signoff: false\n-\n-  update-dependencies:\n-    runs-on: ubuntu-latest\n-\n-    steps:\n-      - uses: actions/checkout@v2.3.4\n-      - name: Make gradlew executable\n-        run: chmod +x ./gradlew\n-      - name: Update Gradle Dependencies\n-        run: ./gradlew useLatestVersions --console=plain\n-      - name: Create Gradle dependencies update Pull Request\n-        uses: peter-evans/create-pull-request@v3.4.1\n-        with:\n-          token: ${{ secrets.OpenOSRS }}\n-          author: OpenOSRS <openosrs.github@gmail.com>\n-          committer: OpenOSRS <openosrs.github@gmail.com>\n-          branch: GRADLE-DEPS-UPDATE\n-          commit-message: 'gradle: Update gradle dependencies'\n-          title: 'gradle: Update gradle dependencies'\n-          body: This is an auto-generated PR with an updated gradle dependencies\n-          labels: automated-pull-request, gradle\n-          signoff: false"
  },
  {
    "sha": "d6037e32e5f0e65de61a7a7b3feb193aa0cfef79",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/.gitignore",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/.gitignore",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/.gitignore?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -24,3 +24,4 @@ runelite-client/dependencies.txt\n .vscode\n .factorypath\n hs_err_pid*.log\n+/runelite-client/src/main/resources/net/runelite/client/injected-client.oprs"
  },
  {
    "sha": "76ef9804ade6d439a078886a0993cac471a21bcf",
    "filename": "README.md",
    "status": "modified",
    "additions": 13,
    "deletions": 4,
    "changes": 17,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/README.md",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/README.md",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/README.md?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -2,12 +2,21 @@\n \n \n \n-# OpenOSRS  \n+# OpenOSRS injected RuneLite \n \n [![Build Status](https://github.com/open-osrs/runelite/workflows/OpenOSRS%20-%20CI%20(push)/badge.svg)](https://github.com/open-osrs/runelite/actions?query=workflow%3A%22OpenOSRS+-+CI+%28push%29%22)\n [![HitCount](http://hits.dwyl.io/open-osrs/runelite.svg)](http://hits.dwyl.io/open-osrs/runelite)  \n-[OpenOSRS](https://openosrs.com) is a fully open-source client with no restrictions. We are not affiliated with Jagex or RuneLite.\n-\n+[OpenOSRS](https://openosrs.com) is a fully open-source client with no restrictions. We are not affiliated with Jagex or RuneLite.  \n+  \n+This is a special branch that uses the upstream client (RuneLite) with the OpenOSRS injector. (bundled)  \n+\n+From the root module, run the following gradle tasks:  \n+```clean build run```\n+  \n+This branch is still in bringup but most functionality works as intended.  \n+This branch uses upstreams PlayerManager/OverlayManager etc so keep that in mind if porting a plugin.  \n+  \n+Contributions are welcome, but there should be no changes made to runelite-client unless necessary/minor. Mould the api around the client.\n ## Discord  \n \n [![Discord](https://img.shields.io/discord/373382904769675265.svg)](https://discord.gg/openosrs)\n@@ -17,7 +26,7 @@\n - [cache](cache/src/main/java/net/runelite/cache) - Libraries used for reading/writing cache files, as well as the data in it\n - [deobfuscator](deobfuscator/src/main/java/net/runelite/deob) - Can decompile and cleanup gamepacks as well as map updates to newer revs\n - [http-api](http-api/src/main/java/net/runelite/http/api) - API for runelite and OpenOSRS\n-- [injector-plugin](injector-plugin/src/main/java/net/runelite/injector) - Tool for implementing our modifications to the gamepack\n+- [injector](injector/src/main/java/com/openosrs/injector) - Bytecode weaver that allows us to add code to the obfuscated gamepack\n - [runelite-api](runelite-api/src/main/java/net/runelite/api) - RuneLite API, interfaces for accessing the client\n - [runelite-mixins](runelite-mixins/src/main/java/net/runelite) - Classes containing the Objects to be injected using the injector-plugin\n - [runescape-api](runescape-api/src/main/java/net/runelite) - Mappings correspond to these interfaces, runelite-api is a subset of this"
  },
  {
    "sha": "016a6f6dcf2828e84e8b88317809805ae8a91ac2",
    "filename": "build.gradle.kts",
    "status": "modified",
    "additions": 1,
    "deletions": 49,
    "changes": 50,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/build.gradle.kts",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/build.gradle.kts",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/build.gradle.kts?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -23,7 +23,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n \n-import com.github.benmanes.gradle.versions.updates.DependencyUpdatesTask\n import org.ajoberstar.grgit.Grgit\n \n buildscript {\n@@ -35,17 +34,11 @@ buildscript {\n     }\n     dependencies {\n         classpath(\"org.ajoberstar.grgit:grgit-core:4.1.0\")\n-        classpath(\"com.github.ben-manes:gradle-versions-plugin:0.36.0\")\n-        classpath(\"com.openosrs:injector-plugin:1.1.7\")\n     }\n }\n \n plugins {\n-    id(\"com.adarshr.test-logger\") version \"2.1.1\" apply false\n-    id(\"com.github.ben-manes.versions\") version \"0.36.0\"\n-    id(\"se.patrikerdes.use-latest-versions\") version \"0.2.15\"\n     id(\"org.ajoberstar.grgit\") version \"4.1.0\"\n-    id(\"com.simonharrer.modernizer\") version \"2.1.0-1\" apply false\n \n     application\n }\n@@ -57,12 +50,6 @@ val localGitCommit = try {\n     \"n/a\"\n }\n \n-fun isNonStable(version: String): Boolean {\n-    return listOf(\"ALPHA\", \"BETA\", \"RC\").any {\n-        version.toUpperCase().contains(it)\n-    }\n-}\n-\n allprojects {\n     group = \"com.openosrs\"\n     version = ProjectVersions.openosrsVersion\n@@ -114,7 +101,6 @@ subprojects {\n             }\n             filter {\n                 includeModule(\"net.runelite\", \"fernflower\")\n-                includeModule(\"com.openosrs.rxrelay3\", \"rxrelay\")\n             }\n         }\n \n@@ -123,9 +109,6 @@ subprojects {\n \n     apply<JavaLibraryPlugin>()\n     //apply<MavenPublishPlugin>()\n-    apply(plugin = \"com.adarshr.test-logger\")\n-    apply(plugin = \"com.github.ben-manes.versions\")\n-    apply(plugin = \"se.patrikerdes.use-latest-versions\")\n \n     project.extra[\"gitCommit\"] = localGitCommit\n     project.extra[\"rootPath\"] = rootDir.toString().replace(\"\\\\\", \"/\")\n@@ -140,9 +123,6 @@ subprojects {\n             isIgnoreFailures = false\n         }\n     }\n-    if (this.name == \"runelite-client\" || this.name == \"runelite-api\") {\n-        apply(plugin = \"com.simonharrer.modernizer\")\n-    }\n \n     configure<PublishingExtension> {\n         repositories {\n@@ -190,27 +170,13 @@ subprojects {\n             exclude(\"**/LayoutSolver.java\")\n             exclude(\"**/RoomType.java\")\n         }\n-\n-        named<DependencyUpdatesTask>(\"dependencyUpdates\") {\n-            checkForGradleUpdate = false\n-\n-            resolutionStrategy {\n-                componentSelection {\n-                    all {\n-                        if (candidate.displayName.contains(\"fernflower\") || isNonStable(candidate.version)) {\n-                            reject(\"Non stable\")\n-                        }\n-                    }\n-                }\n-            }\n-        }\n     }\n \n     configurations[\"compileOnly\"].extendsFrom(configurations[\"annotationProcessor\"])\n }\n \n application {\n-    mainClassName = \"net.runelite.client.RuneLite\"\n+    mainClass.set(\"net.runelite.client.RuneLite\")\n }\n \n tasks {\n@@ -220,18 +186,4 @@ tasks {\n         classpath = project(\":runelite-client\").sourceSets.main.get().runtimeClasspath\n         enableAssertions = true\n     }\n-\n-    named<DependencyUpdatesTask>(\"dependencyUpdates\") {\n-        checkForGradleUpdate = false\n-\n-        resolutionStrategy {\n-            componentSelection {\n-                all {\n-                    if (candidate.displayName.contains(\"fernflower\") || isNonStable(candidate.version)) {\n-                        reject(\"Non stable\")\n-                    }\n-                }\n-            }\n-        }\n-    }\n }"
  },
  {
    "sha": "eaeb9cc15e8e4b2ca920b36520ecc20316be0997",
    "filename": "buildSrc/src/main/kotlin/BootstrapPlugin.kt",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/buildSrc/src/main/kotlin/BootstrapPlugin.kt",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/buildSrc/src/main/kotlin/BootstrapPlugin.kt",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/buildSrc/src/main/kotlin/BootstrapPlugin.kt?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -14,8 +14,8 @@ class BootstrapPlugin : Plugin<Project> {\n             bootstrapDependencies(project(\":runelite-api\"))\n             bootstrapDependencies(project(\":runescape-api\"))\n             bootstrapDependencies(project(\":http-api\"))\n-            bootstrapDependencies(project(\":injected-client\"))\n             bootstrapDependencies(project(\":runelite-client\"))\n+            bootstrapDependencies(project(\":runelite-jshell\"))\n         }\n \n         tasks.register<BootstrapTask>(\"bootstrapStaging\", \"staging\")\n@@ -31,7 +31,7 @@ class BootstrapPlugin : Plugin<Project> {\n             dependsOn(project(\":runelite-api\").tasks[\"publish\"])\n             dependsOn(project(\":runescape-api\").tasks[\"publish\"])\n             dependsOn(project(\":http-api\").tasks[\"publish\"])\n-            dependsOn(project(\":injected-client\").tasks[\"publish\"])\n+            dependsOn(project(\":runelite-jshell\").tasks[\"publish\"])\n \n             doLast {\n                 copy {\n@@ -41,10 +41,10 @@ class BootstrapPlugin : Plugin<Project> {\n                 copy {\n                     from(\n                             \"${buildDir}/repo/.\",\n-                            \"${parent?.projectDir}/injected-client/build/repo/.\",\n                             \"${parent?.projectDir}/runelite-api/build/repo/.\",\n                             \"${parent?.projectDir}/http-api/build/repo/.\",\n-                            \"${parent?.projectDir}/runescape-api/build/repo/.\"\n+                            \"${parent?.projectDir}/runescape-api/build/repo/.\",\n+                            \"${parent?.projectDir}/runelite-jshell/build/repo/.\"\n                     )\n                     into(\"${buildDir}/bootstrap/repo/${type}\")\n                 }"
  },
  {
    "sha": "8c766ff1b7c818401278ae5491e4409b1a6d92b1",
    "filename": "buildSrc/src/main/kotlin/BootstrapTask.kt",
    "status": "modified",
    "additions": 27,
    "deletions": 4,
    "changes": 31,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/buildSrc/src/main/kotlin/BootstrapTask.kt",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/buildSrc/src/main/kotlin/BootstrapTask.kt",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/buildSrc/src/main/kotlin/BootstrapTask.kt?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -1,3 +1,4 @@\n+import groovy.json.JsonOutput\n import org.gradle.api.DefaultTask\n import org.gradle.api.file.RegularFileProperty\n import org.gradle.api.tasks.*\n@@ -6,6 +7,7 @@ import org.gradle.kotlin.dsl.get\n import java.io.File\n import java.security.MessageDigest\n import javax.inject.Inject\n+import kotlin.system.exitProcess\n \n open class BootstrapTask @Inject constructor(@Input val type: String) : DefaultTask() {\n \n@@ -42,11 +44,11 @@ open class BootstrapTask @Inject constructor(@Input val type: String) : DefaultT\n             val version = splat[2]\n             lateinit var path: String\n \n-            if (it.file.name.contains(\"injected-client\") ||\n-                    it.file.name.contains(\"runelite-client\") ||\n+            if (it.file.name.contains(\"runelite-client\") ||\n                     it.file.name.contains(\"http-api\") ||\n                     it.file.name.contains(\"runescape-api\") ||\n-                    it.file.name.contains(\"runelite-api\")) {\n+                    it.file.name.contains(\"runelite-api\") ||\n+                    it.file.name.contains(\"runelite-jshell\")) {\n                 path = \"https://github.com/open-osrs/hosting/raw/master/${type}/${it.file.name}\"\n             } else if (it.file.name.contains(\"injection-annotations\")) {\n                 path = \"https://github.com/open-osrs/hosting/raw/master/\" + group.replace(\".\", \"/\") + \"/${name}/$version/${it.file.name}\"\n@@ -63,6 +65,25 @@ open class BootstrapTask @Inject constructor(@Input val type: String) : DefaultT\n                 }\n                 path += \"${name}/$version/${name}-$version.jar\"\n             }\n+            else if (it.file.name.contains(\"gluegen\"))\n+            {\n+                path = \"http://repo.runelite.net/net/runelite/gluegen/gluegen-rt/\" + version + \"/\" + it.file.name\n+            }\n+            else if (it.file.name.contains(\"jogl\"))\n+            {\n+                path = \"http://repo.runelite.net/net/runelite/jogl/jogl-all/\" + version + \"/\" + it.file.name\n+            }\n+            else if (it.file.name.contains(\"jocl\"))\n+            {\n+                path = \"http://repo.runelite.net/net/runelite/jocl/jocl/\" + version + \"/\" + it.file.name\n+            }\n+            else\n+            {\n+                println(\"ERROR: \" + it.file.name + \" has no download path!\")\n+                exitProcess(-1)\n+            }\n+\n+\n \n             val filePath = it.file.absolutePath\n             val artifactFile = File(filePath)\n@@ -102,11 +123,13 @@ open class BootstrapTask @Inject constructor(@Input val type: String) : DefaultT\n                 \"artifacts\" to getArtifacts()\n         ).toString()\n \n+        val prettyJson = JsonOutput.prettyPrint(json)\n+\n         val bootstrapDir = File(\"${project.buildDir}/bootstrap\")\n         bootstrapDir.mkdirs()\n \n         File(bootstrapDir, \"bootstrap-${type}.json\").printWriter().use { out ->\n-            out.println(json)\n+            out.println(prettyJson)\n         }\n     }\n }"
  },
  {
    "sha": "94b3ec686d0b7d53c61906cdd549e6df468c1809",
    "filename": "buildSrc/src/main/kotlin/Dependencies.kt",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/buildSrc/src/main/kotlin/Dependencies.kt",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/buildSrc/src/main/kotlin/Dependencies.kt",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/buildSrc/src/main/kotlin/Dependencies.kt?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -25,10 +25,10 @@\n \n object ProjectVersions {\n     const val launcherVersion = \"2.2.0\"\n-    const val rlVersion = \"1.6.32\"\n+    const val rlVersion = \"1.7.2.2\"\n \n-    const val openosrsVersion = \"3.5.4\"\n+    const val openosrsVersion = \"4.1.0\"\n \n-    const val rsversion = 193\n+    const val rsversion = 194\n     const val cacheversion = 165\n }"
  },
  {
    "sha": "c8d651bcf68af188904870fcee128ea86095bfc8",
    "filename": "cache/src/main/java/net/runelite/cache/fs/flat/FlatStorage.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/fs/flat/FlatStorage.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/fs/flat/FlatStorage.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/cache/src/main/java/net/runelite/cache/fs/flat/FlatStorage.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -220,7 +220,7 @@ public void save(Store store) throws IOException\n \t\t\t\tbr.printf(\"revision=%d\\n\", idx.getRevision());\n \t\t\t\tbr.printf(\"compression=%d\\n\", idx.getCompression());\n \t\t\t\tbr.printf(\"crc=%d\\n\", idx.getCrc());\n-\t\t\t\tbr.printf(\"named=%b\\n\", idx.getCompression());\n+\t\t\t\tbr.printf(\"named=%b\\n\", idx.isNamed());\n \n \t\t\t\tidx.getArchives().sort(Comparator.comparing(Archive::getArchiveId));\n \t\t\t\tfor (Archive archive : idx.getArchives())"
  },
  {
    "sha": "7b79f8b4f7b618564c57950e74c94179f84c5f65",
    "filename": "cache/src/main/java/net/runelite/cache/fs/jagex/DataFile.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/fs/jagex/DataFile.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/fs/jagex/DataFile.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/cache/src/main/java/net/runelite/cache/fs/jagex/DataFile.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -66,7 +66,7 @@ public void clear() throws IOException\n \t * @return\n \t * @throws IOException\n \t */\n-\tpublic byte[] read(int indexId, int archiveId, int sector, int size) throws IOException\n+\tpublic synchronized byte[] read(int indexId, int archiveId, int sector, int size) throws IOException\n \t{\n \t\tif (sector <= 0L || dat.length() / SECTOR_SIZE < (long) sector)\n \t\t{\n@@ -169,7 +169,7 @@ public void clear() throws IOException\n \t\treturn buffer.array();\n \t}\n \n-\tpublic DataFileWriteResult write(int indexId, int archiveId, byte[] compressedData) throws IOException\n+\tpublic synchronized DataFileWriteResult write(int indexId, int archiveId, byte[] compressedData) throws IOException\n \t{\n \t\tint sector;\n \t\tint startSector;"
  },
  {
    "sha": "0e1353706169d333a081e9878ab48f5521875d33",
    "filename": "cache/src/main/java/net/runelite/cache/fs/jagex/DiskStorage.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/fs/jagex/DiskStorage.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/fs/jagex/DiskStorage.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/cache/src/main/java/net/runelite/cache/fs/jagex/DiskStorage.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -112,21 +112,20 @@ public void load(Store store) throws IOException\n \tpublic byte[] readIndex(int indexId) throws IOException\n \t{\n \t\tIndexEntry entry = index255.read(indexId);\n-\t\tif (entry != null)\n+\t\tif (entry == null)\n \t\t{\n-\t\t\tbyte[] indexData = data.read(index255.getIndexFileId(), entry.getId(), entry.getSector(), entry.getLength());\n-\t\t\treturn indexData;\n+\t\t\treturn null;\n \t\t}\n \n-\t\treturn null;\n+\t\tbyte[] indexData = data.read(index255.getIndexFileId(), entry.getId(), entry.getSector(), entry.getLength());\n+\t\treturn indexData;\n \t}\n \n \tprivate void loadIndex(Index index) throws IOException\n \t{\n \t\tlogger.trace(\"Loading index {}\", index.getId());\n \n \t\tbyte[] indexData = readIndex(index.getId());\n-\n \t\tif (indexData == null)\n \t\t{\n \t\t\treturn;"
  },
  {
    "sha": "993073bf905547afe3f998441025073099216529",
    "filename": "cache/src/main/java/net/runelite/cache/models/JagexColor.java",
    "status": "added",
    "additions": 136,
    "deletions": 0,
    "changes": 136,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/models/JagexColor.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/models/JagexColor.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/cache/src/main/java/net/runelite/cache/models/JagexColor.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright (c) 2020 Abex\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.cache.models;\n+\n+public final class JagexColor\n+{\n+\tpublic static final double BRIGHTNESS_MAX = .6;\n+\tpublic static final double BRIGHTNESS_HIGH = .7;\n+\tpublic static final double BRIGHTNESS_LOW = .8;\n+\tpublic static final double BRIGTHNESS_MIN = .9;\n+\n+\tprivate static final double HUE_OFFSET = (.5 / 64.D);\n+\tprivate static final double SATURATION_OFFSET = (.5 / 8.D);\n+\n+\tprivate JagexColor()\n+\t{\n+\t}\n+\n+\tpublic static short packHSL(int hue, int saturation, int luminance)\n+\t{\n+\t\treturn (short) ((short) (hue & 63) << 10\n+\t\t\t| (short) (saturation & 7) << 7\n+\t\t\t| (short) (luminance & 127));\n+\t}\n+\n+\tpublic static int unpackHue(short hsl)\n+\t{\n+\t\treturn hsl >> 10 & 63;\n+\t}\n+\n+\tpublic static int unpackSaturation(short hsl)\n+\t{\n+\t\treturn hsl >> 7 & 7;\n+\t}\n+\n+\tpublic static int unpackLuminance(short hsl)\n+\t{\n+\t\treturn hsl & 127;\n+\t}\n+\n+\tpublic static String formatHSL(short hsl)\n+\t{\n+\t\treturn String.format(\"%02Xh%Xs%02Xl\", unpackHue(hsl), unpackSaturation(hsl), unpackLuminance(hsl));\n+\t}\n+\n+\tpublic static int HSLtoRGB(short hsl, double brightness)\n+\t{\n+\t\tdouble hue = (double) unpackHue(hsl) / 64.D + HUE_OFFSET;\n+\t\tdouble saturation = (double) unpackSaturation(hsl) / 8.D + SATURATION_OFFSET;\n+\t\tdouble luminance = (double) unpackLuminance(hsl) / 128.D;\n+\n+\t\t// This is just a standard hsl to rgb transform\n+\t\t// the only difference is the offsets above and the brightness transform below\n+\t\tdouble chroma = (1.D - Math.abs((2.D * luminance) - 1.D)) * saturation;\n+\t\tdouble x = chroma * (1 - Math.abs(((hue * 6.D) % 2.D) - 1.D));\n+\t\tdouble lightness = luminance - (chroma / 2);\n+\n+\t\tdouble r = lightness, g = lightness, b = lightness;\n+\t\tswitch ((int) (hue * 6.D))\n+\t\t{\n+\t\t\tcase 0:\n+\t\t\t\tr += chroma;\n+\t\t\t\tg += x;\n+\t\t\t\tbreak;\n+\t\t\tcase 1:\n+\t\t\t\tg += chroma;\n+\t\t\t\tr += x;\n+\t\t\t\tbreak;\n+\t\t\tcase 2:\n+\t\t\t\tg += chroma;\n+\t\t\t\tb += x;\n+\t\t\t\tbreak;\n+\t\t\tcase 3:\n+\t\t\t\tb += chroma;\n+\t\t\t\tg += x;\n+\t\t\t\tbreak;\n+\t\t\tcase 4:\n+\t\t\t\tb += chroma;\n+\t\t\t\tr += x;\n+\t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\tr += chroma;\n+\t\t\t\tb += x;\n+\t\t\t\tbreak;\n+\t\t}\n+\n+\t\tint rgb = ((int) (r * 256.0D) << 16)\n+\t\t\t| ((int) (g * 256.0D) << 8)\n+\t\t\t| (int) (b * 256.0D);\n+\n+\t\trgb = adjustForBrightness(rgb, brightness);\n+\n+\t\tif (rgb == 0)\n+\t\t{\n+\t\t\trgb = 1;\n+\t\t}\n+\t\treturn rgb;\n+\t}\n+\n+\tpublic static int adjustForBrightness(int rgb, double brightness)\n+\t{\n+\t\tdouble r = (double) (rgb >> 16) / 256.0D;\n+\t\tdouble g = (double) (rgb >> 8 & 255) / 256.0D;\n+\t\tdouble b = (double) (rgb & 255) / 256.0D;\n+\n+\t\tr = Math.pow(r, brightness);\n+\t\tg = Math.pow(g, brightness);\n+\t\tb = Math.pow(b, brightness);\n+\n+\t\treturn ((int) (r * 256.0D) << 16)\n+\t\t\t| ((int) (g * 256.0D) << 8)\n+\t\t\t| (int) (b * 256.0D);\n+\t}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "fb65f99972e6eaa5784f577f26fc2454108e45b2",
    "filename": "cache/src/main/java/net/runelite/cache/models/ObjExporter.java",
    "status": "modified",
    "additions": 6,
    "deletions": 14,
    "changes": 20,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/models/ObjExporter.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/models/ObjExporter.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/cache/src/main/java/net/runelite/cache/models/ObjExporter.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -24,14 +24,15 @@\n  */\n package net.runelite.cache.models;\n \n-import java.awt.Color;\n import java.io.PrintWriter;\n import net.runelite.cache.TextureManager;\n import net.runelite.cache.definitions.ModelDefinition;\n import net.runelite.cache.definitions.TextureDefinition;\n \n public class ObjExporter\n {\n+\tprivate static final double BRIGHTNESS = JagexColor.BRIGTHNESS_MIN;\n+\n \tprivate final TextureManager textureManager;\n \tprivate final ModelDefinition model;\n \n@@ -111,11 +112,10 @@ public void export(PrintWriter objWriter, PrintWriter mtlWriter)\n \n \t\t\tif (textureId == -1)\n \t\t\t{\n-\t\t\t\tColor color = rs2hsbToColor(model.faceColors[i]);\n-\n-\t\t\t\tdouble r = color.getRed() / 255.0;\n-\t\t\t\tdouble g = color.getGreen() / 255.0;\n-\t\t\t\tdouble b = color.getBlue() / 255.0;\n+\t\t\t\tint rgb = JagexColor.HSLtoRGB( model.faceColors[i], BRIGHTNESS);\n+\t\t\t\tdouble r = ((rgb >> 16) & 0xff) / 255.0;\n+\t\t\t\tdouble g = ((rgb >> 8) & 0xff) / 255.0;\n+\t\t\t\tdouble b = (rgb & 0xff) / 255.0;\n \n \t\t\t\tmtlWriter.println(\"Kd \" + r + \" \" + g + \" \" + b);\n \t\t\t}\n@@ -140,12 +140,4 @@ public void export(PrintWriter objWriter, PrintWriter mtlWriter)\n \t\t\t}\n \t\t}\n \t}\n-\n-\tprivate static Color rs2hsbToColor(int hsb)\n-\t{\n-\t\tint decode_hue = (hsb >> 10) & 0x3f;\n-\t\tint decode_saturation = (hsb >> 7) & 0x07;\n-\t\tint decode_brightness = (hsb & 0x7f);\n-\t\treturn Color.getHSBColor((float) decode_hue / 63, (float) decode_saturation / 7, (float) decode_brightness / 127);\n-\t}\n }"
  },
  {
    "sha": "08ffbfb3ba84caaf4121b9186e4429731ac2d085",
    "filename": "cache/src/main/java/net/runelite/cache/util/XteaKeyManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 9,
    "changes": 10,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/util/XteaKeyManager.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/main/java/net/runelite/cache/util/XteaKeyManager.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/cache/src/main/java/net/runelite/cache/util/XteaKeyManager.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -24,7 +24,6 @@\n  */\n package net.runelite.cache.util;\n \n-import java.io.IOException;\n import java.util.HashMap;\n import java.util.Map;\n import net.runelite.http.api.RuneLiteAPI;\n@@ -42,14 +41,7 @@ public void loadKeys()\n \t{\n \t\tXteaClient xteaClient = new XteaClient(RuneLiteAPI.CLIENT);\n \n-\t\ttry\n-\t\t{\n-\t\t\tkeys = xteaClient.get();\n-\t\t}\n-\t\tcatch (IOException e)\n-\t\t{\n-\t\t\te.printStackTrace();\n-\t\t}\n+\t\tkeys = null;\n \n \t\tlogger.info(\"Loaded {} keys\", keys.size());\n \t}"
  },
  {
    "sha": "b9564f4d419ac2d36848d424c73de02005d7e93f",
    "filename": "cache/src/test/java/net/runelite/cache/SpriteManagerTest.java",
    "status": "removed",
    "additions": 0,
    "deletions": 63,
    "changes": 63,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/9a257666be214a7aa4b1aef06bc060a42690f594/cache/src/test/java/net/runelite/cache/SpriteManagerTest.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/9a257666be214a7aa4b1aef06bc060a42690f594/cache/src/test/java/net/runelite/cache/SpriteManagerTest.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/cache/src/test/java/net/runelite/cache/SpriteManagerTest.java?ref=9a257666be214a7aa4b1aef06bc060a42690f594",
    "patch": "@@ -1,63 +0,0 @@\n-/*\n- * Copyright (c) 2016-2017, Adam <Adam@sigterm.info>\n- * All rights reserved.\n- *\n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions are met:\n- *\n- * 1. Redistributions of source code must retain the above copyright notice, this\n- *    list of conditions and the following disclaimer.\n- * 2. Redistributions in binary form must reproduce the above copyright notice,\n- *    this list of conditions and the following disclaimer in the documentation\n- *    and/or other materials provided with the distribution.\n- *\n- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n- * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n- * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- */\n-package net.runelite.cache;\n-\n-import java.io.File;\n-import java.io.IOException;\n-import net.runelite.cache.fs.Store;\n-import org.junit.Ignore;\n-import org.junit.Rule;\n-import org.junit.Test;\n-import org.junit.rules.TemporaryFolder;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class SpriteManagerTest\n-{\n-\tprivate static final Logger logger = LoggerFactory.getLogger(SpriteManagerTest.class);\n-\n-\t@Rule\n-\tpublic TemporaryFolder folder = StoreLocation.getTemporaryFolder();\n-\n-\t@Test\n-\t@Ignore\n-\tpublic void test() throws IOException\n-\t{\n-\t\tFile dumpDir = folder.newFolder();\n-\n-\t\ttry (Store store = new Store(StoreLocation.LOCATION))\n-\t\t{\n-\t\t\tstore.load();\n-\n-\t\t\tSpriteManager dumper = new SpriteManager(\n-\t\t\t\tstore\n-\t\t\t);\n-\t\t\tdumper.load();\n-\t\t\tdumper.export(dumpDir);\n-\t\t}\n-\n-\t\tlogger.info(\"Dumped to {}\", dumpDir);\n-\t}\n-}"
  },
  {
    "sha": "db6c3df9e7b86e9f8747ed3bd4e786bc933ce90b",
    "filename": "cache/src/test/java/net/runelite/cache/SpritePixelsManagerTest.java",
    "status": "added",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/test/java/net/runelite/cache/SpritePixelsManagerTest.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/test/java/net/runelite/cache/SpritePixelsManagerTest.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/cache/src/test/java/net/runelite/cache/SpritePixelsManagerTest.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright (c) 2016-2017, Adam <Adam@sigterm.info>\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.cache;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import net.runelite.cache.fs.Store;\n+import org.junit.Ignore;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class SpritePixelsManagerTest\n+{\n+\tprivate static final Logger logger = LoggerFactory.getLogger(SpritePixelsManagerTest.class);\n+\n+\t@Rule\n+\tpublic TemporaryFolder folder = StoreLocation.getTemporaryFolder();\n+\n+\t@Test\n+\t@Ignore\n+\tpublic void test() throws IOException\n+\t{\n+\t\tFile dumpDir = folder.newFolder();\n+\n+\t\ttry (Store store = new Store(StoreLocation.LOCATION))\n+\t\t{\n+\t\t\tstore.load();\n+\n+\t\t\tSpriteManager dumper = new SpriteManager(\n+\t\t\t\tstore\n+\t\t\t);\n+\t\t\tdumper.load();\n+\t\t\tdumper.export(dumpDir);\n+\t\t}\n+\n+\t\tlogger.info(\"Dumped to {}\", dumpDir);\n+\t}\n+}"
  },
  {
    "sha": "25291d4528f51acb4c5352e60ef595af524b4097",
    "filename": "cache/src/test/java/net/runelite/cache/models/JagexColorTest.java",
    "status": "added",
    "additions": 178,
    "deletions": 0,
    "changes": 178,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/test/java/net/runelite/cache/models/JagexColorTest.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/cache/src/test/java/net/runelite/cache/models/JagexColorTest.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/cache/src/test/java/net/runelite/cache/models/JagexColorTest.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -0,0 +1,178 @@\n+/*\n+ * Copyright (c) 2020 Abex\n+ * All rights reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright notice, this\n+ *    list of conditions and the following disclaimer.\n+ * 2. Redistributions in binary form must reproduce the above copyright notice,\n+ *    this list of conditions and the following disclaimer in the documentation\n+ *    and/or other materials provided with the distribution.\n+ *\n+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+ */\n+package net.runelite.cache.models;\n+\n+import static org.junit.Assert.assertEquals;\n+import org.junit.Test;\n+\n+public class JagexColorTest\n+{\n+\tprivate static final double[] BRIGHTNESS_LEVELS = {\n+\t\tJagexColor.BRIGTHNESS_MIN,\n+\t\tJagexColor.BRIGHTNESS_LOW,\n+\t\tJagexColor.BRIGHTNESS_HIGH,\n+\t\tJagexColor.BRIGHTNESS_MAX,\n+\t};\n+\n+\t// copy/pasted from the client, the reference colors\n+\tprivate static int[] computeColorTable(double brightness, int min, int max)\n+\t{\n+\t\tint[] colorPalette = new int[65536];\n+\t\tint var4 = min * 128;\n+\n+\t\tfor (int var5 = min; var5 < max; ++var5)\n+\t\t{\n+\t\t\tdouble var6 = (double) (var5 >> 3) / 64.0D + 0.0078125D;\n+\t\t\tdouble var8 = (double) (var5 & 7) / 8.0D + 0.0625D;\n+\n+\t\t\tfor (int var10 = 0; var10 < 128; ++var10)\n+\t\t\t{\n+\t\t\t\tdouble var11 = (double) var10 / 128.0D;\n+\t\t\t\tdouble var13 = var11;\n+\t\t\t\tdouble var15 = var11;\n+\t\t\t\tdouble var17 = var11;\n+\t\t\t\tif (var8 != 0.0D)\n+\t\t\t\t{\n+\t\t\t\t\tdouble var19;\n+\t\t\t\t\tif (var11 < 0.5D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar19 = var11 * (1.0D + var8);\n+\t\t\t\t\t}\n+\t\t\t\t\telse\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar19 = var11 + var8 - var11 * var8;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tdouble var21 = 2.0D * var11 - var19;\n+\t\t\t\t\tdouble var23 = var6 + 0.3333333333333333D;\n+\t\t\t\t\tif (var23 > 1.0D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\t--var23;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tdouble var27 = var6 - 0.3333333333333333D;\n+\t\t\t\t\tif (var27 < 0.0D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\t++var27;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (6.0D * var23 < 1.0D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar13 = var21 + (var19 - var21) * 6.0D * var23;\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (2.0D * var23 < 1.0D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar13 = var19;\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (3.0D * var23 < 2.0D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar13 = var21 + (var19 - var21) * (0.6666666666666666D - var23) * 6.0D;\n+\t\t\t\t\t}\n+\t\t\t\t\telse\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar13 = var21;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (6.0D * var6 < 1.0D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar15 = var21 + (var19 - var21) * 6.0D * var6;\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (2.0D * var6 < 1.0D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar15 = var19;\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (3.0D * var6 < 2.0D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar15 = var21 + (var19 - var21) * (0.6666666666666666D - var6) * 6.0D;\n+\t\t\t\t\t}\n+\t\t\t\t\telse\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar15 = var21;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (6.0D * var27 < 1.0D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar17 = var21 + (var19 - var21) * 6.0D * var27;\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (2.0D * var27 < 1.0D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar17 = var19;\n+\t\t\t\t\t}\n+\t\t\t\t\telse if (3.0D * var27 < 2.0D)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar17 = var21 + (var19 - var21) * (0.6666666666666666D - var27) * 6.0D;\n+\t\t\t\t\t}\n+\t\t\t\t\telse\n+\t\t\t\t\t{\n+\t\t\t\t\t\tvar17 = var21;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\tint var29 = (int) (var13 * 256.0D);\n+\t\t\t\tint var20 = (int) (var15 * 256.0D);\n+\t\t\t\tint var30 = (int) (var17 * 256.0D);\n+\t\t\t\tint var22 = var30 + (var20 << 8) + (var29 << 16);\n+\t\t\t\tvar22 = adjustForBrightness(var22, brightness);\n+\t\t\t\tif (var22 == 0)\n+\t\t\t\t{\n+\t\t\t\t\tvar22 = 1;\n+\t\t\t\t}\n+\n+\t\t\t\tcolorPalette[var4++] = var22;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn colorPalette;\n+\t}\n+\n+\tprivate static int adjustForBrightness(int rgb, double brightness)\n+\t{\n+\t\tdouble var3 = (double) (rgb >> 16) / 256.0D;\n+\t\tdouble var5 = (double) (rgb >> 8 & 255) / 256.0D;\n+\t\tdouble var7 = (double) (rgb & 255) / 256.0D;\n+\t\tvar3 = Math.pow(var3, brightness);\n+\t\tvar5 = Math.pow(var5, brightness);\n+\t\tvar7 = Math.pow(var7, brightness);\n+\t\tint var9 = (int) (var3 * 256.0D);\n+\t\tint var10 = (int) (var5 * 256.0D);\n+\t\tint var11 = (int) (var7 * 256.0D);\n+\t\treturn var11 + (var10 << 8) + (var9 << 16);\n+\t}\n+\n+\t@Test\n+\tpublic void testHslToRgb()\n+\t{\n+\t\tfor (double brightness : BRIGHTNESS_LEVELS)\n+\t\t{\n+\t\t\tint[] colorPalette = computeColorTable(brightness, 0, 512);\n+\t\t\tfor (int i = 0; i < 0xFFFF; i++)\n+\t\t\t{\n+\t\t\t\tint rgb = JagexColor.HSLtoRGB((short) i, brightness);\n+\t\t\t\tint crgb = colorPalette[i];\n+\t\t\t\tassertEquals(\"idx \" + i + \" brightness \" + brightness, crgb, rgb);\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "9452be8d0d95067ddde6abbc5939d75c3c6651f6",
    "filename": "config/checkstyle/checkstyle.xml",
    "status": "modified",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/config/checkstyle/checkstyle.xml",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/config/checkstyle/checkstyle.xml",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/config/checkstyle/checkstyle.xml?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -44,9 +44,6 @@\n \t\t\t<property name=\"message\" value=\"Indent must use tab characters\"/>\n \t\t\t<property name=\"ignoreComments\" value=\"true\"/>\n \t\t</module>\n-\t\t<module name=\"AvoidStarImport\">\n-\t\t\t<property name=\"allowStaticMemberImports\" value=\"true\"/>\n-\t\t</module>\n \t\t<module name=\"RegexpSinglelineJava\">\n \t\t\t<property name=\"format\" value=\"[^\\s]\\s+$\"/>\n \t\t\t<property name=\"message\" value=\"No trailing whitespace\"/>\n@@ -64,11 +61,6 @@\n \t\t<property name=\"format\" value=\"else[ \\t]*[\\r\\n]+[ \\t]*if\"/>\n \t\t<property name=\"message\" value=\"Newline should not be between else and if\"/>\n \t</module>\n-\t<module name=\"RegexpMultiline\">\n-\t\t<property name=\"format\" value=\"^[\\r\\n\\s]+import\"/>\n-\t\t<property name=\"maximum\" value=\"1\"/>\n-\t\t<property name=\"message\" value=\"There should not be empty lines in the imports list\"/>\n-\t</module>\n \t<module name=\"SuppressionFilter\">\n \t\t<property name=\"file\" value=\"${config_loc}/suppressions.xml\"/>\n \t</module>"
  },
  {
    "sha": "25b6ae3e9417a918e76127d03aca4202db976b64",
    "filename": "deobfuscator/deobfuscator.gradle.kts",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/deobfuscator.gradle.kts",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/deobfuscator.gradle.kts",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/deobfuscator.gradle.kts?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -35,23 +35,23 @@ dependencies {\n     deobjars(group = \"net.runelite.rs\", name = \"vanilla\", version = ProjectVersions.rsversion.toString())\n     deobjars(project(\":runescape-client\"))\n \n-    annotationProcessor(group = \"org.projectlombok\", name = \"lombok\", version = \"1.18.16\")\n+    annotationProcessor(group = \"org.projectlombok\", name = \"lombok\", version = \"1.18.4\")\n \n+    implementation(project(\":runelite-api\"))\n+    implementation(project(\":runescape-api\"))\n     implementation(group = \"org.jetbrains\", name = \"annotations\", version = \"20.1.0\")\n     implementation(group = \"org.ow2.asm\", name = \"asm\", version = \"9.0\")\n     implementation(group = \"org.ow2.asm\", name = \"asm-util\", version = \"9.0\")\n     implementation(group = \"net.runelite\", name = \"fernflower\", version = \"07082019\")\n     implementation(group = \"com.google.code.gson\", name = \"gson\", version = \"2.8.6\")\n-    implementation(group = \"com.google.guava\", name = \"guava\", version = \"30.0-jre\")\n-    implementation(group = \"org.slf4j\", name = \"slf4j-api\", version = \"1.7.30\")\n-    implementation(project(\":runelite-api\"))\n-    implementation(project(\":runescape-api\"))\n+    implementation(group = \"com.google.guava\", name = \"guava\", version = \"23.2-jre\")\n+    implementation(group = \"org.slf4j\", name = \"slf4j-api\", version = \"1.7.12\")\n \n-    runtimeOnly(group = \"org.slf4j\", name = \"slf4j-simple\", version = \"1.7.30\")\n+    runtimeOnly(group = \"org.slf4j\", name = \"slf4j-simple\", version = \"1.7.12\")\n \n     testImplementation(deobjars)\n-    testImplementation(group = \"junit\", name = \"junit\", version = \"4.13.1\")\n-    testImplementation(group = \"org.mockito\", name = \"mockito-core\", version = \"3.6.0\")\n+    testImplementation(group = \"junit\", name = \"junit\", version = \"4.12\")\n+    testImplementation(group = \"org.mockito\", name = \"mockito-core\", version = \"3.1.0\")\n }\n \n tasks {"
  },
  {
    "sha": "ce8925af10a58d97f05187f9398899e8f0c2f276",
    "filename": "deobfuscator/src/main/java/net/runelite/asm/Interfaces.java",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/asm/Interfaces.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/asm/Interfaces.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/src/main/java/net/runelite/asm/Interfaces.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -43,12 +43,15 @@\n \t\tclassFile = c;\n \t}\n \n-\tpublic void addInterface(Class clazz)\n+\tpublic boolean addInterface(Class clazz)\n \t{\n-\t\tif (!interfaces.contains(clazz))\n+\t\tif (interfaces.stream().noneMatch((itf) -> itf.getName().equals(clazz.getName())))\n \t\t{\n \t\t\tinterfaces.add(clazz);\n+\t\t\treturn true;\n \t\t}\n+\n+\t\treturn false;\n \t}\n \n \tpublic List<Class> getInterfaces()"
  },
  {
    "sha": "3383653de29073e3babb2b7d358ccb39e2d4bb22",
    "filename": "deobfuscator/src/main/java/net/runelite/asm/attributes/code/instructions/InvokeInterface.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/asm/attributes/code/instructions/InvokeInterface.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/asm/attributes/code/instructions/InvokeInterface.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/src/main/java/net/runelite/asm/attributes/code/instructions/InvokeInterface.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -57,6 +57,12 @@ public InvokeInterface(Instructions instructions, InstructionType type)\n \t\tsuper(instructions, type);\n \t}\n \n+\tpublic InvokeInterface(Instructions instructions, Method method)\n+\t{\n+\t\tsuper(instructions, InstructionType.INVOKEINTERFACE);\n+\t\tthis.method = method;\n+\t}\n+\n \t@Override\n \tpublic String toString()\n \t{"
  },
  {
    "sha": "151f3c18e4c51c6165f3281338dd010ee45d64ae",
    "filename": "deobfuscator/src/main/java/net/runelite/asm/attributes/code/instructions/LDC.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/asm/attributes/code/instructions/LDC.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/asm/attributes/code/instructions/LDC.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/src/main/java/net/runelite/asm/attributes/code/instructions/LDC.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -34,6 +34,7 @@\n import net.runelite.asm.execution.Stack;\n import net.runelite.asm.execution.StackContext;\n import net.runelite.asm.execution.Value;\n+import net.runelite.asm.pool.Class;\n import org.objectweb.asm.MethodVisitor;\n import static org.objectweb.asm.Opcodes.DCONST_0;\n import static org.objectweb.asm.Opcodes.DCONST_1;\n@@ -181,4 +182,17 @@ public Number getNumber()\n \t{\n \t\treturn (Number) value;\n \t}\n+\n+\t@Override\n+\tpublic void renameClass(String oldName, String newName)\n+\t{\n+\t\tObject object = getConstant();\n+\t\tif (object instanceof net.runelite.asm.pool.Class)\n+\t\t{\n+\t\t\tif (((Class) object).getName().equals(oldName))\n+\t\t\t{\n+\t\t\t\tvalue = new Class(newName);\n+\t\t\t}\n+\t\t}\n+\t}\n }"
  },
  {
    "sha": "ae6e4a71a597f6bb28676b0cabe4c4d3ed5bbc63",
    "filename": "deobfuscator/src/main/java/net/runelite/deob/Deob.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/deob/Deob.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/deob/Deob.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/src/main/java/net/runelite/deob/Deob.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -77,7 +77,7 @@ public static void main(String[] args) throws IOException\n \n \t\tStopwatch stopwatch = Stopwatch.createStarted();\n \n-\t\tClassGroup group = JarUtil.loadJar(new File(args[0]));\n+\t\tClassGroup group = JarUtil.load(new File(args[0]));\n \n \t\t// remove except RuntimeException\n \t\trun(group, new RuntimeExceptions());\n@@ -137,7 +137,7 @@ public static void main(String[] args) throws IOException\n \t\t//new MaxMemoryTransformer().transform(group);\n \t\t//new RuneliteBufferTransformer().transform(group);\n \n-\t\tJarUtil.saveJar(group, new File(args[1]));\n+\t\tJarUtil.save(group, new File(args[1]));\n \n \t\tstopwatch.stop();\n \t\tlogger.info(\"Done in {}\", stopwatch);"
  },
  {
    "sha": "e1bb33be6815e8ff4842b8c3ab40b035327adde4",
    "filename": "deobfuscator/src/main/java/net/runelite/deob/updater/UpdateMappings.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/deob/updater/UpdateMappings.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/deob/updater/UpdateMappings.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/src/main/java/net/runelite/deob/updater/UpdateMappings.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -82,7 +82,7 @@ public void update()\n \n \tpublic void save(File out) throws IOException\n \t{\n-\t\tJarUtil.saveJar(group2, out);\n+\t\tJarUtil.save(group2, out);\n \t}\n \n \tpublic static void main(String[] args) throws IOException\n@@ -93,8 +93,8 @@ public static void main(String[] args) throws IOException\n \t\t}\n \n \t\tUpdateMappings u = new UpdateMappings(\n-\t\t\tJarUtil.loadJar(new File(args[0])),\n-\t\t\tJarUtil.loadJar(new File(args[1]))\n+\t\t\tJarUtil.load(new File(args[0])),\n+\t\t\tJarUtil.load(new File(args[1]))\n \t\t);\n \t\tu.update();\n \t\tu.save(new File(args[2]));"
  },
  {
    "sha": "eeac2fdf71fc7590164b8b9a4e6638b1a1a9dca4",
    "filename": "deobfuscator/src/main/java/net/runelite/deob/util/JarUtil.java",
    "status": "modified",
    "additions": 10,
    "deletions": 2,
    "changes": 12,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/deob/util/JarUtil.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/main/java/net/runelite/deob/util/JarUtil.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/src/main/java/net/runelite/deob/util/JarUtil.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -49,7 +49,7 @@\n {\n \tprivate static final Logger logger = LoggerFactory.getLogger(JarUtil.class);\n \n-\tpublic static ClassGroup loadJar(File jarfile) throws IOException\n+\tpublic static ClassGroup load(File jarfile)\n \t{\n \t\tClassGroup group = new ClassGroup();\n \n@@ -74,6 +74,10 @@ public static ClassGroup loadJar(File jarfile) throws IOException\n \t\t\t\tgroup.addClass(cv.getClassFile());\n \t\t\t}\n \t\t}\n+\t\tcatch (IOException e)\n+\t\t{\n+\t\t\te.printStackTrace();\n+\t\t}\n \n \t\tgroup.initialize();\n \n@@ -115,7 +119,7 @@ public static ClassGroup loadClasses(Collection<File> files) throws IOException\n \t\treturn group;\n \t}\n \n-\tpublic static void saveJar(ClassGroup group, File jarfile) throws IOException\n+\tpublic static void save(ClassGroup group, File jarfile)\n \t{\n \t\ttry (JarOutputStream jout = new JarOutputStream(new FileOutputStream(jarfile)))\n \t\t{\n@@ -131,6 +135,10 @@ public static void saveJar(ClassGroup group, File jarfile) throws IOException\n \t\t\t\tjout.closeEntry();\n \t\t\t}\n \t\t}\n+\t\tcatch (IOException e)\n+\t\t{\n+\t\t\te.printStackTrace();\n+\t\t}\n \t}\n \n \tpublic static byte[] writeClass(ClassGroup group, ClassFile cf)"
  },
  {
    "sha": "df7c3d20e356797b726f1011203cb20c1fe47d7b",
    "filename": "deobfuscator/src/test/java/net/runelite/asm/execution/ExecutionTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/test/java/net/runelite/asm/execution/ExecutionTest.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/test/java/net/runelite/asm/execution/ExecutionTest.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/src/test/java/net/runelite/asm/execution/ExecutionTest.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -39,7 +39,7 @@\n \t@Test\n \tpublic void test() throws Exception\n \t{\n-\t\tClassGroup group1 = JarUtil.loadJar(new File(properties.getVanillaClient()));\n+\t\tClassGroup group1 = JarUtil.load(new File(properties.getVanillaClient()));\n \t\tExecution e = new Execution(group1);\n \t\te.populateInitialMethods();\n \t\te.run();"
  },
  {
    "sha": "4c19f8bc00fc9a16d5f32f767ee4d6a4fb6b270d",
    "filename": "deobfuscator/src/test/java/net/runelite/asm/visitors/ClassFileVisitorTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/test/java/net/runelite/asm/visitors/ClassFileVisitorTest.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/test/java/net/runelite/asm/visitors/ClassFileVisitorTest.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/src/test/java/net/runelite/asm/visitors/ClassFileVisitorTest.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -45,9 +45,9 @@\n \t@Test\n \tpublic void test() throws Exception\n \t{\n-\t\tClassGroup group = JarUtil.loadJar(new File(properties.getVanillaClient()));\n+\t\tClassGroup group = JarUtil.load(new File(properties.getVanillaClient()));\n \n-\t\tJarUtil.saveJar(group, folder.newFile());\n+\t\tJarUtil.save(group, folder.newFile());\n \t}\n \n }"
  },
  {
    "sha": "3ff974e67ebf5dafea39361377b7ff1bfa84b920",
    "filename": "deobfuscator/src/test/java/net/runelite/deob/deobfuscators/EnumDeobfuscatorTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/test/java/net/runelite/deob/deobfuscators/EnumDeobfuscatorTest.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/test/java/net/runelite/deob/deobfuscators/EnumDeobfuscatorTest.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/src/test/java/net/runelite/deob/deobfuscators/EnumDeobfuscatorTest.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -50,13 +50,13 @@\n \t@Before\n \tpublic void before() throws IOException\n \t{\n-\t\tgroup = JarUtil.loadJar(new File(properties.getRsClient()));\n+\t\tgroup = JarUtil.load(new File(properties.getRsClient()));\n \t}\n \n \t@After\n \tpublic void after() throws IOException\n \t{\n-\t\tJarUtil.saveJar(group, folder.newFile());\n+\t\tJarUtil.save(group, folder.newFile());\n \t}\n \n \t@Test"
  },
  {
    "sha": "330ad802574280ab5c7b7fb10e1e1a9b4d037c2b",
    "filename": "deobfuscator/src/test/java/net/runelite/deob/deobfuscators/FieldInlinerTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/test/java/net/runelite/deob/deobfuscators/FieldInlinerTest.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/test/java/net/runelite/deob/deobfuscators/FieldInlinerTest.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/src/test/java/net/runelite/deob/deobfuscators/FieldInlinerTest.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -50,13 +50,13 @@\n \t@Before\n \tpublic void before() throws IOException\n \t{\n-\t\tgroup = JarUtil.loadJar(new File(properties.getVanillaClient()));\n+\t\tgroup = JarUtil.load(new File(properties.getVanillaClient()));\n \t}\n \n \t@After\n \tpublic void after() throws IOException\n \t{\n-\t\tJarUtil.saveJar(group, folder.newFile());\n+\t\tJarUtil.save(group, folder.newFile());\n \t}\n \n \t@Test"
  },
  {
    "sha": "f11fa566ba5a5b6b73e48868d6bb784f53386585",
    "filename": "deobfuscator/src/test/java/net/runelite/deob/deobfuscators/IllegalStateExceptionsTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/DrManhatta/runelite/blob/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/test/java/net/runelite/deob/deobfuscators/IllegalStateExceptionsTest.java",
    "raw_url": "https://github.com/DrManhatta/runelite/raw/05ae0b769c55aa3e22ce1815acac36810497686e/deobfuscator/src/test/java/net/runelite/deob/deobfuscators/IllegalStateExceptionsTest.java",
    "contents_url": "https://api.github.com/repos/DrManhatta/runelite/contents/deobfuscator/src/test/java/net/runelite/deob/deobfuscators/IllegalStateExceptionsTest.java?ref=05ae0b769c55aa3e22ce1815acac36810497686e",
    "patch": "@@ -50,13 +50,13 @@\n \t@Before\n \tpublic void before() throws IOException\n \t{\n-\t\tgroup = JarUtil.loadJar(new File(properties.getVanillaClient()));\n+\t\tgroup = JarUtil.load(new File(properties.getVanillaClient()));\n \t}\n \n \t@After\n \tpublic void after() throws IOException\n \t{\n-\t\tJarUtil.saveJar(group, folder.newFile());\n+\t\tJarUtil.save(group, folder.newFile());\n \t}\n \n \t@Test"
  }
]
