[
  {
    "sha": "a3aed031ff7e120e555ecf08f5f00c7d8cf5ffcf",
    "filename": "test/hotspot/jtreg/vmTestbase/nsk/jvmti/SetEventNotificationMode/setnotif001.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/openjdk/jdk/blob/06ed4fd4fa7e64a7402f1dc6614721b24af2e6cc/test/hotspot/jtreg/vmTestbase/nsk/jvmti/SetEventNotificationMode/setnotif001.java",
    "raw_url": "https://github.com/openjdk/jdk/raw/06ed4fd4fa7e64a7402f1dc6614721b24af2e6cc/test/hotspot/jtreg/vmTestbase/nsk/jvmti/SetEventNotificationMode/setnotif001.java",
    "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test/hotspot/jtreg/vmTestbase/nsk/jvmti/SetEventNotificationMode/setnotif001.java?ref=06ed4fd4fa7e64a7402f1dc6614721b24af2e6cc",
    "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2003, 2018, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -40,7 +40,7 @@\n         }\n     }\n \n-    native static void enableEv();\n+    native static void enableEv(Thread notifyFramePopThread);\n     native static int getRes();\n \n     static int fld = 1;\n@@ -55,7 +55,7 @@ public static void main(String[] args) {\n     public static int run(String argv[], PrintStream ref) {\n         setnotif001 t = new setnotif001();\n         fld++;\n-        enableEv();\n+        enableEv(Thread.currentThread());\n         t.meth();\n         Thread thr = new Thread(new setnotif001a());\n         thr.start();"
  },
  {
    "sha": "135f51a86f9613c4615490ce3468895dc2880485",
    "filename": "test/hotspot/jtreg/vmTestbase/nsk/jvmti/SetEventNotificationMode/setnotif001/setnotif001.cpp",
    "status": "modified",
    "additions": 21,
    "deletions": 17,
    "changes": 38,
    "blob_url": "https://github.com/openjdk/jdk/blob/06ed4fd4fa7e64a7402f1dc6614721b24af2e6cc/test/hotspot/jtreg/vmTestbase/nsk/jvmti/SetEventNotificationMode/setnotif001/setnotif001.cpp",
    "raw_url": "https://github.com/openjdk/jdk/raw/06ed4fd4fa7e64a7402f1dc6614721b24af2e6cc/test/hotspot/jtreg/vmTestbase/nsk/jvmti/SetEventNotificationMode/setnotif001/setnotif001.cpp",
    "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/test/hotspot/jtreg/vmTestbase/nsk/jvmti/SetEventNotificationMode/setnotif001/setnotif001.cpp?ref=06ed4fd4fa7e64a7402f1dc6614721b24af2e6cc",
    "patch": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2003, 2020, Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2003, 2021, Oracle and/or its affiliates. All rights reserved.\n  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n  *\n  * This code is free software; you can redistribute it and/or modify it\n@@ -38,6 +38,7 @@ static jvmtiEnv *jvmti = NULL;\n static jvmtiCapabilities caps;\n static jvmtiEventCallbacks callbacks;\n static jrawMonitorID access_lock;\n+static jobject notifyFramePopThread = NULL;\n static jint result = PASSED;\n static jboolean printdump = JNI_FALSE;\n static int flag = 0;\n@@ -188,25 +189,27 @@ void JNICALL MethodEntry(jvmtiEnv *jvmti_env, JNIEnv *env,\n \n     if (flag) {\n         mark(jvmti_env, JVMTI_EVENT_METHOD_ENTRY);\n-        err = jvmti_env->IsMethodNative(method, &isNative);\n-        if (err != JVMTI_ERROR_NONE) {\n-            result = STATUS_FAILED;\n-            printf(\"(IsMethodNative) unexpected error: %s (%d)\\n\",\n-                   TranslateError(err), err);\n-        }\n-        if (isNative == JNI_FALSE) {\n-            err = jvmti_env->NotifyFramePop(thr, 0);\n-            if (err == JVMTI_ERROR_NONE) {\n-                enable(jvmti_env, JVMTI_EVENT_FRAME_POP);\n-            } else {\n+        if (env->IsSameObject(notifyFramePopThread, thr)) {\n+            err = jvmti_env->IsMethodNative(method, &isNative);\n+            if (err != JVMTI_ERROR_NONE) {\n                 result = STATUS_FAILED;\n-                printf(\"(NotifyFramePop) unexpected error: %s (%d)\\n\",\n+                printf(\"(IsMethodNative) unexpected error: %s (%d)\\n\",\n                        TranslateError(err), err);\n             }\n+            if (isNative == JNI_FALSE) {\n+                err = jvmti_env->NotifyFramePop(thr, 0);\n+                if (err == JVMTI_ERROR_NONE) {\n+                    enable(jvmti_env, JVMTI_EVENT_FRAME_POP);\n+                } else {\n+                    result = STATUS_FAILED;\n+                    printf(\"(NotifyFramePop) unexpected error: %s (%d)\\n\",\n+                           TranslateError(err), err);\n+                }\n+            }\n+            enable(jvmti_env, JVMTI_EVENT_CLASS_LOAD);\n+            enable(jvmti_env, JVMTI_EVENT_CLASS_PREPARE);\n+            disable(jvmti_env, JVMTI_EVENT_METHOD_ENTRY);\n         }\n-        enable(jvmti_env, JVMTI_EVENT_CLASS_LOAD);\n-        enable(jvmti_env, JVMTI_EVENT_CLASS_PREPARE);\n-        disable(jvmti_env, JVMTI_EVENT_METHOD_ENTRY);\n     }\n }\n \n@@ -392,8 +395,9 @@ jint  Agent_Initialize(JavaVM *jvm, char *options, void *reserved) {\n \n JNIEXPORT void JNICALL\n Java_nsk_jvmti_SetEventNotificationMode_setnotif001_enableEv(JNIEnv *env,\n-        jclass cls) {\n+        jclass cls, jobject framePopThread) {\n     setWatches(jvmti, env, cls);\n+    notifyFramePopThread = env->NewGlobalRef(framePopThread);\n     enable(jvmti, JVMTI_EVENT_METHOD_ENTRY);\n     enable(jvmti, JVMTI_EVENT_METHOD_EXIT);\n     enable(jvmti, JVMTI_EVENT_THREAD_START);"
  }
]
