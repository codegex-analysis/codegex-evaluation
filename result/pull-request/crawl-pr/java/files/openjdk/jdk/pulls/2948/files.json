[
  {
    "sha": "b9c5113a41df59e645290052a30588f99f9c062d",
    "filename": "src/java.desktop/macosx/classes/sun/java2d/CRenderer.java",
    "status": "modified",
    "additions": 10,
    "deletions": 65,
    "changes": 75,
    "blob_url": "https://github.com/openjdk/jdk/blob/d912f559a8c9cb99102b93eacddbb39a1cc687ca/src/java.desktop/macosx/classes/sun/java2d/CRenderer.java",
    "raw_url": "https://github.com/openjdk/jdk/raw/d912f559a8c9cb99102b93eacddbb39a1cc687ca/src/java.desktop/macosx/classes/sun/java2d/CRenderer.java",
    "contents_url": "https://api.github.com/repos/openjdk/jdk/contents/src/java.desktop/macosx/classes/sun/java2d/CRenderer.java?ref=d912f559a8c9cb99102b93eacddbb39a1cc687ca",
    "patch": "@@ -49,24 +49,13 @@ public void drawLine(SunGraphics2D sg2d, int x1, int y1, int x2, int y2) {\n         drawLine(sg2d, (float) x1, (float) y1, (float) x2, (float) y2);\n     }\n \n-    Line2D lineToShape;\n-\n     public void drawLine(SunGraphics2D sg2d, float x1, float y1, float x2, float y2) {\n         OSXSurfaceData surfaceData = (OSXSurfaceData) sg2d.getSurfaceData();\n         if ((sg2d.strokeState != SunGraphics2D.STROKE_CUSTOM) && (OSXSurfaceData.IsSimpleColor(sg2d.paint))) {\n             surfaceData.doLine(this, sg2d, x1, y1, x2, y2);\n         } else {\n-            if (lineToShape == null) {\n-                synchronized (this) {\n-                    if (lineToShape == null) {\n-                        lineToShape = new Line2D.Float();\n-                    }\n-                }\n-            }\n-            synchronized (lineToShape) {\n-                lineToShape.setLine(x1, y1, x2, y2);\n-                drawfillShape(sg2d, sg2d.stroke.createStrokedShape(lineToShape), true, true);\n-            }\n+            Line2D lineToShape = new Line2D.Float(x1, y1, x2, y2);\n+            drawfillShape(sg2d, sg2d.stroke.createStrokedShape(lineToShape), true, true);\n         }\n     }\n \n@@ -76,26 +65,15 @@ public void drawRect(SunGraphics2D sg2d, int x, int y, int width, int height) {\n         drawRect(sg2d, (float) x, (float) y, (float) width, (float) height);\n     }\n \n-    Rectangle2D rectToShape;\n-\n     public void drawRect(SunGraphics2D sg2d, float x, float y, float width, float height) {\n         if ((width < 0) || (height < 0)) return;\n \n         OSXSurfaceData surfaceData = (OSXSurfaceData) sg2d.getSurfaceData();\n         if ((sg2d.strokeState != SunGraphics2D.STROKE_CUSTOM) && (OSXSurfaceData.IsSimpleColor(sg2d.paint))) {\n             surfaceData.doRect(this, sg2d, x, y, width, height, false);\n         } else {\n-            if (rectToShape == null) {\n-                synchronized (this) {\n-                    if (rectToShape == null) {\n-                        rectToShape = new Rectangle2D.Float();\n-                    }\n-                }\n-            }\n-            synchronized (rectToShape) {\n-                rectToShape.setRect(x, y, width, height);\n-                drawfillShape(sg2d, sg2d.stroke.createStrokedShape(rectToShape), true, true);\n-            }\n+            Rectangle2D rectToShape = new Rectangle2D.Float(x, y, width, height);\n+            drawfillShape(sg2d, sg2d.stroke.createStrokedShape(rectToShape), true, true);\n         }\n     }\n \n@@ -116,26 +94,15 @@ public void drawRoundRect(SunGraphics2D sg2d, int x, int y, int width, int heigh\n         drawRoundRect(sg2d, (float) x, (float) y, (float) width, (float) height, (float) arcWidth, (float) arcHeight);\n     }\n \n-    RoundRectangle2D roundrectToShape;\n-\n     public void drawRoundRect(SunGraphics2D sg2d, float x, float y, float width, float height, float arcWidth, float arcHeight) {\n         if ((width < 0) || (height < 0)) return;\n \n         OSXSurfaceData surfaceData = (OSXSurfaceData) sg2d.getSurfaceData();\n         if ((sg2d.strokeState != SunGraphics2D.STROKE_CUSTOM) && (OSXSurfaceData.IsSimpleColor(sg2d.paint))) {\n             surfaceData.doRoundRect(this, sg2d, x, y, width, height, arcWidth, arcHeight, false);\n         } else {\n-            if (roundrectToShape == null) {\n-                synchronized (this) {\n-                    if (roundrectToShape == null) {\n-                        roundrectToShape = new RoundRectangle2D.Float();\n-                    }\n-                }\n-            }\n-            synchronized (roundrectToShape) {\n-                roundrectToShape.setRoundRect(x, y, width, height, arcWidth, arcHeight);\n-                drawfillShape(sg2d, sg2d.stroke.createStrokedShape(roundrectToShape), true, true);\n-            }\n+            RoundRectangle2D roundrectToShape = new RoundRectangle2D.Float(x, y, width, height, arcWidth, arcHeight);\n+            drawfillShape(sg2d, sg2d.stroke.createStrokedShape(roundrectToShape), true, true);\n         }\n     }\n \n@@ -155,26 +122,15 @@ public void drawOval(SunGraphics2D sg2d, int x, int y, int width, int height) {\n         drawOval(sg2d, (float) x, (float) y, (float) width, (float) height);\n     }\n \n-    Ellipse2D ovalToShape;\n-\n     public void drawOval(SunGraphics2D sg2d, float x, float y, float width, float height) {\n         if ((width < 0) || (height < 0)) return;\n \n         OSXSurfaceData surfaceData = (OSXSurfaceData) sg2d.getSurfaceData();\n         if ((sg2d.strokeState != SunGraphics2D.STROKE_CUSTOM) && (OSXSurfaceData.IsSimpleColor(sg2d.paint))) {\n             surfaceData.doOval(this, sg2d, x, y, width, height, false);\n         } else {\n-            if (ovalToShape == null) {\n-                synchronized (this) {\n-                    if (ovalToShape == null) {\n-                        ovalToShape = new Ellipse2D.Float();\n-                    }\n-                }\n-            }\n-            synchronized (ovalToShape) {\n-                ovalToShape.setFrame(x, y, width, height);\n-                drawfillShape(sg2d, sg2d.stroke.createStrokedShape(ovalToShape), true, true);\n-            }\n+            Ellipse2D ovalToShape = new Ellipse2D.Float(x, y, width, height);\n+            drawfillShape(sg2d, sg2d.stroke.createStrokedShape(ovalToShape), true, true);\n         }\n     }\n \n@@ -194,26 +150,15 @@ public void drawArc(SunGraphics2D sg2d, int x, int y, int width, int height, int\n         drawArc(sg2d, x, y, width, height, startAngle, arcAngle, Arc2D.OPEN);\n     }\n \n-    Arc2D arcToShape;\n-\n     public void drawArc(SunGraphics2D sg2d, float x, float y, float width, float height, float startAngle, float arcAngle, int type) {\n         if ((width < 0) || (height < 0)) return;\n \n         OSXSurfaceData surfaceData = (OSXSurfaceData) sg2d.getSurfaceData();\n         if ((sg2d.strokeState != SunGraphics2D.STROKE_CUSTOM) && (OSXSurfaceData.IsSimpleColor(sg2d.paint))) {\n             surfaceData.doArc(this, sg2d, x, y, width, height, startAngle, arcAngle, type, false);\n         } else {\n-            if (arcToShape == null) {\n-                synchronized (this) {\n-                    if (arcToShape == null) {\n-                        arcToShape = new Arc2D.Float();\n-                    }\n-                }\n-            }\n-            synchronized (arcToShape) {\n-                arcToShape.setArc(x, y, width, height, startAngle, arcAngle, type);\n-                drawfillShape(sg2d, sg2d.stroke.createStrokedShape(arcToShape), true, true);\n-            }\n+            Arc2D arcToShape = new Arc2D.Float(x, y, width, height, startAngle, arcAngle, type);\n+            drawfillShape(sg2d, sg2d.stroke.createStrokedShape(arcToShape), true, true);\n         }\n     }\n "
  }
]
