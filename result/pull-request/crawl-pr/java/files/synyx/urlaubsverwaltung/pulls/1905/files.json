[
  {
    "sha": "e6a1b47c8c82702d24abe7017c1ca70fc1ef7997",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/application/ApplicationProperties.java",
    "status": "modified",
    "additions": 17,
    "deletions": 3,
    "changes": 20,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/ApplicationProperties.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/ApplicationProperties.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/application/ApplicationProperties.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -12,9 +12,26 @@\n @Validated\n public class ApplicationProperties {\n \n+    /*\n+     * Sends every day at 07:00 am remind mails for soon starting applications\n+     */\n+    @Valid\n+    private ReminderNotification startsSoonNotification = new ReminderNotification();\n+\n+    /*\n+     * Checks remind date about waiting applications by default every day at 07:00 am\n+     */\n     @Valid\n     private ReminderNotification reminderNotification = new ReminderNotification();\n \n+    public ReminderNotification getStartsSoonNotification() {\n+        return startsSoonNotification;\n+    }\n+\n+    public void setStartsSoonNotification(ReminderNotification startsSoonNotification) {\n+        this.startsSoonNotification = startsSoonNotification;\n+    }\n+\n     public ReminderNotification getReminderNotification() {\n         return reminderNotification;\n     }\n@@ -25,9 +42,6 @@ public void setReminderNotification(ReminderNotification reminderNotification) {\n \n     public static class ReminderNotification {\n \n-        /**\n-         * Checks remind date about waiting applications by default every day at 07:00 am\n-         */\n         @CronExpression\n         private String cron = \"0 0 7 * * *\";\n "
  },
  {
    "sha": "10207a661d5f36e4c62b6663c4487bee58a37f77",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/application/dao/ApplicationRepository.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/dao/ApplicationRepository.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/dao/ApplicationRepository.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/application/dao/ApplicationRepository.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -19,6 +19,8 @@\n \n     List<Application> findByStatusIn(List<ApplicationStatus> statuses);\n \n+    List<Application> findByStatusInAndStartDate(List<ApplicationStatus> statuses, LocalDate startDate);\n+\n     List<Application> findByStatusInAndEndDateGreaterThanEqual(List<ApplicationStatus> statuses, LocalDate since);\n \n     List<Application> findByStatusInAndPersonIn(List<ApplicationStatus> statuses, List<Person> persons);"
  },
  {
    "sha": "e53c9a5b3eb1963690937f307ce40500319ec7a7",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationCronMailConfiguration.java",
    "status": "removed",
    "additions": 0,
    "deletions": 25,
    "changes": 25,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/c44974bf057ceed7801221bac6d61c018058d373/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationCronMailConfiguration.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/c44974bf057ceed7801221bac6d61c018058d373/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationCronMailConfiguration.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationCronMailConfiguration.java?ref=c44974bf057ceed7801221bac6d61c018058d373",
    "patch": "@@ -1,25 +0,0 @@\n-package org.synyx.urlaubsverwaltung.application.service;\n-\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.context.annotation.Configuration;\n-import org.springframework.scheduling.annotation.SchedulingConfigurer;\n-import org.springframework.scheduling.config.ScheduledTaskRegistrar;\n-import org.synyx.urlaubsverwaltung.application.ApplicationProperties;\n-\n-@Configuration\n-class ApplicationCronMailConfiguration implements SchedulingConfigurer {\n-\n-    private final ApplicationProperties applicationProperties;\n-    private final ApplicationCronMailService applicationCronMailService;\n-\n-    @Autowired\n-    ApplicationCronMailConfiguration(ApplicationProperties applicationProperties, ApplicationCronMailService applicationCronMailService) {\n-        this.applicationProperties = applicationProperties;\n-        this.applicationCronMailService = applicationCronMailService;\n-    }\n-\n-    @Override\n-    public void configureTasks(ScheduledTaskRegistrar scheduledTaskRegistrar) {\n-        scheduledTaskRegistrar.addCronTask(applicationCronMailService::sendWaitingApplicationsReminderNotification, applicationProperties.getReminderNotification().getCron());\n-    }\n-}"
  },
  {
    "sha": "10d1dee5ccd8b36a1cd41510fa31aab20a697032",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailService.java",
    "status": "modified",
    "additions": 13,
    "deletions": 1,
    "changes": 14,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailService.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailService.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailService.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -535,7 +535,6 @@ void sendTemporaryAllowedNotification(Application application, ApplicationCommen\n         mailService.send(mailToTemporaryAllow);\n     }\n \n-\n     /**\n      * If an application has status waiting and no boss has decided about it after a certain time, the bosses receive a\n      * reminding notification.\n@@ -556,6 +555,19 @@ void sendRemindBossNotification(Application application) {\n         mailService.send(mailToAllowAndRemind);\n     }\n \n+    void sendRemindForStartsSoonApplicationsReminderNotification(List<Application> applications){\n+        for (Application application : applications) {\n+            final Map<String, Object> model = new HashMap<>();\n+            model.put(APPLICATION, application);\n+\n+            final Mail mailToStartsSoonRemind = Mail.builder()\n+                .withRecipient(application.getPerson())\n+                .withSubject(\"subject.application.remind.starts_soon\")\n+                .withTemplate(\"remind_application_starts_soon\", model)\n+                .build();\n+            mailService.send(mailToStartsSoonRemind);\n+        }\n+    }\n \n     void sendRemindForWaitingApplicationsReminderNotification(List<Application> waitingApplications) {\n "
  },
  {
    "sha": "de6e0b0dda74301e68abe9726219406c9ebd8396",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailConfiguration.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailConfiguration.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailConfiguration.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailConfiguration.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -0,0 +1,26 @@\n+package org.synyx.urlaubsverwaltung.application.service;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.scheduling.annotation.SchedulingConfigurer;\n+import org.springframework.scheduling.config.ScheduledTaskRegistrar;\n+import org.synyx.urlaubsverwaltung.application.ApplicationProperties;\n+\n+@Configuration\n+class ApplicationReminderMailConfiguration implements SchedulingConfigurer {\n+\n+    private final ApplicationProperties applicationProperties;\n+    private final ApplicationReminderMailService applicationReminderMailService;\n+\n+    @Autowired\n+    ApplicationReminderMailConfiguration(ApplicationProperties applicationProperties, ApplicationReminderMailService applicationReminderMailService) {\n+        this.applicationProperties = applicationProperties;\n+        this.applicationReminderMailService = applicationReminderMailService;\n+    }\n+\n+    @Override\n+    public void configureTasks(ScheduledTaskRegistrar scheduledTaskRegistrar) {\n+        scheduledTaskRegistrar.addCronTask(applicationReminderMailService::sendWaitingApplicationsReminderNotification, applicationProperties.getReminderNotification().getCron());\n+        scheduledTaskRegistrar.addCronTask(applicationReminderMailService::sendStartsSoonApplicationsReminderNotification, applicationProperties.getStartsSoonNotification().getCron());\n+    }\n+}"
  },
  {
    "sha": "49de6e81e32ae575ef6e7794a5abf05bb9259b17",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailService.java",
    "status": "renamed",
    "additions": 15,
    "deletions": 2,
    "changes": 17,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailService.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailService.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailService.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -4,6 +4,7 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.synyx.urlaubsverwaltung.application.domain.Application;\n+import org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus;\n import org.synyx.urlaubsverwaltung.settings.SettingsService;\n \n import java.time.Clock;\n@@ -14,10 +15,13 @@\n import static java.lang.invoke.MethodHandles.lookup;\n import static java.util.stream.Collectors.toList;\n import static org.slf4j.LoggerFactory.getLogger;\n+import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.ALLOWED;\n+import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.ALLOWED_CANCELLATION_REQUESTED;\n+import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.TEMPORARY_ALLOWED;\n import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.WAITING;\n \n @Component\n-class ApplicationCronMailService {\n+class ApplicationReminderMailService {\n \n     private static final Logger LOG = getLogger(lookup().lookupClass());\n \n@@ -27,7 +31,7 @@\n     private final Clock clock;\n \n     @Autowired\n-    ApplicationCronMailService(ApplicationService applicationService, SettingsService settingsService, ApplicationMailService applicationMailService, Clock clock) {\n+    ApplicationReminderMailService(ApplicationService applicationService, SettingsService settingsService, ApplicationMailService applicationMailService, Clock clock) {\n         this.applicationService = applicationService;\n         this.settingsService = settingsService;\n         this.applicationMailService = applicationMailService;\n@@ -61,6 +65,15 @@ void sendWaitingApplicationsReminderNotification() {\n         }\n     }\n \n+    void sendStartsSoonApplicationsReminderNotification() {\n+\n+        final LocalDate tomorrow = LocalDate.now(clock).plusDays(1);\n+        final List<ApplicationStatus> allowedStatuses = List.of(ALLOWED, ALLOWED_CANCELLATION_REQUESTED, TEMPORARY_ALLOWED);\n+        final List<Application> applicationsThatStartSoon = applicationService.getApplicationsWithStartDateAndState(tomorrow, allowedStatuses);\n+\n+        applicationMailService.sendRemindForStartsSoonApplicationsReminderNotification(applicationsThatStartSoon);\n+    }\n+\n     private Predicate<Application> isLongWaitingApplications() {\n         return application -> {\n ",
    "previous_filename": "src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationCronMailService.java"
  },
  {
    "sha": "92a42b9fa4d9ef7964fdfcf7afaef2dcd154fac8",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationService.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationService.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationService.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationService.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -57,6 +57,14 @@\n     List<Application> getApplicationsForACertainPeriodAndState(LocalDate startDate, LocalDate endDate,\n                                                                ApplicationStatus status);\n \n+    /**\n+     * Gets all {@link Application}s that have the given start date and the given state.\n+     *\n+     * @param startDate {@link LocalDate}\n+     * @param statuses  {@link ApplicationStatus}\n+     * @return all {@link Application}s with the given states and startDate\n+     */\n+    List<Application> getApplicationsWithStartDateAndState(LocalDate startDate, List<ApplicationStatus> statuses);\n \n     /**\n      * Gets all {@link Application}s with vacation time between startDate x and endDate y for the given person and"
  },
  {
    "sha": "805790c0c5ea337fc81d1f4e2756b186d0462dd4",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationServiceImpl.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationServiceImpl.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationServiceImpl.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationServiceImpl.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -52,6 +52,11 @@ public Application save(Application application) {\n         return applicationRepository.getApplicationsForACertainTimeAndState(startDate, endDate, status);\n     }\n \n+    @Override\n+    public List<Application> getApplicationsWithStartDateAndState(LocalDate startDate, List<ApplicationStatus> statuses) {\n+        return applicationRepository.findByStatusInAndStartDate(statuses, startDate);\n+    }\n+\n     @Override\n     public List<Application> getApplicationsForACertainPeriodAndPersonAndState(LocalDate startDate, LocalDate endDate, Person person, ApplicationStatus status) {\n         return applicationRepository.getApplicationsForACertainTimeAndPersonAndState(startDate, endDate, person, status);"
  },
  {
    "sha": "baf13bee571bf0330619574c6123d34ae3d4871c",
    "filename": "src/main/resources/messages_de.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/main/resources/messages_de.properties",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/main/resources/messages_de.properties",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/resources/messages_de.properties?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -601,6 +601,7 @@ subject.application.cancelled.management=Ein Antrag wurde vom Office storniert\n subject.application.refer=Hilfe bei der Entscheidung über einen Urlaubsantrag\n subject.application.edited=Urlaubsantrag von {0} wurde erfolgreich editiert\n subject.application.remind=Erinnerung wartender Urlaubsantrag\n+subject.application.remind.starts_soon=Erinnerung an deine Abwesenheit\n subject.application.cronRemind=Erinnerung für wartende Urlaubsanträge\n subject.application.holidayReplacement.allow=Urlaubsvertretung\n subject.application.holidayReplacement.apply=Mögliche Urlaubsvertretung"
  },
  {
    "sha": "c064100fac6e9caaf91d48f451f28924a9279334",
    "filename": "src/main/resources/messages_en.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/main/resources/messages_en.properties",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/main/resources/messages_en.properties",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/resources/messages_en.properties?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -593,6 +593,7 @@ subject.application.cancelled.management=A request has been cancelled by the off\n subject.application.refer=Help with the decision on a vacation request\n subject.application.edited=Application for leave of {0} was successfully edited\n subject.application.remind=Reminder for waiting vacation request\n+subject.application.remind.starts_soon=Reminder of your absence\n subject.application.cronRemind=Reminder for waiting vacation requests\n subject.application.holidayReplacement.allow=vacation replacement\n subject.application.holidayReplacement.apply=Possible vacation replacement"
  },
  {
    "sha": "9b2a294618a935dedde0583aa12b19d5ac06a599",
    "filename": "src/main/resources/org/synyx/urlaubsverwaltung/core/mail/remind_application_starts_soon.ftl",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/main/resources/org/synyx/urlaubsverwaltung/core/mail/remind_application_starts_soon.ftl",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/main/resources/org/synyx/urlaubsverwaltung/core/mail/remind_application_starts_soon.ftl",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/resources/org/synyx/urlaubsverwaltung/core/mail/remind_application_starts_soon.ftl?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -0,0 +1,16 @@\n+Hallo ${recipient.niceName},\n+\n+<#if (application.holidayReplacement.niceName)?has_content>\n+morgen beginnt deine Abwesenheit und du wirst vertreten durch:\n+<#else>\n+morgen beginnt deine Abwesenheit.\n+</#if>\n+\n+<#if (application.holidayReplacement.niceName)?has_content>\n+${application.holidayReplacement.niceName}<#if (application.holidayReplacementNote)?has_content>, \"${application.holidayReplacementNote}\"</#if>\n+\n+</#if>\n+Da du vom ${application.startDate.format(\"dd.MM.yyyy\")} bis zum ${application.endDate.format(\"dd.MM.yyyy\")} nicht anwesend bist, denke bitte an die Übergabe.\n+Dazu gehören z.B. Abwesenheitsnotiz, E-Mail- & Telefon-Weiterleitung, Zeiterfassung, etc.\n+\n+Link zum Antrag: ${baseLinkURL}web/application/${application.id?c}"
  },
  {
    "sha": "053288645a391338a576277c9f1581944c53d579",
    "filename": "src/test/java/org/synyx/urlaubsverwaltung/application/dao/ApplicationRepositoryIT.java",
    "status": "modified",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/dao/ApplicationRepositoryIT.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/dao/ApplicationRepositoryIT.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/test/java/org/synyx/urlaubsverwaltung/application/dao/ApplicationRepositoryIT.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -22,9 +22,11 @@\n import static org.assertj.core.api.Assertions.assertThat;\n import static org.synyx.urlaubsverwaltung.TestDataCreator.createApplication;\n import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.ALLOWED;\n+import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.ALLOWED_CANCELLATION_REQUESTED;\n import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.CANCELLED;\n import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.REJECTED;\n import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.REVOKED;\n+import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.TEMPORARY_ALLOWED;\n import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.WAITING;\n import static org.synyx.urlaubsverwaltung.application.domain.VacationCategory.HOLIDAY;\n import static org.synyx.urlaubsverwaltung.application.domain.VacationCategory.OVERTIME;\n@@ -398,6 +400,49 @@ void findByHolidayReplacementAndEndDateIsGreaterThanEqualAndStatusIn() {\n         assertThat(applications).hasSize(1).contains(waitingApplication);\n     }\n \n+    @Test\n+    void findByStatusInAndStartDate() {\n+\n+        final Person person = new Person(\"sam\", \"smith\", \"sam\", \"smith@example.org\");\n+        final Person savedPerson = personService.save(person);\n+\n+        // yesterday\n+        final LocalDate yesterdayDates = LocalDate.of(2020, 5, 3);\n+        final Application yesterdayApplication = createApplication(savedPerson, getVacationType(HOLIDAY), yesterdayDates, yesterdayDates, FULL);\n+        yesterdayApplication.setStatus(ALLOWED);\n+        sut.save(yesterdayApplication);\n+\n+        // today\n+        final LocalDate todayDates = LocalDate.of(2020, 5, 4);\n+        final Application todayApplication = createApplication(savedPerson, getVacationType(HOLIDAY), todayDates, todayDates, FULL);\n+        todayApplication.setStatus(ALLOWED);\n+        sut.save(todayApplication);\n+\n+        // tomorrow\n+        final LocalDate tomorrowAllowedDates = LocalDate.of(2020, 5, 5);\n+        final Application tomorrowDateApplication = createApplication(savedPerson, getVacationType(HOLIDAY), tomorrowAllowedDates, tomorrowAllowedDates, FULL);\n+        tomorrowDateApplication.setStatus(ALLOWED);\n+        sut.save(tomorrowDateApplication);\n+\n+        final Application tomorrowCancellationRequestDateApplication = createApplication(savedPerson, getVacationType(HOLIDAY), tomorrowAllowedDates, tomorrowAllowedDates, FULL);\n+        tomorrowCancellationRequestDateApplication.setStatus(ALLOWED_CANCELLATION_REQUESTED);\n+        sut.save(tomorrowCancellationRequestDateApplication);\n+\n+        final Application tomorrowTemporaryAllowedDateApplication = createApplication(savedPerson, getVacationType(HOLIDAY), tomorrowAllowedDates, tomorrowAllowedDates, FULL);\n+        tomorrowTemporaryAllowedDateApplication.setStatus(TEMPORARY_ALLOWED);\n+        sut.save(tomorrowTemporaryAllowedDateApplication);\n+\n+        final Application tomorrowWaitingDateApplication = createApplication(savedPerson, getVacationType(HOLIDAY), tomorrowAllowedDates, tomorrowAllowedDates, FULL);\n+        tomorrowWaitingDateApplication.setStatus(WAITING);\n+        sut.save(tomorrowWaitingDateApplication);\n+\n+        final LocalDate requestedStartDate = LocalDate.of(2020, 5, 5);\n+        final List<ApplicationStatus> requestStatuses = List.of(ALLOWED, ALLOWED_CANCELLATION_REQUESTED, TEMPORARY_ALLOWED);\n+        final List<Application> applications = sut.findByStatusInAndStartDate(requestStatuses, requestedStartDate);\n+        assertThat(applications)\n+            .containsOnly(tomorrowDateApplication, tomorrowCancellationRequestDateApplication, tomorrowTemporaryAllowedDateApplication);\n+    }\n+\n     private VacationType getVacationType(VacationCategory category) {\n \n         for (VacationType vacationType : vacationTypeRepository.findAll()) {"
  },
  {
    "sha": "cc14561fc008a4335916492ed64108fb7c50077c",
    "filename": "src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceIT.java",
    "status": "modified",
    "additions": 81,
    "deletions": 0,
    "changes": 81,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceIT.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceIT.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceIT.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -1008,6 +1008,87 @@ void sendEditedApplicationNotification() throws Exception {\n         assertThat(content).contains(\"/web/application/1234\");\n     }\n \n+    @Test\n+    void ensurePersonGetsANotificationForTomorrowStartingApplication() throws MessagingException, IOException {\n+\n+        final Person person = new Person(\"user\", \"Müller\", \"Lieschen\", \"lieschen@example.org\");\n+        final Person holidayReplacement = new Person(\"holidayReplacement\", \"holiday\", \"replacement\", \"holidayreplacement@example.org\");\n+\n+        final Application application = createApplication(person);\n+        application.setHolidayReplacement(holidayReplacement);\n+        application.setHolidayReplacementNote(\"Some notes\");\n+\n+        sut.sendRemindForStartsSoonApplicationsReminderNotification(List.of(application));\n+\n+        // was email sent?\n+        MimeMessage[] inbox = greenMail.getReceivedMessagesForDomain(person.getEmail());\n+        assertThat(inbox.length).isOne();\n+\n+        Message msg = inbox[0];\n+        assertThat(msg.getSubject()).contains(\"Erinnerung an deine Abwesenheit\");\n+        assertThat(new InternetAddress(person.getEmail())).isEqualTo(msg.getAllRecipients()[0]);\n+\n+        // check content of email\n+        String content = (String) msg.getContent();\n+        assertThat(content).contains(\"Hallo Lieschen Müller\");\n+        assertThat(content).contains(\"morgen beginnt deine Abwesenheit und du wirst vertreten durch:\");\n+        assertThat(content).contains(\"replacement holiday, \\\"Some notes\\\"\");\n+        assertThat(content).contains(\"nicht anwesend bist, denke bitte an die Übergabe.\");\n+        assertThat(content).contains(\"/web/application/1234\");\n+    }\n+\n+    @Test\n+    void ensurePersonGetsANotificationForTomorrowStartingApplicationWithoutReplacement() throws MessagingException, IOException {\n+\n+        final Person person = new Person(\"user\", \"Müller\", \"Lieschen\", \"lieschen@example.org\");\n+        final Application application = createApplication(person);\n+\n+        sut.sendRemindForStartsSoonApplicationsReminderNotification(List.of(application));\n+\n+        // was email sent?\n+        MimeMessage[] inbox = greenMail.getReceivedMessagesForDomain(person.getEmail());\n+        assertThat(inbox.length).isOne();\n+\n+        Message msg = inbox[0];\n+        assertThat(msg.getSubject()).contains(\"Erinnerung an deine Abwesenheit\");\n+        assertThat(new InternetAddress(person.getEmail())).isEqualTo(msg.getAllRecipients()[0]);\n+\n+        // check content of email\n+        String content = (String) msg.getContent();\n+        assertThat(content).contains(\"Hallo Lieschen Müller\");\n+        assertThat(content).contains(\"morgen beginnt deine Abwesenheit.\");\n+        assertThat(content).contains(\"nicht anwesend bist, denke bitte an die Übergabe.\");\n+        assertThat(content).contains(\"/web/application/1234\");\n+    }\n+\n+    @Test\n+    void ensurePersonGetsANotificationForTomorrowStartingApplicationWithReplacementWithoutNote() throws MessagingException, IOException {\n+\n+        final Person person = new Person(\"user\", \"Müller\", \"Lieschen\", \"lieschen@example.org\");\n+        final Person holidayReplacement = new Person(\"holidayReplacement\", \"holiday\", \"replacement\", \"holidayreplacement@example.org\");\n+\n+        final Application application = createApplication(person);\n+        application.setHolidayReplacement(holidayReplacement);\n+\n+        sut.sendRemindForStartsSoonApplicationsReminderNotification(List.of(application));\n+\n+        // was email sent?\n+        MimeMessage[] inbox = greenMail.getReceivedMessagesForDomain(person.getEmail());\n+        assertThat(inbox.length).isOne();\n+\n+        Message msg = inbox[0];\n+        assertThat(msg.getSubject()).contains(\"Erinnerung an deine Abwesenheit\");\n+        assertThat(new InternetAddress(person.getEmail())).isEqualTo(msg.getAllRecipients()[0]);\n+\n+        // check content of email\n+        String content = (String) msg.getContent();\n+        assertThat(content).contains(\"Hallo Lieschen Müller\");\n+        assertThat(content).contains(\"morgen beginnt deine Abwesenheit und du wirst vertreten durch:\");\n+        assertThat(content).contains(\"replacement holiday\");\n+        assertThat(content).contains(\"nicht anwesend bist, denke bitte an die Übergabe.\");\n+        assertThat(content).contains(\"/web/application/1234\");\n+    }\n+\n     private void verifyInbox(Person inboxOwner, List<Application> applications) throws MessagingException, IOException {\n \n         MimeMessage[] inbox = greenMail.getReceivedMessagesForDomain(inboxOwner.getEmail());"
  },
  {
    "sha": "725af05471ab57e62eacade0d54ac79213886be0",
    "filename": "src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceTest.java",
    "status": "modified",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceTest.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceTest.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceTest.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -669,4 +669,39 @@ void sendTemporaryAllowedNotification() {\n         assertThat(mails.get(1).getTemplateName()).isEqualTo(\"temporary_allowed_second_stage_authority\");\n         assertThat(mails.get(1).getTemplateModel()).isEqualTo(modelSecondStage);\n     }\n+\n+    @Test\n+    void sendRemindForStartsSoonApplicationsReminderNotification() {\n+\n+        final Person person = new Person();\n+        final List<Person> recipients = singletonList(person);\n+\n+        final VacationType vacationType = new VacationType();\n+        vacationType.setCategory(HOLIDAY);\n+\n+        final Application application = new Application();\n+        application.setVacationType(vacationType);\n+        application.setPerson(person);\n+        application.setDayLength(FULL);\n+        application.setStartDate(LocalDate.MIN);\n+        application.setEndDate(LocalDate.MAX);\n+        application.setStatus(ALLOWED);\n+\n+        final Map<String, Object> model = new HashMap<>();\n+        model.put(\"application\", application);\n+\n+        sut.sendRemindForStartsSoonApplicationsReminderNotification(List.of(application, application));\n+\n+        final ArgumentCaptor<Mail> argument = ArgumentCaptor.forClass(Mail.class);\n+        verify(mailService, times(2)).send(argument.capture());\n+        final List<Mail> mails = argument.getAllValues();\n+        assertThat(mails.get(0).getMailAddressRecipients()).hasValue(List.of(person));\n+        assertThat(mails.get(0).getSubjectMessageKey()).isEqualTo(\"subject.application.remind.starts_soon\");\n+        assertThat(mails.get(0).getTemplateName()).isEqualTo(\"remind_application_starts_soon\");\n+        assertThat(mails.get(0).getTemplateModel()).isEqualTo(model);\n+        assertThat(mails.get(1).getMailAddressRecipients()).hasValue(recipients);\n+        assertThat(mails.get(1).getSubjectMessageKey()).isEqualTo(\"subject.application.remind.starts_soon\");\n+        assertThat(mails.get(1).getTemplateName()).isEqualTo(\"remind_application_starts_soon\");\n+        assertThat(mails.get(1).getTemplateModel()).isEqualTo(model);\n+    }\n }"
  },
  {
    "sha": "9b34b25e806161d201b67958ea68d6db38ef9a7b",
    "filename": "src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailConfigurationTest.java",
    "status": "renamed",
    "additions": 12,
    "deletions": 5,
    "changes": 17,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailConfigurationTest.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailConfigurationTest.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailConfigurationTest.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -8,31 +8,38 @@\n \n import java.util.List;\n \n+import static org.assertj.core.api.Assertions.assertThat;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.verifyNoInteractions;\n \n-class ApplicationCronMailConfigurationTest {\n+class ApplicationReminderMailConfigurationTest {\n \n     @Test\n     void sendsWaitingApplicationReminderWithGivenCronJobInterval() {\n \n         final ApplicationProperties properties = new ApplicationProperties();\n-        final ApplicationCronMailService service = mock(ApplicationCronMailService.class);\n-        final ApplicationCronMailConfiguration sut = new ApplicationCronMailConfiguration(properties, service);\n+        final ApplicationReminderMailService service = mock(ApplicationReminderMailService.class);\n+        final ApplicationReminderMailConfiguration sut = new ApplicationReminderMailConfiguration(properties, service);\n \n         final ScheduledTaskRegistrar taskRegistrar = new ScheduledTaskRegistrar();\n         sut.configureTasks(taskRegistrar);\n \n         final List<CronTask> cronTaskList = taskRegistrar.getCronTaskList();\n-        Assertions.assertThat(cronTaskList).hasSize(1);\n+        assertThat(cronTaskList).hasSize(2);\n \n         final CronTask cronTask = cronTaskList.get(0);\n-        Assertions.assertThat(cronTask.getExpression()).isEqualTo(\"0 0 7 * * *\");\n+        assertThat(cronTask.getExpression()).isEqualTo(\"0 0 7 * * *\");\n \n         verifyNoInteractions(service);\n \n         cronTask.getRunnable().run();\n         verify(service).sendWaitingApplicationsReminderNotification();\n+\n+        final CronTask cronTaskStartsSoon = cronTaskList.get(1);\n+        assertThat(cronTaskStartsSoon.getExpression()).isEqualTo(\"0 0 7 * * *\");\n+\n+        cronTaskStartsSoon.getRunnable().run();\n+        verify(service).sendStartsSoonApplicationsReminderNotification();\n     }\n }",
    "previous_filename": "src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationCronMailConfigurationTest.java"
  },
  {
    "sha": "a4ed106da1c6ac80e106cd64fd24fa86ae6585f2",
    "filename": "src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailServiceTest.java",
    "status": "renamed",
    "additions": 33,
    "deletions": 10,
    "changes": 43,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailServiceTest.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailServiceTest.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationReminderMailServiceTest.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -14,6 +14,7 @@\n import org.synyx.urlaubsverwaltung.settings.SettingsService;\n \n import java.time.Clock;\n+import java.time.Instant;\n import java.time.LocalDate;\n import java.util.List;\n \n@@ -24,13 +25,16 @@\n import static org.mockito.Mockito.when;\n import static org.synyx.urlaubsverwaltung.TestDataCreator.createApplication;\n import static org.synyx.urlaubsverwaltung.TestDataCreator.createVacationType;\n+import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.ALLOWED;\n+import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.ALLOWED_CANCELLATION_REQUESTED;\n+import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.TEMPORARY_ALLOWED;\n import static org.synyx.urlaubsverwaltung.application.domain.ApplicationStatus.WAITING;\n import static org.synyx.urlaubsverwaltung.application.domain.VacationCategory.HOLIDAY;\n \n @ExtendWith(MockitoExtension.class)\n-class ApplicationCronMailServiceTest {\n+class ApplicationReminderMailServiceTest {\n \n-    private ApplicationCronMailService sut;\n+    private ApplicationReminderMailService sut;\n \n     @Mock\n     private ApplicationService applicationService;\n@@ -39,9 +43,11 @@\n     @Mock\n     private ApplicationMailService applicationMailService;\n \n+    private final Clock clock = Clock.fixed(Instant.parse(\"2020-04-04T10:15:30.00Z\"), UTC);\n+\n     @BeforeEach\n     void setUp() {\n-        sut = new ApplicationCronMailService(applicationService, settingsService, applicationMailService, Clock.systemUTC());\n+        sut = new ApplicationReminderMailService(applicationService, settingsService, applicationMailService, clock);\n     }\n \n     @Test\n@@ -53,22 +59,22 @@ void ensureSendWaitingApplicationsReminderNotification() {\n         final VacationType vacationType = createVacationType(HOLIDAY);\n \n         final Application shortWaitingApplication = createApplication(new Person(\"muster\", \"Muster\", \"Marlene\", \"muster@example.org\"), vacationType);\n-        shortWaitingApplication.setApplicationDate(LocalDate.now(UTC));\n+        shortWaitingApplication.setApplicationDate(LocalDate.now(clock));\n \n         final Application longWaitingApplicationA = createApplication(new Person(\"muster\", \"Muster\", \"Marlene\", \"muster@example.org\"), vacationType);\n-        longWaitingApplicationA.setApplicationDate(LocalDate.now(UTC).minusDays(3));\n+        longWaitingApplicationA.setApplicationDate(LocalDate.now(clock).minusDays(3));\n \n         final Application longWaitingApplicationB = createApplication(new Person(\"muster\", \"Muster\", \"Marlene\", \"muster@example.org\"), vacationType);\n-        longWaitingApplicationB.setApplicationDate(LocalDate.now(UTC).minusDays(3));\n+        longWaitingApplicationB.setApplicationDate(LocalDate.now(clock).minusDays(3));\n \n         final Application longWaitingApplicationAlreadyRemindedToday = createApplication(new Person(\"muster\", \"Muster\", \"Marlene\", \"muster@example.org\"), vacationType);\n-        longWaitingApplicationAlreadyRemindedToday.setApplicationDate(LocalDate.now(UTC).minusDays(3));\n-        LocalDate today = LocalDate.now(UTC);\n+        longWaitingApplicationAlreadyRemindedToday.setApplicationDate(LocalDate.now(clock).minusDays(3));\n+        LocalDate today = LocalDate.now(clock);\n         longWaitingApplicationAlreadyRemindedToday.setRemindDate(today);\n \n         final Application longWaitingApplicationAlreadyRemindedEarlier = createApplication(new Person(\"muster\", \"Muster\", \"Marlene\", \"muster@example.org\"), vacationType);\n-        longWaitingApplicationAlreadyRemindedEarlier.setApplicationDate(LocalDate.now(UTC).minusDays(5));\n-        LocalDate oldRemindDateEarlier = LocalDate.now(UTC).minusDays(3);\n+        longWaitingApplicationAlreadyRemindedEarlier.setApplicationDate(LocalDate.now(clock).minusDays(5));\n+        LocalDate oldRemindDateEarlier = LocalDate.now(clock).minusDays(3);\n         longWaitingApplicationAlreadyRemindedEarlier.setRemindDate(oldRemindDateEarlier);\n \n         final List<Application> waitingApplications = asList(shortWaitingApplication,\n@@ -89,6 +95,23 @@ void ensureSendWaitingApplicationsReminderNotification() {\n         assertThat(longWaitingApplicationAlreadyRemindedToday.getRemindDate()).isEqualTo(today);\n     }\n \n+    @Test\n+    void sendStartsSoonApplicationsReminderNotification() {\n+\n+        final Person person = new Person(\"muster\", \"Muster\", \"Marlene\", \"muster@example.org\");\n+        final VacationType vacationType = createVacationType(HOLIDAY);\n+        final LocalDate tomorrow = LocalDate.now(clock).plusDays(1);\n+\n+        final Application tomorrowApplication = createApplication(person, vacationType);\n+        tomorrowApplication.setApplicationDate(tomorrow);\n+\n+        when(applicationService.getApplicationsWithStartDateAndState(tomorrow, List.of(ALLOWED, ALLOWED_CANCELLATION_REQUESTED, TEMPORARY_ALLOWED))).thenReturn(List.of(tomorrowApplication));\n+\n+        sut.sendStartsSoonApplicationsReminderNotification();\n+        verify(applicationMailService).sendRemindForStartsSoonApplicationsReminderNotification(List.of(tomorrowApplication));\n+\n+    }\n+\n     private void prepareSettingsWithRemindForWaitingApplications(Boolean isActive) {\n         Settings settings = new Settings();\n         ApplicationSettings applicationSettings = new ApplicationSettings();",
    "previous_filename": "src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationCronMailServiceTest.java"
  },
  {
    "sha": "9ed0880d5cfd964d4ad59d2e1a3eb0793b97d73e",
    "filename": "src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationServiceImplTest.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationServiceImplTest.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/497c7a040e421a38749cb54388493865c80d6308/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationServiceImplTest.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationServiceImplTest.java?ref=497c7a040e421a38749cb54388493865c80d6308",
    "patch": "@@ -132,4 +132,16 @@ void getForHolidayReplacement() {\n         final List<Application> holidayReplacementApplications = sut.getForHolidayReplacement(holidayReplacement, localDate);\n         assertThat(holidayReplacementApplications).hasSize(1).contains(application);\n     }\n+\n+    @Test\n+    void getApplicationsWithStartDateAndState() {\n+        final LocalDate startDate = LocalDate.of(2020, 10, 1);\n+\n+        final Application application = new Application();\n+        final List<ApplicationStatus> statuses = List.of(TEMPORARY_ALLOWED, ALLOWED, ALLOWED_CANCELLATION_REQUESTED);\n+        when(applicationRepository.findByStatusInAndStartDate(statuses, startDate)).thenReturn(List.of(application));\n+\n+        final List<Application> holidayReplacementApplications = sut.getApplicationsWithStartDateAndState(startDate, statuses);\n+        assertThat(holidayReplacementApplications).hasSize(1).contains(application);\n+    }\n }"
  }
]
