[
  {
    "sha": "49882cccd84e20047db334df43bf8939ead39996",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailService.java",
    "status": "modified",
    "additions": 17,
    "deletions": 3,
    "changes": 20,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailService.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailService.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailService.java?ref=1ceef220d44e2309f8b608e7d382fd432ea3a181",
    "patch": "@@ -4,6 +4,7 @@\n import org.springframework.context.MessageSource;\n import org.springframework.stereotype.Service;\n import org.synyx.urlaubsverwaltung.absence.Absence;\n+import org.synyx.urlaubsverwaltung.calendar.ICalType;\n import org.synyx.urlaubsverwaltung.absence.AbsenceTimeConfiguration;\n import org.synyx.urlaubsverwaltung.absence.AbsenceType;\n import org.synyx.urlaubsverwaltung.absence.TimeSettings;\n@@ -26,8 +27,10 @@\n import static java.util.stream.Collectors.groupingBy;\n import static java.util.stream.Collectors.mapping;\n import static java.util.stream.Collectors.toList;\n+import static org.synyx.urlaubsverwaltung.calendar.ICalType.CANCELLED;\n import static org.synyx.urlaubsverwaltung.absence.AbsenceType.DEFAULT;\n import static org.synyx.urlaubsverwaltung.absence.AbsenceType.HOLIDAY_REPLACEMENT;\n+import static org.synyx.urlaubsverwaltung.calendar.ICalType.PUBLISHED;\n import static org.synyx.urlaubsverwaltung.person.MailNotification.NOTIFICATION_OFFICE;\n \n @Service\n@@ -37,6 +40,7 @@\n     private static final String VACATION_TYPE = \"vacationType\";\n     private static final String DAY_LENGTH = \"dayLength\";\n     private static final String COMMENT = \"comment\";\n+    private static final String CALENDAR_ICS = \"calendar.ics\";\n \n     private final MailService mailService;\n     private final DepartmentService departmentService;\n@@ -72,7 +76,7 @@ void sendAllowedNotification(Application application, ApplicationComment applica\n             .withRecipient(application.getPerson())\n             .withSubject(\"subject.application.allowed.user\")\n             .withTemplate(\"allowed_user\", model)\n-            .withAttachment(\"calendar.ics\", calendarFile)\n+            .withAttachment(CALENDAR_ICS, calendarFile)\n             .build();\n         mailService.send(mailToApplicant);\n \n@@ -287,7 +291,7 @@ void notifyHolidayReplacementAllow(Application application) {\n             .withRecipient(application.getHolidayReplacement())\n             .withSubject(\"subject.application.holidayReplacement.allow\")\n             .withTemplate(\"notify_holiday_replacement_allow\", model)\n-            .withAttachment(\"calendar.ics\", calendarFile)\n+            .withAttachment(CALENDAR_ICS, calendarFile)\n             .build();\n \n         mailService.send(mailToReplacement);\n@@ -302,6 +306,8 @@ void notifyHolidayReplacementAllow(Application application) {\n      */\n     void notifyHolidayReplacementAboutCancellation(Application application) {\n \n+        final File calendarFile = generateCalendar(application, application.getPerson().getNiceName(), DEFAULT, CANCELLED);\n+\n         Map<String, Object> model = new HashMap<>();\n         model.put(APPLICATION, application);\n         model.put(DAY_LENGTH, getTranslation(application.getDayLength().name()));\n@@ -310,6 +316,7 @@ void notifyHolidayReplacementAboutCancellation(Application application) {\n             .withRecipient(application.getHolidayReplacement())\n             .withSubject(\"subject.application.holidayReplacement.cancellation\")\n             .withTemplate(\"notify_holiday_replacement_cancellation\", model)\n+            .withAttachment(CALENDAR_ICS, calendarFile)\n             .build();\n \n         mailService.send(mailToReplacement);\n@@ -436,6 +443,8 @@ void sendRevokedNotifications(Application application, ApplicationComment commen\n      */\n     void sendCancelledByOfficeNotification(Application application, ApplicationComment comment) {\n \n+        final File calendarFile = generateCalendar(application, application.getPerson().getNiceName(), DEFAULT, CANCELLED);\n+\n         Map<String, Object> model = new HashMap<>();\n         model.put(APPLICATION, application);\n         model.put(COMMENT, comment);\n@@ -445,6 +454,7 @@ void sendCancelledByOfficeNotification(Application application, ApplicationComme\n             .withRecipient(application.getPerson())\n             .withSubject(\"subject.application.cancelled.user\")\n             .withTemplate(\"cancelled_by_office\", model)\n+            .withAttachment(CALENDAR_ICS, calendarFile)\n             .build();\n \n         mailService.send(mailToApplicant);\n@@ -456,6 +466,7 @@ void sendCancelledByOfficeNotification(Application application, ApplicationComme\n             .withRecipient(relevantRecipientsToInform)\n             .withSubject(\"subject.application.cancelled.management\")\n             .withTemplate(\"cancelled_by_office_management\", model)\n+            .withAttachment(CALENDAR_ICS, calendarFile)\n             .build();\n \n         mailService.send(mailToRelevantPersons);\n@@ -602,8 +613,11 @@ private String getTranslation(String key, Object... args) {\n     }\n \n     private File generateCalendar(Application application, String calendarName, AbsenceType absenceType) {\n+        return generateCalendar(application, calendarName, absenceType, PUBLISHED);\n+    }\n+    private File generateCalendar(Application application, String calendarName, AbsenceType absenceType, ICalType iCalType) {\n         final Absence absence = new Absence(application.getPerson(), application.getPeriod(), getAbsenceTimeConfiguration(), absenceType);\n-        return iCalService.getCalendar(calendarName, List.of(absence));\n+        return iCalService.getCalendar(calendarName, List.of(absence), iCalType);\n     }\n \n     private AbsenceTimeConfiguration getAbsenceTimeConfiguration() {"
  },
  {
    "sha": "d7ca20b5bb6e436420c01f5b31577a5063892c0d",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/calendar/CalendarProperties.java",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/main/java/org/synyx/urlaubsverwaltung/calendar/CalendarProperties.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/main/java/org/synyx/urlaubsverwaltung/calendar/CalendarProperties.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/calendar/CalendarProperties.java?ref=1ceef220d44e2309f8b608e7d382fd432ea3a181",
    "patch": "@@ -6,9 +6,9 @@\n import org.springframework.validation.annotation.Validated;\n \n import javax.validation.constraints.Email;\n+import javax.validation.constraints.NotEmpty;\n import java.time.Duration;\n import java.time.temporal.ChronoUnit;\n-import java.util.Optional;\n \n @Component\n @ConfigurationProperties(\"uv.calendar\")\n@@ -21,6 +21,7 @@\n      * feature\n      */\n     @Email\n+    @NotEmpty\n     private String organizer;\n \n     /**\n@@ -42,8 +43,8 @@\n     @DurationUnit(ChronoUnit.MINUTES)\n     private Duration refreshInterval = Duration.ofDays(1);\n \n-    public Optional<String> getOrganizer() {\n-        return Optional.ofNullable(organizer);\n+    public String getOrganizer() {\n+        return organizer;\n     }\n \n     public void setOrganizer(String organizer) {"
  },
  {
    "sha": "8ea725d04ed42a4e9bf30d975213b01eb1ee9d9a",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/calendar/ICalService.java",
    "status": "modified",
    "additions": 42,
    "deletions": 19,
    "changes": 61,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/main/java/org/synyx/urlaubsverwaltung/calendar/ICalService.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/main/java/org/synyx/urlaubsverwaltung/calendar/ICalService.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/calendar/ICalService.java?ref=1ceef220d44e2309f8b608e7d382fd432ea3a181",
    "patch": "@@ -11,6 +11,7 @@\n import net.fortuna.ical4j.model.property.Organizer;\n import net.fortuna.ical4j.model.property.ProdId;\n import net.fortuna.ical4j.model.property.RefreshInterval;\n+import net.fortuna.ical4j.model.property.Sequence;\n import net.fortuna.ical4j.model.property.Uid;\n import net.fortuna.ical4j.model.property.XProperty;\n import net.fortuna.ical4j.validate.ValidationException;\n@@ -35,8 +36,10 @@\n import static java.util.stream.Collectors.toList;\n import static net.fortuna.ical4j.model.parameter.Role.REQ_PARTICIPANT;\n import static net.fortuna.ical4j.model.property.CalScale.GREGORIAN;\n+import static net.fortuna.ical4j.model.property.Method.CANCEL;\n import static net.fortuna.ical4j.model.property.Version.VERSION_2_0;\n import static org.slf4j.LoggerFactory.getLogger;\n+import static org.synyx.urlaubsverwaltung.calendar.ICalType.PUBLISHED;\n \n \n @Service\n@@ -54,26 +57,18 @@\n     }\n \n     public File getCalendar(String title, List<Absence> absences) {\n-        final Calendar calendar = generateCalendar(title, absences);\n+        return getCalendar(title, absences, PUBLISHED);\n+    }\n \n-        final File file;\n-        try {\n-            file = File.createTempFile(\"calendar-\", \".ics\");\n-        } catch (IOException e) {\n-            throw new CalendarException(\"Could not generate temp file for \" + title + \" calendar\", e);\n-        }\n+    public File getCalendar(String title, List<Absence> absences, ICalType method) {\n \n-        try (final FileWriter calendarFileWriter = new FileWriter(file)) {\n-            final CalendarOutputter calendarOutputter = new CalendarOutputter();\n-            calendarOutputter.output(calendar, calendarFileWriter);\n-        } catch (ValidationException | IOException e) {\n-            throw new CalendarException(\"iCal calender could not be written to file\", e);\n-        }\n+        final File file = generateCalenderFile(title);\n+        final Calendar calendar = generateCalendar(title, absences, method);\n \n-        return file;\n+        return writeCalenderIntoFile(calendar, file);\n     }\n \n-    private Calendar generateCalendar(String title, List<Absence> absences) {\n+    private Calendar generateCalendar(String title, List<Absence> absences, ICalType method) {\n         final Calendar calendar = new Calendar();\n         calendar.getProperties().add(VERSION_2_0);\n         calendar.getProperties().add(new ProdId(\"-//Urlaubsverwaltung//iCal4j 1.0//DE\"));\n@@ -82,8 +77,12 @@ private Calendar generateCalendar(String title, List<Absence> absences) {\n         calendar.getProperties().add(new XProperty(\"X-MICROSOFT-CALSCALE\", GREGORIAN.getValue()));\n         calendar.getProperties().add(new RefreshInterval(new ParameterList(), calendarProperties.getRefreshInterval()));\n \n+        if (method == ICalType.CANCELLED) {\n+            calendar.getProperties().add(CANCEL);\n+        }\n+\n         final List<VEvent> absencesVEvents = absences.stream()\n-            .map(this::toVEvent)\n+            .map(absence -> this.toVEvent(absence, method))\n             .filter(Optional::isPresent)\n             .map(Optional::get)\n             .collect(toList());\n@@ -92,7 +91,7 @@ private Calendar generateCalendar(String title, List<Absence> absences) {\n         return calendar;\n     }\n \n-    private Optional<VEvent> toVEvent(Absence absence) {\n+    private Optional<VEvent> toVEvent(Absence absence, ICalType method) {\n \n         final ZonedDateTime startDateTime = absence.getStartDate();\n         final ZonedDateTime endDateTime = absence.getEndDate();\n@@ -124,8 +123,12 @@ private Calendar generateCalendar(String title, List<Absence> absences) {\n \n         event.getProperties().add(new Uid(generateUid(absence)));\n         event.getProperties().add(generateAttendee(absence));\n-        calendarProperties.getOrganizer()\n-            .ifPresent(organizer -> event.getProperties().add(new Organizer(URI.create(\"mailto:\" + organizer))));\n+\n+        if (method == ICalType.CANCELLED) {\n+            event.getProperties().add(new Sequence(1));\n+        }\n+\n+        event.getProperties().add(new Organizer(URI.create(\"mailto:\" + calendarProperties.getOrganizer())));\n \n         return Optional.of(event);\n     }\n@@ -146,4 +149,24 @@ private String generateUid(Absence absence) {\n         final String data = absence.getStartDate() + \"\" + absence.getEndDate() + \"\" + absence.getPerson();\n         return DigestUtils.md5Hex(data).toUpperCase();\n     }\n+\n+    private File generateCalenderFile(String title) {\n+        final File file;\n+        try {\n+            file = File.createTempFile(\"calendar-\", \".ics\");\n+        } catch (IOException e) {\n+            throw new CalendarException(\"Could not generate temp file for \" + title + \" calendar\", e);\n+        }\n+        return file;\n+    }\n+\n+    private File writeCalenderIntoFile(Calendar calendar, File file) {\n+        try (final FileWriter calendarFileWriter = new FileWriter(file)) {\n+            final CalendarOutputter calendarOutputter = new CalendarOutputter();\n+            calendarOutputter.output(calendar, calendarFileWriter);\n+        } catch (ValidationException | IOException e) {\n+            throw new CalendarException(\"iCal calender could not be written to file\", e);\n+        }\n+        return file;\n+    }\n }"
  },
  {
    "sha": "6d0bf292cc5e1536da938a18788afaf4774fc8de",
    "filename": "src/main/java/org/synyx/urlaubsverwaltung/calendar/ICalType.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/main/java/org/synyx/urlaubsverwaltung/calendar/ICalType.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/main/java/org/synyx/urlaubsverwaltung/calendar/ICalType.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/java/org/synyx/urlaubsverwaltung/calendar/ICalType.java?ref=1ceef220d44e2309f8b608e7d382fd432ea3a181",
    "patch": "@@ -0,0 +1,7 @@\n+package org.synyx.urlaubsverwaltung.calendar;\n+\n+public enum ICalType {\n+\n+    PUBLISHED,\n+    CANCELLED\n+}"
  },
  {
    "sha": "c7e712490c1458f14067c8a87759c36c9b37a6a9",
    "filename": "src/main/resources/application-demodata.properties",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/main/resources/application-demodata.properties",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/main/resources/application-demodata.properties",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/main/resources/application-demodata.properties?ref=1ceef220d44e2309f8b608e7d382fd432ea3a181",
    "patch": "@@ -1,5 +1,5 @@\n ########################################################################################################################\n-# Override the standard configuration for development mode                                                             #\n+# Override the standard configuration for demodata mode                                                             #\n ########################################################################################################################\n \n # CACHING --------------------------------------------------------------------------------------------------------------\n@@ -25,5 +25,8 @@ uv.mail.application-url=http://localhost:8080\n uv.mail.sender=sender@example.org\n uv.mail.administrator=administrators@example.org\n \n+# Calendar -------------------------------------------------------------------------------------------------------------\n+uv.calendar.organizer=organizer@example.org\n+\n # ACTUATOR -------------------------------------------------------------------------------------------------------------\n management.health.ldap.enabled=false"
  },
  {
    "sha": "e165a075ccdfe7f90bd0bf82f87b1ea851708c2c",
    "filename": "src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceIT.java",
    "status": "modified",
    "additions": 17,
    "deletions": 8,
    "changes": 25,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceIT.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceIT.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceIT.java?ref=1ceef220d44e2309f8b608e7d382fd432ea3a181",
    "patch": "@@ -447,7 +447,7 @@ void ensureCorrectHolidayReplacementAllowMailIsSent() throws Exception {\n     }\n \n     @Test\n-    void ensureCorrectHolidayReplacementCancellationMailIsSent() throws MessagingException, IOException {\n+    void ensureCorrectHolidayReplacementCancellationMailIsSent() throws Exception {\n \n         final Person person = new Person(\"user\", \"Müller\", \"Lieschen\", \"lieschen@example.org\");\n         final Application application = createApplication(person);\n@@ -463,18 +463,21 @@ void ensureCorrectHolidayReplacementCancellationMailIsSent() throws MessagingExc\n         MimeMessage[] inbox = greenMail.getReceivedMessagesForDomain(holidayReplacement.getEmail());\n         assertThat(inbox.length).isOne();\n \n-        Message msg = inbox[0];\n+        MimeMessage msg = inbox[0];\n         assertThat(msg.getSubject()).contains(\"Mögliche Urlaubsvertretung abgelehnt\");\n         assertThat(new InternetAddress(holidayReplacement.getEmail())).isEqualTo(msg.getAllRecipients()[0]);\n \n         // check content of email\n-        String content = (String) msg.getContent();\n+        String content = readPlainContent(msg);\n         assertThat(content).contains(\"Hallo Mar Teria\");\n         assertThat(content).contains(\"du bist für die Abwesenheit von Lieschen Müller\");\n         assertThat(content).contains(\"im Zeitraum von 18.12.2020 bis 18.12.2020, ganztägig,\");\n         assertThat(content).contains(\"nicht mehr als Vertretung vorgesehen.\");\n         assertThat(content).contains(\"Einen Überblick deiner aktuellen und zukünftigen Vertretungen findest du unter\");\n         assertThat(content).contains(\"/web/application#holiday-replacement\");\n+\n+        final List<DataSource> attachments = getAttachments(msg);\n+        assertThat(attachments.get(0).getName()).contains(\"calendar.ics\");\n     }\n \n     @Test\n@@ -689,7 +692,7 @@ void ensurePersonAndRelevantPersonsGetsANotificationIfNotApplicantCancelledThisA\n     }\n \n     @Test\n-    void ensurePersonGetsANotificationIfOfficeCancelledOneOfHisApplications() throws MessagingException, IOException {\n+    void ensurePersonGetsANotificationIfOfficeCancelledOneOfHisApplications() throws Exception {\n \n         final Person person = new Person(\"user\", \"Müller\", \"Lieschen\", \"lieschen@example.org\");\n \n@@ -716,31 +719,37 @@ void ensurePersonGetsANotificationIfOfficeCancelledOneOfHisApplications() throws\n         MimeMessage[] inboxApplicant = greenMail.getReceivedMessagesForDomain(person.getEmail());\n         assertThat(inboxApplicant.length).isOne();\n \n-        Message msg = inboxApplicant[0];\n+        MimeMessage msg = inboxApplicant[0];\n         assertThat(msg.getSubject()).isEqualTo(\"Dein Antrag wurde storniert\");\n         assertThat(new InternetAddress(person.getEmail())).isEqualTo(msg.getAllRecipients()[0]);\n \n-        String content = (String) msg.getContent();\n+        String content = readPlainContent(msg);\n         assertThat(content).contains(\"Hallo Lieschen Müller\");\n         assertThat(content).contains(\"Marlene Muster hat einen deiner Urlaubsanträge storniert.\");\n         assertThat(content).contains(comment.getText());\n         assertThat(content).contains(comment.getPerson().getNiceName());\n         assertThat(content).contains(\"/web/application/1234\");\n \n+        final List<DataSource> attachments = getAttachments(msg);\n+        assertThat(attachments.get(0).getName()).contains(\"calendar.ics\");\n+\n         // was email sent to relevant person?\n         MimeMessage[] inboxRelevantPerson = greenMail.getReceivedMessagesForDomain(relevantPerson.getEmail());\n         assertThat(inboxRelevantPerson.length).isOne();\n \n-        Message msgRelevantPerson = inboxRelevantPerson[0];\n+        MimeMessage msgRelevantPerson = inboxRelevantPerson[0];\n         assertThat(msgRelevantPerson.getSubject()).isEqualTo(\"Ein Antrag wurde vom Office storniert\");\n         assertThat(new InternetAddress(relevantPerson.getEmail())).isEqualTo(msgRelevantPerson.getAllRecipients()[0]);\n \n-        String contentRelevantPerson = (String) msgRelevantPerson.getContent();\n+        String contentRelevantPerson = readPlainContent(msgRelevantPerson);\n         assertThat(contentRelevantPerson).contains(\"Hallo Relevant Person\");\n         assertThat(contentRelevantPerson).contains(\"Marlene Muster hat den Urlaubsantrag von Lieschen Müller vom 29.05.2020 storniert.\");\n         assertThat(contentRelevantPerson).contains(comment.getText());\n         assertThat(contentRelevantPerson).contains(comment.getPerson().getNiceName());\n         assertThat(contentRelevantPerson).contains(\"/web/application/1234\");\n+\n+        final List<DataSource> attachmentsRelevantPerson = getAttachments(msgRelevantPerson);\n+        assertThat(attachmentsRelevantPerson.get(0).getName()).contains(\"calendar.ics\");\n     }\n \n     @Test"
  },
  {
    "sha": "3a00bf2d9af7de3d7bcfb3f33f415186be174b3c",
    "filename": "src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceTest.java",
    "status": "modified",
    "additions": 31,
    "deletions": 2,
    "changes": 33,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceTest.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceTest.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/test/java/org/synyx/urlaubsverwaltung/application/service/ApplicationMailServiceTest.java?ref=1ceef220d44e2309f8b608e7d382fd432ea3a181",
    "patch": "@@ -8,6 +8,7 @@\n import org.mockito.Mock;\n import org.mockito.junit.jupiter.MockitoExtension;\n import org.springframework.context.MessageSource;\n+import org.synyx.urlaubsverwaltung.absence.TimeSettings;\n import org.synyx.urlaubsverwaltung.application.ApplicationSettings;\n import org.synyx.urlaubsverwaltung.application.domain.Application;\n import org.synyx.urlaubsverwaltung.application.domain.ApplicationComment;\n@@ -77,7 +78,7 @@ void ensureSendsAllowedNotificationToOffice() {\n         when(settingsService.getSettings()).thenReturn(settings);\n \n         final File file = new File(\"\");\n-        when(iCalService.getCalendar(any(), any())).thenReturn(file);\n+        when(iCalService.getCalendar(any(), any(), any())).thenReturn(file);\n \n         when(messageSource.getMessage(any(), any(), any())).thenReturn(\"something\");\n \n@@ -347,7 +348,7 @@ void notifyHolidayReplacementAllow() {\n         when(messageSource.getMessage(\"calendar.mail.holiday-replacement.name\", new Object[]{\"Theo Fritz\"}, Locale.GERMAN)).thenReturn(calendarName);\n \n         final File file = new File(\"\");\n-        when(iCalService.getCalendar(eq(calendarName), any())).thenReturn(file);\n+        when(iCalService.getCalendar(eq(calendarName), any(), any())).thenReturn(file);\n \n         sut.notifyHolidayReplacementAllow(application);\n \n@@ -419,14 +420,26 @@ void notifyHolidayReplacementForApply() {\n     @Test\n     void notifyHolidayReplacementAboutCancellation() {\n \n+        final Settings settings = new Settings();\n+        settings.setTimeSettings(new TimeSettings());\n+        when(settingsService.getSettings()).thenReturn(settings);\n+\n+        final File file = new File(\"\");\n+        when(iCalService.getCalendar(any(), any(), any())).thenReturn(file);\n+\n         final DayLength dayLength = FULL;\n         when(messageSource.getMessage(eq(dayLength.name()), any(), any())).thenReturn(\"FULL\");\n \n+        final Person applicant = new Person();\n+        applicant.setFirstName(\"Thomas\");\n         final Person holidayReplacement = new Person();\n \n         final Application application = new Application();\n+        application.setPerson(applicant);\n         application.setHolidayReplacement(holidayReplacement);\n         application.setDayLength(dayLength);\n+        application.setStartDate(LocalDate.of(2020,10,2));\n+        application.setEndDate(LocalDate.of(2020, 10, 3));\n \n         final Map<String, Object> model = new HashMap<>();\n         model.put(\"application\", application);\n@@ -441,6 +454,8 @@ void notifyHolidayReplacementAboutCancellation() {\n         assertThat(mail.getSubjectMessageKey()).isEqualTo(\"subject.application.holidayReplacement.cancellation\");\n         assertThat(mail.getTemplateName()).isEqualTo(\"notify_holiday_replacement_cancellation\");\n         assertThat(mail.getTemplateModel()).isEqualTo(model);\n+        assertThat(mail.getMailAttachments().get().get(0).getFile()).isEqualTo(file);\n+        assertThat(mail.getMailAttachments().get().get(0).getName()).isEqualTo(\"calendar.ics\");\n     }\n \n     @Test\n@@ -526,11 +541,21 @@ void sendAppliedForLeaveByOfficeNotification() {\n     @Test\n     void sendCancelledByOfficeNotification() {\n \n+        final Settings settings = new Settings();\n+        settings.setTimeSettings(new TimeSettings());\n+        when(settingsService.getSettings()).thenReturn(settings);\n+\n+        final File file = new File(\"\");\n+        when(iCalService.getCalendar(any(), any(), any())).thenReturn(file);\n+\n         final Person person = new Person();\n         final Person office = new Person();\n \n         final Application application = new Application();\n         application.setPerson(person);\n+        application.setDayLength(FULL);\n+        application.setStartDate(LocalDate.of(2020,10,2));\n+        application.setEndDate(LocalDate.of(2020, 10, 3));\n \n         final ApplicationComment comment = new ApplicationComment(person, clock);\n \n@@ -553,10 +578,14 @@ void sendCancelledByOfficeNotification() {\n         assertThat(mails.get(0).getSubjectMessageKey()).isEqualTo(\"subject.application.cancelled.user\");\n         assertThat(mails.get(0).getTemplateName()).isEqualTo(\"cancelled_by_office\");\n         assertThat(mails.get(0).getTemplateModel()).isEqualTo(model);\n+        assertThat(mails.get(0).getMailAttachments().get().get(0).getFile()).isEqualTo(file);\n+        assertThat(mails.get(0).getMailAttachments().get().get(0).getName()).isEqualTo(\"calendar.ics\");\n         assertThat(mails.get(1).getMailAddressRecipients()).hasValue(List.of(person, office));\n         assertThat(mails.get(1).getSubjectMessageKey()).isEqualTo(\"subject.application.cancelled.management\");\n         assertThat(mails.get(1).getTemplateName()).isEqualTo(\"cancelled_by_office_management\");\n         assertThat(mails.get(1).getTemplateModel()).isEqualTo(model);\n+        assertThat(mails.get(1).getMailAttachments().get().get(0).getFile()).isEqualTo(file);\n+        assertThat(mails.get(1).getMailAttachments().get().get(0).getName()).isEqualTo(\"calendar.ics\");\n     }\n \n "
  },
  {
    "sha": "bfc851914d94676189fcdbeb3b7930189a0a3832",
    "filename": "src/test/java/org/synyx/urlaubsverwaltung/calendar/ICalServiceTest.java",
    "status": "modified",
    "additions": 55,
    "deletions": 9,
    "changes": 64,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/test/java/org/synyx/urlaubsverwaltung/calendar/ICalServiceTest.java",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/test/java/org/synyx/urlaubsverwaltung/calendar/ICalServiceTest.java",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/test/java/org/synyx/urlaubsverwaltung/calendar/ICalServiceTest.java?ref=1ceef220d44e2309f8b608e7d382fd432ea3a181",
    "patch": "@@ -4,6 +4,7 @@\n import org.junit.jupiter.api.Test;\n import org.synyx.urlaubsverwaltung.absence.Absence;\n import org.synyx.urlaubsverwaltung.absence.AbsenceTimeConfiguration;\n+import org.synyx.urlaubsverwaltung.absence.AbsenceType;\n import org.synyx.urlaubsverwaltung.absence.TimeSettings;\n import org.synyx.urlaubsverwaltung.period.DayLength;\n import org.synyx.urlaubsverwaltung.period.Period;\n@@ -18,6 +19,7 @@\n import static java.time.format.DateTimeFormatter.ofPattern;\n import static org.assertj.core.api.Assertions.assertThat;\n import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+import static org.synyx.urlaubsverwaltung.calendar.ICalType.CANCELLED;\n import static org.synyx.urlaubsverwaltung.period.DayLength.FULL;\n import static org.synyx.urlaubsverwaltung.period.DayLength.MORNING;\n import static org.synyx.urlaubsverwaltung.period.DayLength.NOON;\n@@ -64,7 +66,6 @@ void getCalendarForPersonForOneFullDay() {\n             .contains(\"X-MICROSOFT-CDO-ALLDAYEVENT:TRUE\")\n             .contains(\"DTSTART;VALUE=DATE:20190326\")\n \n-            .contains(\"ATTENDEE;ROLE=REQ-PARTICIPANT;CN=Marlene Muster:mailto:muster@example.org\")\n             .contains(\"ORGANIZER:mailto:no-reply@example.org\");\n     }\n \n@@ -87,7 +88,6 @@ void getCalendarForPersonForHalfDayMorning() {\n             .contains(\"DTSTART:20190426T080000Z\")\n             .contains(\"DTEND:20190426T120000Z\")\n \n-            .contains(\"ATTENDEE;ROLE=REQ-PARTICIPANT;CN=Marlene Muster:mailto:muster@example.org\")\n             .contains(\"ORGANIZER:mailto:no-reply@example.org\");\n     }\n \n@@ -111,7 +111,6 @@ void getCalendarForPersonForMultipleFullDays() {\n             .contains(\"DTSTART;VALUE=DATE:20190326\")\n             .contains(\"DTEND;VALUE=DATE:20190402\")\n \n-            .contains(\"ATTENDEE;ROLE=REQ-PARTICIPANT;CN=Marlene Muster:mailto:muster@example.org\")\n             .contains(\"ORGANIZER:mailto:no-reply@example.org\");\n     }\n \n@@ -133,28 +132,75 @@ void getCalendarForPersonForHalfDayNoon() {\n             .contains(\"DTSTART:20190526T120000Z\")\n             .contains(\"DTEND:20190526T160000Z\")\n \n-            .contains(\"ATTENDEE;ROLE=REQ-PARTICIPANT;CN=Marlene Muster:mailto:muster@example.org\")\n             .contains(\"ORGANIZER:mailto:no-reply@example.org\");\n     }\n \n     @Test\n-    void getCalendarNoOrganizerIfNotProvided() {\n+    void getCalendarPublishEvent() {\n \n-        final Absence noonAbsence = absence(new Person(\"muster\", \"Muster\", \"Marlene\", \"muster@example.org\"), toDateTime(\"2019-05-26\"), toDateTime(\"2019-05-26\"), NOON);\n+        final Person person = new Person(\"muster\", \"Muster\", \"Marlene\", \"muster@example.org\");\n+        final Absence noonAbsence = absence(person, toDateTime(\"2019-05-26\"), toDateTime(\"2019-05-26\"), NOON);\n \n-        final ICalService sut = new ICalService(new CalendarProperties());\n+        final CalendarProperties calendarProperties = new CalendarProperties();\n+        calendarProperties.setOrganizer(\"no-reply@example.org\");\n+        final ICalService sut = new ICalService(calendarProperties);\n         final File calendar = sut.getCalendar(\"Abwesenheitskalender\", List.of(noonAbsence));\n         assertThat(fileToString(calendar))\n-            .doesNotContain(\"ORGANIZER:mailto:\");\n+            .contains(\"VERSION:2.0\")\n+            .contains(\"CALSCALE:GREGORIAN\")\n+            .contains(\"PRODID:-//Urlaubsverwaltung//iCal4j 1.0//DE\")\n+            .contains(\"X-MICROSOFT-CALSCALE:GREGORIAN\")\n+            .contains(\"X-WR-CALNAME:Abwesenheitskalender\")\n+            .contains(\"REFRESH-INTERVAL:P1D\")\n+\n+            .contains(\"UID:497ED5D042F718878138A3E2F8C3C35C\")\n+            .contains(\"SUMMARY:Marlene Muster abwesend\")\n+            .contains(\"DTSTART:20190526T120000Z\")\n+            .contains(\"DTEND:20190526T160000Z\")\n+            .contains(\"ORGANIZER:mailto:no-reply@example.org\")\n+            .contains(\"ATTENDEE;ROLE=REQ-PARTICIPANT;CN=Marlene Muster:mailto:muster@example.org\");\n+    }\n+\n+    @Test\n+    void getCalendarCancelledEvent() {\n+\n+        final Person person = new Person(\"muster\", \"Muster\", \"Marlene\", \"muster@example.org\");\n+        final Absence noonAbsence = absence(person, toDateTime(\"2019-05-26\"), toDateTime(\"2019-05-26\"), NOON);\n+\n+        final CalendarProperties calendarProperties = new CalendarProperties();\n+        calendarProperties.setOrganizer(\"no-reply@example.org\");\n+        final ICalService sut = new ICalService(calendarProperties);\n+        final File calendar = sut.getCalendar(\"Abwesenheitskalender\", List.of(noonAbsence), CANCELLED);\n+        assertThat(fileToString(calendar))\n+            .contains(\"VERSION:2.0\")\n+            .contains(\"CALSCALE:GREGORIAN\")\n+            .contains(\"PRODID:-//Urlaubsverwaltung//iCal4j 1.0//DE\")\n+            .contains(\"X-MICROSOFT-CALSCALE:GREGORIAN\")\n+            .contains(\"X-WR-CALNAME:Abwesenheitskalender\")\n+            .contains(\"REFRESH-INTERVAL:P1D\")\n+            .contains(\"METHOD:CANCEL\")\n+\n+            .contains(\"SUMMARY:Marlene Muster abwesend\")\n+            .contains(\"DTSTART:20190526T120000Z\")\n+            .contains(\"DTEND:20190526T160000Z\")\n+            .contains(\"UID:497ED5D042F718878138A3E2F8C3C35C\")\n+            .contains(\"SEQUENCE:1\")\n+\n+            .contains(\"ORGANIZER:mailto:no-reply@example.org\")\n+            .contains(\"ATTENDEE;ROLE=REQ-PARTICIPANT;CN=Marlene Muster:mailto:muster@example.org\");\n     }\n \n     private Absence absence(Person person, LocalDate start, LocalDate end, DayLength length) {\n+        return absence(person, start, end, length, AbsenceType.DEFAULT);\n+    }\n+\n+    private Absence absence(Person person, LocalDate start, LocalDate end, DayLength length, AbsenceType absenceType) {\n         final TimeSettings timeSettings = new TimeSettings();\n         timeSettings.setTimeZoneId(\"Etc/UTC\");\n         final AbsenceTimeConfiguration timeConfig = new AbsenceTimeConfiguration(timeSettings);\n \n         final Period period = new Period(start, end, length);\n-        return new Absence(person, period, timeConfig);\n+        return new Absence(person, period, timeConfig, absenceType);\n     }\n \n     private String fileToString(File file) {"
  },
  {
    "sha": "2ad52da1214377c5c6b40af877ea215594b404fd",
    "filename": "src/test/resources/application.properties",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/synyx/urlaubsverwaltung/blob/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/test/resources/application.properties",
    "raw_url": "https://github.com/synyx/urlaubsverwaltung/raw/1ceef220d44e2309f8b608e7d382fd432ea3a181/src/test/resources/application.properties",
    "contents_url": "https://api.github.com/repos/synyx/urlaubsverwaltung/contents/src/test/resources/application.properties?ref=1ceef220d44e2309f8b608e7d382fd432ea3a181",
    "patch": "@@ -12,6 +12,9 @@ uv.mail.application-url=https://localhost:8080\n uv.mail.sender=sender@example.org\n uv.mail.administrator=administrators@example.org\n \n+# CALENDAR\n+uv.calendar.organizer=organizer@example.org\n+\n # VIEW\n spring.mvc.view.prefix=/WEB-INF/jsp/\n spring.mvc.view.suffix=.jsp"
  }
]
