[
  {
    "sha": "fb856640104111a5c26b3f753b32e3c85379a3be",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/actor/Actor.kt",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/actor/Actor.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/actor/Actor.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/actor/Actor.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.actor\n+\n+import org.kopi.galite.ui.vaadin.base.Styles\n+\n+import com.vaadin.flow.component.HasEnabled\n+import com.vaadin.flow.component.Key\n+import com.vaadin.flow.component.KeyModifier\n+import com.vaadin.flow.component.button.Button\n+import com.vaadin.flow.component.html.Image\n+\n+/**\n+ * The actor component\n+ *\n+ * @param caption The actor caption.\n+ * @param description The actor help.\n+ * @param menu The menu to which this actor belongs to.\n+ * @param icon The actor icon.\n+ * @param acceleratorKey The accelerator key.\n+ * @param modifiersKey The modifiers key.\n+ */\n+open class Actor(val caption: String?,\n+                 description: String?,\n+                 val menu: String,\n+                 val icon: String?,\n+                 val acceleratorKey: Key,\n+                 val modifiersKey: KeyModifier?) : Button(), HasEnabled {\n+\n+  //private val listeners: List<ActionListener>? = null\n+\n+  init {\n+    className = Styles.ACTOR\n+\n+    super.setText(caption)\n+\n+    if (icon != null) {\n+      val img = Image()\n+      img.src = icon\n+      super.setIcon(img)\n+    }\n+\n+    if (modifiersKey != null) {\n+      super.addClickShortcut(acceleratorKey, modifiersKey)\n+    } else {\n+      super.addClickShortcut(acceleratorKey)\n+    }\n+  }\n+}"
  },
  {
    "sha": "0e293b6bebacb0783590df35e9f8703036819191",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/BackgroundThreadHandler.kt",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/BackgroundThreadHandler.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/BackgroundThreadHandler.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/BackgroundThreadHandler.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import com.vaadin.flow.component.Component\n+import com.vaadin.flow.server.Command\n+\n+/**\n+ * Collects some utilities for background threads in a vaadin application.\n+ *\n+ *\n+ * Note that all performed background tasks are followed by an client UI update\n+ * using the push mechanism incorporated with vaadin.\n+ *\n+ */\n+object BackgroundThreadHandler {\n+\n+  /**\n+   * Exclusive access to the UI from a background thread to perform some updates.\n+   * @param command the command which accesses the UI.\n+   */\n+  fun Component.access(command: Command) {\n+    ui.ifPresent { myUi ->\n+      myUi.access(command)\n+    }\n+  }\n+}"
  },
  {
    "sha": "e3bc04344d6138593dfdbf9a61def5059d289679",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/Image.kt",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/Image.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/Image.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/Image.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import org.kopi.galite.base.Image\n+\n+/**\n+ * The vaadin implementation of an image model.\n+ *\n+ * @param resource The resource file attached to this image.\n+ */\n+class Image(val resource: String) : Image {\n+  //---------------------------------------------------\n+  // IMAGE IMPLEMENTATION\n+  //---------------------------------------------------\n+\n+  override fun getWidth(): Int {\n+    return -1\n+  }\n+\n+  override fun getHeight(): Int {\n+    return -1\n+  }\n+\n+  override fun getDescription(): String {\n+    TODO()\n+  }\n+\n+  override fun getScaledInstance(width: Int,\n+                                 height: Int,\n+                                 hints: Int): Image {\n+    // FIXME: return the scaled image from theme images\n+    return this\n+  }\n+}"
  },
  {
    "sha": "b2718b525265911d37e459b79526b07da302441a",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/LocalizedMessages.kt",
    "status": "added",
    "additions": 214,
    "deletions": 0,
    "changes": 214,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/LocalizedMessages.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/LocalizedMessages.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/LocalizedMessages.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,214 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+/**\n+ * Localized messages. Each message has it own unique key.\n+ */\n+object LocalizedMessages {\n+  //---------------------------------------------------\n+  // LOCALIZED MESSAGES\n+  //---------------------------------------------------\n+  /**\n+   * Returns the localized value of the given key.\n+   * @param locale The value locale.\n+   * @param key The value key.\n+   * @return The localized value of the given key.\n+   */\n+  fun getMessage(locale: String, key: String): String {\n+    return format(messages[locale]!![key])\n+  }\n+\n+  /**\n+   * Returns the localized value of the given key.\n+   * @param locale The value locale.\n+   * @param key The value key.\n+   * @param params The message parameters.\n+   * @return The localized value of the given key.\n+   */\n+  fun getMessage(locale: String, key: String, vararg params: Any): String {\n+    return format(messages[locale]!![key], *params)\n+  }\n+\n+  /**\n+   * Properties initialization.\n+   */\n+  private fun initProperties() {\n+    messages[\"fr_FR\"] = frenchMessages\n+    messages[\"en_GB\"] = englishMessages\n+    messages[\"de_AT\"] = germanMessages\n+    messages[\"ar_TN\"] = arabicMessages\n+  }\n+\n+  /**\n+   * Messages initialization.\n+   */\n+  private val frenchMessages: Map<String, String>\n+    get() = mapOf(\n+            \"00001\" to \"Erreur de saisie: Aucune valeur appropriée.\",\n+            \"00002\" to \"Erreur de saisie: Valeurs multiples.\",\n+            \"00003\" to \"Erreur de saisie: Ce n''est pas une date valide.\",\n+            \"00004\" to \"Erreur de saisie: Ce n''est pas un entier.\",\n+            \"00005\" to \"Erreur de saisie: Ce n''est pas un mois valide.\",\n+            \"00006\" to \"Erreur de saisie: Ce nombre n''est pas valide.\",\n+            \"00007\" to \"Erreur de saisie: Ce n''est pas une heure valide.\",\n+            \"00008\" to \"Erreur de saisie: Ce n''est pas une semaine valide.\",\n+            \"00009\" to \"Erreur de saisie: Ce nombre est trop grand (max {0}).\",\n+            \"00010\" to \"Erreur de saisie: Ce nombre est trop grand.\",\n+            \"00011\" to \"Erreur de saisie: Trop de chiffres après la virgule (max. {0}).\",\n+            \"00012\" to \"Ce nombre est trop petit (min {0}).\",\n+            \"00013\" to \"Erreur de saisie: texte trop long.\",\n+            \"00015\" to \"Pas (plus) de données.\",\n+            \"00016\" to \"Aucune valeur appropriée dans {0}.\",\n+            \"00017\" to \"La valeur de l''enregistrement a changé.\",\n+            \"00018\" to \"L''enregistrement a été éffacé.\",\n+            \"00019\" to \"Cet enregistrement ne peut pas etre effacé.\",\n+            \"00022\" to \"Aucune valeur appropriée trouvée.\",\n+            \"00023\" to \"Ce champ doit être rempli.\",\n+            \"00024\" to \"Cette page n'est pas accessible.\",\n+            \"00025\" to \"Commande non autorisée.\"\n+    )\n+\n+  /**\n+   * Messages initialization.\n+   */\n+  private val englishMessages: Map<String, String>\n+    get() = mapOf(\n+            \"00001\" to \"Data entry error: No matching value.\",\n+            \"00002\" to \"Data entry error: More than one matching value.\",\n+            \"00003\" to \"Data entry error: This is not a valid date value.\",\n+            \"00004\" to \"Data entry error: This is not an integer.\",\n+            \"00005\" to \"Data entry error: This is not a valid month value.\",\n+            \"00006\" to \"Data entry error: This in not a number.\",\n+            \"00007\" to \"Data entry error: This is not a valid time value.\",\n+            \"00008\" to \"Data entry error: This is not a valid week value.\",\n+            \"00009\" to \"Data entry error: This number is to big (max {0}).\",\n+            \"00010\" to \"Data entry error: This number is to big\",\n+            \"00011\" to \"Data entry error: Too many digit after comma (max. {0}).\",\n+            \"00012\" to \"Data entry error: This number is to small (min. {0}).\",\n+            \"00013\" to \"Data entry error: This text is too long.\",\n+            \"00015\" to \"No (more) data.\",\n+            \"00016\" to \"No matching value in {0}\",\n+            \"00017\" to \"The value of the record has changed.\",\n+            \"00018\" to \"The record was deleted.\",\n+            \"00019\" to \"This record can''t be deleted.\",\n+            \"00022\" to \"No matching value found.\",\n+            \"00023\" to \"This field must be filled.\",\n+            \"00024\" to \"This page is not accessible.\",\n+            \"00025\" to \"Command not accessible.\"\n+    )\n+\n+  /**\n+   * Properties initialization.\n+   */\n+  private val germanMessages: Map<String, String>\n+    get() = mapOf(\n+            \"00001\" to \"Eingabefehler: kein entsprechender Wert.\",\n+            \"00002\" to \"Eingabefehler: Eingabe nicht eindeutig.\",\n+            \"00003\" to \"Eingabefehler: Eingabe ist kein gültiges Datum.\",\n+            \"00004\" to \"Eingabefehler: Eingabe ist nicht ganzzahlig.\",\n+            \"00005\" to \"Eingabefehler: Eingabe ist kein gültiges Monat.\",\n+            \"00006\" to \"Eingabefehler: Formatfehler bei Eingabe.\",\n+            \"00007\" to \"Eingabefehler: Eingabe ist keine gültige Uhrzeit.\",\n+            \"00008\" to \"Eingabefehler: Eingabe ist keine gültige Woche.\",\n+            \"00009\" to \"Eingabefehler: Wert ist zu groß (max {0}).\",\n+            \"00010\" to \"Eingabefehler: Wert ist zu groß\",\n+            \"00011\" to \"Eingabefehler: zu viele Nachkommastellen (max {0}).\",\n+            \"00012\" to \"Eingabefehler: Wert ist zu klein (min {0}).\",\n+            \"00013\" to \"Eingabefehler: Text ist zu lang.\",\n+            \"00015\" to \"Keine (weiteren) Datensätze.\",\n+            \"00016\" to \"Kein entsprechender Eintrag in {0}\",\n+            \"00017\" to \"Datensatz wurde in der Zwischenzeit verändert.\",\n+            \"00018\" to \"Datensatz wurde in der Zwischenzeit gelöscht.\",\n+            \"00019\" to \"Dieser Datensatz kann nicht gelöscht werden.\",\n+            \"00022\" to \"Kein entsprechender Eintrag gefunden.\",\n+            \"00023\" to \"Dieses Feld muß gefüllt werden.\",\n+            \"00024\" to \"Auf diese Seite kann nicht zugegriffen werden.\",\n+            \"00025\" to \"Kommando nicht erlaubt.\"\n+    )\n+\n+  /**\n+   * Properties initialization.\n+   */\n+  private val arabicMessages: Map<String, String>\n+    get() = mapOf(\n+            \"00001\" to \"خطأ تسجيل : لا توجد أية قيمة مناسبة\",\n+            \"00002\" to \"خطأ تسجيل : القيم متعددة\",\n+            \"00003\" to \"خطأ تسجيل : هذا التاريخ غير صحيح\",\n+            \"00004\" to \"خطأ تسجيل : انه ليس بعدد صحيح\",\n+            \"00005\" to \"خطأ تسجيل : هذا الشهر غير صحيح\",\n+            \"00006\" to \"خطأ تسجيل :هذا العددغير صحيح\",\n+            \"00007\" to \"خطأ تسجيل :هذه الساعة غير صحيحة\",\n+            \"00008\" to \"خطأ تسجبل : هذا الاأسبوع غير صحيح\",\n+            \"00009\" to \"خطأ تسجيل : هذا  الرقم كبير جدا (الأقصى{0})\",\n+            \"00010\" to \"خطأ تسجيل : هذا االرقم كبير جدا.\",\n+            \"00011\" to \"خطأ تسجيل :الأرقام كثيرة بعد الفاصلة(الأقصى{0})\",\n+            \"00012\" to \"هذا العدد صغير جدا(الأدنى {0})\",\n+            \"00013\" to \"خطأ تسجيل : النص طويل جدا\",\n+            \"00015\" to \"لا يوجد (أكثر) بيانات\",\n+            \"00016\" to \"لا توجد القيمة مناسبة في {0}.\",\n+            \"00017\" to \"قيمة التسجيل تغيرت\",\n+            \"00018\" to \"وقع شطب  التسجيل.\",\n+            \"00019\" to \"لا يمكن  شطب  هذا التسجيل\",\n+            \"00022\" to \"لا توجد أية قيمة مناسبة\",\n+            \"00023\" to \"يجب ملء هذا الموقع.\",\n+            \"00024\" to \"لا يمكن الدخول الى هذه الصفحة\",\n+            \"00025\" to \"الطلبية  غير مسموح بها.\"\n+    )\n+\n+  /**\n+   * A replacement for java.text.MessageFormat.format().\n+   * @param format The text to be formatted.\n+   * @param args The format parameters.\n+   * @return The formatted string.\n+   */\n+  private fun format(format: String?, vararg args: Any): String {\n+    val sb = StringBuilder()\n+    var cur = 0\n+    val len = format!!.length\n+    while (cur < len) {\n+      val fi = format.indexOf('{', cur)\n+      cur = if (fi != -1) {\n+        sb.append(format.substring(cur, fi))\n+        val si = format.indexOf('}', fi)\n+        if (si != -1) {\n+          val nStr = format.substring(fi + 1, si)\n+          val i = nStr.toInt()\n+          sb.append(args[i])\n+          si + 1\n+        } else {\n+          sb.append(format.substring(fi))\n+          break\n+        }\n+      } else {\n+        sb.append(format.substring(cur, len))\n+        break\n+      }\n+    }\n+    return sb.toString()\n+  }\n+\n+  //---------------------------------------------------\n+  // DATA MEMBERS\n+  //---------------------------------------------------\n+  private var messages = mutableMapOf<String, Map<String, String>>()\n+\n+  init {\n+    initProperties()\n+  }\n+}"
  },
  {
    "sha": "88ead7b5e4252362630ee09599cb7a27dfbac0b1",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/LocalizedProperties.kt",
    "status": "added",
    "additions": 257,
    "deletions": 0,
    "changes": 257,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/LocalizedProperties.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/LocalizedProperties.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/LocalizedProperties.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,257 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+/**\n+ * Localized properties.\n+ */\n+object LocalizedProperties {\n+  //---------------------------------------------------\n+  // LOCALIZED STRINGS\n+  //---------------------------------------------------\n+  /**\n+   * Returns the localized value of the given key.\n+   * @param locale The value locale.\n+   * @param key The value key.\n+   * @return The localized value of the given key.\n+   */\n+  fun getString(locale: String?, key: String): String? {\n+    if (locale == null) {\n+      return \"\"\n+    }\n+    if (properties == null) {\n+      properties = HashMap()\n+    }\n+    if (properties!![locale] == null) {\n+      initProperties()\n+    }\n+    return properties!![locale]!![key]\n+  }\n+\n+  /**\n+   * Properties initialization.\n+   */\n+  private fun initProperties() {\n+    properties!![\"fr_FR\"] = frenchProperties\n+    properties!![\"en_GB\"] = englishProperties\n+    properties!![\"de_AT\"] = germanProperties\n+    properties!![\"ar_TN\"] = arabicProperties\n+  }\n+\n+  /**\n+   * Properties initialization.\n+   */\n+  private val frenchProperties: HashMap<String, String>\n+    get() {\n+      val properties: HashMap<String, String> = HashMap()\n+      properties[\"OK\"] = \"Oui\"\n+      properties[\"CLOSE\"] = \"Fermer\"\n+      properties[\"CANCEL\"] = \"Annuler\"\n+      properties[\"NO\"] = \"Non\"\n+      properties[\"position-number\"] = \"Numéro de position\"\n+      properties[\"TO\"] = \"à\"\n+      properties[\"welcomeText\"] = \"Bienvenue\"\n+      properties[\"windowsText\"] = \"Changer de fenêtre\"\n+      properties[\"informationText\"] = \"Veuillez saisir votre nom d'utilisateur et votre mot de passe.\"\n+      properties[\"usernameLabel\"] = \"Nom d'utilisateur:\"\n+      properties[\"passwordLabel\"] = \"Mot de passe:\"\n+      properties[\"languageLabel\"] = \"Langue:\"\n+      properties[\"loginText\"] = \"Connexion\"\n+      properties[\"logoutText\"] = \"Déconnexion\"\n+      properties[\"admin\"] = \"Admin\"\n+      properties[\"support\"] = \"Support\"\n+      properties[\"help\"] = \"Aide\"\n+      properties[\"about\"] = \" A propos\"\n+      properties[\"BROWSE\"] = \"Parcourir\"\n+      properties[\"UPLOAD\"] = \"Télécharger\"\n+      properties[\"UPTITLE\"] = \"Choisir un fichier\"\n+      properties[\"UPHELP\"] = \"Cliquez sur Parcourir pour choisir un fichier de votre ordinateur\"\n+      properties[\"Error\"] = \"Erreur\"\n+      properties[\"Warning\"] = \"Attention\"\n+      properties[\"Notice\"] = \"Information\"\n+      properties[\"Question\"] = \"Question\"\n+      // modifiers\n+      properties[\"alt\"] = \"Alt\"\n+      properties[\"control\"] = \"Ctrl\"\n+      properties[\"meta\"] = \"Méta\"\n+      properties[\"shift\"] = \"Maj\"\n+      // key codes\n+      properties[\"enter\"] = \"Entrer\"\n+      properties[\"pgdn\"] = \"Page suivante\"\n+      properties[\"pgup\"] = \"Page précédente\"\n+      properties[\"home\"] = \"Origine\"\n+      properties[\"end\"] = \"Fin\"\n+      properties[\"escape\"] = \"Echappe\"\n+      // actors menu tooltip\n+      properties[\"actorsMenuHelp\"] = \"Affiche le menu associé à ce formulaire\"\n+      return properties\n+    }\n+\n+  /**\n+   * Properties initialization.\n+   */\n+  private val englishProperties: HashMap<String, String>\n+    get() {\n+      val properties: HashMap<String, String> = HashMap()\n+      properties[\"OK\"] = \"Yes\"\n+      properties[\"CLOSE\"] = \"Close\"\n+      properties[\"CANCEL\"] = \"Cancel\"\n+      properties[\"NO\"] = \"No\"\n+      properties[\"position-number\"] = \"Position number\"\n+      properties[\"TO\"] = \"to\"\n+      properties[\"welcomeText\"] = \"Welcome to\"\n+      properties[\"windowsText\"] = \"Switch window\"\n+      properties[\"informationText\"] = \"Please enter your user name and password.\"\n+      properties[\"usernameLabel\"] = \"User Name:\"\n+      properties[\"passwordLabel\"] = \"Password:\"\n+      properties[\"languageLabel\"] = \"Language:\"\n+      properties[\"loginText\"] = \"Log In\"\n+      properties[\"logoutText\"] = \"Log Out\"\n+      properties[\"admin\"] = \"Admin\"\n+      properties[\"support\"] = \"Support\"\n+      properties[\"help\"] = \"Help\"\n+      properties[\"about\"] = \" About\"\n+      properties[\"BROWSE\"] = \"browse\"\n+      properties[\"UPLOAD\"] = \"Upload\"\n+      properties[\"UPTITLE\"] = \"Choose a file\"\n+      properties[\"UPHELP\"] = \"Click Browse to choose a file from your computer\"\n+      properties[\"Error\"] = \"Error\"\n+      properties[\"Warning\"] = \"Warning\"\n+      properties[\"Notice\"] = \"Notice\"\n+      properties[\"Question\"] = \"Question\"\n+      // modifiers\n+      properties[\"alt\"] = \"Alt\"\n+      properties[\"control\"] = \"Ctrl\"\n+      properties[\"meta\"] = \"Meta\"\n+      properties[\"shift\"] = \"Shift\"\n+      // key codes\n+      properties[\"enter\"] = \"Enter\"\n+      properties[\"pgdn\"] = \"Page down\"\n+      properties[\"pgup\"] = \"Page up\"\n+      properties[\"home\"] = \"Home\"\n+      properties[\"end\"] = \"End\"\n+      properties[\"escape\"] = \"Escape\"\n+      // actors menu tooltip\n+      properties[\"actorsMenuHelp\"] = \"Displays the menu associated with this form\"\n+      return properties\n+    }\n+\n+  /**\n+   * Properties initialization.\n+   */\n+  private val germanProperties: HashMap<String, String>\n+    get() {\n+      val properties = HashMap<String, String>()\n+      properties[\"OK\"] = \"Ja\"\n+      properties[\"CLOSE\"] = \"Schließen\"\n+      properties[\"CANCEL\"] = \"Abbrechen\"\n+      properties[\"NO\"] = \"Nein\"\n+      properties[\"position-number\"] = \"Positionszahl\"\n+      properties[\"TO\"] = \"von\"\n+      properties[\"welcomeText\"] = \"Willkommen\"\n+      properties[\"windowsText\"] = \"Fenster wechseln\"\n+      properties[\"informationText\"] = \"Bitte geben Sie Ihren Benutzer und Ihr kennwort ein.\"\n+      properties[\"usernameLabel\"] = \"Benutzer:\"\n+      properties[\"passwordLabel\"] = \"Kennwort:\"\n+      properties[\"languageLabel\"] = \"Sprache:\"\n+      properties[\"loginText\"] = \"Einloggen\"\n+      properties[\"logoutText\"] = \"Austragen\"\n+      properties[\"admin\"] = \"Verwaltung\"\n+      properties[\"support\"] = \"Unterstützung\"\n+      properties[\"help\"] = \"Hilfe\"\n+      properties[\"about\"] = \" Über\"\n+      properties[\"BROWSE\"] = \"Blättern\"\n+      properties[\"UPLOAD\"] = \"Hochladen\"\n+      properties[\"UPTITLE\"] = \"Datei auswählen\"\n+      properties[\"UPHELP\"] = \"Klicken Sie auf Durchsuchen, um eine Datei von Ihrem Computer zu wählen\"\n+      properties[\"Error\"] = \"Fehler\"\n+      properties[\"Warning\"] = \"Warnung\"\n+      properties[\"Notice\"] = \"Achtung\"\n+      properties[\"Question\"] = \"Frage\"\n+      // modifiers\n+      properties[\"alt\"] = \"Alt\"\n+      properties[\"control\"] = \"Strg\"\n+      properties[\"meta\"] = \"Meta\"\n+      properties[\"shift\"] = \"Umschalt\"\n+      // key codes\n+      properties[\"enter\"] = \"Eingabe\"\n+      properties[\"pgdn\"] = \"Bild ab\"\n+      properties[\"pgup\"] = \"Bild auf\"\n+      properties[\"home\"] = \"Pos 1\"\n+      properties[\"end\"] = \"Ende\"\n+      properties[\"escape\"] = \"ESC\"\n+      // actors menu tooltip\n+      properties[\"actorsMenuHelp\"] = \"Zeigt das Menü mit diesem Formular verknüpft\"\n+      return properties\n+    }\n+\n+  /**\n+   * Properties initialization.\n+   */\n+  private val arabicProperties: HashMap<String, String>\n+    get() {\n+      val properties: HashMap<String, String> = HashMap()\n+      properties[\"OK\"] = \"نعم\"\n+      properties[\"CLOSE\"] = \"غلق\"\n+      properties[\"CANCEL\"] = \"الغاء\"\n+      properties[\"NO\"] = \"لا\"\n+      properties[\"position-number\"] = \"رقم الموضع\"\n+      properties[\"TO\"] = \"إلى\"\n+      properties[\"welcomeText\"] = \"مرحباً\"\n+      properties[\"windowsText\"] = \"تبديل نافذة\"\n+      properties[\"informationText\"] = \"الرجاء إدخال إسم المستخدم وكلمة السر.\"\n+      properties[\"usernameLabel\"] = \"إسم المستخدم:\"\n+      properties[\"passwordLabel\"] = \"كلمة السر:\"\n+      properties[\"languageLabel\"] = \"الغة:\"\n+      properties[\"loginText\"] = \"تسجيل الدخول\"\n+      properties[\"logoutText\"] = \"تسجيل الخروج\"\n+      properties[\"admin\"] = \"الإدارة\"\n+      properties[\"support\"] = \"دعم\"\n+      properties[\"help\"] = \"مساعدة\"\n+      properties[\"about\"] = \" حول\"\n+      properties[\"BROWSE\"] = \"تصفح\"\n+      properties[\"UPLOAD\"] = \"تحميل\"\n+      properties[\"UPTITLE\"] = \" اختيار ملف\"\n+      properties[\"UPHELP\"] = \"انقر على تصفح لاختيار ملف من جهاز الكمبيوتر الخاص بك\"\n+      properties[\"Error\"] = \"خطأ\"\n+      properties[\"Warning\"] = \"انتباه\"\n+      properties[\"Notice\"] = \"معلومة\"\n+      properties[\"Question\"] = \"سؤال\"\n+      //!!! not translated\n+      // modifiers\n+      properties[\"alt\"] = \"Alt\"\n+      properties[\"control\"] = \"Ctrl\"\n+      properties[\"meta\"] = \"Meta\"\n+      properties[\"shift\"] = \"Shift\"\n+      // key codes\n+      properties[\"enter\"] = \"Enter\"\n+      properties[\"pgdn\"] = \"Page down\"\n+      properties[\"pgup\"] = \"Page up\"\n+      properties[\"home\"] = \"Home\"\n+      properties[\"end\"] = \"End\"\n+      properties[\"escape\"] = \"Escape\"\n+      // actors menu tooltip\n+      properties[\"actorsMenuHelp\"] = \"يعرض القائمة المقترنة مع هذه النافذة\"\n+      return properties\n+    }\n+\n+  //---------------------------------------------------\n+  // DATA MEMBERS\n+  //---------------------------------------------------\n+  private var properties: HashMap<String, HashMap<String, String>?>? = null\n+}"
  },
  {
    "sha": "2945734f415783b6b56a2153bdd2b7051d8b466e",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/ResourcesUtil.kt",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/ResourcesUtil.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/ResourcesUtil.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/ResourcesUtil.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+/**\n+ * Resources utilities.\n+ */\n+object ResourcesUtil {\n+  //---------------------------------------------------\n+// IMPLEMENTATIONS\n+//---------------------------------------------------\n+  /**\n+   * Returns the resource simple name from its application URI.\n+   * A theme resource URI have this general form : ${APPLICATION_PATH}/VAADIN/themes/${theme}/name.extension.\n+   * What we want is to retrieve the resource name.\n+   * @param uri The resource application URI.\n+   * @return The simple name of the resource.\n+   */\n+  fun getResourceName(uri: String): String {\n+    // look for the last /\n+    val lastSlashIndex = uri.lastIndexOf('/')\n+    // look for the last .\n+    val lastDotIndex = uri.lastIndexOf('.')\n+    return when {\n+      lastDotIndex == -1 && lastSlashIndex == -1 -> uri\n+      lastDotIndex != -1 && lastSlashIndex != 1 ->\n+        // found it is OK now, the resource name is between the the / and the .\n+        uri.substring(lastSlashIndex + 1, lastDotIndex)\n+      lastDotIndex != -1 && lastSlashIndex == 1 ->\n+        // no / found, the resource name starts from the beginning.\n+        uri.substring(0, lastDotIndex)\n+      else ->\n+        // no . found take it until the end\n+        uri.substring(lastSlashIndex)\n+    }\n+  }\n+\n+  //---------------------------------------------------\n+  // DATA MEMBERS\n+  //---------------------------------------------------\n+  private const val THEME_RESOURCE_PREFIX = \"theme://resource/\"\n+}"
  },
  {
    "sha": "2de61df82b84cc5bab4042901aa820c63a755d01",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/ShortcutAction.kt",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/ShortcutAction.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/ShortcutAction.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/ShortcutAction.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import com.vaadin.flow.component.Key\n+import com.vaadin.flow.component.KeyModifier\n+\n+/**\n+ * A shortcut action represented by its key code and modifiers.\n+ *\n+ * @param caption The action caption.\n+ * @param key The action key code.\n+ * @param modifiers The action modifiers key.\n+ */\n+abstract class ShortcutAction(protected val caption: String,\n+                              protected val key: Key,\n+                              vararg modifiers: KeyModifier\n+) {\n+\n+  protected val modifierMask: Int = createModifierMask(modifiers)\n+\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+  /**\n+   * Performs the action handled by this shortcut.\n+   */\n+  abstract fun performAction()\n+\n+  /**\n+   * Creates the action key.\n+   * @return The action key.\n+   */\n+  fun getKey(): String {\n+    // key is based on key & modifiers\n+    return createKey(key, modifierMask)\n+  }\n+\n+  /**\n+   * Creates the modifier mask of this shortcut action.\n+   * @param modifiers The modifiers key.\n+   * @return The modifier mask to be used.\n+   */\n+  protected fun createModifierMask(modifiers: Array<out KeyModifier>?): Int {\n+    var modifiersMask = 0\n+    if (modifiers != null) {\n+      for (i in modifiers.indices) {\n+        when (modifiers[i]) {\n+          //Key.ALT -> modifiersMask = modifiersMask or KeyboardListener.MODIFIER_ALT TODO\n+          //Key.CONTROL -> modifiersMask = modifiersMask or KeyboardListener.MODIFIER_CTRL TODO\n+          //Key.SHIFT -> modifiersMask = modifiersMask or KeyboardListener.MODIFIER_SHIFT TODO\n+          //Key.WIN_KEY_LEFT_META -> modifiersMask = modifiersMask or KeyboardListener.MODIFIER_META TODO\n+          else -> {\n+          }\n+        }\n+      }\n+    }\n+    return modifiersMask\n+  }\n+\n+  companion object {\n+    /**\n+     * Creates a unique key for a key code and a modifier mask.\n+     *\n+     * @param keyCode The key code.\n+     * @param modifierMask The modifier mask\n+     * @return The unique key.\n+     */\n+    fun createKey(keyCode: Key, modifierMask: Int): String = \"$keyCode-$modifierMask\"\n+  }\n+}"
  },
  {
    "sha": "da4bb9845fb1ae8f027cc720b3ab8da574e31db1",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/Styles.kt",
    "status": "added",
    "additions": 148,
    "deletions": 0,
    "changes": 148,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/Styles.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/Styles.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/Styles.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,148 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+/**\n+ * Styles constants.\n+ */\n+object Styles {\n+  //---------------------------------------------------\n+  // DATA MEMBERS\n+  //---------------------------------------------------\n+  const val MAIN_WINDOW =                     \"k-main-window\"\n+  const val MAIN_WINDOW_TAB_PANEL =           \"k-main-window-tab\"\n+  const val WELCOME_VIEW =                    \"k-welcome-view\"\n+  const val WINDOW =                          \"k-window\"\n+  const val WINDOW_ERROR =                    \"k-window-error\"\n+  const val WINDOW_TITLE =                    \"k-window-title\"\n+  const val WINDOW_TITLE_IMAGE =              \"k-window-title-image\"\n+  const val WINDOW_VIEW =                     \"k-window-view\"\n+  const val WINDOW_VIEW_ACTORS =              \"k-window-view-actors\"\n+  const val WINDOW_VIEW_CONTENT =             \"k-window-view-content\"\n+  const val WINDOW_VIEW_CONTENT_WRAPPER =     \"k-window-view-content-wrapper\"\n+  const val WINDOW_VIEW_FOOTER =              \"k-window-view-footer\"\n+  const val WINDOW_VIEW_FOOTER_INFO =         \"k-window-view-footer-info\"\n+  const val WINDOW_VIEW_FOOTER_STAT =         \"k-window-view-footer-stat\"\n+  const val ACTOR =                           \"k-actor\"\n+  const val ACTOR_ANCHOR =                    \"k-actor-anchor\"\n+  const val ACTOR_IMAGE =                     \"k-actor-icon\"\n+  const val ACTOR_LABEL =                     \"k-actor-label\"\n+  const val INPUT_BUTTON =                    \"k-input-button\"\n+  const val INPUT_BUTTON_PRIMARY =            \"k-input-button-primary\"\n+  const val LOGIN_WINDOW =                    \"k-loginBoxShadow\"\n+  const val LOGIN_BOX =                       \"k-loginBox\"\n+  const val LOGIN_BOX_IMAGE =                 \"k-loginBox-image\"\n+  const val LOGIN_BOX_PANE =                  \"k-loginBox-pane\"\n+  const val LOGIN_BOX_PANE_ERROR =            \"k-loginBox-error\"\n+  const val LOGIN_BOX_PANE_INFO =             \"k-loginBox-info\"\n+  const val FIELD =                           \"k-field\"\n+  const val TEXT_FIELD =                      \"k-textfield\"\n+  const val TEXT_INPUT =                      \"k-textinput\"\n+  const val TEXT_AREA_INPUT =                 \"k-textareainput\"\n+  const val LABEL =                           \"k-label\"\n+  const val LABEL_UNDEFINED_WIDTH =           \"k-label-undef-w\"\n+  const val BLOCK =                           \"k-block\"\n+  const val BLOCK_LAYOUT =                    \"k-blocklayout\"\n+  const val FORM =                            \"k-form\"\n+  const val FORM_PAGE =                       \"k-form-page\"\n+  const val FORM_PAGE_CONTENT =               \"k-form-page-content\"\n+  const val FORM_TAB_PANEL =                  \"k-form-tab\"\n+  const val LIST_DIALOG =                     \"k-listdialog\"\n+  const val LIST_DIALOG_CONTENT =             \"k-listdialog-content\"\n+  const val LIST_DIALOG_TABLE =               \"k-listdialog-table\"\n+  const val NOTIFICATION =                    \"k-notification\"\n+  const val NOTIFICATION_TITLE =              \"k-notification-title\"\n+  const val NOTIFICATION_IMAGE =              \"k-notification-image\"\n+  const val NOTIFICATION_MESSAGE =            \"k-notification-message\"\n+  const val NOTIFICATION_FILLER =             \"k-notification-filler\"\n+  const val NOTIFICATION_BUTTONS =            \"k-notification-buttons\"\n+  const val PROGRESS_DIALOG =                 \"k-progress\"\n+  const val PROGRESS_TITLE =                  \"k-progress-title\"\n+  const val PROGRESS_MESSAGE =                \"k-progress-message\"\n+  const val PROGRESS_BAR =                    \"k-progress-bar\"\n+  const val PROGRESS_BAR_CELL =               \"k-progress-bar-cell\"\n+  const val PROGRESS_BAR_BLANK =              \"k-progress-bar-blank\"\n+  const val PROGRESS_BAR_FULL =               \"k-progress-bar-full\"\n+  const val PIVOT_REPORT_WINDOW =             \"k-pivot-report-window\"\n+  const val REPORT_ROW_DIMENSIONS_TABLE =     \"k-report-row-table\"\n+  const val REPORT_COLUMN_DIMENSIONS_TABLE = \"k-report-column-table\"\n+  const val REPORT_DIMENSION_CELL =          \"k-report-dimensions-cell\"\n+  const val REPORT_MEASURES_TABLE = \"k-report-measures-table\"\n+  const val REPORT_MEASURE_CELL = \"k-report-measure-cell\"\n+  const val REPORT_DIMENSION_DRAG = \"k-report-dimension-drag\"\n+  const val REPORT_DIMENSION_DRAG_PANEL = \"k-report-dimension-drag-panel\"\n+  const val REPORT_DIMENSION_DROP = \"k-report-dimension-drop\"\n+  const val REPORT_DIMENSION_DROP_PANEL = \"k-report-dimension-drop-panel\"\n+  const val REPORT_MEASURES_CHECK_PANEL = \"k-report-measures-check-panel\"\n+\n+  // alignment\n+  const val CENTER =  0\n+  const val TOP =     1\n+  const val LEFT =    2\n+  const val BOTTOM =  3\n+  const val RIGHT =   4\n+\n+  // calendar pane styles\n+  const val DATE_CHOOSER =            \"k-datechooser\"\n+  const val CN_FOCUSED =              \"focused\"\n+  const val CN_TODAY =                \"today\"\n+  const val CN_SELECTED =             \"selected\"\n+  const val CN_OFFMONTH =             \"offmonth\"\n+  const val CN_OUTSIDE_RANGE =        \"outside-range\"\n+  const val WAIT_WINDOW =             \"k-wait-window\"\n+  const val WAIT_WINDOW_IMAGE =       \"k-wait-window-image\"\n+  const val WAIT_WINDOW_TEXT =        \"k-wait-window-text\"\n+  const val POPUP_WINDOW =            \"k-popup-window\"\n+  const val POPUP_WINDOW_CAPTION =    \"k-popup-window-caption\"\n+  const val POPUP_WINDOW_CONTENT =    \"k-popup-window-content\"\n+\n+  // font awesome icon primary style\n+  const val FONT_AWESOME =            \"fa\"\n+\n+  // actor field styles\n+  const val ACTOR_FIELD =             \"k-actor-field\"\n+  const val ACTOR_FIELD_BUTTON =      \"k-actor-field-button\"\n+\n+  // boolean field styles\n+  const val BOOLEAN_FIELD =           \"k-boolean-field\"\n+  const val POSITION_PANEL =          \"k-positionpanel\"\n+\n+  // Styles\n+  const val STYLE_Z_INDEX =           \"zIndex\"\n+  const val STYLE_CURSOR =            \"cursor\"\n+\n+  // Cursor Styles\n+  const val CURSOR_ROW_RESIZE =       \"row-resize\"\n+  const val CURSOR_COL_RESIZE =       \"col-resize\"\n+  const val CURSOR_HELP =             \"help\"\n+  const val CURSOR_WAIT =             \"wait\"\n+  const val CURSOR_TEXT =             \"text\"\n+  const val CURSOR_W_RESIZE =         \"w-resize\"\n+  const val CURSOR_S_RESIZE =         \"s-resize\"\n+  const val CURSOR_SW_RESIZE =        \"sw-resize\"\n+  const val CURSOR_SE_RESIZE =        \"se-resize\"\n+  const val CURSOR_N_RESIZE =         \"n-resize\"\n+  const val CURSOR_NW_RESIZE =        \"nw-resize\"\n+  const val CURSOR_NE_RESIZE =        \"ne-resize\"\n+  const val CURSOR_E_RESIZE =         \"e-resize\"\n+  const val CURSOR_MOVE =             \"move\"\n+  const val CURSOR_POINTER =          \"pointer\"\n+  const val CURSOR_CROSSHAIR =        \"crosshair\"\n+  const val CURSOR_AUTO =             \"auto\"\n+  const val CURSOR_DEFAULT =          \"default\"\n+}"
  },
  {
    "sha": "194080214ce9f6afda6f43335a0d87098f56e17d",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/StylesInjector.kt",
    "status": "added",
    "additions": 146,
    "deletions": 0,
    "changes": 146,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/StylesInjector.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/StylesInjector.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/StylesInjector.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,146 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import org.kopi.galite.form.VConstants\n+import org.kopi.galite.visual.VColor\n+\n+/**\n+ * A centralized way to inject styles in the browser page.\n+ * TODO : use this class to handle report styles.\n+ */\n+class StylesInjector {\n+\n+  // --------------------------------------------------\n+  // DATA MEMBERS\n+  // --------------------------------------------------\n+  /*\n+   * Key is the style instance and the object is the style name\n+   */\n+  private val styles: MutableMap<Style, String> = mutableMapOf()\n+  private var injectedStyleId = 0\n+\n+  // --------------------------------------------------\n+  // IMPLEMENTATION\n+  // --------------------------------------------------\n+  /**\n+   * Creates (if needed) and inject a CSS style characterized by its align, foreground color\n+   * and background color.\n+   *\n+   * The styles are generated only when needed. if a style does not exists in the styles map,\n+   * a new style is generated and injected to the current browser page. Otherwise, an existing style\n+   * will be used and its name will be returned.\n+   *\n+   * We note that two styles are equals only if they have the same align,\n+   * foreground color and background color.\n+   *\n+   * @param align The alignment of the style.\n+   * @param foreground The foreground color of the style.\n+   * @param background The background color of the style.\n+   * @return\n+   */\n+  fun createAndInjectStyle(align: Int, foreground: VColor?, background: VColor?): String? {\n+    val style = Style(++injectedStyleId, align, foreground, background)\n+    if (!styles.containsKey(style)) {\n+      styles[style] = style.name\n+      style.inject()\n+    }\n+    return styles[style]\n+  }\n+  // --------------------------------------------------\n+  // INNER CLASSES\n+  // --------------------------------------------------\n+  /**\n+   * A style is represented by its align, foreground color and background color.\n+   */\n+  internal inner class Style(private val id: Int,\n+          private val align: Int,\n+          foreground: VColor?,\n+          background: VColor?) {\n+    // --------------------------------------------------\n+    // IMPLEMENTATION\n+    // --------------------------------------------------\n+    /**\n+     * Apply this style to current browser page.\n+     */\n+    fun inject() {\n+      // apply only when needed.\n+      if (align != VConstants.ALG_LEFT || foreground != null || background != null) {\n+        //BackgroundThreadHandler.access(Runnable { TODO: access\n+          //Page.getCurrent().getStyles().add(toCSS()) TODO\n+        //}\n+      }\n+    }\n+\n+    /**\n+     * returns the style name\n+     * @return\n+     */\n+    val name: String\n+      get() = \"injected-style-$id\"\n+\n+    /**\n+     * Returns the equivalent CSS style of this style object.\n+     * @return The equivalent CSS style of this style object.\n+     */\n+    fun toCSS(): String = buildString {\n+\n+      append(\".$name{\")\n+      if (align != VConstants.ALG_LEFT) {\n+        append(\"text-align: $cssAlign !important;\")\n+      }\n+      if (background != null) {\n+        append(\"background-color: \" + Utils.toString(background).toString() + \" !important;\")\n+      }\n+      if (foreground != null) {\n+        append(\"color: \" + Utils.toString(foreground).toString() + \" !important;\")\n+      }\n+      append(\"}\")\n+    }\n+\n+    /**\n+     * Return the CSS align of the alignment constants.\n+     * @return The CSS align of the alignment constants.\n+     */\n+    protected val cssAlign: String\n+      get() = when (align) {\n+        VConstants.ALG_LEFT -> \"left\"\n+        VConstants.ALG_RIGHT -> \"right\"\n+        VConstants.ALG_CENTER -> \"center\"\n+        else -> \"left\" // cell are left aligned by default;\n+      }\n+\n+    override fun equals(obj: Any?): Boolean {\n+      return if (obj is Style) {\n+        ((align == obj.align\n+                ) && Utils.equals(foreground, obj.foreground)\n+                && Utils.equals(background, obj.background))\n+      } else {\n+        super.equals(obj)\n+      }\n+    }\n+\n+    override fun hashCode(): Int {\n+      return (align + (if (foreground == null) 0 else foreground.hashCode())\n+              + if (background == null) 0 else background.hashCode())\n+    }\n+\n+    private val foreground = foreground\n+    private val background = background\n+  }\n+}"
  },
  {
    "sha": "1afa188a884bad4b5666eec6111b2c2117e2b08d",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/Utils.kt",
    "status": "added",
    "additions": 359,
    "deletions": 0,
    "changes": 359,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/Utils.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/Utils.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/Utils.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,359 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import java.util.Hashtable\n+\n+import org.kopi.galite.base.Utils\n+import org.kopi.galite.visual.VColor\n+\n+/**\n+ * Some vaadin version utilities to obtain images and resources.\n+ */\n+object Utils : Utils() {\n+\n+  //---------------------------------------------------\n+  // UTILS\n+  //---------------------------------------------------\n+  /**\n+   * Returns image from theme\n+   * @param img Must be an image from resource theme path separator is \"/\"\n+   * @return An Image or null if not found.\n+   */\n+  fun getImage(image: String): Image {\n+    var img: Image? = cache[image]\n+    if (img == null) {\n+      img = getImageImpl(image)\n+      cache[image] = img\n+    }\n+    return img\n+  }\n+\n+  /**\n+   * Returns image from theme.\n+   * @param img Must be an image from resource directory path separator is \"/\"\n+   * @return An Image or null if not found.\n+   */\n+  private fun getImageImpl(img: String): Image {\n+    var icon: Image? = getDefaultImage(img)\n+    if (icon == null) {\n+      icon = getKopiResourceImage(img)\n+    }\n+    if (icon == null) {\n+      icon = getApplicationImage(img)\n+    }\n+    if (icon == null) {\n+      System.err.println(\"Utils ==> cant load: $img\")\n+      return UKN_IMAGE\n+    }\n+    return icon\n+  }\n+\n+  /**\n+   * Returns image from theme.\n+   * @param img Must be an image from resource directory path separator is \"/\"\n+   * @return An imageIcon or null if not found\n+   */\n+  fun getDefaultImage(img: String): Image? {\n+    return getImageFromResource(VAADIN_RESOURCE_DIR, img)\n+  }\n+\n+  /**\n+   * Returns image from theme.\n+   * @param img Must be an image from resource application directory\n+   * path separator is \"/\"\n+   * @return An Image or null if not found\n+   */\n+  fun getApplicationImage(img: String): Image? {\n+    return getImageFromResource(APPLICATION_DIR, img)\n+  }\n+\n+  /**\n+   * Returns an image from kopi resources.\n+   * @param img Must be an image from resource application directory\n+   * path separator is \"/\"\n+   * @return An Image or null if not found\n+   */\n+  fun getKopiResourceImage(img: String): Image? {\n+    return getImageFromResource(RESOURCE_DIR, img)\n+  }\n+\n+  /**\n+   * Return image from resources or null if not found.\n+   * @param directory The image directory.\n+   * @param name The image name.\n+   * @return An Image or null if not found\n+   */\n+  fun getImageFromResource(directory: String, name: String): Image? {\n+    TODO()\n+  }\n+\n+  /**\n+   * Returns the corresponding CSS color of a given [VColor].\n+   * @param color The color model.\n+   * @return The CSS color.\n+   */\n+  fun getCSSColor(color: VColor?): String {\n+    return if (color == null) {\n+      \"inherit;\"\n+    } else {\n+      \"rgb(\" + color.red.toString() + \",\" + color.green.toString() + \",\" + color.blue.toString() + \") ;\"\n+    }\n+  }\n+\n+  /**\n+   * Returns the string representation of the given [VColor].\n+   * @param color The color model.\n+   * @return The equivalent String color or empty string if the color is `null`.\n+   */\n+  fun toString(color: VColor?): String {\n+    return if (color == null) {\n+      \"\"\n+    } else {\n+      \"rgb(\" + color.red.toString() + \",\" + color.green.toString() + \",\" + color.blue.toString() + \")\"\n+    }\n+  }\n+\n+  /**\n+   * Builds a list of identifiers.\n+   * @param size The list size.\n+   * @return The resulting list.\n+   */\n+  fun buildIdList(size: Int): List<Int> {\n+    val list: MutableList<Int> = ArrayList(size)\n+    for (i in 0 until size) {\n+      list.add(i)\n+    }\n+    return list\n+  }\n+\n+  /**\n+   * Creates a HTML tooltip that wraps a string content.\n+   * @param content The content (String or html).\n+   * @return The decoredted tooltip\n+   */\n+  fun createTooltip(content: String?): String {\n+    return \"<div class=\\\"info\\\"><i class=\\\"fa fa-sort-asc\\\" aria-hidden=\\\"true\\\"></i>$content</div>\"\n+  }\n+\n+  /**\n+   * Returns the equivalent font awesome icon from the given icon name.\n+   * @param iconName The model icon name.\n+   * @return The font awesome icon.\n+   */\n+  fun getFontAwesomeIcon(iconName: String?): String? {\n+    return pngToFontAwesomeMap[iconName]\n+  }\n+\n+  /**\n+   * Returns true if the given two objects are equals.\n+   * @param o1 The first object.\n+   * @param o2 The second object.\n+   * @return true if the given two objects are equals.\n+   */\n+  fun equals(o1: Any?, o2: Any?): Boolean {\n+    return if (o1 == null) {\n+      o2 == null\n+    } else if (o2 == null) {\n+      false\n+    } else {\n+      o1 == o2\n+    }\n+  }\n+\n+  /**\n+   * Returns the complete theme resource URL of the given resource path.\n+   * @param resourcePath The theme complete resource path.\n+   * @return The URL of the given theme resource.\n+   */\n+  fun getThemeResourceURL(resourcePath: String): String {\n+    TODO()\n+  }\n+\n+  // --------------------------------------------------\n+  // PRIVATE DATA\n+  // --------------------------------------------------\n+  private const val VAADIN_RESOURCE_DIR = \"org/kopi/galite/ui/vaadin\"\n+  private const val THEME_DIR = \"resource\"\n+  private const val APPLICATION_DIR = \"resources\"\n+  private const val RESOURCE_DIR = \"org/kopi/galite\"\n+  val UKN_IMAGE = Image(\"$THEME_DIR/unknown.png\")\n+  private val cache = Hashtable<String, Image>()\n+  private var pngToFontAwesomeMap = mutableMapOf<String, String>()\n+\n+  init {\n+    pngToFontAwesomeMap[\"all\"] = \"hand-paper-o\"\n+    pngToFontAwesomeMap[\"block\"] = \"ban\"\n+    pngToFontAwesomeMap[\"border\"] = \"cog\"\n+    pngToFontAwesomeMap[\"bread_crumb_separator\"] = \"angle-double-right\"\n+    pngToFontAwesomeMap[\"break\"] = \"times-circle\"\n+    pngToFontAwesomeMap[\"calendar\"] = \"calendar-o\"\n+    pngToFontAwesomeMap[\"collapsed\"] = \"folder-o\"\n+    pngToFontAwesomeMap[\"collapsed_p\"] = \"folder-o\"\n+    pngToFontAwesomeMap[\"copy\"] = \"files-o\"\n+    pngToFontAwesomeMap[\"delete\"] = \"trash-o\"\n+    pngToFontAwesomeMap[\"desk\"] = \"desktop\"\n+    pngToFontAwesomeMap[\"detail\"] = \"search-plus\"\n+    pngToFontAwesomeMap[\"detail_view\"] = \"search\"\n+    pngToFontAwesomeMap[\"down\"] = \"angle-double-down\"\n+    pngToFontAwesomeMap[\"duke\"] = \"expeditedssl\"\n+    pngToFontAwesomeMap[\"edit\"] = \"pencil-square-o\"\n+    pngToFontAwesomeMap[\"expanded_a\"] = \"folder-o\"\n+    pngToFontAwesomeMap[\"expanded\"] = \"folder-o\"\n+    pngToFontAwesomeMap[\"expanded_p\"] = \"folder-o\"\n+    pngToFontAwesomeMap[\"exportCsv\"] = \"file-text-o\"\n+    pngToFontAwesomeMap[\"exportPdf\"] = \"file-pdf-o\"\n+    pngToFontAwesomeMap[\"exportXlsx\"] = \"file-excel-o\"\n+    pngToFontAwesomeMap[\"foldColumn\"] = \"folder-o\"\n+    pngToFontAwesomeMap[\"fold\"] = \"folder-o\"\n+    pngToFontAwesomeMap[\"formula\"] = \"calculator\"\n+    pngToFontAwesomeMap[\"help\"] = \"question-circle-o\"\n+    pngToFontAwesomeMap[\"home\"] = \"home\"\n+    pngToFontAwesomeMap[\"insertline\"] = \"list-ol\"\n+    pngToFontAwesomeMap[\"insert\"] = \"pencil-square-o\"\n+    pngToFontAwesomeMap[\"list\"] = \"mouse-pointer\"\n+    pngToFontAwesomeMap[\"loading\"] = \"spinner\"\n+    pngToFontAwesomeMap[\"login_img\"] = \"coffee\"\n+    pngToFontAwesomeMap[\"mail\"] = \"envelope-o\"\n+    pngToFontAwesomeMap[\"menuquery\"] = \"file-text-o\"\n+    pngToFontAwesomeMap[\"note\"] = \"sticky-note-o\"\n+    pngToFontAwesomeMap[\"nothing\"] = \"file-o\"\n+    pngToFontAwesomeMap[\"open\"] = \"file-text-o\"\n+    pngToFontAwesomeMap[\"options\"] = \"cogs\"\n+    pngToFontAwesomeMap[\"preview\"] = \"file-text-o\"\n+    pngToFontAwesomeMap[\"print\"] = \"print\"\n+    pngToFontAwesomeMap[\"quit\"] = \"power-off\"\n+    pngToFontAwesomeMap[\"save\"] = \"floppy-o\"\n+    pngToFontAwesomeMap[\"searchop\"] = \"search\"\n+    pngToFontAwesomeMap[\"search\"] = \"search\"\n+    pngToFontAwesomeMap[\"serialquery\"] = \"binoculars\"\n+    pngToFontAwesomeMap[\"serviceoff\"] = \"toggle-off\"\n+    pngToFontAwesomeMap[\"serviceon\"] = \"toggle-on\"\n+    pngToFontAwesomeMap[\"store\"] = \"building-o\"\n+    pngToFontAwesomeMap[\"suggest\"] = \"phone\"\n+    pngToFontAwesomeMap[\"timeStamp\"] = \"clock-o\"\n+    pngToFontAwesomeMap[\"tri\"] = \"sort-alpha-desc\"\n+    pngToFontAwesomeMap[\"unfoldColumn\"] = \"folder-open-o\"\n+    pngToFontAwesomeMap[\"unfold\"] = \"folder-open-o\"\n+    pngToFontAwesomeMap[\"up\"] = \"angle-double-up\"\n+    pngToFontAwesomeMap[\"add\"] = \"floppy-o\"\n+    pngToFontAwesomeMap[\"align_center\"] = \"align-center\"\n+    pngToFontAwesomeMap[\"align_justify\"] = \"align-justify\"\n+    pngToFontAwesomeMap[\"align_left\"] = \"align-left\"\n+    pngToFontAwesomeMap[\"align_right\"] = \"align-right\"\n+    pngToFontAwesomeMap[\"apply\"] = \"cogs\"\n+    pngToFontAwesomeMap[\"area_chart\"] = \"area-chart\"\n+    pngToFontAwesomeMap[\"arrowfirst\"] = \"step-backward\"\n+    pngToFontAwesomeMap[\"arrowlast\"] = \"step-forward\"\n+    pngToFontAwesomeMap[\"arrowleft\"] = \"backward\"\n+    pngToFontAwesomeMap[\"arrowright\"] = \"forward\"\n+    pngToFontAwesomeMap[\"article\"] = \"file-text-o\"\n+    pngToFontAwesomeMap[\"ask\"] = \"question-circle\"\n+    pngToFontAwesomeMap[\"bar_chart\"] = \"bar-chart\"\n+    pngToFontAwesomeMap[\"bkup3\"] = \"exclamation-triangle\"\n+    pngToFontAwesomeMap[\"bkup\"] = \"exclamation-triangle\"\n+    pngToFontAwesomeMap[\"block2\"] = \"undo\"\n+    pngToFontAwesomeMap[\"board\"] = \"cogs\"\n+    pngToFontAwesomeMap[\"bold\"] = \"bold\"\n+    pngToFontAwesomeMap[\"bomb\"] = \"bomb\"\n+    pngToFontAwesomeMap[\"bookmark\"] = \"bookmark\"\n+    pngToFontAwesomeMap[\"boxarrow\"] = \"dropbox\"\n+    pngToFontAwesomeMap[\"bw\"] = \"step-backward\"\n+    pngToFontAwesomeMap[\"calculate\"] = \"calculator\"\n+    pngToFontAwesomeMap[\"cfolder\"] = \"folder\"\n+    pngToFontAwesomeMap[\"chart_view\"] = \"bar-chart\"\n+    pngToFontAwesomeMap[\"checkbox\"] = \"square-o\"\n+    pngToFontAwesomeMap[\"clip\"] = \"paperclip\"\n+    pngToFontAwesomeMap[\"collapsedb\"] = \"long-arrow-right\"\n+    pngToFontAwesomeMap[\"collapsed_f\"] = \"folder\"\n+    pngToFontAwesomeMap[\"collapsed_t\"] = \"folder-o\"\n+    pngToFontAwesomeMap[\"column_chart\"] = \"bar-chart\"\n+    pngToFontAwesomeMap[\"combo\"] = \"lightbulb-o\"\n+    pngToFontAwesomeMap[\"config\"] = \"wrench\"\n+    pngToFontAwesomeMap[\"convert\"] = \"exchange\"\n+    pngToFontAwesomeMap[\"cut\"] = \"scissors\"\n+    pngToFontAwesomeMap[\"deleteline\"] = \"list-ol\"\n+    pngToFontAwesomeMap[\"done\"] = \"check-square-o\"\n+    pngToFontAwesomeMap[\"error\"] = \"minus-circle\"\n+    pngToFontAwesomeMap[\"expandedb\"] = \"long-arrow-down\"\n+    pngToFontAwesomeMap[\"expanded_f\"] = \"folder-open\"\n+    pngToFontAwesomeMap[\"expanded_s\"] = \"folder-open\"\n+    pngToFontAwesomeMap[\"expanded_t\"] = \"folder-open\"\n+    pngToFontAwesomeMap[\"export\"] = \"cog\"\n+    pngToFontAwesomeMap[\"fax\"] = \"fax\"\n+    pngToFontAwesomeMap[\"fw\"] = \"step-forward\"\n+    pngToFontAwesomeMap[\"gifIcon\"] = \"file-image-o\"\n+    pngToFontAwesomeMap[\"green\"] = \"map-o\"\n+    pngToFontAwesomeMap[\"guide\"] = \"map-signs\"\n+    pngToFontAwesomeMap[\"ident\"] = \"long-arrow-right\"\n+    pngToFontAwesomeMap[\"index\"] = \"book\"\n+    pngToFontAwesomeMap[\"interrupt\"] = \"stop-circle-o\"\n+    pngToFontAwesomeMap[\"italic\"] = \"italic\"\n+    pngToFontAwesomeMap[\"jpgIcon\"] = \"picture-o\"\n+    pngToFontAwesomeMap[\"launch\"] = \"long-arrow-right\"\n+    pngToFontAwesomeMap[\"line_chart\"] = \"line-chart\"\n+    pngToFontAwesomeMap[\"lock\"] = \"lock\"\n+    pngToFontAwesomeMap[\"login\"] = \"user-circle\"\n+    pngToFontAwesomeMap[\"moneycheck\"] = \"money\"\n+    pngToFontAwesomeMap[\"money\"] = \"money\"\n+    pngToFontAwesomeMap[\"notice\"] = \"lightbulb-o\"\n+    pngToFontAwesomeMap[\"ofolder\"] = \"folder-open\"\n+    pngToFontAwesomeMap[\"pageFirst\"] = \"step-backward\"\n+    pngToFontAwesomeMap[\"pageLast\"] = \"step-forward\"\n+    pngToFontAwesomeMap[\"pageLeft\"] = \"backward\"\n+    pngToFontAwesomeMap[\"pageRight\"] = \"forward\"\n+    pngToFontAwesomeMap[\"password\"] = \"lock\"\n+    pngToFontAwesomeMap[\"paste\"] = \"clipboard\"\n+    pngToFontAwesomeMap[\"phone\"] = \"phone-square\"\n+    pngToFontAwesomeMap[\"pie_chart\"] = \"pie-chart\"\n+    pngToFontAwesomeMap[\"printoptions\"] = \"wrench\"\n+    pngToFontAwesomeMap[\"project\"] = \"cubes\"\n+    pngToFontAwesomeMap[\"red\"] = \"map-o\"\n+    pngToFontAwesomeMap[\"redo\"] = \"repeat\"\n+    pngToFontAwesomeMap[\"refresh\"] = \"refresh\"\n+    pngToFontAwesomeMap[\"reload\"] = \"refresh\"\n+    pngToFontAwesomeMap[\"report\"] = \"table\"\n+    pngToFontAwesomeMap[\"sec\"] = \"unlock\"\n+    pngToFontAwesomeMap[\"selected\"] = \"long-arrow-right\"\n+    pngToFontAwesomeMap[\"send\"] = \"paper-plane\"\n+    pngToFontAwesomeMap[\"sort\"] = \"sort-numeric-asc\"\n+    pngToFontAwesomeMap[\"split\"] = \"chain-broken\"\n+    pngToFontAwesomeMap[\"standard\"] = \"pencil\"\n+    pngToFontAwesomeMap[\"stick\"] = \"thumb-tack\"\n+    pngToFontAwesomeMap[\"stop\"] = \"times-circle-o\"\n+    pngToFontAwesomeMap[\"todo\"] = \"magic\"\n+    pngToFontAwesomeMap[\"top\"] = \"book\"\n+    pngToFontAwesomeMap[\"underline\"] = \"underline\"\n+    pngToFontAwesomeMap[\"undo\"] = \"undo\"\n+    pngToFontAwesomeMap[\"unident\"] = \"arrow-circle-left\"\n+    pngToFontAwesomeMap[\"unstick\"] = \"thumb-tack\"\n+    pngToFontAwesomeMap[\"update\"] = \"pencil-square-o\"\n+    pngToFontAwesomeMap[\"users\"] = \"users\"\n+    pngToFontAwesomeMap[\"utils\"] = \"cogs\"\n+    pngToFontAwesomeMap[\"validate\"] = \"check\"\n+    pngToFontAwesomeMap[\"wait\"] = \"clock-o\"\n+    pngToFontAwesomeMap[\"warning\"] = \"exclamation-triangle\"\n+    pngToFontAwesomeMap[\"window\"] = \"angle-right\"\n+    pngToFontAwesomeMap[\"yellow\"] = \"map-o\"\n+    pngToFontAwesomeMap[\"zoomheight\"] = \"search\"\n+    pngToFontAwesomeMap[\"zoomminus\"] = \"search-minus\"\n+    pngToFontAwesomeMap[\"zoomoptimal\"] = \"search\"\n+    pngToFontAwesomeMap[\"zoomplus\"] = \"search-plus\"\n+    pngToFontAwesomeMap[\"zoomwidth\"] = \"search\"\n+  }\n+}"
  },
  {
    "sha": "00adbd2559b230e06bd702d193339717c68abe57",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/VAnchorPanel.kt",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VAnchorPanel.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VAnchorPanel.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VAnchorPanel.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import com.vaadin.flow.component.html.Anchor\n+\n+/**\n+ * A simple panel that wraps an anchor element.\n+ */\n+open class VAnchorPanel : Anchor() {\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+  /**\n+   * Sets the anchor's href (the url to which it links).\n+   * @param href the anchor's href\n+   */\n+  override fun setHref(href: String?) {\n+    if (href != null) {\n+      super.setHref(href)\n+    } else {\n+      super.removeHref()\n+    }\n+  }\n+}"
  },
  {
    "sha": "188d81d72ae595264c54136daf4b578f88b7c058",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/VHiddenSeparator.kt",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VHiddenSeparator.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VHiddenSeparator.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VHiddenSeparator.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,38 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import com.vaadin.flow.component.html.Div\n+\n+/**\n+ * A hidden separator\n+ */\n+class VHiddenSeparator(height: Int) : Div() {\n+\n+  //---------------------------------------------------\n+  // CONSTRUCTOR\n+  //---------------------------------------------------\n+\n+  /**\n+   * Creates a new hidden separator instance.\n+   */\n+  init {\n+    className = \"k-separator\"\n+    setHeight(height.toString() + \"px\")\n+  }\n+}"
  },
  {
    "sha": "17926700f8e5402af2211ba6b6d1032e81c941ec",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputButton.kt",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputButton.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputButton.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputButton.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import com.vaadin.flow.component.ClickEvent\n+import com.vaadin.flow.component.ClickNotifier\n+import com.vaadin.flow.component.ComponentEventListener\n+import com.vaadin.flow.component.html.Input\n+\n+/**\n+ * An input element type button that cannot handle icons.\n+ */\n+class VInputButton(caption: String? = null) : Input(), ClickNotifier<VInputButton> {\n+\n+  //---------------------------------------------------\n+  // CONSTRUCTORS\n+  //---------------------------------------------------\n+\n+  /**\n+   * Creates a new input button.\n+   */\n+  init {\n+    type = \"button\"\n+    if (caption != null) {\n+      value = caption\n+    }\n+    className = Styles.INPUT_BUTTON\n+    element.setAttribute(\"hideFocus\", \"true\")\n+    element.style[\"outline\"] = \"0px\"\n+  }\n+\n+  /**\n+   * Creates a new button component.\n+   *\n+   * @param caption The button caption.\n+   * @param clickListener The click listener.\n+   */\n+  constructor(caption: String?, clickListener: ComponentEventListener<ClickEvent<VInputButton?>?>?) : this(caption) {\n+    addClickListener(clickListener)\n+  }\n+\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+  /**\n+   * Fires a click for this button.\n+   */\n+  fun click() {\n+    fireEvent(ClickEvent<VInputButton>(this))\n+  }\n+\n+  /**\n+   * Sets the button caption\n+   *\n+   * @param caption The button caption.\n+   */\n+  var caption: String\n+    get() = value\n+    set(caption) {\n+      value = caption\n+    }\n+\n+  /**\n+   * sets the name of the component.\n+   *\n+   * @return The name.\n+   */\n+  fun setName(name: String?) {\n+    element.setAttribute(\"name\", name)\n+  }\n+}"
  },
  {
    "sha": "905772e458ffb25ba526bbc05b79db0cbbe63825",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputLabel.kt",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputLabel.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputLabel.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputLabel.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import com.vaadin.flow.component.html.Label\n+\n+/**\n+ * An input label component.\n+ */\n+class VInputLabel(text: String? = \"\") : Label(text) {\n+\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+\n+  /**\n+   * This attribute links this label with another form control by id attribute.\n+   */\n+  fun setHtmlFor(target: String?) {\n+    element.setAttribute(\"for\", target)\n+  }\n+}"
  },
  {
    "sha": "82a7ae7a4f6b828231bc5714196d33aa5e46c469",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputText.kt",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputText.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputText.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VInputText.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import com.vaadin.flow.component.KeyNotifier\n+import com.vaadin.flow.component.html.Input\n+\n+/**\n+ * An input text component.\n+ */\n+open class VInputText() : Input(), KeyNotifier {\n+\n+  //---------------------------------------------------\n+  // CONSTRUCTOR\n+  //---------------------------------------------------\n+\n+  /**\n+   * Creates the input text component.\n+   */\n+  init {\n+    element.setAttribute(\"type\", \"text\")\n+  }\n+\n+  /**\n+   * For children classes.\n+   * @param input The input text.\n+   */\n+  protected constructor(input: String?) : this() {\n+    value = input\n+  }\n+\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+\n+  /**\n+   * Sets the input element size.\n+   * @param size The element size.\n+   */\n+  fun setSize(size: Int) {\n+    element.setAttribute(\"size\", size.toString() + \"\")\n+  }\n+\n+  /**\n+   * Sets the element name.\n+   * @param name The element name.\n+   */\n+  fun setName(name: String?) {\n+    element.setAttribute(\"name\", name)\n+  }\n+}"
  },
  {
    "sha": "31ed876c8e35e947e340e535afc75f39aac8d112",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/VScrollablePanel.kt",
    "status": "added",
    "additions": 92,
    "deletions": 0,
    "changes": 92,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VScrollablePanel.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VScrollablePanel.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VScrollablePanel.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import com.vaadin.flow.component.Component\n+import com.vaadin.flow.component.html.Div\n+\n+/**\n+ * A scrollable vertical panel.\n+ */\n+class VScrollablePanel : Div {\n+  //---------------------------------------------------\n+  // CONSTRUCTOR\n+  //---------------------------------------------------\n+\n+  /**\n+   * Creates the scrollable panel instance.\n+   */\n+  constructor() : super() {\n+    initialize()\n+  }\n+\n+  /**\n+   * Creates the scrollable panel instance.\n+   *\n+   * @param children the items to add to this component\n+   */\n+  constructor(vararg children: Component) : super() {\n+    initialize()\n+    this.add(*children)\n+  }\n+\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+\n+  /**\n+   * Sets up the correct styling\n+   *\n+   */\n+  private fun initialize() {\n+    style[\"overflow\"] = \"auto\"\n+    content.style[\"display\"] = \"block\"\n+    super.add(content)\n+    width = \"100%\"\n+    height = \"100%\"\n+  }\n+\n+  fun clear() {\n+    removeAll()\n+  }\n+\n+  override fun add(vararg components: Component) {\n+    content.add(*components)\n+  }\n+\n+  override fun remove(vararg components: Component) {\n+    content.remove(*components)\n+  }\n+\n+  override fun removeAll() {\n+    content.removeAll()\n+  }\n+\n+  override fun addComponentAtIndex(index: Int, component: Component) {\n+    content.addComponentAtIndex(index, component)\n+  }\n+\n+  override fun addComponentAsFirst(component: Component) {\n+    addComponentAtIndex(0, component)\n+  }\n+\n+  //---------------------------------------------------\n+  // DATA MEMBERS\n+  //---------------------------------------------------\n+  private var content = Div()\n+}"
  },
  {
    "sha": "9e723a695b41783601ee75c0461e66920acba5df",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/VSingleRowTable.kt",
    "status": "added",
    "additions": 81,
    "deletions": 0,
    "changes": 81,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VSingleRowTable.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VSingleRowTable.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VSingleRowTable.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import java.util.Objects\n+\n+import com.vaadin.flow.component.Component\n+import com.vaadin.flow.component.HasComponents\n+import com.vaadin.flow.component.Tag\n+import com.vaadin.flow.dom.Element\n+\n+/**\n+ * A Single row table panel.\n+ */\n+@Tag(\"table\")\n+class VSingleRowTable : Component(), HasComponents {\n+\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+  /**\n+   * Adds an element to the td element\n+   * @param elements element to add\n+   */\n+  fun add(vararg elements: Element?) {\n+    Objects.requireNonNull(elements, \"Elements should not be null\")\n+    for (element in elements) {\n+      Objects.requireNonNull(element,\n+                             \"element to add cannot be null\")\n+      td.appendChild(element)\n+    }\n+  }\n+\n+  /**\n+   * Adds a component to the td element\n+   * @param components components to add\n+   */\n+  override fun add(vararg components: Component) {\n+    Objects.requireNonNull(components, \"Components should not be null\")\n+    for (component in components) {\n+      Objects.requireNonNull(component,\n+                             \"Component to add cannot be null\")\n+      td.appendChild(component.element)\n+    }\n+  }\n+\n+  //---------------------------------------------------\n+  // DATA MEMBERS\n+  //---------------------------------------------------\n+  private val td: Element\n+\n+  //---------------------------------------------------\n+  // CONSTRUCTOR\n+  //---------------------------------------------------\n+  /**\n+   * Creates the table instance.\n+   */\n+  init {\n+    val body = Element(\"tbody\")\n+    element.appendChild(body)\n+    val tr = Element(\"tr\")\n+    body.appendChild(tr)\n+    td = Element(\"td\")\n+    tr.appendChild(td)\n+  }\n+}"
  },
  {
    "sha": "b4670d6451d30142de05b9e795d006139194455f",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/base/VULPanel.kt",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VULPanel.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VULPanel.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/base/VULPanel.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.base\n+\n+import com.vaadin.flow.component.Component\n+import com.vaadin.flow.component.HasComponents\n+import com.vaadin.flow.component.Tag\n+\n+/**\n+ * A complex panel that wraps an unordered list inside.\n+ */\n+@Tag(Tag.UL)\n+class VULPanel : Component(), HasComponents"
  },
  {
    "sha": "783dc10a53872317ef9e1816a473d4b69f0ff80c",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/AbstractBlockLayout.kt",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/AbstractBlockLayout.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/AbstractBlockLayout.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/AbstractBlockLayout.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+import com.vaadin.flow.component.AttachEvent\n+import com.vaadin.flow.component.Component\n+import com.vaadin.flow.component.formlayout.FormLayout\n+import org.kopi.galite.ui.vaadin.base.Styles\n+\n+/**\n+ * An abstract implementation for the block layout.\n+ *\n+ * @param col The number of columns.\n+ * @param line The number of lines.\n+ */\n+abstract class AbstractBlockLayout protected constructor(val col: Int, val line: Int) : FormLayout(), BlockLayout {\n+\n+  protected var components: Array<Array<Component?>>? = null\n+  protected var aligns: Array<Array<ComponentConstraint?>>? = null\n+\n+  /**\n+   * Creates a new AbstractBlockLayout instance.\n+   * This is a special hidden for use in multiple block layout.\n+   */\n+  constructor() : this(1, 1)\n+\n+  init {\n+    className = Styles.BLOCK_LAYOUT\n+  }\n+\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+\n+  override fun onAttach(attachEvent: AttachEvent?) {\n+    layout()\n+  }\n+\n+  /**\n+   * Initialize the size of the layout\n+   */\n+  protected abstract fun initSize()\n+\n+  /**\n+   * Initialize layout size\n+   * @param columns The number of column.\n+   * @param rows The number of lines.\n+   */\n+  open fun initSize(columns: Int, rows: Int) {\n+    components = Array(columns) { arrayOfNulls(rows) }\n+    aligns = Array(columns) { arrayOfNulls(rows) }\n+  }\n+\n+  /**\n+   * Sets the widget in the given layout cell.\n+   * @param widget The widget to be set.\n+   * @param row The cell row.\n+   * @param column The Cell column.\n+   * @param colSpan The column span width\n+   * @param rowSpan The row span width.\n+   */\n+  open fun setComponent(widget: Component?, column: Int, row: Int, colSpan: Int, rowSpan: Int) {\n+    // TODO\n+  }\n+\n+  open fun addAlignedComponent(widget: Component?, constraint: ComponentConstraint?) {\n+    TODO()\n+  }\n+\n+  override fun layoutAlignedComponents() {\n+    TODO(\"Not yet implemented\")\n+  }\n+}"
  },
  {
    "sha": "c1803c7417ca5919c99bdcdcb01d1c5e129038e7",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/Block.kt",
    "status": "added",
    "additions": 386,
    "deletions": 0,
    "changes": 386,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/Block.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/Block.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/Block.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,386 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+import org.kopi.galite.form.BlockListener\n+import org.kopi.galite.ui.vaadin.base.Styles\n+import org.kopi.galite.ui.vaadin.form.Page\n+\n+import com.vaadin.flow.component.AttachEvent\n+import com.vaadin.flow.component.Component\n+import com.vaadin.flow.component.HasEnabled\n+import com.vaadin.flow.component.html.Div\n+import com.vaadin.flow.component.html.H4\n+\n+/**\n+ * The component of a simple block.\n+ * This UI component supports only laying components for simple\n+ * layout view.\n+ */\n+abstract class Block(private val droppable: Boolean) : Div(), HasEnabled {\n+\n+  /** The block layout. */\n+  private var layout: BlockLayout? = null\n+  var caption: H4? = null\n+  private val listeners = mutableListOf<BlockListener>()\n+  private var fields = mutableListOf<ColumnView>()\n+\n+  /**\n+   * The block buffer size.\n+   */\n+  var bufferSize = 0\n+\n+  /**\n+   * The block display size.\n+   */\n+  var displaySize = 0\n+\n+  /**\n+   * No chart option. Sets the block to not display the chart view even if it is a multi block.\n+   */\n+  var noChart = false\n+\n+  /**\n+   * The block fields values per record.\n+   */\n+  private val cachedValues = mutableListOf<CachedValue>()\n+\n+  init {\n+    className = Styles.BLOCK\n+  }\n+\n+  override fun onAttach(attachEvent: AttachEvent?) {\n+    setCachedValues()\n+  }\n+\n+  /**\n+   * Sets the block title.\n+   * @param title The block title.\n+   */\n+  override fun setTitle(title: String?) {\n+    super.setTitle(title)\n+    // TODO\n+  }\n+\n+  /**\n+   * Sets the sorted records of this block.\n+   * @param sortedRecords The sorted records.\n+   */\n+  open fun setSortedRecords(sortedRecords: IntArray) {\n+    // TODO\n+  }\n+\n+  /**\n+   * Sets the no move option for the block.\n+   * @param noMove The no move option.\n+   */\n+  fun setNoMove(noMove: Boolean) {\n+    // TODO\n+  }\n+\n+  /**\n+   * Switches the block view.\n+   * Switch is only performed when it is a multi block.\n+   * @param detail Should be switch to the detail view ?\n+   */\n+  fun switchView(detail: Boolean) {\n+    if (layout is MultiBlockLayout) {\n+      (layout as MultiBlockLayout).switchView(detail)\n+    }\n+  }\n+\n+  /**\n+   * Updates the layout scroll bar of it exists.\n+   * @param pageSize The scroll page size.\n+   * @param maxValue The max scroll value.\n+   * @param enable is the scroll bar enabled ?\n+   * @param value The scroll position.\n+   */\n+  fun updateScroll(pageSize: Int, maxValue: Int, enable: Boolean, value: Int) {\n+    // TODO\n+  }\n+\n+  /**\n+   * Sets the animation enabled for block view switch.\n+   * @param isAnimationEnabled Is animation enabled.\n+   */\n+  fun setAnimationEnabled(isAnimationEnabled: Boolean) {\n+    // TODO\n+  }\n+\n+  /**\n+   * Adds a component to this block.\n+   * @param component The component to be added.\n+   * @param x the x position.\n+   * @param y The y position.\n+   * @param width the column span width.\n+   * @param alignRight Is it right aligned ?\n+   * @param useAll Use all available area ?\n+   */\n+  fun addComponent(\n+          component: Component?,\n+          x: Int,\n+          y: Int,\n+          width: Int,\n+          height: Int,\n+          alignRight: Boolean,\n+          useAll: Boolean,\n+  ) {\n+    buildLayout()\n+    layout!!.addComponent(component, x, y, width, height, alignRight, useAll)\n+  }\n+\n+  /**\n+   * Builds the block layout.\n+   */\n+  fun buildLayout() {\n+    if (layout == null) {\n+      layout = createLayout()\n+      if (droppable) {\n+        //dndWrapper = DragAndDropWrapper(layout) TODO\n+        //dndWrapper.setImmediate(true)\n+        //setContent(dndWrapper)\n+      } else {\n+        setContent(layout as Component)\n+      }\n+    }\n+  }\n+\n+\n+  /**\n+   * Appends the given field to the block field list.\n+   * @param field The field to be added to block fields.\n+   */\n+  open fun addField(field: ColumnView) {\n+    if (field.index != -1) {\n+      if (field.index > fields.size) {\n+        fields.add(field)\n+      } else {\n+        fields.add(field.index, field)\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Registers a new block listener.\n+   * @param l The listener to be registered.\n+   */\n+  fun addBlockListener(l: BlockListener) {\n+    listeners.add(l)\n+  }\n+\n+  /**\n+   * Removes a registered block listener.\n+   * @param l The listener to be removed.\n+   */\n+  fun removeBlockListener(l: BlockListener) {\n+    listeners.add(l)\n+  }\n+\n+  /**\n+   * Fired when the scroll position has changed.\n+   * @param value The new scroll position.\n+   */\n+  protected fun fireOnScroll(value: Int) {\n+    // TODO\n+  }\n+\n+  /**\n+   * Fired when the active record is changed from the client side.\n+   * @param record The new active record.\n+   * @param sortedTopRec The top sorted record.\n+   */\n+  protected fun fireOnActiveRecordChange(record: Int, sortedTopRec: Int) {\n+    // TODO\n+  }\n+\n+  /**\n+   * Sends the active record to the client side.\n+   * @param record The new active record.\n+   */\n+  protected open fun fireActiveRecordChanged(record: Int) {\n+    // TODO\n+  }\n+\n+  /**\n+   * Send the new records order to the client side.\n+   * @param sortedRecords The new record orders.\n+   */\n+  protected fun fireOrderChanged(sortedRecords: IntArray) {\n+    setSortedRecords(sortedRecords)\n+  }\n+\n+  /**\n+   * Sends the new records info to client side.\n+   * @param rec The record number.\n+   * @param info The record info value.\n+   */\n+  protected open fun fireRecordInfoChanged(rec: Int, info: Int) {\n+    // TODO\n+  }\n+\n+  /**\n+   * Notify the client side that the value of the record has changed.\n+   * @param col The column index.\n+   * @param rec The record number.\n+   * @param value The new record value.\n+   */\n+  internal open fun fireValueChanged(col: Int, rec: Int, value: String?) {\n+    val existingValue: CachedValue?\n+\n+    val cachedValue = CachedValue(col, rec, value)\n+    existingValue = isAlreadyCached(cachedValue)\n+    if (existingValue != null) {\n+      cachedValues.remove(existingValue)\n+    }\n+    cachedValues.add(cachedValue)\n+  }\n+\n+  /**\n+   *\n+   * @param cachedValue : cached value\n+   * @return the existing cached value if it exists\n+   */\n+  protected open fun isAlreadyCached(cachedValue: CachedValue?): CachedValue? {\n+    for (value in cachedValues) {\n+      if (value.hasSameKey(cachedValue!!)) {\n+        return value\n+      }\n+    }\n+    return null\n+  }\n+\n+  /**\n+   * Sets the cached values of the block fields.\n+   */\n+  private fun setCachedValues() {\n+    for (cachedValue in cachedValues) {\n+      setCachedValue(cachedValue.col, cachedValue.rec, cachedValue.value)\n+    }\n+  }\n+\n+  /**\n+   * Sets the cached values for the given column.\n+   * @param column The column view number.\n+   * @param rec The record number.\n+   * @param value The column value.\n+   */\n+  private fun setCachedValue(column: Int, rec: Int, value: String) {\n+    val field = fields[column]\n+    if (field != null) {\n+      field.setValueAt(rec, value)\n+      field.updateValue(rec)\n+    }\n+  }\n+\n+  /**\n+   * Sets the record to be changed.\n+   * @param rec The record number.\n+   * @param val The change value.\n+   */\n+  open fun setRecordChanged(rec: Int, `val`: Boolean) {\n+    // TODO\n+  }\n+\n+\n+  /**\n+   * Returns the display line for the given record.\n+   * @param recno The record number.\n+   * @return The display line.\n+   */\n+  open fun getDisplayLine(recno: Int): Int {\n+    // TODO\n+    return 0\n+  }\n+\n+  /**\n+   * Sets the block active record from a given display line.\n+   * @param displayLine The display line.\n+   */\n+  open fun getRecordFromDisplayLine(displayLine: Int): Int {\n+    // return getDataPosition(displayToSortedRec.get(displayLine)) TODO\n+    return 0\n+  }\n+\n+  /**\n+   * Sets the block content.\n+   * @param content The block content.\n+   */\n+  protected open fun setContent(content: Component) {\n+    removeAll()\n+    add(content)\n+  }\n+\n+  /**\n+   * Sets the block widget layout.\n+   * @param layout The widget layout.\n+   */\n+  protected open fun setLayout(layout: BlockLayout) {\n+    this.layout = layout\n+  }\n+\n+  /**\n+   * Sets the block caption.\n+   * @param caption The block caption.\n+   * @param maxColumnPos The maximum column position.\n+   */\n+  protected open fun setCaption(caption: String?) {\n+    if (caption == null || caption.isEmpty()) {\n+      return\n+    }\n+    val page: Page<*>? = parentPage\n+    this.caption = H4(caption)\n+    this.caption!!.className = \"block-title\"\n+    page?.setCaption(this)\n+  }\n+\n+  /**\n+   * The parent block page.\n+   */\n+  var parentPage: Page<*>? = null\n+\n+  /**\n+   * Layout components Creates the content of the block.\n+   */\n+  protected open fun layout() {\n+    // create detail block view.\n+    layout?.layout()\n+  }\n+\n+  open fun clear() {\n+    super.removeAll()\n+    if (layout != null) {\n+      try {\n+        layout!!.removeAll()\n+      } catch (e: IndexOutOfBoundsException) {\n+        // ignore cause it can be cleared before\n+      }\n+      layout = null\n+    }\n+    caption = null\n+  }\n+\n+  //---------------------------------------------------\n+  // ABSTRACT METHODS\n+  //---------------------------------------------------\n+  /**\n+   * Creates the block layout.\n+   * @return The created block layout.\n+   */\n+  abstract fun createLayout(): BlockLayout?\n+}"
  },
  {
    "sha": "7417dad61decc728b7c919411ae9827e67b51bc7",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockAlignment.kt",
    "status": "added",
    "additions": 121,
    "deletions": 0,
    "changes": 121,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockAlignment.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockAlignment.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockAlignment.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,121 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+import com.vaadin.flow.component.Component\n+\n+/**\n+ * The block alignment info.\n+ */\n+class BlockAlignment {\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+  /**\n+   * Returns `true` is there is an alignment for the given column.\n+   * @param x The column index.\n+   * @return `true` is there is an alignment for the given column.\n+   */\n+  fun isAligned(x: Int): Boolean {\n+    var x = x\n+    x--\n+    return x >= 0 && x < targets.size && targets[x] != -1\n+  }\n+\n+  /**\n+   * Returns the target position for for a given column.\n+   * @param x The column index.\n+   * @return The target position for for a given column.\n+   */\n+  fun getTargetAt(x: Int): Int {\n+    return if (x < 0 || x >= targets.size) {\n+      -1\n+    } else {\n+      targets[x]\n+    }\n+  }\n+\n+  /**\n+   * Returns the target position of the block alignment.\n+   * @param x The aligned column index.\n+   * @return The target position of the block alignment.\n+   */\n+  internal fun getTargetPos(x: Int): Int {\n+    // block alignment\n+    if (x % 2 == 1 && isChart && isAligned(x / 2 + 1)) {\n+      return getFieldTargetPos(x / 2 + 1)\n+    } else if (!isChart) {\n+      // alignment if block is not a chart\n+      return if (x % 2 == 1) {\n+        // fields\n+        getFieldTargetPos(x / 2 + 1)\n+      } else {\n+        // labels\n+        getLabelTargetPos(x / 2 + 1)\n+      }\n+    }\n+    return 0\n+  }\n+\n+  /**\n+   * Returns the target position of the block alignment.\n+   * @param x The aligned column index.\n+   * @return The target position of the block alignment.\n+   */\n+  protected fun getFieldTargetPos(x: Int): Int {\n+    var x = x\n+    val target: Int\n+    x-- // we want to align middle\n+    target = getTargetAt(x)\n+\n+    // if (x >= 0 && x < targets.length && targets[x] != -1) {\n+    if (target != -1) {\n+      if (ori == null) {\n+        return 0\n+      }\n+      return if (isChart) target else target * 2 + 1\n+    }\n+    return 0\n+  }\n+\n+  /**\n+   * Returns the label target position.\n+   * @param x The column position.\n+   * @return The label target position.\n+   */\n+  protected fun getLabelTargetPos(x: Int): Int {\n+    var x = x\n+    val target: Int\n+    x-- // we want to align middle\n+    target = getTargetAt(x)\n+\n+    // if (x >= 0 && x < targets.length && targets[x] != -1) {\n+    return if (target != -1) {\n+      if (ori == null) {\n+        0\n+      } else 2 * target\n+    } else 0\n+  }\n+\n+  //---------------------------------------------------\n+  // DATA MEMBERS\n+  //---------------------------------------------------\n+  var targets: IntArray = intArrayOf()\n+  var isChart = false\n+  var ori: Component? = null\n+}"
  },
  {
    "sha": "89cf7a215f2679f621fd56ae113c9f105c03c0c9",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockLayout.kt",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockLayout.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockLayout.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockLayout.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,64 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+import com.vaadin.flow.component.Component\n+import com.vaadin.flow.component.HasComponents\n+\n+/**\n+ * The block layout should provides its children\n+ * and set a given component in a specified position.\n+ */\n+interface BlockLayout : HasComponents {\n+\n+  /**\n+   * Adds a component to this block layout.\n+   *\n+   * @param component  The component to be added.\n+   * @param x          the x position.\n+   * @param y          The y position.\n+   * @param width      the column span width.\n+   * @param alignRight Is it right aligned ?\n+   * @param useAll     Use all available area ?\n+   */\n+  fun addComponent(component: Component?, x: Int, y: Int, width: Int, height: Int, alignRight: Boolean, useAll: Boolean)\n+\n+  /**\n+   * Lays out the components added to the layout.\n+   */\n+  fun layout()\n+\n+  /**\n+   * Clear the layout content.\n+   */\n+  fun clear()\n+\n+  /**\n+   * Lays out some extra components. This used to render not standard components.\n+   */\n+  fun layoutAlignedComponents()\n+\n+  /**\n+   * Updates the layout scroll bar of it exists.\n+   * @param pageSize The scroll page size.\n+   * @param maxValue The max scroll value.\n+   * @param enable is the scroll bar enabled ?\n+   * @param value The scroll position.\n+   */\n+  fun updateScroll(pageSize: Int, maxValue: Int, enable: Boolean, value: Int)\n+}"
  },
  {
    "sha": "19908ea4d6fdbbe9215df7521410b74d98fd4a90",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockListener.kt",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockListener.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockListener.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/BlockListener.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+import java.io.Serializable\n+\n+/**\n+ * Registered objects are notified with block performed actions.\n+ */\n+interface BlockListener : Serializable {\n+\n+  /**\n+   * Fired when the scroll position is changed.\n+   * @param value The new scroll position.\n+   */\n+  fun onScroll(value: Int)\n+\n+  /**\n+   * Fired when the active record is changed from the client side.\n+   * @param record The new active record.\n+   * @param sortedTopRec The sorted top record.\n+   */\n+  fun onActiveRecordChange(record: Int, sortedTopRec: Int)\n+}"
  },
  {
    "sha": "0a4487a43fc4bc18a4e70f246b7c0b2360c8f3df",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/CachedValue.kt",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/CachedValue.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/CachedValue.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/CachedValue.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+/**\n+ * A cached value structure to be passed to the client side using the shared state mechanism.\n+ *\n+ * @param col The column index.\n+ * @param rec The record number.\n+ * @param value The cached value.\n+ */\n+class CachedValue(var col: Int, var rec: Int, value: String?) {\n+\n+  /**\n+   * The cached value.\n+   */\n+  var value: String = value ?: \"\"\n+\n+  /**\n+   *\n+   * @param other : cached value\n+   * @return true if there is an existing cached value having the same key\n+   */\n+  fun hasSameKey(other: CachedValue): Boolean {\n+    return col == other.col && rec == other.rec\n+  }\n+\n+  override fun hashCode(): Int {\n+    return col + rec + value.hashCode()\n+  }\n+\n+  override fun equals(obj: Any?): Boolean {\n+    return if (obj is CachedValue) {\n+      col == obj.col && rec == obj.rec && value == obj.value\n+    } else {\n+      super.equals(obj)\n+    }\n+  }\n+}"
  },
  {
    "sha": "d5045e2ec2ab148a2f5b22167dc9cabee746e6b9",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/ChartBlockLayout.kt",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/ChartBlockLayout.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/ChartBlockLayout.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/ChartBlockLayout.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+import com.vaadin.flow.component.Component\n+\n+/**\n+ * The chart block layout.\n+ *\n+ * @param col The number of columns.\n+ * @param line The number of lines.\n+ */\n+class ChartBlockLayout(col: Int, line: Int) : AbstractBlockLayout(col, line), BlockLayout {\n+\n+  /**\n+   * Can the block scroll ? If yes, draw a scroll bar\n+   */\n+  var hasScroll = false\n+\n+  override fun initSize() {\n+    TODO(\"Not yet implemented\")\n+  }\n+\n+  override fun addComponent(\n+          component: Component?, x: Int, y: Int, width: Int, height: Int, alignRight: Boolean,\n+          useAll: Boolean,\n+  ) {\n+    TODO(\"Not yet implemented\")\n+  }\n+\n+  override fun layout() {\n+    TODO(\"Not yet implemented\")\n+  }\n+\n+  override fun clear() {\n+    TODO(\"Not yet implemented\")\n+  }\n+\n+  override fun updateScroll(pageSize: Int, maxValue: Int, enable: Boolean, value: Int) {\n+    TODO(\"Not yet implemented\")\n+  }\n+}"
  },
  {
    "sha": "f304de133c1e017ce88eb81bc2ea898b68a9ec0b",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/ColumnView.kt",
    "status": "added",
    "additions": 213,
    "deletions": 0,
    "changes": 213,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/ColumnView.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/ColumnView.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/ColumnView.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,213 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+import org.kopi.galite.ui.vaadin.field.Field\n+import org.kopi.galite.ui.vaadin.label.Label\n+\n+/**\n+ * A column view represents the display entity of a field for each record\n+ * in a block model. This will collect all field connector that represents\n+ * the same field but in different records.\n+ */\n+class ColumnView(val block: Block) {\n+\n+  //---------------------------------------------------\n+  // DATA MEMBERS\n+  //---------------------------------------------------\n+  /** Sets the label associated with this column view. */\n+  var label: Label? = null\n+\n+  /** The detail label of this column view. */\n+  var detailLabel: Label? = null\n+  private var detailDisplay: Field? = null\n+  private var displays = arrayOfNulls<Field>(block.displaySize)\n+  private var values = arrayOfNulls<String>(block.bufferSize)\n+  private var fgColors = arrayOfNulls<String>(block.bufferSize)\n+  private var bgColors = arrayOfNulls<String>(block.bufferSize)\n+\n+  /** The column view index */\n+  var index: Int = -1\n+    private set\n+\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+  /**\n+   * Sets the detail display of this column view.\n+   * @param detailDisplay The detail display field.\n+   */\n+  fun setDetailDisplay(detailDisplay: Field) {\n+    this.detailDisplay = detailDisplay\n+    this.detailDisplay!!.columnView = this\n+    if (index == -1) {\n+      index = detailDisplay.index\n+    }\n+  }\n+\n+  /**\n+   * Appends the given field to the column view collector.\n+   * @param field The field to be added.\n+   */\n+  fun addField(field: Field) {\n+    displays[field.position] = field\n+    field.columnView = this\n+    index = field.index\n+  }\n+\n+  /**\n+   * Returns the field for the given display line.\n+   * @param displayLine The display line.\n+   * @return The field object.\n+   */\n+  fun getField(displayLine: Int): Field? {\n+    return if (displayLine != -1) {\n+      displays[displayLine]\n+    } else {\n+      null\n+    }\n+  }\n+\n+  /**\n+   * Sets the value of this column view in the given record number.\n+   * @param record The record number.\n+   * @param newValue The record value.\n+   */\n+  fun setValueAt(record: Int, newValue: String?) {\n+    var newValue = newValue\n+    var oldValue: String?\n+    oldValue = values[record]\n+    if (oldValue == null) {\n+      oldValue = \"\"\n+    }\n+    if (newValue == null) {\n+      newValue = \"\"\n+    }\n+    if (newValue != oldValue) {\n+      values[record] = newValue\n+      setRecordChanged(record, true)\n+    }\n+  }\n+\n+  /**\n+   * Navigates to the next field in container block.\n+   */\n+  fun gotoNextField() {\n+    if (block != null) {\n+      // block.gotoNextField() TODO\n+    }\n+  }\n+\n+  /**\n+   * Navigates to the previous field in container block.\n+   */\n+  fun gotoPrevField() {\n+    if (block != null) {\n+      // block.gotoPrevField() TODO\n+    }\n+  }\n+\n+  /**\n+   * Navigates to next empty must fill field in container block.\n+   */\n+  fun gotoNextEmptyMustfill() {\n+    if (block != null) {\n+      // block.gotoNextEmptyMustfill() TODO\n+    }\n+  }\n+\n+  /**\n+   * Navigates to the next record in container block.\n+   */\n+  fun gotoNextRecord() {\n+    if (block != null) {\n+      // block.gotoNextRecord() TODO\n+    }\n+  }\n+\n+  /**\n+   * Navigates to the previous record in container block.\n+   */\n+  fun gotoPrevRecord() {\n+    if (block != null) {\n+      // block.gotoPrevRecord() TODO\n+    }\n+  }\n+\n+  /**\n+   * Navigates to the first record in container block.\n+   */\n+  fun gotoFirstRecord() {\n+    if (block != null) {\n+      // block.gotoFirstRecord() TODO\n+    }\n+  }\n+\n+  /**\n+   * Navigates to the last record in container block.\n+   */\n+  fun gotoLastRecord() {\n+    if (block != null) {\n+      // block.gotoLastRecord() TODO\n+    }\n+  }\n+\n+  /**\n+   * Sets the given record to be changed.\n+   * @param rec The record number.\n+   * @param val The change value.\n+   */\n+  fun setRecordChanged(rec: Int, `val`: Boolean) {\n+    block.setRecordChanged(rec, `val`)\n+  }\n+\n+  /**\n+   * Updates the current block display line field value\n+   * @param record The record number.\n+   */\n+  fun updateValue(record: Int) {\n+    val displayLine: Int = block.getDisplayLine(record)\n+\n+    if (displayLine != -1) {\n+      displays[displayLine]!!.updateValue()\n+    }\n+    // update detail display value\n+    // update detail display value\n+    if (detailDisplay != null) {\n+      detailDisplay!!.updateValue()\n+    }\n+  }\n+\n+  /**\n+   * Returns the value at the given display line.\n+   * @param displayLine The record number.\n+   * @return The value at the given display line.\n+   */\n+  fun getValueAt(displayLine: Int): String? {\n+    return values[getRecordFromDisplayLine(displayLine)]\n+  }\n+\n+  /**\n+   * Returns the record for the given display line.\n+   * @param displayLine The display line.\n+   * @return The record number.\n+   */\n+  fun getRecordFromDisplayLine(displayLine: Int): Int {\n+    return block.getRecordFromDisplayLine(displayLine)\n+  }\n+}"
  },
  {
    "sha": "c682dd9527a8cceb9625e4df5454e4663e50b1e1",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/ComponentConstraint.kt",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/ComponentConstraint.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/ComponentConstraint.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/ComponentConstraint.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+/**\n+ * The child component layout constraint.\n+ *\n+ * Creates a new `ComponentConstraint` instance.\n+ * @param x The position in x axis.\n+ * @param y The position in y axis.\n+ * @param width The column span width.\n+ * @param height Number of line\n+ * @param alignRight Is it right aligned ?\n+ * @param useAll Use the whole possible width of the column ?\n+ */\n+class ComponentConstraint(var x: Int,\n+                          var y: Int,\n+                          var width: Int,\n+                          var height: Int,\n+                          var alignRight: Boolean = false,\n+                          var useAll: Boolean = false) {\n+\n+  override fun toString(): String {\n+    return \"[ X = $x, Y = $y, width = $width, height = $height]\"\n+  }\n+}"
  },
  {
    "sha": "782127df2b375a2ba0683569a75c839bbe9b4a8d",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/LayoutManager.kt",
    "status": "added",
    "additions": 182,
    "deletions": 0,
    "changes": 182,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/LayoutManager.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/LayoutManager.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/LayoutManager.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,182 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+import com.vaadin.flow.component.Component\n+\n+/**\n+ * A simple block layout manager. This class aims to correct component positions in case of\n+ * column and row span.\n+ */\n+class LayoutManager(private var layout: AbstractBlockLayout?) {\n+\n+  private var handler: ConstraintsHandler? = ConstraintsHandler()\n+\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+  /**\n+   * Sets the component in the given layout cell.\n+   * @param component The component to be set.\n+   * @param row The cell row.\n+   * @param column The Cell column.\n+   * @param colSpan The column span width\n+   * @param rowSpan The row span width.\n+   */\n+  fun setComponent(component: Component?, c: ComponentConstraint, colSpan: Int, rowSpan: Int) {\n+    val constraint = ConstraintWrapper(c, colSpan, rowSpan)\n+    constraint.component = component\n+    handler!!.add(constraint)\n+  }\n+\n+  /**\n+   * Layout the container.\n+   */\n+  internal fun layout() {\n+    handler!!.handleColSpan()\n+    handler!!.layout(layout)\n+  }\n+\n+  /**\n+   * Releases the content of this layout manager\n+   */\n+  private fun release() {\n+    handler!!.release()\n+    handler = null\n+    layout = null\n+  }\n+  //---------------------------------------------------\n+  // INNER CLASSES\n+  //---------------------------------------------------\n+  /**\n+   * A component constraint wrapper\n+   */\n+  class ConstraintWrapper(val constraint: ComponentConstraint,\n+                          colSpan: Int,\n+                          rowSpan: Int) {\n+\n+    //---------------------------------------\n+    // IMPLEMENTATIONS\n+    //---------------------------------------\n+    override fun equals(obj: Any?): Boolean {\n+      if (obj is ConstraintWrapper) {\n+        val w = obj\n+        return column == w.column && row == w.row && colSpan == w.colSpan && rowSpan == w.rowSpan\n+      }\n+      return false\n+    }\n+\n+    override fun hashCode(): Int {\n+      return column + row + colSpan + rowSpan\n+    }\n+\n+    var column = constraint.x\n+    var row = constraint.y\n+    var colSpan = colSpan\n+    var rowSpan = rowSpan\n+    var component: Component? = null\n+  }\n+\n+  /**\n+   * A component constraints wrapper\n+   */\n+  class ConstraintsHandler {\n+    private var constraints: MutableList<ConstraintWrapper>? = mutableListOf()\n+\n+    //---------------------------------------\n+    // IMPLEMENTATIONS\n+    //---------------------------------------\n+    /**\n+     * Adds a constraint to the buffer.\n+     * @param constraint The constraint to be buffered.\n+     */\n+    fun add(constraint: ConstraintWrapper) {\n+      constraints!!.add(constraint)\n+    }\n+\n+    /**\n+     * Handles the column span problems\n+     */\n+    fun handleColSpan() {\n+      for (c in constraints!!) {\n+        // look for constraints that have column span\n+        if (c.colSpan > 1) {\n+          // correct the position of all components beside the spanned component.\n+          // aligns[x][y].x - (colSpan == 0 ? 1 : colSpan) + 1;\n+          val constraints = getBesideConstraints(c.row, c.column)\n+          for (constraint in constraints) {\n+            constraint.column = constraint.column - c.colSpan + 1\n+            constraint.constraint.x = constraint.column\n+          }\n+        }\n+      }\n+    }\n+\n+    /**\n+     * Returns the constraints beside the given row and column.\n+     * @param row The constraint row.\n+     * @param col The starting column.\n+     * @return The list of the constraint beside the starting column.\n+     */\n+    protected fun getBesideConstraints(row: Int, col: Int): List<ConstraintWrapper> {\n+      val constraints: MutableList<ConstraintWrapper>\n+      constraints = ArrayList()\n+      for (c in this.constraints!!) {\n+        if (c.row == row && c.column > col) {\n+          constraints.add(c)\n+        }\n+      }\n+      return constraints\n+    }\n+\n+    /**\n+     * Returns the constraints bottom the given row and column.\n+     * @param row The constraint row.\n+     * @param col The starting column.\n+     * @return The list of the constraint beside the starting column.\n+     */\n+    protected fun getBottomConstraints(row: Int, col: Int): List<ConstraintWrapper> {\n+      val constraints: MutableList<ConstraintWrapper>\n+      constraints = ArrayList()\n+      for (c in this.constraints!!) {\n+        if (c.row > row && c.row <= row + c.rowSpan && c.column > col) {\n+          constraints.add(c)\n+        }\n+      }\n+      return constraints\n+    }\n+\n+    /**\n+     * Layouts the container.\n+     * @param container The container to be filled.\n+     */\n+    fun layout(container: AbstractBlockLayout?) {\n+      for (c in constraints!!) {\n+        container!!.setComponent(c.component, c.column, c.row, c.colSpan, c.rowSpan)\n+      }\n+    }\n+\n+    /**\n+     * Releases the content of this constraint handler\n+     */\n+    fun release() {\n+      constraints!!.clear()\n+      constraints = null\n+    }\n+  }\n+}"
  },
  {
    "sha": "e0b3ca0d2432b432d398229287fc27c7cde87905",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/MultiBlockLayout.kt",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/MultiBlockLayout.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/MultiBlockLayout.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/MultiBlockLayout.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+import com.vaadin.flow.component.Component\n+import com.vaadin.flow.component.html.Div\n+\n+/**\n+ * The multiple block layout widget composed of a simple\n+ * block layout and a chart block layout.\n+ */\n+class MultiBlockLayout : AbstractBlockLayout() {\n+\n+  private var pane: Div? = null\n+\n+  /**\n+   * Switch from the chart view to the detail view and vis versa.\n+   * Switch is only performed when it is a multi block.\n+   * @param detail Should we switch to detail view ?\n+   */\n+  fun switchView(detail: Boolean) {\n+    // TODO\n+  }\n+\n+  override fun initSize() {\n+    TODO(\"Not yet implemented\")\n+  }\n+\n+  override fun addComponent(\n+          component: Component?, x: Int, y: Int, width: Int, height: Int, alignRight: Boolean,\n+          useAll: Boolean,\n+  ) {\n+    TODO(\"Not yet implemented\")\n+  }\n+\n+  override fun layout() {\n+    TODO(\"Not yet implemented\")\n+  }\n+\n+  override fun clear() {\n+    TODO(\"Not yet implemented\")\n+  }\n+\n+  override fun layoutAlignedComponents() {\n+    TODO(\"Not yet implemented\")\n+  }\n+\n+  override fun updateScroll(pageSize: Int, maxValue: Int, enable: Boolean, value: Int) {\n+    TODO(\"Not yet implemented\")\n+  }\n+}"
  },
  {
    "sha": "f99835f8fa467ba3015f499531ca011e30811505",
    "filename": "src/org/kopi/vkopi/lib/ui/vaadinflow/block/SimpleBlockLayout.kt",
    "status": "added",
    "additions": 216,
    "deletions": 0,
    "changes": 216,
    "blob_url": "https://github.com/kopiLeft/Kopi/blob/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/SimpleBlockLayout.kt",
    "raw_url": "https://github.com/kopiLeft/Kopi/raw/5ecb03c045bab490a6621bb2cc3e30578ecf2f10/src/org/kopi/vkopi/lib/ui/vaadinflow/block/SimpleBlockLayout.kt",
    "contents_url": "https://api.github.com/repos/kopiLeft/Kopi/contents/src/org/kopi/vkopi/lib/ui/vaadinflow/block/SimpleBlockLayout.kt?ref=5ecb03c045bab490a6621bb2cc3e30578ecf2f10",
    "patch": "@@ -0,0 +1,216 @@\n+/*\n+ * Copyright (c) 2013-2020 kopiLeft Services SARL, Tunis TN\n+ * Copyright (c) 1990-2020 kopiRight Managed Solutions GmbH, Wien AT\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License version 2.1 as published by the Free Software Foundation.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+package org.kopi.galite.ui.vaadin.block\n+\n+import org.kopi.galite.ui.vaadin.actor.Actor\n+import org.kopi.galite.ui.vaadin.form.DField\n+\n+import com.vaadin.flow.component.Component\n+import com.vaadin.flow.component.html.Div\n+\n+/**\n+ * The simple block layout component.\n+ *\n+ * @param col The column number.\n+ * @param line The row number.\n+ */\n+open class SimpleBlockLayout(col: Int, line: Int) : AbstractBlockLayout(col, line) {\n+  var align: BlockAlignment? = null\n+  private var follows: MutableList<Component>? = null\n+  private var followsAligns: MutableList<ComponentConstraint>? = null\n+\n+  init {\n+    className = \"simple\"\n+    initSize()\n+  }\n+\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+\n+  override fun initSize() {\n+    initSize(col, line)\n+    // setAlignment(align) TODO\n+  }\n+\n+  override fun initSize(columns: Int, rows: Int) {\n+    super.initSize(columns, rows)\n+    follows = ArrayList()\n+    followsAligns = ArrayList()\n+  }\n+\n+  override fun addComponent(\n+          component: Component?, x: Int, y: Int, width: Int, height: Int, alignRight: Boolean,\n+          useAll: Boolean,\n+  ) {\n+    val constraints = ComponentConstraint(x,\n+                                          y,\n+                                          width,\n+                                          height,\n+                                          alignRight,\n+                                          useAll)\n+    if (align == null) {\n+      if (width < 0) {\n+        follows!!.add(component!!)\n+        followsAligns!!.add(constraints)\n+      } else {\n+        if (component is DField) {\n+          val formItem = object : FormItem(component) {\n+            init {\n+              addToLabel(component.label)\n+            }\n+          }\n+          aligns!![x][y] = constraints\n+          components!![x][y] = formItem\n+\n+          // TODO: Grid container?\n+\n+          // a follow field has no label\n+          // an actor field has no label too.\n+          // we treat this cases separately\n+          val columnView: ColumnView = if (constraints.width < 0 || component.content is Actor) {\n+            ColumnView(getBlock()).also { columnView ->\n+              columnView.label = null\n+              columnView.addField(component)\n+              if (blockInDetailMode()) {\n+                columnView.detailLabel = null\n+                columnView.setDetailDisplay(component)\n+              }\n+            }\n+          } else {\n+            ColumnView(getBlock()).also { columnView ->\n+              // Label\n+              columnView.label = component.label\n+              if (blockInDetailMode()) {\n+                columnView.detailLabel = component.label\n+              }\n+\n+              // Field\n+              columnView.addField(component)\n+              if (blockInDetailMode()) {\n+                columnView.setDetailDisplay(component)\n+              }\n+            }\n+          }\n+\n+          getBlock().addField(columnView)\n+        }\n+      }\n+    } else {\n+      if (component == null) {\n+        return\n+      }\n+\n+      // add to the original block as extra components.\n+      val newConstraint = ComponentConstraint(align!!.getTargetPos(x),\n+                                              y,\n+                                              width,\n+                                              height,\n+                                              alignRight,\n+                                              useAll)\n+      // adds an extra component to the block.\n+      addAlignedComponent(component, newConstraint)\n+    }\n+  }\n+\n+  override fun layout() {\n+    // Responsive steps\n+    setResponsiveSteps(\n+            *Array(col) {\n+              ResponsiveStep(\"\" + (15 + 5 * it) + \"em\", it + 1, ResponsiveStep.LabelsPosition.TOP)\n+            }\n+    )\n+\n+    if (align != null) {\n+      // aligned blocks will be handled differently\n+      return\n+    } else {\n+      val manager = LayoutManager(this)\n+      for (y in components!![0].indices) {\n+        for (x in components!!.indices) {\n+          if (components!![x][y] != null && aligns!![x][y] != null) {\n+            // TODO\n+            /*manager.setComponent(components!![x][y],\n+                                 aligns!![x][y]!!,\n+                                 aligns!![x][y]!!.width.coerceAtMost(getAllocatedWidth(x, y)),\n+                                 aligns!![x][y]!!.height.coerceAtMost(getAllocatedHeight(x, y)))\n+            setAlignment(aligns!![x][y]!!.y, aligns!![x][y]!!.x, aligns!![x][y]!!.alignRight)*/\n+            add(components!![x][y])\n+          } else {\n+            add(Div())\n+          }\n+        }\n+      }\n+      manager.layout()\n+      // add follows\n+      for (i in follows!!.indices) {\n+        val align = followsAligns!![i]\n+        val comp: Component = follows!![i]\n+        // addInfoComponentdAt(comp, align.x, align.y) TODO\n+      }\n+    }\n+  }\n+\n+  fun getBlock(): Block {\n+    var block: Block? = null\n+    parent.ifPresent {\n+      block = it as Block\n+    }\n+\n+    requireNotNull(block)\n+\n+    return block!!\n+  }\n+\n+  /**\n+   * Returns if the block is in detail mode\n+   *\n+   * @return True if the block is in detail mode.\n+   */\n+  fun blockInDetailMode(): Boolean {\n+    return getBlock().noChart\n+  }\n+\n+  override fun clear() {\n+    TODO(\"Not yet implemented\")\n+  }\n+\n+  override fun updateScroll(pageSize: Int, maxValue: Int, enable: Boolean, value: Int) {\n+    TODO(\"Not yet implemented\")\n+  }\n+\n+\n+  //---------------------------------------------------\n+  // IMPLEMENTATIONS\n+  //---------------------------------------------------\n+  /**\n+   * Sets the alignment information for this simple layout.\n+   * @param original The original block to align with.\n+   * @param targets The alignment targets.\n+   * @param isChart Is the original block chart ?\n+   */\n+  open fun setBlockAlignment(original: Component, targets: IntArray, isChart: Boolean) {\n+    align = BlockAlignment()\n+\n+    align!!.isChart = isChart\n+    align!!.targets = targets\n+    align!!.ori = original\n+\n+    // alignPane = VAlignPanel(align) TODO\n+  }\n+}"
  }
]
