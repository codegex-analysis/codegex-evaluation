[
  {
    "sha": "578034262ad743982d2a3388680dc484595478e4",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/pom.xml",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/pom.xml",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/pom.xml?ref=66bc2378a07243a6b53f865f11934d1421f056f5",
    "patch": "@@ -51,8 +51,12 @@\n             <artifactId>json</artifactId>\n             <version>20210307</version>\n         </dependency>\n-\n-\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <version>4.3.3</version>\n+            <scope>test</scope>\n+        </dependency>\n     </dependencies>\n \n     <properties>"
  },
  {
    "sha": "2496a3916d6e60c9a5495fea11ee77fb33e0e9be",
    "filename": "src/main/java/Azumi/org/Log/Logs.java",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/java/Azumi/org/Log/Logs.java",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/java/Azumi/org/Log/Logs.java",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/src/main/java/Azumi/org/Log/Logs.java?ref=66bc2378a07243a6b53f865f11934d1421f056f5",
    "patch": "@@ -8,9 +8,7 @@\n @Table(name = \"logs\")\n @Getter\n @Setter\n-@ToString\n @NoArgsConstructor\n-@AllArgsConstructor\n @RequiredArgsConstructor\n public class Logs {\n \n@@ -22,7 +20,6 @@\n     private int userId;\n \n     @NonNull\n-    @Column(name = \"post_id\")\n     private int postId;\n \n     @NonNull"
  },
  {
    "sha": "e8441c50d5fb3b70a3bfb5f178668443f59434ef",
    "filename": "src/main/java/Azumi/org/Post/DownloadFromURLApi.java",
    "status": "modified",
    "additions": 15,
    "deletions": 9,
    "changes": 24,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/java/Azumi/org/Post/DownloadFromURLApi.java",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/java/Azumi/org/Post/DownloadFromURLApi.java",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/src/main/java/Azumi/org/Post/DownloadFromURLApi.java?ref=66bc2378a07243a6b53f865f11934d1421f056f5",
    "patch": "@@ -1,25 +1,30 @@\n package Azumi.org.Post;\n \n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import org.hibernate.criterion.Example;\n-import org.json.JSONArray;\n-import org.json.JSONObject;\n+import lombok.extern.java.Log;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.stereotype.Component;\n \n import java.io.BufferedReader;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n import java.net.HttpURLConnection;\n import java.net.URL;\n-import java.util.List;\n+import java.util.Properties;\n \n+@Component\n+@Slf4j\n+@Log\n public class DownloadFromURLApi {\n \n-    //method responsible for update DB from URL adress\n+    @Value( \"${URL.API}\" )\n+    private String URL;\n+    //method responsible for update DB from URL address\n     public StringBuffer updateDB() {\n         StringBuffer sb = new StringBuffer();\n         try {\n-            URL u = new URL(\"https://jsonplaceholder.typicode.com/posts\");\n+            URL u = new URL(URL);\n             HttpURLConnection url = (HttpURLConnection) u.openConnection();\n             String line;\n             if (url.getResponseCode() == 200) {\n@@ -29,9 +34,10 @@ public StringBuffer updateDB() {\n                 while ((line = br.readLine()) != null) {\n                     sb.append(line);\n                 }\n+                im.close();\n             }\n         } catch (Exception e) {\n-            System.out.println(e);\n+            log.error(e.getMessage());\n         }\n         return sb;\n     }"
  },
  {
    "sha": "e2e9d7f4b38971166c979f3f39d4b2317bfe7941",
    "filename": "src/main/java/Azumi/org/Post/Post.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/java/Azumi/org/Post/Post.java",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/java/Azumi/org/Post/Post.java",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/src/main/java/Azumi/org/Post/Post.java?ref=66bc2378a07243a6b53f865f11934d1421f056f5",
    "patch": "@@ -1,15 +1,17 @@\n package Azumi.org.Post;\n import lombok.*;\n+import org.springframework.beans.factory.annotation.Autowired;\n+\n import javax.persistence.*;\n+\n @Entity\n @Table(name = \"posts\")\n @Getter\n @Setter\n-@ToString\n @NoArgsConstructor\n @AllArgsConstructor\n-@RequiredArgsConstructor\n public class Post {\n+\n     @NonNull\n     @Column(name = \"id_user\")\n     private int userId;"
  },
  {
    "sha": "65bee8fc093ad00cb4b3e277ee5a1f66874c9280",
    "filename": "src/main/java/Azumi/org/Post/PostController.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/java/Azumi/org/Post/PostController.java",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/java/Azumi/org/Post/PostController.java",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/src/main/java/Azumi/org/Post/PostController.java?ref=66bc2378a07243a6b53f865f11934d1421f056f5",
    "patch": "@@ -0,0 +1,62 @@\n+package Azumi.org.Post;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.*;\n+\n+@Controller\n+public class PostController {\n+    @Autowired\n+    PostService pService;\n+\n+    @GetMapping(\"/posts\")\n+    public ResponseEntity displayPostsId() throws JsonProcessingException {\n+        return pService.displayPostsId();\n+    }\n+    // display posts by title\n+    @GetMapping(\"/posts/{postTitle}\")\n+    public ResponseEntity displayPostsByTitle(@PathVariable(\"postTitle\") String postTitle) throws JsonProcessingException {\n+            return pService.displayPostsByTitle(postTitle);\n+    }\n+\n+    // display all without author id\n+    @GetMapping(\"/posts/withoutId\")\n+    public ResponseEntity displayPostsWithoutId() throws JsonProcessingException {\n+        return pService.displayPostsWithoutId();\n+    }\n+\n+    // edit posts Title by author\n+    @PutMapping(\"/posts/title/{id}\")\n+    public ResponseEntity editPostTitle(@RequestBody String newTitle, @PathVariable(\"id\") int idPost,\n+                                        @RequestHeader(\"userid\") int userId) throws JsonProcessingException{\n+        return pService.editPostTitle(newTitle, idPost, userId);\n+    }\n+\n+    //edit postBody by author\n+    @PutMapping(\"/posts/body/{id}\")\n+    public ResponseEntity editPostBody(@RequestBody String newBody, @PathVariable(\"id\") int idPost,\n+                                       @RequestHeader(\"userid\") int userId) throws JsonProcessingException{\n+        return pService.editPostBody(newBody, idPost, userId);\n+    }\n+\n+    @PutMapping(\"/rest\")\n+    public ResponseEntity update(){\n+        return pService.update();\n+    }\n+\n+    // delete post by author\n+    @DeleteMapping(\"/posts/{id}\")\n+    public ResponseEntity deletePost(@PathVariable(\"id\") int idPost, @RequestHeader(\"userid\") int userId) {\n+        return pService.deletePost(idPost, userId);\n+    }\n+\n+\n+\n+\n+\n+\n+\n+\n+}"
  },
  {
    "sha": "3703ffc9fa4a7de96049441a354492268833c11b",
    "filename": "src/main/java/Azumi/org/Post/PostService.java",
    "status": "modified",
    "additions": 18,
    "deletions": 25,
    "changes": 43,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/java/Azumi/org/Post/PostService.java",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/java/Azumi/org/Post/PostService.java",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/src/main/java/Azumi/org/Post/PostService.java?ref=66bc2378a07243a6b53f865f11934d1421f056f5",
    "patch": "@@ -10,7 +10,7 @@\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n import org.springframework.scheduling.annotation.Scheduled;\n-import org.springframework.web.bind.annotation.*;\n+import org.springframework.web.bind.annotation.RestController;\n import java.util.List;\n import java.util.Optional;\n \n@@ -23,35 +23,32 @@\n     PostRepository postRepository;\n     @Autowired\n     LogsRepository logsRepository;\n+    @Autowired\n+    DownloadFromURLApi json;\n \n     // display all posts\n-    @GetMapping(\"/posts\")\n     public ResponseEntity displayPostsId() throws JsonProcessingException {\n         List<Post> allPosts = postRepository.findAll();\n         return ResponseEntity.ok(objectMapper.writeValueAsString(allPosts));\n     }\n \n     // display posts by title\n-    @GetMapping(\"/posts/{postTitle}\")\n-    public ResponseEntity displayPostsByTitle(@PathVariable(\"postTitle\") String postTitle) throws JsonProcessingException {\n+    public ResponseEntity displayPostsByTitle(String postTitle) throws JsonProcessingException {\n         List<Post> byPostTitle = postRepository.findByPostTitle(postTitle);\n         if (byPostTitle.isEmpty())\n-            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();\n+            return ResponseEntity.status(HttpStatus.NO_CONTENT).build();\n         else\n             return ResponseEntity.ok(objectMapper.writeValueAsString(byPostTitle));\n     }\n \n     // display all without author id\n-    @GetMapping(\"/posts/withoutId\")\n     public ResponseEntity displayPostsWithoutId() throws JsonProcessingException {\n         List<PostsProjections> allPosts = postRepository.findAllPosts();\n         return ResponseEntity.ok(objectMapper.writeValueAsString(allPosts));\n     }\n \n     // edit posts Title by author\n-    @PutMapping(\"/posts/title/{id}\")\n-    public ResponseEntity editPostTitle(@RequestBody String newTitle, @PathVariable(\"id\") int idPost,\n-                                        @RequestHeader(\"userid\") int userId) throws JsonProcessingException {\n+    public ResponseEntity editPostTitle(String newTitle,int idPost, int userId) throws JsonProcessingException {\n         Optional<Post> postById = postRepository.findByPostId(idPost);\n \n         if (postById.get().getUserId() == userId) {\n@@ -67,9 +64,7 @@ public ResponseEntity editPostTitle(@RequestBody String newTitle, @PathVariable(\n     }\n \n     //edit postBody by author\n-    @PutMapping(\"/posts/body/{id}\")\n-    public ResponseEntity editPostBody(@RequestBody String newBody, @PathVariable(\"id\") int idPost,\n-                                       @RequestHeader(\"userid\") int userId) throws JsonProcessingException {\n+    public ResponseEntity editPostBody(String newBody,int idPost, int userId) throws JsonProcessingException {\n         Optional<Post> postById = postRepository.findByPostId(idPost);\n \n         if (postById.get().getUserId() == userId) {\n@@ -85,31 +80,29 @@ public ResponseEntity editPostBody(@RequestBody String newBody, @PathVariable(\"i\n     }\n \n     // update DB\n-    @PutMapping(\"/rest\")\n     public ResponseEntity update() {\n         period();\n         return ResponseEntity.ok().build();\n     }\n \n     // delete post by author\n-    @DeleteMapping(\"/posts/{id}\")\n-    public ResponseEntity deletePost(@PathVariable(\"id\") int idPost, @RequestHeader(\"userid\") int userId) {\n+    public ResponseEntity deletePost(int idPost,int userId) {\n         Optional<Post> postById = postRepository.findByPostId(idPost);\n-        if (postById.get().getUserId() == userId) {\n-            postRepository.delete(postById.get());\n-            logsRepository.save(new Logs(postById.get().getUserId(), postById.get().getPostId(), \"DELETE POST\"));\n-            return ResponseEntity.ok().build();\n-        } else\n-            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();\n-\n+        if(postById.isPresent()) {\n+            if (postById.get().getUserId() == userId) {\n+                postRepository.delete(postById.get());\n+                logsRepository.save(new Logs(postById.get().getUserId(), postById.get().getPostId(), \"DELETE POST\"));\n+                return ResponseEntity.ok().build();\n+            } else\n+                return ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();\n+        }\n+        else\n+            return ResponseEntity.status(HttpStatus.NO_CONTENT).build();\n     }\n \n-\n-\n     // automatic update DB at 20:00\n     @Scheduled(cron = \"0 0 20 * * *\")\n     public void period()    {\n-        DownloadFromURLApi json = new DownloadFromURLApi();\n         StringBuffer sb = json.updateDB();\n         JSONArray posts = new JSONArray(sb.toString());\n         for (int i = 0; i < posts.length(); i++) {"
  },
  {
    "sha": "7fa4e32b3728a8319c69348cb85c7e40be59e541",
    "filename": "src/main/resources/application.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/resources/application.properties",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/src/main/resources/application.properties?ref=66bc2378a07243a6b53f865f11934d1421f056f5",
    "patch": "@@ -1,3 +1,4 @@\n spring.datasource.url = jdbc:mysql://localhost:3306/apzumi?serverTimezoneUTC\n spring.datasource.username = root\n-spring.datasource.password = daniel\n\\ No newline at end of file\n+spring.datasource.password = daniel\n+URL.API = https://jsonplaceholder.typicode.com/posts\n\\ No newline at end of file"
  },
  {
    "sha": "d5e2be0c54eb07c6460b89dc285ac57cc6ead41d",
    "filename": "src/test/java/PostServiceTest.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/src/test/java/PostServiceTest.java",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/src/test/java/PostServiceTest.java",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/src/test/java/PostServiceTest.java?ref=66bc2378a07243a6b53f865f11934d1421f056f5",
    "patch": "@@ -0,0 +1,54 @@\n+import Azumi.org.Post.Post;\n+import org.junit.Test;\n+import java.util.List;\n+import static io.restassured.RestAssured.given;\n+\n+public class PostServiceTest {\n+    List<Post> postList;\n+\n+    @Test\n+    public void displayAllPostStatusCode200() {\n+        given().when().get(\"/posts\").then().statusCode(200);\n+    }\n+\n+    @Test\n+    public void displayPostWithoutUserIdStatusCode200() {\n+        given().when().get(\"/posts/withoutId\").then().statusCode(200);\n+    }\n+\n+    @Test\n+    public void postTitleIsntExistInDBStatusCode204() {\n+        given().pathParam(\"postTitle\", \"New Title\").when().get(\"posts/{postTitle}\").then().statusCode(204);\n+    }\n+\n+    @Test\n+    public void wrongAuthorPostStatusCode401() {\n+        given(given().body(\" \").pathParam(\"id\", 1).header(\"userid\", 10)).when().put(\"/posts/body/{id}\").then().statusCode(401);\n+    }\n+\n+    @Test\n+    public void correctlyChangePostTitleStatusCode200() {\n+        given(given().body(\" \").pathParam(\"id\", 1).header(\"userid\", 1)).when().put(\"/posts/title/{id}\").then().statusCode(200);\n+    }\n+\n+    @Test\n+    public void correctlyUpdateDBByUserStatusCode200(){\n+        given().when().put(\"/rest\").then().statusCode(200);\n+    }\n+\n+    @Test\n+    public void WrongAuthorPostToDeleteStatusCode401(){\n+        given().pathParam(\"id\",1).header(\"userid\",10).when().delete(\"/posts/{id}\").then().statusCode(401);\n+    }\n+    @Test\n+    public void PostToDeleteDoesntExistStatusCode204(){\n+        given().pathParam(\"id\",111).header(\"userid\",10).when().delete(\"/posts/{id}\").then().statusCode(204);\n+    }\n+\n+\n+\n+\n+\n+\n+\n+}"
  },
  {
    "sha": "f512261a86d6f183709b8162ef2cec8fd71dc173",
    "filename": "target/classes/Azumi/org/Log/Logs.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/Azumi/org/Log/Logs.class",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/Azumi/org/Log/Logs.class",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/target/classes/Azumi/org/Log/Logs.class?ref=66bc2378a07243a6b53f865f11934d1421f056f5"
  },
  {
    "sha": "127a4a3b5927089ab8115a27db221da975d5ea83",
    "filename": "target/classes/Azumi/org/Post/DownloadFromURLApi.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/Azumi/org/Post/DownloadFromURLApi.class",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/Azumi/org/Post/DownloadFromURLApi.class",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/target/classes/Azumi/org/Post/DownloadFromURLApi.class?ref=66bc2378a07243a6b53f865f11934d1421f056f5"
  },
  {
    "sha": "9393321bf022f04e5c6fc96374772ca997427db6",
    "filename": "target/classes/Azumi/org/Post/Post.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/Azumi/org/Post/Post.class",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/Azumi/org/Post/Post.class",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/target/classes/Azumi/org/Post/Post.class?ref=66bc2378a07243a6b53f865f11934d1421f056f5"
  },
  {
    "sha": "ac7fca7d253ad34371339a94b146721406127eb7",
    "filename": "target/classes/Azumi/org/Post/PostController.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/Azumi/org/Post/PostController.class",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/Azumi/org/Post/PostController.class",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/target/classes/Azumi/org/Post/PostController.class?ref=66bc2378a07243a6b53f865f11934d1421f056f5"
  },
  {
    "sha": "9d3511368d2401a8a06d4bbc6658e1e60aa4d640",
    "filename": "target/classes/Azumi/org/Post/PostService.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/Azumi/org/Post/PostService.class",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/Azumi/org/Post/PostService.class",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/target/classes/Azumi/org/Post/PostService.class?ref=66bc2378a07243a6b53f865f11934d1421f056f5"
  },
  {
    "sha": "7fa4e32b3728a8319c69348cb85c7e40be59e541",
    "filename": "target/classes/application.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/application.properties",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/target/classes/application.properties",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/target/classes/application.properties?ref=66bc2378a07243a6b53f865f11934d1421f056f5",
    "patch": "@@ -1,3 +1,4 @@\n spring.datasource.url = jdbc:mysql://localhost:3306/apzumi?serverTimezoneUTC\n spring.datasource.username = root\n-spring.datasource.password = daniel\n\\ No newline at end of file\n+spring.datasource.password = daniel\n+URL.API = https://jsonplaceholder.typicode.com/posts\n\\ No newline at end of file"
  },
  {
    "sha": "3334e3c3984310a810f5ec251449d6bc8caf9a1e",
    "filename": "target/test-classes/PostServiceTest.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/blob/66bc2378a07243a6b53f865f11934d1421f056f5/target/test-classes/PostServiceTest.class",
    "raw_url": "https://github.com/Euxinux/Apzumi-Daniel-Besztak-requirement-task/raw/66bc2378a07243a6b53f865f11934d1421f056f5/target/test-classes/PostServiceTest.class",
    "contents_url": "https://api.github.com/repos/Euxinux/Apzumi-Daniel-Besztak-requirement-task/contents/target/test-classes/PostServiceTest.class?ref=66bc2378a07243a6b53f865f11934d1421f056f5"
  }
]
