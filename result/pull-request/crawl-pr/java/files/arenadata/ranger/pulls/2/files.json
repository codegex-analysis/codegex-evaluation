[
  {
    "sha": "f2b7e2b5ec92d0b9ab66c9fec79ffaddfa5a2592",
    "filename": "hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java",
    "status": "modified",
    "additions": 64,
    "deletions": 17,
    "changes": 81,
    "blob_url": "https://github.com/arenadata/ranger/blob/3703eba1e51019bb32d1665be432d674a20c4e1b/hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java",
    "raw_url": "https://github.com/arenadata/ranger/raw/3703eba1e51019bb32d1665be432d674a20c4e1b/hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java",
    "contents_url": "https://api.github.com/repos/arenadata/ranger/contents/hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java?ref=3703eba1e51019bb32d1665be432d674a20c4e1b",
    "patch": "@@ -40,23 +40,8 @@\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.apache.hadoop.conf.Configuration;\n-import org.apache.hadoop.hbase.Cell;\n-import org.apache.hadoop.hbase.CoprocessorEnvironment;\n-import org.apache.hadoop.hbase.HColumnDescriptor;\n-import org.apache.hadoop.hbase.HRegionInfo;\n-import org.apache.hadoop.hbase.HTableDescriptor;\n-import org.apache.hadoop.hbase.NamespaceDescriptor;\n-import org.apache.hadoop.hbase.ProcedureInfo;\n-import org.apache.hadoop.hbase.ServerName;\n-import org.apache.hadoop.hbase.TableName;\n-import org.apache.hadoop.hbase.client.Append;\n-import org.apache.hadoop.hbase.client.Delete;\n-import org.apache.hadoop.hbase.client.Durability;\n-import org.apache.hadoop.hbase.client.Get;\n-import org.apache.hadoop.hbase.client.Increment;\n-import org.apache.hadoop.hbase.client.Put;\n-import org.apache.hadoop.hbase.client.Result;\n-import org.apache.hadoop.hbase.client.Scan;\n+import org.apache.hadoop.hbase.*;\n+import org.apache.hadoop.hbase.client.*;\n import org.apache.hadoop.hbase.coprocessor.CoprocessorException;\n import org.apache.hadoop.hbase.coprocessor.CoprocessorService;\n import org.apache.hadoop.hbase.coprocessor.MasterCoprocessorEnvironment;\n@@ -69,6 +54,7 @@\n import org.apache.hadoop.hbase.filter.FilterList;\n import org.apache.hadoop.hbase.ipc.RpcServer;\n import org.apache.hadoop.hbase.master.procedure.MasterProcedureEnv;\n+import org.apache.hadoop.hbase.net.Address;\n import org.apache.hadoop.hbase.procedure2.ProcedureExecutor;\n import org.apache.hadoop.hbase.protobuf.ProtobufUtil;\n import org.apache.hadoop.hbase.protobuf.ResponseConverter;\n@@ -750,6 +736,17 @@ public void preAssign(ObserverContext<MasterCoprocessorEnvironment> c, HRegionIn\n \tpublic void preBalance(ObserverContext<MasterCoprocessorEnvironment> c) throws IOException {\n \t\trequirePermission(\"balance\", Permission.Action.ADMIN);\n \t}\n+\n+\t@Override\n+\tpublic boolean preSetSplitOrMergeEnabled(ObserverContext<MasterCoprocessorEnvironment> observerContext, boolean b, Admin.MasterSwitchType masterSwitchType) throws IOException {\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic void postSetSplitOrMergeEnabled(ObserverContext<MasterCoprocessorEnvironment> observerContext, boolean b, Admin.MasterSwitchType masterSwitchType) throws IOException {\n+\n+\t}\n+\n \t@Override\n \tpublic boolean preBalanceSwitch(ObserverContext<MasterCoprocessorEnvironment> c, boolean newValue) throws IOException {\n \t\trequirePermission(\"balanceSwitch\", Permission.Action.ADMIN);\n@@ -1004,6 +1001,56 @@ public void preSetNamespaceQuota(final ObserverContext<MasterCoprocessorEnvironm\n     requireGlobalPermission(\"setNamespaceQuota\", namespace, Action.ADMIN);\n   }\n \n+\t@Override\n+\tpublic void preDispatchMerge(ObserverContext<MasterCoprocessorEnvironment> observerContext, HRegionInfo hRegionInfo, HRegionInfo hRegionInfo1) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void postDispatchMerge(ObserverContext<MasterCoprocessorEnvironment> observerContext, HRegionInfo hRegionInfo, HRegionInfo hRegionInfo1) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void preGetClusterStatus(ObserverContext<MasterCoprocessorEnvironment> observerContext) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void postGetClusterStatus(ObserverContext<MasterCoprocessorEnvironment> observerContext, ClusterStatus clusterStatus) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void preClearDeadServers(ObserverContext<MasterCoprocessorEnvironment> observerContext) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void postClearDeadServers(ObserverContext<MasterCoprocessorEnvironment> observerContext, List<ServerName> list, List<ServerName> list1) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void preMoveServers(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set, String s) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void postMoveServers(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set, String s) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void preRemoveServers(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void postRemoveServers(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set) throws IOException {\n+\n+\t}\n+\n \tprivate String coprocessorType = \"unknown\";\n \tprivate static final String MASTER_COPROCESSOR_TYPE = \"master\";\n \tprivate static final String REGIONAL_COPROCESSOR_TYPE = \"regional\";"
  },
  {
    "sha": "fea61ad259ecef6553bc8313c72023a78399cfb8",
    "filename": "hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessorBase.java",
    "status": "modified",
    "additions": 12,
    "deletions": 17,
    "changes": 29,
    "blob_url": "https://github.com/arenadata/ranger/blob/3703eba1e51019bb32d1665be432d674a20c4e1b/hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessorBase.java",
    "raw_url": "https://github.com/arenadata/ranger/raw/3703eba1e51019bb32d1665be432d674a20c4e1b/hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessorBase.java",
    "contents_url": "https://api.github.com/repos/arenadata/ranger/contents/hbase-agent/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessorBase.java?ref=3703eba1e51019bb32d1665be432d674a20c4e1b",
    "patch": "@@ -22,7 +22,6 @@\n import java.util.List;\n import java.util.Set;\n \n-import com.google.common.net.HostAndPort;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.apache.hadoop.hbase.Cell;\n@@ -34,11 +33,7 @@\n import org.apache.hadoop.hbase.NamespaceDescriptor;\n import org.apache.hadoop.hbase.ServerName;\n import org.apache.hadoop.hbase.TableName;\n-import org.apache.hadoop.hbase.client.Delete;\n-import org.apache.hadoop.hbase.client.Durability;\n-import org.apache.hadoop.hbase.client.Get;\n-import org.apache.hadoop.hbase.client.Mutation;\n-import org.apache.hadoop.hbase.client.Put;\n+import org.apache.hadoop.hbase.client.*;\n import org.apache.hadoop.hbase.coprocessor.BaseRegionObserver;\n import org.apache.hadoop.hbase.coprocessor.BulkLoadObserver;\n import org.apache.hadoop.hbase.coprocessor.MasterCoprocessorEnvironment;\n@@ -48,6 +43,7 @@\n import org.apache.hadoop.hbase.coprocessor.RegionServerCoprocessorEnvironment;\n import org.apache.hadoop.hbase.coprocessor.RegionServerObserver;\n import org.apache.hadoop.hbase.master.RegionPlan;\n+import org.apache.hadoop.hbase.net.Address;\n import org.apache.hadoop.hbase.protobuf.generated.AdminProtos.WALEntry;\n import org.apache.hadoop.hbase.protobuf.generated.QuotaProtos.Quotas;\n import org.apache.hadoop.hbase.protobuf.generated.HBaseProtos.SnapshotDescription;\n@@ -478,15 +474,14 @@ public void postSetNamespaceQuota(final ObserverContext<MasterCoprocessorEnviron\n   }\n \n   // TODO : need override annotations for all of the following methods\n-\n-    public void preMoveServers(final ObserverContext<MasterCoprocessorEnvironment> ctx, Set<HostAndPort> servers, String targetGroup) throws IOException {}\n-    public void postMoveServers(ObserverContext<MasterCoprocessorEnvironment> ctx, Set<HostAndPort> servers, String targetGroup) throws IOException {}\n-    public void preMoveTables(final ObserverContext<MasterCoprocessorEnvironment> ctx, Set<TableName> tables, String targetGroup) throws IOException {}\n-    public void postMoveTables(final ObserverContext<MasterCoprocessorEnvironment> ctx, Set<TableName> tables, String targetGroup) throws IOException {}\n-    public void preRemoveRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n-    public void postRemoveRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n-    public void preBalanceRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String groupName) throws IOException {}\n-    public void postBalanceRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String groupName, boolean balancerRan) throws IOException {}\n-    public void preAddRSGroup(ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n-    public void postAddRSGroup(ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n+  public void preMoveServersAndTables(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set, Set<TableName> set1, String s) throws IOException {}\n+  public void postMoveServersAndTables(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set, Set<TableName> set1, String s) throws IOException {}\n+  public void preMoveTables(final ObserverContext<MasterCoprocessorEnvironment> ctx, Set<TableName> tables, String targetGroup) throws IOException {}\n+  public void postMoveTables(final ObserverContext<MasterCoprocessorEnvironment> ctx, Set<TableName> tables, String targetGroup) throws IOException {}\n+  public void preRemoveRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n+  public void postRemoveRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n+  public void preBalanceRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String groupName) throws IOException {}\n+  public void postBalanceRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String groupName, boolean balancerRan) throws IOException {}\n+  public void preAddRSGroup(ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n+  public void postAddRSGroup(ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n }"
  },
  {
    "sha": "39cbcdf70c940ef79f5acdbfc2468155e9f30d86",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/arenadata/ranger/blob/3703eba1e51019bb32d1665be432d674a20c4e1b/pom.xml",
    "raw_url": "https://github.com/arenadata/ranger/raw/3703eba1e51019bb32d1665be432d674a20c4e1b/pom.xml",
    "contents_url": "https://api.github.com/repos/arenadata/ranger/contents/pom.xml?ref=3703eba1e51019bb32d1665be432d674a20c4e1b",
    "patch": "@@ -162,7 +162,7 @@\n         <guice.version>4.0</guice.version>\n         <hadoop.version>2.7.1</hadoop.version>\n         <hamcrest.all.version>1.3</hamcrest.all.version>\n-        <hbase.version>1.1.3</hbase.version>\n+        <hbase.version>1.4.8</hbase.version>\n         <hive.version>2.1.0</hive.version>\n         <htrace-core.version>3.1.0-incubating</htrace-core.version>\n \t\t<httpcomponents.httpclient.version>4.5.1</httpcomponents.httpclient.version>"
  },
  {
    "sha": "2f6566d298b4070eba443ab387b8d4cd8cb0e08f",
    "filename": "ranger-hbase-plugin-shim/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java",
    "status": "modified",
    "additions": 135,
    "deletions": 31,
    "changes": 166,
    "blob_url": "https://github.com/arenadata/ranger/blob/3703eba1e51019bb32d1665be432d674a20c4e1b/ranger-hbase-plugin-shim/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java",
    "raw_url": "https://github.com/arenadata/ranger/raw/3703eba1e51019bb32d1665be432d674a20c4e1b/ranger-hbase-plugin-shim/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java",
    "contents_url": "https://api.github.com/repos/arenadata/ranger/contents/ranger-hbase-plugin-shim/src/main/java/org/apache/ranger/authorization/hbase/RangerAuthorizationCoprocessor.java?ref=3703eba1e51019bb32d1665be432d674a20c4e1b",
    "patch": "@@ -26,26 +26,8 @@\n import org.apache.commons.logging.LogFactory;\n import org.apache.hadoop.fs.FileSystem;\n import org.apache.hadoop.fs.Path;\n-import org.apache.hadoop.hbase.Cell;\n-import org.apache.hadoop.hbase.CellScanner;\n-import org.apache.hadoop.hbase.Coprocessor;\n-import org.apache.hadoop.hbase.CoprocessorEnvironment;\n-import org.apache.hadoop.hbase.HColumnDescriptor;\n-import org.apache.hadoop.hbase.HRegionInfo;\n-import org.apache.hadoop.hbase.HTableDescriptor;\n-import org.apache.hadoop.hbase.NamespaceDescriptor;\n-import org.apache.hadoop.hbase.ProcedureInfo;\n-import org.apache.hadoop.hbase.ServerName;\n-import org.apache.hadoop.hbase.TableName;\n-import org.apache.hadoop.hbase.client.Append;\n-import org.apache.hadoop.hbase.client.Delete;\n-import org.apache.hadoop.hbase.client.Durability;\n-import org.apache.hadoop.hbase.client.Get;\n-import org.apache.hadoop.hbase.client.Increment;\n-import org.apache.hadoop.hbase.client.Mutation;\n-import org.apache.hadoop.hbase.client.Put;\n-import org.apache.hadoop.hbase.client.Result;\n-import org.apache.hadoop.hbase.client.Scan;\n+import org.apache.hadoop.hbase.*;\n+import org.apache.hadoop.hbase.client.*;\n import org.apache.hadoop.hbase.coprocessor.BulkLoadObserver;\n import org.apache.hadoop.hbase.coprocessor.CoprocessorService;\n import org.apache.hadoop.hbase.coprocessor.MasterCoprocessorEnvironment;\n@@ -62,6 +44,7 @@\n import org.apache.hadoop.hbase.io.hfile.CacheConfig;\n import org.apache.hadoop.hbase.master.RegionPlan;\n import org.apache.hadoop.hbase.master.procedure.MasterProcedureEnv;\n+import org.apache.hadoop.hbase.net.Address;\n import org.apache.hadoop.hbase.procedure2.ProcedureExecutor;\n import org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos;\n import org.apache.hadoop.hbase.protobuf.generated.AccessControlProtos.CheckPermissionsRequest;\n@@ -3774,17 +3757,138 @@ private void deactivatePluginClassLoader() {\n \n \n \n-  // TODO : need override annotations for all of the following methods\n+// TODO : need override annotations for all of the following methods\n \n-  public void preMoveServers(final ObserverContext<MasterCoprocessorEnvironment> ctx, Set<HostAndPort> servers, String targetGroup) throws IOException {}\n-  public void postMoveServers(ObserverContext<MasterCoprocessorEnvironment> ctx, Set<HostAndPort> servers, String targetGroup) throws IOException {}\n-  public void preMoveTables(final ObserverContext<MasterCoprocessorEnvironment> ctx, Set<TableName> tables, String targetGroup) throws IOException {}\n-  public void postMoveTables(final ObserverContext<MasterCoprocessorEnvironment> ctx, Set<TableName> tables, String targetGroup) throws IOException {}\n-  public void preRemoveRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n-  public void postRemoveRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n-  public void preBalanceRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String groupName) throws IOException {}\n-  public void postBalanceRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String groupName, boolean balancerRan) throws IOException {}\n-  public void preAddRSGroup(ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n-  public void postAddRSGroup(ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n \n+\tpublic void preMoveServersAndTables(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set, Set<TableName> set1, String s) throws IOException {}\n+\tpublic void postMoveServersAndTables(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set, Set<TableName> set1, String s) throws IOException {}\n+\tpublic void preMoveTables(final ObserverContext<MasterCoprocessorEnvironment> ctx, Set<TableName> tables, String targetGroup) throws IOException {}\n+\tpublic void postMoveTables(final ObserverContext<MasterCoprocessorEnvironment> ctx, Set<TableName> tables, String targetGroup) throws IOException {}\n+\tpublic void preRemoveRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n+\tpublic void postRemoveRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n+\tpublic void preBalanceRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String groupName) throws IOException {}\n+\tpublic void postBalanceRSGroup(final ObserverContext<MasterCoprocessorEnvironment> ctx, String groupName, boolean balancerRan) throws IOException {}\n+\tpublic void preAddRSGroup(ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n+\tpublic void postAddRSGroup(ObserverContext<MasterCoprocessorEnvironment> ctx, String name) throws IOException {}\n+\n+\tpublic void postDispatchMerge(ObserverContext<MasterCoprocessorEnvironment> arg0, HRegionInfo arg1,\n+\t\t\t\t\t\t\t\t  HRegionInfo arg2)\n+\t\t\tthrows IOException {\n+\t\t// TODO Auto-generated method stub\n+\n+\t}\n+\n+\tpublic void postSetSplitOrMergeEnabled(ObserverContext<MasterCoprocessorEnvironment> arg0, boolean arg1,\n+\t\t\t\t\t\t\t\t\t\t   Admin.MasterSwitchType arg2)\n+\t\t\tthrows IOException {\n+\t\t// TODO Auto-generated method stub\n+\n+\t}\n+\tpublic void preDispatchMerge(ObserverContext<MasterCoprocessorEnvironment> arg0, HRegionInfo arg1,\n+\t\t\t\t\t\t\t\t HRegionInfo arg2)\n+\t\t\tthrows IOException {\n+\t\t// TODO Auto-generated method stub\n+\n+\t}\n+\n+\tpublic boolean preSetSplitOrMergeEnabled(ObserverContext<MasterCoprocessorEnvironment> arg0, boolean arg1,\n+\t\t\t\t\t\t\t\t\t\t\t Admin.MasterSwitchType arg2)\n+\t\t\tthrows IOException {\n+\t\t// TODO Auto-generated method stub\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic void preGetClusterStatus(ObserverContext<MasterCoprocessorEnvironment> observerContext) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void postGetClusterStatus(ObserverContext<MasterCoprocessorEnvironment> observerContext, ClusterStatus clusterStatus) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void preClearDeadServers(ObserverContext<MasterCoprocessorEnvironment> observerContext) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void postClearDeadServers(ObserverContext<MasterCoprocessorEnvironment> observerContext, List<ServerName> list, List<ServerName> list1) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void preMoveServers(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set, String s) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void postMoveServers(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set, String s) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void preRemoveServers(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void postRemoveServers(ObserverContext<MasterCoprocessorEnvironment> observerContext, Set<Address> set) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic InternalScanner preFlushScannerOpen(ObserverContext<RegionCoprocessorEnvironment> observerContext, Store store, KeyValueScanner keyValueScanner, InternalScanner internalScanner, long l) throws IOException {\n+\t\tfinal InternalScanner ret;\n+\n+\t\tif(LOG.isDebugEnabled()) {\n+\t\t\tLOG.debug(\"==> RangerAuthorizationCoprocessor.preFlushScannerOpen()\");\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tactivatePluginClassLoader();\n+\t\t\tret = implRegionObserver.preFlushScannerOpen(observerContext,store,keyValueScanner,internalScanner,l);\n+\t\t} finally {\n+\t\t\tdeactivatePluginClassLoader();\n+\t\t}\n+\n+\t\tif(LOG.isDebugEnabled()) {\n+\t\t\tLOG.debug(\"<== RangerAuthorizationCoprocessor.preFlushScannerOpen()\");\n+\t\t}\n+\n+\t\treturn ret;\n+\t}\n+\n+\t@Override\n+\tpublic InternalScanner preCompactScannerOpen(ObserverContext<RegionCoprocessorEnvironment> observerContext, Store store, List<? extends KeyValueScanner> list, ScanType scanType, long l, InternalScanner internalScanner, CompactionRequest compactionRequest, long l1) throws IOException {\n+\t\tfinal InternalScanner ret;\n+\n+\t\tif(LOG.isDebugEnabled()) {\n+\t\t\tLOG.debug(\"==> RangerAuthorizationCoprocessor.preCompactScannerOpen()\");\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tactivatePluginClassLoader();\n+\t\t\tret = implRegionObserver.preCompactScannerOpen(observerContext,store,list,scanType,l,internalScanner,compactionRequest,l1);\n+\t\t} finally {\n+\t\t\tdeactivatePluginClassLoader();\n+\t\t}\n+\n+\t\tif(LOG.isDebugEnabled()) {\n+\t\t\tLOG.debug(\"<== RangerAuthorizationCoprocessor.preCompactScannerOpen()\");\n+\t\t}\n+\n+\t\treturn ret;\n+\t}\n+\n+\t@Override\n+\tpublic void preCommitStoreFile(ObserverContext<RegionCoprocessorEnvironment> observerContext, byte[] bytes, List<Pair<Path, Path>> list) throws IOException {\n+\n+\t}\n+\n+\t@Override\n+\tpublic void postCommitStoreFile(ObserverContext<RegionCoprocessorEnvironment> observerContext, byte[] bytes, Path path, Path path1) throws IOException {\n+\n+\t}\n }"
  }
]
