[
  {
    "sha": "456076e1c1056950a80ef366b8e40bca8b54b44f",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 41,
    "deletions": 3,
    "changes": 44,
    "blob_url": "https://github.com/microservices-course-itmo/deployment-service/blob/fec82d5dce6c664d91f33324c5dc88fa2f73d0ec/pom.xml",
    "raw_url": "https://github.com/microservices-course-itmo/deployment-service/raw/fec82d5dce6c664d91f33324c5dc88fa2f73d0ec/pom.xml",
    "contents_url": "https://api.github.com/repos/microservices-course-itmo/deployment-service/contents/pom.xml?ref=fec82d5dce6c664d91f33324c5dc88fa2f73d0ec",
    "patch": "@@ -1,6 +1,5 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n     <modelVersion>4.0.0</modelVersion>\n \n@@ -21,6 +20,8 @@\n         <docker-java.version>3.2.4</docker-java.version>\n         <java.version>11</java.version>\n         <mavenCompiler.version>3.8.1</mavenCompiler.version>\n+        <kotlin.compiler.incremental>true</kotlin.compiler.incremental>\n+        <junit-jupiter.version>5.4.2</junit-jupiter.version>\n     </properties>\n \n     <dependencies>\n@@ -102,6 +103,43 @@\n             <artifactId>service-common-lib</artifactId>\n             <version>${service.commonlib.version}</version>\n         </dependency>\n+\n+\n+        <dependency>\n+            <groupId>org.mockito</groupId>\n+            <artifactId>mockito-core</artifactId>\n+            <version>3.3.3</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.nhaarman.mockitokotlin2</groupId>\n+            <artifactId>mockito-kotlin</artifactId>\n+            <version>2.2.0</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>io.mockk</groupId>\n+            <artifactId>mockk</artifactId>\n+            <version>1.9.3.kotlin12</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-test-junit -->\n+        <dependency>\n+            <groupId>org.jetbrains.kotlin</groupId>\n+            <artifactId>kotlin-test-junit</artifactId>\n+            <version>1.5.0-M1</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <scope>test</scope>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-engine</artifactId>\n+            <version>5.7.1</version>\n+        </dependency>\n     </dependencies>\n \n     <build>"
  },
  {
    "sha": "1daf294492fa4f3c222af2b00caf5e8fc88017a1",
    "filename": "src/main/kotlin/com/wine/to/up/deployment/service/service/impl/MessageService.kt",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/microservices-course-itmo/deployment-service/blob/fec82d5dce6c664d91f33324c5dc88fa2f73d0ec/src/main/kotlin/com/wine/to/up/deployment/service/service/impl/MessageService.kt",
    "raw_url": "https://github.com/microservices-course-itmo/deployment-service/raw/fec82d5dce6c664d91f33324c5dc88fa2f73d0ec/src/main/kotlin/com/wine/to/up/deployment/service/service/impl/MessageService.kt",
    "contents_url": "https://api.github.com/repos/microservices-course-itmo/deployment-service/contents/src/main/kotlin/com/wine/to/up/deployment/service/service/impl/MessageService.kt?ref=fec82d5dce6c664d91f33324c5dc88fa2f73d0ec",
    "patch": "@@ -0,0 +1,7 @@\n+package com.wine.to.up.deployment.service.service.impl\n+class MessageService {\n+\n+    fun getMessage(): String {\n+        return \"Hello World!\"\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "5df82fd92bd2f76e45b731fcd16654b23facf547",
    "filename": "src/main/kotlin/com/wine/to/up/deployment/service/service/impl/RegistryServiceVersionProvider.kt",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/microservices-course-itmo/deployment-service/blob/fec82d5dce6c664d91f33324c5dc88fa2f73d0ec/src/main/kotlin/com/wine/to/up/deployment/service/service/impl/RegistryServiceVersionProvider.kt",
    "raw_url": "https://github.com/microservices-course-itmo/deployment-service/raw/fec82d5dce6c664d91f33324c5dc88fa2f73d0ec/src/main/kotlin/com/wine/to/up/deployment/service/service/impl/RegistryServiceVersionProvider.kt",
    "contents_url": "https://api.github.com/repos/microservices-course-itmo/deployment-service/contents/src/main/kotlin/com/wine/to/up/deployment/service/service/impl/RegistryServiceVersionProvider.kt?ref=fec82d5dce6c664d91f33324c5dc88fa2f73d0ec",
    "patch": "@@ -19,7 +19,7 @@ class RegistryServiceVersionProvider(\n         private val settingsService: SettingsService\n ) : ServiceVersionProvider {\n \n-    val restTemplate = RestTemplate()\n+    var restTemplate = RestTemplate()\n \n     override fun findAllVersions(applicationTemplate: ApplicationTemplate): List<String> {\n         val tags = getTagsList(applicationTemplate.name)"
  },
  {
    "sha": "0ff522dbe10c295ed549a51747074aeaec48fb5f",
    "filename": "src/test/kotlin/com/wine/to/up/deployment/service/service/impl/LogServiceImplTest.kt",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/microservices-course-itmo/deployment-service/blob/fec82d5dce6c664d91f33324c5dc88fa2f73d0ec/src/test/kotlin/com/wine/to/up/deployment/service/service/impl/LogServiceImplTest.kt",
    "raw_url": "https://github.com/microservices-course-itmo/deployment-service/raw/fec82d5dce6c664d91f33324c5dc88fa2f73d0ec/src/test/kotlin/com/wine/to/up/deployment/service/service/impl/LogServiceImplTest.kt",
    "contents_url": "https://api.github.com/repos/microservices-course-itmo/deployment-service/contents/src/test/kotlin/com/wine/to/up/deployment/service/service/impl/LogServiceImplTest.kt?ref=fec82d5dce6c664d91f33324c5dc88fa2f73d0ec",
    "patch": "@@ -0,0 +1,59 @@\n+package com.wine.to.up.deployment.service.service.impl\n+\n+import com.nhaarman.mockitokotlin2.*\n+import com.wine.to.up.deployment.service.dao.LogRepository\n+import com.wine.to.up.deployment.service.entity.ApplicationTemplate\n+import com.wine.to.up.deployment.service.entity.Log\n+import com.wine.to.up.deployment.service.service.SequenceGeneratorService\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.mockito.InjectMocks\n+import org.mockito.Mock\n+import org.mockito.junit.MockitoJUnitRunner\n+import kotlin.test.assertNotNull\n+import kotlin.test.assertSame\n+\n+@RunWith(MockitoJUnitRunner::class)\n+class LogServiceImplTest{\n+    @Mock\n+    private lateinit var logRepository: LogRepository\n+\n+    @Mock\n+    private lateinit var seqGen : SequenceGeneratorService\n+\n+    @InjectMocks\n+    private lateinit var logService: LogServiceImpl\n+\n+    @Test\n+    fun writeLog() {\n+        val testLog = Log(1L, 1L, \"null\", \"null\", \"null\", 1L)\n+\n+        whenever(logRepository.save(any <Log> ())).thenReturn(testLog)\n+        val testLogResult  = logService.writeLog(\"user\", \"message\", \"templateName\", 1L)\n+        assertNotNull(testLogResult)\n+        assertSame(testLogResult.templateName, testLog.templateName)\n+    }\n+\n+    @Test\n+    fun logsByTemplate() {\n+        val testLog = Log(1L, 1L, \"null\", \"null\", \"null\", 1L)\n+        val myList = listOf(testLog)\n+        val template = ApplicationTemplate().apply{\n+            this.baseBranch = \"\"\n+            this.createdBy = \"\"\n+            this.dateCreated = 1L\n+            this.description = \"\"\n+            this.environmentVariables = null\n+            this.id = 1L\n+            this.name = \"null\"\n+            this.memoryLimits = 1L\n+            this.portMappings = null\n+            this.volumes = null\n+        }\n+\n+        whenever(logRepository.findAllByTemplateName(any())).thenReturn(myList)\n+        val testLogResult = logService.logsByTemplate(template)\n+        assertNotNull(testLogResult)\n+        assertSame(testLogResult[0].templateName,testLog.templateName)\n+    }\n+}"
  },
  {
    "sha": "eaca116f4df3affc2a8187ecf042eb6e8196fa5f",
    "filename": "src/test/kotlin/com/wine/to/up/deployment/service/service/impl/RegistryServiceVersionProviderTest.kt",
    "status": "added",
    "additions": 105,
    "deletions": 0,
    "changes": 105,
    "blob_url": "https://github.com/microservices-course-itmo/deployment-service/blob/fec82d5dce6c664d91f33324c5dc88fa2f73d0ec/src/test/kotlin/com/wine/to/up/deployment/service/service/impl/RegistryServiceVersionProviderTest.kt",
    "raw_url": "https://github.com/microservices-course-itmo/deployment-service/raw/fec82d5dce6c664d91f33324c5dc88fa2f73d0ec/src/test/kotlin/com/wine/to/up/deployment/service/service/impl/RegistryServiceVersionProviderTest.kt",
    "contents_url": "https://api.github.com/repos/microservices-course-itmo/deployment-service/contents/src/test/kotlin/com/wine/to/up/deployment/service/service/impl/RegistryServiceVersionProviderTest.kt?ref=fec82d5dce6c664d91f33324c5dc88fa2f73d0ec",
    "patch": "@@ -0,0 +1,105 @@\n+package com.wine.to.up.deployment.service.service.impl\n+\n+import com.nhaarman.mockitokotlin2.eq\n+import com.nhaarman.mockitokotlin2.whenever\n+import com.wine.to.up.deployment.service.entity.ApplicationTemplate\n+import com.wine.to.up.deployment.service.service.SettingsService\n+import com.wine.to.up.deployment.service.vo.SettingsVO\n+import org.junit.Test\n+import org.junit.runner.RunWith\n+import org.mockito.ArgumentMatchers.anyString\n+import org.mockito.InjectMocks\n+import org.mockito.Mockito\n+import org.mockito.junit.MockitoJUnitRunner\n+import org.springframework.web.client.RestTemplate\n+import kotlin.test.assertEquals\n+import kotlin.test.assertNotNull\n+\n+\n+@RunWith(MockitoJUnitRunner::class)\n+class RegistryServiceVersionProviderTest {\n+     var  restTemplateMocked = Mockito.mock(RestTemplate::class.java)\n+\n+     val settingsServiceMocked = Mockito.mock(SettingsService::class.java)\n+\n+     @InjectMocks\n+     private lateinit var versionService: RegistryServiceVersionProvider\n+\n+     val MOCK_REGISTRY_RESPONSE =\n+            \"\"\"\n+                    {\n+   \"name\":\"demo-service\",\n+   \"tags\":[\n+      \"sashenka_0.2.0\",\n+      \"metrics_practicum_0.3.1\",\n+      \"add-endpoint_0.2.0\",\n+      \"api-poc_0.1.1\",\n+      \"feature-pom_0.2.3\",\n+      \"feature-logback_0.1.1\",\n+      \"feature-logback_0.1.2\",\n+      \"add-method-for-gateway_0.2.0\",\n+      \"use-parent_0.3.0\",\n+      \"dev_0.3.1\",\n+      \"bugfix-bpp_0.2.0\",\n+      \"remove-logstash-filter_0.1.4\",\n+      \"wip-26.09.20-services_0.2.0\",\n+      \"dev_0.1.1\",\n+      \"dev_0.1.2\"\n+   ]\n+}\n+            \n+               \"\"\"\n+\n+    @Test\n+    fun findAllVersions(){\n+        versionService.restTemplate = restTemplateMocked\n+\n+        val settingsVO = SettingsVO.builder()\n+                .versionRegistry(\"\")\n+                .imageRegistry(\"\")\n+                .dockerAddress(\"\")\n+                .build()\n+\n+        whenever(settingsServiceMocked.settings).thenReturn(settingsVO)\n+        whenever(restTemplateMocked.getForObject(anyString(), eq(String::class.java))).thenReturn(MOCK_REGISTRY_RESPONSE)\n+\n+\n+        val template = ApplicationTemplate().apply{\n+            this.baseBranch = \"baseBranch\"\n+            this.createdBy = \"\"\n+            this.dateCreated = 1L\n+            this.description = \"\"\n+            this.environmentVariables = null\n+            this.id = 1L\n+            this.name = \"null\"\n+            this.memoryLimits = 1L\n+            this.portMappings = null\n+            this.volumes = null\n+        }\n+        val checkVersion = versionService.findAllVersions(template)\n+        assertNotNull(checkVersion)\n+        assertEquals(\"sashenka\",checkVersion[0])\n+    }\n+\n+    @Test\n+    fun findFullTagName(){\n+        val applicationTemplate = ApplicationServiceImpl()\n+        val template = ApplicationTemplate().apply{\n+            this.baseBranch = \"baseBranch\"\n+            this.createdBy = \"\"\n+            this.dateCreated = 1L\n+            this.description = \"\"\n+            this.environmentVariables = null\n+            this.id = 1L\n+            this.name = \"null\"\n+            this.memoryLimits = 1L\n+            this.portMappings = null\n+            this.volumes = null\n+        }\n+        val templateVO = applicationTemplate.entityToView(template, null, null, null)\n+        val checkVersion = versionService.findFullTagName(\"0.1.0\",templateVO)\n+\n+        assertNotNull(checkVersion)\n+        assertEquals(\"baseBranch_0.1.0\",checkVersion)\n+    }\n+}\n\\ No newline at end of file"
  }
]
