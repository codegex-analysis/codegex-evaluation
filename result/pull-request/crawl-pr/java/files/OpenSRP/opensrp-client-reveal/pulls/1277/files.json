[
  {
    "sha": "9bb7917f62af17ecfd1085c23ee2e993aeb05ad5",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/gradle/wrapper/gradle-wrapper.properties?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -1,6 +1,6 @@\n-#Fri Oct 30 13:15:12 EAT 2020\n+#Fri Jan 08 14:29:21 EAT 2021\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-bin.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.5-all.zip"
  },
  {
    "sha": "e1b4df490d93116c7b9109ae7e467a2b5e68faa3",
    "filename": "opensrp-reveal/build.gradle",
    "status": "modified",
    "additions": 13,
    "deletions": 1,
    "changes": 14,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/build.gradle",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/build.gradle",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/build.gradle?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -206,7 +206,7 @@ dependencies {\n         exclude group: 'stax', module: 'stax-api'\n     }\n \n-    implementation('org.smartregister:opensrp-client-core:4.2.9-SNAPSHOT@aar') {\n+    implementation('org.smartregister:opensrp-client-core:4.2.10-SNAPSHOT@aar') {\n         transitive = true\n         exclude group: 'com.google.guava', module: 'guava'\n         exclude group: 'com.android.support', module: 'appcompat-v7'\n@@ -225,6 +225,18 @@ dependencies {\n         exclude group: 'com.android.support', module: 'appcompat-v7'\n     }\n \n+    implementation('org.smartregister:opensrp-client-native-form:1.8.6-SNAPSHOT@aar') {\n+        transitive = true\n+        exclude group: 'com.android.support', module: 'appcompat-v7'\n+        exclude group: 'com.android.support', module: 'cardview-v7'\n+        exclude group: 'com.android.support', module: 'support-media-compat'\n+        exclude group: 'com.android.support', module: 'support-v4'\n+        exclude group: 'com.android.support', module: 'design'\n+        exclude group: 'io.ona.rdt-capture', module: 'lib'\n+    }\n+\n+\n+\n     implementation('org.smartregister:opensrp-client-family:2.0.0-SNAPSHOT@aar') {\n         transitive = true\n         exclude group: 'org.smartregister', module: 'opensrp-client-core'"
  },
  {
    "sha": "4d3f81d311fee0bba0cdce885bc5862389296363",
    "filename": "opensrp-reveal/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 9,
    "deletions": 1,
    "changes": 10,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/AndroidManifest.xml?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -76,7 +76,9 @@\n                 android:name=\"android.support.PARENT_ACTIVITY\"\n                 android:value=\".view.FamilyRegisterActivity\" />\n         </activity>\n-        <activity android:name=\"org.smartregister.family.activity.FamilyWizardFormActivity\" />\n+        <activity\n+            android:name=\"org.smartregister.family.activity.FamilyWizardFormActivity\"\n+            android:theme=\"@style/FamilyTheme.NoActionBar\" />\n         <activity android:name=\"com.vijay.jsonwizard.activities.JsonWizardFormActivity\" />\n         <activity\n             android:name=\".view.FamilyOtherMemberProfileActivity\"\n@@ -109,6 +111,12 @@\n             android:name=\".view.OfflineMapsActivity\"\n             android:launchMode=\"singleTask\"\n             android:screenOrientation=\"portrait\" />\n+        <activity\n+            android:name=\".view.ChildRegisterActivity\"\n+            android:theme=\"@style/AppTheme.NoActionBar\" />\n+        <activity\n+            android:name=\".view.ChildProfileActivity\"\n+            android:theme=\"@style/AppTheme.NoActionBar\" />\n \n         <activity\n             android:name=\"org.smartregister.view.activity.DynamicJsonFormActivity\""
  },
  {
    "sha": "202dcff27ed98a347def691f409471c574daaff7",
    "filename": "opensrp-reveal/src/main/assets/ec_client_classification.json",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/ec_client_classification.json",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/ec_client_classification.json",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/assets/ec_client_classification.json?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -173,6 +173,20 @@\n               \"ec_events\"\n             ]\n           },\n+          {\n+            \"field\": \"eventType\",\n+            \"field_value\": \"Child Registration\",\n+            \"creates_case\": [\n+              \"ec_child\"\n+            ]\n+          },\n+          {\n+            \"field\": \"eventType\",\n+            \"field_value\": \"Update Child Registration\",\n+            \"creates_case\": [\n+              \"ec_child\"\n+            ]\n+          },\n           {\n             \"field\": \"eventType\",\n             \"field_value\": \"tablet_accountability\","
  },
  {
    "sha": "b99e93634039f2554977c6276e1f60420da6c42a",
    "filename": "opensrp-reveal/src/main/assets/ec_client_fields_ntd.json",
    "status": "added",
    "additions": 419,
    "deletions": 0,
    "changes": 419,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/ec_client_fields_ntd.json",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/ec_client_fields_ntd.json",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/assets/ec_client_fields_ntd.json?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,419 @@\n+{\n+  \"bindobjects\": [\n+    {\n+      \"name\": \"sprayed_structures\",\n+      \"columns\": [\n+        {\n+          \"column_name\": \"base_entity_id\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"baseEntityId\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"spray_status\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"obs.fieldCode\",\n+            \"concept\": \"business_status\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"spray_date\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"eventDate\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"spray_operator\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"providerId\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"property_type\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"obs.fieldCode\",\n+            \"concept\": \"structureType\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"not_sprayed_reason\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"obs.fieldCode\",\n+            \"concept\": \"unsprayed_reason\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"not_sprayed_other_reason\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"obs.fieldCode\",\n+            \"concept\": \"unsprayed_reason\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"family_head_name\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"obs.fieldCode\",\n+            \"concept\": \"household_name\"\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \"name\": \"ec_child\",\n+      \"columns\": [\n+        {\n+          \"column_name\": \"base_entity_id\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"baseEntityId\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"location\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"attributes.default_residence\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"first_name\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"firstName\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"last_name\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"lastName\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"middle_name\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"middleName\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"dob\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"birthdate\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"gender\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"gender\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"unique_id\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"identifiers.opensrp_id\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"grade\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"attributes.grade\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"grade_class\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"attributes.grade_class\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"national_id\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"identifiers.national_id\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"reveal_id\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"identifiers.reveal_id\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"approx_dob\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"birthdateApprox\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"school_enrolled\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"attributes.school_enrolled\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"school_name\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"attributes.school_name\"\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \"name\": \"ec_family\",\n+      \"columns\": [\n+        {\n+          \"column_name\": \"base_entity_id\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"baseEntityId\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"structure_id\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"attributes.residence\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"unique_id\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"identifiers.opensrp_id\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"first_name\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"firstName\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"last_name\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"lastName\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"village_town\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"addresses.cityVillage\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"street\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"addresses.street\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"landmark\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"addresses.landmark\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"house_number\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"addresses.address2\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"family_head\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"relationships.family_head\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"primary_caregiver\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"relationships.primary_caregiver\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"last_interacted_with\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"version\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"date_removed\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"attributes.dateRemoved\"\n+          }\n+        }\n+      ]\n+    },\n+    {\n+      \"name\": \"ec_family_member\",\n+      \"columns\": [\n+        {\n+          \"column_name\": \"base_entity_id\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"baseEntityId\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"unique_id\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"identifiers.opensrp_id\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"national_id\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"obs.fieldCode\",\n+            \"concept\": \"163084AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"relational_id\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"relationships.family\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"structure_id\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"attributes.residence\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"first_name\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"firstName\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"middle_name\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"middleName\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"last_name\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"lastName\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"dob\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"birthdate\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"dod\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"deathdate\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"dob_unknown\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"birthdateApprox\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"gender\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"gender\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"phone_number\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"obs.fieldCode\",\n+            \"concept\": \"159635AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"occupation\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"obs.fieldCode\",\n+            \"concept\": \"occupation\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"citizenship\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"obs.fieldCode\",\n+            \"concept\": \"citizenship\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"sleeps_outdoors\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"obs.fieldCode\",\n+            \"concept\": \"sleeps_outdoors\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"entity_type\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"entityType\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"last_interacted_with\",\n+          \"type\": \"Event\",\n+          \"json_mapping\": {\n+            \"field\": \"version\"\n+          }\n+        },\n+        {\n+          \"column_name\": \"date_removed\",\n+          \"type\": \"Client\",\n+          \"json_mapping\": {\n+            \"field\": \"attributes.dateRemoved\"\n+          }\n+        }\n+      ]\n+    }\n+  ]\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "31ec87528ad4536cf5bad59dc5533a6e52c5c6da",
    "filename": "opensrp-reveal/src/main/assets/json.form/ntd_child_registration.json",
    "status": "added",
    "additions": 402,
    "deletions": 0,
    "changes": 402,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/json.form/ntd_child_registration.json",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/json.form/ntd_child_registration.json",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/assets/json.form/ntd_child_registration.json?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,402 @@\n+{\n+  \"count\": \"1\",\n+  \"encounter_type\": \"Child Registration\",\n+  \"entity_id\": \"\",\n+  \"relational_id\": \"\",\n+  \"metadata\": {\n+    \"start\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"start\",\n+      \"openmrs_entity_id\": \"163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"end\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"end\",\n+      \"openmrs_entity_id\": \"163138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"today\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"encounter\",\n+      \"openmrs_entity_id\": \"encounter_date\"\n+    },\n+    \"deviceid\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"deviceid\",\n+      \"openmrs_entity_id\": \"163149AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"subscriberid\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"subscriberid\",\n+      \"openmrs_entity_id\": \"163150AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"simserial\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"simserial\",\n+      \"openmrs_entity_id\": \"163151AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"phonenumber\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"phonenumber\",\n+      \"openmrs_entity_id\": \"163152AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"encounter_location\": \"\",\n+    \"look_up\": {\n+      \"entity_id\": \"\",\n+      \"value\": \"\"\n+    }\n+  },\n+  \"step1\": {\n+    \"title\": \"Add Student\",\n+    \"fields\": [\n+      {\n+        \"key\": \"unique_id\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person_identifier\",\n+        \"openmrs_entity_id\": \"opensrp_id\",\n+        \"type\": \"hidden\",\n+        \"hint\": \"ID\",\n+        \"read_only\": true,\n+        \"v_required\": {\n+          \"value\": \"true\",\n+          \"err\": \"Please enter the ID\"\n+        }\n+      },\n+      {\n+        \"key\": \"sactaNoNationalId\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person_attribute\",\n+        \"openmrs_entity_id\": \"has_no_id\",\n+        \"type\": \"check_box\",\n+        \"label\": \"\",\n+        \"options\": [\n+          {\n+            \"key\": \"noNationalID\",\n+            \"text\": \"Child does not have a national ID\",\n+            \"text_size\": \"18px\",\n+            \"value\": \"false\"\n+          }\n+        ]\n+      },\n+      {\n+        \"key\": \"sactaNationalId\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person_identifier\",\n+        \"openmrs_entity_id\": \"national_id\",\n+        \"type\": \"edit_text\",\n+        \"hint\": \"National ID\",\n+        \"text_size\": \"8sp\",\n+        \"v_required\": {\n+          \"value\": \"true\",\n+          \"err\": \"Please enter the ID\"\n+        },\n+        \"v_numeric\": {\n+          \"value\": \"true\",\n+          \"err\": \"Must be a number.\"\n+        },\n+        \"v_min_length\": {\n+          \"value\": \"13\",\n+          \"err\": \"Must be 13 characters\"\n+        },\n+        \"v_max_length\": {\n+          \"value\": \"13\",\n+          \"err\": \"Must be 13 characters\"\n+        },\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd-child-registration-relevance.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"sactaRevealId\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person_identifier\",\n+        \"openmrs_entity_id\": \"reveal_id\",\n+        \"hint\": \"Reveal ID\",\n+        \"text_size\": \"8sp\",\n+        \"type\": \"hidden\",\n+        \"calculation\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd-child-registration-calculation.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"sactaGivenName\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person\",\n+        \"openmrs_entity_id\": \"first_name\",\n+        \"type\": \"edit_text\",\n+        \"hint\": \"Child's given name\",\n+        \"edit_type\": \"name\",\n+        \"text_size\": \"8sp\",\n+        \"v_required\": {\n+          \"value\": \"true\",\n+          \"err\": \"Required field\"\n+        }\n+      },\n+      {\n+        \"key\": \"sactaSurname\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person\",\n+        \"openmrs_entity_id\": \"last_name\",\n+        \"type\": \"edit_text\",\n+        \"hint\": \"Child's surname\",\n+        \"edit_type\": \"name\",\n+        \"text_size\": \"8sp\",\n+        \"v_required\": {\n+          \"value\": \"true\",\n+          \"err\": \"Required field\"\n+        }\n+      },\n+      {\n+        \"key\": \"sactaSex\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person\",\n+        \"openmrs_entity_id\": \"gender\",\n+        \"type\": \"native_radio\",\n+        \"label\": \"Child's allocated sex at birth\",\n+        \"options\": [\n+          {\n+            \"key\": \"Male\",\n+            \"text\": \"Male\"\n+          },\n+          {\n+            \"key\": \"Female\",\n+            \"text\": \"Female\"\n+          }\n+        ],\n+        \"v_required\": {\n+          \"value\": \"true\",\n+          \"err\": \"Required field\"\n+        }\n+      },\n+      {\n+        \"key\": \"sactaDob\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person\",\n+        \"openmrs_entity_id\": \"birthdate\",\n+        \"type\": \"date_picker\",\n+        \"hint\": \"Child's date of birth\",\n+        \"expanded\": false,\n+        \"duration\": {\n+          \"label\": \"Age\"\n+        },\n+        \"min_date\": \"today-120y\",\n+        \"max_date\": \"today-6y\",\n+        \"v_required\": {\n+          \"value\": \"true\",\n+          \"err\": \"Required field\"\n+        }\n+      },\n+      {\n+        \"key\": \"sactaDobUnk\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person\",\n+        \"openmrs_entity_id\": \"birthdateApprox\",\n+        \"type\": \"check_box\",\n+        \"label\": \"\",\n+        \"options\": [\n+          {\n+            \"key\": \"sactaDobUnk\",\n+            \"text\": \"Date of birth estimated\",\n+            \"text_size\": \"18px\",\n+            \"value\": \"false\"\n+          }\n+        ]\n+      },\n+      {\n+        \"key\": \"sactaAge\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person_attribute\",\n+        \"openmrs_entity_id\": \"age_entered\",\n+        \"type\": \"edit_text\",\n+        \"hint\": \"Child's age\",\n+        \"text_size\": \"8sp\",\n+        \"read_only\": true,\n+        \"v_numeric_integer\": {\n+          \"value\": \"true\",\n+          \"err\": \"Please enter a number\"\n+        },\n+        \"v_min\": {\n+          \"value\": \"5\",\n+          \"err\": \"Age must be equal or greater than 5\"\n+        },\n+        \"v_max\": {\n+          \"value\": \"120\",\n+          \"err\": \"Age must be equal or less than 120\"\n+        },\n+        \"v_required\": {\n+          \"value\": true,\n+          \"err\": \"Please enter the age\"\n+        },\n+        \"calculation\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd-child-registration-calculation.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"sactaAgeCat\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person_attribute\",\n+        \"openmrs_entity_id\": \"age_category\",\n+        \"type\": \"edit_text\",\n+        \"read_only\": true,\n+        \"hint\": \"Age category\",\n+        \"calculation\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd-child-registration-calculation.yml\"\n+            }\n+          }\n+        },\n+        \"v_required\": {\n+          \"value\": \"true\",\n+          \"err\": \"Required field\"\n+        }\n+      },\n+      {\n+        \"key\": \"sactaCurrEnroll\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person_attribute\",\n+        \"openmrs_entity_id\": \"school_enrolled\",\n+        \"type\": \"native_radio\",\n+        \"label\": \"Is this child currently enrolled in school?\",\n+        \"options\": [\n+          {\n+            \"key\": \"Yes\",\n+            \"text\": \"Yes\"\n+          },\n+          {\n+            \"key\": \"No\",\n+            \"text\": \"No\"\n+          }\n+        ],\n+        \"v_required\": {\n+          \"value\": \"true\",\n+          \"err\": \"Required field\"\n+        }\n+      },\n+      {\n+        \"key\": \"sactaCurrSchName\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person_attribute\",\n+        \"openmrs_entity_id\": \"school_name\",\n+        \"type\": \"edit_text\",\n+        \"hint\": \"Name of school attending, if from another school\",\n+        \"edit_type\": \"name\",\n+        \"text_size\": \"8sp\",\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd-child-registration-relevance.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"sactaGrade\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person_attribute\",\n+        \"openmrs_entity_id\": \"grade\",\n+        \"type\": \"native_radio\",\n+        \"label\": \"School grade\",\n+        \"options\": [\n+          {\n+            \"key\": \"Grade 1\",\n+            \"text\": \"Grade 1\"\n+          },\n+          {\n+            \"key\": \"Grade 2\",\n+            \"text\": \"Grade 2\"\n+          },\n+          {\n+            \"key\": \"Grade 3\",\n+            \"text\": \"Grade 3\"\n+          },\n+          {\n+            \"key\": \"Grade 4\",\n+            \"text\": \"Grade 4\"\n+          },\n+          {\n+            \"key\": \"Grade 5\",\n+            \"text\": \"Grade 5\"\n+          },\n+          {\n+            \"key\": \"Grade 6\",\n+            \"text\": \"Grade 6\"\n+          },\n+          {\n+            \"key\": \"Grade 7\",\n+            \"text\": \"Grade 7\"\n+          },\n+          {\n+            \"key\": \"Form 1\",\n+            \"text\": \"Form 1\"\n+          },\n+          {\n+            \"key\": \"Form 2\",\n+            \"text\": \"Form 2\"\n+          },\n+          {\n+            \"key\": \"Form 3\",\n+            \"text\": \"Form 3\"\n+          },\n+          {\n+            \"key\": \"Form 4\",\n+            \"text\": \"Form 4\"\n+          },\n+          {\n+            \"key\": \"Form 5\",\n+            \"text\": \"Form 5\"\n+          }\n+        ],\n+        \"v_required\": {\n+          \"value\": \"true\",\n+          \"err\": \"Required field\"\n+        },\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd-child-registration-relevance.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"sactaClass\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"person_attribute\",\n+        \"openmrs_entity_id\": \"grade_class\",\n+        \"type\": \"edit_text\",\n+        \"hint\": \"Grade class (e.g. 1A, 1B, 1C/D)\",\n+        \"edit_type\": \"name\",\n+        \"text_size\": \"8sp\",\n+        \"v_required\": {\n+          \"value\": \"true\",\n+          \"err\": \"Required field\"\n+        },\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd-child-registration-relevance.yml\"\n+            }\n+          }\n+        }\n+      }\n+    ]\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "c864237ec775016a846c62204da0c48a6a6c4d41",
    "filename": "opensrp-reveal/src/main/assets/json.form/ntd_mma_adr.json",
    "status": "added",
    "additions": 205,
    "deletions": 0,
    "changes": 205,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/json.form/ntd_mma_adr.json",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/json.form/ntd_mma_adr.json",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/assets/json.form/ntd_mma_adr.json?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,205 @@\n+{\n+  \"count\": \"1\",\n+  \"encounter_type\": \"mma_adr\",\n+  \"entity_id\": \"\",\n+  \"metadata\": {\n+    \"start\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"start\",\n+      \"openmrs_entity_id\": \"163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"end\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"end\",\n+      \"openmrs_entity_id\": \"163138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"today\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"encounter\",\n+      \"openmrs_entity_id\": \"encounter_date\"\n+    },\n+    \"deviceid\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"deviceid\",\n+      \"openmrs_entity_id\": \"163149AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"subscriberid\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"subscriberid\",\n+      \"openmrs_entity_id\": \"163150AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"simserial\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"simserial\",\n+      \"openmrs_entity_id\": \"163151AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"phonenumber\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"phonenumber\",\n+      \"openmrs_entity_id\": \"163152AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"encounter_location\": \"\"\n+  },\n+  \"step1\": {\n+    \"title\": \"ADR Report\",\n+    \"display_back_button\": \"true\",\n+    \"fields\": [\n+      {\n+        \"key\": \"mmaAdrType\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"\",\n+        \"openmrs_entity_id\": \"\",\n+        \"type\": \"check_box\",\n+        \"label\": \"ADR type\",\n+        \"combine_checkbox_option_values\": \"true\",\n+        \"options\": [\n+          {\n+            \"key\": \"vomitting\",\n+            \"text\": \"Vomitting\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"vomitting\"\n+          },\n+          {\n+            \"key\": \"rash\",\n+            \"text\": \"Rash\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"rash\"\n+          },\n+          {\n+            \"key\": \"headache\",\n+            \"text\": \"Headache\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"headache\"\n+          },\n+          {\n+            \"key\": \"diarrhea\",\n+            \"text\": \"Diarrhea\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"diarrhea\"\n+          },\n+          {\n+            \"key\": \"convulsions\",\n+            \"text\": \"Convulsions\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"convulsions\"\n+          },\n+          {\n+            \"key\": \"visual_impairment\",\n+            \"text\": \"Visual impairment\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"visual_impairment\"\n+          },\n+          {\n+            \"key\": \"Shock\",\n+            \"text\": \"Shock\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"Shock\"\n+          },\n+          {\n+            \"key\": \"other\",\n+            \"text\": \"Other (specify)\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"other\"\n+          }\n+        ],\n+        \"v_required\": {\n+          \"value\": true,\n+          \"err\": \"This field is required\"\n+        }\n+      },\n+      {\n+        \"key\": \"other_mmaAdrType\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"concept\",\n+        \"openmrs_entity_id\": \"other_mmaAdrType\",\n+        \"type\": \"edit_text\",\n+        \"hint\": \"Specify other type\",\n+        \"text_size\": \"8sp\",\n+        \"v_required\": {\n+          \"value\": true,\n+          \"err\": \"This field is required\"\n+        },\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd-mma-adr-relevance.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"mmaAdrGrade\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"concept\",\n+        \"openmrs_entity_id\": \"mmaAdrGrade\",\n+        \"type\": \"native_radio\",\n+        \"label\": \"ADR grade\",\n+        \"options\": [\n+          {\n+            \"key\": \"mild\",\n+            \"text\": \"Mild\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"mild\"\n+          },\n+          {\n+            \"key\": \"moderate\",\n+            \"text\": \"Moderate\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"moderate\"\n+          },\n+          {\n+            \"key\": \"severe\",\n+            \"text\": \"Severe\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"severe\"\n+          }\n+        ],\n+        \"v_required\": {\n+          \"value\": true,\n+          \"err\": \"This field is required\"\n+        }\n+      },\n+      {\n+        \"key\": \"mmaAdrOutcome\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"\",\n+        \"openmrs_entity_id\": \"\",\n+        \"type\": \"native_radio\",\n+        \"label\": \"ADR outcome\",\n+        \"options\": [\n+          {\n+            \"key\": \"resolved\",\n+            \"text\": \"Resolved\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"resolved\"\n+          },\n+          {\n+            \"key\": \"requiredOutpatientTreatment\",\n+            \"text\": \"Required outpatient treatment\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"requiredOutpatientTreatment\"\n+          },\n+          {\n+            \"key\": \"admission\",\n+            \"text\": \"Admission\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"admission\"\n+          },\n+          {\n+            \"key\": \"died\",\n+            \"text\": \"Died\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"died\"\n+          }\n+        ]\n+      }\n+    ]\n+  }\n+}\n+"
  },
  {
    "sha": "69d0764bd47c322a95d03c2c682071879e8c1d23",
    "filename": "opensrp-reveal/src/main/assets/json.form/ntd_mma_dispense.json",
    "status": "added",
    "additions": 368,
    "deletions": 0,
    "changes": 368,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/json.form/ntd_mma_dispense.json",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/json.form/ntd_mma_dispense.json",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/assets/json.form/ntd_mma_dispense.json?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,368 @@\n+{\n+  \"count\": \"1\",\n+  \"encounter_type\": \"mda_dispense\",\n+  \"entity_id\": \"\",\n+  \"metadata\": {\n+    \"start\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"start\",\n+      \"openmrs_entity_id\": \"163137AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"end\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"end\",\n+      \"openmrs_entity_id\": \"163138AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"today\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"encounter\",\n+      \"openmrs_entity_id\": \"encounter_date\"\n+    },\n+    \"deviceid\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"deviceid\",\n+      \"openmrs_entity_id\": \"163149AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"subscriberid\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"subscriberid\",\n+      \"openmrs_entity_id\": \"163150AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"simserial\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"simserial\",\n+      \"openmrs_entity_id\": \"163151AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"phonenumber\": {\n+      \"openmrs_entity_parent\": \"\",\n+      \"openmrs_entity\": \"concept\",\n+      \"openmrs_data_type\": \"phonenumber\",\n+      \"openmrs_entity_id\": \"163152AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"\n+    },\n+    \"encounter_location\": \"\"\n+  },\n+  \"step1\": {\n+    \"title\": \"MDA Dispense\",\n+    \"display_back_button\": \"true\",\n+    \"fields\": [\n+      {\n+        \"key\": \"mmaConsent\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"concept\",\n+        \"openmrs_entity_id\": \"mmaConsent\",\n+        \"type\": \"native_radio\",\n+        \"label\": \"Has the child's parent/caregiver granted consent?\",\n+        \"options\": [\n+          {\n+            \"key\": \"Yes\",\n+            \"text\": \"Yes\",\n+            \"openmrs_entity\": \"Yes\",\n+            \"openmrs_entity_id\": \"Yes\"\n+          },\n+          {\n+            \"key\": \"No\",\n+            \"text\": \"No\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"No\"\n+          }\n+        ],\n+        \"v_required\": {\n+          \"value\": true,\n+          \"err\": \"This field is required\"\n+        }\n+      },\n+      {\n+        \"key\": \"mmaheight\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"concept\",\n+        \"openmrs_entity_id\": \"mmaheight\",\n+        \"type\": \"edit_text\",\n+        \"hint\": \"Height in cm\",\n+        \"text_size\": \"8sp\",\n+        \"v_numeric_integer\": {\n+          \"value\": \"true\",\n+          \"err\": \"Please enter a number\"\n+        },\n+        \"v_required\": {\n+          \"value\": true,\n+          \"err\": \"Required field\"\n+        },\n+        \"v_max\": {\n+          \"value\": \"200\",\n+          \"err\": \"Child height field to maximum 200cm\"\n+        },\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd_mma_dispense-relevance.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"mmaDrugAdmin\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"concept\",\n+        \"openmrs_entity_id\": \"mmaDrugAdmin\",\n+        \"type\": \"native_radio\",\n+        \"label\": \"Was the drug administered?\",\n+        \"options\": [\n+          {\n+            \"key\": \"Yes\",\n+            \"text\": \"Yes\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"Yes\"\n+          },\n+          {\n+            \"key\": \"No\",\n+            \"text\": \"No\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"No\"\n+          }\n+        ],\n+        \"v_required\": {\n+          \"value\": true,\n+          \"err\": \"This field is required\"\n+        },\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd_mma_dispense-relevance.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"mmaNoDrugAdminReason\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"concept\",\n+        \"openmrs_entity_id\": \"mmaNoDrugAdminReason\",\n+        \"type\": \"native_radio\",\n+        \"label\": \"Why was the drug not administered?\",\n+        \"options\": [\n+          {\n+            \"key\": \"refused\",\n+            \"text\": \"Refused\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"mmaNoDrugAdminReason\"\n+          },\n+          {\n+            \"key\": \"contraindicated\",\n+            \"text\": \"Contraindicated\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"contraindicated\"\n+          },\n+          {\n+            \"key\": \"pregnant\",\n+            \"text\": \"Pregnant\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"pregnant\"\n+          },\n+          {\n+            \"key\": \"sick\",\n+            \"text\": \"Sick\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"sick\"\n+          },\n+          {\n+            \"key\": \"other\",\n+            \"text\": \"Other\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"other\"\n+          }\n+        ],\n+        \"v_required\": {\n+          \"value\": true,\n+          \"err\": \"This field is required\"\n+        },\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd_mma_dispense-relevance.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"other_imaNoDrugAdminReason\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"concept\",\n+        \"openmrs_entity_id\": \"other_imaNoDrugAdminReason\",\n+        \"type\": \"edit_text\",\n+        \"hint\": \"Specify other reason\",\n+        \"text_size\": \"8sp\",\n+        \"v_required\": {\n+          \"value\": true,\n+          \"err\": \"This field is required\"\n+        },\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd_mma_dispense-relevance.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"mmaTreatCateg\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"concept\",\n+        \"openmrs_entity_id\": \"mmaTreatCateg\",\n+        \"type\": \"native_radio\",\n+        \"label\": \"Treatment category\",\n+        \"options\": [\n+          {\n+            \"key\": \"albOneTab\",\n+            \"text\": \"Alb 1 tab\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"albOneTab\"\n+          },\n+          {\n+            \"key\": \"PrazByHeight\",\n+            \"text\": \"Praziquental (by height)\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"PrazByHeight\"\n+          },\n+          {\n+            \"key\": \"PrazPlusAlb\",\n+            \"text\": \"Praz (by height) + 1 tab Alb\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"PrazPlusAlb\"\n+          }\n+        ],\n+        \"v_required\": {\n+          \"value\": true,\n+          \"err\": \"This field is required\"\n+        },\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd_mma_dispense-relevance.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"mmaPzqDosage\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"concept\",\n+        \"openmrs_entity_id\": \"mmaPzqDosage\",\n+        \"type\": \"edit_text\",\n+        \"hint\": \"PZQ pills to be given\",\n+        \"read_only\": \"True\",\n+        \"text_size\": \"8sp\",\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd_mma_dispense-relevance.yml\"\n+            }\n+          }\n+        },\n+        \"calculation\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd_mma_dispense-calculation.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"mmaPzqDosageGiven\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"concept\",\n+        \"openmrs_entity_id\": \"mmaPzqDosageGiven\",\n+        \"type\": \"native_radio\",\n+        \"label\": \"Number of pills (PZQ) given\",\n+        \"options\": [\n+          {\n+            \"key\": \"one\",\n+            \"text\": \"1\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"1\"\n+          },\n+          {\n+            \"key\": \"onePointFive\",\n+            \"text\": \"1.5\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"1.5\"\n+          },\n+          {\n+            \"key\": \"two\",\n+            \"text\": \"2\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"2\"\n+          },\n+          {\n+            \"key\": \"twoPointFive\",\n+            \"text\": \"2.5\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"2.5\"\n+          },\n+          {\n+            \"key\": \"three\",\n+            \"text\": \"3\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"3\"\n+          },\n+          {\n+            \"key\": \"four\",\n+            \"text\": \"4\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"4\"\n+          },\n+          {\n+            \"key\": \"five\",\n+            \"text\": \"5\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"5\"\n+          }\n+        ],\n+        \"v_required\": {\n+          \"value\": true,\n+          \"err\": \"This field is required\"\n+        },\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd_mma_dispense-relevance.yml\"\n+            }\n+          }\n+        }\n+      },\n+      {\n+        \"key\": \"mmaAlbGiven\",\n+        \"openmrs_entity_parent\": \"\",\n+        \"openmrs_entity\": \"concept\",\n+        \"openmrs_entity_id\": \"mmaAlbGiven\",\n+        \"type\": \"native_radio\",\n+        \"label\": \"Was 1 ALB pill given?\",\n+        \"options\": [\n+          {\n+            \"key\": \"Yes\",\n+            \"text\": \"Yes\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"Yes\"\n+          },\n+          {\n+            \"key\": \"No\",\n+            \"text\": \"No\",\n+            \"openmrs_entity\": \"concept\",\n+            \"openmrs_entity_id\": \"No\"\n+          }\n+        ],\n+        \"relevance\": {\n+          \"rules-engine\": {\n+            \"ex-rules\": {\n+              \"rules-file\": \"ntd_mma_dispense-relevance.yml\"\n+            }\n+          }\n+        }\n+      }\n+    ]\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "9e99ba5964ef9793e0528edf217c712b59fb2d6b",
    "filename": "opensrp-reveal/src/main/assets/rule/ntd-child-registration-calculation.yml",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/rule/ntd-child-registration-calculation.yml",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/rule/ntd-child-registration-calculation.yml",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/assets/rule/ntd-child-registration-calculation.yml?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,21 @@\n+---\n+name: step1_sactaRevealId\n+description: sactaRevealId status\n+priority: 1\n+condition: \"true\"\n+actions:\n+  - \"calculation = step1_sactaRevealId = ((step1_sactaDob != null && step1_sactaDob != '') ? step1_sactaDob.substring(6,10) + step1_sactaDob.substring(3,5) + step1_sactaDob.substring(0,2) : '00000000') + step1_unique_id.replace('-','') \"\n+---\n+name: step1_sactaAge\n+description: sactaAge status\n+priority: 1\n+condition: \"step1_sactaDob != null && step1_sactaDob != '' \"\n+actions:\n+  - \"calculation = step1_sactaAge = helper.getDuration(step1_sactaDob)\"\n+---\n+name: step1_sactaAgeCat\n+description: sactaAgeCat status\n+priority: 1\n+condition: \"step1_sactaDob != null && step1_sactaDob != '' \"\n+actions:\n+  - \"calculation = step1_sactaAge = (Integer.parseInt(helper.getDuration(step1_sactaDob).split(' ')[0].replace('y','')) < 11) ? '6-10' : ((Integer.parseInt(helper.getDuration(step1_sactaDob).split(' ')[0].replace('y','')) < 16) ? '11-15' : ((Integer.parseInt(helper.getDuration(step1_sactaDob).split(' ')[0].replace('y','')) < 19) ? '16-18' : 'Adult' )) \"\n\\ No newline at end of file"
  },
  {
    "sha": "db7799cd312bf8c3923b94aca5b54f035b25ce70",
    "filename": "opensrp-reveal/src/main/assets/rule/ntd-child-registration-relevance.yml",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/rule/ntd-child-registration-relevance.yml",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/rule/ntd-child-registration-relevance.yml",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/assets/rule/ntd-child-registration-relevance.yml?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,28 @@\n+---\n+name: step1_sactaNationalId\n+description: step1_sactaNationalId\n+priority: 1\n+condition: \"!step1_sactaNoNationalId.contains('noNationalID')\"\n+actions:\n+  - \"isRelevant = true\"\n+---\n+name: step1_sactaCurrSchName\n+description: sactaCurrSchName relevance\n+priority: 1\n+condition: \"step1_sactaCurrEnroll.contains('Yes')\"\n+actions:\n+  - \"isRelevant = true\"\n+---\n+name: step1_sactaGrade\n+description: sactaGrade relevance\n+priority: 1\n+condition: \"step1_sactaCurrEnroll.contains('Yes')\"\n+actions:\n+  - \"isRelevant = true\"\n+---\n+name: step1_sactaClass\n+description: sactaClass relevance\n+priority: 1\n+condition: \"step1_sactaCurrEnroll.contains('Yes')\"\n+actions:\n+  - \"isRelevant = true\"\n\\ No newline at end of file"
  },
  {
    "sha": "2a7bc07d9e63bc0c65e8e12d2202292fa723e908",
    "filename": "opensrp-reveal/src/main/assets/rule/ntd-mma-adr-relevance.yml",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/rule/ntd-mma-adr-relevance.yml",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/rule/ntd-mma-adr-relevance.yml",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/assets/rule/ntd-mma-adr-relevance.yml?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,7 @@\n+---\n+name: step1_other_mmaAdrType\n+description: step1_other_mmaAdrType\n+priority: 1\n+condition: \"step1_mmaAdrType.contains('other')\"\n+actions:\n+  - \"isRelevant = true\"\n\\ No newline at end of file"
  },
  {
    "sha": "25df3ff5c613875f9dc75165a07651e05626fa38",
    "filename": "opensrp-reveal/src/main/assets/rule/ntd_mma_dispense-calculation.yml",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/rule/ntd_mma_dispense-calculation.yml",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/rule/ntd_mma_dispense-calculation.yml",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/assets/rule/ntd_mma_dispense-calculation.yml?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,49 @@\n+---\n+name: step1_mmaPzqDosage\n+description: mmaPzqDosage status\n+priority: 1\n+condition: \"(step1_mmaTreatCateg.contains('PrazByHeight') || step1_mmaTreatCateg.contains('PrazPlusAlb')) && Integer.parseInt(step1_mmaheight) <= 110\"\n+actions:\n+  - \"calculation = step1_mmaPzqDosage = 1\"\n+---\n+name: step1_mmaPzqDosage\n+description: mmaPzqDosage status\n+priority: 2\n+condition: \"(step1_mmaTreatCateg.contains('PrazByHeight') || step1_mmaTreatCateg.contains('PrazPlusAlb')) && Integer.parseInt(step1_mmaheight) <= 125\"\n+actions:\n+  - \"calculation = step1_mmaPzqDosage = 1.5\"\n+---\n+name: step1_mmaPzqDosage\n+description: mmaPzqDosage status\n+priority: 3\n+condition: \"(step1_mmaTreatCateg.contains('PrazByHeight') || step1_mmaTreatCateg.contains('PrazPlusAlb')) && Integer.parseInt(step1_mmaheight) <= 138\"\n+actions:\n+  - \"calculation = step1_mmaPzqDosage = 2\"\n+---\n+name: step1_mmaPzqDosage\n+description: mmaPzqDosage status\n+priority: 4\n+condition: \"(step1_mmaTreatCateg.contains('PrazByHeight') || step1_mmaTreatCateg.contains('PrazPlusAlb')) && Integer.parseInt(step1_mmaheight) <= 150\"\n+actions:\n+  - \"calculation = step1_mmaPzqDosage = 2.5\"\n+---\n+name: step1_mmaPzqDosage\n+description: mmaPzqDosage status\n+priority: 5\n+condition: \"(step1_mmaTreatCateg.contains('PrazByHeight') || step1_mmaTreatCateg.contains('PrazPlusAlb')) && Integer.parseInt(step1_mmaheight) <= 160\"\n+actions:\n+  - \"calculation = step1_mmaPzqDosage = 3\"\n+---\n+name: step1_mmaPzqDosage\n+description: mmaPzqDosage status\n+priority: 6\n+condition: \"(step1_mmaTreatCateg.contains('PrazByHeight') || step1_mmaTreatCateg.contains('PrazPlusAlb')) && Integer.parseInt(step1_mmaheight) <= 178\"\n+actions:\n+  - \"calculation = step1_mmaPzqDosage = 4\"\n+---\n+name: step1_mmaPzqDosage\n+description: mmaPzqDosage status\n+priority: 7\n+condition: \"(step1_mmaTreatCateg.contains('PrazByHeight') || step1_mmaTreatCateg.contains('PrazPlusAlb')) && Integer.parseInt(step1_mmaheight) > 178\"\n+actions:\n+  - \"calculation = step1_mmaPzqDosage = 5\"\n\\ No newline at end of file"
  },
  {
    "sha": "14168bfd1e880a31ba601774002633d7b39db0a7",
    "filename": "opensrp-reveal/src/main/assets/rule/ntd_mma_dispense-relevance.yml",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/rule/ntd_mma_dispense-relevance.yml",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/assets/rule/ntd_mma_dispense-relevance.yml",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/assets/rule/ntd_mma_dispense-relevance.yml?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,56 @@\n+---\n+name: step1_mmaheight\n+description: step1_mmaheight\n+priority: 1\n+condition: \"step1_mmaConsent.contains('Yes')\"\n+actions:\n+  - \"isRelevant = true\"\n+---\n+name: step1_mmaDrugAdmin\n+description: step1_mmaDrugAdmin\n+priority: 1\n+condition: \"step1_mmaConsent.contains('Yes')\"\n+actions:\n+  - \"isRelevant = true\"\n+---\n+name: step1_mmaNoDrugAdminReason\n+description: step1_mmaNoDrugAdminReason\n+priority: 1\n+condition: \"step1_mmaDrugAdmin.contains('No')\"\n+actions:\n+  - \"isRelevant = true\"\n+---\n+name: step1_other_imaNoDrugAdminReason\n+description: step1_other_imaNoDrugAdminReason\n+priority: 1\n+condition: \"step1_mmaNoDrugAdminReason.contains('other')\"\n+actions:\n+  - \"isRelevant = true\"\n+---\n+name: step1_mmaTreatCateg\n+description: step1_mmaTreatCateg\n+priority: 1\n+condition: \"step1_mmaDrugAdmin.contains('Yes')\"\n+actions:\n+  - \"isRelevant = true\"\n+---\n+name: step1_mmaPzqDosage\n+description: step1_mmaPzqDosage\n+priority: 1\n+condition: \"step1_mmaTreatCateg.contains('PrazByHeight') || step1_mmaTreatCateg.contains('PrazPlusAlb')\"\n+actions:\n+  - \"isRelevant = true\"\n+---\n+name: step1_mmaPzqDosageGiven\n+description: step1_mmaPzqDosageGiven\n+priority: 1\n+condition: \"step1_mmaTreatCateg.contains('PrazByHeight') || step1_mmaTreatCateg.contains('PrazPlusAlb')\"\n+actions:\n+  - \"isRelevant = true\"\n+---\n+name: step1_mmaAlbGiven\n+description: step1_mmaAlbGiven\n+priority: 1\n+condition: \"step1_mmaTreatCateg.contains('albOneTab') || step1_mmaTreatCateg.contains('PrazPlusAlb')\"\n+actions:\n+  - \"isRelevant = true\"\n\\ No newline at end of file"
  },
  {
    "sha": "57a76aaaa0b0fecc31b67a9d27d870f0f00514df",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/activity/LoginActivity.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/activity/LoginActivity.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/activity/LoginActivity.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/activity/LoginActivity.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -12,6 +12,7 @@\n import org.smartregister.reveal.application.RevealApplication;\n import org.smartregister.reveal.presenter.LoginPresenter;\n import org.smartregister.reveal.util.Country;\n+import org.smartregister.reveal.view.ChildRegisterActivity;\n import org.smartregister.reveal.view.ListTasksActivity;\n import org.smartregister.task.SaveTeamLocationsTask;\n import org.smartregister.view.activity.BaseLoginActivity;\n@@ -37,7 +38,12 @@ public void goToHome(boolean remote) {\n             org.smartregister.util.Utils.startAsyncTask(new SaveTeamLocationsTask(), null);\n         }\n         RevealApplication.getInstance().getContext().anmLocationController().evict();\n-        Intent intent = new Intent(this, ListTasksActivity.class);\n+        Class<?> startActivity = ListTasksActivity.class;\n+\n+        if (BuildConfig.BUILD_COUNTRY == Country.NTD_SCHOOL)\n+            startActivity = ChildRegisterActivity.class;\n+\n+        Intent intent = new Intent(this, startActivity);\n         startActivity(intent);\n \n         finish();"
  },
  {
    "sha": "4063c146122973261d04f347fa6a92a8eb2cd357",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/adapter/ChildRegisterAdapter.java",
    "status": "added",
    "additions": 128,
    "deletions": 0,
    "changes": 128,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/adapter/ChildRegisterAdapter.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/adapter/ChildRegisterAdapter.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/adapter/ChildRegisterAdapter.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,128 @@\n+package org.smartregister.reveal.adapter;\n+\n+import android.content.Context;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.TextView;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.smartregister.reveal.R;\n+import org.smartregister.reveal.model.Child;\n+import org.smartregister.reveal.util.Constants;\n+import org.smartregister.reveal.viewholder.GroupedListableViewHolder;\n+import org.smartregister.view.ListContract;\n+\n+import java.util.List;\n+\n+public class ChildRegisterAdapter extends GroupedListableAdapter<Child, GroupedListableViewHolder<Child>> {\n+\n+    public ChildRegisterAdapter(List<Child> items, ListContract.View<Child> view) {\n+        super(items, view);\n+    }\n+\n+    @Override\n+    public void reloadData(@Nullable List<Child> items) {\n+        super.reloadData(items);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public GroupedListableViewHolder<Child> onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n+        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.child_register_list_row, parent, false);\n+        return new ChildViewHolder(view);\n+    }\n+\n+    public static class ChildViewHolder extends GroupedListableViewHolder<Child> {\n+\n+        private TextView tvName;\n+        private TextView tvDetails;\n+        private View currentView;\n+        private View linearLayoutAction;\n+        private TextView tvHeader;\n+        private Button btnDue;\n+        private Context context;\n+\n+        private ChildViewHolder(@NonNull View itemView) {\n+            super(itemView);\n+            currentView = itemView;\n+            tvHeader = itemView.findViewById(R.id.tvHeader);\n+            tvName = itemView.findViewById(R.id.patient_name);\n+            tvDetails = itemView.findViewById(R.id.tvDetails);\n+            linearLayoutAction = itemView.findViewById(R.id.linearLayoutAction);\n+            btnDue = itemView.findViewById(R.id.btnDue);\n+            context = itemView.getContext();\n+        }\n+\n+        @Override\n+        public void bindView(Child child, ListContract.View<Child> view) {\n+            tvName.setText(child.getFullName());\n+            String details = \"#\" + child.getUniqueID() + \" \\u00B7 \" + child.getGender() + \" \\u00B7 Age \" + child.getAge();\n+            tvDetails.setText(details);\n+            currentView.setOnClickListener(v -> view.onListItemClicked(child, v.getId()));\n+\n+            if (StringUtils.isBlank(child.getTaskStatus()))\n+                return;\n+\n+            switch (child.getTaskStatus()) {\n+                case Constants.BusinessStatus.NOT_VISITED:\n+                    btnDue.setOnClickListener(v -> view.onListItemClicked(child, v.getId()));\n+                    linearLayoutAction.setOnClickListener(v -> view.onListItemClicked(child, v.getId()));\n+                    linearLayoutAction.setVisibility(View.VISIBLE);\n+\n+                    btnDue.setText(context.getResources().getString(R.string.record_dose));\n+                    btnDue.setTextColor(context.getResources().getColor(R.color.mda_partially_received));\n+                    btnDue.setBackground(context.getResources().getDrawable(R.drawable.due_dose_bg));\n+                    break;\n+                case Constants.BusinessStatus.VISITED_DRUG_ADMINISTERED:\n+                    btnDue.setOnClickListener(null);\n+                    linearLayoutAction.setOnClickListener(null);\n+                    linearLayoutAction.setVisibility(View.VISIBLE);\n+\n+                    btnDue.setText(context.getResources().getString(R.string.dose_given));\n+                    btnDue.setTextColor(context.getResources().getColor(R.color.alert_complete_green));\n+                    btnDue.setBackground(null);\n+                    break;\n+                case Constants.BusinessStatus.VISITED_DRUG_NOT_ADMINISTERED:\n+                    btnDue.setOnClickListener(null);\n+                    linearLayoutAction.setOnClickListener(null);\n+                    linearLayoutAction.setVisibility(View.VISIBLE);\n+\n+                    btnDue.setText(context.getResources().getString(R.string.not_given));\n+                    btnDue.setTextColor(context.getResources().getColor(R.color.dark_grey));\n+                    btnDue.setBackground(null);\n+                    break;\n+                default:\n+                    btnDue.setOnClickListener(null);\n+                    linearLayoutAction.setOnClickListener(null);\n+                    linearLayoutAction.setVisibility(View.GONE);\n+                    break;\n+            }\n+\n+        }\n+\n+        @Override\n+        public void resetView() {\n+            tvHeader.setText(\"\");\n+            tvHeader.setVisibility(View.GONE);\n+\n+            tvName.setText(\"\");\n+            tvDetails.setText(\"\");\n+            linearLayoutAction.setVisibility(View.GONE);\n+            linearLayoutAction.setOnClickListener(null);\n+            btnDue.setBackground(null);\n+        }\n+\n+        @Override\n+        public void bindHeader(Child currentObject, @Nullable Child previousObject, ListContract.View<Child> view) {\n+            if (previousObject == null || !currentObject.getGrade().equals(previousObject.getGrade())) {\n+                tvHeader.setVisibility(View.VISIBLE);\n+                tvHeader.setText(currentObject.getGrade());\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "8ccc0efccdb79d9b08abd97f38309b94cf9d08c6",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/adapter/GroupedListableAdapter.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/adapter/GroupedListableAdapter.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/adapter/GroupedListableAdapter.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/adapter/GroupedListableAdapter.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,38 @@\n+package org.smartregister.reveal.adapter;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import org.smartregister.reveal.viewholder.GroupedListableViewHolder;\n+import org.smartregister.view.ListContract;\n+import org.smartregister.view.adapter.ListableAdapter;\n+\n+import java.util.List;\n+\n+public abstract class GroupedListableAdapter<T extends ListContract.Identifiable, H extends GroupedListableViewHolder<T>>\n+        extends ListableAdapter<T, H> {\n+\n+    public GroupedListableAdapter(List<T> items, ListContract.View<T> view) {\n+        super(items, view);\n+    }\n+\n+    @Override\n+    public void reloadData(@Nullable List<T> items) {\n+        this.items.clear();\n+        if (items != null)\n+            this.items.addAll(items);\n+    }\n+\n+    @Override\n+    public void onBindViewHolder(@NonNull H holder, int position) {\n+        holder.resetView();\n+\n+        T previous = position > 0 ? items.get(position - 1) : null;\n+        T current = items.get(position);\n+        if (current != null) {\n+            holder.bindHeader(current, previous, view);\n+            holder.bindView(current, view);\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "97a8a715874e53cadc0bda94f9f470deb79ddab4",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/application/RevealApplication.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/application/RevealApplication.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/application/RevealApplication.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/application/RevealApplication.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -136,6 +136,8 @@ public void onCreate() {\n             CoreLibrary.getInstance().setEcClientFieldsFile(Constants.ECClientConfig.ZAMBIA_EC_CLIENT_FIELDS);\n         } else if (BuildConfig.BUILD_COUNTRY == Country.REFAPP) {\n             CoreLibrary.getInstance().setEcClientFieldsFile(Constants.ECClientConfig.REFAPP_EC_CLIENT_FIELDS);\n+        } else if (BuildConfig.BUILD_COUNTRY == Country.NTD_SCHOOL || BuildConfig.BUILD_COUNTRY == Country.NTD_COMMUNITY) {\n+            CoreLibrary.getInstance().setEcClientFieldsFile(Constants.ECClientConfig.NTD_EC_CLIENT_FIELDS);\n         } else if (BuildConfig.BUILD_COUNTRY == Country.SENEGAL) {\n             CoreLibrary.getInstance().setEcClientFieldsFile(Constants.ECClientConfig.SENEGAL_EC_CLIENT_FIELDS);\n         } else if(BuildConfig.BUILD_COUNTRY == Country.KENYA){"
  },
  {
    "sha": "aac7afd7040dfa934649c7931275f6fb7260c69e",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/contract/BaseDrawerContract.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/BaseDrawerContract.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/BaseDrawerContract.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/BaseDrawerContract.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -51,6 +51,8 @@\n \n         void showOperationalAreaSelector(Pair<String, ArrayList<String>> locationHierarchy);\n \n+        void showStructureSelector(Pair<String, ArrayList<String>> locationHierarchy);\n+\n         void showPlanSelector(List<String> campaigns, String entireTreeString);\n \n         void displayNotification(int title, @StringRes int message, Object... formatArgs);\n@@ -79,6 +81,10 @@\n \n         void onOperationalAreaSelectorClicked(ArrayList<String> name);\n \n+        void onShowStructureSelector();\n+\n+        void onStructureSelectorClicked(ArrayList<String> name);\n+\n         void onShowPlanSelector();\n \n         void onPlanSelectorClicked(ArrayList<String> value, ArrayList<String> name);\n@@ -102,6 +108,8 @@\n         void updateSyncStatusDisplay(boolean synced);\n \n         void onShowFilledForms();\n+\n+        void onPlanAutoSelected(String planName, String planId);\n     }\n \n     interface Interactor {\n@@ -111,5 +119,7 @@\n         void validateCurrentPlan(String selectedOperationalArea, String currentPlanId);\n \n         void checkSynced();\n+\n+        void autoSelectPlan(String jurisdictionName);\n     }\n }"
  },
  {
    "sha": "839aa388ec398c95af151ec893ca237baa60365a",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildFilterFragmentContract.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildFilterFragmentContract.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildFilterFragmentContract.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildFilterFragmentContract.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,71 @@\n+package org.smartregister.reveal.contract;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.WorkerThread;\n+\n+import org.smartregister.util.CallableInteractor;\n+import org.smartregister.util.QueryComposer;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+\n+public interface ChildFilterFragmentContract {\n+\n+    interface View {\n+\n+        void bindLayout();\n+\n+        void updateParameters();\n+\n+        @NonNull\n+        Presenter loadPresenter();\n+\n+        void reloadParameters();\n+\n+        HashMap<String, List<String>> getFilterValues();\n+\n+        void clearFilters();\n+\n+        void onGradesFetched(List<String> grades);\n+\n+        void onError(Exception e);\n+\n+        void setLoadingState(boolean loadingState);\n+\n+        void executeFilter();\n+\n+        String getCurrentLocation();\n+    }\n+\n+    interface Presenter {\n+\n+        void fetchUniqueGrades(String schoolID);\n+\n+        Presenter usingView(ChildFilterFragmentContract.View view);\n+\n+        @Nullable\n+        View getView();\n+\n+        @Nullable\n+        Model getModel();\n+\n+        Presenter usingModel(Model model);\n+\n+        @Nullable\n+        CallableInteractor getInteractor();\n+\n+        Presenter usingInteractor(CallableInteractor interactor);\n+\n+        List<String> getSelectedAges(List<String> selectedRanges, Context context);\n+    }\n+\n+    interface Model {\n+\n+        @WorkerThread\n+        List<String> fetchUniqueGrades(String schoolID) throws QueryComposer.InvalidQueryException;\n+\n+    }\n+}"
  },
  {
    "sha": "3f475dc945d4c5b4146235f18a6425c214ba6844",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildProfileContract.java",
    "status": "added",
    "additions": 89,
    "deletions": 0,
    "changes": 89,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildProfileContract.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildProfileContract.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildProfileContract.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,89 @@\n+package org.smartregister.reveal.contract;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.WorkerThread;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.smartregister.domain.Task;\n+import org.smartregister.reveal.model.Child;\n+import org.smartregister.util.CallableInteractor;\n+import org.smartregister.util.QueryComposer;\n+import org.smartregister.view.contract.BaseProfileContract;\n+\n+public interface ChildProfileContract {\n+\n+    interface View extends BaseProfileContract.View {\n+\n+        void onFetchResult(Child child);\n+\n+        void setLoadingState(boolean loadingState);\n+\n+        Presenter getPresenter();\n+\n+        void onError(Exception e);\n+\n+        void startEditForm();\n+\n+        void startADRForm();\n+\n+        void startEditMDAForm();\n+\n+        void startJsonForm(JSONObject jsonObject, String formTitle);\n+\n+        void reloadFromSource();\n+\n+        void enableEditMDAForm(String status);\n+    }\n+\n+    interface Presenter extends BaseProfileContract.Presenter {\n+\n+        void fetchProfileData(String baseEntityID);\n+\n+        @NonNull\n+        CallableInteractor getInteractor();\n+\n+        Presenter usingInteractor(CallableInteractor interactor);\n+\n+        @Nullable\n+        View getView();\n+\n+        @NonNull\n+        Model getModel();\n+\n+        void startChildRegistrationForm(Context context, String baseEntityID);\n+\n+        void startEditMDAForm(Context context, String baseEntityID);\n+\n+        void startADRForm(Context context, String baseEntityID);\n+\n+        void updateChild(JSONObject jsonObject, Context context);\n+\n+        void saveMDAForm(String jsonString, Context context);\n+\n+        void saveADRForm(JSONObject jsonObject, Context context);\n+    }\n+\n+    interface Model {\n+\n+        @WorkerThread\n+        @Nullable\n+        Child getChild(String baseEntityID) throws QueryComposer.InvalidQueryException;\n+\n+        @WorkerThread\n+        Task getCurrentTask(Context context, String baseEntityID);\n+\n+        @WorkerThread\n+        JSONObject getRegistrationEditForm(Context context, String baseEntityID) throws Exception;\n+\n+        @WorkerThread\n+        JSONObject getEditMDAForm(Context context, String baseEntityID) throws Exception;\n+\n+        @WorkerThread\n+        JSONObject getADRForm(Context context, String baseEntityID) throws JSONException;\n+\n+    }\n+}"
  },
  {
    "sha": "4f6a6cc74ea716c032d4009f78a241648cbf37e1",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildRegisterFragmentContract.java",
    "status": "added",
    "additions": 80,
    "deletions": 0,
    "changes": 80,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildRegisterFragmentContract.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildRegisterFragmentContract.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/ChildRegisterFragmentContract.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,80 @@\n+package org.smartregister.reveal.contract;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.WorkerThread;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.smartregister.domain.Location;\n+import org.smartregister.domain.Task;\n+import org.smartregister.reveal.model.Child;\n+import org.smartregister.util.CallableInteractor;\n+import org.smartregister.view.ListContract;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface ChildRegisterFragmentContract {\n+\n+    interface View extends ListContract.View<Child> {\n+        void openFilterFragment();\n+\n+        void startChildRegistrationForm();\n+\n+        void startRecordMDAForm(String baseEntityID);\n+\n+        void startJsonForm(JSONObject form, String formTitle);\n+\n+        void reloadFromSource();\n+\n+        void onReportCountReloaded(Map<String, Integer> reportCounts);\n+\n+        void toggleDetailedReport();\n+\n+        Location getCurrentStructure();\n+\n+    }\n+\n+    interface Presenter extends ListContract.Presenter<Child> {\n+\n+        void search(@Nullable HashMap<String, List<String>> sortAndFilter, @Nullable String searchText);\n+\n+        void startMDAForm(Context context, String baseEntityID);\n+\n+        void startChildRegistrationForm(Context context);\n+\n+        @NonNull\n+        CallableInteractor getCallableInteractor();\n+\n+        Presenter withInteractor(@NonNull CallableInteractor callable);\n+\n+        void saveChild(String jsonString, Context context);\n+\n+        void saveMDAForm(String jsonString, Context context);\n+\n+        void fetchReportStats();\n+    }\n+\n+    interface Model extends ListContract.Model<Child> {\n+\n+        @WorkerThread\n+        List<Child> searchAndFilter(@Nullable HashMap<String, List<String>> sortAndFilter, @Nullable String searchText);\n+\n+        @WorkerThread\n+        JSONObject getMDAForm(Context context, String baseEntityID) throws JSONException;\n+\n+        @WorkerThread\n+        JSONObject getRegistrationForm(Context context) throws JSONException;\n+\n+        Task getCurrentTask(Context context, String baseEntityID);\n+\n+        String getCurrentLocationID();\n+\n+        Map<String, Integer> getReportCounts();\n+    }\n+\n+}"
  },
  {
    "sha": "d9c26f8417e239b4a355829a69fbdb5c37de86d7",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/contract/FormProcessor.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/FormProcessor.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/FormProcessor.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/FormProcessor.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,17 @@\n+package org.smartregister.reveal.contract;\n+\n+import com.vijay.jsonwizard.domain.Form;\n+\n+import org.json.JSONObject;\n+\n+public interface FormProcessor {\n+    interface Host {\n+        void startForm(JSONObject jsonObject, Form form, Requester requester);\n+    }\n+\n+    interface Requester {\n+        void onFormProcessingResult(String jsonForm);\n+\n+        FormProcessor.Host getHostFormProcessor();\n+    }\n+}"
  },
  {
    "sha": "e059c4ea329fefe8c05b71ba611581054e357479",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/contract/GroupListContract.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/GroupListContract.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/GroupListContract.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/contract/GroupListContract.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,14 @@\n+package org.smartregister.reveal.contract;\n+\n+import androidx.annotation.Nullable;\n+\n+import org.smartregister.view.ListContract;\n+\n+public interface GroupListContract extends ListContract {\n+\n+    interface GroupedAdapterViewHolder<T extends ListContract.Identifiable> extends AdapterViewHolder<T> {\n+\n+        void bindHeader(T currentObject, @Nullable T previousObject, ListContract.View<T> view);\n+\n+    }\n+}"
  },
  {
    "sha": "37c3d4337d16beede0d92defdc92e9f59429c74b",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/dao/EventDao.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/dao/EventDao.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/dao/EventDao.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/dao/EventDao.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,36 @@\n+package org.smartregister.reveal.dao;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.smartregister.dao.AbstractDao;\n+\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import timber.log.Timber;\n+\n+public class EventDao extends AbstractDao {\n+\n+    public static EventDao getInstance() {\n+        return new EventDao();\n+    }\n+\n+    public JSONObject getLastEvent(String baseEntityID, String eventType) {\n+        AtomicReference<JSONObject> jsonObject = new AtomicReference<>();\n+\n+        String sql = \"select json from event where baseEntityId = '\" + baseEntityID + \"' and eventType = '\" + eventType + \"'  order by dateCreated desc limit 1\";\n+\n+        DataMap<Void> dataMap = cursor -> {\n+            String json = getCursorValue(cursor, \"json\");\n+            try {\n+                jsonObject.set(new JSONObject(json));\n+            } catch (JSONException e) {\n+                Timber.e(e);\n+            }\n+            return null;\n+        };\n+\n+        readData(sql, dataMap);\n+\n+        return jsonObject.get();\n+    }\n+}"
  },
  {
    "sha": "5ef5b401642ca16055c2f34a1542f48a5d968ad5",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/dao/StructureDao.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/dao/StructureDao.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/dao/StructureDao.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/dao/StructureDao.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,62 @@\n+package org.smartregister.reveal.dao;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.smartregister.dao.AbstractDao;\n+import org.smartregister.domain.Location;\n+import org.smartregister.domain.LocationProperty;\n+import org.smartregister.util.Cache;\n+import org.smartregister.util.PropertiesConverter;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+\n+public class StructureDao extends AbstractDao {\n+\n+    protected static Cache<Map<String, List<Location>>> cache = new Cache<>();\n+    protected static String CACHED_STRUCTURES = \"CACHED_STRUCTURES\";\n+\n+    public static Map<String, List<Location>> getStructuresByParent() {\n+        Map<String, List<Location>> result = new HashMap<>();\n+\n+        Gson gson = new GsonBuilder().setDateFormat(\"yyyy-MM-dd'T'HHmm\")\n+                .registerTypeAdapter(LocationProperty.class, new PropertiesConverter()).create();\n+\n+        String sql = \"select l.name , s.geojson from structure s inner join location l on s.parent_id = l._id\";\n+\n+        DataMap<Void> dataMap = cursor -> {\n+            String parent_id = getCursorValue(cursor, \"name\");\n+            if (StringUtils.isNotBlank(parent_id)) {\n+                List<Location> locations = result.get(parent_id);\n+                if (locations == null)\n+                    locations = new ArrayList<>();\n+\n+\n+                String geoJson = getCursorValue(cursor, \"geojson\");\n+                Location location = gson.fromJson(geoJson, Location.class);\n+                locations.add(location);\n+\n+                result.put(parent_id, locations);\n+            }\n+            return null;\n+        };\n+\n+        readData(sql, dataMap);\n+\n+        return result;\n+    }\n+\n+    public static Map<String, List<Location>> getCachedStructures() {\n+        return cache.get(CACHED_STRUCTURES, StructureDao::getStructuresByParent);\n+    }\n+\n+    public static void resetLocationCache() {\n+        if (cache != null)\n+            cache.evict(CACHED_STRUCTURES);\n+    }\n+}"
  },
  {
    "sha": "b3603ff72a3fabbcec2e97e3716590966e7b74e8",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/fragment/ChildFilterFragment.java",
    "status": "added",
    "additions": 274,
    "deletions": 0,
    "changes": 274,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/fragment/ChildFilterFragment.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/fragment/ChildFilterFragment.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/fragment/ChildFilterFragment.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,274 @@\n+package org.smartregister.reveal.fragment;\n+\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.CheckBox;\n+import android.widget.LinearLayout;\n+import android.widget.ProgressBar;\n+import android.widget.RadioButton;\n+import android.widget.Toast;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.appcompat.widget.Toolbar;\n+import androidx.core.util.Consumer;\n+import androidx.fragment.app.Fragment;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+import org.smartregister.domain.Location;\n+import org.smartregister.reveal.R;\n+import org.smartregister.reveal.contract.ChildFilterFragmentContract;\n+import org.smartregister.reveal.model.ChildFilterFragmentModel;\n+import org.smartregister.reveal.presenter.ChildFilterFragmentPresenter;\n+import org.smartregister.reveal.util.Constants;\n+import org.smartregister.reveal.util.PreferencesUtil;\n+import org.smartregister.reveal.util.Utils;\n+import org.smartregister.reveal.view.ChildRegisterActivity;\n+import org.smartregister.util.GenericInteractor;\n+\n+import java.io.Serializable;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import timber.log.Timber;\n+\n+\n+public class ChildFilterFragment extends Fragment implements ChildFilterFragmentContract.View {\n+    public static final String TAG = \"ChildFilterFragment\";\n+    private ChildFilterFragmentContract.Presenter presenter;\n+    protected ProgressBar progressBar;\n+    protected AtomicInteger incompleteRequests = new AtomicInteger(0);\n+    private View view;\n+    private LinearLayout linearLayoutGrades;\n+    private LinearLayout linearLayoutAges;\n+    private RadioButton radioGradeName;\n+    private RadioButton radioGradeAge;\n+    private RadioButton radioAge;\n+    @Nullable\n+    private HashMap<String, List<String>> filterAndSearch;\n+\n+    @Override\n+    public View onCreateView(@NotNull LayoutInflater inflater, ViewGroup container,\n+                             Bundle savedInstanceState) {\n+        Bundle bundle = getArguments();\n+        if (bundle != null) {\n+            Serializable serializable = bundle.getSerializable(Constants.ChildFilter.FILTER_PAYLOAD);\n+            if (serializable != null)\n+                filterAndSearch = (HashMap<String, List<String>>) serializable;\n+        }\n+\n+        view = inflater.inflate(R.layout.child_register_filter_fragment, container, false);\n+        bindLayout();\n+        loadPresenter();\n+        reloadParameters();\n+        updateParameters();\n+\n+        return view;\n+    }\n+\n+    private AppCompatActivity getAppCompatActivity() {\n+        return (AppCompatActivity) getActivity();\n+    }\n+\n+    @Override\n+    public void bindLayout() {\n+        // toolbar\n+        Toolbar toolbar = view.findViewById(R.id.filter_tasks_toolbar);\n+        toolbar.setTitle(R.string.filter_or_sort);\n+        getAppCompatActivity().setSupportActionBar(toolbar);\n+        getAppCompatActivity().getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n+        getAppCompatActivity().getSupportActionBar().setHomeAsUpIndicator(R.drawable.ic_action_close);\n+        toolbar.setNavigationOnClickListener(v -> getActivity().finish());\n+\n+        Button btnApplyFilters = view.findViewById(R.id.apply_filters);\n+        btnApplyFilters.setOnClickListener(v -> executeFilter());\n+\n+        radioGradeName = view.findViewById(R.id.radioGradeName);\n+        radioGradeAge = view.findViewById(R.id.radioGradeAge);\n+        radioAge = view.findViewById(R.id.radioAge);\n+\n+        view.findViewById(R.id.clear_filters).setOnClickListener(v -> clearFilters());\n+\n+        progressBar = view.findViewById(R.id.progress_bar);\n+        progressBar.setVisibility(View.GONE);\n+\n+        linearLayoutGrades = view.findViewById(R.id.linearLayoutGrades);\n+        linearLayoutGrades.removeAllViews();\n+\n+        linearLayoutAges = view.findViewById(R.id.linearLayoutAges);\n+    }\n+\n+    @Override\n+    public void updateParameters() {\n+        if (filterAndSearch != null) {\n+\n+            List<String> sort = filterAndSearch.get(Constants.ChildFilter.SORT);\n+            if (radioGradeName != null && sort != null) {\n+\n+                boolean hasGrade = sort.contains(Constants.DatabaseKeys.GRADE);\n+                boolean hasName = sort.contains(Constants.DatabaseKeys.LAST_NAME);\n+                boolean hasAge = sort.contains(Constants.DatabaseKeys.DOB + \" DESC \");\n+\n+                if (hasGrade && hasName) {\n+                    radioGradeName.setChecked(true);\n+                } else if (hasGrade && hasAge) {\n+                    radioGradeAge.setChecked(true);\n+                } else if (hasAge) {\n+                    radioAge.setChecked(true);\n+                }\n+\n+            }\n+\n+            redrawLayout(filterAndSearch.get(Constants.ChildFilter.FILTER_GRADE), linearLayoutGrades);\n+            redrawLayout(filterAndSearch.get(Constants.ChildFilter.FILTER_AGE), linearLayoutAges);\n+        }\n+    }\n+\n+    private void redrawLayout(List<String> values, LinearLayout linearLayout) {\n+        if (linearLayout == null || values == null) return;\n+\n+        int pos = 0;\n+        int size = linearLayout.getChildCount();\n+        while (pos < size) {\n+            CheckBox checkBox = (CheckBox) linearLayout.getChildAt(pos);\n+            String text = getText(linearLayout.getContext(), checkBox.getText().toString());\n+            if (values.contains(text))\n+                checkBox.setChecked(true);\n+            pos++;\n+        }\n+    }\n+\n+    private String getText(Context context, String text) {\n+        if (text.equalsIgnoreCase(context.getString(R.string.range_6_10))) {\n+            return \"6:10\";\n+        } else if (text.equalsIgnoreCase(context.getString(R.string.range_11_15))) {\n+            return \"11:15\";\n+        } else if (text.equalsIgnoreCase(context.getString(R.string.range_16_18))) {\n+            return \"16:18\";\n+        } else if (text.equalsIgnoreCase(context.getString(R.string.adult))) {\n+            return \"Adult\";\n+        } else {\n+            return text;\n+        }\n+    }\n+\n+    @Override\n+    public ChildFilterFragmentContract.Presenter loadPresenter() {\n+        if (presenter == null) {\n+            presenter = new ChildFilterFragmentPresenter()\n+                    .usingView(this)\n+                    .usingInteractor(new GenericInteractor())\n+                    .usingModel(new ChildFilterFragmentModel());\n+        }\n+        return presenter;\n+    }\n+\n+    @Override\n+    public void reloadParameters() {\n+        presenter.fetchUniqueGrades(getCurrentLocation());\n+    }\n+\n+    @Override\n+    public HashMap<String, List<String>> getFilterValues() {\n+        HashMap<String, List<String>> result = new HashMap<>();\n+        // get sort\n+        List<String> sort = new ArrayList<>();\n+        if (radioGradeName.isChecked()) {\n+            sort.add(Constants.DatabaseKeys.GRADE);\n+            sort.add(Constants.DatabaseKeys.LAST_NAME);\n+        }\n+\n+        if (radioGradeAge.isChecked()) {\n+            sort.add(Constants.DatabaseKeys.GRADE);\n+            sort.add(Constants.DatabaseKeys.DOB + \" DESC \");\n+        }\n+\n+        if (radioAge.isChecked())\n+            sort.add(Constants.DatabaseKeys.DOB + \" DESC \");\n+\n+        result.put(Constants.ChildFilter.SORT, sort);\n+\n+        result.put(Constants.ChildFilter.FILTER_GRADE, getSelectedCheckBoxValues(linearLayoutGrades));\n+        result.put(Constants.ChildFilter.FILTER_AGE, presenter.getSelectedAges(getSelectedCheckBoxValues(linearLayoutAges), linearLayoutAges.getContext()));\n+\n+        return result;\n+    }\n+\n+    private void readLayoutCheckBoxes(LinearLayout rootLayout, Consumer<CheckBox> consumer) {\n+        int childCount = rootLayout.getChildCount();\n+        while (childCount > 0) {\n+            View view = rootLayout.getChildAt(childCount - 1);\n+            if (view instanceof CheckBox)\n+                consumer.accept(((CheckBox) view));\n+\n+            childCount--;\n+        }\n+    }\n+\n+    private void resetCheckBoxes(LinearLayout rootLayout) {\n+        readLayoutCheckBoxes(rootLayout, checkBox -> checkBox.setChecked(false));\n+    }\n+\n+    private List<String> getSelectedCheckBoxValues(LinearLayout rootLayout) {\n+        List<String> selectedValues = new ArrayList<>();\n+\n+        readLayoutCheckBoxes(rootLayout, checkBox -> {\n+            if (checkBox.isChecked())\n+                selectedValues.add(checkBox.getText().toString());\n+        });\n+\n+        return selectedValues;\n+    }\n+\n+    @Override\n+    public void clearFilters() {\n+        radioGradeName.setChecked(true);\n+        resetCheckBoxes(linearLayoutGrades);\n+        resetCheckBoxes(linearLayoutAges);\n+    }\n+\n+    @Override\n+    public void onGradesFetched(List<String> grades) {\n+        linearLayoutGrades.removeAllViews();\n+        linearLayoutGrades.setVisibility(grades.size() > 0 ? View.VISIBLE : View.GONE);\n+        for (String grade : grades) {\n+            CheckBox checkBox = new CheckBox(getContext());\n+            checkBox.setText(StringUtils.isBlank(grade) ? \"Unknown\" : grade);\n+            linearLayoutGrades.addView(checkBox);\n+        }\n+        updateParameters();\n+    }\n+\n+    @Override\n+    public void onError(Exception e) {\n+        Toast.makeText(getContext(), R.string.an_error_occured, Toast.LENGTH_SHORT).show();\n+        Timber.e(e);\n+    }\n+\n+    @Override\n+    public void setLoadingState(boolean loadingState) {\n+        int result = loadingState ? incompleteRequests.incrementAndGet() : incompleteRequests.decrementAndGet();\n+        progressBar.setVisibility(result > 0 ? View.VISIBLE : View.INVISIBLE);\n+    }\n+\n+    @Override\n+    public void executeFilter() {\n+        Bundle bundle = new Bundle();\n+        bundle.putSerializable(Constants.ChildFilter.FILTER_PAYLOAD, getFilterValues());\n+        ChildRegisterActivity.startFragment(getActivity(), ChildRegisterFragment.TAG, bundle, true);\n+        getActivity().finish();\n+    }\n+\n+    @Override\n+    public String getCurrentLocation() {\n+        Location location = Utils.getStructureByName(PreferencesUtil.getInstance().getCurrentStructure());\n+        return location == null ? null : location.getId();\n+    }\n+}"
  },
  {
    "sha": "dc377349e6bb3ea7d08098c129077c43594e6ae8",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/fragment/ChildRegisterFragment.java",
    "status": "added",
    "additions": 413,
    "deletions": 0,
    "changes": 413,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/fragment/ChildRegisterFragment.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/fragment/ChildRegisterFragment.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/fragment/ChildRegisterFragment.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,413 @@\n+package org.smartregister.reveal.fragment;\n+\n+import android.content.Context;\n+import android.content.IntentFilter;\n+import android.os.Bundle;\n+import android.text.Editable;\n+import android.text.TextWatcher;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ProgressBar;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.annotation.VisibleForTesting;\n+import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+\n+import com.vijay.jsonwizard.domain.Form;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.smartregister.AllConstants;\n+import org.smartregister.domain.FetchStatus;\n+import org.smartregister.domain.Location;\n+import org.smartregister.domain.ResponseErrorStatus;\n+import org.smartregister.domain.SyncProgress;\n+import org.smartregister.receiver.SyncProgressBroadcastReceiver;\n+import org.smartregister.receiver.SyncStatusBroadcastReceiver;\n+import org.smartregister.reporting.view.ProgressIndicatorView;\n+import org.smartregister.reveal.R;\n+import org.smartregister.reveal.adapter.ChildRegisterAdapter;\n+import org.smartregister.reveal.adapter.GroupedListableAdapter;\n+import org.smartregister.reveal.application.RevealApplication;\n+import org.smartregister.reveal.contract.BaseDrawerContract;\n+import org.smartregister.reveal.contract.ChildRegisterFragmentContract;\n+import org.smartregister.reveal.contract.FormProcessor;\n+import org.smartregister.reveal.dao.StructureDao;\n+import org.smartregister.reveal.model.Child;\n+import org.smartregister.reveal.model.ChildModel;\n+import org.smartregister.reveal.presenter.ChildRegisterFragmentPresenter;\n+import org.smartregister.reveal.util.Constants;\n+import org.smartregister.reveal.util.PreferencesUtil;\n+import org.smartregister.reveal.view.ChildProfileActivity;\n+import org.smartregister.reveal.view.ChildRegisterActivity;\n+import org.smartregister.reveal.view.DrawerMenuView;\n+import org.smartregister.reveal.viewholder.GroupedListableViewHolder;\n+import org.smartregister.util.Utils;\n+import org.smartregister.view.fragment.BaseListFragment;\n+\n+import java.io.Serializable;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.Callable;\n+\n+import timber.log.Timber;\n+\n+import static org.smartregister.reveal.util.Constants.JsonForm.ENCOUNTER_TYPE;\n+import static org.smartregister.reveal.util.Utils.getSyncEntityString;\n+\n+public class ChildRegisterFragment extends BaseListFragment<Child> implements ChildRegisterFragmentContract.View, BaseDrawerContract.DrawerActivity, SyncStatusBroadcastReceiver.SyncStatusListener,\n+        FormProcessor.Requester, SyncProgressBroadcastReceiver.SyncProgressListener {\n+    public static final String TAG = \"ChildRegisterFragment\";\n+\n+    private BaseDrawerContract.View drawerView;\n+    private TextView tvTitle;\n+    @Nullable\n+    private HashMap<String, List<String>> filterAndSearch;\n+    private TextView searchTextView;\n+    private View progressIndicatorsGroupView;\n+    private View detailedReportCardView;\n+    private SyncProgressBroadcastReceiver syncProgressBroadcastReceiver = new SyncProgressBroadcastReceiver(this);\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+        Bundle bundle = getArguments();\n+        if (bundle != null) {\n+            Serializable serializable = bundle.getSerializable(Constants.ChildFilter.FILTER_PAYLOAD);\n+            if (serializable != null)\n+                filterAndSearch = (HashMap<String, List<String>>) serializable;\n+        }\n+\n+        return super.onCreateView(inflater, container, savedInstanceState);\n+    }\n+\n+    @Override\n+    public void bindLayout() {\n+        super.bindLayout();\n+        drawerView = new DrawerMenuView(this);\n+\n+        drawerView.initializeDrawerLayout();\n+        view.findViewById(R.id.drawerMenu).setOnClickListener(v -> drawerView.openDrawerLayout());\n+\n+        drawerView.onResume();\n+\n+        tvTitle = view.findViewById(R.id.intervention_type);\n+        tvTitle.setText(drawerView.getOperationalArea());\n+\n+        TextView mapText = view.findViewById(R.id.txt_map_label);\n+        mapText.setText(R.string.label_add);\n+        mapText.setOnClickListener(v -> {\n+            if (getCurrentStructure() == null) {\n+                drawerView.openDrawerLayout();\n+            } else {\n+                startChildRegistrationForm();\n+            }\n+        });\n+\n+        progressIndicatorsGroupView = view.findViewById(R.id.progressIndicatorsGroupView);\n+        detailedReportCardView = view.findViewById(R.id.indicators_card_view);\n+\n+        progressIndicatorsGroupView.setOnClickListener(v -> toggleDetailedReport());\n+        detailedReportCardView.findViewById(R.id.btn_collapse_indicators_card_view).setOnClickListener(v -> toggleDetailedReport());\n+\n+        searchTextView = view.findViewById(R.id.edt_search);\n+        searchTextView.setHint(R.string.search_students);\n+        searchTextView.addTextChangedListener(new TextWatcher() {\n+            @Override\n+            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n+                // do nothing\n+            }\n+\n+            @Override\n+            public void onTextChanged(CharSequence s, int start, int before, int count) {\n+                reloadFromSource();\n+            }\n+\n+            @Override\n+            public void afterTextChanged(Editable s) {\n+                // do nothing\n+            }\n+        });\n+\n+        view.findViewById(R.id.filter_text_view).setOnClickListener(v -> openFilterFragment());\n+        if (StringUtils.isBlank(drawerView.getOperationalArea()))\n+            drawerView.openDrawerLayout();\n+    }\n+\n+    @NonNull\n+    @Override\n+    protected Callable<List<Child>> onStartCallable(@Nullable Bundle bundle) {\n+        ChildModel model = presenter.getModel();\n+        return () -> model.searchAndFilter(filterAndSearch, \"\");\n+    }\n+\n+    @Override\n+    protected int getRootLayout() {\n+        return R.layout.fragment_child_register;\n+    }\n+\n+    @Override\n+    protected int getRecyclerViewID() {\n+        return R.id.recycler_view;\n+    }\n+\n+    @Override\n+    protected int getProgressBarID() {\n+        return R.id.client_list_progress;\n+    }\n+\n+    @Override\n+    public void onListItemClicked(Child child, int layoutID) {\n+        if (getCurrentStructure() == null) {\n+            drawerView.openDrawerLayout();\n+            return;\n+        }\n+\n+        if (layoutID == R.id.linearLayoutAction || layoutID == R.id.btnDue) {\n+            startRecordMDAForm(child.getBaseEntityID());\n+        } else {\n+            ChildProfileActivity.startMe(getActivity(), child.getBaseEntityID());\n+        }\n+    }\n+\n+    @Override\n+    public void onFetchError(Exception e) {\n+        Toast.makeText(getContext(), \"An error occurred. \" + e.getMessage(), Toast.LENGTH_SHORT).show();\n+        Timber.e(e);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public GroupedListableAdapter<Child, GroupedListableViewHolder<Child>> adapter() {\n+        return new ChildRegisterAdapter(list, this);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public ChildRegisterFragmentPresenter loadPresenter() {\n+        if (presenter == null) {\n+            presenter = new ChildRegisterFragmentPresenter()\n+                    .with(this)\n+                    .withModel(new ChildModel());\n+        }\n+        return (ChildRegisterFragmentPresenter) presenter;\n+    }\n+\n+    @Override\n+    public void onDrawerClosed() {\n+        // to do -> re render the details\n+        String locationName = drawerView.getOperationalArea();\n+        tvTitle.setText(locationName);\n+        reloadFromSource();\n+    }\n+\n+    @Override\n+    public void openFilterFragment() {\n+        Bundle bundle = new Bundle();\n+        bundle.putSerializable(Constants.ChildFilter.FILTER_PAYLOAD, filterAndSearch);\n+        ChildRegisterActivity.startFragment(getActivity(), ChildFilterFragment.TAG, bundle, false);\n+    }\n+\n+    @Override\n+    public void startChildRegistrationForm() {\n+        loadPresenter().startChildRegistrationForm(getContext());\n+    }\n+\n+    @Override\n+    public void startRecordMDAForm(String baseEntityID) {\n+        loadPresenter().startMDAForm(getContext(), baseEntityID);\n+    }\n+\n+    @Override\n+    public void startJsonForm(JSONObject jsonObject, String formTitle) {\n+        Form form = new Form();\n+        form.setName(formTitle);\n+        form.setActionBarBackground(org.smartregister.family.R.color.family_actionbar);\n+        form.setNavigationBackground(org.smartregister.family.R.color.family_navigation);\n+        form.setHomeAsUpIndicator(org.smartregister.family.R.mipmap.ic_cross_white);\n+        form.setPreviousLabel(getResources().getString(org.smartregister.family.R.string.back));\n+        form.setWizard(false);\n+\n+        getHostFormProcessor().startForm(jsonObject, form, this);\n+    }\n+\n+    @Override\n+    public void reloadFromSource() {\n+        loadPresenter().search(filterAndSearch, searchTextView.getText().toString());\n+        loadPresenter().fetchReportStats();\n+    }\n+\n+    @Override\n+    public void onReportCountReloaded(Map<String, Integer> reportCounts) {\n+        ProgressIndicatorView progressIndicatorView = progressIndicatorsGroupView.findViewById(R.id.progressIndicatorViewTitle);\n+\n+        Integer coverage = reportCounts.get(Constants.ChildRegister.MMA_COVERAGE);\n+        coverage = coverage == null ? 0 : coverage;\n+\n+        progressIndicatorView.setProgress(coverage);\n+        progressIndicatorView.setTitle(getString(R.string.n_percent, coverage));\n+\n+        TextView tvDoseRecordedAndDrugsGiven = detailedReportCardView.findViewById(R.id.tvDoseRecordedAndDrugsGiven);\n+        tvDoseRecordedAndDrugsGiven.setText(getMapValue(reportCounts, Constants.ChildRegister.MMA_VISITED_AND_ADMINISTERED));\n+\n+        TextView tvChildrenNotAdministeredMedicine = detailedReportCardView.findViewById(R.id.tvChildrenNotAdministeredMedicine);\n+        tvChildrenNotAdministeredMedicine.setText(getMapValue(reportCounts, Constants.ChildRegister.MMA_VISITED_NOT_ADMINISTERED));\n+\n+        TextView tvTotalChildrenRemaining = detailedReportCardView.findViewById(R.id.tvTotalChildrenRemaining);\n+        tvTotalChildrenRemaining.setText(getMapValue(reportCounts, Constants.ChildRegister.MMA_NOT_VISITED));\n+\n+        TextView tvChildrenRemainingUntilTarget = detailedReportCardView.findViewById(R.id.tvChildrenRemainingUntilTarget);\n+        tvChildrenRemainingUntilTarget.setText(getMapValue(reportCounts, Constants.ChildRegister.MMA_TARGET_REMAINING));\n+    }\n+\n+    private String getMapValue(Map<String, Integer> reportCounts, String key) {\n+        Integer value = reportCounts.get(key);\n+        return value == null ? \"0\" : Integer.toString(value);\n+    }\n+\n+    @Override\n+    public void toggleDetailedReport() {\n+        detailedReportCardView.setVisibility(detailedReportCardView.getVisibility() == View.VISIBLE ? View.GONE : View.VISIBLE);\n+    }\n+\n+    @Override\n+    public Location getCurrentStructure() {\n+        return org.smartregister.reveal.util.Utils.getStructureByName(PreferencesUtil.getInstance().getCurrentStructure());\n+    }\n+\n+    @Override\n+    public void onResume() {\n+        if (!(getActivity() instanceof FormProcessor.Host))\n+            throw new IllegalStateException(\"Host activity must implement org.smartregister.reveal.contract.FormProcessor.Host\");\n+\n+        SyncStatusBroadcastReceiver.getInstance().addSyncStatusListener(this);\n+        if (drawerView != null) {\n+            drawerView.onResume();\n+\n+            if (StringUtils.isBlank(drawerView.getOperationalArea()))\n+                drawerView.openDrawerLayout();\n+        }\n+\n+        reloadFromSource();\n+        super.onResume();\n+    }\n+\n+    @Override\n+    public void onPause() {\n+        SyncStatusBroadcastReceiver.getInstance().removeSyncStatusListener(this);\n+        super.onPause();\n+    }\n+\n+    @Override\n+    public void onSyncProgress(SyncProgress syncProgress) {\n+        int progress = syncProgress.getPercentageSynced();\n+        String entity = getSyncEntityString(syncProgress.getSyncEntity());\n+        ProgressBar syncProgressBar = getActivity().findViewById(R.id.sync_progress_bar);\n+        TextView syncProgressBarLabel = getActivity().findViewById(R.id.sync_progress_bar_label);\n+        String labelText = String.format(getResources().getString(R.string.progressBarLabel), entity, progress);\n+        syncProgressBar.setProgress(progress);\n+        syncProgressBarLabel.setText(labelText);\n+    }\n+\n+    @Override\n+    public void onSyncStart() {\n+        refreshSyncStatusViews(null);\n+        drawerView.toggleProgressBarView(true);\n+    }\n+\n+    @Override\n+    public void onSyncInProgress(FetchStatus fetchStatus) {\n+        refreshSyncStatusViews(fetchStatus);\n+    }\n+\n+    @Override\n+    public void onSyncComplete(FetchStatus fetchStatus) {\n+        refreshSyncStatusViews(fetchStatus);\n+        //Check sync status and Update UI to show sync status\n+        drawerView.checkSynced();\n+        drawerView.toggleProgressBarView(false);\n+    }\n+\n+    @VisibleForTesting\n+    public void refreshSyncStatusViews(FetchStatus fetchStatus) {\n+        if (SyncStatusBroadcastReceiver.getInstance().isSyncing()) {\n+            Utils.showShortToast(getActivity(), getString(org.smartregister.R.string.syncing));\n+            Timber.i(getString(org.smartregister.R.string.syncing));\n+        } else {\n+            if (fetchStatus != null) {\n+\n+                if (fetchStatus.equals(FetchStatus.fetchedFailed)) {\n+                    if (fetchStatus.displayValue().equals(ResponseErrorStatus.malformed_url.name())) {\n+                        Utils.showShortToast(getActivity(), getString(org.smartregister.R.string.sync_failed_malformed_url));\n+                        Timber.i(getString(org.smartregister.R.string.sync_failed_malformed_url));\n+                    } else if (fetchStatus.displayValue().equals(ResponseErrorStatus.timeout.name())) {\n+                        Utils.showShortToast(getActivity(), getString(org.smartregister.R.string.sync_failed_timeout_error));\n+                        Timber.i(getString(org.smartregister.R.string.sync_failed_timeout_error));\n+                    } else {\n+                        Utils.showShortToast(getActivity(), getString(org.smartregister.R.string.sync_failed));\n+                        Timber.i(getString(org.smartregister.R.string.sync_failed));\n+                    }\n+\n+                } else if (fetchStatus.equals(FetchStatus.fetched)\n+                        || fetchStatus.equals(FetchStatus.nothingFetched)) {\n+\n+                    StructureDao.resetLocationCache();\n+\n+                    reloadFromSource();\n+\n+                    Utils.showShortToast(getActivity(), getString(org.smartregister.R.string.sync_complete));\n+                    Timber.i(getString(org.smartregister.R.string.sync_complete));\n+\n+                } else if (fetchStatus.equals(FetchStatus.noConnection)) {\n+\n+                    Utils.showShortToast(getActivity(), getString(org.smartregister.R.string.sync_failed_no_internet));\n+                    Timber.i(getString(org.smartregister.R.string.sync_failed_no_internet));\n+                }\n+            } else {\n+                Timber.i(\"Fetch Status NULL\");\n+            }\n+\n+        }\n+    }\n+\n+\n+    @Override\n+    public void onFormProcessingResult(String jsonForm) {\n+\n+        try {\n+            JSONObject jsonFormString = new JSONObject(jsonForm);\n+            String title = jsonFormString.getString(ENCOUNTER_TYPE);\n+\n+            if (title.equals(Constants.EventType.CHILD_REGISTRATION)) {\n+                loadPresenter().saveChild(jsonForm, getContext());\n+            } else if (title.equals(Constants.EventType.MDA_DISPENSE)) {\n+                loadPresenter().saveMDAForm(jsonForm, getContext());\n+            }\n+        } catch (JSONException e) {\n+            Timber.e(e);\n+        }\n+    }\n+\n+    @Override\n+    public FormProcessor.Host getHostFormProcessor() {\n+        return (FormProcessor.Host) getActivity();\n+    }\n+\n+    @Override\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+        IntentFilter syncProgressFilter = new IntentFilter(AllConstants.SyncProgressConstants.ACTION_SYNC_PROGRESS);\n+        LocalBroadcastManager.getInstance(RevealApplication.getInstance().getApplicationContext()).registerReceiver(syncProgressBroadcastReceiver, syncProgressFilter);\n+    }\n+\n+    @Override\n+    public void onDetach() {\n+        super.onDetach();\n+        LocalBroadcastManager.getInstance(RevealApplication.getInstance().getApplicationContext()).unregisterReceiver(syncProgressBroadcastReceiver);\n+    }\n+}"
  },
  {
    "sha": "98f64659c69be8e37c7d90c04b5cd0f1053869aa",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/interactor/BaseDrawerInteractor.java",
    "status": "modified",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/interactor/BaseDrawerInteractor.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/interactor/BaseDrawerInteractor.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/interactor/BaseDrawerInteractor.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -136,4 +136,26 @@ public void run() {\n         };\n         appExecutors.diskIO().execute(runnable);\n     }\n+\n+    @Override\n+    public void autoSelectPlan(String jurisdictionName) {\n+        Runnable runnable = () -> {\n+            try{\n+\n+                Location operationalArea = Utils.getOperationalAreaLocation(jurisdictionName);\n+                String jurisdictionIdentifier = operationalArea != null ? operationalArea.getId() : null;\n+                Set<PlanDefinition> planDefinitionSet = planDefinitionSearchRepository.findActivePlansByJurisdiction(jurisdictionIdentifier);\n+\n+                PlanDefinition planDefinition = planDefinitionSet.iterator().next();\n+\n+                appExecutors.mainThread().execute(() -> presenter.onPlanAutoSelected(planDefinition.getName(), planDefinition.getIdentifier()));\n+            }catch (Exception ex){\n+                Timber.e(ex);\n+                appExecutors.mainThread().execute(() -> presenter.onPlanAutoSelected(null, null));\n+            }\n+        };\n+\n+        appExecutors.diskIO().execute(runnable);\n+\n+    }\n }"
  },
  {
    "sha": "c317006e2e3058ac6609ecf81186af3d188b322d",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/interactor/LoginInteractor.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/interactor/LoginInteractor.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/interactor/LoginInteractor.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/interactor/LoginInteractor.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -13,6 +13,8 @@\n \n import java.lang.ref.WeakReference;\n \n+import timber.log.Timber;\n+\n public class LoginInteractor extends BaseLoginInteractor implements BaseLoginContract.Interactor {\n \n     public LoginInteractor(BaseLoginContract.Presenter loginPresenter) {\n@@ -43,6 +45,10 @@ public void loginWithLocalFlag(WeakReference<BaseLoginContract.View> view, boole\n             RevealApplication.getInstance().getContext().getHttpAgent().setConnectTimeout(CoreLibrary.getInstance().getSyncConfiguration().getConnectTimeout());\n             RevealApplication.getInstance().getContext().getHttpAgent().setReadTimeout(CoreLibrary.getInstance().getSyncConfiguration().getReadTimeout());\n         }\n-        super.loginWithLocalFlag(view, localLogin, userName, password);\n+        try {\n+            super.loginWithLocalFlag(view, localLogin, userName, password);\n+        }catch (Exception e){\n+            Timber.e(e);\n+        }\n     }\n }"
  },
  {
    "sha": "ca462fb862d94272260f0c94b05063dd80b78133",
    "filename": "opensrp-reveal/src/main/java/org/smartregister/reveal/model/Child.java",
    "status": "added",
    "additions": 110,
    "deletions": 0,
    "changes": 110,
    "blob_url": "https://github.com/OpenSRP/opensrp-client-reveal/blob/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/model/Child.java",
    "raw_url": "https://github.com/OpenSRP/opensrp-client-reveal/raw/4f8af90958db5678ff2ec6ab68927de9187cd4b0/opensrp-reveal/src/main/java/org/smartregister/reveal/model/Child.java",
    "contents_url": "https://api.github.com/repos/OpenSRP/opensrp-client-reveal/contents/opensrp-reveal/src/main/java/org/smartregister/reveal/model/Child.java?ref=4f8af90958db5678ff2ec6ab68927de9187cd4b0",
    "patch": "@@ -0,0 +1,110 @@\n+package org.smartregister.reveal.model;\n+\n+import androidx.annotation.NonNull;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.joda.time.DateTime;\n+import org.joda.time.Years;\n+import org.smartregister.view.ListContract;\n+\n+import java.util.Date;\n+\n+public class Child implements ListContract.Identifiable {\n+\n+    private String baseEntityID;\n+    private Date birthDate;\n+    private String firstName;\n+    private String lastName;\n+    private String middleName;\n+    private String gender;\n+    private String uniqueID;\n+    private String grade;\n+    private String taskStatus;\n+\n+    public String getBaseEntityID() {\n+        return baseEntityID;\n+    }\n+\n+    public void setBaseEntityID(String baseEntityID) {\n+        this.baseEntityID = baseEntityID;\n+    }\n+\n+    public Date getBirthDate() {\n+        return birthDate;\n+    }\n+\n+    public void setBirthDate(Date birthDate) {\n+        this.birthDate = birthDate;\n+    }\n+\n+    public String getFirstName() {\n+        return firstName;\n+    }\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    public String getLastName() {\n+        return lastName;\n+    }\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    public String getMiddleName() {\n+        return middleName;\n+    }\n+\n+    public void setMiddleName(String middleName) {\n+        this.middleName = middleName;\n+    }\n+\n+    public String getGender() {\n+        return gender;\n+    }\n+\n+    public void setGender(String gender) {\n+        this.gender = gender;\n+    }\n+\n+    public String getUniqueID() {\n+        return uniqueID;\n+    }\n+\n+    public void setUniqueID(String uniqueID) {\n+        this.uniqueID = uniqueID;\n+    }\n+\n+    public String getGrade() {\n+        return grade;\n+    }\n+\n+    public void setGrade(String grade) {\n+        this.grade = grade;\n+    }\n+\n+    public String getFullName() {\n+        return (StringUtils.trim(StringUtils.capitalize(firstName)) + \" \" + StringUtils.trim(StringUtils.capitalize(lastName))).trim();\n+    }\n+\n+    public int getAge() {\n+        DateTime dob = new DateTime(getBirthDate());\n+        return Years.yearsBetween(dob, new DateTime()).getYears();\n+    }\n+\n+    public String getTaskStatus() {\n+        return taskStatus;\n+    }\n+\n+    public void setTaskStatus(String taskStatus) {\n+        this.taskStatus = taskStatus;\n+    }\n+\n+    @NonNull\n+    @Override\n+    public String getID() {\n+        return baseEntityID;\n+    }\n+}"
  }
]
