[
  {
    "sha": "54bf026f511b24ff91c8d19fe4f280be7c3e3b9a",
    "filename": "tools/plugins/com.liferay.ide.project.core/src/com/liferay/ide/project/core/util/ProjectUtil.java",
    "status": "modified",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.project.core/src/com/liferay/ide/project/core/util/ProjectUtil.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.project.core/src/com/liferay/ide/project/core/util/ProjectUtil.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.project.core/src/com/liferay/ide/project/core/util/ProjectUtil.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -25,6 +25,7 @@\n import com.liferay.ide.core.IWorkspaceProject;\n import com.liferay.ide.core.LiferayCore;\n import com.liferay.ide.core.ProductInfo;\n+import com.liferay.ide.core.adapter.NoopLiferayProject;\n import com.liferay.ide.core.util.CoreUtil;\n import com.liferay.ide.core.util.FileUtil;\n import com.liferay.ide.core.util.ListUtil;\n@@ -67,6 +68,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Objects;\n+import java.util.Optional;\n import java.util.Properties;\n import java.util.Set;\n import java.util.regex.Matcher;\n@@ -1532,6 +1534,39 @@ public static boolean isPortletProject(IProject project) {\n \t\treturn hasFacet(project, IPluginFacetConstants.LIFERAY_PORTLET_PROJECT_FACET);\n \t}\n \n+\tpublic static boolean isServiceBuilderProject(IProject project) {\n+\t\tif (project == null) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\tif (!project.isOpen()) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tif (project.hasNature(\"org.eclipse.jdt.core.javanature\") &&\n+\t\t\t\t!LiferayWorkspaceUtil.isValidWorkspace(project) &&\n+\t\t\t\tOptional.ofNullable(\n+\t\t\t\t\tproject).filter(\n+\t\t\t\t\t\tp -> LiferayCore.create(IWorkspaceProject.class, project) == null).map(\n+\t\t\t\t\t\t\tp -> LiferayCore.create(ILiferayProject.class, p)).filter(\n+\t\t\t\t\t\t\t\tObjects::nonNull).filter(\n+\t\t\t\t\t\t\t\t\tp -> !(p instanceof NoopLiferayProject)).isPresent()) {\n+\n+\t\t\t\tSearchFilesVisitor searchFilesVisitor = new SearchFilesVisitor();\n+\n+\t\t\t\tList<IFile> serviceXmls = searchFilesVisitor.searchFiles(project, \"service.xml\");\n+\n+\t\t\t\treturn !serviceXmls.isEmpty();\n+\t\t\t}\n+\n+\t\t\treturn false;\n+\t\t}\n+\t\tcatch (CoreException ce) {\n+\t\t\treturn false;\n+\t\t}\n+\t}\n+\n \tpublic static boolean isThemeProject(IProject project) {\n \t\treturn hasFacet(project, IPluginFacetConstants.LIFERAY_THEME_FACET_ID);\n \t}"
  },
  {
    "sha": "40c672b87634ba54a714d532009336ef28797582",
    "filename": "tools/plugins/com.liferay.ide.upgrade.commands.core/META-INF/MANIFEST.MF",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.commands.core/META-INF/MANIFEST.MF",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.commands.core/META-INF/MANIFEST.MF",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.commands.core/META-INF/MANIFEST.MF?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -31,7 +31,6 @@ Require-Bundle: com.google.guava,\n  org.jdom,\n  org.json\n Service-Component: OSGI-INF/com.liferay.ide.upgrade.commands.core.internal.sdk.PluginsSDKProjectImporter.xml,\n- OSGI-INF/com.liferay.ide.upgrade.commands.core.internal.buildservice.RemoveLegacyFilesCommand.xml,\n  OSGI-INF/com.liferay.ide.upgrade.commands.core.internal.prerequisite.CheckInstalledJDKsCommand.xml,\n  OSGI-INF/com.liferay.ide.upgrade.commands.core.internal.sdk.ImportExistingPluginsSDKCommand.xml,\n  OSGI-INF/com.liferay.ide.upgrade.commands.core.internal.code.InitializeServerBundleCommand.xml,"
  },
  {
    "sha": "2b0fd7caccfb913ea25c69a7fcdfd1ec46c64f4c",
    "filename": "tools/plugins/com.liferay.ide.upgrade.commands.core/OSGI-INF/com.liferay.ide.upgrade.commands.core.internal.buildservice.RemoveLegacyFilesCommand.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 10,
    "changes": 10,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/fe291eff6e72933d52cdfd01f6fdb9916236ed47/tools/plugins/com.liferay.ide.upgrade.commands.core/OSGI-INF/com.liferay.ide.upgrade.commands.core.internal.buildservice.RemoveLegacyFilesCommand.xml",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/fe291eff6e72933d52cdfd01f6fdb9916236ed47/tools/plugins/com.liferay.ide.upgrade.commands.core/OSGI-INF/com.liferay.ide.upgrade.commands.core.internal.buildservice.RemoveLegacyFilesCommand.xml",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.commands.core/OSGI-INF/com.liferay.ide.upgrade.commands.core.internal.buildservice.RemoveLegacyFilesCommand.xml?ref=fe291eff6e72933d52cdfd01f6fdb9916236ed47",
    "patch": "@@ -1,10 +0,0 @@\n-<?xml version=\"1.0\"?>\n-<scr:component xmlns:scr=\"http://www.osgi.org/xmlns/scr/v1.3.0\" name=\"com.liferay.ide.upgrade.commands.core.internal.buildservice.RemoveLegacyFilesCommand\">\n-   <property name=\"id\" value=\"remove_legacy_files\"/>\n-   <service scope=\"prototype\">\n-      <provide interface=\"com.liferay.ide.upgrade.plan.core.UpgradeCommand\"/>\n-   </service>\n-   <reference cardinality=\"1..1\" field=\"_resourceSelection\" interface=\"com.liferay.ide.upgrade.plan.core.ResourceSelection\" name=\"_resourceSelection\"/>\n-   <reference cardinality=\"1..1\" field=\"_upgradePlanner\" interface=\"com.liferay.ide.upgrade.plan.core.UpgradePlanner\" name=\"_upgradePlanner\"/>\n-   <implementation class=\"com.liferay.ide.upgrade.commands.core.internal.buildservice.RemoveLegacyFilesCommand\"/>\n-</scr:component>\n\\ No newline at end of file"
  },
  {
    "sha": "934bec2ebf4bdcd72341172a3c7be4033e1ca4eb",
    "filename": "tools/plugins/com.liferay.ide.upgrade.commands.core/src/com/liferay/ide/upgrade/commands/core/internal/buildservice/RemoveLegacyFilesCommand.java",
    "status": "removed",
    "additions": 0,
    "deletions": 100,
    "changes": 100,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/fe291eff6e72933d52cdfd01f6fdb9916236ed47/tools/plugins/com.liferay.ide.upgrade.commands.core/src/com/liferay/ide/upgrade/commands/core/internal/buildservice/RemoveLegacyFilesCommand.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/fe291eff6e72933d52cdfd01f6fdb9916236ed47/tools/plugins/com.liferay.ide.upgrade.commands.core/src/com/liferay/ide/upgrade/commands/core/internal/buildservice/RemoveLegacyFilesCommand.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.commands.core/src/com/liferay/ide/upgrade/commands/core/internal/buildservice/RemoveLegacyFilesCommand.java?ref=fe291eff6e72933d52cdfd01f6fdb9916236ed47",
    "patch": "@@ -1,100 +0,0 @@\n-/**\n- * Copyright (c) 2000-present Liferay, Inc. All rights reserved.\n- *\n- * This library is free software; you can redistribute it and/or modify it under\n- * the terms of the GNU Lesser General Public License as published by the Free\n- * Software Foundation; either version 2.1 of the License, or (at your option)\n- * any later version.\n- *\n- * This library is distributed in the hope that it will be useful, but WITHOUT\n- * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n- * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n- * details.\n- */\n-\n-package com.liferay.ide.upgrade.commands.core.internal.buildservice;\n-\n-import com.liferay.ide.upgrade.commands.core.UpgradeCommandsCorePlugin;\n-import com.liferay.ide.upgrade.commands.core.buildservice.RemoveLegacyFilesCommandKeys;\n-import com.liferay.ide.upgrade.plan.core.ResourceSelection;\n-import com.liferay.ide.upgrade.plan.core.UpgradeCommand;\n-import com.liferay.ide.upgrade.plan.core.UpgradeCommandPerformedEvent;\n-import com.liferay.ide.upgrade.plan.core.UpgradePlanner;\n-\n-import java.util.List;\n-\n-import org.eclipse.core.resources.IFile;\n-import org.eclipse.core.resources.IFolder;\n-import org.eclipse.core.resources.IProject;\n-import org.eclipse.core.runtime.CoreException;\n-import org.eclipse.core.runtime.IProgressMonitor;\n-import org.eclipse.core.runtime.IStatus;\n-import org.eclipse.core.runtime.Status;\n-\n-import org.osgi.service.component.annotations.Component;\n-import org.osgi.service.component.annotations.Reference;\n-import org.osgi.service.component.annotations.ServiceScope;\n-\n-/**\n- * @author Simon Jiang\n- * @author Terry Jia\n- */\n-@Component(\n-\tproperty = \"id=\" + RemoveLegacyFilesCommandKeys.ID, scope = ServiceScope.PROTOTYPE, service = UpgradeCommand.class\n-)\n-public class RemoveLegacyFilesCommand implements UpgradeCommand {\n-\n-\t@Override\n-\tpublic IStatus perform(IProgressMonitor progressMonitor) {\n-\t\tList<IProject> projects = _resourceSelection.selectProjects(\n-\t\t\t\"Select Liferay Service Builder Projects\", false, ResourceSelection.SERVICE_BUILDER_PROJECTS);\n-\n-\t\tif (projects.isEmpty()) {\n-\t\t\treturn Status.CANCEL_STATUS;\n-\t\t}\n-\n-\t\tfor (IProject project : projects) {\n-\t\t\ttry {\n-\t\t\t\tString relativePath = \"/docroot/WEB-INF/src/META-INF\";\n-\n-\t\t\t\tIFile portletSpringXML = project.getFile(relativePath + \"/portlet-spring.xml\");\n-\n-\t\t\t\tif (portletSpringXML.exists()) {\n-\t\t\t\t\tportletSpringXML.delete(true, progressMonitor);\n-\t\t\t\t}\n-\n-\t\t\t\tIFile shardDataSourceSpringXML = project.getFile(relativePath + \"/shard-data-source-spring.xml\");\n-\n-\t\t\t\tif (shardDataSourceSpringXML.exists()) {\n-\t\t\t\t\tshardDataSourceSpringXML.delete(true, progressMonitor);\n-\t\t\t\t}\n-\n-\t\t\t\t// for 6.2 maven project\n-\n-\t\t\t\tIFolder metaInfFolder = project.getFolder(\"/src/main/resources/META-INF/\");\n-\n-\t\t\t\tif (metaInfFolder.exists()) {\n-\t\t\t\t\tmetaInfFolder.delete(true, progressMonitor);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\tcatch (CoreException ce) {\n-\t\t\t\tIStatus error = UpgradeCommandsCorePlugin.createErrorStatus(\"Unable to delete legacy files.\", ce);\n-\n-\t\t\t\tUpgradeCommandsCorePlugin.log(error);\n-\n-\t\t\t\treturn error;\n-\t\t\t}\n-\t\t}\n-\n-\t\t_upgradePlanner.dispatch(new UpgradeCommandPerformedEvent(this, projects));\n-\n-\t\treturn Status.OK_STATUS;\n-\t}\n-\n-\t@Reference\n-\tprivate ResourceSelection _resourceSelection;\n-\n-\t@Reference\n-\tprivate UpgradePlanner _upgradePlanner;\n-\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "4d26da3fcc9d935e37879cdad0fcf2e8cc2b555a",
    "filename": "tools/plugins/com.liferay.ide.upgrade.plan.core/src/com/liferay/ide/upgrade/plan/core/UpgradeProblemSupport.java",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.plan.core/src/com/liferay/ide/upgrade/plan/core/UpgradeProblemSupport.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.plan.core/src/com/liferay/ide/upgrade/plan/core/UpgradeProblemSupport.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.plan.core/src/com/liferay/ide/upgrade/plan/core/UpgradeProblemSupport.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -77,6 +77,10 @@ public default void addMarkers(Collection<UpgradeProblem> upgradeProblems) {\n \t\t);\n \t}\n \n+\tpublic default void clearUpgradeProblems(Collection<UpgradeProblem> upgradeProblems) {\n+\t\tupgradeProblems.removeIf(problem -> !Objects.equals(problem.getType(), \"legacy\"));\n+\t}\n+\n \tpublic default void deleteMarker(IMarker marker) {\n \t\ttry {\n \t\t\tmarker.delete();\n@@ -195,7 +199,9 @@ public default void refreshProjects(Collection<UpgradeProblem> upgradeProblems,\n \tpublic default void removeMarkers(Collection<UpgradeProblem> upgradeProblems) {\n \t\tStream<UpgradeProblem> upgradeProblemsStream = upgradeProblems.stream();\n \n-\t\tupgradeProblemsStream.map(\n+\t\tupgradeProblemsStream.filter(\n+\t\t\tproblem -> !Objects.equals(problem.getType(), \"legacy\")\n+\t\t).map(\n \t\t\tthis::findMarker\n \t\t).filter(\n \t\t\tthis::markerExists"
  },
  {
    "sha": "82761cc2a33dbe626582ae97b52e149afacc57b9",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/META-INF/MANIFEST.MF",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/META-INF/MANIFEST.MF",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/META-INF/MANIFEST.MF",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/META-INF/MANIFEST.MF?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -14,6 +14,7 @@ Export-Package: com.liferay.ide.upgrade.problems.core,\n Require-Bundle: com.google.guava,\n  com.liferay.ide.core,\n  com.liferay.ide.gradle.core,\n+ com.liferay.ide.project.core,\n  com.liferay.ide.upgrade.plan.core,\n  org.apache.commons.io,\n  org.eclipse.core.resources,\n@@ -202,4 +203,7 @@ Service-Component: OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.SSEXM\n  OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.liferay74.RemovePortalFlashSupport.xml,\n  OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.liferay74.RemoveFlashJSPTags.xml,\n  OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.liferay74.RefactorClamdIntegrationAntivirusScanner.xml,\n+ OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.LegacyFileMigrationService.xml,\n+ OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.commands.RemoveServiceBuilderLegacyFileCommand.xml,\n+ OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.liferay70.ServiceBuilderLegacyFileMigrator.xml,\n  OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.commands.SwitchToUseReleaseAPIDependencyCommand.xml"
  },
  {
    "sha": "bae82bb300d7abaddac1686311ef2b652d4e22a9",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.LegacyFileMigrationService.xml",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.LegacyFileMigrationService.xml",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.LegacyFileMigrationService.xml",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.LegacyFileMigrationService.xml?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\"?>\n+<scr:component xmlns:scr=\"http://www.osgi.org/xmlns/scr/v1.1.0\" activate=\"activate\" name=\"com.liferay.ide.upgrade.problems.core.internal.LegacyFileMigrationService\">\n+   <service>\n+      <provide interface=\"com.liferay.ide.upgrade.problems.core.LegacyFileMigration\"/>\n+   </service>\n+   <implementation class=\"com.liferay.ide.upgrade.problems.core.internal.LegacyFileMigrationService\"/>\n+</scr:component>\n\\ No newline at end of file"
  },
  {
    "sha": "74d02bce3a9d76db15898989e53c647e8d791e99",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.commands.RemoveServiceBuilderLegacyFileCommand.xml",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.commands.RemoveServiceBuilderLegacyFileCommand.xml",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.commands.RemoveServiceBuilderLegacyFileCommand.xml",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.commands.RemoveServiceBuilderLegacyFileCommand.xml?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\"?>\n+<scr:component xmlns:scr=\"http://www.osgi.org/xmlns/scr/v1.3.0\" name=\"com.liferay.ide.upgrade.problems.core.internal.commands.RemoveServiceBuilderLegacyFileCommand\">\n+   <property name=\"id\" value=\"remove_legacy_files\"/>\n+   <service scope=\"prototype\">\n+      <provide interface=\"com.liferay.ide.upgrade.plan.core.UpgradeCommand\"/>\n+      <provide interface=\"com.liferay.ide.upgrade.plan.core.UpgradePreview\"/>\n+   </service>\n+   <reference cardinality=\"1..1\" field=\"_legacyFileMigration\" interface=\"com.liferay.ide.upgrade.problems.core.LegacyFileMigration\" name=\"_legacyFileMigration\"/>\n+   <reference cardinality=\"1..1\" field=\"_messagePrompt\" interface=\"com.liferay.ide.upgrade.plan.core.MessagePrompt\" name=\"_messagePrompt\"/>\n+   <reference cardinality=\"1..1\" field=\"_resourceSelection\" interface=\"com.liferay.ide.upgrade.plan.core.ResourceSelection\" name=\"_resourceSelection\"/>\n+   <reference cardinality=\"1..1\" field=\"_upgradePlanner\" interface=\"com.liferay.ide.upgrade.plan.core.UpgradePlanner\" name=\"_upgradePlanner\"/>\n+   <implementation class=\"com.liferay.ide.upgrade.problems.core.internal.commands.RemoveServiceBuilderLegacyFileCommand\"/>\n+</scr:component>\n\\ No newline at end of file"
  },
  {
    "sha": "6f3919538b1c3c309f45820d836ab7032301fd91",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.liferay70.ServiceBuilderLegacyFileMigrator.xml",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.liferay70.ServiceBuilderLegacyFileMigrator.xml",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.liferay70.ServiceBuilderLegacyFileMigrator.xml",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/OSGI-INF/com.liferay.ide.upgrade.problems.core.internal.liferay70.ServiceBuilderLegacyFileMigrator.xml?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\"?>\n+<scr:component xmlns:scr=\"http://www.osgi.org/xmlns/scr/v1.1.0\" name=\"com.liferay.ide.upgrade.problems.core.internal.liferay70.ServiceBuilderLegacyFileMigrator\">\n+   <property name=\"file.extensions\" value=\"none\"/>\n+   <property name=\"problem.type\" value=\"legacy\"/>\n+   <property name=\"problem.title\" value=\"Legacy File should be removed\"/>\n+   <property name=\"problem.summary\" value=\"Remove Legacy File\"/>\n+   <property name=\"version\" value=\"7.0\"/>\n+   <property name=\"auto.correct\" value=\"delete-legacy-file\"/>\n+   <service>\n+      <provide interface=\"com.liferay.ide.upgrade.problems.core.AutoFileMigrator\"/>\n+      <provide interface=\"com.liferay.ide.upgrade.problems.core.FileMigrator\"/>\n+   </service>\n+   <implementation class=\"com.liferay.ide.upgrade.problems.core.internal.liferay70.ServiceBuilderLegacyFileMigrator\"/>\n+</scr:component>\n\\ No newline at end of file"
  },
  {
    "sha": "1a69cc4a96f4427794b3875ecb458ae21ece951c",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/LegacyFileMigration.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/LegacyFileMigration.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/LegacyFileMigration.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/LegacyFileMigration.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -0,0 +1,46 @@\n+/**\n+ * Copyright (c) 2000-present Liferay, Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or modify it under\n+ * the terms of the GNU Lesser General Public License as published by the Free\n+ * Software Foundation; either version 2.1 of the License, or (at your option)\n+ * any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+ * details.\n+ */\n+\n+package com.liferay.ide.upgrade.problems.core;\n+\n+import com.liferay.ide.upgrade.plan.core.UpgradeProblem;\n+\n+import java.io.File;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.eclipse.core.runtime.IProgressMonitor;\n+\n+/**\n+ * @author Seiphon Wang\n+ */\n+public interface LegacyFileMigration {\n+\n+\tpublic default List<UpgradeProblem> findUpgradeProblems(\n+\t\tFile dir, List<String> versions, IProgressMonitor progressMonitor) {\n+\n+\t\treturn findUpgradeProblems(dir, versions, null, progressMonitor);\n+\t}\n+\n+\tpublic List<UpgradeProblem> findUpgradeProblems(\n+\t\tFile dir, List<String> versions, Set<String> requiredProperties, IProgressMonitor monitor);\n+\n+\tpublic int DETAIL_LONG = 1 << 2;\n+\n+\tpublic int DETAIL_SHORT = 1 << 1;\n+\n+\tpublic String HELPER_PROJECT_NAME = \"__upgrade_helper__\";\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "fdd373dd995e99b98bfe5a35fa8b28ffb5092a9b",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/commands/RemoveServiceBuilderLegacyFileCommandKeys.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/commands/RemoveServiceBuilderLegacyFileCommandKeys.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/commands/RemoveServiceBuilderLegacyFileCommandKeys.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/commands/RemoveServiceBuilderLegacyFileCommandKeys.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -12,12 +12,12 @@\n  * details.\n  */\n \n-package com.liferay.ide.upgrade.commands.core.buildservice;\n+package com.liferay.ide.upgrade.problems.core.commands;\n \n /**\n- * @author Gregory Amerson\n+ * @author Simon Jiang\n  */\n-public class RemoveLegacyFilesCommandKeys {\n+public class RemoveServiceBuilderLegacyFileCommandKeys {\n \n \tpublic static final String ID = \"remove_legacy_files\";\n ",
    "previous_filename": "tools/plugins/com.liferay.ide.upgrade.commands.core/src/com/liferay/ide/upgrade/commands/core/buildservice/RemoveLegacyFilesCommandKeys.java"
  },
  {
    "sha": "2732fdcc5b3fffb15a28329b07ba9ef3be69b299",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/LegacyFileMigrationService.java",
    "status": "added",
    "additions": 189,
    "deletions": 0,
    "changes": 189,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/LegacyFileMigrationService.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/LegacyFileMigrationService.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/LegacyFileMigrationService.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -0,0 +1,189 @@\n+/**\n+ * Copyright (c) 2000-present Liferay, Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or modify it under\n+ * the terms of the GNU Lesser General Public License as published by the Free\n+ * Software Foundation; either version 2.1 of the License, or (at your option)\n+ * any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+ * details.\n+ */\n+\n+package com.liferay.ide.upgrade.problems.core.internal;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+import com.liferay.ide.core.util.CoreUtil;\n+import com.liferay.ide.core.util.ListUtil;\n+import com.liferay.ide.upgrade.plan.core.UpgradeProblem;\n+import com.liferay.ide.upgrade.problems.core.FileMigrator;\n+import com.liferay.ide.upgrade.problems.core.LegacyFileMigration;\n+\n+import java.io.File;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Dictionary;\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.concurrent.CopyOnWriteArraySet;\n+import java.util.function.BiConsumer;\n+import java.util.function.BinaryOperator;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n+import java.util.stream.Collector;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.eclipse.core.runtime.IProgressMonitor;\n+\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.component.annotations.Activate;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.util.tracker.ServiceTracker;\n+\n+/**\n+ * @author Seiphon Wang\n+ */\n+@Component\n+public class LegacyFileMigrationService implements LegacyFileMigration {\n+\n+\t@Activate\n+\tpublic void activate(BundleContext context) {\n+\t\t_context = context;\n+\n+\t\t_fileMigratorTracker = new ServiceTracker<>(context, FileMigrator.class, null);\n+\n+\t\t_fileMigratorTracker.open();\n+\t}\n+\n+\t@Override\n+\tpublic List<UpgradeProblem> findUpgradeProblems(\n+\t\tFile dir, List<String> versions, Set<String> requiredProperties, IProgressMonitor monitor) {\n+\n+\t\tmonitor.beginTask(\"Searching for migration problems in \" + dir, -1);\n+\n+\t\tList<UpgradeProblem> upgradeProblems = Collections.synchronizedList(new ArrayList<UpgradeProblem>());\n+\n+\t\tmonitor.beginTask(\"Analyzing files\", -1);\n+\n+\t\t_findLegacyFiles(dir, upgradeProblems, versions, requiredProperties, monitor);\n+\n+\t\tmonitor.done();\n+\n+\t\treturn upgradeProblems;\n+\t}\n+\n+\tprivate void _findLegacyFiles(\n+\t\tFile startDir, List<UpgradeProblem> upgradeProblems, List<String> versions, Set<String> requiredProperties,\n+\t\tIProgressMonitor monitor) {\n+\n+\t\tServiceReference<FileMigrator>[] fileMigratorsServiceReferences = _fileMigratorTracker.getServiceReferences();\n+\n+\t\tmonitor.setTaskName(\"Analyzing legacy file from \" + startDir);\n+\n+\t\tif (ListUtil.isNotEmpty(fileMigratorsServiceReferences)) {\n+\t\t\tList<ServiceReference<FileMigrator>> fileMigrators = Stream.of(\n+\t\t\t\tfileMigratorsServiceReferences\n+\t\t\t).filter(\n+\t\t\t\tserviceReference -> {\n+\t\t\t\t\tString version = (String)serviceReference.getProperty(\"version\");\n+\n+\t\t\t\t\treturn versions.contains(version);\n+\t\t\t\t}\n+\t\t\t).filter(\n+\t\t\t\tserviceReference -> {\n+\t\t\t\t\tString problemType = (String)serviceReference.getProperty(\"problem.type\");\n+\n+\t\t\t\t\treturn CoreUtil.isNotNullOrEmpty(problemType) && Objects.equals(problemType, \"legacy\");\n+\t\t\t\t}\n+\t\t\t).filter(\n+\t\t\t\tserviceReference -> {\n+\t\t\t\t\tif (requiredProperties == null) {\n+\t\t\t\t\t\treturn true;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tDictionary<String, Object> properties = serviceReference.getProperties();\n+\n+\t\t\t\t\tfor (String key : requiredProperties) {\n+\t\t\t\t\t\tObject value = properties.get(key);\n+\n+\t\t\t\t\t\tif (value == null) {\n+\t\t\t\t\t\t\treturn false;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t).collect(\n+\t\t\t\tCollectors.toList()\n+\t\t\t);\n+\n+\t\t\tif (ListUtil.isNotEmpty(fileMigrators)) {\n+\t\t\t\ttry {\n+\t\t\t\t\tStream<ServiceReference<FileMigrator>> migratorStream = fileMigrators.parallelStream();\n+\n+\t\t\t\t\tupgradeProblems.addAll(\n+\t\t\t\t\t\tmigratorStream.map(\n+\t\t\t\t\t\t\t_context::getService\n+\t\t\t\t\t\t).unordered(\n+\t\t\t\t\t\t).collect(\n+\t\t\t\t\t\t\tnew ProblemsCollector(startDir)\n+\t\t\t\t\t\t));\n+\t\t\t\t}\n+\t\t\t\tcatch (Exception e) {\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate BundleContext _context;\n+\tprivate ServiceTracker<FileMigrator, FileMigrator> _fileMigratorTracker;\n+\n+\tprivate class ProblemsCollector implements Collector<FileMigrator, Set<UpgradeProblem>, Set<UpgradeProblem>> {\n+\n+\t\tpublic ProblemsCollector(File file) {\n+\t\t\t_file = file;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic BiConsumer<Set<UpgradeProblem>, FileMigrator> accumulator() {\n+\t\t\treturn (container, migrator) -> container.addAll(migrator.analyze(_file));\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic Set<Characteristics> characteristics() {\n+\t\t\treturn ImmutableSet.of(\n+\t\t\t\tCollector.Characteristics.CONCURRENT, Collector.Characteristics.UNORDERED,\n+\t\t\t\tCollector.Characteristics.IDENTITY_FINISH);\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic BinaryOperator<Set<UpgradeProblem>> combiner() {\n+\t\t\treturn (left, right) -> {\n+\t\t\t\tleft.addAll(right);\n+\n+\t\t\t\treturn left;\n+\t\t\t};\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic Function<Set<UpgradeProblem>, Set<UpgradeProblem>> finisher() {\n+\t\t\treturn Function.identity();\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic Supplier<Set<UpgradeProblem>> supplier() {\n+\t\t\treturn CopyOnWriteArraySet<UpgradeProblem>::new;\n+\t\t}\n+\n+\t\tprivate File _file;\n+\n+\t}\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "006c6407b64cb742e0a9ee5a5a13b2d0cd4ff407",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/LegacyFilesMigrator.java",
    "status": "added",
    "additions": 175,
    "deletions": 0,
    "changes": 175,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/LegacyFilesMigrator.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/LegacyFilesMigrator.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/LegacyFilesMigrator.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -0,0 +1,175 @@\n+/**\n+ * Copyright (c) 2000-present Liferay, Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or modify it under\n+ * the terms of the GNU Lesser General Public License as published by the Free\n+ * Software Foundation; either version 2.1 of the License, or (at your option)\n+ * any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+ * details.\n+ */\n+\n+package com.liferay.ide.upgrade.problems.core.internal;\n+\n+import com.liferay.ide.upgrade.plan.core.UpgradeProblem;\n+import com.liferay.ide.upgrade.problems.core.FileMigrator;\n+import com.liferay.ide.upgrade.problems.core.FileSearchResult;\n+\n+import java.io.File;\n+import java.io.FileReader;\n+import java.io.LineNumberReader;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Dictionary;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.osgi.framework.Version;\n+import org.osgi.service.component.ComponentContext;\n+import org.osgi.service.component.annotations.Activate;\n+\n+/**\n+ * @author Seiphon Wang\n+ */\n+public abstract class LegacyFilesMigrator implements FileMigrator {\n+\n+\t@Activate\n+\tpublic void activate(ComponentContext ctx) {\n+\t\tcontext = ctx;\n+\n+\t\tDictionary<String, Object> properties = context.getProperties();\n+\n+\t\tproblemType = safeGet(properties, \"problem.type\");\n+\t\tproblemTitle = safeGet(properties, \"problem.title\");\n+\t\tproblemSummary = safeGet(properties, \"problem.summary\");\n+\t\tfileExtension = safeGet(properties, \"file.extensions\");\n+\t\tproblemTickets = safeGet(properties, \"problem.tickets\");\n+\t\tsectionKey = safeGet(properties, \"problem.section\");\n+\n+\t\tString versionValue = safeGet(properties, \"version\");\n+\n+\t\tif (versionValue.isEmpty()) {\n+\t\t\tversion = versionValue;\n+\t\t}\n+\t\telse {\n+\t\t\tVersion v = new Version(versionValue);\n+\n+\t\t\tversion = v.getMajor() + \".\" + v.getMinor();\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic List<UpgradeProblem> analyze(File file) {\n+\t\tList<UpgradeProblem> problems = new ArrayList<>();\n+\n+\t\tList<FileSearchResult> results = searchFile(file);\n+\n+\t\tif ((results != null) && !results.isEmpty()) {\n+\t\t\tfor (FileSearchResult searchResult : results) {\n+\t\t\t\tproblems.add(\n+\t\t\t\t\tnew UpgradeProblem(\n+\t\t\t\t\t\tproblemTitle, problemSummary, problemType, problemTickets, version, searchResult.file,\n+\t\t\t\t\t\tsearchResult.startLine, searchResult.startOffset, searchResult.endOffset, \"\",\n+\t\t\t\t\t\t\"delete-legacy-file\", UpgradeProblem.STATUS_NOT_RESOLVED, UpgradeProblem.DEFAULT_MARKER_ID,\n+\t\t\t\t\t\tUpgradeProblem.MARKER_ERROR));\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn problems;\n+\t}\n+\n+\tpublic List<FileSearchResult> findLegacyFiles(List<File> legacyFiles) {\n+\t\tList<FileSearchResult> fileSearchResult = new ArrayList<>();\n+\n+\t\tif (!legacyFiles.isEmpty()) {\n+\t\t\tStream<File> legacyFilesStream = legacyFiles.stream();\n+\n+\t\t\tfileSearchResult.addAll(\n+\t\t\t\tlegacyFilesStream.filter(\n+\t\t\t\t\tfile -> file.isFile()\n+\t\t\t\t).map(\n+\t\t\t\t\tthis::_getFileSearchResult\n+\t\t\t\t).collect(\n+\t\t\t\t\tCollectors.toList()\n+\t\t\t\t));\n+\n+\t\t\tlegacyFilesStream = legacyFiles.stream();\n+\n+\t\t\tfileSearchResult.addAll(\n+\t\t\t\tlegacyFilesStream.filter(\n+\t\t\t\t\tfile -> file.isDirectory()\n+\t\t\t\t).map(\n+\t\t\t\t\tdir -> _getAllFiles(dir)\n+\t\t\t\t).flatMap(\n+\t\t\t\t\tfiles -> files.stream()\n+\t\t\t\t).map(\n+\t\t\t\t\tthis::_getFileSearchResult\n+\t\t\t\t).collect(\n+\t\t\t\t\tCollectors.toList()\n+\t\t\t\t));\n+\t\t}\n+\n+\t\treturn fileSearchResult;\n+\t}\n+\n+\t@Override\n+\tpublic int reportProblems(File file, Collection<UpgradeProblem> upgradeProblems) {\n+\t\treturn 0;\n+\t}\n+\n+\tprotected abstract List<FileSearchResult> searchFile(File file);\n+\n+\tprotected final List<String> artifactIds = new ArrayList<>();\n+\tprotected ComponentContext context;\n+\tprotected String fileExtension;\n+\tprotected String problemSummary;\n+\tprotected String problemTickets;\n+\tprotected String problemTitle;\n+\tprotected String problemType;\n+\tprotected String sectionKey = \"\";\n+\tprotected String version = \"\";\n+\n+\tprivate List<File> _getAllFiles(File folder) {\n+\t\tList<File> fileList = new ArrayList<>();\n+\n+\t\tFile[] members = folder.listFiles();\n+\n+\t\tfor (File member : members) {\n+\t\t\tif (member.isFile()) {\n+\t\t\t\tfileList.add(member);\n+\t\t\t}\n+\t\t\telse if (member.isDirectory()) {\n+\t\t\t\tfileList.addAll(_getAllFiles(member));\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn fileList;\n+\t}\n+\n+\tprivate FileSearchResult _getFileSearchResult(File legacyFile) {\n+\t\tint startOffset = 0;\n+\t\tint endOffset = (int)legacyFile.length();\n+\n+\t\tint startLine = 1;\n+\n+\t\tint endLine = startLine;\n+\n+\t\ttry (FileReader fileReader = new FileReader(legacyFile);\n+\t\t\tLineNumberReader lineNumberReader = new LineNumberReader(fileReader)) {\n+\n+\t\t\tlineNumberReader.skip(Long.MAX_VALUE);\n+\n+\t\t\tendLine = lineNumberReader.getLineNumber() + 1;\n+\t\t}\n+\t\tcatch (Exception e) {\n+\t\t}\n+\n+\t\treturn new FileSearchResult(legacyFile, startOffset, endOffset, startLine, endLine, true);\n+\t}\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a7cd784c824d2afaad48a3e6d6b98f9cb6d33de0",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/AutoCorrectFindUpgradeProblemsCommand.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/AutoCorrectFindUpgradeProblemsCommand.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/AutoCorrectFindUpgradeProblemsCommand.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/AutoCorrectFindUpgradeProblemsCommand.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -178,7 +178,7 @@ private void _autoCorrectProblem(UpgradeProblem upgradeProblem) {\n \n \t\t\tremoveMarkers(upgradeProblems);\n \n-\t\t\tupgradeProblems.clear();\n+\t\t\tclearUpgradeProblems(upgradeProblems);\n \t\t}\n \n \t\tList<IProject> projects = _resourceSelection.selectProjects("
  },
  {
    "sha": "cee82dffcf1d988bf18ba7010d93370bfe92ca28",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/FindUpgradeProblemsCommand.java",
    "status": "modified",
    "additions": 2,
    "deletions": 10,
    "changes": 12,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/FindUpgradeProblemsCommand.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/FindUpgradeProblemsCommand.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/FindUpgradeProblemsCommand.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -65,17 +65,9 @@ public IStatus perform(IProgressMonitor progressMonitor) {\n \n \t\tCollection<UpgradeProblem> upgradeProblems = upgradePlan.getUpgradeProblems();\n \n-\t\tStream<UpgradeProblem> upgradeProblemsStream = upgradeProblems.stream();\n+\t\tremoveMarkers(upgradeProblems);\n \n-\t\tupgradeProblemsStream.map(\n-\t\t\tthis::findMarker\n-\t\t).filter(\n-\t\t\tthis::markerExists\n-\t\t).forEach(\n-\t\t\tthis::deleteMarker\n-\t\t);\n-\n-\t\tupgradeProblems.clear();\n+\t\tclearUpgradeProblems(upgradeProblems);\n \n \t\tCollection<UpgradeProblem> ignoredProblems = upgradePlan.getIgnoredProblems();\n "
  },
  {
    "sha": "c656669222eb7f96323004c56a441b706b2df22d",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/RemoveServiceBuilderLegacyFileCommand.java",
    "status": "added",
    "additions": 267,
    "deletions": 0,
    "changes": 267,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/RemoveServiceBuilderLegacyFileCommand.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/RemoveServiceBuilderLegacyFileCommand.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/RemoveServiceBuilderLegacyFileCommand.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -0,0 +1,267 @@\n+/**\n+ * Copyright (c) 2000-present Liferay, Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or modify it under\n+ * the terms of the GNU Lesser General Public License as published by the Free\n+ * Software Foundation; either version 2.1 of the License, or (at your option)\n+ * any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+ * details.\n+ */\n+\n+package com.liferay.ide.upgrade.problems.core.internal.commands;\n+\n+import com.google.common.base.Objects;\n+\n+import com.liferay.ide.core.util.FileUtil;\n+import com.liferay.ide.core.util.ListUtil;\n+import com.liferay.ide.project.core.util.ProjectUtil;\n+import com.liferay.ide.upgrade.plan.core.MessagePrompt;\n+import com.liferay.ide.upgrade.plan.core.ResourceSelection;\n+import com.liferay.ide.upgrade.plan.core.UpgradeCommand;\n+import com.liferay.ide.upgrade.plan.core.UpgradeCommandPerformedEvent;\n+import com.liferay.ide.upgrade.plan.core.UpgradePlan;\n+import com.liferay.ide.upgrade.plan.core.UpgradePlanner;\n+import com.liferay.ide.upgrade.plan.core.UpgradePreview;\n+import com.liferay.ide.upgrade.plan.core.UpgradeProblem;\n+import com.liferay.ide.upgrade.plan.core.UpgradeProblemSupport;\n+import com.liferay.ide.upgrade.problems.core.AutoFileMigrator;\n+import com.liferay.ide.upgrade.problems.core.AutoFileMigratorException;\n+import com.liferay.ide.upgrade.problems.core.LegacyFileMigration;\n+import com.liferay.ide.upgrade.problems.core.commands.RemoveServiceBuilderLegacyFileCommandKeys;\n+import com.liferay.ide.upgrade.problems.core.internal.UpgradeProblemsCorePlugin;\n+\n+import java.io.File;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Dictionary;\n+import java.util.List;\n+import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.eclipse.core.resources.IProject;\n+import org.eclipse.core.runtime.IProgressMonitor;\n+import org.eclipse.core.runtime.IStatus;\n+import org.eclipse.core.runtime.Status;\n+\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.framework.InvalidSyntaxException;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.framework.Version;\n+import org.osgi.framework.VersionRange;\n+import org.osgi.service.component.annotations.Component;\n+import org.osgi.service.component.annotations.Reference;\n+import org.osgi.service.component.annotations.ServiceScope;\n+\n+/**\n+ * @author Simon Jiang\n+ */\n+@Component(\n+\tproperty = \"id=\" + RemoveServiceBuilderLegacyFileCommandKeys.ID, scope = ServiceScope.PROTOTYPE,\n+\tservice = {UpgradeCommand.class, UpgradePreview.class}\n+)\n+public class RemoveServiceBuilderLegacyFileCommand implements UpgradeCommand, UpgradePreview, UpgradeProblemSupport {\n+\n+\t@Override\n+\tpublic IStatus perform(IProgressMonitor progressMonitor) {\n+\t\tList<UpgradeProblem> removeServiceBuilderLegacyFilesProblems = _findServiceBuilderLegacyFilesProblems(\n+\t\t\tprogressMonitor);\n+\n+\t\tif (ListUtil.isEmpty(removeServiceBuilderLegacyFilesProblems)) {\n+\t\t\t_upgradePlanner.dispatch(\n+\t\t\t\tnew UpgradeCommandPerformedEvent(this, new ArrayList<>(removeServiceBuilderLegacyFilesProblems)));\n+\n+\t\t\treturn Status.OK_STATUS;\n+\t\t}\n+\n+\t\tStream<UpgradeProblem> removeServiceBuilderLegacyFilesProblemsStream =\n+\t\t\tremoveServiceBuilderLegacyFilesProblems.stream();\n+\n+\t\tremoveServiceBuilderLegacyFilesProblemsStream.forEach(this::_autoCorrectProblem);\n+\n+\t\trefreshProjects(removeServiceBuilderLegacyFilesProblems, progressMonitor);\n+\n+\t\t_upgradePlanner.dispatch(\n+\t\t\tnew UpgradeCommandPerformedEvent(this, new ArrayList<>(removeServiceBuilderLegacyFilesProblems)));\n+\n+\t\treturn Status.OK_STATUS;\n+\t}\n+\n+\t@Override\n+\tpublic void preview(IProgressMonitor progressMonitor) {\n+\t\tList<UpgradeProblem> removeServiceBuilderLegacyFilesProblems = _findServiceBuilderLegacyFilesProblems(\n+\t\t\tprogressMonitor);\n+\n+\t\tif (ListUtil.isEmpty(removeServiceBuilderLegacyFilesProblems)) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tUpgradePlan upgradePlan = _upgradePlanner.getCurrentUpgradePlan();\n+\n+\t\tCollection<UpgradeProblem> upgradeProblems = upgradePlan.getUpgradeProblems();\n+\n+\t\tStream<UpgradeProblem> upgradeProblemsStream = upgradeProblems.stream();\n+\n+\t\tList<UpgradeProblem> removeLeacyFileProblemList = upgradeProblemsStream.filter(\n+\t\t\tproblem -> Objects.equal(problem.getType(), \"legacy\")\n+\t\t).collect(\n+\t\t\tCollectors.toList()\n+\t\t);\n+\n+\t\tupgradeProblems.addAll(removeServiceBuilderLegacyFilesProblems);\n+\n+\t\t_upgradePlanner.dispatch(new UpgradeCommandPerformedEvent(this, new ArrayList<>(removeLeacyFileProblemList)));\n+\t}\n+\n+\tprivate void _autoCorrectProblem(UpgradeProblem legacyUpgradeProblem) {\n+\t\tBundle bundle = FrameworkUtil.getBundle(RemoveServiceBuilderLegacyFileCommand.class);\n+\n+\t\tBundleContext bundleContext = bundle.getBundleContext();\n+\n+\t\tString autoCorrectContext = legacyUpgradeProblem.getAutoCorrectContext();\n+\n+\t\tString autoCorrectKey = autoCorrectContext;\n+\n+\t\tint filterKeyIndex = autoCorrectContext.indexOf(\":\");\n+\n+\t\tif (filterKeyIndex > -1) {\n+\t\t\tautoCorrectKey = autoCorrectContext.substring(0, filterKeyIndex);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tCollection<ServiceReference<AutoFileMigrator>> serviceReferences = bundleContext.getServiceReferences(\n+\t\t\t\tAutoFileMigrator.class, \"(auto.correct=\" + autoCorrectKey + \")\");\n+\n+\t\t\tFile file = legacyUpgradeProblem.getResource();\n+\n+\t\t\tStream<ServiceReference<AutoFileMigrator>> serviceReferencesStream = serviceReferences.stream();\n+\n+\t\t\tserviceReferencesStream.filter(\n+\t\t\t\tref -> {\n+\t\t\t\t\tDictionary<String, Object> serviceProperties = ref.getProperties();\n+\n+\t\t\t\t\treturn Optional.ofNullable(\n+\t\t\t\t\t\tserviceProperties.get(\"version\")\n+\t\t\t\t\t).map(\n+\t\t\t\t\t\tObject::toString\n+\t\t\t\t\t).map(\n+\t\t\t\t\t\tVersionRange::valueOf\n+\t\t\t\t\t).filter(\n+\t\t\t\t\t\trange -> range.includes(new Version(legacyUpgradeProblem.getVersion()))\n+\t\t\t\t\t).isPresent();\n+\t\t\t\t}\n+\t\t\t).filter(\n+\t\t\t\tref -> {\n+\t\t\t\t\tDictionary<String, Object> serviceProperties = ref.getProperties();\n+\n+\t\t\t\t\treturn Optional.ofNullable(\n+\t\t\t\t\t\tserviceProperties.get(\"problem.type\")\n+\t\t\t\t\t).filter(\n+\t\t\t\t\t\ttype -> Objects.equal(type, \"legacy\")\n+\t\t\t\t\t).isPresent();\n+\t\t\t\t}\n+\t\t\t).map(\n+\t\t\t\tbundleContext::getService\n+\t\t\t).forEach(\n+\t\t\t\tautoFileMigrator -> {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tautoFileMigrator.correctProblems(file, Arrays.asList(legacyUpgradeProblem));\n+\t\t\t\t\t}\n+\t\t\t\t\tcatch (AutoFileMigratorException afme) {\n+\t\t\t\t\t\tUpgradeProblemsCorePlugin.logError(\n+\t\t\t\t\t\t\t\"Error encountered auto migrating file \" + file.getAbsolutePath(), afme);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t);\n+\t\t}\n+\t\tcatch (InvalidSyntaxException ise) {\n+\t\t}\n+\t}\n+\n+\tprivate List<UpgradeProblem> _findServiceBuilderLegacyFilesProblems(IProgressMonitor progressMonitor) {\n+\t\tUpgradePlan upgradePlan = _upgradePlanner.getCurrentUpgradePlan();\n+\n+\t\tCollection<UpgradeProblem> upgradeProblems = upgradePlan.getUpgradeProblems();\n+\n+\t\tStream<UpgradeProblem> removeLegacyFileProblems = upgradeProblems.stream();\n+\n+\t\tList<UpgradeProblem> removeLeacyFileProblemList = removeLegacyFileProblems.filter(\n+\t\t\tproblem -> Objects.equal(problem.getType(), \"legacy\")\n+\t\t).collect(\n+\t\t\tCollectors.toList()\n+\t\t);\n+\n+\t\tif (ListUtil.isNotEmpty(removeLeacyFileProblemList)) {\n+\t\t\tboolean result = _messagePrompt.promptQuestion(\n+\t\t\t\t\"Remove the found results?\",\n+\t\t\t\t\"The found results will be removed if you do this, do you want to continue?\");\n+\n+\t\t\tif (!result) {\n+\t\t\t\treturn Collections.emptyList();\n+\t\t\t}\n+\n+\t\t\tremoveMarkers(removeLeacyFileProblemList);\n+\n+\t\t\tremoveLeacyFileProblemList.clear();\n+\t\t}\n+\n+\t\tList<IProject> projects = _resourceSelection.selectProjects(\n+\t\t\t\"Select projects to search for finding legacy file to remove.\", true, ResourceSelection.JAVA_PROJECTS);\n+\n+\t\tif (projects.isEmpty()) {\n+\t\t\treturn Collections.emptyList();\n+\t\t}\n+\n+\t\tStream<IProject> removeServiceBulderLegacyFileStream = projects.stream();\n+\n+\t\tList<String> upgradeVersions = upgradePlan.getUpgradeVersions();\n+\n+\t\tList<UpgradeProblem> legacyAutoCorrectProblems = removeServiceBulderLegacyFileStream.filter(\n+\t\t\tProjectUtil::isServiceBuilderProject\n+\t\t).map(\n+\t\t\tFileUtil::getFile\n+\t\t).map(\n+\t\t\tprojectFile -> _legacyFileMigration.findUpgradeProblems(\n+\t\t\t\tprojectFile, upgradeVersions, Collections.singleton(\"auto.correct\"), progressMonitor)\n+\t\t).flatMap(\n+\t\t\tfindProblems -> findProblems.stream()\n+\t\t).filter(\n+\t\t\tfindProblem -> ListUtil.notContains((Set<UpgradeProblem>)upgradePlan.getIgnoredProblems(), findProblem)\n+\t\t).collect(\n+\t\t\tCollectors.toList()\n+\t\t);\n+\n+\t\tlegacyAutoCorrectProblems.sort(\n+\t\t\t(problem1, problem2) -> {\n+\t\t\t\tVersion version1 = new Version(problem1.getVersion());\n+\t\t\t\tVersion version2 = new Version(problem2.getVersion());\n+\n+\t\t\t\treturn version1.compareTo(version2);\n+\t\t\t});\n+\n+\t\treturn legacyAutoCorrectProblems;\n+\t}\n+\n+\t@Reference\n+\tprivate LegacyFileMigration _legacyFileMigration;\n+\n+\t@Reference\n+\tprivate MessagePrompt _messagePrompt;\n+\n+\t@Reference\n+\tprivate ResourceSelection _resourceSelection;\n+\n+\t@Reference\n+\tprivate UpgradePlanner _upgradePlanner;\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "66348210ab3192545d4fd78eeb7fdf352ac7ad14",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/RemoveUpgradeProblemMarkersCommand.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/RemoveUpgradeProblemMarkersCommand.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/RemoveUpgradeProblemMarkersCommand.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/commands/RemoveUpgradeProblemMarkersCommand.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -58,7 +58,7 @@ public IStatus perform(IProgressMonitor progressMonitor) {\n \n \t\t\t_upgradePlanner.dispatch(new UpgradeCommandPerformedEvent(this, new ArrayList<>(upgradeProblems)));\n \n-\t\t\tupgradeProblems.clear();\n+\t\t\tclearUpgradeProblems(upgradeProblems);\n \t\t}\n \n \t\treturn Status.OK_STATUS;"
  },
  {
    "sha": "60e01aa64fb70f61cb72ede96c27fc272781ddc0",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/liferay70/ServiceBuilderLegacyFileMigrator.java",
    "status": "added",
    "additions": 103,
    "deletions": 0,
    "changes": 103,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/liferay70/ServiceBuilderLegacyFileMigrator.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/liferay70/ServiceBuilderLegacyFileMigrator.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.core/src/com/liferay/ide/upgrade/problems/core/internal/liferay70/ServiceBuilderLegacyFileMigrator.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -0,0 +1,103 @@\n+/**\n+ * Copyright (c) 2000-present Liferay, Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or modify it under\n+ * the terms of the GNU Lesser General Public License as published by the Free\n+ * Software Foundation; either version 2.1 of the License, or (at your option)\n+ * any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+ * details.\n+ */\n+\n+package com.liferay.ide.upgrade.problems.core.internal.liferay70;\n+\n+import com.liferay.ide.core.util.FileUtil;\n+import com.liferay.ide.upgrade.plan.core.UpgradeProblem;\n+import com.liferay.ide.upgrade.problems.core.AutoFileMigrator;\n+import com.liferay.ide.upgrade.problems.core.AutoFileMigratorException;\n+import com.liferay.ide.upgrade.problems.core.FileMigrator;\n+import com.liferay.ide.upgrade.problems.core.FileSearchResult;\n+import com.liferay.ide.upgrade.problems.core.internal.LegacyFilesMigrator;\n+\n+import java.io.File;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.osgi.service.component.annotations.Component;\n+\n+/**\n+ * @author Seiphon Wang\n+ */\n+@Component(\n+\tproperty = {\n+\t\t\"file.extensions=none\", \"problem.type=legacy\", \"problem.title=Legacy File should be removed\",\n+\t\t\"problem.summary=Remove Legacy File\", \"version=7.0\", \"auto.correct=delete-legacy-file\"\n+\t},\n+\tservice = {AutoFileMigrator.class, FileMigrator.class}\n+)\n+public class ServiceBuilderLegacyFileMigrator extends LegacyFilesMigrator implements AutoFileMigrator {\n+\n+\t@Override\n+\tpublic int correctProblems(File file, Collection<UpgradeProblem> upgradeProblems) throws AutoFileMigratorException {\n+\t\tint correctCount = 0;\n+\n+\t\tfor (UpgradeProblem problem : upgradeProblems) {\n+\t\t\tFile resource = problem.getResource();\n+\n+\t\t\ttry {\n+\t\t\t\tFileUtil.delete(resource);\n+\t\t\t\tcorrectCount++;\n+\t\t\t}\n+\t\t\tcatch (Exception e) {\n+\t\t\t}\n+\t\t}\n+\n+\t\tif ((_legacyFiles != null) && !_legacyFiles.isEmpty()) {\n+\t\t\tfor (File legacyFile : _legacyFiles) {\n+\t\t\t\tif (legacyFile.isDirectory()) {\n+\t\t\t\t\tFileUtil.deleteDir(legacyFile, true);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn correctCount;\n+\t}\n+\n+\t@Override\n+\tprotected List<FileSearchResult> searchFile(File projectDir) {\n+\t\t_legacyFiles = new ArrayList<>();\n+\n+\t\tString relativePath = \"/docroot/WEB-INF/src/META-INF\";\n+\n+\t\tFile portletSpringXML = new File(projectDir.getAbsolutePath() + relativePath + \"/portlet-spring.xml\");\n+\n+\t\tif (portletSpringXML.exists()) {\n+\t\t\t_legacyFiles.add(portletSpringXML);\n+\t\t}\n+\n+\t\tFile shardDataSourceSpringXML = new File(\n+\t\t\tprojectDir.getAbsolutePath() + relativePath + \"/shard-data-source-spring.xml\");\n+\n+\t\tif (shardDataSourceSpringXML.exists()) {\n+\t\t\t_legacyFiles.add(shardDataSourceSpringXML);\n+\t\t}\n+\n+\t\t// for 6.2 maven project\n+\n+\t\tFile metaInfFolder = new File(projectDir.getAbsolutePath() + \"/src/main/resources/META-INF/\");\n+\n+\t\tif (metaInfFolder.exists()) {\n+\t\t\t_legacyFiles.add(metaInfFolder);\n+\t\t}\n+\n+\t\treturn findLegacyFiles(_legacyFiles);\n+\t}\n+\n+\tprivate List<File> _legacyFiles;\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "c9fd94f8a1749aae981c420e31eba3a6a4d8698a",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.ui/icons/plugin_logo_16.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/icons/plugin_logo_16.png",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/icons/plugin_logo_16.png",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.ui/icons/plugin_logo_16.png?ref=775b8294bbc0105198a6cf16d40c36e576da65d5"
  },
  {
    "sha": "fe57c2a648a06b292a121db38c559398c7fd54c5",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.ui/plugin.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/plugin.xml",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/plugin.xml",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.ui/plugin.xml?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -39,6 +39,10 @@\n \t\t\t\t\t\tvalue=\"com.liferay.ide.upgrade.problems.ui.internal.UpgradeProblemsContainer\"\n \t\t\t\t\t>\n \t\t\t\t\t</instanceof>\n+\t\t\t\t\t<instanceof\n+\t\t\t\t\t\tvalue=\"com.liferay.ide.upgrade.problems.ui.internal.LegacyProblemsContainer\"\n+\t\t\t\t\t>\n+\t\t\t\t\t</instanceof>\n \t\t\t\t\t<instanceof\n \t\t\t\t\t\tvalue=\"org.eclipse.core.resources.IProject\"\n \t\t\t\t\t>\n@@ -68,6 +72,10 @@\n \t\t\t\t\t\t\tvalue=\"com.liferay.ide.upgrade.problems.ui.internal.UpgradeProblemsContainer\"\n \t\t\t\t\t\t>\n \t\t\t\t\t\t</instanceof>\n+\t\t\t\t\t\t<instanceof\n+\t\t\t\t\t\t\tvalue=\"com.liferay.ide.upgrade.problems.ui.internal.LegacyProblemsContainer\"\n+\t\t\t\t\t\t>\n+\t\t\t\t\t\t</instanceof>\n \t\t\t\t\t\t<instanceof\n \t\t\t\t\t\t\tvalue=\"org.eclipse.core.resources.IProject\"\n \t\t\t\t\t\t>"
  },
  {
    "sha": "66250cfe47b427a569aa9d501494b034a8f41f1b",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/LegacyProblemsContainer.java",
    "status": "added",
    "additions": 114,
    "deletions": 0,
    "changes": 114,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/LegacyProblemsContainer.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/LegacyProblemsContainer.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/LegacyProblemsContainer.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -0,0 +1,114 @@\n+/**\n+ * Copyright (c) 2000-present Liferay, Inc. All rights reserved.\n+ *\n+ * This library is free software; you can redistribute it and/or modify it under\n+ * the terms of the GNU Lesser General Public License as published by the Free\n+ * Software Foundation; either version 2.1 of the License, or (at your option)\n+ * any later version.\n+ *\n+ * This library is distributed in the hope that it will be useful, but WITHOUT\n+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+ * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n+ * details.\n+ */\n+\n+package com.liferay.ide.upgrade.problems.ui.internal;\n+\n+import com.liferay.ide.core.util.ListUtil;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.eclipse.core.runtime.Adapters;\n+\n+/**\n+ * @author Seiphon Wang\n+ */\n+public class LegacyProblemsContainer {\n+\n+\tpublic void addProjectProblemsContainer(ProjectProblemsContainer projectProblemsContainer) {\n+\t\t_legacyProjectProblemsContainers.add(projectProblemsContainer);\n+\t}\n+\n+\tpublic boolean equals(Object object) {\n+\t\tif ((object instanceof LegacyProblemsContainer) == false) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\tLegacyProblemsContainer legacyFileProblemsContainer = Adapters.adapt(object, LegacyProblemsContainer.class);\n+\n+\t\tif (legacyFileProblemsContainer == null) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\tif (isEqualProjectProblem(\n+\t\t\t\t_legacyProjectProblemsContainers, legacyFileProblemsContainer._legacyProjectProblemsContainers)) {\n+\n+\t\t\treturn true;\n+\t\t}\n+\n+\t\treturn false;\n+\t}\n+\n+\tpublic List<ProjectProblemsContainer> getProjectProblemsConatiners() {\n+\t\treturn _legacyProjectProblemsContainers;\n+\t}\n+\n+\t@Override\n+\tpublic int hashCode() {\n+\t\tint hash = 31;\n+\n+\t\tStream<ProjectProblemsContainer> projectProblemStream = _legacyProjectProblemsContainers.stream();\n+\n+\t\tint projectProblemsHashCodes = projectProblemStream.map(\n+\t\t\tObject::hashCode\n+\t\t).reduce(\n+\t\t\t0, Integer::sum\n+\t\t).intValue();\n+\n+\t\treturn 31 * hash + projectProblemsHashCodes;\n+\t}\n+\n+\tpublic boolean isEqualProjectProblem(\n+\t\tCollection<ProjectProblemsContainer> source, Collection<ProjectProblemsContainer> target) {\n+\n+\t\tboolean sizeEquals = ListUtil.sizeEquals(source, target);\n+\n+\t\tif (!sizeEquals) {\n+\t\t\treturn false;\n+\t\t}\n+\n+\t\tStream<ProjectProblemsContainer> targetStream = target.stream();\n+\n+\t\tCollection<String> targetTitles = targetStream.map(\n+\t\t\tProjectProblemsContainer::getProjectName\n+\t\t).collect(\n+\t\t\tCollectors.toList()\n+\t\t);\n+\n+\t\tStream<ProjectProblemsContainer> projectProblemStream = source.stream();\n+\n+\t\treturn projectProblemStream.map(\n+\t\t\tProjectProblemsContainer::getProjectName\n+\t\t).filter(\n+\t\t\ttargetTitles::contains\n+\t\t).findAny(\n+\t\t).isPresent();\n+\t}\n+\n+\tpublic boolean isNotEmpty() {\n+\t\tfor (ProjectProblemsContainer projectProblemsContainer : _legacyProjectProblemsContainers) {\n+\t\t\tif (!projectProblemsContainer.isEmpty()) {\n+\t\t\t\treturn true;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn false;\n+\t}\n+\n+\tprivate List<ProjectProblemsContainer> _legacyProjectProblemsContainers = new ArrayList<>();\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "fb72c845cc02865e1b20317b754e8ffa47b38eed",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsContentProvider.java",
    "status": "modified",
    "additions": 55,
    "deletions": 2,
    "changes": 57,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsContentProvider.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsContentProvider.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsContentProvider.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -25,8 +25,10 @@\n \n import java.io.File;\n \n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import java.util.Objects;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n@@ -42,6 +44,7 @@\n /**\n  * @author Terry Jia\n  * @author Simon Jiang\n+ * @author Seiphon Wang\n  */\n public class UpgradeProblemsContentProvider extends AbstractNavigatorContentProvider {\n \n@@ -73,6 +76,18 @@ public void dispose() {\n \t\t\t\tprojectProblemsContainer -> !projectProblemsContainer.isEmpty()\n \t\t\t).toArray();\n \t\t}\n+\t\telse if (element instanceof LegacyProblemsContainer) {\n+\t\t\tLegacyProblemsContainer legacyFileProblemsContainer = (LegacyProblemsContainer)element;\n+\n+\t\t\tList<ProjectProblemsContainer> projectProblemsContainers =\n+\t\t\t\tlegacyFileProblemsContainer.getProjectProblemsConatiners();\n+\n+\t\t\tStream<ProjectProblemsContainer> stream = projectProblemsContainers.stream();\n+\n+\t\t\treturn stream.filter(\n+\t\t\t\tprojectProblemsContainer -> !projectProblemsContainer.isEmpty()\n+\t\t\t).toArray();\n+\t\t}\n \t\telse if (element instanceof ProjectProblemsContainer) {\n \t\t\tProjectProblemsContainer projectProblemsContainer = (ProjectProblemsContainer)element;\n \n@@ -112,6 +127,8 @@ else if (element instanceof FileProblemsContainer) {\n \n \t\tUpgradeProblemsContainer upgradeProblemsContainer = new UpgradeProblemsContainer();\n \n+\t\tLegacyProblemsContainer legacyProblemsContainer = new LegacyProblemsContainer();\n+\n \t\tfor (IProject project : CoreUtil.getAllProjects()) {\n \t\t\ttry {\n \t\t\t\tif (!project.hasNature(\"org.eclipse.jdt.core.javanature\") ||\n@@ -126,8 +143,12 @@ else if (element instanceof FileProblemsContainer) {\n \n \t\t\tProjectProblemsContainer projectProblemsContainer = new ProjectProblemsContainer();\n \n+\t\t\tProjectProblemsContainer legacyProjectProblemsContainer = new ProjectProblemsContainer();\n+\n \t\t\tprojectProblemsContainer.setProjectName(project.getName());\n \n+\t\t\tlegacyProjectProblemsContainer.setProjectName(project.getName());\n+\n \t\t\tfor (UpgradeProblem upgradeProblem : upgradeProblems) {\n \t\t\t\tFile file = upgradeProblem.getResource();\n \n@@ -143,6 +164,23 @@ else if (element instanceof FileProblemsContainer) {\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n \n+\t\t\t\tFileProblemsContainer legacyFileProblemsContainer = projectProblemsContainer.getFileProblemsContainer(\n+\t\t\t\t\tfile);\n+\n+\t\t\t\tif ((upgradeProblem.getType() != null) && Objects.equals(upgradeProblem.getType(), \"legacy\")) {\n+\t\t\t\t\tif (legacyFileProblemsContainer == null) {\n+\t\t\t\t\t\tlegacyFileProblemsContainer = new FileProblemsContainer();\n+\n+\t\t\t\t\t\tlegacyFileProblemsContainer.setFile(file);\n+\n+\t\t\t\t\t\tlegacyProjectProblemsContainer.addFileProblemsContainer(legacyFileProblemsContainer);\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tlegacyFileProblemsContainer.addUpgradeProblem(upgradeProblem);\n+\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n \t\t\t\tFileProblemsContainer fileProblemsContainer = projectProblemsContainer.getFileProblemsContainer(file);\n \n \t\t\t\tif (fileProblemsContainer == null) {\n@@ -156,20 +194,35 @@ else if (element instanceof FileProblemsContainer) {\n \t\t\t\tfileProblemsContainer.addUpgradeProblem(upgradeProblem);\n \t\t\t}\n \n+\t\t\tlegacyProblemsContainer.addProjectProblemsContainer(legacyProjectProblemsContainer);\n+\n \t\t\tupgradeProblemsContainer.addProjectProblemsContainer(projectProblemsContainer);\n \t\t}\n \n+\t\tList<Object> retVal = new ArrayList<>();\n+\n \t\tif (upgradeProblemsContainer.isNotEmpty()) {\n-\t\t\treturn new Object[] {upgradeProblemsContainer};\n+\t\t\tretVal.add(upgradeProblemsContainer);\n \t\t}\n \n-\t\treturn null;\n+\t\tif (legacyProblemsContainer.isNotEmpty()) {\n+\t\t\tretVal.add(legacyProblemsContainer);\n+\t\t}\n+\n+\t\tif (retVal.isEmpty()) {\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\treturn retVal.toArray();\n \t}\n \n \tpublic boolean hasChildren(Object element) {\n \t\tif (element instanceof UpgradeProblemsContainer) {\n \t\t\treturn true;\n \t\t}\n+\t\telse if (element instanceof LegacyProblemsContainer) {\n+\t\t\treturn true;\n+\t\t}\n \t\telse if (element instanceof ProjectProblemsContainer) {\n \t\t\treturn true;\n \t\t}"
  },
  {
    "sha": "f6bc70a0c9b443c266e328f735dc00d5b3c5af91",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsInfoProviderService.java",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsInfoProviderService.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsInfoProviderService.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsInfoProviderService.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -68,6 +68,9 @@ public String getLabel(Object element) {\n \t\telse if (element instanceof UpgradeProblemsContainer) {\n \t\t\treturn \"Liferay Upgrade Problems\";\n \t\t}\n+\t\telse if (element instanceof LegacyProblemsContainer) {\n+\t\t\treturn \"Liferay Legacy File Problems\";\n+\t\t}\n \t\telse if (element instanceof ProjectProblemsContainer) {\n \t\t\treturn _projectProblemsContainerLabel((ProjectProblemsContainer)element);\n \t\t}\n@@ -80,8 +83,9 @@ else if (element instanceof UpgradeProblem) {\n \n \t@Override\n \tpublic boolean provides(Object element) {\n-\t\tif (element instanceof FileProblemsContainer || element instanceof ProjectProblemsContainer ||\n-\t\t\telement instanceof UpgradeProblem || element instanceof UpgradeProblemsContainer) {\n+\t\tif (element instanceof FileProblemsContainer || element instanceof LegacyProblemsContainer ||\n+\t\t\telement instanceof ProjectProblemsContainer || element instanceof UpgradeProblem ||\n+\t\t\telement instanceof UpgradeProblemsContainer) {\n \n \t\t\treturn true;\n \t\t}"
  },
  {
    "sha": "aa565fc701d02e231ebc625b6b4167ffb8b35c71",
    "filename": "tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsLabelProvider.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/gamerson/liferay-ide/blob/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsLabelProvider.java",
    "raw_url": "https://github.com/gamerson/liferay-ide/raw/775b8294bbc0105198a6cf16d40c36e576da65d5/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsLabelProvider.java",
    "contents_url": "https://api.github.com/repos/gamerson/liferay-ide/contents/tools/plugins/com.liferay.ide.upgrade.problems.ui/src/com/liferay/ide/upgrade/problems/ui/internal/UpgradeProblemsLabelProvider.java?ref=775b8294bbc0105198a6cf16d40c36e576da65d5",
    "patch": "@@ -62,6 +62,9 @@ else if (element instanceof UpgradeProblem) {\n \t\telse if (element instanceof UpgradeProblemsContainer) {\n \t\t\treturn getImageRegistry().get(\"UpgradeProblemsContainer\");\n \t\t}\n+\t\telse if (element instanceof LegacyProblemsContainer) {\n+\t\t\treturn getImageRegistry().get(\"LegacyProblemsContainer\");\n+\t\t}\n \n \t\treturn null;\n \t}\n@@ -100,6 +103,10 @@ protected void initalizeImageRegistry(ImageRegistry imageRegistry) {\n \t\t\t\"UpgradeProblemsContainer\",\n \t\t\tUpgradeProblemsUIPlugin.imageDescriptorFromPlugin(\n \t\t\t\tUpgradeProblemsUIPlugin.PLUGIN_ID, \"icons/liferay_logo_16.png\"));\n+\t\timageRegistry.put(\n+\t\t\t\"LegacyProblemsContainer\",\n+\t\t\tUpgradeProblemsUIPlugin.imageDescriptorFromPlugin(\n+\t\t\t\tUpgradeProblemsUIPlugin.PLUGIN_ID, \"icons/plugin_logo_16.png\"));\n \t}\n \n \tprivate ServiceTracker<UpgradeInfoProvider, UpgradeInfoProvider> _upgradeInfoProviderServiceTracker;"
  }
]
