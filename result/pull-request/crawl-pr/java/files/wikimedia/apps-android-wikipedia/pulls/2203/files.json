[
  {
    "sha": "a88aac8ee7410af38795f4a247b32cdf4acd3de6",
    "filename": "app/src/main/java/org/wikipedia/descriptions/DescriptionEditActivity.java",
    "status": "removed",
    "additions": 0,
    "deletions": 158,
    "changes": 158,
    "blob_url": "https://github.com/wikimedia/apps-android-wikipedia/blob/5f8e97c0df7b7dc7e0ccbeaae84097f2c2e376d1/app/src/main/java/org/wikipedia/descriptions/DescriptionEditActivity.java",
    "raw_url": "https://github.com/wikimedia/apps-android-wikipedia/raw/5f8e97c0df7b7dc7e0ccbeaae84097f2c2e376d1/app/src/main/java/org/wikipedia/descriptions/DescriptionEditActivity.java",
    "contents_url": "https://api.github.com/repos/wikimedia/apps-android-wikipedia/contents/app/src/main/java/org/wikipedia/descriptions/DescriptionEditActivity.java?ref=5f8e97c0df7b7dc7e0ccbeaae84097f2c2e376d1",
    "patch": "@@ -1,158 +0,0 @@\n-package org.wikipedia.descriptions;\n-\n-import android.content.Context;\n-import android.content.Intent;\n-\n-import androidx.annotation.ColorInt;\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-\n-import org.wikipedia.R;\n-import org.wikipedia.activity.SingleFragmentActivity;\n-import org.wikipedia.analytics.SuggestedEditsFunnel;\n-import org.wikipedia.history.HistoryEntry;\n-import org.wikipedia.json.GsonMarshaller;\n-import org.wikipedia.json.GsonUnmarshaller;\n-import org.wikipedia.page.ExclusiveBottomSheetPresenter;\n-import org.wikipedia.page.PageActivity;\n-import org.wikipedia.page.PageTitle;\n-import org.wikipedia.page.linkpreview.LinkPreviewDialog;\n-import org.wikipedia.readinglist.AddToReadingListDialog;\n-import org.wikipedia.suggestededits.PageSummaryForEdit;\n-import org.wikipedia.util.ClipboardUtil;\n-import org.wikipedia.util.FeedbackUtil;\n-import org.wikipedia.util.ShareUtil;\n-import org.wikipedia.views.ImagePreviewDialog;\n-\n-import static org.wikipedia.Constants.INTENT_EXTRA_ACTION;\n-import static org.wikipedia.Constants.INTENT_EXTRA_INVOKE_SOURCE;\n-import static org.wikipedia.Constants.InvokeSource;\n-import static org.wikipedia.Constants.InvokeSource.LINK_PREVIEW_MENU;\n-import static org.wikipedia.Constants.InvokeSource.PAGE_ACTIVITY;\n-import static org.wikipedia.descriptions.DescriptionEditActivity.Action.ADD_CAPTION;\n-import static org.wikipedia.descriptions.DescriptionEditActivity.Action.TRANSLATE_CAPTION;\n-import static org.wikipedia.descriptions.DescriptionEditActivity.Action.TRANSLATE_DESCRIPTION;\n-import static org.wikipedia.descriptions.DescriptionEditSuccessActivity.RESULT_OK_FROM_EDIT_SUCCESS;\n-import static org.wikipedia.util.DeviceUtil.hideSoftKeyboard;\n-\n-public class DescriptionEditActivity extends SingleFragmentActivity<DescriptionEditFragment>\n-        implements DescriptionEditFragment.Callback, LinkPreviewDialog.Callback {\n-\n-    public enum Action {\n-        ADD_DESCRIPTION,\n-        TRANSLATE_DESCRIPTION,\n-        ADD_CAPTION,\n-        TRANSLATE_CAPTION,\n-        ADD_IMAGE_TAGS\n-    }\n-\n-    private static final String EXTRA_TITLE = \"title\";\n-    private static final String EXTRA_HIGHLIGHT_TEXT = \"highlightText\";\n-    private static final String EXTRA_SOURCE_SUMMARY = \"sourceSummary\";\n-    private static final String EXTRA_TARGET_SUMMARY = \"targetSummary\";\n-    private Action action;\n-    private final ExclusiveBottomSheetPresenter bottomSheetPresenter = new ExclusiveBottomSheetPresenter();\n-\n-    public static Intent newIntent(@NonNull Context context,\n-                                   @NonNull PageTitle title,\n-                                   @Nullable String highlightText,\n-                                   @Nullable PageSummaryForEdit sourceSummary,\n-                                   @Nullable PageSummaryForEdit targetSummary,\n-                                   @NonNull Action action,\n-                                   @NonNull InvokeSource invokeSource) {\n-        return new Intent(context, DescriptionEditActivity.class)\n-                .putExtra(EXTRA_TITLE, title)\n-                .putExtra(EXTRA_HIGHLIGHT_TEXT, highlightText)\n-                .putExtra(EXTRA_SOURCE_SUMMARY, sourceSummary == null ? null : GsonMarshaller.marshal(sourceSummary))\n-                .putExtra(EXTRA_TARGET_SUMMARY, targetSummary == null ? null : GsonMarshaller.marshal(targetSummary))\n-                .putExtra(INTENT_EXTRA_ACTION, action)\n-                .putExtra(INTENT_EXTRA_INVOKE_SOURCE, invokeSource);\n-    }\n-\n-    @Override\n-    public void onDescriptionEditSuccess() {\n-        setResult(RESULT_OK_FROM_EDIT_SUCCESS);\n-        finish();\n-    }\n-\n-    @Override\n-    public void onBottomBarContainerClicked(@NonNull Action action) {\n-        PageSummaryForEdit summary;\n-\n-        if (action == TRANSLATE_DESCRIPTION) {\n-            summary = GsonUnmarshaller.unmarshal(PageSummaryForEdit.class, getIntent().getStringExtra(EXTRA_TARGET_SUMMARY));\n-        } else {\n-            summary = GsonUnmarshaller.unmarshal(PageSummaryForEdit.class, getIntent().getStringExtra(EXTRA_SOURCE_SUMMARY));\n-        }\n-\n-        if (action == ADD_CAPTION || action == TRANSLATE_CAPTION) {\n-            bottomSheetPresenter.show(getSupportFragmentManager(),\n-                    ImagePreviewDialog.Companion.newInstance(summary, action));\n-        } else {\n-            bottomSheetPresenter.show(getSupportFragmentManager(),\n-                    LinkPreviewDialog.newInstance(new HistoryEntry(summary.getPageTitle(),\n-                                    getIntent().hasExtra(INTENT_EXTRA_INVOKE_SOURCE) && getIntent().getSerializableExtra(INTENT_EXTRA_INVOKE_SOURCE) == PAGE_ACTIVITY\n-                                            ? HistoryEntry.SOURCE_EDIT_DESCRIPTION : HistoryEntry.SOURCE_SUGGESTED_EDITS),\n-                            null));\n-        }\n-    }\n-\n-    public void onLinkPreviewLoadPage(@NonNull PageTitle title, @NonNull HistoryEntry entry, boolean inNewTab) {\n-        startActivity(PageActivity.newIntentForCurrentTab(this, entry, entry.getTitle()));\n-    }\n-\n-    @Override\n-    public void onLinkPreviewCopyLink(@NonNull PageTitle title) {\n-        copyLink(title.getUri());\n-    }\n-\n-    @Override\n-    public void onLinkPreviewAddToList(@NonNull PageTitle title) {\n-        bottomSheetPresenter.show(getSupportFragmentManager(),\n-                AddToReadingListDialog.newInstance(title, LINK_PREVIEW_MENU));\n-    }\n-\n-    @Override\n-    public void onLinkPreviewShareLink(@NonNull PageTitle title) {\n-        ShareUtil.shareText(this, title);\n-    }\n-\n-    public void updateStatusBarColor(@ColorInt int color) {\n-        setStatusBarColor(color);\n-    }\n-\n-    public void updateNavigationBarColor(@ColorInt int color) {\n-        setNavigationBarColor(color);\n-    }\n-\n-    private void copyLink(@NonNull String url) {\n-        ClipboardUtil.setPlainText(this, null, url);\n-        FeedbackUtil.showMessage(this, R.string.address_copied);\n-    }\n-\n-    @Override\n-    public DescriptionEditFragment createFragment() {\n-        InvokeSource invokeSource = (InvokeSource) getIntent().getSerializableExtra(INTENT_EXTRA_INVOKE_SOURCE);\n-        action = (Action) getIntent().getSerializableExtra(INTENT_EXTRA_ACTION);\n-        PageTitle title = getIntent().getParcelableExtra(EXTRA_TITLE);\n-        SuggestedEditsFunnel.get().click(title.getDisplayText(), action);\n-\n-        return DescriptionEditFragment.newInstance(title,\n-                getIntent().getStringExtra(EXTRA_HIGHLIGHT_TEXT),\n-                getIntent().getStringExtra(EXTRA_SOURCE_SUMMARY),\n-                getIntent().getStringExtra(EXTRA_TARGET_SUMMARY),\n-                action,\n-                invokeSource);\n-    }\n-\n-    @Override\n-    public void onBackPressed() {\n-        if (getFragment().editView.showingReviewContent()) {\n-            getFragment().editView.loadReviewContent(false);\n-        } else {\n-            hideSoftKeyboard(this);\n-            SuggestedEditsFunnel.get().cancel(action);\n-            super.onBackPressed();\n-        }\n-    }\n-}"
  },
  {
    "sha": "70e3cf3f3910bd7f1c28eb6ac44c6519b36da4fd",
    "filename": "app/src/main/java/org/wikipedia/descriptions/DescriptionEditActivity.kt",
    "status": "added",
    "additions": 133,
    "deletions": 0,
    "changes": 133,
    "blob_url": "https://github.com/wikimedia/apps-android-wikipedia/blob/33d9546a3b4f2f349f87ec082dce17a9b77f32b1/app/src/main/java/org/wikipedia/descriptions/DescriptionEditActivity.kt",
    "raw_url": "https://github.com/wikimedia/apps-android-wikipedia/raw/33d9546a3b4f2f349f87ec082dce17a9b77f32b1/app/src/main/java/org/wikipedia/descriptions/DescriptionEditActivity.kt",
    "contents_url": "https://api.github.com/repos/wikimedia/apps-android-wikipedia/contents/app/src/main/java/org/wikipedia/descriptions/DescriptionEditActivity.kt?ref=33d9546a3b4f2f349f87ec082dce17a9b77f32b1",
    "patch": "@@ -0,0 +1,133 @@\n+package org.wikipedia.descriptions\n+\n+import android.content.Context\n+import android.content.Intent\n+import androidx.annotation.ColorInt\n+import org.wikipedia.Constants\n+import org.wikipedia.Constants.InvokeSource\n+import org.wikipedia.R\n+import org.wikipedia.activity.SingleFragmentActivity\n+import org.wikipedia.analytics.SuggestedEditsFunnel\n+import org.wikipedia.history.HistoryEntry\n+import org.wikipedia.json.GsonMarshaller\n+import org.wikipedia.json.GsonUnmarshaller\n+import org.wikipedia.page.ExclusiveBottomSheetPresenter\n+import org.wikipedia.page.PageActivity\n+import org.wikipedia.page.PageTitle\n+import org.wikipedia.page.linkpreview.LinkPreviewDialog\n+import org.wikipedia.readinglist.AddToReadingListDialog\n+import org.wikipedia.suggestededits.PageSummaryForEdit\n+import org.wikipedia.util.ClipboardUtil\n+import org.wikipedia.util.DeviceUtil\n+import org.wikipedia.util.FeedbackUtil\n+import org.wikipedia.util.ShareUtil\n+import org.wikipedia.views.ImagePreviewDialog\n+\n+class DescriptionEditActivity : SingleFragmentActivity<DescriptionEditFragment>(), DescriptionEditFragment.Callback, LinkPreviewDialog.Callback {\n+    enum class Action {\n+        ADD_DESCRIPTION, TRANSLATE_DESCRIPTION, ADD_CAPTION, TRANSLATE_CAPTION, ADD_IMAGE_TAGS\n+    }\n+\n+    private lateinit var action: Action\n+    private val bottomSheetPresenter = ExclusiveBottomSheetPresenter()\n+\n+    override fun onDescriptionEditSuccess() {\n+        setResult(DescriptionEditSuccessActivity.RESULT_OK_FROM_EDIT_SUCCESS)\n+        finish()\n+    }\n+\n+    override fun onBottomBarContainerClicked(action: Action) {\n+        val summary: PageSummaryForEdit = if (action == Action.TRANSLATE_DESCRIPTION) {\n+            GsonUnmarshaller.unmarshal(PageSummaryForEdit::class.java, intent.getStringExtra(EXTRA_TARGET_SUMMARY))\n+        } else {\n+            GsonUnmarshaller.unmarshal(PageSummaryForEdit::class.java, intent.getStringExtra(EXTRA_SOURCE_SUMMARY))\n+        }\n+        if (action == Action.ADD_CAPTION || action == Action.TRANSLATE_CAPTION) {\n+            bottomSheetPresenter.show(supportFragmentManager,\n+                    ImagePreviewDialog.newInstance(summary, action))\n+        } else {\n+            bottomSheetPresenter.show(supportFragmentManager,\n+                    LinkPreviewDialog.newInstance(HistoryEntry(summary.pageTitle,\n+                            if (intent.hasExtra(Constants.INTENT_EXTRA_INVOKE_SOURCE) && intent.getSerializableExtra\n+                                    (Constants.INTENT_EXTRA_INVOKE_SOURCE) === InvokeSource.PAGE_ACTIVITY)\n+                                HistoryEntry.SOURCE_EDIT_DESCRIPTION else HistoryEntry.SOURCE_SUGGESTED_EDITS), null))\n+        }\n+    }\n+\n+    override fun onLinkPreviewLoadPage(title: PageTitle, entry: HistoryEntry, inNewTab: Boolean) {\n+        startActivity(PageActivity.newIntentForCurrentTab(this, entry, entry.title))\n+    }\n+\n+    override fun onLinkPreviewCopyLink(title: PageTitle) {\n+        copyLink(title.uri)\n+    }\n+\n+    override fun onLinkPreviewAddToList(title: PageTitle) {\n+        bottomSheetPresenter.show(supportFragmentManager,\n+                AddToReadingListDialog.newInstance(title, InvokeSource.LINK_PREVIEW_MENU))\n+    }\n+\n+    override fun onLinkPreviewShareLink(title: PageTitle) {\n+        ShareUtil.shareText(this, title)\n+    }\n+\n+    fun updateStatusBarColor(@ColorInt color: Int) {\n+        setStatusBarColor(color)\n+    }\n+\n+    fun updateNavigationBarColor(@ColorInt color: Int) {\n+        setNavigationBarColor(color)\n+    }\n+\n+    private fun copyLink(url: String) {\n+        ClipboardUtil.setPlainText(this, null, url)\n+        FeedbackUtil.showMessage(this, R.string.address_copied)\n+    }\n+\n+    public override fun createFragment(): DescriptionEditFragment {\n+        val invokeSource = intent.getSerializableExtra(Constants.INTENT_EXTRA_INVOKE_SOURCE) as InvokeSource\n+        action = intent.getSerializableExtra(Constants.INTENT_EXTRA_ACTION) as Action\n+        val title: PageTitle = intent.getParcelableExtra(EXTRA_TITLE)!!\n+        SuggestedEditsFunnel.get().click(title.displayText, action)\n+        return DescriptionEditFragment.newInstance(title,\n+                intent.getStringExtra(EXTRA_HIGHLIGHT_TEXT),\n+                intent.getStringExtra(EXTRA_SOURCE_SUMMARY),\n+                intent.getStringExtra(EXTRA_TARGET_SUMMARY),\n+                action,\n+                invokeSource)\n+    }\n+\n+    override fun onBackPressed() {\n+        if (fragment.editView.showingReviewContent()) {\n+            fragment.editView.loadReviewContent(false)\n+        } else {\n+            DeviceUtil.hideSoftKeyboard(this)\n+            SuggestedEditsFunnel.get().cancel(action)\n+            super.onBackPressed()\n+        }\n+    }\n+\n+    companion object {\n+        private const val EXTRA_TITLE = \"title\"\n+        private const val EXTRA_HIGHLIGHT_TEXT = \"highlightText\"\n+        private const val EXTRA_SOURCE_SUMMARY = \"sourceSummary\"\n+        private const val EXTRA_TARGET_SUMMARY = \"targetSummary\"\n+\n+        @JvmStatic\n+        fun newIntent(context: Context,\n+                      title: PageTitle,\n+                      highlightText: String?,\n+                      sourceSummary: PageSummaryForEdit?,\n+                      targetSummary: PageSummaryForEdit?,\n+                      action: Action,\n+                      invokeSource: InvokeSource): Intent {\n+            return Intent(context, DescriptionEditActivity::class.java)\n+                    .putExtra(EXTRA_TITLE, title)\n+                    .putExtra(EXTRA_HIGHLIGHT_TEXT, highlightText)\n+                    .putExtra(EXTRA_SOURCE_SUMMARY, if (sourceSummary == null) null else GsonMarshaller.marshal(sourceSummary))\n+                    .putExtra(EXTRA_TARGET_SUMMARY, if (targetSummary == null) null else GsonMarshaller.marshal(targetSummary))\n+                    .putExtra(Constants.INTENT_EXTRA_ACTION, action)\n+                    .putExtra(Constants.INTENT_EXTRA_INVOKE_SOURCE, invokeSource)\n+        }\n+    }\n+}"
  },
  {
    "sha": "0630d710682fd9d8e6eeeb0211598dd6b30950ac",
    "filename": "app/src/main/java/org/wikipedia/feed/suggestededits/SuggestedEditsCardItemFragment.kt",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wikimedia/apps-android-wikipedia/blob/33d9546a3b4f2f349f87ec082dce17a9b77f32b1/app/src/main/java/org/wikipedia/feed/suggestededits/SuggestedEditsCardItemFragment.kt",
    "raw_url": "https://github.com/wikimedia/apps-android-wikipedia/raw/33d9546a3b4f2f349f87ec082dce17a9b77f32b1/app/src/main/java/org/wikipedia/feed/suggestededits/SuggestedEditsCardItemFragment.kt",
    "contents_url": "https://api.github.com/repos/wikimedia/apps-android-wikipedia/contents/app/src/main/java/org/wikipedia/feed/suggestededits/SuggestedEditsCardItemFragment.kt?ref=33d9546a3b4f2f349f87ec082dce17a9b77f32b1",
    "patch": "@@ -1,5 +1,6 @@\n package org.wikipedia.feed.suggestededits\n \n+import android.app.Activity.RESULT_OK\n import android.content.Intent\n import android.net.Uri\n import android.os.Bundle\n@@ -31,7 +32,6 @@ import org.wikipedia.dataclient.mwapi.MwQueryPage\n import org.wikipedia.descriptions.DescriptionEditActivity\n import org.wikipedia.descriptions.DescriptionEditActivity.Action\n import org.wikipedia.descriptions.DescriptionEditActivity.Action.*\n-import org.wikipedia.descriptions.DescriptionEditActivity.RESULT_OK\n import org.wikipedia.descriptions.DescriptionEditReviewView.Companion.ARTICLE_EXTRACT_MAX_LINE_WITHOUT_IMAGE\n import org.wikipedia.descriptions.DescriptionEditReviewView.Companion.ARTICLE_EXTRACT_MAX_LINE_WITH_IMAGE\n import org.wikipedia.feed.model.CardType"
  }
]
