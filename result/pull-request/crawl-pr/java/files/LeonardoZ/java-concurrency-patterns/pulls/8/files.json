[
  {
    "sha": "bbffd0fe7778b0137bc7c018e518a810ad989501",
    "filename": "src/main/java/br/com/leonardoz/features/futures/UsingCompletableFuture.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/LeonardoZ/java-concurrency-patterns/blob/77ebb1cdce41594a6bab83a67246aeb520064c84/src/main/java/br/com/leonardoz/features/futures/UsingCompletableFuture.java",
    "raw_url": "https://github.com/LeonardoZ/java-concurrency-patterns/raw/77ebb1cdce41594a6bab83a67246aeb520064c84/src/main/java/br/com/leonardoz/features/futures/UsingCompletableFuture.java",
    "contents_url": "https://api.github.com/repos/LeonardoZ/java-concurrency-patterns/contents/src/main/java/br/com/leonardoz/features/futures/UsingCompletableFuture.java?ref=77ebb1cdce41594a6bab83a67246aeb520064c84",
    "patch": "@@ -10,7 +10,7 @@\n /**\n  * \n  * CompletableFuture is a Future that may be manually completed. It combines a\n- * Future interface with the CompletionState interface, supporting dependent\n+ * Future interface with the CompletionStage interface, supporting dependent\n  * actions that trigger upon its completion, similarly to a callback.\n  *\n  * Important: Specify an Executor for async methods when available. All async"
  }
]
