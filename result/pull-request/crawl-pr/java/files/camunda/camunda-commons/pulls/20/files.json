[
  {
    "sha": "8db7d0e23ac589daa549c2d97435b0a76fdbb09c",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/pom.xml",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/pom.xml",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/pom.xml?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -58,6 +58,68 @@\n         <version>1.3</version>\n       </dependency>\n \n+      <!-- testcontainers dependencies -->\n+      <dependency>\n+        <groupId>org.testcontainers</groupId>\n+        <artifactId>testcontainers</artifactId>\n+        <version>1.15.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.testcontainers</groupId>\n+        <artifactId>mysql</artifactId>\n+        <version>1.15.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.testcontainers</groupId>\n+        <artifactId>mariadb</artifactId>\n+        <version>1.15.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.testcontainers</groupId>\n+        <artifactId>postgresql</artifactId>\n+        <version>1.15.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.testcontainers</groupId>\n+        <artifactId>oracle-xe</artifactId>\n+        <version>1.15.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.testcontainers</groupId>\n+        <artifactId>mssqlserver</artifactId>\n+        <version>1.15.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.testcontainers</groupId>\n+        <artifactId>db2</artifactId>\n+        <version>1.15.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.testcontainers</groupId>\n+        <artifactId>cockroachdb</artifactId>\n+        <version>1.15.2</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.postgresql</groupId>\n+        <artifactId>postgresql</artifactId>\n+        <version>42.2.15</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.mariadb.jdbc</groupId>\n+        <artifactId>mariadb-java-client</artifactId>\n+        <version>1.1.8</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>mysql</groupId>\n+        <artifactId>mysql-connector-java</artifactId>\n+        <version>8.0.23</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>com.microsoft.sqlserver</groupId>\n+        <artifactId>mssql-jdbc</artifactId>\n+        <version>8.2.2.jre8</version>\n+      </dependency>\n+\n     </dependencies>\n   </dependencyManagement>\n "
  },
  {
    "sha": "33a7b8f427371680f8093a733dbc75bd08e576d9",
    "filename": "testing/README.md",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/README.md",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/README.md",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/README.md?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -20,3 +20,17 @@ public void testOverrideWithAnnotation() {\n \n }\n ```\n+\n+## Usage of the Testcontainers wrapper\n+\n+1. Add a `testcontainers.property` file to the root of your test resources directory ([example file](./testing/src/test/resources/testcontainers.properties));\n+1. Add the repository names of the Docker images you would like to use. The following custom properties are available:\n+   * `postgresql.container.image`\n+   * `cockroachdb.container.image`\n+   * `mariadb.container.image`\n+   * `mysql.container.image`\n+   * `mssql.container.image`\n+1. If using MS-SQL, add a `container-license-acceptance.txt` file to the root of your test resources directory [example file](./testing/src/test/resources/container-license-acceptance.txt). \n+   * Add the repository names of the MS-SQL Docker images your are planning to use.\n+1. Modify your JDBC url to contain the `tc:cam[DB_NAME]:[DB_VERSION]` segment. E.g. `jdbc:tc:campostgresql:13.2:///process-engine` \n+   More details [here](https://www.testcontainers.org/modules/databases/jdbc/).\n\\ No newline at end of file"
  },
  {
    "sha": "12643406623b65858bf992f65d922bbf60f3c5d7",
    "filename": "testing/pom.xml",
    "status": "modified",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/pom.xml",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/pom.xml",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/pom.xml?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -28,6 +28,37 @@\n       <artifactId>junit</artifactId>\n     </dependency>\n \n+    <!-- TestContainers dependencies -->\n+    <dependency>\n+      <groupId>org.testcontainers</groupId>\n+      <artifactId>testcontainers</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.testcontainers</groupId>\n+      <artifactId>mysql</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.testcontainers</groupId>\n+      <artifactId>mariadb</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.testcontainers</groupId>\n+      <artifactId>postgresql</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.testcontainers</groupId>\n+      <artifactId>mssqlserver</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.testcontainers</groupId>\n+      <artifactId>cockroachdb</artifactId>\n+    </dependency>\n+\n     <!-- TEST -->\n     <dependency>\n       <groupId>org.camunda.commons</groupId>\n@@ -41,5 +72,26 @@\n       <scope>test</scope>\n     </dependency>\n \n+    <dependency>\n+      <groupId>org.postgresql</groupId>\n+      <artifactId>postgresql</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.mariadb.jdbc</groupId>\n+      <artifactId>mariadb-java-client</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>mysql</groupId>\n+      <artifactId>mysql-connector-java</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.microsoft.sqlserver</groupId>\n+      <artifactId>mssql-jdbc</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n   </dependencies>\n </project>"
  },
  {
    "sha": "aeb982fd29890fb54e96066576c535a2f12f6544",
    "filename": "testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaCockroachDBContainerProvider.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaCockroachDBContainerProvider.java",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaCockroachDBContainerProvider.java",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaCockroachDBContainerProvider.java?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.commons.testing.testcontainers;\n+\n+import org.testcontainers.containers.CockroachContainer;\n+import org.testcontainers.containers.CockroachContainerProvider;\n+import org.testcontainers.containers.JdbcDatabaseContainer;\n+import org.testcontainers.utility.DockerImageName;\n+\n+public class CamundaCockroachDBContainerProvider extends CockroachContainerProvider {\n+\n+  private static final String NAME = \"camcockroachdb\";\n+\n+  @Override\n+  public boolean supports(String databaseType) {\n+    return NAME.equals(databaseType);\n+  }\n+\n+  @Override\n+  public JdbcDatabaseContainer newInstance(String tag) {\n+    DockerImageName dockerImageName = TestcontainersHelper\n+      .resolveDockerImageName(\"cockroachdb\", tag, \"cockroachdb/cockroach\");\n+    return new CockroachContainer(dockerImageName);\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "5270bd7b8a7d91e72acbd20a80400a414bbb91ef",
    "filename": "testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMSSQLContainerProvider.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMSSQLContainerProvider.java",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMSSQLContainerProvider.java",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMSSQLContainerProvider.java?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.commons.testing.testcontainers;\n+\n+import org.testcontainers.containers.JdbcDatabaseContainer;\n+import org.testcontainers.containers.MSSQLServerContainer;\n+import org.testcontainers.containers.MSSQLServerContainerProvider;\n+import org.testcontainers.utility.DockerImageName;\n+\n+public class CamundaMSSQLContainerProvider extends MSSQLServerContainerProvider {\n+\n+  private static final String NAME = \"camsqlserver\";\n+\n+  @Override\n+  public boolean supports(String databaseType) {\n+    return NAME.equals(databaseType);\n+  }\n+\n+  @Override\n+  public JdbcDatabaseContainer newInstance(String tag) {\n+    DockerImageName dockerImageName = TestcontainersHelper\n+      .resolveDockerImageName(\"mssql\", tag, \"mcr.microsoft.com/mssql/server\");\n+    return new MSSQLServerContainer(dockerImageName);\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "7f8e1b1a3539fec307a11e86bc0cd5533e90f4dd",
    "filename": "testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMariaDBContainerProvider.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMariaDBContainerProvider.java",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMariaDBContainerProvider.java",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMariaDBContainerProvider.java?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.commons.testing.testcontainers;\n+\n+import org.testcontainers.containers.JdbcDatabaseContainer;\n+import org.testcontainers.containers.MariaDBContainer;\n+import org.testcontainers.containers.MariaDBContainerProvider;\n+import org.testcontainers.utility.DockerImageName;\n+\n+public class CamundaMariaDBContainerProvider extends MariaDBContainerProvider {\n+\n+  private static final String NAME = \"cammariadb\";\n+\n+  @Override\n+  public boolean supports(String databaseType) {\n+    return NAME.equals(databaseType);\n+  }\n+\n+  @Override\n+  public JdbcDatabaseContainer newInstance(String tag) {\n+    DockerImageName dockerImageName = TestcontainersHelper\n+      .resolveDockerImageName(\"mariadb\", tag, \"mariadb\");\n+    return new MariaDBContainer(dockerImageName);\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "190a858544dc8ad04de610bd3bd20d2ca21ecc71",
    "filename": "testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMySqlContainerProvider.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMySqlContainerProvider.java",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMySqlContainerProvider.java",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaMySqlContainerProvider.java?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.commons.testing.testcontainers;\n+\n+import org.testcontainers.containers.JdbcDatabaseContainer;\n+import org.testcontainers.containers.MySQLContainer;\n+import org.testcontainers.containers.MySQLContainerProvider;\n+import org.testcontainers.utility.DockerImageName;\n+\n+public class CamundaMySqlContainerProvider extends MySQLContainerProvider {\n+\n+  private static final String NAME = \"cammysql\";\n+\n+  @Override\n+  public boolean supports(String databaseType) {\n+    return NAME.equals(databaseType);\n+  }\n+\n+  @Override\n+  public JdbcDatabaseContainer newInstance(String tag) {\n+    DockerImageName dockerImageName = TestcontainersHelper\n+      .resolveDockerImageName(\"mysql\", tag, \"mysql\");\n+    return new MySQLContainer(dockerImageName);\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "5a21f0d61dcbddc3f96a4e42fdef86a64e8120c1",
    "filename": "testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaPostgreSQLContainerProvider.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaPostgreSQLContainerProvider.java",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaPostgreSQLContainerProvider.java",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/src/main/java/org/camunda/commons/testing/testcontainers/CamundaPostgreSQLContainerProvider.java?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.commons.testing.testcontainers;\n+\n+import org.testcontainers.containers.JdbcDatabaseContainer;\n+import org.testcontainers.containers.PostgreSQLContainer;\n+import org.testcontainers.containers.PostgreSQLContainerProvider;\n+import org.testcontainers.utility.DockerImageName;\n+\n+public class CamundaPostgreSQLContainerProvider extends PostgreSQLContainerProvider {\n+\n+  protected static final String NAME = \"campostgresql\";\n+\n+  @Override\n+  public boolean supports(String databaseType) {\n+    return NAME.equals(databaseType);\n+  }\n+\n+  @Override\n+  public JdbcDatabaseContainer newInstance(String tag) {\n+    DockerImageName dockerImageName = TestcontainersHelper\n+      .resolveDockerImageName(\"postgresql\", tag, \"postgres\");\n+    return new PostgreSQLContainer(dockerImageName);\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "15db465769845ff2326d2b4dfbfdc1a4e63e7d4f",
    "filename": "testing/src/main/java/org/camunda/commons/testing/testcontainers/TestcontainersHelper.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/TestcontainersHelper.java",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/java/org/camunda/commons/testing/testcontainers/TestcontainersHelper.java",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/src/main/java/org/camunda/commons/testing/testcontainers/TestcontainersHelper.java?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.commons.testing.testcontainers;\n+\n+import org.testcontainers.shaded.org.apache.commons.lang.StringUtils;\n+import org.testcontainers.utility.DockerImageName;\n+import org.testcontainers.utility.TestcontainersConfiguration;\n+\n+public class TestcontainersHelper {\n+\n+  public static String resolveImageName(String imageProperty, String defaultImage) {\n+    String image = TestcontainersConfiguration.getInstance().getEnvVarOrProperty(imageProperty, defaultImage);\n+    if (image == null) {\n+      throw new IllegalStateException(\"An image to use for Oracle containers must be configured. \" +\n+          \"To do this, please place a file on the classpath named `testcontainers.properties`, \" +\n+          \"containing `\" + imageProperty + \"=IMAGE`, where IMAGE is a suitable image name and tag.\");\n+    } else {\n+      return image;\n+    }\n+  }\n+\n+  public static DockerImageName resolveDockerImageName(String dbLabel, String tag, String defaultDbImage) {\n+    String imageProperty = dbLabel + \".container.image\";\n+    String dockerImageString = resolveImageName(imageProperty, defaultDbImage) + \":\" + tag;\n+    return DockerImageName.parse(dockerImageString).asCompatibleSubstituteFor(defaultDbImage);\n+  }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "58f2e908a7546cf6486679b6fe93a1ddc99d46a5",
    "filename": "testing/src/main/resources/META-INF/services/org.testcontainers.containers.JdbcDatabaseContainerProvider",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/resources/META-INF/services/org.testcontainers.containers.JdbcDatabaseContainerProvider",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/main/resources/META-INF/services/org.testcontainers.containers.JdbcDatabaseContainerProvider",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/src/main/resources/META-INF/services/org.testcontainers.containers.JdbcDatabaseContainerProvider?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -0,0 +1,5 @@\n+org.camunda.commons.testing.testcontainers.CamundaPostgreSQLContainerProvider\n+org.camunda.commons.testing.testcontainers.CamundaMariaDBContainerProvider\n+org.camunda.commons.testing.testcontainers.CamundaMySqlContainerProvider\n+org.camunda.commons.testing.testcontainers.CamundaCockroachDBContainerProvider\n+org.camunda.commons.testing.testcontainers.CamundaMSSQLContainerProvider\n\\ No newline at end of file"
  },
  {
    "sha": "d42f9e43fc6970e812efc30eda5ce52372b0b2c9",
    "filename": "testing/src/test/java/org/camunda/commons/testcontainers/DatabaseContainerProviderTest.java",
    "status": "added",
    "additions": 91,
    "deletions": 0,
    "changes": 91,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/test/java/org/camunda/commons/testcontainers/DatabaseContainerProviderTest.java",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/test/java/org/camunda/commons/testcontainers/DatabaseContainerProviderTest.java",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/src/test/java/org/camunda/commons/testcontainers/DatabaseContainerProviderTest.java?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.commons.testcontainers;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.fail;\n+\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.text.ParseException;\n+import java.util.Arrays;\n+import java.util.Collection;\n+\n+import org.junit.Ignore;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+/**\n+ * This test should not be run on our CI, as it requires a Docker-in-Docker image to runs successfully.\n+ */\n+@Ignore\n+@RunWith(Parameterized.class)\n+public class DatabaseContainerProviderTest {\n+\n+\n+  @Parameterized.Parameter(0)\n+  public String jdbcUrl;\n+  @Parameterized.Parameter(1)\n+  public String versionStatement;\n+  @Parameterized.Parameter(2)\n+  public String dbVersion;\n+\n+  @Parameterized.Parameters(name = \"Job DueDate is set: {0}\")\n+  public static Collection<Object[]> scenarios() throws ParseException {\n+    return Arrays.asList(new Object[][] {\n+      // The Camunda PostgreSQL 13.2 image is compatible with Testcontainers.\n+      // For older versions, please use the public Docker images (DockerHub repo: postgres).\n+      { \"jdbc:tc:campostgresql:13.2:///process-engine\", \"SELECT version();\", \"13.2\" },\n+      // The current Camunda MariaDB images are compatible with Testcontainers.\n+      // The username and password need to be explicitly declared.\n+      { \"jdbc:tc:cammariadb:10.0://localhost:3306/process-engine?user=camunda&password=camunda\", \"SELECT version();\", \"10.0\" },\n+      // The current Camunda MySQL images are compatible with Testcontainers.\n+      // The username and password need to be explicitly declared.\n+      { \"jdbc:tc:cammysql:5.7://localhost:3306/process-engine?user=camunda&password=camunda\", \"SELECT version();\", \"5.7\" },\n+      { \"jdbc:tc:cammysql:8.0://localhost:3306/process-engine?user=camunda&password=camunda\", \"SELECT version();\", \"8.0\" },\n+      // The current Camunda CockroachDB images are compatible with Testcontainers.\n+      { \"jdbc:tc:camcockroachdb:20.1.3://localhost/process-engine?user=camunda&password=camunda\", \"SELECT version();\", \"20.1.3\" },\n+      // The current Camunda SqlServer 2017/2019 images are compatible with Testcontainers.\n+      { \"jdbc:tc:camsqlserver:2017:///process-engine\", \"SELECT @@VERSION\", \"2017\" },\n+      { \"jdbc:tc:camsqlserver:2019:///process-engine\", \"SELECT @@VERSION\", \"2019\" },\n+      // The current Camunda DB2 images are not compatible with Testcontainers.\n+//      { \"jdbc:tc:camdb2:11.1:///engine?user=camunda&password=camunda\", \"SELECT * FROM SYSIBMADM.ENV_INST_INFO;\", \"11.1\"},\n+      // The current Camunda Oracle images are not compatible with Testcontainers.\n+//      { \"jdbc:tc:camoracle:thin:@localhost:1521:xe?user=camunda&password=camunda\", \"SELECT * FROM v$version;\", \"18\" }\n+    });\n+  }\n+\n+  @Test\n+  public void testJdbcTestcontainersUrl() {\n+    // when\n+    try (Connection connection = DriverManager.getConnection(jdbcUrl)) {\n+      connection.setAutoCommit(false);\n+      ResultSet rs = connection.prepareStatement(versionStatement).executeQuery();\n+      if (rs.next()) {\n+        // then\n+        String version = rs.getString(1);\n+        assertThat(version).contains(dbVersion);\n+      }\n+    } catch (SQLException throwables) {\n+      fail(\"Testcontainers failed to spin up a Docker container: \" + throwables.getMessage());\n+    }\n+  }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a2904b8e4c1bfe7dbd76230dc75c5afc43fb958f",
    "filename": "testing/src/test/resources/container-license-acceptance.txt",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/test/resources/container-license-acceptance.txt",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/test/resources/container-license-acceptance.txt",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/src/test/resources/container-license-acceptance.txt?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -0,0 +1,2 @@\n+registry.camunda.cloud/team-cambpm/camunda-ci-sqlserver:2017\n+registry.camunda.cloud/team-cambpm/camunda-ci-sqlserver:2019\n\\ No newline at end of file"
  },
  {
    "sha": "8167d46cb630b509a77e485bd256f8db3a6f6579",
    "filename": "testing/src/test/resources/logback-test.xml",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/test/resources/logback-test.xml",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/test/resources/logback-test.xml",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/src/test/resources/logback-test.xml?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -0,0 +1,15 @@\n+<configuration>\n+\n+  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n+    <!-- encoders are assigned the type\n+         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->\n+    <encoder>\n+      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\n+    </encoder>\n+  </appender>\n+\n+  <root level=\"info\">\n+    <appender-ref ref=\"STDOUT\" />\n+  </root>\n+\n+</configuration>"
  },
  {
    "sha": "df7abf2ac8a78d6a5909b23ecec2d37395f6ec2e",
    "filename": "testing/src/test/resources/testcontainers.properties",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/camunda/camunda-commons/blob/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/test/resources/testcontainers.properties",
    "raw_url": "https://github.com/camunda/camunda-commons/raw/8a4cb1f410011a4476c2cc352a98a44c91074f9a/testing/src/test/resources/testcontainers.properties",
    "contents_url": "https://api.github.com/repos/camunda/camunda-commons/contents/testing/src/test/resources/testcontainers.properties?ref=8a4cb1f410011a4476c2cc352a98a44c91074f9a",
    "patch": "@@ -0,0 +1,7 @@\n+mssql.container.image=registry.camunda.cloud/team-cambpm/camunda-ci-sqlserver\n+postgresql.container.image=registry.camunda.cloud/team-cambpm/camunda-ci-postgresql\n+mariadb.container.image=registry.camunda.cloud/team-cambpm/camunda-ci-mariadb\n+mysql.container.image=registry.camunda.cloud/team-cambpm/camunda-ci-mysql\n+cockroachdb.container.image=registry.camunda.cloud/team-cambpm/camunda-ci-cockroachdb\n+db2.container.image=registry.camunda.cloud/team-cambpm/camunda-ci-db2\n+oracle.container.image=registry.camunda.cloud/team-cambpm/camunda-ci-oracle:18"
  }
]
