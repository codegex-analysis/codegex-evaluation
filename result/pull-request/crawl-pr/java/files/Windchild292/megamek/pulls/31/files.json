[
  {
    "sha": "b6a034c2cab3ef5d9a5664517d64a700318d6386",
    "filename": "megamek/src/megamek/common/Aero.java",
    "status": "modified",
    "additions": 9,
    "deletions": 14,
    "changes": 23,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Aero.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Aero.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/Aero.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -27,6 +27,7 @@\n import java.util.Vector;\n \n import megamek.MegaMek;\n+import megamek.common.enums.ReportType;\n import megamek.common.options.OptionsConstants;\n import megamek.common.weapons.bayweapons.BayWeapon;\n import megamek.common.weapons.ppc.PPCWeapon;\n@@ -2706,10 +2707,9 @@ public PilotingRollData addEntityBonuses(PilotingRollData prd) {\n \n     @Override\n     public Vector<Report> victoryReport() {\n-        Vector<Report> vDesc = new Vector<Report>();\n+        Vector<Report> vDesc = new Vector<>();\n \n-        Report r = new Report(7025);\n-        r.type = Report.PUBLIC;\n+        Report r = new Report(7025, ReportType.PUBLIC);\n         r.addDesc(this);\n         vDesc.addElement(r);\n \n@@ -2721,32 +2721,27 @@ public PilotingRollData addEntityBonuses(PilotingRollData prd) {\n         } else {\n             r = new Report(7030);\n         }\n-        r.type = Report.PUBLIC;\n+        r.setType(ReportType.PUBLIC);\n         r.newlines = 0;\n         vDesc.addElement(r);\n         vDesc.addAll(getCrew().getDescVector(false));\n-        r = new Report(7070, Report.PUBLIC);\n-        r.add(getKillNumber());\n-        vDesc.addElement(r);\n+        vDesc.addElement(new Report(7070, ReportType.PUBLIC, getKillNumber()));\n \n         if (isDestroyed()) {\n             Entity killer = game.getEntity(killerId);\n             if (killer == null) {\n                 killer = game.getOutOfGameEntity(killerId);\n             }\n             if (killer != null) {\n-                r = new Report(7072, Report.PUBLIC);\n+                r = new Report(7072, ReportType.PUBLIC);\n                 r.addDesc(killer);\n             } else {\n-                if (this instanceof FighterSquadron) {\n-                    r = new Report(7076, Report.PUBLIC);\n-                } else {\n-                    r = new Report(7073, Report.PUBLIC);\n-                }\n+                r = new Report((this instanceof FighterSquadron) ? 7076 : 7073, ReportType.PUBLIC);\n+\n             }\n             vDesc.addElement(r);\n         } else if (getCrew().isEjected()) {\n-            r = new Report(7074, Report.PUBLIC);\n+            r = new Report(7074, ReportType.PUBLIC);\n             vDesc.addElement(r);\n         }\n         r.newlines = 2;"
  },
  {
    "sha": "4da807892b690b61c777a282f36deb0bea617401",
    "filename": "megamek/src/megamek/common/Building.java",
    "status": "modified",
    "additions": 10,
    "deletions": 9,
    "changes": 19,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Building.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Building.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/Building.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -16,6 +16,9 @@\n \n package megamek.common;\n \n+import megamek.MegaMek;\n+import megamek.common.enums.ReportType;\n+\n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Enumeration;\n@@ -454,21 +457,19 @@ public boolean getBasementCollapsed(Coords coords) {\n         return basementCollapsed.get(coords);\n     }\n \n-    public void collapseBasement(Coords coords, IBoard board,\n-            Vector<Report> vPhaseReport) {\n+    public void collapseBasement(Coords coords, IBoard board, Vector<Report> vPhaseReport) {\n         if ((basement.get(coords) == BasementType.NONE) || (basement.get(coords) == BasementType.ONE_DEEP_NORMALINFONLY)) {\n-            System.err.println(\"hex has no basement to collapse\");\n+            MegaMek.getLogger().error(\"Hex has no basement to collapse\");\n             return;\n-        }\n-        if (basementCollapsed.get(coords)) {\n-            System.err.println(\"hex has basement that already collapsed\");\n+        }  else if (basementCollapsed.get(coords)) {\n+            MegaMek.getLogger().error(\"Hex has basement that already collapsed\");\n             return;\n         }\n-        Report r = new Report(2112, Report.PUBLIC);\n+        Report r = new Report(2112, ReportType.PUBLIC);\n         r.add(getName());\n         r.add(coords.getBoardNum());\n         vPhaseReport.add(r);\n-        System.err.println(\"basement \" + basement + \"is collapsing, hex:\"\n+        MegaMek.getLogger().info(\"basement \" + basement + \"is collapsing, hex:\"\n                 + coords.toString() + \" set terrain!\");\n         board.getHex(coords).addTerrain(Terrains.getTerrainFactory().createTerrain(\n                 Terrains.BLDG_BASE_COLLAPSED, 1));\n@@ -485,7 +486,7 @@ public void collapseBasement(Coords coords, IBoard board,\n     public boolean rollBasement(Coords coords, IBoard board, Vector<Report> vPhaseReport) {\n         if (basement.get(coords) == BasementType.UNKNOWN) {\n             IHex hex = board.getHex(coords);\n-            Report r = new Report(2111, Report.PUBLIC);\n+            Report r = new Report(2111, ReportType.PUBLIC);\n             r.add(getName());\n             r.add(coords.getBoardNum());\n             int basementRoll = Compute.d6(2);"
  },
  {
    "sha": "1cfdfd9a3941dd60ca4811991f4415fcee462980",
    "filename": "megamek/src/megamek/common/Crew.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Crew.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Crew.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/Crew.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -25,6 +25,7 @@\n \n import megamek.client.generator.RandomGenderGenerator;\n import megamek.common.enums.Gender;\n+import megamek.common.enums.ReportType;\n import megamek.common.icons.AbstractIcon;\n import megamek.common.icons.Portrait;\n import megamek.common.options.IOption;\n@@ -934,8 +935,7 @@ public String getDesc(int pos) {\n             if (missing[i]) {\n                 continue;\n             }\n-            r = new Report();\n-            r.type = Report.PUBLIC;\n+            r = new Report(ReportType.PUBLIC);\n             r.add(name[i]);\n             if (getSlotCount() > 1) {\n                 r.add(\" (\" + crewType.getRoleName(i) + \")\");\n@@ -950,8 +950,7 @@ public String getDesc(int pos) {\n             }\n \n             if ((hits[i] > 0) || isUnconscious(i) || isDead(i)) {\n-                Report r2 = new Report();\n-                r2.type = Report.PUBLIC;\n+                Report r2 = new Report(ReportType.PUBLIC);\n                 if (hits[i] > 0) {\n                     r2.messageId = 7055;\n                     r2.add(hits[i]);"
  },
  {
    "sha": "1488606ac54c86f9b03c9fbe4c53c0d245e26e1e",
    "filename": "megamek/src/megamek/common/GunEmplacement.java",
    "status": "modified",
    "additions": 7,
    "deletions": 10,
    "changes": 17,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/GunEmplacement.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/GunEmplacement.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/GunEmplacement.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -17,6 +17,7 @@\n import java.util.Vector;\n \n import megamek.MegaMek;\n+import megamek.common.enums.ReportType;\n \n /**\n  * A building with weapons fitted and, optionally, a turret.\n@@ -335,34 +336,30 @@ public PilotingRollData addEntityBonuses(PilotingRollData prd) {\n     public Vector<Report> victoryReport() {\n         Vector<Report> vDesc = new Vector<>();\n \n-        Report r = new Report(7025);\n-        r.type = Report.PUBLIC;\n+        Report r = new Report(7025, ReportType.PUBLIC);\n         r.addDesc(this);\n         vDesc.addElement(r);\n \n-        r = new Report(7035);\n-        r.type = Report.PUBLIC;\n+        r = new Report(7035, ReportType.PUBLIC);\n         r.newlines = 0;\n         vDesc.addElement(r);\n         vDesc.addAll(getCrew().getDescVector(false));\n-        r = new Report(7070, Report.PUBLIC);\n-        r.add(getKillNumber());\n-        vDesc.addElement(r);\n+        vDesc.addElement(new Report(7070, ReportType.PUBLIC, getKillNumber()));\n \n         if (isDestroyed()) {\n             Entity killer = game.getEntity(killerId);\n             if (killer == null) {\n                 killer = game.getOutOfGameEntity(killerId);\n             }\n             if (killer != null) {\n-                r = new Report(7072, Report.PUBLIC);\n+                r = new Report(7072, ReportType.PUBLIC);\n                 r.addDesc(killer);\n             } else {\n-                r = new Report(7073, Report.PUBLIC);\n+                r = new Report(7073, ReportType.PUBLIC);\n             }\n             vDesc.addElement(r);\n         } else if (getCrew().isEjected()) {\n-            r = new Report(7071, Report.PUBLIC);\n+            r = new Report(7071, ReportType.PUBLIC);\n             vDesc.addElement(r);\n         }\n         r.newlines = 2;"
  },
  {
    "sha": "81fb4df18a431360533656959b097089d38f074b",
    "filename": "megamek/src/megamek/common/Infantry.java",
    "status": "modified",
    "additions": 7,
    "deletions": 11,
    "changes": 18,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Infantry.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Infantry.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/Infantry.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -27,6 +27,7 @@\n import java.util.stream.Collectors;\n \n import megamek.MegaMek;\n+import megamek.common.enums.ReportType;\n import megamek.common.options.OptionsConstants;\n import megamek.common.preference.PreferenceManager;\n import megamek.common.weapons.infantry.InfantryWeapon;\n@@ -1386,33 +1387,28 @@ public int calculateBattleValue(boolean ignoreC3, boolean ignorePilot) {\n \n     @Override\n     public Vector<Report> victoryReport() {\n-        Vector<Report> vDesc = new Vector<Report>();\n+        Vector<Report> vDesc = new Vector<>();\n \n-        Report r = new Report(7025);\n-        r.type = Report.PUBLIC;\n+        Report r = new Report(7025, ReportType.PUBLIC);\n         r.addDesc(this);\n         vDesc.addElement(r);\n \n-        r = new Report(7041);\n-        r.type = Report.PUBLIC;\n-        r.add(getCrew().getGunnery());\n+        r = new Report(7041, ReportType.PUBLIC, getCrew().getGunnery());\n         r.newlines = 0;\n         vDesc.addElement(r);\n \n-        r = new Report(7070, Report.PUBLIC);\n-        r.add(getKillNumber());\n-        vDesc.addElement(r);\n+        vDesc.addElement(new Report(7070, ReportType.PUBLIC, getKillNumber()));\n \n         if (isDestroyed()) {\n             Entity killer = game.getEntity(killerId);\n             if (killer == null) {\n                 killer = game.getOutOfGameEntity(killerId);\n             }\n             if (killer != null) {\n-                r = new Report(7072, Report.PUBLIC);\n+                r = new Report(7072, ReportType.PUBLIC);\n                 r.addDesc(killer);\n             } else {\n-                r = new Report(7073, Report.PUBLIC);\n+                r = new Report(7073, ReportType.PUBLIC);\n             }\n             vDesc.addElement(r);\n         }"
  },
  {
    "sha": "0159452e7fdcf1f0758b60968c92b2110c2c30aa",
    "filename": "megamek/src/megamek/common/LAMPilot.java",
    "status": "modified",
    "additions": 3,
    "deletions": 6,
    "changes": 9,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/LAMPilot.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/LAMPilot.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/LAMPilot.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -20,6 +20,7 @@\n import java.util.Map;\n import java.util.Vector;\n \n+import megamek.common.enums.ReportType;\n import megamek.common.util.CrewSkillSummaryUtil;\n \n /**\n@@ -273,19 +274,15 @@ public String getSkillsAsString(int pos, boolean showPiloting, boolean rpgSkills\n         Vector<Report> vDesc = new Vector<>();\n         Report r;\n \n-        r = new Report();\n-        r.type = Report.PUBLIC;\n-        r.add(getName(0));\n+        r = new Report(7045, ReportType.PUBLIC, getName(0));\n         if (getSlotCount() > 1) {\n             r.add(\" (\" + getCrewType().getRoleName(0) + \")\");\n         }\n-        r.messageId = 7045;\n         r.add(getGunneryMech() + \"/\" + getGunneryAero());\n         r.add(getPilotingMech() + \"/\" + getPilotingAero());\n \n         if (getHits(0) > 0 || isUnconscious(0) || isDead(0)) {\n-            Report r2 = new Report();\n-            r2.type = Report.PUBLIC;\n+            Report r2 = new Report(ReportType.PUBLIC);\n             if (getHits(0) > 0) {\n                 r2.messageId = 7055;\n                 r2.add(getHits(0));"
  },
  {
    "sha": "ab8e01408d831c8ad37224cffa899db91b5389a3",
    "filename": "megamek/src/megamek/common/Mech.java",
    "status": "modified",
    "additions": 9,
    "deletions": 12,
    "changes": 21,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Mech.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Mech.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/Mech.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -22,6 +22,7 @@\n import java.util.*;\n \n import megamek.MegaMek;\n+import megamek.common.enums.ReportType;\n import megamek.common.loaders.MtfFile;\n import megamek.common.options.OptionsConstants;\n import megamek.common.preference.PreferenceManager;\n@@ -5612,36 +5613,32 @@ protected double getActuatorCost() {\n \n     @Override\n     public Vector<Report> victoryReport() {\n-        Vector<Report> vDesc = new Vector<Report>();\n+        Vector<Report> vDesc = new Vector<>();\n \n-        Report r = new Report(7025);\n-        r.type = Report.PUBLIC;\n+        Report r = new Report(7025, ReportType.PUBLIC);\n         r.addDesc(this);\n         vDesc.addElement(r);\n \n-        r = new Report(7030);\n-        r.type = Report.PUBLIC;\n+        r = new Report(7030, ReportType.PUBLIC);\n         r.newlines = 0;\n         vDesc.addElement(r);\n         vDesc.addAll(getCrew().getDescVector(false));\n-        r = new Report(7070, Report.PUBLIC);\n-        r.add(getKillNumber());\n-        vDesc.addElement(r);\n+        vDesc.addElement(new Report(7070, ReportType.PUBLIC, getKillNumber()));\n \n         if (isDestroyed()) {\n             Entity killer = game.getEntity(killerId);\n             if (killer == null) {\n                 killer = game.getOutOfGameEntity(killerId);\n             }\n             if (killer != null) {\n-                r = new Report(7072, Report.PUBLIC);\n+                r = new Report(7072, ReportType.PUBLIC);\n                 r.addDesc(killer);\n             } else {\n-                r = new Report(7073, Report.PUBLIC);\n+                r = new Report(7073, ReportType.PUBLIC);\n             }\n             vDesc.addElement(r);\n-        } else if (getCrew().isEjected()){\n-            r = new Report(7074, Report.PUBLIC);\n+        } else if (getCrew().isEjected()) {\n+            r = new Report(7074, ReportType.PUBLIC);\n             vDesc.addElement(r);\n         }\n         r.newlines = 2;"
  },
  {
    "sha": "5a893370277b758b26b69f76d2191a2c8ea368f5",
    "filename": "megamek/src/megamek/common/Protomech.java",
    "status": "modified",
    "additions": 7,
    "deletions": 10,
    "changes": 17,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Protomech.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Protomech.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/Protomech.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -18,6 +18,7 @@\n import java.util.*;\n import java.util.stream.Collectors;\n \n+import megamek.common.enums.ReportType;\n import megamek.common.preference.PreferenceManager;\n \n /**\n@@ -1726,32 +1727,28 @@ public int calculateBattleValue(boolean ignoreC3, boolean ignorePilot) {\n \n     @Override\n     public Vector<Report> victoryReport() {\n-        Vector<Report> vDesc = new Vector<Report>();\n+        Vector<Report> vDesc = new Vector<>();\n \n-        Report r = new Report(7025);\n-        r.type = Report.PUBLIC;\n+        Report r = new Report(7025, ReportType.PUBLIC);\n         r.addDesc(this);\n         vDesc.addElement(r);\n \n-        r = new Report(7030);\n-        r.type = Report.PUBLIC;\n+        r = new Report(7030, ReportType.PUBLIC);\n         r.newlines = 0;\n         vDesc.addElement(r);\n         vDesc.addAll(getCrew().getDescVector(true));\n-        r = new Report(7070, Report.PUBLIC);\n-        r.add(getKillNumber());\n-        vDesc.addElement(r);\n+        vDesc.addElement(new Report(7070, ReportType.PUBLIC, getKillNumber()));\n \n         if (isDestroyed()) {\n             Entity killer = game.getEntity(killerId);\n             if (killer == null) {\n                 killer = game.getOutOfGameEntity(killerId);\n             }\n             if (killer != null) {\n-                r = new Report(7072, Report.PUBLIC);\n+                r = new Report(7072, ReportType.PUBLIC);\n                 r.addDesc(killer);\n             } else {\n-                r = new Report(7073, Report.PUBLIC);\n+                r = new Report(7073, ReportType.PUBLIC);\n             }\n             vDesc.addElement(r);\n         }"
  },
  {
    "sha": "d8dbe1eef3b509585aed37b5107f805bfc804f3b",
    "filename": "megamek/src/megamek/common/Report.java",
    "status": "modified",
    "additions": 335,
    "deletions": 311,
    "changes": 646,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Report.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Report.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/Report.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -1,6 +1,7 @@\n /*\n  * MegaMek -\n  * Copyright (C) 2000,2001,2002,2003,2004,2005 Ben Mazur (bmazur@sev.org)\n+ * Copyright (c) 2021 - The MegaMek Team. All Rights Reserved.\n  *\n  * This program is free software; you can redistribute it and/or modify it\n  * under the terms of the GNU General Public License as published by the Free\n@@ -14,9 +15,14 @@\n  */\n package megamek.common;\n \n+import megamek.MegaMek;\n+import megamek.common.annotations.Nullable;\n+import megamek.common.constants.MMConstants;\n+import megamek.common.enums.ReportType;\n+\n import java.io.Serializable;\n-import java.util.Enumeration;\n import java.util.Hashtable;\n+import java.util.Map;\n import java.util.Vector;\n \n /**\n@@ -54,237 +60,375 @@\n  * <code>getText</code> method was called:\n  * <p> \" Crusader (Bob) does 6 damage to the tank.\"\n  *\n+ * Note: some fields are marked transient because they are only used by the\n+ * server (or only the client). This shaves a few bytes off the packet size,\n+ * helping the dial-up people :)\n+ *\n  * @author Ryan McConnell (oscarmm)\n- * @version $Revision$\n- * @since 0.30\n  */\n public class Report implements Serializable {\n-    /*\n-     * Note: some fields are marked transient because they are only used by the\n-     * server (or only the client). This shaves a few bytes off the packet size,\n-     * helping the dial-up people :)\n-     */\n-\n+    //region Variable Declarations\n     private static final long serialVersionUID = -5586008091586682078L;\n-        \n-    private static final int MESSAGE_NONE = -1;\n-    \n-    /** Report Type: visible to all players. */\n-    public static final int PUBLIC = 0;\n-    \n-    /**\n-     * Report Type: visible to all players, but all data marked for obscuration\n-     * remains hidden. Note: Not used at this time, since all reports are\n-     * considered <code>obscured</code> unless explicitly marked\n-     * <code>public</code>.\n-     */\n-    public static final int OBSCURED = 1;\n-    \n-    /**\n-     * Report is only visible to those players who can see the subject. Note:\n-     * Not used at this time, since all reports are considered\n-     * <code>obscured</code> unless explicitly marked <code>public</code>.\n-     */\n-    public static final int HIDDEN = 2;\n-    \n-    /** Testing only - remove me later. */\n-    public static final int TESTING = 3;\n-    \n-    /**\n-     * Messages which should be sent only to the player indicated by \"player\"\n-     */\n-    public static final int PLAYER = 4;\n \n+    //region Constants\n     /**\n      * The string that appears in the report to obscure certain information.\n      */\n     public static final String OBSCURED_STRING = \"????\";\n \n     /** Number of spaces to use per indentation level. */\n     private static final int DEFAULT_INDENTATION = 4;\n-    \n+    //endregion Constants\n+\n     /** Required - associates this object with its text. */\n-    public int messageId = Report.MESSAGE_NONE;\n-    \n+    public int messageId;\n+\n     /** The number of spaces this report should be indented. */\n-    private int indentation = 0;\n+    private int indentation;\n \n     /**\n      * The number of newlines to add at the end of this report. Defaults to one.\n      */\n-    public int newlines = 1;\n+    public int newlines;\n \n     /** The data values to fill in the report with. */\n-    private Vector<String> tagData = new Vector<String>();\n+    private Vector<String> tagData;\n \n     /** How to translate the tagData or not at all. */\n-    private String tagTranslate = null;\n+    private String tagTranslate;\n \n     /**\n      * How this report is handled when double-blind play is in effect. See\n-     * constants below for more details.\n+     * constants above for more details.\n      */\n-    public transient int type = Report.HIDDEN;\n+    private transient ReportType type;\n \n     /**\n      * The entity this report concerns, if applicable. If this is left blank,\n      * then the report will be considered <code>public</code>.\n      */\n-    public transient int subject = Entity.NONE;\n-    \n+    public transient int subject;\n+\n     /**\n      * The player this report concerns, if applicable. This should be filled in\n      * if this report is not public and still does not belong to a specific\n      * visible entity\n      */\n-    public transient int player = IPlayer.PLAYER_NONE;\n+    private transient int player;\n \n     /**\n      * This hash table will store the tagData Vector indexes that are supposed\n      * to be obscured before sending to clients. This only applies when the\n      * report type is \"obscured\".\n      */\n-    private Hashtable<Integer, Boolean> obscuredIndexes = \n-            new Hashtable<Integer, Boolean>();\n+    private Map<Integer, Boolean> obscuredIndexes;\n \n     /**\n      * Vector to store the player names of those who received an obscured\n      * version of this report. Used to reconstruct individual client's reports\n      * from the master copy stored by the server.\n      */\n-    private Vector<String> obscuredRecipients = new Vector<String>();\n+    private Vector<String> obscuredRecipients;\n \n     /** Keep track of what data we have already substituted for tags. */\n-    private transient int tagCounter = 0;\n+    private transient int tagCounter;\n \n     /** bool for determining when code should be used to show image. */\n-    private transient boolean showImage = false;\n+    private transient boolean showImage;\n \n     /** string to add to reports to show sprites **/\n-    private String imageCode = \"\";\n+    private String imageCode;\n+    //endregion Variable Declarations\n \n+    //region Constructors\n     /**\n-     * Default constructor, note that using this means the\n-     * <code>messageId</code> field must be explicitly set.\n+     * Default constructor, note that using this means the <code>messageId</code> field must be\n+     * explicitly set.\n      */\n     public Report() {\n+        this(-1);\n     }\n \n-    /**\n-     * Create a new report associated with the given report text.\n-     *\n-     * @param id the int value of the report from <i>report-messages.properties\n-     * </i>\n-     */\n-    public Report(int id) {\n-        messageId = id;\n+    public Report(final int id) {\n+        this(id, ReportType.HIDDEN);\n     }\n \n-    /**\n-     * Create a new report associated with the given report text and having the\n-     * given type.\n-     *\n-     * @param id the int value of the report from <i>report-messages.properties\n-     *  </i>\n-     * @param type the constant specifying the visibility of the report (PUBLIC,\n-     *            OBSCURED, or HIDDEN)\n-     */\n-    public Report(int id, int type) {\n-        messageId = id;\n-        this.type = type;\n+    public Report(final ReportType type) {\n+        this(-1, type);\n+    }\n+\n+    public Report(final int id, final ReportType type) {\n+        this(id, Entity.NONE, type);\n+    }\n+\n+    public Report(final int id, final int subject) {\n+        this(id, subject, ReportType.HIDDEN);\n+    }\n+\n+    public Report(final int id, final int subject, final ReportType type) {\n+        this(id, subject, 1, type);\n+    }\n+\n+    public Report(final int id, final int subject, final int newlines) {\n+        this(id, subject, newlines, ReportType.HIDDEN);\n+    }\n+\n+    //region int... data\n+    public Report(final int id, final ReportType type, final int... data) {\n+        this(id, type, true, data);\n+    }\n+\n+    public Report(final int id, final ReportType type, final boolean obscure, final int... data) {\n+        this(id, Entity.NONE, type, obscure, data);\n+    }\n+\n+    public Report(final int id, final int subject, final ReportType type, final int... data) {\n+        this(id, subject, type, true, data);\n+    }\n+\n+    public Report(final int id, final int subject, final ReportType type, final boolean obscure,\n+                  final int... data) {\n+        this(id, subject, 1, type, obscure, data);\n+    }\n+\n+    public Report(final int id, final int subject, final int newlines, final ReportType type,\n+                  final int... data) {\n+        this(id, subject, newlines, type, true, data);\n+    }\n+\n+    public Report(final int id, final int subject, final int newlines, final ReportType type,\n+                  final boolean obscure, final int... data) {\n+        this(id, subject, newlines, type);\n+        add(obscure, data);\n+    }\n+    //endregion int... data\n+\n+    //region String... data\n+    public Report(final int id, final String... data) {\n+        this(id, ReportType.HIDDEN, true, data);\n+    }\n+\n+    public Report(final int id, final ReportType type, final String... data) {\n+        this(id, type, true, data);\n+    }\n+\n+    public Report(final int id, final ReportType type, final boolean obscure, final String... data) {\n+        this(id, Entity.NONE, type, obscure, data);\n+    }\n+\n+    public Report(final int id, final int subject, final ReportType type, final String... data) {\n+        this(id, subject, type, true, data);\n+    }\n+\n+    public Report(final int id, final int subject, final ReportType type, final boolean obscure,\n+                  final String... data) {\n+        this(id, subject, 1, type, obscure, data);\n+    }\n+\n+    public Report(final int id, final int subject, final int newlines, final ReportType type,\n+                  final String... data) {\n+        this(id, subject, newlines, type, true, data);\n+    }\n+\n+    public Report(final int id, final int subject, final int newlines, final ReportType type,\n+                  final boolean obscure, final String... data) {\n+        this(id, subject, newlines, type);\n+        add(obscure, data);\n+    }\n+    //endregion String... data\n+\n+    public Report(final int id, final int subject, final int newlines, final ReportType type) {\n+        setMessageId(id);\n+        setIndentation(0);\n+        setNewlines(newlines);\n+        setTagData(new Vector<>());\n+        setTagTranslate(null);\n+        setType(type);\n+        setSubject(subject);\n+        setPlayer(IPlayer.PLAYER_NONE);\n+        setObscuredIndexes(new Hashtable<>());\n+        setObscuredRecipients(new Vector<>());\n+        setTagCounter(0);\n+        setShowImage(false);\n+        setImageCode(\"\");\n     }\n \n     /**\n      * Create a new report which is an exact copy of the given report.\n      *\n-     * @param r the report to be copied\n-     */\n-    @SuppressWarnings(\"unchecked\")\n-    public Report(Report r) {\n-        messageId = r.messageId;\n-        indentation = r.indentation;\n-        newlines = r.newlines;\n-        tagData = (Vector<String>) r.tagData.clone();\n-        tagTranslate = r.tagTranslate;\n-        type = r.type;\n-        subject = r.subject;\n-        obscuredIndexes = (Hashtable<Integer, Boolean>) r.obscuredIndexes\n-                .clone();\n-        obscuredRecipients = (Vector<String>) r.obscuredRecipients.clone();\n-        tagCounter = r.tagCounter;\n+     * @param report the report to be copied\n+     */\n+    @SuppressWarnings(value = \"unchecked\")\n+    public Report(final Report report) {\n+        setMessageId(report.getMessageId());\n+        setIndentation(report.getIndentation());\n+        setNewlines(report.getNewlines());\n+        setTagData((Vector<String>) report.getTagData().clone());\n+        setTagTranslate(report.getTagTranslate());\n+        setType(report.getType());\n+        setSubject(report.getSubject());\n+        setObscuredIndexes((Map<Integer, Boolean>) ((Hashtable<Integer, Boolean>) report.getObscuredIndexes()).clone());\n+        setObscuredRecipients((Vector<String>) report.getObscuredRecipients().clone());\n+        setTagCounter(report.getTagCounter());\n+        setShowImage(report.isShowImage());\n+        setImageCode(report.getImageCode());\n     }\n+    //endregion Constructors\n \n-    /**\n-     * Add the given int to the list of data that will be substituted for the\n-     * &lt;data&gt; tags in the report. The order in which items are added must\n-     * match the order of the tags in the report text.\n-     *\n-     * @param data the int to be substituted\n-     */\n-    public void add(int data) {\n-        add(data, true);\n+    //region Getters/Setters\n+    public int getMessageId() {\n+        return messageId;\n+    }\n+\n+    public void setMessageId(final int messageId) {\n+        this.messageId = messageId;\n+    }\n+\n+    public int getIndentation() {\n+        return indentation;\n+    }\n+\n+    public void setIndentation(final int indentation) {\n+        this.indentation = indentation;\n+    }\n+\n+    public int getNewlines() {\n+        return newlines;\n+    }\n+\n+    public void setNewlines(final int newlines) {\n+        this.newlines = newlines;\n+    }\n+\n+    public Vector<String> getTagData() {\n+        return tagData;\n+    }\n+\n+    public void setTagData(final Vector<String> tagData) {\n+        this.tagData = tagData;\n+    }\n+\n+    public String getTagTranslate() {\n+        return tagTranslate;\n+    }\n+\n+    public void setTagTranslate(final String tagTranslate) {\n+        this.tagTranslate = tagTranslate;\n+    }\n+\n+    public ReportType getType() {\n+        return type;\n+    }\n+\n+    public void setType(final ReportType type) {\n+        this.type = type;\n+    }\n+\n+    public int getSubject() {\n+        return subject;\n+    }\n+\n+    public void setSubject(final int subject) {\n+        this.subject = subject;\n+    }\n+\n+    public int getPlayer() {\n+        return player;\n+    }\n+\n+    public void setPlayer(final int player) {\n+        this.player = player;\n+    }\n+\n+    public Map<Integer, Boolean> getObscuredIndexes() {\n+        return obscuredIndexes;\n     }\n \n+    public void setObscuredIndexes(final Map<Integer, Boolean> obscuredIndexes) {\n+        this.obscuredIndexes = obscuredIndexes;\n+    }\n+\n+    public Vector<String> getObscuredRecipients() {\n+        return obscuredRecipients;\n+    }\n+\n+    public void setObscuredRecipients(final Vector<String> obscuredRecipients) {\n+        this.obscuredRecipients = obscuredRecipients;\n+    }\n+\n+    public int getTagCounter() {\n+        return tagCounter;\n+    }\n+\n+    public void setTagCounter(int tagCounter) {\n+        this.tagCounter = tagCounter;\n+    }\n+\n+    public boolean isShowImage() {\n+        return showImage;\n+    }\n+\n+    public void setShowImage(final boolean showImage){\n+        this.showImage = showImage;\n+    }\n+\n+    public String getImageCode() {\n+        return imageCode;\n+    }\n+\n+    public void setImageCode(String imageCode) {\n+        this.imageCode = imageCode;\n+    }\n+    //endregion Getters/Setters\n+\n     /**\n-     * Add the given int to the list of data that will be substituted for the\n-     * &lt;data&gt; tags in the report, and mark it as double-blind sensitive\n-     * information if <code>obscure</code> is true. The order in which items\n-     * are added must match the order of the tags in the report text.\n-     *\n-     * @param data the int to be substituted\n-     * @param obscure boolean indicating whether the data is double-blind\n-     *            sensitive\n+     * Adds the given int(s) to the list of data as obscured\n+     * @param data the int(s) to be substituted\n      */\n-    public void add(int data, boolean obscure) {\n-        if (obscure) {\n-            obscuredIndexes.put(Integer.valueOf(tagData.size()),\n-                    Boolean.valueOf(true));\n-        }\n-        tagData.addElement(String.valueOf(data));\n+    public void add(final int... data) {\n+        add(true, data);\n     }\n \n     /**\n-     * Add the given String to the list of data that will be substituted for the\n-     * &lt;data&gt; tags in the report. The order in which items are added must\n-     * match the order of the tags in the report text.\n+     * Add the given int(s) to the list of data that will be substituted for the <data> tags in the\n+     * report, and market it as double-blind sensitive if <tag>obscure</tag> is true.\n+     * The order in which items are added must match the order of the tags in the report text.\n      *\n-     * @param data the String to be substituted\n+     * @param obscure boolean indicating whether the data is double-blind sensitive\n+     * @param data the int to be substituted\n      */\n-    public void add(String data) {\n-        add(data, true);\n-        tagTranslate = null;\n+    public void add(final boolean obscure, final int... data) {\n+        for (final int dataPoint : data) {\n+            if (obscure) {\n+                obscuredIndexes.put(tagData.size(), true);\n+            }\n+            tagData.addElement(String.valueOf(dataPoint));\n+        }\n     }\n \n     /**\n-     * Add the given string to the list of data that will be substituted for the\n-     * &lt;data&gt; tags in the report. The order in which items are added must\n-     * match the order of the tags in the report text. The second string\n-     * argument sets the translation flag to the string value.\n-     *\n-     * @param data the String to be substituted\n-     * @param translate the common Resource Bundle to be used for translation\n+     * Adds the given String(s) to the list of data as obscured\n+     * @param data the String(s) to be substituted\n      */\n-    public void add(String data, String translate) {\n-        add(data, true);\n-        tagTranslate = translate;\n+    public void add(final String... data) {\n+        add(true, data);\n     }\n \n     /**\n-     * Add the given String to the list of data that will be substituted for the\n-     * &lt;data&gt; tags in the report, and mark it as double-blind sensitive\n-     * information if <code>obscure</code> is true. The order in which items\n-     * are added must match the order of the tags in the report text.\n+     * Add the given String(s) to the list of data that will be substituted for the <data> tags in\n+     * the report, and market it as double-blind sensitive if <tag>obscure</tag> is true.\n+     * The order in which items are added must match the order of the tags in the report text.\n      *\n-     * @param data the String to be substituted\n-     * @param obscure boolean indicating whether the data is double-blind\n-     *            sensitive\n+     * @param obscure boolean indicating whether the data is double-blind sensitive\n+     * @param data the String(s) to be substituted\n      */\n-    public void add(String data, boolean obscure) {\n-        if (obscure) {\n-            obscuredIndexes.put(Integer.valueOf(tagData.size()),\n-                    Boolean.valueOf(true));\n+    public void add(final boolean obscure, final String... data) {\n+        for (final String dataPoint : data) {\n+            if (obscure) {\n+                obscuredIndexes.put(tagData.size(), true);\n+            }\n+            tagData.addElement(dataPoint);\n         }\n-        tagData.addElement(data);\n     }\n \n     /**\n@@ -303,61 +447,24 @@ public void choose(boolean choice) {\n \n     /**\n      * Shortcut method for adding entity name and owner data at the same time.\n-     * Assumes that the entity name should be obscured, but the owner should\n-     * not.\n+     * Assumes that the entity name should be obscured, but the owner should not.\n      *\n      * @param entity the entity you wish to add\n      */\n     public void addDesc(Entity entity) {\n         if (entity != null) {\n-            if ((indentation <= Report.DEFAULT_INDENTATION) || showImage) {\n+            if (showImage || (indentation <= MMConstants.DEFAULT_SPACE_INDENTATION)) {\n                 imageCode = \"<span id='\" + entity.getId() + \"'></span>\";\n             }\n             add(\"<font color='0xffffff'><a href=\\\"#entity:\" + entity.getId()\n-                    + \"\\\">\" + entity.getShortName() + \"</a></font>\", true);\n-            add(\"<B><font color='\" + entity.getOwner().getColour().getHexString(0x00F0F0F0) + \"'>\"\n+                    + \"\\\">\" + entity.getShortName() + \"</a></font>\");\n+            add(false, \"<B><font color='\" + entity.getOwner().getColour().getHexString(0x00F0F0F0) + \"'>\"\n                     + entity.getOwner().getName() + \"</font></B>\");\n         }\n     }\n \n     /**\n-     * Manually Toggle if the report should show an image of the entity\n-    */\n-    public void setShowImage(boolean showImage){\n-        this.showImage = showImage;\n-    }\n-\n-    /**\n-     * Internal method. Not for typical use.\n-     * <p>\n-     * Tests wheter the data value at the given index has been marked as\n-     * obscured.\n-     *\n-     * @param index position of data value (indexes are chronological and start\n-     *            at zero)\n-     * @return true if the data value was marked obscured\n-     */\n-    public boolean isValueObscured(int index) {\n-        if (obscuredIndexes.get(Integer.valueOf(index)) == null) {\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    /**\n-     * Internal method. Not for typical use.\n-     * <p>\n-     * Remove the data value from the report. This operation is irreversible.\n-     *\n-     * @param index position of data value (indexes are chronological and start\n-     *            at zero\n-     */\n-    public void hideData(int index) {\n-        tagData.setElementAt(null, index);\n-    }\n-\n-    /**\n-     * Indent the report.\n+     * Indent the report once\n      */\n     public void indent() {\n         indent(1);\n@@ -369,68 +476,45 @@ public void indent() {\n      * @param n the number of times to indent the report\n      */\n     public void indent(int n) {\n-        indentation += (n * Report.DEFAULT_INDENTATION);\n-    }\n-\n-    /**\n-     * Internal method. Not for typical use.\n-     * <p>\n-     * Get the total number of data values associated with this report. Note\n-     * that this includes the <code>true/false</code> values added for\n-     * &lt;msg&gt; tags as well.\n-     *\n-     * @return the number of data values\n-     */\n-    public int dataCount() {\n-        return tagData.size();\n-    }\n-\n-    private String getTag() {\n-        return getTag(tagCounter);\n+        indentation += (n * DEFAULT_INDENTATION);\n     }\n \n     private String getTag(int index) {\n         try {\n-            String value = tagData.elementAt(index);\n+            String value = getTagData().elementAt(index);\n             if (value == null) {\n                 return Report.OBSCURED_STRING;\n-            } else if (tagTranslate != null) {\n+            } else if (getTagTranslate() != null) {\n                 // Each common Resource Bundle is found below\n-                if (tagTranslate.equals(\"Messages\")) {\n+                if (getTagTranslate().equals(\"Messages\")) {\n                     return Messages.getString(value);\n-                // Others ifs will be here.\n                 }\n             }\n             return value;\n         } catch (ArrayIndexOutOfBoundsException e) {\n-            System.out.println(\"Error: Report#getText --> Array Index out of \"\n-                    + \"Bounds Exception (index: \" + index\n-                    + \") for a report with ID \" + messageId\n-                    + \".  Maybe Report#add wasn't called enough \"\n-                    + \"times for the amount of tags in the message?\");\n+            MegaMek.getLogger().error(\"Array Index out of Bounds Exception (index: \"\n+                    + index + \") for a report with ID \" + getMessageId()\n+                    + \".  Maybe Report::add wasn't called enough times for the amount of tags in the message?\", e);\n             return \"[Reporting Error: see megameklog.txt for details]\";\n         }\n     }\n \n     /**\n-     * Get the report in its final form, with all the necessary substitutions\n-     * made.\n+     * Get the report in its final form, with all the necessary substitutions made.\n      *\n      * @return a String with the final report\n      */\n     public String getText() {\n         // The raw text of the message, with tags.\n-        String raw = ReportMessages.getString(String.valueOf(messageId));\n+        String raw = ReportMessages.getString(String.valueOf(getMessageId()));\n \n         // This will be the finished product, with data substituted for tags.\n         StringBuffer text = new StringBuffer();\n \n         if (raw == null) {\n             // Should we handle this better? Check alternate language files?\n-            System.out.println(\"Error: No message found for ID \"\n-                    + messageId);\n-            text.append(\"[Reporting Error for message ID \").append(\n-                    messageId).append(\"]\");\n+            MegaMek.getLogger().error(\"No message found for ID \" + messageId);\n+            text.append(\"[Reporting Error for message ID \").append(messageId).append(\"]\");\n         } else {\n             int i = 0;\n             int mark = 0;\n@@ -444,12 +528,10 @@ public String getText() {\n                         i++;\n                         continue;\n                     }\n-                    // copy the preceeding characters into the buffer\n-                    text.append(raw.substring(mark, i));\n+                    // copy the preceding characters into the buffer\n+                    text.append(raw, mark, i);\n                     if (raw.substring(i + 1, endTagIdx).equals(\"data\")) {\n-                        text.append(getTag());\n-                        // System.out.println(\"Report-->getText(): \" +\n-                        // this.tagData.elementAt(this.tagCounter));\n+                        text.append(getTag(getTagCounter()));\n                         tagCounter++;\n                     } else if (raw.substring(i + 1, endTagIdx).equals(\"list\")) {\n                         for (int j = tagCounter; j < tagData.size(); j++) {\n@@ -458,8 +540,7 @@ public String getText() {\n                         text.setLength(text.length() - 2); // trim last comma\n                     } else if (raw.substring(i + 1, endTagIdx).startsWith(\n                             \"msg:\")) {\n-                        boolean selector = Boolean.valueOf(getTag())\n-                                .booleanValue();\n+                        boolean selector = Boolean.parseBoolean(getTag(getTagCounter()));\n                         if (selector) {\n                             text.append(ReportMessages.getString(raw.substring(\n                                     i + 5, raw.indexOf(',', i))));\n@@ -468,67 +549,47 @@ public String getText() {\n                                     raw.indexOf(',', i) + 1, endTagIdx)));\n                         }\n                         tagCounter++;\n-                    } else if (raw.substring(i + 1, endTagIdx)\n-                            .equals(\"newline\")) {\n+                    } else if (raw.substring(i + 1, endTagIdx).equals(\"newline\")) {\n                         text.append(\"\\n\");\n                     } else {\n                         // not a special tag, so treat as literal text\n-                        text.append(raw.substring(i, endTagIdx + 1));\n+                        text.append(raw, i, endTagIdx + 1);\n                     }\n                     mark = endTagIdx + 1;\n                     i = endTagIdx;\n                 }\n                 i++;\n             }\n             //add the sprite code at the beginning of the line\n-            if (imageCode != null && !imageCode.isEmpty()) {\n+            if ((getImageCode() != null) && !getImageCode().isEmpty()) {\n                 if (text.toString().startsWith(\"\\n\")) {\n-                    text.insert(1, imageCode);\n+                    text.insert(1, getImageCode());\n                 }\n                 else {\n-                    text.insert(0, imageCode);\n+                    text.insert(0, getImageCode());\n                 }\n             }\n             text.append(raw.substring(mark));\n             handleIndentation(text);\n-            text.append(getNewlines());\n+            text.append(MMConstants.DEFAULT_NEWLINE.repeat(getNewlines()));\n         }\n         tagCounter = 0;\n         // debugReport\n-        if (type == Report.TESTING) {\n+        if (getType().isTesting()) {\n             Report.mark(text);\n         }\n         return text.toString();\n     }\n \n     private void handleIndentation(StringBuffer sb) {\n-        if ((indentation == 0) || (sb.length() == 0)) {\n+        if ((getIndentation() == 0) || (sb.length() == 0)) {\n             return;\n         }\n         int i = 0;\n-        while (sb.substring(i, i+4).equals(\"\\n\")) {\n-            i+=4;\n-            if (i == sb.length()) {\n-                continue;\n-            }\n+        while (sb.substring(i, i + 4).equals(\"\\n\")) {\n+            i += 4;\n         }\n-        sb.insert(i, getSpaces());\n-    }\n-\n-    private String getSpaces() {\n-        StringBuffer spaces = new StringBuffer();\n-        for (int i = 0; i < indentation; i++) {\n-            spaces.append(\"&nbsp;\");\n-        }\n-        return spaces.toString();\n-    }\n-\n-    private String getNewlines() {\n-        StringBuffer sbNewlines = new StringBuffer();\n-        for (int i = 0; i < newlines; i++) {\n-            sbNewlines.append(\"\\n\");\n-        }\n-        return sbNewlines.toString();\n+        sb.insert(i, \"&nbsp\".repeat(getIndentation()));\n     }\n \n     /**\n@@ -539,24 +600,9 @@ private String getNewlines() {\n     public static void addNewline(Vector<Report> v) {\n         try {\n             v.elementAt(v.size() - 1).newlines++;\n+        } catch (ArrayIndexOutOfBoundsException e) {\n+            MegaMek.getLogger().error(\"Report.addNewline failed, array index out of bounds\", e);\n         }\n-        catch (ArrayIndexOutOfBoundsException ex) {\n-            System.err.println(\"Report.addNewline failed, array index out \" +\n-                    \"of bounds\");\n-        }\n-    }\n-\n-    /**\n-     * Internal method. Not for typical use.\n-     * <p>\n-     * Adds the given player name to the report's list of players who received\n-     * an obscured version of this report from the server at some time in the\n-     * past.\n-     *\n-     * @param playerName the String containing the player's name\n-     */\n-    public void addObscuredRecipient(String playerName) {\n-        obscuredRecipients.addElement(playerName);\n     }\n \n     /**\n@@ -579,52 +625,30 @@ public boolean isObscuredRecipient(String playerName) {\n         return false;\n     }\n \n-    /**\n-     * Useful for debugging purposes.\n-     *\n-     * @return a String of the form \"Report(messageId=n)\"\n-     */\n-    @Override\n-    public String toString() {\n-        String val = new String();\n-        val = \"Report(messageId=\";\n-        val += messageId;\n-        val += \")\";\n-        return val;\n-    }\n-\n-    /**\n-     * DEBUG method - do not use\n-     */\n-    // debugReport method\n-    public void markForTesting() {\n-        type = Report.TESTING;\n-    }\n-\n-    // debugReport method\n-    private static StringBuffer mark(StringBuffer sb) {\n+    private static void mark(final StringBuffer sb) {\n         sb.insert(0, \"<hidden>\");\n         int i = sb.length() - 1;\n         while (sb.charAt(i) == '\\n') {\n             i--;\n-            if (i == 0) {\n-                continue;\n-            }\n         }\n         sb.insert(i + 1, \"</hidden>\");\n-        return sb;\n     }\n \n-    public static void indentAll(Vector<Report> vDesc, int amount) {\n-        // Just avoid an error condition.\n-        if (vDesc == null) {\n+    public static void indentAll(final @Nullable Vector<Report> reports, final int indent) {\n+        if (reports == null) {\n             return;\n         }\n \n-        Enumeration<Report> x = vDesc.elements();\n-        while (x.hasMoreElements()) {\n-            Report r = x.nextElement();\n-            r.indent(amount);\n+        for (Report report : reports) {\n+            report.indent(indent);\n         }\n     }\n-}\n+\n+    /**\n+     * @return a String of the form \"Report(messageId=n)\"\n+     */\n+    @Override\n+    public String toString() {\n+        return \"Report(messageId=\" + messageId + \")\";\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "cdc6d7778ee8712836f4e3139e5b2a884facd630",
    "filename": "megamek/src/megamek/common/Tank.java",
    "status": "modified",
    "additions": 8,
    "deletions": 11,
    "changes": 19,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Tank.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/Tank.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/Tank.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -24,6 +24,7 @@\n import java.util.Vector;\n \n import megamek.MegaMek;\n+import megamek.common.enums.ReportType;\n import megamek.common.options.OptionsConstants;\n import megamek.common.verifier.SupportVeeStructure;\n import megamek.common.verifier.TestEntity;\n@@ -2146,36 +2147,32 @@ public boolean usesTurnMode() {\n \n     @Override\n     public Vector<Report> victoryReport() {\n-        Vector<Report> vDesc = new Vector<Report>();\n+        Vector<Report> vDesc = new Vector<>();\n \n-        Report r = new Report(7025);\n-        r.type = Report.PUBLIC;\n+        Report r = new Report(7025, ReportType.PUBLIC);\n         r.addDesc(this);\n         vDesc.addElement(r);\n \n-        r = new Report(7035);\n-        r.type = Report.PUBLIC;\n+        r = new Report(7035, ReportType.PUBLIC);\n         r.newlines = 0;\n         vDesc.addElement(r);\n         vDesc.addAll(getCrew().getDescVector(false));\n-        r = new Report(7070, Report.PUBLIC);\n-        r.add(getKillNumber());\n-        vDesc.addElement(r);\n+        vDesc.addElement(new Report(7070, ReportType.PUBLIC, getKillNumber()));\n \n         if (isDestroyed()) {\n             Entity killer = game.getEntity(killerId);\n             if (killer == null) {\n                 killer = game.getOutOfGameEntity(killerId);\n             }\n             if (killer != null) {\n-                r = new Report(7072, Report.PUBLIC);\n+                r = new Report(7072, ReportType.PUBLIC);\n                 r.addDesc(killer);\n             } else {\n-                r = new Report(7073, Report.PUBLIC);\n+                r = new Report(7073, ReportType.PUBLIC);\n             }\n             vDesc.addElement(r);\n         } else if (getCrew().isEjected()) {\n-            r = new Report(7071, Report.PUBLIC);\n+            r = new Report(7071, ReportType.PUBLIC);\n             vDesc.addElement(r);\n         }\n         r.newlines = 2;"
  },
  {
    "sha": "2b7d1b0dc467f4259f7b180f5e004b1813104e54",
    "filename": "megamek/src/megamek/common/constants/BaseConstants.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/constants/BaseConstants.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/constants/BaseConstants.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/constants/BaseConstants.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -0,0 +1,26 @@\n+\r\n+/*\r\n+ * Copyright (C) 2021 - The MegaMek Team. All Rights Reserved\r\n+ *\r\n+ * MegaMek is free software: you can redistribute it and/or modify\r\n+ * it under the terms of the GNU General Public License as published by\r\n+ * the Free Software Foundation, either version 3 of the License, or\r\n+ * (at your option) any later version.\r\n+ *\r\n+ * MegaMek is distributed in the hope that it will be useful,\r\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n+ * GNU General Public License for more details.\r\n+ *\r\n+ * You should have received a copy of the GNU General Public License\r\n+ * along with MegaMek. If not, see <http://www.gnu.org/licenses/>.\r\n+ */\r\n+package megamek.common.constants;\r\n+\r\n+/**\r\n+ * These are constants that are shared between MM, MML, and MHQ\r\n+ */\r\n+public abstract class BaseConstants {\r\n+    public static final int DEFAULT_SPACE_INDENTATION = 4;\r\n+    public static final String DEFAULT_NEWLINE = \"\\n\";\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "c692785398144959717220395bbddc0314e0d4b5",
    "filename": "megamek/src/megamek/common/constants/MMConstants.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/constants/MMConstants.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/constants/MMConstants.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/constants/MMConstants.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -0,0 +1,24 @@\n+/*\r\n+ * Copyright (C) 2021 - The MegaMek Team. All Rights Reserved\r\n+ *\r\n+ * MegaMek is free software: you can redistribute it and/or modify\r\n+ * it under the terms of the GNU General Public License as published by\r\n+ * the Free Software Foundation, either version 3 of the License, or\r\n+ * (at your option) any later version.\r\n+ *\r\n+ * MegaMek is distributed in the hope that it will be useful,\r\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n+ * GNU General Public License for more details.\r\n+ *\r\n+ * You should have received a copy of the GNU General Public License\r\n+ * along with MegaMek. If not, see <http://www.gnu.org/licenses/>.\r\n+ */\r\n+package megamek.common.constants;\r\n+\r\n+/**\r\n+ * These are MM-specific Constants\r\n+ */\r\n+public class MMConstants extends BaseConstants {\r\n+\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f2bcc265b18b3d01b254d56493ac08f05bf74256",
    "filename": "megamek/src/megamek/common/enums/ReportType.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/enums/ReportType.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/enums/ReportType.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/enums/ReportType.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -0,0 +1,64 @@\n+/*\r\n+ * Copyright (C) 2021 - The MegaMek Team. All Rights Reserved\r\n+ *\r\n+ * MegaMek is free software: you can redistribute it and/or modify\r\n+ * it under the terms of the GNU General Public License as published by\r\n+ * the Free Software Foundation, either version 3 of the License, or\r\n+ * (at your option) any later version.\r\n+ *\r\n+ * MegaMek is distributed in the hope that it will be useful,\r\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\r\n+ * GNU General Public License for more details.\r\n+ *\r\n+ * You should have received a copy of the GNU General Public License\r\n+ * along with MegaMek. If not, see <http://www.gnu.org/licenses/>.\r\n+ */\r\n+package megamek.common.enums;\r\n+\r\n+public enum ReportType {\r\n+    //region Enum Declarations\r\n+    /**\r\n+     * Report Type: visible to all players.\r\n+     */\r\n+    PUBLIC,\r\n+    /**\r\n+     * Visible to all players, but all data marked for obscuration remains hidden.\r\n+     */\r\n+    OBSCURED,\r\n+    /**\r\n+     * Report is only visible to those players who can see the subject\r\n+     */\r\n+    HIDDEN,\r\n+    /**\r\n+     * Reports for testing only\r\n+     */\r\n+    TESTING,\r\n+    /**\r\n+     * Messages which should be sent only to the player indicated by \"player\"\r\n+     */\r\n+    PLAYER;\r\n+    //endregion Enum Declarations\r\n+\r\n+    //region Boolean Comparison Methods\r\n+    public boolean isPublic() {\r\n+        return this == PUBLIC;\r\n+    }\r\n+\r\n+    public boolean isObscured() {\r\n+        return this == OBSCURED;\r\n+    }\r\n+\r\n+    public boolean isHidden() {\r\n+        return this == HIDDEN;\r\n+    }\r\n+\r\n+    public boolean isTesting() {\r\n+        return this == TESTING;\r\n+    }\r\n+\r\n+    public boolean isPlayer() {\r\n+        return this == PLAYER;\r\n+    }\r\n+    //endregion Boolean Comparison Methods\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "8c743ac4a31d0921ec82d0ef9fe67949b4313436",
    "filename": "megamek/src/megamek/common/weapons/AR10Handler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/AR10Handler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/AR10Handler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/AR10Handler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -90,7 +90,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n                 r.addDesc(entityTarget);\n             } else {\n                 r.messageId = 3120;\n-                r.add(target.getDisplayName(), true);\n+                r.add(target.getDisplayName());\n             }\n             vPhaseReport.addElement(r);\n                 \n@@ -136,7 +136,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n             if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {\n                 r = new Report (3135);\n                 r.subject = subjectId;\n-                r.add(\" \" + target.getPosition(), true);\n+                r.add(\" \" + target.getPosition());\n                 vPhaseReport.addElement(r);\n                 return false;\n             } else if (toHit.getValue() == TargetRoll.AUTOMATIC_FAIL) {"
  },
  {
    "sha": "2517425f05199c1b62bc4a2efe6bee6977dc9e4f",
    "filename": "megamek/src/megamek/common/weapons/AreaEffectHelper.java",
    "status": "modified",
    "additions": 7,
    "deletions": 10,
    "changes": 17,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/AreaEffectHelper.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/AreaEffectHelper.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/AreaEffectHelper.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -45,6 +45,7 @@\n import megamek.common.Terrains;\n import megamek.common.ToHitData;\n import megamek.common.VTOL;\n+import megamek.common.enums.ReportType;\n import megamek.server.Server;\n import megamek.server.Server.DamageType;\n \n@@ -687,25 +688,21 @@ public static DamageFalloff calculateDamageFallOff(AmmoType ammo, int attackingB\n     public static void doNuclearExplosion(Entity entity, Coords coords, int nukeType, Vector<Report> vPhaseReport, Server server) {\n         NukeStats nukeStats = getNukeStats(nukeType);\n                 \n-        if(nukeStats == null) {\n-            Report r = new Report(9998);\n-            r.add(nukeType);\n-            vPhaseReport.add(r);\n+        if (nukeStats == null) {\n+            vPhaseReport.add(new Report(9998, ReportType.HIDDEN, nukeType));\n             return;\n         }\n         \n-        Report r = new Report(1215, Report.PUBLIC);\n-\n+        Report r = new Report(1215, ReportType.PUBLIC, \"offboard\");\n         r.indent();\n-        r.add(\"offboard\");\n         vPhaseReport.add(r);\n         \n         // crater radius is crater depth x2 as per Server.doNuclearExplosion\n         int craterRadius = nukeStats.craterDepth * 2;\n         int blastDistance = entity.getPosition().distance(coords);\n         \n         // if the entity is in the crater radius, bye\n-        if(blastDistance < craterRadius) {\n+        if (blastDistance < craterRadius) {\n             vPhaseReport.addAll(server.destroyEntity(entity, \"nuclear explosion proximity\", false, false));\n             // Kill the crew\n             entity.getCrew().setDoomed(true);\n@@ -715,7 +712,7 @@ public static void doNuclearExplosion(Entity entity, Coords coords, int nukeType\n         \n         // calculate the damage to the entity based on the range to the nuke\n         int damageToEntity = nukeStats.baseDamage - (blastDistance * nukeStats.degradation);\n-        if(damageToEntity < 0) {\n+        if (damageToEntity < 0) {\n             return;\n         } else {\n             applyExplosionClusterDamageToEntity(entity, damageToEntity, 5, coords, vPhaseReport, server);\n@@ -725,7 +722,7 @@ public static void doNuclearExplosion(Entity entity, Coords coords, int nukeType\n         // Apply secondary effects against the entity if it's within the secondary blast radius\n         // Since the effects are unit-dependent, we'll just define it in the\n         // entity. \n-        if(!entity.isDestroyed() && (blastDistance <= nukeStats.secondaryRadius)) {\n+        if (!entity.isDestroyed() && (blastDistance <= nukeStats.secondaryRadius)) {\n             server.applySecondaryNuclearEffects(entity, coords, vPhaseReport);\n         }\n         "
  },
  {
    "sha": "e0cfc68afb5f699ae087e2e410c79b416e8fe068",
    "filename": "megamek/src/megamek/common/weapons/ArtilleryBayWeaponIndirectFireHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/ArtilleryBayWeaponIndirectFireHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/ArtilleryBayWeaponIndirectFireHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/ArtilleryBayWeaponIndirectFireHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -298,10 +298,10 @@ else if (null != bestSpotter) {\n         if (wtype != null) {\n             r.add(wtype.getName());\n         } else {\n-            r.add(\"Error: From Nowhwere\");\n+            r.add(\"Error: From Nowhere\");\n         }\n \n-        r.add(target.getDisplayName(), true);\n+        r.add(target.getDisplayName());\n         vPhaseReport.addElement(r);\n         if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {\n             r = new Report(3135);"
  },
  {
    "sha": "8daa53e429bd29d0a5fa5571a54a5610c89e2cdd",
    "filename": "megamek/src/megamek/common/weapons/ArtilleryBayWeaponIndirectHomingHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/ArtilleryBayWeaponIndirectHomingHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/ArtilleryBayWeaponIndirectHomingHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/ArtilleryBayWeaponIndirectHomingHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -131,7 +131,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n             r.addDesc(entityTarget);\n         } else {\n             r.messageId = 3126;\n-            r.add(target.getDisplayName(), true);\n+            r.add(target.getDisplayName());\n         }\n         vPhaseReport.addElement(r);\n         if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {"
  },
  {
    "sha": "9eada79c7f809e51096108a99b725f46cae8b8a2",
    "filename": "megamek/src/megamek/common/weapons/ArtilleryCannonWeaponHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/ArtilleryCannonWeaponHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/ArtilleryCannonWeaponHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/ArtilleryCannonWeaponHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -89,10 +89,10 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n         if (wtype != null) {\n             r.add(wtype.getName());\n         } else {\n-            r.add(\"Error: From Nowhwere\");\n+            r.add(\"Error: From Nowhere\");\n         }\n \n-        r.add(target.getDisplayName(), true);\n+        r.add(target.getDisplayName());\n         vPhaseReport.addElement(r);\n         if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {\n             r = new Report(3135);"
  },
  {
    "sha": "98430b0d5a8b9cf7d954d4ffd68a328c4836afa0",
    "filename": "megamek/src/megamek/common/weapons/ArtilleryWeaponIndirectFireHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/ArtilleryWeaponIndirectFireHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/ArtilleryWeaponIndirectFireHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/ArtilleryWeaponIndirectFireHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -262,10 +262,10 @@ else if ((null != bestSpotter) && !(this instanceof ArtilleryWeaponDirectFireHan\n         if (wtype != null) {\n             r.add(wtype.getName());\n         } else {\n-            r.add(\"Error: From Nowhwere\");\n+            r.add(\"Error: From Nowhere\");\n         }\n \n-        r.add(target.getDisplayName(), true);\n+        r.add(target.getDisplayName());\n         vPhaseReport.addElement(r);\n         if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {\n             r = new Report(3135);"
  },
  {
    "sha": "2ce45cd84be05d4398c8b50ed44da3e0cd4b49d6",
    "filename": "megamek/src/megamek/common/weapons/ArtilleryWeaponIndirectHomingHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/ArtilleryWeaponIndirectHomingHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/ArtilleryWeaponIndirectHomingHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/ArtilleryWeaponIndirectHomingHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -123,7 +123,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n             r.addDesc(entityTarget);\n         } else {\n             r.messageId = 3120;\n-            r.add(target.getDisplayName(), true);\n+            r.add(target.getDisplayName());\n         }\n         vPhaseReport.addElement(r);\n         if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {"
  },
  {
    "sha": "ccaac471cc32479461507206be3e8077ffe60162",
    "filename": "megamek/src/megamek/common/weapons/BayWeaponHandler.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/BayWeaponHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/BayWeaponHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/BayWeaponHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -175,7 +175,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n             r.addDesc(entityTarget);\n         } else {\n             r.messageId = 3120;\n-            r.add(target.getDisplayName(), true);\n+            r.add(target.getDisplayName());\n         }\n \n         vPhaseReport.addElement(r);\n@@ -392,7 +392,7 @@ public boolean handleAeroSanity(IGame.Phase phase, Vector<Report> vPhaseReport)\n             r.addDesc(entityTarget);\n         } else {\n             r.messageId = 3120;\n-            r.add(target.getDisplayName(), true);\n+            r.add(target.getDisplayName());\n         }\n         vPhaseReport.addElement(r);\n         \n@@ -608,7 +608,7 @@ public boolean handleAeroSanity(IGame.Phase phase, Vector<Report> vPhaseReport)\n                                 r.addDesc(entityTarget);\n                             } else {\n                                 r.messageId = 3120;\n-                                r.add(target.getDisplayName(), true);\n+                                r.add(target.getDisplayName());\n                             }\n                             vPhaseReport.add(replaceReport, r);\n                         }"
  },
  {
    "sha": "284ebaf030895389ebbf880324e34fc0661d7b79",
    "filename": "megamek/src/megamek/common/weapons/BombAttackHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/BombAttackHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/BombAttackHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/BombAttackHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -138,10 +138,10 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n                 if (wtype != null) {\n                     r.add(wtype.getName());\n                 } else {\n-                    r.add(\"Error: From Nowhwere\");\n+                    r.add(\"Error: From Nowhere\");\n                 }\n \n-                r.add(target.getDisplayName(), true);\n+                r.add(target.getDisplayName());\n                 vPhaseReport.addElement(r);\n                 if (typeModifiedToHit.getValue() == TargetRoll.IMPOSSIBLE) {\n                     r = new Report(3135);"
  },
  {
    "sha": "e295b6bbd007fbdfd59be59aeb2a8bbb3223f3d5",
    "filename": "megamek/src/megamek/common/weapons/CLIATMHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/CLIATMHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/CLIATMHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/CLIATMHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -511,7 +511,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n                 r.addDesc(entityTarget);\n             } else {\n                 r.messageId = 3120;\n-                r.add(target.getDisplayName(), true);\n+                r.add(target.getDisplayName());\n             }\n             vPhaseReport.addElement(r);\n             if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {\n@@ -638,7 +638,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n                 r.addDesc(entityTarget);\n             } else {\n                 r.messageId = 3120;\n-                r.add(target.getDisplayName(), true);\n+                r.add(target.getDisplayName());\n             }\n             vPhaseReport.addElement(r);\n             // check for nemesis"
  },
  {
    "sha": "df2b3cc8397b53f79f7ff8807f5d1142f0a2f36e",
    "filename": "megamek/src/megamek/common/weapons/CapitalMissileBayHandler.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/CapitalMissileBayHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/CapitalMissileBayHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/CapitalMissileBayHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -101,7 +101,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n                 r.addDesc(entityTarget);\n             } else {\n                 r.messageId = 3120;\n-                r.add(target.getDisplayName(), true);\n+                r.add(target.getDisplayName());\n             }\n             vPhaseReport.addElement(r);\n                 \n@@ -147,7 +147,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n         if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {\n             r = new Report (3135);\n             r.subject = subjectId;\n-            r.add(\" \" + target.getPosition(), true);\n+            r.add(\" \" + target.getPosition());\n             vPhaseReport.addElement(r);\n             return false;\n         } else if (toHit.getValue() == TargetRoll.AUTOMATIC_FAIL) {\n@@ -582,7 +582,7 @@ public boolean handleAeroSanity(IGame.Phase phase, Vector<Report> vPhaseReport)\n             r.addDesc(entityTarget);\n         } else {\n             r.messageId = 3120;\n-            r.add(target.getDisplayName(), true);\n+            r.add(target.getDisplayName());\n         }\n         vPhaseReport.addElement(r);\n         \n@@ -767,7 +767,7 @@ public boolean handleAeroSanity(IGame.Phase phase, Vector<Report> vPhaseReport)\n                                 r.addDesc(entityTarget);\n                             } else {\n                                 r.messageId = 3120;\n-                                r.add(target.getDisplayName(), true);\n+                                r.add(target.getDisplayName());\n                             }\n                             vPhaseReport.add(replaceReport, r);\n                         }"
  },
  {
    "sha": "3d0158f1733486a061fa90543105884c9a546ddb",
    "filename": "megamek/src/megamek/common/weapons/CapitalMissileBearingsOnlyHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/CapitalMissileBearingsOnlyHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/CapitalMissileBearingsOnlyHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/CapitalMissileBearingsOnlyHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -186,7 +186,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n         if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {\n             r = new Report (3123);\n             r.subject = subjectId;\n-            r.add(\" \" + target.getPosition(), true);\n+            r.add(\" \" + target.getPosition());\n             vPhaseReport.addElement(r);\n         } else {        \n             r = new Report(3119);\n@@ -361,7 +361,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n                                     r.addDesc(entityTarget);\n                                 } else {\n                                     r.messageId = 3120;\n-                                    r.add(target.getDisplayName(), true);\n+                                    r.add(target.getDisplayName());\n                                 }\n                                 vPhaseReport.add(replaceReport, r);\n                             }"
  },
  {
    "sha": "b664ac246235577c3c33b514ba512e8758cc8d07",
    "filename": "megamek/src/megamek/common/weapons/CapitalMissileHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/CapitalMissileHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/CapitalMissileHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/CapitalMissileHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -97,7 +97,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n                 r.addDesc(entityTarget);\n             } else {\n                 r.messageId = 3120;\n-                r.add(target.getDisplayName(), true);\n+                r.add(target.getDisplayName());\n             }\n             vPhaseReport.addElement(r);\n \n@@ -169,7 +169,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n         if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {\n             r = new Report (3135);\n             r.subject = subjectId;\n-            r.add(\" \" + target.getPosition(), true);\n+            r.add(\" \" + target.getPosition());\n             vPhaseReport.addElement(r);\n             return false;\n         } else if (toHit.getValue() == TargetRoll.AUTOMATIC_FAIL) {"
  },
  {
    "sha": "0b8e0e5c89f9982a3f426cf03a78697bde49a039",
    "filename": "megamek/src/megamek/common/weapons/LRMScatterableHandler.java",
    "status": "modified",
    "additions": 19,
    "deletions": 33,
    "changes": 52,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/LRMScatterableHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/LRMScatterableHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/LRMScatterableHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -1,15 +1,15 @@\n-/**\n+/*\n  * MegaMek - Copyright (C) 2005 Ben Mazur (bmazur@sev.org)\n  * \n- *  This program is free software; you can redistribute it and/or modify it \n- *  under the terms of the GNU General Public License as published by the Free \n- *  Software Foundation; either version 2 of the License, or (at your option) \n- *  any later version.\n+ * This program is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License as published by the Free\n+ * Software Foundation; either version 2 of the License, or (at your option)\n+ * any later version.\n  * \n- *  This program is distributed in the hope that it will be useful, but \n- *  WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY \n- *  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License \n- *  for more details.\n+ * This program is distributed in the hope that it will be useful, but\n+ * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+ * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License\n+ * for more details.\n  */\n package megamek.common.weapons;\n \n@@ -23,16 +23,13 @@\n import megamek.common.Report;\n import megamek.common.ToHitData;\n import megamek.common.actions.WeaponAttackAction;\n+import megamek.common.enums.ReportType;\n import megamek.server.Server;\n \n /**\n  * @author Sebastian Brocks\n  */\n public class LRMScatterableHandler extends MissileWeaponHandler {\n-\n-    /**\n-     * \n-     */\n     private static final long serialVersionUID = -3661776853552779877L;\n \n     /**\n@@ -64,20 +61,14 @@ protected boolean specialResolution(Vector<Report> vPhaseReport,\n                 || amType == AmmoType.M_THUNDER_AUGMENTED\n                 || amType == AmmoType.M_THUNDER_INFERNO\n                 || amType == AmmoType.M_THUNDER_VIBRABOMB;\n-        int whoReport = Report.PUBLIC;\n-        // only report to player if mine delivery\n-        if (mineDelivery) {\n-            whoReport = Report.HIDDEN;\n-        }\n+        ReportType whoReport = mineDelivery ? ReportType.HIDDEN : ReportType.PUBLIC;\n         int density = atype.getRackSize();\n         if (amType == AmmoType.M_THUNDER_AUGMENTED) {\n             density = density / 2 + density % 2;\n         }\n         if (!bMissed) {\n-            Report r = new Report(3190, whoReport);\n-            r.subject = subjectId;\n-            r.player = ae.getOwnerId();\n-            r.add(coords.getBoardNum());\n+            Report r = new Report(3190, subjectId, whoReport, coords.getBoardNum());\n+            r.setPlayer(ae.getOwnerId());\n             vPhaseReport.addElement(r);\n         } else {\n             // Per TacOps errata 3.4, thunder munitions scatter like artillery,\n@@ -88,26 +79,21 @@ protected boolean specialResolution(Vector<Report> vPhaseReport,\n                 density -= 5;\n                 // If density drops to 0 or less, we're done here.\n                 if (density <= 0) {\n-                    Report r = new Report(3198, whoReport);\n-                    r.subject = subjectId;\n-                    r.player = ae.getOwnerId();\n+                    Report r = new Report(3198, subjectId, whoReport);\n+                    r.setPlayer(ae.getOwnerId());\n                     vPhaseReport.addElement(r);\n                     return true;\n                 }\n             }\n             if (game.getBoard().contains(coords)) {\n                 // misses and scatters to another hex\n-                int reportNr = mineDelivery ? 3197 : 3195;\n-                Report r = new Report(reportNr, whoReport);\n-                r.subject = subjectId;\n-                r.player = ae.getOwnerId();\n-                r.add(coords.getBoardNum());\n+                Report r = new Report(mineDelivery ? 3197 : 3195, subjectId, whoReport, coords.getBoardNum());\n+                r.setPlayer(ae.getOwnerId());\n                 vPhaseReport.addElement(r);\n             } else {\n                 // misses and scatters off-board\n-                Report r = new Report(3200);\n-                r.subject = subjectId;\n-                r.player = ae.getOwnerId();\n+                Report r = new Report(3200, subjectId);\n+                r.setPlayer(ae.getOwnerId());\n                 vPhaseReport.addElement(r);\n                 return true;\n             }"
  },
  {
    "sha": "52fe33e6ead0af90de8fc492bd0b8124e5fa2c91",
    "filename": "megamek/src/megamek/common/weapons/LRMSmokeWarheadHandler.java",
    "status": "modified",
    "additions": 5,
    "deletions": 6,
    "changes": 11,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/LRMSmokeWarheadHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/LRMSmokeWarheadHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/LRMSmokeWarheadHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -23,6 +23,7 @@\n import megamek.common.Report;\n import megamek.common.ToHitData;\n import megamek.common.actions.WeaponAttackAction;\n+import megamek.common.enums.ReportType;\n import megamek.server.Server;\n import megamek.server.SmokeCloud;\n \n@@ -65,8 +66,8 @@ protected boolean specialResolution(Vector<Report> vPhaseReport,\n \n         if (!bMissed) {\n             Report r = new Report(3190);\n-            r.subject = subjectId;\n-            r.player = ae.getOwnerId();\n+            r.setSubject(subjectId);\n+            r.setPlayer(ae.getOwnerId());\n             r.add(coords.getBoardNum());\n             vPhaseReport.addElement(r);\n         } else {\n@@ -75,14 +76,12 @@ protected boolean specialResolution(Vector<Report> vPhaseReport,\n             if (game.getBoard().contains(coords)) {\n                 // misses and scatters to another hex\n                 Report r = new Report(3195);\n-                r.subject = subjectId;\n+                r.setSubject(subjectId);\n                 r.add(coords.getBoardNum());\n                 vPhaseReport.addElement(r);\n             } else {\n                 // misses and scatters off-board\n-                Report r = new Report(3200);\n-                r.subject = subjectId;\n-                vPhaseReport.addElement(r);\n+                vPhaseReport.addElement(new Report(3200, subjectId));\n                 return !bMissed;\n             }\n         }"
  },
  {
    "sha": "923a0edea210e2f82adcdda14ffb6812bfeff73b",
    "filename": "megamek/src/megamek/common/weapons/LRMSwarmHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/LRMSwarmHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/LRMSwarmHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/LRMSwarmHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -93,7 +93,7 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n             entityTarget.addTargetedBySwarm(ae.getId(), waa.getWeaponId());\n         } else {\n             r.messageId = 3120;\n-            r.add(target.getDisplayName(), true);\n+            r.add(target.getDisplayName());\n         }\n         vPhaseReport.addElement(r);\n         if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {"
  },
  {
    "sha": "7a104af5cbe97ff0c0c88fc2ecf7c426c95e224e",
    "filename": "megamek/src/megamek/common/weapons/MekMortarAirburstHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Windchild292/megamek/blob/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/MekMortarAirburstHandler.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/1dc723b1ac57ea876983e2f225c7a0c787680e6b/megamek/src/megamek/common/weapons/MekMortarAirburstHandler.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/common/weapons/MekMortarAirburstHandler.java?ref=1dc723b1ac57ea876983e2f225c7a0c787680e6b",
    "patch": "@@ -82,10 +82,10 @@ public boolean handle(IGame.Phase phase, Vector<Report> vPhaseReport) {\n         if (wtype != null) {\n             r.add(wtype.getName() + \" \" + atype.getSubMunitionName());\n         } else {\n-            r.add(\"Error: From Nowhwere\");\n+            r.add(\"Error: From Nowhere\");\n         }\n \n-        r.add(target.getDisplayName(), true);\n+        r.add(target.getDisplayName());\n         vPhaseReport.addElement(r);\n         if (toHit.getValue() == TargetRoll.IMPOSSIBLE) {\n             r = new Report(3135);"
  }
]
