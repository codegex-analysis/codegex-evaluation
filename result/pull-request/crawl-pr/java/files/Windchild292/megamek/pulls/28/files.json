[
  {
    "sha": "a27e76ac9820fa0bad557cfe237cae998bdb11fb",
    "filename": "megamek/i18n/megamek/common/report-messages.properties",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/Windchild292/megamek/blob/25f7c50148eda5edc38c8a4a17c677ffda50b717/megamek/i18n/megamek/common/report-messages.properties",
    "raw_url": "https://github.com/Windchild292/megamek/raw/25f7c50148eda5edc38c8a4a17c677ffda50b717/megamek/i18n/megamek/common/report-messages.properties",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/i18n/megamek/common/report-messages.properties?ref=25f7c50148eda5edc38c8a4a17c677ffda50b717",
    "patch": "@@ -623,7 +623,7 @@\n 5087=fails and takes a critical hit.\n 5090=<data> (<data>) is in extreme temperatures and dies.\n 5095=<data> (<data>) is on fire, but is protected by its gear.\n-5100=<data> (<data>) is on fire.  Needs an 8+ to avoid damage, rolls <data> : <msg:5101,5102>\n+5100=<data> (<data>) is on fire in hex <data>. Needs an 8+ to avoid damage, rolls <data> : <msg:5101,5102>\n 5101=avoids successfully!\n 5102=fails to avoid damage.\n 5105=Luckily, there is no ammo to explode.\n@@ -635,13 +635,13 @@\n 5130=Inferno fire at <data> is burning brightly.\n 5135=Fire at <data> was started this round.\n 5136=Fire at <data> was started due to an engine explosion!\n-5140=Heavy woods at <data> burns down to Light Woods!\n-5141=Ultra Heavy woods at <data> burns down to Heavy Woods!\n-5142=Heavy jungle at <data> burns down to Light jungle!\n-5143=Ultra heavy jungle at <data> burns down to Heavy jungle!\n-5145=Light woods at <data> burns down to Rough and goes out!!\n-5146=Light jungle at <data> burns down to Rough and goes out!!\n-5150=Fire spreads to <data>!\n+5140=Heavy Woods at <data> burns down to Light Woods!\n+5141=Ultra Heavy Woods at <data> burns down to Heavy Woods!\n+5142=Heavy Jungle at <data> burns down to Light Jungle!\n+5143=Ultra Heavy Jungle at <data> burns down to Heavy Jungle!\n+5145=Light Woods at <data> burns down to Rough and goes out!!\n+5146=Light Jungle at <data> burns down to Rough and goes out!!\n+5150=Fire spreads to <data> from <data>!\n 5155=Gains 30 heat and is now at <data> heat.\n 5160=Luckily, there is no inferno ammo to explode.\n 5165=<data> (<data>) is freed from its swarm attack."
  },
  {
    "sha": "fa5898887462fd0e7a00c77fe1f65fb236189b84",
    "filename": "megamek/src/megamek/server/FireProcessor.java",
    "status": "modified",
    "additions": 21,
    "deletions": 23,
    "changes": 44,
    "blob_url": "https://github.com/Windchild292/megamek/blob/25f7c50148eda5edc38c8a4a17c677ffda50b717/megamek/src/megamek/server/FireProcessor.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/25f7c50148eda5edc38c8a4a17c677ffda50b717/megamek/src/megamek/server/FireProcessor.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/server/FireProcessor.java?ref=25f7c50148eda5edc38c8a4a17c677ffda50b717",
    "patch": "@@ -121,19 +121,16 @@ else if (!server.checkForCollapse(bldg, positionMap, coords, false, vPhaseReport\n                         bldg.setPhaseCF(cf, coords);\n                     }\n                 }\n-\n             }\n-         }\n-\n-        debugTime(\"resolve fire 1\", true);\n+        }\n \n         // Cycle through all hexes, checking for fire and the spread of fire\n         for (int currentXCoord = 0; currentXCoord < width; currentXCoord++) {\n             for (int currentYCoord = 0; currentYCoord < height; currentYCoord++) {\n                 Coords currentCoords = new Coords(currentXCoord, currentYCoord);\n                 IHex currentHex = board.getHex(currentXCoord, currentYCoord);\n \n-                if(currentHex.containsTerrain(Terrains.FIRE)) {\n+                if (currentHex.containsTerrain(Terrains.FIRE)) {\n                     //If the woods has been cleared, or the building\n                     // has collapsed put non-inferno fires out.\n                     if ((currentHex.terrainLevel(Terrains.FIRE)\n@@ -144,7 +141,7 @@ else if (!server.checkForCollapse(bldg, positionMap, coords, false, vPhaseReport\n                     }\n \n                     //only check spread for fires that didn't start this turn\n-                    if(currentHex.getFireTurn() > 0) {\n+                    if (currentHex.getFireTurn() > 0) {\n                         //optional rule, woods burn down\n                         Vector<Report> burnReports = null;\n                         if ((currentHex.containsTerrain(Terrains.WOODS) || currentHex\n@@ -168,8 +165,7 @@ else if (!server.checkForCollapse(bldg, positionMap, coords, false, vPhaseReport\n                         if (burnReports != null) {\n                             vPhaseReport.addAll(burnReports);\n                         }\n-                        spreadFire(currentXCoord, currentYCoord, windDirection,\n-                                windStrength);\n+                        spreadFire(currentXCoord, currentYCoord, windDirection, windStrength);\n                     }\n                 }\n             }\n@@ -261,21 +257,20 @@ public void spreadFire(int x, int y, int windDir, int windStr) {\n         //This means that a fire cannot spread from a level 6 building at base level 0 to\n         //a level 1 building at base level 0, for example.\n \n-        int curHeight = game.getBoard().getHex(src).ceiling();\n+        final int curHeight = game.getBoard().getHex(src).ceiling();\n \n         TargetRoll directroll = new TargetRoll(9, \"spread downwind\");\n         TargetRoll obliqueroll = new TargetRoll(11, \"spread 60 degrees to downwind\");\n \n-        if((windStr > PlanetaryConditions.WI_NONE) && (windStr < PlanetaryConditions.WI_STRONG_GALE)) {\n+        if ((windStr > PlanetaryConditions.WI_NONE) && (windStr < PlanetaryConditions.WI_STRONG_GALE)) {\n             directroll.addModifier(-2, \"light/moderate gale\");\n             obliqueroll.addModifier(-1, \"light/moderate gale\");\n-        }\n-        else if(windStr > PlanetaryConditions.WI_MOD_GALE) {\n+        } else if (windStr > PlanetaryConditions.WI_MOD_GALE) {\n             directroll.addModifier(-3, \"strong gale+\");\n             directroll.addModifier(-2, \"strong gale+\");\n         }\n \n-        spreadFire(nextCoords, directroll, curHeight);\n+        spreadFire(src, nextCoords, directroll, curHeight);\n \n         // Spread to the next hex downwind on a 12 if the first hex wasn't\n         // burning...\n@@ -286,34 +281,37 @@ else if(windStr > PlanetaryConditions.WI_MOD_GALE) {\n                 && ((curHeight >= nextHex.ceiling()) || (jumpHex.ceiling() >= nextHex.ceiling()))) {\n             // we've already gone one step in the wind direction, now go another\n             directroll.addModifier(3, \"crossing non-burning hex\");\n-            spreadFire(nextCoords.translated(windDir), directroll, curHeight);\n+            spreadFire(src, nextCoords.translated(windDir), directroll, curHeight);\n         }\n \n         // spread fire 60 degrees clockwise....\n-        spreadFire(src.translated((windDir + 1) % 6), obliqueroll, curHeight);\n+        spreadFire(src, src.translated((windDir + 1) % 6), obliqueroll, curHeight);\n \n         // spread fire 60 degrees counterclockwise\n-        spreadFire(src.translated((windDir + 5) % 6), obliqueroll, curHeight);\n+        spreadFire(src, src.translated((windDir + 5) % 6), obliqueroll, curHeight);\n     }\n \n     /**\n      * Spreads the fire, and reports the spread, to the specified hex, if\n      * possible, if the hex isn't already on fire, and the fire roll is made.\n+     *\n+     * @param origin the origin coordinates\n+     * @param coords the coordinates to check to see if the fire spreads to them\n+     * @param roll the target number for roll for fire to spread\n+     * @param height the height of the origin hex\n      */\n-    public void spreadFire(Coords coords, TargetRoll roll, int height) {\n+    public void spreadFire(final Coords origin, final Coords coords, final TargetRoll roll,\n+                           final int height) {\n         IHex hex = game.getBoard().getHex(coords);\n-        if (hex == null) {\n-            // Don't attempt to spread fire off the board.\n-            return;\n-        }\n-\n-        if(Math.abs(hex.ceiling() - height) > 4) {\n+        if ((hex == null) || (Math.abs(hex.ceiling() - height) > 4)) {\n+            // Don't attempt to spread fire off the board or for large differences in height\n             return;\n         }\n \n         if (!(hex.containsTerrain(Terrains.FIRE)) && server.checkIgnition(coords, roll)) {\n             Report r = new Report(5150, Report.PUBLIC);\n             r.add(coords.getBoardNum());\n+            r.add(origin.getBoardNum());\n             vPhaseReport.addElement(r);\n         }\n     }"
  },
  {
    "sha": "1fe251a0b3166c0c0eac2f4d54eb963b79c634d9",
    "filename": "megamek/src/megamek/server/Server.java",
    "status": "modified",
    "additions": 10,
    "deletions": 11,
    "changes": 21,
    "blob_url": "https://github.com/Windchild292/megamek/blob/25f7c50148eda5edc38c8a4a17c677ffda50b717/megamek/src/megamek/server/Server.java",
    "raw_url": "https://github.com/Windchild292/megamek/raw/25f7c50148eda5edc38c8a4a17c677ffda50b717/megamek/src/megamek/server/Server.java",
    "contents_url": "https://api.github.com/repos/Windchild292/megamek/contents/megamek/src/megamek/server/Server.java?ref=25f7c50148eda5edc38c8a4a17c677ffda50b717",
    "patch": "@@ -98,6 +98,7 @@\n import megamek.common.actions.UnjamTurretAction;\n import megamek.common.actions.UnloadStrandedAction;\n import megamek.common.actions.WeaponAttackAction;\n+import megamek.common.annotations.Nullable;\n import megamek.common.containers.PlayerIDandList;\n import megamek.common.event.GameListener;\n import megamek.common.event.GameVictoryEvent;\n@@ -8119,7 +8120,7 @@ private void processMovement(Entity entity, MovePath md, Map<EntityTargetPair,\n                         Terrains.FIRE) && !lastPos.equals(curPos)\n                         && (stepMoveType != EntityMovementType.MOVE_JUMP)\n                         && (step.getElevation() <= 1) && !underwater) {\n-                    doFlamingDamage(entity);\n+                    doFlamingDamage(entity, curPos);\n                 }\n             }\n             // check for extreme gravity movement\n@@ -19256,7 +19257,7 @@ private void resolveHeat() {\n                 entity.coolFromExternal = 0;\n \n                 if (entity.infernos.isStillBurning()) {\n-                    doFlamingDamage(entity);\n+                    doFlamingDamage(entity, entity.getPosition());\n                 }\n                 if (entity.getTaserShutdownRounds() == 0) {\n                     entity.setBATaserShutdown(false);\n@@ -20123,27 +20124,25 @@ private void resolveHarJelRepairs() {\n      * Flaming Damage rather than flaming death\n      *\n      * @param entity The <code>Entity</code> that may experience flaming damage.\n+     * @param coordinates the coordinate location of the fire\n      */\n-    private void doFlamingDamage(Entity entity) {\n+    private void doFlamingDamage(final Entity entity, final Coords coordinates) {\n         Report r;\n         int boomRoll = Compute.d6(2);\n \n-        if ((entity.getMovementMode() == EntityMovementMode.VTOL)\n-                && !entity.infernos.isStillBurning()) {\n+        if ((entity.getMovementMode() == EntityMovementMode.VTOL) && !entity.infernos.isStillBurning()) {\n             // VTOLs don't check as long as they are flying higher than\n             // the burning terrain. TODO : Check for rules conformity (ATPM?)\n             // according to maxtech, elevation 0 or 1 should be affected,\n             // this makes sense for level 2 as well\n-\n             if (entity.getElevation() > 1) {\n                 return;\n             }\n         }\n         // Battle Armor squads equipped with fire protection\n         // gear automatically avoid flaming damage\n         // TODO : can conventional infantry mount fire-resistant armor?\n-        if ((entity instanceof BattleArmor)\n-            && ((BattleArmor) entity).isFireResistant()) {\n+        if ((entity instanceof BattleArmor) && ((BattleArmor) entity).isFireResistant()) {\n             r = new Report(5095);\n             r.subject = entity.getId();\n             r.indent(1);\n@@ -20167,6 +20166,7 @@ private void doFlamingDamage(Entity entity) {\n         r.subject = entity.getId();\n         r.newlines = 0;\n         r.addDesc(entity);\n+        r.add(coordinates.getBoardNum());\n         r.add(boomRoll);\n         if (boomRoll >= 8) {\n             // phew!\n@@ -20191,8 +20191,7 @@ private void doFlamingDamage(Entity entity) {\n             // (hurray!)\n             } else if (entity instanceof Tank) {\n                 int bonus = -2;\n-                if ((entity instanceof SupportTank)\n-                    || (entity instanceof SupportVTOL)) {\n+                if ((entity instanceof SupportTank) || (entity instanceof SupportVTOL)) {\n                     bonus = 0;\n                 }\n                 // roll a critical hit\n@@ -20500,7 +20499,7 @@ public void checkForFlamingDamage() {\n             if (curHex.containsTerrain(Terrains.FIRE) && !underwater\n                     && ((entity.getElevation() <= 1)\n                             || (entity.getElevation() <= numFloors))) {\n-                doFlamingDamage(entity);\n+                doFlamingDamage(entity, entity.getPosition());\n             }\n         }\n     }"
  }
]
