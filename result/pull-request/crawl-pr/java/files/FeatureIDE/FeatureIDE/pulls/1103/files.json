[
  {
    "sha": "1bd128876825706909900f2b3beaa98ae72c7804",
    "filename": "plugins/de.ovgu.featureide.fm.core/library/README.md",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/FeatureIDE/FeatureIDE/blob/11bc4c0ccab9f606302350320d8dd72e85f1e35e/plugins/de.ovgu.featureide.fm.core/library/README.md",
    "raw_url": "https://github.com/FeatureIDE/FeatureIDE/raw/11bc4c0ccab9f606302350320d8dd72e85f1e35e/plugins/de.ovgu.featureide.fm.core/library/README.md",
    "contents_url": "https://api.github.com/repos/FeatureIDE/FeatureIDE/contents/plugins/de.ovgu.featureide.fm.core/library/README.md?ref=11bc4c0ccab9f606302350320d8dd72e85f1e35e",
    "patch": "@@ -12,7 +12,9 @@\n \n ### Build\n - Go to the folder `library` of the fm.core plug-in  \n-`cd plugins/de.ovgu.featureide.fm.core/library`\n+`cd plugins/de.ovgu.featureide.fm.core/library`  \n+- If you want to use a custom JDK create a file named `build_jar.properties` with the following content:  \n+`bin.javac.path=<path-to-your-javac>`  \n - Compile the source\n   - **Using the command line:**\n     - Run *ant* with the target *build* (or *clean_build*)  "
  },
  {
    "sha": "c927a4fc97e851c4cd088b3c5d730a563dff01d3",
    "filename": "plugins/de.ovgu.featureide.fm.core/library/subant_build_jar.xml",
    "status": "modified",
    "additions": 43,
    "deletions": 12,
    "changes": 55,
    "blob_url": "https://github.com/FeatureIDE/FeatureIDE/blob/11bc4c0ccab9f606302350320d8dd72e85f1e35e/plugins/de.ovgu.featureide.fm.core/library/subant_build_jar.xml",
    "raw_url": "https://github.com/FeatureIDE/FeatureIDE/raw/11bc4c0ccab9f606302350320d8dd72e85f1e35e/plugins/de.ovgu.featureide.fm.core/library/subant_build_jar.xml",
    "contents_url": "https://api.github.com/repos/FeatureIDE/FeatureIDE/contents/plugins/de.ovgu.featureide.fm.core/library/subant_build_jar.xml?ref=11bc4c0ccab9f606302350320d8dd72e85f1e35e",
    "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n <project name=\"JAR Build Script\" default=\"build\" basedir=\".\">\n-\n+\t\n \t<!-- Set JAR name -->\n \t<property name=\"build.jar.version\" value=\"3.7.0\" />\n \t<property name=\"build.jar.name\" value=\"de.ovgu.featureide.lib.fm\" />\n@@ -23,6 +23,12 @@\n \t<condition property=\"exist-custom-properties\">\n \t\t<available file=\"build_jar.properties\" />\n \t</condition>\n+\t\n+\t<condition property=\"not-exist-custom-properties\">\n+\t    <not>\n+\t\t\t<available file=\"build_jar.properties\" />\n+\t    </not>\n+\t</condition>\n \n \t<target name=\"load-custom-properties\" if=\"exist-custom-properties\">\n \t\t<property file=\"build_jar.properties\" />\n@@ -62,16 +68,9 @@\n \t\t</pathconvert>\n \t\t\n \t\t<!-- Compile the src folder -->\n-\t\t<javac\n-\t\t\tsrcdir=\"${src.dir}\"\n-\t\t\tdestdir=\"${build.bin.dir}\"\n-\t\t\tclasspathref=\"classpath\"\n-\t\t\texcludesfile=\"${build.excludes.path}\"\n-\t\t\tdebug=\"on\" includeantruntime=\"false\" fork=\"yes\"\n-\t\t\tsource=\"1.8\" target=\"1.8\">\n-\t\t\t<compilerarg value=\"-Xlint\" />\n-\t\t</javac>\n-\n+\t\t<antcall target=\"custom-javac\" />\n+\t\t<antcall target=\"default-javac\" />\n+\t\t\n \t\t<!-- Calculate checksum for .class files -->\n \t\t<checksum algorithm=\"SHA-256\" totalproperty=\"build.checksum\" forceoverwrite=\"yes\">\n \t\t\t<fileset dir=\"${build.bin.dir}\">\n@@ -87,7 +86,39 @@\n \n \t\t<!-- Create version file -->\n \t\t<echo file=\"${build.version.path}\" append=\"false\">FeatureIDE Version:\t${build.jar.version}${line.separator}Build Time:         ${timeStamp}${line.separator}Checksum (SHA-256): ${build.checksum}${line.separator}</echo>\n-\n+\t</target>\n+\t\n+\t<target name=\"default-javac\" if=\"not-exist-custom-properties\">\n+    \t<echo>Using default JDK</echo>\n+\t\t<path id=\"classpath\">\n+\t\t\t<fileset dir=\"${lib.dir}\" includes=\"*.jar\" />\n+\t\t</path>\n+\t\t<javac\n+\t\t\tsrcdir=\"${src.dir}\"\n+\t\t\tdestdir=\"${build.bin.dir}\"\n+\t\t\tclasspathref=\"classpath\"\n+\t\t\texcludesfile=\"${build.excludes.path}\"\n+\t\t\tdebug=\"on\" includeantruntime=\"false\" fork=\"yes\"\n+\t\t\tsource=\"1.8\" target=\"1.8\">\n+\t\t\t<compilerarg value=\"-Xlint\" />\n+\t\t</javac>\n+\t</target>\n+\t\n+\t<target name=\"custom-javac\" if=\"exist-custom-properties\">\n+    \t<echo>Using custom JDK: ${bin.javac.path}</echo>\n+\t\t<path id=\"classpath\">\n+\t\t\t<fileset dir=\"${lib.dir}\" includes=\"*.jar\" />\n+\t\t</path>\n+\t\t<javac\n+\t\t\tsrcdir=\"${src.dir}\"\n+\t\t\tdestdir=\"${build.bin.dir}\"\n+\t\t\tclasspathref=\"classpath\"\n+\t\t\texcludesfile=\"${build.excludes.path}\"\n+\t\t\tdebug=\"on\" includeantruntime=\"false\" fork=\"yes\"\n+\t\t\tsource=\"1.8\" target=\"1.8\"\n+\t\t\texecutable=\"${bin.javac.path}\">\n+\t\t\t<compilerarg value=\"-Xlint\" />\n+\t\t</javac>\n \t</target>\n \n \t<!-- Build jar file, including source files and license file -->"
  },
  {
    "sha": "e071d364286f352f664d948b2d09e64f7d9efec7",
    "filename": "plugins/de.ovgu.featureide.fm.ui/src/de/ovgu/featureide/fm/ui/editors/configuration/ConfigurationTreeEditorPage.java",
    "status": "modified",
    "additions": 9,
    "deletions": 3,
    "changes": 12,
    "blob_url": "https://github.com/FeatureIDE/FeatureIDE/blob/11bc4c0ccab9f606302350320d8dd72e85f1e35e/plugins/de.ovgu.featureide.fm.ui/src/de/ovgu/featureide/fm/ui/editors/configuration/ConfigurationTreeEditorPage.java",
    "raw_url": "https://github.com/FeatureIDE/FeatureIDE/raw/11bc4c0ccab9f606302350320d8dd72e85f1e35e/plugins/de.ovgu.featureide.fm.ui/src/de/ovgu/featureide/fm/ui/editors/configuration/ConfigurationTreeEditorPage.java",
    "contents_url": "https://api.github.com/repos/FeatureIDE/FeatureIDE/contents/plugins/de.ovgu.featureide.fm.ui/src/de/ovgu/featureide/fm/ui/editors/configuration/ConfigurationTreeEditorPage.java?ref=11bc4c0ccab9f606302350320d8dd72e85f1e35e",
    "patch": "@@ -164,7 +164,9 @@\n \tprotected static final Color red = new Color(null, 240, 0, 0);\n \n \tprotected static final Font treeItemStandardFont = new Font(null, ARIAL, 8, SWT.NORMAL);\n-\tprotected static final Font treeItemSpecialFont = new Font(null, ARIAL, 8, SWT.BOLD);\n+\tprotected static final Font treeItemBoldFont = new Font(null, ARIAL, 8, SWT.BOLD);\n+\tprotected static final Font treeItemItalicFont = new Font(null, ARIAL, 8, SWT.ITALIC);\n+\tprotected static final Font treeItemBoldItalicFont = new Font(null, ARIAL, 8, SWT.BOLD | SWT.ITALIC);\n \n \tprivate static final Image IMAGE_EXPAND = FMUIPlugin.getDefault().getImageDescriptor(\"icons/expand.gif\").createImage();\n \tprivate static final Image IMAGE_COLLAPSE = FMUIPlugin.getDefault().getImageDescriptor(\"icons/collapse.gif\").createImage();\n@@ -962,6 +964,9 @@ protected void refreshItem(Collection<TreeItem> items) {\n \t\t\t\t\t\tchecked = false;\n \t\t\t\t\t\tgrayed = true;\n \t\t\t\t\t\tfgColor = gray;\n+\t\t\t\t\t\t// On most operating systems, we use gray text color to show that a feature cannot be selected.\n+\t\t\t\t\t\t// On Ubuntu, this does not work and instead, we use an italic font (see issue #1055).\n+\t\t\t\t\t\tfont = treeItemItalicFont;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase UNDEFINED:\n \t\t\t\t\t\tchecked = feature.getManual() == Selection.SELECTED;\n@@ -972,11 +977,12 @@ protected void refreshItem(Collection<TreeItem> items) {\n \t\t\t\t\tif (automatic == Selection.UNDEFINED) {\n \t\t\t\t\t\tswitch (recommended) {\n \t\t\t\t\t\tcase SELECTED:\n-\t\t\t\t\t\t\tfont = treeItemSpecialFont;\n+\t\t\t\t\t\t\t// again, this is a workaround for Ubuntu, which does not show the gray font color correctly\n+\t\t\t\t\t\t\tfont = fgColor == gray ? treeItemBoldItalicFont : treeItemBoldFont;\n \t\t\t\t\t\t\tfgColor = green;\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase UNSELECTED:\n-\t\t\t\t\t\t\tfont = treeItemSpecialFont;\n+\t\t\t\t\t\t\tfont = fgColor == gray ? treeItemBoldItalicFont : treeItemBoldFont;\n \t\t\t\t\t\t\tfgColor = blue;\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\tcase UNDEFINED:"
  }
]
