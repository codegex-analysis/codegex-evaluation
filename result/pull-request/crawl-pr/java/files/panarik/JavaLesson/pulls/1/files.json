[
  {
    "sha": "e33195484d164acb7697232aed43cdae1d325751",
    "filename": "Readme.md",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/panarik/JavaLesson/blob/d2a6772198570c1877d01dc2ee878bc34ec90746/Readme.md",
    "raw_url": "https://github.com/panarik/JavaLesson/raw/d2a6772198570c1877d01dc2ee878bc34ec90746/Readme.md",
    "contents_url": "https://api.github.com/repos/panarik/JavaLesson/contents/Readme.md?ref=d2a6772198570c1877d01dc2ee878bc34ec90746",
    "patch": "@@ -4,10 +4,10 @@\n --------|------|-------\n Урок №1 | 1. Создать пустой проект в IntelliJ IDEA и прописать метод main() | 1.Проект создан. Метод main() есть в классе [SimpleClass](https://github.com/panarik/JavaLesson/blob/master/src/com/github/panarik/javaLesson/main/SimpleClass.java)\n Урок №1 | 2. Создать переменные всех пройденных типов данных и инициализировать их значения. | Переменные в классе [ExamplePrimitive](https://github.com/panarik/JavaLesson/blob/master/src/com/github/panarik/javaLesson/values/primitive/ExamplePrimitive.java)\n-Урок №1 | 3. Написать метод, вычисляющий выражение a * (b + (c / d)) и возвращающий результат, где a, b, c, d – аргументы этого метода, имеющие тип float. | Метод arithmeticCalc() В классе [Int](https://github.com/panarik/JavaLesson/blob/master/src/com/github/panarik/javaLesson/values/primitive/arithmetic/Int.java)\n+Урок №1 | 3. Написать метод, вычисляющий выражение a * (b + (c / d)) и возвращающий результат, где a, b, c, d – аргументы этого метода, имеющие тип float. | Метод [arithmeticCalc()](https://github.com/panarik/JavaLesson/blob/master/src/com/github/panarik/javaLesson/values/primitive/arithmetic/Int.java)\n Урок №1 | 4. Написать метод, принимающий на вход два целых числа и проверяющий, что их сумма лежит в пределах от 10 до 20 (включительно), если да – вернуть true, в противном случае – false. | Метод [if10to20](https://github.com/panarik/JavaLesson/blob/master/src/com/github/panarik/javaLesson/operator/IfSum.java)\n Урок №1 | 5. Написать метод, которому в качестве параметра передается целое число, метод должен напечатать в консоль, положительное ли число передали или отрицательное. Замечание: ноль считаем положительным числом. | Метод [positiveOrNegative()](https://github.com/panarik/JavaLesson/blob/master/src/com/github/panarik/javaLesson/operator/IfOne.java)\n-Урок №1 | 6. Написать метод, которому в качестве параметра передается целое число. Метод должен вернуть true, если число отрицательное, и вернуть false если положительное. | Метод [positiveOrNegative2](https://github.com/panarik/JavaLesson/blob/master/src/com/github/panarik/javaLesson/operator/IfOne.java)\n-Урок №1 | 7. Написать метод, которому в качестве параметра передается строка, обозначающая имя. Метод должен вывести в консоль сообщение «Привет, указанное_имя!». | Метод [printName](https://github.com/panarik/JavaLesson/blob/master/src/com/github/panarik/javaLesson/method/CallMethod.java#L51)\n-Урок №1 | 8. Написать метод, который определяет, является ли год високосным, и выводит сообщение в консоль. Каждый 4-й год является високосным, кроме каждого 100-го, при этом каждый 400-й – високосный. | \n+Урок №1 | 6. Написать метод, которому в качестве параметра передается целое число. Метод должен вернуть true, если число отрицательное, и вернуть false если положительное. | Метод [positiveOrNegative2()](https://github.com/panarik/JavaLesson/blob/master/src/com/github/panarik/javaLesson/operator/IfOne.java)\n+Урок №1 | 7. Написать метод, которому в качестве параметра передается строка, обозначающая имя. Метод должен вывести в консоль сообщение «Привет, указанное_имя!». | Метод [printName()](https://github.com/panarik/JavaLesson/blob/master/src/com/github/panarik/javaLesson/method/CallMethod.java#L51)\n+Урок №1 | 8. Написать метод, который определяет, является ли год високосным, и выводит сообщение в консоль. Каждый 4-й год является високосным, кроме каждого 100-го, при этом каждый 400-й – високосный. | Метод [ifLeapYear()](https://github.com/panarik/JavaLesson/blob/master/src/com/github/panarik/javaLesson/values/primitive/arithmetic/Int.java#L31)\n "
  }
]
