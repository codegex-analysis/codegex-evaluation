[
  {
    "sha": "d448195b56e0581ffa3811098d0dab310565ea7b",
    "filename": "src/client/Controller.java",
    "status": "modified",
    "additions": 103,
    "deletions": 14,
    "changes": 117,
    "blob_url": "https://github.com/Bizmatek/chat/blob/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/client/Controller.java",
    "raw_url": "https://github.com/Bizmatek/chat/raw/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/client/Controller.java",
    "contents_url": "https://api.github.com/repos/Bizmatek/chat/contents/src/client/Controller.java?ref=4ede47aeae7a39f828f5f7de0009abb160b57c8c",
    "patch": "@@ -2,13 +2,21 @@\n \n import javafx.application.Platform;\n import javafx.event.ActionEvent;\n+import javafx.event.EventHandler;\n import javafx.fxml.FXML;\n+import javafx.fxml.FXMLLoader;\n import javafx.fxml.Initializable;\n+import javafx.scene.Parent;\n+import javafx.scene.Scene;\n+import javafx.scene.control.ListView;\n import javafx.scene.control.PasswordField;\n import javafx.scene.control.TextArea;\n import javafx.scene.control.TextField;\n+import javafx.scene.input.MouseEvent;\n import javafx.scene.layout.HBox;\n+import javafx.stage.Modality;\n import javafx.stage.Stage;\n+import javafx.stage.WindowEvent;\n \n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n@@ -31,6 +39,12 @@\n     public HBox msgPanel;\n     @FXML\n     public TextField textField;\n+    @FXML\n+    public ListView<String> clientList;\n+\n+    private Stage stage;\n+    private Stage regStage;\n+    private RegController regController;\n \n     private String nickName;\n     private boolean isAuthenticated;\n@@ -42,23 +56,25 @@\n \n     private final String TITLE = \"Chat\";\n \n-    public void setAuthenticated(boolean isAuthenticated){\n+    public void setAuthenticated(boolean isAuthenticated) {\n         this.isAuthenticated = isAuthenticated;\n         authPanel.setVisible(!isAuthenticated);\n         authPanel.setManaged(!isAuthenticated);\n         msgPanel.setVisible(isAuthenticated);\n         msgPanel.setManaged(isAuthenticated);\n+        clientList.setVisible(isAuthenticated);\n+        clientList.setManaged(isAuthenticated);\n \n-        if(!isAuthenticated){\n+        if (!isAuthenticated) {\n             nickName = \"\";\n         }\n         setTitle(nickName);\n     }\n \n-    private void setTitle(String nickName){\n-        Platform.runLater(()-> ((Stage)textField.getScene()\n+    private void setTitle(String nickName) {\n+        Platform.runLater(() -> ((Stage) textField.getScene()\n                 .getWindow())\n-                .setTitle(String.format(\"%s: %s\", TITLE , nickName)));\n+                .setTitle(String.format(\"%s: %s\", TITLE, nickName)));\n     }\n \n     public void tryToAuth(ActionEvent actionEvent) {\n@@ -91,6 +107,39 @@ public void sendMsg(ActionEvent actionEvent) {\n     @Override\n     public void initialize(URL location, ResourceBundle resources) {\n         setAuthenticated(false);\n+        createRegWindow();\n+        Platform.runLater(() -> {\n+            stage = (Stage) textField.getScene().getWindow();\n+            stage.setOnCloseRequest(new EventHandler<WindowEvent>() {\n+                @Override\n+                public void handle(WindowEvent event) {\n+                    if (socket != null && !socket.isClosed()) {\n+                        try {\n+                            outputStream.writeUTF(\"/end\");\n+                        } catch (IOException e) {\n+                            e.printStackTrace();\n+                        }\n+                    }\n+                }\n+            });\n+        });\n+    }\n+\n+    private void createRegWindow() {\n+        try {\n+            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"reg.fxml\"));\n+            Parent root = fxmlLoader.load();\n+            regStage = new Stage();\n+            regStage.setTitle(\"Reg window\");\n+            regStage.setScene(new Scene(root, 400, 250));\n+\n+            regController = fxmlLoader.getController();\n+            regController.setController(this);\n+\n+            regStage.initModality(Modality.APPLICATION_MODAL);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n     }\n \n     public void connect() {\n@@ -100,23 +149,42 @@ public void connect() {\n             outputStream = new DataOutputStream(socket.getOutputStream());\n \n             Runnable t1 = (() -> {\n-                while (true) {\n-                    try {\n+\n+                try {\n+                    while (true) {\n                         String str = inputStream.readUTF();\n-                        if (str.startsWith(\"/authok\")) {\n-                            nickName = str.split(\" \", 2)[1];\n-                            setAuthenticated(true);\n-                            break;\n-                        }\n-                    } catch (IOException e) {\n-                        e.printStackTrace();\n+                            if (str.startsWith(\"/authok\")) {\n+                                nickName = str.split(\" \", 2)[1];\n+                                setAuthenticated(true);\n+                                break;\n+                            }\n+                            if (str.startsWith(\"/regok\")) {\n+                                regController.addMsgToTextArea(\"Registration successful\");\n+                            }\n+                            if (str.startsWith(\"/regno\")) {\n+                                regController.addMsgToTextArea(\"Registration failed. Try to use another login or nickname\");\n+                            }\n+                        textArea.appendText(str + \"\\n\");\n                     }\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n                 }\n \n \n                 while (true) {\n                     try {\n                         String str = inputStream.readUTF();\n+\n+                        if(str.startsWith(\"/clientsList\")){\n+                            String[] token = str.split(\"\\\\s+\");\n+                            Platform.runLater(()->{\n+                                clientList.getItems().clear();\n+                                for (int i = 1; i < token.length; i++) {\n+                                    clientList.getItems().add(token[i]);\n+                                }\n+                            });\n+                        }\n+\n                         textArea.appendText(str + \"\\n\");\n \n                     } catch (IOException e) {\n@@ -131,4 +199,25 @@ public void connect() {\n             e.printStackTrace();\n         }\n     }\n+\n+    public void signUp(ActionEvent actionEvent) {\n+        regStage.show();\n+    }\n+\n+    public void tryToReg(String login, String password, String nickName) {\n+        String message = String.format(\"/reg %s %s %s\", login, password, nickName);\n+        if (socket == null || socket.isClosed()) {\n+            connect();\n+        }\n+        try {\n+            outputStream.writeUTF(message);\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public void clickClientList(MouseEvent mouseEvent) {\n+        String receiver = clientList.getSelectionModel().getSelectedItem();\n+        textField.setText(\"/w \" + receiver + \" \");\n+    }\n }"
  },
  {
    "sha": "9c5a028b79fcef0876bc2ce902b4134f5897d293",
    "filename": "src/client/RegController.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/Bizmatek/chat/blob/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/client/RegController.java",
    "raw_url": "https://github.com/Bizmatek/chat/raw/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/client/RegController.java",
    "contents_url": "https://api.github.com/repos/Bizmatek/chat/contents/src/client/RegController.java?ref=4ede47aeae7a39f828f5f7de0009abb160b57c8c",
    "patch": "@@ -0,0 +1,28 @@\n+package client;\n+\n+import javafx.event.ActionEvent;\n+import javafx.scene.control.PasswordField;\n+import javafx.scene.control.TextArea;\n+import javafx.scene.control.TextField;\n+\n+public class RegController {\n+    public TextField loginField;\n+    public TextField nickField;\n+    public PasswordField passwordField;\n+    public TextArea textArea;\n+    private Controller controller;\n+\n+    public void setController(Controller controller) {\n+        this.controller = controller;\n+    }\n+\n+    public void tryToReg(ActionEvent actionEvent) {\n+        controller.tryToReg(loginField.getText().trim(),\n+                passwordField.getText().trim(),\n+                nickField.getText().trim());\n+    }\n+\n+    public void addMsgToTextArea(String msg) {\n+        textArea.appendText(msg + \"\\n\");\n+    }\n+}"
  },
  {
    "sha": "67316b752cbbd9131850cc882e31189be3436639",
    "filename": "src/client/reg.fxml",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/Bizmatek/chat/blob/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/client/reg.fxml",
    "raw_url": "https://github.com/Bizmatek/chat/raw/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/client/reg.fxml",
    "contents_url": "https://api.github.com/repos/Bizmatek/chat/contents/src/client/reg.fxml?ref=4ede47aeae7a39f828f5f7de0009abb160b57c8c",
    "patch": "@@ -0,0 +1,26 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<?import javafx.scene.control.*?>\n+<?import javafx.scene.layout.*?>\n+<VBox fx:controller=\"client.RegController\"\n+      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\">\n+\n+    <HBox>\n+        <Label text=\"Login: \" prefWidth=\"100\"/>\n+        <TextField fx:id=\"loginField\" promptText=\"login\" HBox.hgrow=\"ALWAYS\"/>\n+    </HBox>\n+\n+    <HBox>\n+        <Label text=\"NickName: \" prefWidth=\"100\"/>\n+        <TextField fx:id=\"nickField\" promptText=\"nickname\" HBox.hgrow=\"ALWAYS\"/>\n+    </HBox>\n+\n+    <HBox>\n+        <Label text=\"Password: \" prefWidth=\"100\"/>\n+        <PasswordField fx:id=\"passwordField\" promptText=\"password\" HBox.hgrow=\"ALWAYS\"/>\n+    </HBox>\n+\n+    <TextArea fx:id=\"textArea\" VBox.vgrow=\"ALWAYS\"/>\n+    <Button text=\"Зарегестрироваться\" onAction=\"#tryToReg\"/>\n+\n+</VBox>\n\\ No newline at end of file"
  },
  {
    "sha": "12e1fddd18be268055f40270b2836e83ced47ea6",
    "filename": "src/client/sample.fxml",
    "status": "modified",
    "additions": 8,
    "deletions": 2,
    "changes": 10,
    "blob_url": "https://github.com/Bizmatek/chat/blob/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/client/sample.fxml",
    "raw_url": "https://github.com/Bizmatek/chat/raw/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/client/sample.fxml",
    "contents_url": "https://api.github.com/repos/Bizmatek/chat/contents/src/client/sample.fxml?ref=4ede47aeae7a39f828f5f7de0009abb160b57c8c",
    "patch": "@@ -4,17 +4,23 @@\n <?import javafx.scene.control.PasswordField?>\n <?import javafx.scene.control.Button?>\n <?import javafx.scene.control.TextArea?>\n+<?import javafx.scene.control.ListView?>\n <VBox fx:controller=\"client.Controller\"\n-        xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\" >\n+      xmlns:fx=\"http://javafx.com/fxml\" alignment=\"center\" >\n \n     <HBox fx:id = \"authPanel\" visible=\"true\" managed=\"true\">\n         <TextField fx:id = \"loginField\" promptText=\"login\" HBox.hgrow=\"ALWAYS\"/>\n         <PasswordField fx:id=\"passwordField\" promptText=\"password\" HBox.hgrow=\"ALWAYS\"\n                        onAction = \"#tryToAuth\"/>\n         <Button text=\"auth\" onAction = \"#tryToAuth\" minWidth=\"50\"/>\n+        <Button text=\"reg\" onAction = \"#signUp\" minWidth=\"50\"/>\n     </HBox>\n \n-    <TextArea fx:id = \"textArea\" VBox.vgrow=\"ALWAYS\" editable=\"false\"/>\n+    <HBox VBox.vgrow=\"ALWAYS\">\n+        <TextArea fx:id=\"textArea\" VBox.vgrow=\"ALWAYS\" editable=\"false\" wrapText=\"true\"/>\n+        <ListView fx:id=\"clientList\" visible=\"false\" managed=\"false\" minWidth=\"70\"\n+                  onMouseClicked=\"#clickClientList\"/>\n+    </HBox>\n \n     <HBox fx:id = \"msgPanel\" visible=\"false\" managed=\"false\">\n         <TextField fx:id = \"textField\" promptText=\"input messge\" HBox.hgrow=\"ALWAYS\""
  },
  {
    "sha": "e5bfa8e70643a5570f3e523f8cdafe01596b4a31",
    "filename": "src/server/AuthService.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Bizmatek/chat/blob/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/server/AuthService.java",
    "raw_url": "https://github.com/Bizmatek/chat/raw/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/server/AuthService.java",
    "contents_url": "https://api.github.com/repos/Bizmatek/chat/contents/src/server/AuthService.java?ref=4ede47aeae7a39f828f5f7de0009abb160b57c8c",
    "patch": "@@ -2,4 +2,5 @@\n \n public interface AuthService {\n     String getLoginByLoginAndPassword(String login, String password);\n+    boolean registration(String login, String password, String nickname);\n }"
  },
  {
    "sha": "419c8fa14d3c670ed7d79875a8b253ccc99e1e0a",
    "filename": "src/server/ClientHandler.java",
    "status": "modified",
    "additions": 31,
    "deletions": 11,
    "changes": 42,
    "blob_url": "https://github.com/Bizmatek/chat/blob/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/server/ClientHandler.java",
    "raw_url": "https://github.com/Bizmatek/chat/raw/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/server/ClientHandler.java",
    "contents_url": "https://api.github.com/repos/Bizmatek/chat/contents/src/server/ClientHandler.java?ref=4ede47aeae7a39f828f5f7de0009abb160b57c8c",
    "patch": "@@ -4,6 +4,7 @@\n import java.io.DataOutputStream;\n import java.io.IOException;\n import java.net.Socket;\n+import java.net.SocketTimeoutException;\n \n public class ClientHandler {\n     private Server server;\n@@ -20,29 +21,47 @@ public ClientHandler(Server server, Socket socket) {\n         this.server = server;\n         this.socket = socket;\n         try {\n+            socket.setSoTimeout(10000);\n             inputStream = new DataInputStream(socket.getInputStream());\n             outputStream = new DataOutputStream(socket.getOutputStream());\n         } catch (IOException e) {\n             e.printStackTrace();\n         }\n \n         //try to authenticate\n-        while(true){\n-            try{\n+        while (true) {\n+            try {\n                 String str = inputStream.readUTF();\n-                if(str.startsWith(\"/auth\")){\n+                if (str.startsWith(\"/auth\")) {\n                     String[] token = str.split(\"\\\\s\");\n                     nickName = server.auth(token[1], token[2]);\n-                    if(nickName != null){\n-                        System.out.printf(\"Client %s has been authorized\", nickName);\n+                    if (nickName != null) {\n+                        System.out.printf(\"Client %s has been authorized \\n\", nickName);\n                         sendMessage(\"/authok \" + nickName);\n+                        socket.setSoTimeout(0);\n                         server.subscribe(this);\n                         break;\n-                    } else{\n-                        System.out.println(\"Unable to authenticate: invalid login/password\");\n+                    } else {\n+                        System.out.println(\"Unable to authenticate: invalid login/password \\n\");\n                     }\n                 }\n-            } catch (IOException e){\n+                if (str.startsWith(\"/reg\")) {\n+                    String[] token = str.split(\"\\\\s\");\n+                    if (token.length != 4) {\n+                        continue;\n+                    }\n+                    boolean isRegistration = server.getAuthService().registration(token[1], token[2], token[3]);\n+\n+                    if (isRegistration) {\n+                        sendMessage(\"/regok\");\n+                    } else {\n+                        sendMessage(\"/regno\");\n+                    }\n+\n+                }\n+            } catch (SocketTimeoutException e) {\n+                break;\n+            } catch (IOException e) {\n                 e.printStackTrace();\n             }\n         }\n@@ -55,15 +74,16 @@ public ClientHandler(Server server, Socket socket) {\n                         break;\n                     }\n \n-                    if(str.startsWith(\"/w \")){\n+                    if (str.startsWith(\"/w \")) {\n                         String recipient = str.split(\"\\\\s\")[1];\n                         String msg = str.replace(str.split(\"\\\\s\")[0], \"\").replace(str.split(\"\\\\s\")[1], \"\");\n                         server.sendDirect(this, recipient, msg);\n                         continue;\n                     }\n-\n                     server.sendBroadcast(this, str);\n-                } catch (IOException e) {\n+                } catch (SocketTimeoutException e) {\n+                    break;\n+                }catch (IOException e) {\n                     e.printStackTrace();\n                 }\n "
  },
  {
    "sha": "4795d0f47860aa14ef991b4e8f7b4606294c83b8",
    "filename": "src/server/Server.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/Bizmatek/chat/blob/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/server/Server.java",
    "raw_url": "https://github.com/Bizmatek/chat/raw/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/server/Server.java",
    "contents_url": "https://api.github.com/repos/Bizmatek/chat/contents/src/server/Server.java?ref=4ede47aeae7a39f828f5f7de0009abb160b57c8c",
    "patch": "@@ -36,10 +36,12 @@ private void init() {\n \n     public void subscribe(ClientHandler clientHandler) {\n         clientsList.add(clientHandler);\n+        broadcastClientList();\n     }\n \n     public void unsubscribe(ClientHandler clientHandler) {\n         clientsList.remove(clientHandler);\n+        broadcastClientList();\n     }\n \n     public void sendBroadcast(ClientHandler sender, String msg) {\n@@ -56,4 +58,17 @@ public void sendDirect(ClientHandler sender, String recipient, String msg) {\n     public String auth(String login, String password) {\n         return authService.getLoginByLoginAndPassword(login, password);\n     }\n+\n+    public AuthService getAuthService() {\n+        return authService;\n+    }\n+\n+    private void broadcastClientList() {\n+        StringBuilder sb = new StringBuilder(\"/clientsList \");\n+        clientsList.stream()\n+                .forEach(c -> sb.append(c.getNickName()).append(\" \"));\n+        String msg = sb.toString();\n+        clientsList.forEach(c -> c.sendMessage(msg));\n+\n+    }\n }"
  },
  {
    "sha": "7845c82807a3c471411fdfcfe2ab6cc83c5f6f43",
    "filename": "src/server/SimpleAuthService.java",
    "status": "modified",
    "additions": 18,
    "deletions": 7,
    "changes": 25,
    "blob_url": "https://github.com/Bizmatek/chat/blob/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/server/SimpleAuthService.java",
    "raw_url": "https://github.com/Bizmatek/chat/raw/4ede47aeae7a39f828f5f7de0009abb160b57c8c/src/server/SimpleAuthService.java",
    "contents_url": "https://api.github.com/repos/Bizmatek/chat/contents/src/server/SimpleAuthService.java?ref=4ede47aeae7a39f828f5f7de0009abb160b57c8c",
    "patch": "@@ -1,5 +1,6 @@\n package server;\n \n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n \n@@ -20,23 +21,33 @@ public User(String login, String password, String nickName) {\n \n     public SimpleAuthService() {\n \n-        usersList = Arrays.asList(\n+        usersList = new ArrayList<>(Arrays.asList(\n                 new User(\"111\", \"111\", \"nick111\"),\n                 new User(\"222\", \"222\", \"nick222\"),\n                 new User(\"333\", \"333\", \"nick333\"),\n                 new User(\"444\", \"444\", \"nick444\")\n-        );\n+        ));\n     }\n \n     @Override\n     public String getLoginByLoginAndPassword(String login, String password) {\n \n-    for(User user : usersList){\n-        if(login.equals(user.login)\n-                && password.equals(user.password)){\n-            return  user.nickName;\n+        for (User user : usersList) {\n+            if (login.equals(user.login)\n+                    && password.equals(user.password)) {\n+                return user.nickName;\n+            }\n         }\n-    }\n         return null;\n     }\n+\n+    @Override\n+    public boolean registration(String login, String password, String nickname) {\n+        if (usersList.stream()\n+                .noneMatch(u -> u.login.equals(login) || u.nickName.equals(nickname))) {\n+            usersList.add(new User(login, password, nickname));\n+            return true;\n+        }\n+        return false;\n+    }\n }"
  }
]
