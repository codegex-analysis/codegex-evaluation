[
  {
    "sha": "8c5373dd1a317dc1e86772d37ed954f17f5edc2e",
    "filename": "json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java",
    "status": "modified",
    "additions": 13,
    "deletions": 5,
    "changes": 18,
    "blob_url": "https://github.com/netplex/json-smart-v1/blob/3db4106ff2c9c1e9b919b49aeba52eabdfff7220/json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java",
    "raw_url": "https://github.com/netplex/json-smart-v1/raw/3db4106ff2c9c1e9b919b49aeba52eabdfff7220/json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java",
    "contents_url": "https://api.github.com/repos/netplex/json-smart-v1/contents/json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java?ref=3db4106ff2c9c1e9b919b49aeba52eabdfff7220",
    "patch": "@@ -134,11 +134,19 @@ public void checkLeadinZero() throws ParseException {\n \tprotected Number extractFloat() throws ParseException {\n \t\tif (!acceptLeadinZero)\n \t\t\tcheckLeadinZero();\n-\t\tif (!useHiPrecisionFloat)\n-\t\t\treturn Float.parseFloat(xs);\n-\t\tif (xs.length() > 18) // follow JSonIJ parsing method\n-\t\t\treturn new BigDecimal(xs);\n-\t\treturn Double.parseDouble(xs);\n+\n+\t\ttry {\n+\t\t\tif (!useHiPrecisionFloat)\n+\t\t\t\treturn Float.parseFloat(xs);\n+\n+\t\t\tif (xs.length() > 18) // follow JSonIJ parsing method\n+\t\t\t\treturn new BigDecimal(xs);\n+\n+\t\t\treturn Double.parseDouble(xs);\n+\n+\t\t} catch(NumberFormatException e){\n+\t\t\tthrow new ParseException(pos, ERROR_UNEXPECTED_TOKEN, xs);\n+\t\t}\n \t}\n \n \t/**"
  }
]
