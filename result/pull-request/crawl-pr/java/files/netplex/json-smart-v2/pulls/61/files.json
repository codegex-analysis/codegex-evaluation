[
  {
    "sha": "5f7c1bedc7fe6769e1bb2e09379a6cf50fbff8ca",
    "filename": "json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java",
    "status": "modified",
    "additions": 13,
    "deletions": 5,
    "changes": 18,
    "blob_url": "https://github.com/netplex/json-smart-v2/blob/c98873a3e85625d582cd448f90d97a1ad38b322a/json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java",
    "raw_url": "https://github.com/netplex/json-smart-v2/raw/c98873a3e85625d582cd448f90d97a1ad38b322a/json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java",
    "contents_url": "https://api.github.com/repos/netplex/json-smart-v2/contents/json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java?ref=c98873a3e85625d582cd448f90d97a1ad38b322a",
    "patch": "@@ -139,11 +139,19 @@ public void checkLeadinZero() throws ParseException {\n \tprotected Number extractFloat() throws ParseException {\n \t\tif (!acceptLeadinZero)\n \t\t\tcheckLeadinZero();\n-\t\tif (!useHiPrecisionFloat)\n-\t\t\treturn Float.parseFloat(xs);\n-\t\tif (xs.length() > 18) // follow JSonIJ parsing method\n-\t\t\treturn new BigDecimal(xs);\n-\t\treturn Double.parseDouble(xs);\n+\n+\t\ttry {\n+\t\t\tif (!useHiPrecisionFloat)\n+\t\t\t\treturn Float.parseFloat(xs);\n+\n+\t\t\tif (xs.length() > 18) // follow JSonIJ parsing method\n+\t\t\t\treturn new BigDecimal(xs);\n+\n+\t\t\treturn Double.parseDouble(xs);\n+\n+\t\t} catch(NumberFormatException e){\n+\t\t\tthrow new ParseException(pos, ERROR_UNEXPECTED_TOKEN, xs);\n+\t\t}\n \t}\n \n \t/**"
  }
]
