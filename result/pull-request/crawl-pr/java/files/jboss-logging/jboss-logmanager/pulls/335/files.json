[
  {
    "sha": "3f0b0c8b7d110e4af263442cdfa479d54a3f61e2",
    "filename": "core/src/main/java/org/jboss/logmanager/ExtLogRecord.java",
    "status": "modified",
    "additions": 14,
    "deletions": 1,
    "changes": 15,
    "blob_url": "https://github.com/jboss-logging/jboss-logmanager/blob/6692dc6bf38eb07d1ad96ca2789f902a036e5fbb/core/src/main/java/org/jboss/logmanager/ExtLogRecord.java",
    "raw_url": "https://github.com/jboss-logging/jboss-logmanager/raw/6692dc6bf38eb07d1ad96ca2789f902a036e5fbb/core/src/main/java/org/jboss/logmanager/ExtLogRecord.java",
    "contents_url": "https://api.github.com/repos/jboss-logging/jboss-logmanager/contents/core/src/main/java/org/jboss/logmanager/ExtLogRecord.java?ref=6692dc6bf38eb07d1ad96ca2789f902a036e5fbb",
    "patch": "@@ -144,7 +144,7 @@ public static ExtLogRecord wrap(LogRecord rec) {\n     private transient boolean calculateCaller = true;\n \n     private String ndc;\n-    private FormatStyle formatStyle = FormatStyle.MESSAGE_FORMAT;\n+    private FormatStyle formatStyle;\n     private FastCopyHashMap<String, Object> mdcCopy;\n     private int sourceLineNumber = -1;\n     private String sourceFileName;\n@@ -154,6 +154,7 @@ public static ExtLogRecord wrap(LogRecord rec) {\n     private long processId = -1;\n     private String sourceModuleName;\n     private String sourceModuleVersion;\n+    private Object marker;\n \n     private void writeObject(ObjectOutputStream oos) throws IOException {\n         copyAll();\n@@ -174,6 +175,7 @@ private void readObject(ObjectInputStream ois) throws IOException, ClassNotFound\n         processId = fields.get(\"processId\", -1L);\n         sourceModuleName = (String) fields.get(\"sourceModuleName\", null);\n         sourceModuleVersion = (String) fields.get(\"sourceModuleVersion\", null);\n+        marker = fields.get(\"marker\", null);\n     }\n \n     /**\n@@ -618,4 +620,15 @@ public void setResourceBundle(final ResourceBundle bundle) {\n     public void setResourceBundleName(final String name) {\n         super.setResourceBundleName(name);\n     }\n+\n+    /**\n+     * Set the marker for this event. Markers are used mostly by SLF4J and Log4j.\n+     */\n+    public void setMarker(Object marker) {\n+        this.marker = marker;\n+    }\n+\n+    public Object getMarker() {\n+        return marker;\n+    }\n }"
  }
]
