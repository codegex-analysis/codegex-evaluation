[
  {
    "sha": "3211c7f30f2994e77bdd46a3d2bcda1b8d9b477d",
    "filename": "2021/java/820.short-encoding-of.words.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/snowan/interviews/blob/45c228ca74234fa1b1b3b64e60bff905868d7805/2021/java/820.short-encoding-of.words.java",
    "raw_url": "https://github.com/snowan/interviews/raw/45c228ca74234fa1b1b3b64e60bff905868d7805/2021/java/820.short-encoding-of.words.java",
    "contents_url": "https://api.github.com/repos/snowan/interviews/contents/2021/java/820.short-encoding-of.words.java?ref=45c228ca74234fa1b1b3b64e60bff905868d7805",
    "patch": "@@ -0,0 +1,18 @@\n+class Solution {\n+    public int minimumLengthEncoding(String[] words) {\n+        if (words == null || words.length == 0) return 0;\n+        // unique words in set\n+        Set<String> set = new HashSet<>(Arrays.asList(words));\n+        for (String w : words) {\n+            // remove any word which is suffix \n+            for (int j = 1; j < w.length(); j++) {\n+                set.remove(w.substring(j));\n+            }\n+        }\n+        int res = 0;\n+        for (String s : set) {\n+            res += s.length() + 1;\n+        }\n+        return res;\n+    }\n+}"
  }
]
