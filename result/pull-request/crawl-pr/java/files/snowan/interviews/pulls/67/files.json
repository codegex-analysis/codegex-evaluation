[
  {
    "sha": "67306f0e912aa4037278ac7eb1a79b92068cf6cb",
    "filename": "2021/java/160.intersection-two-linked-list.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/snowan/interviews/blob/2b78e2c19e3383c9ed9b34cfbcdd3ea77a5c9985/2021/java/160.intersection-two-linked-list.java",
    "raw_url": "https://github.com/snowan/interviews/raw/2b78e2c19e3383c9ed9b34cfbcdd3ea77a5c9985/2021/java/160.intersection-two-linked-list.java",
    "contents_url": "https://api.github.com/repos/snowan/interviews/contents/2021/java/160.intersection-two-linked-list.java?ref=2b78e2c19e3383c9ed9b34cfbcdd3ea77a5c9985",
    "patch": "@@ -0,0 +1,23 @@\n+/**\n+ * Definition for singly-linked list.\n+ * public class ListNode {\n+ *     int val;\n+ *     ListNode next;\n+ *     ListNode(int x) {\n+ *         val = x;\n+ *         next = null;\n+ *     }\n+ * }\n+ */\n+public class Solution {\n+    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n+        if (headA == null || headB == null) return null;\n+        ListNode a = headA;\n+        ListNode b = headB;\n+        while (a != b) {\n+            a = a == null ? headB : a.next;\n+            b = b == null ? headA : b.next;\n+        }\n+        return a;\n+    }\n+}"
  }
]
