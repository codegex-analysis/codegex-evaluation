[
  {
    "sha": "5ad1680246d806215cad67f0e4cbab9a7a320578",
    "filename": "src/functionalTest/java/uk/gov/hmcts/reform/wacaseeventhandler/controllers/CaseEventHandlerControllerTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/hmcts/wa-case-event-handler/blob/9cd586ac504a257bd7f3622d3fdc85baef4b55b7/src/functionalTest/java/uk/gov/hmcts/reform/wacaseeventhandler/controllers/CaseEventHandlerControllerTest.java",
    "raw_url": "https://github.com/hmcts/wa-case-event-handler/raw/9cd586ac504a257bd7f3622d3fdc85baef4b55b7/src/functionalTest/java/uk/gov/hmcts/reform/wacaseeventhandler/controllers/CaseEventHandlerControllerTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/wa-case-event-handler/contents/src/functionalTest/java/uk/gov/hmcts/reform/wacaseeventhandler/controllers/CaseEventHandlerControllerTest.java?ref=9cd586ac504a257bd7f3622d3fdc85baef4b55b7",
    "patch": "@@ -302,7 +302,7 @@ private String findTaskForGivenCaseId(String caseId, String taskIdDmnColumn) {\n         AtomicReference<String> response = new AtomicReference<>();\n         await().ignoreException(AssertionError.class)\n             .pollInterval(500, MILLISECONDS)\n-            .atMost(10, SECONDS)\n+            .atMost(60, SECONDS)\n             .until(\n                 () -> {\n "
  }
]
