[
  {
    "sha": "4ae3dd3375f01debee8cc11b4961a32e7a290991",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/handler/callback/user/InformAgreedExtensionDateCallbackHandler.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/4ebab8605d9138688f2057856b5d459bd6816e90/src/main/java/uk/gov/hmcts/reform/unspec/handler/callback/user/InformAgreedExtensionDateCallbackHandler.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/4ebab8605d9138688f2057856b5d459bd6816e90/src/main/java/uk/gov/hmcts/reform/unspec/handler/callback/user/InformAgreedExtensionDateCallbackHandler.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/handler/callback/user/InformAgreedExtensionDateCallbackHandler.java?ref=4ebab8605d9138688f2057856b5d459bd6816e90",
    "patch": "@@ -55,8 +55,12 @@\n     }\n \n     private CallbackResponse validateExtensionDate(CallbackParams callbackParams) {\n+        CaseData caseData = callbackParams.getCaseData();\n+        LocalDate agreedExtension = caseData.getRespondentSolicitor1AgreedDeadlineExtension();\n+        LocalDateTime currentResponseDeadline = caseData.getRespondentSolicitor1ResponseDeadline();\n+\n         return AboutToStartOrSubmitCallbackResponse.builder()\n-            .errors(validator.validateProposedDeadline(callbackParams.getRequest().getCaseDetails()))\n+            .errors(validator.validateProposedDeadline(agreedExtension, currentResponseDeadline))\n             .build();\n     }\n "
  },
  {
    "sha": "167cb5c2534d9bccc16671c1a8d1cf5e627e7ff3",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/validation/DeadlineExtensionValidator.java",
    "status": "modified",
    "additions": 0,
    "deletions": 18,
    "changes": 18,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/4ebab8605d9138688f2057856b5d459bd6816e90/src/main/java/uk/gov/hmcts/reform/unspec/validation/DeadlineExtensionValidator.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/4ebab8605d9138688f2057856b5d459bd6816e90/src/main/java/uk/gov/hmcts/reform/unspec/validation/DeadlineExtensionValidator.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/validation/DeadlineExtensionValidator.java?ref=4ebab8605d9138688f2057856b5d459bd6816e90",
    "patch": "@@ -1,9 +1,7 @@\n package uk.gov.hmcts.reform.unspec.validation;\n \n-import com.fasterxml.jackson.databind.ObjectMapper;\n import lombok.RequiredArgsConstructor;\n import org.springframework.stereotype.Service;\n-import uk.gov.hmcts.reform.ccd.client.model.CaseDetails;\n \n import java.time.LocalDate;\n import java.time.LocalDateTime;\n@@ -17,8 +15,6 @@\n @RequiredArgsConstructor\n public class DeadlineExtensionValidator {\n \n-    private final ObjectMapper mapper;\n-\n     public List<String> validateProposedDeadline(LocalDate dateToValidate, LocalDateTime responseDeadline) {\n         if (!dateToValidate.isAfter(now())) {\n             return List.of(\"The agreed extension date must be a date in the future\");\n@@ -34,18 +30,4 @@\n \n         return emptyList();\n     }\n-\n-    public List<String> validateProposedDeadline(CaseDetails caseDetails) {\n-        LocalDate deadlineExtension = mapper.convertValue(\n-            caseDetails.getData().get(\"respondentSolicitor1AgreedDeadlineExtension\"),\n-            LocalDate.class\n-        );\n-\n-        LocalDateTime responseDeadline = mapper.convertValue(\n-            caseDetails.getData().get(\"respondentSolicitor1ResponseDeadline\"),\n-            LocalDateTime.class\n-        );\n-\n-        return validateProposedDeadline(deadlineExtension, responseDeadline);\n-    }\n }"
  },
  {
    "sha": "11050a1837b3532536223b493de0f06b306d331f",
    "filename": "src/test/java/uk/gov/hmcts/reform/unspec/handler/callback/user/InformAgreedExtensionDateCallbackHandlerTest.java",
    "status": "modified",
    "additions": 11,
    "deletions": 13,
    "changes": 24,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/4ebab8605d9138688f2057856b5d459bd6816e90/src/test/java/uk/gov/hmcts/reform/unspec/handler/callback/user/InformAgreedExtensionDateCallbackHandlerTest.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/4ebab8605d9138688f2057856b5d459bd6816e90/src/test/java/uk/gov/hmcts/reform/unspec/handler/callback/user/InformAgreedExtensionDateCallbackHandlerTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/test/java/uk/gov/hmcts/reform/unspec/handler/callback/user/InformAgreedExtensionDateCallbackHandlerTest.java?ref=4ebab8605d9138688f2057856b5d459bd6816e90",
    "patch": "@@ -22,7 +22,6 @@\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n \n-import static com.google.common.collect.ImmutableMap.of;\n import static java.lang.String.format;\n import static java.time.LocalDate.now;\n import static org.assertj.core.api.Assertions.assertThat;\n@@ -33,6 +32,7 @@\n import static uk.gov.hmcts.reform.unspec.callback.CallbackType.SUBMITTED;\n import static uk.gov.hmcts.reform.unspec.helpers.DateFormatHelper.DATE;\n import static uk.gov.hmcts.reform.unspec.helpers.DateFormatHelper.formatLocalDateTime;\n+import static uk.gov.hmcts.reform.unspec.sampledata.CaseDataBuilder.RESPONSE_DEADLINE;\n import static uk.gov.hmcts.reform.unspec.service.DeadlinesCalculator.END_OF_BUSINESS_DAY;\n import static uk.gov.hmcts.reform.unspec.service.DeadlinesCalculator.MID_NIGHT;\n \n@@ -70,16 +70,14 @@ void shouldReturnNoError_WhenAboutToStartIsInvoked() {\n     class ExtensionValidation {\n \n         private static final String PAGE_ID = \"extension-date\";\n-        private static final String EXTENSION_DATE = \"respondentSolicitor1AgreedDeadlineExtension\";\n-        private static final String RESPONSE_DEADLINE = \"respondentSolicitor1ResponseDeadline\";\n \n         @Test\n         void shouldReturnExpectedError_whenValuesAreInvalid() {\n-            CallbackParams params = callbackParamsOf(\n-                of(EXTENSION_DATE, now().minusDays(1), RESPONSE_DEADLINE, now().atTime(16, 0)),\n-                MID,\n-                PAGE_ID\n-            );\n+            CaseData caseData = CaseDataBuilder.builder().atStateExtensionRequested()\n+                .extensionDate(now().minusDays(1))\n+                .build();\n+\n+            CallbackParams params = callbackParamsOf(caseData, MID, PAGE_ID);\n \n             AboutToStartOrSubmitCallbackResponse response = (AboutToStartOrSubmitCallbackResponse) handler\n                 .handle(params);\n@@ -90,11 +88,11 @@ void shouldReturnExpectedError_whenValuesAreInvalid() {\n \n         @Test\n         void shouldReturnNoError_whenValuesAreValid() {\n-            CallbackParams params = callbackParamsOf(\n-                of(EXTENSION_DATE, now().plusDays(14), RESPONSE_DEADLINE, now().atTime(16, 0)),\n-                MID,\n-                PAGE_ID\n-            );\n+            CaseData caseData = CaseDataBuilder.builder().atStateExtensionRequested()\n+                .extensionDate(RESPONSE_DEADLINE.toLocalDate().plusDays(14))\n+                .build();\n+\n+            CallbackParams params = callbackParamsOf(caseData, MID, PAGE_ID);\n \n             AboutToStartOrSubmitCallbackResponse response = (AboutToStartOrSubmitCallbackResponse) handler\n                 .handle(params);"
  },
  {
    "sha": "320ab0062321e565ed6eade3a9815b0dbc1044d2",
    "filename": "src/test/java/uk/gov/hmcts/reform/unspec/sampledata/CaseDataBuilder.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/4ebab8605d9138688f2057856b5d459bd6816e90/src/test/java/uk/gov/hmcts/reform/unspec/sampledata/CaseDataBuilder.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/4ebab8605d9138688f2057856b5d459bd6816e90/src/test/java/uk/gov/hmcts/reform/unspec/sampledata/CaseDataBuilder.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/test/java/uk/gov/hmcts/reform/unspec/sampledata/CaseDataBuilder.java?ref=4ebab8605d9138688f2057856b5d459bd6816e90",
    "patch": "@@ -264,6 +264,11 @@ public CaseDataBuilder caseReference(Long ccdCaseReference) {\n         return this;\n     }\n \n+    public CaseDataBuilder extensionDate(LocalDate extensionDate) {\n+        this.respondentSolicitor1AgreedDeadlineExtension = extensionDate;\n+        return this;\n+    }\n+\n     public CaseDataBuilder atState(FlowState.Main flowState) {\n         switch (flowState) {\n             case DRAFT:"
  },
  {
    "sha": "77dfce58fa0ed641ffecb332619c3d59372b67e1",
    "filename": "src/test/java/uk/gov/hmcts/reform/unspec/validation/DeadlineExtensionValidatorTest.java",
    "status": "modified",
    "additions": 19,
    "deletions": 55,
    "changes": 74,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/4ebab8605d9138688f2057856b5d459bd6816e90/src/test/java/uk/gov/hmcts/reform/unspec/validation/DeadlineExtensionValidatorTest.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/4ebab8605d9138688f2057856b5d459bd6816e90/src/test/java/uk/gov/hmcts/reform/unspec/validation/DeadlineExtensionValidatorTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/test/java/uk/gov/hmcts/reform/unspec/validation/DeadlineExtensionValidatorTest.java?ref=4ebab8605d9138688f2057856b5d459bd6816e90",
    "patch": "@@ -2,108 +2,72 @@\n \n import org.junit.jupiter.api.Nested;\n import org.junit.jupiter.api.Test;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration;\n-import org.springframework.boot.test.context.SpringBootTest;\n-import uk.gov.hmcts.reform.ccd.client.model.CaseDetails;\n \n import java.time.LocalDate;\n import java.time.LocalDateTime;\n import java.util.List;\n \n-import static com.google.common.collect.ImmutableMap.of;\n import static java.time.LocalDate.now;\n import static org.assertj.core.api.Assertions.assertThat;\n \n-@SpringBootTest(classes = {\n-    DeadlineExtensionValidator.class,\n-    JacksonAutoConfiguration.class\n-})\n class DeadlineExtensionValidatorTest {\n \n-    @Autowired\n-    DeadlineExtensionValidator validator;\n+    private static final LocalDate NOW = now();\n \n-    private static final String AGREED_DEADLINE_EXTENSION = \"respondentSolicitor1AgreedDeadlineExtension\";\n-    private static final String RESPONSE_DEADLINE = \"respondentSolicitor1ResponseDeadline\";\n+    private final DeadlineExtensionValidator validator = new DeadlineExtensionValidator();\n \n     @Nested\n     class ValidateProposedDeadLine {\n \n         @Test\n-        void shouldReturnNoErrors_whenExtension() {\n-            CaseDetails caseDetails = CaseDetails.builder()\n-                .data(of(AGREED_DEADLINE_EXTENSION, now().plusDays(14),\n-                         RESPONSE_DEADLINE, now().plusDays(7).atTime(16, 0)\n-                ))\n-                .build();\n+        void shouldReturnNoErrors_whenValidExtension() {\n+            LocalDate agreedExtension = NOW.plusDays(14);\n+            LocalDateTime currentResponseDeadline = NOW.plusDays(7).atTime(16, 0);\n \n-            List<String> errors = validator.validateProposedDeadline(caseDetails);\n+            List<String> errors = validator.validateProposedDeadline(agreedExtension, currentResponseDeadline);\n \n-            assertThat(errors.isEmpty()).isTrue();\n+            assertThat(errors).isEmpty();\n         }\n \n         @Test\n         void shouldReturnErrors_whenExtensionIsMoreThan28DaysFromResponseDeadline() {\n-            CaseDetails caseDetails = CaseDetails.builder()\n-                .data(of(AGREED_DEADLINE_EXTENSION, now().plusDays(29),\n-                         RESPONSE_DEADLINE, now().atTime(16, 0)\n-                ))\n-                .build();\n+            LocalDate agreedExtension = NOW.plusDays(29);\n+            LocalDateTime currentResponseDeadline = NOW.atTime(16, 0);\n \n-            List<String> errors = validator.validateProposedDeadline(caseDetails);\n+            List<String> errors = validator.validateProposedDeadline(agreedExtension, currentResponseDeadline);\n \n             assertThat(errors)\n                 .containsOnly(\"The agreed extension date cannot be more than 28 days after the current deadline\");\n         }\n \n         @Test\n         void shouldReturnError_whenExtensionInPast() {\n-            CaseDetails caseDetails = CaseDetails.builder()\n-                .data(of(AGREED_DEADLINE_EXTENSION, now(),\n-                         RESPONSE_DEADLINE, now().atTime(16, 0)\n-                ))\n-                .build();\n+            LocalDate agreedExtension = NOW.minusDays(10);\n+            LocalDateTime currentResponseDeadline = NOW.atTime(16, 0);\n \n-            List<String> errors = validator.validateProposedDeadline(caseDetails);\n+            List<String> errors = validator.validateProposedDeadline(agreedExtension, currentResponseDeadline);\n \n             assertThat(errors).containsOnly(\"The agreed extension date must be a date in the future\");\n         }\n \n         @Test\n         void shouldReturnError_whenExtensionIsSameAsResponseDeadline() {\n-            CaseDetails caseDetails = CaseDetails.builder()\n-                .data(of(AGREED_DEADLINE_EXTENSION, now().plusDays(5),\n-                         RESPONSE_DEADLINE, now().plusDays(5).atTime(16, 0)\n-                ))\n-                .build();\n+            LocalDate agreedExtension = NOW.plusDays(5);\n+            LocalDateTime currentResponseDeadline = NOW.plusDays(5).atTime(16, 0);\n \n-            List<String> errors = validator.validateProposedDeadline(caseDetails);\n+            List<String> errors = validator.validateProposedDeadline(agreedExtension, currentResponseDeadline);\n \n             assertThat(errors).containsOnly(\"The agreed extension date must be after the current deadline\");\n         }\n \n         @Test\n         void shouldReturnError_whenExtensionIsBeforeResponseDeadline() {\n-            CaseDetails caseDetails = CaseDetails.builder()\n-                .data(of(AGREED_DEADLINE_EXTENSION, now().plusDays(4),\n-                         RESPONSE_DEADLINE, now().plusDays(5).atTime(16, 0)\n-                ))\n-                .build();\n+            LocalDate agreedExtension = NOW.plusDays(4);\n+            LocalDateTime currentResponseDeadline = NOW.plusDays(5).atTime(16, 0);\n \n-            List<String> errors = validator.validateProposedDeadline(caseDetails);\n+            List<String> errors = validator.validateProposedDeadline(agreedExtension, currentResponseDeadline);\n \n             assertThat(errors).containsOnly(\"The agreed extension date must be after the current deadline\");\n         }\n-\n-        @Test\n-        void shouldReturnNoErrors_whenIndividualDates() {\n-            LocalDate proposedDeadline = now().plusDays(14);\n-            LocalDateTime responseDeadline = now().plusDays(7).atTime(16, 0);\n-\n-            List<String> errors = validator.validateProposedDeadline(proposedDeadline, responseDeadline);\n-\n-            assertThat(errors).isEmpty();\n-        }\n     }\n }"
  }
]
