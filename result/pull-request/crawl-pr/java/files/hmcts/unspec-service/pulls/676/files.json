[
  {
    "sha": "737e632445245913c299068a0c281d0db6262748",
    "filename": "bin/add-roles-preview.sh",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/bin/add-roles-preview.sh",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/bin/add-roles-preview.sh",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/bin/add-roles-preview.sh?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -4,6 +4,7 @@\n ./civil-unspecified-docker/bin/utils/ccd-add-role.sh \"caseworker-civil\"\n ./civil-unspecified-docker/bin/utils/ccd-add-role.sh \"caseworker-caa\"\n ./civil-unspecified-docker/bin/utils/ccd-add-role.sh \"caseworker-approver\"\n+./civil-unspecified-docker/bin/utils/ccd-add-role.sh \"prd-admin\"\n \n roles=(\"solicitor\" \"systemupdate\" \"admin\")\n for role in \"${roles[@]}\""
  },
  {
    "sha": "c56fbde35421df1511c29bc94a45853329e0441b",
    "filename": "charts/unspec-service/Chart.yaml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/charts/unspec-service/Chart.yaml",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/charts/unspec-service/Chart.yaml",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/charts/unspec-service/Chart.yaml?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -2,7 +2,7 @@ apiVersion: v2\n description: A Helm chart for unspec-service App\n name: unspec-service\n home: https://github.com/hmcts/unspec-service\n-version: 1.3.14\n+version: 1.3.15\n maintainers:\n   - name: HMCTS Unspecified team\n "
  },
  {
    "sha": "f7b359d5eec53dd354c1d75e9a92324f0eb2c2e8",
    "filename": "charts/unspec-service/values.preview.template.yaml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/charts/unspec-service/values.preview.template.yaml",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/charts/unspec-service/values.preview.template.yaml",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/charts/unspec-service/values.preview.template.yaml?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -34,6 +34,8 @@ java:\n         - system-update-user-password\n         - cross-access-user-username\n         - cross-access-user-password\n+        - prd-admin-user-username\n+        - prd-admin-user-password\n         - AppInsightsInstrumentationKey\n         - docmosis-api-key\n         - gov-notify-api-key"
  },
  {
    "sha": "75606c1112ee4aa7092f5897777cf66795c4c525",
    "filename": "charts/unspec-service/values.yaml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/charts/unspec-service/values.yaml",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/charts/unspec-service/values.yaml",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/charts/unspec-service/values.yaml?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -58,6 +58,8 @@ java:\n         - system-update-user-password\n         - cross-access-user-username\n         - cross-access-user-password\n+        - prd-admin-user-username\n+        - prd-admin-user-password\n         - AppInsightsInstrumentationKey\n         - docmosis-api-key\n         - cmc-db-password"
  },
  {
    "sha": "bde2fde3b92ac1facf86f2fdf986ecbc75e86ebf",
    "filename": "docker/docmosis/templates/CV-UNS-ACK-ENG-00653.docx",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/docker/docmosis/templates/CV-UNS-ACK-ENG-00653.docx",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/docker/docmosis/templates/CV-UNS-ACK-ENG-00653.docx",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/docker/docmosis/templates/CV-UNS-ACK-ENG-00653.docx?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58"
  },
  {
    "sha": "8e8c6ebbe81147596e6cabd9de4f5cf3224fbf0a",
    "filename": "docker/docmosis/templates/CV-UNS-CLM-ENG-00655.docx",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/docker/docmosis/templates/CV-UNS-CLM-ENG-00655.docx",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/docker/docmosis/templates/CV-UNS-CLM-ENG-00655.docx",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/docker/docmosis/templates/CV-UNS-CLM-ENG-00655.docx?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58"
  },
  {
    "sha": "c0c0c13b89368c3b25f15bcb0f5e32fe7d0cd6e0",
    "filename": "docker/docmosis/templates/CV-UNS-HRN-ENG-00651.docx",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/docker/docmosis/templates/CV-UNS-HRN-ENG-00651.docx",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/docker/docmosis/templates/CV-UNS-HRN-ENG-00651.docx",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/docker/docmosis/templates/CV-UNS-HRN-ENG-00651.docx?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58"
  },
  {
    "sha": "fe6946eb71d0c079ea9a26e141c810b2a36f51b9",
    "filename": "src/main/java/uk/gov/hmcts/reform/prd/client/OrganisationApi.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/prd/client/OrganisationApi.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/prd/client/OrganisationApi.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/prd/client/OrganisationApi.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -3,6 +3,7 @@\n import org.springframework.cloud.openfeign.FeignClient;\n import org.springframework.web.bind.annotation.GetMapping;\n import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestParam;\n import uk.gov.hmcts.reform.prd.model.Organisation;\n \n import static org.springframework.http.HttpHeaders.AUTHORIZATION;\n@@ -16,4 +17,11 @@ Organisation findUserOrganisation(\n         @RequestHeader(AUTHORIZATION) String authorisation,\n         @RequestHeader(SERVICE_AUTHORIZATION) String serviceAuthorization\n     );\n+\n+    @GetMapping(\"/refdata/internal/v1/organisations\")\n+    Organisation findOrganisationById(\n+        @RequestHeader(AUTHORIZATION) String authorisation,\n+        @RequestHeader(SERVICE_AUTHORIZATION) String serviceAuthorization,\n+        @RequestParam(\"id\") String organisationId\n+    );\n }"
  },
  {
    "sha": "f0f27daeb8f405512cecc97537d5a3c9ee512412",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/config/PrdAdminUserConfiguration.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/config/PrdAdminUserConfiguration.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/config/PrdAdminUserConfiguration.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/config/PrdAdminUserConfiguration.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -0,0 +1,19 @@\n+package uk.gov.hmcts.reform.unspec.config;\n+\n+import lombok.Data;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Configuration;\n+\n+@Data\n+@Configuration\n+public class PrdAdminUserConfiguration {\n+\n+    private final String username;\n+    private final String password;\n+\n+    public PrdAdminUserConfiguration(@Value(\"${unspecified.prd-admin.username}\") String username,\n+                                     @Value(\"${unspecified.prd-admin.password}\") String password) {\n+        this.username = username;\n+        this.password = password;\n+    }\n+}"
  },
  {
    "sha": "ee72b245f4727b58c96a2e9e1efde020c8d06ead",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/model/Address.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/Address.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/Address.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/model/Address.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -5,6 +5,7 @@\n import com.fasterxml.jackson.databind.annotation.JsonNaming;\n import lombok.Builder;\n import lombok.Data;\n+import uk.gov.hmcts.reform.prd.model.ContactInformation;\n import uk.gov.hmcts.reform.unspec.utils.ObjectUtils;\n \n import static uk.gov.hmcts.reform.unspec.utils.StringUtils.joinNonNull;\n@@ -76,4 +77,17 @@ public String fifthNonNull() {\n             joinNonNull(\", \", county, country)\n         );\n     }\n+\n+    @JsonIgnore\n+    public static Address fromContactInformation(ContactInformation contactInformation) {\n+        return Address.builder()\n+            .addressLine1(contactInformation.getAddressLine1())\n+            .addressLine2(contactInformation.getAddressLine2())\n+            .addressLine3(contactInformation.getAddressLine3())\n+            .postTown(contactInformation.getTownCity())\n+            .county(contactInformation.getCounty())\n+            .country(contactInformation.getCountry())\n+            .postCode(contactInformation.getPostCode())\n+            .build();\n+    }\n }"
  },
  {
    "sha": "4f22004eef17634cd12f4e4bf547c1d07445e34a",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/aos/AcknowledgementOfServiceForm.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/aos/AcknowledgementOfServiceForm.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/aos/AcknowledgementOfServiceForm.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/aos/AcknowledgementOfServiceForm.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -8,16 +8,18 @@\n import lombok.Builder;\n import lombok.EqualsAndHashCode;\n import lombok.Getter;\n+import lombok.ToString;\n import uk.gov.hmcts.reform.unspec.model.SolicitorReferences;\n import uk.gov.hmcts.reform.unspec.model.common.MappableObject;\n-import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Respondent;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.common.Respondent;\n \n import java.time.LocalDate;\n \n @Getter\n @Builder\n @AllArgsConstructor\n @EqualsAndHashCode\n+@ToString\n public class AcknowledgementOfServiceForm implements MappableObject {\n \n     @JsonProperty(\"courtseal\")"
  },
  {
    "sha": "eeb4db6abc0237b97923880c1f959f79460b679e",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/common/Applicant.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/common/Applicant.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/common/Applicant.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/common/Applicant.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -10,4 +10,5 @@\n \n     private final String name;\n     private final Address primaryAddress;\n+    private final String litigationFriendName;\n }"
  },
  {
    "sha": "1e20ed24fbcee803f68975e6ecc8f25b99d73c51",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/common/Respondent.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/common/Respondent.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/common/Respondent.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/common/Respondent.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -1,8 +1,9 @@\n-package uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim;\n+package uk.gov.hmcts.reform.unspec.model.docmosis.common;\n \n import lombok.Builder;\n import lombok.Data;\n import uk.gov.hmcts.reform.unspec.model.Address;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Representative;\n \n @Data\n @Builder(toBuilder = true)\n@@ -11,4 +12,5 @@\n     private final String name;\n     private final Address primaryAddress;\n     private final Representative representative;\n+    private final String litigationFriendName;\n }",
    "previous_filename": "src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/sealedclaim/Respondent.java"
  },
  {
    "sha": "1cd170884f9d2af213e714328d4dad04425dff6f",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/dq/DirectionsQuestionnaireForm.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/dq/DirectionsQuestionnaireForm.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/dq/DirectionsQuestionnaireForm.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/dq/DirectionsQuestionnaireForm.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -8,22 +8,26 @@\n import lombok.Builder;\n import lombok.EqualsAndHashCode;\n import lombok.Getter;\n+import lombok.ToString;\n import uk.gov.hmcts.reform.unspec.enums.AllocatedTrack;\n import uk.gov.hmcts.reform.unspec.model.SolicitorReferences;\n import uk.gov.hmcts.reform.unspec.model.StatementOfTruth;\n import uk.gov.hmcts.reform.unspec.model.common.MappableObject;\n import uk.gov.hmcts.reform.unspec.model.docmosis.common.Applicant;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.common.Respondent;\n import uk.gov.hmcts.reform.unspec.model.dq.DisclosureOfElectronicDocuments;\n import uk.gov.hmcts.reform.unspec.model.dq.DisclosureOfNonElectronicDocuments;\n import uk.gov.hmcts.reform.unspec.model.dq.FileDirectionsQuestionnaire;\n import uk.gov.hmcts.reform.unspec.model.dq.FurtherInformation;\n \n import java.time.LocalDate;\n+import java.util.List;\n \n @Getter\n @Builder\n @AllArgsConstructor\n @EqualsAndHashCode\n+@ToString\n public class DirectionsQuestionnaireForm implements MappableObject {\n \n     @JsonProperty(\"courtseal\")\n@@ -35,6 +39,7 @@\n     @JsonSerialize(using = LocalDateSerializer.class)\n     private final LocalDate submittedOn;\n     private final Applicant applicant;\n+    private final List<Respondent> respondents;\n     private final FileDirectionsQuestionnaire fileDirectionsQuestionnaire;\n     private final DisclosureOfElectronicDocuments disclosureOfElectronicDocuments;\n     private final DisclosureOfNonElectronicDocuments disclosureOfNonElectronicDocuments;"
  },
  {
    "sha": "1a3c3dae04364ff7f6e0404c16c3d6cdc7d36e50",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/sealedclaim/Representative.java",
    "status": "modified",
    "additions": 23,
    "deletions": 1,
    "changes": 24,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/sealedclaim/Representative.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/sealedclaim/Representative.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/sealedclaim/Representative.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -2,16 +2,38 @@\n \n import lombok.Builder;\n import lombok.Data;\n+import uk.gov.hmcts.reform.prd.model.Organisation;\n import uk.gov.hmcts.reform.unspec.model.Address;\n+import uk.gov.hmcts.reform.unspec.model.SolicitorOrganisationDetails;\n+\n+import static uk.gov.hmcts.reform.unspec.model.Address.fromContactInformation;\n \n @Data\n @Builder(toBuilder = true)\n public class Representative {\n \n-    private final String contactName;\n     private final String organisationName;\n     private final String phoneNumber;\n     private final String dxAddress;\n     private final String emailAddress;\n     private final Address serviceAddress;\n+\n+    public static Representative fromSolicitorOrganisationDetails(\n+        SolicitorOrganisationDetails solicitorOrganisationDetails) {\n+        return Representative.builder()\n+            .dxAddress(solicitorOrganisationDetails.getDx())\n+            .organisationName(solicitorOrganisationDetails.getOrganisationName())\n+            .phoneNumber(solicitorOrganisationDetails.getPhoneNumber())\n+            .emailAddress(solicitorOrganisationDetails.getEmail())\n+            .serviceAddress(solicitorOrganisationDetails.getAddress())\n+            .build();\n+    }\n+\n+    public static Representative fromOrganisation(Organisation organisation) {\n+        return Representative.builder()\n+            .organisationName(organisation.getName())\n+            .serviceAddress(fromContactInformation(organisation.getContactInformation().get(0)))\n+            .build();\n+    }\n+\n }"
  },
  {
    "sha": "be8a05b65a59f5386008ca7130f5835ee8470b87",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/sealedclaim/SealedClaimForm.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/sealedclaim/SealedClaimForm.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/sealedclaim/SealedClaimForm.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/model/docmosis/sealedclaim/SealedClaimForm.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -11,6 +11,7 @@\n import uk.gov.hmcts.reform.unspec.model.StatementOfTruth;\n import uk.gov.hmcts.reform.unspec.model.common.MappableObject;\n import uk.gov.hmcts.reform.unspec.model.docmosis.common.Applicant;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.common.Respondent;\n \n import java.time.LocalDate;\n import java.util.List;"
  },
  {
    "sha": "3bb7382697444c0c5511f0cbea63c8662b6566be",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/service/OrganisationService.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/service/OrganisationService.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/service/OrganisationService.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/service/OrganisationService.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -5,8 +5,10 @@\n import lombok.extern.slf4j.Slf4j;\n import org.springframework.stereotype.Service;\n import uk.gov.hmcts.reform.authorisation.generators.AuthTokenGenerator;\n+import uk.gov.hmcts.reform.idam.client.IdamClient;\n import uk.gov.hmcts.reform.prd.client.OrganisationApi;\n import uk.gov.hmcts.reform.prd.model.Organisation;\n+import uk.gov.hmcts.reform.unspec.config.PrdAdminUserConfiguration;\n \n import java.util.Optional;\n \n@@ -19,6 +21,8 @@\n \n     private final OrganisationApi organisationApi;\n     private final AuthTokenGenerator authTokenGenerator;\n+    private final IdamClient idamClient;\n+    private final PrdAdminUserConfiguration userConfig;\n \n     public Optional<Organisation> findOrganisation(String authToken) {\n         try {\n@@ -29,4 +33,14 @@\n             return Optional.empty();\n         }\n     }\n+\n+    public Optional<Organisation> findOrganisationById(String id) {\n+        String authToken = idamClient.getAccessToken(userConfig.getUsername(), userConfig.getPassword());\n+        try {\n+            return ofNullable(organisationApi.findOrganisationById(authToken, authTokenGenerator.generate(), id));\n+        } catch (FeignException.NotFound ex) {\n+            log.error(\"Organisation not found\", ex);\n+            return Optional.empty();\n+        }\n+    }\n }"
  },
  {
    "sha": "4195d4fc79f9c1c0e75aa51a65ef69c080974bd9",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/RepresentativeService.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/RepresentativeService.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/RepresentativeService.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/RepresentativeService.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -0,0 +1,36 @@\n+package uk.gov.hmcts.reform.unspec.service.docmosis;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.reform.unspec.model.CaseData;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Representative;\n+import uk.gov.hmcts.reform.unspec.service.OrganisationService;\n+import uk.gov.hmcts.reform.unspec.service.flowstate.StateFlowEngine;\n+\n+import static java.util.Optional.ofNullable;\n+import static uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Representative.fromOrganisation;\n+import static uk.gov.hmcts.reform.unspec.service.flowstate.FlowState.Main.PROCEEDS_OFFLINE_UNREPRESENTED_DEFENDANT;\n+import static uk.gov.hmcts.reform.unspec.service.flowstate.FlowState.fromFullName;\n+\n+@Service\n+@RequiredArgsConstructor\n+public class RepresentativeService {\n+\n+    private final StateFlowEngine stateFlowEngine;\n+    private final OrganisationService organisationService;\n+\n+    public Representative getRespondentRepresentative(CaseData caseData) {\n+        var stateFlow = stateFlowEngine.evaluate(caseData).getState();\n+        if (fromFullName(stateFlow.getName()) != PROCEEDS_OFFLINE_UNREPRESENTED_DEFENDANT) {\n+            var organisationId = caseData.getRespondent1OrganisationPolicy().getOrganisation().getOrganisationID();\n+            var representative = fromOrganisation(organisationService.findOrganisationById(organisationId)\n+                                                      .orElseThrow(RuntimeException::new));\n+            return representative.toBuilder()\n+                .emailAddress(caseData.getRespondentSolicitor1EmailAddress())\n+                .build();\n+        }\n+        return ofNullable(caseData.getRespondentSolicitor1OrganisationDetails())\n+            .map(Representative::fromSolicitorOrganisationDetails)\n+            .orElse(Representative.builder().build());\n+    }\n+}"
  },
  {
    "sha": "82f07540fcba9425e2027f1ed1a84c331201faba",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/aos/AcknowledgementOfServiceGenerator.java",
    "status": "modified",
    "additions": 13,
    "deletions": 4,
    "changes": 17,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/aos/AcknowledgementOfServiceGenerator.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/aos/AcknowledgementOfServiceGenerator.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/aos/AcknowledgementOfServiceGenerator.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -3,18 +3,20 @@\n import lombok.RequiredArgsConstructor;\n import org.springframework.stereotype.Service;\n import uk.gov.hmcts.reform.unspec.model.CaseData;\n-import uk.gov.hmcts.reform.unspec.model.Party;\n+import uk.gov.hmcts.reform.unspec.model.LitigationFriend;\n import uk.gov.hmcts.reform.unspec.model.docmosis.DocmosisDocument;\n import uk.gov.hmcts.reform.unspec.model.docmosis.aos.AcknowledgementOfServiceForm;\n-import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Respondent;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.common.Respondent;\n import uk.gov.hmcts.reform.unspec.model.documents.CaseDocument;\n import uk.gov.hmcts.reform.unspec.model.documents.DocumentType;\n import uk.gov.hmcts.reform.unspec.model.documents.PDF;\n import uk.gov.hmcts.reform.unspec.service.docmosis.DocumentGeneratorService;\n+import uk.gov.hmcts.reform.unspec.service.docmosis.RepresentativeService;\n import uk.gov.hmcts.reform.unspec.service.docmosis.TemplateDataGenerator;\n import uk.gov.hmcts.reform.unspec.service.documentmanagement.DocumentManagementService;\n import uk.gov.hmcts.reform.unspec.utils.DocmosisTemplateDataUtils;\n \n+import static java.util.Optional.ofNullable;\n import static uk.gov.hmcts.reform.unspec.service.docmosis.DocmosisTemplates.N9;\n \n @Service\n@@ -23,6 +25,7 @@\n \n     private final DocumentManagementService documentManagementService;\n     private final DocumentGeneratorService documentGeneratorService;\n+    private final RepresentativeService representativeService;\n \n     public CaseDocument generate(CaseData caseData, String authorisation) {\n         AcknowledgementOfServiceForm templateData = getTemplateData(caseData);\n@@ -46,14 +49,20 @@ public AcknowledgementOfServiceForm getTemplateData(CaseData caseData) {\n             .solicitorReferences(DocmosisTemplateDataUtils.fetchSolicitorReferences(caseData.getSolicitorReferences()))\n             .claimIssuedDate(caseData.getClaimIssuedDate())\n             .responseDeadline(caseData.getRespondentSolicitor1ResponseDeadline().toLocalDate())\n-            .respondent(prepareRespondent(caseData.getRespondent1()))\n+            .respondent(prepareRespondent(caseData))\n             .build();\n     }\n \n-    private Respondent prepareRespondent(Party respondent) {\n+    private Respondent prepareRespondent(CaseData caseData) {\n+        var respondent = caseData.getRespondent1();\n         return Respondent.builder()\n             .name(respondent.getPartyName())\n             .primaryAddress(respondent.getPrimaryAddress())\n+            .representative(representativeService.getRespondentRepresentative(caseData))\n+            .litigationFriendName(\n+                ofNullable(caseData.getRespondent1LitigationFriend())\n+                    .map(LitigationFriend::getFullName)\n+                    .orElse(\"\"))\n             .build();\n     }\n }"
  },
  {
    "sha": "f8761a45e9f88c0203f209ada3f78e2103a365ab",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/dq/DirectionsQuestionnaireGenerator.java",
    "status": "modified",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/dq/DirectionsQuestionnaireGenerator.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/dq/DirectionsQuestionnaireGenerator.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/dq/DirectionsQuestionnaireGenerator.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -5,9 +5,11 @@\n import uk.gov.hmcts.reform.unspec.enums.ExpertReportsSent;\n import uk.gov.hmcts.reform.unspec.enums.dq.Language;\n import uk.gov.hmcts.reform.unspec.model.CaseData;\n+import uk.gov.hmcts.reform.unspec.model.LitigationFriend;\n import uk.gov.hmcts.reform.unspec.model.Party;\n import uk.gov.hmcts.reform.unspec.model.docmosis.DocmosisDocument;\n import uk.gov.hmcts.reform.unspec.model.docmosis.common.Applicant;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.common.Respondent;\n import uk.gov.hmcts.reform.unspec.model.docmosis.dq.DirectionsQuestionnaireForm;\n import uk.gov.hmcts.reform.unspec.model.docmosis.dq.Expert;\n import uk.gov.hmcts.reform.unspec.model.docmosis.dq.Experts;\n@@ -20,6 +22,7 @@\n import uk.gov.hmcts.reform.unspec.model.dq.DQ;\n import uk.gov.hmcts.reform.unspec.model.dq.HearingSupport;\n import uk.gov.hmcts.reform.unspec.service.docmosis.DocumentGeneratorService;\n+import uk.gov.hmcts.reform.unspec.service.docmosis.RepresentativeService;\n import uk.gov.hmcts.reform.unspec.service.docmosis.TemplateDataGenerator;\n import uk.gov.hmcts.reform.unspec.service.documentmanagement.DocumentManagementService;\n import uk.gov.hmcts.reform.unspec.service.flowstate.StateFlowEngine;\n@@ -43,6 +46,7 @@\n     private final DocumentManagementService documentManagementService;\n     private final DocumentGeneratorService documentGeneratorService;\n     private final StateFlowEngine stateFlowEngine;\n+    private final RepresentativeService representativeService;\n \n     public CaseDocument generate(CaseData caseData, String authorisation) {\n         DirectionsQuestionnaireForm templateData = getTemplateData(caseData);\n@@ -70,6 +74,7 @@ public DirectionsQuestionnaireForm getTemplateData(CaseData caseData) {\n             .solicitorReferences(DocmosisTemplateDataUtils.fetchSolicitorReferences(caseData.getSolicitorReferences()))\n             .submittedOn(caseData.getDefendantResponseDate())\n             .applicant(getApplicant(caseData))\n+            .respondents(getRespondents(caseData))\n             .fileDirectionsQuestionnaire(dq.getFileDirectionQuestionnaire())\n             .disclosureOfElectronicDocuments(dq.getDisclosureOfElectronicDocuments())\n             .disclosureOfNonElectronicDocuments(dq.getDisclosureOfNonElectronicDocuments())\n@@ -89,9 +94,26 @@ private Applicant getApplicant(CaseData caseData) {\n         return Applicant.builder()\n             .name(applicant.getPartyName())\n             .primaryAddress(applicant.getPrimaryAddress())\n+            .litigationFriendName(\n+                ofNullable(caseData.getApplicant1LitigationFriend())\n+                    .map(LitigationFriend::getFullName)\n+                    .orElse(\"\"))\n             .build();\n     }\n \n+    private List<Respondent> getRespondents(CaseData caseData) {\n+        Party respondent = caseData.getRespondent1();\n+        return List.of(Respondent.builder()\n+                           .name(respondent.getPartyName())\n+                           .primaryAddress(respondent.getPrimaryAddress())\n+                           .representative(representativeService.getRespondentRepresentative(caseData))\n+                           .litigationFriendName(\n+                               ofNullable(caseData.getRespondent1LitigationFriend())\n+                                   .map(LitigationFriend::getFullName)\n+                                   .orElse(\"\"))\n+                           .build());\n+    }\n+\n     private Experts getExperts(DQ dq) {\n         var experts = dq.getExperts();\n         return Experts.builder()"
  },
  {
    "sha": "350fca0ca1dfe6eabbd962e150010a37369ca2b3",
    "filename": "src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/sealedclaim/SealedClaimFormGenerator.java",
    "status": "modified",
    "additions": 11,
    "deletions": 4,
    "changes": 15,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/sealedclaim/SealedClaimFormGenerator.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/sealedclaim/SealedClaimFormGenerator.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/java/uk/gov/hmcts/reform/unspec/service/docmosis/sealedclaim/SealedClaimFormGenerator.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -4,24 +4,27 @@\n import org.springframework.stereotype.Service;\n import uk.gov.hmcts.reform.unspec.model.Address;\n import uk.gov.hmcts.reform.unspec.model.CaseData;\n+import uk.gov.hmcts.reform.unspec.model.LitigationFriend;\n import uk.gov.hmcts.reform.unspec.model.Party;\n import uk.gov.hmcts.reform.unspec.model.SolicitorReferences;\n import uk.gov.hmcts.reform.unspec.model.docmosis.DocmosisDocument;\n import uk.gov.hmcts.reform.unspec.model.docmosis.common.Applicant;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.common.Respondent;\n import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Representative;\n-import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Respondent;\n import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.SealedClaimForm;\n import uk.gov.hmcts.reform.unspec.model.documents.CaseDocument;\n import uk.gov.hmcts.reform.unspec.model.documents.DocumentType;\n import uk.gov.hmcts.reform.unspec.model.documents.PDF;\n import uk.gov.hmcts.reform.unspec.service.docmosis.DocumentGeneratorService;\n+import uk.gov.hmcts.reform.unspec.service.docmosis.RepresentativeService;\n import uk.gov.hmcts.reform.unspec.service.docmosis.TemplateDataGenerator;\n import uk.gov.hmcts.reform.unspec.service.documentmanagement.DocumentManagementService;\n import uk.gov.hmcts.reform.unspec.utils.DocmosisTemplateDataUtils;\n \n import java.util.List;\n import java.util.Optional;\n \n+import static java.util.Optional.ofNullable;\n import static uk.gov.hmcts.reform.unspec.service.docmosis.DocmosisTemplates.N1;\n \n @Service\n@@ -35,7 +38,6 @@\n         + \"which occurred on 1st July 2017 as a result of the negligence of the first defendant.\";\n \n     private static final Representative TEMP_REPRESENTATIVE = Representative.builder()\n-        .contactName(\"MiguelSpooner\")\n         .dxAddress(\"DX 751Newport\")\n         .organisationName(\"DBE Law\")\n         .phoneNumber(\"0800 206 1592\")\n@@ -50,6 +52,7 @@\n \n     private final DocumentManagementService documentManagementService;\n     private final DocumentGeneratorService documentGeneratorService;\n+    private final RepresentativeService representativeService;\n \n     public CaseDocument generate(CaseData caseData, String authorisation) {\n         SealedClaimForm templateData = getTemplateData(caseData);\n@@ -67,7 +70,7 @@ private String getFileName(CaseData caseData) {\n \n     @Override\n     public SealedClaimForm getTemplateData(CaseData caseData) {\n-        Optional<SolicitorReferences> solicitorReferences = Optional.ofNullable(caseData.getSolicitorReferences());\n+        Optional<SolicitorReferences> solicitorReferences = ofNullable(caseData.getSolicitorReferences());\n         return SealedClaimForm.builder()\n             .applicants(getApplicants(caseData))\n             .respondents(getRespondents(caseData))\n@@ -94,7 +97,7 @@ public SealedClaimForm getTemplateData(CaseData caseData) {\n         return List.of(Respondent.builder()\n                            .name(respondent.getPartyName())\n                            .primaryAddress(respondent.getPrimaryAddress())\n-                           .representative(TEMP_REPRESENTATIVE)\n+                           .representative(representativeService.getRespondentRepresentative(caseData))\n                            .build());\n     }\n \n@@ -103,6 +106,10 @@ public SealedClaimForm getTemplateData(CaseData caseData) {\n         return List.of(Applicant.builder()\n                            .name(applicant.getPartyName())\n                            .primaryAddress(applicant.getPrimaryAddress())\n+                           .litigationFriendName(\n+                               ofNullable(caseData.getApplicant1LitigationFriend())\n+                                   .map(LitigationFriend::getFullName)\n+                                   .orElse(\"\"))\n                            .build());\n     }\n }"
  },
  {
    "sha": "329d164209f914a988c1a663728f53ada35dfea3",
    "filename": "src/main/resources/application.yaml",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/resources/application.yaml",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/resources/application.yaml",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/resources/application.yaml?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -73,6 +73,9 @@ unspecified:\n   system-update:\n     username: 'civil-system-update@mailnesia.com'\n     password: 'Password12!'\n+  prd-admin:\n+    username: 'civil.damages.prd.admin@example.com'\n+    password: 'Password12!'\n   cross-access:\n     username: 'caseworker-caa@mailnesia.com'\n     password: 'Password12!'"
  },
  {
    "sha": "bc903e20d2f668f92ea7fc45ebad1687191d1321",
    "filename": "src/main/resources/bootstrap.yaml",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/resources/bootstrap.yaml",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/main/resources/bootstrap.yaml",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/main/resources/bootstrap.yaml?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -8,8 +8,10 @@ spring:\n         microservicekey-unspec-service: idam.s2s-auth.totp_secret\n         system-update-user-password: unspecified.system-update.password\n         system-update-user-username: unspecified.system-update.username\n-        corss-access-user-password: unspecified.cross-access.password\n+        cross-access-user-password: unspecified.cross-access.password\n         cross-access-user-username: unspecified.cross-access.username\n+        prd-admin-user-password: unspecified.prd-admin.password\n+        prd-admin-user-username: unspecified.prd-admin.username\n         AppInsightsInstrumentationKey: azure.application-insights.instrumentation-key\n         cmc-db-password: CMC_DB_PASSWORD\n         docmosis-api-key: docmosis.tornado.key"
  },
  {
    "sha": "3daac35009edaeb1ab2a361e368640ed37ac9838",
    "filename": "src/test/java/uk/gov/hmcts/reform/unspec/sampledata/CaseDataBuilder.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/sampledata/CaseDataBuilder.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/sampledata/CaseDataBuilder.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/test/java/uk/gov/hmcts/reform/unspec/sampledata/CaseDataBuilder.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -1,5 +1,6 @@\n package uk.gov.hmcts.reform.unspec.sampledata;\n \n+import uk.gov.hmcts.reform.ccd.model.Organisation;\n import uk.gov.hmcts.reform.ccd.model.OrganisationPolicy;\n import uk.gov.hmcts.reform.unspec.enums.AllocatedTrack;\n import uk.gov.hmcts.reform.unspec.enums.CaseState;\n@@ -316,6 +317,14 @@ public CaseDataBuilder atStateProceedsOfflineUnrepresentedDefendant() {\n         ccdState = PROCEEDS_WITH_OFFLINE_JOURNEY;\n         claimIssuedDate = CLAIM_ISSUED_DATE;\n         respondent1Represented = NO;\n+        respondentSolicitor1OrganisationDetails = SolicitorOrganisationDetails.builder()\n+            .email(\"testorg@email.com\")\n+            .organisationName(\"test org name\")\n+            .fax(\"123123123\")\n+            .dx(\"test org dx\")\n+            .phoneNumber(\"0123456789\")\n+            .address(AddressBuilder.builder().build())\n+            .build();\n         return this;\n     }\n \n@@ -394,6 +403,9 @@ public CaseDataBuilder atStateClaimDraft() {\n         respondent1 = PartyBuilder.builder().soleTrader().build();\n         respondent1Represented = YES;\n         respondent1OrgRegistered = YES;\n+        respondent1OrganisationPolicy = OrganisationPolicy.builder()\n+            .organisation(Organisation.builder().organisationID(\"QWERTY\").build())\n+            .build();\n         respondentSolicitor1EmailAddress = \"civilunspecified@gmail.com\";\n         applicantSolicitor1ClaimStatementOfTruth = StatementOfTruthBuilder.builder().build();\n         claimSubmittedDateTime = LocalDateTime.now();"
  },
  {
    "sha": "b6eeb051cdc5254604a659c9b2f5b48ee525d86f",
    "filename": "src/test/java/uk/gov/hmcts/reform/unspec/service/OrganisationServiceTest.java",
    "status": "modified",
    "additions": 40,
    "deletions": 3,
    "changes": 43,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/service/OrganisationServiceTest.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/service/OrganisationServiceTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/test/java/uk/gov/hmcts/reform/unspec/service/OrganisationServiceTest.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -10,8 +10,10 @@\n import org.mockito.Mock;\n import org.springframework.test.context.junit.jupiter.SpringExtension;\n import uk.gov.hmcts.reform.authorisation.generators.AuthTokenGenerator;\n+import uk.gov.hmcts.reform.idam.client.IdamClient;\n import uk.gov.hmcts.reform.prd.client.OrganisationApi;\n import uk.gov.hmcts.reform.prd.model.Organisation;\n+import uk.gov.hmcts.reform.unspec.config.PrdAdminUserConfiguration;\n \n import java.util.Map;\n import java.util.Optional;\n@@ -22,19 +24,22 @@\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.BDDMockito.given;\n import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n \n @ExtendWith(SpringExtension.class)\n class OrganisationServiceTest {\n \n     private static final String AUTH_TOKEN = \"Bearer token\";\n+    private static final String PRD_ADMIN_AUTH_TOKEN = \"Bearer token\";\n     private static final String SERVICE_AUTH_TOKEN = \"Bearer service-token\";\n+    private static final String ORG_ID = \"ORG ID\";\n \n-    private FeignException notFoundFeignException = new FeignException.NotFound(\n+    private final FeignException notFoundFeignException = new FeignException.NotFound(\n         \"not found message\",\n         Request.create(GET, \"\", Map.of(), new byte[]{}, UTF_8, null),\n         \"not found response body\".getBytes(UTF_8));\n-    private Organisation expectedOrganisation = Organisation.builder()\n-        .organisationIdentifier(\"ORG ID\")\n+    private final Organisation expectedOrganisation = Organisation.builder()\n+        .organisationIdentifier(ORG_ID)\n         .build();\n \n     @Mock\n@@ -43,13 +48,22 @@\n     @Mock\n     private AuthTokenGenerator authTokenGenerator;\n \n+    @Mock\n+    private IdamClient idamClient;\n+\n+    @Mock\n+    private PrdAdminUserConfiguration userConfig;\n+\n     @InjectMocks\n     private OrganisationService organisationService;\n \n     @BeforeEach\n     void setUp() {\n         given(organisationApi.findUserOrganisation(any(), any())).willReturn(expectedOrganisation);\n+        given(organisationApi.findOrganisationById(any(), any(), any())).willReturn(expectedOrganisation);\n         given(authTokenGenerator.generate()).willReturn(SERVICE_AUTH_TOKEN);\n+        when(idamClient.getAccessToken(userConfig.getUsername(), userConfig.getPassword())).thenReturn(\n+            PRD_ADMIN_AUTH_TOKEN);\n     }\n \n     @Nested\n@@ -72,4 +86,27 @@ void shouldReturnEmptyOptional_whenOrganisationNotFound() {\n             assertThat(organisation).isEmpty();\n         }\n     }\n+\n+    @Nested\n+    class FindOrganisationById {\n+\n+        @Test\n+        void shouldReturnOrganisation_whenInvoked() {\n+            var organisation = organisationService.findOrganisationById(ORG_ID);\n+\n+            verify(idamClient).getAccessToken(userConfig.getUsername(), userConfig.getPassword());\n+            verify(organisationApi).findOrganisationById(PRD_ADMIN_AUTH_TOKEN, SERVICE_AUTH_TOKEN, ORG_ID);\n+            assertThat(organisation).isEqualTo(Optional.of(expectedOrganisation));\n+        }\n+\n+        @Test\n+        void shouldReturnEmptyOptional_whenOrganisationNotFound() {\n+            given(organisationApi.findOrganisationById(any(), any(), any())).willThrow(notFoundFeignException);\n+            var organisation = organisationService.findOrganisationById(ORG_ID);\n+\n+            verify(idamClient).getAccessToken(userConfig.getUsername(), userConfig.getPassword());\n+            verify(organisationApi).findOrganisationById(PRD_ADMIN_AUTH_TOKEN, SERVICE_AUTH_TOKEN, ORG_ID);\n+            assertThat(organisation).isEmpty();\n+        }\n+    }\n }"
  },
  {
    "sha": "5bb83830437fdeff320679bf7b7b21780e3631c8",
    "filename": "src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/RepresentativeServiceTest.java",
    "status": "added",
    "additions": 162,
    "deletions": 0,
    "changes": 162,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/RepresentativeServiceTest.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/RepresentativeServiceTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/RepresentativeServiceTest.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -0,0 +1,162 @@\n+package uk.gov.hmcts.reform.unspec.service.docmosis;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Nested;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+import uk.gov.hmcts.reform.prd.model.ContactInformation;\n+import uk.gov.hmcts.reform.prd.model.Organisation;\n+import uk.gov.hmcts.reform.unspec.helpers.CaseDetailsConverter;\n+import uk.gov.hmcts.reform.unspec.model.CaseData;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Representative;\n+import uk.gov.hmcts.reform.unspec.sampledata.CaseDataBuilder;\n+import uk.gov.hmcts.reform.unspec.service.OrganisationService;\n+import uk.gov.hmcts.reform.unspec.service.flowstate.StateFlowEngine;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.BDDMockito.given;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+\n+@SpringBootTest(classes = {\n+    JacksonAutoConfiguration.class,\n+    CaseDetailsConverter.class,\n+    StateFlowEngine.class,\n+    RepresentativeService.class})\n+@ExtendWith(SpringExtension.class)\n+class RepresentativeServiceTest {\n+\n+    private final ContactInformation contactInformation = ContactInformation.builder()\n+        .addressLine1(\"address line 1\")\n+        .addressLine2(\"address line 2\")\n+        .addressLine3(\"address line 3\")\n+        .postCode(\"SW1 1AA\")\n+        .county(\"London\")\n+        .country(\"UK\")\n+        .build();\n+    private final Organisation organisation = Organisation.builder()\n+        .name(\"test org\")\n+        .contactInformation(List.of(contactInformation))\n+        .build();\n+\n+    @MockBean\n+    private OrganisationService organisationService;\n+\n+    @Autowired\n+    private RepresentativeService representativeService;\n+\n+    @BeforeEach\n+    void setup() {\n+        given(organisationService.findOrganisationById(any())).willReturn(Optional.of(organisation));\n+    }\n+\n+    @Nested\n+    class GetRespondentRepresentative {\n+\n+        @Test\n+        void shouldReturnValidOrganisationDetails_whenStateFlowIsNotProceedsOfflineUnrepresentedDefendant() {\n+            CaseData caseData = CaseDataBuilder.builder().atStateAwaitingCaseNotification().build();\n+\n+            Representative representative = representativeService.getRespondentRepresentative(caseData);\n+\n+            verify(organisationService).findOrganisationById(\n+                caseData.getRespondent1OrganisationPolicy().getOrganisation().getOrganisationID());\n+            assertThat(representative).extracting(\"organisationName\").isEqualTo(organisation.getName());\n+            assertThat(representative).extracting(\"emailAddress\").isEqualTo(\n+                caseData.getRespondentSolicitor1EmailAddress());\n+            assertThat(representative).extracting(\"serviceAddress\").extracting(\n+                \"AddressLine1\",\n+                \"AddressLine2\",\n+                \"AddressLine3\",\n+                \"County\",\n+                \"Country\",\n+                \"PostCode\"\n+            ).containsExactly(\n+                contactInformation.getAddressLine1(),\n+                contactInformation.getAddressLine2(),\n+                contactInformation.getAddressLine3(),\n+                contactInformation.getCounty(),\n+                contactInformation.getCountry(),\n+                contactInformation.getPostCode()\n+            );\n+        }\n+\n+        @Test\n+        void shouldReturnValidOrganisationDetails_whenStateFlowIsProceedsOfflineUnrepresentedDefendant() {\n+            CaseData caseData = CaseDataBuilder.builder().atStateProceedsOfflineUnrepresentedDefendant().build();\n+            var organisationDetails = caseData.getRespondentSolicitor1OrganisationDetails();\n+            var organisationAddress = organisationDetails.getAddress();\n+\n+            Representative representative = representativeService.getRespondentRepresentative(caseData);\n+\n+            verifyNoInteractions(organisationService);\n+            assertThat(representative).extracting(\n+                \"organisationName\", \"phoneNumber\", \"dxAddress\", \"emailAddress\").containsExactly(\n+                organisationDetails.getOrganisationName(),\n+                organisationDetails.getPhoneNumber(),\n+                organisationDetails.getDx(),\n+                organisationDetails.getEmail()\n+            );\n+            assertThat(representative).extracting(\"serviceAddress\").extracting(\n+                \"AddressLine1\",\n+                \"AddressLine2\",\n+                \"AddressLine3\",\n+                \"County\",\n+                \"Country\",\n+                \"PostCode\"\n+            ).containsExactly(\n+                organisationAddress.getAddressLine1(),\n+                organisationAddress.getAddressLine2(),\n+                organisationAddress.getAddressLine3(),\n+                organisationAddress.getCounty(),\n+                organisationAddress.getCountry(),\n+                organisationAddress.getPostCode()\n+            );\n+\n+        }\n+\n+        @Test\n+        void shouldReturnEmptyRepresentative_whenNoRespondentSolicitor1OrganisationDetailsProvided() {\n+            CaseData caseData = CaseDataBuilder.builder().atStateProceedsOfflineUnrepresentedDefendant().build();\n+            var organisationDetails = caseData.getRespondentSolicitor1OrganisationDetails();\n+            var organisationAddress = organisationDetails.getAddress();\n+\n+            Representative representative = representativeService.getRespondentRepresentative(caseData);\n+\n+            verifyNoInteractions(organisationService);\n+            assertThat(representative).extracting(\n+                \"organisationName\", \"phoneNumber\", \"dxAddress\", \"emailAddress\").containsExactly(\n+                organisationDetails.getOrganisationName(),\n+                organisationDetails.getPhoneNumber(),\n+                organisationDetails.getDx(),\n+                organisationDetails.getEmail()\n+            );\n+            assertThat(representative).extracting(\"serviceAddress\").extracting(\n+                \"AddressLine1\",\n+                \"AddressLine2\",\n+                \"AddressLine3\",\n+                \"County\",\n+                \"Country\",\n+                \"PostCode\"\n+            ).containsExactly(\n+                organisationAddress.getAddressLine1(),\n+                organisationAddress.getAddressLine2(),\n+                organisationAddress.getAddressLine3(),\n+                organisationAddress.getCounty(),\n+                organisationAddress.getCountry(),\n+                organisationAddress.getPostCode()\n+            );\n+\n+        }\n+    }\n+}\n+"
  },
  {
    "sha": "dc545805f97a3cb1401ed3a22c4c9f85ae713a40",
    "filename": "src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/aos/AcknowledgementOfServiceGeneratorTest.java",
    "status": "modified",
    "additions": 24,
    "deletions": 2,
    "changes": 26,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/aos/AcknowledgementOfServiceGeneratorTest.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/aos/AcknowledgementOfServiceGeneratorTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/aos/AcknowledgementOfServiceGeneratorTest.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -1,6 +1,7 @@\n package uk.gov.hmcts.reform.unspec.service.docmosis.aos;\n \n import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Nested;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n@@ -10,15 +11,18 @@\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit.jupiter.SpringExtension;\n import uk.gov.hmcts.reform.unspec.model.CaseData;\n+import uk.gov.hmcts.reform.unspec.model.LitigationFriend;\n import uk.gov.hmcts.reform.unspec.model.common.MappableObject;\n import uk.gov.hmcts.reform.unspec.model.docmosis.DocmosisDocument;\n import uk.gov.hmcts.reform.unspec.model.docmosis.aos.AcknowledgementOfServiceForm;\n-import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Respondent;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.common.Respondent;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Representative;\n import uk.gov.hmcts.reform.unspec.model.documents.CaseDocument;\n import uk.gov.hmcts.reform.unspec.model.documents.PDF;\n import uk.gov.hmcts.reform.unspec.sampledata.CaseDataBuilder;\n import uk.gov.hmcts.reform.unspec.sampledata.CaseDocumentBuilder;\n import uk.gov.hmcts.reform.unspec.service.docmosis.DocumentGeneratorService;\n+import uk.gov.hmcts.reform.unspec.service.docmosis.RepresentativeService;\n import uk.gov.hmcts.reform.unspec.service.documentmanagement.DocumentManagementService;\n \n import static java.lang.String.format;\n@@ -50,15 +54,25 @@\n         .documentType(ACKNOWLEDGEMENT_OF_SERVICE)\n         .build();\n \n+    private final Representative representative = Representative.builder().organisationName(\"test org\").build();\n+\n     @MockBean\n     private DocumentManagementService documentManagementService;\n \n     @MockBean\n     private DocumentGeneratorService documentGeneratorService;\n \n+    @MockBean\n+    private RepresentativeService representativeService;\n+\n     @Autowired\n     private AcknowledgementOfServiceGenerator generator;\n \n+    @BeforeEach\n+    void setup() {\n+        when(representativeService.getRespondentRepresentative(any())).thenReturn(representative);\n+    }\n+\n     @Test\n     void shouldGenerateAcknowledgementOfService_whenValidDataIsProvided() {\n         when(documentGeneratorService.generateDocmosisDocument(any(MappableObject.class), eq(N9)))\n@@ -79,12 +93,15 @@ void shouldGenerateAcknowledgementOfService_whenValidDataIsProvided() {\n             .respondent(Respondent.builder()\n                             .name(caseData.getRespondent1().getPartyName())\n                             .primaryAddress(caseData.getRespondent1().getPrimaryAddress())\n+                            .representative(representative)\n+                            .litigationFriendName(\"\")\n                             .build())\n             .build();\n \n         CaseDocument caseDocument = generator.generate(caseData, BEARER_TOKEN);\n         assertThat(caseDocument).isNotNull().isEqualTo(CASE_DOCUMENT);\n \n+        verify(representativeService).getRespondentRepresentative(caseData);\n         verify(documentManagementService)\n             .uploadDocument(BEARER_TOKEN, new PDF(fileName, bytes, ACKNOWLEDGEMENT_OF_SERVICE));\n         verify(documentGeneratorService)\n@@ -96,10 +113,13 @@ void shouldGenerateAcknowledgementOfService_whenValidDataIsProvided() {\n \n         @Test\n         void whenCaseIsAtServiceAcknowledge_shouldGetAcknowledgementOfServiceFormData() {\n-            CaseData caseData = CaseDataBuilder.builder().atStateServiceAcknowledge().build();\n+            CaseData caseData = CaseDataBuilder.builder().atStateServiceAcknowledge().build().toBuilder()\n+                .respondent1LitigationFriend(LitigationFriend.builder().fullName(\"LF name\").build())\n+                .build();\n \n             var templateData = generator.getTemplateData(caseData);\n \n+            verify(representativeService).getRespondentRepresentative(caseData);\n             assertThatFieldsAreCorrect(templateData, caseData);\n         }\n \n@@ -119,6 +139,8 @@ private void assertThatFieldsAreCorrect(AcknowledgementOfServiceForm templateDat\n                 ),\n                 () -> assertEquals(templateData.getRespondent(), Respondent.builder()\n                     .name(caseData.getRespondent1().getPartyName())\n+                    .representative(representative)\n+                    .litigationFriendName(caseData.getRespondent1LitigationFriend().getFullName())\n                     .primaryAddress(caseData.getRespondent1().getPrimaryAddress())\n                     .build()\n                 )"
  },
  {
    "sha": "17c3505ca36bd56744a0101c9293ed227ca31561",
    "filename": "src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/dq/DirectionsQuestionnaireGeneratorTest.java",
    "status": "modified",
    "additions": 52,
    "deletions": 6,
    "changes": 58,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/dq/DirectionsQuestionnaireGeneratorTest.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/dq/DirectionsQuestionnaireGeneratorTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/dq/DirectionsQuestionnaireGeneratorTest.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -1,6 +1,7 @@\n package uk.gov.hmcts.reform.unspec.service.docmosis.dq;\n \n import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Nested;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n@@ -13,21 +14,27 @@\n import uk.gov.hmcts.reform.unspec.enums.dq.Language;\n import uk.gov.hmcts.reform.unspec.helpers.CaseDetailsConverter;\n import uk.gov.hmcts.reform.unspec.model.CaseData;\n+import uk.gov.hmcts.reform.unspec.model.LitigationFriend;\n+import uk.gov.hmcts.reform.unspec.model.Party;\n import uk.gov.hmcts.reform.unspec.model.common.MappableObject;\n import uk.gov.hmcts.reform.unspec.model.docmosis.DocmosisDocument;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.common.Applicant;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.common.Respondent;\n import uk.gov.hmcts.reform.unspec.model.docmosis.dq.DirectionsQuestionnaireForm;\n import uk.gov.hmcts.reform.unspec.model.docmosis.dq.Expert;\n import uk.gov.hmcts.reform.unspec.model.docmosis.dq.Experts;\n import uk.gov.hmcts.reform.unspec.model.docmosis.dq.Hearing;\n import uk.gov.hmcts.reform.unspec.model.docmosis.dq.WelshLanguageRequirements;\n import uk.gov.hmcts.reform.unspec.model.docmosis.dq.Witnesses;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Representative;\n import uk.gov.hmcts.reform.unspec.model.documents.CaseDocument;\n import uk.gov.hmcts.reform.unspec.model.documents.PDF;\n import uk.gov.hmcts.reform.unspec.model.dq.DQ;\n import uk.gov.hmcts.reform.unspec.model.dq.HearingSupport;\n import uk.gov.hmcts.reform.unspec.sampledata.CaseDataBuilder;\n import uk.gov.hmcts.reform.unspec.sampledata.CaseDocumentBuilder;\n import uk.gov.hmcts.reform.unspec.service.docmosis.DocumentGeneratorService;\n+import uk.gov.hmcts.reform.unspec.service.docmosis.RepresentativeService;\n import uk.gov.hmcts.reform.unspec.service.documentmanagement.DocumentManagementService;\n import uk.gov.hmcts.reform.unspec.service.flowstate.StateFlowEngine;\n import uk.gov.hmcts.reform.unspec.utils.MonetaryConversions;\n@@ -67,15 +74,25 @@\n         .documentType(DIRECTIONS_QUESTIONNAIRE)\n         .build();\n \n+    private final Representative representative = Representative.builder().organisationName(\"test org\").build();\n+\n     @MockBean\n     private DocumentManagementService documentManagementService;\n \n     @MockBean\n     private DocumentGeneratorService documentGeneratorService;\n \n+    @MockBean\n+    private RepresentativeService representativeService;\n+\n     @Autowired\n     private DirectionsQuestionnaireGenerator generator;\n \n+    @BeforeEach\n+    void setup() {\n+        when(representativeService.getRespondentRepresentative(any())).thenReturn(representative);\n+    }\n+\n     @Test\n     void shouldGenerateCertificateOfService_whenValidDataIsProvided() {\n         when(documentGeneratorService.generateDocmosisDocument(any(MappableObject.class), eq(N181)))\n@@ -89,6 +106,7 @@ void shouldGenerateCertificateOfService_whenValidDataIsProvided() {\n         CaseDocument caseDocument = generator.generate(caseData, BEARER_TOKEN);\n         assertThat(caseDocument).isNotNull().isEqualTo(CASE_DOCUMENT);\n \n+        verify(representativeService).getRespondentRepresentative(caseData);\n         verify(documentManagementService)\n             .uploadDocument(BEARER_TOKEN, new PDF(fileName, bytes, DIRECTIONS_QUESTIONNAIRE));\n         verify(documentGeneratorService).generateDocmosisDocument(any(DirectionsQuestionnaireForm.class), eq(N181));\n@@ -99,23 +117,30 @@ void shouldGenerateCertificateOfService_whenValidDataIsProvided() {\n \n         @Test\n         void whenCaseStateIsRespondedToClaim_shouldGetRespondentDQData() {\n-            CaseData caseData = CaseDataBuilder.builder().atStateRespondentFullDefence().build();\n-\n+            CaseData caseData = CaseDataBuilder.builder().atStateRespondentFullDefence().build().toBuilder()\n+                .applicant1LitigationFriend(LitigationFriend.builder().fullName(\"applicant LF\").build())\n+                .respondent1LitigationFriend(LitigationFriend.builder().fullName(\"respondent LF\").build())\n+                .build();\n             DirectionsQuestionnaireForm templateData = generator.getTemplateData(caseData);\n \n-            assertThatDqFieldsAreCorrect(templateData, caseData.getRespondent1DQ());\n+            verify(representativeService).getRespondentRepresentative(caseData);\n+            assertThatDqFieldsAreCorrect(templateData, caseData.getRespondent1DQ(), caseData);\n         }\n \n         @Test\n         void whenCaseStateIsFullDefence_shouldGetRespondentDQData() {\n-            CaseData caseData = CaseDataBuilder.builder().atStateApplicantRespondToDefence().build();\n+            CaseData caseData = CaseDataBuilder.builder().atStateApplicantRespondToDefence().build().toBuilder()\n+                .applicant1LitigationFriend(LitigationFriend.builder().fullName(\"applicant LF\").build())\n+                .respondent1LitigationFriend(LitigationFriend.builder().fullName(\"respondent LF\").build())\n+                .build();\n \n             DirectionsQuestionnaireForm templateData = generator.getTemplateData(caseData);\n \n-            assertThatDqFieldsAreCorrect(templateData, caseData.getApplicant1DQ());\n+            verify(representativeService).getRespondentRepresentative(caseData);\n+            assertThatDqFieldsAreCorrect(templateData, caseData.getApplicant1DQ(), caseData);\n         }\n \n-        private void assertThatDqFieldsAreCorrect(DirectionsQuestionnaireForm templateData, DQ dq) {\n+        private void assertThatDqFieldsAreCorrect(DirectionsQuestionnaireForm templateData, DQ dq, CaseData caseData) {\n             Assertions.assertAll(\n                 \"DQ data should be as expected\",\n                 () -> assertEquals(templateData.getFileDirectionsQuestionnaire(), dq.getFileDirectionQuestionnaire()),\n@@ -127,6 +152,8 @@ private void assertThatDqFieldsAreCorrect(DirectionsQuestionnaireForm templateDa\n                     templateData.getDisclosureOfNonElectronicDocuments(),\n                     dq.getDisclosureOfNonElectronicDocuments()\n                 ),\n+                () -> assertEquals(templateData.getRespondents(), getRespondents(caseData)),\n+                () -> assertEquals(templateData.getApplicant(), getApplicant(caseData)),\n                 () -> assertEquals(templateData.getExperts(), getExperts(dq)),\n                 () -> assertEquals(templateData.getWitnesses(), getWitnesses(dq)),\n                 () -> assertEquals(templateData.getHearing(), getHearing(dq)),\n@@ -136,6 +163,25 @@ private void assertThatDqFieldsAreCorrect(DirectionsQuestionnaireForm templateDa\n             );\n         }\n \n+        private Applicant getApplicant(CaseData caseData) {\n+            Party applicant = caseData.getApplicant1();\n+            return Applicant.builder()\n+                .name(applicant.getPartyName())\n+                .primaryAddress(applicant.getPrimaryAddress())\n+                .litigationFriendName(\"applicant LF\")\n+                .build();\n+        }\n+\n+        private List<Respondent> getRespondents(CaseData caseData) {\n+            Party respondent = caseData.getRespondent1();\n+            return List.of(Respondent.builder()\n+                               .name(respondent.getPartyName())\n+                               .primaryAddress(respondent.getPrimaryAddress())\n+                               .representative(representative)\n+                               .litigationFriendName(\"respondent LF\")\n+                               .build());\n+        }\n+\n         private Experts getExperts(DQ dq) {\n             var experts = dq.getExperts();\n             return Experts.builder()"
  },
  {
    "sha": "b98de75d887fd4e0b10cab9922916fe2dc26bfe3",
    "filename": "src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/sealedclaim/SealedClaimFormGeneratorTest.java",
    "status": "modified",
    "additions": 21,
    "deletions": 4,
    "changes": 25,
    "blob_url": "https://github.com/hmcts/unspec-service/blob/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/sealedclaim/SealedClaimFormGeneratorTest.java",
    "raw_url": "https://github.com/hmcts/unspec-service/raw/1206d293f1fb47b6163d7bce988d67fb42c37a58/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/sealedclaim/SealedClaimFormGeneratorTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/unspec-service/contents/src/test/java/uk/gov/hmcts/reform/unspec/service/docmosis/sealedclaim/SealedClaimFormGeneratorTest.java?ref=1206d293f1fb47b6163d7bce988d67fb42c37a58",
    "patch": "@@ -1,6 +1,7 @@\n package uk.gov.hmcts.reform.unspec.service.docmosis.sealedclaim;\n \n import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Nested;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n@@ -12,19 +13,21 @@\n import uk.gov.hmcts.reform.unspec.helpers.CaseDetailsConverter;\n import uk.gov.hmcts.reform.unspec.model.Address;\n import uk.gov.hmcts.reform.unspec.model.CaseData;\n+import uk.gov.hmcts.reform.unspec.model.LitigationFriend;\n import uk.gov.hmcts.reform.unspec.model.Party;\n import uk.gov.hmcts.reform.unspec.model.SolicitorReferences;\n import uk.gov.hmcts.reform.unspec.model.common.MappableObject;\n import uk.gov.hmcts.reform.unspec.model.docmosis.DocmosisDocument;\n import uk.gov.hmcts.reform.unspec.model.docmosis.common.Applicant;\n+import uk.gov.hmcts.reform.unspec.model.docmosis.common.Respondent;\n import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Representative;\n-import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.Respondent;\n import uk.gov.hmcts.reform.unspec.model.docmosis.sealedclaim.SealedClaimForm;\n import uk.gov.hmcts.reform.unspec.model.documents.CaseDocument;\n import uk.gov.hmcts.reform.unspec.model.documents.PDF;\n import uk.gov.hmcts.reform.unspec.sampledata.CaseDataBuilder;\n import uk.gov.hmcts.reform.unspec.sampledata.CaseDocumentBuilder;\n import uk.gov.hmcts.reform.unspec.service.docmosis.DocumentGeneratorService;\n+import uk.gov.hmcts.reform.unspec.service.docmosis.RepresentativeService;\n import uk.gov.hmcts.reform.unspec.service.documentmanagement.DocumentManagementService;\n import uk.gov.hmcts.reform.unspec.utils.DocmosisTemplateDataUtils;\n \n@@ -60,12 +63,21 @@\n         .documentType(SEALED_CLAIM)\n         .build();\n \n+    private final Representative representative = Representative.builder().organisationName(\"test org\").build();\n+\n     @MockBean\n     private DocumentManagementService documentManagementService;\n     @MockBean\n     private DocumentGeneratorService documentGeneratorService;\n     @Autowired\n     private SealedClaimFormGenerator sealedClaimFormGenerator;\n+    @MockBean\n+    private RepresentativeService representativeService;\n+\n+    @BeforeEach\n+    void setup() {\n+        when(representativeService.getRespondentRepresentative(any())).thenReturn(representative);\n+    }\n \n     @Test\n     void shouldGenerateSealedClaimForm_whenValidDataIsProvided() {\n@@ -80,6 +92,7 @@ void shouldGenerateSealedClaimForm_whenValidDataIsProvided() {\n         CaseDocument caseDocument = sealedClaimFormGenerator.generate(caseData, BEARER_TOKEN);\n         assertThat(caseDocument).isNotNull().isEqualTo(CASE_DOCUMENT);\n \n+        verify(representativeService).getRespondentRepresentative(caseData);\n         verify(documentManagementService).uploadDocument(BEARER_TOKEN, new PDF(fileName, bytes, SEALED_CLAIM));\n         verify(documentGeneratorService).generateDocmosisDocument(any(SealedClaimForm.class), eq(N1));\n     }\n@@ -89,10 +102,13 @@ void shouldGenerateSealedClaimForm_whenValidDataIsProvided() {\n \n         @Test\n         void whenCaseIsAtClaimCreated_shouldGetSealedClaimFormData() {\n-            CaseData caseData = CaseDataBuilder.builder().atStateClaimCreated().build();\n+            CaseData caseData = CaseDataBuilder.builder().atStateClaimCreated().build().toBuilder()\n+                .applicant1LitigationFriend(LitigationFriend.builder().fullName(\"applicant LF\").build())\n+                .build();\n \n             var templateData = sealedClaimFormGenerator.getTemplateData(caseData);\n \n+            verify(representativeService).getRespondentRepresentative(caseData);\n             assertThatFieldsAreCorrect(templateData, caseData);\n         }\n \n@@ -138,13 +154,13 @@ private void assertThatFieldsAreCorrect(SealedClaimForm templateData, CaseData c\n             return List.of(Respondent.builder()\n                                .name(respondent.getPartyName())\n                                .primaryAddress(respondent.getPrimaryAddress())\n-                               .representative(getRepresentative())\n+                               .representative(representative)\n                                .build());\n         }\n \n         private Representative getRepresentative() {\n             return Representative.builder()\n-                .contactName(\"MiguelSpooner\")\n+                .organisationName(\"MiguelSpooner\")\n                 .dxAddress(\"DX 751Newport\")\n                 .organisationName(\"DBE Law\")\n                 .phoneNumber(\"0800 206 1592\")\n@@ -163,6 +179,7 @@ private Representative getRepresentative() {\n             return List.of(Applicant.builder()\n                                .name(applicant.getPartyName())\n                                .primaryAddress(applicant.getPrimaryAddress())\n+                               .litigationFriendName(\"applicant LF\")\n                                .build());\n         }\n     }"
  }
]
