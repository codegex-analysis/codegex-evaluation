[
  {
    "sha": "d5fe336eb11cc0af0240b8d6fd90383a336b8573",
    "filename": "src/functionalTest/java/uk/gov/hmcts/reform/professionalapi/ProfessionalExternalUserFunctionalTest.java",
    "status": "modified",
    "additions": 26,
    "deletions": 5,
    "changes": 31,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/functionalTest/java/uk/gov/hmcts/reform/professionalapi/ProfessionalExternalUserFunctionalTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/functionalTest/java/uk/gov/hmcts/reform/professionalapi/ProfessionalExternalUserFunctionalTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/functionalTest/java/uk/gov/hmcts/reform/professionalapi/ProfessionalExternalUserFunctionalTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -18,7 +18,6 @@\n \n import io.restassured.specification.RequestSpecification;\n import lombok.extern.slf4j.Slf4j;\n-import net.serenitybdd.junit.spring.integration.SpringIntegrationSerenityRunner;\n import net.thucydides.core.annotations.WithTag;\n import net.thucydides.core.annotations.WithTags;\n import org.junit.Test;\n@@ -28,14 +27,16 @@\n import uk.gov.hmcts.reform.professionalapi.controller.request.OrganisationCreationRequest;\n import uk.gov.hmcts.reform.professionalapi.controller.response.OrganisationMinimalInfoResponse;\n import uk.gov.hmcts.reform.professionalapi.domain.UserProfileUpdatedData;\n+import uk.gov.hmcts.reform.professionalapi.util.CustomSerenityRunner;\n+import uk.gov.hmcts.reform.professionalapi.util.ToggleEnable;\n \n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n-@RunWith(SpringIntegrationSerenityRunner.class)\n+@RunWith(CustomSerenityRunner.class)\n @WithTags({@WithTag(\"testType:Functional\")})\n @Slf4j\n @SuppressWarnings(\"unchecked\")\n@@ -58,7 +59,8 @@\n \n     @Test\n     public void testExternalUserScenario() {\n-        setUpTestData();\n+        setUpOrgTestData();\n+        setUpUserBearerTokens();\n         inviteUserScenarios();\n         findUsersByOrganisationScenarios();\n         findOrganisationScenarios();\n@@ -69,10 +71,13 @@ public void testExternalUserScenario() {\n         suspendUserScenarios();\n     }\n \n-    public void setUpTestData() {\n+    public void setUpOrgTestData() {\n         superUserEmail = generateRandomEmail();\n         organisationCreationRequest = createOrganisationRequest()\n-                .superUser(aUserCreationRequest().firstName(firstName).lastName(lastName).email(superUserEmail)\n+                .superUser(aUserCreationRequest()\n+                        .firstName(firstName)\n+                        .lastName(lastName)\n+                        .email(superUserEmail)\n                         .build())\n                 .build();\n \n@@ -83,7 +88,9 @@ public void setUpTestData() {\n                 .searchOrganisationUsersByStatusInternal(extActiveOrgId, hmctsAdmin, OK);\n         List<Map<String, Object>> professionalUsersResponses = (List<Map<String, Object>>) searchResponse.get(\"users\");\n         superUserId = (String) (professionalUsersResponses.get(0)).get(\"userIdentifier\");\n+    }\n \n+    public void setUpUserBearerTokens() {\n         pumBearerToken = inviteUser(puiUserManager);\n         pcmBearerToken = inviteUser(puiCaseManager);\n         pomBearerToken = inviteUser(puiOrgManager);\n@@ -425,4 +432,18 @@ public String inviteUser(String role) {\n         activeUserId = (String) pumInternalUserResponse.get(\"userIdentifier\");\n         return bearerToken;\n     }\n+\n+    @Test\n+    @ToggleEnable(mapKey = \"OrganisationMfaStatusController.retrieveMfaStatusByUserId\", withFeature = true)\n+    public void findMFAScenario() {\n+        setUpOrgTestData();\n+        findMFAByUserIDShouldBeSuccess();\n+    }\n+\n+    public void findMFAByUserIDShouldBeSuccess() {\n+        log.info(\"findMFAByUserIDShouldBeSuccess :: STARTED\");\n+        Map<String, Object> mfaStatusResponse = professionalApiClient.findMFAByUserId(OK, superUserId);\n+        assertThat(mfaStatusResponse.get(\"mfa\")).isEqualTo(\"EMAIL\");\n+        log.info(\"findMFAByUserIDShouldBeSuccess :: END\");\n+    }\n }"
  },
  {
    "sha": "61518acf1d6872c7cd893e3975d2d23ab566dcc2",
    "filename": "src/functionalTest/java/uk/gov/hmcts/reform/professionalapi/client/ProfessionalApiClient.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/functionalTest/java/uk/gov/hmcts/reform/professionalapi/client/ProfessionalApiClient.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/functionalTest/java/uk/gov/hmcts/reform/professionalapi/client/ProfessionalApiClient.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/functionalTest/java/uk/gov/hmcts/reform/professionalapi/client/ProfessionalApiClient.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -778,4 +778,18 @@ public Object retrieveAllActiveOrganisationsWithMinimalInfo(RequestSpecification\n             return response.getBody().as(ErrorResponse.class);\r\n         }\r\n     }\r\n+\r\n+    public Map<String, Object> findMFAByUserId(HttpStatus expectedStatus, String userId) {\r\n+\r\n+        Response response = withUnauthenticatedRequest()\r\n+                .get(\"/refdata/external/v1/organisations/mfa?user_id=\" + userId)\r\n+                .andReturn();\r\n+\r\n+        response.then()\r\n+                .assertThat()\r\n+                .statusCode(expectedStatus.value());\r\n+\r\n+        log.info(\"find mfa response: \" + response.statusCode());\r\n+        return response.body().as(Map.class);\r\n+    }\r\n }\n\\ No newline at end of file"
  },
  {
    "sha": "3a25cca33ad2964a6f18b26547d438e6cd6098f5",
    "filename": "src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/CreateMinimalOrganisationTest.java",
    "status": "modified",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/CreateMinimalOrganisationTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/CreateMinimalOrganisationTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/CreateMinimalOrganisationTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -9,6 +9,7 @@\n import static uk.gov.hmcts.reform.professionalapi.controller.request.UserCreationRequest.aUserCreationRequest;\n import static uk.gov.hmcts.reform.professionalapi.helper.OrganisationFixtures.someMinimalOrganisationRequest;\n import static uk.gov.hmcts.reform.professionalapi.helper.OrganisationFixtures.whiteSpaceTrimOrganisationRequest;\n+import static uk.gov.hmcts.reform.professionalapi.domain.MFAStatus.EMAIL;\n \n import java.util.Arrays;\n import java.util.HashSet;\n@@ -356,4 +357,23 @@ public void return_400_invalid_organisation_with_invalid_email() {\n         Map<String, Object> response = professionalReferenceDataClient.createOrganisation(organisationCreationRequest);\n         assertThat(response.get(\"http_status\")).asString().contains(\"400\");\n     }\n+\n+    @Test\n+    public void returns_200_when_MFA_default_value() {\n+        OrganisationCreationRequest organisationCreationRequest = someMinimalOrganisationRequest().build();\n+        Map<String, Object> response =\n+                professionalReferenceDataClient.createOrganisation(organisationCreationRequest);\n+\n+        String orgIdentifierResponse = (String) response.get(ORG_IDENTIFIER);\n+\n+        assertThat(orgIdentifierResponse).isNotNull();\n+        assertThat(orgIdentifierResponse.length()).isEqualTo(LENGTH_OF_ORGANISATION_IDENTIFIER);\n+        assertThat(orgIdentifierResponse.matches(ORGANISATION_IDENTIFIER_FORMAT_REGEX)).isTrue();\n+\n+        Organisation persistedOrganisation = organisationRepository\n+                .findByOrganisationIdentifier(orgIdentifierResponse);\n+\n+        assertThat(response.get(\"http_status\")).isEqualTo(\"201 CREATED\");\n+        assertThat(persistedOrganisation.getOrganisationMfaStatus().getMfaStatus()).isEqualTo(EMAIL);\n+    }\n }"
  },
  {
    "sha": "d595289dce78175a2f74cea3d17ffcc12aaf3bb2",
    "filename": "src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/FindMFAByUserIDTest.java",
    "status": "added",
    "additions": 94,
    "deletions": 0,
    "changes": 94,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/FindMFAByUserIDTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/FindMFAByUserIDTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/FindMFAByUserIDTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,94 @@\n+package uk.gov.hmcts.reform.professionalapi;\n+\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.lang.StringUtils;\n+import org.junit.Test;\n+import uk.gov.hmcts.reform.professionalapi.domain.Organisation;\n+import uk.gov.hmcts.reform.professionalapi.domain.ProfessionalUser;\n+import uk.gov.hmcts.reform.professionalapi.domain.SuperUser;\n+import uk.gov.hmcts.reform.professionalapi.util.AuthorizationEnabledIntegrationTest;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.UUID;\n+\n+import static org.apache.commons.lang3.StringUtils.SPACE;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.when;\n+import static uk.gov.hmcts.reform.professionalapi.util.FeatureConditionEvaluation.FORBIDDEN_EXCEPTION_LD;\n+\n+@Slf4j\n+public class FindMFAByUserIDTest extends AuthorizationEnabledIntegrationTest {\n+\n+\n+    @Test\n+    public void get_request_with_valid_user_id_returns_mfa_status() {\n+        Map<String, Object> response = createOrganization();\n+\n+        assertThat(response.get(\"http_status\")).isEqualTo(\"200 OK\");\n+        assertThat(response.get(\"mfa\")).isNotNull();\n+        assertThat(response.get(\"mfa\")).isEqualTo(\"EMAIL\");\n+    }\n+\n+    @Test\n+    public void returns_404_when_user_identifier_not_found() {\n+        Map<String, Object> response = professionalReferenceDataClient.findMFAByUserID(UUID.randomUUID().toString());\n+        assertThat(response.get(\"http_status\")).isEqualTo(\"404\");\n+        assertThat(response.get(\"response_body\").toString()).contains(\"The requested user does not exist\");\n+    }\n+\n+    @Test\n+    public void returns_404_when_organisation_not_active() {\n+        String pendingOrganisationId = createOrganisationRequest();\n+        updateOrganisation(pendingOrganisationId, hmctsAdmin, \"PENDING\");\n+        Organisation pendingOrganisation = organisationRepository.findByOrganisationIdentifier(pendingOrganisationId);\n+\n+\n+        ProfessionalUser superUser = new ProfessionalUser(\"some-fname\", \"some-lname\",\n+                \"soMeone@somewhere.com\", pendingOrganisation);\n+        superUser.setUserIdentifier(UUID.randomUUID().toString());\n+        professionalUserRepository.save(superUser);\n+\n+        Map<String, Object> response = professionalReferenceDataClient.findMFAByUserID(superUser\n+                .getUserIdentifier());\n+\n+        assertThat(response.get(\"http_status\")).isEqualTo(\"404\");\n+        assertThat(response.get(\"response_body\").toString())\n+            .contains(\"The requested user's organisation is not 'Active'\");\n+    }\n+\n+    @Test\n+    public void returns_400_when_user_id_not_present() {\n+        Map<String, Object> response = professionalReferenceDataClient.findMFAByUserID(StringUtils.EMPTY);\n+        assertThat(response.get(\"http_status\")).isEqualTo(\"400\");\n+        assertThat(response.get(\"response_body\").toString()).contains(\"User Id cannot be empty\");\n+    }\n+\n+    @Test\n+    public void returns_LaunchDarkly_Forbidden_when_retrieve_mfa_status_with_invalid_flag() {\n+        Map<String, String> launchDarklyMap = new HashMap<>();\n+        launchDarklyMap.put(\"OrganisationMfaStatusController.retrieveMfaStatusByUserId\",\n+                \"test-get-mfa-flag\");\n+        when(featureToggleService.isFlagEnabled(anyString(), anyString())).thenReturn(false);\n+        when(featureToggleService.getLaunchDarklyMap()).thenReturn(launchDarklyMap);\n+        Map<String, Object> errorResponseMap = createOrganization();\n+\n+        assertThat(errorResponseMap.get(\"http_status\")).isEqualTo(\"403\");\n+        assertThat((String) errorResponseMap.get(\"response_body\"))\n+                .contains(\"test-get-mfa-flag\".concat(SPACE).concat(FORBIDDEN_EXCEPTION_LD));\n+    }\n+\n+    private Map<String, Object> createOrganization() {\n+        String organisationIdentifier = createOrganisationRequest();\n+        updateOrganisation(organisationIdentifier, hmctsAdmin, \"ACTIVE\");\n+\n+        Organisation persistedOrganisation = organisationRepository\n+                .findByOrganisationIdentifier(organisationIdentifier);\n+        SuperUser persistedSuperUser = persistedOrganisation.getUsers().get(0);\n+\n+        return professionalReferenceDataClient.findMFAByUserID(persistedSuperUser.getUserIdentifier());\n+    }\n+    \n+}"
  },
  {
    "sha": "1e9865479014b6dc273a86d3c3bb84051e46e824",
    "filename": "src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/util/ProfessionalReferenceDataClient.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/util/ProfessionalReferenceDataClient.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/util/ProfessionalReferenceDataClient.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/integrationTest/java/uk/gov/hmcts/reform/professionalapi/util/ProfessionalReferenceDataClient.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -76,6 +76,10 @@ public ProfessionalReferenceDataClient(int port, String issuer, Long tokenExpira\n                 role, userId, email);\n     }\n \n+    public Map<String, Object> findMFAByUserID(String professionalUserID) {\n+        return getRequestWithoutAuthHeaders(APP_EXT_BASE_PATH + \"/mfa?user_id={userIdentifier}\", professionalUserID);\n+    }\n+\n     public Map<String, Object> retrieveSingleOrganisation(String id, String role) {\n         return getRequest(APP_INT_BASE_PATH + \"?id={id}\", role, id);\n     }"
  },
  {
    "sha": "137eb85dffe78965aea4be5631b76b386a38bfec",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/configuration/LaunchDarklyConfiguration.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/configuration/LaunchDarklyConfiguration.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/configuration/LaunchDarklyConfiguration.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/configuration/LaunchDarklyConfiguration.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -29,6 +29,7 @@ public LDClient ldClient(@Value(\"${launchdarkly.sdk.key}\") String sdkKey) {\n      */\n     @Override\n     public void addInterceptors(InterceptorRegistry registry) {\n-       // add entry\n+        registry.addInterceptor(featureConditionEvaluation)\n+            .addPathPatterns(\"/refdata/external/v1/organisations/mfa\");\n     }\n }"
  },
  {
    "sha": "19532d2d830954588da90e9a8a973abbdddd7ac5",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/configuration/SecurityConfiguration.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/configuration/SecurityConfiguration.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/configuration/SecurityConfiguration.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/configuration/SecurityConfiguration.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -58,7 +58,8 @@ public void setAnonymousPaths(List<String> anonymousPaths) {\n     @Override\n     public void configure(WebSecurity web) {\n         web.ignoring()\n-                    .antMatchers(anonymousPaths.toArray(new String[0]));\n+                    .antMatchers(anonymousPaths.toArray(new String[0]))\n+                    .antMatchers(\"/refdata/external/v1/organisations/mfa\");\n     }\n \n     @Inject"
  },
  {
    "sha": "ee33ebdc172d9a4022a59dec8f0622d3c36c34fd",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/controller/SuperController.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/controller/SuperController.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/controller/SuperController.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/controller/SuperController.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -66,6 +66,7 @@\n import uk.gov.hmcts.reform.professionalapi.domain.UserProfileUpdatedData;\n import uk.gov.hmcts.reform.professionalapi.domain.UserType;\n import uk.gov.hmcts.reform.professionalapi.oidc.JwtGrantedAuthoritiesConverter;\n+import uk.gov.hmcts.reform.professionalapi.service.MfaStatusService;\n import uk.gov.hmcts.reform.professionalapi.service.OrganisationService;\n import uk.gov.hmcts.reform.professionalapi.service.PaymentAccountService;\n import uk.gov.hmcts.reform.professionalapi.service.PrdEnumService;\n@@ -100,6 +101,8 @@\n     private UserProfileFeignClient userProfileFeignClient;\n     @Autowired\n     protected UserProfileUpdateRequestValidator userProfileUpdateRequestValidator;\n+    @Autowired\n+    protected MfaStatusService mfaStatusService;\n \n     @Value(\"${prd.security.roles.hmcts-admin:}\")\n     protected String prdAdmin;"
  },
  {
    "sha": "d0c2e97cfb539e63e8546fa042a8f0e309c246f5",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/controller/external/OrganisationMfaStatusController.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/controller/external/OrganisationMfaStatusController.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/controller/external/OrganisationMfaStatusController.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/controller/external/OrganisationMfaStatusController.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,56 @@\n+package uk.gov.hmcts.reform.professionalapi.controller.external;\n+\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiResponse;\n+import io.swagger.annotations.ApiResponses;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+import uk.gov.hmcts.reform.professionalapi.controller.SuperController;\n+import uk.gov.hmcts.reform.professionalapi.controller.response.MfaStatusResponse;\n+\n+import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n+\n+@RequestMapping(\n+        path = \"/refdata/external/v1/organisations/mfa\"\n+)\n+@RestController\n+public class OrganisationMfaStatusController extends SuperController {\n+\n+    @ApiOperation(\n+            value = \"Retrieves the mfa status of the organisation a user belongs to\"\n+    )\n+    @ApiResponses({\n+            @ApiResponse(\n+                    code = 200,\n+                    message = \"The mfa status of the organisation the user belongs to\",\n+                    response = MfaStatusResponse.class\n+            ),\n+            @ApiResponse(\n+                    code = 400,\n+                    message = \"An invalid request has been provided\"\n+            ),\n+            @ApiResponse(\n+                    code = 404,\n+                    message = \"The requested user does not exist\"\n+            ),\n+            @ApiResponse(\n+                    code = 500,\n+                    message = \"Internal Server Error\"\n+            )\n+    })\n+\n+    @GetMapping(produces = APPLICATION_JSON_VALUE)\n+    public ResponseEntity<MfaStatusResponse> retrieveMfaStatusByUserId(\n+            @RequestParam(value = \"user_id\", required = true) String userId) {\n+\n+        MfaStatusResponse mfaStatusResponse = mfaStatusService.findMfaStatusByUserId(userId);\n+\n+        return ResponseEntity\n+                .status(200)\n+                .body(mfaStatusResponse);\n+    }\n+\n+}"
  },
  {
    "sha": "f47116c7be5d9057bea7e5ebcb6ecc47ca781ccf",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/controller/response/MfaStatusResponse.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/controller/response/MfaStatusResponse.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/controller/response/MfaStatusResponse.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/controller/response/MfaStatusResponse.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,17 @@\n+package uk.gov.hmcts.reform.professionalapi.controller.response;\n+\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+\n+@Setter\n+@Getter\n+@NoArgsConstructor\n+public class MfaStatusResponse {\n+\n+    @JsonProperty\n+    private String mfa;\n+\n+}"
  },
  {
    "sha": "23ca9f02a1ecfec1232cdec3d0b8c4b6d28e7c67",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/domain/MFAStatus.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/domain/MFAStatus.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/domain/MFAStatus.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/domain/MFAStatus.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,8 @@\n+package uk.gov.hmcts.reform.professionalapi.domain;\n+\n+public enum MFAStatus {\n+    EMAIL,\n+    NONE,\n+    PHONE,\n+    AUTHENTICATOR;\n+}"
  },
  {
    "sha": "a2ece3a76c25ce2276c9f75412ba877dc36f25e5",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/domain/Organisation.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/domain/Organisation.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/domain/Organisation.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/domain/Organisation.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -20,6 +20,8 @@\n import javax.persistence.NamedAttributeNode;\n import javax.persistence.NamedEntityGraph;\n import javax.persistence.OneToMany;\n+import javax.persistence.OneToOne;\n+import javax.persistence.CascadeType;\n import javax.validation.constraints.Size;\n import lombok.Getter;\n import lombok.NoArgsConstructor;\n@@ -64,6 +66,9 @@\n     @OneToMany(targetEntity = ContactInformation.class, mappedBy = \"organisation\")\n     private List<ContactInformation> contactInformations = new ArrayList<>();\n \n+    @OneToOne(cascade = CascadeType.ALL, mappedBy = \"organisation\")\n+    private OrganisationMfaStatus organisationMfaStatus;\n+\n     @Column(name = \"STATUS\")\n     @Enumerated(EnumType.STRING)\n     private OrganisationStatus status;\n@@ -93,6 +98,7 @@\n     @Column(name = \"ORGANISATION_IDENTIFIER\")\n     private String organisationIdentifier;\n \n+\n     public Organisation(\n             String name,\n             OrganisationStatus status,\n@@ -122,6 +128,10 @@ public void addContactInformation(ContactInformation contactInformation) {\n         contactInformations.add(contactInformation);\n     }\n \n+    public void addOrganisationMfaStatus(OrganisationMfaStatus organisationMfaStatus) {\n+        this.setOrganisationMfaStatus(organisationMfaStatus);\n+    }\n+\n     public UUID getId() {\n         return id;\n     }\n@@ -173,4 +183,8 @@ public void setOrganisationIdentifier(String organisationIdentifier) {\n     public boolean isOrganisationStatusActive() {\n         return OrganisationStatus.ACTIVE == getStatus();\n     }\n+\n+    public OrganisationMfaStatus getOrganisationMfaStatus() {\n+        return organisationMfaStatus;\n+    }\n }"
  },
  {
    "sha": "9838d3e208779c729ce50a7e31713eac05e3cd86",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationMfaStatus.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationMfaStatus.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationMfaStatus.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationMfaStatus.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,54 @@\n+package uk.gov.hmcts.reform.professionalapi.domain;\n+\n+import static uk.gov.hmcts.reform.professionalapi.domain.MFAStatus.EMAIL;\n+\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import org.springframework.data.annotation.CreatedDate;\n+import org.springframework.data.annotation.LastModifiedDate;\n+import org.springframework.data.jpa.domain.support.AuditingEntityListener;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.EntityListeners;\n+import javax.persistence.Id;\n+import javax.persistence.OneToOne;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.MapsId;\n+import javax.persistence.Column;\n+import javax.persistence.Enumerated;\n+import javax.persistence.EnumType;\n+import java.io.Serializable;\n+import java.time.LocalDateTime;\n+import java.util.UUID;\n+\n+\n+@Entity(name = \"organisation_mfa_status\")\n+@NoArgsConstructor\n+@Getter\n+@Setter\n+@EntityListeners(AuditingEntityListener.class)\n+public class OrganisationMfaStatus implements Serializable {\n+\n+    @Id\n+    @Column(name = \"ORGANISATION_ID\")\n+    private UUID organisationId;\n+\n+    @OneToOne\n+    @JoinColumn(name = \"ORGANISATION_ID\")\n+    @MapsId\n+    private Organisation organisation;\n+\n+    @Column(name = \"MFA_STATUS\")\n+    @Enumerated(EnumType.STRING)\n+    private MFAStatus mfaStatus = EMAIL;\n+\n+    @CreatedDate\n+    @Column(name = \"CREATED\")\n+    private LocalDateTime created;\n+\n+    @LastModifiedDate\n+    @Column(name = \"LAST_UPDATED\")\n+    private LocalDateTime lastUpdated;\n+\n+}"
  },
  {
    "sha": "af32bd25fdf468e3e40653be3a0a8ecf196573ec",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/repository/OrganisationMfaStatusRepository.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/repository/OrganisationMfaStatusRepository.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/repository/OrganisationMfaStatusRepository.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/repository/OrganisationMfaStatusRepository.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,9 @@\n+package uk.gov.hmcts.reform.professionalapi.repository;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import uk.gov.hmcts.reform.professionalapi.domain.OrganisationMfaStatus;\n+\n+import java.util.UUID;\n+\n+public interface OrganisationMfaStatusRepository extends JpaRepository<OrganisationMfaStatus, UUID> {\n+}"
  },
  {
    "sha": "e01a3d9a13190f0c55ca51fb775a0983012c6edc",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/service/MfaStatusService.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/service/MfaStatusService.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/service/MfaStatusService.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/service/MfaStatusService.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,9 @@\n+package uk.gov.hmcts.reform.professionalapi.service;\n+\n+import uk.gov.hmcts.reform.professionalapi.controller.response.MfaStatusResponse;\n+\n+public interface MfaStatusService {\n+\n+    MfaStatusResponse findMfaStatusByUserId(String id);\n+\n+}"
  },
  {
    "sha": "0aa7762c93c7d9cdc175b37f2864c1a0318c26c7",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/FeatureToggleServiceImpl.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/FeatureToggleServiceImpl.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/FeatureToggleServiceImpl.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/FeatureToggleServiceImpl.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -38,6 +38,8 @@ public FeatureToggleServiceImpl(LDClient ldClient, @Value(\"${launchdarkly.sdk.us\n     @PostConstruct\n     public void mapServiceToFlag() {\n         launchDarklyMap = new HashMap<>();\n+        launchDarklyMap.put(\"OrganisationMfaStatusController.retrieveMfaStatusByUserId\",\n+            \"prd-mfa-flag\");\n     }\n \n     @Override"
  },
  {
    "sha": "6f439c44dc5404330153172efa20b7d67a6431b6",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/MfaStatusServiceImpl.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/MfaStatusServiceImpl.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/MfaStatusServiceImpl.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/MfaStatusServiceImpl.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,46 @@\n+package uk.gov.hmcts.reform.professionalapi.service.impl;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.lang.StringUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import uk.gov.hmcts.reform.professionalapi.controller.advice.ResourceNotFoundException;\n+import uk.gov.hmcts.reform.professionalapi.controller.request.InvalidRequest;\n+import uk.gov.hmcts.reform.professionalapi.controller.response.MfaStatusResponse;\n+import uk.gov.hmcts.reform.professionalapi.domain.Organisation;\n+import uk.gov.hmcts.reform.professionalapi.domain.ProfessionalUser;\n+import uk.gov.hmcts.reform.professionalapi.repository.ProfessionalUserRepository;\n+import uk.gov.hmcts.reform.professionalapi.service.MfaStatusService;\n+\n+import static java.util.Objects.isNull;\n+\n+@Service\n+@Slf4j\n+public class MfaStatusServiceImpl implements MfaStatusService {\n+\n+    @Autowired\n+    ProfessionalUserRepository professionalUserRepository;\n+\n+    @Override\n+    public MfaStatusResponse findMfaStatusByUserId(String id) {\n+\n+        if (StringUtils.isEmpty(id)) {\n+            throw new InvalidRequest(\"User Id cannot be empty\");\n+        }\n+\n+        ProfessionalUser user = professionalUserRepository.findByUserIdentifier(id);\n+        if (isNull(user)) {\n+            throw new ResourceNotFoundException(\"The requested user does not exist\");\n+        }\n+\n+        Organisation org = user.getOrganisation();\n+\n+        if (org.isOrganisationStatusActive()) {\n+            MfaStatusResponse mfaStatusResponse = new MfaStatusResponse();\n+            mfaStatusResponse.setMfa(org.getOrganisationMfaStatus().getMfaStatus().toString());\n+            return mfaStatusResponse;\n+        } else {\n+            throw new ResourceNotFoundException(\"The requested user's organisation is not 'Active'\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "0518317d73b70094f28ea540fa35ab1d1f51cd9c",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/OrganisationServiceImpl.java",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/OrganisationServiceImpl.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/OrganisationServiceImpl.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/service/impl/OrganisationServiceImpl.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -49,12 +49,14 @@\n import uk.gov.hmcts.reform.professionalapi.domain.PaymentAccount;\n import uk.gov.hmcts.reform.professionalapi.domain.ProfessionalUser;\n import uk.gov.hmcts.reform.professionalapi.domain.UserAttribute;\n+import uk.gov.hmcts.reform.professionalapi.domain.OrganisationMfaStatus;\n import uk.gov.hmcts.reform.professionalapi.repository.ContactInformationRepository;\n import uk.gov.hmcts.reform.professionalapi.repository.DxAddressRepository;\n import uk.gov.hmcts.reform.professionalapi.repository.OrganisationRepository;\n import uk.gov.hmcts.reform.professionalapi.repository.PaymentAccountRepository;\n import uk.gov.hmcts.reform.professionalapi.repository.PrdEnumRepository;\n import uk.gov.hmcts.reform.professionalapi.repository.ProfessionalUserRepository;\n+import uk.gov.hmcts.reform.professionalapi.repository.OrganisationMfaStatusRepository;\n import uk.gov.hmcts.reform.professionalapi.service.OrganisationService;\n import uk.gov.hmcts.reform.professionalapi.service.PrdEnumService;\n import uk.gov.hmcts.reform.professionalapi.service.UserAccountMapService;\n@@ -88,6 +90,8 @@\n     UserAttributeService userAttributeService;\n     @Autowired\n     PaymentAccountValidator paymentAccountValidator;\n+    @Autowired\n+    OrganisationMfaStatusRepository organisationMfaStatusRepository;\n \n     @Value(\"${loggingComponentName}\")\n     private String loggingComponentName;\n@@ -109,6 +113,8 @@ public OrganisationResponse createOrganisationFrom(\n \n         Organisation organisation = saveOrganisation(newOrganisation);\n \n+        addDefaultMfaStatusToOrganisation(organisation);\n+\n         addPbaAccountToOrganisation(organisationCreationRequest.getPaymentAccount(), organisation, false);\n \n         addSuperUserToOrganisation(organisationCreationRequest.getSuperUser(), organisation);\n@@ -129,6 +135,17 @@ public Organisation saveOrganisation(Organisation organisation) {\n         return persistedOrganisation;\n     }\n \n+    public void addDefaultMfaStatusToOrganisation(Organisation organisation) {\n+\n+        OrganisationMfaStatus organisationMfaStatus = new OrganisationMfaStatus();\n+        organisationMfaStatus.setOrganisation(organisation);\n+\n+        OrganisationMfaStatus persistedOrganisationMfaStatus\n+                = organisationMfaStatusRepository.save(organisationMfaStatus);\n+        organisation.addOrganisationMfaStatus(persistedOrganisationMfaStatus);\n+\n+    }\n+\n     public void addPbaAccountToOrganisation(Set<String> paymentAccounts,\n                                             Organisation organisation, boolean pbasValidated) {\n         if (paymentAccounts != null) {"
  },
  {
    "sha": "ca3425ed91390cce67f13ae6bbaf9af14f12051b",
    "filename": "src/main/java/uk/gov/hmcts/reform/professionalapi/util/FeatureConditionEvaluation.java",
    "status": "modified",
    "additions": 10,
    "deletions": 4,
    "changes": 14,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/util/FeatureConditionEvaluation.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/java/uk/gov/hmcts/reform/professionalapi/util/FeatureConditionEvaluation.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/java/uk/gov/hmcts/reform/professionalapi/util/FeatureConditionEvaluation.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -2,11 +2,13 @@\n \n import com.auth0.jwt.JWT;\n import java.util.Map;\n+import java.util.Optional;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.validation.constraints.NotNull;\n \n import lombok.AllArgsConstructor;\n+import org.apache.commons.lang.StringUtils;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.springframework.web.context.request.RequestContextHolder;\n@@ -48,7 +50,7 @@ public boolean preHandle(HttpServletRequest request,\n         if (isNotTrue(launchDarklyUrlMap.isEmpty()) && nonNull(flagName)) {\n \n             flagStatus = featureToggleService\n-                .isFlagEnabled(getServiceName(flagName), launchDarklyUrlMap.get(clazz + \".\" + restMethod));\n+                .isFlagEnabled(String.valueOf(getServiceName()), launchDarklyUrlMap.get(clazz + \".\" + restMethod));\n \n             if (!flagStatus) {\n                 throw new ForbiddenException(flagName.concat(SPACE).concat(FORBIDDEN_EXCEPTION_LD));\n@@ -57,17 +59,21 @@ public boolean preHandle(HttpServletRequest request,\n         return flagStatus;\n     }\n \n-    public String getServiceName(String flagName) {\n+    public Optional<Object> getServiceName() {\n \n         ServletRequestAttributes servletRequestAttributes =\n             ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes());\n \n         if (nonNull(servletRequestAttributes)) {\n             HttpServletRequest request = servletRequestAttributes.getRequest();\n-            return JWT.decode(removeBearerFromToken(request.getHeader(SERVICE_AUTHORIZATION))).getSubject();\n+\n+            if (StringUtils.isNotEmpty(request.getHeader(SERVICE_AUTHORIZATION))) {\n+                return Optional.ofNullable(JWT.decode(removeBearerFromToken(request\n+                        .getHeader(SERVICE_AUTHORIZATION))).getSubject());\n+            }\n         }\n \n-        throw new ForbiddenException(flagName.concat(SPACE).concat(FORBIDDEN_EXCEPTION_LD));\n+        return Optional.empty();\n     }\n \n     private String removeBearerFromToken(String token) {"
  },
  {
    "sha": "22350ddffda21555dbcb97be72a14c5256427e2e",
    "filename": "src/main/resources/db/migration/V6_17__adding_mfa_table.sql",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/resources/db/migration/V6_17__adding_mfa_table.sql",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/main/resources/db/migration/V6_17__adding_mfa_table.sql",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/main/resources/db/migration/V6_17__adding_mfa_table.sql?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,9 @@\n+create table organisation_mfa_status(\n+\torganisation_id uuid primary key not null,\n+\tmfa_status varchar(50) default 'EMAIL' not null,\n+\tcreated timestamp not null,\n+\tlast_updated timestamp\n+);\n+\n+\n+alter table organisation_mfa_status add constraint organisation_id_fk foreign key (organisation_id) references organisation (id);\n\\ No newline at end of file"
  },
  {
    "sha": "1b52fdb35456cadfde02425756e78fff567a9fdb",
    "filename": "src/test/java/uk/gov/hmcts/reform/professionalapi/controller/external/OrganisationMfaStatusControllerTest.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/external/OrganisationMfaStatusControllerTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/external/OrganisationMfaStatusControllerTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/external/OrganisationMfaStatusControllerTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,57 @@\n+package uk.gov.hmcts.reform.professionalapi.controller.external;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.UUID;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import uk.gov.hmcts.reform.professionalapi.controller.response.MfaStatusResponse;\n+import uk.gov.hmcts.reform.professionalapi.domain.OrganisationMfaStatus;\n+import uk.gov.hmcts.reform.professionalapi.service.MfaStatusService;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class OrganisationMfaStatusControllerTest {\n+\n+    @InjectMocks\n+    private OrganisationMfaStatusController orgMfaStatusExternalController;\n+\n+    @Mock\n+    private MfaStatusService mfaStatusServicemock;\n+    private MfaStatusResponse mfaStatusResponse;\n+    private OrganisationMfaStatus organisationMfaStatus;\n+\n+\n+    @Before\n+    public void setUp() {\n+        organisationMfaStatus = new OrganisationMfaStatus();\n+        mfaStatusResponse = new MfaStatusResponse();\n+        mfaStatusResponse.setMfa(organisationMfaStatus.getMfaStatus().toString());\n+    }\n+\n+    @Test\n+    public void test_retrieveMfaStatusByUserId() {\n+\n+        final HttpStatus expectedHttpStatus = HttpStatus.OK;\n+        String id = UUID.randomUUID().toString();\n+\n+        when(mfaStatusServicemock.findMfaStatusByUserId(id)).thenReturn(mfaStatusResponse);\n+\n+        ResponseEntity<?> actual = orgMfaStatusExternalController.retrieveMfaStatusByUserId(id);\n+\n+        assertThat(actual).isNotNull();\n+        assertThat(actual.getStatusCode()).isEqualTo(expectedHttpStatus);\n+\n+        verify(mfaStatusServicemock, times(1)).findMfaStatusByUserId(id);\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2ce2fd2a6108d2b82cbfed0884dc81d41864f156",
    "filename": "src/test/java/uk/gov/hmcts/reform/professionalapi/controller/request/OrganisationCreationRequestTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/request/OrganisationCreationRequestTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/request/OrganisationCreationRequestTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/request/OrganisationCreationRequestTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -7,7 +7,6 @@\n import javax.validation.Validation;\n import javax.validation.Validator;\n import org.junit.Test;\n-import uk.gov.hmcts.reform.professionalapi.controller.request.OrganisationCreationRequest;\n \n public class OrganisationCreationRequestTest {\n "
  },
  {
    "sha": "0c923b9e5fec997dc8dfc3cb818f4224a2b246fe",
    "filename": "src/test/java/uk/gov/hmcts/reform/professionalapi/controller/request/validator/impl/OrganisationStatusValidatorImplTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/request/validator/impl/OrganisationStatusValidatorImplTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/request/validator/impl/OrganisationStatusValidatorImplTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/request/validator/impl/OrganisationStatusValidatorImplTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -5,7 +5,6 @@\n import org.junit.Before;\n import org.junit.Test;\n import uk.gov.hmcts.reform.professionalapi.controller.request.InvalidRequest;\n-import uk.gov.hmcts.reform.professionalapi.controller.request.validator.impl.OrganisationStatusValidatorImpl;\n import uk.gov.hmcts.reform.professionalapi.domain.Organisation;\n import uk.gov.hmcts.reform.professionalapi.domain.OrganisationStatus;\n "
  },
  {
    "sha": "a44de0d9252592fc130b54fc59b9f6d108336995",
    "filename": "src/test/java/uk/gov/hmcts/reform/professionalapi/controller/response/MfaStatusResponseTest.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/response/MfaStatusResponseTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/response/MfaStatusResponseTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/test/java/uk/gov/hmcts/reform/professionalapi/controller/response/MfaStatusResponseTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,20 @@\n+package uk.gov.hmcts.reform.professionalapi.controller.response;\n+\n+import org.junit.Test;\n+import uk.gov.hmcts.reform.professionalapi.domain.OrganisationMfaStatus;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+\n+public class MfaStatusResponseTest {\n+\n+    @Test\n+    public void test_getMfaStatusResponse() {\n+        OrganisationMfaStatus orgMfaStatus = new OrganisationMfaStatus();\n+        MfaStatusResponse mfaStatusResponse = new MfaStatusResponse();\n+        mfaStatusResponse.setMfa(orgMfaStatus.getMfaStatus().toString());\n+\n+        assertThat(mfaStatusResponse.getMfa()).isEqualTo(orgMfaStatus.getMfaStatus().toString());\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "21c86145c32fcbb05d33c8ffedda55d1d07abb66",
    "filename": "src/test/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationMfaStatusTest.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationMfaStatusTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationMfaStatusTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/test/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationMfaStatusTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,34 @@\n+package uk.gov.hmcts.reform.professionalapi.domain;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.time.LocalDateTime;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static uk.gov.hmcts.reform.professionalapi.domain.MFAStatus.EMAIL;\n+\n+public class OrganisationMfaStatusTest {\n+\n+    private OrganisationMfaStatus organisationMfaStatus;\n+    private Organisation organisation = new Organisation();\n+\n+    @Before\n+    public void setUp() {\n+        organisationMfaStatus = new OrganisationMfaStatus();\n+        organisationMfaStatus.setLastUpdated(LocalDateTime.now());\n+        organisationMfaStatus.setCreated(LocalDateTime.now());\n+        organisationMfaStatus.setOrganisation(organisation);\n+    }\n+\n+    @Test\n+    public void test_creates_organisation_default_mfa_status_correctly() {\n+        assertThat(organisationMfaStatus.getOrganisationId()).isNull();\n+        assertThat(organisationMfaStatus.getMfaStatus()).isEqualTo(EMAIL);\n+        assertThat(organisationMfaStatus.getLastUpdated()).isNotNull();\n+        assertThat(organisationMfaStatus.getCreated()).isNotNull();\n+        assertThat(organisationMfaStatus.getOrganisation()).isNotNull();\n+    }\n+\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "d07222747b6ee72fb2a34ca4f6a18c5ac944dd27",
    "filename": "src/test/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationTest.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/test/java/uk/gov/hmcts/reform/professionalapi/domain/OrganisationTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -65,4 +65,14 @@ public void test_adds_contact_information_correctly() {\n         assertThat(organisation.getContactInformation()).containsExactly(contactInformation);\n         assertThat(organisation.getContactInformations()).isNotEmpty();\n     }\n+\n+    @Test\n+    public void test_adds_organisation_mfa_status_correctly() {\n+        OrganisationMfaStatus organisationMfaStatus = new OrganisationMfaStatus();\n+        Organisation organisation = new Organisation();\n+        organisation.addOrganisationMfaStatus(organisationMfaStatus);\n+\n+        assertThat(organisation.getOrganisationMfaStatus()).isNotNull();\n+        assertThat(organisation.getOrganisationMfaStatus()).isEqualTo(organisationMfaStatus);\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "a92fa53c24b4093466b92a96c76d4ec8b681bf0a",
    "filename": "src/test/java/uk/gov/hmcts/reform/professionalapi/helper/BaseRepository.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/helper/BaseRepository.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/helper/BaseRepository.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/test/java/uk/gov/hmcts/reform/professionalapi/helper/BaseRepository.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -1,5 +1,7 @@\n package uk.gov.hmcts.reform.professionalapi.helper;\n \n+import static uk.gov.hmcts.reform.professionalapi.domain.MFAStatus.EMAIL;\n+\n import org.junit.After;\n import org.junit.Before;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -13,6 +15,7 @@\n import uk.gov.hmcts.reform.professionalapi.domain.UserAccountMap;\n import uk.gov.hmcts.reform.professionalapi.domain.UserAccountMapId;\n import uk.gov.hmcts.reform.professionalapi.domain.UserAttribute;\n+import uk.gov.hmcts.reform.professionalapi.domain.OrganisationMfaStatus;\n import uk.gov.hmcts.reform.professionalapi.repository.ContactInformationRepository;\n import uk.gov.hmcts.reform.professionalapi.repository.DxAddressRepository;\n import uk.gov.hmcts.reform.professionalapi.repository.OrganisationRepository;\n@@ -21,6 +24,7 @@\n import uk.gov.hmcts.reform.professionalapi.repository.ProfessionalUserRepository;\n import uk.gov.hmcts.reform.professionalapi.repository.UserAccountMapRepository;\n import uk.gov.hmcts.reform.professionalapi.repository.UserAttributeRepository;\n+import uk.gov.hmcts.reform.professionalapi.repository.OrganisationMfaStatusRepository;\n import uk.gov.hmcts.reform.professionalapi.util.RefDataUtil;\n \n public class BaseRepository {\n@@ -41,6 +45,8 @@\n     public UserAccountMapRepository userAccountMapRepository;\n     @Autowired\n     public UserAttributeRepository userAttributeRepository;\n+    @Autowired\n+    public OrganisationMfaStatusRepository organisationMfaStatusRepository;\n \n     public ContactInformation contactInformation;\n     public DxAddress dxAddress;\n@@ -51,6 +57,7 @@\n     public UserAccountMap userAccountMap;\n     public UserAttribute userAttribute;\n     public PrdEnum prdEnum;\n+    public OrganisationMfaStatus organisationMfaStatus;\n \n     @Before\n     public void setUp() {\n@@ -88,6 +95,11 @@ public void setUp() {\n \n         userAttribute = new UserAttribute(professionalUser, prdEnum);\n         userAttributeRepository.save(userAttribute);\n+\n+        organisationMfaStatus = new OrganisationMfaStatus();\n+        organisationMfaStatus.setMfaStatus(EMAIL);\n+        organisationMfaStatus.setOrganisation(organisation);\n+        organisationMfaStatusRepository.save(organisationMfaStatus);\n     }\n \n     @After\n@@ -100,5 +112,6 @@ public void cleanupTestData() {\n         paymentAccountRepository.deleteAll();\n         organisationRepository.deleteAll();\n         prdEnumRepository.deleteAll();\n+        organisationMfaStatusRepository.deleteAll();\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "cb2ae2ae0819b29577d2f6fdd9e366214dcc686e",
    "filename": "src/test/java/uk/gov/hmcts/reform/professionalapi/repository/OrganisationMfaStatusRepositoryTest.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/repository/OrganisationMfaStatusRepositoryTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/repository/OrganisationMfaStatusRepositoryTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/test/java/uk/gov/hmcts/reform/professionalapi/repository/OrganisationMfaStatusRepositoryTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,40 @@\n+package uk.gov.hmcts.reform.professionalapi.repository;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import uk.gov.hmcts.reform.professionalapi.domain.OrganisationMfaStatus;\n+import uk.gov.hmcts.reform.professionalapi.helper.BaseRepository;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+\n+@RunWith(SpringRunner.class)\n+@DataJpaTest\n+public class OrganisationMfaStatusRepositoryTest extends BaseRepository {\n+\n+    @Test\n+    public void test_findAll() {\n+        List<OrganisationMfaStatus> organisationMfaStatuses = organisationMfaStatusRepository.findAll();\n+\n+        assertThat(organisationMfaStatuses).hasSize(1);\n+        assertThat(organisationMfaStatuses.get(0)).isEqualTo(organisationMfaStatus);\n+        assertThat(organisationMfaStatuses.get(0).getOrganisationId())\n+                .isEqualTo(organisationMfaStatus.getOrganisationId());\n+    }\n+\n+    @Test\n+    public void test_findById() {\n+        Optional<OrganisationMfaStatus> orgMfaStatus\n+                = organisationMfaStatusRepository.findById(organisationMfaStatus.getOrganisationId());\n+\n+        assertThat(orgMfaStatus).contains(organisationMfaStatus);\n+        assertThat(orgMfaStatus.get().getOrganisationId()).isEqualTo(organisationMfaStatus.getOrganisationId());\n+    }\n+\n+\n+}"
  },
  {
    "sha": "3f4b2adcabc20744f77115d32eed400f40f5d065",
    "filename": "src/test/java/uk/gov/hmcts/reform/professionalapi/service/impl/FeatureToggleServiceImplTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/service/impl/FeatureToggleServiceImplTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/service/impl/FeatureToggleServiceImplTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/test/java/uk/gov/hmcts/reform/professionalapi/service/impl/FeatureToggleServiceImplTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -23,6 +23,6 @@ public void testIsFlagEnabled() {\n     public void mapServiceToFlagTest() {\n         flaFeatureToggleService = new FeatureToggleServiceImpl(ldClient, \"rd\");\n         flaFeatureToggleService.mapServiceToFlag();\n-        assertTrue(flaFeatureToggleService.getLaunchDarklyMap().isEmpty());\n+        assertTrue(flaFeatureToggleService.getLaunchDarklyMap().size() >= 1);\n     }\n }"
  },
  {
    "sha": "97b0787520f8115d6c5773b1bd4bcb6ad366ad47",
    "filename": "src/test/java/uk/gov/hmcts/reform/professionalapi/service/impl/MfaStatusServiceImplTest.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/hmcts/rd-professional-api/blob/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/service/impl/MfaStatusServiceImplTest.java",
    "raw_url": "https://github.com/hmcts/rd-professional-api/raw/c28768d72b53363a0eb1858d3a3bae41b896ea99/src/test/java/uk/gov/hmcts/reform/professionalapi/service/impl/MfaStatusServiceImplTest.java",
    "contents_url": "https://api.github.com/repos/hmcts/rd-professional-api/contents/src/test/java/uk/gov/hmcts/reform/professionalapi/service/impl/MfaStatusServiceImplTest.java?ref=c28768d72b53363a0eb1858d3a3bae41b896ea99",
    "patch": "@@ -0,0 +1,71 @@\n+package uk.gov.hmcts.reform.professionalapi.service.impl;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import uk.gov.hmcts.reform.professionalapi.controller.advice.ResourceNotFoundException;\n+import uk.gov.hmcts.reform.professionalapi.controller.request.InvalidRequest;\n+import uk.gov.hmcts.reform.professionalapi.controller.response.MfaStatusResponse;\n+import uk.gov.hmcts.reform.professionalapi.domain.Organisation;\n+import uk.gov.hmcts.reform.professionalapi.domain.OrganisationMfaStatus;\n+import uk.gov.hmcts.reform.professionalapi.domain.ProfessionalUser;\n+import uk.gov.hmcts.reform.professionalapi.repository.ProfessionalUserRepository;\n+\n+import java.util.UUID;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.times;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class MfaStatusServiceImplTest {\n+\n+    @InjectMocks\n+    private MfaStatusServiceImpl mfaStatusService;\n+\n+    @Mock\n+    private ProfessionalUserRepository professionalUserRepository;\n+    @Mock\n+    private ProfessionalUser professionalUser;\n+    @Mock\n+    private Organisation organisation;\n+\n+    @Test\n+    public void test_findMfaStatusByUserId() {\n+        when(professionalUserRepository.findByUserIdentifier(any())).thenReturn(professionalUser);\n+        when(organisation.isOrganisationStatusActive()).thenReturn(true);\n+        when(professionalUser.getOrganisation()).thenReturn(organisation);\n+        when(organisation.getOrganisationMfaStatus()).thenReturn(new OrganisationMfaStatus());\n+\n+        MfaStatusResponse mfaStatusResponse = mfaStatusService.findMfaStatusByUserId(UUID.randomUUID().toString());\n+\n+        assertThat(mfaStatusResponse).isNotNull();\n+        verify(professionalUserRepository, times(1)).findByUserIdentifier(any());\n+    }\n+\n+    @Test(expected = InvalidRequest.class)\n+    public void test_findMfaStatusByUserId_shouldReturn400_whenEmptyUserID() {\n+        mfaStatusService.findMfaStatusByUserId(StringUtils.EMPTY);\n+    }\n+\n+    @Test(expected = ResourceNotFoundException.class)\n+    public void test_findMfaStatusByUserId_shouldReturn404_whenUserNotFound() {\n+        when(professionalUserRepository.findByUserIdentifier(any())).thenReturn(null);\n+\n+        mfaStatusService.findMfaStatusByUserId(UUID.randomUUID().toString());\n+    }\n+\n+    @Test(expected = ResourceNotFoundException.class)\n+    public void test_findMfaStatusByUserId_shouldReturn404_whenInactiveOrg() {\n+        when(professionalUserRepository.findByUserIdentifier(any())).thenReturn(professionalUser);\n+        when(organisation.isOrganisationStatusActive()).thenReturn(false);\n+        when(professionalUser.getOrganisation()).thenReturn(organisation);\n+\n+        mfaStatusService.findMfaStatusByUserId(UUID.randomUUID().toString());\n+    }\n+}\n\\ No newline at end of file"
  }
]
