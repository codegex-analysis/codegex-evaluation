[
  {
    "sha": "a174571cdb35734d149113e1150554689350da11",
    "filename": "HomeWork6/.idea/workspace.xml",
    "status": "added",
    "additions": 155,
    "deletions": 0,
    "changes": 155,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork6/.idea/workspace.xml",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork6/.idea/workspace.xml",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork6/.idea/workspace.xml?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,155 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ChangeListManager\">\n+    <list default=\"true\" id=\"5ce03679-2fc4-4d92-b394-baae68ac2b58\" name=\"Default Changelist\" comment=\"\" />\n+    <option name=\"SHOW_DIALOG\" value=\"false\" />\n+    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n+    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n+    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n+  </component>\n+  <component name=\"FileEditorManager\">\n+    <leaf>\n+      <file leaf-file-name=\"Main.java\" pinned=\"false\" current=\"true\" current-in-tab=\"true\">\n+        <entry file=\"file://$PROJECT_DIR$/src/geekbrains/couse2/Main.java\">\n+          <provider selected=\"true\" editor-type-id=\"text-editor\">\n+            <state line=\"0\" column=\"14\" selection-start=\"14\" selection-end=\"14\" vertical-scroll-proportion=\"0.0\">\n+              <folding />\n+            </state>\n+          </provider>\n+        </entry>\n+      </file>\n+    </leaf>\n+  </component>\n+  <component name=\"FileTemplateManagerImpl\">\n+    <option name=\"RECENT_TEMPLATES\">\n+      <list>\n+        <option value=\"Class\" />\n+      </list>\n+    </option>\n+  </component>\n+  <component name=\"ProjectId\" id=\"1oqGh1xsOKgvUxOtPgnf1ijGh2j\" />\n+  <component name=\"ProjectView\">\n+    <navigator currentView=\"ProjectPane\" proportions=\"\" version=\"1\" splitterProportion=\"0.5\">\n+      <flattenPackages />\n+      <showMembers />\n+      <showModules />\n+      <showLibraryContents />\n+      <hideEmptyPackages />\n+      <abbreviatePackageNames />\n+      <autoscrollToSource />\n+      <autoscrollFromSource />\n+      <sortByType />\n+    </navigator>\n+    <panes>\n+      <pane id=\"Scope\" />\n+      <pane id=\"PackagesPane\" />\n+      <pane id=\"ProjectPane\">\n+        <subPane>\n+          <PATH>\n+            <PATH_ELEMENT>\n+              <option name=\"myItemId\" value=\"untitled104\" />\n+              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n+            </PATH_ELEMENT>\n+          </PATH>\n+          <PATH>\n+            <PATH_ELEMENT>\n+              <option name=\"myItemId\" value=\"untitled104\" />\n+              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n+            </PATH_ELEMENT>\n+            <PATH_ELEMENT>\n+              <option name=\"myItemId\" value=\"untitled104\" />\n+              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n+            </PATH_ELEMENT>\n+          </PATH>\n+          <PATH>\n+            <PATH_ELEMENT>\n+              <option name=\"myItemId\" value=\"untitled104\" />\n+              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n+            </PATH_ELEMENT>\n+            <PATH_ELEMENT>\n+              <option name=\"myItemId\" value=\"untitled104\" />\n+              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n+            </PATH_ELEMENT>\n+            <PATH_ELEMENT>\n+              <option name=\"myItemId\" value=\"src\" />\n+              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n+            </PATH_ELEMENT>\n+            <PATH_ELEMENT>\n+              <option name=\"myItemId\" value=\"company\" />\n+              <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n+            </PATH_ELEMENT>\n+          </PATH>\n+        </subPane>\n+      </pane>\n+    </panes>\n+  </component>\n+  <component name=\"ProjectViewState\">\n+    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n+    <option name=\"showLibraryContents\" value=\"true\" />\n+  </component>\n+  <component name=\"PropertiesComponent\">\n+    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n+    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n+  </component>\n+  <component name=\"RunManager\" selected=\"Application.Client\">\n+    <configuration name=\"Client\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n+      <option name=\"MAIN_CLASS_NAME\" value=\"geekbrains.couse2.Client\" />\n+      <module name=\"HomeWork6\" />\n+      <extension name=\"coverage\">\n+        <pattern>\n+          <option name=\"PATTERN\" value=\"geekbrains.couse2.*\" />\n+          <option name=\"ENABLED\" value=\"true\" />\n+        </pattern>\n+      </extension>\n+      <method v=\"2\">\n+        <option name=\"Make\" enabled=\"true\" />\n+      </method>\n+    </configuration>\n+    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\">\n+      <option name=\"MAIN_CLASS_NAME\" value=\"geekbrains.couse2.Main\" />\n+      <module name=\"HomeWork6\" />\n+      <option name=\"WORKING_DIRECTORY\" value=\"file://$PROJECT_DIR$\" />\n+      <RunnerSettings RunnerId=\"Run\" />\n+      <ConfigurationWrapper RunnerId=\"Run\" />\n+      <method v=\"2\">\n+        <option name=\"Make\" enabled=\"true\" />\n+      </method>\n+    </configuration>\n+    <configuration name=\"Server\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n+      <option name=\"MAIN_CLASS_NAME\" value=\"geekbrains.couse2.Server\" />\n+      <module name=\"HomeWork6\" />\n+      <extension name=\"coverage\">\n+        <pattern>\n+          <option name=\"PATTERN\" value=\"geekbrains.couse2.*\" />\n+          <option name=\"ENABLED\" value=\"true\" />\n+        </pattern>\n+      </extension>\n+      <method v=\"2\">\n+        <option name=\"Make\" enabled=\"true\" />\n+      </method>\n+    </configuration>\n+    <list>\n+      <item itemvalue=\"Application.Main\" />\n+      <item itemvalue=\"Application.Server\" />\n+      <item itemvalue=\"Application.Client\" />\n+    </list>\n+    <recent_temporary>\n+      <list>\n+        <item itemvalue=\"Application.Client\" />\n+        <item itemvalue=\"Application.Server\" />\n+        <item itemvalue=\"Application.Main\" />\n+      </list>\n+    </recent_temporary>\n+  </component>\n+  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n+  <component name=\"TaskManager\">\n+    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n+      <changelist id=\"5ce03679-2fc4-4d92-b394-baae68ac2b58\" name=\"Default Changelist\" comment=\"\" />\n+      <created>1614006824954</created>\n+      <option name=\"number\" value=\"Default\" />\n+      <option name=\"presentableId\" value=\"Default\" />\n+      <updated>1614006824954</updated>\n+    </task>\n+    <servers />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "26d33521af10bcc7fd8cea344038eaaeb78d0ef5",
    "filename": "HomeWork7/.idea/.gitignore",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/.idea/.gitignore",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/.idea/.gitignore",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/.idea/.gitignore?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,3 @@\n+# Default ignored files\n+/shelf/\n+/workspace.xml"
  },
  {
    "sha": "72fc6f2c8aafc10cf3f53253c084dbef577d32b4",
    "filename": "HomeWork7/.idea/.name",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/.idea/.name",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/.idea/.name",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/.idea/.name?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1 @@\n+AppServer.java\n\\ No newline at end of file"
  },
  {
    "sha": "7c073f8e133d038a8d1639444d00997364bf1070",
    "filename": "HomeWork7/.idea/compiler.xml",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/.idea/compiler.xml",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/.idea/compiler.xml?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"CompilerConfiguration\">\n+    <annotationProcessing>\n+      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n+        <sourceOutputDir name=\"target/generated-sources/annotations\" />\n+        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n+        <outputRelativeToContentRoot value=\"true\" />\n+        <module name=\"client\" />\n+        <module name=\"server\" />\n+      </profile>\n+    </annotationProcessing>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "712ab9d985c20018a0c97b93d2148ac1ffe588a5",
    "filename": "HomeWork7/.idea/jarRepositories.xml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/.idea/jarRepositories.xml",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/.idea/jarRepositories.xml",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/.idea/jarRepositories.xml?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"RemoteRepositoriesConfiguration\">\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Central Repository\" />\n+      <option name=\"url\" value=\"https://repo.maven.apache.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Maven Central repository\" />\n+      <option name=\"url\" value=\"https://repo1.maven.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"jboss.community\" />\n+      <option name=\"name\" value=\"JBoss Community repository\" />\n+      <option name=\"url\" value=\"https://repository.jboss.org/nexus/content/repositories/public/\" />\n+    </remote-repository>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "e6ee86001a096aaeeb211ddaacc9e757e3fdc5e3",
    "filename": "HomeWork7/.idea/misc.xml",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/.idea/misc.xml",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/.idea/misc.xml?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n+  <component name=\"MavenProjectsManager\">\n+    <option name=\"originalFiles\">\n+      <list>\n+        <option value=\"$PROJECT_DIR$/pom.xml\" />\n+      </list>\n+    </option>\n+  </component>\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_15\" project-jdk-name=\"15\" project-jdk-type=\"JavaSDK\">\n+    <output url=\"file://$PROJECT_DIR$/out\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "78b2cc53b203f0b97534bb1184cdc7b474339fb4",
    "filename": "HomeWork7/HomeWork7.iml",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/HomeWork7.iml",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/HomeWork7.iml",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/HomeWork7.iml?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,2 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\" />\n\\ No newline at end of file"
  },
  {
    "sha": "6d675a38e16aba90a8473a5375594614034ee264",
    "filename": "HomeWork7/client/pom.xml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/pom.xml",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/pom.xml",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/client/pom.xml?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>HomeWork7</artifactId>\n+        <groupId>org.example</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>client</artifactId>\n+\n+    <properties>\n+        <maven.compiler.source>15</maven.compiler.source>\n+        <maven.compiler.target>15</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "73ccb746ac2de62c32ad069d93c39b7fc7a35aba",
    "filename": "HomeWork7/client/src/main/java/AppClient.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/src/main/java/AppClient.java",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/src/main/java/AppClient.java",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/client/src/main/java/AppClient.java?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,12 @@\n+import javax.swing.*;\n+// запуск приложения клиента\n+public class AppClient {\n+    public static void main(String[] args) {\n+        SwingUtilities.invokeLater(new Runnable() {\n+            @Override\n+            public void run() {\n+                new ClientGUI();\n+            }\n+        });\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "078e9fa90da2ebb42f7b3619a9ced6164169a9cc",
    "filename": "HomeWork7/client/src/main/java/Callback.java",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/src/main/java/Callback.java",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/src/main/java/Callback.java",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/client/src/main/java/Callback.java?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,3 @@\n+public interface Callback<T> {\n+    void callback(T arg);\n+}"
  },
  {
    "sha": "a40723624bc4b7374d37679cadea428a5ea48294",
    "filename": "HomeWork7/client/src/main/java/ClientGUI.java",
    "status": "added",
    "additions": 162,
    "deletions": 0,
    "changes": 162,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/src/main/java/ClientGUI.java",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/src/main/java/ClientGUI.java",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/client/src/main/java/ClientGUI.java?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,162 @@\n+import javax.swing.*;\n+\n+import java.awt.*;\n+import java.awt.event.ActionListener;\n+import java.awt.event.WindowAdapter;\n+import java.awt.event.WindowEvent;\n+\n+import javax.swing.BorderFactory;\n+import javax.swing.JButton;\n+import javax.swing.JFrame;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JScrollPane;\n+import javax.swing.JTextArea;\n+import javax.swing.JTextField;\n+\n+public class ClientGUI extends JFrame {\n+    private final JPanel chatPanel = new JPanel();\n+    private final JPanel loginPanel = new JPanel();\n+    private final JTextArea textArea = new JTextArea();\n+    private final JTextArea clientsInformation = new JTextArea();\n+    private final JLabel textInputLabel = new JLabel(\"Your message :\");\n+    private final JTextField textInput = new JTextField();\n+    private final JScrollPane js = new JScrollPane(textArea, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,\n+            JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);\n+    private final JScrollPane jsClients = new JScrollPane(clientsInformation, JScrollPane.VERTICAL_SCROLLBAR_NEVER,\n+            JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);\n+    private final JButton sendButton = new JButton(\"Send\");\n+    // Это чат для приватных сообщений, делаем выпадающий список чтобы\n+    // можно было выбрать кому отправить сообщение\n+    private String receiver;\n+    private final String all = \"all\";\n+    private String[] clients = {all};\n+    private final JComboBox<String> selectClient = new JComboBox<>(clients);\n+    //при нажатии enter или кнопки submit\n+    private final ActionListener listener = event -> {\n+        String message = textInput.getText(); // получаем введенный текст\n+        // если input не пустой то отправляем сообщение\n+        if (!message.isEmpty()) {\n+            if (receiver != null && !receiver.equalsIgnoreCase(all)) {\n+                // если выбран конечный получатель, то добавляем /w и имя получателя к\n+                // сообщению\n+                message = \"/w \" + receiver + \" \" + message;\n+            }\n+            this.clientNetwork.sendMessage(message);\n+            textInput.setText(\"\");\n+            selectClient.setSelectedItem(\"all\");\n+            receiver = null;\n+        }\n+    };\n+    private final ClientNetwork clientNetwork = new ClientNetwork();\n+\n+\n+    // конструктор ClientGUI\n+    public ClientGUI() {\n+        /*\n+         * this.clientNetwork.setCallOnMsgRecieved(new Callback<String>() {\n+         *\n+         * @Override public void callback(String message){ textArea.append(message); }\n+         * });\n+         */\n+        setCallBacks(); // имплементируем callback методы Callback-ov\n+        setMainFrame(); // имплементируем основное окно\n+        initilizeChatPanel(); // инициализируем панель для чата\n+        initializeLoginJPanel(); // инициализируем панель для авторизации\n+        this.clientNetwork.connect(); // запускаем подключение к серверу\n+        this.setVisible(true);\n+    }\n+    // метод создания основного окна\n+    private void setMainFrame() {\n+        this.setSize(500, 500);\n+        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        this.setLocationRelativeTo(null);\n+        this.getContentPane().setLayout(new FlowLayout());\n+        this.addWindowListener(new WindowAdapter() {\n+            @Override\n+            public void windowClosing(WindowEvent event) {\n+                clientNetwork.sendMessage(\"/end\"); // при закрытии окна отправляем серверу сообщение об отключении\n+                super.windowClosing(event);\n+            }\n+        });\n+    }\n+    // метод создания панели чата\n+    private void initilizeChatPanel() {\n+        textArea.setEditable(false);\n+        clientsInformation.setEditable(false);\n+        chatPanel.setBackground(Color.white);\n+        chatPanel.setPreferredSize(new Dimension(490, 490));\n+        js.setPreferredSize(new Dimension(450, 350));\n+        jsClients.setPreferredSize(new Dimension(450, 35));\n+        chatPanel.add(jsClients);\n+        chatPanel.add(js);\n+        textInput.setPreferredSize(new Dimension(150, 25));\n+        chatPanel.add(textInputLabel);\n+        chatPanel.add(textInput);\n+        textInput.addActionListener(listener);\n+        sendButton.addActionListener(listener);\n+        selectClient.addActionListener(e -> { //здесь мы записываем в список всех клиентов, чтобы можно было выбрать\n+            // кому послать сообщение\n+            receiver = selectClient.getSelectedItem().toString();\n+        });\n+        JLabel toWho = new JLabel(\"to\");\n+        chatPanel.add(toWho);\n+        chatPanel.add(selectClient);\n+        chatPanel.add(sendButton);\n+        chatPanel.setVisible(false);\n+        this.add(chatPanel);\n+    }\n+// метод создания панели авторизации\n+    private void initializeLoginJPanel() {\n+        loginPanel.setBackground(Color.white);\n+        loginPanel.setLayout(new FlowLayout(FlowLayout.RIGHT));\n+        loginPanel.setPreferredSize(new Dimension(300, 150));\n+        loginPanel.setBorder(BorderFactory.createTitledBorder(\"Authorization\"));\n+        JTextField login = new JTextField();\n+        JLabel loginLabel = new JLabel(\"Your connection identifier : \");\n+        JLabel passwordLabel = new JLabel(\"Your password : \");\n+        JPasswordField password = new JPasswordField();\n+        login.setPreferredSize(new Dimension(100, 25));\n+        password.setPreferredSize(new Dimension(100, 25));\n+        loginPanel.add(loginLabel);\n+        loginPanel.add(login);\n+        loginPanel.add(passwordLabel);\n+        loginPanel.add(password);\n+        JPanel buttonPanel = new JPanel();\n+        buttonPanel.setPreferredSize(new Dimension(280, 35));\n+        buttonPanel.setBackground(Color.WHITE);\n+        JButton button = new JButton(\"Submit\");\n+        buttonPanel.add(button);\n+        button.addActionListener(e -> { // при нажатии на кнопку submit серверу запрос на авторизацию\n+            clientNetwork.sendMessage(\"/auth \" + login.getText() + \" \" + String.valueOf(password.getPassword()));\n+            login.setText(\"\");// спрашиваем данные логина и пароля\n+            password.setText(\"\");\n+        });\n+        loginPanel.add(buttonPanel);\n+        loginPanel.setVisible(true);\n+        this.add(loginPanel);\n+    }\n+\n+    // имплиментируем нужные нам Callback-i\n+    // t.e. говорим ClientNetwork, какое поведение мы ждем от него в какой ситуации\n+    private void setCallBacks() {\n+        //при получении сообщения от сервера добавляем его в textArea\n+        this.clientNetwork.setCallOnMsgRecieved(message -> textArea.append(message + \"\\n\"));\n+        // при получении нового списка клиентов\n+        this.clientNetwork.setCallOnChangeClientList(clientsList -> {\n+            clientsInformation.setText(clientsList);// печатаем всех клиентов в окошке клиентов\n+            clients = (all + \" \"+ clientsList).split(\"\\\\s\"); // создаем таблицу из присутствующих клиентов + варинт \"все\"\n+            // для combobox\n+            selectClient.setModel(new DefaultComboBoxModel(clients));// передаем данные combobox\n+        });\n+        // при успешной авторизации мы прячем loginPanel и делаем видимой chatPanel\n+        this.clientNetwork.setCallOnAuth(s -> {\n+            loginPanel.setVisible(false);\n+            chatPanel.setVisible(true);\n+        });\n+        // при сообщении об ошибке показываем pop-up\n+        this.clientNetwork.setCallOnError(message -> JOptionPane.showMessageDialog(null, message, \"We have a problem\",\n+                JOptionPane.ERROR_MESSAGE));\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "38d59f5b486a4047ad9b8ae017e5728562035886",
    "filename": "HomeWork7/client/src/main/java/ClientNetwork.java",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/src/main/java/ClientNetwork.java",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/src/main/java/ClientNetwork.java",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/client/src/main/java/ClientNetwork.java?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,124 @@\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.net.Socket;\n+import java.net.SocketException;\n+\n+public class ClientNetwork {\n+    private Socket socket;\n+    private DataInputStream in;\n+    private DataOutputStream out;\n+    private Callback<String> callOnMsgRecieved;\n+    private Callback<String> callOnChangeClientList;\n+    private Callback<String> callOnAuth;\n+    private Callback<String> callOnError;\n+\n+    public void connect() {\n+        try {\n+            socket = new Socket(\"localhost\", 8189);\n+            in = new DataInputStream(socket.getInputStream());\n+            out = new DataOutputStream(socket.getOutputStream());\n+            new Thread(() -> { // создаем поток для чтения\n+                boolean goOn = true;\n+                boolean isAuthorized = false;\n+                try {\n+                    while (!isAuthorized && goOn) { // цикл авторизации\n+                        String message = in.readUTF(); // читаем сообщения сервера\n+                        if (message.startsWith(\"/authok\")) { // если от сервера пришло сообщение,\n+                            // что авторизация прошла успешно то\n+                            callOnAuth.callback(\"/authok\"); // вызываем метод Callback-a авторизации который\n+                            /* имплиментирован ClientGUI */\n+                            isAuthorized = true; //можно выйти из цикла\n+                        } else if (message.equalsIgnoreCase(\"/end\")) { //если сервер написал end, выходим из обоих\n+                            //циклов и отключаемся\n+                            goOn = false;\n+                        } else\n+                            if (message.startsWith(\"/error\")) {\n+                                callOnError.callback(message.substring(7));\n+                            } else {\n+                            // сюда мы попадаем если сервер нам написал что то иное, чем authok и end\n+                            // можно было бы тут написать if startsWith(error)\n+                            callOnError.callback(\"Something is wrong\"); // отправляем\n+                        }\n+                    }\n+                    // цикл авторизации завершается\n+                    //\n+                    while (goOn) {//цикл общения с cервером\n+                        String msg = in.readUTF(); // читаем сообщение сервера\n+                        if (msg.equalsIgnoreCase(\"/end\")) {\n+                            goOn = false; // выходим\n+                        } else if (msg.startsWith(\"/clients \")) { // сервер прислал список клиентов\n+                            callOnChangeClientList.callback(msg.substring(9)); // отправляем список клиентов, отсекая\n+                            // /clients\n+                        } else if (msg.startsWith(\"/error\")) { // при получении сообщения об ошибке\n+                            callOnError.callback(msg.substring(7));\n+                        } else {\n+                            callOnMsgRecieved.callback(msg); // при получении обычного сообщения без префиксов\n+                        }\n+                    }\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n+                } finally {\n+                    closeConnection();\n+                }\n+            }).start();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+\n+    }\n+\n+    public void sendMessage(String msg) {\n+        try {\n+            // return true;\n+            out.writeUTF(msg); // отправляем серверу сообщение\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            System.out.println(\"Отослать сообщение невозможно\");\n+            callOnError.callback(\"Подключение к серверу, видимо, отсутствует\");\n+            /* return false; */\n+        }\n+        finally {\n+\n+        }\n+\n+    }\n+\n+    public void closeConnection() {\n+        // закончили работать, все выключаем и сокеты и потоки ввода-вывода\n+        try {\n+            in.close();\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        try {\n+            out.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        try {\n+            socket.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    // сеттеры с помощью которых мы в ClientGUI можем задать желаемое поведение\n+\n+    public void setCallOnAuth(Callback<String> callOnAuth) {\n+        this.callOnAuth = callOnAuth;\n+    }\n+\n+    public void setCallOnMsgRecieved(Callback<String> callOnMsgRecieved) {\n+        this.callOnMsgRecieved = callOnMsgRecieved;\n+    }\n+\n+    public void setCallOnChangeClientList(Callback<String> callOnChangeClientList) {\n+        this.callOnChangeClientList = callOnChangeClientList;\n+    }\n+\n+    public void setCallOnError(Callback<String> callOnError) {\n+        this.callOnError = callOnError;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ef6881c42f8e4d5ac0c1313fd61be8715fa6d400",
    "filename": "HomeWork7/client/target/classes/AppClient$1.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/AppClient$1.class",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/AppClient$1.class",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/client/target/classes/AppClient$1.class?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3"
  },
  {
    "sha": "5913669936d32013e2df455c527f55af967e5770",
    "filename": "HomeWork7/client/target/classes/AppClient.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/AppClient.class",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/AppClient.class",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/client/target/classes/AppClient.class?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3"
  },
  {
    "sha": "0eb3738d15a22216020bda2142da0fe9cd08c9af",
    "filename": "HomeWork7/client/target/classes/Callback.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/Callback.class",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/Callback.class",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/client/target/classes/Callback.class?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3"
  },
  {
    "sha": "8f14bb5436c64f28a075b4d6c68bc55b004deffc",
    "filename": "HomeWork7/client/target/classes/ClientGUI$1.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/ClientGUI$1.class",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/ClientGUI$1.class",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/client/target/classes/ClientGUI$1.class?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3"
  },
  {
    "sha": "c488f4dfc84087410b9baa77204d06e972b3fdd6",
    "filename": "HomeWork7/client/target/classes/ClientGUI.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/ClientGUI.class",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/ClientGUI.class",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/client/target/classes/ClientGUI.class?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3"
  },
  {
    "sha": "cbbc6356dafd8ec50d4a192eb30e70a2aa7de10f",
    "filename": "HomeWork7/client/target/classes/ClientNetwork.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/ClientNetwork.class",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/client/target/classes/ClientNetwork.class",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/client/target/classes/ClientNetwork.class?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3"
  },
  {
    "sha": "bba9cd763c10c2b2444bb9947aa0601aa69c414e",
    "filename": "HomeWork7/pom.xml",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/pom.xml",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/pom.xml",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/pom.xml?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>org.example</groupId>\n+    <artifactId>HomeWork7</artifactId>\n+    <packaging>pom</packaging>\n+    <version>1.0-SNAPSHOT</version>\n+    <modules>\n+        <module>client</module>\n+        <module>server</module>\n+    </modules>\n+\n+    <properties>\n+        <maven.compiler.source>15</maven.compiler.source>\n+        <maven.compiler.target>15</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "2b5d0306c00ebf7dd81a467d63fde1bde1c794ca",
    "filename": "HomeWork7/server/pom.xml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/pom.xml",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/pom.xml",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/server/pom.xml?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>HomeWork7</artifactId>\n+        <groupId>org.example</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>server</artifactId>\n+\n+    <properties>\n+        <maven.compiler.source>15</maven.compiler.source>\n+        <maven.compiler.target>15</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "f5c5cb2196d0409915d62530405e00e956a02d64",
    "filename": "HomeWork7/server/src/main/java/AppServer.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/src/main/java/AppServer.java",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/src/main/java/AppServer.java",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/server/src/main/java/AppServer.java?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,6 @@\n+public class AppServer {\n+    //запускает сервер\n+    public static void main(String[] args) {\n+        new Server();\n+    }\n+}"
  },
  {
    "sha": "eba9af48dd3e0fd764586bf7c0e7cd00b3e9635c",
    "filename": "HomeWork7/server/src/main/java/AuthService.java",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/src/main/java/AuthService.java",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/src/main/java/AuthService.java",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/server/src/main/java/AuthService.java?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,4 @@\n+public interface AuthService {\n+    String getNicknameByLoginAndPassword(String login, String password);\n+}\n+"
  },
  {
    "sha": "59df787609d21fe130641850e6d281d8e42e7414",
    "filename": "HomeWork7/server/src/main/java/BaseAuthService.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/src/main/java/BaseAuthService.java",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/src/main/java/BaseAuthService.java",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/server/src/main/java/BaseAuthService.java?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,72 @@\n+import java.util.HashMap;\n+\n+public class BaseAuthService implements AuthService{\n+\n+    HashMap<String, String> users = new HashMap<>();\n+// база клиентов\n+    public BaseAuthService(){\n+        users.put(\"Vasya\", \"password\");\n+        users.put(\"Toto\", \"pass\");\n+        users.put(\"Foo\", \"foopass\");\n+    }\n+\n+    @Override\n+    public String getNicknameByLoginAndPassword(String login, String password) {\n+\n+        if(users.containsKey(login)&&users.get(login).equals(password)) {\n+            System.out.println(\"return \"+login);\n+            return login;\n+        }\n+        return null;\n+\n+    }\n+}\n+//import java.util.ArrayList;\n+//import java.util.List;\n+//// Класс Сервиса_Аутентификации_Базы_клиентов (имплементирует интерфейс AuthService)\n+//public class BaseAuthService implements AuthService {\n+//    // внутренний класс Ввод\n+//    private class Entry {\n+//        private String login;\n+//        private String pass;\n+//        private String nick;\n+//        // конструктор класса Ввод\n+//        public Entry(String login, String pass, String nick) {\n+//            this.login = login;\n+//            this.pass = pass;\n+//            this.nick = nick;\n+//        }\n+//    }\n+//\n+//    // объявление переменной списка объектов типа Ввод\n+//    private List<Entry> entries;\n+////    // переопределение методов Старт и Стоп интерфейса AuthService\n+////    @Override\n+////    public void start() {\n+////        System.out.println(\"Сервис аутентификации запущен\");\n+////    }\n+////\n+////    @Override\n+////    public void stop() {\n+////        System.out.println(\"Сервис аутентификации остановлен\");\n+////    }\n+//\n+//    // конструктор основного класса Сервиса_Аутентификации_в_Базе_клиентов\n+//    public BaseAuthService() {\n+//        // заполняем список объектов типа Ввод:\n+//        entries = new ArrayList<>();\n+//        entries.add(new Entry(\"login1\", \"pass1\", \"nick1\"));\n+//        entries.add(new Entry(\"login2\", \"pass2\", \"nick2\"));\n+//        entries.add(new Entry(\"login3\", \"pass3\", \"nick3\"));\n+//    }\n+//\n+//    // переопределение метода Получить_Ник_по_Логину_и_Паролю интерфейса AuthService\n+//    @Override\n+//    public String getNicknameByLoginAndPassword(String login, String pass) {\n+//        // перебираем список entries и ищем совпадение логина и пароля с присланными в аргументах\n+//        for (Entry o : entries) {\n+//            if (o.login.equals(login) && o.pass.equals(pass)) return o.nick; // если находим возвращаем ник\n+//        }\n+//        return null;\n+//    }\n+//}"
  },
  {
    "sha": "7b6850611c537da68a590a195edd85c0f2043390",
    "filename": "HomeWork7/server/src/main/java/ClientHandler.java",
    "status": "added",
    "additions": 138,
    "deletions": 0,
    "changes": 138,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/src/main/java/ClientHandler.java",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/src/main/java/ClientHandler.java",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/server/src/main/java/ClientHandler.java?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,138 @@\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.net.Socket;\n+\n+public class ClientHandler {\n+    private String nickname;\n+    private Socket socket;\n+    private DataInputStream in;\n+    private DataOutputStream out;\n+    private Server server;\n+// конструктор класса\n+    public ClientHandler(Server server, Socket socket) {\n+        try {\n+            this.socket = socket;\n+            this.server = server;\n+            this.in = new DataInputStream(socket.getInputStream());\n+            this.out = new DataOutputStream(socket.getOutputStream());\n+            new Thread(() -> { // поток для клиента\n+                boolean continueChat = true;\n+                String msg = \"\";\n+                boolean isAuthorized = false;\n+                final long TIMEOUT = 120000;  // Время таймаута\n+                long startTime = System.currentTimeMillis();// начало отсчета времени таймаута:\n+                try {\n+                   while (!isAuthorized && continueChat) { // цикл авторизации\n+                        // проверяем время таймаута\n+                       if ( (System.currentTimeMillis()-startTime)> TIMEOUT){  // если время превысило таймаут\n+                            System.out.println(\"server = \" + server + \", socket = \" + socket + \" -> timeout\");\n+                            continueChat = false;\n+                            sendMessage(\"/error timeout\");\n+                            disconnect();\n+                        } else\n+                            if (in.available()>0) {\n+                        /*\n+                         * Последнее ДЗ (8) один из возможных вариантов если не понятно пишите мне\n+                         * в телеграм if((System.currentTimeMillis() - start) > 120000){ continueChat =\n+                         * false; // Тут можно еще и отправить и сообщение об ошибке\n+                         * sendMessage(\"/error timeout\"); и там как то это обрабатывать } else\n+                         * if(in.available()>0) {\n+                         */\n+                        msg = in.readUTF(); // читаем сообщение от клиента\n+                        if (msg.startsWith(\"/auth\")) { // если начинается с /auth, то пытаемся его авторизировать\n+                            String[] tokens = msg.split(\"\\\\s\", 3); // разделяем на части (разделитель пробел)\n+                            nickname = server.getAuthService().getNicknameByLoginAndPassword(tokens[1], tokens[2]);\n+\n+                            if (nickname != null) { // если авторизация, то шлем клиенту authok и выходим из цикла\n+                                // авторизации\n+                                isAuthorized = true;\n+                                sendMessage(\"/authok\");\n+                                server.subscribe(this);\n+                            } else {\n+                                sendMessage(\"/error Ошибка_авторизации\");\n+                                // иначе пишем клиенту об ошибке (по хорошему тут можно еще\n+                                // текст ошибки писать, а на клиенте его ловить и печатать.\n+                                // Если кто то хочет, то может добавить это в чат,\n+                                // не будет получаться -> пишите в телеграм\n+                                //continueChat = false; // чтобы не заходить в чат- неправильно -убрала, чтобы не выскочить из цикла\n+                            }\n+                        }\n+                        if (msg.equalsIgnoreCase(\"/end\")) {// клиент решил выйти без авторизации\n+                            continueChat = false;\n+                        }\n+                        } // это скобка от ДЗ 8\n+                        //\n+                    }\n+\n+                    while (continueChat) { // цикл чтения сообщений клиента\n+                        msg = in.readUTF();\n+                        if (msg.startsWith(\"/\")) {// специальное сообщение\n+                            if (msg.equalsIgnoreCase(\"/end\")) { // клиент вышел\n+                                continueChat = false;\n+                            } else if (msg.startsWith(\"/w\")) { //приватное сообщение ДЗ7\n+                                String[] tokens = msg.split(\"\\\\s\", 3);\n+                                System.out.println(tokens);\n+                                if (tokens.length == 3) {\n+                                    System.out.println(tokens);\n+                                    server.privateMsg(this, tokens[1], tokens[2]);\n+                                }\n+                            }\n+                        } else {// обычное сообщение\n+                            server.broadcastMessage(nickname + \" : \" + msg);\n+                        }\n+                    }\n+                } catch (IOException e) {\n+                    e.printStackTrace();\n+                } finally {\n+                    System.out.println(\"Отключаем клиента\");\n+                    disconnect();\n+\n+                    }\n+\n+            }).start();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+       }\n+//        finally {    //**\n+//          disconnect();   //**\n+    }\n+\n+\n+    public void sendMessage(String message) {\n+        try {\n+            out.writeUTF(message);// пишем сообщение клиенту\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        finally {\n+\n+        }\n+    }\n+\n+    public String getNickname() {\n+        return nickname;\n+    }\n+\n+    public void disconnect() { // отключаемся\n+        sendMessage(\"/end\");\n+        System.out.println(\"disconnected client \" + nickname);\n+        server.unsubscribe(this);\n+        try {\n+            in.close();\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        try {\n+            out.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+        try {\n+            socket.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f65cfdb0b1aec0c7bd6c7d22bddf2a98a7442ff1",
    "filename": "HomeWork7/server/src/main/java/Server.java",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/src/main/java/Server.java",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/src/main/java/Server.java",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/server/src/main/java/Server.java?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3",
    "patch": "@@ -0,0 +1,68 @@\n+import java.io.IOException;\n+import java.net.ServerSocket;\n+import java.net.Socket;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class Server {\n+    private List<ClientHandler> clients;\n+//    private AuthService authService = new DBAuthService();\n+    private AuthService authService = new BaseAuthService();\n+    public AuthService getAuthService() {\n+        return authService;\n+    }\n+\n+    public Server() {\n+        this.clients = new ArrayList<>();\n+        try (ServerSocket serverSocket = new ServerSocket(8189)) {// запускаем сервер\n+            System.out.println(\"Server is listening on 8189\");\n+            while (true) {\n+                Socket socket = serverSocket.accept(); // ждем клиентов\n+                new ClientHandler(this, socket); // после того как клиент подключился создаем для него ClientHandler\n+            }\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    public void broadcastMessage(String message) {\n+        for (ClientHandler client : clients) { // рассылаем сообщение всем подписанным клиентам\n+            client.sendMessage(message);\n+        }\n+    }\n+\n+    public void broadcastClientsList() { // рассылаем клиентам список имен всех клиентов\n+        StringBuilder sb = new StringBuilder(15 * clients.size());\n+        sb.append(\"/clients \");\n+        for (ClientHandler o : clients) {\n+            sb.append(o.getNickname()).append(\" \");\n+        }\n+        String out = sb.toString();\n+        broadcastMessage(out);\n+    }\n+\n+    public void subscribe(ClientHandler client) { //добавляем подключившегося клиента в список\n+        clients.add(client);\n+        broadcastClientsList();\n+    }\n+\n+    public void unsubscribe(ClientHandler client) { // удаляем клиента из списка после отключения\n+        clients.remove(client);\n+        broadcastClientsList();\n+    }\n+\n+    public void privateMsg(ClientHandler sender, String receiverNick, String msg) { // приватное сообщение\n+        if (sender.getNickname().equals(receiverNick)) { //если получатель равен отправителю\n+            sender.sendMessage(\"Note for myself: \" + msg);\n+            return;\n+        }\n+        for (ClientHandler receiver : clients) {\n+            if (receiver.getNickname().equals(receiverNick)) {\n+                receiver.sendMessage(\"from \" + sender.getNickname() + \": \" + msg);\n+                sender.sendMessage(\"for \" + receiverNick + \": \" + msg);\n+                return;\n+            }\n+        }\n+        sender.sendMessage(\"Client \" + receiverNick + \" is not found\");\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "8739ee9403ffc3a4468e9ff6300649ac422ee8a6",
    "filename": "HomeWork7/server/target/classes/AppServer.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/target/classes/AppServer.class",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/target/classes/AppServer.class",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/server/target/classes/AppServer.class?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3"
  },
  {
    "sha": "9099c3ed6746537fbaec1a023585d4a719e59c5f",
    "filename": "HomeWork7/server/target/classes/AuthService.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/target/classes/AuthService.class",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/target/classes/AuthService.class",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/server/target/classes/AuthService.class?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3"
  },
  {
    "sha": "6b553e9e907e192524852f8f5c86b9df847448e2",
    "filename": "HomeWork7/server/target/classes/BaseAuthService.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/target/classes/BaseAuthService.class",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/target/classes/BaseAuthService.class",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/server/target/classes/BaseAuthService.class?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3"
  },
  {
    "sha": "b529186c11d2bdcf07b57e7ea89f48eb3f51377b",
    "filename": "HomeWork7/server/target/classes/ClientHandler.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/target/classes/ClientHandler.class",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/target/classes/ClientHandler.class",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/server/target/classes/ClientHandler.class?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3"
  },
  {
    "sha": "516a3aef95201c04c7277aa06c90a8d43a21a4cc",
    "filename": "HomeWork7/server/target/classes/Server.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/vetaka/GB_Java2/blob/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/target/classes/Server.class",
    "raw_url": "https://github.com/vetaka/GB_Java2/raw/68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3/HomeWork7/server/target/classes/Server.class",
    "contents_url": "https://api.github.com/repos/vetaka/GB_Java2/contents/HomeWork7/server/target/classes/Server.class?ref=68be74e1504e8c52e7416a36fc3ff9a41dc0b9e3"
  }
]
