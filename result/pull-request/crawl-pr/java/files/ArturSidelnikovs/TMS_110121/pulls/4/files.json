[
  {
    "sha": "7160c69c56a40b0d61a49c0d0884903749c8e770",
    "filename": "Lesson11/src/Tasks/task1/Notepad.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/ArturSidelnikovs/TMS_110121/blob/88dca1a1bcc6068c1e9f0e845c99659a7563102a/Lesson11/src/Tasks/task1/Notepad.java",
    "raw_url": "https://github.com/ArturSidelnikovs/TMS_110121/raw/88dca1a1bcc6068c1e9f0e845c99659a7563102a/Lesson11/src/Tasks/task1/Notepad.java",
    "contents_url": "https://api.github.com/repos/ArturSidelnikovs/TMS_110121/contents/Lesson11/src/Tasks/task1/Notepad.java?ref=88dca1a1bcc6068c1e9f0e845c99659a7563102a",
    "patch": "@@ -0,0 +1,37 @@\n+package Tasks.task1;\n+/*\n+Создать класс Notepad с внутренним классом или классами, с помощью объек-\n+тов которого могут храниться несколько записей на одну дату.\n+ */\n+\n+\n+public class Notepad {\n+\n+    Dates dates = new Dates();\n+    private int date;\n+\n+\n+    public int getDate() { return date; }\n+\n+    public void setDate(int date) { this.date = date; }\n+\n+    Notepad () {setDate(9);}\n+\n+         public class Dates {\n+             public void dddate() {\n+                if (date <= 10) {\n+                    System.out.println(\"Запись #1\");\n+                    System.out.println(\"Запись #2\");\n+                    System.out.println(\"Запись #3\");\n+                } else {\n+                    System.out.println(\"На эту дату свободна запись на ноготочки\");\n+                    System.out.println(\"На эту дату свободна запись на волосы\");\n+                }\n+            }\n+        }\n+\n+        void getsDate () { dates.dddate(); }\n+    }\n+\n+\n+"
  },
  {
    "sha": "8c147a12715457a5ddb5aa1ccf9787aa6d4d6405",
    "filename": "Lesson11/src/Tasks/task1/Runner.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/ArturSidelnikovs/TMS_110121/blob/88dca1a1bcc6068c1e9f0e845c99659a7563102a/Lesson11/src/Tasks/task1/Runner.java",
    "raw_url": "https://github.com/ArturSidelnikovs/TMS_110121/raw/88dca1a1bcc6068c1e9f0e845c99659a7563102a/Lesson11/src/Tasks/task1/Runner.java",
    "contents_url": "https://api.github.com/repos/ArturSidelnikovs/TMS_110121/contents/Lesson11/src/Tasks/task1/Runner.java?ref=88dca1a1bcc6068c1e9f0e845c99659a7563102a",
    "patch": "@@ -0,0 +1,12 @@\n+package Tasks.task1;\n+\n+public class Runner {\n+    public static void main(String[] args) {\n+\n+        Notepad notepad = new Notepad();\n+        notepad.getsDate();\n+\n+\n+\n+    }\n+}"
  },
  {
    "sha": "f8b52ca501f2e2fb84bdf221b197e744296e30d5",
    "filename": "Lesson11/src/Tasks/task2/Payment.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/ArturSidelnikovs/TMS_110121/blob/88dca1a1bcc6068c1e9f0e845c99659a7563102a/Lesson11/src/Tasks/task2/Payment.java",
    "raw_url": "https://github.com/ArturSidelnikovs/TMS_110121/raw/88dca1a1bcc6068c1e9f0e845c99659a7563102a/Lesson11/src/Tasks/task2/Payment.java",
    "contents_url": "https://api.github.com/repos/ArturSidelnikovs/TMS_110121/contents/Lesson11/src/Tasks/task2/Payment.java?ref=88dca1a1bcc6068c1e9f0e845c99659a7563102a",
    "patch": "@@ -0,0 +1,34 @@\n+package Tasks.task2;\n+\n+/*\n+Создать класс Payment с внутренним классом, с помощью объектов кото-\n+рого можно сформировать покупку из нескольких товаров.\n+ */\n+\n+import java.util.regex.Pattern;\n+\n+public class Payment {\n+\n+     private int dollars;\n+     Purchase purchase = new Purchase();\n+\n+    public int getDollars() { return dollars;}\n+    public void setDollars(int dollars) { this.dollars = dollars;}\n+\n+    Payment () { setDollars(300);}\n+\n+\n+    class Purchase {\n+        void Calculation () {\n+            if (dollars<=100) {\n+                System.out.println(\"Покупаем тапки\");\n+            } else if (dollars>=200) {\n+                System.out.println(\"Кроме тапок нам еще хватит на куртку\");\n+            }\n+        }\n+    }\n+\n+    void BuyIt () {\n+        purchase.Calculation();\n+    }\n+}"
  },
  {
    "sha": "2e147575cc8c7cf9917b1df1f7b026f4dbc36f6f",
    "filename": "Lesson11/src/Tasks/task2/Runner.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/ArturSidelnikovs/TMS_110121/blob/88dca1a1bcc6068c1e9f0e845c99659a7563102a/Lesson11/src/Tasks/task2/Runner.java",
    "raw_url": "https://github.com/ArturSidelnikovs/TMS_110121/raw/88dca1a1bcc6068c1e9f0e845c99659a7563102a/Lesson11/src/Tasks/task2/Runner.java",
    "contents_url": "https://api.github.com/repos/ArturSidelnikovs/TMS_110121/contents/Lesson11/src/Tasks/task2/Runner.java?ref=88dca1a1bcc6068c1e9f0e845c99659a7563102a",
    "patch": "@@ -0,0 +1,11 @@\n+package Tasks.task2;\n+\n+\n+public class Runner {\n+    public static void main(String[] args) {\n+\n+        Payment payment = new Payment();\n+        payment.BuyIt();\n+\n+    }\n+}"
  }
]
