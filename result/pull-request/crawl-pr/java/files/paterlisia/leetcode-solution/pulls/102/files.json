[
  {
    "sha": "739f98baa76764ff22197331ed75c2a03f121776",
    "filename": "src/Java/two-pointers/75.颜色分类.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/paterlisia/leetcode-solution/blob/a83f5df74ad7f232ffcd284378145fe2f1d9663c/src/Java/two-pointers/75.%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB.java",
    "raw_url": "https://github.com/paterlisia/leetcode-solution/raw/a83f5df74ad7f232ffcd284378145fe2f1d9663c/src/Java/two-pointers/75.%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB.java",
    "contents_url": "https://api.github.com/repos/paterlisia/leetcode-solution/contents/src/Java/two-pointers/75.%E9%A2%9C%E8%89%B2%E5%88%86%E7%B1%BB.java?ref=a83f5df74ad7f232ffcd284378145fe2f1d9663c",
    "patch": "@@ -0,0 +1,25 @@\n+/*\n+ * @lc app=leetcode.cn id=75 lang=java\n+ *\n+ * [75] 颜色分类\n+ */\n+\n+// @lc code=start\n+class Solution {\n+    public void sortColors(int[] nums) {\n+        int left = 0, right = nums.length - 1;\n+        for (int i = 0; i <= right; i++) {\n+            while (nums[i] == 2 && i < right) {\n+                swap(nums, i, right--);\n+            }\n+            if (nums[i] == 0) swap(nums, i, left++);\n+        }\n+    }\n+    public void swap(int[] nums, int i, int j) {\n+        int tmp = nums[i];\n+        nums[i] = nums[j];\n+        nums[j] = tmp;\n+    }\n+}\n+// @lc code=end\n+"
  }
]
