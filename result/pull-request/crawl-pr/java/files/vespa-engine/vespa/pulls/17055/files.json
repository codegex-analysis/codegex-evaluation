[
  {
    "sha": "f221cbb63b149b0280c554e3c9b4fa902f349cd8",
    "filename": "container-search/src/test/java/com/yahoo/prelude/query/parser/test/ParseTestCase.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/3e5e19e0cd8f9b00e8e1eac9788a2e0d0bca77d5/container-search/src/test/java/com/yahoo/prelude/query/parser/test/ParseTestCase.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/3e5e19e0cd8f9b00e8e1eac9788a2e0d0bca77d5/container-search/src/test/java/com/yahoo/prelude/query/parser/test/ParseTestCase.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/container-search/src/test/java/com/yahoo/prelude/query/parser/test/ParseTestCase.java?ref=3e5e19e0cd8f9b00e8e1eac9788a2e0d0bca77d5",
    "patch": "@@ -42,7 +42,7 @@\n  */\n public class ParseTestCase {\n \n-    private ParsingTester tester = new ParsingTester();\n+    private final ParsingTester tester = new ParsingTester();\n     \n     @Test\n     public void testSimpleTermQuery() {"
  },
  {
    "sha": "138f1ab4b27c918662668c4903cf4e27cb232609",
    "filename": "container-search/src/test/java/com/yahoo/search/test/QueryTestCase.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/3e5e19e0cd8f9b00e8e1eac9788a2e0d0bca77d5/container-search/src/test/java/com/yahoo/search/test/QueryTestCase.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/3e5e19e0cd8f9b00e8e1eac9788a2e0d0bca77d5/container-search/src/test/java/com/yahoo/search/test/QueryTestCase.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/container-search/src/test/java/com/yahoo/search/test/QueryTestCase.java?ref=3e5e19e0cd8f9b00e8e1eac9788a2e0d0bca77d5",
    "patch": "@@ -63,7 +63,7 @@\n import static org.junit.Assert.fail;\n \n /**\n- * @author Arne Bergene Fossaa\n+ * @author bratseth\n  */\n public class QueryTestCase {\n \n@@ -421,7 +421,6 @@ public void testEqual() {\n     @Test\n     public void testUtf8Decoding() {\n         Query q = new Query(\"/?query=beyonc%C3%A9\");\n-        q.getModel().getQueryTree().toString();\n         assertEquals(\"beyonc\\u00e9\", q.getModel().getQueryTree().toString());\n     }\n "
  }
]
