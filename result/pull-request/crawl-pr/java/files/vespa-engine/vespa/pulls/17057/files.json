[
  {
    "sha": "9fc924adbe2b7f74e6b206b40b6d07e016925d79",
    "filename": "container-core/src/main/java/com/yahoo/restapi/Path.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/container-core/src/main/java/com/yahoo/restapi/Path.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/container-core/src/main/java/com/yahoo/restapi/Path.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/container-core/src/main/java/com/yahoo/restapi/Path.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -46,6 +46,7 @@ public Path(URI uri) {\n         this(uri, \"\");\n     }\n \n+    // TODO (freva): Remove, used by factory\n     public Path(URI uri, String optionalPrefix) {\n         this.optionalPrefix = optionalPrefix;\n         this.pathString = uri.getRawPath();"
  },
  {
    "sha": "a0da8cbddbad0ab6d77fa816160ff08d574a1e1c",
    "filename": "controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/PathGroup.java",
    "status": "modified",
    "additions": 23,
    "deletions": 71,
    "changes": 94,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/PathGroup.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/PathGroup.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-api/src/main/java/com/yahoo/vespa/hosted/controller/api/role/PathGroup.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -6,7 +6,6 @@\n import java.net.URI;\n import java.util.EnumSet;\n import java.util.List;\n-import java.util.Objects;\n import java.util.Optional;\n import java.util.Set;\n \n@@ -21,13 +20,11 @@\n enum PathGroup {\n \n     /** Paths exclusive to operators (including read), used for system management. */\n-    classifiedOperator(PathPrefix.api,\n-                       \"/configserver/v1/{*}\",\n+    classifiedOperator(\"/configserver/v1/{*}\",\n                        \"/deployment/v1/{*}\"),\n \n     /** Paths used for system management by operators. */\n-    operator(PathPrefix.none,\n-             \"/controller/v1/{*}\",\n+    operator(\"/controller/v1/{*}\",\n              \"/flags/v1/{*}\",\n              \"/loadbalancers/v1/{*}\",\n              \"/nodes/v2/{*}\",\n@@ -42,78 +39,63 @@\n              \"/changemanagement/v1/{*}\"),\n \n     /** Paths used for creating and reading user resources. */\n-    user(PathPrefix.api,\n-         \"/application/v4/user\",\n+    user(\"/application/v4/user\",\n          \"/athenz/v1/{*}\"),\n \n     /** Paths used for creating tenants with proper access control. */\n     tenant(Matcher.tenant,\n-           PathPrefix.api,\n            \"/application/v4/tenant/{tenant}\"),\n \n     /** Paths used for user management on the tenant level. */\n     tenantUsers(Matcher.tenant,\n-                PathPrefix.api,\n                 \"/user/v1/tenant/{tenant}\"),\n \n     /** Paths used by tenant administrators. */\n     tenantInfo(Matcher.tenant,\n-               PathPrefix.api,\n                \"/application/v4/tenant/{tenant}/application/\",\n                \"/application/v4/tenant/{tenant}/info/\",\n                \"/routing/v1/status/tenant/{tenant}/{*}\"),\n \n     tenantKeys(Matcher.tenant,\n-               PathPrefix.api,\n                \"/application/v4/tenant/{tenant}/key/\"),\n \n     tenantArchiveAccess(Matcher.tenant,\n-                       PathPrefix.api,\n                        \"/application/v4/tenant/{tenant}/archive-access\"),\n \n     billingToken(Matcher.tenant,\n-                 PathPrefix.api,\n                  \"/billing/v1/tenant/{tenant}/token\"),\n \n     billingInstrument(Matcher.tenant,\n-                      PathPrefix.api,\n                       \"/billing/v1/tenant/{tenant}/instrument/{*}\"),\n \n     billingPlan(Matcher.tenant,\n-            PathPrefix.api,\n             \"/billing/v1/tenant/{tenant}/plan/{*}\"),\n \n     billingCollection(Matcher.tenant,\n-            PathPrefix.api,\n             \"/billing/v1/tenant/{tenant}/collection/{*}\"),\n \n     billingList(Matcher.tenant,\n-                PathPrefix.api,\n                 \"/billing/v1/tenant/{tenant}/billing/{*}\"),\n \n     applicationKeys(Matcher.tenant,\n                     Matcher.application,\n-                    PathPrefix.api,\n                     \"/application/v4/tenant/{tenant}/application/{application}/key/\"),\n \n     /** Path for the base application resource. */\n     application(Matcher.tenant,\n                 Matcher.application,\n-                PathPrefix.api,\n                 \"/application/v4/tenant/{tenant}/application/{application}\",\n                 \"/application/v4/tenant/{tenant}/application/{application}/instance/\",\n                 \"/application/v4/tenant/{tenant}/application/{application}/instance/{ignored}\"),\n \n     /** Paths used for user management on the application level. */\n     applicationUsers(Matcher.tenant,\n                      Matcher.application,\n-                     PathPrefix.api,\n                      \"/user/v1/tenant/{tenant}/application/{application}\"),\n \n     /** Paths used by application administrators. */\n     applicationInfo(Matcher.tenant,\n                     Matcher.application,\n-                    PathPrefix.api,\n                     \"/application/v4/tenant/{tenant}/application/{application}/package\",\n                     \"/application/v4/tenant/{tenant}/application/{application}/compile-version\",\n                     \"/application/v4/tenant/{tenant}/application/{application}/deployment\",\n@@ -142,7 +124,6 @@\n     developmentRestart(Matcher.tenant,\n                        Matcher.application,\n                        Matcher.instance,\n-                       PathPrefix.api,\n                        \"/application/v4/tenant/{tenant}/application/{application}/instance/{instance}/environment/dev/region/{region}/restart\",\n                        \"/application/v4/tenant/{tenant}/application/{application}/instance/{instance}/environment/perf/region/{region}/restart\",\n                        \"/application/v4/tenant/{tenant}/application/{application}/environment/dev/region/{region}/instance/{instance}/restart\",\n@@ -152,7 +133,6 @@\n     /** Path used to restart production nodes. */\n     productionRestart(Matcher.tenant,\n                       Matcher.application,\n-                      PathPrefix.api,\n                       \"/application/v4/tenant/{tenant}/application/{application}/instance/{ignored}/environment/prod/region/{region}/restart\",\n                       \"/application/v4/tenant/{tenant}/application/{application}/instance/{ignored}/environment/test/region/{region}/restart\",\n                       \"/application/v4/tenant/{tenant}/application/{application}/instance/{ignored}/environment/staging/region/{region}/restart\",\n@@ -163,15 +143,13 @@\n     /** Path used to manipulate reindexing status. */\n     reindexing(Matcher.tenant,\n                Matcher.application,\n-               PathPrefix.api,\n                \"/application/v4/tenant/{tenant}/application/{application}/instance/{ignored}/environment/{environment}/region/{region}/reindex\",\n                \"/application/v4/tenant/{tenant}/application/{application}/instance/{ignored}/environment/{environment}/region/{region}/reindexing\"),\n \n     /** Paths used for development deployments. */\n     developmentDeployment(Matcher.tenant,\n                           Matcher.application,\n                           Matcher.instance,\n-                          PathPrefix.api,\n                           \"/application/v4/tenant/{tenant}/application/{application}/instance/{instance}/deploy/{job}\",\n                           \"/application/v4/tenant/{tenant}/application/{application}/instance/{instance}/environment/dev/region/{region}\",\n                           \"/application/v4/tenant/{tenant}/application/{application}/instance/{instance}/environment/dev/region/{region}/deploy\",\n@@ -188,7 +166,6 @@\n     /** Paths used for production deployments. */\n     productionDeployment(Matcher.tenant,\n                          Matcher.application,\n-                         PathPrefix.api,\n                          \"/application/v4/tenant/{tenant}/application/{application}/instance/{ignored}/environment/prod/region/{region}\",\n                          \"/application/v4/tenant/{tenant}/application/{application}/instance/{ignored}/environment/prod/region/{region}/deploy\",\n                          \"/application/v4/tenant/{tenant}/application/{application}/instance/{ignored}/environment/test/region/{region}\",\n@@ -205,84 +182,76 @@\n     /** Paths used for continuous deployment to production. */\n     submission(Matcher.tenant,\n                Matcher.application,\n-               PathPrefix.api,\n                \"/application/v4/tenant/{tenant}/application/{application}/submit\",\n                \"/application/v4/tenant/{tenant}/application/{application}/instance/{ignored}/submit\"),\n \n     /** Paths used for other tasks by build services. */ // TODO: This will vanish.\n     buildService(Matcher.tenant,\n                  Matcher.application,\n-                 PathPrefix.api,\n                  \"/application/v4/tenant/{tenant}/application/{application}/jobreport\",\n                  \"/application/v4/tenant/{tenant}/application/{application}/instance/{ignored}/jobreport\"),\n \n     /** Paths which contain (not very strictly) classified information about customers. */\n-    classifiedTenantInfo(PathPrefix.api,\n-                         \"/application/v4/\",\n+    classifiedTenantInfo(\"/application/v4/\",\n                          \"/application/v4/tenant/\"),\n \n     /** Paths which contain (not very strictly) classified information about, e.g., customers. */\n-    classifiedInfo(PathPrefix.none,\n-                   \"/\",\n+    classifiedInfo(\"/\",\n                    \"/d/{*}\"),\n \n     /** Paths providing public information. */\n-    publicInfo(PathPrefix.api,\n-               \"/user/v1/user\",     // Information about who you are.\n+    publicInfo(\"/user/v1/user\",     // Information about who you are.\n                \"/badge/v1/{*}\",     // Badges for deployment jobs.\n                \"/zone/v1/{*}\"),     // Lists environment and regions.\n \n     /** Paths used for deploying system-wide feature flags. */\n-    systemFlagsDeploy(PathPrefix.none, \"/system-flags/v1/deploy\"),\n+    systemFlagsDeploy(\"/system-flags/v1/deploy\"),\n \n \n     /** Paths used for \"dry-running\" system-wide feature flags. */\n-    systemFlagsDryrun(PathPrefix.none, \"/system-flags/v1/dryrun\"),\n+    systemFlagsDryrun(\"/system-flags/v1/dryrun\"),\n \n     /** Paths used for receiving payment callbacks */\n-    paymentProcessor(PathPrefix.none, \"/payment/notification\"),\n+    paymentProcessor(\"/payment/notification\"),\n \n     /** Paths used for invoice management */\n-    hostedAccountant(PathPrefix.api,\n-            \"/billing/v1/invoice/{*}\",\n-            \"/billing/v1/billing\"),\n+    hostedAccountant(\"/billing/v1/invoice/{*}\",\n+                     \"/billing/v1/billing\"),\n \n     /** Path used for listing endpoint certificate request info */\n-    endpointCertificateRequestInfo(PathPrefix.none, \"/certificateRequests/\"),\n+    endpointCertificateRequestInfo(\"/certificateRequests/\"),\n \n     /** Path used for secret store management */\n-    secretStore(Matcher.tenant, PathPrefix.api, \"/application/v4/tenant/{tenant}/secret-store/{*}\");\n+    secretStore(Matcher.tenant, \"/application/v4/tenant/{tenant}/secret-store/{*}\");\n \n     final List<String> pathSpecs;\n-    final PathPrefix prefix;\n     final List<Matcher> matchers;\n \n-    PathGroup(PathPrefix prefix, String... pathSpecs) {\n-        this(List.of(), prefix, List.of(pathSpecs));\n+    PathGroup(String... pathSpecs) {\n+        this(List.of(), List.of(pathSpecs));\n     }\n \n-    PathGroup(Matcher first, PathPrefix prefix, String... pathSpecs) {\n-        this(List.of(first), prefix, List.of(pathSpecs));\n+    PathGroup(Matcher first, String... pathSpecs) {\n+        this(List.of(first), List.of(pathSpecs));\n     }\n \n-    PathGroup(Matcher first, Matcher second, PathPrefix prefix, String... pathSpecs) {\n-        this(List.of(first, second), prefix, List.of(pathSpecs));\n+    PathGroup(Matcher first, Matcher second, String... pathSpecs) {\n+        this(List.of(first, second), List.of(pathSpecs));\n     }\n \n-    PathGroup(Matcher first, Matcher second, Matcher third, PathPrefix prefix, String... pathSpecs) {\n-        this(List.of(first, second, third), prefix, List.of(pathSpecs));\n+    PathGroup(Matcher first, Matcher second, Matcher third, String... pathSpecs) {\n+        this(List.of(first, second, third), List.of(pathSpecs));\n     }\n \n     /** Creates a new path group, if the given context matchers are each present exactly once in each of the given specs. */\n-    PathGroup(List<Matcher> matchers, PathPrefix prefix, List<String> pathSpecs) {\n+    PathGroup(List<Matcher> matchers, List<String> pathSpecs) {\n         this.matchers = matchers;\n-        this.prefix = prefix;\n         this.pathSpecs = pathSpecs;\n     }\n \n     /** Returns path if it matches any spec in this group, with match groups set by the match. */\n     private Optional<Path> get(URI uri) {\n-        Path matcher = new Path(uri, prefix.prefix);\n+        Path matcher = new Path(uri);\n         for (String spec : pathSpecs) // Iterate to be sure the Path's state is that of the match.\n             if (matcher.matches(spec)) return Optional.of(matcher);\n         return Optional.empty();\n@@ -355,21 +324,4 @@ boolean matches(URI uri, Context context) {\n \n     }\n \n-    /**\n-     * The valid prefixes of paths in a {@link PathGroup}. Provides flexibility in cases where paths are made available\n-     * under a non-root path.\n-     */\n-    enum PathPrefix {\n-\n-        none(\"\"),\n-        api(\"/api\");\n-\n-        private final String prefix;\n-\n-        PathPrefix(String prefix) {\n-            this.prefix = Objects.requireNonNull(prefix);\n-        }\n-\n-    }\n-\n }"
  },
  {
    "sha": "ca080078328326716f371115d7fb2f47f8e77db8",
    "filename": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/application/ApplicationApiHandler.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -154,8 +154,6 @@\n \n     private static final ObjectMapper jsonMapper = new ObjectMapper();\n \n-    private static final String OPTIONAL_PREFIX = \"/api\";\n-\n     private final Controller controller;\n     private final AccessControlRequests accessControlRequests;\n     private final TestConfigSerializer testConfigSerializer;\n@@ -178,7 +176,7 @@ public Duration getTimeout() {\n     @Override\n     public HttpResponse handle(HttpRequest request) {\n         try {\n-            Path path = new Path(request.getUri(), OPTIONAL_PREFIX);\n+            Path path = new Path(request.getUri());\n             switch (request.getMethod()) {\n                 case GET: return handleGET(path, request);\n                 case PUT: return handlePUT(path, request);"
  },
  {
    "sha": "26c4bf6292a0925434b777a36db6c42b1f7462d9",
    "filename": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/athenz/AthenzApiHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/athenz/AthenzApiHandler.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/athenz/AthenzApiHandler.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/athenz/AthenzApiHandler.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -37,7 +37,6 @@\n public class AthenzApiHandler extends LoggingRequestHandler {\n \n     private final static Logger log = Logger.getLogger(AthenzApiHandler.class.getName());\n-    private static final String OPTIONAL_PREFIX = \"/api\";\n \n     private final AthenzFacade athenz;\n     private final AthenzDomain sandboxDomain;\n@@ -70,7 +69,7 @@ public HttpResponse handle(HttpRequest request) {\n     }\n \n     private HttpResponse get(HttpRequest request) {\n-        Path path = new Path(request.getUri(), OPTIONAL_PREFIX);\n+        Path path = new Path(request.getUri());\n         if (path.matches(\"/athenz/v1\")) return root(request);\n         if (path.matches(\"/athenz/v1/domains\")) return domainList(request);\n         if (path.matches(\"/athenz/v1/properties\")) return properties();\n@@ -80,7 +79,7 @@ private HttpResponse get(HttpRequest request) {\n     }\n \n     private HttpResponse post(HttpRequest request) {\n-        Path path = new Path(request.getUri(), OPTIONAL_PREFIX);\n+        Path path = new Path(request.getUri());\n         if (path.matches(\"/athenz/v1/user\")) return signup(request);\n         return ErrorResponse.notFoundError(String.format(\"No '%s' handler at '%s'\", request.getMethod(),\n                                                          request.getUri().getPath()));"
  },
  {
    "sha": "c56c2e93f650c1a23e32522d46ca6b27114b7e5d",
    "filename": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/billing/BillingApiHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/billing/BillingApiHandler.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/billing/BillingApiHandler.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/billing/BillingApiHandler.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -5,7 +5,6 @@\n import com.yahoo.container.jdisc.HttpRequest;\n import com.yahoo.container.jdisc.HttpResponse;\n import com.yahoo.container.jdisc.LoggingRequestHandler;\n-import com.yahoo.container.logging.AccessLog;\n import com.yahoo.restapi.ErrorResponse;\n import com.yahoo.restapi.JacksonJsonResponse;\n import com.yahoo.restapi.MessageResponse;\n@@ -55,7 +54,6 @@\n  */\n public class BillingApiHandler extends LoggingRequestHandler {\n \n-    private static final String OPTIONAL_PREFIX = \"/api\";\n     private static final DateTimeFormatter DATE_TIME_FORMATTER = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");\n \n     private final BillingController billingController;\n@@ -73,7 +71,7 @@ public BillingApiHandler(Executor executor,\n     @Override\n     public HttpResponse handle(HttpRequest request) {\n         try {\n-            Path path = new Path(request.getUri(), OPTIONAL_PREFIX);\n+            Path path = new Path(request.getUri());\n             String userId = userIdOrThrow(request);\n             switch (request.getMethod()) {\n                 case GET:"
  },
  {
    "sha": "1bb3b1c5de8f6a5f7cc47af7ce0f03ca24e29119",
    "filename": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/configserver/ConfigServerApiHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/configserver/ConfigServerApiHandler.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/configserver/ConfigServerApiHandler.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/configserver/ConfigServerApiHandler.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -33,7 +33,6 @@\n \n     private static final ZoneId CONTROLLER_ZONE = ZoneId.from(\"prod\", \"controller\");\n     private static final URI CONTROLLER_URI = URI.create(\"https://localhost:4443/\");\n-    private static final String OPTIONAL_PREFIX = \"/api\";\n     private static final List<String> WHITELISTED_APIS = List.of(\"/flags/v1/\", \"/nodes/v2/\", \"/orchestrator/v1/\");\n \n     private final ZoneRegistry zoneRegistry;\n@@ -70,15 +69,15 @@ public HttpResponse auditAndHandle(HttpRequest request) {\n     }\n \n     private HttpResponse get(HttpRequest request) {\n-        Path path = new Path(request.getUri(), OPTIONAL_PREFIX);\n+        Path path = new Path(request.getUri());\n         if (path.matches(\"/configserver/v1\")) {\n             return root(request);\n         }\n         return proxy(request);\n     }\n \n     private HttpResponse proxy(HttpRequest request) {\n-        Path path = new Path(request.getUri(), OPTIONAL_PREFIX);\n+        Path path = new Path(request.getUri());\n         if ( ! path.matches(\"/configserver/v1/{environment}/{region}/{*}\")) {\n             return ErrorResponse.notFoundError(\"Nothing at \" + path);\n         }"
  },
  {
    "sha": "552e22e9a2cc2431fde19df8f25634bf7f34452c",
    "filename": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/deployment/DeploymentApiHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/deployment/DeploymentApiHandler.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/deployment/DeploymentApiHandler.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/deployment/DeploymentApiHandler.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -49,8 +49,6 @@\n @SuppressWarnings(\"unused\") // Injected\n public class DeploymentApiHandler extends LoggingRequestHandler {\n \n-    private static final String OPTIONAL_PREFIX = \"/api\";\n-\n     private final Controller controller;\n \n     public DeploymentApiHandler(LoggingRequestHandler.Context parentCtx, Controller controller) {\n@@ -77,7 +75,7 @@ public HttpResponse handle(HttpRequest request) {\n     }\n \n     private HttpResponse handleGET(HttpRequest request) {\n-        Path path = new Path(request.getUri(), OPTIONAL_PREFIX);\n+        Path path = new Path(request.getUri());\n         if (path.matches(\"/deployment/v1/\")) return root(request);\n         return ErrorResponse.notFoundError(\"Nothing at \" + path);\n     }"
  },
  {
    "sha": "828e7e634832fde0b1326b525bb5e6a10bd662a9",
    "filename": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/routing/RoutingApiHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/routing/RoutingApiHandler.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/routing/RoutingApiHandler.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/routing/RoutingApiHandler.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -42,7 +42,6 @@\n  */\n public class RoutingApiHandler extends AuditLoggingRequestHandler {\n \n-    private static final String OPTIONAL_PREFIX = \"/api\";\n     private final Controller controller;\n \n     public RoutingApiHandler(Context ctx, Controller controller) {\n@@ -53,7 +52,7 @@ public RoutingApiHandler(Context ctx, Controller controller) {\n     @Override\n     public HttpResponse auditAndHandle(HttpRequest request) {\n         try {\n-            var path = new Path(request.getUri(), OPTIONAL_PREFIX);\n+            var path = new Path(request.getUri());\n             switch (request.getMethod()) {\n                 case GET: return get(path, request);\n                 case POST: return post(path);"
  },
  {
    "sha": "039e9b64df735388f6545603b10c176dada9ef3e",
    "filename": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiHandler.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiHandler.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiHandler.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -64,7 +64,6 @@\n public class UserApiHandler extends LoggingRequestHandler {\n \n     private final static Logger log = Logger.getLogger(UserApiHandler.class.getName());\n-    private static final String optionalPrefix = \"/api\";\n \n     private final UserManagement users;\n     private final Controller controller;\n@@ -83,7 +82,7 @@ public UserApiHandler(Context parentCtx, UserManagement users, Controller contro\n     @Override\n     public HttpResponse handle(HttpRequest request) {\n         try {\n-            Path path = new Path(request.getUri(), optionalPrefix);\n+            Path path = new Path(request.getUri());\n             switch (request.getMethod()) {\n                 case GET: return handleGET(path, request);\n                 case POST: return handlePOST(path, request);"
  },
  {
    "sha": "fd6dfa61180a0a3f74e01d506497023787576d59",
    "filename": "controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/zone/v1/ZoneApiHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/zone/v1/ZoneApiHandler.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/zone/v1/ZoneApiHandler.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/main/java/com/yahoo/vespa/hosted/controller/restapi/zone/v1/ZoneApiHandler.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -29,8 +29,6 @@\n @SuppressWarnings(\"unused\")\n public class ZoneApiHandler extends LoggingRequestHandler {\n \n-    private static final String OPTIONAL_PREFIX = \"/api\";\n-\n     private final ZoneRegistry zoneRegistry;\n \n     public ZoneApiHandler(LoggingRequestHandler.Context parentCtx, ServiceRegistry serviceRegistry) {\n@@ -57,7 +55,7 @@ public HttpResponse handle(HttpRequest request) {\n     }\n \n     private HttpResponse get(HttpRequest request) {\n-        Path path = new Path(request.getUri(), OPTIONAL_PREFIX);\n+        Path path = new Path(request.getUri());\n         if (path.matches(\"/zone/v1\")) {\n             return root(request);\n         }"
  },
  {
    "sha": "538e98c4c83bf7e6aa2b851cb161f0e5e2328256",
    "filename": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/ControllerContainerCloudTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/ControllerContainerCloudTest.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/ControllerContainerCloudTest.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/ControllerContainerCloudTest.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -36,14 +36,11 @@ protected String variablePartXml() {\n \n                \"  <handler id='com.yahoo.vespa.hosted.controller.restapi.application.ApplicationApiHandler'>\\n\" +\n                \"    <binding>http://*/application/v4/*</binding>\\n\" +\n-               \"    <binding>http://*/api/application/v4/*</binding>\\n\" +\n                \"  </handler>\\n\" +\n \n                \"  <handler id='com.yahoo.vespa.hosted.controller.restapi.zone.v1.ZoneApiHandler'>\\n\" +\n                \"    <binding>http://*/zone/v1</binding>\\n\" +\n                \"    <binding>http://*/zone/v1/*</binding>\\n\" +\n-               \"    <binding>http://*/api/zone/v1</binding>\\n\" +\n-               \"    <binding>http://*/api/zone/v1/*</binding>\\n\" +\n                \"  </handler>\\n\" +\n \n                \"  <http>\\n\" +"
  },
  {
    "sha": "e92c229d4bc9ec540eb80add1487aac57bf1be8d",
    "filename": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/ControllerContainerTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/ControllerContainerTest.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/ControllerContainerTest.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/ControllerContainerTest.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -75,7 +75,6 @@ private String controllerServicesXml() {\n                \"  <component id='com.yahoo.vespa.hosted.controller.api.integration.stubs.MockUserManagement'/>\\n\" +\n                \"  <handler id='com.yahoo.vespa.hosted.controller.restapi.deployment.DeploymentApiHandler'>\\n\" +\n                \"    <binding>http://*/deployment/v1/*</binding>\\n\" +\n-               \"    <binding>http://*/api/deployment/v1/*</binding>\\n\" +\n                \"  </handler>\\n\" +\n                \"  <handler id='com.yahoo.vespa.hosted.controller.restapi.deployment.BadgeApiHandler'>\\n\" +\n                \"    <binding>http://*/badge/v1/*</binding>\\n\" +\n@@ -93,20 +92,16 @@ private String controllerServicesXml() {\n                \"  <handler id='com.yahoo.vespa.hosted.controller.restapi.configserver.ConfigServerApiHandler'>\\n\" +\n                \"    <binding>http://*/configserver/v1</binding>\\n\" +\n                \"    <binding>http://*/configserver/v1/*</binding>\\n\" +\n-               \"    <binding>http://*/api/configserver/v1</binding>\\n\" +\n-               \"    <binding>http://*/api/configserver/v1/*</binding>\\n\" +\n                \"  </handler>\\n\" +\n                \"  <handler id='com.yahoo.vespa.hosted.controller.restapi.flags.AuditedFlagsHandler'>\\n\" +\n                \"    <binding>http://*/flags/v1</binding>\\n\" +\n                \"    <binding>http://*/flags/v1/*</binding>\\n\" +\n                \"  </handler>\\n\" +\n                \"  <handler id='com.yahoo.vespa.hosted.controller.restapi.user.UserApiHandler'>\\n\" +\n                \"    <binding>http://*/user/v1/*</binding>\\n\" +\n-               \"    <binding>http://*/api/user/v1/*</binding>\\n\" +\n                \"  </handler>\\n\" +\n                \"  <handler id='com.yahoo.vespa.hosted.controller.restapi.routing.RoutingApiHandler'>\\n\" +\n                \"    <binding>http://*/routing/v1/*</binding>\\n\" +\n-               \"    <binding>http://*/api/routing/v1/*</binding>\\n\" +\n                \"  </handler>\\n\" +\n                \"  <handler id='com.yahoo.vespa.hosted.controller.restapi.changemanagement.ChangeManagementApiHandler'>\\n\" +\n                \"    <binding>http://*/changemanagement/v1/*</binding>\\n\" +\n@@ -128,7 +123,6 @@ protected String variablePartXml() {\n                \"  </handler>\\n\" +\n                \"  <handler id='com.yahoo.vespa.hosted.controller.restapi.athenz.AthenzApiHandler'>\\n\" +\n                \"    <binding>http://*/athenz/v1/*</binding>\\n\" +\n-               \"    <binding>http://*/api/athenz/v1/*</binding>\\n\" +\n                \"  </handler>\\n\" +\n                \"  <handler id='com.yahoo.vespa.hosted.controller.restapi.zone.v1.ZoneApiHandler'>\\n\" +\n                \"    <binding>http://*/zone/v1</binding>\\n\" +"
  },
  {
    "sha": "bf67e06db21b3ed7fccdb1571c861a9f3fbf7da5",
    "filename": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/athenz/AthenzApiTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/athenz/AthenzApiTest.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/athenz/AthenzApiTest.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/athenz/AthenzApiTest.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -49,7 +49,7 @@ public void testAthenzApi() {\n                               new File(\"property-list.json\"));\n \n         // POST user signup\n-        tester.assertResponse(authenticatedRequest(\"http://localhost:8080/api/athenz/v1/user\", \"\", Request.Method.POST),\n+        tester.assertResponse(authenticatedRequest(\"http://localhost:8080/athenz/v1/user\", \"\", Request.Method.POST),\n                               \"{\\\"message\\\":\\\"User 'bob' added to admin role of 'vespa.vespa.tenants.sandbox'\\\"}\");\n     }\n "
  },
  {
    "sha": "519c3f56976414890045354c07835729cdcd4ce2",
    "filename": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/configserver/ConfigServerApiHandlerTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/configserver/ConfigServerApiHandlerTest.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/configserver/ConfigServerApiHandlerTest.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/configserver/ConfigServerApiHandlerTest.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -66,7 +66,7 @@ public void test_requests() {\n         assertLastRequest(\"https://cfg.prod.us-north-1.test.vip:4443/\", \"PUT\");\n \n         // DELETE /configserver/v1/prod/us-north-1/nodes/v2/node/node1\n-        tester.assertResponse(operatorRequest(\"http://localhost:8080/api/configserver/v1/prod/controller/nodes/v2/node/node1\",\n+        tester.assertResponse(operatorRequest(\"http://localhost:8080/configserver/v1/prod/controller/nodes/v2/node/node1\",\n                 \"\", Request.Method.DELETE), \"ok\");\n         assertLastRequest(\"https://localhost:4443/\", \"DELETE\");\n "
  },
  {
    "sha": "3d07b5d51d4a26404a30a74d2a216bf11ba39e56",
    "filename": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/deployment/DeploymentApiTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/deployment/DeploymentApiTest.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/deployment/DeploymentApiTest.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/deployment/DeploymentApiTest.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -74,7 +74,6 @@ public void testDeploymentApi() {\n \n         tester.controller().updateVersionStatus(censorConfigServers(VersionStatus.compute(tester.controller())));\n         tester.assertResponse(operatorRequest(\"http://localhost:8080/deployment/v1/\"), new File(\"root.json\"));\n-        tester.assertResponse(operatorRequest(\"http://localhost:8080/api/deployment/v1/\"), new File(\"root.json\"));\n     }\n \n     private VersionStatus censorConfigServers(VersionStatus versionStatus) {"
  },
  {
    "sha": "b1bd7df059caf4f4dbde336fb352f2f534e0f748",
    "filename": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/routing/RoutingApiTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/routing/RoutingApiTest.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/routing/RoutingApiTest.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/routing/RoutingApiTest.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -77,12 +77,6 @@ public void discovery() {\n         tester.assertResponse(operatorRequest(\"http://localhost:8080/routing/v1/status/environment/\", \"\",\n                                               Request.Method.GET),\n                               new File(\"discovery/environment.json\"));\n-\n-        // GET instance with api prefix (test that the /api prefix works)\n-        tester.assertResponse(authenticatedRequest(\"http://localhost:8080/api/routing/v1/status/tenant/t1/application/a1/instance/default/\",\n-                \"\",\n-                Request.Method.GET),\n-                new File(\"discovery/instance_api.json\"));\n     }\n \n     @Test"
  },
  {
    "sha": "a9e789d9fe9cadd3817b0ed0703940acbb3ecde9",
    "filename": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/routing/responses/discovery/instance_api.json",
    "status": "removed",
    "additions": 0,
    "deletions": 10,
    "changes": 10,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/eb345d955d47577f300170cbf5d4850f9b75893d/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/routing/responses/discovery/instance_api.json",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/eb345d955d47577f300170cbf5d4850f9b75893d/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/routing/responses/discovery/instance_api.json",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/routing/responses/discovery/instance_api.json?ref=eb345d955d47577f300170cbf5d4850f9b75893d",
    "patch": "@@ -1,10 +0,0 @@\n-{\n-  \"resources\": [\n-    {\n-      \"url\": \"http://localhost:8080/api/routing/v1/status/tenant/t1/application/a1/instance/default/environment/prod/region/us-east-3/\"\n-    },\n-    {\n-      \"url\": \"http://localhost:8080/api/routing/v1/status/tenant/t1/application/a1/instance/default/environment/prod/region/us-west-1/\"\n-    }\n-  ]\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "acd481030e26a1e2ed88169826eb9e7049a3e11e",
    "filename": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiOnPremTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiOnPremTest.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiOnPremTest.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiOnPremTest.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -62,7 +62,7 @@ public void userMetadataOnPremTest() {\n     }\n \n     private Request createUserRequest(User user, AthenzIdentity identity) {\n-        Request request = new Request(\"http://localhost:8080/api/user/v1/user\");\n+        Request request = new Request(\"http://localhost:8080/user/v1/user\");\n         Map<String, String> userAttributes = new HashMap<>();\n         userAttributes.put(\"email\", user.email());\n         if (user.name() != null)"
  },
  {
    "sha": "1ad705be0b74f368d31b75c777f7c4b43f67ff52",
    "filename": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 14,
    "changes": 18,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiTest.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiTest.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/user/UserApiTest.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -57,11 +57,6 @@ public void testUserManagement() {\n                                       .roles(operator),\n                               \"[]\");\n \n-        // GET at application/v4/tenant is available also under the /api prefix.\n-        tester.assertResponse(request(\"/api/application/v4/tenant\")\n-                                      .roles(operator),\n-                              \"[]\");\n-\n         // POST a tenant is not available to everyone.\n         tester.assertResponse(request(\"/application/v4/tenant/my-tenant\", POST)\n                                       .data(\"{\\\"token\\\":\\\"hello\\\"}\"),\n@@ -129,11 +124,6 @@ public void testUserManagement() {\n                                       .roles(Set.of(Role.administrator(id.tenant()))),\n                               new File(\"application-roles.json\"));\n \n-        // GET application role information is available also under the /api prefix.\n-        tester.assertResponse(request(\"/api/user/v1/tenant/my-tenant/application/my-app\")\n-                                      .roles(Set.of(Role.administrator(id.tenant()))),\n-                              new File(\"application-roles.json\"));\n-\n         // POST a pem deploy key\n         tester.assertResponse(request(\"/application/v4/tenant/my-tenant/application/my-app/key\", POST)\n                                       .roles(Set.of(Role.developer(id.tenant())))\n@@ -223,7 +213,7 @@ public void userMetadataTest() {\n         Set<Role> operator = Set.of(Role.hostedOperator(), Role.hostedSupporter(), Role.hostedAccountant());\n         User user = new User(\"dev@domail\", \"Joe Developer\", \"dev\", null);\n \n-        tester.assertResponse(request(\"/api/user/v1/user\")\n+        tester.assertResponse(request(\"/user/v1/user\")\n                         .roles(operator)\n                         .user(user),\n                 new File(\"user-without-applications.json\"));\n@@ -246,13 +236,13 @@ public void userMetadataTest() {\n         controller.createApplication(\"sandbox\", \"app2\", \"dev\");\n \n         // Should still be empty because none of the roles explicitly refer to any of the applications\n-        tester.assertResponse(request(\"/api/user/v1/user\")\n+        tester.assertResponse(request(\"/user/v1/user\")\n                         .roles(operator)\n                         .user(user),\n                 new File(\"user-without-applications.json\"));\n \n         // Empty applications because tenant dummy does not exist\n-        tester.assertResponse(request(\"/api/user/v1/user\")\n+        tester.assertResponse(request(\"/user/v1/user\")\n                         .roles(Set.of(Role.administrator(TenantName.from(\"tenant1\")),\n                                 Role.developer(TenantName.from(\"tenant2\")),\n                                 Role.developer(TenantName.from(\"sandbox\")),\n@@ -274,7 +264,7 @@ public void maxTrialTenants() {\n         controller.createTenant(\"tenant1\", Tenant.Type.cloud);\n \n         tester.assertResponse(\n-                request(\"/api/user/v1/user\").user(user),\n+                request(\"/user/v1/user\").user(user),\n                 new File(\"user-without-trial-capacity-cloud.json\"));\n     }\n }"
  },
  {
    "sha": "a8845fa92a3e158fdda69412867e49f2e4f55def",
    "filename": "controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/zone/v1/ZoneApiTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/vespa-engine/vespa/blob/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/zone/v1/ZoneApiTest.java",
    "raw_url": "https://github.com/vespa-engine/vespa/raw/ce66c156bfad8d01fb471d0e6bdf2189c4914055/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/zone/v1/ZoneApiTest.java",
    "contents_url": "https://api.github.com/repos/vespa-engine/vespa/contents/controller-server/src/test/java/com/yahoo/vespa/hosted/controller/restapi/zone/v1/ZoneApiTest.java?ref=ce66c156bfad8d01fb471d0e6bdf2189c4914055",
    "patch": "@@ -52,7 +52,7 @@ public void test_requests() {\n                                                 new File(\"prod.json\"));\n \n         // GET /zone/v1/environment/dev/default\n-        tester.assertResponse(request(\"/api/zone/v1/environment/dev/default\")\n+        tester.assertResponse(request(\"/zone/v1/environment/dev/default\")\n                                                         .roles(everyone),\n                                                 new File(\"default-for-region.json\"));\n     }"
  }
]
