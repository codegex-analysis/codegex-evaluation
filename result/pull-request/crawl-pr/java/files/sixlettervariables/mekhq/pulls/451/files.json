[
  {
    "sha": "32556b12c19ea5b5b308e2ad48d88fa4c56ecec0",
    "filename": "MekHQ/docs/history.txt",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/docs/history.txt",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/docs/history.txt",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/docs/history.txt?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -17,6 +17,8 @@ VERSION HISTORY:\n + PR #2473: Better GM unit restore\n + PR #2475: Use the correct resource string for free C3i Nodes on TOE\n + Issue #2456: Incorrect Financial Export Date, Two Force Icon NPEs, Unit Market NPE\n++ Issue #2469: Fixing Award Log Edit NPEs\n++ Issue MegaMek/megamek#2597: Use MM's new UnitNameTracker for name collisions\n \n 0.48.0 (Stable) - (2021-03-05 1530 UT\n + Issue #2427: Exception during maintenance on a new day breaks MekHQ"
  },
  {
    "sha": "e7dc00dfc5af4a965e1b43ea3b99d54e8a27dbed",
    "filename": "MekHQ/resources/mekhq/resources/AddOrEditPersonnelEntryDialog.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/3c49c7917f33adfea9942677fc459b46872a531a/MekHQ/resources/mekhq/resources/AddOrEditPersonnelEntryDialog.properties",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/3c49c7917f33adfea9942677fc459b46872a531a/MekHQ/resources/mekhq/resources/AddOrEditPersonnelEntryDialog.properties",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/resources/mekhq/resources/AddOrEditPersonnelEntryDialog.properties?ref=3c49c7917f33adfea9942677fc459b46872a531a",
    "patch": "@@ -1,4 +0,0 @@\n-dialogAdd.title=Add Log Entry\n-dialogEdit.title=Edit Log Entry\n-btnOkay.text=Done\n-btnCancel.text=Cancel"
  },
  {
    "sha": "0db226195144deb30c6c3f76549230ef6604b444",
    "filename": "MekHQ/resources/mekhq/resources/GUI.properties",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/resources/mekhq/resources/GUI.properties",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/resources/mekhq/resources/GUI.properties",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/resources/mekhq/resources/GUI.properties?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -17,3 +17,11 @@ Ok.toolTipText=Confirm the changes and close the dialog.\n Purchase.text=Purchase\n Remove.text=Remove\n RestoreDefaults.text=Restore Defaults\n+\n+\n+\n+#### Dialog\n+### AddOrEditPersonnelEntryDialog Class\n+AddOrEditPersonnelEntryDialog.AddEntry.title=Add Log Entry\n+AddOrEditPersonnelEntryDialog.EditEntry.title=Edit Log Entry\n+txtDescription.title=Description"
  },
  {
    "sha": "6bc6f978bbb7d0cc450c29c60e7702298b90c97f",
    "filename": "MekHQ/src/mekhq/MHQStaticDirectoryManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/MHQStaticDirectoryManager.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/MHQStaticDirectoryManager.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/MHQStaticDirectoryManager.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -26,7 +26,6 @@\n import megamek.common.util.fileUtils.ImageFileFactory;\n import mekhq.campaign.force.Force;\n import mekhq.gui.enums.LayeredForceIcon;\n-import mekhq.io.AwardFileFactory;\n \n import java.awt.*;\n import java.awt.image.BufferedImage;\n@@ -92,7 +91,7 @@ private static void initializeAwardIcons() {\n             parseAwardIconDirectory = false;\n             try {\n                 awardIconDirectory = new DirectoryItems(new File(\"data/images/awards\"),\n-                        \"\", new AwardFileFactory());\n+                        \"\", new ImageFileFactory());\n             } catch (Exception e) {\n                 MegaMek.getLogger().error(\"Could not parse the award icon directory!\", e);\n             }"
  },
  {
    "sha": "0143fc99c15ce383e276ee8b2d5d3e86b85013e7",
    "filename": "MekHQ/src/mekhq/campaign/Campaign.java",
    "status": "modified",
    "additions": 10,
    "deletions": 31,
    "changes": 41,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/Campaign.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/Campaign.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/campaign/Campaign.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -183,7 +183,7 @@\n     private TreeMap<Integer, Scenario> scenarios = new TreeMap<>();\n     private Map<UUID, List<Kill>> kills = new HashMap<>();\n \n-    private Map<String, Integer> duplicateNameHash = new HashMap<>();\n+    private final UnitNameTracker unitNameTracker = new UnitNameTracker();\n \n     private int astechPool;\n     private int astechPoolMinutes;\n@@ -5558,42 +5558,21 @@ public boolean isCustom(Unit u) {\n     /**\n      * borrowed from megamek.client\n      */\n-    private void checkDuplicateNamesDuringAdd(Entity entity) {\n-        if (duplicateNameHash.get(entity.getShortName()) == null) {\n-            duplicateNameHash.put(entity.getShortName(), 1);\n-        } else {\n-            int count = duplicateNameHash.get(entity.getShortName());\n-            count++;\n-            duplicateNameHash.put(entity.getShortName(), count);\n-            entity.duplicateMarker = count;\n-            entity.generateShortName();\n-            entity.generateDisplayName();\n-        }\n+    private synchronized void checkDuplicateNamesDuringAdd(Entity entity) {\n+        unitNameTracker.add(entity);\n     }\n \n     /**\n-     * If we remove a unit, we may need to update the duplicate identifier. TODO: This function is super slow :(\n+     * If we remove a unit, we may need to update the duplicate identifier.\n      *\n      * @param entity This is the entity whose name is checked for any duplicates\n      */\n-    private void checkDuplicateNamesDuringDelete(Entity entity) {\n-        Integer o = duplicateNameHash.get(entity.getShortNameRaw());\n-        if (o != null) {\n-            int count = o;\n-            if (count > 1) {\n-                for (Unit u : getUnits()) {\n-                    Entity e = u.getEntity();\n-                    if (e.getShortNameRaw().equals(entity.getShortNameRaw()) && (e.duplicateMarker > entity.duplicateMarker)) {\n-                        e.duplicateMarker--;\n-                        e.generateShortName();\n-                        e.generateDisplayName();\n-                    }\n-                }\n-                duplicateNameHash.put(entity.getShortNameRaw(), count - 1);\n-            } else {\n-                duplicateNameHash.remove(entity.getShortNameRaw());\n-            }\n-        }\n+    private synchronized void checkDuplicateNamesDuringDelete(Entity entity) {\n+        unitNameTracker.remove(entity, e -> {\n+            // Regenerate entity names after a deletion\n+            e.generateShortName();\n+            e.generateDisplayName();\n+        });\n     }\n \n     public String getUnitRatingText() {"
  },
  {
    "sha": "100693b8b117f5d88c8c43a33a58102c95075829",
    "filename": "MekHQ/src/mekhq/campaign/GamePreset.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/GamePreset.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/GamePreset.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/campaign/GamePreset.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -190,8 +190,7 @@ public static GamePreset createGamePresetFromXMLFileInputStream(FileInputStream\n \n         // Legacy Parsing method for any presets created before 0.47.11, as they did not include a version\n         final String versionString = optionsEle.getAttribute(\"version\");\n-        // TODO : Java 11 : Move to isBlank\n-        Version version = new Version(versionString.trim().isEmpty() ? \"0.47.11\" : versionString);\n+        Version version = new Version(versionString.isBlank() ? \"0.47.11\" : versionString);\n \n         // Okay, lets iterate through the children, eh?\n         for (int x = 0; x < nl.getLength(); x++) {"
  },
  {
    "sha": "39191f5e959b550e09273313722d5c109876177c",
    "filename": "MekHQ/src/mekhq/campaign/finances/Currency.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/finances/Currency.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/finances/Currency.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/campaign/finances/Currency.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -62,8 +62,8 @@ public Currency(\n                 Character.isUpperCase(code.charAt(2));\n         assert numericCurrencyCode >= -1 && numericCurrencyCode <= 999;\n         assert decimalPlaces >=0 && decimalPlaces <=30;\n-        assert name != null && !name.trim().isEmpty();\n-        assert symbol != null && !symbol.trim().isEmpty();\n+        assert name != null && !name.isBlank();\n+        assert symbol != null && !symbol.isBlank();\n         assert startYear <= endYear;\n \n         this.wrapped = CurrencyUnit.registerCurrency(code, numericCurrencyCode, decimalPlaces, true);"
  },
  {
    "sha": "dd8e5e866f1d8ce12d7f1784813b29d9524f25e1",
    "filename": "MekHQ/src/mekhq/campaign/log/AwardLogEntry.java",
    "status": "modified",
    "additions": 8,
    "deletions": 4,
    "changes": 12,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/log/AwardLogEntry.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/log/AwardLogEntry.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/campaign/log/AwardLogEntry.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -18,6 +18,7 @@\n  */\n package mekhq.campaign.log;\n \n+import megamek.common.annotations.Nullable;\n import mekhq.campaign.personnel.Award;\n import mekhq.campaign.personnel.Person;\n \n@@ -33,9 +34,12 @@ public AwardLogEntry(LocalDate date, String desc) {\n     }\n \n     @Override\n-    public void onLogEntryEdited(LocalDate originalDate, LocalDate newDate, String originalDesc,\n-                                 String newDesc, Person person) {\n-        Award award = AwardLogger.getAwardFromLogEntry(person, originalDesc);\n-        award.replaceDate(originalDate, newDate);\n+    public void onLogEntryEdited(final LocalDate originalDate, final LocalDate newDate,\n+                                 final String originalDesc, final String newDesc,\n+                                 final @Nullable Person person) {\n+        final Award award = AwardLogger.getAwardFromLogEntry(person, originalDesc);\n+        if (award != null) {\n+            award.replaceDate(originalDate, newDate);\n+        }\n     }\n }"
  },
  {
    "sha": "cedfa1b3e64e874efc361646dd3a5b069e77033b",
    "filename": "MekHQ/src/mekhq/campaign/log/AwardLogger.java",
    "status": "modified",
    "additions": 8,
    "deletions": 3,
    "changes": 11,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/log/AwardLogger.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/log/AwardLogger.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/campaign/log/AwardLogger.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -18,6 +18,7 @@\n  */\n package mekhq.campaign.log;\n \n+import megamek.common.annotations.Nullable;\n import megamek.common.util.EncodeControl;\n import mekhq.campaign.personnel.Award;\n import mekhq.campaign.personnel.Person;\n@@ -51,8 +52,12 @@ public static void removedAward(Person person, LocalDate date, Award award) {\n      * @param logEntryText text of the log entry\n      * @return award of the owner corresponding to the log entry text\n      */\n-    public static Award getAwardFromLogEntry(Person person, String logEntryText) {\n-        String message = logEntriesResourceMap.getString(\"awarded.text\");\n+    public static @Nullable Award getAwardFromLogEntry(final @Nullable Person person, final String logEntryText) {\n+        if (person == null) {\n+            return null;\n+        }\n+\n+        final String message = logEntriesResourceMap.getString(\"awarded.text\");\n         Pattern pattern = Pattern.compile(MessageFormat.format(message, \"(.*)\", \"(.*)\", \"(.*)\"));\n         Matcher matcher = pattern.matcher(logEntryText);\n \n@@ -62,7 +67,7 @@ public static Award getAwardFromLogEntry(Person person, String logEntryText) {\n             award = person.getAwardController().getAward(matcher.group(2), matcher.group(1));\n         } else {\n             // In a first implementation, the award Set was not included in the log, so it is impossible to distinguish\n-            //  awards with same name but in different set. So it assumes it is the first it finds, using the old message format.\n+            // awards with same name but in different set. So it assumes it is the first it finds, using the old message format.\n             pattern = Pattern.compile(\"Awarded (.*): (.*)\");\n             matcher = pattern.matcher(logEntryText);\n             if (matcher.matches()) {"
  },
  {
    "sha": "4f0bc7bb3f58596ec5d9036dbebf4a4cd675376b",
    "filename": "MekHQ/src/mekhq/campaign/mission/BotForce.java",
    "status": "modified",
    "additions": 29,
    "deletions": 4,
    "changes": 33,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/mission/BotForce.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/mission/BotForce.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/campaign/mission/BotForce.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -21,6 +21,7 @@\n import java.io.PrintWriter;\n import java.io.Serializable;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Objects;\n import java.util.stream.Collectors;\n@@ -38,13 +39,15 @@\n import megamek.common.Board;\n import megamek.common.Compute;\n import megamek.common.Entity;\n+import megamek.common.UnitNameTracker;\n import mekhq.MekHQ;\n import mekhq.MekHqXmlSerializable;\n import mekhq.MekHqXmlUtil;\n \n public class BotForce implements Serializable, MekHqXmlSerializable {\n     private static final long serialVersionUID = 8259058549964342518L;\n \n+    private final UnitNameTracker nameTracker = new UnitNameTracker();\n     private String name;\n     private List<Entity> entityList;\n     private int team;\n@@ -77,7 +80,7 @@ public BotForce(String name, int team, int start, int home, List<Entity> entityL\n         this.team = team;\n         this.start = start;\n         // Filter all nulls out of the parameter entityList\n-        this.entityList = entityList.stream().filter(Objects::nonNull).collect(Collectors.toCollection(ArrayList::new));\n+        setEntityList(entityList);\n         this.camoCategory = camoCategory;\n         this.camoFileName = camoFileName;\n         this.colour = colour;\n@@ -125,12 +128,34 @@ public void setName(String name) {\n     }\n \n     public List<Entity> getEntityList() {\n-        return entityList;\n+        return Collections.unmodifiableList(entityList);\n+    }\n+\n+    public boolean removeEntity(int index) {\n+        Entity e = null;\n+        if ((index >= 0) && (index < entityList.size())) {\n+            e = entityList.remove(index);\n+            nameTracker.remove(e, updated -> {\n+                updated.generateShortName();\n+                updated.generateDisplayName();\n+            });\n+        }\n+\n+        return e != null;\n     }\n \n     public void setEntityList(List<Entity> entityList) {\n-        // Filter all nulls out of the parameter entityList\n-        this.entityList = entityList.stream().filter(Objects::nonNull).collect(Collectors.toCollection(ArrayList::new));\n+        nameTracker.clear();\n+\n+        List<Entity> entities = new ArrayList<>();\n+        for (Entity e : entityList) {\n+            if (e != null) {\n+                nameTracker.add(e);\n+                entities.add(e);\n+            }\n+        }\n+\n+        this.entityList = entities;\n     }\n \n     public int getTeam() {"
  },
  {
    "sha": "191b32214d102b97517fcdf995e9e304de2e3d1e",
    "filename": "MekHQ/src/mekhq/campaign/mission/atb/AtBScenarioModifierApplicator.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/mission/atb/AtBScenarioModifierApplicator.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/mission/atb/AtBScenarioModifierApplicator.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/campaign/mission/atb/AtBScenarioModifierApplicator.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -120,7 +120,7 @@ public static void removeUnits(AtBDynamicScenario scenario, Campaign campaign, F\n             BotForce bf = scenario.getBotForce(botForceIndex);\n             if (bf.getTeam() == ScenarioForceTemplate.TEAM_IDS.get(eventRecipient.ordinal())) {\n                 int unitIndexToRemove = Compute.randomInt(bf.getEntityList().size());\n-                bf.getEntityList().remove(unitIndexToRemove);\n+                bf.removeEntity(unitIndexToRemove);\n             }\n         }\n     }"
  },
  {
    "sha": "204ca7494fd631216b3987807c5dff9c16160dc2",
    "filename": "MekHQ/src/mekhq/campaign/personnel/generator/RandomPortraitGenerator.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/personnel/generator/RandomPortraitGenerator.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/personnel/generator/RandomPortraitGenerator.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/campaign/personnel/generator/RandomPortraitGenerator.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -80,8 +80,7 @@ public static AbstractIcon generate(Collection<Person> personnel, Person p) {\n                 searchCat_RoleGroup = \"Medical\";\n             }\n \n-            // TODO : Java 11 : Swap to isBlank\n-            if (!searchCat_RoleGroup.trim().isEmpty()) {\n+            if (!searchCat_RoleGroup.isBlank()) {\n                 searchFile = new File(genderFile, searchCat_RoleGroup);\n                 possiblePortraits = getPossibleRandomPortraits(existingPortraits, searchFile);\n             }"
  },
  {
    "sha": "c0452e099b4aefa41191e7d8a0e433fc968fb012",
    "filename": "MekHQ/src/mekhq/campaign/unit/Unit.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/unit/Unit.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/campaign/unit/Unit.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/campaign/unit/Unit.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -265,7 +265,9 @@ public void setEntity(Entity en) {\n         //one gets some of the same things set\n         if (null != this.entity) {\n             en.setId(this.entity.getId());\n-            en.duplicateMarker = this.entity.duplicateMarker;\n+            en.setDuplicateMarker(this.entity.getDuplicateMarker());\n+            en.generateShortName();\n+            en.generateDisplayName();\n         }\n         this.entity = en;\n     }"
  },
  {
    "sha": "78c443d57e6e596e69ef67271be8419de28ccc60",
    "filename": "MekHQ/src/mekhq/gui/adapter/PersonnelTableMouseAdapter.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/gui/adapter/PersonnelTableMouseAdapter.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/gui/adapter/PersonnelTableMouseAdapter.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/gui/adapter/PersonnelTableMouseAdapter.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -946,13 +946,11 @@ public void actionPerformed(ActionEvent action) {\n                 break;\n             }\n             case CMD_ADD_LOG_ENTRY: {\n-                AddOrEditPersonnelEntryDialog addPersonnelLogDialog = new AddOrEditPersonnelEntryDialog(\n-                        gui.getFrame(), true, gui.getCampaign().getLocalDate());\n-                addPersonnelLogDialog.setVisible(true);\n-                Optional<LogEntry> personnelEntry = addPersonnelLogDialog.getEntry();\n-                if (personnelEntry.isPresent()) {\n+                final AddOrEditPersonnelEntryDialog addPersonnelLogDialog = new AddOrEditPersonnelEntryDialog(\n+                        gui.getFrame(), null, gui.getCampaign().getLocalDate());\n+                if (addPersonnelLogDialog.showDialog().isConfirmed()) {\n                     for (Person person : people) {\n-                        person.addLogEntry(personnelEntry.get().clone());\n+                        person.addLogEntry(addPersonnelLogDialog.getEntry().clone());\n                         MekHQ.triggerEvent(new PersonLogEvent(selectedPerson));\n                     }\n                 }"
  },
  {
    "sha": "b9e940eea3221052dc0c1ba3084346f16b4cfbc6",
    "filename": "MekHQ/src/mekhq/gui/control/EditPersonnelLogControl.java",
    "status": "modified",
    "additions": 7,
    "deletions": 9,
    "changes": 16,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/gui/control/EditPersonnelLogControl.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/gui/control/EditPersonnelLogControl.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/gui/control/EditPersonnelLogControl.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -107,19 +107,17 @@ private void logTableValueChanged(javax.swing.event.ListSelectionEvent evt) {\n     }\n \n     private void addEntry() {\n-        AddOrEditPersonnelEntryDialog dialog = new AddOrEditPersonnelEntryDialog(parent, true, campaign.getLocalDate());\n-        dialog.setVisible(true);\n-        if (dialog.getEntry().isPresent()) {\n-            person.addLogEntry(dialog.getEntry().get());\n+        final AddOrEditPersonnelEntryDialog dialog = new AddOrEditPersonnelEntryDialog(parent, person, campaign.getLocalDate());\n+        if (dialog.showDialog().isConfirmed()) {\n+            person.addLogEntry(dialog.getEntry());\n+            refreshTable();\n         }\n-        refreshTable();\n     }\n \n     private void editEntry() {\n-        LogEntry entry = logModel.getEntry(logsTable.getSelectedRow());\n-        if (null != entry) {\n-            AddOrEditPersonnelEntryDialog dialog = new AddOrEditPersonnelEntryDialog(parent, true, entry);\n-            dialog.setVisible(true);\n+        final LogEntry entry = logModel.getEntry(logsTable.getSelectedRow());\n+        if (entry != null) {\n+            new AddOrEditPersonnelEntryDialog(parent, person, entry).showDialog();\n             refreshTable();\n         }\n     }"
  },
  {
    "sha": "a6954cf33287dc0e5f28df7310a8d3d5a227cfa0",
    "filename": "MekHQ/src/mekhq/gui/dialog/AddOrEditPersonnelEntryDialog.java",
    "status": "modified",
    "additions": 95,
    "deletions": 128,
    "changes": 223,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/gui/dialog/AddOrEditPersonnelEntryDialog.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/gui/dialog/AddOrEditPersonnelEntryDialog.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/gui/dialog/AddOrEditPersonnelEntryDialog.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -1,7 +1,6 @@\n /*\n- * AddOrEditPersonnelEntryDialog.java\n- *\n- * Copyright (c) 2009 - Jay Lawson <jaylawson39 at yahoo.com>. All rights reserved.\n+ * Copyright (c) 2009 - Jay Lawson <jaylawson39 at yahoo.com>. All Rights Reserved.\n+ * Copyright (c) 2021 - The MegaMek Team. All Rights Reserved.\n  *\n  * This file is part of MekHQ.\n  *\n@@ -20,170 +19,138 @@\n  */\n package mekhq.gui.dialog;\n \n-import java.awt.BorderLayout;\n-import java.awt.Dimension;\n-import java.awt.GridBagLayout;\n-import java.awt.GridLayout;\n+import java.awt.*;\n import java.time.LocalDate;\n-import java.util.Optional;\n-import java.util.ResourceBundle;\n \n import javax.swing.*;\n \n-import megamek.common.util.EncodeControl;\n+import megamek.common.annotations.Nullable;\n import mekhq.MekHQ;\n import mekhq.campaign.log.LogEntry;\n import mekhq.campaign.log.PersonalLogEntry;\n-import megamek.client.ui.preferences.JWindowPreference;\n-import megamek.client.ui.preferences.PreferencesNode;\n+import mekhq.campaign.personnel.Person;\n+import mekhq.gui.baseComponents.AbstractMHQButtonDialog;\n \n /**\n  * @author  Taharqa\n  */\n-public class AddOrEditPersonnelEntryDialog extends javax.swing.JDialog {\n+public class AddOrEditPersonnelEntryDialog extends AbstractMHQButtonDialog {\n+    //region Variable Declarations\n \tprivate static final long serialVersionUID = -8038099101234445018L;\n     private static final int ADD_OPERATION = 1;\n     private static final int EDIT_OPERATION = 2;\n \n-    private JFrame frame;\n-    private int operationType;\n-    private LogEntry entry;\n+    private final Person person;\n+    private final LogEntry entry;\n     private LocalDate date;\n-    private LocalDate originalDate;\n-    private String originalDescription;\n-\n-    private javax.swing.JButton btnClose;\n-    private javax.swing.JButton btnOK;\n-    private javax.swing.JTextArea txtDesc;\n-    private javax.swing.JButton btnDate;\n-    private javax.swing.JPanel panBtn;\n-    private javax.swing.JPanel panMain;\n-\n-    public AddOrEditPersonnelEntryDialog(JFrame parent, boolean modal, LocalDate entryDate) {\n-        this(parent, modal, ADD_OPERATION, new PersonalLogEntry(entryDate, \"\"));\n-    }\n \n-    public AddOrEditPersonnelEntryDialog(JFrame parent, boolean modal, LogEntry entry) {\n-        this(parent, modal, EDIT_OPERATION, entry);\n+    private JTextArea txtDescription;\n+    private JButton btnDate;\n+    //endregion Variable Declarations\n+\n+    //region Constructors\n+    public AddOrEditPersonnelEntryDialog(final JFrame parent, final @Nullable Person person,\n+                                         final LocalDate entryDate) {\n+        this(parent, ADD_OPERATION, person, new PersonalLogEntry(entryDate, \"\"));\n     }\n \n-    private AddOrEditPersonnelEntryDialog(JFrame parent, boolean modal, int operationType, LogEntry entry) {\n-        super(parent, modal);\n+    public AddOrEditPersonnelEntryDialog(final JFrame parent, final @Nullable Person person,\n+                                         final LogEntry entry) {\n+        this(parent, EDIT_OPERATION, person, entry);\n+    }\n \n+    private AddOrEditPersonnelEntryDialog(final JFrame parent, final int operationType,\n+                                          final @Nullable Person person, final LogEntry entry) {\n+        super(parent, \"AddOrEditPersonnelEntryDialog\", (operationType == ADD_OPERATION)\n+                ? \"AddOrEditPersonnelEntryDialog.AddEntry.title\" : \"AddOrEditPersonnelEntryDialog.EditEntry.title\");\n         assert entry != null;\n \n-        this.frame = parent;\n-        this.operationType = operationType;\n+        this.person = person;\n         this.entry = entry;\n \n-        this.date = this.entry.getDate();\n-        this.originalDate = this.entry.getDate();\n-        this.originalDescription = this.entry.getDesc();\n+        setDate(entry.getDate());\n \n-        initComponents();\n-        setLocationRelativeTo(parent);\n-        setUserPreferences();\n+        initialize();\n     }\n+    //endregion Constructors\n \n-    public Optional<LogEntry> getEntry() {\n-        return Optional.ofNullable(entry);\n+    //region Getters/Setters\n+    public @Nullable Person getPerson() {\n+        return person;\n     }\n \n-    private void initComponents() {\n-        ResourceBundle resourceMap = ResourceBundle.getBundle(\"mekhq.resources.AddOrEditPersonnelEntryDialog\", new EncodeControl());\n-    \tjava.awt.GridBagConstraints gridBagConstraints;\n-\n-        panMain = new javax.swing.JPanel();\n-        btnDate = new javax.swing.JButton();\n-        txtDesc = new javax.swing.JTextArea();\n-\n-        panBtn = new javax.swing.JPanel();\n-        btnOK = new javax.swing.JButton();\n-        btnClose = new javax.swing.JButton();\n-\n-        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n-        setName(\"Form\"); // NOI18N\n-        if (this.operationType == ADD_OPERATION) {\n-            setTitle(resourceMap.getString(\"dialogAdd.title\"));\n-        } else {\n-            setTitle(resourceMap.getString(\"dialogEdit.title\"));\n-        }\n-        getContentPane().setLayout(new BorderLayout());\n-        panBtn.setLayout(new GridLayout(0,2));\n-        panMain.setLayout(new GridBagLayout());\n-\n-        btnDate = new javax.swing.JButton();\n-        btnDate.setText(MekHQ.getMekHQOptions().getDisplayFormattedDate(date));\n-        btnDate.addActionListener(evt -> changeDate());\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 0;\n-        gridBagConstraints.weightx = 1.0;\n-        gridBagConstraints.weighty = 0.0;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);\n-        panMain.add(btnDate, gridBagConstraints);\n-\n-        txtDesc.setText(entry.getDesc());\n-        txtDesc.setName(\"txtDesc\");\n-        txtDesc.setEditable(true);\n-        txtDesc.setLineWrap(true);\n-        txtDesc.setWrapStyleWord(true);\n-        txtDesc.setBorder(BorderFactory.createCompoundBorder(\n-\t   \t\t\t BorderFactory.createTitledBorder(\"Description\"),\n-\t   \t\t\t BorderFactory.createEmptyBorder(5,5,5,5)));\n-        txtDesc.setPreferredSize(new Dimension(250,75));\n-        txtDesc.setMinimumSize(new Dimension(250,75));\n-        gridBagConstraints = new java.awt.GridBagConstraints();\n-        gridBagConstraints.gridx = 0;\n-        gridBagConstraints.gridy = 1;\n-        gridBagConstraints.weightx = 1.0;\n-        gridBagConstraints.weighty = 1.0;\n-        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n-        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;\n-        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);\n-        panMain.add(txtDesc, gridBagConstraints);\n-\n-        btnOK.setText(resourceMap.getString(\"btnOkay.text\")); // NOI18N\n-        btnOK.setName(\"btnOK\"); // NOI18N\n-        btnOK.addActionListener(this::btnOKActionPerformed);\n-        panBtn.add(btnOK);\n-\n-        btnClose.setText(resourceMap.getString(\"btnCancel.text\")); // NOI18N\n-        btnClose.setName(\"btnClose\"); // NOI18N\n-        btnClose.addActionListener(this::btnCloseActionPerformed);\n-        panBtn.add(btnClose);\n-\n-        getContentPane().add(panMain, BorderLayout.CENTER);\n-        getContentPane().add(panBtn, BorderLayout.PAGE_END);\n-        pack();\n+    public LogEntry getEntry() {\n+        return entry;\n     }\n \n-    private void setUserPreferences() {\n-        PreferencesNode preferences = MekHQ.getPreferences().forClass(AddOrEditPersonnelEntryDialog.class);\n-\n-        this.setName(\"dialog\");\n-        preferences.manage(new JWindowPreference(this));\n+    public LocalDate getDate() {\n+        return date;\n     }\n \n-    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {\n-    \tentry.setDate(date);\n-    \tentry.setDesc(txtDesc.getText());\n-    \tentry.onLogEntryEdited(originalDate, date, originalDescription, txtDesc.getText(), null);\n-    \tthis.setVisible(false);\n+    public void setDate(final LocalDate date) {\n+        this.date = date;\n     }\n+    //endregion Getters/Setters\n+\n+    //region Initialization\n+    @Override\n+    protected Container createCenterPane() {\n+        // Create Panel Components\n+        btnDate = new JButton(MekHQ.getMekHQOptions().getDisplayFormattedDate(getDate()));\n+        btnDate.setName(\"btnDate\");\n+        btnDate.addActionListener(evt -> changeDate());\n \n-    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {\n-    \tentry = null;\n-    \tthis.setVisible(false);\n+        txtDescription = new JTextArea(getEntry().getDesc());\n+        txtDescription.setBorder(BorderFactory.createCompoundBorder(\n+                BorderFactory.createTitledBorder(resources.getString(\"txtDescription.title\")),\n+                BorderFactory.createEmptyBorder(5,5,5,5)));\n+        txtDescription.setName(\"txtDescription\");\n+        txtDescription.setMinimumSize(new Dimension(250,75));\n+        txtDescription.setPreferredSize(new Dimension(250,75));\n+        txtDescription.setEditable(true);\n+        txtDescription.setLineWrap(true);\n+        txtDescription.setWrapStyleWord(true);\n+\n+        // Layout the UI\n+        JPanel panel = new JPanel();\n+        panel.setName(\"entryPanel\");\n+        GroupLayout layout = new GroupLayout(panel);\n+        panel.setLayout(layout);\n+\n+        layout.setAutoCreateGaps(true);\n+        layout.setAutoCreateContainerGaps(true);\n+\n+        layout.setVerticalGroup(\n+                layout.createSequentialGroup()\n+                        .addComponent(btnDate)\n+                        .addComponent(txtDescription)\n+        );\n+\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(GroupLayout.Alignment.LEADING)\n+                        .addComponent(btnDate)\n+                        .addComponent(txtDescription)\n+        );\n+\n+        return panel;\n+    }\n+    //endregion Initialization\n+\n+    @Override\n+    protected void okAction() {\n+        final LocalDate originalDate = getEntry().getDate();\n+        final String originalDescription = getEntry().getDesc();\n+        getEntry().setDate(getDate());\n+        getEntry().setDesc(txtDescription.getText());\n+        getEntry().onLogEntryEdited(originalDate, getDate(), originalDescription,\n+                txtDescription.getText(), getPerson());\n     }\n \n     private void changeDate() {\n-        DateChooser dc = new DateChooser(frame, date);\n+        DateChooser dc = new DateChooser(getFrame(), getDate());\n         if (dc.showDateChooser() == DateChooser.OK_OPTION) {\n-            date = dc.getDate();\n-            btnDate.setText(MekHQ.getMekHQOptions().getDisplayFormattedDate(date));\n+            setDate(dc.getDate());\n+            btnDate.setText(MekHQ.getMekHQOptions().getDisplayFormattedDate(getDate()));\n         }\n     }\n }"
  },
  {
    "sha": "313c678f52d155d68984ff01eaa7dafbcc120cf1",
    "filename": "MekHQ/src/mekhq/gui/dialog/ScenarioTemplateEditorDialog.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/gui/dialog/ScenarioTemplateEditorDialog.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/src/mekhq/gui/dialog/ScenarioTemplateEditorDialog.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/gui/dialog/ScenarioTemplateEditorDialog.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -1253,8 +1253,8 @@ private String validateAddForce() {\n             valBuilder.append(\"Force needs to be synced or have explicit deployment zones\");\n         }\n \n-        if(txtForceName.getText().trim().isEmpty()) {\n-            if(valBuilder.length() > 0) {\n+        if (txtForceName.getText().isBlank()) {\n+            if (valBuilder.length() > 0) {\n                 valBuilder.append(\"\\n\");\n             }\n "
  },
  {
    "sha": "c293eaf12436f23364bfc6271937e7031f038627",
    "filename": "MekHQ/src/mekhq/io/AwardFileFactory.java",
    "status": "removed",
    "additions": 0,
    "deletions": 63,
    "changes": 63,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/3c49c7917f33adfea9942677fc459b46872a531a/MekHQ/src/mekhq/io/AwardFileFactory.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/3c49c7917f33adfea9942677fc459b46872a531a/MekHQ/src/mekhq/io/AwardFileFactory.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/src/mekhq/io/AwardFileFactory.java?ref=3c49c7917f33adfea9942677fc459b46872a531a",
    "patch": "@@ -1,63 +0,0 @@\n-/*\n- * Copyright (c) 2020 - The MegaMek Team. All Rights Reserved.\n- *\n- * This file is part of MekHQ.\n- *\n- * MekHQ is free software: you can redistribute it and/or modify\n- * it under the terms of the GNU General Public License as published by\n- * the Free Software Foundation, either version 3 of the License, or\n- * (at your option) any later version.\n- *\n- * MekHQ is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU General Public License for more details.\n- *\n- * You should have received a copy of the GNU General Public License\n- * along with MekHQ. If not, see <http://www.gnu.org/licenses/>.\n- */\n-package mekhq.io;\n-\n-import megamek.common.util.fileUtils.ImageFileFactory;\n-import megamek.common.util.fileUtils.ItemFile;\n-\n-import javax.imageio.ImageIO;\n-import java.io.File;\n-import java.io.IOException;\n-import java.util.Objects;\n-\n-/**\n- * TODO : Java 11: Ensure I am still required and cannot be replaced with ImageFileFactory\n- */\n-public class AwardFileFactory extends ImageFileFactory {\n-    //region Constructors\n-    public AwardFileFactory() {\n-        super();\n-    }\n-    //endregion Constructors\n-\n-    /**\n-     * Get the <code>ItemFile</code> for the given <code>File</code>.\n-     *\n-     * @param file The input <code>File</code> object that will be read to produce the item.\n-     *             This value must not be <code>null</code>.\n-     * @return an <code>ItemFile</code> for the given file.\n-     */\n-    @Override\n-    public ItemFile getItemFile(final File file) {\n-        // Validate the input.\n-        Objects.requireNonNull(file, \"A null image file was passed\");\n-\n-        // Construct an anonymous class that gets an Image for the file.\n-        return new ItemFile() {\n-            @Override\n-            public Object getItem() throws IOException {\n-                // Cache the image on first use.\n-                if (isNullOrEmpty()) {\n-                    item = ImageIO.read(file.getAbsoluteFile());\n-                }\n-                return item;\n-            }\n-        };\n-    }\n-}"
  },
  {
    "sha": "390fe8ab881e5a2f0db1dfa040a0f1b10da14c08",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/AmmoStorageTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/AmmoStorageTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/AmmoStorageTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/AmmoStorageTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -397,7 +397,7 @@ public void ammoStorageWriteToXmlTest() throws ParserConfigurationException, SAX\n \n         // Get the AmmoStorage XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -436,7 +436,7 @@ public void ammoStorageBombWriteToXmlTest() throws ParserConfigurationException,\n \n         // Get the AmmoStorage XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();"
  },
  {
    "sha": "9d3481c0fe8dd1cb35c1d74389ced6e7b3225585",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/InfantryAmmoStorageTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/InfantryAmmoStorageTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/InfantryAmmoStorageTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/InfantryAmmoStorageTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -119,7 +119,7 @@ public void infantryAmmoStorageWriteToXmlTest() throws ParserConfigurationExcept\n \n         // Get the AmmoStorage XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();"
  },
  {
    "sha": "b8146d6b4379bf8968f615814411bbd39280d08f",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/RefitTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/RefitTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/RefitTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/RefitTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -223,7 +223,7 @@ public void testLocust1Vto1EWriteToXml() throws ParserConfigurationException, SA\n \n         // Get the Refit XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -425,7 +425,7 @@ public void testJavelinJVN10Nto10AWriteToXml() throws ParserConfigurationExcepti\n \n         // Get the Refit XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -654,7 +654,7 @@ public void testFleaFLE4toFLE15WriteToXml() throws ParserConfigurationException,\n \n         // Get the Refit XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();"
  },
  {
    "sha": "260c8b92c906f65c94465c0c0ee38bacce8f32db",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/equipment/AmmoBinTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/AmmoBinTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/AmmoBinTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/equipment/AmmoBinTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -434,7 +434,7 @@ public void ammoBinWriteToXmlTest() throws ParserConfigurationException, SAXExce\n \n         // Get the AmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -474,7 +474,7 @@ public void oneShotAmmoBinWriteToXmlTest() throws ParserConfigurationException,\n \n         // Get the AmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -515,7 +515,7 @@ public void fullAmmoBinWriteToXmlTest() throws ParserConfigurationException, SAX\n \n         // Get the AmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -555,7 +555,7 @@ public void emptyAmmoBinWriteToXmlTest() throws ParserConfigurationException, SA\n \n         // Get the AmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -641,7 +641,7 @@ public void changeMunitionSerializationTest() throws ParserConfigurationExceptio\n \n         // Get the AmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();"
  },
  {
    "sha": "bb7120df7b19fc74259824c7eaa50cb6a857c5fb",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/equipment/BattleArmorAmmoBinTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/BattleArmorAmmoBinTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/BattleArmorAmmoBinTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/equipment/BattleArmorAmmoBinTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -122,7 +122,7 @@ public void battleArmorAmmoBinWriteToXmlTest() throws ParserConfigurationExcepti\n \n         // Get the BattleArmorAmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -162,7 +162,7 @@ public void oneShotBattleArmorAmmoBinWriteToXmlTest() throws ParserConfiguration\n \n         // Get the BattleArmorAmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -203,7 +203,7 @@ public void fullBattleArmorAmmoBinWriteToXmlTest() throws ParserConfigurationExc\n \n         // Get the BattleArmorAmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -243,7 +243,7 @@ public void emptyBattleArmorAmmoBinWriteToXmlTest() throws ParserConfigurationEx\n \n         // Get the BattleArmorAmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();"
  },
  {
    "sha": "8c5bb589de3610eebce78fb17823d03400aa78c9",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/equipment/EquipmentPartTest.java",
    "status": "modified",
    "additions": 18,
    "deletions": 18,
    "changes": 36,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/EquipmentPartTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/EquipmentPartTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/equipment/EquipmentPartTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -81,9 +81,9 @@ public void equipmentPartCtorTest() {\n         boolean isOmniPodded = false;\n         EquipmentType type = mock(EquipmentType.class);\n         doReturn(equipTonnage).when(type).getTonnage(any(), eq(size));\n-        \n+\n         EquipmentPart equipmentPart = new EquipmentPart(tonnage, type, equipmentNum, size, isOmniPodded, mockCampaign);\n-        \n+\n         assertEquals(tonnage, equipmentPart.getUnitTonnage());\n         assertEquals(type, equipmentPart.getType());\n         assertEquals(equipmentNum, equipmentPart.getEquipmentNum());\n@@ -94,7 +94,7 @@ public void equipmentPartCtorTest() {\n \n         isOmniPodded = true;\n         equipmentPart = new EquipmentPart(tonnage, type, equipmentNum, size, isOmniPodded, mockCampaign);\n-        \n+\n         assertEquals(tonnage, equipmentPart.getUnitTonnage());\n         assertEquals(type, equipmentPart.getType());\n         assertEquals(equipmentNum, equipmentPart.getEquipmentNum());\n@@ -103,7 +103,7 @@ public void equipmentPartCtorTest() {\n         assertEquals(equipTonnage, equipmentPart.getTonnage(), 0.001);\n         assertEquals(mockCampaign, equipmentPart.getCampaign());\n     }\n-    \n+\n     @Test\n     public void cloneTest() {\n         Campaign mockCampaign = mock(Campaign.class);\n@@ -115,9 +115,9 @@ public void cloneTest() {\n         boolean isOmniPodded = false;\n         EquipmentType type = mock(EquipmentType.class);\n         doReturn(equipTonnage).when(type).getTonnage(any(), eq(size));\n-        \n+\n         EquipmentPart equipmentPart = new EquipmentPart(tonnage, type, equipmentNum, size, isOmniPodded, mockCampaign);\n-        \n+\n         EquipmentPart clone = equipmentPart.clone();\n \n         assertEquals(equipmentPart.getUnitTonnage(), clone.getUnitTonnage());\n@@ -132,7 +132,7 @@ public void cloneTest() {\n         equipmentPart = new EquipmentPart(tonnage, type, equipmentNum, size, isOmniPodded, mockCampaign);\n \n         clone = equipmentPart.clone();\n-        \n+\n         assertEquals(equipmentPart.getUnitTonnage(), clone.getUnitTonnage());\n         assertEquals(equipmentPart.getType(), clone.getType());\n         assertEquals(equipmentPart.getEquipmentNum(), clone.getEquipmentNum());\n@@ -153,7 +153,7 @@ public void getMissingPartTest() {\n         boolean isOmniPodded = false;\n         EquipmentType type = mock(EquipmentType.class);\n         doReturn(equipTonnage).when(type).getTonnage(any(), eq(size));\n-        \n+\n         EquipmentPart equipmentPart = new EquipmentPart(tonnage, type, equipmentNum, size, isOmniPodded, mockCampaign);\n \n         MissingEquipmentPart missingPart = equipmentPart.getMissingPart();\n@@ -207,7 +207,7 @@ public void isPartForEquipmentTest() {\n         assertFalse(equipmentPart.isPartForEquipmentNum(equipmentNum, Aero.LOC_RWING));\n         assertFalse(equipmentPart.isPartForEquipmentNum(equipmentNum - 1, location));\n     }\n-    \n+\n     @Test\n     public void isOmniPoddableTest() {\n         Campaign mockCampaign = mock(Campaign.class);\n@@ -418,7 +418,7 @@ public void isInLocationTest() {\n         int location = Mech.LOC_RT;\n         when(mounted.getLocation()).thenReturn(location);\n         doReturn(mounted).when(entity).getEquipment(eq(equipmentNum));\n-        \n+\n         doReturn(location).when(entity).getLocationFromAbbr(eq(locationName));\n \n         // Our location should match up\n@@ -489,7 +489,7 @@ public void equipmentPartWriteToXmlTest() throws ParserConfigurationException, S\n \n         // Get the EquipmentPart XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -515,7 +515,7 @@ public void equipmentPartWriteToXmlTest() throws ParserConfigurationException, S\n         assertEquals(equipmentPart.getSize(), deserialized.getSize(), 0.001);\n         assertEquals(equipmentPart.getTonnage(), deserialized.getTonnage(), 0.001);\n     }\n-    \n+\n     @Test\n     public void removeTest() {\n         Campaign mockCampaign = mock(Campaign.class);\n@@ -567,7 +567,7 @@ public void removeTest() {\n \n         verify(unit, times(1)).destroySystem(eq(CriticalSlot.TYPE_EQUIPMENT), eq(equipmentNum));\n         verify(unit, times(1)).removePart(eq(equipmentPart));\n-        \n+\n         ArgumentCaptor<Part> missingPartCaptor = ArgumentCaptor.forClass(Part.class);\n         verify(unit, times(1)).addPart(missingPartCaptor.capture());\n \n@@ -580,7 +580,7 @@ public void removeTest() {\n         assertEquals(unit, missingEquipmentPart.getUnit());\n         assertTrue(warehouse.getParts().contains(missingEquipmentPart));\n     }\n-    \n+\n     @Test\n     public void salvageTest() {\n         Campaign mockCampaign = mock(Campaign.class);\n@@ -632,7 +632,7 @@ public void salvageTest() {\n \n         verify(unit, times(1)).destroySystem(eq(CriticalSlot.TYPE_EQUIPMENT), eq(equipmentNum));\n         verify(unit, times(1)).removePart(eq(equipmentPart));\n-        \n+\n         ArgumentCaptor<Part> missingPartCaptor = ArgumentCaptor.forClass(Part.class);\n         verify(unit, times(1)).addPart(missingPartCaptor.capture());\n \n@@ -645,7 +645,7 @@ public void salvageTest() {\n         assertEquals(unit, missingEquipmentPart.getUnit());\n         assertTrue(warehouse.getParts().contains(missingEquipmentPart));\n     }\n-    \n+\n     @Test\n     public void needsFixingTest() {\n         Campaign mockCampaign = mock(Campaign.class);\n@@ -655,7 +655,7 @@ public void needsFixingTest() {\n         doReturn(1.0).when(type).getTonnage(any(), anyDouble());\n \n         EquipmentPart equipmentPart = new EquipmentPart(75, type, 6, size, false, mockCampaign);\n-        \n+\n         assertFalse(equipmentPart.needsFixing());\n \n         equipmentPart.setHits(1);\n@@ -1501,7 +1501,7 @@ public void checkWeaponBayOnlyWeaponRemovedTest() {\n         verify(weaponBay, times(1)).setRepairable(eq(true));\n         verify(unit, times(1)).destroySystem(eq(CriticalSlot.TYPE_EQUIPMENT), eq(bayEqNum));\n     }\n-    \n+\n     @Test\n     public void checkWeaponBayWeaponRemovedOthersOkayTest() {\n         Campaign mockCampaign = mock(Campaign.class);"
  },
  {
    "sha": "4e74a82380b47308fba2f67073947102ed79cde9",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/equipment/InfantryAmmoBinTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/InfantryAmmoBinTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/InfantryAmmoBinTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/equipment/InfantryAmmoBinTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -271,7 +271,7 @@ public void ammoBinWriteToXmlTest() throws ParserConfigurationException, SAXExce\n \n         // Get the InfantryAmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -313,7 +313,7 @@ public void oneShotAmmoBinWriteToXmlTest() throws ParserConfigurationException,\n \n         // Get the InfantryAmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -356,7 +356,7 @@ public void fullAmmoBinWriteToXmlTest() throws ParserConfigurationException, SAX\n \n         // Get the InfantryAmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -398,7 +398,7 @@ public void emptyAmmoBinWriteToXmlTest() throws ParserConfigurationException, SA\n \n         // Get the InfantryAmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -462,7 +462,7 @@ public void changeMunitionSerializationTest() throws ParserConfigurationExceptio\n \n         // Get the InfantryAmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();"
  },
  {
    "sha": "ac37e44db5072c11296dad6940ef0561eed6ca1b",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/equipment/LargeCraftAmmoBinTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/LargeCraftAmmoBinTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/LargeCraftAmmoBinTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/equipment/LargeCraftAmmoBinTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -159,7 +159,7 @@ public void largeCraftAmmoBinWriteToXmlTest() throws ParserConfigurationExceptio\n \n         // Get the AmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();"
  },
  {
    "sha": "9c6da527dff4a97b9c9289f90a17b1ca535d4157",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/equipment/MissingAmmoBinTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingAmmoBinTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingAmmoBinTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingAmmoBinTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -114,7 +114,7 @@ public void missingAmmoBinWriteToXmlTest() throws ParserConfigurationException,\n \n         // Get the AmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -156,7 +156,7 @@ public void oneShotMissingAmmoBinWriteToXmlTest() throws ParserConfigurationExce\n \n         // Get the AmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();"
  },
  {
    "sha": "2a1133e69fa15ed4b026d7705d68a2b32d425420",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/equipment/MissingEquipmentPartTest.java",
    "status": "modified",
    "additions": 17,
    "deletions": 17,
    "changes": 34,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingEquipmentPartTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingEquipmentPartTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingEquipmentPartTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -74,9 +74,9 @@ public void equipmentPartCtorTest() {\n         boolean isOmniPodded = false;\n         EquipmentType type = mock(EquipmentType.class);\n         doReturn(equipTonnage).when(type).getTonnage(any(), eq(size));\n-        \n+\n         MissingEquipmentPart missingPart = new MissingEquipmentPart(tonnage, type, equipmentNum, mockCampaign, equipTonnage, size, isOmniPodded);\n-        \n+\n         assertEquals(tonnage, missingPart.getUnitTonnage());\n         assertEquals(type, missingPart.getType());\n         assertEquals(equipmentNum, missingPart.getEquipmentNum());\n@@ -87,7 +87,7 @@ public void equipmentPartCtorTest() {\n \n         isOmniPodded = true;\n         missingPart = new MissingEquipmentPart(tonnage, type, equipmentNum, mockCampaign, equipTonnage, size, isOmniPodded);\n-        \n+\n         assertEquals(tonnage, missingPart.getUnitTonnage());\n         assertEquals(type, missingPart.getType());\n         assertEquals(equipmentNum, missingPart.getEquipmentNum());\n@@ -96,7 +96,7 @@ public void equipmentPartCtorTest() {\n         assertEquals(equipTonnage, missingPart.getTonnage(), 0.001);\n         assertEquals(mockCampaign, missingPart.getCampaign());\n     }\n-    \n+\n     @Test\n     public void cloneTest() {\n         Campaign mockCampaign = mock(Campaign.class);\n@@ -107,9 +107,9 @@ public void cloneTest() {\n         int equipmentNum = 7;\n         boolean isOmniPodded = false;\n         EquipmentType type = mock(EquipmentType.class);\n-        \n+\n         MissingEquipmentPart missingPart = new MissingEquipmentPart(tonnage, type, equipmentNum, mockCampaign, equipTonnage, size, isOmniPodded);\n-        \n+\n         MissingEquipmentPart clone = missingPart.clone();\n \n         assertEquals(missingPart.getUnitTonnage(), clone.getUnitTonnage());\n@@ -124,7 +124,7 @@ public void cloneTest() {\n         missingPart = new MissingEquipmentPart(tonnage, type, equipmentNum, mockCampaign, equipTonnage, size, isOmniPodded);\n \n         clone = missingPart.clone();\n-        \n+\n         assertEquals(missingPart.getUnitTonnage(), clone.getUnitTonnage());\n         assertEquals(missingPart.getType(), clone.getType());\n         assertEquals(missingPart.getEquipmentNum(), clone.getEquipmentNum());\n@@ -144,7 +144,7 @@ public void getNewPartTest() {\n         int equipmentNum = 7;\n         boolean isOmniPodded = false;\n         EquipmentType type = mock(EquipmentType.class);\n-        \n+\n         MissingEquipmentPart missingPart = new MissingEquipmentPart(tonnage, type, equipmentNum, mockCampaign, equipTonnage, size, isOmniPodded);\n \n         EquipmentPart equipmentPart = missingPart.getNewPart();\n@@ -198,7 +198,7 @@ public void isPartForEquipmentTest() {\n         assertFalse(missingPart.isPartForEquipmentNum(equipmentNum, Aero.LOC_RWING));\n         assertFalse(missingPart.isPartForEquipmentNum(equipmentNum - 1, location));\n     }\n-    \n+\n     @Test\n     public void isOmniPoddableTest() {\n         Campaign mockCampaign = mock(Campaign.class);\n@@ -416,7 +416,7 @@ public void isInLocationTest() {\n         int location = Mech.LOC_RT;\n         when(mounted.getLocation()).thenReturn(location);\n         doReturn(mounted).when(entity).getEquipment(eq(equipmentNum));\n-        \n+\n         doReturn(location).when(entity).getLocationFromAbbr(eq(locationName));\n \n         // Our location should match up\n@@ -488,7 +488,7 @@ public void equipmentPartWriteToXmlTest() throws ParserConfigurationException, S\n \n         // Get the MissingEquipmentPart XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -514,7 +514,7 @@ public void equipmentPartWriteToXmlTest() throws ParserConfigurationException, S\n         assertEquals(missingPart.getSize(), deserialized.getSize(), 0.001);\n         assertEquals(missingPart.getTonnage(), deserialized.getTonnage(), 0.001);\n     }\n-    \n+\n     @Test\n     public void removeTest() {\n         Campaign mockCampaign = mock(Campaign.class);\n@@ -562,7 +562,7 @@ public void removeTest() {\n \n         verify(unit, times(1)).removePart(eq(missingPart));\n     }\n-    \n+\n     @Test\n     public void salvageTest() {\n         Campaign mockCampaign = mock(Campaign.class);\n@@ -610,7 +610,7 @@ public void salvageTest() {\n \n         verify(unit, times(1)).removePart(eq(missingPart));\n     }\n-    \n+\n     @Test\n     public void needsFixingTest() {\n         Campaign mockCampaign = mock(Campaign.class);\n@@ -624,7 +624,7 @@ public void needsFixingTest() {\n         doReturn(equipTonnage).when(type).getTonnage(any(), anyDouble());\n \n         MissingEquipmentPart missingPart = new MissingEquipmentPart(75, type, 6, mockCampaign, equipTonnage, size, false);\n-        \n+\n         // Not on a unit\n         assertFalse(missingPart.needsFixing());\n \n@@ -639,12 +639,12 @@ public void needsFixingTest() {\n         assertTrue(missingPart.needsFixing());\n \n         when(unit.isSalvage()).thenReturn(true);\n-        \n+\n         // On a unit being salvaged, we need a tech\n         assertFalse(missingPart.needsFixing());\n \n         missingPart.setTech(mock(Person.class));\n-        \n+\n         // Salvaging with a tech\n         assertTrue(missingPart.needsFixing());\n     }"
  },
  {
    "sha": "8615515ac35f6de32e14a0a86dc7fa67f1247159",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/equipment/MissingInfantryAmmoBinTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingInfantryAmmoBinTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingInfantryAmmoBinTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingInfantryAmmoBinTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -122,7 +122,7 @@ public void missingAmmoBinWriteToXmlTest() throws ParserConfigurationException,\n \n         // Get the AmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();\n@@ -166,7 +166,7 @@ public void omnipoddedMissingInfantryAmmoBinWriteToXmlTest() throws ParserConfig\n \n         // Get the AmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();"
  },
  {
    "sha": "da2e9cca18c2b89b00c61fe822a4714383c944fd",
    "filename": "MekHQ/unittests/mekhq/campaign/parts/equipment/MissingLargeCraftAmmoBinTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/sixlettervariables/mekhq/blob/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingLargeCraftAmmoBinTest.java",
    "raw_url": "https://github.com/sixlettervariables/mekhq/raw/88a85cc79180b8ef293d7bc6f342377bedcc6028/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingLargeCraftAmmoBinTest.java",
    "contents_url": "https://api.github.com/repos/sixlettervariables/mekhq/contents/MekHQ/unittests/mekhq/campaign/parts/equipment/MissingLargeCraftAmmoBinTest.java?ref=88a85cc79180b8ef293d7bc6f342377bedcc6028",
    "patch": "@@ -101,7 +101,7 @@ public void missingAmmoBinWriteToXmlTest() throws ParserConfigurationException,\n \n         // Get the AmmoBin XML\n         String xml = sw.toString();\n-        assertFalse(xml.trim().isEmpty());\n+        assertFalse(xml.isBlank());\n \n         // Using factory get an instance of document builder\n         DocumentBuilder db = MekHqXmlUtil.newSafeDocumentBuilder();"
  }
]
