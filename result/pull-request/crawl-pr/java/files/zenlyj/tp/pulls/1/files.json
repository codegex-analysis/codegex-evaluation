[
  {
    "sha": "d9b0353b334a6ad8b6dd12ab288976016829cb6f",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/build.gradle",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/build.gradle",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/build.gradle?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -73,7 +73,7 @@ jacocoTestReport {\n }\n \n shadowJar {\n-    archiveName = 'addressbook.jar'\n+    archiveName = 'flashback.jar'\n }\n \n defaultTasks 'clean', 'test'"
  },
  {
    "sha": "8f1d17bd283d74dc9066a650be9da90f05d183ce",
    "filename": "docs/UserGuide.md",
    "status": "modified",
    "additions": 74,
    "deletions": 19,
    "changes": 93,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/docs/UserGuide.md",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/docs/UserGuide.md",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/docs/UserGuide.md?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -7,22 +7,31 @@ title: User Guide\n FlashBack is a **desktop application for managing notes, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). This application allows the improvement of student performance via improved accessibility and organisation of notes, together with interactive sessions that enhance memory retention.\n ## Table of Contents\n * [Quick start](#quick-start)\n+* [Application layout](#application-layout)\n *  [Features](#features)\n-    * [Viewing help](#viewing-help-help): `help`\n-    * [Adding a new card](#adding-a-new-card-add): `add`\n-    * [Listing all cards](#listing-all-cards--list): `list`\n-    * [Deleting a card](#deleting-a-card--delete): `delete`\n-    * [Viewing a card](#viewing-a-card--view): `view`\n-    * [Finding cards](#finding-cards--find): `find` \n-    * [Clearing all cards](#clearing-all-entries--clear): `clear`\n-    * [Undo a command](#undo-a-command--undo): `undo`\n-    * [Exiting the program](#exiting-the-program--exit): `exit`\n-    * [Saving data](#saving-the-data)\n-    * [Editing the data file](#editing-the-data-file)\n-    * [Filtering cards](#filtering-cards-coming-in-v13): `[coming in v1.3]`\n-    * [Review mode](#review-mode-coming-in-v13): `[coming in v1.3]`\n+    * [Main mode](#main-mode)\n+        * [Viewing help](#viewing-help-help): `help`\n+        * [Adding a new card](#adding-a-new-card-add): `add`\n+        * [Listing all cards](#listing-all-cards--list): `list`\n+        * [Deleting a card](#deleting-a-card--delete): `delete`\n+        * [Viewing a card](#viewing-a-card--view): `view`\n+        * [Finding cards](#finding-cards--find): `find` \n+        * [Clearing all cards](#clearing-all-entries--clear): `clear`\n+        * [Undoing a command](#undoing-a-command--undo): `undo`\n+        * [Exiting the program](#exiting-the-program--exit): `exit`\n+        * [Saving data](#saving-the-data)\n+        * [Editing the data file](#editing-the-data-file)\n+        * [Filtering cards](#filtering-cards-coming-in-v13): `[coming in v1.3]`\n+    * [Review mode](#review-mode)\n+        * [Showingnext card](#showing-next-card-n): `n`\n+        * [Showing previous card](#showing-previous-card-p): `p`\n+        * [Showing answer](#showing-answer-a): `a`\n+        * [Hiding answer](#hiding-answer-h): `h`\n+        * [Quitting review mode](#quitting-review-mode-q): `q`\n * [FAQ](#faq)\n * [Command Summary](#command-summary)\n+    * [Main mode command](#main-mode-command)\n+    * [Review mode command](#review-mode-command)\n \n \n --------------------------------------------------------------------------------------------------------------------\n@@ -31,19 +40,35 @@ FlashBack is a **desktop application for managing notes, optimized for use via a\n \n \n 1. Ensure you have Java `11` or above installed in your Computer.\n-1. Download the latest `FlashBack.jar`.\n+1. Download the latest `FlashBack.jar` from [here](https://github.com/AY2021S2-CS2103T-T13-3/tp/releases).\n 1. Copy the file to the folder you want to use as the home folder for your FlashBack.\n-1. Double-click the file to start the app. The GUI should appear in a few seconds.\n-![GUI](./images/Ui.png)\n+1. Double-click the file to start the app. The GUI should appear in a few seconds. <br><br>\n+![GUI](./images/Ui.png) <br><br>\n 1. Below are some commands you can try, type the command in the command box and press Enter to execute it:\n     * **`help`** : Opens the help window.\n     * **`add`**`q/ What is the Einstein’s Equation? a/e=mc^2 c/Physics p/High t/ModernPhysics`: Adds a new flashcard named `What is the Einstein's Equation?` to FlashBack.\n+    * **`view`**`2`: Views the 2nd card shown in the current list.\n     * **`delete`**`1`: Deletes the 1st card shown in the current list.\n     * **`clear`**: Deletes all cards. \n     * **`exit`**: Exits the application.\n 1. Refer to the Features below for details of each command.\n \n \n+--------------------------------------------------------------------------------------------------------------------\n+## Application layout\n+\n+The figures below explain the different components in FlashBack. <br><br>\n+![MainWindowComponents](./images/UiMainWindowComponents.png) <br><br>\n+![ReviewModeComponents](./images/UiReviewModeComponents.png) <br><br>\n+Brief explanation of each components:\n+\n+Components      | Explanation\n+----------------|------------------\n+Command Box | This is where you type all the commands.\n+Result Display | This is where the result of your input to the command box is displayed.\n+View Pane |\n+Flashcard List |\n+\n --------------------------------------------------------------------------------------------------------------------\n \n ## Features\n@@ -74,6 +99,8 @@ FlashBack is a **desktop application for managing notes, optimized for use via a\n \n </div>\n \n+## Main mode\n+\n ### Viewing help: `help`\n \n Shows a message explaining how to access the help page.<br><br>\n@@ -183,7 +210,7 @@ Clears all entries from FlashBack.\n \n Format: `clear`\n \n-### Undo a command : `undo`\n+### Undoing a command : `undo`\n \n Restore FlashBack to the state before the previous command was executed. \n <div markdown=\"span\" class=\"alert alert-primary\">:memo: \n@@ -227,9 +254,27 @@ If your changes to the data file makes its format invalid, FlashBack will discar\n \n _Details coming soon ..._\n \n-### Review mode: `[coming in v1.3]`\n+## Review mode\n \n-_Details coming soon ..._\n+### Showing next card : `n`\n+Moves on to the next flashcard.<br>\n+Format: `n`\n+\n+### Showing previous card : `p`\n+Moves back to the previous flashcard. <br>\n+Format: `p`\n+\n+### Showing answer : `a`\n+Displays the answer of the current flashcard. <br>\n+Format: `a`\n+\n+### Hiding answer : `h`\n+Hides the answer of the current flashcard. <br>\n+Format: `h`\n+\n+### Quitting review mode : `q`\n+Quits the review mode and goes back to the main window. <br>\n+Format: `q`\n \n --------------------------------------------------------------------------------------------------------------------\n \n@@ -243,6 +288,8 @@ _Details coming soon ..._\n \n ## Command summary\n \n+### Main mode command\n+\n Action | Format, Examples\n --------|------------------\n **Add** | `add q/QUESTION a/ANSWER c/CATEGORY p/PRIORITY [t/TAGS]...` <br> e.g., `add q/ What is the Einstein’s Equation? a/e=mc^2 c/Physics p/High t/ModernPhysics`\n@@ -256,3 +303,11 @@ Action | Format, Examples\n **Help** | `help`\n **Exit** | `exit`\n \n+### Review mode command\n+Action          | Format\n+----------------|------------------\n+**Next card**   | `n`\n+**Previous card** | `p`\n+**Show answer** | `a`\n+**Hide answer** | `h`\n+**Quit review** | `q`"
  },
  {
    "sha": "fd5e3c40e74a109986baf680826998da6582907e",
    "filename": "docs/images/UiMainWindowComponents.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/docs/images/UiMainWindowComponents.png",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/docs/images/UiMainWindowComponents.png",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/docs/images/UiMainWindowComponents.png?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d"
  },
  {
    "sha": "990cd38deec39c3c4777d52aa83ff20c334f02ad",
    "filename": "docs/images/UiReviewModeComponents.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/docs/images/UiReviewModeComponents.png",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/docs/images/UiReviewModeComponents.png",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/docs/images/UiReviewModeComponents.png?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d"
  },
  {
    "sha": "2d55acd7b03cb184b63b5f40a259895d1d117fe0",
    "filename": "docs/images/UiReviewModeWindow.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/docs/images/UiReviewModeWindow.png",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/docs/images/UiReviewModeWindow.png",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/docs/images/UiReviewModeWindow.png?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d"
  },
  {
    "sha": "7e5a38fbae371cccdd6b04e6eab9674d6adeb730",
    "filename": "src/main/java/seedu/address/logic/ReviewManager.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/logic/ReviewManager.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/logic/ReviewManager.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/java/seedu/address/logic/ReviewManager.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -0,0 +1,71 @@\n+package seedu.address.logic;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Random;\n+\n+import javafx.collections.ObservableList;\n+import seedu.address.model.flashcard.Flashcard;\n+\n+public class ReviewManager {\n+    private final ArrayList<Flashcard> shuffleDeckOfCards;\n+    private final Logic logic;\n+    private int currentIndex;\n+\n+    /**\n+     * Creates a {@code ReviewManager} to handle Review Mode with specified logic;\n+     */\n+    public ReviewManager(Logic logic) {\n+        this.logic = logic;\n+        ObservableList<Flashcard> originalDeckOfCards = logic.getFilteredFlashcardList();\n+        this.shuffleDeckOfCards = new ArrayList<>(originalDeckOfCards);\n+        Collections.shuffle(shuffleDeckOfCards, new Random(3));\n+        this.currentIndex = 0;\n+    }\n+\n+    /**\n+     * Gets the size of the list of flashcards.\n+     */\n+    public int getFlashcardDeckSize() {\n+        return shuffleDeckOfCards.size();\n+    }\n+\n+    /**\n+     * Increase the current index by 1.\n+     */\n+    public void incrementCurrentIndex() {\n+        currentIndex++;\n+    }\n+\n+    /**\n+     * Decreases the current index by 1.\n+     */\n+    public void decrementCurrentIndex() {\n+        currentIndex--;\n+    }\n+\n+    /**\n+     * Checks if there is a next flashcard after the current flashcard.\n+     */\n+    public boolean hasNextFlashcard() {\n+        return currentIndex < shuffleDeckOfCards.size() - 1;\n+    }\n+\n+    /**\n+     * Checks if there is a previous flashcard after the current flashcard.\n+     */\n+    public boolean hasPreviousFlashcard() {\n+        return currentIndex > 0;\n+    }\n+\n+    /**\n+     * Gets the flashcard corresponds to the current index.\n+     */\n+    public Flashcard getCurrentFlashcard() {\n+        return shuffleDeckOfCards.get(currentIndex);\n+    }\n+\n+    public int getCurrentIndex() {\n+        return currentIndex;\n+    }\n+}"
  },
  {
    "sha": "8ca22a5af5921a80f147be797a44e31b5d2423a9",
    "filename": "src/main/java/seedu/address/logic/commands/CommandResult.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/logic/commands/CommandResult.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/logic/commands/CommandResult.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/java/seedu/address/logic/commands/CommandResult.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -86,6 +86,10 @@ public boolean isExit() {\n         return exit;\n     }\n \n+    public boolean isReviewMode() {\n+        return reviewMode;\n+    }\n+\n     @Override\n     public boolean equals(Object other) {\n         if (other == this) {"
  },
  {
    "sha": "79b57919ddd2b4fce5391ba02ae7d0cd48c797ad",
    "filename": "src/main/java/seedu/address/logic/commands/ReviewCommand.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/logic/commands/ReviewCommand.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/logic/commands/ReviewCommand.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/java/seedu/address/logic/commands/ReviewCommand.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -0,0 +1,21 @@\n+package seedu.address.logic.commands;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+import seedu.address.logic.commands.exceptions.CommandException;\n+import seedu.address.model.Model;\n+\n+\n+public class ReviewCommand extends Command {\n+    public static final String COMMAND_WORD = \"review\";\n+    public static final String MESSAGE_REVIEW_SUCCESS = \"Enter the review mode\";\n+    public static final String MESSAGE_REVIEW_FAIL = \"There are no cards to review\";\n+    @Override\n+    public CommandResult execute(Model model) throws CommandException {\n+        requireNonNull(model);\n+        if (model.getFilteredFlashcardList().size() == 0) {\n+            throw new CommandException(MESSAGE_REVIEW_FAIL);\n+        }\n+        return new CommandResult(MESSAGE_REVIEW_SUCCESS, false, false, true);\n+    }\n+}"
  },
  {
    "sha": "6b99590b17df25734ac8aaefc17f49a52c87f304",
    "filename": "src/main/java/seedu/address/logic/parser/FlashBackParser.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/logic/parser/FlashBackParser.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/logic/parser/FlashBackParser.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/java/seedu/address/logic/parser/FlashBackParser.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -62,6 +62,8 @@ public Command parseCommand(String userInput) throws ParseException {\n \n         case ViewCommand.COMMAND_WORD:\n             return new ViewCommandParser().parse(arguments);\n+        case ReviewCommand.COMMAND_WORD:\n+            return new ReviewCommand();\n \n         case UndoCommand.COMMAND_WORD:\n             return new UndoCommand();"
  },
  {
    "sha": "07b7391adec79c4e77b5b20a13d1b17a533badc7",
    "filename": "src/main/java/seedu/address/ui/CommandBox.java",
    "status": "modified",
    "additions": 14,
    "deletions": 13,
    "changes": 27,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/ui/CommandBox.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/ui/CommandBox.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/java/seedu/address/ui/CommandBox.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -2,8 +2,9 @@\n \n import javafx.collections.ObservableList;\n import javafx.fxml.FXML;\n-import javafx.scene.control.TextField;\n+import javafx.scene.input.KeyCode;\n import javafx.scene.layout.Region;\n+import javafx.scene.layout.StackPane;\n import seedu.address.logic.commands.CommandResult;\n import seedu.address.logic.commands.exceptions.CommandException;\n import seedu.address.logic.parser.exceptions.ParseException;\n@@ -17,27 +18,32 @@\n     private static final String FXML = \"CommandBox.fxml\";\n \n     private final CommandExecutor commandExecutor;\n-\n-    @FXML\n-    private TextField commandTextField;\n+    private CustomTextArea commandTextField;\n     @FXML\n-    private TextField commandKeyword;\n+    private StackPane commandBoxPlaceholder;\n \n     /**\n      * Creates a {@code CommandBox} with the given {@code CommandExecutor}.\n      */\n     public CommandBox(CommandExecutor commandExecutor) {\n         super(FXML);\n         this.commandExecutor = commandExecutor;\n-        commandKeyword.setVisible(false);\n         // calls #setStyleToDefault() whenever there is a change to the text of the command box.\n+        commandTextField = new CustomTextArea();\n         commandTextField.textProperty().addListener((unused1, unused2, unused3) -> setStyleToDefault());\n+        commandTextField.setWrapText(true);\n+        commandTextField.setId(\"commandTextField\");\n+        commandTextField.setPromptText(\"Enter command here...\");\n+        commandBoxPlaceholder.getChildren().add(commandTextField);\n+        commandBoxPlaceholder.setOnKeyPressed(event -> {\n+            if (event.getCode() == KeyCode.ENTER) {\n+                handleCommandEntered();\n+            }\n+        });\n     }\n-\n     /**\n      * Handles the Enter button pressed event.\n      */\n-    @FXML\n     private void handleCommandEntered() {\n         String commandText = commandTextField.getText();\n         if (commandText.equals(\"\")) {\n@@ -51,27 +57,23 @@ private void handleCommandEntered() {\n             setStyleToIndicateCommandFailure();\n         }\n     }\n-\n     /**\n      * Sets the command box style to use the default style.\n      */\n     private void setStyleToDefault() {\n         commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);\n     }\n-\n     /**\n      * Sets the command box style to indicate a failed command.\n      */\n     private void setStyleToIndicateCommandFailure() {\n         ObservableList<String> styleClass = commandTextField.getStyleClass();\n-\n         if (styleClass.contains(ERROR_STYLE_CLASS)) {\n             return;\n         }\n \n         styleClass.add(ERROR_STYLE_CLASS);\n     }\n-\n     /**\n      * Represents a function that can execute commands.\n      */\n@@ -84,5 +86,4 @@ private void setStyleToIndicateCommandFailure() {\n          */\n         CommandResult execute(String commandText) throws CommandException, ParseException;\n     }\n-\n }"
  },
  {
    "sha": "3fdf45079c2bc18498201d1d636cac6285c5a702",
    "filename": "src/main/java/seedu/address/ui/CustomTextArea.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/ui/CustomTextArea.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/ui/CustomTextArea.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/java/seedu/address/ui/CustomTextArea.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -0,0 +1,59 @@\n+package seedu.address.ui;\n+\n+import javafx.event.Event;\n+import javafx.event.EventHandler;\n+import javafx.scene.Parent;\n+import javafx.scene.control.TextArea;\n+import javafx.scene.input.KeyCode;\n+import javafx.scene.input.KeyEvent;\n+\n+/*\n+* Custom TextArea that disables going to a new line when Enter button is pressed.\n+* Author: jewelsea\n+* https://gist.github.com/jewelsea/5624145\n+ */\n+public class CustomTextArea extends TextArea {\n+    final TextArea myTextArea = this;\n+\n+    CustomTextArea() {\n+        addEventFilter(KeyEvent.KEY_PRESSED, new TabAndEnterHandler());\n+    }\n+\n+    class TabAndEnterHandler implements EventHandler<KeyEvent> {\n+        private KeyEvent recodedEvent;\n+\n+        @Override public void handle(KeyEvent event) {\n+            if (recodedEvent != null) {\n+                recodedEvent = null;\n+                return;\n+            }\n+\n+            Parent parent = myTextArea.getParent();\n+            if (parent != null) {\n+                if (event.getCode() == KeyCode.ENTER) {\n+                    if (event.isControlDown()) {\n+                        recodedEvent = recodeWithoutControlDown(event);\n+                        myTextArea.fireEvent(recodedEvent);\n+                    } else {\n+                        Event parentEvent = event.copyFor(parent, parent);\n+                        myTextArea.getParent().fireEvent(parentEvent);\n+                    }\n+                    event.consume();\n+                }\n+            }\n+        }\n+\n+        private KeyEvent recodeWithoutControlDown(KeyEvent event) {\n+            return new KeyEvent(\n+                    event.getEventType(),\n+                    event.getCharacter(),\n+                    event.getText(),\n+                    event.getCode(),\n+                    event.isShiftDown(),\n+                    false,\n+                    event.isAltDown(),\n+                    event.isMetaDown()\n+            );\n+        }\n+    }\n+}"
  },
  {
    "sha": "9adbb956df28519a9380d7670bfedca0628c2f85",
    "filename": "src/main/java/seedu/address/ui/FlashbackViewCard.java",
    "status": "modified",
    "additions": 10,
    "deletions": 5,
    "changes": 15,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/ui/FlashbackViewCard.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/ui/FlashbackViewCard.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/java/seedu/address/ui/FlashbackViewCard.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -5,18 +5,16 @@\n import javafx.fxml.FXML;\n import javafx.geometry.Insets;\n import javafx.scene.control.Label;\n-import javafx.scene.layout.Background;\n-import javafx.scene.layout.BackgroundFill;\n-import javafx.scene.layout.CornerRadii;\n-import javafx.scene.layout.FlowPane;\n-import javafx.scene.layout.Region;\n+import javafx.scene.layout.*;\n import javafx.scene.paint.Color;\n import seedu.address.model.flashcard.Flashcard;\n \n public class FlashbackViewCard extends UiPart<Region> {\n     private static final String FXML = \"FlashbackViewCard.fxml\";\n     public final Flashcard flashcard;\n     @FXML\n+    private VBox answerPlaceholder;\n+    @FXML\n     private Label question;\n     @FXML\n     private Label answer;\n@@ -53,6 +51,13 @@ public FlashbackViewCard(Flashcard flashcard) {\n         }\n     }\n \n+    /**\n+     * Hides the answer of the question from the user.\n+     */\n+    public void hideAnswer() {\n+        answerPlaceholder.setVisible(false);\n+    }\n+\n     @Override\n     public boolean equals(Object other) {\n         if (other == this) {"
  },
  {
    "sha": "c2933ec4c64b3a834e86563dfe03471967be38c0",
    "filename": "src/main/java/seedu/address/ui/MainWindow.java",
    "status": "modified",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/ui/MainWindow.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/ui/MainWindow.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/java/seedu/address/ui/MainWindow.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -1,5 +1,7 @@\n package seedu.address.ui;\n \n+import static seedu.address.ui.ReviewMode.EXIT_REVIEW_MODE;\n+\n import java.util.logging.Logger;\n \n import javafx.event.ActionEvent;\n@@ -8,6 +10,7 @@\n import javafx.scene.control.TextInputControl;\n import javafx.scene.input.KeyCombination;\n import javafx.scene.input.KeyEvent;\n+import javafx.scene.layout.GridPane;\n import javafx.scene.layout.StackPane;\n import javafx.stage.Stage;\n import seedu.address.commons.core.GuiSettings;\n@@ -17,6 +20,7 @@\n import seedu.address.logic.commands.exceptions.CommandException;\n import seedu.address.logic.parser.exceptions.ParseException;\n \n+\n /**\n  * The Main Window. Provides the basic application layout containing\n  * a menu bar and space where other JavaFX elements can be placed.\n@@ -53,6 +57,12 @@\n     @FXML\n     private StackPane statusbarPlaceholder;\n \n+    @FXML\n+    private GridPane commandModePane;\n+\n+    @FXML\n+    private StackPane reviewModePlaceholder;\n+\n     /**\n      * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.\n      */\n@@ -124,6 +134,13 @@ void fillInnerParts() {\n \n         CommandBox commandBox = new CommandBox(this::executeCommand);\n         commandBoxPlaceholder.getChildren().add(commandBox.getRoot());\n+\n+        commandModePane.managedProperty().bind(commandModePane.visibleProperty());\n+\n+        ReviewMode reviewMode = new ReviewMode(logic, this);\n+        reviewModePlaceholder.getChildren().add(reviewMode.getRoot());\n+        reviewModePlaceholder.setVisible(false);\n+        reviewModePlaceholder.managedProperty().bind(reviewModePlaceholder.visibleProperty());\n     }\n \n     /**\n@@ -172,6 +189,19 @@ private void handleView(int index) {\n         flashcardViewCardPlaceholder.getChildren().add(flashbackViewCard.getRoot());\n     }\n \n+    private void enterReviewMode() {\n+        commandModePane.setVisible(false);\n+        commandBoxPlaceholder.setVisible(false);\n+        reviewModePlaceholder.setVisible(true);\n+    }\n+\n+    protected void exitReviewMode() {\n+        commandModePane.setVisible(true);\n+        commandBoxPlaceholder.setVisible(true);\n+        reviewModePlaceholder.setVisible(false);\n+        resultDisplay.setFeedbackToUser(EXIT_REVIEW_MODE);\n+    }\n+\n     private void clearViewArea() {\n         flashcardViewCardPlaceholder.getChildren().clear();\n     }\n@@ -204,6 +234,9 @@ private CommandResult executeCommand(String commandText) throws CommandException\n             if (commandResult.isShowView()) {\n                 handleView(commandResult.getIndex());\n             }\n+            if (commandResult.isReviewMode()) {\n+                enterReviewMode();\n+            }\n \n             return commandResult;\n         } catch (CommandException | ParseException e) {"
  },
  {
    "sha": "bb807e4e9c317e0f1fca0636c6a3121056c04635",
    "filename": "src/main/java/seedu/address/ui/ReviewMode.java",
    "status": "added",
    "additions": 202,
    "deletions": 0,
    "changes": 202,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/ui/ReviewMode.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/java/seedu/address/ui/ReviewMode.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/java/seedu/address/ui/ReviewMode.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -0,0 +1,202 @@\n+package seedu.address.ui;\n+\n+import java.util.logging.Logger;\n+\n+import javafx.fxml.FXML;\n+import javafx.scene.control.Label;\n+import javafx.scene.control.ProgressBar;\n+import javafx.scene.control.TextField;\n+import javafx.scene.layout.Region;\n+import javafx.scene.layout.StackPane;\n+import seedu.address.commons.core.LogsCenter;\n+import seedu.address.logic.Logic;\n+import seedu.address.logic.LogicManager;\n+import seedu.address.logic.ReviewManager;\n+\n+\n+//TODO: REFACTOR THE CODE IN V1.3.\n+public class ReviewMode extends UiPart<Region> {\n+    public static final String EXIT_REVIEW_MODE = \"Exit review mode\";\n+    public static final String ENTER_REVIEW_MODE = \"Enter review mode\";\n+    public static final String INSTRUCTION = \"n next flashcard    p previous flashcard    a show answer\"\n+            + \"    h hide answer    q exit review mode\";\n+    private static final String FXML = \"ReviewMode.fxml\";\n+    private static final String NEXT_CARD = \"n\";\n+    private static final String PREV_CARD = \"p\";\n+    private static final String SHOW_ANSWER = \"a\";\n+    private static final String HIDE_ANSWER = \"h\";\n+    private static final String QUIT_REVIEW_MODE = \"q\";\n+    private static final String EMPTY_INPUT = \"\";\n+    private final Logger logger = LogsCenter.getLogger(LogicManager.class);\n+    private final ResultDisplay resultDisplay;\n+    private final ReviewManager manager;\n+    private final MainWindow parent;\n+    private boolean isAnswerShown;\n+    @FXML\n+    private TextField commandInReviewMode;\n+    @FXML\n+    private StackPane resultDisplayPlaceholderReviewMode;\n+    @FXML\n+    private Label progressLabel;\n+    @FXML\n+    private ProgressBar progressBar;\n+    @FXML\n+    private StackPane flashcardPlaceholderReviewMode;\n+\n+    /**\n+     * Create the {@code ReviewMode} with the reference to {@code MainWindow}.\n+     */\n+    public ReviewMode(Logic logic, MainWindow parent) {\n+        super(FXML);\n+        this.parent = parent;\n+        this.resultDisplay = new ResultDisplay();\n+        resultDisplayPlaceholderReviewMode.getChildren().add(resultDisplay.getRoot());\n+        manager = new ReviewManager(logic);\n+        if (manager.getFlashcardDeckSize() > 0) {\n+            resultDisplay.setFeedbackToUser(ENTER_REVIEW_MODE + \"\\n\" + INSTRUCTION);\n+            FlashbackViewCard flashbackViewCard = new FlashbackViewCard(manager.getCurrentFlashcard());\n+            flashbackViewCard.hideAnswer();\n+            isAnswerShown = false;\n+            flashcardPlaceholderReviewMode.getChildren().add(flashbackViewCard.getRoot());\n+            setProgress();\n+        }\n+    }\n+    @FXML\n+    private void handleCommandEnteredReview() {\n+        String command = commandInReviewMode.getText().trim();\n+        logger.info(\"----------------[USER COMMAND][\" + command + \"]\");\n+        String feedback = \"\";\n+        switch (command) {\n+        case NEXT_CARD:\n+            feedback = handleNextCommand();\n+            break;\n+        case PREV_CARD:\n+            feedback = handlePrevCommand();\n+            break;\n+        case QUIT_REVIEW_MODE:\n+            feedback = handleQuitCommand();\n+            break;\n+        case SHOW_ANSWER:\n+            feedback = handleShowAnswerCommand();\n+            break;\n+        case HIDE_ANSWER:\n+            feedback = handleHideAnswerCommand();\n+            break;\n+        case EMPTY_INPUT:\n+            return;\n+        default:\n+            feedback = handleInvalidCommand();\n+            break;\n+        }\n+        logger.info(\"Result: \" + feedback);\n+        commandInReviewMode.setText(\"\");\n+    }\n+\n+    /**\n+     * Displays the next flashcard.\n+     */\n+    private String handleNextCommand() {\n+        String feedback = \"\";\n+        if (manager.hasNextFlashcard()) {\n+            manager.incrementCurrentIndex();\n+            flashcardPlaceholderReviewMode.getChildren().clear();\n+            FlashbackViewCard flashbackViewCard = new FlashbackViewCard(manager.getCurrentFlashcard());\n+            flashbackViewCard.hideAnswer();\n+            isAnswerShown = false;\n+            flashcardPlaceholderReviewMode.getChildren().add(flashbackViewCard.getRoot());\n+            feedback = \"Show next flashcard\";\n+            setProgress();\n+        } else {\n+            feedback = \"No more cards to show\";\n+        }\n+        resultDisplay.setFeedbackToUser(feedback + \"\\n\" + INSTRUCTION);\n+        return feedback;\n+    }\n+\n+    /**\n+     * Displays the previous flashcard.\n+     */\n+    private String handlePrevCommand() {\n+        String feedback = \"\";\n+        if (manager.hasPreviousFlashcard()) {\n+            manager.decrementCurrentIndex();\n+            flashcardPlaceholderReviewMode.getChildren().clear();\n+            FlashbackViewCard flashbackViewCard = new FlashbackViewCard(manager.getCurrentFlashcard());\n+            flashbackViewCard.hideAnswer();\n+            isAnswerShown = false;\n+            flashcardPlaceholderReviewMode.getChildren().add(flashbackViewCard.getRoot());\n+            feedback = \"Show previous flashcard\";\n+            setProgress();\n+        } else {\n+            feedback = \"No previous card to show\";\n+        }\n+        resultDisplay.setFeedbackToUser(feedback + \"\\n\" + INSTRUCTION);\n+        return feedback;\n+    }\n+\n+    /**\n+     * Exits the review mode and goes back to the main window.\n+     */\n+    private String handleQuitCommand() {\n+        parent.exitReviewMode();\n+        return EXIT_REVIEW_MODE;\n+    }\n+\n+    /**\n+     * Displays the answer of the current flashcard to the user.\n+     */\n+    private String handleShowAnswerCommand() {\n+        String feedback = \"\";\n+        if (!isAnswerShown) {\n+            flashcardPlaceholderReviewMode.getChildren().clear();\n+            FlashbackViewCard flashbackViewCard = new FlashbackViewCard(manager.getCurrentFlashcard());\n+            flashcardPlaceholderReviewMode.getChildren().add(flashbackViewCard.getRoot());\n+            isAnswerShown = true;\n+            feedback = \"Show answer\";\n+        } else {\n+            feedback = \"The answer is already shown\";\n+        }\n+        resultDisplay.setFeedbackToUser(feedback + \"\\n\" + INSTRUCTION);\n+        return feedback;\n+    }\n+\n+    /**\n+     * Hides the answer of the current flashcard to the user.\n+     */\n+    private String handleHideAnswerCommand() {\n+        String feedback = \"\";\n+        if (isAnswerShown) {\n+            flashcardPlaceholderReviewMode.getChildren().clear();\n+            FlashbackViewCard flashbackViewCard = new FlashbackViewCard(manager.getCurrentFlashcard());\n+            flashbackViewCard.hideAnswer();\n+            flashcardPlaceholderReviewMode.getChildren().add(flashbackViewCard.getRoot());\n+            isAnswerShown = false;\n+            feedback = \"Hide answer\";\n+        } else {\n+            feedback = \"The answer is already hidden\";\n+        }\n+        resultDisplay.setFeedbackToUser(feedback + \"\\n\" + INSTRUCTION);\n+        return feedback;\n+    }\n+\n+    /**\n+     * Displays an error message to the user.\n+     */\n+    private String handleInvalidCommand() {\n+        String feedback = \"Invalid command in review mode\";\n+        resultDisplay.setFeedbackToUser(feedback + \"\\n\" + INSTRUCTION);\n+        return feedback;\n+    }\n+\n+    /**\n+     * Update the progress when the user type \"n\" or \"p\" command.\n+     */\n+    private void setProgress() {\n+        int currentIndex = manager.getCurrentIndex() + 1;\n+        int totalFlashcards = manager.getFlashcardDeckSize();\n+        String text = \"Question \" + currentIndex + \"/\" + totalFlashcards;\n+        progressLabel.setText(text);\n+        double completedPercentage = (double) currentIndex / (double) totalFlashcards;\n+        progressBar.setProgress(completedPercentage);\n+    }\n+}"
  },
  {
    "sha": "fd5609902ebe6b27553712ca79cfd300e989e249",
    "filename": "src/main/resources/view/CommandBox.fxml",
    "status": "modified",
    "additions": 2,
    "deletions": 13,
    "changes": 15,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/resources/view/CommandBox.fxml",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/resources/view/CommandBox.fxml",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/resources/view/CommandBox.fxml?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -3,17 +3,6 @@\n <?import javafx.scene.control.*?>\n <?import javafx.scene.layout.*?>\n \n-<StackPane prefHeight=\"66.0\" prefWidth=\"149.0\" styleClass=\"stack-pane\" xmlns=\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx=\"http://javafx.com/fxml/1\">\n-  <GridPane fx:id=\"inputPane\" styleClass=\"pane-no-border\" VBox.vgrow=\"ALWAYS\">\n-    <columnConstraints>\n-      <ColumnConstraints percentWidth=\"100.0\" />\n-      <ColumnConstraints percentWidth=\"0.0\" />\n-    </columnConstraints>\n-    <rowConstraints>\n-      <RowConstraints percentHeight=\"25.0\" />\n-      <RowConstraints percentHeight=\"25.0\" />\n-    </rowConstraints>\n-    <TextField fx:id=\"commandTextField\" onAction=\"#handleCommandEntered\" prefHeight=\"26.0\" prefWidth=\"142.0\" promptText=\"Enter command here...\" GridPane.rowIndex=\"0\" />\n-    <TextField fx:id=\"commandKeyword\" onAction=\"#handleCommandEntered\" prefHeight=\"26.0\" prefWidth=\"142.0\" promptText=\"Enter keyword here...\" GridPane.rowIndex=\"1\" />\n-  </GridPane>\n+<StackPane fx:id=\"commandBoxPlaceholder\" prefHeight=\"66.0\" prefWidth=\"149.0\" styleClass=\"stack-pane\" xmlns=\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx=\"http://javafx.com/fxml/1\">\n+\n </StackPane>"
  },
  {
    "sha": "8ad72a0e95e26d0020d417d3dcb994a795c4f70c",
    "filename": "src/main/resources/view/FlashbackViewCard.fxml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/resources/view/FlashbackViewCard.fxml",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/resources/view/FlashbackViewCard.fxml",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/resources/view/FlashbackViewCard.fxml?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -15,7 +15,7 @@\n         <RowConstraints percentHeight=\"3.0\" />\n         <RowConstraints percentHeight=\"27.0\" />\n       </rowConstraints>\n-      <VBox styleClass=\"pane-with-round-black-border\" GridPane.columnIndex=\"0\" GridPane.rowIndex=\"0\">\n+      <VBox fx:id=\"questionPlaceholder\" styleClass=\"pane-with-round-black-border\" GridPane.columnIndex=\"0\" GridPane.rowIndex=\"0\">\n         <padding>\n           <Insets bottom=\"10.0\" left=\"15.0\" right=\"5.0\" top=\"5.0\" />\n         </padding>\n@@ -38,7 +38,7 @@\n                   <Insets bottom=\"1.0\" left=\"3.0\" right=\"3.0\" top=\"1.0\" />\n                </padding></Label>\n       </VBox>\n-      <VBox alignment=\"CENTER_LEFT\" styleClass=\"pane-with-round-black-border\" GridPane.columnIndex=\"0\" GridPane.rowIndex=\"2\">\n+      <VBox fx:id=\"answerPlaceholder\" alignment=\"CENTER_LEFT\" styleClass=\"pane-with-round-black-border\" GridPane.columnIndex=\"0\" GridPane.rowIndex=\"2\">\n         <padding>\n           <Insets bottom=\"5\" left=\"15\" right=\"5\" top=\"5\" />\n         </padding>"
  },
  {
    "sha": "3e834d01babc2af9a8d7ff050daace0422cc0270",
    "filename": "src/main/resources/view/LightTheme.css",
    "status": "modified",
    "additions": 5,
    "deletions": 9,
    "changes": 14,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/resources/view/LightTheme.css",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/resources/view/LightTheme.css",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/resources/view/LightTheme.css?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -133,7 +133,7 @@\n }\n \n .stack-pane {\n-     -fx-background-color: derive(#ffffff, 20%);\n+     -fx-background-color: derive(#204051, 20%);\n }\n \n .pane-with-border {\n@@ -171,7 +171,6 @@\n     -fx-font-family: \"Segoe UI Light\";\n     -fx-font-size: 13pt;\n     -fx-text-fill: black;\n-    -fx-border-radius: 5px;\n }\n \n .result-display .label {\n@@ -357,26 +356,23 @@\n     -fx-border-color: black;\n }\n \n-#commandKeyword {\n-    -fx-background-color: transparent #383838 transparent #383838;\n+#commandInReviewMode {\n+    -fx-background-color: white;\n     -fx-background-insets: 0;\n     -fx-border-color: #383838 #383838 #ffffff #383838;\n     -fx-border-insets: 0;\n     -fx-border-width: 1;\n     -fx-font-family: \"Segoe UI Light\";\n     -fx-font-size: 13pt;\n     -fx-text-fill: black;\n+    -fx-border-radius: 7px;\n+    -fx-border-color: black;\n }\n \n #filterField, #personListPanel, #personWebpage {\n     -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);\n }\n \n-#resultDisplay .content {\n-    -fx-background-color: #ffffff;\n-    -fx-background-radius: 5px;\n-}\n-\n #tags {\n     -fx-hgap: 7;\n     -fx-vgap: 3;"
  },
  {
    "sha": "6f79664f43e879ffd179f6ca614b1a8dc210c72b",
    "filename": "src/main/resources/view/MainWindow.fxml",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/resources/view/MainWindow.fxml",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/resources/view/MainWindow.fxml",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/resources/view/MainWindow.fxml?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -29,15 +29,17 @@\n           </Menu>\n         </MenuBar>\n \n+        <StackPane fx:id=\"reviewModePlaceholder\"  VBox.vgrow=\"ALWAYS\" HBox.hgrow = \"ALWAYS\"></StackPane>\n+\n         <GridPane fx:id=\"commandModePane\" styleClass=\"grid-with-border\" VBox.vgrow=\"ALWAYS\">\n           <columnConstraints>\n             <ColumnConstraints percentWidth=\"50.0\" />\n             <ColumnConstraints percentWidth=\"50.0\" />\n           </columnConstraints>\n           <rowConstraints>\n-            <RowConstraints percentHeight=\"30.0\" />\n+            <RowConstraints percentHeight=\"25.0\" />\n             <RowConstraints percentHeight=\"20.0\" />\n-            <RowConstraints percentHeight=\"50.0\" />\n+            <RowConstraints percentHeight=\"55.0\" />\n           </rowConstraints>\n           <StackPane fx:id=\"commandBoxPlaceholder\" styleClass=\"pane-with-border\" GridPane.columnIndex=\"0\" GridPane.rowIndex=\"0\" GridPane.hgrow=\"ALWAYS\" GridPane.vgrow=\"ALWAYS\" VBox.vgrow=\"NEVER\">\n             <padding>"
  },
  {
    "sha": "d1e1de4dfffc30c6ac3cb1b7122f6358a015f249",
    "filename": "src/main/resources/view/ReviewMode.fxml",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/resources/view/ReviewMode.fxml",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/main/resources/view/ReviewMode.fxml",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/main/resources/view/ReviewMode.fxml?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<?import javafx.geometry.*?>\n+<?import javafx.scene.control.*?>\n+<?import javafx.scene.layout.*?>\n+\n+<VBox styleClass=\"pane-no-border\" xmlns=\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx=\"http://javafx.com/fxml/1\">\n+    <StackPane prefHeight=\"26.0\" prefWidth=\"142.0\" styleClass=\"stack-pane\" xmlns=\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx=\"http://javafx.com/fxml/1\">\n+        <TextField fx:id=\"commandInReviewMode\" onAction=\"#handleCommandEnteredReview\" prefHeight=\"26.0\" prefWidth=\"142.0\" promptText=\"Enter command here...\" />\n+      <VBox.margin>\n+         <Insets left=\"20.0\" right=\"20.0\" top=\"20.0\" />\n+      </VBox.margin>\n+    </StackPane>\n+    <StackPane fx:id=\"resultDisplayPlaceholderReviewMode\" maxHeight=\"150\" minHeight=\"55.0\" prefHeight=\"84.0\" prefWidth=\"662.0\" styleClass=\"stack-pane\" GridPane.columnIndex=\"0\" GridPane.hgrow=\"ALWAYS\" GridPane.rowIndex=\"1\" GridPane.vgrow=\"ALWAYS\" VBox.vgrow=\"NEVER\">\n+      <VBox.margin>\n+         <Insets left=\"20.0\" right=\"20.0\" top=\"20.0\" />\n+      </VBox.margin>\n+    </StackPane>\n+    <VBox alignment=\"CENTER\">\n+        <padding>\n+            <Insets bottom=\"5\" top=\"15\" />\n+        </padding>\n+        <ProgressBar fx:id=\"progressBar\" minHeight=\"20\" prefHeight=\"20\" prefWidth=\"300\">\n+         <VBox.margin>\n+            <Insets top=\"10.0\" />\n+         </VBox.margin></ProgressBar>\n+        <Label fx:id=\"progressLabel\" styleClass=\"label-bright\" text=\"Label\" />\n+    </VBox>\n+    <StackPane fx:id=\"flashcardPlaceholderReviewMode\" VBox.vgrow=\"ALWAYS\">\n+      <VBox.margin>\n+         <Insets bottom=\"15.0\" left=\"60.0\" right=\"60.0\" top=\"15.0\" />\n+      </VBox.margin></StackPane>\n+</VBox>"
  },
  {
    "sha": "a48fb493d5606b281f89cbbd80be04456945c09e",
    "filename": "src/test/java/seedu/address/logic/ReviewManagerTest.java",
    "status": "added",
    "additions": 116,
    "deletions": 0,
    "changes": 116,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/test/java/seedu/address/logic/ReviewManagerTest.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/test/java/seedu/address/logic/ReviewManagerTest.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/test/java/seedu/address/logic/ReviewManagerTest.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -0,0 +1,116 @@\n+package seedu.address.logic;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static seedu.address.testutil.TypicalFlashcards.*;\n+\n+import java.nio.file.Path;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+\n+import javafx.collections.ObservableList;\n+import seedu.address.commons.core.GuiSettings;\n+import seedu.address.logic.commands.CommandResult;\n+import seedu.address.logic.commands.exceptions.CommandException;\n+import seedu.address.logic.parser.exceptions.ParseException;\n+import seedu.address.model.Model;\n+import seedu.address.model.ModelManager;\n+import seedu.address.model.ReadOnlyFlashBack;\n+import seedu.address.model.UserPrefs;\n+import seedu.address.model.flashcard.Flashcard;\n+\n+public class ReviewManagerTest {\n+    private Model model;\n+    private ReviewManager manager;\n+    @BeforeEach\n+    public void setUp() {\n+        model = new ModelManager(getTypicalFlashBack(), new UserPrefs());\n+        manager = new ReviewManager(new LogicStub(model));\n+    }\n+    @Test\n+    public void execute_getFirstFlashcard_success() {\n+        Flashcard expectedFlashcard = getTypicalFlashcardsShuffle().get(0);\n+        assertEquals(expectedFlashcard, manager.getCurrentFlashcard());\n+    }\n+    @Test\n+    public void execute_getSecondFlashcard_success() {\n+        Flashcard expectedFlashcard = getTypicalFlashcardsShuffle().get(1);\n+        manager.incrementCurrentIndex();\n+        assertEquals(expectedFlashcard, manager.getCurrentFlashcard());\n+    }\n+    @Test\n+    public void execute_getPreviousFlashcardFromFirstCard_throwsIndexOutOfBoundException() {\n+        manager.decrementCurrentIndex();\n+        assertThrows(IndexOutOfBoundsException.class, () -> manager.getCurrentFlashcard());\n+    }\n+    @Test\n+    public void execute_hasPreviousFlashcardFromFirstCard_fail() {\n+        assertFalse(manager.hasPreviousFlashcard());\n+    }\n+    @Test\n+    public void execute_hasPreviousFlashcardFromSecondCard_success() {\n+        manager.incrementCurrentIndex();\n+        assertTrue(manager.hasPreviousFlashcard());\n+    }\n+    @Test\n+    public void execute_hasNextFlashcardFromFirstCard_success() {\n+        assertTrue(manager.hasNextFlashcard());\n+    }\n+    @Test\n+    public void execute_hasNextFlashcardFromLastCard_fail() {\n+        for (int i = 0; i < 7; i++) {\n+            manager.incrementCurrentIndex();\n+        }\n+        assertEquals(7, manager.getFlashcardDeckSize());\n+        assertFalse(manager.hasNextFlashcard());\n+    }\n+    @Test\n+    public void execute_getCurrentIndex_success() {\n+        assertEquals(0, manager.getCurrentIndex());\n+        manager.incrementCurrentIndex();\n+        assertEquals(1, manager.getCurrentIndex());\n+        manager.decrementCurrentIndex();\n+        assertEquals(0, manager.getCurrentIndex());\n+    }\n+\n+    /**\n+     * A default stub that have all of the methods return null,\n+     * except for {@code getFilteredFlashcardList()} method that returns the current filtered flashcard list\n+     * from the model.\n+     */\n+    private class LogicStub implements Logic {\n+        private Model model;\n+        LogicStub(Model model) {\n+            this.model = model;\n+        }\n+        @Override\n+        public CommandResult execute(String commandText) throws CommandException, ParseException {\n+            return null;\n+        }\n+\n+        @Override\n+        public ReadOnlyFlashBack getFlashBack() {\n+            return null;\n+        }\n+\n+        @Override\n+        public ObservableList<Flashcard> getFilteredFlashcardList() {\n+            return model.getFilteredFlashcardList();\n+        }\n+\n+        @Override\n+        public Path getFlashBackFilePath() {\n+            return null;\n+        }\n+\n+        @Override\n+        public GuiSettings getGuiSettings() {\n+            return null;\n+        }\n+\n+        @Override\n+        public void setGuiSettings(GuiSettings guiSettings) {\n+\n+        }\n+    }\n+}"
  },
  {
    "sha": "688eae01e1be713b3c9a64e9591c3c97c13e15a5",
    "filename": "src/test/java/seedu/address/logic/commands/AddCommandTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/test/java/seedu/address/logic/commands/AddCommandTest.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/test/java/seedu/address/logic/commands/AddCommandTest.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/test/java/seedu/address/logic/commands/AddCommandTest.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -26,12 +26,12 @@\n public class AddCommandTest {\n \n     @Test\n-    public void constructor_nullPerson_throwsNullPointerException() {\n+    public void constructor_nullFlashcard_throwsNullPointerException() {\n         assertThrows(NullPointerException.class, () -> new AddCommand(null));\n     }\n \n     @Test\n-    public void execute_personAcceptedByModel_addSuccessful() throws Exception {\n+    public void execute_flashcardAcceptedByModel_addSuccessful() throws Exception {\n         ModelStubAcceptingPersonAdded modelStub = new ModelStubAcceptingPersonAdded();\n         Flashcard validFlashcard = new FlashcardBuilder().build();\n \n@@ -42,7 +42,7 @@ public void execute_personAcceptedByModel_addSuccessful() throws Exception {\n     }\n \n     @Test\n-    public void execute_duplicatePerson_throwsCommandException() {\n+    public void execute_duplicateFlashcard_throwsCommandException() {\n         Flashcard validFlashcard = new FlashcardBuilder().build();\n         AddCommand addCommand = new AddCommand(validFlashcard);\n         ModelStub modelStub = new ModelStubWithPerson(validFlashcard);"
  },
  {
    "sha": "41071be8b96c61574427c341fc6e2025658c3bbe",
    "filename": "src/test/java/seedu/address/logic/commands/ReviewCommandTest.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/test/java/seedu/address/logic/commands/ReviewCommandTest.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/test/java/seedu/address/logic/commands/ReviewCommandTest.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/test/java/seedu/address/logic/commands/ReviewCommandTest.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -0,0 +1,28 @@\n+package seedu.address.logic.commands;\n+\n+import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;\n+import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;\n+import static seedu.address.logic.commands.ReviewCommand.MESSAGE_REVIEW_FAIL;\n+import static seedu.address.logic.commands.ReviewCommand.MESSAGE_REVIEW_SUCCESS;\n+import static seedu.address.testutil.TypicalFlashcards.getTypicalFlashBack;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import seedu.address.model.Model;\n+import seedu.address.model.ModelManager;\n+import seedu.address.model.UserPrefs;\n+\n+public class ReviewCommandTest {\n+    private Model model = new ModelManager(getTypicalFlashBack(), new UserPrefs());\n+    private Model expectedModel = new ModelManager(getTypicalFlashBack(), new UserPrefs());\n+    @Test\n+    public void execute_review_success() {\n+        CommandResult expectedCommandResult = new CommandResult(MESSAGE_REVIEW_SUCCESS, false, false, true);\n+        assertCommandSuccess(new ReviewCommand(), model, expectedCommandResult, expectedModel);\n+    }\n+    @Test\n+    public void execute_emptyFlashBack_throwsCommandException() {\n+        Model emptyModel = new ModelManager();\n+        assertCommandFailure(new ReviewCommand(), emptyModel, MESSAGE_REVIEW_FAIL);\n+    }\n+}"
  },
  {
    "sha": "61d90bcd85508817002cecfacaea2f1225888dd2",
    "filename": "src/test/java/seedu/address/testutil/TypicalFlashcards.java",
    "status": "modified",
    "additions": 11,
    "deletions": 3,
    "changes": 14,
    "blob_url": "https://github.com/zenlyj/tp/blob/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/test/java/seedu/address/testutil/TypicalFlashcards.java",
    "raw_url": "https://github.com/zenlyj/tp/raw/c3b421d691bc27914f74d3bcfc0adc8ecb99573d/src/test/java/seedu/address/testutil/TypicalFlashcards.java",
    "contents_url": "https://api.github.com/repos/zenlyj/tp/contents/src/test/java/seedu/address/testutil/TypicalFlashcards.java?ref=c3b421d691bc27914f74d3bcfc0adc8ecb99573d",
    "patch": "@@ -11,9 +11,7 @@\n import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_EQUATION;\n import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_GENERAL;\n \n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.List;\n+import java.util.*;\n \n import seedu.address.model.FlashBack;\n import seedu.address.model.flashcard.Flashcard;\n@@ -85,4 +83,14 @@ public static FlashBack getTypicalFlashBack() {\n     public static List<Flashcard> getTypicalFlashcards() {\n         return new ArrayList<>(Arrays.asList(PYTHAGOREAN, EINSTEIN, NEWTON, ATP, MERGE, RECURSION, ACID));\n     }\n+\n+    /**\n+     * Returns a list of Flashcards in a random order with a given seed that is equal to the seed used in\n+     * {@code ReviewManager} class (in this case, the seed is 3).\n+     */\n+    public static List<Flashcard> getTypicalFlashcardsShuffle() {\n+        List<Flashcard> list = getTypicalFlashcards();\n+        Collections.shuffle(list, new Random(3));\n+        return list;\n+    }\n }"
  }
]
