[
  {
    "sha": "4fde490454e7ebe13291e7f117074debcb91ff4d",
    "filename": "core/src/main/java/de/erethon/commons/misc/SecuredStringBuilder.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/DRE2N/DRECommons/blob/6c987ae3a0de6a2a9544a124d7ead12bfe50911e/core/src/main/java/de/erethon/commons/misc/SecuredStringBuilder.java",
    "raw_url": "https://github.com/DRE2N/DRECommons/raw/6c987ae3a0de6a2a9544a124d7ead12bfe50911e/core/src/main/java/de/erethon/commons/misc/SecuredStringBuilder.java",
    "contents_url": "https://api.github.com/repos/DRE2N/DRECommons/contents/core/src/main/java/de/erethon/commons/misc/SecuredStringBuilder.java?ref=6c987ae3a0de6a2a9544a124d7ead12bfe50911e",
    "patch": "@@ -0,0 +1,43 @@\n+package de.erethon.commons.misc;\n+\n+public class SecuredStringBuilder {\n+\n+    private final String key;\n+    private final StringBuilder sb;\n+    private boolean accessible;\n+\n+    public SecuredStringBuilder(String key) {\n+        this.key = key;\n+        this.sb = new StringBuilder();\n+        this.accessible = true;\n+    }\n+\n+    public boolean isAccessible() {\n+        return accessible;\n+    }\n+\n+    public void setAccessible(boolean b) {\n+        this.accessible = b;\n+    }\n+\n+    public boolean isEmpty() {\n+        return sb.length() == 0;\n+    }\n+\n+    public StringBuilder builder() {\n+        if (!accessible) {\n+            throw new IllegalArgumentException(\"Access denied, found duplicated key: \" + key);\n+        }\n+        return sb;\n+    }\n+\n+    public String getKey() {\n+        return key;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return sb.toString();\n+    }\n+\n+}"
  }
]
