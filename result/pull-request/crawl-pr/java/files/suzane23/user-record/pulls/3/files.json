[
  {
    "sha": "e5fdcb7e30267b5c168be47db2da2a4b185f5903",
    "filename": "app/src/androidTest/java/com/secure/userdata/ExampleInstrumentedTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/androidTest/java/com/secure/userdata/ExampleInstrumentedTest.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/androidTest/java/com/secure/userdata/ExampleInstrumentedTest.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/androidTest/java/com/secure/userdata/ExampleInstrumentedTest.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -2,13 +2,13 @@\n \n import android.content.Context;\n \n-import androidx.test.platform.app.InstrumentationRegistry;\n-import androidx.test.ext.junit.runners.AndroidJUnit4;\n-\n import org.junit.Test;\n import org.junit.runner.RunWith;\n \n-import static org.junit.Assert.*;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+\n+import static org.junit.Assert.assertEquals;\n \n /**\n  * Instrumented test, which will execute on an Android device."
  },
  {
    "sha": "be84be65e65853021d0002ff95a8fc46087710f0",
    "filename": "app/src/main/java/com/secure/userdata/MainActivity.java",
    "status": "modified",
    "additions": 5,
    "deletions": 6,
    "changes": 11,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/MainActivity.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/MainActivity.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/MainActivity.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -1,14 +1,13 @@\n package com.secure.userdata;\n \n-import androidx.appcompat.app.AppCompatActivity;\n-\n import android.os.Bundle;\n \n-import com.secure.userdata.record.IUserData;\n import com.secure.userdata.record.RecordFactory;\n import com.secure.userdata.record.UserDataController;\n import com.secure.userdata.record.UserRecord;\n \n+import androidx.appcompat.app.AppCompatActivity;\n+\n public class MainActivity extends AppCompatActivity {\n \n     @Override\n@@ -17,7 +16,7 @@ protected void onCreate(Bundle savedInstanceState) {\n         setContentView(R.layout.activity_main);\n \n         UserDataController controller = new UserDataController(this, RecordFactory.RecordStorageType.NETWORKDB);\n-       UserRecord record = new UserRecord(\"Shuchika\");\n+       UserRecord record = new UserRecord(\"Basooli Bhai\");\n         UserRecord record1 = new UserRecord(\"Yudhi\");\n         UserRecord record2 = new UserRecord(\"Abhimanyu\");\n         UserRecord record3 = new UserRecord(\"Anika\");\n@@ -38,8 +37,8 @@ protected void onCreate(Bundle savedInstanceState) {\n //        controller.add(record7);\n //        controller.add(record8);\n //        controller.add(record9);\n-//        controller.getAllRecords();\n-       controller.deleteRecord(\"Yudhi\");\n+        controller.getAllRecords();\n+//       controller.deleteRecord(\"Shuchika\");\n //        controller.getRecordsByName(\"Avika\");\n         controller.getRecordsCount();\n     }"
  },
  {
    "sha": "8cad93886a90070ef2a1c21597098496fd092b2a",
    "filename": "app/src/main/java/com/secure/userdata/record/IUserData.java",
    "status": "modified",
    "additions": 8,
    "deletions": 5,
    "changes": 13,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/IUserData.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/IUserData.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/IUserData.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -2,13 +2,16 @@\n \n import android.content.Context;\n \n+import com.secure.userdata.record.requests.IUserRequest;\n+\n public interface IUserData {\n       void init(Context context);\n-      int addRecord(UserRecord record, IUserDataCallBack callBack);\n-      void getRecordByName(String name, IUserDataCallBack callBack);\n+      IUserRequest addRecord(UserRecord record, IUserDataCallBack callBack);\n+      IUserRequest getRecordByName(String name, IUserDataCallBack callBack);\n //      void getRecordById(String id, IUserDataCallBack callBack);\n-      int getAllRecords(IUserDataCallBack callBack);\n-      void getCount(IUserDataCallBack callBack);\n-      void deleteRecordByName(String name, IUserDataCallBack callBack);\n+      IUserRequest getAllRecords(IUserDataCallBack callBack);\n+      IUserRequest getCount(IUserDataCallBack callBack);\n+      IUserRequest deleteRecordByName(String name, IUserDataCallBack callBack);\n \n+      void cancelRequest(IUserRequest userRequest);\n }"
  },
  {
    "sha": "34cbf731b3f7b50cc132204b9b7f4a0d19303f03",
    "filename": "app/src/main/java/com/secure/userdata/record/IUserDataCallBack.java",
    "status": "modified",
    "additions": 2,
    "deletions": 7,
    "changes": 9,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/IUserDataCallBack.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/IUserDataCallBack.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/IUserDataCallBack.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -1,12 +1,7 @@\n package com.secure.userdata.record;\n \n-import java.util.List;\n+import com.secure.userdata.record.requests.IUserRequest;\n \n public interface IUserDataCallBack {\n-\n-    void onAddRecordResult(Boolean result, String recordID);\n-    void onDeleteRecordResult(int result);\n-    void onGetRecordsByNameResult(List<UserRecord> list);\n-    void onGetAllRecordsResult(List<UserRecord> list, int requestID);\n-    void onGetRecordsCount(int count);\n+    void onResponse(IUserRequest userRequest);\n }"
  },
  {
    "sha": "c0378db4a4522ae5f1a038b047db2c18c9197d09",
    "filename": "app/src/main/java/com/secure/userdata/record/SQLiteWrapper.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/SQLiteWrapper.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/SQLiteWrapper.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/SQLiteWrapper.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -4,8 +4,6 @@\n import android.database.sqlite.SQLiteDatabase;\n import android.database.sqlite.SQLiteOpenHelper;\n \n-import androidx.annotation.Nullable;\n-\n public class SQLiteWrapper extends SQLiteOpenHelper {\n \n     private static final int DATABASE_VERSION = 1;"
  },
  {
    "sha": "c30847726e2937353b7f27196046e5c614361031",
    "filename": "app/src/main/java/com/secure/userdata/record/UserDataBaseImpl.java",
    "status": "modified",
    "additions": 85,
    "deletions": 52,
    "changes": 137,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserDataBaseImpl.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserDataBaseImpl.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/UserDataBaseImpl.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -3,24 +3,23 @@\n import android.content.Context;\n \n import com.secure.userdata.record.requests.IUserRequest;\n+import com.secure.userdata.record.requests.IUserResponse;\n import com.secure.userdata.record.requests.UserAddRecordRequest;\n+import com.secure.userdata.record.requests.UserAddRecordResponse;\n import com.secure.userdata.record.requests.UserDeleteRecordByNameRequest;\n+import com.secure.userdata.record.requests.UserDeleteRecordByNameResponse;\n import com.secure.userdata.record.requests.UserGetAllRecordsRequest;\n-import com.secure.userdata.record.requests.UserGetRecordsByName;\n+import com.secure.userdata.record.requests.UserGetAllRecordsResponse;\n+import com.secure.userdata.record.requests.UserGetRecordsByNameRequest;\n+import com.secure.userdata.record.requests.UserGetRecordsByNameResponse;\n import com.secure.userdata.record.requests.UserGetRecordsCountRequest;\n+import com.secure.userdata.record.requests.UserGetRecordsCountResponse;\n \n import java.util.List;\n-import java.util.Random;\n import java.util.concurrent.LinkedBlockingQueue;\n \n public abstract class UserDataBaseImpl implements IUserData, Runnable{\n \n-    public class AddRecordItem {\n-        UserRecord record;\n-        IUserDataCallBack callBack;\n-    }\n-\n-\n     private LinkedBlockingQueue<IUserRequest> queue = null;\n     private Thread thread = null;\n     protected Context context = null;\n@@ -40,35 +39,54 @@ public void run() {\n             try {\n                 userRequest = queue.take();\n \n-                if(userRequest.getRequestType() == IUserRequest.RequestType.REQUEST_ADD) {\n-                    UserAddRecordRequest addRecordRequest = (UserAddRecordRequest)userRequest;\n-                    addRecordTo(addRecordRequest.getUserRecord());\n-\n-                    addRecordRequest.getCallback().onAddRecordResult(true, addRecordRequest.getUserRecord().id);\n-\n+                IUserResponse userResponse = null;\n+\n+                switch (userRequest.getRequestType()) {\n+                    case REQUEST_ADD: {\n+                        UserAddRecordRequest addRecordRequest = (UserAddRecordRequest)userRequest;\n+                        addRecordTo(addRecordRequest.getUserRecord());\n+\n+                        userResponse = new UserAddRecordResponse(true);\n+                        addRecordRequest.setResponse(userResponse);\n+                    }\n+                    break;\n+\n+                    case REQUEST_DELETE: {\n+                        UserDeleteRecordByNameRequest deleteRecordByNameRequest = (UserDeleteRecordByNameRequest)userRequest;\n+                        int result = deleteRecordByName(deleteRecordByNameRequest.getDeletedName());\n+\n+                        userResponse = new UserDeleteRecordByNameResponse(true, result);\n+                        deleteRecordByNameRequest.setResponse(userResponse);\n+                    }\n+                    break;\n+\n+                    case REQUEST_GET_BY_NAME: {\n+                        UserGetRecordsByNameRequest getRecordsByNameRequest = (UserGetRecordsByNameRequest)userRequest;\n+                        List<UserRecord> list = getRecordsByName(getRecordsByNameRequest.getSearchName());\n+\n+                        userResponse = new UserGetRecordsByNameResponse(true, list);\n+                        getRecordsByNameRequest.setResponse(userResponse);\n+                    }\n+                    break;\n+\n+                    case REQUEST_GET_ALL: {\n+                        List<UserRecord> list = getAllRecords();\n+                        userResponse = new UserGetAllRecordsResponse(true, list);\n+                        userRequest.setResponse(userResponse);\n+                    }\n+                    break;\n+\n+                    case REQUEST_GET_COUNT: {\n+                        int count = getRecordsCount();\n+                        userResponse = new UserGetRecordsCountResponse(true, count);\n+                        userRequest.setResponse(userResponse);\n+                    }\n+                    break;\n+\n+                    default:\n                 }\n-                else if(userRequest.getRequestType() == IUserRequest.RequestType.REQUEST_DELETE) {\n-                    UserDeleteRecordByNameRequest deleteRecordByNameRequest = (UserDeleteRecordByNameRequest)userRequest;\n-                    int result = deleteRecordByName(deleteRecordByNameRequest.getDeletedName());\n \n-                    deleteRecordByNameRequest.getCallback().onDeleteRecordResult(result);\n-                }\n-                else if(userRequest.getRequestType() == IUserRequest.RequestType.REQUEST_GET_BY_NAME) {\n-                    UserGetRecordsByName getRecordsByName = (UserGetRecordsByName)userRequest;\n-                    List<UserRecord> list = getRecordsByName(getRecordsByName.getSearchName());\n-\n-                    getRecordsByName.getCallback().onGetRecordsByNameResult(list);\n-                }\n-                else if(userRequest.getRequestType() == IUserRequest.RequestType.REQUEST_GET_ALL) {\n-\n-                    List<UserRecord> list = getAllRecords();\n-                    userRequest.getCallback().onGetAllRecordsResult(list, userRequest.getRequestID());\n-                }\n-                else if (userRequest.getRequestType() == IUserRequest.RequestType.REQUEST_GET_COUNT) {\n-\n-                    int count = getRecordsCount();\n-                    userRequest.getCallback().onGetRecordsCount(count);\n-                }\n+                userRequest.onComplete();\n             }\n             catch (InterruptedException e) {\n                 e.printStackTrace();\n@@ -84,26 +102,28 @@ else if (userRequest.getRequestType() == IUserRequest.RequestType.REQUEST_GET_CO\n     abstract int getRecordsCount();\n \n     @Override\n-    public int addRecord(UserRecord record, IUserDataCallBack callBack) {\n+    public IUserRequest addRecord(UserRecord record, IUserDataCallBack callBack) {\n         System.out.println(\"addRecord ++\");\n \n-        UserAddRecordRequest addRecordRequest = new UserAddRecordRequest(IUserRequest.RequestType.REQUEST_ADD, record, callBack);\n-        queue.add(addRecordRequest);\n+        IUserRequest request = new UserAddRecordRequest(IUserRequest.RequestType.REQUEST_ADD, record, callBack);\n+        queue.add(request);\n \n         System.out.println(\"addRecord --\");\n \n-        return new Random().nextInt();\n+        return request;\n     }\n \n     @Override\n-    public void getRecordByName(String name, IUserDataCallBack callBack) {\n+    public IUserRequest getRecordByName(String name, IUserDataCallBack callBack) {\n         System.out.println(\"getRecordByName ++\");\n \n-        UserGetRecordsByName getRecordsByName = new UserGetRecordsByName(IUserRequest.RequestType.REQUEST_GET_BY_NAME, callBack, name);\n-        queue.add(getRecordsByName);\n+        IUserRequest request = new UserGetRecordsByNameRequest(IUserRequest.RequestType.REQUEST_GET_BY_NAME, callBack, name);\n+        queue.add(request);\n \n         System.out.println(\"getRecordByName --\");\n \n+        return  request;\n+\n     }\n \n //    @Override\n@@ -112,36 +132,49 @@ public void getRecordById(String id, IUserDataCallBack callBack) {\n     }\n \n     @Override\n-    public int getAllRecords(IUserDataCallBack callBack) {\n+    public IUserRequest getAllRecords(IUserDataCallBack callBack) {\n         System.out.println(\"getAllRecords ++\");\n \n-        UserGetAllRecordsRequest getAllRecordsRequest = new UserGetAllRecordsRequest(IUserRequest.RequestType.REQUEST_GET_ALL, callBack);\n-        queue.add(getAllRecordsRequest);\n+        IUserRequest request = new UserGetAllRecordsRequest(IUserRequest.RequestType.REQUEST_GET_ALL, callBack);\n+        queue.add(request);\n \n         System.out.println(\"getAllRecords --\");\n-        return getAllRecordsRequest.getRequestID();\n+        return request;\n     }\n \n     @Override\n-    public void getCount(IUserDataCallBack callBack) {\n+    public IUserRequest getCount(IUserDataCallBack callBack) {\n         System.out.println(\"getCount ++\");\n \n-        UserGetRecordsCountRequest countRequest = new UserGetRecordsCountRequest(IUserRequest.RequestType.REQUEST_GET_COUNT, callBack);\n-        queue.add(countRequest);\n+        IUserRequest request = new UserGetRecordsCountRequest(IUserRequest.RequestType.REQUEST_GET_COUNT, callBack);\n+        queue.add(request);\n \n         System.out.println(\"getCount --\");\n+        return  request;\n \n     }\n \n     @Override\n-    public void deleteRecordByName(String name, IUserDataCallBack callBack) {\n+    public IUserRequest deleteRecordByName(String name, IUserDataCallBack callBack) {\n         System.out.println(\"deleteRecordByName ++\");\n \n-        UserDeleteRecordByNameRequest deleteRecordByNameRequest = new UserDeleteRecordByNameRequest(IUserRequest.RequestType.REQUEST_DELETE, callBack, name);\n-        queue.add(deleteRecordByNameRequest);\n+        IUserRequest request = new UserDeleteRecordByNameRequest(IUserRequest.RequestType.REQUEST_DELETE, callBack, name);\n+        queue.add(request);\n \n         System.out.println(\"deleteRecordByName --\");\n+        return  request;\n \n \n     }\n+\n+    @Override\n+    public void cancelRequest(IUserRequest userRequest) {\n+\n+        if(null != userRequest) {\n+            queue.remove(userRequest);\n+        }\n+        else {\n+            queue.clear();\n+        }\n+    }\n }"
  },
  {
    "sha": "b27223ba6c1da4f90b4bf0625f0afa8d80b07213",
    "filename": "app/src/main/java/com/secure/userdata/record/UserDataController.java",
    "status": "modified",
    "additions": 60,
    "deletions": 32,
    "changes": 92,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserDataController.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserDataController.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/UserDataController.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -2,64 +2,92 @@\n \n import android.content.Context;\n \n+import com.secure.userdata.record.requests.IUserRequest;\n+import com.secure.userdata.record.requests.UserAddRecordRequest;\n+import com.secure.userdata.record.requests.UserDeleteRecordByNameRequest;\n+import com.secure.userdata.record.requests.UserDeleteRecordByNameResponse;\n+import com.secure.userdata.record.requests.UserGetAllRecordsResponse;\n+import com.secure.userdata.record.requests.UserGetRecordsByNameResponse;\n+import com.secure.userdata.record.requests.UserGetRecordsCountRequest;\n+import com.secure.userdata.record.requests.UserGetRecordsCountResponse;\n+\n+import java.util.ArrayList;\n+import java.util.LinkedList;\n import java.util.List;\n \n public class UserDataController implements IUserDataCallBack{\n     private IUserData userData;\n \n+    private List<IUserRequest> list = new LinkedList<>();\n+\n     public UserDataController(Context context, RecordFactory.RecordStorageType recordStorageType){\n         userData = RecordFactory.getInstance(recordStorageType);\n         userData.init(context);\n     }\n \n+    public void cancelRequest(){\n+        userData.cancelRequest(null);\n+    }\n+\n     public void add(UserRecord record ) {\n-        userData.addRecord(record, this);\n+        IUserRequest userRequest = userData.addRecord(record, this);\n+        list.add(userRequest);\n     }\n \n     public void getAllRecords() {\n-        int requestID = userData.getAllRecords(this);\n-        System.out.println(\"getAllRecords requestID = \" + requestID);\n+        IUserRequest userRequest = userData.getAllRecords(this);\n+        list.add(userRequest);\n     }\n     public void deleteRecord(String name) {\n-        userData.deleteRecordByName(name, this);\n+        IUserRequest userRequest = userData.deleteRecordByName(name, this);\n+        list.add(userRequest);\n     }\n \n     public void getRecordsByName(String name){\n-        userData.getRecordByName(name, this);\n+        IUserRequest userRequest = userData.getRecordByName(name, this);\n+        list.add(userRequest);\n     }\n \n     public void getRecordsCount() {\n-        userData.getCount(this);\n+        IUserRequest userRequest = userData.getCount(this);\n+        list.add(userRequest);\n     }\n \n     @Override\n-    public void onAddRecordResult(Boolean result, String recordID) {\n-        System.out.println(\"onAddRecordResult result = \" + result + \", recordID = \" + recordID);\n-    }\n-\n-    @Override\n-    public void onGetAllRecordsResult(List<UserRecord> list, int requestID) {\n-        System.out.println(\"onGetAllRecordsResult \" + list );\n-\n-        System.out.println(\"onGetAllRecordsResult requestID = \" + requestID);\n-    }\n+    public void onResponse(IUserRequest userRequest) {\n+        System.out.println(\"response for = \" + userRequest.getRequestType());\n+        switch (userRequest.getRequestType()){\n+            case REQUEST_ADD:{\n \n-    @Override\n-    public void onDeleteRecordResult(int result) {\n-        System.out.println(\"onDeleteRecordResult \" + result );\n-\n-    }\n-\n-    @Override\n-    public void onGetRecordsCount(int count) {\n-        System.out.println(\"onGetRecordsCount \"  + count );\n-    }\n-\n-    @Override\n-    public void onGetRecordsByNameResult(List<UserRecord> list) {\n-        System.out.println(\"onGetRecordsByNameResult \" );\n-        for (UserRecord record: list ) {\n-            System.out.println(record);\n+                System.out.println(\"Record added : \" + userRequest.getResponse().isSuccess() + \" with id = \" + ((UserAddRecordRequest)userRequest).getUserRecord().id);\n+            }\n+            break;\n+            case REQUEST_DELETE:{\n+                UserDeleteRecordByNameResponse response = (UserDeleteRecordByNameResponse) userRequest.getResponse();\n+                System.out.println(response.getCount() + \" Records deleted with name \" + ((UserDeleteRecordByNameRequest)userRequest).getDeletedName() );\n+            }\n+            break;\n+            case REQUEST_GET_ALL:{\n+                UserGetAllRecordsResponse response = (UserGetAllRecordsResponse) userRequest.getResponse();\n+                List<UserRecord> list = response.getRecordList();\n+                for (UserRecord rec: list) {\n+                    System.out.println(rec);\n+                }\n+//                System.out.println(response.getRecordList());\n+            }\n+            break;\n+            case REQUEST_GET_BY_NAME:{\n+                UserGetRecordsByNameResponse response = (UserGetRecordsByNameResponse) userRequest.getResponse();\n+                List<UserRecord> list = new ArrayList<>();\n+                for (UserRecord rec: list) {\n+                    System.out.println(rec);\n+                }\n+            }\n+            break;\n+            case REQUEST_GET_COUNT:{\n+                UserGetRecordsCountResponse response = (UserGetRecordsCountResponse) userRequest.getResponse();\n+                System.out.println(response.getCount() + \" records present\" );\n+            }\n         }\n     }\n }"
  },
  {
    "sha": "572afe5da92f9fc1d1b8dfb0e39969e37607e0ba",
    "filename": "app/src/main/java/com/secure/userdata/record/UserDataFileImpl.java",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserDataFileImpl.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserDataFileImpl.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/UserDataFileImpl.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -4,7 +4,15 @@\n \n import org.json.JSONObject;\n \n-import java.io.*;\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.io.OutputStream;\n+import java.io.OutputStreamWriter;\n+import java.io.Writer;\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -47,6 +55,7 @@ void addRecordTo(UserRecord record) {\n             writer.close();\n             fileOutputStream.flush();\n             fileOutputStream.close();\n+            System.out.println(\"Add record : \" + record.toString());\n \n         } catch (Exception e) {\n             e.printStackTrace();"
  },
  {
    "sha": "d491434ecb11179cd293a520e9927112b56d2a35",
    "filename": "app/src/main/java/com/secure/userdata/record/UserDataLocalDBImpl.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserDataLocalDBImpl.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserDataLocalDBImpl.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/UserDataLocalDBImpl.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -27,6 +27,7 @@ void addRecordTo(UserRecord record) {\n         values.put(SQLiteWrapper.KEY_NAME , record.name);\n         values.put(SQLiteWrapper.KEY_TIME , record.time);\n         db.insert(SQLiteWrapper.TABLE_RECORDS,null, values);\n+        System.out.println(\"Add record : \" + record.toString());\n         db.close();\n \n     }"
  },
  {
    "sha": "470aeb23cf846786b503bb35e1f29c32bac973c5",
    "filename": "app/src/main/java/com/secure/userdata/record/UserDataNetDBImpl.java",
    "status": "modified",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserDataNetDBImpl.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserDataNetDBImpl.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/UserDataNetDBImpl.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -3,15 +3,11 @@\n import org.json.JSONArray;\n import org.json.JSONObject;\n \n-import java.io.BufferedOutputStream;\n import java.io.BufferedReader;\n-import java.io.BufferedWriter;\n import java.io.IOException;\n import java.io.InputStreamReader;\n-import java.io.OutputStream;\n import java.io.OutputStreamWriter;\n import java.net.HttpURLConnection;\n-import java.net.MalformedURLException;\n import java.net.URL;\n import java.util.ArrayList;\n import java.util.HashMap;"
  },
  {
    "sha": "5d52e2e1692c741445513d4ace1a7faae5c20d01",
    "filename": "app/src/main/java/com/secure/userdata/record/UserRecord.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserRecord.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/UserRecord.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/UserRecord.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -2,7 +2,6 @@\n \n import org.json.JSONObject;\n \n-import java.io.Serializable;\n import java.util.UUID;\n \n public class UserRecord {"
  },
  {
    "sha": "5ddd3dcbbaa74384977f82346a4680b9453802c3",
    "filename": "app/src/main/java/com/secure/userdata/record/requests/IUserRequest.java",
    "status": "modified",
    "additions": 7,
    "deletions": 2,
    "changes": 9,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/IUserRequest.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/IUserRequest.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/requests/IUserRequest.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -3,15 +3,20 @@\n import com.secure.userdata.record.IUserDataCallBack;\n \n public interface IUserRequest {\n-    public enum RequestType {\n+    enum RequestType {\n         REQUEST_ADD,\n         REQUEST_DELETE,\n         REQUEST_GET_BY_NAME,\n         REQUEST_GET_ALL,\n         REQUEST_GET_COUNT\n     }\n \n-    int getRequestID();\n+    Long getRequestID();\n     RequestType getRequestType();\n     IUserDataCallBack getCallback();\n+\n+    void setResponse(IUserResponse userResponse);\n+    IUserResponse getResponse();\n+\n+    void onComplete();\n }"
  },
  {
    "sha": "5caf652894c0b59b58d2fe07d62b74e9fe445007",
    "filename": "app/src/main/java/com/secure/userdata/record/requests/IUserResponse.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/IUserResponse.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/IUserResponse.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/requests/IUserResponse.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -0,0 +1,6 @@\n+package com.secure.userdata.record.requests;\n+\n+public interface IUserResponse {\n+\n+    boolean isSuccess();\n+}"
  },
  {
    "sha": "ff8fbb2f412689b1d69d7419ded93b6587eaa961",
    "filename": "app/src/main/java/com/secure/userdata/record/requests/UserAddRecordResponse.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserAddRecordResponse.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserAddRecordResponse.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/requests/UserAddRecordResponse.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -0,0 +1,9 @@\n+package com.secure.userdata.record.requests;\n+\n+public class UserAddRecordResponse extends UserBaseResponse {\n+\n+    public UserAddRecordResponse(boolean result) {\n+        super(result);\n+    }\n+\n+}"
  },
  {
    "sha": "665186552217f043b5adf661a896ab05ddb96dfa",
    "filename": "app/src/main/java/com/secure/userdata/record/requests/UserBaseRequest.java",
    "status": "modified",
    "additions": 20,
    "deletions": 5,
    "changes": 25,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserBaseRequest.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserBaseRequest.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/requests/UserBaseRequest.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -2,22 +2,22 @@\n \n import com.secure.userdata.record.IUserDataCallBack;\n \n-import java.util.Random;\n-\n public abstract class UserBaseRequest implements IUserRequest {\n \n-    private int requestID;\n+    private Long requestID;\n     private RequestType requestType;\n     private IUserDataCallBack callBack;\n \n+    private IUserResponse userResponse;\n+\n     public UserBaseRequest(RequestType requestType, IUserDataCallBack callBack) {\n-        requestID = new Random().nextInt();\n+        requestID = System.nanoTime();\n         this.requestType = requestType;\n         this.callBack = callBack;\n     }\n \n     @Override\n-    public int getRequestID() {\n+    public Long getRequestID() {\n         return requestID;\n     }\n \n@@ -30,4 +30,19 @@ public RequestType getRequestType() {\n     public IUserDataCallBack getCallback() {\n         return callBack;\n     }\n+\n+    @Override\n+    public void setResponse(IUserResponse userResponse) {\n+        this.userResponse = userResponse;\n+    }\n+\n+    @Override\n+    public IUserResponse getResponse() {\n+        return userResponse;\n+    }\n+\n+    @Override\n+    public void onComplete() {\n+        callBack.onResponse(this);\n+    }\n }"
  },
  {
    "sha": "948a572b5c0a7c6a7f1359b346b78373a80caee7",
    "filename": "app/src/main/java/com/secure/userdata/record/requests/UserBaseResponse.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserBaseResponse.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserBaseResponse.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/requests/UserBaseResponse.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -0,0 +1,15 @@\n+package com.secure.userdata.record.requests;\n+\n+public abstract class UserBaseResponse implements  IUserResponse {\n+\n+    private boolean result;\n+\n+    public UserBaseResponse(boolean result) {\n+        this.result = result;\n+    }\n+\n+    @Override\n+    public boolean isSuccess() {\n+        return result;\n+    }\n+}"
  },
  {
    "sha": "5a0613cc0609f6014a6b73a4fa354f6eaf633eec",
    "filename": "app/src/main/java/com/secure/userdata/record/requests/UserDeleteRecordByNameResponse.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserDeleteRecordByNameResponse.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserDeleteRecordByNameResponse.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/requests/UserDeleteRecordByNameResponse.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -0,0 +1,15 @@\n+package com.secure.userdata.record.requests;\n+\n+public class UserDeleteRecordByNameResponse extends UserBaseResponse {\n+    private int count;\n+\n+    public UserDeleteRecordByNameResponse(boolean result, int count) {\n+        super(result);\n+        this.count = count;\n+    }\n+\n+    public int getCount(){\n+        return count;\n+    }\n+\n+}"
  },
  {
    "sha": "6a22c997a97f7dacd88f4df5607535bc7f1f25dc",
    "filename": "app/src/main/java/com/secure/userdata/record/requests/UserGetAllRecordsResponse.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserGetAllRecordsResponse.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserGetAllRecordsResponse.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/requests/UserGetAllRecordsResponse.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -0,0 +1,18 @@\n+package com.secure.userdata.record.requests;\n+\n+import com.secure.userdata.record.UserRecord;\n+\n+import java.util.List;\n+\n+public class UserGetAllRecordsResponse extends  UserBaseResponse{\n+\n+    private List<UserRecord> list;\n+    public UserGetAllRecordsResponse(boolean result, List<UserRecord> list) {\n+        super(result);\n+        this.list = list;\n+    }\n+\n+    public List<UserRecord> getRecordList(){\n+        return list;\n+    }\n+}"
  },
  {
    "sha": "6b417057fd17e8b9316cf6be98e8e874818035eb",
    "filename": "app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsByNameRequest.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsByNameRequest.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsByNameRequest.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsByNameRequest.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -2,11 +2,11 @@\n \n import com.secure.userdata.record.IUserDataCallBack;\n \n-public class UserGetRecordsByName extends UserBaseRequest {\n+public class UserGetRecordsByNameRequest extends UserBaseRequest {\n \n     private String searchName;\n \n-    public UserGetRecordsByName(RequestType requestType, IUserDataCallBack callBack, String searchName) {\n+    public UserGetRecordsByNameRequest(RequestType requestType, IUserDataCallBack callBack, String searchName) {\n         super(requestType, callBack);\n         this.searchName = searchName;\n     }",
    "previous_filename": "app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsByName.java"
  },
  {
    "sha": "b1843ce6650dc0a49db851c9f4d4bd7738c0b8e4",
    "filename": "app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsByNameResponse.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsByNameResponse.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsByNameResponse.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsByNameResponse.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -0,0 +1,18 @@\n+package com.secure.userdata.record.requests;\n+\n+import com.secure.userdata.record.UserRecord;\n+\n+import java.util.List;\n+\n+public class UserGetRecordsByNameResponse extends UserBaseResponse{\n+    private List<UserRecord> list;\n+\n+    public UserGetRecordsByNameResponse(boolean result, List<UserRecord> list) {\n+        super(result);\n+        this.list = list;\n+    }\n+\n+    public List<UserRecord> getRecordList() {\n+        return list;\n+    }\n+}"
  },
  {
    "sha": "c51b1627ae72514c64dc7aee16e5db7fabc29468",
    "filename": "app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsCountResponse.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsCountResponse.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsCountResponse.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/main/java/com/secure/userdata/record/requests/UserGetRecordsCountResponse.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -0,0 +1,14 @@\n+package com.secure.userdata.record.requests;\n+\n+public class UserGetRecordsCountResponse extends UserBaseResponse {\n+    private int count;\n+\n+    public UserGetRecordsCountResponse(boolean result, int count) {\n+        super(result);\n+        this.count = count;\n+    }\n+\n+    public int getCount(){\n+        return count;\n+    }\n+}"
  },
  {
    "sha": "31d5ec8c058e2fe6ded53aced1cb7bdd2868a9f4",
    "filename": "app/src/test/java/com/secure/userdata/ExampleUnitTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/suzane23/user-record/blob/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/test/java/com/secure/userdata/ExampleUnitTest.java",
    "raw_url": "https://github.com/suzane23/user-record/raw/8cc6558e0cf778071d3ba7c2beb446b53983e175/app/src/test/java/com/secure/userdata/ExampleUnitTest.java",
    "contents_url": "https://api.github.com/repos/suzane23/user-record/contents/app/src/test/java/com/secure/userdata/ExampleUnitTest.java?ref=8cc6558e0cf778071d3ba7c2beb446b53983e175",
    "patch": "@@ -2,7 +2,7 @@\n \n import org.junit.Test;\n \n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n \n /**\n  * Example local unit test, which will execute on the development machine (host)."
  }
]
