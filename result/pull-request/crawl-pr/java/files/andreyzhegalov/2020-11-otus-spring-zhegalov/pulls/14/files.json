[
  {
    "sha": "a518a62084e73bee9af0bfc89f12a5e18fe460f5",
    "filename": "README.md",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/README.md",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/README.md",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/README.md?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -32,6 +32,7 @@\n 11. *hw11-web-ui-part3* - CRUD приложение с использованием WebFlux.\n 12. *hw12-spring-security-part1* - CRUD Web-приложение с механизмом аутентификации.\n 13. *hw13-spring-security-part2* - CRUD Web-приложение с механизмом авторизации.\n+14. *hw14-spring-batch* - Приложение для миграции данных из реляционного хранилища в NoSQL на основе Spring Batch.\n \n ##### License\n "
  },
  {
    "sha": "5d583496a60cb9fa9062bd316b9f4de485c5ab08",
    "filename": "hw14-spring-batch/README.md",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/README.md",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/README.md",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/README.md?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,29 @@\n+# Приложение для миграции данных из реляционного хранилища в NoSQL на основе Spring Batch\n+\n+## Описание\n+\n+### Цель\n+\n+Мигрировать данные с помощью Spring Batch.\n+\n+#### Результат\n+\n+Приложение для пакетных обработок данных на Spring Batch.\n+\n+#### Требования\n+\n+1. Задание может быть выполнено в отдельном репозитории, с сущностями из ДЗ JPA и MongoDB.\n+2. Можно другую доменную модель\n+3. Не обязательно добавлять процесс миграции в веб-приложение. Приложение может быть оформлено в виде отдельной утилиты.\n+4. Используя Spring Batch, следите, чтобы связи сущностей сохранились.\n+5. Опционально: Сделать restart задачи с помощью Spring Shell.\n+\n+**Примечание**\n+При запуске приложения в MongoDb создается и заполняется база test_batch_zhegalov.\n+\n+Для удаления необходимо выполнить\n+\n+````shell\n+use test_batch_zhegalov\n+db.dropDatabase()\n+````"
  },
  {
    "sha": "652ab1b6791d49c5786fad7ff5f07079d46e1ed1",
    "filename": "hw14-spring-batch/pom.xml",
    "status": "added",
    "additions": 183,
    "deletions": 0,
    "changes": 183,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/pom.xml",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/pom.xml",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/pom.xml?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,183 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>hw14-spring-batch</artifactId>\n+    <version>1.0</version>\n+\n+    <parent>\n+        <groupId>ru.otus.hw</groupId>\n+        <artifactId>otus-spring-hw</artifactId>\n+        <version>1.0</version>\n+    </parent>\n+\n+    <properties>\n+        <spring.shell.version>2.0.1.RELEASE</spring.shell.version>\n+    </properties>\n+\n+    <packaging>jar</packaging>\n+\n+    <dependencies>\n+\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-data-jpa</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-data-mongodb</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-batch</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework.shell</groupId>\n+            <artifactId>spring-shell-starter</artifactId>\n+            <version>${spring.shell.version}</version>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>de.flapdoodle.embed</groupId>\n+            <artifactId>de.flapdoodle.embed.mongo</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- for h2 console -->\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+            <version>2.1.8.RELEASE</version>\n+        </dependency>\n+\n+\n+        <dependency>\n+            <groupId>org.flywaydb</groupId>\n+            <artifactId>flyway-core</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-engine</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework.batch</groupId>\n+            <artifactId>spring-batch-test</artifactId>\n+            <scope>test</scope>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>org.junit.vintage</groupId>\n+                    <artifactId>junit-vintage-engine</artifactId>\n+                </exclusion>\n+                <exclusion>\n+                    <groupId>junit</groupId>\n+                    <artifactId>junit</artifactId>\n+                </exclusion>\n+            </exclusions>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-test</artifactId>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>org.junit.vintage</groupId>\n+                    <artifactId>junit-vintage-engine</artifactId>\n+                </exclusion>\n+                <exclusion>\n+                    <groupId>junit</groupId>\n+                    <artifactId>junit</artifactId>\n+                </exclusion>\n+            </exclusions>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.jetbrains</groupId>\n+            <artifactId>annotations</artifactId>\n+            <version>20.1.0</version>\n+        </dependency>\n+\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>prepare-agent</goal>\n+                        </goals>\n+                    </execution>\n+                    <execution>\n+                        <id>report</id>\n+                        <phase>test</phase>\n+                        <goals>\n+                            <goal>report</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+                <configuration>\n+                    <trimStackTrace>false</trimStackTrace>\n+                </configuration>\n+            </plugin>\n+\n+            <plugin>\n+                <artifactId>maven-enforcer-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>enforce-maven</id>\n+                        <goals>\n+                            <goal>enforce</goal>\n+                        </goals>\n+                        <configuration>\n+                            <configuration>\n+                                <runOrder>random</runOrder>\n+                            </configuration>\n+                            <rules>\n+                                <dependencyConvergence />\n+                                <requireMavenVersion>\n+                                    <version>${minimal.maven.version}</version>\n+                                </requireMavenVersion>\n+                            </rules>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+        </plugins>\n+    </build>\n+\n+</project>"
  },
  {
    "sha": "50403404c827ffb14a7291a6cd3e8c5e07da5542",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/Main.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/Main.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/Main.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/Main.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.spring.hw;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class Main {\n+    public static void main(String[] args) {\n+        SpringApplication.run(Main.class, args);\n+    }\n+}"
  },
  {
    "sha": "fdb7709bb15c81941179f74bf1ea8eb3f1ed5ec0",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/config/AppProps.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/config/AppProps.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/config/AppProps.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/config/AppProps.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.otus.spring.hw.config;\n+\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+@Getter\n+@Setter\n+@Component\n+@ConfigurationProperties(value = \"app\")\n+public class AppProps {\n+    private String collectionName;\n+}"
  },
  {
    "sha": "9d717d4e04aafba1af48ad5a74989d848fb87655",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/config/JobConfig.java",
    "status": "added",
    "additions": 89,
    "deletions": 0,
    "changes": 89,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/config/JobConfig.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/config/JobConfig.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/config/JobConfig.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,89 @@\n+package ru.otus.spring.hw.config;\n+\n+import java.util.ArrayList;\n+\n+import javax.sql.DataSource;\n+\n+import org.bson.types.ObjectId;\n+import org.springframework.batch.core.Job;\n+import org.springframework.batch.core.Step;\n+import org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;\n+import org.springframework.batch.core.configuration.annotation.JobBuilderFactory;\n+import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;\n+import org.springframework.batch.item.ItemProcessor;\n+import org.springframework.batch.item.ItemReader;\n+import org.springframework.batch.item.ItemWriter;\n+import org.springframework.batch.item.data.MongoItemWriter;\n+import org.springframework.batch.item.data.builder.MongoItemWriterBuilder;\n+import org.springframework.batch.item.database.JdbcCursorItemReader;\n+import org.springframework.batch.item.database.builder.JdbcCursorItemReaderBuilder;\n+import org.springframework.batch.item.support.CompositeItemProcessor;\n+import org.springframework.batch.repeat.RepeatStatus;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.data.mongodb.core.MongoTemplate;\n+\n+import ru.otus.spring.hw.converters.BookConverter;\n+import ru.otus.spring.hw.dao.mappers.BookMapper;\n+import ru.otus.spring.hw.model.Book;\n+import ru.otus.spring.hw.service.BookService;\n+\n+@Configuration\n+@EnableBatchProcessing\n+public class JobConfig {\n+    private static final String SQL_SELECT_ALL_BOOKS = \"select books.id as book_id, title, genres.id as genre_id, genres.name as genre_name from \"\n+            + \" books left join genres on books.genre_id=genres.id\";\n+    @Autowired\n+    private StepBuilderFactory stepBuilderFactory;\n+\n+    @Autowired\n+    private JobBuilderFactory jobBuilderFactory;\n+\n+    @Autowired\n+    private AppProps appProps;\n+\n+    @Bean\n+    public JdbcCursorItemReader<Book<Long>> bookReader(DataSource dataSource) {\n+        return new JdbcCursorItemReaderBuilder<Book<Long>>().name(\"bookItemReader\").dataSource(dataSource)\n+                .sql(SQL_SELECT_ALL_BOOKS).rowMapper(new BookMapper()).build();\n+    }\n+\n+    @Bean\n+    public CompositeItemProcessor<Book<Long>, Book<ObjectId>> compositeProcessor(BookService bookService) {\n+        final var compositeProcessor = new CompositeItemProcessor<Book<Long>, Book<ObjectId>>();\n+        final var itemProcessors = new ArrayList<ItemProcessor<?, ?>>();\n+        itemProcessors.add((ItemProcessor<Book<Long>, Book<Long>>) bookService::addAuthorsToBook);\n+        itemProcessors.add((ItemProcessor<Book<Long>, Book<ObjectId>>) BookConverter::convertId);\n+        compositeProcessor.setDelegates(itemProcessors);\n+        return compositeProcessor;\n+    }\n+\n+    @Bean\n+    public MongoItemWriter<Book<ObjectId>> writer(MongoTemplate mongoTemplate) {\n+        return new MongoItemWriterBuilder<Book<ObjectId>>().collection(appProps.getCollectionName())\n+                .template(mongoTemplate).build();\n+    }\n+\n+    @Bean\n+    public Job makeMigrationJob(@Qualifier(\"migrationBookStep\") Step migrationBookStep,\n+            @Qualifier(\"dropCollectionStep\") Step dropCollectionStep) {\n+        return jobBuilderFactory.get(\"migrationJob\").start(dropCollectionStep).next(migrationBookStep).build();\n+    }\n+\n+    @Bean\n+    public Step migrationBookStep(ItemReader<Book<Long>> bookReader, ItemWriter<Book<ObjectId>> bookWriter,\n+            CompositeItemProcessor<Book<Long>, Book<ObjectId>> compositeProcessor) {\n+        return stepBuilderFactory.get(\"migrationBookStep\").<Book<Long>, Book<ObjectId>>chunk(8).reader(bookReader)\n+                .processor(compositeProcessor).writer(bookWriter).allowStartIfComplete(true).build();\n+    }\n+\n+    @Bean\n+    public Step dropCollectionStep(MongoTemplate mongoTemplate) {\n+        return stepBuilderFactory.get(\"dropCollectionStep\").tasklet((stepContribution, chunkContext) -> {\n+            mongoTemplate.dropCollection(appProps.getCollectionName());\n+            return RepeatStatus.FINISHED;\n+        }).allowStartIfComplete(true).build();\n+    }\n+}"
  },
  {
    "sha": "6d04ad2016eed8513736baf69340e68766dcc075",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/AuthorConverter.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/AuthorConverter.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/AuthorConverter.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/AuthorConverter.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.otus.spring.hw.converters;\n+\n+import org.bson.types.ObjectId;\n+\n+import ru.otus.spring.hw.model.Author;\n+\n+public class AuthorConverter {\n+\n+    public static Author<ObjectId> convertId(Author<Long> init) {\n+        final var converted = new Author<ObjectId>();\n+        converted.setId(new ObjectId());\n+        converted.setName(init.getName());\n+        return converted;\n+    }\n+}"
  },
  {
    "sha": "ddb4e2a75fff086c95695b5723e5d6770e4bde97",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/BookConverter.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/BookConverter.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/BookConverter.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/BookConverter.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,25 @@\n+package ru.otus.spring.hw.converters;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.bson.types.ObjectId;\n+\n+import ru.otus.spring.hw.model.Author;\n+import ru.otus.spring.hw.model.Book;\n+\n+public class BookConverter {\n+\n+    public static Book<ObjectId> convertId(Book<Long> book) {\n+        final var convertedBook = new Book<ObjectId>();\n+        convertedBook.setId(new ObjectId());\n+        convertedBook.setTitle(book.getTitle());\n+        convertedBook.setGenre(GenreConverter.convertId(book.getGenre()));\n+        convertedBook.setAuthors(convertAuthorsId(book.getAuthors()));\n+        return convertedBook;\n+    }\n+\n+    private static List<Author<ObjectId>> convertAuthorsId(List<Author<Long>> authorList) {\n+        return authorList.stream().map(AuthorConverter::convertId).collect(Collectors.toList());\n+    }\n+}"
  },
  {
    "sha": "8c246c7f80609e4c80b4b7b628752323baaab678",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/GenreConverter.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/GenreConverter.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/GenreConverter.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/converters/GenreConverter.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.otus.spring.hw.converters;\n+\n+import org.bson.types.ObjectId;\n+\n+import ru.otus.spring.hw.model.Genre;\n+\n+public class GenreConverter {\n+\n+    public static Genre<ObjectId> convertId(Genre<Long> init) {\n+        final var converted = new Genre<ObjectId>();\n+        converted.setId(new ObjectId());\n+        converted.setName(init.getName());\n+        return converted;\n+    }\n+}"
  },
  {
    "sha": "f04ab3c01ffdf354589d82d1b5e4e4068aa6101c",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/dao/AuthorRepositoryJdbc.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/dao/AuthorRepositoryJdbc.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/dao/AuthorRepositoryJdbc.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/dao/AuthorRepositoryJdbc.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,41 @@\n+package ru.otus.spring.hw.dao;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations;\n+import org.springframework.stereotype.Component;\n+\n+import ru.otus.spring.hw.model.Author;\n+\n+@Component\n+public class AuthorRepositoryJdbc {\n+    private final static String SELECT_AUTHOR_WITH_BOOK_ID = \"select id, name, ba.book_id as book_id from authors as a \"\n+            + \" right join book_author as ba where a.id = ba.author_id\";\n+\n+    private final Map<Long, List<Author<Long>>> authorByBookIdMap = new HashMap<>();\n+\n+    public AuthorRepositoryJdbc(NamedParameterJdbcOperations namedParameterJdbcOperations) {\n+        namedParameterJdbcOperations.query(SELECT_AUTHOR_WITH_BOOK_ID, (rs, row) -> {\n+            final var id = rs.getLong(\"id\");\n+            final var name = rs.getNString(\"name\");\n+            final var bookId = rs.getLong(\"book_id\");\n+\n+            final var author = new Author<Long>();\n+            author.setId(id);\n+            author.setName(name);\n+\n+            var authorList = authorByBookIdMap.computeIfAbsent(bookId, k -> new ArrayList<>());\n+            authorList.add(author);\n+            return null;\n+        });\n+    }\n+\n+    public List<Author<Long>> getByBookId(long bookId) {\n+        final var authorList = authorByBookIdMap.get(bookId);\n+        return authorList == null ? Collections.emptyList() : authorList;\n+    }\n+}"
  },
  {
    "sha": "2b928533ecc878b79b3aa67d2eb7c1efdb104abc",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/dao/mappers/BookMapper.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/dao/mappers/BookMapper.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/dao/mappers/BookMapper.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/dao/mappers/BookMapper.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,29 @@\n+package ru.otus.spring.hw.dao.mappers;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import org.springframework.jdbc.core.RowMapper;\n+\n+import ru.otus.spring.hw.model.Book;\n+import ru.otus.spring.hw.model.Genre;\n+\n+public class BookMapper implements RowMapper<Book<Long>> {\n+    @Override\n+    public Book<Long> mapRow(ResultSet rs, int rowNum) throws SQLException {\n+        final long bookId = rs.getLong(\"id\");\n+        final String title = rs.getNString(\"title\");\n+        final var book = new Book<Long>();\n+        book.setId(bookId);\n+        book.setTitle(title);\n+\n+        final long genreId = rs.getLong(\"genre_id\");\n+        final String genreName = rs.getNString(\"genre_name\");\n+        final var genre = new Genre<Long>();\n+        genre.setId(genreId);\n+        genre.setName(genreName);\n+        book.setGenre(genre);\n+\n+        return book;\n+    }\n+}"
  },
  {
    "sha": "8c22023acb9a4a588f2ee8db3bf1cb68a831fcce",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Author.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Author.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Author.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Author.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.spring.hw.model;\n+\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+\n+@Getter\n+@Setter\n+@NoArgsConstructor\n+public class Author<T> {\n+    private T id;\n+    private String name;\n+}"
  },
  {
    "sha": "32a21391b57953c4371305ca7ae9b366e96b4417",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Book.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Book.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Book.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Book.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,18 @@\n+package ru.otus.spring.hw.model;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+\n+@Getter\n+@Setter\n+@NoArgsConstructor\n+public class Book<T> {\n+    private T id;\n+    private String title;\n+    private List<Author<T>> authors = new ArrayList<>();\n+    private Genre<T> genre;\n+}"
  },
  {
    "sha": "8a9746ad38c8480368581934f893a990edec93d2",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Genre.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Genre.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Genre.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/model/Genre.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.spring.hw.model;\n+\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+\n+@Getter\n+@Setter\n+@NoArgsConstructor\n+public class Genre<T> {\n+    private T id;\n+    private String name;\n+}"
  },
  {
    "sha": "80d4a7da5a3b0aa56afc34f410dd685db95c08fd",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/service/BookService.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/service/BookService.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/service/BookService.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/service/BookService.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.otus.spring.hw.service;\n+\n+import org.springframework.stereotype.Service;\n+\n+import lombok.RequiredArgsConstructor;\n+import ru.otus.spring.hw.dao.AuthorRepositoryJdbc;\n+import ru.otus.spring.hw.model.Book;\n+\n+@RequiredArgsConstructor\n+@Service\n+public class BookService {\n+\n+    private final AuthorRepositoryJdbc authorRepository;\n+\n+    public Book<Long> addAuthorsToBook(Book<Long> initBook) {\n+        final var authorList = authorRepository.getByBookId(initBook.getId());\n+        initBook.setAuthors(authorList);\n+        return initBook;\n+    }\n+}"
  },
  {
    "sha": "b5cf185156fa44c5bcc7428589f9e6fa08426fc7",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/service/JobService.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/service/JobService.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/service/JobService.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/service/JobService.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,23 @@\n+package ru.otus.spring.hw.service;\n+\n+import org.springframework.batch.core.BatchStatus;\n+import org.springframework.batch.core.JobParameters;\n+import org.springframework.batch.core.repository.JobRepository;\n+import org.springframework.stereotype.Service;\n+\n+import lombok.RequiredArgsConstructor;\n+\n+@RequiredArgsConstructor\n+@Service\n+public class JobService {\n+    private final JobRepository jobRepository;\n+\n+    public void allowStartJobIfComplete(String jobName, JobParameters parameters) {\n+        final var repositoryJobExecution = jobRepository.getLastJobExecution(jobName, parameters);\n+        if (repositoryJobExecution == null) {\n+            return;\n+        }\n+        repositoryJobExecution.setStatus(BatchStatus.STOPPED);\n+        jobRepository.update(repositoryJobExecution);\n+    }\n+}"
  },
  {
    "sha": "6050602ad00614beb0bcdbd9b1cac9f013e38b8f",
    "filename": "hw14-spring-batch/src/main/java/ru/otus/spring/hw/shell/ApplicationCommands.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/shell/ApplicationCommands.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/java/ru/otus/spring/hw/shell/ApplicationCommands.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/java/ru/otus/spring/hw/shell/ApplicationCommands.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,43 @@\n+package ru.otus.spring.hw.shell;\n+\n+import org.springframework.batch.core.Job;\n+import org.springframework.batch.core.JobParametersBuilder;\n+import org.springframework.batch.core.launch.JobLauncher;\n+import org.springframework.data.mongodb.core.MongoTemplate;\n+import org.springframework.shell.standard.ShellComponent;\n+import org.springframework.shell.standard.ShellMethod;\n+import org.springframework.shell.standard.ShellOption;\n+\n+import lombok.RequiredArgsConstructor;\n+import ru.otus.spring.hw.config.AppProps;\n+import ru.otus.spring.hw.service.JobService;\n+\n+@RequiredArgsConstructor\n+@ShellComponent\n+public class ApplicationCommands {\n+    private static final String JOB_NAME = \"migrationJob\";\n+\n+    private final JobLauncher jobLauncher;\n+    private final Job migrationJob;\n+    private final AppProps appProps;\n+    private final MongoTemplate mongoTemplate;\n+    private final JobService jobService;\n+\n+    @ShellMethod(value = \"startMigration\", key = { \"sm\", \"start-migration\" })\n+    public void startMigration(@ShellOption String message) throws Exception {\n+        final var parameters = new JobParametersBuilder().addString(\"message\", message).toJobParameters();\n+        jobService.allowStartJobIfComplete(JOB_NAME, parameters);\n+        final var execution = jobLauncher.run(migrationJob, parameters);\n+        System.out.println(execution);\n+    }\n+\n+    @ShellMethod(value = \"printCollection\", key = { \"pc\", \"print-collection\" })\n+    public void printCollection() throws Exception {\n+        mongoTemplate.getCollection(appProps.getCollectionName()).find().forEach(System.out::println);\n+    }\n+\n+    @ShellMethod(value = \"dropCollection\", key = { \"dc\", \"drop-collection\" })\n+    public void dropCollection() {\n+        mongoTemplate.dropCollection(appProps.getCollectionName());\n+    }\n+}"
  },
  {
    "sha": "1ee2a13d21eafd70952ee2c3df998370b29aceb2",
    "filename": "hw14-spring-batch/src/main/resources/application.yml",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/application.yml",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/resources/application.yml?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,39 @@\n+app:\n+    collection-name: app_books\n+\n+spring:\n+  datasource:\n+    url: jdbc:h2:mem:testdb\n+    driverClassName: org.h2.Driver\n+    username: sa\n+    password:\n+\n+  batch:\n+    job:\n+      enabled: false\n+\n+  shell:\n+    interactive:\n+      enabled: true\n+\n+  h2:\n+    console:\n+      enabled: true\n+      path: /h2-console\n+      settings:\n+        web-allow-others: true\n+\n+  flyway:\n+    enabled: true\n+\n+  data:\n+    mongodb:\n+      database: test_batch_zhegalov\n+      uri: mongodb://localhost\n+\n+server:\n+    port: 8083\n+\n+logging:\n+  level:\n+    ROOT: INFO"
  },
  {
    "sha": "a7c2a48ad32872625cc3d4bcf0d962b4980cf6a8",
    "filename": "hw14-spring-batch/src/main/resources/db/migration/1.0/V1_1__2020_12_20_Add_books_table.sql",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_1__2020_12_20_Add_books_table.sql",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_1__2020_12_20_Add_books_table.sql",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_1__2020_12_20_Add_books_table.sql?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,8 @@\n+--date: 2020-12-20\n+--author: andrey\n+\n+create table books (\n+    id bigint not null auto_increment,\n+    title varchar(255),\n+    primary key (id)\n+);"
  },
  {
    "sha": "e6cb63c2b132f46421bc34a250653743e4fc35e1",
    "filename": "hw14-spring-batch/src/main/resources/db/migration/1.0/V1_2__2020_12_21_Add_authors_table.sql",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_2__2020_12_21_Add_authors_table.sql",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_2__2020_12_21_Add_authors_table.sql",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_2__2020_12_21_Add_authors_table.sql?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,8 @@\n+--date: 2020-12-21\n+--author: andrey\n+\n+create table authors (\n+    id bigint not null auto_increment,\n+    name varchar(255),\n+    primary key (id)\n+);"
  },
  {
    "sha": "80ed8ecf84114416d4d86de8c7946dd01fed028e",
    "filename": "hw14-spring-batch/src/main/resources/db/migration/1.0/V1_3__2020_12_21_Add_reference_from_book_to_author.sql",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_3__2020_12_21_Add_reference_from_book_to_author.sql",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_3__2020_12_21_Add_reference_from_book_to_author.sql",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_3__2020_12_21_Add_reference_from_book_to_author.sql?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,5 @@\n+--date: 2020-12-22\n+--author: andrey\n+\n+alter table books\n+add column author_id bigint references authors(id) ON DELETE SET NULL;"
  },
  {
    "sha": "4db51988e5f47a438f2b7aff7837aa93dac80d23",
    "filename": "hw14-spring-batch/src/main/resources/db/migration/1.0/V1_4__2020_12_21_Add_genres_table.sql",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_4__2020_12_21_Add_genres_table.sql",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_4__2020_12_21_Add_genres_table.sql",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/resources/db/migration/1.0/V1_4__2020_12_21_Add_genres_table.sql?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,11 @@\n+--date: 2020-12-22\n+--author: andrey\n+\n+create table genres (\n+    id bigint not null auto_increment,\n+    name varchar(255),\n+    primary key (id)\n+);\n+\n+alter table books\n+add column genre_id bigint references genres(id) ON DELETE SET NULL;"
  },
  {
    "sha": "c92ad7d94af7c3d38da3cc235bf8c68a8c710915",
    "filename": "hw14-spring-batch/src/main/resources/db/migration/2.0/V2_1__2020_12_30_Add_author_book_table.sql",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/2.0/V2_1__2020_12_30_Add_author_book_table.sql",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/2.0/V2_1__2020_12_30_Add_author_book_table.sql",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/resources/db/migration/2.0/V2_1__2020_12_30_Add_author_book_table.sql?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,11 @@\n+--date: 2020-12-30\n+--author: andrey\n+\n+create table book_author(\n+    book_id bigint not null references books(id),\n+    author_id bigint not null references authors(id) on delete cascade,\n+    primary key (book_id, author_id)\n+);\n+\n+alter table books\n+drop column author_id;"
  },
  {
    "sha": "a0a48aa4169577be55170f8154c3ba0e022f2fa9",
    "filename": "hw14-spring-batch/src/main/resources/db/migration/data/R__0001_Add_books.sql",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/data/R__0001_Add_books.sql",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/data/R__0001_Add_books.sql",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/resources/db/migration/data/R__0001_Add_books.sql?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,4 @@\n+insert into books(id, title)\n+values (1, 'book1'),\n+       (2, 'book2'),\n+       (3, 'book3')"
  },
  {
    "sha": "4f74f4b05717bf2f1a19c13892d39fdfd3026332",
    "filename": "hw14-spring-batch/src/main/resources/db/migration/data/R__0002_Add_authors.sql",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/data/R__0002_Add_authors.sql",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/data/R__0002_Add_authors.sql",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/resources/db/migration/data/R__0002_Add_authors.sql?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,5 @@\n+insert into authors(id, name)\n+values (1, 'name1'),\n+       (2, 'name2'),\n+       (3, 'name3'),\n+       (4, 'name4')"
  },
  {
    "sha": "355cdce9678a6e6b07601c3e2e01b408ba5e7b41",
    "filename": "hw14-spring-batch/src/main/resources/db/migration/data/R__0004_Add_genres.sql",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/data/R__0004_Add_genres.sql",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/data/R__0004_Add_genres.sql",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/resources/db/migration/data/R__0004_Add_genres.sql?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,7 @@\n+insert into genres(id, name)\n+values (1, 'genre1'),\n+       (2, 'genre2');\n+\n+update books set genre_id=2 where id=1;\n+update books set genre_id=1 where id=2;\n+update books set genre_id=1 where id=3"
  },
  {
    "sha": "4106024887d5102e4a855701853ae667f77c5f82",
    "filename": "hw14-spring-batch/src/main/resources/db/migration/data/R__0005_Add_author_book_reference.sql",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/data/R__0005_Add_author_book_reference.sql",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/main/resources/db/migration/data/R__0005_Add_author_book_reference.sql",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/main/resources/db/migration/data/R__0005_Add_author_book_reference.sql?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,6 @@\n+insert into book_author (book_id, author_id)\n+\n+values(1,2),\n+      (1,3),\n+      (2,1),\n+      (3,1)"
  },
  {
    "sha": "3b0437cdb3672dc44152b1a1919e4480ff5a91c8",
    "filename": "hw14-spring-batch/src/test/java/ru/otus/spring/hw/config/JobConfigTest.java",
    "status": "added",
    "additions": 139,
    "deletions": 0,
    "changes": 139,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/test/java/ru/otus/spring/hw/config/JobConfigTest.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/test/java/ru/otus/spring/hw/config/JobConfigTest.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/test/java/ru/otus/spring/hw/config/JobConfigTest.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,139 @@\n+package ru.otus.spring.hw.config;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+\n+import org.bson.types.ObjectId;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.Test;\n+import org.springframework.batch.core.ExitStatus;\n+import org.springframework.batch.core.JobParameters;\n+import org.springframework.batch.core.JobParametersBuilder;\n+import org.springframework.batch.item.data.MongoItemWriter;\n+import org.springframework.batch.item.database.JdbcCursorItemReader;\n+import org.springframework.batch.test.JobLauncherTestUtils;\n+import org.springframework.batch.test.MetaDataInstanceFactory;\n+import org.springframework.batch.test.StepScopeTestUtils;\n+import org.springframework.batch.test.context.SpringBatchTest;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.data.mongo.AutoConfigureDataMongo;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.data.mongodb.core.MongoTemplate;\n+\n+import ru.otus.spring.hw.model.Book;\n+\n+@AutoConfigureDataMongo\n+@SpringBootTest\n+@SpringBatchTest\n+public class JobConfigTest {\n+\n+    @Autowired\n+    private JobLauncherTestUtils jobLauncherTestUtils;\n+\n+    @Autowired\n+    private JdbcCursorItemReader<Book<Long>> itemReader;\n+\n+    @Autowired\n+    private MongoItemWriter<Book<ObjectId>> itemWriter;\n+\n+    @Autowired\n+    private MongoTemplate mongoTemplate;\n+\n+    @Autowired\n+    private AppProps appProps;\n+\n+    private JobParameters defaultJobParameters() {\n+        JobParametersBuilder paramsBuilder = new JobParametersBuilder();\n+        return paramsBuilder.toJobParameters();\n+    }\n+\n+    @AfterEach\n+    void tearDown() {\n+        mongoTemplate.dropCollection(appProps.getCollectionName());\n+    }\n+\n+    @Test\n+    void bookItemReaderShouldReadAllBookFromDataBase() throws Exception {\n+        final var stepExecution = MetaDataInstanceFactory.createStepExecution(defaultJobParameters());\n+        final var bookList = new ArrayList<Book<Long>>();\n+\n+        StepScopeTestUtils.doInStepScope(stepExecution, () -> {\n+            itemReader.open(stepExecution.getExecutionContext());\n+            while (true) {\n+                Book<Long> book = itemReader.read();\n+                if (book == null) {\n+                    itemReader.close();\n+                    break;\n+                }\n+                bookList.add(book);\n+            }\n+            return null;\n+        });\n+\n+        final var book = bookList.get(0);\n+        assertThat(bookList).hasSize(2);\n+        assertThat(book.getId()).isNotNull().isNotZero();\n+        assertThat(book.getGenre()).isNotNull();\n+        assertThat(book.getGenre().getName()).isNotBlank();\n+        assertThat(book.getAuthors()).isEmpty();\n+    }\n+\n+    @Test\n+    void theBookMustBeWrittenInMongo() throws Exception {\n+        assertThat(mongoTemplate.findAll(Book.class, appProps.getCollectionName())).isEmpty();\n+        final var book = new Book<ObjectId>();\n+        book.setId(new ObjectId());\n+        book.setTitle(\"book1\");\n+\n+        final var stepExecution = MetaDataInstanceFactory.createStepExecution(defaultJobParameters());\n+        StepScopeTestUtils.doInStepScope(stepExecution, () -> {\n+            itemWriter.write(Collections.singletonList(book));\n+            return null;\n+        });\n+\n+        assertThat(mongoTemplate.findAll(Book.class, appProps.getCollectionName())).hasSize(1);\n+    }\n+\n+    @Test\n+    void stepTaskletDropCollectionCompleteSuccessfully() throws Exception {\n+        final var book = new Book<ObjectId>();\n+        book.setId(new ObjectId());\n+        mongoTemplate.save(book, appProps.getCollectionName());\n+        assertThat(mongoTemplate.findAll(Book.class, appProps.getCollectionName())).isNotEmpty();\n+\n+        final var jobExecution = jobLauncherTestUtils.launchStep(\"dropCollectionStep\");\n+        final var actualStepExecutions = jobExecution.getStepExecutions();\n+        final var actualExitStatus = jobExecution.getExitStatus();\n+\n+        assertThat(actualStepExecutions).hasSize(1);\n+        assertThat(actualExitStatus.getExitCode()).isEqualTo(ExitStatus.COMPLETED.getExitCode());\n+        assertThat(mongoTemplate.findAll(Book.class, appProps.getCollectionName())).isEmpty();\n+    }\n+\n+    @Test\n+    void stepMigrationBookShouldCompleteSuccessfully() {\n+        final var jobExecution = jobLauncherTestUtils.launchStep(\"migrationBookStep\", defaultJobParameters());\n+        final var actualStepExecutions = jobExecution.getStepExecutions();\n+        final var actualExitStatus = jobExecution.getExitStatus();\n+\n+        assertThat(actualStepExecutions).hasSize(1);\n+        assertThat(actualExitStatus.getExitCode()).isEqualTo(ExitStatus.COMPLETED.getExitCode());\n+        actualStepExecutions.forEach(stepExecution -> {\n+            assertThat(stepExecution.getReadCount()).isNotZero();\n+            assertThat(stepExecution.getWriteCount()).isEqualTo(stepExecution.getReadCount());\n+        });\n+    }\n+\n+    @Test\n+    void migrationJobShouldCompleteSuccessfully() throws Exception {\n+        final var jobExecution = jobLauncherTestUtils.launchJob();\n+        assertThat(jobExecution).isNotNull();\n+        assertThat(jobExecution.getExitStatus()).isEqualTo(ExitStatus.COMPLETED);\n+        final var savedBooks = mongoTemplate.findAll(Book.class, appProps.getCollectionName());\n+        assertThat(savedBooks).hasSize(2).allMatch(s -> !s.getTitle().equals(\"\"))\n+                .allMatch(s -> !s.getAuthors().isEmpty()).allMatch(s -> s.getGenre() != null);\n+    }\n+\n+}"
  },
  {
    "sha": "9666e57a3efb0099ca019fd75eb30a499bdcaf53",
    "filename": "hw14-spring-batch/src/test/java/ru/otus/spring/hw/converters/AuthorConverterTest.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/test/java/ru/otus/spring/hw/converters/AuthorConverterTest.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/test/java/ru/otus/spring/hw/converters/AuthorConverterTest.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/test/java/ru/otus/spring/hw/converters/AuthorConverterTest.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,22 @@\n+package ru.otus.spring.hw.converters;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import org.bson.types.ObjectId;\n+import org.junit.jupiter.api.Test;\n+\n+import ru.otus.spring.hw.model.Author;\n+\n+public class AuthorConverterTest {\n+\n+    @Test\n+    void shouldReplaceLongIdToObjectId() {\n+        final var author = new Author<Long>();\n+        author.setId(1L);\n+        author.setName(\"name\");\n+\n+        final var convertedAuthor = AuthorConverter.convertId(author);\n+        assertThat(convertedAuthor.getId()).isExactlyInstanceOf(ObjectId.class);\n+        assertThat(convertedAuthor.getName()).isEqualTo(author.getName());\n+    }\n+}"
  },
  {
    "sha": "4840c40cba732ac190175fa30838af5808401c13",
    "filename": "hw14-spring-batch/src/test/java/ru/otus/spring/hw/converters/BookConverterTest.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/blob/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/test/java/ru/otus/spring/hw/converters/BookConverterTest.java",
    "raw_url": "https://github.com/andreyzhegalov/2020-11-otus-spring-zhegalov/raw/3ded2f358cdf037ea7043b741e6475a7c71bdbf2/hw14-spring-batch/src/test/java/ru/otus/spring/hw/converters/BookConverterTest.java",
    "contents_url": "https://api.github.com/repos/andreyzhegalov/2020-11-otus-spring-zhegalov/contents/hw14-spring-batch/src/test/java/ru/otus/spring/hw/converters/BookConverterTest.java?ref=3ded2f358cdf037ea7043b741e6475a7c71bdbf2",
    "patch": "@@ -0,0 +1,35 @@\n+package ru.otus.spring.hw.converters;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.Collections;\n+\n+import org.bson.types.ObjectId;\n+import org.junit.jupiter.api.Test;\n+\n+import ru.otus.spring.hw.model.Author;\n+import ru.otus.spring.hw.model.Book;\n+import ru.otus.spring.hw.model.Genre;\n+\n+public class BookConverterTest {\n+\n+    @Test\n+    void shouldReplaceLongIdToObjectId() {\n+        var book = new Book<Long>();\n+        book.setId(1L);\n+        final var genre = new Genre<Long>();\n+        genre.setId(2L);\n+        final var author = new Author<Long>();\n+        author.setId(3L);\n+        book.setGenre(genre);\n+        book.setAuthors(Collections.singletonList(author));\n+\n+        final var bookWithObjectId = BookConverter.convertId(book);\n+\n+        assertThat(bookWithObjectId.getId()).isExactlyInstanceOf(ObjectId.class);\n+        assertThat(bookWithObjectId.getTitle()).isEqualTo(book.getTitle());\n+        assertThat(bookWithObjectId.getGenre().getId()).isExactlyInstanceOf(ObjectId.class);\n+        assertThat(bookWithObjectId.getAuthors()).isNotEmpty();\n+        assertThat(bookWithObjectId.getAuthors().get(0).getId()).isExactlyInstanceOf(ObjectId.class);\n+    }\n+}"
  }
]
