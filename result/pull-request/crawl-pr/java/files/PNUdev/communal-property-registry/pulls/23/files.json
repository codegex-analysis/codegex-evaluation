[
  {
    "sha": "9e805c8f0207c7051f8e5eb67bd75bf138250173",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/controller/admin/CategoryByPurposeAdminController.java",
    "status": "added",
    "additions": 111,
    "deletions": 0,
    "changes": 111,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/controller/admin/CategoryByPurposeAdminController.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/controller/admin/CategoryByPurposeAdminController.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/controller/admin/CategoryByPurposeAdminController.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -0,0 +1,111 @@\n+package com.pnudev.communalpropertyregistry.controller.admin;\n+\n+import com.pnudev.communalpropertyregistry.domain.CategoryByPurpose;\n+import com.pnudev.communalpropertyregistry.dto.form.CategoryByPurposeFormDto;\n+import com.pnudev.communalpropertyregistry.service.CategoryByPurposeService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.data.web.PageableDefault;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.validation.annotation.Validated;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.servlet.mvc.support.RedirectAttributes;\n+\n+import static com.pnudev.communalpropertyregistry.util.FlashMessageConstants.SUCCESS_FLASH_MESSAGE;\n+\n+@Controller\n+@RequestMapping(\"/admin/categories\")\n+public class CategoryByPurposeAdminController {\n+\n+    private final CategoryByPurposeService categoryByPurposeService;\n+\n+    @Autowired\n+    public CategoryByPurposeAdminController(CategoryByPurposeService categoryByPurposeService) {\n+        this.categoryByPurposeService = categoryByPurposeService;\n+    }\n+\n+    @GetMapping\n+    public String findAll(@PageableDefault Pageable pageable, Model model) {\n+\n+        Page<CategoryByPurpose> categoriesPage = categoryByPurposeService\n+                .findAll(pageable);\n+\n+        model.addAttribute(\"categoriesPage\", categoriesPage);\n+\n+        return \"admin/category/index\";\n+    }\n+\n+    @GetMapping(\"/{id}\")\n+    public String findById(@PathVariable(\"id\") Long id, Model model) {\n+\n+        CategoryByPurpose category = categoryByPurposeService.findById(id);\n+        model.addAttribute(\"category\", category);\n+\n+        return \"admin/category/show\";\n+    }\n+\n+    @GetMapping(\"/new\")\n+    public String createForm() {\n+        return \"admin/category/form\";\n+    }\n+\n+    @PostMapping(\"/create\")\n+    public String create(@Validated CategoryByPurposeFormDto categoryByPurposeCreateDto,\n+                         RedirectAttributes redirectAttributes) {\n+\n+        categoryByPurposeService.create(categoryByPurposeCreateDto);\n+\n+        redirectAttributes.addFlashAttribute(SUCCESS_FLASH_MESSAGE.name(),\n+                \"Категорія створена успішно!\");\n+\n+        return \"redirect:/admin/categories\";\n+    }\n+\n+    @GetMapping(\"/edit/{id}\")\n+    public String editForm(@PathVariable(\"id\") Long id, Model model) {\n+\n+        CategoryByPurpose category = categoryByPurposeService.findById(id);\n+        model.addAttribute(\"category\", category);\n+\n+        return \"admin/category/form\";\n+    }\n+\n+    @PostMapping(\"/update/{id}\")\n+    public String update(@PathVariable(\"id\") Long categoryId,\n+                         @Validated CategoryByPurposeFormDto categoryByPurposeDto,\n+                         RedirectAttributes redirectAttributes) {\n+\n+        categoryByPurposeService.updateById(categoryByPurposeDto, categoryId);\n+        redirectAttributes.addFlashAttribute(SUCCESS_FLASH_MESSAGE.name(),\n+                \"Категорія оновлена успішно!\");\n+\n+        return \"redirect:/admin/categories/\" + categoryId;\n+    }\n+\n+    @GetMapping(\"/delete/{id}\")\n+    public String deleteConfirmation(Model model, @RequestHeader(\"referer\") String returnBackUrl) {\n+\n+        model.addAttribute(\"message\", \"Ви впевнені, що хочете видалити дану категорію?\");\n+        model.addAttribute(\"returnBackUrl\", returnBackUrl);\n+\n+        return \"admin/common/deleteConfirmation\";\n+    }\n+\n+    @PostMapping(\"/delete/{id}\")\n+    public String deleteById(@PathVariable(\"id\") Long id, RedirectAttributes redirectAttributes) {\n+\n+        categoryByPurposeService.deleteById(id);\n+\n+        redirectAttributes.addFlashAttribute(SUCCESS_FLASH_MESSAGE.name(),\n+                \"Категорія видалена успішно!\");\n+\n+        return \"redirect:/admin/categories/\";\n+    }\n+\n+}"
  },
  {
    "sha": "b2acc4ec1724a9be9c547cc9ebb09bf9bfc04097",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/controller/admin/ErrorAdminController.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/controller/admin/ErrorAdminController.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/controller/admin/ErrorAdminController.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/controller/admin/ErrorAdminController.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -0,0 +1,25 @@\n+package com.pnudev.communalpropertyregistry.controller.admin;\n+\n+import org.springframework.boot.web.servlet.error.ErrorController;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.RequestHeader;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+\n+@Controller\n+public class ErrorAdminController implements ErrorController {\n+\n+    @RequestMapping(\"/error\")\n+    public String showErrorPage(@RequestHeader(\"referer\") String previousLocation, Model model) {\n+\n+        model.addAttribute(\"previousLocation\", previousLocation);\n+        model.addAttribute(\"errorMessage\", \"Сторінку не знайдено!\");\n+\n+        return \"main/error\";\n+    }\n+\n+    @Override\n+    public String getErrorPath() {\n+        return \"/error\";\n+    }\n+}"
  },
  {
    "sha": "74c50de56aac040626b5ac2d94ffe3ed128630d3",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/domain/CategoryByPurpose.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/domain/CategoryByPurpose.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/domain/CategoryByPurpose.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/domain/CategoryByPurpose.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -7,7 +7,7 @@\n import org.springframework.data.annotation.Id;\n \n @Data\n-@Builder\n+@Builder(toBuilder = true)\n @NoArgsConstructor\n @AllArgsConstructor\n public class CategoryByPurpose {"
  },
  {
    "sha": "4d5757b7fb69297e61eb14a1dcf76ff6a10e3ef5",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/dto/form/CategoryByPurposeFormDto.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/dto/form/CategoryByPurposeFormDto.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/dto/form/CategoryByPurposeFormDto.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/dto/form/CategoryByPurposeFormDto.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -0,0 +1,19 @@\n+package com.pnudev.communalpropertyregistry.dto.form;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.validation.constraints.NotBlank;\n+\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+@Builder\n+public class CategoryByPurposeFormDto {\n+\n+    @NotBlank\n+    private String name;\n+\n+}"
  },
  {
    "sha": "4581a99413782047c40c2680652d43201ffb9369",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/exception/AdminExceptionInterceptor.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/exception/AdminExceptionInterceptor.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/exception/AdminExceptionInterceptor.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/exception/AdminExceptionInterceptor.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -0,0 +1,44 @@\n+package com.pnudev.communalpropertyregistry.exception;\n+\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.ControllerAdvice;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+import org.springframework.web.servlet.mvc.support.RedirectAttributes;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+@ControllerAdvice\n+public class AdminExceptionInterceptor {\n+\n+    @ExceptionHandler(ServiceAdminException.class)\n+    public String serviceAdminException(ServiceAdminException serviceAdminException,\n+                                        HttpServletRequest request,\n+                                        Model model) {\n+\n+        model.addAttribute(\"errorMessage\", serviceAdminException.getMessage());\n+        model.addAttribute(\"previousLocation\", request.getHeader(\"referer\"));\n+        return \"main/error\";\n+    }\n+\n+    @ExceptionHandler(CategoryExistsException.class)\n+    public String categoryExistsException(CategoryExistsException categoryExistsException,\n+                                        HttpServletRequest request,\n+                                        Model model) {\n+\n+        model.addAttribute(\"errorMessage\", categoryExistsException.getMessage());\n+        model.addAttribute(\"previousLocation\", \"/admin/categories/\");\n+        return \"main/error\";\n+    }\n+\n+    @ExceptionHandler(CategoryDuplicationException.class)\n+    public String categoryDuplicationException(HttpServletRequest request,\n+                                               CategoryDuplicationException categoryDuplicationException,\n+                                               RedirectAttributes redirectAttributes) {\n+\n+        String redirectUrl = request.getHeader(\"referer\").split(\"\\\\?\")[0];\n+        redirectAttributes.addFlashAttribute(\"message\", categoryDuplicationException.getMessage());\n+\n+        return \"redirect:\" + redirectUrl;\n+    }\n+\n+}"
  },
  {
    "sha": "57ed323f0601adad4299450bb73942169dc1e006",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/exception/CategoryDuplicationException.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/exception/CategoryDuplicationException.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/exception/CategoryDuplicationException.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/exception/CategoryDuplicationException.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -0,0 +1,9 @@\n+package com.pnudev.communalpropertyregistry.exception;\n+\n+public class CategoryDuplicationException extends RuntimeException {\n+\n+    public CategoryDuplicationException(String message) {\n+        super(message);\n+    }\n+\n+}"
  },
  {
    "sha": "7efc232c0a30a7c9445547ce487d7b775590c939",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/exception/CategoryExistsException.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/exception/CategoryExistsException.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/exception/CategoryExistsException.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/exception/CategoryExistsException.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -0,0 +1,9 @@\n+package com.pnudev.communalpropertyregistry.exception;\n+\n+public class CategoryExistsException extends RuntimeException {\n+\n+    public CategoryExistsException(String message) {\n+        super(message);\n+    }\n+\n+}"
  },
  {
    "sha": "fb7f07a8a0fa367e1a2131b4f83d7f80877682eb",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/exception/ServiceAdminException.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/exception/ServiceAdminException.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/exception/ServiceAdminException.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/exception/ServiceAdminException.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -0,0 +1,9 @@\n+package com.pnudev.communalpropertyregistry.exception;\n+\n+public class ServiceAdminException extends RuntimeException {\n+\n+    public ServiceAdminException(String message) {\n+        super(message);\n+    }\n+\n+}"
  },
  {
    "sha": "81ba3fa5a40178348607423d0c3ae2984271c334",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/repository/CategoryByPurposeRepository.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/repository/CategoryByPurposeRepository.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/repository/CategoryByPurposeRepository.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/repository/CategoryByPurposeRepository.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -1,12 +1,14 @@\n package com.pnudev.communalpropertyregistry.repository;\n \n import com.pnudev.communalpropertyregistry.domain.CategoryByPurpose;\n-import org.springframework.data.repository.CrudRepository;\n+import org.springframework.data.repository.PagingAndSortingRepository;\n \n import java.util.List;\n \n-public interface CategoryByPurposeRepository extends CrudRepository<CategoryByPurpose, Long> {\n+public interface CategoryByPurposeRepository extends PagingAndSortingRepository<CategoryByPurpose, Long> {\n+\n+    Boolean existsByName(String name);\n \n     List<CategoryByPurpose> findAll();\n \n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "31e346646fb791a74fb395dff827e665e179f3ff",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/repository/PropertyRepository.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/repository/PropertyRepository.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/repository/PropertyRepository.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/repository/PropertyRepository.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -21,4 +21,7 @@\n             \"ON cbp.id = p.category_by_purpose_id \" +\n             \"GROUP BY cbp.name \")\n     List<PropertyStatisticsDto> getListOfStatistics();\n+\n+    Boolean existsByCategoryByPurposeId(Long categoryByPurposeId);\n+\n }"
  },
  {
    "sha": "8c7da77c6da2a6edb515f41fc98765581ac0c414",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/service/CategoryByPurposeService.java",
    "status": "modified",
    "additions": 17,
    "deletions": 1,
    "changes": 18,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/service/CategoryByPurposeService.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/service/CategoryByPurposeService.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/service/CategoryByPurposeService.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -1,9 +1,25 @@\n package com.pnudev.communalpropertyregistry.service;\n \n+import com.pnudev.communalpropertyregistry.domain.CategoryByPurpose;\n+import com.pnudev.communalpropertyregistry.dto.CategoryByPurposeResponseDto;\n+import com.pnudev.communalpropertyregistry.dto.form.CategoryByPurposeFormDto;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+\n import com.pnudev.communalpropertyregistry.dto.CategoryByPurposeResponseDto;\n \n public interface CategoryByPurposeService {\n \n     CategoryByPurposeResponseDto findAll();\n \n-}\n+    Page<CategoryByPurpose> findAll(Pageable pageable);\n+\n+    CategoryByPurpose findById(Long id);\n+\n+    void create(CategoryByPurposeFormDto categoryByPurposeDto);\n+\n+    void updateById(CategoryByPurposeFormDto categoryByPurposeDto, Long categoryId);\n+\n+    void deleteById(Long id);\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "873199037d2e540d07129b0a4d6ba234c1972091",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/service/CategoryByPurposeServiceImpl.java",
    "status": "modified",
    "additions": 79,
    "deletions": 2,
    "changes": 81,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/service/CategoryByPurposeServiceImpl.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/service/CategoryByPurposeServiceImpl.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/service/CategoryByPurposeServiceImpl.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -1,23 +1,100 @@\n package com.pnudev.communalpropertyregistry.service;\n \n+import com.pnudev.communalpropertyregistry.domain.CategoryByPurpose;\n import com.pnudev.communalpropertyregistry.dto.CategoryByPurposeResponseDto;\n+import com.pnudev.communalpropertyregistry.dto.form.CategoryByPurposeFormDto;\n+import com.pnudev.communalpropertyregistry.exception.CategoryDuplicationException;\n+import com.pnudev.communalpropertyregistry.exception.CategoryExistsException;\n+import com.pnudev.communalpropertyregistry.exception.ServiceAdminException;\n import com.pnudev.communalpropertyregistry.repository.CategoryByPurposeRepository;\n+import com.pnudev.communalpropertyregistry.repository.PropertyRepository;\n+import lombok.extern.slf4j.Slf4j;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n import org.springframework.stereotype.Service;\n \n @Service\n+@Slf4j\n public class CategoryByPurposeServiceImpl implements CategoryByPurposeService {\n \n     private final CategoryByPurposeRepository categoryByPurposeRepository;\n \n+    private final PropertyRepository propertyRepository;\n+\n     @Autowired\n-    public CategoryByPurposeServiceImpl(CategoryByPurposeRepository categoryByPurposeRepository) {\n+    public CategoryByPurposeServiceImpl(CategoryByPurposeRepository categoryByPurposeRepository,\n+                                        PropertyRepository propertyRepository) {\n+\n         this.categoryByPurposeRepository = categoryByPurposeRepository;\n+        this.propertyRepository = propertyRepository;\n     }\n \n     @Override\n     public CategoryByPurposeResponseDto findAll() {\n         return new CategoryByPurposeResponseDto(categoryByPurposeRepository.findAll());\n     }\n \n-}\n+    @Override\n+    public Page<CategoryByPurpose> findAll(Pageable pageable) {\n+        return categoryByPurposeRepository.findAll(pageable);\n+    }\n+\n+    @Override\n+    public CategoryByPurpose findById(Long id) {\n+        return categoryByPurposeRepository.findById(id)\n+                .orElseThrow(() -> new ServiceAdminException(\"Категорію не знайдено!\"));\n+    }\n+\n+    @Override\n+    public void create(CategoryByPurposeFormDto categoryByPurposeDto) {\n+\n+        validateCategoryName(categoryByPurposeDto.getName());\n+\n+        CategoryByPurpose categoryByPurpose = CategoryByPurpose.builder()\n+                .name(categoryByPurposeDto.getName())\n+                .build();\n+\n+        categoryByPurposeRepository.save(categoryByPurpose);\n+\n+        log.info(\"Category {}({}) was created\", categoryByPurpose.getName(), categoryByPurpose.getId());\n+    }\n+\n+    @Override\n+    public void updateById(CategoryByPurposeFormDto categoryByPurposeDto, Long categoryId) {\n+\n+        validateCategoryName(categoryByPurposeDto.getName());\n+\n+        CategoryByPurpose category = findById(categoryId);\n+\n+        CategoryByPurpose updatedCategory = category.toBuilder()\n+                .name(categoryByPurposeDto.getName())\n+                .build();\n+\n+        categoryByPurposeRepository.save(updatedCategory);\n+\n+        log.info(\"Category {}({}) was updated\", category.getName(), category.getId());\n+    }\n+\n+    @Override\n+    public void deleteById(Long id) {\n+\n+        if (propertyRepository.existsByCategoryByPurposeId(id)) {\n+            log.error(\"Category is used by property. Can't delete category\");\n+            throw new CategoryExistsException(\"Дію неможливо виконати, оскільки дана категорія активно використовується!\");\n+        }\n+\n+        categoryByPurposeRepository.deleteById(id);\n+        log.info(\"Category with id {} was deleted\", id);\n+    }\n+\n+    private void validateCategoryName(String name) {\n+\n+        if (categoryByPurposeRepository.existsByName(name)) {\n+            log.error(\"Category with name {} already exists\", name);\n+            throw new CategoryDuplicationException(\"Категорія з даною назвою уже існує!\");\n+        }\n+\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "51ee1233cc666839a6eb4fa461d9e853b80bb6bc",
    "filename": "src/main/java/com/pnudev/communalpropertyregistry/util/FlashMessageConstants.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/util/FlashMessageConstants.java",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/java/com/pnudev/communalpropertyregistry/util/FlashMessageConstants.java",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/java/com/pnudev/communalpropertyregistry/util/FlashMessageConstants.java?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -0,0 +1,7 @@\n+package com.pnudev.communalpropertyregistry.util;\n+\n+public enum FlashMessageConstants {\n+\n+    SUCCESS_FLASH_MESSAGE, ERROR_FLASH_MESSAGE\n+\n+}"
  },
  {
    "sha": "c34e154db6eb11c5417d0138e6fb6bca3a59cc37",
    "filename": "src/main/resources/application.yaml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/application.yaml",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/application.yaml",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/resources/application.yaml?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -10,4 +10,4 @@ spring:\n     name: ${ADMIN_USERNAME:admin}\n     password: ${ADMIN_PASSWORD:admin}\n   data:\n-    web.pageable.one-indexed-parameters: true\n+    web.pageable.one-indexed-parameters: true\n\\ No newline at end of file"
  },
  {
    "sha": "bde98e13e1c454db3e81e2254d8834a017ad87b6",
    "filename": "src/main/resources/static/css/main.css",
    "status": "modified",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/static/css/main.css",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/static/css/main.css",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/resources/static/css/main.css?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -1,3 +1,4 @@\n+\n *{\n     margin: 0;\n     padding: 0;\n@@ -425,4 +426,48 @@ header > img{\n \n .table > thead > tr > th  {\n     box-shadow: inset 0 0 #fff, 0 2px #C1CDDA;\n+}\n+\n+/* ==== CATEGORIES SECTION ==== */\n+.category__container {\n+    margin-top: 5%;\n+    display: block;\n+    margin-left: auto;\n+    margin-right: auto;\n+    flex-direction: column;\n+    align-items: center;\n+}\n+\n+.category__name {\n+    margin-bottom: 15px;\n+}\n+\n+.category__function {\n+    margin-right: 10px;\n+}\n+\n+.categories__list {\n+    width: 100%;\n+    margin: auto;\n+}\n+\n+.categories__pages {\n+    margin-left: 33vw;\n+    margin-top: 20px;\n+    max-width: 100%;\n+}\n+\n+.categories__list td, th {\n+    text-align: center;\n+}\n+\n+.return-back-button {\n+    margin: 5%;\n+    position: absolute;\n+}\n+\n+.return-back-button a {\n+    padding: 0px 42px;\n+    font-size: 25px;\n+\n }\n\\ No newline at end of file"
  },
  {
    "sha": "afef72844d69142d34172b65fe91cd06fb12f3e8",
    "filename": "src/main/resources/templates/admin/category/form.ftl",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/templates/admin/category/form.ftl",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/templates/admin/category/form.ftl",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/resources/templates/admin/category/form.ftl?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -0,0 +1,66 @@\n+<#include '../include/header.ftl'>\n+\n+<div class=\"d-flex justify-content-start\">\n+\n+    <div class=\"return-back-button\">\n+        <a class=\"display-2 btn btn-outline-primary\"\n+           href=\"/admin/categories<#if category??>/${category.id}</#if>\">&#8592;</a>\n+    </div>\n+\n+    <div class=\"category__container\">\n+\n+        <h1 class=\"user-select-none\"> <#if category??> Оновити<#else > Створити нову</#if> категорію</h1>\n+\n+        <form class=\"\" action=\"/admin/categories<#if category??>/update/${category.id}<#else >/create</#if>\"\n+              method=\"POST\">\n+            <div class=\"form-group\">\n+\n+                <div class=\"d-flex justify-content-center\">\n+                    <label class=\"mb-3 h3 user-select-none\" for=\"category-name\">Назва категорії</label>\n+                </div>\n+\n+                <input required type=\"text\" class=\"form-control\" name=\"name\"\n+                       aria-describedby=\"nameMessage\"\n+                       id=\"category-name\" placeholder=\"Введіть назву категорії\"\n+                       <#if category?? >value=\"${category.name}\"</#if> autofocus>\n+\n+                <#if message?? >\n+                    <div class=\"d-flex justify-content-center\">\n+                        <small id=\"nameMessage\" class=\"form-text text-warning bg-primary rounded px-4\">\n+                            ${message}\n+                        </small>\n+                    </div>\n+                </#if>\n+\n+            </div>\n+            <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\">\n+\n+            <div class=\"d-flex justify-content-center\">\n+                <button <#if category??>disabled</#if> id=\"submit-button\" class=\"mt-2 btn btn-primary \"\n+                        type=\"submit\"><#if category??>Оновити<#else >Створити</#if></button>\n+            </div>\n+        </form>\n+\n+    </div>\n+</div>\n+\n+\n+<#if category??>\n+    <script>\n+\n+        let input_field = document.getElementById(\"category-name\");\n+\n+        input_field.addEventListener(\"change\", () => {\n+\n+            let button = document.getElementById(\"submit-button\");\n+\n+            if (input_field.value != \"${category.name}\") {\n+                button.removeAttribute(\"disabled\");\n+            }\n+\n+        });\n+\n+    </script>\n+</#if>\n+\n+<#include '../../include/footer.ftl'>"
  },
  {
    "sha": "06fb5f4aee2ca3d56afe1f5d9570a3977da5b0ba",
    "filename": "src/main/resources/templates/admin/category/index.ftl",
    "status": "added",
    "additions": 92,
    "deletions": 0,
    "changes": 92,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/templates/admin/category/index.ftl",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/templates/admin/category/index.ftl",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/resources/templates/admin/category/index.ftl?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -0,0 +1,92 @@\n+<#include '../include/header.ftl'>\n+\n+\n+<div class=\"categories\">\n+\n+    <div class=\"categories__new\">\n+        <a class=\"m-2 btn btn-secondary\" href=\"/admin/categories/new\">Створити категорію</a>\n+    </div>\n+\n+    <table class=\"categories__list table table-stripped\">\n+        <thead>\n+        <tr>\n+            <th scope=\"col\">#</th>\n+            <th scope=\"col\">Назва</th>\n+            <th scope=\"col\">&nbsp;</th>\n+        </tr>\n+        </thead>\n+        <tbody>\n+\n+        <#list categoriesPage.content as category>\n+            <tr>\n+                <th scope=\"row\">${category.id}</th>\n+                <td class=\"\">${category.name}</td>\n+                <td>\n+                    <a class=\" btn btn-sm btn-primary\" href=\"/admin/categories/${category.id}\">Детальніше</a>\n+                </td>\n+            </tr>\n+        </#list>\n+\n+        </tbody>\n+    </table>\n+\n+    <#if (categoriesPage.totalPages > 1) >\n+\n+        <div class=\"categories__pages\">\n+\n+            <div>\n+                <ul class=\"pagination mx-auto d-inline-flex\">\n+\n+                    <#if !categoriesPage.first >\n+                        <form action=\"/admin/categories\" method=\"GET\">\n+                            <li class=\"page-item\">\n+                                <button type=\"submit\"\n+                                        class=\"page-link\">\n+                                    Перша\n+                                </button>\n+                            </li>\n+                            <input type=\"hidden\" name=\"page\" value=\"0\">\n+                        </form>\n+                    </#if>\n+\n+                    <#list 1..categoriesPage.totalPages as pageNumber>\n+                        <form action=\"/admin/categories\" method=\"GET\">\n+                            <li class=\"page-item <#if pageNumber - 1 == categoriesPage.number>active</#if>\">\n+                                <button type=\"submit\"\n+                                        class=\"page-link\">\n+                                    ${pageNumber}\n+                                </button>\n+                            </li>\n+                            <input type=\"hidden\" name=\"page\" value=\"${pageNumber}\">\n+                        </form>\n+                    </#list>\n+\n+                    <#if !categoriesPage.last >\n+                        <form action=\"/admin/categories\" method=\"GET\">\n+                            <li class=\"page-item\">\n+                                <button type=\"submit\"\n+                                        class=\"page-link\">\n+                                    Остання\n+                                </button>\n+                            </li>\n+                            <input type=\"hidden\" name=\"page\" value=\"${categoriesPage.totalPages}\">\n+                        </form>\n+                    </#if>\n+\n+                </ul>\n+            </div>\n+\n+        </div>\n+\n+    </#if>\n+\n+    <#if categoriesPage.totalElements == 0>\n+        <div class=\"alert alert-primary w-75 text-center mx-auto mt-5\">\n+            Список категорій порожній\n+        </div>\n+    </#if>\n+\n+</div>\n+\n+<#include '../../include/footer.ftl'>\n+"
  },
  {
    "sha": "ebd0212b0ca593b2b76329139e7bcecdaee5de1c",
    "filename": "src/main/resources/templates/admin/category/show.ftl",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/templates/admin/category/show.ftl",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/templates/admin/category/show.ftl",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/resources/templates/admin/category/show.ftl?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -0,0 +1,30 @@\n+<#include '../include/header.ftl'>\n+\n+<div class=\"d-flex justify-content-start\">\n+\n+    <div class=\"return-back-button\">\n+        <a class=\"btn btn-outline-primary\" href=\"/admin/categories\">&#8592;</a>\n+    </div>\n+\n+    <div class=\"category__container\">\n+\n+        <div class=\"category__name\">\n+            <h2 class=\"user-select-none\"><p><b>Назва: </b><i>${category.name}</i></p></h2>\n+        </div>\n+\n+        <div class=\"d-flex flex-row\">\n+\n+            <div class=\"category__function\">\n+                <a class=\"btn btn-info\" href=\"/admin/categories/edit/${category.id}\">Редагувати</a>\n+            </div>\n+\n+            <div class=\"category__function\">\n+                <a class=\"btn btn-danger\" href=\"/admin/categories/delete/${category.id}\">Видалити</a>\n+            </div>\n+\n+        </div>\n+\n+    </div>\n+\n+</div>\n+<#include '../../include/footer.ftl'>\n\\ No newline at end of file"
  },
  {
    "sha": "1cbcd364daaa33b080b1d41f580732fb050590df",
    "filename": "src/main/resources/templates/admin/common/deleteConfirmation.ftl",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/templates/admin/common/deleteConfirmation.ftl",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/templates/admin/common/deleteConfirmation.ftl",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/resources/templates/admin/common/deleteConfirmation.ftl?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -2,9 +2,9 @@\n <div class=\"w-100\">\n     <div class=\"col-md-5 mx-auto mt-5 py-3 px-5 rounded bg-light border\">\n         <div class=\"h5 text-center\">${message}</div>\n-        <div class=\"d-flex mt-5\">\n+        <div class=\"d-flex mt-5 d-flex justify-content-around\">\n             <a href=\"${returnBackUrl}\" class=\"mt-2\">\n-                <div class=\"btn btn-outline-primary mx-3\">Ні, відмінити дію</div>\n+                <div class=\"btn btn-outline-primary\">Ні, відмінити дію</div>\n             </a>\n             <form method=\"POST\" class=\"mt-2\">\n                 <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>"
  },
  {
    "sha": "92e95d3e4e18094b87f84ab58549368a2b13b5f3",
    "filename": "src/main/resources/templates/admin/include/header.ftl",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/PNUdev/communal-property-registry/blob/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/templates/admin/include/header.ftl",
    "raw_url": "https://github.com/PNUdev/communal-property-registry/raw/ac97f2e4df341d916ff0658776e93f92cc84f50e/src/main/resources/templates/admin/include/header.ftl",
    "contents_url": "https://api.github.com/repos/PNUdev/communal-property-registry/contents/src/main/resources/templates/admin/include/header.ftl?ref=ac97f2e4df341d916ff0658776e93f92cc84f50e",
    "patch": "@@ -5,6 +5,7 @@\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n     <#include \"../../include/coreDependencies.ftl\" >\n     <title>Admin panel</title>\n+    <link rel=\"stylesheet\" href=\"/css/main.css\">\n </head>\n <body>\n <nav class=\"navbar navbar-dark bg-primary\">"
  }
]
