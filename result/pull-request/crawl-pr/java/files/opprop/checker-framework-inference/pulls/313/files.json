[
  {
    "sha": "dd100de558b6a5db3b00bb66a7ebb6c39f65c966",
    "filename": "src/checkers/inference/InferenceVisitor.java",
    "status": "modified",
    "additions": 8,
    "deletions": 2,
    "changes": 10,
    "blob_url": "https://github.com/opprop/checker-framework-inference/blob/9e0b8d54866a1244fc0d32d945f0034d7c5e062b/src/checkers/inference/InferenceVisitor.java",
    "raw_url": "https://github.com/opprop/checker-framework-inference/raw/9e0b8d54866a1244fc0d32d945f0034d7c5e062b/src/checkers/inference/InferenceVisitor.java",
    "contents_url": "https://api.github.com/repos/opprop/checker-framework-inference/contents/src/checkers/inference/InferenceVisitor.java?ref=9e0b8d54866a1244fc0d32d945f0034d7c5e062b",
    "patch": "@@ -17,6 +17,7 @@\n import org.checkerframework.javacutil.AnnotationBuilder;\n import org.checkerframework.javacutil.AnnotationUtils;\n import org.checkerframework.javacutil.BugInCF;\n+import org.checkerframework.javacutil.TreeUtils;\n \n import java.lang.annotation.Annotation;\n import java.util.HashSet;\n@@ -851,6 +852,11 @@ protected InferenceValidator createTypeValidator() {\n     @Override\n     // Do NOT perform this check until issue #218 is resolved\n     protected void checkConstructorResult(\n-            AnnotatedExecutableType constructorType, ExecutableElement constructorElement) {}\n-    \n+            AnnotatedExecutableType constructorType, ExecutableElement constructorElement) {\n+        if (infer) {\n+            AnnotatedTypeMirror returnType = constructorType.getReturnType();\n+            final AnnotatedDeclaredType classType  = atypeFactory.getAnnotatedType(TreeUtils.enclosingClass(getCurrentPath()));\n+            areEqual(returnType, classType, \"\", getCurrentPath().getLeaf());\n+        }\n+    }\n }"
  }
]
