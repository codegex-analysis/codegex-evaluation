[
  {
    "sha": "26d33521af10bcc7fd8cea344038eaaeb78d0ef5",
    "filename": ".idea/.gitignore",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/blob/4c53e53e8e45d9a2dc390c259e0a06c203252e70/.idea/.gitignore",
    "raw_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/raw/4c53e53e8e45d9a2dc390c259e0a06c203252e70/.idea/.gitignore",
    "contents_url": "https://api.github.com/repos/saemundur-haraldsson/CSCUT4Practical2/contents/.idea/.gitignore?ref=4c53e53e8e45d9a2dc390c259e0a06c203252e70",
    "patch": "@@ -0,0 +1,3 @@\n+# Default ignored files\n+/shelf/\n+/workspace.xml"
  },
  {
    "sha": "1763e153b6f24f136d4d5567320e74f68b248b87",
    "filename": ".idea/misc.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/blob/4c53e53e8e45d9a2dc390c259e0a06c203252e70/.idea/misc.xml",
    "raw_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/raw/4c53e53e8e45d9a2dc390c259e0a06c203252e70/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/saemundur-haraldsson/CSCUT4Practical2/contents/.idea/misc.xml?ref=4c53e53e8e45d9a2dc390c259e0a06c203252e70",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\n+    <output url=\"file://$PROJECT_DIR$/out\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "2739e4c14ba11fe323af9f003d4cf30eee950679",
    "filename": ".idea/modules.xml",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/blob/4c53e53e8e45d9a2dc390c259e0a06c203252e70/.idea/modules.xml",
    "raw_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/raw/4c53e53e8e45d9a2dc390c259e0a06c203252e70/.idea/modules.xml",
    "contents_url": "https://api.github.com/repos/saemundur-haraldsson/CSCUT4Practical2/contents/.idea/modules.xml?ref=4c53e53e8e45d9a2dc390c259e0a06c203252e70",
    "patch": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectModuleManager\">\n+    <modules>\n+      <module fileurl=\"file://$PROJECT_DIR$/CSCU9T4Practical2.iml\" filepath=\"$PROJECT_DIR$/CSCU9T4Practical2.iml\" />\n+    </modules>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "35eb1ddfbbc029bcab630581847471d7f238ec53",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/blob/4c53e53e8e45d9a2dc390c259e0a06c203252e70/.idea/vcs.xml",
    "raw_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/raw/4c53e53e8e45d9a2dc390c259e0a06c203252e70/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/saemundur-haraldsson/CSCUT4Practical2/contents/.idea/vcs.xml?ref=4c53e53e8e45d9a2dc390c259e0a06c203252e70",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "b107a2dd81165eaaf682ad3da030668b937fbb6c",
    "filename": "CSCU9T4Practical2.iml",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/blob/4c53e53e8e45d9a2dc390c259e0a06c203252e70/CSCU9T4Practical2.iml",
    "raw_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/raw/4c53e53e8e45d9a2dc390c259e0a06c203252e70/CSCU9T4Practical2.iml",
    "contents_url": "https://api.github.com/repos/saemundur-haraldsson/CSCUT4Practical2/contents/CSCU9T4Practical2.iml?ref=4c53e53e8e45d9a2dc390c259e0a06c203252e70",
    "patch": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output />\n+    <content url=\"file://$MODULE_DIR$\">\n+      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\n+    </content>\n+    <orderEntry type=\"inheritedJdk\" />\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+  </component>\n+</module>\n\\ No newline at end of file"
  },
  {
    "sha": "22dba4695ee8051d179f1ae2106627ade5e60723",
    "filename": "FilesInOut.java",
    "status": "modified",
    "additions": 116,
    "deletions": 15,
    "changes": 131,
    "blob_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/blob/4c53e53e8e45d9a2dc390c259e0a06c203252e70/FilesInOut.java",
    "raw_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/raw/4c53e53e8e45d9a2dc390c259e0a06c203252e70/FilesInOut.java",
    "contents_url": "https://api.github.com/repos/saemundur-haraldsson/CSCUT4Practical2/contents/FilesInOut.java?ref=4c53e53e8e45d9a2dc390c259e0a06c203252e70",
    "patch": "@@ -1,6 +1,8 @@\n-import java.io.*;\r\n+import java.io.*; //this package contains all the classes sed in file processing\r\n import java.awt.*;\r\n import java.awt.event.*;\r\n+import java.text.ParseException;\r\n+import java.text.SimpleDateFormat;\r\n import java.util.*;\r\n import javax.swing.*;\r\n import java.lang.Number;\r\n@@ -13,22 +15,121 @@\n public class FilesInOut {\r\n \r\n     public static void main(String[] args) {\r\n-        // Replace this with statements to set the file name (input) and file name (output).\r\n-        // Initially it will be easier to hardcode suitable file names.\r\n+        //creates an input file and checks to see if it already exists\r\n+        try {\r\n+            File inputFile = new File(\"inputm.txt\");\r\n+            if (inputFile.createNewFile()) {\r\n+                System.out.println(\"File \" + inputFile.getName() + \" created in: \" + inputFile.getAbsolutePath());\r\n+            } else\r\n+                System.out.println(\"inputFile already exists\");\r\n+        } catch (IOException e) {\r\n+            System.out.println(\"An error occurred\");\r\n+            e.printStackTrace();\r\n+        }\r\n+        //creates an output file and checks to see if it already exists\r\n+        try {\r\n+            File outputFile = new File(\"formattedm.txt\");\r\n+            if (outputFile.createNewFile()) {\r\n+                System.out.println(\"File \" + outputFile.getName() + \" created in: \" + outputFile.getAbsolutePath());\r\n+            } else\r\n+                System.out.println(\"outputFile already exists\");\r\n+        } catch (IOException e) {\r\n+            System.out.println(\"An error occurred\");\r\n+            e.printStackTrace();\r\n+        }\r\n+        //sets flags for arguments\r\n+        String inFileName = \"\";\r\n+        String upperCaseFormat = \"\";\r\n+        String titleCaseFormat = \"\";\r\n+        String outFileName = \"\";\r\n \r\n-        // Set up a new Scanner to read the input file.\r\n-        // Processing line by line would be sensible here.\r\n-        // Initially, echo the text to System.out to check you are reading correctly.\r\n-        // Then add code to modify the text to the output format.\r\n-\r\n-        // Set up a new PrintWriter to write the output file.\r\n-        // Add suitable code into the above processing (because you need to do this line by line also.\r\n-        // That is, read a line, write a line, loop.\r\n-\r\n-        // Finally, add code to read the filenames as arguments from the command line.\r\n-\r\n-        System.out.println(\"You need to add your own code to do anything\");\r\n+        if (args[0].equals(\"-u\")) { //if argument 0 is flag -u:\r\n+            upperCaseFormat = args[0];\r\n+            inFileName = args[1];\r\n+            outFileName = args[2];\r\n+        }\r\n+        else if (args[0].equals(\"-t\")){ //af argument 0 is flag -t:\r\n+            titleCaseFormat = args[0];\r\n+            inFileName = args[1];\r\n+            outFileName = args[2];\r\n+        }\r\n+        else{ //otherwise:\r\n+            inFileName = args[0];\r\n+            outFileName = args[1];\r\n+        }\r\n+        try {\r\n+            File inputFile = new File(inFileName);\r\n+            Scanner inFile = new Scanner(inputFile);\r\n+            BufferedReader reader = new BufferedReader(new FileReader(inputFile)); //reads text fm a char-input stream\r\n+            String line = reader.readLine();\r\n+            Date d = null;\r\n+            while (line != null) { //separating dates from names\r\n+                SimpleDateFormat origFormat = new SimpleDateFormat(\"ddMMyyyy\"); //formats what is currently in the file\r\n+                SimpleDateFormat newFormat = new SimpleDateFormat(\"dd/MM/yyyy\"); //changes it to the format we want\r\n+                String value = line.replaceAll(\"[^0-9]\", \"\"); //selects the date and removes any int (regular expression pattern finding)\r\n+                d = origFormat.parse(value); //parse date fm original to new format\r\n+                String name = line.replaceAll(\"[\\\\d.]\", \"\"); //selects the name and erases any non-int (regular expression pattern finding)\r\n+                if (upperCaseFormat.equals(\"-u\")) { //if the flag is '-u' then changes name to UPPER CASE\r\n+                    name = name.toUpperCase();\r\n+                }\r\n+                if (titleCaseFormat.equals(\"-t\")){ //if the flag is '-t' then changes the name to TITLE CASE\r\n+                    String[] names = inFile.nextLine().split(\"\\\\s\"); //splits the text at blank space\r\n+                    int numOfNames = names.length; //length of the array containing the names\r\n+                    if (numOfNames > 3) { //if there are 3 names in the array + the date:\r\n+                        String fname = names[0]; //initialises a variable and sets its value to the first word in the array of names\r\n+                        String mname = names[1]; //initialises a variable and sets its value to the first word in the array of names\r\n+                        String sname = names[2]; //initialises a variable and sets its value to the third word in the array of names\r\n+                        String date = names[3];\r\n+                        fname = fname.substring(0, 1).toUpperCase() + fname.substring(1); //capitalises only the first character in the string\r\n+                        mname = mname.toUpperCase() + \".\";\r\n+                        sname = sname.substring(0, 1).toUpperCase() + sname.substring(1); //capitalises only the first character in the string\r\n+                        name = fname + \" \" + mname + \" \" + sname + \" \"; //concatenates the 3 names together\r\n+                    } else { //no middle name (2 names +date):\r\n+                        String fname = names[0]; //initialises a variable and sets its value to the first word in the array of names\r\n+                        String sname = names[1]; //initialises a variable and sets its value to the first word in the array\r\n+                        fname = fname.substring(0, 1).toUpperCase() + fname.substring(1); //capitalises only the first character in the string\r\n+                        sname = sname.substring(0, 1).toUpperCase() + sname.substring(1);//capitalises only the first character in the string\r\n+                        name = fname + \" \" + sname + \" \"; //concatenates the 2 names together\r\n+                    }\r\n+                }\r\n+                appendData(name, outFileName, newFormat, d); //append the data to the new file\r\n+                line = reader.readLine(); //go to the nest line in the file\r\n+            }\r\n+        } catch (IOException | ParseException e) {\r\n+            System.err.println(\"IOException: \" + e.getMessage() + \"not found\");\r\n+        }\r\n+    }\r\n+    /**\r\n+     * method to append the formatted data to the output file\r\n+     */\r\n+    public static void appendData(String name, String outFileName, SimpleDateFormat newFormat, Date d){\r\n+        try {\r\n+            FileWriter fw = new FileWriter(outFileName, true); //true will append new data\r\n+            fw.write(name + newFormat.format(d)); //appends the string to the file\r\n+            fw.write(\"\\n\"); //new line\r\n+            fw.close();\r\n+            //line = reader.readLine();\r\n+        } catch (IOException e){\r\n+            System.err.println(\"IOException: \" + e.getMessage());\r\n+        }\r\n \r\n+        // Not sure if this section works...\r\n+//        try {\r\n+//            File inputFile = new File(\"inputm.txt\");\r\n+//            if (inputFile.exists() == false || inputFile.isDirectory() == true) {\r\n+//                System.out.println(\"Please provide a valid input file name.\");\r\n+//                return;\r\n+//            }\r\n+//            Scanner sc = new Scanner(inputFile);\r\n+//            File outputFile = new File(\"formatted.txt\");\r\n+//            if (outputFile.exists() == true && outputFile.isDirectory() == true) {\r\n+//                System.out.println(\"Please provide a valid output file name: A directory with same name exist\");\r\n+//                return;\r\n+//            }\r\n+//            PrintWriter printWriter = new PrintWriter(outputFile);\r\n+//        }catch (IOException e){\r\n+//\r\n+//        }\r\n     } // main\r\n \r\n } // FilesInOut\r"
  },
  {
    "sha": "61be08469a64af7b2befc44a7f29a72142d7fae3",
    "filename": "formatted.txt",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/blob/4c53e53e8e45d9a2dc390c259e0a06c203252e70/formatted.txt",
    "raw_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/raw/4c53e53e8e45d9a2dc390c259e0a06c203252e70/formatted.txt",
    "contents_url": "https://api.github.com/repos/saemundur-haraldsson/CSCUT4Practical2/contents/formatted.txt?ref=4c53e53e8e45d9a2dc390c259e0a06c203252e70",
    "patch": "@@ -0,0 +1,15 @@\n+ALLISON M WESLEY 28/01/1990\n+PETER SMITH 05/07/1992\n+SOPHIE K BROWN 08/07/1980\n+EMILY WILSON 01/11/1976\n+JACK THOMSON 04/10/1981\n+OLIVIA H ROBERTSON 12/02/1995\n+LEWIS CAMPBELL 24/10/1983\n+DANIEL S STEWART 06/09/1998\n+LUCY SCOTT 08/12/2003\n+ISLA T MURRAY 26/07/2000\n+JAMES CLARK 31/10/1087\n+LILY O MITCHELL 08/05/1999\n+JESSICA L ROSS 13/05/1986\n+HARRY GRAY 22/08/1978\n+AMELIA P YOUNG 18/04/1988"
  },
  {
    "sha": "13b221f16266c5961f3b101a2abe407cbfe344bc",
    "filename": "formattedm.txt",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/blob/4c53e53e8e45d9a2dc390c259e0a06c203252e70/formattedm.txt",
    "raw_url": "https://github.com/saemundur-haraldsson/CSCUT4Practical2/raw/4c53e53e8e45d9a2dc390c259e0a06c203252e70/formattedm.txt",
    "contents_url": "https://api.github.com/repos/saemundur-haraldsson/CSCUT4Practical2/contents/formattedm.txt?ref=4c53e53e8e45d9a2dc390c259e0a06c203252e70",
    "patch": "@@ -0,0 +1,15 @@\n+Allison M. Wesley 28/01/1990\n+Peter Smith 05/07/1992\n+Sophie K. Brown 08/07/1980\n+Emily Wilson 01/11/1976\n+Jack Thomson 04/10/1981\n+Olivia H. Robertson 12/02/1995\n+Lewis Campbell 24/10/1983\n+Daniel S. Stewart 06/09/1998\n+Lucy Scott 08/12/2003\n+Isla T. Murray 26/07/2000\n+James Clark 31/10/1087\n+Lily O. Mitchell 08/05/1999\n+Jessica L. Ross 13/05/1986\n+Harry Gray 22/08/1978\n+Amelia P. Young 18/04/1988"
  }
]
