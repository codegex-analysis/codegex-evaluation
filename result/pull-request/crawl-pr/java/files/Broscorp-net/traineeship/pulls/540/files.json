[
  {
    "sha": "289ffff9e8e0f56b2d0d3c35309b61585ca59602",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/README.md",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/README.md",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/README.md",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/README.md?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,6 @@\n+# ООП - SOLID\n+Здесь представлены примеры с архитектурными ошибками.\n+Эти неточности сделаны намеренно и Ваша задача:\n+изучить принципы SOLID, найти ошибки в примерах, \"обезвредить\" их и суметь объяснить\n+предлагаемое изменение.\n+Как обычно, лучшее объяснение к коду - это имена, javadoc и комментарии."
  },
  {
    "sha": "fdd3b4df6801adfa35eb6a161ffa00e7757ee878",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/dsp/AutoWearableSuite.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/AutoWearableSuite.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/AutoWearableSuite.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/dsp/AutoWearableSuite.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,45 @@\n+package net.broscorp.oop.solid.dsp;\n+\n+import net.broscorp.oop.solid.dsp.wearings.work.remote.LeftQuantumSock;\n+import net.broscorp.oop.solid.dsp.wearings.work.remote.RedPants;\n+import net.broscorp.oop.solid.dsp.wearings.work.remote.RightQuantumSock;\n+\n+public class AutoWearableSuite {\n+\n+  Object[] dress;\n+\n+  public AutoWearableSuite(Object[] dress) {\n+    this.dress = dress;\n+  }\n+\n+  /**\n+   * Dress a human.\n+   * @param human is the person under the process.\n+   */\n+  public void dress(Human human) {\n+    for (Object wearing : dress) {\n+      if (wearing instanceof RedPants) {\n+        addPants(human, (RedPants) wearing);\n+      }\n+      if (wearing instanceof LeftQuantumSock) {\n+        addSock(human, (LeftQuantumSock) wearing);\n+      }\n+      if (wearing instanceof RightQuantumSock) {\n+        addSock(human, (RightQuantumSock) wearing);\n+      }\n+    }\n+  }\n+\n+  void addPants(Human human, RedPants pants) {\n+    System.out.printf(\"Wearing Red Pants (%s) on Human (%s)\", pants, human);\n+  }\n+\n+  void addSock(Human human, LeftQuantumSock sock) {\n+    System.out.printf(\"Wearing Left Quantum Sock (%s) on Human (%s)\", sock, human);\n+  }\n+\n+  void addSock(Human human, RightQuantumSock sock) {\n+    System.out.printf(\"Wearing Right Quantum Sock (%s) on Human (%s)\", sock, human);\n+  }\n+\n+}"
  },
  {
    "sha": "84a72f498f1f8dae7d0191ed2714c0eb9f04f863",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/dsp/Human.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/Human.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/Human.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/dsp/Human.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,5 @@\n+package net.broscorp.oop.solid.dsp;\n+\n+public interface Human {\n+\n+}"
  },
  {
    "sha": "aa8fa967a0b165de7fa736ccbc45cd0ca70631aa",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/dsp/README.md",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/README.md",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/README.md",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/dsp/README.md?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,7 @@\n+# Принцип инверсии зависимостей\n+Разработчик АвтоматическогоОдевателяЧеловеков не соблюдал до конца принцип DIP при разработке.\n+И теперь добавлять новые классы одежды все сложнее и сложнее.\n+Мы хотим сделать так, чтобы АвтоматическийОдевательЧеловеков не приходилось больше менять под каждый тип одежды.  \n+Создайте новый пакет с несколькими классами зимней одежды. Обязательно добавьте класс веселой шапки на Новый Год.\n+В каждом пакете должен быть класс с тестом по одеванию всей одежды в пакете.\n+Все классы одежды должны быть непубличными."
  },
  {
    "sha": "dfec9dfafe0dd14947a7a9a04b9f98b34bf94c0f",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/LeftQuantumSock.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/LeftQuantumSock.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/LeftQuantumSock.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/LeftQuantumSock.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,5 @@\n+package net.broscorp.oop.solid.dsp.wearings.work.remote;\n+\n+public class LeftQuantumSock {\n+\n+}"
  },
  {
    "sha": "3944bc0cc6c324271d485ce086546c5b13b1c81b",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/RedPants.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/RedPants.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/RedPants.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/RedPants.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,5 @@\n+package net.broscorp.oop.solid.dsp.wearings.work.remote;\n+\n+public class RedPants {\n+\n+}"
  },
  {
    "sha": "e9c47a2a47bed6bdb14216c8cee1c08f69917f6e",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/RightQuantumSock.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/RightQuantumSock.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/RightQuantumSock.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/dsp/wearings/work/remote/RightQuantumSock.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,5 @@\n+package net.broscorp.oop.solid.dsp.wearings.work.remote;\n+\n+public class RightQuantumSock {\n+\n+}"
  },
  {
    "sha": "b1ed62b86e8aa3a7ad8eb1f24aeb46f4db09a429",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/isp/Actions.java",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/isp/Actions.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/isp/Actions.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/isp/Actions.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,86 @@\n+package net.broscorp.oop.solid.isp;\n+\n+/**\n+ * ! REMOVE ME !\n+ *\n+ * Solution:\n+ * Separate interface into HumanActions and KittyActions.\n+ *\n+ * Explanation:\n+ * Hints about that are placed in the javadocs for each method.\n+ * Jokes are also there. We need to add as much jokes as we can.\n+ * Because this is a stress test for trainee abdominals.\n+ */\n+\n+/**\n+ * You and your kitty should use this interface to be together.\n+ */\n+public interface Actions {\n+\n+  /**\n+   * Buy a food to feed the kitten later.\n+   */\n+  void buy(KittyFood food);\n+\n+  /**\n+   * Buy a toy to give it to the kitty later.\n+   */\n+  void buy(KittyToy toy);\n+\n+  /**\n+   * Food adds a much of pleasure and health to the kitty.\n+   */\n+  void eat(KittyFood food);\n+\n+  /**\n+   * Every kitty could try to eat the toy.\n+   */\n+  void eat(KittyToy toy);\n+\n+  /**\n+   * Give that food to kitty! Immediately!\n+   * Meow!!!.\n+   */\n+  void give(KittyFood toy);\n+\n+  /**\n+   * Give a toy to the kitty. Did you bought it or find somewhere - it doesn't matter.\n+   */\n+  void give(KittyToy toy);\n+\n+  /**\n+   * A kitten could hide the rest of food if it is unsure whether you will or will not feed it.\n+   */\n+  void hide(KittyFood toy);\n+\n+  /**\n+   * Fluid food is hard to bite off. Kittens often lick it.\n+   */\n+  void lick(KittyFood toy);\n+\n+  /**\n+   * Toys were not developed to be licked by anyone. But do not say that to your kitty.\n+   * This is its methods, not yours.\n+   * Also, as you could see, we do not provide a method to say something to your kitten.\n+   * Public talk with cats could damage your reputation.\n+   */\n+  void lick(KittyToy toy);\n+\n+  /**\n+   * A game is one of the main things every kitty lives for. And sleeps for it too.\n+   */\n+  void play(KittyToy toy);\n+\n+  /**\n+   * Do you know whether the food is good? Also, does your kitty know that?\n+   * For now you and your kitten could use this method. You could sniff even simultaneously!\n+   */\n+  void sniff(KittyFood food);\n+\n+  /**\n+   * This method gives no profit to you. Only kittens should use it.\n+   */\n+  void sniff(KittyToy toy);\n+\n+}\n+"
  },
  {
    "sha": "93cf04637061f09e5447d4fdd273ba22d6bf5bee",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/isp/KittyFood.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/isp/KittyFood.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/isp/KittyFood.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/isp/KittyFood.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,5 @@\n+package net.broscorp.oop.solid.isp;\n+\n+abstract class KittyFood {\n+\n+}"
  },
  {
    "sha": "ee01715d9db04eca5e7853be683c526b46e90f19",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/isp/KittyGoodsShop.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/isp/KittyGoodsShop.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/isp/KittyGoodsShop.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/isp/KittyGoodsShop.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,38 @@\n+package net.broscorp.oop.solid.isp;\n+\n+/**\n+ * ! REMOVE ME !\n+ *\n+ * Solution:\n+ * Do NOT separate interface.\n+ *\n+ * Explanation:\n+ * Fine-specified small interface.\n+ */\n+\n+/**\n+ * Every shop for kitten owners should implement this interface.\n+ */\n+public interface KittyGoodsShop {\n+\n+  /**\n+   * Sell a food to owner.\n+   */\n+  KittyFood sellFood();\n+\n+  /**\n+   * Sell a toy to owner.\n+   */\n+  KittyToy sellToy();\n+\n+  /**\n+   * Utilization of unused food is very important for saving the planet.\n+   */\n+  void returnFood(KittyFood food);\n+\n+  /**\n+   * Utilization of used toy is very important for saving the planet.\n+   */\n+  void returnToy(KittyToy toy);\n+\n+}"
  },
  {
    "sha": "468d5c96370aabca2b618a4f7bffe79deee99672",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/isp/KittyToy.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/isp/KittyToy.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/isp/KittyToy.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/isp/KittyToy.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,5 @@\n+package net.broscorp.oop.solid.isp;\n+\n+abstract class KittyToy {\n+\n+}"
  },
  {
    "sha": "dc411813960ca8798e83aeb292a488779f56a084",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/isp/README.md",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/isp/README.md",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/isp/README.md",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/isp/README.md?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,3 @@\n+# Принцип разделения интерфейса\n+Постарайтесь разделить на несколько интерфейсов, те из них, что нарушают принцип разделения.\n+Не забывайте проверять соответствие имени класса его содержимому."
  },
  {
    "sha": "684d16a8271d5e5da37bd923c3e7afe29632bd17",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/lsp/README.md",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/README.md",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/README.md",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/lsp/README.md?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,3 @@\n+# Принцип подстановки Барбары Лискоф\n+Тут представлен класс WeaponReloader для пошаговой перезарядки оружия.\n+К сожалению, не все шаги (наследники класса Step) соответствуют принципу LSP.   "
  },
  {
    "sha": "78e40e7640f4732e3818e67ccc9f8727b767d417",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/lsp/Weapon.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/Weapon.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/Weapon.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/lsp/Weapon.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,15 @@\n+package net.broscorp.oop.solid.lsp;\n+\n+public interface Weapon {\n+\n+  void block();\n+\n+  void unBlock();\n+\n+  void takeEmptyMagazineOff();\n+\n+  void shoot();\n+\n+  void insertFullMagazine();\n+\n+}"
  },
  {
    "sha": "11cb2b95d96243409f303cdc6327e951d40ae1b4",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/lsp/WeaponReloader.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/WeaponReloader.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/WeaponReloader.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/lsp/WeaponReloader.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,33 @@\n+package net.broscorp.oop.solid.lsp;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import net.broscorp.oop.solid.lsp.steps.AbstractReloadStep;\n+import net.broscorp.oop.solid.lsp.steps.MakeSafeStep;\n+import net.broscorp.oop.solid.lsp.steps.ReloadMagazineStep;\n+import net.broscorp.oop.solid.lsp.steps.ShootTestStep;\n+import net.broscorp.oop.solid.lsp.steps.VisualCheckStep;\n+\n+public class WeaponReloader {\n+\n+  Weapon reload(Weapon weapon) {\n+    List<AbstractReloadStep> steps = new ArrayList<AbstractReloadStep>();\n+    steps.add(new MakeSafeStep(weapon));\n+    steps.add(new VisualCheckStep());\n+    steps.add(new ReloadMagazineStep());\n+    steps.add(new ShootTestStep());\n+\n+    for (AbstractReloadStep step : steps) {\n+      Weapon weapon1 = step.doStep(weapon);\n+      // Some steps may produce null, so this workaround is needed\n+      if (weapon1 == null) {\n+        weapon1 = weapon;\n+      }\n+      weapon = weapon1;\n+    }\n+\n+    System.out.println(\"Weapon reloaded\");\n+    return weapon;\n+  }\n+\n+}"
  },
  {
    "sha": "19e0191fb29f712ebf11f0133caa1f2325daf417",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/lsp/steps/AbstractReloadStep.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/AbstractReloadStep.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/AbstractReloadStep.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/AbstractReloadStep.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,20 @@\n+package net.broscorp.oop.solid.lsp.steps;\n+\n+import net.broscorp.oop.solid.lsp.Weapon;\n+\n+public abstract class AbstractReloadStep {\n+\n+  /**\n+   * This prestep is required to ensure that all humans are paying attention.\n+   */\n+  public final Weapon doStep(Weapon weapon) {\n+    System.out.println(\"Hey, humans! Pay attention! I'm doing \" + this.getClass().getSimpleName());\n+    weapon = doStepInternal(weapon);\n+    System.out.println(\"Ok, that's it.\");\n+    System.out.println();\n+    return weapon;\n+  }\n+\n+  protected abstract Weapon doStepInternal(Weapon weapon);\n+\n+}"
  },
  {
    "sha": "e5603b8770354f28202258851a9c35aedd5a70aa",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/lsp/steps/MakeSafeStep.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/MakeSafeStep.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/MakeSafeStep.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/MakeSafeStep.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,24 @@\n+package net.broscorp.oop.solid.lsp.steps;\n+\n+import net.broscorp.oop.solid.lsp.Weapon;\n+\n+/**\n+ * Initial step to be sure the weapon is safe for operations.\n+ */\n+public class MakeSafeStep extends AbstractReloadStep {\n+\n+  private final Weapon weapon;\n+\n+  public MakeSafeStep(Weapon weapon) {\n+    this.weapon = weapon;\n+  }\n+\n+  // Ignoring argument since we already got the weapon in the constructor.\n+  @Override\n+  public Weapon doStepInternal(Weapon weapon) {\n+    weapon = this.weapon;\n+    weapon.block();\n+    return weapon;\n+  }\n+\n+}"
  },
  {
    "sha": "0c13eaf3a8bf3212884f8eb9cb606881fb8ddffd",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/lsp/steps/ReloadMagazineStep.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/ReloadMagazineStep.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/ReloadMagazineStep.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/ReloadMagazineStep.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,14 @@\n+package net.broscorp.oop.solid.lsp.steps;\n+\n+import net.broscorp.oop.solid.lsp.Weapon;\n+\n+public class ReloadMagazineStep extends AbstractReloadStep {\n+\n+  @Override\n+  public Weapon doStepInternal(Weapon weapon) {\n+    weapon.takeEmptyMagazineOff();\n+    weapon.insertFullMagazine();\n+    return weapon;\n+  }\n+\n+}"
  },
  {
    "sha": "323c191f0f6fc2df49e3af0f6e96481a28c2e71f",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/lsp/steps/ShootTestStep.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/ShootTestStep.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/ShootTestStep.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/ShootTestStep.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,15 @@\n+package net.broscorp.oop.solid.lsp.steps;\n+\n+import net.broscorp.oop.solid.lsp.Weapon;\n+\n+public class ShootTestStep extends AbstractReloadStep {\n+\n+  @Override\n+  public Weapon doStepInternal(Weapon weapon) {\n+    weapon.unBlock();\n+    weapon.shoot();\n+    weapon.block();\n+    return weapon;\n+  }\n+\n+}"
  },
  {
    "sha": "3ff9e33bcc0e7e7c57167597ba5f371ace48e30e",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/lsp/steps/VisualCheckStep.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/VisualCheckStep.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/VisualCheckStep.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/lsp/steps/VisualCheckStep.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,18 @@\n+package net.broscorp.oop.solid.lsp.steps;\n+\n+import net.broscorp.oop.solid.lsp.Weapon;\n+\n+public class VisualCheckStep extends AbstractReloadStep {\n+\n+  /**\n+   * Weapon is reloaded normally and verification doesn't change its state.\n+   * May be we shouldn't return unchanged state.\n+   * @return null\n+   */\n+  @Override\n+  public Weapon doStepInternal(Weapon weapon) {\n+    System.out.println(\"Weapon looks perfect!\");\n+    return null;\n+  }\n+\n+}"
  },
  {
    "sha": "ed38815f48fb4ee0fdb0a01f05985248ad029e16",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/ocp/BooleanTag.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/ocp/BooleanTag.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/ocp/BooleanTag.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/ocp/BooleanTag.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,12 @@\n+package net.broscorp.oop.solid.ocp;\n+\n+public class BooleanTag extends SortableTag {\n+\n+  static final BooleanTag TRUE_TAG = new BooleanTag(\"true\");\n+  static final BooleanTag FALSE_TAG = new BooleanTag(\"false\");\n+\n+  private BooleanTag(String word) {\n+    super(word);\n+  }\n+\n+}"
  },
  {
    "sha": "096aa7470e4c9001cb8bd691570c781c22e216ce",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/ocp/ColorTag.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/ocp/ColorTag.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/ocp/ColorTag.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/ocp/ColorTag.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,42 @@\n+package net.broscorp.oop.solid.ocp;\n+\n+public class ColorTag extends SortableTag {\n+\n+  static final String[] colors = new String[]{\n+      \"red\",\n+      \"orange\",\n+      \"yellow\",\n+      \"green\",\n+      \"blue\",\n+      \"violet\",\n+  };\n+\n+  private ColorTag(String color) {\n+    super(color);\n+  }\n+\n+  static ColorTag red() {\n+    return new ColorTag(\"red\");\n+  }\n+\n+  static ColorTag orange() {\n+    return new ColorTag(\"orange\");\n+  }\n+\n+  static ColorTag yellow() {\n+    return new ColorTag(\"yellow\");\n+  }\n+\n+  static ColorTag green() {\n+    return new ColorTag(\"green\");\n+  }\n+\n+  static ColorTag blue() {\n+    return new ColorTag(\"blue\");\n+  }\n+\n+  static ColorTag violet() {\n+    return new ColorTag(\"violet\");\n+  }\n+\n+}"
  },
  {
    "sha": "c2f9d186e222e20ac92c999ddc636b08447b0290",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/ocp/DigitTag.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/ocp/DigitTag.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/ocp/DigitTag.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/ocp/DigitTag.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,62 @@\n+package net.broscorp.oop.solid.ocp;\n+\n+public class DigitTag extends SortableTag {\n+\n+  static final String[] digits = new String[]{\n+      \"zero\",\n+      \"one\",\n+      \"two\",\n+      \"three\",\n+      \"four\",\n+      \"five\",\n+      \"six\",\n+      \"seven\",\n+      \"eight\",\n+      \"nine\",\n+  };\n+\n+  private DigitTag(String word) {\n+    super(word);\n+  }\n+\n+  static DigitTag zero() {\n+    return new DigitTag(\"zero\");\n+  }\n+\n+  static DigitTag one() {\n+    return new DigitTag(\"one\");\n+  }\n+\n+  static DigitTag two() {\n+    return new DigitTag(\"two\");\n+  }\n+\n+  static DigitTag three() {\n+    return new DigitTag(\"three\");\n+  }\n+\n+  static DigitTag four() {\n+    return new DigitTag(\"four\");\n+  }\n+\n+  static DigitTag five() {\n+    return new DigitTag(\"five\");\n+  }\n+\n+  static DigitTag six() {\n+    return new DigitTag(\"six\");\n+  }\n+\n+  static DigitTag seven() {\n+    return new DigitTag(\"seven\");\n+  }\n+\n+  static DigitTag eight() {\n+    return new DigitTag(\"eight\");\n+  }\n+\n+  static DigitTag nine() {\n+    return new DigitTag(\"nine\");\n+  }\n+\n+}"
  },
  {
    "sha": "b5409cf9166518e9aa56b7f6c4606939829d7620",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/ocp/README.md",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/ocp/README.md",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/ocp/README.md",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/ocp/README.md?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,5 @@\n+# Принцип открытости-закрытости\n+Этот набор классов делает возможной сортировку ярлыков (tag), на основе их значения.\n+Но добавлять новые типы ярлыков становится все труднее после каждого нового изменения.\n+Используя принцип OCP, измените классы так, чтобы в дальнейшем можно было добавлять новые типы ярлыков,\n+не беспокоясь о merge-hell."
  },
  {
    "sha": "d9aa02baee3ff4ca62faf8c5c432469fe0b73448",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/ocp/SortableTag.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/ocp/SortableTag.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/ocp/SortableTag.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/ocp/SortableTag.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,47 @@\n+package net.broscorp.oop.solid.ocp;\n+\n+import java.util.Arrays;\n+\n+public abstract class SortableTag implements Comparable<SortableTag> {\n+\n+  private final String word;\n+\n+  String getWord() {\n+    return word;\n+  }\n+\n+  SortableTag(String word) {\n+    this.word = word;\n+  }\n+\n+  @Override\n+  public int compareTo(SortableTag anotherTag) {\n+    if (this.getClass() != anotherTag.getClass()) {\n+      throw new IllegalStateException(String.format(\"These classes are uncomparable: %s and %s\",\n+          this.getClass(), anotherTag.getClass()));\n+    }\n+\n+    if (this.word.equals(anotherTag.word)) {\n+      return 0;\n+    }\n+\n+    String[] tags = null;\n+    if (anotherTag instanceof ColorTag) {\n+      tags = ColorTag.colors;\n+    }\n+    if (anotherTag instanceof DigitTag) {\n+      tags = DigitTag.digits;\n+    }\n+\n+    if (tags != null) {\n+      int thisIndex = Arrays.binarySearch(tags, this.word);\n+      int anotherIndex = Arrays.binarySearch(tags, anotherTag.word);\n+      return Integer.compare(thisIndex, anotherIndex);\n+    }\n+\n+    boolean thisBoolean = BooleanTag.TRUE_TAG.getWord().equals(this.word);\n+    boolean anotherBoolean = BooleanTag.TRUE_TAG.getWord().equals(anotherTag.word);\n+    return Boolean.compare(thisBoolean, anotherBoolean);\n+  }\n+\n+}"
  },
  {
    "sha": "00cfb10de3e5a2dae809aaeb8226e13ba334141f",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/srp/AdderAndSubtractor.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/srp/AdderAndSubtractor.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/srp/AdderAndSubtractor.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/srp/AdderAndSubtractor.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,32 @@\n+package net.broscorp.oop.solid.srp;\n+\n+/**\n+ * ! REMOVE ME !\n+ *\n+ * <p>Solution:\n+ * Rename the class.\n+ *\n+ * <p>Explanation:\n+ * This class contains a set of methods with well-understandable responsibility.\n+ * And the only thing - that responsibility is not represented in the name of the class.\n+ * Also, the name is ugly. So the only requirement is to prettify the name.\n+ */\n+public interface AdderAndSubtractor {\n+\n+  long add(long x, long y);\n+\n+  long add(long x, long y, long z);\n+\n+  long add(long... values);\n+\n+  long subtract(long x, long y);\n+\n+  long multiply(long x, long y);\n+\n+  long multiply(long x, long y, long z);\n+\n+  long multiply(long... values);\n+\n+  long power(long x, long y);\n+\n+}"
  },
  {
    "sha": "dc3c3863a412bbc35c2881f82d45ffb9e4c7ca34",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/srp/MapUtils.java",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/srp/MapUtils.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/srp/MapUtils.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/srp/MapUtils.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,53 @@\n+package net.broscorp.oop.solid.srp;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * ! REMOVE ME !\n+ *\n+ * <p>Solution:\n+ * Don NOT extract anything.\n+ *\n+ * <p>Explanation:\n+ * This class contains not so many methods and all of them match class name.\n+ * So the responsibility of this class is fine.\n+ */\n+public class MapUtils {\n+\n+  <T, K> Map<K, List<T>> groupBy(List<T> list, Function<T, K> keyExtractor) {\n+    return list.stream()\n+        .collect(Collectors.groupingBy(keyExtractor));\n+  }\n+\n+  <T, K> Map<K, T> toMap(List<T> list, Function<T, K> keyExtractor) {\n+    return list.stream()\n+        .collect(Collectors.toMap(\n+            keyExtractor,\n+            i -> i\n+        ));\n+  }\n+\n+  <T, K, V> Map<K, V> toMap(List<T> list, Function<T, K> keyExtractor,\n+      Function<T, V> valueExtractor) {\n+    return list.stream()\n+        .collect(Collectors.toMap(\n+            keyExtractor,\n+            valueExtractor,\n+            (t, t2) -> {\n+              throw new IllegalStateException(\"Duplicate keys are not supported\");\n+            }\n+        ));\n+  }\n+\n+  <T, K, V> Map<K, V> convertValues(Map<K, T> map, Function<T, V> valueMapper) {\n+    return map.entrySet().stream()\n+        .collect(Collectors.toMap(\n+            e -> e.getKey(),\n+            e -> valueMapper.apply(e.getValue())\n+        ));\n+  }\n+\n+}"
  },
  {
    "sha": "af61a90fe729009e63bc2b0b24749293c2503ebc",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/srp/NameStoreAndFormatter.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/srp/NameStoreAndFormatter.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/srp/NameStoreAndFormatter.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/srp/NameStoreAndFormatter.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,38 @@\n+package net.broscorp.oop.solid.srp;\n+\n+import java.util.List;\n+\n+/**\n+ * ! REMOVE ME !\n+ *\n+ * <p>Solution:\n+ * replace this interface with next couple:\n+ * interface NameStore\n+ *     add()\n+ *     find()\n+ *     remove()\n+ *\n+ * <p>interface NameFormatter\n+ *     format()\n+ *     isNameLike()\n+ *     isPatternValid()\n+ *\n+ * <p>Explanation:\n+ * We have proportional number of methods for storage and formatter.\n+ * Also, the name of interface is a hint about mixed responsibility.\n+ */\n+public interface NameStoreAndFormatter {\n+\n+  void add(String name);\n+\n+  List<String> find(String pattern);\n+\n+  String format(String name, String pattern);\n+\n+  void remove(String name);\n+\n+  boolean isNameLike(String name, String pattern);\n+\n+  boolean isPatternValid(String pattern);\n+\n+}"
  },
  {
    "sha": "08db1f009b30cf463f1ce79948d0593ce9f716b0",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/srp/NumberFormatter.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/srp/NumberFormatter.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/srp/NumberFormatter.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/srp/NumberFormatter.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,37 @@\n+package net.broscorp.oop.solid.srp;\n+\n+import java.util.stream.Stream;\n+\n+/**\n+ * ! REMOVE ME !\n+ *\n+ * <p>Solution:\n+ * Keep all format(...) methods and extract others to additional class generally named NumberUtils.\n+ * Similar names are ok.\n+ *\n+ * <p>Explanation:\n+ * We have proportional number of methods for formatting and for other around-numbers logic.\n+ */\n+public interface NumberFormatter {\n+\n+  String format(long number);\n+\n+  String format(int number);\n+\n+  String format(double number);\n+\n+  String format(float number);\n+\n+  String format(byte number);\n+\n+  boolean isPrimeNumber(int number);\n+\n+  int getPercentage(double number);\n+\n+  Stream<Long> streamFibonacciNumbersUpTo(long limit);\n+\n+  boolean isExactFloat(double number);\n+\n+  long chooseRandomly(long... numbers);\n+\n+}"
  },
  {
    "sha": "58a619588d6561a44ff99bb31c32fe782a316aa7",
    "filename": "module1/src/main/java/net/broscorp/oop/solid/srp/PatternStoreAndValidator.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/Broscorp-net/traineeship/blob/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/srp/PatternStoreAndValidator.java",
    "raw_url": "https://github.com/Broscorp-net/traineeship/raw/12ed760de6f9c96ae64f807f5b76bab9f296a9f6/module1/src/main/java/net/broscorp/oop/solid/srp/PatternStoreAndValidator.java",
    "contents_url": "https://api.github.com/repos/Broscorp-net/traineeship/contents/module1/src/main/java/net/broscorp/oop/solid/srp/PatternStoreAndValidator.java?ref=12ed760de6f9c96ae64f807f5b76bab9f296a9f6",
    "patch": "@@ -0,0 +1,34 @@\n+package net.broscorp.oop.solid.srp;\n+\n+import java.util.List;\n+\n+/**\n+ * ! REMOVE ME !\n+ *\n+ * <p>Solution:\n+ * 1. Don NOT extract anything.\n+ * 2. Class renaming is possible. But then additional comment is required about the rename decision.\n+ *\n+ * <p>Explanation:\n+ * The name of interface just distracts from the main responsibility.\n+ * The most of methods are for storage and only one looks like about formatting.\n+ * And that only method is too few for extracting it into separated class.\n+ * So some attention have to be paid for the mixed responsibility.\n+ * And if name is changed regarding the responsibility then this have to be provided\n+ * to reviewer via javadoc or any other method.\n+ */\n+public interface PatternStoreAndValidator {\n+\n+  void add(String name);\n+\n+  List<String> find(String pattern);\n+\n+  boolean isNameLike(String name, String pattern);\n+\n+  boolean exists(String name);\n+\n+  void remove(String name);\n+\n+  void replaceOldWithNew(String oldName, String newName);\n+\n+}"
  }
]
