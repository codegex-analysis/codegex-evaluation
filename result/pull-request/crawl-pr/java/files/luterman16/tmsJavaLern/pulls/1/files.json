[
  {
    "sha": "266b9d2ae766fc0374ec784838dac92faf49ed3c",
    "filename": "src/Project.java",
    "status": "modified",
    "additions": 37,
    "deletions": 37,
    "changes": 74,
    "blob_url": "https://github.com/luterman16/tmsJavaLern/blob/795f8b37d114e758831c1a362d437605fe1734ea/src/Project.java",
    "raw_url": "https://github.com/luterman16/tmsJavaLern/raw/795f8b37d114e758831c1a362d437605fe1734ea/src/Project.java",
    "contents_url": "https://api.github.com/repos/luterman16/tmsJavaLern/contents/src/Project.java?ref=795f8b37d114e758831c1a362d437605fe1734ea",
    "patch": "@@ -1,37 +1,37 @@\n-import hw_050321.*;\n-\n-public class Project {\n-    public static void main(String[] args) {\n-\n-        // Запуск первого задания\n-       Task1_if task1_if = new Task1_if();\n-       task1_if.isOverlap();\n-/*\n-        // Запуск второго задания\n-        Task2_switch task2_switch = new Task2_switch();\n-        task2_switch.dayOfWeek();\n-\n-        // Запуск третьего задания\n-        Task3_for task3_for = new Task3_for();\n-        task3_for.outStars();\n-\n-        // запуск четвертого задания\n-        Task4_vector task4_vector = new Task4_vector();\n-        task4_vector.vector();\n-\n-        // запуск пятого задания\n-        Task5_bubbleSort task5_bubbleSort = new Task5_bubbleSort();\n-        task5_bubbleSort.bubbleSort();\n-\n-        // запуск шестого задания\n-        Task6_array2x task6_array2x = new Task6_array2x();\n-        task6_array2x.printArray2x();\n-\n-\n-        // запуск седьмого задания\n-        Task7_notchedArray task7_notchedArray = new Task7_notchedArray();\n-        task7_notchedArray.notchedArray();\n-   */\n-\n-    }\n-}\n+//import hw_050321.*;\n+//\n+//public class Project {\n+//    public static void main(String[] args) {\n+//\n+//        // Запуск первого задания\n+//       Task1_if task1_if = new Task1_if();\n+//       task1_if.isOverlap();\n+///*\n+//        // Запуск второго задания\n+//        Task2_switch task2_switch = new Task2_switch();\n+//        task2_switch.dayOfWeek();\n+//\n+//        // Запуск третьего задания\n+//        Task3_for task3_for = new Task3_for();\n+//        task3_for.outStars();\n+//\n+//        // запуск четвертого задания\n+//        Task4_vector task4_vector = new Task4_vector();\n+//        task4_vector.vector();\n+//\n+//        // запуск пятого задания\n+//        Task5_bubbleSort task5_bubbleSort = new Task5_bubbleSort();\n+//        task5_bubbleSort.bubbleSort();\n+//\n+//        // запуск шестого задания\n+//        Task6_array2x task6_array2x = new Task6_array2x();\n+//        task6_array2x.printArray2x();\n+//\n+//\n+//        // запуск седьмого задания\n+//        Task7_notchedArray task7_notchedArray = new Task7_notchedArray();\n+//        task7_notchedArray.notchedArray();\n+//   */\n+//\n+//    }\n+//}"
  },
  {
    "sha": "5cbaa50c2e7e1963e0fe483a14df091b895750c6",
    "filename": "src/hw_120321/Task1Trainee.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/luterman16/tmsJavaLern/blob/795f8b37d114e758831c1a362d437605fe1734ea/src/hw_120321/Task1Trainee.java",
    "raw_url": "https://github.com/luterman16/tmsJavaLern/raw/795f8b37d114e758831c1a362d437605fe1734ea/src/hw_120321/Task1Trainee.java",
    "contents_url": "https://api.github.com/repos/luterman16/tmsJavaLern/contents/src/hw_120321/Task1Trainee.java?ref=795f8b37d114e758831c1a362d437605fe1734ea",
    "patch": "@@ -0,0 +1,14 @@\n+package hw_120321;\n+\n+public class Task1Trainee {\n+    public static void main(String[] args) {\n+        double km = 10;\n+        double total = 0;\n+\n+        for (int i = 0; i < 6; i++) {\n+            km += km / 100 * 10;\n+            total += km;\n+        }\n+        System.out.println(total);\n+    }\n+}"
  },
  {
    "sha": "4c7841ca0c7263612c93aba98ffa1f93af068ede",
    "filename": "src/hw_120321/Task2Ameba.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/luterman16/tmsJavaLern/blob/795f8b37d114e758831c1a362d437605fe1734ea/src/hw_120321/Task2Ameba.java",
    "raw_url": "https://github.com/luterman16/tmsJavaLern/raw/795f8b37d114e758831c1a362d437605fe1734ea/src/hw_120321/Task2Ameba.java",
    "contents_url": "https://api.github.com/repos/luterman16/tmsJavaLern/contents/src/hw_120321/Task2Ameba.java?ref=795f8b37d114e758831c1a362d437605fe1734ea",
    "patch": "@@ -0,0 +1,15 @@\n+package hw_120321;\n+\n+public class Task2Ameba {\n+    public static void main(String[] args) {\n+        int amebaCount = 1;\n+        int time = 3;\n+\n+        while (time <= 24) {\n+            time += 3;\n+            amebaCount *= 2;\n+        };\n+\n+        System.out.println(amebaCount);\n+    }\n+}"
  },
  {
    "sha": "431ec8b2e3d40cc3a43bf8500688c9d27511426f",
    "filename": "src/hw_120321/Task3SumOddnest.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/luterman16/tmsJavaLern/blob/795f8b37d114e758831c1a362d437605fe1734ea/src/hw_120321/Task3SumOddnest.java",
    "raw_url": "https://github.com/luterman16/tmsJavaLern/raw/795f8b37d114e758831c1a362d437605fe1734ea/src/hw_120321/Task3SumOddnest.java",
    "contents_url": "https://api.github.com/repos/luterman16/tmsJavaLern/contents/src/hw_120321/Task3SumOddnest.java?ref=795f8b37d114e758831c1a362d437605fe1734ea",
    "patch": "@@ -0,0 +1,14 @@\n+package hw_120321;\n+\n+public class Task3SumOddnest {\n+    public static void main(String[] args) {\n+        int total = 0;\n+\n+        for (int i = 0; i < 100; i++) {\n+            if (i % 2 != 0) {\n+                total += i;\n+            }\n+        }\n+        System.out.println(total);\n+    }\n+}"
  },
  {
    "sha": "70725343c8e22fe278b2fb0120a625d99774366a",
    "filename": "src/hw_120321/Task4Array.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/luterman16/tmsJavaLern/blob/795f8b37d114e758831c1a362d437605fe1734ea/src/hw_120321/Task4Array.java",
    "raw_url": "https://github.com/luterman16/tmsJavaLern/raw/795f8b37d114e758831c1a362d437605fe1734ea/src/hw_120321/Task4Array.java",
    "contents_url": "https://api.github.com/repos/luterman16/tmsJavaLern/contents/src/hw_120321/Task4Array.java?ref=795f8b37d114e758831c1a362d437605fe1734ea",
    "patch": "@@ -0,0 +1,50 @@\n+package hw_120321;\n+\n+import java.util.Arrays;\n+import java.util.Scanner;\n+\n+public class Task4Array {\n+    public static void main(String[] args) {\n+        Scanner sc = new Scanner(System.in);\n+        System.out.println(\"Введите число больше 3:\");\n+\n+        int n = 0;\n+        //Зацикливаем приём числа >3 пока не будет число >3\n+        while (n <= 3) {\n+            if (sc.hasNextInt()) {\n+                n = sc.nextInt();\n+                if (n <= 3) {\n+                    System.out.println(\"Введенное число должно быть больше 3. Повторите ввод:\");\n+                }\n+            } else {\n+                System.out.println(\"Вы ввели не число. Повторите ввод:\");\n+                sc.next();\n+            }\n+        }\n+\n+        //Создаём и заполняем массив\n+        int[] array = new int[n];\n+        int countParityElements = 0;   // Счётчик чётных элементов\n+\n+        for (int i = 0; i < n; i++) {\n+            array[i] = (int) (Math.random() * n);\n+            if(array[i]%2 == 0) {\n+                countParityElements++;\n+            }\n+        }\n+\n+        System.out.println(Arrays.toString(array));\n+\n+        //Создание и заполнение массива из нечётных элементов первого массива\n+        int[] array2 = new int[countParityElements];\n+        int indexArr2 = 0;\n+        for (int i = 0; i < array.length; i++) {\n+            if (array[i] % 2 == 0) {\n+                array2[indexArr2] = array[i];\n+                indexArr2++;\n+            }\n+        }\n+\n+        System.out.println(Arrays.toString(array2));\n+    }\n+}"
  },
  {
    "sha": "a0c27bbf85ed7ca8e693ebd654997d24acc1cd7c",
    "filename": "src/hw_120321/Task5Recursion.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/luterman16/tmsJavaLern/blob/795f8b37d114e758831c1a362d437605fe1734ea/src/hw_120321/Task5Recursion.java",
    "raw_url": "https://github.com/luterman16/tmsJavaLern/raw/795f8b37d114e758831c1a362d437605fe1734ea/src/hw_120321/Task5Recursion.java",
    "contents_url": "https://api.github.com/repos/luterman16/tmsJavaLern/contents/src/hw_120321/Task5Recursion.java?ref=795f8b37d114e758831c1a362d437605fe1734ea",
    "patch": "@@ -0,0 +1,41 @@\n+package hw_120321;\n+\n+import java.util.Scanner;\n+\n+public class Task5Recursion {\n+    public static void main(String[] args) {\n+        Scanner sc = new Scanner(System.in);\n+        System.out.println(\"Введите число больше 1:\");\n+\n+        int n = 0;\n+        //Зацикливаем приём числа >1 пока не будет число >1\n+        while (n <= 1) {\n+            if (sc.hasNextInt()) {\n+                n = sc.nextInt();\n+                if (n <= 1) {\n+                    System.out.println(\"Введенное число должно быть больше 1. Повторите ввод:\");\n+                }\n+            } else {\n+                System.out.println(\"Вы ввели не число. Повторите ввод:\");\n+                sc.next();\n+            }\n+        }\n+\n+        //Вызов функции для определении сосавного/простого числа\n+        String actual = isSimple(n, n - 1);\n+\n+        //Распечатать результат\n+        System.out.printf(\"Is number %d simple - %s\", n, actual);\n+\n+    }\n+\n+    static String isSimple(int x, int y) {\n+        if (y == 1) {\n+            return \"Yes\";\n+        }\n+        if (x % y == 0) {\n+            return \"No\";\n+        }\n+        return isSimple(x, y - 1);\n+    }\n+}"
  }
]
