[
  {
    "sha": "cf91861f592fad5cfd91c4598b625f1c51ed4212",
    "filename": "src/main/java/ru/sbt/mipt/oop/Action.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Action.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Action.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Action.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.util.function.Function;\n+\n+public interface Action {\n+    void act(HomeComponent component);\n+}"
  },
  {
    "sha": "30e892b747f4dc0d0fb531418b2526e9cf9cedcd",
    "filename": "src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Actionable.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface Actionable {\n+    void execute(Action action);\n+}"
  },
  {
    "sha": "b3ab260303fc6887d2fa66497181ada574980622",
    "filename": "src/main/java/ru/sbt/mipt/oop/Application.java",
    "status": "modified",
    "additions": 10,
    "deletions": 70,
    "changes": 80,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Application.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Application.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Application.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -1,80 +1,20 @@\n package ru.sbt.mipt.oop;\n \n-import com.google.gson.Gson;\n-\n import java.io.IOException;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-\n-import static ru.sbt.mipt.oop.SensorEventType.*;\n+import java.util.ArrayList;\n+import java.util.List;\n \n public class Application {\n \n-    public static void main(String... args) throws IOException {\n-        // считываем состояние дома из файла\n-        Gson gson = new Gson();\n-        String json = new String(Files.readAllBytes(Paths.get(\"smart-home-1.js\")));\n-        SmartHome smartHome = gson.fromJson(json, SmartHome.class);\n-        // начинаем цикл обработки событий\n-        SensorEvent event = getNextSensorEvent();\n-        while (event != null) {\n-            System.out.println(\"Got event: \" + event);\n-            if (event.getType() == LIGHT_ON || event.getType() == LIGHT_OFF) {\n-                // событие от источника света\n-                for (Room room : smartHome.getRooms()) {\n-                    for (Light light : room.getLights()) {\n-                        if (light.getId().equals(event.getObjectId())) {\n-                            if (event.getType() == LIGHT_ON) {\n-                                light.setOn(true);\n-                                System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned on.\");\n-                            } else {\n-                                light.setOn(false);\n-                                System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned off.\");\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            if (event.getType() == DOOR_OPEN || event.getType() == DOOR_CLOSED) {\n-                // событие от двери\n-                for (Room room : smartHome.getRooms()) {\n-                    for (Door door : room.getDoors()) {\n-                        if (door.getId().equals(event.getObjectId())) {\n-                            if (event.getType() == DOOR_OPEN) {\n-                                door.setOpen(true);\n-                                System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was opened.\");\n-                            } else {\n-                                door.setOpen(false);\n-                                System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was closed.\");\n-                                // если мы получили событие о закрытие двери в холле - это значит, что была закрыта входная дверь.\n-                                // в этом случае мы хотим автоматически выключить свет во всем доме (это же умный дом!)\n-                                if (room.getName().equals(\"hall\")) {\n-                                    for (Room homeRoom : smartHome.getRooms()) {\n-                                        for (Light light : homeRoom.getLights()) {\n-                                            light.setOn(false);\n-                                            SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF, light.getId());\n-                                            sendCommand(command);\n-                                        }\n-                                    }\n-                                }\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            event = getNextSensorEvent();\n-        }\n+    public static void main(String... args) {\n+        SmartHome smartHome = new JSONSmartHomeReader(\"smart-home-1.js\").readHome();\n+        ArrayList<EventHandler> handlers = new ArrayList<>();\n+        handlers.add(new LightEventHandler(smartHome));\n+        handlers.add(new DoorEventHandler(smartHome));\n+        handlers.add(new HallDoorEventHandler(smartHome));\n+        EventLoop eventLoop = new EventLoop(smartHome, handlers);\n+        eventLoop.process();\n     }\n \n-    private static void sendCommand(SensorCommand command) {\n-        System.out.println(\"Pretent we're sending command \" + command);\n-    }\n \n-    private static SensorEvent getNextSensorEvent() {\n-        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n-        if (Math.random() < 0.05) return null; // null means end of event stream\n-        SensorEventType sensorEventType = SensorEventType.values()[(int) (4 * Math.random())];\n-        String objectId = \"\" + ((int) (10 * Math.random()));\n-        return new SensorEvent(sensorEventType, objectId);\n-    }\n }"
  },
  {
    "sha": "73b14e73ed1d6a97c922fa2a20553707bb9127f4",
    "filename": "src/main/java/ru/sbt/mipt/oop/CommandSender.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/CommandSender.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/CommandSender.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/CommandSender.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface CommandSender {\n+    void sendCommand(SensorCommand command);\n+}"
  },
  {
    "sha": "21063de14c54be861bfd448502b0b213e96352d3",
    "filename": "src/main/java/ru/sbt/mipt/oop/Door.java",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Door.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Door.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Door.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -1,6 +1,6 @@\n package ru.sbt.mipt.oop;\n \n-public class Door {\n+public class Door implements HomeComponent, Actionable {\n     private final String id;\n     private boolean isOpen;\n \n@@ -16,4 +16,13 @@ public String getId() {\n     public void setOpen(boolean open) {\n         isOpen = open;\n     }\n+\n+    public boolean getOpen() {\n+        return isOpen;\n+    }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.act(this);\n+    }\n }"
  },
  {
    "sha": "d494be6597c4817619bdf443b02c46241761f359",
    "filename": "src/main/java/ru/sbt/mipt/oop/DoorEventHandler.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/DoorEventHandler.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/DoorEventHandler.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/DoorEventHandler.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.sbt.mipt.oop;\n+\n+import static ru.sbt.mipt.oop.SensorEventType.*;\n+import static ru.sbt.mipt.oop.SensorEventType.LIGHT_OFF;\n+\n+public class DoorEventHandler implements EventHandler{\n+\n+    DoorEventHandler(SmartHome smartHome){\n+        this.smartHome = smartHome;\n+        this.commandPrinter = new PrintCommandSender();\n+    }\n+\n+    @Override\n+    public Action handleEvent(SensorEvent event) {\n+        return ((component -> {\n+            if (component instanceof Door){\n+                Door door = (Door)component;\n+                if (SmartHomeHelpers.isHallDoor(smartHome, door.getId())){\n+                    return;\n+                }\n+                if (!door.getId().equals(event.getObjectId())) {\n+                    return;\n+                }\n+                    if (event.getType() == DOOR_OPEN) {\n+                        door.setOpen(true);\n+                        System.out.println(\"Door \" + door.getId() + \" was opened.\");\n+                    }\n+                    if (event.getType() == DOOR_CLOSED){\n+                        door.setOpen(false);\n+                        System.out.println(\"Door \" + door.getId() + \" was closed.\");\n+                    }\n+            }\n+        }));\n+\n+    }\n+\n+    SmartHome smartHome;\n+    PrintCommandSender commandPrinter;\n+}"
  },
  {
    "sha": "7d2c3ad9122f6f0f090cbab0e2d65eccae4929a0",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventHandler.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/EventHandler.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/EventHandler.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/EventHandler.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.util.function.Function;\n+\n+public interface EventHandler {\n+    Action handleEvent(SensorEvent event);\n+}"
  },
  {
    "sha": "d6b0a87b1c397fe756da93d3501f843f14747b75",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventLoop.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/EventLoop.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/EventLoop.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/EventLoop.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,32 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.util.ArrayList;\n+\n+import static ru.sbt.mipt.oop.SensorEventType.*;\n+import static ru.sbt.mipt.oop.SensorEventType.DOOR_CLOSED;\n+\n+public class EventLoop {\n+    EventLoop(SmartHome smartHome, ArrayList<EventHandler> handlers){\n+        this.smartHome = smartHome;\n+        this.handlers = handlers;\n+    }\n+\n+    void process(){\n+        // создаём обработчик\n+\n+        // начинаем цикл обработки событий\n+        RandomSensorEventGenerator generator = new RandomSensorEventGenerator();\n+        SensorEvent event = generator.getNextSensorEvent();\n+        while (event != null) {\n+            System.out.println(\"Got event: \" + event);\n+            for (EventHandler handler:handlers){\n+                Action action = handler.handleEvent(event);\n+                smartHome.execute(action);\n+            }\n+            event = generator.getNextSensorEvent();\n+        }\n+    }\n+\n+    SmartHome smartHome;\n+    ArrayList<EventHandler> handlers;\n+}"
  },
  {
    "sha": "b32752c154b37b16c472efb410d21ebc2f57169c",
    "filename": "src/main/java/ru/sbt/mipt/oop/HallDoorEventHandler.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/HallDoorEventHandler.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/HallDoorEventHandler.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HallDoorEventHandler.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,45 @@\n+package ru.sbt.mipt.oop;\n+\n+import static ru.sbt.mipt.oop.SensorEventType.DOOR_CLOSED;\n+import static ru.sbt.mipt.oop.SensorEventType.DOOR_OPEN;\n+\n+public class HallDoorEventHandler implements EventHandler{\n+\n+    HallDoorEventHandler(SmartHome smartHome){\n+        this.smartHome = smartHome;\n+        this.commandPrinter = new PrintCommandSender();\n+    }\n+\n+    @Override\n+    public Action handleEvent(SensorEvent event) {\n+        return ((component -> {\n+            if (component instanceof Door){\n+                Door door = (Door)component;\n+                if (!SmartHomeHelpers.isHallDoor(smartHome, door.getId())){\n+                    return;\n+                }\n+                if (!door.getId().equals(event.getObjectId())) {\n+                    return;\n+                }\n+                    if (event.getType() == DOOR_OPEN) {\n+                        door.setOpen(true);\n+                        System.out.println(\"Door \" + door.getId() + \" was opened.\");\n+                    }\n+                    if (event.getType() == DOOR_CLOSED){\n+                        door.setOpen(false);\n+                        System.out.println(\"Door (hall) \" + door.getId() + \" was closed.\");\n+                        smartHome.execute((innerComponent)->{\n+                            if (innerComponent instanceof Light){\n+                                Light light = (Light)innerComponent;\n+                                System.out.println(\"Light \" + light.getId() + \" was turned off.\");\n+                                light.setOn(false);\n+                            }\n+                        });\n+                    }\n+            }\n+        }));\n+    }\n+\n+    SmartHome smartHome;\n+    PrintCommandSender commandPrinter;\n+}"
  },
  {
    "sha": "cb536fdc398c10013b9c60cd34b98aa906f9b107",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeComponent.java",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/HomeComponent.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/HomeComponent.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomeComponent.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,4 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface HomeComponent {\n+}"
  },
  {
    "sha": "c3ff82158a182658e6b4da9e52774b3bf93613bd",
    "filename": "src/main/java/ru/sbt/mipt/oop/JSONSmartHomeReader.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/JSONSmartHomeReader.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/JSONSmartHomeReader.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/JSONSmartHomeReader.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,29 @@\n+package ru.sbt.mipt.oop;\n+\n+import com.google.gson.Gson;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+\n+public class JSONSmartHomeReader implements SmartHomeReader{\n+    JSONSmartHomeReader(String filename){\n+        this.filename = filename;\n+    }\n+\n+    private final String filename;\n+\n+    @Override\n+    public SmartHome readHome(){\n+        SmartHome smartHome;\n+        try {\n+            Gson gson = new Gson();\n+            String json = new String(Files.readAllBytes(Paths.get(filename)));\n+            smartHome = gson.fromJson(json, SmartHome.class);\n+        } catch (IOException e){\n+            smartHome = new SmartHome();\n+        }\n+        return smartHome;\n+    }\n+\n+}"
  },
  {
    "sha": "7f7c4721cf6de92d00c0f6dad9c062167091e744",
    "filename": "src/main/java/ru/sbt/mipt/oop/Light.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Light.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Light.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Light.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -1,6 +1,6 @@\n package ru.sbt.mipt.oop;\n \n-public class Light {\n+public class Light implements HomeComponent, Actionable {\n     private boolean isOn;\n     private final String id;\n \n@@ -20,4 +20,9 @@ public String getId() {\n     public void setOn(boolean on) {\n         isOn = on;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+         action.act(this);\n+    }\n }"
  },
  {
    "sha": "1a91f0db848c961546b38bcea130f05237f9d883",
    "filename": "src/main/java/ru/sbt/mipt/oop/LightEventHandler.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/LightEventHandler.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/LightEventHandler.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/LightEventHandler.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,34 @@\n+package ru.sbt.mipt.oop;\n+\n+import java.util.function.Function;\n+\n+import static ru.sbt.mipt.oop.SensorEventType.LIGHT_ON;\n+import static ru.sbt.mipt.oop.SensorEventType.LIGHT_OFF;\n+\n+public class LightEventHandler implements EventHandler{\n+\n+    LightEventHandler(SmartHome smartHome){\n+        this.smartHome = smartHome;\n+    }\n+\n+    @Override\n+    public Action handleEvent(SensorEvent event) {\n+            return ((component) -> {\n+                if (component instanceof Light) {\n+                    Light light = (Light) component;\n+                    if (light.getId().equals(event.getObjectId())) {\n+                        if (event.getType() == LIGHT_ON) {\n+                            light.setOn(true);\n+                            System.out.println(\"Light \" + light.getId() + \" was turned on.\");\n+                        }\n+                        if (event.getType() == LIGHT_OFF) {\n+                            light.setOn(false);\n+                            System.out.println(\"Light \" + light.getId() + \" was turned off.\");\n+                        }\n+                    }\n+                }\n+            });\n+    }\n+\n+    SmartHome smartHome;\n+}"
  },
  {
    "sha": "2038fdc75f4a943b769809e20ef4fda7a4ae4c9d",
    "filename": "src/main/java/ru/sbt/mipt/oop/PrintCommandSender.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/PrintCommandSender.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/PrintCommandSender.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/PrintCommandSender.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,8 @@\n+package ru.sbt.mipt.oop;\n+\n+public class PrintCommandSender implements CommandSender{\n+    @Override\n+    public void sendCommand(SensorCommand command) {\n+        System.out.println(\"Pretent we're sending command \" + command);\n+    }\n+}"
  },
  {
    "sha": "bd28d60f124cfa1db3f8b97d2e6bfc2ab7f0c277",
    "filename": "src/main/java/ru/sbt/mipt/oop/RandomSensorEventGenerator.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/RandomSensorEventGenerator.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/RandomSensorEventGenerator.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/RandomSensorEventGenerator.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,12 @@\n+package ru.sbt.mipt.oop;\n+\n+public class RandomSensorEventGenerator implements SensorEventGenerator{\n+    @Override\n+    public SensorEvent getNextSensorEvent() {\n+        // pretend like we're getting the events from physical world, but here we're going to just generate some random events\n+        if (Math.random() < 0.05) return null; // null means end of event stream\n+        SensorEventType sensorEventType = SensorEventType.values()[(int) (4 * Math.random())];\n+        String objectId = \"\" + ((int) (10 * Math.random()));\n+        return new SensorEvent(sensorEventType, objectId);\n+    }\n+}"
  },
  {
    "sha": "b842f3747a1fb5a801dd9397c6589abc7d2c4a96",
    "filename": "src/main/java/ru/sbt/mipt/oop/Room.java",
    "status": "modified",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Room.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/Room.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Room.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -2,7 +2,7 @@\n \n import java.util.Collection;\n \n-public class Room {\n+public class Room implements Actionable{\n     private Collection<Light> lights;\n     private Collection<Door> doors;\n     private String name;\n@@ -24,4 +24,14 @@ public Room(Collection<Light> lights, Collection<Door> doors, String name) {\n     public String getName() {\n         return name;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        for (Light light:lights){\n+            light.execute(action);\n+        }\n+        for (Door door:doors){\n+            door.execute(action);\n+        }\n+    }\n }"
  },
  {
    "sha": "083b481ae312962e8913252d31f27a2957cda286",
    "filename": "src/main/java/ru/sbt/mipt/oop/SensorEventGenerator.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/SensorEventGenerator.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/SensorEventGenerator.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/SensorEventGenerator.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface SensorEventGenerator {\n+    SensorEvent getNextSensorEvent();\n+}"
  },
  {
    "sha": "9d6c78e42e6438d04929bd5d82ba38602fceeaca",
    "filename": "src/main/java/ru/sbt/mipt/oop/SmartHome.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/SmartHome.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/SmartHome.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/SmartHome.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -3,13 +3,20 @@\n import java.util.ArrayList;\n import java.util.Collection;\n \n-public class SmartHome {\n+public class SmartHome implements HomeComponent, Actionable{\n     Collection<Room> rooms;\n \n     public SmartHome() {\n         rooms = new ArrayList<>();\n     }\n \n+    @Override\n+    public void execute(Action action){\n+        for (Room room:rooms){\n+            room.execute(action);\n+        }\n+    }\n+\n     public SmartHome(Collection<Room> rooms) {\n         this.rooms = rooms;\n     }"
  },
  {
    "sha": "d4b40a0f70cc08055021f082ebab5012e4bad202",
    "filename": "src/main/java/ru/sbt/mipt/oop/SmartHomeHelpers.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/SmartHomeHelpers.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/SmartHomeHelpers.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/SmartHomeHelpers.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,36 @@\n+package ru.sbt.mipt.oop;\n+\n+public class SmartHomeHelpers {\n+    static boolean isHallDoor(SmartHome smartHome, String id){\n+        for (Room room : smartHome.getRooms()) {\n+            for (Door door : room.getDoors()) {\n+                if ((door.getId().equals(id)) && (room.getName().equals(\"hall\"))){\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    static Door getDoorById(SmartHome smartHome, String id){\n+        for (Room room : smartHome.getRooms()) {\n+            for (Door door : room.getDoors()) {\n+                if (door.getId().equals(id)){\n+                    return door;\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+\n+    static Light getLightById(SmartHome smartHome, String id){\n+        for (Room room : smartHome.getRooms()) {\n+            for (Light light : room.getLights()) {\n+                if (light.getId().equals(id)){\n+                    return light;\n+                }\n+            }\n+        }\n+        return null;\n+    }\n+}"
  },
  {
    "sha": "ae0712ad52c38bff861666934b93d8df42cf6e1f",
    "filename": "src/main/java/ru/sbt/mipt/oop/SmartHomeReader.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/SmartHomeReader.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/main/java/ru/sbt/mipt/oop/SmartHomeReader.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/SmartHomeReader.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop;\n+\n+public interface SmartHomeReader {\n+    SmartHome readHome();\n+}"
  },
  {
    "sha": "b4344d8b08b3d3af35559b900fadd419e6edf72f",
    "filename": "src/test/java/ru/sbt/mipt/oop/EventHandlersTest.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/blob/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/test/java/ru/sbt/mipt/oop/EventHandlersTest.java",
    "raw_url": "https://github.com/Khabutdinov-Arslan/smart-home-2021/raw/52c46b84781b39bff62bbde7b38aac37c30c3d9c/src/test/java/ru/sbt/mipt/oop/EventHandlersTest.java",
    "contents_url": "https://api.github.com/repos/Khabutdinov-Arslan/smart-home-2021/contents/src/test/java/ru/sbt/mipt/oop/EventHandlersTest.java?ref=52c46b84781b39bff62bbde7b38aac37c30c3d9c",
    "patch": "@@ -0,0 +1,62 @@\n+package ru.sbt.mipt.oop;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.util.ArrayList;\n+import java.util.Objects;\n+\n+public class EventHandlersTest {\n+    SmartHome smartHome;\n+\n+    @Before\n+    public void init(){\n+        this.smartHome = new JSONSmartHomeReader(\"smart-home-1.js\").readHome();\n+    }\n+\n+    @Test\n+    public void HandleDoorOpenTest(){\n+        smartHome.execute(new DoorEventHandler(smartHome).\n+                handleEvent(new SensorEvent(SensorEventType.DOOR_OPEN, \"1\")));\n+        Assert.assertTrue(Objects.requireNonNull(SmartHomeHelpers.getDoorById(smartHome, \"1\")).getOpen());\n+    }\n+\n+    @Test\n+    public void HandleDoorCloseTest(){\n+        smartHome.execute(new DoorEventHandler(smartHome).\n+                handleEvent(new SensorEvent(SensorEventType.DOOR_CLOSED, \"1\")));\n+        Assert.assertFalse(Objects.requireNonNull(SmartHomeHelpers.getDoorById(smartHome, \"1\")).getOpen());\n+    }\n+\n+    @Test\n+    public void HandleHallDoorOpenTest(){\n+        smartHome.execute(new HallDoorEventHandler(smartHome).\n+                handleEvent(new SensorEvent(SensorEventType.DOOR_OPEN, \"4\")));\n+        Assert.assertTrue(Objects.requireNonNull(SmartHomeHelpers.getDoorById(smartHome, \"4\")).getOpen());\n+    }\n+\n+    @Test\n+    public void HandleHallDoorCloseTest(){\n+        smartHome.execute(new LightEventHandler(smartHome).\n+                handleEvent(new SensorEvent(SensorEventType.LIGHT_ON, \"6\")));\n+        smartHome.execute(new HallDoorEventHandler(smartHome).\n+                handleEvent(new SensorEvent(SensorEventType.DOOR_CLOSED, \"4\")));\n+        Assert.assertFalse(Objects.requireNonNull(SmartHomeHelpers.getDoorById(smartHome, \"4\")).getOpen());\n+        Assert.assertFalse(Objects.requireNonNull(SmartHomeHelpers.getLightById(smartHome, \"6\")).isOn());\n+    }\n+\n+    @Test\n+    public void HandleLightOnTest(){\n+        smartHome.execute(new LightEventHandler(smartHome).\n+                handleEvent(new SensorEvent(SensorEventType.LIGHT_ON, \"6\")));\n+        Assert.assertTrue(Objects.requireNonNull(SmartHomeHelpers.getLightById(smartHome, \"6\")).isOn());\n+    }\n+\n+    @Test\n+    public void HandleLightOffTest(){\n+        smartHome.execute(new LightEventHandler(smartHome).\n+                handleEvent(new SensorEvent(SensorEventType.LIGHT_OFF, \"6\")));\n+        Assert.assertFalse(Objects.requireNonNull(SmartHomeHelpers.getLightById(smartHome, \"6\")).isOn());\n+    }\n+}"
  }
]
