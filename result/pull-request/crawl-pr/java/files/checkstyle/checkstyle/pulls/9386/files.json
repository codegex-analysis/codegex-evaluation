[
  {
    "sha": "a5693d96cba3db73c48f7e3070f70b1346d4e813",
    "filename": "src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/OperatorWrapTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/checkstyle/checkstyle/blob/0f1b13e429d11b85f04f576d773e0d31f75bc4c8/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/OperatorWrapTest.java",
    "raw_url": "https://github.com/checkstyle/checkstyle/raw/0f1b13e429d11b85f04f576d773e0d31f75bc4c8/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/OperatorWrapTest.java",
    "contents_url": "https://api.github.com/repos/checkstyle/checkstyle/contents/src/it/java/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/OperatorWrapTest.java?ref=0f1b13e429d11b85f04f576d773e0d31f75bc4c8",
    "patch": "@@ -42,6 +42,7 @@ public void testOperatorWrap() throws Exception {\n             \"12:28: \" + getCheckMessage(clazz, messageKey, \"-\"),\n             \"20:27: \" + getCheckMessage(clazz, messageKey, \"&&\"),\n             \"28:33: \" + getCheckMessage(clazz, messageKey, \"::\"),\n+            \"43:35: \" + getCheckMessage(clazz, messageKey, \"&\"),\n             \"62:42: \" + getCheckMessage(clazz, messageKey, \"?\"),\n             \"66:27: \" + getCheckMessage(clazz, messageKey, \"!=\"),\n             \"72:30: \" + getCheckMessage(clazz, messageKey, \"==\"),"
  },
  {
    "sha": "f00b171bde2151f76f1631498d0f0b8386d820f1",
    "filename": "src/it/resources/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/InputOperatorWrap.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/checkstyle/checkstyle/blob/0f1b13e429d11b85f04f576d773e0d31f75bc4c8/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/InputOperatorWrap.java",
    "raw_url": "https://github.com/checkstyle/checkstyle/raw/0f1b13e429d11b85f04f576d773e0d31f75bc4c8/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/InputOperatorWrap.java",
    "contents_url": "https://api.github.com/repos/checkstyle/checkstyle/contents/src/it/resources/com/google/checkstyle/test/chapter4formatting/rule451wheretobreak/InputOperatorWrap.java?ref=0f1b13e429d11b85f04f576d773e0d31f75bc4c8",
    "patch": "@@ -40,7 +40,7 @@ void testAssignment()\n     }\n \n     <\n-    T extends Comparable &\n+    /*warn*/ T extends Comparable &\n         java.io.Serializable\n     >\n     void testGenerics1()"
  },
  {
    "sha": "152c220d6896f31897e6b3d6401688520f761417",
    "filename": "src/main/resources/google_checks.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/checkstyle/checkstyle/blob/0f1b13e429d11b85f04f576d773e0d31f75bc4c8/src/main/resources/google_checks.xml",
    "raw_url": "https://github.com/checkstyle/checkstyle/raw/0f1b13e429d11b85f04f576d773e0d31f75bc4c8/src/main/resources/google_checks.xml",
    "contents_url": "https://api.github.com/repos/checkstyle/checkstyle/contents/src/main/resources/google_checks.xml?ref=0f1b13e429d11b85f04f576d773e0d31f75bc4c8",
    "patch": "@@ -292,7 +292,8 @@\n       <property name=\"option\" value=\"NL\"/>\n       <property name=\"tokens\"\n                value=\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,\n-                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF \"/>\n+                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF,\n+                    TYPE_EXTENSION_AND \"/>\n     </module>\n     <module name=\"AnnotationLocation\">\n       <property name=\"id\" value=\"AnnotationLocationMostCases\"/>"
  },
  {
    "sha": "647b238155e0049ee70687aca387d4c2918ea960",
    "filename": "src/test/java/com/puppycrawl/tools/checkstyle/internal/AllChecksTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/checkstyle/checkstyle/blob/0f1b13e429d11b85f04f576d773e0d31f75bc4c8/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllChecksTest.java",
    "raw_url": "https://github.com/checkstyle/checkstyle/raw/0f1b13e429d11b85f04f576d773e0d31f75bc4c8/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllChecksTest.java",
    "contents_url": "https://api.github.com/repos/checkstyle/checkstyle/contents/src/test/java/com/puppycrawl/tools/checkstyle/internal/AllChecksTest.java?ref=0f1b13e429d11b85f04f576d773e0d31f75bc4c8",
    "patch": "@@ -246,9 +246,9 @@\n                 \"DIV_ASSIGN\", \"BOR_ASSIGN\", \"SL_ASSIGN\", \"ASSIGN\", \"BSR_ASSIGN\", \"BAND_ASSIGN\",\n                 \"PLUS_ASSIGN\", \"MINUS_ASSIGN\", \"SR_ASSIGN\", \"STAR_ASSIGN\", \"BXOR_ASSIGN\",\n                 \"MOD_ASSIGN\",\n-                // state of the configuration when test was made until\n+                // COLON token ignored in check config, explained in\n                 // https://github.com/checkstyle/checkstyle/issues/4122\n-                \"COLON\", \"TYPE_EXTENSION_AND\").collect(Collectors.toSet()));\n+                \"COLON\").collect(Collectors.toSet()));\n         GOOGLE_TOKENS_IN_CONFIG_TO_IGNORE.put(\"NoWhitespaceBefore\", Stream.of(\n                 // google uses GenericWhitespace for this behavior\n                 \"GENERIC_START\", \"GENERIC_END\","
  }
]
