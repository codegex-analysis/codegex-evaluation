[
  {
    "sha": "0dc1a5fe1a8764df8ac80e680c1b44612b744c81",
    "filename": "lang/lang_en.yml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/lang/lang_en.yml",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/lang/lang_en.yml",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/lang/lang_en.yml?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -134,7 +134,7 @@ nulang:\n     errorloungefree: Error! Arena is not of type free. Use '[teamname]lounge'\n     log:\n       matnotfound: 'Unrecognized material: %1%'\n-    missingspawn: 'Spawn missing: &f%1%'\n+    missingspawn: 'Missing spawns: &f%1%'\n     noarenas: No arenas found!\n     valueneg: 'Negative values: &c%1%&r'\n     nofight: There is no fight in progress."
  },
  {
    "sha": "48165186185ae7b91cfa25e3948c7b6540f0a229",
    "filename": "lang/lang_fr.yml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/lang/lang_fr.yml",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/lang/lang_fr.yml",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/lang/lang_fr.yml?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -141,7 +141,7 @@ nulang:\n     errorloungefree: Erreur ! L'arène n'est pas de type free. Veuillez utiliser '[teamname]lounge'\n     log:\n       matnotfound: 'Materiel non reconnu: %1%'\n-    missingspawn: 'Spawn perdu: &f%1%'\n+    missingspawn: 'Spawns manquants: &f%1%'\n     moduleupdate: 'You need to set ''update.modules: true'' to use this command!'\n     noarenas: Aucune arène trouvée !\n     valueneg: 'Valeurs négatives: &c%1%&r'"
  },
  {
    "sha": "5a8867bec111d275d3a4b38422ecca203b545a01",
    "filename": "src/main/java/net/slipcor/pvparena/classes/PASpawn.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/classes/PASpawn.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/classes/PASpawn.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/classes/PASpawn.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -4,9 +4,9 @@\n     private final PALocation location;\n     private final String name;\n \n-    public PASpawn(final PALocation loc, final String string) {\n+    public PASpawn(final PALocation loc, final String name) {\n         this.location = loc;\n-        this.name = string;\n+        this.name = name;\n     }\n \n     @Override"
  },
  {
    "sha": "1bf88e2631a954783592250964edbcf4c51e0d15",
    "filename": "src/main/java/net/slipcor/pvparena/commands/PAG_Arenaclass.java",
    "status": "modified",
    "additions": 17,
    "deletions": 18,
    "changes": 35,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/commands/PAG_Arenaclass.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/commands/PAG_Arenaclass.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/commands/PAG_Arenaclass.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -65,24 +65,23 @@ public void commit(final Arena arena, final CommandSender sender, final String[]\n             return;\n         }\n \n-        final ArenaPlayer aPlayer = ArenaPlayer.fromPlayer((Player) sender);\n+        final ArenaPlayer arenaPlayer = ArenaPlayer.fromPlayer((Player) sender);\n \n         // Player can change arena class only in lounge or with ingameClassSwith parameter set to true\n-        if(aPlayer.getStatus() != LOUNGE && !arena.getArenaConfig().getBoolean(CFG.USES_INGAMECLASSSWITCH)) {\n+        if(arenaPlayer.getStatus() != LOUNGE && !arena.getArenaConfig().getBoolean(CFG.USES_INGAMECLASSSWITCH)) {\n             return;\n         }\n \n-        final ArenaClass aClass = arena.getClass(args[0]);\n-\n-        if (aClass == null) {\n+        final ArenaClass arenaClass = arena.getClass(args[0]);\n+        if (arenaClass == null) {\n             sender.sendMessage(Language.parse(arena, MSG.ERROR_CLASS_NOT_FOUND, args[0]));\n             return;\n         }\n \n         if (arena.getArenaConfig().getBoolean(CFG.PERMS_EXPLICITCLASS)\n-                && !sender.hasPermission(\"pvparena.class.\" + aClass.getName())) {\n+                && !sender.hasPermission(\"pvparena.class.\" + arenaClass.getName())) {\n             arena.msg(sender,\n-                    Language.parse(arena, MSG.ERROR_NOPERM_CLASS, aClass.getName()));\n+                    Language.parse(arena, MSG.ERROR_NOPERM_CLASS, arenaClass.getName()));\n             return;\n         }\n \n@@ -97,10 +96,10 @@ public void commit(final Arena arena, final CommandSender sender, final String[]\n         for (PAClassSign sign : arena.getSigns()) {\n             try {\n                 Sign s = (Sign) sign.getLocation().toLocation().getBlock().getState();\n-                if (aPlayer.getArenaClass().getName().equals(s.getLine(0))) {\n+                if (arenaPlayer.getArenaClass().getName().equals(s.getLine(0))) {\n                     oldSign = sign;\n                 }\n-                if (aClass.getName().equals(s.getLine(0))) {\n+                if (arenaClass.getName().equals(s.getLine(0))) {\n                     if (!sign.add((Player) sender)) {\n                         error = true;\n                     }\n@@ -115,23 +114,23 @@ public void commit(final Arena arena, final CommandSender sender, final String[]\n                 oldSign.add((Player) sender);\n             }\n             arena.msg(sender,\n-                    Language.parse(arena, MSG.ERROR_CLASS_FULL, aClass.getName()));\n+                    Language.parse(arena, MSG.ERROR_CLASS_FULL, arenaClass.getName()));\n             return;\n         }\n \n         if (!arena.getArenaConfig().getBoolean(CFG.GENERAL_CLASSSWITCH_AFTER_RESPAWN) || !arena.isFightInProgress()) {\n-            InventoryManager.clearInventory(aPlayer.getPlayer());\n-            aPlayer.setArenaClass(aClass);\n-            if (aPlayer.getArenaClass() != null) {\n-                ArenaPlayer.givePlayerFightItems(arena, aPlayer.getPlayer());\n+            InventoryManager.clearInventory(arenaPlayer.getPlayer());\n+            arenaPlayer.setArenaClass(arenaClass);\n+            if (arenaPlayer.getArenaClass() != null) {\n+                ArenaPlayer.givePlayerFightItems(arena, arenaPlayer.getPlayer());\n \n                 arena.msg(sender,\n-                        Language.parse(arena, MSG.CLASS_SELECTED, aClass.getName()));\n+                        Language.parse(arena, MSG.CLASS_SELECTED, arenaClass.getName()));\n             }\n-        } else if (aPlayer.getArenaClass() != null) {\n+        } else if (arenaPlayer.getArenaClass() != null) {\n             arena.msg(sender,\n-                    Language.parse(arena, MSG.CLASS_SELECTED_RESPAWN, aClass.getName()));\n-            aPlayer.setNextArenaClass(aClass);\n+                    Language.parse(arena, MSG.CLASS_SELECTED_RESPAWN, arenaClass.getName()));\n+            arenaPlayer.setNextArenaClass(arenaClass);\n         }\n     }\n "
  },
  {
    "sha": "8248a7a73da900a3c6290ea5fb1e4189c2b12eb9",
    "filename": "src/main/java/net/slipcor/pvparena/core/Language.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/core/Language.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/core/Language.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/core/Language.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -150,7 +150,7 @@ private Language() {\n         ERROR_JOIN_VEHICLE(\"nulang.error.insidevehicle\", \"You cannot join while on a vehicle!\"),\n         ERROR_LOUNGEFREE(\"nulang.error.errorloungefree\", \"Error! Arena is not of type &efree&r. Use '[teamname]lounge'.\"),\n         ERROR_MAT_NOT_FOUND(\"nulang.error.log.matnotfound\", \"Unrecognized material: %1%\"),\n-        ERROR_MISSING_SPAWN(\"nulang.error.missingspawn\", \"Spawn missing: &r%1%\"),\n+        ERROR_MISSING_SPAWN(\"nulang.error.missingspawn\", \"Spawn(s) missing: &r%1%\"),\n         ERROR_MODULE_UPDATE(\"nulang.error.moduleupdate\", \"You need to set 'update.modules: true' to use this command!\"),\n         ERROR_NO_ARENAS(\"nulang.error.noarenas\", \"No arenas found!\"),\n         ERROR_NEGATIVES(\"nulang.error.valueneg\", \"Negative values: &c%1%&r\"),"
  },
  {
    "sha": "ecdd611246fe33a1def79dacba87608bc2e5b7a6",
    "filename": "src/main/java/net/slipcor/pvparena/goals/AbstractFlagGoal.java",
    "status": "modified",
    "additions": 4,
    "deletions": 7,
    "changes": 11,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/AbstractFlagGoal.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/AbstractFlagGoal.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/AbstractFlagGoal.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -111,13 +111,10 @@ public boolean checkEnd() {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        final String team = this.checkForMissingTeamSpawn(list);\n-        if (team != null) {\n-            return team;\n-        }\n-\n-        return this.checkForMissingTeamCustom(list, \"flag\");\n+    public Set<String> checkForMissingSpawns(final Set<String> list) {\n+        Set<String> errors = this.checkForMissingTeamSpawn(list);\n+        errors.addAll(this.checkForMissingTeamCustom(list, \"flag\"));\n+        return errors;\n     }\n \n "
  },
  {
    "sha": "016931200d45cd9f26692b161af11eca8be7bacb",
    "filename": "src/main/java/net/slipcor/pvparena/goals/AbstractTeamKillGoal.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/AbstractTeamKillGoal.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/AbstractTeamKillGoal.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/AbstractTeamKillGoal.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -48,8 +48,8 @@ public boolean checkEnd() throws GameplayException {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        return this.checkForMissingTeamSpawn(list);\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n+        return this.checkForMissingTeamSpawn(spawnsNames);\n     }\n \n     @Override"
  },
  {
    "sha": "849b4c08d3b98e0a71719854d04b81da6515c232",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalBlockDestroy.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalBlockDestroy.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalBlockDestroy.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalBlockDestroy.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -115,12 +115,10 @@ public boolean checkEnd() {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        final String team = this.checkForMissingTeamSpawn(list);\n-        if (team != null) {\n-            return team;\n-        }\n-        return this.checkForMissingTeamCustom(list, BLOCK);\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n+        final Set<String> errors = this.checkForMissingTeamSpawn(spawnsNames);\n+        errors.addAll(this.checkForMissingTeamCustom(spawnsNames, BLOCK));\n+        return errors;\n     }\n \n     @Override"
  },
  {
    "sha": "b7dcc7c27823d494b68efa6bb07bd356f0bbe4f6",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalCheckPoints.java",
    "status": "modified",
    "additions": 15,
    "deletions": 19,
    "changes": 34,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalCheckPoints.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalCheckPoints.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalCheckPoints.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -63,20 +63,16 @@ public boolean checkCommand(final String string) {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        if (!list.contains(\"spawn\")) {\n-            return \"spawn\";\n+    public Set<String> checkForMissingSpawns(final Set<String> list) {\n+        Set<String> errors = new HashSet<>();\n+        if (!list.contains(SPAWN)) {\n+            errors.add(SPAWN);\n         }\n-        int count = 0;\n-        for (final String s : list) {\n-            if (s.startsWith(CHECKPOINT)) {\n-                count++;\n-            }\n-        }\n-        if (count < 1) {\n-            return \"checkpoint: \" + count + \" / 1\";\n+        // check if the first checkpoint is set\n+        if (!list.contains(CHECKPOINT + \"1\")) {\n+            errors.add(CHECKPOINT + \"1\");\n         }\n-        return null;\n+        return errors;\n     }\n \n     /**\n@@ -200,10 +196,10 @@ public void commitCommand(final CommandSender sender, final String[] args) {\n         if (args.length < 2 && this.arena.getFighters().contains(ap)) {\n             ap.setTelePass(true);\n             int value = cpLives - this.getPlayerLifeMap().get(ap.getPlayer());\n-            if(value == 0) {\n-                ap.getPlayer().teleport(SpawnManager.getSpawnByExactName(this.arena, \"spawn\").toLocation());\n+            if (value == 0) {\n+                ap.getPlayer().teleport(SpawnManager.getSpawnByExactName(this.arena, SPAWN).toLocation());\n             } else {\n-                ap.getPlayer().teleport(SpawnManager.getSpawnByExactName(this.arena, CHECKPOINT +value).toLocation());\n+                ap.getPlayer().teleport(SpawnManager.getSpawnByExactName(this.arena, CHECKPOINT + value).toLocation());\n             }\n             ap.setTelePass(false);\n             return;\n@@ -220,8 +216,8 @@ public void commitCommand(final CommandSender sender, final String[] args) {\n             return;\n         }\n         Player player = (Player) sender;\n-        String spawnName = CHECKPOINT +value;\n-        if(value > 0 && value <= cpLives) {\n+        String spawnName = CHECKPOINT + value;\n+        if (value > 0 && value <= cpLives) {\n             this.arena.spawnSet(spawnName, new PALocation(player.getLocation()));\n             this.arena.msg(sender, Language.parse(this.arena, MSG.SPAWN_SET, spawnName));\n         } else {\n@@ -278,12 +274,12 @@ public void displayInfo(final CommandSender sender) {\n \n     @Override\n     public boolean hasSpawn(final String string) {\n-        if (string.startsWith(CHECKPOINT) || string.startsWith(\"spawn\")) {\n+        if (string.startsWith(CHECKPOINT) || string.startsWith(SPAWN)) {\n             return true;\n         }\n         if (this.arena.getArenaConfig().getBoolean(CFG.GENERAL_CLASSSPAWN)) {\n             for (final ArenaClass aClass : this.arena.getClasses()) {\n-                if (string.toLowerCase().contains(aClass.getName().toLowerCase() + \"spawn\")) {\n+                if (string.toLowerCase().contains(aClass.getName().toLowerCase() + SPAWN)) {\n                     return true;\n                 }\n             }"
  },
  {
    "sha": "a791245593370d2106f57a63c3c8bdf3e6c118eb",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalDomination.java",
    "status": "modified",
    "additions": 6,
    "deletions": 18,
    "changes": 24,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalDomination.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalDomination.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalDomination.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -9,12 +9,9 @@\n import net.slipcor.pvparena.classes.PABlockLocation;\n import net.slipcor.pvparena.classes.PAClaimBar;\n import net.slipcor.pvparena.commands.PAA_Region;\n-import net.slipcor.pvparena.core.ColorUtils;\n+import net.slipcor.pvparena.core.*;\n import net.slipcor.pvparena.core.Config.CFG;\n-import net.slipcor.pvparena.core.Language;\n import net.slipcor.pvparena.core.Language.MSG;\n-import net.slipcor.pvparena.core.StringParser;\n-import net.slipcor.pvparena.core.Utils;\n import net.slipcor.pvparena.events.PAGoalEvent;\n import net.slipcor.pvparena.loadables.ArenaGoal;\n import net.slipcor.pvparena.loadables.ArenaModuleManager;\n@@ -114,22 +111,13 @@ public boolean checkEnd() {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n \n-        final String team = this.checkForMissingTeamSpawn(list);\n-        if (team != null) {\n-            return team;\n+        final Set<String> missingTeamSpawn = this.checkForMissingTeamSpawn(spawnsNames);\n+        if (spawnsNames.stream().noneMatch(spawnName -> spawnName.startsWith(\"flag\"))) {\n+            missingTeamSpawn.add(\"flag1\");\n         }\n-        int count = 0;\n-        for (final String s : list) {\n-            if (s.startsWith(\"flag\")) {\n-                count++;\n-            }\n-        }\n-        if (count < 1) {\n-            return \"flags: \" + count + \" / 1\";\n-        }\n-        return null;\n+        return missingTeamSpawn;\n     }\n \n     /**"
  },
  {
    "sha": "9370d67a3c6c283364299537bd13b6f387a27d72",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalFood.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalFood.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalFood.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalFood.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -120,12 +120,10 @@ public boolean checkEnd() throws GameplayException {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        final String error = this.checkForMissingTeamSpawn(list);\n-        if (error != null) {\n-            return error;\n-        }\n-        return this.checkForMissingTeamCustom(list, FOODCHEST);\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n+        final Set<String> errors = this.checkForMissingTeamSpawn(spawnsNames);\n+        errors.addAll(this.checkForMissingTeamCustom(spawnsNames, FOODCHEST));\n+        return errors;\n     }\n \n     @Override"
  },
  {
    "sha": "76a3ad113fcb0920138590f208938b4f86989d06",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalInfect.java",
    "status": "modified",
    "additions": 4,
    "deletions": 18,
    "changes": 22,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalInfect.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalInfect.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalInfect.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -96,26 +96,12 @@ private boolean anyTeamEmpty() {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        if (!this.arena.isFreeForAll()) {\n-            return null; // teams are handled somewhere else\n-        }\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnNames) {\n \n-        boolean infected = false;\n+        Set<String> errors = this.checkForMissingFFACustom(spawnNames, INFECTED);\n+        errors.addAll(this.checkForMissingFFASpawn(spawnNames));\n \n-        int count = 0;\n-        for (final String s : list) {\n-            if (s.startsWith(INFECTED)) {\n-                infected = true;\n-            }\n-            if (s.startsWith(SPAWN)) {\n-                count++;\n-            }\n-        }\n-        if (!infected) {\n-            return INFECTED;\n-        }\n-        return count > 3 ? null : \"need more spawns! (\" + count + \"/4)\";\n+        return errors;\n     }\n \n     @Override"
  },
  {
    "sha": "b6c96ce08d12740157b131ca5101450e885ea6b1",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalLiberation.java",
    "status": "modified",
    "additions": 4,
    "deletions": 11,
    "changes": 15,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalLiberation.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalLiberation.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalLiberation.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -101,17 +101,10 @@ public boolean checkEnd() {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        if (!this.arena.isFreeForAll()) {\n-            final String team = this.checkForMissingTeamSpawn(list);\n-            if (team != null) {\n-                return team;\n-            }\n-\n-            return this.checkForMissingTeamCustom(list, \"jail\");\n-        }\n-        PVPArena.getInstance().getLogger().warning(\"Liberation goal running in FFA mode: \" + this.arena.getName());\n-        return null;\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n+        final Set<String> errors = this.checkForMissingTeamSpawn(spawnsNames);\n+        errors.addAll(this.checkForMissingTeamCustom(spawnsNames, \"jail\"));\n+        return errors;\n     }\n \n     /**"
  },
  {
    "sha": "5b38009bb202f04f85cc00f69a9a95595b268d74",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalPhysicalFlags.java",
    "status": "modified",
    "additions": 25,
    "deletions": 25,
    "changes": 50,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalPhysicalFlags.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalPhysicalFlags.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalPhysicalFlags.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -230,28 +230,28 @@ public void disconnect(final ArenaPlayer arenaPlayer) {\n \n         if (flagTeam == null) {\n \n-                this.arena.broadcast(Language.parse(this.arena, MSG.GOAL_FLAGS_DROPPEDTOUCH, arenaPlayer\n-                        .getArenaTeam().getColorCodeString()\n-                        + arenaPlayer.getName()\n-                        + ChatColor.YELLOW));\n-\n-                this.getFlagMap().remove(this.touchdownTeam);\n-                if (this.getHeadGearMap().get(arenaPlayer) != null) {\n-                        arenaPlayer.getPlayer().getInventory()\n-                                .setHelmet(this.getHeadGearMap().get(arenaPlayer).clone());\n-                    this.getHeadGearMap().remove(arenaPlayer);\n-                }\n+            this.arena.broadcast(Language.parse(this.arena, MSG.GOAL_FLAGS_DROPPEDTOUCH, arenaPlayer\n+                    .getArenaTeam().getColorCodeString()\n+                    + arenaPlayer.getName()\n+                    + ChatColor.YELLOW));\n+\n+            this.getFlagMap().remove(this.touchdownTeam);\n+            if (this.getHeadGearMap().get(arenaPlayer) != null) {\n+                arenaPlayer.getPlayer().getInventory()\n+                        .setHelmet(this.getHeadGearMap().get(arenaPlayer).clone());\n+                this.getHeadGearMap().remove(arenaPlayer);\n+            }\n \n-                this.releaseFlag(this.touchdownTeam);\n+            this.releaseFlag(this.touchdownTeam);\n         } else {\n             this.arena.broadcast(Language.parse(this.arena, MSG.GOAL_FLAGS_DROPPED, arenaPlayer\n                     .getArenaTeam().getColorCodeString()\n                     + arenaPlayer.getName()\n                     + ChatColor.YELLOW, flagTeam.getName() + ChatColor.YELLOW));\n             this.getFlagMap().remove(flagTeam);\n             if (this.getHeadGearMap().get(arenaPlayer) != null) {\n-                    arenaPlayer.getPlayer().getInventory()\n-                            .setHelmet(this.getHeadGearMap().get(arenaPlayer).clone());\n+                arenaPlayer.getPlayer().getInventory()\n+                        .setHelmet(this.getHeadGearMap().get(arenaPlayer).clone());\n                 this.getHeadGearMap().remove(arenaPlayer);\n             }\n \n@@ -297,18 +297,18 @@ public void parsePlayerDeath(final Player player,\n         final ArenaPlayer arenaPlayer = ArenaPlayer.fromPlayer(player);\n \n         if (flagTeam == null) {\n-                this.arena.broadcast(Language.parse(this.arena, MSG.GOAL_FLAGS_DROPPEDTOUCH, arenaPlayer\n-                        .getArenaTeam().getColorCodeString()\n-                        + arenaPlayer.getName()\n-                        + ChatColor.YELLOW));\n-\n-                this.getFlagMap().remove(this.touchdownTeam);\n-                if (this.getHeadGearMap().get(arenaPlayer) != null) {\n-                        arenaPlayer.getPlayer().getInventory().setHelmet(this.getHeadGearMap().get(arenaPlayer).clone());\n-                    this.getHeadGearMap().remove(arenaPlayer);\n-                }\n+            this.arena.broadcast(Language.parse(this.arena, MSG.GOAL_FLAGS_DROPPEDTOUCH, arenaPlayer\n+                    .getArenaTeam().getColorCodeString()\n+                    + arenaPlayer.getName()\n+                    + ChatColor.YELLOW));\n+\n+            this.getFlagMap().remove(this.touchdownTeam);\n+            if (this.getHeadGearMap().get(arenaPlayer) != null) {\n+                arenaPlayer.getPlayer().getInventory().setHelmet(this.getHeadGearMap().get(arenaPlayer).clone());\n+                this.getHeadGearMap().remove(arenaPlayer);\n+            }\n \n-                this.releaseFlag(this.touchdownTeam);\n+            this.releaseFlag(this.touchdownTeam);\n         } else {\n             this.arena.broadcast(Language.parse(this.arena, MSG.GOAL_FLAGS_DROPPED, arenaPlayer\n                             .getArenaTeam().colorizePlayer(player) + ChatColor.YELLOW,"
  },
  {
    "sha": "4e54ad8bfc08b2b0152b9b52a4ddf0488232512a",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalPlayerDeathMatch.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalPlayerDeathMatch.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalPlayerDeathMatch.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalPlayerDeathMatch.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -63,12 +63,11 @@ public boolean checkEnd() {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        if (!this.arena.isFreeForAll()) {\n-            return null; // teams are handled somewhere else\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n+        if (this.arena.isFreeForAll()) {\n+            return this.checkForMissingFFASpawn(spawnsNames);\n         }\n-\n-        return this.checkForMissingSpawn(list);\n+        return this.checkForMissingTeamSpawn(spawnsNames);\n     }\n \n     @Override"
  },
  {
    "sha": "6b2b3ac5154b61b755fb2faa18a7c4315c26d776",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalPlayerKillReward.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalPlayerKillReward.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalPlayerKillReward.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalPlayerKillReward.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -103,12 +103,11 @@ public boolean checkEnd() {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        if (!this.arena.isFreeForAll()) {\n-            return this.checkForMissingTeamSpawn(list);\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n+        if (this.arena.isFreeForAll()) {\n+            return this.checkForMissingFFASpawn(spawnsNames);\n         }\n-\n-        return this.checkForMissingSpawn(list);\n+        return this.checkForMissingTeamSpawn(spawnsNames);\n     }\n \n     @Override"
  },
  {
    "sha": "7115120498cc60954ff6da0a959fd82a698e8da5",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalPlayerLives.java",
    "status": "modified",
    "additions": 11,
    "deletions": 6,
    "changes": 17,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalPlayerLives.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalPlayerLives.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalPlayerLives.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -73,16 +73,21 @@ public boolean checkEnd() {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        if (!this.arena.isFreeForAll()) {\n-            return this.checkForMissingTeamSpawn(list);\n+    public Set<String> checkForMissingSpawns(final Set<String> list) {\n+        if (this.arena.isFreeForAll()) {\n+            return this.checkForMissingFFASpawn(list);\n         }\n-        return this.checkForMissingSpawn(list);\n+        return this.checkForMissingTeamSpawn(list);\n     }\n \n     @Override\n     public Boolean checkPlayerDeath(Player player) {\n-        final int pos = this.getTeamLifeMap().get(player);\n+        int pos;\n+        if(this.arena.isFreeForAll()) {\n+            pos = this.getPlayerLifeMap().get(player);\n+        } else {\n+            pos = this.getTeamLifeMap().get(ArenaPlayer.fromPlayer(player).getArenaTeam());\n+        }\n         debug(this.arena, player, \"lives before death: \" + pos);\n         return pos > 1;\n     }\n@@ -301,8 +306,8 @@ public void parseStart() {\n     @Override\n     public void reset(final boolean force) {\n         this.endRunner = null;\n-        this.getTeamLifeMap().clear();\n         this.getPlayerLifeMap().clear();\n+        this.getTeamLifeMap().clear();\n     }\n \n     @Override"
  },
  {
    "sha": "bccf1d2b1638d94342faf7795e64231e9566e69a",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalSabotage.java",
    "status": "modified",
    "additions": 4,
    "deletions": 8,
    "changes": 12,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalSabotage.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalSabotage.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalSabotage.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -62,8 +62,6 @@ public String version() {\n         return PVPArena.getInstance().getDescription().getVersion();\n     }\n \n-    private static final int PRIORITY = 7;\n-\n     @Override\n     public boolean allowsJoinInBattle() {\n         return this.arena.getArenaConfig().getBoolean(CFG.PERMS_JOININBATTLE);\n@@ -87,12 +85,10 @@ public boolean checkCommand(final String string) {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        final String team = this.checkForMissingTeamSpawn(list);\n-        if (team != null) {\n-            return team;\n-        }\n-        return this.checkForMissingTeamCustom(list, \"tnt\");\n+    public Set<String> checkForMissingSpawns(final Set<String> list) {\n+        Set<String> errors = this.checkForMissingTeamSpawn(list);\n+        errors.addAll(this.checkForMissingTeamCustom(list, \"tnt\"));\n+        return errors;\n     }\n \n     /**"
  },
  {
    "sha": "2e1472be24d72234dbd755c746a23d609e5456e8",
    "filename": "src/main/java/net/slipcor/pvparena/goals/GoalTank.java",
    "status": "modified",
    "additions": 6,
    "deletions": 11,
    "changes": 17,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalTank.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/goals/GoalTank.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/goals/GoalTank.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -63,24 +63,19 @@ public boolean checkEnd() {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        if (!this.arena.isFreeForAll()) {\n-            return null; // teams are handled somewhere else\n-        }\n-\n-        if (!list.contains(\"tank\")) {\n-            return \"tank\";\n-        }\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n \n-        return this.checkForMissingSpawn(list);\n+        Set<String> errors = this.checkForMissingFFASpawn(spawnsNames);\n+        errors.addAll(this.checkForMissingFFACustom(spawnsNames, \"tank\"));\n+        return errors;\n     }\n \n     @Override\n     public Boolean checkPlayerDeath(final Player player) {\n         if (this.getPlayerLifeMap().containsKey(player)) {\n             final int iLives = this.getPlayerLifeMap().get(player);\n             debug(this.arena, player, \"lives before death: \" + iLives);\n-            return iLives > 1 && !tanks.get(this.arena).equals(player.getName());\n+            return iLives > 1 && !tanks.get(this.arena).equals(ArenaPlayer.fromPlayer(player));\n         }\n         return true;\n     }\n@@ -106,7 +101,7 @@ public void commitEnd(final boolean force) {\n                 if (ap.getStatus() != Status.FIGHT) {\n                     continue;\n                 }\n-                if (tanks.containsValue(ap.getName())) {\n+                if (tanks.containsValue(ap)) {\n                     ArenaModuleManager.announce(this.arena,\n                             Language.parse(this.arena, MSG.GOAL_TANK_TANKWON, ap.getName()), \"END\");\n                     ArenaModuleManager.announce(this.arena,"
  },
  {
    "sha": "2cff4928bdc0f2fa48ce630b296ac8aeefe7ed93",
    "filename": "src/main/java/net/slipcor/pvparena/loadables/ArenaGoal.java",
    "status": "modified",
    "additions": 45,
    "deletions": 46,
    "changes": 91,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/loadables/ArenaGoal.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/loadables/ArenaGoal.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/loadables/ArenaGoal.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -28,7 +28,9 @@\n import org.jetbrains.annotations.NotNull;\n \n import java.util.*;\n+import java.util.stream.Collectors;\n \n+import static java.util.Optional.empty;\n import static java.util.Optional.ofNullable;\n \n /**\n@@ -42,6 +44,7 @@\n  */\n \n public class ArenaGoal implements IArenaCommandHandler {\n+    public static final String SPAWN = \"spawn\";\n     protected String name;\n     protected Arena arena;\n     protected Map<ArenaTeam, Integer> teamLifeMap = new HashMap<>();\n@@ -173,75 +176,71 @@ public boolean checkEnd() throws GameplayException {\n     /**\n      * check if all necessary spawns are set\n      *\n-     * @param list the list of all set spawns\n-     * @return null if ready, error message otherwise\n+     * @param spawnsNames the list of all set spawns\n+     * @return empty if ready, error message otherwise\n      */\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        return null;\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n+        return Collections.emptySet();\n     }\n \n     /**\n      * check if necessary FFA spawns are set\n      *\n      * @return null if ready, error message otherwise\n      */\n-    protected String checkForMissingSpawn(final Set<String> list) {\n-        int count = 0;\n-        for (final String s : list) {\n-            if (s.startsWith(\"spawn\")) {\n-                count++;\n-            }\n-        }\n+    protected Set<String> checkForMissingFFASpawn(final Set<String> spawnNames) {\n+        final Set<String> errors = new HashSet<>();\n+        final long count = spawnNames.stream()\n+                .filter(spawnName -> spawnName.startsWith(SPAWN))\n+                .count();\n         int minPlayers = this.arena.getArenaConfig().getInt(CFG.READY_MINPLAYERS);\n-        return count >= minPlayers ? null : \"need more spawns! (\" + count + \"/\" + minPlayers + \")\";\n+        if(count < minPlayers){\n+            errors.add(String.format(\"spawn%s\", minPlayers));\n+        }\n+        return errors;\n     }\n \n     /**\n-     * check if necessary team spawns are set\n+     * check if necessary custom FFA spawns are set\n+     *\n+     * + check if a spawn start with custom\n      *\n      * @return null if ready, error message otherwise\n      */\n-    protected String checkForMissingTeamSpawn(final Set<String> list) {\n-        for (final ArenaTeam team : this.arena.getTeams()) {\n-            final String sTeam = team.getName();\n-            if (!list.contains(team + \"spawn\")) {\n-                boolean found = false;\n-                for (final String s : list) {\n-                    if (s.startsWith(sTeam + \"spawn\")) {\n-                        found = true;\n-                        break;\n-                    }\n-                }\n-                if (!found) {\n-                    return team.getName() + \"spawn not set\";\n-                }\n-            }\n+    protected Set<String> checkForMissingFFACustom(final Set<String> spawnsNames, final String custom) {\n+        final Set<String> errors = new HashSet<>();\n+        if (!spawnsNames.contains(custom)\n+                && spawnsNames.stream().noneMatch(spawnName -> spawnName.startsWith(custom))){\n+            errors.add(custom);\n         }\n-        return null;\n+        return errors;\n+    }\n+\n+    /**\n+     * check if necessary team spawns are set\n+     *\n+     * @return empty if ready, team(s) missing otherwise\n+     */\n+    protected Set<String> checkForMissingTeamSpawn(final Set<String> spawnsNames) {\n+        return this.arena.getTeams().stream()\n+                .map(team -> team.getName() + SPAWN)\n+                .filter(teamSpawnName -> !spawnsNames.contains(teamSpawnName))\n+                .collect(Collectors.toSet());\n     }\n \n     /**\n      * check if necessary custom team spawns are set\n      *\n+     * + check if a spawn start with team's name + custom\n+     *\n      * @return null if ready, error message otherwise\n      */\n-    protected String checkForMissingTeamCustom(final Set<String> list, final String custom) {\n-        for (final ArenaTeam team : this.arena.getTeams()) {\n-            final String sTeam = team.getName();\n-            if (!list.contains(sTeam + custom)) {\n-                boolean found = false;\n-                for (final String s : list) {\n-                    if (s.startsWith(sTeam + custom)) {\n-                        found = true;\n-                        break;\n-                    }\n-                }\n-                if (!found) {\n-                    return sTeam + custom + \"not set\";\n-                }\n-            }\n-        }\n-        return null;\n+    protected Set<String> checkForMissingTeamCustom(final Set<String> spawnsNames, final String custom) {\n+        return this.arena.getTeams().stream()\n+                .filter(arenaTeam -> !spawnsNames.contains(arenaTeam.getName() + custom))\n+                .filter(arenaTeam -> spawnsNames.stream().noneMatch(spawnName -> spawnName.startsWith(arenaTeam + custom)))\n+                .map(arenaTeam -> arenaTeam.getName() + custom)\n+                .collect(Collectors.toSet());\n     }\n \n     /**"
  },
  {
    "sha": "33801ad0a826ecbab8eb9fc53e226fa12898d996",
    "filename": "src/main/java/net/slipcor/pvparena/loadables/ArenaModule.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/loadables/ArenaModule.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/loadables/ArenaModule.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/loadables/ArenaModule.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -24,7 +24,7 @@\n import org.bukkit.event.player.PlayerVelocityEvent;\n import org.bukkit.inventory.ItemStack;\n \n-import java.util.Arrays;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Set;\n \n@@ -42,7 +42,7 @@\n     protected Arena arena;\n     protected String name;\n \n-    public ArenaModule(final String name) {\n+    protected ArenaModule(final String name) {\n         this.name = name;\n     }\n \n@@ -90,12 +90,12 @@ public boolean checkCountOverride(Player player, String message) {\n \n     @Override\n     public List<String> getMain() {\n-        return Arrays.asList(new String[0]);\n+        return Collections.emptyList();\n     }\n \n     @Override\n     public List<String> getShort() {\n-        return Arrays.asList(new String[0]);\n+        return Collections.emptyList();\n     }\n \n     @Override\n@@ -150,11 +150,11 @@ public boolean handleSpectate(Player player) throws GameplayException {\n     /**\n      * check for unset spawns\n      *\n-     * @param list the set spawns\n+     * @param spawnsNames the set spawns\n      * @return null if okay, error message if something is missing\n      */\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        return null;\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n+        return Collections.emptySet();\n     }\n \n     /**\n@@ -255,7 +255,7 @@ public void initiate(final Player player) {\n \n     public boolean isMissingBattleRegion(final Arena arena) {\n         if (this.needsBattleRegion()) {\n-            return arena.getRegionsByType(RegionType.BATTLE).size() < 1;\n+            return arena.getRegionsByType(RegionType.BATTLE).isEmpty();\n         }\n         return false;\n     }"
  },
  {
    "sha": "7c5099338a86e259213aa512ac7e43706de2ace5",
    "filename": "src/main/java/net/slipcor/pvparena/loadables/ArenaModuleManager.java",
    "status": "modified",
    "additions": 7,
    "deletions": 8,
    "changes": 15,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/loadables/ArenaModuleManager.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/loadables/ArenaModuleManager.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/loadables/ArenaModuleManager.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -21,7 +21,9 @@\n import org.bukkit.event.player.PlayerVelocityEvent;\n \n import java.io.File;\n+import java.util.Collection;\n import java.util.Set;\n+import java.util.stream.Collectors;\n \n /**\n  * <pre>Arena Module Manager class</pre>\n@@ -81,14 +83,11 @@ public static boolean checkCountOverride(Arena arena, Player player, String mess\n         return false;\n     }\n \n-    public static String checkForMissingSpawns(final Arena arena, final Set<String> list) {\n-        for (final ArenaModule mod : arena.getMods()) {\n-            String error = mod.checkForMissingSpawns(list);\n-            if (error != null) {\n-                return error;\n-            }\n-        }\n-        return null;\n+    public static Set<String> checkForMissingSpawns(final Arena arena, final Set<String> spawnsNames) {\n+        return arena.getMods().stream()\n+                .map(arenaModule -> arenaModule.checkForMissingSpawns(spawnsNames))\n+                .flatMap(Collection::stream)\n+                .collect(Collectors.toSet());\n     }\n \n     public static void choosePlayerTeam(final Arena arena, final Player player, final String coloredTeam) {"
  },
  {
    "sha": "6fd1c67f8f181c16f2841bc18dd9378233410cbe",
    "filename": "src/main/java/net/slipcor/pvparena/managers/ConfigurationManager.java",
    "status": "modified",
    "additions": 65,
    "deletions": 47,
    "changes": 112,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/managers/ConfigurationManager.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/managers/ConfigurationManager.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/managers/ConfigurationManager.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -5,8 +5,10 @@\n import net.slipcor.pvparena.arena.ArenaClass;\n import net.slipcor.pvparena.arena.ArenaTeam;\n import net.slipcor.pvparena.classes.PABlockLocation;\n+import net.slipcor.pvparena.classes.PASpawn;\n import net.slipcor.pvparena.commands.PAA_Edit;\n import net.slipcor.pvparena.commands.PAA_Setup;\n+import net.slipcor.pvparena.core.CollectionUtils;\n import net.slipcor.pvparena.core.Config;\n import net.slipcor.pvparena.core.Config.CFG;\n import net.slipcor.pvparena.core.Language;\n@@ -17,10 +19,12 @@\n import org.bukkit.Bukkit;\n import org.bukkit.Material;\n import org.bukkit.block.Chest;\n+import org.bukkit.configuration.ConfigurationSection;\n import org.bukkit.configuration.file.YamlConfiguration;\n import org.bukkit.inventory.ItemStack;\n \n import java.util.*;\n+import java.util.stream.Collectors;\n \n import static net.slipcor.pvparena.config.Debugger.debug;\n import static net.slipcor.pvparena.core.ItemStackUtils.getItemStacksFromConfig;\n@@ -37,7 +41,9 @@\n  */\n \n public final class ConfigurationManager {\n-    //private final static Debugger debug = Debugger.getInstance();\n+    private static final String OLD = \"old\";\n+    public static final String CLASSITEMS = \"classitems\";\n+    public static final String SPAWNS = \"spawns\";\n \n     private ConfigurationManager() {\n     }\n@@ -54,8 +60,8 @@ public static boolean configParse(final Arena arena, final Config cfg) {\n         }\n         final YamlConfiguration config = cfg.getYamlConfiguration();\n \n-        final List<String> goals = cfg.getStringList(\"goals\", new ArrayList<String>());\n-        final List<String> modules = cfg.getStringList(\"mods\", new ArrayList<String>());\n+        final List<String> goals = cfg.getStringList(\"goals\", new ArrayList<>());\n+        final List<String> modules = cfg.getStringList(\"mods\", new ArrayList<>());\n \n         ArenaGoalManager goalManager = PVPArena.getInstance().getAgm();\n         if (cfg.getString(CFG.GENERAL_TYPE, \"null\") == null\n@@ -65,7 +71,6 @@ public static boolean configParse(final Arena arena, final Config cfg) {\n             // opening existing arena\n             arena.setFree(\"free\".equals(cfg.getString(CFG.GENERAL_TYPE)));\n \n-\n             values:\n             for (final CFG c : CFG.getValues()) {\n                 if (c.hasModule()) {\n@@ -114,34 +119,34 @@ public static boolean configParse(final Arena arena, final Config cfg) {\n             }\n         }\n \n-        if (config.get(\"classitems\") == null) {\n-            if (PVPArena.getInstance().getConfig().get(\"classitems\") == null) {\n-                config.addDefault(\"classitems.Ranger.items\",\n+        if (config.get(CLASSITEMS) == null) {\n+            if (PVPArena.getInstance().getConfig().get(CLASSITEMS) == null) {\n+                config.addDefault(CLASSITEMS + \".Ranger.items\",\n                         Utils.getItemStacksFromMaterials(Material.BOW, Material.ARROW));\n-                config.addDefault(\"classitems.Ranger.offhand\",\n+                config.addDefault(CLASSITEMS + \".Ranger.offhand\",\n                         Utils.getItemStacksFromMaterials(Material.AIR));\n-                config.addDefault(\"classitems.Ranger.armor\",\n+                config.addDefault(CLASSITEMS + \".Ranger.armor\",\n                         Utils.getItemStacksFromMaterials(Material.LEATHER_HELMET, Material.LEATHER_CHESTPLATE, Material.LEATHER_LEGGINGS, Material.LEATHER_BOOTS));\n \n-                config.addDefault(\"classitems.Swordsman.items\",\n+                config.addDefault(CLASSITEMS + \".Swordsman.items\",\n                         Utils.getItemStacksFromMaterials(Material.DIAMOND_SWORD));\n-                config.addDefault(\"classitems.Swordsman.offhand\",\n+                config.addDefault(CLASSITEMS + \".Swordsman.offhand\",\n                         Utils.getItemStacksFromMaterials(Material.AIR));\n-                config.addDefault(\"classitems.Swordsman.armor\",\n+                config.addDefault(CLASSITEMS + \".Swordsman.armor\",\n                         Utils.getItemStacksFromMaterials(Material.IRON_HELMET, Material.IRON_CHESTPLATE, Material.IRON_LEGGINGS, Material.IRON_BOOTS));\n \n-                config.addDefault(\"classitems.Tank.items\",\n+                config.addDefault(CLASSITEMS + \".Tank.items\",\n                         Utils.getItemStacksFromMaterials(Material.STONE_SWORD));\n-                config.addDefault(\"classitems.Tank.offhand\",\n+                config.addDefault(CLASSITEMS + \".Tank.offhand\",\n                         Utils.getItemStacksFromMaterials(Material.AIR));\n-                config.addDefault(\"classitems.Tank.armor\",\n+                config.addDefault(CLASSITEMS + \".Tank.armor\",\n                         Utils.getItemStacksFromMaterials(Material.DIAMOND_HELMET, Material.DIAMOND_CHESTPLATE, Material.DIAMOND_LEGGINGS, Material.DIAMOND_BOOTS));\n \n-                config.addDefault(\"classitems.Pyro.items\",\n+                config.addDefault(CLASSITEMS + \".Pyro.items\",\n                         Utils.getItemStacksFromMaterials(Material.FLINT_AND_STEEL, Material.TNT, Material.TNT, Material.TNT));\n-                config.addDefault(\"classitems.Pyro.offhand\",\n+                config.addDefault(CLASSITEMS + \".Pyro.offhand\",\n                         Utils.getItemStacksFromMaterials(Material.AIR));\n-                config.addDefault(\"classitems.Pyro.armor\",\n+                config.addDefault(CLASSITEMS + \".Pyro.armor\",\n                         Utils.getItemStacksFromMaterials(Material.LEATHER_HELMET, Material.LEATHER_CHESTPLATE, Material.LEATHER_LEGGINGS, Material.LEATHER_BOOTS));\n \n             }\n@@ -178,20 +183,20 @@ public static boolean configParse(final Arena arena, final Config cfg) {\n         cfg.save();\n         cfg.load();\n \n-        final Map<String, Object> classes = config.getConfigurationSection(\n-                \"classitems\").getValues(false);\n+        final Map<String, Object> classes = config.getConfigurationSection(CLASSITEMS).getValues(false);\n         arena.getClasses().clear();\n         debug(arena, \"reading class items\");\n         ArenaClass.addGlobalClasses(arena);\n         for (final Map.Entry<String, Object> stringObjectEntry1 : classes.entrySet()) {\n+\n             ItemStack[] items;\n-            ItemStack offHand = new ItemStack(Material.AIR, 1);\n-            ItemStack[] armors = new ItemStack[]{new ItemStack(Material.AIR, 1)};\n+            ItemStack offHand;\n+            ItemStack[] armors;\n \n             try {\n-                items = getItemStacksFromConfig(config.getList(\"classitems.\"+stringObjectEntry1.getKey()+\".items\"));\n-                offHand = getItemStacksFromConfig(config.getList(\"classitems.\"+stringObjectEntry1.getKey()+\".offhand\"))[0];\n-                armors = getItemStacksFromConfig(config.getList(\"classitems.\"+stringObjectEntry1.getKey()+\".armor\"));\n+                items = getItemStacksFromConfig(config.getList(CLASSITEMS + \".\"+stringObjectEntry1.getKey()+\".items\"));\n+                offHand = getItemStacksFromConfig(config.getList(CLASSITEMS + \".\"+stringObjectEntry1.getKey()+\".offhand\"))[0];\n+                armors = getItemStacksFromConfig(config.getList(CLASSITEMS + \".\"+stringObjectEntry1.getKey()+\".armor\"));\n             } catch (final Exception e) {\n                 Bukkit.getLogger().severe(\n                         \"[PVP Arena] Error while parsing class, skipping: \"\n@@ -298,10 +303,6 @@ public static boolean configParse(final Arena arena, final Config cfg) {\n     public static String isSetup(final Arena arena) {\n         //arena.getArenaConfig().load();\n \n-        if (arena.getArenaConfig().getUnsafe(\"spawns\") == null) {\n-            return Language.parse(arena, MSG.ERROR_NO_SPAWNS);\n-        }\n-\n         for (final String editor : PAA_Edit.activeEdits.keySet()) {\n             if (PAA_Edit.activeEdits.get(editor).getName().equals(\n                     arena.getName())) {\n@@ -316,33 +317,50 @@ public static String isSetup(final Arena arena) {\n             }\n         }\n \n-        final Set<String> list = arena.getArenaConfig().getYamlConfiguration()\n-                .getConfigurationSection(\"spawns\").getValues(false).keySet();\n+        return isSpawnsSetup(arena);\n+    }\n+\n+    private static String isSpawnsSetup(Arena arena) {\n \n+        if (arena.getArenaConfig().getUnsafe(SPAWNS) == null) {\n+            return Language.parse(arena, MSG.ERROR_NO_SPAWNS);\n+        }\n+\n+        ConfigurationSection spawnConfigurationSection = arena.getArenaConfig().getYamlConfiguration()\n+                .getConfigurationSection(SPAWNS);\n+\n+        assert spawnConfigurationSection != null;\n+        final Set<String> spawnsNames = spawnConfigurationSection.getValues(false)\n+                .entrySet().stream().map(spawnConfig -> new PASpawn(Config.parseLocation((String) spawnConfig.getValue()),\n+                        spawnConfig.getKey())).map(PASpawn::getName).collect(Collectors.toSet());\n+\n+        final Set<String> errors = new HashSet<>();\n+\n+        // mandatory spawns\n         final String sExit = arena.getArenaConfig().getString(CFG.TP_EXIT);\n-        if (!\"old\".equals(sExit) && !list.contains(sExit)) {\n-            return \"Exit Spawn ('\" + sExit + \"') not set!\";\n+        if (!OLD.equals(sExit) && !spawnsNames.contains(sExit)) {\n+            errors.add(sExit);\n         }\n         final String sWin = arena.getArenaConfig().getString(CFG.TP_WIN);\n-        if (!\"old\".equals(sWin) && !list.contains(sWin)) {\n-            return \"Win Spawn ('\" + sWin + \"') not set!\";\n+        if (!OLD.equals(sWin) && !spawnsNames.contains(sWin)) {\n+            errors.add(sWin);\n         }\n         final String sLose = arena.getArenaConfig().getString(CFG.TP_LOSE);\n-        if (!\"old\".equals(sLose) && !list.contains(sLose)) {\n-            return \"Lose Spawn ('\" + sLose + \"') not set!\";\n+        if (!OLD.equals(sLose) && !spawnsNames.contains(sLose)) {\n+            errors.add(sLose);\n         }\n         final String sDeath = arena.getArenaConfig().getString(CFG.TP_DEATH);\n-        if (!\"old\".equals(sDeath) && !list.contains(sDeath)) {\n-            return \"Death Spawn ('\" + sDeath + \"') not set!\";\n-        }\n-\n-        String error = ArenaModuleManager.checkForMissingSpawns(arena, list);\n-        if (error != null) {\n-            return Language.parse(arena, MSG.ERROR_MISSING_SPAWN, error);\n+        if (!OLD.equals(sDeath) && !spawnsNames.contains(sDeath)) {\n+            errors.add(sDeath);\n         }\n-        error = arena.getGoal().checkForMissingSpawns(list);\n-        if (error != null) {\n-            return Language.parse(arena, MSG.ERROR_MISSING_SPAWN, error);\n+        // custom mods spawns\n+        errors.addAll(ArenaModuleManager.checkForMissingSpawns(arena, spawnsNames));\n+        // custom goal spawns\n+        errors.addAll(arena.getGoal().checkForMissingSpawns(spawnsNames));\n+\n+        // display all missings spawn in one message\n+        if (CollectionUtils.isNotEmpty(errors)) {\n+            return Language.parse(arena, MSG.ERROR_MISSING_SPAWN, String.join(\", \", errors));\n         }\n         return null;\n     }"
  },
  {
    "sha": "e4f13b12e36666a5b1c72fef07eb4885dd18a2ad",
    "filename": "src/main/java/net/slipcor/pvparena/modules/StandardLounge.java",
    "status": "modified",
    "additions": 25,
    "deletions": 43,
    "changes": 68,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/modules/StandardLounge.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/modules/StandardLounge.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/modules/StandardLounge.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -1,5 +1,6 @@\n package net.slipcor.pvparena.modules;\n \n+import com.sun.tools.javac.util.List;\n import net.slipcor.pvparena.PVPArena;\n import net.slipcor.pvparena.arena.Arena;\n import net.slipcor.pvparena.arena.ArenaPlayer;\n@@ -15,8 +16,9 @@\n import org.bukkit.ChatColor;\n import org.bukkit.entity.Player;\n \n-import java.util.Iterator;\n+import java.util.Collections;\n import java.util.Set;\n+import java.util.stream.Collectors;\n \n import static net.slipcor.pvparena.config.Debugger.debug;\n \n@@ -33,6 +35,7 @@\n public class StandardLounge extends ArenaModule {\n \n     private static final int PRIORITY = 2;\n+    public static final String LOUNGE = \"lounge\";\n \n     public StandardLounge() {\n         super(\"StandardLounge\");\n@@ -49,39 +52,18 @@ public int getPriority() {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        // not random! we need teams * 2 (lounge + spawn) + exit + spectator\n-        debug(\"parsing not random\");\n-        final Iterator<String> iter = list.iterator();\n-        int lounges = 0;\n-        while (iter.hasNext()) {\n-            final String spawnName = iter.next();\n-            debug(\"parsing '{}'\", spawnName);\n-            if (this.arena.isFreeForAll()) {\n-                if (\"lounge\".equals(spawnName)) {\n-                    lounges++;\n-                }\n-            } else {\n-                if (spawnName.endsWith(\"lounge\") && !\"lounge\".equals(spawnName)) {\n-                    lounges++;\n-                }\n-            }\n-\n-        }\n-\n-        int neededCount = this.arena.getTeams().size();\n-\n-        for (final ArenaTeam team : this.arena.getTeams()) {\n-            if (\"infected\".equals(team.getName()) ||\n-                    \"tank\".equalsIgnoreCase(team.getName())) {\n-                neededCount--;\n-            }\n-        }\n-        if (lounges == neededCount) {\n-            return null;\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n+        debug(\"checking missing lounge spawn(s)\");\n+        List<String> ignoredTeams = List.of(\"infected\", \"tank\");\n+        if (this.arena.isFreeForAll()) {\n+            return spawnsNames.contains(LOUNGE) ? Collections.emptySet() : Collections.singleton(LOUNGE);\n+        } else {\n+            return this.arena.getTeams().stream()\n+                    .filter(team -> !ignoredTeams.contains(team.getName()))\n+                    .filter(team -> !spawnsNames.contains(team.getName() + LOUNGE))\n+                    .map(team -> team.getName() + LOUNGE)\n+                    .collect(Collectors.toSet());\n         }\n-\n-        return lounges + \"/\" + this.arena.getTeams().size() + \"x lounge\";\n     }\n \n     @Override\n@@ -101,7 +83,7 @@ public boolean handleJoin(Player player) throws GameplayException {\n \n         if (aPlayer.getArenaClass() == null) {\n             String autoClass = this.arena.getArenaConfig().getDefinedString(CFG.READY_AUTOCLASS);\n-            if(this.arena.getArenaConfig().getBoolean(CFG.USES_PLAYERCLASSES) && this.arena.getClass(player.getName()) != null) {\n+            if (this.arena.getArenaConfig().getBoolean(CFG.USES_PLAYERCLASSES) && this.arena.getClass(player.getName()) != null) {\n                 autoClass = player.getName();\n             }\n             if (autoClass != null && this.arena.getClass(autoClass) == null) {\n@@ -115,10 +97,10 @@ public boolean handleJoin(Player player) throws GameplayException {\n     @Override\n     public boolean hasSpawn(final String spawnName) {\n         if (this.arena.isFreeForAll()) {\n-            return spawnName.startsWith(\"lounge\");\n+            return spawnName.startsWith(LOUNGE);\n         }\n         for (final ArenaTeam team : this.arena.getTeams()) {\n-            if (spawnName.startsWith(team.getName() + \"lounge\")) {\n+            if (spawnName.startsWith(team.getName() + LOUNGE)) {\n                 return true;\n             }\n         }\n@@ -136,19 +118,19 @@ public void commitJoin(final Player player, final ArenaTeam team) {\n         team.add(aPlayer);\n \n         if (this.arena.isFreeForAll()) {\n-            this.arena.tpPlayerToCoordNameForJoin(aPlayer, \"lounge\", true);\n+            this.arena.tpPlayerToCoordNameForJoin(aPlayer, LOUNGE, true);\n         } else {\n-            this.arena.tpPlayerToCoordNameForJoin(aPlayer, team.getName() + \"lounge\", true);\n+            this.arena.tpPlayerToCoordNameForJoin(aPlayer, team.getName() + LOUNGE, true);\n         }\n \n         aPlayer.setStatus(Status.LOUNGE);\n         this.arena.msg(player, Language.parse(this.arena, CFG.MSG_LOUNGE));\n         if (this.arena.isFreeForAll()) {\n             this.arena.msg(player,\n                     Language.parse(this.arena, CFG.MSG_YOUJOINED,\n-                    Integer.toString(team.getTeamMembers().size()),\n-                    Integer.toString(this.arena.getArenaConfig().getInt(CFG.READY_MAXPLAYERS))\n-            ));\n+                            Integer.toString(team.getTeamMembers().size()),\n+                            Integer.toString(this.arena.getArenaConfig().getInt(CFG.READY_MAXPLAYERS))\n+                    ));\n             this.arena.broadcastExcept(\n                     player,\n                     Language.parse(this.arena, CFG.MSG_PLAYERJOINED,\n@@ -163,7 +145,7 @@ public void commitJoin(final Player player, final ArenaTeam team) {\n                             team.getColoredName() + ChatColor.COLOR_CHAR + 'r',\n                             Integer.toString(team.getTeamMembers().size()),\n                             Integer.toString(this.arena.getArenaConfig().getInt(CFG.READY_MAXPLAYERS))\n-            ));\n+                    ));\n \n             this.arena.broadcastExcept(\n                     player,\n@@ -172,7 +154,7 @@ public void commitJoin(final Player player, final ArenaTeam team) {\n                             team.getColoredName() + ChatColor.COLOR_CHAR + 'r',\n                             Integer.toString(team.getTeamMembers().size()),\n                             Integer.toString(this.arena.getArenaConfig().getInt(CFG.READY_MAXPLAYERS))\n-            ));\n+                    ));\n         }\n \n         if (aPlayer.getState() == null) {"
  },
  {
    "sha": "8589abe8cb8c553220b26a48771daf307897612e",
    "filename": "src/main/java/net/slipcor/pvparena/modules/StandardSpectate.java",
    "status": "modified",
    "additions": 16,
    "deletions": 13,
    "changes": 29,
    "blob_url": "https://github.com/Eredrim/pvparena/blob/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/modules/StandardSpectate.java",
    "raw_url": "https://github.com/Eredrim/pvparena/raw/af0d6db7e03da3958c7b8534fe4627a47cb20cf5/src/main/java/net/slipcor/pvparena/modules/StandardSpectate.java",
    "contents_url": "https://api.github.com/repos/Eredrim/pvparena/contents/src/main/java/net/slipcor/pvparena/modules/StandardSpectate.java?ref=af0d6db7e03da3958c7b8534fe4627a47cb20cf5",
    "patch": "@@ -12,6 +12,7 @@\n import net.slipcor.pvparena.loadables.ArenaModule;\n import org.bukkit.entity.Player;\n \n+import java.util.Collections;\n import java.util.Set;\n \n /**\n@@ -26,6 +27,8 @@\n \n public class StandardSpectate extends ArenaModule {\n \n+    public static final String SPECTATOR = \"spectator\";\n+\n     public StandardSpectate() {\n         super(\"StandardSpectate\");\n     }\n@@ -38,8 +41,8 @@ public String version() {\n     }\n \n     @Override\n-    public String checkForMissingSpawns(final Set<String> list) {\n-        return list.contains(\"spectator\") ? null : \"spectator not set\";\n+    public Set<String> checkForMissingSpawns(final Set<String> spawnsNames) {\n+        return spawnsNames.contains(SPECTATOR) ? Collections.emptySet() : Collections.singleton(SPECTATOR);\n     }\n \n     @Override\n@@ -60,25 +63,25 @@ public boolean handleSpectate(Player player) throws GameplayException {\n     @Override\n     public void commitSpectate(final Player player) {\n         // standard join --> lounge\n-        final ArenaPlayer aPlayer = ArenaPlayer.fromPlayer(player);\n-        aPlayer.setLocation(new PALocation(player.getLocation()));\n+        final ArenaPlayer arenaPlayer = ArenaPlayer.fromPlayer(player);\n+        arenaPlayer.setLocation(new PALocation(player.getLocation()));\n \n-        aPlayer.setArena(this.arena);\n-        aPlayer.setStatus(Status.WATCH);\n+        arenaPlayer.setArena(this.arena);\n+        arenaPlayer.setStatus(Status.WATCH);\n \n-        this.arena.tpPlayerToCoordNameForJoin(aPlayer, \"spectator\", true);\n+        this.arena.tpPlayerToCoordNameForJoin(arenaPlayer, SPECTATOR, true);\n         this.arena.msg(player, Language.parse(this.arena, MSG.NOTICE_WELCOME_SPECTATOR));\n \n-        if (aPlayer.getState() == null) {\n+        if (arenaPlayer.getState() == null) {\n \n-            final Arena arena = aPlayer.getArena();\n+            final Arena arena = arenaPlayer.getArena();\n \n-            aPlayer.createState(player);\n+            arenaPlayer.createState(player);\n             ArenaPlayer.backupAndClearInventory(arena, player);\n-            aPlayer.dump();\n+            arenaPlayer.dump();\n \n \n-            if (aPlayer.getArenaTeam() != null && aPlayer.getArenaClass() == null) {\n+            if (arenaPlayer.getArenaTeam() != null && arenaPlayer.getArenaClass() == null) {\n                 String autoClass = arena.getArenaConfig().getDefinedString(CFG.READY_AUTOCLASS);\n                 if(arena.getArenaConfig().getBoolean(CFG.USES_PLAYERCLASSES) && arena.getClass(player.getName()) != null) {\n                     autoClass = player.getName();\n@@ -93,6 +96,6 @@ public void commitSpectate(final Player player) {\n \n     @Override\n     public boolean hasSpawn(final String string) {\n-        return \"spectator\".equalsIgnoreCase(string);\n+        return SPECTATOR.equalsIgnoreCase(string);\n     }\n }"
  }
]
