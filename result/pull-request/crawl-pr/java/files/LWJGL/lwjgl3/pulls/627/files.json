[
  {
    "sha": "9d3e61969f6751d5023ab9b9857c6285ecdc811e",
    "filename": ".idea/modules.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/.idea/modules.xml",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/.idea/modules.xml",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/.idea/modules.xml?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -37,6 +37,7 @@\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/templates/templates.opengl.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/templates/templates.opengl.iml\" />\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/templates/templates.opengles.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/templates/templates.opengles.iml\" />\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/templates/templates.openvr.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/templates/templates.openvr.iml\" />\n+      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/templates/templates.openxr.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/templates/templates.openxr.iml\" />\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/templates/templates.opus.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/templates/templates.opus.iml\" />\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/templates/templates.ovr.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/templates/templates.ovr.iml\" />\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/templates/templates.par.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/templates/templates.par.iml\" />\n@@ -87,6 +88,7 @@\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.opengl.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.opengl.iml\" />\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.opengles.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.opengles.iml\" />\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.openvr.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.openvr.iml\" />\n+      <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.openxr.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.openxr.iml\" />\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.opus.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.opus.iml\" />\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.ovr.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.ovr.iml\" />\n       <module fileurl=\"file://$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.par.iml\" filepath=\"$PROJECT_DIR$/.idea/modules/lwjgl/lwjgl.par.iml\" />"
  },
  {
    "sha": "377c61097f3b39deb1fd34e46c09bb9298c3d7d0",
    "filename": ".idea/modules/lwjgl/lwjgl.openxr.iml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/.idea/modules/lwjgl/lwjgl.openxr.iml",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/.idea/modules/lwjgl/lwjgl.openxr.iml",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/.idea/modules/lwjgl/lwjgl.openxr.iml?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\">\n+    <output url=\"file://$MODULE_DIR$/../../../bin/classes/lwjgl/openxr\" />\n+    <output-test url=\"file://$MODULE_DIR$/../../../bin/classes/test\" />\n+    <exclude-output />\n+    <content url=\"file://$MODULE_DIR$/../../../modules/lwjgl/openxr\">\n+      <sourceFolder url=\"file://$MODULE_DIR$/../../../modules/lwjgl/openxr/src/generated/java\" isTestSource=\"false\" />\n+      <sourceFolder url=\"file://$MODULE_DIR$/../../../modules/lwjgl/openxr/src/main/java\" isTestSource=\"false\" />\n+    </content>\n+    <orderEntry type=\"inheritedJdk\" />\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+    <orderEntry type=\"module\" module-name=\"lwjgl.core\" />\n+    <orderEntry type=\"module\" module-name=\"lwjgl.vulkan\" />\n+    <orderEntry type=\"module\" module-name=\"lwjgl.egl\" />\n+    <orderEntry type=\"module\" module-name=\"lwjgl.opengl\" />\n+    <orderEntry type=\"library\" scope=\"PROVIDED\" name=\"jsr305\" level=\"project\" />\n+  </component>\n+</module>\n\\ No newline at end of file"
  },
  {
    "sha": "a6f1fcce2dc2cc76aa09a03f63f1163d354b1114",
    "filename": ".idea/modules/samples.iml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/.idea/modules/samples.iml",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/.idea/modules/samples.iml",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/.idea/modules/samples.iml?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -65,5 +65,6 @@\n     <orderEntry type=\"module\" module-name=\"lwjgl.xxhash\" scope=\"TEST\" />\n     <orderEntry type=\"module\" module-name=\"lwjgl.yoga\" scope=\"TEST\" />\n     <orderEntry type=\"module\" module-name=\"lwjgl.zstd\" scope=\"TEST\" />\n+    <orderEntry type=\"module\" module-name=\"lwjgl.openxr\" scope=\"TEST\" />\n   </component>\n </module>\n\\ No newline at end of file"
  },
  {
    "sha": "34111a567d305d4ba83b71931a4332828312f7cd",
    "filename": ".idea/modules/templates.iml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/.idea/modules/templates.iml",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/.idea/modules/templates.iml",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/.idea/modules/templates.iml?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -33,6 +33,7 @@\n     <orderEntry type=\"module\" module-name=\"templates.opengl\" />\n     <orderEntry type=\"module\" module-name=\"templates.opengles\" />\n     <orderEntry type=\"module\" module-name=\"templates.openvr\" />\n+    <orderEntry type=\"module\" module-name=\"templates.openxr\" />\n     <orderEntry type=\"module\" module-name=\"templates.opus\" />\n     <orderEntry type=\"module\" module-name=\"templates.ovr\" />\n     <orderEntry type=\"module\" module-name=\"templates.par\" />"
  },
  {
    "sha": "0dbccc96b22f64ee6ae422aa751fc5809346663f",
    "filename": ".idea/modules/templates/templates.openxr.iml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/.idea/modules/templates/templates.openxr.iml",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/.idea/modules/templates/templates.openxr.iml",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/.idea/modules/templates/templates.openxr.iml?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\">\n+    <output url=\"file://$MODULE_DIR$/../../../bin/classes/templates\" />\n+    <output-test url=\"file://$MODULE_DIR$/../../../bin/classes/templates\" />\n+    <exclude-output />\n+    <content url=\"file://$MODULE_DIR$/../../../modules/lwjgl/openxr/src/templates\">\n+      <sourceFolder url=\"file://$MODULE_DIR$/../../../modules/lwjgl/openxr/src/templates/kotlin\" isTestSource=\"false\" />\n+    </content>\n+    <orderEntry type=\"inheritedJdk\" />\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+    <orderEntry type=\"library\" name=\"KotlinRuntime\" level=\"project\" />\n+    <orderEntry type=\"module\" module-name=\"generator\" />\n+    <orderEntry type=\"module\" module-name=\"templates.core\" />\n+    <orderEntry type=\"module\" module-name=\"templates.vulkan\" />\n+    <orderEntry type=\"module\" module-name=\"templates.egl\" />\n+    <orderEntry type=\"module\" module-name=\"templates.opengl\" />\n+  </component>\n+</module>\n\\ No newline at end of file"
  },
  {
    "sha": "07ef36b230176dc3487706290cb03b13ec189a65",
    "filename": "README.md",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/README.md",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/README.md",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/README.md?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -113,6 +113,7 @@ improve the chances of a quick and useful response.\n |[OpenCL](https://www.khronos.org/opencl/)|An open, royalty-free standard for cross-platform, parallel programming of diverse processors found in personal computers, servers, mobile devices and embedded platforms.|\n |[OpenGL](https://www.khronos.org/opengl/)|The most widely adopted 2D and 3D graphics API in the industry, bringing thousands of applications to a wide variety of computer platforms.|\n |[OpenGL ES](https://www.khronos.org/opengles/)|A royalty-free, cross-platform API for full-function 2D and 3D graphics on embedded systems - including consoles, phones, appliances and vehicles.|\n+|[OpenXR](https://www.khronos.org/openxr/)|A royalty-free, open standard that provides high-performance access to Augmented Reality (AR) and Virtual Reality (VR)—collectively known as XR—platforms and devices.|\n |[Vulkan](https://www.khronos.org/vulkan/)|A new generation graphics and compute API that provides high-efficiency, cross-platform access to modern GPUs used in a wide variety of devices from PCs and consoles to mobile phones and embedded platforms.|\n \n #### Display and Input"
  },
  {
    "sha": "d7ef073177598b3c56ac47cb61939bc6e91244ad",
    "filename": "build.gradle.kts",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/build.gradle.kts",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/build.gradle.kts",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/build.gradle.kts?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -193,6 +193,11 @@ enum class Artifacts(\n         \"An API and runtime that allows access to VR hardware from multiple vendors without requiring that applications have specific knowledge of the hardware they are targeting.\",\n         Platforms.LINUX, Platforms.MACOS, Platforms.WINDOWS, Platforms.WINDOWS_X86\n     ),\n+    OPENXR(\n+        \"lwjgl-openxr\", \"LWJGL - OpenXR bindings\",\n+        \"A royalty-free, open standard that provides high-performance access to Augmented Reality (AR) and Virtual Reality (VR)—collectively known as XR—platforms and devices.\",\n+        *Platforms.ALL\n+    ),\n     OPUS(\n         \"lwjgl-opus\", \"LWJGL - Opus bindings\",\n         \"A totally open, royalty-free, highly versatile audio codec.\","
  },
  {
    "sha": "f6850e6c7d2d0094308e75bc1dd44fa597325c07",
    "filename": "build.xml",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/build.xml",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/build.xml",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/build.xml?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -537,6 +537,14 @@\n             </sequential>\n         </parallel>\n \n+        <compileBinding binding=\"openxr\">\n+            <classpath>\n+                <pathelement path=\"${bin.lwjgl}/opengl\"/>\n+                <pathelement path=\"${bin.lwjgl}/opengles\"/>\n+                <pathelement path=\"${bin.lwjgl}/vulkan\"/>\n+            </classpath>\n+        </compileBinding>\n+\n         <compileBinding binding=\"glfw\">\n             <classpath>\n                 <pathelement path=\"${bin.lwjgl}/egl\"/>\n@@ -1566,6 +1574,9 @@\n             </natives>\n         </release-module>\n \n+        <!-- OpenXR -->\n+        <release-module name=\"openxr\" title=\"OpenXR\" if:true=\"${binding.openxr}\"/>\n+\n         <!-- Opus -->\n         <release-module name=\"opus\" native-library=\"opus\" title=\"Opus\" if:true=\"${binding.opus}\"/>\n "
  },
  {
    "sha": "4e8f722606fb3eb9f4a0a94c435ad64429fa0cfa",
    "filename": "config/build-bindings.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/config/build-bindings.xml",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/config/build-bindings.xml",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/config/build-bindings.xml?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -51,6 +51,7 @@ This script is included in /config/build-definitions.xml.\n     <property name=\"binding.opengl\" value=\"true\"/>\n     <property name=\"binding.opengles\" value=\"true\"/>\n     <condition property=\"binding.openvr\" value=\"true\" else=\"false\"><isset property=\"notARM\"/></condition>\n+    <property name=\"binding.openxr\" value=\"true\"/>\n     <property name=\"binding.opus\" value=\"true\"/>\n     <property name=\"binding.par\" value=\"true\"/>\n     <property name=\"binding.remotery\" value=\"true\"/>\n@@ -115,6 +116,7 @@ This script is included in /config/build-definitions.xml.\n                 <sequential if:true=\"${binding.opengl}\"><local name=\"module\"/><property name=\"module\" value=\"opengl\"/><body/></sequential>\n                 <sequential if:true=\"${binding.opengles}\"><local name=\"module\"/><property name=\"module\" value=\"opengles\"/><body/></sequential>\n                 <sequential if:true=\"${binding.openvr}\"><local name=\"module\"/><property name=\"module\" value=\"openvr\"/><body/></sequential>\n+                <sequential if:true=\"${binding.openxr}\"><local name=\"module\"/><property name=\"module\" value=\"openxr\"/><body/></sequential>\n                 <sequential if:true=\"${binding.opus}\"><local name=\"module\"/><property name=\"module\" value=\"opus\"/><body/></sequential>\n                 <sequential if:true=\"${binding.ovr}\"><local name=\"module\"/><property name=\"module\" value=\"ovr\"/><body/></sequential>\n                 <sequential if:true=\"${binding.par}\"><local name=\"module\"/><property name=\"module\" value=\"par\"/><body/></sequential>"
  },
  {
    "sha": "6cfc3f48a2bad4cccd19b0b5390ca6f742d80f5d",
    "filename": "config/windows/build.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/config/windows/build.xml",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/config/windows/build.xml",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/config/windows/build.xml?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -489,6 +489,7 @@ EXPORTS\n             <update-dependency module=\"glfw\" artifact=\"glfw.dll\"/>\n             <update-dependency module=\"openal\" artifact=\"OpenAL.dll\"/>\n             <update-dependency module=\"openvr\" artifact=\"openvr_api.dll\"/>\n+            <update-dependency module=\"openxr\" artifact=\"openxr_loader.dll\"/>\n             <update-dependency module=\"opus\" artifact=\"opus.dll\"/>\n             <update-dependency module=\"shaderc\" artifact=\"shaderc.dll\"/>\n             <update-dependency module=\"shaderc\" artifact=\"shaderc_spvc.dll\"/>"
  },
  {
    "sha": "07fe99927333c36b09046e28baab7ee669a48612",
    "filename": "modules/generator/src/main/kotlin/org/lwjgl/generator/CallbackFunction.kt",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/generator/src/main/kotlin/org/lwjgl/generator/CallbackFunction.kt",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/generator/src/main/kotlin/org/lwjgl/generator/CallbackFunction.kt",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/generator/src/main/kotlin/org/lwjgl/generator/CallbackFunction.kt?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -74,7 +74,7 @@ class CallbackFunction internal constructor(\n         }\n \n     private fun PrintWriter.generateDocumentation(isClass: Boolean) {\n-        val documentation = if (module === Module.VULKAN)\n+        val documentation = if (module === Module.VULKAN || module === Module.OPENXR)\n             super.documentation\n         else {\n             val type ="
  },
  {
    "sha": "1d6bbe477e14c0b696a25c241fffbd1a68ae4dc5",
    "filename": "modules/generator/src/main/kotlin/org/lwjgl/generator/Generator.kt",
    "status": "modified",
    "additions": 12,
    "deletions": 7,
    "changes": 19,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/generator/src/main/kotlin/org/lwjgl/generator/Generator.kt",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/generator/src/main/kotlin/org/lwjgl/generator/Generator.kt",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/generator/src/main/kotlin/org/lwjgl/generator/Generator.kt?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -176,13 +176,18 @@ class Generator(private val moduleRoot: String) {\n             .also {\n                 it.forEach { path ->\n                     try {\n-                        Class\n-                            .forName(\"$packageName.${path.fileName.toString().substringBeforeLast('.').upperCaseFirst}Kt\")\n-                            .methods\n-                            .asSequence()\n-                            .consume()\n-                    } catch (e: ClassNotFoundException) {\n-                        // ignore\n+                        try {\n+                            Class\n+                                .forName(\"$packageName.${path.fileName.toString().substringBeforeLast('.').upperCaseFirst}Kt\")\n+                                .methods\n+                                .asSequence()\n+                                .consume()\n+                        }\n+                        catch (e: ClassNotFoundException) {\n+                            // ignore\n+                        }\n+                    } catch (e: ExceptionInInitializerError) {\n+                        println(\"Caught exception when loading $path: ${e.exception}\")\n                     }\n                 }\n                 it.close()"
  },
  {
    "sha": "2beaf9d40449d6979509eab884a6420e6e1e7a2c",
    "filename": "modules/generator/src/main/kotlin/org/lwjgl/generator/Modules.kt",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/generator/src/main/kotlin/org/lwjgl/generator/Modules.kt",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/generator/src/main/kotlin/org/lwjgl/generator/Modules.kt",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/generator/src/main/kotlin/org/lwjgl/generator/Modules.kt?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -503,6 +503,17 @@ enum class Module(\n         library = JNILibrary.create(\"OpenVR\", custom = true),\n         arrayOverloads = false\n     ),\n+    OPENXR(\n+        \"openxr\",\n+        \"org.lwjgl.openxr\",\n+        \"\"\"\n+        Contains bindings to ${url(\"https://www.khronos.org/openxr/\", \"OpenXR\")}, a royalty-free, open standard that provides high-performance \n+        access to Augmented Reality (AR) and Virtual Reality (VR)—collectively known as XR—platforms and devices.\n+\n+        Not yet ready for release\n+        \"\"\",\n+        CallingConvention.STDCALL\n+    ),\n     OPUS(\n         \"opus\",\n         \"org.lwjgl.util.opus\","
  },
  {
    "sha": "0de4a2ada38b4a5af65914d065276ba660faab21",
    "filename": "modules/generator/src/main/kotlin/org/lwjgl/generator/NativeClass.kt",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/generator/src/main/kotlin/org/lwjgl/generator/NativeClass.kt",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/generator/src/main/kotlin/org/lwjgl/generator/NativeClass.kt",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/generator/src/main/kotlin/org/lwjgl/generator/NativeClass.kt?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -476,7 +476,7 @@ class NativeClass internal constructor(\n                                 else\n                                     it.get<AutoSize>().reference != param.name // dependent auto-size\n                             }\n-                        } || (module.arrayOverloads && func.hasArrayOverloads)\n+                        } || (module.arrayOverloads && func.hasArrayOverloads) || (binding?.shouldCheckFunctionAddress(func) == true && !func.hasCustomJNI)\n                     })\n                     staticImports.add(\"org.lwjgl.system.Checks.*\")\n             }"
  },
  {
    "sha": "c0098c2f94f1b27f8dad69042d3ac31736b10672",
    "filename": "modules/lwjgl/core/src/generated/java/org/lwjgl/system/JNI.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/core/src/generated/java/org/lwjgl/system/JNI.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/core/src/generated/java/org/lwjgl/system/JNI.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/core/src/generated/java/org/lwjgl/system/JNI.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -481,6 +481,8 @@ private JNI() {}\n     public static native int callJPPI(long param0, int param1, long param2, long param3, long __functionAddress);\n     public static native int callJPPI(long param0, long param1, int param2, long param3, long __functionAddress);\n     public static native int callJPPI(long param0, long param1, long param2, int param3, long __functionAddress);\n+    public static native int callPJJI(long param0, long param1, long param2, float param3, long __functionAddress);\n+    public static native int callPJJI(long param0, long param1, long param2, int param3, long __functionAddress);\n     public static native int callPJJI(long param0, long param1, long param2, boolean param3, long __functionAddress);\n     public static native int callPJPI(long param0, int param1, long param2, long param3, long __functionAddress);\n     public static native int callPJPI(long param0, long param1, int param2, long param3, long __functionAddress);\n@@ -509,9 +511,12 @@ private JNI() {}\n     public static native int callPPPI(long param0, long param1, int param2, int param3, int param4, int param5, long param6, long __functionAddress);\n     public static native int callPPJI(int param0, int param1, int param2, long param3, int param4, long param5, boolean param6, long param7, long __functionAddress);\n     public static native int callPPPI(long param0, int param1, int param2, int param3, int param4, int param5, int param6, int param7, long param8, long param9, long __functionAddress);\n+    public static native int callJJPPI(long param0, long param1, long param2, long param3, long __functionAddress);\n     public static native int callJPPPI(long param0, long param1, long param2, long param3, long __functionAddress);\n     public static native int callPJJJI(long param0, long param1, long param2, long param3, long __functionAddress);\n+    public static native int callPJJPI(long param0, long param1, long param2, long param3, long __functionAddress);\n     public static native int callPJPPI(long param0, long param1, long param2, long param3, long __functionAddress);\n+    public static native int callPPJPI(long param0, long param1, long param2, long param3, long __functionAddress);\n     public static native int callPPNPI(long param0, long param1, long param2, long param3, long __functionAddress);\n     public static native int callPPPPI(long param0, long param1, long param2, long param3, long __functionAddress);\n     public static native int callJPPPI(long param0, long param1, int param2, long param3, long param4, long __functionAddress);\n@@ -532,6 +537,7 @@ private JNI() {}\n     public static native int callJPPJI(long param0, int param1, int param2, int param3, long param4, int param5, long param6, boolean param7, long param8, long __functionAddress);\n     public static native int callPPPPI(long param0, int param1, int param2, int param3, int param4, int param5, int param6, int param7, long param8, long param9, long param10, long __functionAddress);\n     public static native int callPPPPI(int param0, long param1, long param2, int param3, int param4, int param5, int param6, int param7, int param8, int param9, int param10, int param11, int param12, int param13, int param14, int param15, int param16, int param17, int param18, int param19, int param20, long param21, long param22, long __functionAddress);\n+    public static native int callPJJPPI(long param0, long param1, long param2, long param3, long param4, long __functionAddress);\n     public static native int callPJPPPI(long param0, long param1, long param2, long param3, long param4, long __functionAddress);\n     public static native int callPPPPPI(long param0, long param1, long param2, long param3, long param4, long __functionAddress);\n     public static native int callPJJJPI(long param0, long param1, long param2, long param3, int param4, long param5, long __functionAddress);\n@@ -1037,10 +1043,12 @@ private JNI() {}\n     public static native int callPI(int param0, int param1, int param2, @Nullable int[] param3, long __functionAddress);\n     public static native int callPI(int param0, int param1, int param2, int param3, @Nullable float[] param4, long __functionAddress);\n     public static native int callPI(int param0, int param1, int param2, int param3, @Nullable int[] param4, long __functionAddress);\n+    public static native int callPPI(long param0, @Nullable float[] param1, long __functionAddress);\n     public static native int callPPI(long param0, @Nullable int[] param1, long __functionAddress);\n     public static native int callPPI(long param0, @Nullable long[] param1, long __functionAddress);\n     public static native int callPPI(@Nullable int[] param0, long param1, long __functionAddress);\n     public static native int callPPI(int param0, long param1, @Nullable int[] param2, long __functionAddress);\n+    public static native int callPPI(int param0, @Nullable int[] param1, long param2, long __functionAddress);\n     public static native int callPPI(long param0, int param1, @Nullable int[] param2, long __functionAddress);\n     public static native int callPPI(long param0, int param1, @Nullable long[] param2, long __functionAddress);\n     public static native int callPPI(long param0, int param1, int param2, @Nullable int[] param3, long __functionAddress);\n@@ -1059,6 +1067,8 @@ private JNI() {}\n     public static native int callPPPI(long param0, int param1, long param2, @Nullable int[] param3, long __functionAddress);\n     public static native int callPPPI(long param0, int param1, long param2, @Nullable long[] param3, long __functionAddress);\n     public static native int callPPPI(long param0, int param1, long param2, @Nullable short[] param3, long __functionAddress);\n+    public static native int callPPPI(long param0, int param1, @Nullable int[] param2, long param3, long __functionAddress);\n+    public static native int callPPPI(long param0, int param1, @Nullable int[] param2, @Nullable float[] param3, long __functionAddress);\n     public static native int callPPPI(long param0, int param1, @Nullable int[] param2, @Nullable int[] param3, long __functionAddress);\n     public static native int callPPPI(long param0, int param1, @Nullable int[] param2, @Nullable long[] param3, long __functionAddress);\n     public static native int callPPPI(long param0, long param1, int param2, @Nullable int[] param3, long __functionAddress);\n@@ -1072,21 +1082,28 @@ private JNI() {}\n     public static native int callPJPPI(long param0, long param1, @Nullable int[] param2, @Nullable int[] param3, long __functionAddress);\n     public static native int callPJPPI(long param0, long param1, @Nullable int[] param2, @Nullable long[] param3, long __functionAddress);\n     public static native int callPPNPI(long param0, long param1, long param2, @Nullable long[] param3, long __functionAddress);\n+    public static native int callPPPPI(long param0, long param1, long param2, @Nullable int[] param3, long __functionAddress);\n     public static native int callPPPPI(long param0, long param1, long param2, @Nullable long[] param3, long __functionAddress);\n     public static native int callPPPPI(long param0, long param1, @Nullable int[] param2, long param3, long __functionAddress);\n     public static native int callPPPPI(long param0, long param1, @Nullable int[] param2, @Nullable int[] param3, long __functionAddress);\n     public static native int callPJPPI(long param0, long param1, int param2, long param3, @Nullable int[] param4, long __functionAddress);\n+    public static native int callPJPPI(long param0, long param1, int param2, @Nullable int[] param3, long param4, long __functionAddress);\n     public static native int callPJPPI(long param0, long param1, int param2, @Nullable int[] param3, @Nullable int[] param4, long __functionAddress);\n     public static native int callPPPPI(long param0, int param1, long param2, long param3, @Nullable long[] param4, long __functionAddress);\n     public static native int callPPPPI(long param0, int param1, long param2, @Nullable int[] param3, long param4, long __functionAddress);\n     public static native int callPPPPI(long param0, int param1, long param2, @Nullable long[] param3, long param4, long __functionAddress);\n     public static native int callPPPPI(long param0, int param1, long param2, @Nullable long[] param3, @Nullable long[] param4, long __functionAddress);\n     public static native int callPPPPI(long param0, int param1, @Nullable int[] param2, long param3, long param4, long __functionAddress);\n+    public static native int callPPPPI(long param0, int param1, @Nullable int[] param2, @Nullable float[] param3, @Nullable float[] param4, long __functionAddress);\n     public static native int callPPPPI(long param0, long param1, int param2, long param3, @Nullable int[] param4, long __functionAddress);\n+    public static native int callPPPPI(long param0, long param1, int param2, @Nullable int[] param3, long param4, long __functionAddress);\n+    public static native int callPPPPI(long param0, long param1, int param2, @Nullable int[] param3, @Nullable long[] param4, long __functionAddress);\n     public static native int callPPPPI(long param0, long param1, long param2, int param3, @Nullable int[] param4, long __functionAddress);\n     public static native int callPPPPI(long param0, @Nullable int[] param1, long param2, int param3, @Nullable int[] param4, long __functionAddress);\n     public static native int callPPPPI(long param0, @Nullable long[] param1, int param2, long param3, @Nullable int[] param4, long __functionAddress);\n     public static native int callPJPPI(long param0, long param1, int param2, int param3, long param4, @Nullable int[] param5, long __functionAddress);\n+    public static native int callPJPPI(long param0, long param1, int param2, int param3, @Nullable int[] param4, long param5, long __functionAddress);\n+    public static native int callPJPPI(long param0, long param1, int param2, int param3, @Nullable int[] param4, @Nullable int[] param5, long __functionAddress);\n     public static native int callPPPPI(long param0, int param1, int param2, long param3, @Nullable int[] param4, long param5, long __functionAddress);\n     public static native int callPPPPI(long param0, int param1, int param2, long param3, @Nullable long[] param4, long param5, long __functionAddress);\n     public static native int callPPPPI(long param0, int param1, int param2, @Nullable long[] param3, @Nullable int[] param4, @Nullable int[] param5, long __functionAddress);\n@@ -1099,6 +1116,7 @@ private JNI() {}\n     public static native int callPJPPPI(long param0, long param1, int param2, long param3, long param4, @Nullable long[] param5, long __functionAddress);\n     public static native int callPPPPPI(long param0, long param1, int param2, long param3, @Nullable int[] param4, long param5, long __functionAddress);\n     public static native int callPPPPPI(long param0, long param1, int param2, long param3, @Nullable long[] param4, long param5, long __functionAddress);\n+    public static native int callPPPPPI(long param0, long param1, long param2, int param3, @Nullable int[] param4, long param5, long __functionAddress);\n     public static native int callPPPPPI(long param0, @Nullable int[] param1, @Nullable float[] param2, int param3, @Nullable int[] param4, @Nullable int[] param5, long __functionAddress);\n     public static native int callPPPPPI(int param0, int param1, @Nullable int[] param2, @Nullable int[] param3, @Nullable int[] param4, @Nullable int[] param5, long param6, long __functionAddress);\n     public static native int callPJPPJI(long param0, long param1, int param2, int param3, long param4, @Nullable int[] param5, long param6, int param7, long __functionAddress);"
  },
  {
    "sha": "8a5078870e37cb29a29bec259564930f78a41028",
    "filename": "modules/lwjgl/core/src/main/java/org/lwjgl/system/Configuration.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/core/src/main/java/org/lwjgl/system/Configuration.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/core/src/main/java/org/lwjgl/system/Configuration.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/core/src/main/java/org/lwjgl/system/Configuration.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -485,6 +485,9 @@\n     /** Similar to {@link #LIBRARY_NAME} for the Vulkan library (<b>org.lwjgl.vulkan.libname</b>). */\n     public static final Configuration<String> VULKAN_LIBRARY_NAME = new Configuration<>(\"org.lwjgl.vulkan.libname\", StateInit.STRING);\n \n+    /** Similar to {@link #LIBRARY_NAME} for the OpenXR library (<b>org.lwjgl.vulkan.libname</b>). */\n+    public static final Configuration<String> OPENXR_LIBRARY_NAME = new Configuration<>(\"org.lwjgl.openxr.libname\", StateInit.STRING);\n+\n     private interface StateInit<T> extends Function<String, T> {\n         StateInit<Boolean> BOOLEAN = property -> {\n             String value = System.getProperty(property);"
  },
  {
    "sha": "91bfe1e8523c7adb957986be95c546205292075f",
    "filename": "modules/lwjgl/core/src/templates/kotlin/core/windows/WindowsTypes.kt",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/core/src/templates/kotlin/core/windows/WindowsTypes.kt",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/core/src/templates/kotlin/core/windows/WindowsTypes.kt",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/core/src/templates/kotlin/core/windows/WindowsTypes.kt?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -25,6 +25,7 @@ val LONG = IntegerType(\"LONG\", PrimitiveMapping.INT)\n val ULONG = IntegerType(\"ULONG\", PrimitiveMapping.INT, unsigned = true)\n val FLOAT = PrimitiveType(\"FLOAT\", PrimitiveMapping.FLOAT)\n val LDOUBLE = PrimitiveType(\"LDOUBLE\", PrimitiveMapping.DOUBLE)\n+val LARGE_INTEGER = PrimitiveType(\"LARGE_INTEGER\", PrimitiveMapping.LONG)\n \n val ATOM = PrimitiveType(\"ATOM\", PrimitiveMapping.SHORT)\n "
  },
  {
    "sha": "d7e6e9ddc7e586af6aed7ac8a4d710816d4f973f",
    "filename": "modules/lwjgl/openxr/khronos_license.txt",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/khronos_license.txt",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/khronos_license.txt",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/khronos_license.txt?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,22 @@\n+/*\n+** Copyright (c) 2013-2014 The Khronos Group Inc.\n+**\n+** Permission is hereby granted, free of charge, to any person obtaining a\n+** copy of this software and/or associated documentation files (the\n+** \"Materials\"), to deal in the Materials without restriction, including\n+** without limitation the rights to use, copy, modify, merge, publish,\n+** distribute, sublicense, and/or sell copies of the Materials, and to\n+** permit persons to whom the Materials are furnished to do so, subject to\n+** the following conditions:\n+**\n+** The above copyright notice and this permission notice shall be included\n+** in all copies or substantial portions of the Materials.\n+**\n+** THE MATERIALS ARE PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n+** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n+** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n+** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n+** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n+*/\n\\ No newline at end of file"
  },
  {
    "sha": "a1dade23472b939830cf5d748ce25774e867b57b",
    "filename": "modules/lwjgl/openxr/src/generated/c/org_lwjgl_openxr_EXTConformanceAutomation.c",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/c/org_lwjgl_openxr_EXTConformanceAutomation.c",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/c/org_lwjgl_openxr_EXTConformanceAutomation.c",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/c/org_lwjgl_openxr_EXTConformanceAutomation.c?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+#include \"common_tools.h\"\n+\n+typedef jint (APIENTRY *xrSetInputDeviceStateVector2fEXTPROC) (intptr_t, jlong, jlong, XrVector2f);\n+typedef jint (APIENTRY *xrSetInputDeviceLocationEXTPROC) (intptr_t, jlong, jlong, intptr_t, XrPosef);\n+\n+EXTERN_C_ENTER\n+\n+JNIEXPORT jint JNICALL Java_org_lwjgl_openxr_EXTConformanceAutomation_nxrSetInputDeviceStateVector2fEXT(JNIEnv *__env, jclass clazz, jlong sessionAddress, jlong topLevelPath, jlong inputSourcePath, jlong stateAddress, jlong __functionAddress) {\n+    xrSetInputDeviceStateVector2fEXTPROC xrSetInputDeviceStateVector2fEXT = (xrSetInputDeviceStateVector2fEXTPROC)(intptr_t)__functionAddress;\n+    intptr_t session = (intptr_t)sessionAddress;\n+    XrVector2f *state = (XrVector2f *)(intptr_t)stateAddress;\n+    UNUSED_PARAMS(__env, clazz)\n+    return (jint)xrSetInputDeviceStateVector2fEXT(session, topLevelPath, inputSourcePath, *state);\n+}\n+\n+JNIEXPORT jint JNICALL Java_org_lwjgl_openxr_EXTConformanceAutomation_nxrSetInputDeviceLocationEXT(JNIEnv *__env, jclass clazz, jlong sessionAddress, jlong topLevelPath, jlong inputSourcePath, jlong spaceAddress, jlong poseAddress, jlong __functionAddress) {\n+    xrSetInputDeviceLocationEXTPROC xrSetInputDeviceLocationEXT = (xrSetInputDeviceLocationEXTPROC)(intptr_t)__functionAddress;\n+    intptr_t session = (intptr_t)sessionAddress;\n+    intptr_t space = (intptr_t)spaceAddress;\n+    XrPosef *pose = (XrPosef *)(intptr_t)poseAddress;\n+    UNUSED_PARAMS(__env, clazz)\n+    return (jint)xrSetInputDeviceLocationEXT(session, topLevelPath, inputSourcePath, space, *pose);\n+}\n+\n+EXTERN_C_EXIT"
  },
  {
    "sha": "f7a0e9f2529e7d224fd3d28948569f90cee53f1b",
    "filename": "modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EPICViewConfigurationFov.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EPICViewConfigurationFov.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EPICViewConfigurationFov.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EPICViewConfigurationFov.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+package org.lwjgl.openxr;\n+\n+/** The EPIC_view_configuration_fov extension. */\n+public final class EPICViewConfigurationFov {\n+\n+    /** The extension specification version. */\n+    public static final int XR_EPIC_view_configuration_fov_SPEC_VERSION = 2;\n+\n+    /** The extension name. */\n+    public static final String XR_EPIC_VIEW_CONFIGURATION_FOV_EXTENSION_NAME = \"XR_EPIC_view_configuration_fov\";\n+\n+    /** Extends {@code XrStructureType}. */\n+    public static final int XR_TYPE_VIEW_CONFIGURATION_VIEW_FOV_EPIC = 1000059000;\n+\n+    private EPICViewConfigurationFov() {}\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b571f759baec3d0d27f4c33ebaebd91e4a624640",
    "filename": "modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTConformanceAutomation.java",
    "status": "added",
    "additions": 95,
    "deletions": 0,
    "changes": 95,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTConformanceAutomation.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTConformanceAutomation.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTConformanceAutomation.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+package org.lwjgl.openxr;\n+\n+import org.lwjgl.system.*;\n+\n+import static org.lwjgl.system.Checks.*;\n+import static org.lwjgl.system.JNI.*;\n+\n+/** The EXT_conformance_automation extension. */\n+public class EXTConformanceAutomation {\n+\n+    /** The extension specification version. */\n+    public static final int XR_EXT_conformance_automation_SPEC_VERSION = 1;\n+\n+    /** The extension name. */\n+    public static final String XR_EXT_CONFORMANCE_AUTOMATION_EXTENSION_NAME = \"XR_EXT_conformance_automation\";\n+\n+    static { Library.initialize(); }\n+\n+    protected EXTConformanceAutomation() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    // --- [ xrSetInputDeviceActiveEXT ] ---\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrSetInputDeviceActiveEXT(XrSession session, @NativeType(\"XrPath\") long interactionProfile, @NativeType(\"XrPath\") long topLevelPath, @NativeType(\"XrBool32\") boolean isActive) {\n+        long __functionAddress = session.getCapabilities().xrSetInputDeviceActiveEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return callPJJI(session.address(), interactionProfile, topLevelPath, isActive ? 1 : 0, __functionAddress);\n+    }\n+\n+    // --- [ xrSetInputDeviceStateBoolEXT ] ---\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrSetInputDeviceStateBoolEXT(XrSession session, @NativeType(\"XrPath\") long topLevelPath, @NativeType(\"XrPath\") long inputSourcePath, @NativeType(\"XrBool32\") boolean state) {\n+        long __functionAddress = session.getCapabilities().xrSetInputDeviceStateBoolEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return callPJJI(session.address(), topLevelPath, inputSourcePath, state ? 1 : 0, __functionAddress);\n+    }\n+\n+    // --- [ xrSetInputDeviceStateFloatEXT ] ---\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrSetInputDeviceStateFloatEXT(XrSession session, @NativeType(\"XrPath\") long topLevelPath, @NativeType(\"XrPath\") long inputSourcePath, float state) {\n+        long __functionAddress = session.getCapabilities().xrSetInputDeviceStateFloatEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return callPJJI(session.address(), topLevelPath, inputSourcePath, state, __functionAddress);\n+    }\n+\n+    // --- [ xrSetInputDeviceStateVector2fEXT ] ---\n+\n+    public static native int nxrSetInputDeviceStateVector2fEXT(long session, long topLevelPath, long inputSourcePath, long state, long __functionAddress);\n+\n+    public static int nxrSetInputDeviceStateVector2fEXT(XrSession session, long topLevelPath, long inputSourcePath, long state) {\n+        long __functionAddress = session.getCapabilities().xrSetInputDeviceStateVector2fEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return nxrSetInputDeviceStateVector2fEXT(session.address(), topLevelPath, inputSourcePath, state, __functionAddress);\n+    }\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrSetInputDeviceStateVector2fEXT(XrSession session, @NativeType(\"XrPath\") long topLevelPath, @NativeType(\"XrPath\") long inputSourcePath, XrVector2f state) {\n+        return nxrSetInputDeviceStateVector2fEXT(session, topLevelPath, inputSourcePath, state.address());\n+    }\n+\n+    // --- [ xrSetInputDeviceLocationEXT ] ---\n+\n+    public static native int nxrSetInputDeviceLocationEXT(long session, long topLevelPath, long inputSourcePath, long space, long pose, long __functionAddress);\n+\n+    public static int nxrSetInputDeviceLocationEXT(XrSession session, long topLevelPath, long inputSourcePath, XrSpace space, long pose) {\n+        long __functionAddress = session.getCapabilities().xrSetInputDeviceLocationEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return nxrSetInputDeviceLocationEXT(session.address(), topLevelPath, inputSourcePath, space.address(), pose, __functionAddress);\n+    }\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrSetInputDeviceLocationEXT(XrSession session, @NativeType(\"XrPath\") long topLevelPath, @NativeType(\"XrPath\") long inputSourcePath, XrSpace space, XrPosef pose) {\n+        return nxrSetInputDeviceLocationEXT(session, topLevelPath, inputSourcePath, space, pose.address());\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a8685c243896f40549a36b3f90df06ea66084323",
    "filename": "modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTDebugUtils.java",
    "status": "added",
    "additions": 190,
    "deletions": 0,
    "changes": 190,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTDebugUtils.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTDebugUtils.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTDebugUtils.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,190 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+package org.lwjgl.openxr;\n+\n+import org.lwjgl.*;\n+\n+import org.lwjgl.system.*;\n+\n+import static org.lwjgl.system.Checks.*;\n+import static org.lwjgl.system.JNI.*;\n+import static org.lwjgl.system.MemoryUtil.*;\n+\n+/** The EXT_debug_utils extension. */\n+public class EXTDebugUtils {\n+\n+    /** The extension specification version. */\n+    public static final int XR_EXT_debug_utils_SPEC_VERSION = 3;\n+\n+    /** The extension name. */\n+    public static final String XR_EXT_DEBUG_UTILS_EXTENSION_NAME = \"XR_EXT_debug_utils\";\n+\n+    /**\n+     * Extends {@code XrStructureType}.\n+     * \n+     * <h5>Enum values:</h5>\n+     * \n+     * <ul>\n+     * <li>{@link #XR_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT}</li>\n+     * <li>{@link #XR_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT}</li>\n+     * <li>{@link #XR_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT}</li>\n+     * <li>{@link #XR_TYPE_DEBUG_UTILS_LABEL_EXT TYPE_DEBUG_UTILS_LABEL_EXT}</li>\n+     * </ul>\n+     */\n+    public static final int\n+        XR_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT        = 1000019000,\n+        XR_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT = 1000019001,\n+        XR_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT   = 1000019002,\n+        XR_TYPE_DEBUG_UTILS_LABEL_EXT                   = 1000019003;\n+\n+    /** Extends {@code XrObjectType}. */\n+    public static final int XR_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT = 1000019000;\n+\n+    /**\n+     * XrDebugUtilsMessageSeverityFlagBitsEXT\n+     * \n+     * <h5>Enum values:</h5>\n+     * \n+     * <ul>\n+     * <li>{@link #XR_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT}</li>\n+     * <li>{@link #XR_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT}</li>\n+     * <li>{@link #XR_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT}</li>\n+     * <li>{@link #XR_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT}</li>\n+     * </ul>\n+     */\n+    public static final int\n+        XR_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT = 0x1,\n+        XR_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT    = 0x10,\n+        XR_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT = 0x100,\n+        XR_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT   = 0x1000;\n+\n+    /**\n+     * XrDebugUtilsMessageTypeFlagBitsEXT\n+     * \n+     * <h5>Enum values:</h5>\n+     * \n+     * <ul>\n+     * <li>{@link #XR_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT}</li>\n+     * <li>{@link #XR_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT}</li>\n+     * <li>{@link #XR_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT}</li>\n+     * <li>{@link #XR_DEBUG_UTILS_MESSAGE_TYPE_CONFORMANCE_BIT_EXT DEBUG_UTILS_MESSAGE_TYPE_CONFORMANCE_BIT_EXT}</li>\n+     * </ul>\n+     */\n+    public static final int\n+        XR_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT     = 0x1,\n+        XR_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT  = 0x2,\n+        XR_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT = 0x4,\n+        XR_DEBUG_UTILS_MESSAGE_TYPE_CONFORMANCE_BIT_EXT = 0x8;\n+\n+    protected EXTDebugUtils() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    // --- [ xrSetDebugUtilsObjectNameEXT ] ---\n+\n+    public static int nxrSetDebugUtilsObjectNameEXT(XrInstance instance, long nameInfo) {\n+        long __functionAddress = instance.getCapabilities().xrSetDebugUtilsObjectNameEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return callPPI(instance.address(), nameInfo, __functionAddress);\n+    }\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrSetDebugUtilsObjectNameEXT(XrInstance instance, @NativeType(\"XrDebugUtilsObjectNameInfoEXT const *\") XrDebugUtilsObjectNameInfoEXT nameInfo) {\n+        return nxrSetDebugUtilsObjectNameEXT(instance, nameInfo.address());\n+    }\n+\n+    // --- [ xrCreateDebugUtilsMessengerEXT ] ---\n+\n+    public static int nxrCreateDebugUtilsMessengerEXT(XrInstance instance, long createInfo, long messenger) {\n+        long __functionAddress = instance.getCapabilities().xrCreateDebugUtilsMessengerEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+            XrDebugUtilsMessengerCreateInfoEXT.validate(createInfo);\n+        }\n+        return callPPPI(instance.address(), createInfo, messenger, __functionAddress);\n+    }\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrCreateDebugUtilsMessengerEXT(XrInstance instance, @NativeType(\"XrDebugUtilsMessengerCreateInfoEXT const *\") XrDebugUtilsMessengerCreateInfoEXT createInfo, @NativeType(\"XrDebugUtilsMessengerEXT *\") PointerBuffer messenger) {\n+        if (CHECKS) {\n+            check(messenger, 1);\n+        }\n+        return nxrCreateDebugUtilsMessengerEXT(instance, createInfo.address(), memAddress(messenger));\n+    }\n+\n+    // --- [ xrDestroyDebugUtilsMessengerEXT ] ---\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrDestroyDebugUtilsMessengerEXT(XrDebugUtilsMessengerEXT messenger) {\n+        long __functionAddress = messenger.getCapabilities().xrDestroyDebugUtilsMessengerEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return callPI(messenger.address(), __functionAddress);\n+    }\n+\n+    // --- [ xrSubmitDebugUtilsMessageEXT ] ---\n+\n+    public static int nxrSubmitDebugUtilsMessageEXT(XrInstance instance, long messageSeverity, long messageTypes, long callbackData) {\n+        long __functionAddress = instance.getCapabilities().xrSubmitDebugUtilsMessageEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+            XrDebugUtilsMessengerCallbackDataEXT.validate(callbackData);\n+        }\n+        return callPJJPI(instance.address(), messageSeverity, messageTypes, callbackData, __functionAddress);\n+    }\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrSubmitDebugUtilsMessageEXT(XrInstance instance, @NativeType(\"XrDebugUtilsMessageSeverityFlagsEXT\") long messageSeverity, @NativeType(\"XrDebugUtilsMessageTypeFlagsEXT\") long messageTypes, @NativeType(\"XrDebugUtilsMessengerCallbackDataEXT const *\") XrDebugUtilsMessengerCallbackDataEXT callbackData) {\n+        return nxrSubmitDebugUtilsMessageEXT(instance, messageSeverity, messageTypes, callbackData.address());\n+    }\n+\n+    // --- [ xrSessionBeginDebugUtilsLabelRegionEXT ] ---\n+\n+    public static int nxrSessionBeginDebugUtilsLabelRegionEXT(XrSession session, long labelInfo) {\n+        long __functionAddress = session.getCapabilities().xrSessionBeginDebugUtilsLabelRegionEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+            XrDebugUtilsLabelEXT.validate(labelInfo);\n+        }\n+        return callPPI(session.address(), labelInfo, __functionAddress);\n+    }\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrSessionBeginDebugUtilsLabelRegionEXT(XrSession session, @NativeType(\"XrDebugUtilsLabelEXT const *\") XrDebugUtilsLabelEXT labelInfo) {\n+        return nxrSessionBeginDebugUtilsLabelRegionEXT(session, labelInfo.address());\n+    }\n+\n+    // --- [ xrSessionEndDebugUtilsLabelRegionEXT ] ---\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrSessionEndDebugUtilsLabelRegionEXT(XrSession session) {\n+        long __functionAddress = session.getCapabilities().xrSessionEndDebugUtilsLabelRegionEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return callPI(session.address(), __functionAddress);\n+    }\n+\n+    // --- [ xrSessionInsertDebugUtilsLabelEXT ] ---\n+\n+    public static int nxrSessionInsertDebugUtilsLabelEXT(XrSession session, long labelInfo) {\n+        long __functionAddress = session.getCapabilities().xrSessionInsertDebugUtilsLabelEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+            XrDebugUtilsLabelEXT.validate(labelInfo);\n+        }\n+        return callPPI(session.address(), labelInfo, __functionAddress);\n+    }\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrSessionInsertDebugUtilsLabelEXT(XrSession session, @NativeType(\"XrDebugUtilsLabelEXT const *\") XrDebugUtilsLabelEXT labelInfo) {\n+        return nxrSessionInsertDebugUtilsLabelEXT(session, labelInfo.address());\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ff94871a496e9727322ee4efdf5d7c133631d3e9",
    "filename": "modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTEyeGazeInteraction.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTEyeGazeInteraction.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTEyeGazeInteraction.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTEyeGazeInteraction.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+package org.lwjgl.openxr;\n+\n+/** The EXT_eye_gaze_interaction extension. */\n+public final class EXTEyeGazeInteraction {\n+\n+    /** The extension specification version. */\n+    public static final int XR_EXT_eye_gaze_interaction_SPEC_VERSION = 1;\n+\n+    /** The extension name. */\n+    public static final String XR_EXT_EYE_GAZE_INTERACTION_EXTENSION_NAME = \"XR_EXT_eye_gaze_interaction\";\n+\n+    /**\n+     * Extends {@code XrStructureType}.\n+     * \n+     * <h5>Enum values:</h5>\n+     * \n+     * <ul>\n+     * <li>{@link #XR_TYPE_SYSTEM_EYE_GAZE_INTERACTION_PROPERTIES_EXT TYPE_SYSTEM_EYE_GAZE_INTERACTION_PROPERTIES_EXT}</li>\n+     * <li>{@link #XR_TYPE_EYE_GAZE_SAMPLE_TIME_EXT TYPE_EYE_GAZE_SAMPLE_TIME_EXT}</li>\n+     * </ul>\n+     */\n+    public static final int\n+        XR_TYPE_SYSTEM_EYE_GAZE_INTERACTION_PROPERTIES_EXT = 1000030000,\n+        XR_TYPE_EYE_GAZE_SAMPLE_TIME_EXT                   = 1000030001;\n+\n+    private EXTEyeGazeInteraction() {}\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "14f72be8850a7cdd05c286438ab81187730a46ff",
    "filename": "modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTHandTracking.java",
    "status": "added",
    "additions": 176,
    "deletions": 0,
    "changes": 176,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTHandTracking.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTHandTracking.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTHandTracking.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,176 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+package org.lwjgl.openxr;\n+\n+import org.lwjgl.*;\n+\n+import org.lwjgl.system.*;\n+\n+import static org.lwjgl.system.Checks.*;\n+import static org.lwjgl.system.JNI.*;\n+import static org.lwjgl.system.MemoryUtil.*;\n+\n+/** The EXT_hand_tracking extension. */\n+public class EXTHandTracking {\n+\n+    /** The extension specification version. */\n+    public static final int XR_EXT_hand_tracking_SPEC_VERSION = 2;\n+\n+    /** The extension name. */\n+    public static final String XR_EXT_HAND_TRACKING_EXTENSION_NAME = \"XR_EXT_hand_tracking\";\n+\n+    /** Extends {@code XrObjectType}. */\n+    public static final int XR_OBJECT_TYPE_HAND_TRACKER_EXT = 1000051000;\n+\n+    /**\n+     * Extends {@code XrStructureType}.\n+     * \n+     * <h5>Enum values:</h5>\n+     * \n+     * <ul>\n+     * <li>{@link #XR_TYPE_SYSTEM_HAND_TRACKING_PROPERTIES_EXT TYPE_SYSTEM_HAND_TRACKING_PROPERTIES_EXT}</li>\n+     * <li>{@link #XR_TYPE_HAND_TRACKER_CREATE_INFO_EXT TYPE_HAND_TRACKER_CREATE_INFO_EXT}</li>\n+     * <li>{@link #XR_TYPE_HAND_JOINTS_LOCATE_INFO_EXT TYPE_HAND_JOINTS_LOCATE_INFO_EXT}</li>\n+     * <li>{@link #XR_TYPE_HAND_JOINT_LOCATIONS_EXT TYPE_HAND_JOINT_LOCATIONS_EXT}</li>\n+     * <li>{@link #XR_TYPE_HAND_JOINT_VELOCITIES_EXT TYPE_HAND_JOINT_VELOCITIES_EXT}</li>\n+     * </ul>\n+     */\n+    public static final int\n+        XR_TYPE_SYSTEM_HAND_TRACKING_PROPERTIES_EXT = 1000051000,\n+        XR_TYPE_HAND_TRACKER_CREATE_INFO_EXT        = 1000051001,\n+        XR_TYPE_HAND_JOINTS_LOCATE_INFO_EXT         = 1000051002,\n+        XR_TYPE_HAND_JOINT_LOCATIONS_EXT            = 1000051003,\n+        XR_TYPE_HAND_JOINT_VELOCITIES_EXT           = 1000051004;\n+\n+    /**\n+     * XrHandEXT\n+     * \n+     * <h5>Enum values:</h5>\n+     * \n+     * <ul>\n+     * <li>{@link #XR_HAND_LEFT_EXT HAND_LEFT_EXT}</li>\n+     * <li>{@link #XR_HAND_RIGHT_EXT HAND_RIGHT_EXT}</li>\n+     * </ul>\n+     */\n+    public static final int\n+        XR_HAND_LEFT_EXT  = 1,\n+        XR_HAND_RIGHT_EXT = 2;\n+\n+    /**\n+     * XrHandJointEXT\n+     * \n+     * <h5>Enum values:</h5>\n+     * \n+     * <ul>\n+     * <li>{@link #XR_HAND_JOINT_PALM_EXT HAND_JOINT_PALM_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_WRIST_EXT HAND_JOINT_WRIST_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_THUMB_METACARPAL_EXT HAND_JOINT_THUMB_METACARPAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_THUMB_PROXIMAL_EXT HAND_JOINT_THUMB_PROXIMAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_THUMB_DISTAL_EXT HAND_JOINT_THUMB_DISTAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_THUMB_TIP_EXT HAND_JOINT_THUMB_TIP_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_INDEX_METACARPAL_EXT HAND_JOINT_INDEX_METACARPAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_INDEX_PROXIMAL_EXT HAND_JOINT_INDEX_PROXIMAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_INDEX_INTERMEDIATE_EXT HAND_JOINT_INDEX_INTERMEDIATE_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_INDEX_DISTAL_EXT HAND_JOINT_INDEX_DISTAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_INDEX_TIP_EXT HAND_JOINT_INDEX_TIP_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_MIDDLE_METACARPAL_EXT HAND_JOINT_MIDDLE_METACARPAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_MIDDLE_PROXIMAL_EXT HAND_JOINT_MIDDLE_PROXIMAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_MIDDLE_INTERMEDIATE_EXT HAND_JOINT_MIDDLE_INTERMEDIATE_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_MIDDLE_DISTAL_EXT HAND_JOINT_MIDDLE_DISTAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_MIDDLE_TIP_EXT HAND_JOINT_MIDDLE_TIP_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_RING_METACARPAL_EXT HAND_JOINT_RING_METACARPAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_RING_PROXIMAL_EXT HAND_JOINT_RING_PROXIMAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_RING_INTERMEDIATE_EXT HAND_JOINT_RING_INTERMEDIATE_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_RING_DISTAL_EXT HAND_JOINT_RING_DISTAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_RING_TIP_EXT HAND_JOINT_RING_TIP_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_LITTLE_METACARPAL_EXT HAND_JOINT_LITTLE_METACARPAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_LITTLE_PROXIMAL_EXT HAND_JOINT_LITTLE_PROXIMAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_LITTLE_INTERMEDIATE_EXT HAND_JOINT_LITTLE_INTERMEDIATE_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_LITTLE_DISTAL_EXT HAND_JOINT_LITTLE_DISTAL_EXT}</li>\n+     * <li>{@link #XR_HAND_JOINT_LITTLE_TIP_EXT HAND_JOINT_LITTLE_TIP_EXT}</li>\n+     * </ul>\n+     */\n+    public static final int\n+        XR_HAND_JOINT_PALM_EXT                = 0,\n+        XR_HAND_JOINT_WRIST_EXT               = 1,\n+        XR_HAND_JOINT_THUMB_METACARPAL_EXT    = 2,\n+        XR_HAND_JOINT_THUMB_PROXIMAL_EXT      = 3,\n+        XR_HAND_JOINT_THUMB_DISTAL_EXT        = 4,\n+        XR_HAND_JOINT_THUMB_TIP_EXT           = 5,\n+        XR_HAND_JOINT_INDEX_METACARPAL_EXT    = 6,\n+        XR_HAND_JOINT_INDEX_PROXIMAL_EXT      = 7,\n+        XR_HAND_JOINT_INDEX_INTERMEDIATE_EXT  = 8,\n+        XR_HAND_JOINT_INDEX_DISTAL_EXT        = 9,\n+        XR_HAND_JOINT_INDEX_TIP_EXT           = 10,\n+        XR_HAND_JOINT_MIDDLE_METACARPAL_EXT   = 11,\n+        XR_HAND_JOINT_MIDDLE_PROXIMAL_EXT     = 12,\n+        XR_HAND_JOINT_MIDDLE_INTERMEDIATE_EXT = 13,\n+        XR_HAND_JOINT_MIDDLE_DISTAL_EXT       = 14,\n+        XR_HAND_JOINT_MIDDLE_TIP_EXT          = 15,\n+        XR_HAND_JOINT_RING_METACARPAL_EXT     = 16,\n+        XR_HAND_JOINT_RING_PROXIMAL_EXT       = 17,\n+        XR_HAND_JOINT_RING_INTERMEDIATE_EXT   = 18,\n+        XR_HAND_JOINT_RING_DISTAL_EXT         = 19,\n+        XR_HAND_JOINT_RING_TIP_EXT            = 20,\n+        XR_HAND_JOINT_LITTLE_METACARPAL_EXT   = 21,\n+        XR_HAND_JOINT_LITTLE_PROXIMAL_EXT     = 22,\n+        XR_HAND_JOINT_LITTLE_INTERMEDIATE_EXT = 23,\n+        XR_HAND_JOINT_LITTLE_DISTAL_EXT       = 24,\n+        XR_HAND_JOINT_LITTLE_TIP_EXT          = 25;\n+\n+    /** XrHandJointSetEXT */\n+    public static final int XR_HAND_JOINT_SET_DEFAULT_EXT = 0;\n+\n+    protected EXTHandTracking() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    // --- [ xrCreateHandTrackerEXT ] ---\n+\n+    public static int nxrCreateHandTrackerEXT(XrSession session, long createInfo, long handTracker) {\n+        long __functionAddress = session.getCapabilities().xrCreateHandTrackerEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return callPPPI(session.address(), createInfo, handTracker, __functionAddress);\n+    }\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrCreateHandTrackerEXT(XrSession session, @NativeType(\"XrHandTrackerCreateInfoEXT const *\") XrHandTrackerCreateInfoEXT createInfo, @NativeType(\"XrHandTrackerEXT *\") PointerBuffer handTracker) {\n+        if (CHECKS) {\n+            check(handTracker, 1);\n+        }\n+        return nxrCreateHandTrackerEXT(session, createInfo.address(), memAddress(handTracker));\n+    }\n+\n+    // --- [ xrDestroyHandTrackerEXT ] ---\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrDestroyHandTrackerEXT(XrHandTrackerEXT handTracker) {\n+        long __functionAddress = handTracker.getCapabilities().xrDestroyHandTrackerEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return callPI(handTracker.address(), __functionAddress);\n+    }\n+\n+    // --- [ xrLocateHandJointsEXT ] ---\n+\n+    public static int nxrLocateHandJointsEXT(XrHandTrackerEXT handTracker, long locateInfo, long locations) {\n+        long __functionAddress = handTracker.getCapabilities().xrLocateHandJointsEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+            XrHandJointsLocateInfoEXT.validate(locateInfo);\n+        }\n+        return callPPPI(handTracker.address(), locateInfo, locations, __functionAddress);\n+    }\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrLocateHandJointsEXT(XrHandTrackerEXT handTracker, @NativeType(\"XrHandJointsLocateInfoEXT const *\") XrHandJointsLocateInfoEXT locateInfo, @NativeType(\"XrHandJointLocationsEXT *\") XrHandJointLocationsEXT locations) {\n+        return nxrLocateHandJointsEXT(handTracker, locateInfo.address(), locations.address());\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "59d859f9526152910ca95ffed3c2f0ea60809a28",
    "filename": "modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTHpMixedRealityController.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTHpMixedRealityController.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTHpMixedRealityController.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTHpMixedRealityController.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+package org.lwjgl.openxr;\n+\n+/** The EXT_hp_mixed_reality_controller extension. */\n+public final class EXTHpMixedRealityController {\n+\n+    /** The extension specification version. */\n+    public static final int XR_EXT_hp_mixed_reality_controller_SPEC_VERSION = 1;\n+\n+    /** The extension name. */\n+    public static final String XR_EXT_HP_MIXED_REALITY_CONTROLLER_EXTENSION_NAME = \"XR_EXT_hp_mixed_reality_controller\";\n+\n+    private EXTHpMixedRealityController() {}\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "e848ea6246ac6d34e1875f8981b62beee348224f",
    "filename": "modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTPerformanceSettings.java",
    "status": "added",
    "additions": 104,
    "deletions": 0,
    "changes": 104,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTPerformanceSettings.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTPerformanceSettings.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTPerformanceSettings.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,104 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+package org.lwjgl.openxr;\n+\n+import org.lwjgl.system.*;\n+\n+import static org.lwjgl.system.Checks.*;\n+import static org.lwjgl.system.JNI.*;\n+\n+/** The EXT_performance_settings extension. */\n+public class EXTPerformanceSettings {\n+\n+    /** The extension specification version. */\n+    public static final int XR_EXT_performance_settings_SPEC_VERSION = 1;\n+\n+    /** The extension name. */\n+    public static final String XR_EXT_PERFORMANCE_SETTINGS_EXTENSION_NAME = \"XR_EXT_performance_settings\";\n+\n+    /** Extends {@code XrStructureType}. */\n+    public static final int XR_TYPE_EVENT_DATA_PERF_SETTINGS_EXT = 1000015000;\n+\n+    /**\n+     * XrPerfSettingsDomainEXT\n+     * \n+     * <h5>Enum values:</h5>\n+     * \n+     * <ul>\n+     * <li>{@link #XR_PERF_SETTINGS_DOMAIN_CPU_EXT PERF_SETTINGS_DOMAIN_CPU_EXT}</li>\n+     * <li>{@link #XR_PERF_SETTINGS_DOMAIN_GPU_EXT PERF_SETTINGS_DOMAIN_GPU_EXT}</li>\n+     * </ul>\n+     */\n+    public static final int\n+        XR_PERF_SETTINGS_DOMAIN_CPU_EXT = 1,\n+        XR_PERF_SETTINGS_DOMAIN_GPU_EXT = 2;\n+\n+    /**\n+     * XrPerfSettingsSubDomainEXT\n+     * \n+     * <h5>Enum values:</h5>\n+     * \n+     * <ul>\n+     * <li>{@link #XR_PERF_SETTINGS_SUB_DOMAIN_COMPOSITING_EXT PERF_SETTINGS_SUB_DOMAIN_COMPOSITING_EXT}</li>\n+     * <li>{@link #XR_PERF_SETTINGS_SUB_DOMAIN_RENDERING_EXT PERF_SETTINGS_SUB_DOMAIN_RENDERING_EXT}</li>\n+     * <li>{@link #XR_PERF_SETTINGS_SUB_DOMAIN_THERMAL_EXT PERF_SETTINGS_SUB_DOMAIN_THERMAL_EXT}</li>\n+     * </ul>\n+     */\n+    public static final int\n+        XR_PERF_SETTINGS_SUB_DOMAIN_COMPOSITING_EXT = 1,\n+        XR_PERF_SETTINGS_SUB_DOMAIN_RENDERING_EXT   = 2,\n+        XR_PERF_SETTINGS_SUB_DOMAIN_THERMAL_EXT     = 3;\n+\n+    /**\n+     * XrPerfSettingsLevelEXT\n+     * \n+     * <h5>Enum values:</h5>\n+     * \n+     * <ul>\n+     * <li>{@link #XR_PERF_SETTINGS_LEVEL_POWER_SAVINGS_EXT PERF_SETTINGS_LEVEL_POWER_SAVINGS_EXT}</li>\n+     * <li>{@link #XR_PERF_SETTINGS_LEVEL_SUSTAINED_LOW_EXT PERF_SETTINGS_LEVEL_SUSTAINED_LOW_EXT}</li>\n+     * <li>{@link #XR_PERF_SETTINGS_LEVEL_SUSTAINED_HIGH_EXT PERF_SETTINGS_LEVEL_SUSTAINED_HIGH_EXT}</li>\n+     * <li>{@link #XR_PERF_SETTINGS_LEVEL_BOOST_EXT PERF_SETTINGS_LEVEL_BOOST_EXT}</li>\n+     * </ul>\n+     */\n+    public static final int\n+        XR_PERF_SETTINGS_LEVEL_POWER_SAVINGS_EXT  = 0,\n+        XR_PERF_SETTINGS_LEVEL_SUSTAINED_LOW_EXT  = 25,\n+        XR_PERF_SETTINGS_LEVEL_SUSTAINED_HIGH_EXT = 50,\n+        XR_PERF_SETTINGS_LEVEL_BOOST_EXT          = 75;\n+\n+    /**\n+     * XrPerfSettingsNotificationLevelEXT\n+     * \n+     * <h5>Enum values:</h5>\n+     * \n+     * <ul>\n+     * <li>{@link #XR_PERF_SETTINGS_NOTIF_LEVEL_NORMAL_EXT PERF_SETTINGS_NOTIF_LEVEL_NORMAL_EXT}</li>\n+     * <li>{@link #XR_PERF_SETTINGS_NOTIF_LEVEL_WARNING_EXT PERF_SETTINGS_NOTIF_LEVEL_WARNING_EXT}</li>\n+     * <li>{@link #XR_PERF_SETTINGS_NOTIF_LEVEL_IMPAIRED_EXT PERF_SETTINGS_NOTIF_LEVEL_IMPAIRED_EXT}</li>\n+     * </ul>\n+     */\n+    public static final int\n+        XR_PERF_SETTINGS_NOTIF_LEVEL_NORMAL_EXT   = 0,\n+        XR_PERF_SETTINGS_NOTIF_LEVEL_WARNING_EXT  = 25,\n+        XR_PERF_SETTINGS_NOTIF_LEVEL_IMPAIRED_EXT = 75;\n+\n+    protected EXTPerformanceSettings() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    // --- [ xrPerfSettingsSetPerformanceLevelEXT ] ---\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrPerfSettingsSetPerformanceLevelEXT(XrSession session, @NativeType(\"XrPerfSettingsDomainEXT\") int domain, @NativeType(\"XrPerfSettingsLevelEXT\") int level) {\n+        long __functionAddress = session.getCapabilities().xrPerfSettingsSetPerformanceLevelEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return callPI(session.address(), domain, level, __functionAddress);\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f15aa7e2d5ded9ae0c190ce891ad54a74b95784b",
    "filename": "modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTSamsungOdysseyController.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTSamsungOdysseyController.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTSamsungOdysseyController.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTSamsungOdysseyController.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+package org.lwjgl.openxr;\n+\n+/** The EXT_samsung_odyssey_controller extension. */\n+public final class EXTSamsungOdysseyController {\n+\n+    /** The extension specification version. */\n+    public static final int XR_EXT_samsung_odyssey_controller_SPEC_VERSION = 1;\n+\n+    /** The extension name. */\n+    public static final String XR_EXT_SAMSUNG_ODYSSEY_CONTROLLER_EXTENSION_NAME = \"XR_EXT_samsung_odyssey_controller\";\n+\n+    private EXTSamsungOdysseyController() {}\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "efb201fbad2bd6fee0146679def0b9cc0ab75e43",
    "filename": "modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTThermalQuery.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTThermalQuery.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTThermalQuery.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTThermalQuery.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,62 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+package org.lwjgl.openxr;\n+\n+import java.nio.*;\n+\n+import org.lwjgl.system.*;\n+\n+import static org.lwjgl.system.Checks.*;\n+import static org.lwjgl.system.JNI.*;\n+import static org.lwjgl.system.MemoryUtil.*;\n+\n+/** The EXT_thermal_query extension. */\n+public class EXTThermalQuery {\n+\n+    /** The extension specification version. */\n+    public static final int XR_EXT_thermal_query_SPEC_VERSION = 1;\n+\n+    /** The extension name. */\n+    public static final String XR_EXT_THERMAL_QUERY_EXTENSION_NAME = \"XR_EXT_thermal_query\";\n+\n+    protected EXTThermalQuery() {\n+        throw new UnsupportedOperationException();\n+    }\n+\n+    // --- [ xrThermalGetTemperatureTrendEXT ] ---\n+\n+    public static int nxrThermalGetTemperatureTrendEXT(XrSession session, int domain, long notificationLevel, long tempHeadroom, long tempSlope) {\n+        long __functionAddress = session.getCapabilities().xrThermalGetTemperatureTrendEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+        }\n+        return callPPPPI(session.address(), domain, notificationLevel, tempHeadroom, tempSlope, __functionAddress);\n+    }\n+\n+    @NativeType(\"XrResult\")\n+    public static int xrThermalGetTemperatureTrendEXT(XrSession session, @NativeType(\"XrPerfSettingsDomainEXT\") int domain, @NativeType(\"XrPerfSettingsNotificationLevelEXT *\") IntBuffer notificationLevel, @NativeType(\"float *\") FloatBuffer tempHeadroom, @NativeType(\"float *\") FloatBuffer tempSlope) {\n+        if (CHECKS) {\n+            check(notificationLevel, 1);\n+            check(tempHeadroom, 1);\n+            check(tempSlope, 1);\n+        }\n+        return nxrThermalGetTemperatureTrendEXT(session, domain, memAddress(notificationLevel), memAddress(tempHeadroom), memAddress(tempSlope));\n+    }\n+\n+    /** Array version of: {@link #xrThermalGetTemperatureTrendEXT ThermalGetTemperatureTrendEXT} */\n+    @NativeType(\"XrResult\")\n+    public static int xrThermalGetTemperatureTrendEXT(XrSession session, @NativeType(\"XrPerfSettingsDomainEXT\") int domain, @NativeType(\"XrPerfSettingsNotificationLevelEXT *\") int[] notificationLevel, @NativeType(\"float *\") float[] tempHeadroom, @NativeType(\"float *\") float[] tempSlope) {\n+        long __functionAddress = session.getCapabilities().xrThermalGetTemperatureTrendEXT;\n+        if (CHECKS) {\n+            check(__functionAddress);\n+            check(notificationLevel, 1);\n+            check(tempHeadroom, 1);\n+            check(tempSlope, 1);\n+        }\n+        return callPPPPI(session.address(), domain, notificationLevel, tempHeadroom, tempSlope, __functionAddress);\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a27bc1aa9cb725ee7ebd8d5b1cac5a86a29a379e",
    "filename": "modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTViewConfigurationDepthRange.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTViewConfigurationDepthRange.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTViewConfigurationDepthRange.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTViewConfigurationDepthRange.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,22 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+package org.lwjgl.openxr;\n+\n+/** The EXT_view_configuration_depth_range extension. */\n+public final class EXTViewConfigurationDepthRange {\n+\n+    /** The extension specification version. */\n+    public static final int XR_EXT_view_configuration_depth_range_SPEC_VERSION = 1;\n+\n+    /** The extension name. */\n+    public static final String XR_EXT_VIEW_CONFIGURATION_DEPTH_RANGE_EXTENSION_NAME = \"XR_EXT_view_configuration_depth_range\";\n+\n+    /** Extends {@code XrStructureType}. */\n+    public static final int XR_TYPE_VIEW_CONFIGURATION_DEPTH_RANGE_EXT = 1000046000;\n+\n+    private EXTViewConfigurationDepthRange() {}\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0a271d19f6c0a60f7219e282cce503d3bc17b3d1",
    "filename": "modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTWin32AppcontainerCompatible.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/LWJGL/lwjgl3/blob/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTWin32AppcontainerCompatible.java",
    "raw_url": "https://github.com/LWJGL/lwjgl3/raw/fb9cb745b1e00830beba978932e511718d4f98a6/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTWin32AppcontainerCompatible.java",
    "contents_url": "https://api.github.com/repos/LWJGL/lwjgl3/contents/modules/lwjgl/openxr/src/generated/java/org/lwjgl/openxr/EXTWin32AppcontainerCompatible.java?ref=fb9cb745b1e00830beba978932e511718d4f98a6",
    "patch": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright LWJGL. All rights reserved.\n+ * License terms: https://www.lwjgl.org/license\n+ * MACHINE GENERATED FILE, DO NOT EDIT\n+ */\n+package org.lwjgl.openxr;\n+\n+/** The EXT_win32_appcontainer_compatible extension. */\n+public final class EXTWin32AppcontainerCompatible {\n+\n+    /** The extension specification version. */\n+    public static final int XR_EXT_win32_appcontainer_compatible_SPEC_VERSION = 1;\n+\n+    /** The extension name. */\n+    public static final String XR_EXT_WIN32_APPCONTAINER_COMPATIBLE_EXTENSION_NAME = \"XR_EXT_win32_appcontainer_compatible\";\n+\n+    private EXTWin32AppcontainerCompatible() {}\n+\n+}\n\\ No newline at end of file"
  }
]
