[
  {
    "sha": "ba79bfa7be65267d0a6a425c6967c37086371cce",
    "filename": "extensions/grpc/deployment/src/test/java/io/quarkus/grpc/server/devmode/GrpcDevModeTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/quarkusio/quarkus/blob/7c2a3688737e30b37e0aa344571deb9aa2106dab/extensions/grpc/deployment/src/test/java/io/quarkus/grpc/server/devmode/GrpcDevModeTest.java",
    "raw_url": "https://github.com/quarkusio/quarkus/raw/7c2a3688737e30b37e0aa344571deb9aa2106dab/extensions/grpc/deployment/src/test/java/io/quarkus/grpc/server/devmode/GrpcDevModeTest.java",
    "contents_url": "https://api.github.com/repos/quarkusio/quarkus/contents/extensions/grpc/deployment/src/test/java/io/quarkus/grpc/server/devmode/GrpcDevModeTest.java?ref=7c2a3688737e30b37e0aa344571deb9aa2106dab",
    "patch": "@@ -15,7 +15,6 @@\n import org.jboss.shrinkwrap.api.spec.JavaArchive;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Disabled;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.RegisterExtension;\n \n@@ -33,7 +32,6 @@\n import io.smallrye.mutiny.Multi;\n import io.smallrye.mutiny.subscription.Subscribers;\n \n-@Disabled(\"Tests are failing since Vert.x 4.0.3 - https://github.com/quarkusio/quarkus/issues/15753\")\n public class GrpcDevModeTest {\n     @RegisterExtension\n     public static final QuarkusDevModeTest test = new QuarkusDevModeTest()"
  },
  {
    "sha": "79fa1ded50b68d84af22a337a8b5ca89f26f4a9e",
    "filename": "extensions/netty/deployment/src/main/java/io/quarkus/netty/deployment/NettyProcessor.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/quarkusio/quarkus/blob/7c2a3688737e30b37e0aa344571deb9aa2106dab/extensions/netty/deployment/src/main/java/io/quarkus/netty/deployment/NettyProcessor.java",
    "raw_url": "https://github.com/quarkusio/quarkus/raw/7c2a3688737e30b37e0aa344571deb9aa2106dab/extensions/netty/deployment/src/main/java/io/quarkus/netty/deployment/NettyProcessor.java",
    "contents_url": "https://api.github.com/repos/quarkusio/quarkus/contents/extensions/netty/deployment/src/main/java/io/quarkus/netty/deployment/NettyProcessor.java?ref=7c2a3688737e30b37e0aa344571deb9aa2106dab",
    "patch": "@@ -52,7 +52,7 @@ public NativeImageSystemPropertyBuildItem limitMem() {\n     public SystemPropertyBuildItem limitArenaSize() {\n         //in native mode we limit the size of the epoll array\n         //if the array overflows the selector just moves the overflow to a map\n-        return new SystemPropertyBuildItem(\"io.netty.allocator.maxOrder\", \"1\");\n+        return new SystemPropertyBuildItem(\"io.netty.allocator.maxOrder\", \"3\");\n     }\n \n     @BuildStep\n@@ -83,7 +83,7 @@ NativeImageConfigBuildItem build(BuildProducer<ReflectiveClassBuildItem> reflect\n                 //.addNativeImageSystemProperty(\"io.netty.noUnsafe\", \"true\")\n                 // Use small chunks to avoid a lot of wasted space. Default is 16mb * arenas (derived from core count)\n                 // Since buffers are cached to threads, the malloc overhead is temporary anyway\n-                .addNativeImageSystemProperty(\"io.netty.allocator.maxOrder\", \"1\")\n+                .addNativeImageSystemProperty(\"io.netty.allocator.maxOrder\", \"3\")\n                 .addRuntimeInitializedClass(\"io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator\")\n                 .addRuntimeInitializedClass(\"io.netty.handler.ssl.ConscryptAlpnSslEngine\")\n                 .addRuntimeInitializedClass(\"io.netty.handler.ssl.ReferenceCountedOpenSslEngine\")"
  }
]
