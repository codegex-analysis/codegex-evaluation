[
  {
    "sha": "91a51f8d6bbb268f8a6749f402c3f354e612a12e",
    "filename": "integration-tests/gradle/update-dependencies.sh",
    "status": "modified",
    "additions": 7,
    "deletions": 4,
    "changes": 11,
    "blob_url": "https://github.com/quarkusio/quarkus/blob/72286f8a5c29d2824bbf7e8929324dcf994a3e19/integration-tests/gradle/update-dependencies.sh",
    "raw_url": "https://github.com/quarkusio/quarkus/raw/72286f8a5c29d2824bbf7e8929324dcf994a3e19/integration-tests/gradle/update-dependencies.sh",
    "contents_url": "https://api.github.com/repos/quarkusio/quarkus/contents/integration-tests/gradle/update-dependencies.sh?ref=72286f8a5c29d2824bbf7e8929324dcf994a3e19",
    "patch": "@@ -5,6 +5,9 @@\n set -e -u -o pipefail\n shopt -s failglob\n \n+# path of this shell script (note: readlink -f does not work on Mac)\n+PRG_PATH=$( cd \"$(dirname \"$0\")\" ; pwd -P )\n+\n DEP_TEMPLATE='        <dependency>\n             <groupId>io.quarkus</groupId>\n             <artifactId>XXX</artifactId>\n@@ -33,8 +36,8 @@ echo ''\n # pipefail is switched off briefly so that a better error can be logged when nothing is found\n set +o pipefail\n # note on sed: -deployment deps are added explicitly later and bom is upstream anyway\n-ARTIFACT_IDS=`grep -hR --include 'build*.gradle' --exclude-dir=build '[iI]mplementation' | \\\n-              grep -Po '(?<=io\\.quarkus:)quarkus-[a-z0-9-]+' | \\\n+ARTIFACT_IDS=`grep -hR --include 'build*.gradle' --exclude-dir=build '[iI]mplementation' \"${PRG_PATH}\" | \\\n+              grep -Eo 'quarkus-[a-z0-9-]+' | \\\n               sed -e '/-deployment/d' -e '/quarkus-bom/d' | sort | uniq`\n set -o pipefail\n if [ -z \"${ARTIFACT_IDS}\" ]\n@@ -66,10 +69,10 @@ SED_EXPR=\"/${MARK_START}/,/${MARK_END}/c\\        ${MARK_START}\\n${DEPS}\\n\n echo ''\n echo 'Updating pom.xml...'\n echo ''\n-sed -i \"${SED_EXPR}\" pom.xml\n+sed -i \"${SED_EXPR}\" \"${PRG_PATH}/pom.xml\"\n \n echo ''\n echo 'Sanity check...'\n echo ''\n # sanity check; make sure nothing stupid was added like non-existing deps\n-mvn dependency:resolve validate -Dsilent -q $*\n\\ No newline at end of file\n+mvn dependency:resolve validate -Dsilent -q -f \"${PRG_PATH}\" $*\n\\ No newline at end of file"
  },
  {
    "sha": "764c493c1196292016ce8468d800f23c49621827",
    "filename": "update-extension-dependencies.sh",
    "status": "modified",
    "additions": 27,
    "deletions": 10,
    "changes": 37,
    "blob_url": "https://github.com/quarkusio/quarkus/blob/72286f8a5c29d2824bbf7e8929324dcf994a3e19/update-extension-dependencies.sh",
    "raw_url": "https://github.com/quarkusio/quarkus/raw/72286f8a5c29d2824bbf7e8929324dcf994a3e19/update-extension-dependencies.sh",
    "contents_url": "https://api.github.com/repos/quarkusio/quarkus/contents/update-extension-dependencies.sh?ref=72286f8a5c29d2824bbf7e8929324dcf994a3e19",
    "patch": "@@ -5,10 +5,27 @@\n set -e -u -o pipefail\n shopt -s failglob\n \n-echo ''\n-echo 'Building bom-descriptor-json...'\n-echo ''\n-mvn -q -e clean package -f devtools/bom-descriptor-json -Denforcer.skip $*\n+# path of this shell script (note: readlink -f does not work on Mac)\n+PRG_PATH=$( cd \"$(dirname \"$0\")\" ; pwd -P )\n+\n+# CI env var => https://docs.github.com/en/actions/reference/environment-variables#default-environment-variables\n+if [ \"${CI:-}\" == true ]\n+then\n+  echo ''\n+  echo 'Building bom-descriptor-json...'\n+  echo ''\n+  mvn -q -e clean package -f \"${PRG_PATH}/devtools/bom-descriptor-json\" -Denforcer.skip $*\n+else\n+  read -n1 -p 'Did you build the entire project? [y/n] ' ANSWER\n+  echo ''\n+  if [ \"${ANSWER}\" != y ]\n+  then\n+    echo ''\n+    echo 'Building entire project...'\n+    echo ''\n+    mvn -q -e -Dquickly -T0.8C -f \"${PRG_PATH}\" $*\n+  fi\n+fi\n \n # note: OFFSET is replaced later on with an individual amount of spaces\n DEP_TEMPLATE='OFFSET<dependency>\n@@ -32,7 +49,7 @@ echo ''\n # get all \"artifact-id\" values from the generated json file\n # pipefail is switched off briefly so that a better error can be logged when nothing is found\n set +o pipefail\n-ARTIFACT_IDS=`grep '^    \"artifact\"' devtools/bom-descriptor-json/target/*.json | grep -Po '(?<=io.quarkus:)(?!quarkus-bom)[^:]+' | sort`\n+ARTIFACT_IDS=`cd \"${PRG_PATH}\" && grep '^    \"artifact\"' devtools/bom-descriptor-json/target/*.json | grep -Eo 'quarkus-[a-z0-9-]+' | sort`\n set -o pipefail\n if [ -z \"${ARTIFACT_IDS}\" ]\n then\n@@ -59,18 +76,18 @@ SED_EXPR_DEPS_DEPLOYMENT=\"/${MARK_START}/,/${MARK_END}/cOFFSET${MARK_START}\\n${D\n echo ''\n echo 'Updating devtools/bom-descriptor-json/pom.xml...'\n echo ''\n-sed -i \"${SED_EXPR_DEPS_RUNTIME}\" devtools/bom-descriptor-json/pom.xml\n+sed -i \"${SED_EXPR_DEPS_RUNTIME}\" \"${PRG_PATH}/devtools/bom-descriptor-json/pom.xml\"\n # note: more indetation here since bom-descriptor-json has a profile for the deps\n-sed -i 's/OFFSET/                /' devtools/bom-descriptor-json/pom.xml\n+sed -i 's/OFFSET/                /' \"${PRG_PATH}/devtools/bom-descriptor-json/pom.xml\"\n \n echo ''\n echo 'Updating docs/pom.xml...'\n echo ''\n-sed -i \"${SED_EXPR_DEPS_DEPLOYMENT}\" docs/pom.xml\n-sed -i 's/OFFSET/        /' docs/pom.xml\n+sed -i \"${SED_EXPR_DEPS_DEPLOYMENT}\" \"${PRG_PATH}/docs/pom.xml\"\n+sed -i 's/OFFSET/        /' \"${PRG_PATH}/docs/pom.xml\"\n \n echo ''\n echo 'Sanity check...'\n echo ''\n # sanity check; make sure nothing stupid was added like non-existing deps\n-mvn dependency:resolve validate -Dsilent -q -pl devtools/bom-descriptor-json,docs $*\n\\ No newline at end of file\n+mvn dependency:resolve validate -Dsilent -q -f \"${PRG_PATH}\" -pl devtools/bom-descriptor-json,docs $*\n\\ No newline at end of file"
  }
]
