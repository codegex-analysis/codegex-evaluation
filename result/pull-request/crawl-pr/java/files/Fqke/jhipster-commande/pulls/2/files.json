[
  {
    "sha": "7e44c2bbf949cb60b44e8b8967d8bfad459aa175",
    "filename": ".jhipster/Article.json",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/.jhipster/Article.json",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/.jhipster/Article.json",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/.jhipster/Article.json?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,41 @@\n+{\n+  \"name\": \"Article\",\n+  \"fields\": [\n+    {\n+      \"fieldName\": \"designation\",\n+      \"fieldType\": \"String\"\n+    },\n+    {\n+      \"fieldName\": \"stock\",\n+      \"fieldType\": \"Integer\"\n+    },\n+    {\n+      \"fieldName\": \"nbPoints\",\n+      \"fieldType\": \"Integer\"\n+    },\n+    {\n+      \"fieldName\": \"description\",\n+      \"fieldType\": \"String\"\n+    }\n+  ],\n+  \"relationships\": [\n+    {\n+      \"relationshipType\": \"many-to-one\",\n+      \"otherEntityName\": \"categorie\",\n+      \"otherEntityRelationshipName\": \"articles\",\n+      \"relationshipName\": \"categorie\",\n+      \"otherEntityField\": \"id\"\n+    }\n+  ],\n+  \"changelogDate\": \"20210311154344\",\n+  \"entityTableName\": \"article\",\n+  \"dto\": \"no\",\n+  \"pagination\": \"no\",\n+  \"service\": \"no\",\n+  \"jpaMetamodelFiltering\": false,\n+  \"fluentMethods\": true,\n+  \"readOnly\": false,\n+  \"embedded\": false,\n+  \"clientRootFolder\": \"\",\n+  \"applications\": \"*\"\n+}"
  },
  {
    "sha": "365a3098da9dadca0cd6cebf08d2bfcae063e51d",
    "filename": ".jhipster/Categorie.json",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/.jhipster/Categorie.json",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/.jhipster/Categorie.json",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/.jhipster/Categorie.json?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,32 @@\n+{\n+  \"name\": \"Categorie\",\n+  \"fields\": [\n+    {\n+      \"fieldName\": \"nom\",\n+      \"fieldType\": \"String\"\n+    },\n+    {\n+      \"fieldName\": \"prixEnEuros\",\n+      \"fieldType\": \"Float\"\n+    }\n+  ],\n+  \"relationships\": [\n+    {\n+      \"relationshipType\": \"one-to-many\",\n+      \"otherEntityName\": \"article\",\n+      \"otherEntityRelationshipName\": \"categorie\",\n+      \"relationshipName\": \"articles\"\n+    }\n+  ],\n+  \"changelogDate\": \"20210311154444\",\n+  \"entityTableName\": \"categorie\",\n+  \"dto\": \"no\",\n+  \"pagination\": \"no\",\n+  \"service\": \"no\",\n+  \"jpaMetamodelFiltering\": false,\n+  \"fluentMethods\": true,\n+  \"readOnly\": false,\n+  \"embedded\": false,\n+  \"clientRootFolder\": \"\",\n+  \"applications\": \"*\"\n+}"
  },
  {
    "sha": "1c2ea8443b18635a198246f91bb2117d55127f6a",
    "filename": "commandecadeau.jh",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/commandecadeau.jh",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/commandecadeau.jh",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/commandecadeau.jh?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,18 @@\n+\n+entity Article {\n+\tid Long required\n+    designation String\n+    stock Integer\n+    nbPoints Integer\n+    description String\n+}\n+\n+entity Categorie {\n+\tid Long required\n+    nom String\n+    prixEnEuros Float\n+}\n+\n+relationship OneToMany {\n+\tCategorie{articles} to Article{categorie(id)}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f5e47ee181461c72f99ece27cdef4bdef269f921",
    "filename": "src/main/java/fr/humanbooster/ar/config/CacheConfiguration.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/config/CacheConfiguration.java",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/config/CacheConfiguration.java",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/java/fr/humanbooster/ar/config/CacheConfiguration.java?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -47,6 +47,9 @@ public JCacheManagerCustomizer cacheManagerCustomizer() {\n             createCache(cm, fr.humanbooster.ar.domain.User.class.getName());\n             createCache(cm, fr.humanbooster.ar.domain.Authority.class.getName());\n             createCache(cm, fr.humanbooster.ar.domain.User.class.getName() + \".authorities\");\n+            createCache(cm, fr.humanbooster.ar.domain.Article.class.getName());\n+            createCache(cm, fr.humanbooster.ar.domain.Categorie.class.getName());\n+            createCache(cm, fr.humanbooster.ar.domain.Categorie.class.getName() + \".articles\");\n             // jhipster-needle-ehcache-add-entry\n         };\n     }"
  },
  {
    "sha": "413f9a2f047ac2a1807613639f74fb5ecfd742be",
    "filename": "src/main/java/fr/humanbooster/ar/domain/Article.java",
    "status": "added",
    "additions": 143,
    "deletions": 0,
    "changes": 143,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/domain/Article.java",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/domain/Article.java",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/java/fr/humanbooster/ar/domain/Article.java?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,143 @@\n+package fr.humanbooster.ar.domain;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+\n+import javax.persistence.*;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * A Article.\n+ */\n+@Entity\n+@Table(name = \"article\")\n+@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n+public class Article implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"designation\")\n+    private String designation;\n+\n+    @Column(name = \"stock\")\n+    private Integer stock;\n+\n+    @Column(name = \"nb_points\")\n+    private Integer nbPoints;\n+\n+    @Column(name = \"description\")\n+    private String description;\n+\n+    @ManyToOne\n+    @JsonIgnoreProperties(value = \"articles\", allowSetters = true)\n+    private Categorie categorie;\n+\n+    // jhipster-needle-entity-add-field - JHipster will add fields here\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getDesignation() {\n+        return designation;\n+    }\n+\n+    public Article designation(String designation) {\n+        this.designation = designation;\n+        return this;\n+    }\n+\n+    public void setDesignation(String designation) {\n+        this.designation = designation;\n+    }\n+\n+    public Integer getStock() {\n+        return stock;\n+    }\n+\n+    public Article stock(Integer stock) {\n+        this.stock = stock;\n+        return this;\n+    }\n+\n+    public void setStock(Integer stock) {\n+        this.stock = stock;\n+    }\n+\n+    public Integer getNbPoints() {\n+        return nbPoints;\n+    }\n+\n+    public Article nbPoints(Integer nbPoints) {\n+        this.nbPoints = nbPoints;\n+        return this;\n+    }\n+\n+    public void setNbPoints(Integer nbPoints) {\n+        this.nbPoints = nbPoints;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public Article description(String description) {\n+        this.description = description;\n+        return this;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n+    public Categorie getCategorie() {\n+        return categorie;\n+    }\n+\n+    public Article categorie(Categorie categorie) {\n+        this.categorie = categorie;\n+        return this;\n+    }\n+\n+    public void setCategorie(Categorie categorie) {\n+        this.categorie = categorie;\n+    }\n+    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof Article)) {\n+            return false;\n+        }\n+        return id != null && id.equals(((Article) o).id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return 31;\n+    }\n+\n+    // prettier-ignore\n+    @Override\n+    public String toString() {\n+        return \"Article{\" +\n+            \"id=\" + getId() +\n+            \", designation='\" + getDesignation() + \"'\" +\n+            \", stock=\" + getStock() +\n+            \", nbPoints=\" + getNbPoints() +\n+            \", description='\" + getDescription() + \"'\" +\n+            \"}\";\n+    }\n+}"
  },
  {
    "sha": "5e9b42d1db89315e64b223dffba4be4877cd9dab",
    "filename": "src/main/java/fr/humanbooster/ar/domain/Categorie.java",
    "status": "added",
    "additions": 122,
    "deletions": 0,
    "changes": 122,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/domain/Categorie.java",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/domain/Categorie.java",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/java/fr/humanbooster/ar/domain/Categorie.java?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,122 @@\n+package fr.humanbooster.ar.domain;\n+\n+import org.hibernate.annotations.Cache;\n+import org.hibernate.annotations.CacheConcurrencyStrategy;\n+\n+import javax.persistence.*;\n+\n+import java.io.Serializable;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+/**\n+ * A Categorie.\n+ */\n+@Entity\n+@Table(name = \"categorie\")\n+@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n+public class Categorie implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Long id;\n+\n+    @Column(name = \"nom\")\n+    private String nom;\n+\n+    @Column(name = \"prix_en_euros\")\n+    private Float prixEnEuros;\n+\n+    @OneToMany(mappedBy = \"categorie\")\n+    @Cache(usage = CacheConcurrencyStrategy.READ_WRITE)\n+    private Set<Article> articles = new HashSet<>();\n+\n+    // jhipster-needle-entity-add-field - JHipster will add fields here\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getNom() {\n+        return nom;\n+    }\n+\n+    public Categorie nom(String nom) {\n+        this.nom = nom;\n+        return this;\n+    }\n+\n+    public void setNom(String nom) {\n+        this.nom = nom;\n+    }\n+\n+    public Float getPrixEnEuros() {\n+        return prixEnEuros;\n+    }\n+\n+    public Categorie prixEnEuros(Float prixEnEuros) {\n+        this.prixEnEuros = prixEnEuros;\n+        return this;\n+    }\n+\n+    public void setPrixEnEuros(Float prixEnEuros) {\n+        this.prixEnEuros = prixEnEuros;\n+    }\n+\n+    public Set<Article> getArticles() {\n+        return articles;\n+    }\n+\n+    public Categorie articles(Set<Article> articles) {\n+        this.articles = articles;\n+        return this;\n+    }\n+\n+    public Categorie addArticles(Article article) {\n+        this.articles.add(article);\n+        article.setCategorie(this);\n+        return this;\n+    }\n+\n+    public Categorie removeArticles(Article article) {\n+        this.articles.remove(article);\n+        article.setCategorie(null);\n+        return this;\n+    }\n+\n+    public void setArticles(Set<Article> articles) {\n+        this.articles = articles;\n+    }\n+    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof Categorie)) {\n+            return false;\n+        }\n+        return id != null && id.equals(((Categorie) o).id);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return 31;\n+    }\n+\n+    // prettier-ignore\n+    @Override\n+    public String toString() {\n+        return \"Categorie{\" +\n+            \"id=\" + getId() +\n+            \", nom='\" + getNom() + \"'\" +\n+            \", prixEnEuros=\" + getPrixEnEuros() +\n+            \"}\";\n+    }\n+}"
  },
  {
    "sha": "8f874851b73e933633fbfc3a17cdaeee3ef275e6",
    "filename": "src/main/java/fr/humanbooster/ar/repository/ArticleRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/repository/ArticleRepository.java",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/repository/ArticleRepository.java",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/java/fr/humanbooster/ar/repository/ArticleRepository.java?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,14 @@\n+package fr.humanbooster.ar.repository;\n+\n+import fr.humanbooster.ar.domain.Article;\n+\n+import org.springframework.data.jpa.repository.*;\n+import org.springframework.stereotype.Repository;\n+\n+/**\n+ * Spring Data  repository for the Article entity.\n+ */\n+@SuppressWarnings(\"unused\")\n+@Repository\n+public interface ArticleRepository extends JpaRepository<Article, Long> {\n+}"
  },
  {
    "sha": "897da0f5de111d795dc84f4192199f083b3286b7",
    "filename": "src/main/java/fr/humanbooster/ar/repository/CategorieRepository.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/repository/CategorieRepository.java",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/repository/CategorieRepository.java",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/java/fr/humanbooster/ar/repository/CategorieRepository.java?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,14 @@\n+package fr.humanbooster.ar.repository;\n+\n+import fr.humanbooster.ar.domain.Categorie;\n+\n+import org.springframework.data.jpa.repository.*;\n+import org.springframework.stereotype.Repository;\n+\n+/**\n+ * Spring Data  repository for the Categorie entity.\n+ */\n+@SuppressWarnings(\"unused\")\n+@Repository\n+public interface CategorieRepository extends JpaRepository<Categorie, Long> {\n+}"
  },
  {
    "sha": "fae2a48ff5f6e3d75ec8ac0a3f4e13b87d07992b",
    "filename": "src/main/java/fr/humanbooster/ar/web/rest/ArticleResource.java",
    "status": "added",
    "additions": 118,
    "deletions": 0,
    "changes": 118,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/web/rest/ArticleResource.java",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/web/rest/ArticleResource.java",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/java/fr/humanbooster/ar/web/rest/ArticleResource.java?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,118 @@\n+package fr.humanbooster.ar.web.rest;\n+\n+import fr.humanbooster.ar.domain.Article;\n+import fr.humanbooster.ar.repository.ArticleRepository;\n+import fr.humanbooster.ar.web.rest.errors.BadRequestAlertException;\n+\n+import io.github.jhipster.web.util.HeaderUtil;\n+import io.github.jhipster.web.util.ResponseUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import java.util.Optional;\n+\n+/**\n+ * REST controller for managing {@link fr.humanbooster.ar.domain.Article}.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+@Transactional\n+public class ArticleResource {\n+\n+    private final Logger log = LoggerFactory.getLogger(ArticleResource.class);\n+\n+    private static final String ENTITY_NAME = \"article\";\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final ArticleRepository articleRepository;\n+\n+    public ArticleResource(ArticleRepository articleRepository) {\n+        this.articleRepository = articleRepository;\n+    }\n+\n+    /**\n+     * {@code POST  /articles} : Create a new article.\n+     *\n+     * @param article the article to create.\n+     * @return the {@link ResponseEntity} with status {@code 201 (Created)} and with body the new article, or with status {@code 400 (Bad Request)} if the article has already an ID.\n+     * @throws URISyntaxException if the Location URI syntax is incorrect.\n+     */\n+    @PostMapping(\"/articles\")\n+    public ResponseEntity<Article> createArticle(@RequestBody Article article) throws URISyntaxException {\n+        log.debug(\"REST request to save Article : {}\", article);\n+        if (article.getId() != null) {\n+            throw new BadRequestAlertException(\"A new article cannot already have an ID\", ENTITY_NAME, \"idexists\");\n+        }\n+        Article result = articleRepository.save(article);\n+        return ResponseEntity.created(new URI(\"/api/articles/\" + result.getId()))\n+            .headers(HeaderUtil.createEntityCreationAlert(applicationName, true, ENTITY_NAME, result.getId().toString()))\n+            .body(result);\n+    }\n+\n+    /**\n+     * {@code PUT  /articles} : Updates an existing article.\n+     *\n+     * @param article the article to update.\n+     * @return the {@link ResponseEntity} with status {@code 200 (OK)} and with body the updated article,\n+     * or with status {@code 400 (Bad Request)} if the article is not valid,\n+     * or with status {@code 500 (Internal Server Error)} if the article couldn't be updated.\n+     * @throws URISyntaxException if the Location URI syntax is incorrect.\n+     */\n+    @PutMapping(\"/articles\")\n+    public ResponseEntity<Article> updateArticle(@RequestBody Article article) throws URISyntaxException {\n+        log.debug(\"REST request to update Article : {}\", article);\n+        if (article.getId() == null) {\n+            throw new BadRequestAlertException(\"Invalid id\", ENTITY_NAME, \"idnull\");\n+        }\n+        Article result = articleRepository.save(article);\n+        return ResponseEntity.ok()\n+            .headers(HeaderUtil.createEntityUpdateAlert(applicationName, true, ENTITY_NAME, article.getId().toString()))\n+            .body(result);\n+    }\n+\n+    /**\n+     * {@code GET  /articles} : get all the articles.\n+     *\n+     * @return the {@link ResponseEntity} with status {@code 200 (OK)} and the list of articles in body.\n+     */\n+    @GetMapping(\"/articles\")\n+    public List<Article> getAllArticles() {\n+        log.debug(\"REST request to get all Articles\");\n+        return articleRepository.findAll();\n+    }\n+\n+    /**\n+     * {@code GET  /articles/:id} : get the \"id\" article.\n+     *\n+     * @param id the id of the article to retrieve.\n+     * @return the {@link ResponseEntity} with status {@code 200 (OK)} and with body the article, or with status {@code 404 (Not Found)}.\n+     */\n+    @GetMapping(\"/articles/{id}\")\n+    public ResponseEntity<Article> getArticle(@PathVariable Long id) {\n+        log.debug(\"REST request to get Article : {}\", id);\n+        Optional<Article> article = articleRepository.findById(id);\n+        return ResponseUtil.wrapOrNotFound(article);\n+    }\n+\n+    /**\n+     * {@code DELETE  /articles/:id} : delete the \"id\" article.\n+     *\n+     * @param id the id of the article to delete.\n+     * @return the {@link ResponseEntity} with status {@code 204 (NO_CONTENT)}.\n+     */\n+    @DeleteMapping(\"/articles/{id}\")\n+    public ResponseEntity<Void> deleteArticle(@PathVariable Long id) {\n+        log.debug(\"REST request to delete Article : {}\", id);\n+        articleRepository.deleteById(id);\n+        return ResponseEntity.noContent().headers(HeaderUtil.createEntityDeletionAlert(applicationName, true, ENTITY_NAME, id.toString())).build();\n+    }\n+}"
  },
  {
    "sha": "84788565abc56f0acaed24f2ea25545fdac4a42c",
    "filename": "src/main/java/fr/humanbooster/ar/web/rest/CategorieResource.java",
    "status": "added",
    "additions": 118,
    "deletions": 0,
    "changes": 118,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/web/rest/CategorieResource.java",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/java/fr/humanbooster/ar/web/rest/CategorieResource.java",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/java/fr/humanbooster/ar/web/rest/CategorieResource.java?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,118 @@\n+package fr.humanbooster.ar.web.rest;\n+\n+import fr.humanbooster.ar.domain.Categorie;\n+import fr.humanbooster.ar.repository.CategorieRepository;\n+import fr.humanbooster.ar.web.rest.errors.BadRequestAlertException;\n+\n+import io.github.jhipster.web.util.HeaderUtil;\n+import io.github.jhipster.web.util.ResponseUtil;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.transaction.annotation.Transactional;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+import java.util.Optional;\n+\n+/**\n+ * REST controller for managing {@link fr.humanbooster.ar.domain.Categorie}.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+@Transactional\n+public class CategorieResource {\n+\n+    private final Logger log = LoggerFactory.getLogger(CategorieResource.class);\n+\n+    private static final String ENTITY_NAME = \"categorie\";\n+\n+    @Value(\"${jhipster.clientApp.name}\")\n+    private String applicationName;\n+\n+    private final CategorieRepository categorieRepository;\n+\n+    public CategorieResource(CategorieRepository categorieRepository) {\n+        this.categorieRepository = categorieRepository;\n+    }\n+\n+    /**\n+     * {@code POST  /categories} : Create a new categorie.\n+     *\n+     * @param categorie the categorie to create.\n+     * @return the {@link ResponseEntity} with status {@code 201 (Created)} and with body the new categorie, or with status {@code 400 (Bad Request)} if the categorie has already an ID.\n+     * @throws URISyntaxException if the Location URI syntax is incorrect.\n+     */\n+    @PostMapping(\"/categories\")\n+    public ResponseEntity<Categorie> createCategorie(@RequestBody Categorie categorie) throws URISyntaxException {\n+        log.debug(\"REST request to save Categorie : {}\", categorie);\n+        if (categorie.getId() != null) {\n+            throw new BadRequestAlertException(\"A new categorie cannot already have an ID\", ENTITY_NAME, \"idexists\");\n+        }\n+        Categorie result = categorieRepository.save(categorie);\n+        return ResponseEntity.created(new URI(\"/api/categories/\" + result.getId()))\n+            .headers(HeaderUtil.createEntityCreationAlert(applicationName, true, ENTITY_NAME, result.getId().toString()))\n+            .body(result);\n+    }\n+\n+    /**\n+     * {@code PUT  /categories} : Updates an existing categorie.\n+     *\n+     * @param categorie the categorie to update.\n+     * @return the {@link ResponseEntity} with status {@code 200 (OK)} and with body the updated categorie,\n+     * or with status {@code 400 (Bad Request)} if the categorie is not valid,\n+     * or with status {@code 500 (Internal Server Error)} if the categorie couldn't be updated.\n+     * @throws URISyntaxException if the Location URI syntax is incorrect.\n+     */\n+    @PutMapping(\"/categories\")\n+    public ResponseEntity<Categorie> updateCategorie(@RequestBody Categorie categorie) throws URISyntaxException {\n+        log.debug(\"REST request to update Categorie : {}\", categorie);\n+        if (categorie.getId() == null) {\n+            throw new BadRequestAlertException(\"Invalid id\", ENTITY_NAME, \"idnull\");\n+        }\n+        Categorie result = categorieRepository.save(categorie);\n+        return ResponseEntity.ok()\n+            .headers(HeaderUtil.createEntityUpdateAlert(applicationName, true, ENTITY_NAME, categorie.getId().toString()))\n+            .body(result);\n+    }\n+\n+    /**\n+     * {@code GET  /categories} : get all the categories.\n+     *\n+     * @return the {@link ResponseEntity} with status {@code 200 (OK)} and the list of categories in body.\n+     */\n+    @GetMapping(\"/categories\")\n+    public List<Categorie> getAllCategories() {\n+        log.debug(\"REST request to get all Categories\");\n+        return categorieRepository.findAll();\n+    }\n+\n+    /**\n+     * {@code GET  /categories/:id} : get the \"id\" categorie.\n+     *\n+     * @param id the id of the categorie to retrieve.\n+     * @return the {@link ResponseEntity} with status {@code 200 (OK)} and with body the categorie, or with status {@code 404 (Not Found)}.\n+     */\n+    @GetMapping(\"/categories/{id}\")\n+    public ResponseEntity<Categorie> getCategorie(@PathVariable Long id) {\n+        log.debug(\"REST request to get Categorie : {}\", id);\n+        Optional<Categorie> categorie = categorieRepository.findById(id);\n+        return ResponseUtil.wrapOrNotFound(categorie);\n+    }\n+\n+    /**\n+     * {@code DELETE  /categories/:id} : delete the \"id\" categorie.\n+     *\n+     * @param id the id of the categorie to delete.\n+     * @return the {@link ResponseEntity} with status {@code 204 (NO_CONTENT)}.\n+     */\n+    @DeleteMapping(\"/categories/{id}\")\n+    public ResponseEntity<Void> deleteCategorie(@PathVariable Long id) {\n+        log.debug(\"REST request to delete Categorie : {}\", id);\n+        categorieRepository.deleteById(id);\n+        return ResponseEntity.noContent().headers(HeaderUtil.createEntityDeletionAlert(applicationName, true, ENTITY_NAME, id.toString())).build();\n+    }\n+}"
  },
  {
    "sha": "5bc863f731e57e5b8487317a846be8dafc0a0e55",
    "filename": "src/main/resources/config/liquibase/changelog/20210311154344_added_entity_Article.xml",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/changelog/20210311154344_added_entity_Article.xml",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/changelog/20210311154344_added_entity_Article.xml",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/resources/config/liquibase/changelog/20210311154344_added_entity_Article.xml?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,65 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<databaseChangeLog\n+    xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+    xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\n+                        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd\">\n+\n+        <property name=\"autoIncrement\" value=\"true\"/>\n+\n+    <!--\n+        Added the entity Article.\n+    -->\n+    <changeSet id=\"20210311154344-1\" author=\"jhipster\">\n+        <createTable tableName=\"article\">\n+            <column name=\"id\" type=\"bigint\" autoIncrement=\"${autoIncrement}\">\n+                <constraints primaryKey=\"true\" nullable=\"false\"/>\n+            </column>\n+            <column name=\"designation\" type=\"varchar(255)\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"stock\" type=\"integer\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"nb_points\" type=\"integer\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"description\" type=\"varchar(255)\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"categorie_id\" type=\"bigint\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <!-- jhipster-needle-liquibase-add-column - JHipster will add columns here -->\n+        </createTable>\n+    </changeSet>\n+\n+    <changeSet id=\"20210311154344-1-relations\" author=\"jhipster\">\n+\n+    </changeSet>\n+    <!-- jhipster-needle-liquibase-add-changeset - JHipster will add changesets here -->\n+\n+    <!--\n+        Load sample data generated with Faker.js\n+        - This data can be easily edited using a CSV editor (or even MS Excel) and\n+          is located in the 'src/main/resources/config/liquibase/fake-data' directory\n+        - By default this data is applied when running with the JHipster 'dev' profile.\n+          This can be customized by adding or removing 'faker' in the 'spring.liquibase.contexts'\n+          Spring Boot configuration key.\n+    -->\n+    <changeSet id=\"20210311154344-1-data\" author=\"jhipster\" context=\"faker\">\n+        <loadData\n+                  file=\"config/liquibase/fake-data/article.csv\"\n+                  separator=\";\"\n+                  tableName=\"article\">\n+            <column name=\"id\" type=\"numeric\"/>\n+            <column name=\"designation\" type=\"string\"/>\n+            <column name=\"stock\" type=\"numeric\"/>\n+            <column name=\"nb_points\" type=\"numeric\"/>\n+            <column name=\"description\" type=\"string\"/>\n+            <!-- jhipster-needle-liquibase-add-loadcolumn - JHipster (and/or extensions) can add load columns here -->\n+        </loadData>\n+    </changeSet>\n+\n+</databaseChangeLog>"
  },
  {
    "sha": "9d169dfe7967fd863452ac0f57d56a5102988e37",
    "filename": "src/main/resources/config/liquibase/changelog/20210311154344_added_entity_constraints_Article.xml",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/changelog/20210311154344_added_entity_constraints_Article.xml",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/changelog/20210311154344_added_entity_constraints_Article.xml",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/resources/config/liquibase/changelog/20210311154344_added_entity_constraints_Article.xml?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,18 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<databaseChangeLog\n+    xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\">\n+    <!--\n+        Added the constraints for entity Article.\n+    -->\n+    <changeSet id=\"20210311154344-2\" author=\"jhipster\">\n+        \n+        <addForeignKeyConstraint baseColumnNames=\"categorie_id\"\n+                                 baseTableName=\"article\"\n+                                 constraintName=\"fk_article_categorie_id\"\n+                                 referencedColumnNames=\"id\"\n+                                 referencedTableName=\"categorie\"/>\n+\n+    </changeSet>\n+</databaseChangeLog>"
  },
  {
    "sha": "41b494af4ebf6c74b423a9b52519a473c2747984",
    "filename": "src/main/resources/config/liquibase/changelog/20210311154444_added_entity_Categorie.xml",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/changelog/20210311154444_added_entity_Categorie.xml",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/changelog/20210311154444_added_entity_Categorie.xml",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/resources/config/liquibase/changelog/20210311154444_added_entity_Categorie.xml?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<databaseChangeLog\n+    xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+    xmlns:ext=\"http://www.liquibase.org/xml/ns/dbchangelog-ext\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd\n+                        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd\">\n+\n+        <property name=\"autoIncrement\" value=\"true\"/>\n+\n+    <!--\n+        Added the entity Categorie.\n+    -->\n+    <changeSet id=\"20210311154444-1\" author=\"jhipster\">\n+        <createTable tableName=\"categorie\">\n+            <column name=\"id\" type=\"bigint\" autoIncrement=\"${autoIncrement}\">\n+                <constraints primaryKey=\"true\" nullable=\"false\"/>\n+            </column>\n+            <column name=\"nom\" type=\"varchar(255)\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <column name=\"prix_en_euros\" type=\"${floatType}\">\n+                <constraints nullable=\"true\" />\n+            </column>\n+            <!-- jhipster-needle-liquibase-add-column - JHipster will add columns here -->\n+        </createTable>\n+    </changeSet>\n+\n+    <changeSet id=\"20210311154444-1-relations\" author=\"jhipster\">\n+\n+    </changeSet>\n+    <!-- jhipster-needle-liquibase-add-changeset - JHipster will add changesets here -->\n+\n+    <!--\n+        Load sample data generated with Faker.js\n+        - This data can be easily edited using a CSV editor (or even MS Excel) and\n+          is located in the 'src/main/resources/config/liquibase/fake-data' directory\n+        - By default this data is applied when running with the JHipster 'dev' profile.\n+          This can be customized by adding or removing 'faker' in the 'spring.liquibase.contexts'\n+          Spring Boot configuration key.\n+    -->\n+    <changeSet id=\"20210311154444-1-data\" author=\"jhipster\" context=\"faker\">\n+        <loadData\n+                  file=\"config/liquibase/fake-data/categorie.csv\"\n+                  separator=\";\"\n+                  tableName=\"categorie\">\n+            <column name=\"id\" type=\"numeric\"/>\n+            <column name=\"nom\" type=\"string\"/>\n+            <column name=\"prix_en_euros\" type=\"numeric\"/>\n+            <!-- jhipster-needle-liquibase-add-loadcolumn - JHipster (and/or extensions) can add load columns here -->\n+        </loadData>\n+    </changeSet>\n+\n+</databaseChangeLog>"
  },
  {
    "sha": "27756544e9728705cfc7c75d0e5b86948ad61b67",
    "filename": "src/main/resources/config/liquibase/fake-data/article.csv",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/fake-data/article.csv",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/fake-data/article.csv",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/resources/config/liquibase/fake-data/article.csv?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,11 @@\n+id;designation;stock;nb_points;description\n+1;Buckinghamshire;39041;8934;online\n+2;maroon copy;95094;18789;Kuwait Sleek backing up\n+3;compress;72906;51291;Cocos (Keeling) Islands visualize\n+4;e-business microchip fuchsia;25864;62389;PCI\n+5;generating;54931;90605;Principal Egypt\n+6;alliance bifurcated;35625;82178;program Trail Sports\n+7;Factors port indexing;53611;9452;magenta\n+8;maroon;24738;3596;Pakistan Rupee Incredible Fresh Computer online\n+9;optical Virginia XSS;4607;83130;systematic grow\n+10;matrix Personal Loan Account;20841;25406;Small Wooden Chips lime"
  },
  {
    "sha": "04e8c50b20bf19cb6b0c9a15259b3f63f260606b",
    "filename": "src/main/resources/config/liquibase/fake-data/categorie.csv",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/fake-data/categorie.csv",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/fake-data/categorie.csv",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/resources/config/liquibase/fake-data/categorie.csv?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,11 @@\n+id;nom;prix_en_euros\n+1;Jordanian Dinar Health;93910\n+2;schemas overriding Refined Cotton Tuna;64545\n+3;payment Credit Card Account;67335\n+4;Home Loan Account engage;44200\n+5;optical Product Checking Account;91587\n+6;Berkshire redefine;36566\n+7;generate XSS;80698\n+8;Dynamic Cambridgeshire;9247\n+9;ROI Granite;41873\n+10;Strategist gold;35441"
  },
  {
    "sha": "2c6e7eb6293cbe1ede35ca866bbc8efe88114dcd",
    "filename": "src/main/resources/config/liquibase/master.xml",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/master.xml",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/resources/config/liquibase/master.xml",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/resources/config/liquibase/master.xml?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -14,7 +14,10 @@\n     <property name=\"uuidType\" value=\"varchar(36)\" dbms=\"h2, mysql, mariadb\"/>\n \n     <include file=\"config/liquibase/changelog/00000000000000_initial_schema.xml\" relativeToChangelogFile=\"false\"/>\n+    <include file=\"config/liquibase/changelog/20210311154344_added_entity_Article.xml\" relativeToChangelogFile=\"false\"/>\n+    <include file=\"config/liquibase/changelog/20210311154444_added_entity_Categorie.xml\" relativeToChangelogFile=\"false\"/>\n     <!-- jhipster-needle-liquibase-add-changelog - JHipster will add liquibase changelogs here -->\n+    <include file=\"config/liquibase/changelog/20210311154344_added_entity_constraints_Article.xml\" relativeToChangelogFile=\"false\"/>\n     <!-- jhipster-needle-liquibase-add-constraints-changelog - JHipster will add liquibase constraints changelogs here -->\n     <!-- jhipster-needle-liquibase-add-incremental-changelog - JHipster will add incremental liquibase changelogs here -->\n </databaseChangeLog>"
  },
  {
    "sha": "3f962a54de604783d298eb7a293e50967283002f",
    "filename": "src/main/webapp/app/entities/article/article-delete-dialog.component.html",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-delete-dialog.component.html",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-delete-dialog.component.html",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/article/article-delete-dialog.component.html?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,24 @@\n+<form *ngIf=\"article\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(article?.id!)\">\n+    <div class=\"modal-header\">\n+        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n+\n+        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n+                (click)=\"cancel()\">&times;</button>\n+    </div>\n+\n+    <div class=\"modal-body\">\n+        <jhi-alert-error></jhi-alert-error>\n+\n+        <p id=\"jhi-delete-article-heading\" jhiTranslate=\"commandeCadeauJHipsterApp.article.delete.question\" [translateValues]=\"{ id: article.id }\">Are you sure you want to delete this Article?</p>\n+    </div>\n+\n+    <div class=\"modal-footer\">\n+        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\n+            <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n+        </button>\n+\n+        <button id=\"jhi-confirm-delete-article\" type=\"submit\" class=\"btn btn-danger\">\n+            <fa-icon icon=\"times\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n+        </button>\n+    </div>\n+</form>"
  },
  {
    "sha": "e2335d5f9cbf302f08b2652a4a33b28b75ed29e1",
    "filename": "src/main/webapp/app/entities/article/article-delete-dialog.component.ts",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-delete-dialog.component.ts",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-delete-dialog.component.ts",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/article/article-delete-dialog.component.ts?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,26 @@\n+import { Component } from '@angular/core';\n+import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n+import { JhiEventManager } from 'ng-jhipster';\n+\n+import { IArticle } from 'app/shared/model/article.model';\n+import { ArticleService } from './article.service';\n+\n+@Component({\n+  templateUrl: './article-delete-dialog.component.html',\n+})\n+export class ArticleDeleteDialogComponent {\n+  article?: IArticle;\n+\n+  constructor(protected articleService: ArticleService, public activeModal: NgbActiveModal, protected eventManager: JhiEventManager) {}\n+\n+  cancel(): void {\n+    this.activeModal.dismiss();\n+  }\n+\n+  confirmDelete(id: number): void {\n+    this.articleService.delete(id).subscribe(() => {\n+      this.eventManager.broadcast('articleListModification');\n+      this.activeModal.close();\n+    });\n+  }\n+}"
  },
  {
    "sha": "4ad923f703522bc8449d75fb96c51b1e6febf040",
    "filename": "src/main/webapp/app/entities/article/article-detail.component.html",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-detail.component.html",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-detail.component.html",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/article/article-detail.component.html?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,48 @@\n+<div class=\"row justify-content-center\">\n+    <div class=\"col-8\">\n+        <div *ngIf=\"article\">\n+            <h2><span jhiTranslate=\"commandeCadeauJHipsterApp.article.detail.title\">Article</span> {{ article.id }}</h2>\n+\n+            <hr>\n+\n+            <jhi-alert-error></jhi-alert-error>\n+\n+            <dl class=\"row-md jh-entity-details\">\n+                <dt><span jhiTranslate=\"commandeCadeauJHipsterApp.article.designation\">Designation</span></dt>\n+                <dd>\n+                    <span>{{ article.designation }}</span>\n+                </dd>\n+                <dt><span jhiTranslate=\"commandeCadeauJHipsterApp.article.stock\">Stock</span></dt>\n+                <dd>\n+                    <span>{{ article.stock }}</span>\n+                </dd>\n+                <dt><span jhiTranslate=\"commandeCadeauJHipsterApp.article.nbPoints\">Nb Points</span></dt>\n+                <dd>\n+                    <span>{{ article.nbPoints }}</span>\n+                </dd>\n+                <dt><span jhiTranslate=\"commandeCadeauJHipsterApp.article.description\">Description</span></dt>\n+                <dd>\n+                    <span>{{ article.description }}</span>\n+                </dd>\n+                <dt><span jhiTranslate=\"commandeCadeauJHipsterApp.article.categorie\">Categorie</span></dt>\n+                <dd>\n+                    <div *ngIf=\"article.categorie\">\n+                        <a [routerLink]=\"['/categorie', article.categorie?.id, 'view']\">{{ article.categorie?.id }}</a>\n+                    </div>\n+                </dd>\n+            </dl>\n+\n+            <button type=\"submit\"\n+                    (click)=\"previousState()\"\n+                    class=\"btn btn-info\">\n+                <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.back\">Back</span>\n+            </button>\n+\n+            <button type=\"button\"\n+                    [routerLink]=\"['/article', article.id, 'edit']\"\n+                    class=\"btn btn-primary\">\n+                <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.edit\">Edit</span>\n+            </button>\n+        </div>\n+    </div>\n+</div>"
  },
  {
    "sha": "c5d370b200df3d7c7725600154b5e273b9fe1d6d",
    "filename": "src/main/webapp/app/entities/article/article-detail.component.ts",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-detail.component.ts",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-detail.component.ts",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/article/article-detail.component.ts?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,22 @@\n+import { Component, OnInit } from '@angular/core';\n+import { ActivatedRoute } from '@angular/router';\n+\n+import { IArticle } from 'app/shared/model/article.model';\n+\n+@Component({\n+  selector: 'jhi-article-detail',\n+  templateUrl: './article-detail.component.html',\n+})\n+export class ArticleDetailComponent implements OnInit {\n+  article: IArticle | null = null;\n+\n+  constructor(protected activatedRoute: ActivatedRoute) {}\n+\n+  ngOnInit(): void {\n+    this.activatedRoute.data.subscribe(({ article }) => (this.article = article));\n+  }\n+\n+  previousState(): void {\n+    window.history.back();\n+  }\n+}"
  },
  {
    "sha": "2a53e26c01db500b5d8767d1737608b72d432daa",
    "filename": "src/main/webapp/app/entities/article/article-update.component.html",
    "status": "added",
    "additions": 58,
    "deletions": 0,
    "changes": 58,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-update.component.html",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-update.component.html",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/article/article-update.component.html?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,58 @@\n+<div class=\"row justify-content-center\">\n+    <div class=\"col-8\">\n+        <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\n+            <h2 id=\"jhi-article-heading\" jhiTranslate=\"commandeCadeauJHipsterApp.article.home.createOrEditLabel\">Create or edit a Article</h2>\n+\n+            <div>\n+                <jhi-alert-error></jhi-alert-error>\n+\n+                <div class=\"form-group\" [hidden]=\"!editForm.get('id')!.value\">\n+                    <label for=\"id\" jhiTranslate=\"global.field.id\">ID</label>\n+                    <input type=\"text\" class=\"form-control\" id=\"id\" name=\"id\" formControlName=\"id\" readonly />\n+                </div>\n+\n+                <div class=\"form-group\">\n+                    <label class=\"form-control-label\" jhiTranslate=\"commandeCadeauJHipsterApp.article.designation\" for=\"field_designation\">Designation</label>\n+                    <input type=\"text\" class=\"form-control\" name=\"designation\" id=\"field_designation\"\n+                           formControlName=\"designation\"/>\n+                </div>\n+\n+                <div class=\"form-group\">\n+                    <label class=\"form-control-label\" jhiTranslate=\"commandeCadeauJHipsterApp.article.stock\" for=\"field_stock\">Stock</label>\n+                    <input type=\"number\" class=\"form-control\" name=\"stock\" id=\"field_stock\"\n+                           formControlName=\"stock\"/>\n+                </div>\n+\n+                <div class=\"form-group\">\n+                    <label class=\"form-control-label\" jhiTranslate=\"commandeCadeauJHipsterApp.article.nbPoints\" for=\"field_nbPoints\">Nb Points</label>\n+                    <input type=\"number\" class=\"form-control\" name=\"nbPoints\" id=\"field_nbPoints\"\n+                           formControlName=\"nbPoints\"/>\n+                </div>\n+\n+                <div class=\"form-group\">\n+                    <label class=\"form-control-label\" jhiTranslate=\"commandeCadeauJHipsterApp.article.description\" for=\"field_description\">Description</label>\n+                    <input type=\"text\" class=\"form-control\" name=\"description\" id=\"field_description\"\n+                           formControlName=\"description\"/>\n+                </div>\n+\n+                <div class=\"form-group\">\n+                    <label class=\"form-control-label\" jhiTranslate=\"commandeCadeauJHipsterApp.article.categorie\" for=\"field_categorie\">Categorie</label>\n+                    <select class=\"form-control\" id=\"field_categorie\" name=\"categorie\" formControlName=\"categorie\">\n+                        <option [ngValue]=\"null\"></option>\n+                        <option [ngValue]=\"categorieOption.id === editForm.get('categorie')!.value?.id ? editForm.get('categorie')!.value : categorieOption\" *ngFor=\"let categorieOption of categories; trackBy: trackById\">{{ categorieOption.id }}</option>\n+                    </select>\n+                </div>\n+            </div>\n+\n+            <div>\n+                <button type=\"button\" id=\"cancel-save\" class=\"btn btn-secondary\" (click)=\"previousState()\">\n+                    <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n+                </button>\n+\n+                <button type=\"submit\" id=\"save-entity\" [disabled]=\"editForm.invalid || isSaving\" class=\"btn btn-primary\">\n+                    <fa-icon icon=\"save\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.save\">Save</span>\n+                </button>\n+            </div>\n+        </form>\n+    </div>\n+</div>"
  },
  {
    "sha": "879194fd8ac34ba2d553b1232c99895baa89e3fb",
    "filename": "src/main/webapp/app/entities/article/article-update.component.ts",
    "status": "added",
    "additions": 101,
    "deletions": 0,
    "changes": 101,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-update.component.ts",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article-update.component.ts",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/article/article-update.component.ts?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,101 @@\n+import { Component, OnInit } from '@angular/core';\n+import { HttpResponse } from '@angular/common/http';\n+// eslint-disable-next-line @typescript-eslint/no-unused-vars\n+import { FormBuilder, Validators } from '@angular/forms';\n+import { ActivatedRoute } from '@angular/router';\n+import { Observable } from 'rxjs';\n+\n+import { IArticle, Article } from 'app/shared/model/article.model';\n+import { ArticleService } from './article.service';\n+import { ICategorie } from 'app/shared/model/categorie.model';\n+import { CategorieService } from 'app/entities/categorie/categorie.service';\n+\n+@Component({\n+  selector: 'jhi-article-update',\n+  templateUrl: './article-update.component.html',\n+})\n+export class ArticleUpdateComponent implements OnInit {\n+  isSaving = false;\n+  categories: ICategorie[] = [];\n+\n+  editForm = this.fb.group({\n+    id: [],\n+    designation: [],\n+    stock: [],\n+    nbPoints: [],\n+    description: [],\n+    categorie: [],\n+  });\n+\n+  constructor(\n+    protected articleService: ArticleService,\n+    protected categorieService: CategorieService,\n+    protected activatedRoute: ActivatedRoute,\n+    private fb: FormBuilder\n+  ) {}\n+\n+  ngOnInit(): void {\n+    this.activatedRoute.data.subscribe(({ article }) => {\n+      this.updateForm(article);\n+\n+      this.categorieService.query().subscribe((res: HttpResponse<ICategorie[]>) => (this.categories = res.body || []));\n+    });\n+  }\n+\n+  updateForm(article: IArticle): void {\n+    this.editForm.patchValue({\n+      id: article.id,\n+      designation: article.designation,\n+      stock: article.stock,\n+      nbPoints: article.nbPoints,\n+      description: article.description,\n+      categorie: article.categorie,\n+    });\n+  }\n+\n+  previousState(): void {\n+    window.history.back();\n+  }\n+\n+  save(): void {\n+    this.isSaving = true;\n+    const article = this.createFromForm();\n+    if (article.id !== undefined) {\n+      this.subscribeToSaveResponse(this.articleService.update(article));\n+    } else {\n+      this.subscribeToSaveResponse(this.articleService.create(article));\n+    }\n+  }\n+\n+  private createFromForm(): IArticle {\n+    return {\n+      ...new Article(),\n+      id: this.editForm.get(['id'])!.value,\n+      designation: this.editForm.get(['designation'])!.value,\n+      stock: this.editForm.get(['stock'])!.value,\n+      nbPoints: this.editForm.get(['nbPoints'])!.value,\n+      description: this.editForm.get(['description'])!.value,\n+      categorie: this.editForm.get(['categorie'])!.value,\n+    };\n+  }\n+\n+  protected subscribeToSaveResponse(result: Observable<HttpResponse<IArticle>>): void {\n+    result.subscribe(\n+      () => this.onSaveSuccess(),\n+      () => this.onSaveError()\n+    );\n+  }\n+\n+  protected onSaveSuccess(): void {\n+    this.isSaving = false;\n+    this.previousState();\n+  }\n+\n+  protected onSaveError(): void {\n+    this.isSaving = false;\n+  }\n+\n+  trackById(index: number, item: ICategorie): any {\n+    return item.id;\n+  }\n+}"
  },
  {
    "sha": "03e79ae1d541b077b70df11610ff4f0996eced81",
    "filename": "src/main/webapp/app/entities/article/article.component.html",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article.component.html",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article.component.html",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/article/article.component.html?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,73 @@\n+<div>\n+    <h2 id=\"page-heading\">\n+        <span jhiTranslate=\"commandeCadeauJHipsterApp.article.home.title\">Articles</span>\n+\n+        <button id=\"jh-create-entity\" class=\"btn btn-primary float-right jh-create-entity create-article\" [routerLink]=\"['/article/new']\">\n+            <fa-icon icon=\"plus\"></fa-icon>\n+            <span  jhiTranslate=\"commandeCadeauJHipsterApp.article.home.createLabel\">\n+            Create a new Article\n+            </span>\n+        </button>\n+    </h2>\n+\n+    <jhi-alert-error></jhi-alert-error>\n+\n+    <jhi-alert></jhi-alert>\n+\n+    <div class=\"alert alert-warning\" id=\"no-result\" *ngIf=\"articles?.length === 0\">\n+        <span jhiTranslate=\"commandeCadeauJHipsterApp.article.home.notFound\">No articles found</span>\n+    </div>\n+\n+    <div class=\"table-responsive\" id=\"entities\" *ngIf=\"articles && articles.length > 0\">\n+        <table class=\"table table-striped\" aria-describedby=\"page-heading\">\n+            <thead>\n+                <tr>\n+                    <th scope=\"col\" ><span jhiTranslate=\"global.field.id\">ID</span></th>\n+                    <th scope=\"col\" ><span jhiTranslate=\"commandeCadeauJHipsterApp.article.designation\">Designation</span></th>\n+                    <th scope=\"col\" ><span jhiTranslate=\"commandeCadeauJHipsterApp.article.stock\">Stock</span></th>\n+                    <th scope=\"col\" ><span jhiTranslate=\"commandeCadeauJHipsterApp.article.nbPoints\">Nb Points</span></th>\n+                    <th scope=\"col\" ><span jhiTranslate=\"commandeCadeauJHipsterApp.article.description\">Description</span></th>\n+                    <th scope=\"col\" ><span jhiTranslate=\"commandeCadeauJHipsterApp.article.categorie\">Categorie</span></th>\n+                    <th scope=\"col\"></th>\n+                </tr>\n+            </thead>\n+            <tbody>\n+                <tr *ngFor=\"let article of articles ;trackBy: trackId\">\n+                    <td><a [routerLink]=\"['/article', article.id, 'view']\">{{ article.id }}</a></td>\n+                    <td>{{ article.designation }}</td>\n+                    <td>{{ article.stock }}</td>\n+                    <td>{{ article.nbPoints }}</td>\n+                    <td>{{ article.description }}</td>\n+                    <td>\n+                        <div *ngIf=\"article.categorie\">\n+                            <a [routerLink]=\"['/categorie', article.categorie?.id, 'view']\" >{{ article.categorie?.id }}</a>\n+                        </div>\n+                    </td>\n+                    <td class=\"text-right\">\n+                        <div class=\"btn-group\">\n+                            <button type=\"submit\"\n+                                    [routerLink]=\"['/article', article.id, 'view']\"\n+                                    class=\"btn btn-info btn-sm\">\n+                                <fa-icon icon=\"eye\"></fa-icon>\n+                                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.view\">View</span>\n+                            </button>\n+\n+                            <button type=\"submit\"\n+                                    [routerLink]=\"['/article', article.id, 'edit']\"\n+                                    class=\"btn btn-primary btn-sm\">\n+                                <fa-icon icon=\"pencil-alt\"></fa-icon>\n+                                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.edit\">Edit</span>\n+                            </button>\n+\n+                            <button type=\"submit\" (click)=\"delete(article)\"\n+                                    class=\"btn btn-danger btn-sm\">\n+                                <fa-icon icon=\"times\"></fa-icon>\n+                                <span class=\"d-none d-md-inline\" jhiTranslate=\"entity.action.delete\">Delete</span>\n+                            </button>\n+                        </div>\n+                    </td>\n+                </tr>\n+            </tbody>\n+        </table>\n+    </div>\n+</div>"
  },
  {
    "sha": "3685fb306f05068ea0d51bee724dc2896f77c0cd",
    "filename": "src/main/webapp/app/entities/article/article.component.ts",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article.component.ts",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article.component.ts",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/article/article.component.ts?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,49 @@\n+import { Component, OnInit, OnDestroy } from '@angular/core';\n+import { HttpResponse } from '@angular/common/http';\n+import { Subscription } from 'rxjs';\n+import { JhiEventManager } from 'ng-jhipster';\n+import { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n+\n+import { IArticle } from 'app/shared/model/article.model';\n+import { ArticleService } from './article.service';\n+import { ArticleDeleteDialogComponent } from './article-delete-dialog.component';\n+\n+@Component({\n+  selector: 'jhi-article',\n+  templateUrl: './article.component.html',\n+})\n+export class ArticleComponent implements OnInit, OnDestroy {\n+  articles?: IArticle[];\n+  eventSubscriber?: Subscription;\n+\n+  constructor(protected articleService: ArticleService, protected eventManager: JhiEventManager, protected modalService: NgbModal) {}\n+\n+  loadAll(): void {\n+    this.articleService.query().subscribe((res: HttpResponse<IArticle[]>) => (this.articles = res.body || []));\n+  }\n+\n+  ngOnInit(): void {\n+    this.loadAll();\n+    this.registerChangeInArticles();\n+  }\n+\n+  ngOnDestroy(): void {\n+    if (this.eventSubscriber) {\n+      this.eventManager.destroy(this.eventSubscriber);\n+    }\n+  }\n+\n+  trackId(index: number, item: IArticle): number {\n+    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n+    return item.id!;\n+  }\n+\n+  registerChangeInArticles(): void {\n+    this.eventSubscriber = this.eventManager.subscribe('articleListModification', () => this.loadAll());\n+  }\n+\n+  delete(article: IArticle): void {\n+    const modalRef = this.modalService.open(ArticleDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\n+    modalRef.componentInstance.article = article;\n+  }\n+}"
  },
  {
    "sha": "44099786824ccac6155e1bd3e8a58498a50427e7",
    "filename": "src/main/webapp/app/entities/article/article.module.ts",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article.module.ts",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article.module.ts",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/article/article.module.ts?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,16 @@\n+import { NgModule } from '@angular/core';\n+import { RouterModule } from '@angular/router';\n+\n+import { CommandeCadeauJHipsterSharedModule } from 'app/shared/shared.module';\n+import { ArticleComponent } from './article.component';\n+import { ArticleDetailComponent } from './article-detail.component';\n+import { ArticleUpdateComponent } from './article-update.component';\n+import { ArticleDeleteDialogComponent } from './article-delete-dialog.component';\n+import { articleRoute } from './article.route';\n+\n+@NgModule({\n+  imports: [CommandeCadeauJHipsterSharedModule, RouterModule.forChild(articleRoute)],\n+  declarations: [ArticleComponent, ArticleDetailComponent, ArticleUpdateComponent, ArticleDeleteDialogComponent],\n+  entryComponents: [ArticleDeleteDialogComponent],\n+})\n+export class CommandeCadeauJHipsterArticleModule {}"
  },
  {
    "sha": "f8c42975a42f0b2141d249a14a9e830d27bc5b79",
    "filename": "src/main/webapp/app/entities/article/article.route.ts",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article.route.ts",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article.route.ts",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/article/article.route.ts?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,83 @@\n+import { Injectable } from '@angular/core';\n+import { HttpResponse } from '@angular/common/http';\n+import { Resolve, ActivatedRouteSnapshot, Routes, Router } from '@angular/router';\n+import { Observable, of, EMPTY } from 'rxjs';\n+import { flatMap } from 'rxjs/operators';\n+\n+import { Authority } from 'app/shared/constants/authority.constants';\n+import { UserRouteAccessService } from 'app/core/auth/user-route-access-service';\n+import { IArticle, Article } from 'app/shared/model/article.model';\n+import { ArticleService } from './article.service';\n+import { ArticleComponent } from './article.component';\n+import { ArticleDetailComponent } from './article-detail.component';\n+import { ArticleUpdateComponent } from './article-update.component';\n+\n+@Injectable({ providedIn: 'root' })\n+export class ArticleResolve implements Resolve<IArticle> {\n+  constructor(private service: ArticleService, private router: Router) {}\n+\n+  resolve(route: ActivatedRouteSnapshot): Observable<IArticle> | Observable<never> {\n+    const id = route.params['id'];\n+    if (id) {\n+      return this.service.find(id).pipe(\n+        flatMap((article: HttpResponse<Article>) => {\n+          if (article.body) {\n+            return of(article.body);\n+          } else {\n+            this.router.navigate(['404']);\n+            return EMPTY;\n+          }\n+        })\n+      );\n+    }\n+    return of(new Article());\n+  }\n+}\n+\n+export const articleRoute: Routes = [\n+  {\n+    path: '',\n+    component: ArticleComponent,\n+    data: {\n+      authorities: [Authority.USER],\n+      pageTitle: 'commandeCadeauJHipsterApp.article.home.title',\n+    },\n+    canActivate: [UserRouteAccessService],\n+  },\n+  {\n+    path: ':id/view',\n+    component: ArticleDetailComponent,\n+    resolve: {\n+      article: ArticleResolve,\n+    },\n+    data: {\n+      authorities: [Authority.USER],\n+      pageTitle: 'commandeCadeauJHipsterApp.article.home.title',\n+    },\n+    canActivate: [UserRouteAccessService],\n+  },\n+  {\n+    path: 'new',\n+    component: ArticleUpdateComponent,\n+    resolve: {\n+      article: ArticleResolve,\n+    },\n+    data: {\n+      authorities: [Authority.USER],\n+      pageTitle: 'commandeCadeauJHipsterApp.article.home.title',\n+    },\n+    canActivate: [UserRouteAccessService],\n+  },\n+  {\n+    path: ':id/edit',\n+    component: ArticleUpdateComponent,\n+    resolve: {\n+      article: ArticleResolve,\n+    },\n+    data: {\n+      authorities: [Authority.USER],\n+      pageTitle: 'commandeCadeauJHipsterApp.article.home.title',\n+    },\n+    canActivate: [UserRouteAccessService],\n+  },\n+];"
  },
  {
    "sha": "90c93d06cafeedc30ded1fb96b82881a83c5472b",
    "filename": "src/main/webapp/app/entities/article/article.service.ts",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article.service.ts",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/article/article.service.ts",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/article/article.service.ts?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,38 @@\n+import { Injectable } from '@angular/core';\n+import { HttpClient, HttpResponse } from '@angular/common/http';\n+import { Observable } from 'rxjs';\n+\n+import { SERVER_API_URL } from 'app/app.constants';\n+import { createRequestOption } from 'app/shared/util/request-util';\n+import { IArticle } from 'app/shared/model/article.model';\n+\n+type EntityResponseType = HttpResponse<IArticle>;\n+type EntityArrayResponseType = HttpResponse<IArticle[]>;\n+\n+@Injectable({ providedIn: 'root' })\n+export class ArticleService {\n+  public resourceUrl = SERVER_API_URL + 'api/articles';\n+\n+  constructor(protected http: HttpClient) {}\n+\n+  create(article: IArticle): Observable<EntityResponseType> {\n+    return this.http.post<IArticle>(this.resourceUrl, article, { observe: 'response' });\n+  }\n+\n+  update(article: IArticle): Observable<EntityResponseType> {\n+    return this.http.put<IArticle>(this.resourceUrl, article, { observe: 'response' });\n+  }\n+\n+  find(id: number): Observable<EntityResponseType> {\n+    return this.http.get<IArticle>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n+  }\n+\n+  query(req?: any): Observable<EntityArrayResponseType> {\n+    const options = createRequestOption(req);\n+    return this.http.get<IArticle[]>(this.resourceUrl, { params: options, observe: 'response' });\n+  }\n+\n+  delete(id: number): Observable<HttpResponse<{}>> {\n+    return this.http.delete(`${this.resourceUrl}/${id}`, { observe: 'response' });\n+  }\n+}"
  },
  {
    "sha": "8f91767d3f88cf7f98e828bfb138a49a6d4ed694",
    "filename": "src/main/webapp/app/entities/categorie/categorie-delete-dialog.component.html",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/categorie/categorie-delete-dialog.component.html",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/categorie/categorie-delete-dialog.component.html",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/categorie/categorie-delete-dialog.component.html?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,24 @@\n+<form *ngIf=\"categorie\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(categorie?.id!)\">\n+    <div class=\"modal-header\">\n+        <h4 class=\"modal-title\" jhiTranslate=\"entity.delete.title\">Confirm delete operation</h4>\n+\n+        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"\n+                (click)=\"cancel()\">&times;</button>\n+    </div>\n+\n+    <div class=\"modal-body\">\n+        <jhi-alert-error></jhi-alert-error>\n+\n+        <p id=\"jhi-delete-categorie-heading\" jhiTranslate=\"commandeCadeauJHipsterApp.categorie.delete.question\" [translateValues]=\"{ id: categorie.id }\">Are you sure you want to delete this Categorie?</p>\n+    </div>\n+\n+    <div class=\"modal-footer\">\n+        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\n+            <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.cancel\">Cancel</span>\n+        </button>\n+\n+        <button id=\"jhi-confirm-delete-categorie\" type=\"submit\" class=\"btn btn-danger\">\n+            <fa-icon icon=\"times\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.delete\">Delete</span>\n+        </button>\n+    </div>\n+</form>"
  },
  {
    "sha": "d4827c7b6d4fb5a96a3dbc38edae1642056246a6",
    "filename": "src/main/webapp/app/entities/categorie/categorie-delete-dialog.component.ts",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/categorie/categorie-delete-dialog.component.ts",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/categorie/categorie-delete-dialog.component.ts",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/categorie/categorie-delete-dialog.component.ts?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,26 @@\n+import { Component } from '@angular/core';\n+import { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n+import { JhiEventManager } from 'ng-jhipster';\n+\n+import { ICategorie } from 'app/shared/model/categorie.model';\n+import { CategorieService } from './categorie.service';\n+\n+@Component({\n+  templateUrl: './categorie-delete-dialog.component.html',\n+})\n+export class CategorieDeleteDialogComponent {\n+  categorie?: ICategorie;\n+\n+  constructor(protected categorieService: CategorieService, public activeModal: NgbActiveModal, protected eventManager: JhiEventManager) {}\n+\n+  cancel(): void {\n+    this.activeModal.dismiss();\n+  }\n+\n+  confirmDelete(id: number): void {\n+    this.categorieService.delete(id).subscribe(() => {\n+      this.eventManager.broadcast('categorieListModification');\n+      this.activeModal.close();\n+    });\n+  }\n+}"
  },
  {
    "sha": "08d8a6274be362e25752abb52b54d0e253a7f5b8",
    "filename": "src/main/webapp/app/entities/categorie/categorie-detail.component.html",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/Fqke/jhipster-commande/blob/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/categorie/categorie-detail.component.html",
    "raw_url": "https://github.com/Fqke/jhipster-commande/raw/c08603a49ff96219bf60c762a10b00b178e8b990/src/main/webapp/app/entities/categorie/categorie-detail.component.html",
    "contents_url": "https://api.github.com/repos/Fqke/jhipster-commande/contents/src/main/webapp/app/entities/categorie/categorie-detail.component.html?ref=c08603a49ff96219bf60c762a10b00b178e8b990",
    "patch": "@@ -0,0 +1,34 @@\n+<div class=\"row justify-content-center\">\n+    <div class=\"col-8\">\n+        <div *ngIf=\"categorie\">\n+            <h2><span jhiTranslate=\"commandeCadeauJHipsterApp.categorie.detail.title\">Categorie</span> {{ categorie.id }}</h2>\n+\n+            <hr>\n+\n+            <jhi-alert-error></jhi-alert-error>\n+\n+            <dl class=\"row-md jh-entity-details\">\n+                <dt><span jhiTranslate=\"commandeCadeauJHipsterApp.categorie.nom\">Nom</span></dt>\n+                <dd>\n+                    <span>{{ categorie.nom }}</span>\n+                </dd>\n+                <dt><span jhiTranslate=\"commandeCadeauJHipsterApp.categorie.prixEnEuros\">Prix En Euros</span></dt>\n+                <dd>\n+                    <span>{{ categorie.prixEnEuros }}</span>\n+                </dd>\n+            </dl>\n+\n+            <button type=\"submit\"\n+                    (click)=\"previousState()\"\n+                    class=\"btn btn-info\">\n+                <fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.back\">Back</span>\n+            </button>\n+\n+            <button type=\"button\"\n+                    [routerLink]=\"['/categorie', categorie.id, 'edit']\"\n+                    class=\"btn btn-primary\">\n+                <fa-icon icon=\"pencil-alt\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.edit\">Edit</span>\n+            </button>\n+        </div>\n+    </div>\n+</div>"
  }
]
