[
  {
    "sha": "f6e2c31c2d51ca0cf9998ef8e234d6f11d685cc6",
    "filename": "src/main/java/org/ivdnt/openconvert/filehandling/PathHandling.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/INL/UtilitiesForTaggerEtc/blob/162d5e380870c41bae2578ad720f3dcf2ebf2c5b/src/main/java/org/ivdnt/openconvert/filehandling/PathHandling.java",
    "raw_url": "https://github.com/INL/UtilitiesForTaggerEtc/raw/162d5e380870c41bae2578ad720f3dcf2ebf2c5b/src/main/java/org/ivdnt/openconvert/filehandling/PathHandling.java",
    "contents_url": "https://api.github.com/repos/INL/UtilitiesForTaggerEtc/contents/src/main/java/org/ivdnt/openconvert/filehandling/PathHandling.java?ref=162d5e380870c41bae2578ad720f3dcf2ebf2c5b",
    "patch": "@@ -25,7 +25,6 @@\n import org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream;\n import org.apache.commons.io.IOUtils;\n \n-\n public class PathHandling\n {\n \tstatic int max = Integer.MAX_VALUE;\n@@ -202,11 +201,12 @@ else if (Files.isRegularFile(inputPath) && (!Files.exists(outputPath)||Files.isR\n \t\t}\n \t}\n \n-\t@SuppressWarnings(\"restriction\") // maybe do something about this?\n+\t//@SuppressWarnings(\"restriction\") // maybe do something about this?\n \tpublic static Path possiblyReopen(Path p)\n \t{\n \t\tFileSystem fs = p.getFileSystem();\n-\t\tif (!(fs.provider() instanceof com.sun.nio.zipfs.ZipFileSystemProvider))\n+\n+\t\tif (!fs.provider().getClass().getSimpleName().equals(\"ZipFileSystemProvider\"))\n \t\t{\n \t\t\treturn p;\n \t\t}"
  }
]
