[
  {
    "sha": "c4d6d35384e27dab55c42defa008217b337aefe4",
    "filename": "TicTacToe.java",
    "status": "modified",
    "additions": 157,
    "deletions": 24,
    "changes": 181,
    "blob_url": "https://github.com/tejas181995/TicTacToe/blob/1085a3a3d0ba87947b0c21f9f29126617b3e769a/TicTacToe.java",
    "raw_url": "https://github.com/tejas181995/TicTacToe/raw/1085a3a3d0ba87947b0c21f9f29126617b3e769a/TicTacToe.java",
    "contents_url": "https://api.github.com/repos/tejas181995/TicTacToe/contents/TicTacToe.java?ref=1085a3a3d0ba87947b0c21f9f29126617b3e769a",
    "patch": "@@ -1,61 +1,194 @@\n import java.util.Scanner;\n \n-\n class TicTacToe {\n     private char playerSymbol, computerSymbol;\n-    public char [] createBoard(){\n-        char [] board = new char[10];\n-        for(int i=0; i<10; i++){\n+    static Scanner sc = new Scanner(System.in);\n+    static TicTacToe tacToe;\n+    static char[] playerOrder = new char[2];\n+    static char[] board;\n+\n+    public char[] createBoard() {\n+        char[] board = new char[10];\n+        for (int i = 0; i < 10; i++) {\n             board[i] = ' ';\n         }\n         return board;\n     }\n-    public char getPlayerSymbol(){\n+\n+    public char getPlayerSymbol() {\n         return playerSymbol;\n     }\n-    public char getComputerSymbol(){\n+\n+    public char getComputerSymbol() {\n         return computerSymbol;\n     }\n-    public boolean chooseSymbol(char symbol){\n-        \n-        if(symbol== 'x'){\n-            playerSymbol =symbol;\n+\n+    public boolean chooseSymbol(char symbol) {\n+\n+        if (symbol == 'x') {\n+            playerSymbol = 'x';\n             computerSymbol = 'o';\n             return true;\n \n-        }else if (symbol== 'o'){\n-            playerSymbol =symbol;\n+        } else if (symbol == 'o') {\n+            playerSymbol = 'o';\n             computerSymbol = 'x';\n             return true;\n \n         }\n         return false;\n \n     }\n-    public void showBoard(char[] board){\n-        for(int i=1; i<10; i++ ){\n-            System.out.print(board[i] + \"| \");\n-            if(i%3 == 0){\n+\n+    public void showBoard(char[] board) {\n+        for (int i = 1; i < 10; i++) {\n+            System.out.print(i + \"  \" + board[i] + \"  | \");\n+            if (i % 3 == 0) {\n                 System.out.println();\n             }\n         }\n \n     }\n-    public static void main(String[] args) {\n-        TicTacToe tacToe = new TicTacToe();\n-        char [] board = tacToe.createBoard();\n-        Scanner sc = new Scanner(System.in);\n+\n+    public static void selectSymbol() {\n         System.out.println(\"Enter Symbol [x / o ]\");\n         char symbol = sc.nextLine().charAt(0);\n-        while(!tacToe.chooseSymbol(symbol)){\n+        while (!tacToe.chooseSymbol(symbol)) {\n             System.out.println(\"invalid Symbol\");\n             System.out.println(\"Enter Symbol [x / o ]\");\n             symbol = sc.nextLine().charAt(0);\n         }\n-        System.out.println(\"player symbol is: \"+  tacToe.getPlayerSymbol());\n-        tacToe.showBoard(board);\n+        System.out.println(\"player symbol is: \" + tacToe.getPlayerSymbol());\n+    }\n \n+    public static int smartChoice() {\n+        boolean hasWon = false;\n+        for (int i = 1; i < 10; i++) {\n+            if (board[i] == ' ') {\n+                board[i] = tacToe.getComputerSymbol();\n+                hasWon = isGameOver();\n+                board[i] = ' ';\n+                if (hasWon)\n+                    return i;\n+            }\n+        }\n+        for (int i = 1; i < 10; i++) {\n+            if (board[i] == ' ') {\n+                board[i] = tacToe.getPlayerSymbol();\n+                hasWon = isGameOver();\n+                board[i] = ' ';\n+                if (hasWon)\n+                    return i;\n+            }\n+        }\n+        int choices[] = new int[] { 1, 3, 7, 9, 5, 2, 4, 6, 8 };\n+        for (int i : choices) {\n+            if (board[i] == ' ')\n+                return i;\n+        }\n+        return 8;\n+    }\n \n+    public static void playGame(char symbol) {\n+        int index;\n+        if (symbol == tacToe.getComputerSymbol()) {\n+            index = smartChoice();\n+            board[index] = tacToe.getComputerSymbol();\n+        } else {\n+            System.out.println(\"Enter Position to place your mark\");\n+            index = sc.nextInt();\n+            while (board[index] != ' ') {\n+                System.out.println(\"position is already occupied\");\n+                System.out.println(\"Enter Position to place your mark\");\n+                index = sc.nextInt();\n+            }\n+            board[index] = tacToe.getPlayerSymbol();\n+        }\n     }\n-}\n \n+    public static void toss() {\n+        int turn = (int) (Math.floor(Math.random() * 10) % 2);\n+        if (turn == 1) {\n+            System.out.println(\"Player plays First..!\");\n+            playerOrder[0] = tacToe.getPlayerSymbol();\n+            playerOrder[1] = tacToe.getComputerSymbol();\n+        } else {\n+            System.out.println(\"Computer plays First..!\");\n+            playerOrder[1] = tacToe.getPlayerSymbol();\n+            playerOrder[0] = tacToe.getComputerSymbol();\n+        }\n+\n+    }\n+\n+    public static boolean isGameOver() {\n+        for (int i = 0; i < 3; i++) {\n+            if (board[0 * 3 + i + 1] == board[1 * 3 + i + 1] && board[0 * 3 + i + 1] == board[2 * 3 + i + 1]\n+                    && board[1 * 3 + i + 1] != ' ')\n+                return true;\n+            if (board[i * 3 + 0 + 1] == board[i * 3 + 1 + 1] && board[i * 3 + 1 + 1] == board[i * 3 + 2 + 1]\n+                    && board[i * 3 + 0 + 1] != ' ')\n+                return true;\n+        }\n+        if (board[3] == board[5] && board[3] == board[7] && board[3] != ' ')\n+            return true;\n+        if (board[1] == board[5] && board[1] == board[9] && board[1] != ' ')\n+            return true;\n+        return false;\n+\n+    }\n+\n+    public static void greetWinner(char symbol) {\n+        if (symbol == tacToe.getComputerSymbol()) {\n+            System.out.println(\"Computer Won..!!\");\n+        } else\n+            System.out.println(\"player Won..!!\");\n+    }\n+\n+    public static void main(String[] args) {\n+        int playAgain = 1;\n+        boolean isOver = false;\n+        tacToe = new TicTacToe();\n+        while (playAgain == 1) {\n+            board = tacToe.createBoard();\n+            selectSymbol();\n+            tacToe.showBoard(board);\n+            System.out.println(tacToe.getPlayerSymbol() + \" \" + \" \" + tacToe.getComputerSymbol());\n+            toss();\n+            for (int i = 0; i < 4; i++) {\n+                playGame(playerOrder[0]);\n+                tacToe.showBoard(board);\n+                isOver = isGameOver();\n+                if (isOver) {\n+                    System.out.println(\"Game Over..!!\");\n+                    greetWinner(playerOrder[0]);\n+                    break;\n+                }\n+                System.out.println(\"--------------------------------------------------\");\n+                playGame(playerOrder[1]);\n+                tacToe.showBoard(board);\n+                isOver = isGameOver();\n+                if (isOver) {\n+                    System.out.println(\"Game Over..!!\");\n+                    greetWinner(playerOrder[1]);\n+                    break;\n+                }\n+                System.out.println(\"--------------------------------------------------\");\n+            }\n+            if (!isOver) {\n+                playGame(playerOrder[0]);\n+                tacToe.showBoard(board);\n+                isOver = isGameOver();\n+                if (isOver) {\n+                    System.out.println(\"Game Over..!!\");\n+                    greetWinner(playerOrder[0]);\n+                } else {\n+                    System.out.println(\"It is Draw...!!\");\n+                }\n+            }\n+            System.out.println(\"Would you like to play again....!!! [1/0]\");\n+            playAgain = sc.nextInt();\n+            sc.nextLine();\n+        }\n+\n+    }\n+}"
  }
]
