[
  {
    "sha": "353f326dce441bc684134cf6c158fd8e23c26a87",
    "filename": "src/homework1/HelloWorld.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework1/HelloWorld.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework1/HelloWorld.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework1/HelloWorld.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -1,4 +1,4 @@\n-package HomeWork1;\n+package homework1;\n \n public class HelloWorld {\n ",
    "previous_filename": "src/HomeWork1/HelloWorld.java"
  },
  {
    "sha": "7730db81562cf6858c1193f6eeb537164b64154a",
    "filename": "src/homework1/Task2.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework1/Task2.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework1/Task2.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework1/Task2.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -1,4 +1,4 @@\n-package HomeWork1;\n+package homework1;\n \n public class Task2 {\n     public static void main(String[] args) {",
    "previous_filename": "src/HomeWork1/Task2.java"
  },
  {
    "sha": "5bec11a9e89bddb19fabe9faf2751d247af5fdcc",
    "filename": "src/homework1/Task3.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework1/Task3.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework1/Task3.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework1/Task3.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -1,4 +1,4 @@\n-package HomeWork1;\n+package homework1;\n /*\n Имеется 4500 секунд. Вывести в консоль содержащихся в этом количестве секунд:\n  А) минут + секунд,",
    "previous_filename": "src/HomeWork1/Task3.java"
  },
  {
    "sha": "4c1e9fb73b8eed1b6b10d350ce15c78bf08f1e49",
    "filename": "src/homework1/Task4.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework1/Task4.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework1/Task4.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework1/Task4.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -1,4 +1,4 @@\n-package HomeWork1;\n+package homework1;\n \n /*\n Определить число, полученное выписыванием в обратном порядке цифр любого 4-х значного натурального числа n.",
    "previous_filename": "src/HomeWork1/Task4.java"
  },
  {
    "sha": "0e7ea6bd53184e2f0f30271b13c6046ba57820dc",
    "filename": "src/homework1/Task5.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework1/Task5.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework1/Task5.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework1/Task5.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -1,4 +1,4 @@\n-package HomeWork1;\n+package homework1;\n /*\n Дано любое натуральное 4-х значное число. Верно ли, что все цифры числа различны?\n  */",
    "previous_filename": "src/HomeWork1/Task5.java"
  },
  {
    "sha": "65a30cef7fa437298104c55e09b14e78c85add1f",
    "filename": "src/homework2/Task10.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task10.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task10.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task10.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,19 @@\n+package homework2;\n+\n+/*\n+10) Посчитать факториал числа в границах от 10 до 15 (не используя рекурсию).\n+ */\n+public class Task10 {\n+\n+    public static void main(String[] args) {\n+\n+        int minValue = 10;\n+        int maxvalue = 15;\n+        int random = (int) ((Math.random() * ((maxvalue - minValue) + 1)) + minValue);\n+        int factorial = 1;\n+        for (int i = 1; i <= random; i++) {\n+            factorial *= i;\n+        }\n+        System.out.println(\"Факториал числа \" + random + \"! = \" + factorial);\n+    }\n+}"
  },
  {
    "sha": "20054100325e716ab7d4bdf29596e6eb893cf6d1",
    "filename": "src/homework2/Task11.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task11.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task11.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task11.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,29 @@\n+package homework2;\n+\n+/*\n+ 11) Имеется целое число, определить является ли это число простым, т.е.\n+ делится без остатка только на 1 и себя.\n+ */\n+public class Task11 {\n+\n+    public static void main(String[] args) {\n+\n+        int number = (int) (Math.random() * 200);\n+        boolean isComposite = false;\n+        if (number <= 1) {\n+            System.out.println(\"Число \" + number + \" не является простым\");\n+        } else {\n+            for (int i = 2; i < number; i++) {\n+                if (number % i == 0) {\n+                    isComposite = true;\n+                    break;\n+                }\n+            }\n+            if (isComposite) {\n+                System.out.println(\"Число \" + number + \" не является простым\");\n+            } else {\n+                System.out.println(\"Число \" + number + \" является простым\");\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "afb014bc74a045b23645837a14089e7f4275e5df",
    "filename": "src/homework2/Task12.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task12.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task12.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task12.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,20 @@\n+package homework2;\n+\n+/*\n+ 12) Найдите сумму первых n целых чисел, которые делятся на 3.\n+ */\n+public class Task12 {\n+\n+    public static void main(String[] args) {\n+\n+        int number = (int) (Math.random() * 100);\n+        System.out.println(number);\n+        int summ = 0;\n+        for (int i = 1; i <= number; i++) {\n+            if (i % 3 == 0) {\n+                summ += i;\n+            }\n+        }\n+        System.out.println(\"Сумма чисел = \" + summ);\n+    }\n+}"
  },
  {
    "sha": "15379ba0b3ca9404a4fa0037dd82c468f25ca59f",
    "filename": "src/homework2/Task13.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task13.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task13.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task13.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,19 @@\n+package homework2;\n+\n+/*\n+ 13) Создать последовательность случайных чисел, найти и вывести наибольшее из них.\n+ */\n+public class Task13 {\n+\n+    public static void main(String[] args) {\n+\n+        int array[] = {42, 0, 8, 7, 24, 47, 35};\n+        int maxValue = array[0];\n+        for (int i = 0; i < array.length; i++) {\n+            if (array[i] >= maxValue) {\n+                maxValue = array[i];\n+            }\n+        }\n+        System.out.println(\"Максимальное число: \" + maxValue);\n+    }\n+}"
  },
  {
    "sha": "c0d98a2a5c90131bc5f046bfccf2325442bedb21",
    "filename": "src/homework2/Task14.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task14.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task14.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task14.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,37 @@\n+package homework2;\n+\n+/*\n+ 14) Создать массив оценок произвольной длины, вывести максимальную и минимальную оценку, её (их) номера.\n+ */\n+public class Task14 {\n+\n+    public static void main(String[] args) {\n+\n+        int size = (int) (Math.random() * 20);\n+        System.out.println(\"Длина массива: \" + size);\n+        int array[] = new int[size];\n+        for (int i = 0; i < array.length; i++) {\n+            array[i] = (int) (Math.random() * 200);\n+        }\n+        for (int j : array) {\n+            System.out.print(j + \" \");\n+        }\n+        System.out.println();\n+        int maxValue = array[0];\n+        int minValue = array[0];\n+        int indexMax = 0;\n+        int indexMin = 0;\n+        for (int i = 0; i < array.length; i++) {\n+            if (array[i] >= maxValue) {\n+                maxValue = array[i];\n+                indexMax = i;\n+            }\n+            if (array[i] <= minValue) {\n+                minValue = array[i];\n+                indexMin = i;\n+            }\n+        }\n+        System.out.println(\"Максисальное число: \" + maxValue + \" и его индекс \" + indexMax);\n+        System.out.println(\"Минимальное число: \" + minValue + \" и его индекс \" + indexMin);\n+    }\n+}"
  },
  {
    "sha": "a99e66a074032fd1e42c47ea7611b062f64e9756",
    "filename": "src/homework2/Task15.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task15.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task15.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task15.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,23 @@\n+package homework2;\n+\n+/*\n+ 15) Создать массив, заполнить его случайными элементами, распечатать, перевернуть,\n+ и снова распечатать (при переворачивании нежелательно создавать еще один массив)\n+ */\n+public class Task15 {\n+\n+    public static void main(String[] args) {\n+        int size = (int) (Math.random() * 10);\n+        int array[] = new int[size];\n+        for (int i = 0; i < array.length; i++) {\n+            array[i] = (int) (Math.random() * 50);\n+        }\n+        for (int j : array) {\n+            System.out.print(j + \" \");\n+        }\n+        System.out.println();\n+        for (int i = (array.length - 1); i >= 0; i--) {\n+            System.out.print(array[i] + \" \");\n+        }\n+    }\n+}"
  },
  {
    "sha": "18b3598ad9a9bffc3aa2818180dd521bb27fec3f",
    "filename": "src/homework2/Task16.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task16.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task16.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task16.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,49 @@\n+package homework2;\n+\n+/*\n+ 16) * Определите сумму элементов одномерного массива, расположенных между\n+ минимальным и максимальным значениями.\n+ */\n+public class Task16 {\n+\n+    public static void main(String[] args) {\n+\n+        int array[] = new int[(int) (Math.random() * 10 + 1)];\n+        for (int i = 0; i < array.length; i++) {\n+            array[i] = (int) (Math.random() * 50);\n+        }\n+        for (int j : array) {\n+            System.out.print(j + \" \");\n+        }\n+        System.out.println();\n+        int maxValue = array[0];\n+        int minValue = array[0];\n+        int indexMax = 0;\n+        int indexMin = 0;\n+        for (int i = 0; i < array.length; i++) {\n+            if (array[i] >= maxValue) {\n+                maxValue = array[i];\n+                indexMax = i;\n+            }\n+            if (array[i] <= minValue) {\n+                minValue = array[i];\n+                indexMin = i;\n+            }\n+        }\n+        System.out.println(\"Максисальное число: \" + maxValue + \" и его индекс \" + indexMax);\n+        System.out.println(\"Минимальное число: \" + minValue + \" и его индекс \" + indexMin);\n+        int summa = 0;\n+        if (indexMax == indexMin) {\n+            summa = 0;\n+        } else if (indexMax > indexMin) {\n+            for (int i = indexMin + 1; i < indexMax; i++) {\n+                summa += array[i];\n+            }\n+        } else {\n+            for (int i = indexMax + 1; i < indexMin; i++) {\n+                summa += array[i];\n+            }\n+        }\n+        System.out.println(\"Сумма элементов между max и min значениями = \" + summa);\n+    }\n+}"
  },
  {
    "sha": "32a0b9b2f23396d95d1d39347988368c433140e2",
    "filename": "src/homework2/Task17.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task17.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task17.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task17.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,41 @@\n+package homework2;\n+\n+/*\n+ 17) Создать двухмерный квадратный массив, и заполнить его «бабочкой», т.е таким образом:\n+     1 1 1 1 1\n+     0 1 1 1 0\n+     0 0 1 0 0\n+     0 1 1 1 0\n+     1 1 1 1 1\n+ */\n+public class Task17 {\n+\n+    public static void main(String[] args) {\n+\n+        int array[][] = new int[5][5];\n+        for (int i = 0; i < array.length / 2 + 1; i++) {\n+            for (int j = 0; j < array[i].length; j++) {\n+                if ((j < i) || (j >= array[i].length - i)) {\n+                    array[i][j] = 0;\n+                } else {\n+                    array[i][j] = 1;\n+                }\n+            }\n+        }\n+        for (int i = array.length - 1; i >= array.length / 2; i--) {\n+            for (int j = 0; j < array[i].length; j++) {\n+                if ((j < (array[i].length) - 1 - i) || (j > i)) {\n+                    array[i][j] = 0;\n+                } else {\n+                    array[i][j] = 1;\n+                }\n+            }\n+        }\n+        for (int i = 0; i < array.length; i++) {\n+            for (int j = 0; j < array[i].length; j++) {\n+                System.out.print(array[i][j] + \" \");\n+            }\n+            System.out.println();\n+        }\n+    }\n+}"
  },
  {
    "sha": "cf6fe9948a07af05550bb62a8d6c23dc17922d2b",
    "filename": "src/homework2/Task6.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task6.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task6.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task6.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,32 @@\n+package homework2;\n+/*\n+Создайте число. Определите, является ли число трехзначным. Определите, является\n+ли его последняя цифра семеркой. Определите, является ли число четным.\n+ */\n+\n+import java.util.Scanner;\n+\n+public class Task6 {\n+\n+    public static void main(String[] args) {\n+\n+        Scanner in = new Scanner(System.in);\n+        System.out.println(\"Введите целое число:\");\n+        int number = in.nextInt();\n+        if (number <= 999 && number >= 100) {\n+            System.out.println(\"Вы ввели трёхзначное число\");\n+        } else {\n+            System.out.println(\"Вы ввели не трёхзначное число\");\n+        }\n+        if (number % 10 == 7) {\n+            System.out.println(\"Число оканчивается на цифру 7\");\n+        } else {\n+            System.out.println(\"Число не оканчивается на цифру 7\");\n+        }\n+        if (number % 2 == 0) {\n+            System.out.println(\"Вы ввели чётное число\");\n+        } else {\n+            System.out.println(\"Вы ввели нечётное число\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "f0b1752d311ceba4c933ef96f050b80274b7cfa5",
    "filename": "src/homework2/Task7.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task7.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task7.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task7.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,23 @@\n+package homework2;\n+\n+/*\n+7) Имеется прямоугольное отверстие размерами a и b, определить, можно ли\n+  его полностью закрыть круглой картонкой радиусом r.\n+ */\n+\n+public class Task7 {\n+\n+    public static void main(String[] args) {\n+\n+        double radius = 2.5;\n+        double sideA = 3.0;\n+        double sideB = 4.0;\n+        double diagonal = Math.sqrt(Math.pow(sideA, 2) + Math.pow(sideB, 2));\n+\n+        if (radius >= diagonal / 2) {\n+            System.out.println(\"Круг полностью закрывает прямоугольное отверстие\");\n+        } else {\n+            System.out.println(\"Круг не закрывает полностью прямоугольное отверстие\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "afc99f04a8337b590028dd6f942dc2119412f5b9",
    "filename": "src/homework2/Task8.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task8.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task8.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task8.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,27 @@\n+package homework2;\n+\n+import java.util.Random;\n+\n+/*\n+8) Имеется цело число (задать с помощью Random rand = new Random();int x =rand.nextInt()  ).\n+Это число – количесво денег в рублях. Вывести это число, добавив к нему слово «рублей» в правильном падеже.\n+ */\n+public class Task8 {\n+\n+    public static void main(String[] args) {\n+\n+        Random random = new Random();\n+        int rubles = random.nextInt(999);\n+\n+        if (rubles / 10 % 10 == 1) {\n+            System.out.println(rubles + \" рублей\");\n+        } else if (rubles % 10 == 1) {\n+            System.out.println(rubles + \" рубль\");\n+        } else if (rubles % 10 == 2 || rubles % 10 == 3 || rubles % 10 == 4) {\n+            System.out.println(rubles + \" рубля\");\n+        } else {\n+            System.out.println(rubles + \" рублей\");\n+        }\n+    }\n+}\n+"
  },
  {
    "sha": "662d26f0a70e06731d46a563471ab6f3be836e25",
    "filename": "src/homework2/Task9.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/EugenePoloshovets/FreeIT/blob/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task9.java",
    "raw_url": "https://github.com/EugenePoloshovets/FreeIT/raw/2ab90fdbecaa790588f616d3b3935ca756e61447/src/homework2/Task9.java",
    "contents_url": "https://api.github.com/repos/EugenePoloshovets/FreeIT/contents/src/homework2/Task9.java?ref=2ab90fdbecaa790588f616d3b3935ca756e61447",
    "patch": "@@ -0,0 +1,26 @@\n+package homework2;\n+\n+/*\n+9) Изменить пример с суммой чисел таким образом, чтобы рассчитывалась не сумма, а\n+произведение, т.е. факториал числа.\n+ */\n+public class Task9 {\n+\n+    public static void main(String[] args) {\n+\n+        double averageFactorial = 1;  // - изменил с 0 на 1\n+        // double sum = 0; - строка была в примере\n+        int n = 1;                    // - изменил с 0 на 1\n+        int x = (int) (Math.random() * 20);\n+        if (x == 0) {\n+            averageFactorial = 1;\n+        } else {\n+            while (n <= x) {              // - изменил условие\n+                averageFactorial *= n;\n+                n++;\n+                // x = (int) (Math.random() * 20); - строка была в примере\n+            }\n+        }\n+        System.out.println(\"Факториал числа \" + x + \" = \" + (int) averageFactorial);\n+    }\n+}"
  }
]
