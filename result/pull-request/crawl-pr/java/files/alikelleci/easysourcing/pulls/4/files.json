[
  {
    "sha": "529992b21f4f1846a53700e6f6ffbdfdfee32a14",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/alikelleci/easysourcing/blob/a12098a5cb1d855550157893c37fc2f3c8bd185b/pom.xml",
    "raw_url": "https://github.com/alikelleci/easysourcing/raw/a12098a5cb1d855550157893c37fc2f3c8bd185b/pom.xml",
    "contents_url": "https://api.github.com/repos/alikelleci/easysourcing/contents/pom.xml?ref=a12098a5cb1d855550157893c37fc2f3c8bd185b",
    "patch": "@@ -5,7 +5,7 @@\n     <modelVersion>4.0.0</modelVersion>\n     <groupId>com.github.alikelleci</groupId>\n     <artifactId>easysourcing</artifactId>\n-    <version>1.0.9</version>\n+    <version>1.0.10</version>\n     <name>easysourcing</name>\n     <description>A Java library for Event Sourcing using Kafka</description>\n "
  },
  {
    "sha": "e40eb495e9ff6c40015752253b4913b1addc6b0e",
    "filename": "src/main/java/com/github/easysourcing/Config.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/alikelleci/easysourcing/blob/a12098a5cb1d855550157893c37fc2f3c8bd185b/src/main/java/com/github/easysourcing/Config.java",
    "raw_url": "https://github.com/alikelleci/easysourcing/raw/a12098a5cb1d855550157893c37fc2f3c8bd185b/src/main/java/com/github/easysourcing/Config.java",
    "contents_url": "https://api.github.com/repos/alikelleci/easysourcing/contents/src/main/java/com/github/easysourcing/Config.java?ref=a12098a5cb1d855550157893c37fc2f3c8bd185b",
    "patch": "@@ -23,6 +23,8 @@\n   private String bootstrapServers;\n   private String applicationId;\n   @Builder.Default\n+  private String producerCompressionType = \"none\";\n+  @Builder.Default\n   private int replicas = 1;\n   @Builder.Default\n   private int partitions = 1;\n@@ -53,6 +55,7 @@ public Properties streamsConfig() {\n     properties.put(StreamsConfig.TOPOLOGY_OPTIMIZATION, StreamsConfig.OPTIMIZE);\n     properties.put(StreamsConfig.REPLICATION_FACTOR_CONFIG, replicas);\n     properties.put(StreamsConfig.DEFAULT_DESERIALIZATION_EXCEPTION_HANDLER_CLASS_CONFIG, LogAndContinueExceptionHandler.class);\n+    properties.put(ProducerConfig.COMPRESSION_TYPE_CONFIG, producerCompressionType);\n     properties.put(CommonClientConfigs.SECURITY_PROTOCOL_CONFIG, securityProtocol);\n \n     return properties;\n@@ -61,6 +64,7 @@ public Properties streamsConfig() {\n   public Properties producerConfigs() {\n     Properties properties = new Properties();\n     properties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n+    properties.put(ProducerConfig.COMPRESSION_TYPE_CONFIG, producerCompressionType);\n     properties.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);\n     properties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, JsonSerializer.class);\n     properties.put(ProducerConfig.ACKS_CONFIG, \"all\");"
  }
]
