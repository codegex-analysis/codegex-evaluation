[
  {
    "sha": "549e00a2a96fa9d7c5dbc9859664a78d980158c2",
    "filename": "bin/.gitignore",
    "status": "removed",
    "additions": 0,
    "deletions": 33,
    "changes": 33,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/.gitignore",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/.gitignore",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/.gitignore?ref=46c659626213d32e68129ce8154dc1e6c860d27b",
    "patch": "@@ -1,33 +0,0 @@\n-HELP.md\n-target/\n-!.mvn/wrapper/maven-wrapper.jar\n-!**/src/main/**/target/\n-!**/src/test/**/target/\n-\n-### STS ###\n-.apt_generated\n-.classpath\n-.factorypath\n-.project\n-.settings\n-.springBeans\n-.sts4-cache\n-\n-### IntelliJ IDEA ###\n-.idea\n-*.iws\n-*.iml\n-*.ipr\n-\n-### NetBeans ###\n-/nbproject/private/\n-/nbbuild/\n-/dist/\n-/nbdist/\n-/.nb-gradle/\n-build/\n-!**/src/main/**/build/\n-!**/src/test/**/build/\n-\n-### VS Code ###\n-.vscode/"
  },
  {
    "sha": "63f75975d14d952546c3a07425b7c3faf1d23c23",
    "filename": "bin/.mvn/wrapper/MavenWrapperDownloader.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/.mvn/wrapper/MavenWrapperDownloader.class",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/.mvn/wrapper/MavenWrapperDownloader.class",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/.mvn/wrapper/MavenWrapperDownloader.class?ref=46c659626213d32e68129ce8154dc1e6c860d27b"
  },
  {
    "sha": "2cc7d4a55c0cd0092912bf49ae38b3a9e3fd0054",
    "filename": "bin/.mvn/wrapper/maven-wrapper.jar",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/.mvn/wrapper/maven-wrapper.jar",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/.mvn/wrapper/maven-wrapper.jar",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/.mvn/wrapper/maven-wrapper.jar?ref=46c659626213d32e68129ce8154dc1e6c860d27b"
  },
  {
    "sha": "642d572ce90e5085986bdd9c9204b9404f028084",
    "filename": "bin/.mvn/wrapper/maven-wrapper.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/.mvn/wrapper/maven-wrapper.properties",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/.mvn/wrapper/maven-wrapper.properties",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/.mvn/wrapper/maven-wrapper.properties?ref=46c659626213d32e68129ce8154dc1e6c860d27b",
    "patch": "@@ -1,2 +0,0 @@\n-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip\n-wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
  },
  {
    "sha": "c0fb9e8a7161d3813a6036dcb8084114ebcdc233",
    "filename": "bin/README.md",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/README.md",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/README.md",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/README.md?ref=46c659626213d32e68129ce8154dc1e6c860d27b",
    "patch": "@@ -1 +0,0 @@\n-# chatting"
  },
  {
    "sha": "a16b5431b4c3cab50323a3f558003fd0abd87dad",
    "filename": "bin/mvnw",
    "status": "removed",
    "additions": 0,
    "deletions": 310,
    "changes": 310,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/mvnw",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/mvnw",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/mvnw?ref=46c659626213d32e68129ce8154dc1e6c860d27b",
    "patch": "@@ -1,310 +0,0 @@\n-#!/bin/sh\n-# ----------------------------------------------------------------------------\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#    https://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-# ----------------------------------------------------------------------------\n-\n-# ----------------------------------------------------------------------------\n-# Maven Start Up Batch script\n-#\n-# Required ENV vars:\n-# ------------------\n-#   JAVA_HOME - location of a JDK home dir\n-#\n-# Optional ENV vars\n-# -----------------\n-#   M2_HOME - location of maven2's installed home dir\n-#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n-#     e.g. to debug Maven itself, use\n-#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n-#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n-# ----------------------------------------------------------------------------\n-\n-if [ -z \"$MAVEN_SKIP_RC\" ] ; then\n-\n-  if [ -f /etc/mavenrc ] ; then\n-    . /etc/mavenrc\n-  fi\n-\n-  if [ -f \"$HOME/.mavenrc\" ] ; then\n-    . \"$HOME/.mavenrc\"\n-  fi\n-\n-fi\n-\n-# OS specific support.  $var _must_ be set to either true or false.\n-cygwin=false;\n-darwin=false;\n-mingw=false\n-case \"`uname`\" in\n-  CYGWIN*) cygwin=true ;;\n-  MINGW*) mingw=true;;\n-  Darwin*) darwin=true\n-    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n-    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n-    if [ -z \"$JAVA_HOME\" ]; then\n-      if [ -x \"/usr/libexec/java_home\" ]; then\n-        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n-      else\n-        export JAVA_HOME=\"/Library/Java/Home\"\n-      fi\n-    fi\n-    ;;\n-esac\n-\n-if [ -z \"$JAVA_HOME\" ] ; then\n-  if [ -r /etc/gentoo-release ] ; then\n-    JAVA_HOME=`java-config --jre-home`\n-  fi\n-fi\n-\n-if [ -z \"$M2_HOME\" ] ; then\n-  ## resolve links - $0 may be a link to maven's home\n-  PRG=\"$0\"\n-\n-  # need this for relative symlinks\n-  while [ -h \"$PRG\" ] ; do\n-    ls=`ls -ld \"$PRG\"`\n-    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n-    if expr \"$link\" : '/.*' > /dev/null; then\n-      PRG=\"$link\"\n-    else\n-      PRG=\"`dirname \"$PRG\"`/$link\"\n-    fi\n-  done\n-\n-  saveddir=`pwd`\n-\n-  M2_HOME=`dirname \"$PRG\"`/..\n-\n-  # make it fully qualified\n-  M2_HOME=`cd \"$M2_HOME\" && pwd`\n-\n-  cd \"$saveddir\"\n-  # echo Using m2 at $M2_HOME\n-fi\n-\n-# For Cygwin, ensure paths are in UNIX format before anything is touched\n-if $cygwin ; then\n-  [ -n \"$M2_HOME\" ] &&\n-    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n-  [ -n \"$JAVA_HOME\" ] &&\n-    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n-  [ -n \"$CLASSPATH\" ] &&\n-    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\n-fi\n-\n-# For Mingw, ensure paths are in UNIX format before anything is touched\n-if $mingw ; then\n-  [ -n \"$M2_HOME\" ] &&\n-    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n-  [ -n \"$JAVA_HOME\" ] &&\n-    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n-fi\n-\n-if [ -z \"$JAVA_HOME\" ]; then\n-  javaExecutable=\"`which javac`\"\n-  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n-    # readlink(1) is not available as standard on Solaris 10.\n-    readLink=`which readlink`\n-    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n-      if $darwin ; then\n-        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n-        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n-      else\n-        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n-      fi\n-      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n-      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n-      JAVA_HOME=\"$javaHome\"\n-      export JAVA_HOME\n-    fi\n-  fi\n-fi\n-\n-if [ -z \"$JAVACMD\" ] ; then\n-  if [ -n \"$JAVA_HOME\"  ] ; then\n-    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n-      # IBM's JDK on AIX uses strange locations for the executables\n-      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n-    else\n-      JAVACMD=\"$JAVA_HOME/bin/java\"\n-    fi\n-  else\n-    JAVACMD=\"`which java`\"\n-  fi\n-fi\n-\n-if [ ! -x \"$JAVACMD\" ] ; then\n-  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n-  echo \"  We cannot execute $JAVACMD\" >&2\n-  exit 1\n-fi\n-\n-if [ -z \"$JAVA_HOME\" ] ; then\n-  echo \"Warning: JAVA_HOME environment variable is not set.\"\n-fi\n-\n-CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n-\n-# traverses directory structure from process work directory to filesystem root\n-# first directory with .mvn subdirectory is considered project base directory\n-find_maven_basedir() {\n-\n-  if [ -z \"$1\" ]\n-  then\n-    echo \"Path not specified to find_maven_basedir\"\n-    return 1\n-  fi\n-\n-  basedir=\"$1\"\n-  wdir=\"$1\"\n-  while [ \"$wdir\" != '/' ] ; do\n-    if [ -d \"$wdir\"/.mvn ] ; then\n-      basedir=$wdir\n-      break\n-    fi\n-    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n-    if [ -d \"${wdir}\" ]; then\n-      wdir=`cd \"$wdir/..\"; pwd`\n-    fi\n-    # end of workaround\n-  done\n-  echo \"${basedir}\"\n-}\n-\n-# concatenates all lines of a file\n-concat_lines() {\n-  if [ -f \"$1\" ]; then\n-    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n-  fi\n-}\n-\n-BASE_DIR=`find_maven_basedir \"$(pwd)\"`\n-if [ -z \"$BASE_DIR\" ]; then\n-  exit 1;\n-fi\n-\n-##########################################################################################\n-# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n-# This allows using the maven wrapper in projects that prohibit checking in binary data.\n-##########################################################################################\n-if [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n-    if [ \"$MVNW_VERBOSE\" = true ]; then\n-      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n-    fi\n-else\n-    if [ \"$MVNW_VERBOSE\" = true ]; then\n-      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n-    fi\n-    if [ -n \"$MVNW_REPOURL\" ]; then\n-      jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n-    else\n-      jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n-    fi\n-    while IFS=\"=\" read key value; do\n-      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n-      esac\n-    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n-    if [ \"$MVNW_VERBOSE\" = true ]; then\n-      echo \"Downloading from: $jarUrl\"\n-    fi\n-    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n-    if $cygwin; then\n-      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n-    fi\n-\n-    if command -v wget > /dev/null; then\n-        if [ \"$MVNW_VERBOSE\" = true ]; then\n-          echo \"Found wget ... using wget\"\n-        fi\n-        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n-            wget \"$jarUrl\" -O \"$wrapperJarPath\"\n-        else\n-            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n-        fi\n-    elif command -v curl > /dev/null; then\n-        if [ \"$MVNW_VERBOSE\" = true ]; then\n-          echo \"Found curl ... using curl\"\n-        fi\n-        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n-            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n-        else\n-            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n-        fi\n-\n-    else\n-        if [ \"$MVNW_VERBOSE\" = true ]; then\n-          echo \"Falling back to using Java to download\"\n-        fi\n-        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n-        # For Cygwin, switch paths to Windows format before running javac\n-        if $cygwin; then\n-          javaClass=`cygpath --path --windows \"$javaClass\"`\n-        fi\n-        if [ -e \"$javaClass\" ]; then\n-            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n-                if [ \"$MVNW_VERBOSE\" = true ]; then\n-                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n-                fi\n-                # Compiling the Java class\n-                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n-            fi\n-            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n-                # Running the downloader\n-                if [ \"$MVNW_VERBOSE\" = true ]; then\n-                  echo \" - Running MavenWrapperDownloader.java ...\"\n-                fi\n-                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n-            fi\n-        fi\n-    fi\n-fi\n-##########################################################################################\n-# End of extension\n-##########################################################################################\n-\n-export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\n-if [ \"$MVNW_VERBOSE\" = true ]; then\n-  echo $MAVEN_PROJECTBASEDIR\n-fi\n-MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n-\n-# For Cygwin, switch paths to Windows format before running java\n-if $cygwin; then\n-  [ -n \"$M2_HOME\" ] &&\n-    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n-  [ -n \"$JAVA_HOME\" ] &&\n-    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n-  [ -n \"$CLASSPATH\" ] &&\n-    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n-  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n-    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\n-fi\n-\n-# Provide a \"standardized\" way to retrieve the CLI args that will\n-# work with both Windows and non-Windows executions.\n-MAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\n-export MAVEN_CMD_LINE_ARGS\n-\n-WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n-\n-exec \"$JAVACMD\" \\\n-  $MAVEN_OPTS \\\n-  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n-  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n-  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\""
  },
  {
    "sha": "c8d43372c986d97911cdc21bd87e0cbe3d83bdda",
    "filename": "bin/mvnw.cmd",
    "status": "removed",
    "additions": 0,
    "deletions": 182,
    "changes": 182,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/mvnw.cmd",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/mvnw.cmd",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/mvnw.cmd?ref=46c659626213d32e68129ce8154dc1e6c860d27b",
    "patch": "@@ -1,182 +0,0 @@\n-@REM ----------------------------------------------------------------------------\n-@REM Licensed to the Apache Software Foundation (ASF) under one\n-@REM or more contributor license agreements.  See the NOTICE file\n-@REM distributed with this work for additional information\n-@REM regarding copyright ownership.  The ASF licenses this file\n-@REM to you under the Apache License, Version 2.0 (the\n-@REM \"License\"); you may not use this file except in compliance\n-@REM with the License.  You may obtain a copy of the License at\n-@REM\n-@REM    https://www.apache.org/licenses/LICENSE-2.0\n-@REM\n-@REM Unless required by applicable law or agreed to in writing,\n-@REM software distributed under the License is distributed on an\n-@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-@REM KIND, either express or implied.  See the License for the\n-@REM specific language governing permissions and limitations\n-@REM under the License.\n-@REM ----------------------------------------------------------------------------\n-\n-@REM ----------------------------------------------------------------------------\n-@REM Maven Start Up Batch script\n-@REM\n-@REM Required ENV vars:\n-@REM JAVA_HOME - location of a JDK home dir\n-@REM\n-@REM Optional ENV vars\n-@REM M2_HOME - location of maven2's installed home dir\n-@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n-@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n-@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n-@REM     e.g. to debug Maven itself, use\n-@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n-@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n-@REM ----------------------------------------------------------------------------\n-\n-@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n-@echo off\n-@REM set title of command window\n-title %0\n-@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n-@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n-\n-@REM set %HOME% to equivalent of $HOME\n-if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n-\n-@REM Execute a user defined script before this one\n-if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n-@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n-if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\n-if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n-:skipRcPre\n-\n-@setlocal\n-\n-set ERROR_CODE=0\n-\n-@REM To isolate internal variables from possible post scripts, we use another setlocal\n-@setlocal\n-\n-@REM ==== START VALIDATION ====\n-if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n-\n-echo.\n-echo Error: JAVA_HOME not found in your environment. >&2\n-echo Please set the JAVA_HOME variable in your environment to match the >&2\n-echo location of your Java installation. >&2\n-echo.\n-goto error\n-\n-:OkJHome\n-if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n-\n-echo.\n-echo Error: JAVA_HOME is set to an invalid directory. >&2\n-echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n-echo Please set the JAVA_HOME variable in your environment to match the >&2\n-echo location of your Java installation. >&2\n-echo.\n-goto error\n-\n-@REM ==== END VALIDATION ====\n-\n-:init\n-\n-@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n-@REM Fallback to current working directory if not found.\n-\n-set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n-IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n-\n-set EXEC_DIR=%CD%\n-set WDIR=%EXEC_DIR%\n-:findBaseDir\n-IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n-cd ..\n-IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n-set WDIR=%CD%\n-goto findBaseDir\n-\n-:baseDirFound\n-set MAVEN_PROJECTBASEDIR=%WDIR%\n-cd \"%EXEC_DIR%\"\n-goto endDetectBaseDir\n-\n-:baseDirNotFound\n-set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n-cd \"%EXEC_DIR%\"\n-\n-:endDetectBaseDir\n-\n-IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n-\n-@setlocal EnableExtensions EnableDelayedExpansion\n-for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n-@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n-\n-:endReadAdditionalConfig\n-\n-SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n-set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n-set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n-\n-set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n-\n-FOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n-    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n-)\n-\n-@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n-@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n-if exist %WRAPPER_JAR% (\n-    if \"%MVNW_VERBOSE%\" == \"true\" (\n-        echo Found %WRAPPER_JAR%\n-    )\n-) else (\n-    if not \"%MVNW_REPOURL%\" == \"\" (\n-        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n-    )\n-    if \"%MVNW_VERBOSE%\" == \"true\" (\n-        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n-        echo Downloading from: %DOWNLOAD_URL%\n-    )\n-\n-    powershell -Command \"&{\"^\n-\t\t\"$webclient = new-object System.Net.WebClient;\"^\n-\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n-\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n-\t\t\"}\"^\n-\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n-\t\t\"}\"\n-    if \"%MVNW_VERBOSE%\" == \"true\" (\n-        echo Finished downloading %WRAPPER_JAR%\n-    )\n-)\n-@REM End of extension\n-\n-@REM Provide a \"standardized\" way to retrieve the CLI args that will\n-@REM work with both Windows and non-Windows executions.\n-set MAVEN_CMD_LINE_ARGS=%*\n-\n-%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\n-if ERRORLEVEL 1 goto error\n-goto end\n-\n-:error\n-set ERROR_CODE=1\n-\n-:end\n-@endlocal & set ERROR_CODE=%ERROR_CODE%\n-\n-if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n-@REM check for post script, once with legacy .bat ending and once with .cmd ending\n-if exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\n-if exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n-:skipRcPost\n-\n-@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\n-if \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n-\n-if \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n-\n-exit /B %ERROR_CODE%"
  },
  {
    "sha": "df50cad13fe1d5d078b65749a879b87a59df9c36",
    "filename": "bin/pom.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 54,
    "changes": 54,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/pom.xml",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/pom.xml",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/pom.xml?ref=46c659626213d32e68129ce8154dc1e6c860d27b",
    "patch": "@@ -1,54 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n-         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-    <modelVersion>4.0.0</modelVersion>\n-\n-    <parent>\n-        <groupId>org.springframework.boot</groupId>\n-        <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.4.2</version>\n-        <relativePath/> <!-- lookup parent from repository -->\n-    </parent>\n-\n-    <groupId>com.lhs</groupId>\n-    <artifactId>Chat</artifactId>\n-    <version>0.0.1-SNAPSHOT</version>\n-    <name>Chat</name>\n-    <description>Demo project for Spring Boot</description>\n-\n-    <properties>\n-        <java.version>11</java.version>\n-    </properties>\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.springframework.boot</groupId>\n-            <artifactId>spring-boot-starter-web</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.springframework.boot</groupId>\n-            <artifactId>spring-boot-starter-websocket</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.springframework.boot</groupId>\n-            <artifactId>spring-boot-starter-test</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n-\n-        <dependency>\n-            <groupId>org.projectlombok</groupId>\n-            <artifactId>lombok</artifactId>\n-        </dependency>\n-    </dependencies>\n-\n-    <build>\n-        <plugins>\n-            <plugin>\n-                <groupId>org.springframework.boot</groupId>\n-                <artifactId>spring-boot-maven-plugin</artifactId>\n-            </plugin>\n-        </plugins>\n-    </build>\n-\n-</project>"
  },
  {
    "sha": "97fe08848dc855d3fede1242684ba6ec9cd007bb",
    "filename": "bin/src/main/java/com/lhs/chatting/ChatApplication.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/ChatApplication.class",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/ChatApplication.class",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/src/main/java/com/lhs/chatting/ChatApplication.class?ref=46c659626213d32e68129ce8154dc1e6c860d27b"
  },
  {
    "sha": "56e1caef26a4d3df76e3040d29661894af88254d",
    "filename": "bin/src/main/java/com/lhs/chatting/config/WebSocketConfig.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/config/WebSocketConfig.class",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/config/WebSocketConfig.class",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/src/main/java/com/lhs/chatting/config/WebSocketConfig.class?ref=46c659626213d32e68129ce8154dc1e6c860d27b"
  },
  {
    "sha": "b8b83aba19c7b61a46b5932a7d9e3953faeef280",
    "filename": "bin/src/main/java/com/lhs/chatting/controller/MainController.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/controller/MainController.class",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/controller/MainController.class",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/src/main/java/com/lhs/chatting/controller/MainController.class?ref=46c659626213d32e68129ce8154dc1e6c860d27b"
  },
  {
    "sha": "9e170fc57b043df9715d63fdf1654b36d05aef54",
    "filename": "bin/src/main/java/com/lhs/chatting/handler/SocketHandler.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/handler/SocketHandler.class",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/handler/SocketHandler.class",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/src/main/java/com/lhs/chatting/handler/SocketHandler.class?ref=46c659626213d32e68129ce8154dc1e6c860d27b"
  },
  {
    "sha": "eaf41ff6f8c2828f1f472b92f6e325f8aed6ea12",
    "filename": "bin/src/main/java/com/lhs/chatting/model/Room.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/model/Room.class",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/model/Room.class",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/src/main/java/com/lhs/chatting/model/Room.class?ref=46c659626213d32e68129ce8154dc1e6c860d27b"
  },
  {
    "sha": "925100a34c0cbc6395c214ceb8d4a8aeeb641ed8",
    "filename": "bin/src/main/java/com/lhs/chatting/util/JsonUtils.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/util/JsonUtils.class",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/util/JsonUtils.class",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/src/main/java/com/lhs/chatting/util/JsonUtils.class?ref=46c659626213d32e68129ce8154dc1e6c860d27b"
  },
  {
    "sha": "e41c55337c91146704c253bf909a8bcaa7933803",
    "filename": "bin/src/main/java/com/lhs/chatting/util/RoomNumberGenerateUtils.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/util/RoomNumberGenerateUtils.class",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/java/com/lhs/chatting/util/RoomNumberGenerateUtils.class",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/src/main/java/com/lhs/chatting/util/RoomNumberGenerateUtils.class?ref=46c659626213d32e68129ce8154dc1e6c860d27b"
  },
  {
    "sha": "9a3c38c5149faa09528df9b2f5503d20cfbab019",
    "filename": "bin/src/main/resources/application.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 5,
    "changes": 5,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/resources/application.properties",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/src/main/resources/application.properties?ref=46c659626213d32e68129ce8154dc1e6c860d27b",
    "patch": "@@ -1,5 +0,0 @@\n-#Tomcat Server Setting\n-server.port=80\n-\n-#JSP to Modify Not Restart Server\n-server.servlet.jsp.init-parameters.development=true\n\\ No newline at end of file"
  },
  {
    "sha": "cb21953a2b5da4aa7497de207b6ef231a91e4cc1",
    "filename": "bin/src/main/resources/static/chat.html",
    "status": "removed",
    "additions": 0,
    "deletions": 151,
    "changes": 151,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/resources/static/chat.html",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/resources/static/chat.html",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/src/main/resources/static/chat.html?ref=46c659626213d32e68129ce8154dc1e6c860d27b",
    "patch": "@@ -1,151 +0,0 @@\n-<!DOCTYPE html>\n-<html>\n-<head>\n-    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n-    <meta charset=\"UTF-8\">\n-    <title>Chatting</title>\n-    <style>\n-\t\t*{\n-\t\t\tmargin:0;\n-\t\t\tpadding:0;\n-\t\t}\n-\t\t.container{\n-\t\t\twidth: 500px;\n-\t\t\tmargin: 0 auto;\n-\t\t\tpadding: 25px\n-\t\t}\n-\t\t.container h1{\n-\t\t\ttext-align: left;\n-\t\t\tpadding: 5px 5px 5px 15px;\n-\t\t\tcolor: #FFBB00;\n-\t\t\tborder-left: 3px solid #FFBB00;\n-\t\t\tmargin-bottom: 20px;\n-\t\t}\n-\t\t.chatting{\n-\t\t\tbackground-color: #000;\n-\t\t\twidth: 500px;\n-\t\t\theight: 500px;\n-\t\t\toverflow: auto;\n-\t\t}\n-\t\t.chatting .me{\n-\t\t\tcolor: #F6F6F6;\n-\t\t\ttext-align: right;\n-\t\t}\n-\t\t.chatting .others{\n-\t\t\tcolor: #FFE400;\n-\t\t\ttext-align: left;\n-\t\t}\n-\t\tinput{\n-\t\t\twidth: 330px;\n-\t\t\theight: 25px;\n-\t\t}\n-\t\t#yourMsg{\n-\t\t\tdisplay: none;\n-\t\t}\n-\n-    </style>\n-</head>\n-\n-<script type=\"text/javascript\">\n-\tvar ws;\n-\n-\tfunction wsOpen(){\n-\t\t//웹소켓 전송시 현재 방의 번호를 넘겨서 보낸다.\n-\t\tws = new WebSocket(\"ws://\" + location.host + \"/chatting/\"+$(\"#roomNumber\").val());\n-\t\twsEvt();\n-\t}\n-\t\t\n-\tfunction wsEvt() {\n-\t\tws.onopen = function(data){\n-\t\t\t//소켓이 열리면 동작\n-\t\t}\n-\t\t\n-\t\tws.onmessage = function(data) {\n-\t\t\t//메시지를 받으면 동작\n-\t\t\tvar msg = data.data;\n-\t\t\tif(msg != null && msg.trim() != ''){\n-\t\t\t\tvar d = JSON.parse(msg);\n-\t\t\t\tif(d.type == \"getId\"){\n-\t\t\t\t\tvar si = d.sessionId != null ? d.sessionId : \"\";\n-\t\t\t\t\tif(si != ''){\n-\t\t\t\t\t\t$(\"#sessionId\").val(si); \n-\t\t\t\t\t}\n-\t\t\t\t}else if(d.type == \"message\"){\n-\t\t\t\t\tif(d.sessionId == $(\"#sessionId\").val()){\n-\t\t\t\t\t\t$(\"#chatting\").append(\"<p class='me'>나 :\" + d.msg + \"</p>\");\n-\t\t\t\t\t}else{\n-\t\t\t\t\t\t$(\"#chatting\").append(\"<p class='others'>\" + d.userName + \" :\" + d.msg + \"</p>\");\n-\t\t\t\t\t}\n-\t\t\t\t\t\t\n-\t\t\t\t}else{\n-\t\t\t\t\tconsole.warn(\"unknown type!\")\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\tdocument.addEventListener(\"keypress\", function(e){\n-\t\t\tif(e.keyCode == 13){ //enter press\n-\t\t\t\tsend();\n-\t\t\t}\n-\t\t});\n-\t}\n-\n-\tfunction chatName(){\n-\t\tvar userName = $(\"#userName\").val();\n-\t\tif(userName == null || userName.trim() == \"\"){\n-\t\t\talert(\"사용자 이름을 입력해주세요.\");\n-\t\t\t$(\"#userName\").focus();\n-\t\t}else{\n-\t\t\twsOpen();\n-\t\t\t$(\"#yourName\").hide();\n-\t\t\t$(\"#yourMsg\").show();\n-\t\t}\n-\t}\n-\n-\tfunction send() {\n-\t\tvar option ={\n-\t\t\ttype: \"message\",\n-\t\t\troomNumber: $(\"#roomNumber\").val(),\n-\t\t\tsessionId : $(\"#sessionId\").val(),\n-\t\t\tuserName : $(\"#userName\").val(),\n-\t\t\tmsg : $(\"#chatting\").val()\n-\t\t}\n-\t\tws.send(JSON.stringify(option))\n-\t\t$('#chatting').val(\"\");\n-\t}\n-\n-</script>\n-<body>\n-<div id=\"container\" class=\"container\">\n-    <h1>${roomName}의 채팅방</h1>\n-    <input type=\"hidden\" id=\"sessionId\" value=\"\">\n-    <input type=\"hidden\" id=\"roomNumber\" value=\"${roomNumber}\">\n-\n-    <div id=\"chatting\" class=\"chatting\">\n-    </div>\n-\n-    <div id=\"yourName\">\n-        <table class=\"inputTable\">\n-            <tr>\n-                <th>사용자명</th>\n-                <th><input type=\"text\" name=\"userName\" id=\"userName\"></th>\n-                <th>\n-                    <button onclick=\"chatName()\" id=\"startBtn\">이름 등록</button>\n-                </th>\n-            </tr>\n-        </table>\n-    </div>\n-    <div id=\"yourMsg\">\n-        <table class=\"inputTable\">\n-            <tr>\n-                <th>메시지</th>\n-                <th><input id=\"chatting\" placeholder=\"보내실 메시지를 입력하세요.\"></th>\n-                <th>\n-                    <button onclick=\"send()\" id=\"sendBtn\">보내기</button>\n-                </th>\n-            </tr>\n-        </table>\n-    </div>\n-</div>\n-</body>\n-</html>\n\\ No newline at end of file"
  },
  {
    "sha": "971e9186835c1fca052fefd011959164ee732502",
    "filename": "bin/src/main/resources/static/room.html",
    "status": "removed",
    "additions": 0,
    "deletions": 156,
    "changes": 156,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/resources/static/room.html",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/main/resources/static/room.html",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/src/main/resources/static/room.html?ref=46c659626213d32e68129ce8154dc1e6c860d27b",
    "patch": "@@ -1,156 +0,0 @@\n-<!DOCTYPE html>\n-<html>\n-<head>\n-    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\n-    <meta charset=\"UTF-8\">\n-    <title>Room</title>\n-    <style>\n-\t\t*{\n-\t\t\tmargin:0;\n-\t\t\tpadding:0;\n-\t\t}\n-\t\t.container{\n-\t\t\twidth: 500px;\n-\t\t\tmargin: 0 auto;\n-\t\t\tpadding: 25px\n-\t\t}\n-\t\t.container h1{\n-\t\t\ttext-align: left;\n-\t\t\tpadding: 5px 5px 5px 15px;\n-\t\t\tcolor: #FFBB00;\n-\t\t\tborder-left: 3px solid #FFBB00;\n-\t\t\tmargin-bottom: 20px;\n-\t\t}\n-\t\t.roomContainer{\n-\t\t\tbackground-color: #F6F6F6;\n-\t\t\twidth: 500px;\n-\t\t\theight: 500px;\n-\t\t\toverflow: auto;\n-\t\t}\n-\t\t.roomList{\n-\t\t\tborder: none;\n-\t\t}\n-\t\t.roomList th{\n-\t\t\tborder: 1px solid #FFBB00;\n-\t\t\tbackground-color: #fff;\n-\t\t\tcolor: #FFBB00;\n-\t\t}\n-\t\t.roomList td{\n-\t\t\tborder: 1px solid #FFBB00;\n-\t\t\tbackground-color: #fff;\n-\t\t\ttext-align: left;\n-\t\t\tcolor: #FFBB00;\n-\t\t}\n-\t\t.roomList .num{\n-\t\t\twidth: 75px;\n-\t\t\ttext-align: center;\n-\t\t}\n-\t\t.roomList .room{\n-\t\t\twidth: 350px;\n-\t\t}\n-\t\t.roomList .go{\n-\t\t\twidth: 71px;\n-\t\t\ttext-align: center;\n-\t\t}\n-\t\tbutton{\n-\t\t\tbackground-color: #FFBB00;\n-\t\t\tfont-size: 14px;\n-\t\t\tcolor: #000;\n-\t\t\tborder: 1px solid #000;\n-\t\t\tborder-radius: 5px;\n-\t\t\tpadding: 3px;\n-\t\t\tmargin: 3px;\n-\t\t}\n-\t\t.inputTable th{\n-\t\t\tpadding: 5px;\n-\t\t}\n-\t\t.inputTable input{\n-\t\t\twidth: 330px;\n-\t\t\theight: 25px;\n-\t\t}\n-\n-    </style>\n-</head>\n-\n-<script type=\"text/javascript\">\n-\tvar ws;\n-\twindow.onload = function(){\n-\t\tgetRoom();\n-\t\tcreateRoom();\n-\t}\n-\n-\tfunction getRoom(){\n-\t\tcommonAjax('/api/rooms', \"\", 'get', function(result){\n-\t\t\tcreateChattingRoom(result);\n-\t\t});\n-\t}\n-\t\n-\tfunction createRoom(){\n-\t\t$(\"#createRoom\").click(function(){\n-\t\t\tvar msg = {\troomName : $('#roomName').val()\t};\n-\n-\t\t\tcommonAjax('/api/rooms', msg, 'post', function(result){\n-\t\t\t\tcreateChattingRoom(result);\n-\t\t\t});\n-\n-\t\t\t$(\"#roomName\").val(\"\");\n-\t\t});\n-\t}\n-\n-\tfunction goRoom(number, name){\n-\t\tlocation.href=\"/chatting?roomName=\"+name+\"&\"+\"roomNumber=\"+number;\n-\t}\n-\n-\tfunction createChattingRoom(res){\n-\t\tif(res != null){\n-\t\t\tvar tag = \"<tr><th class='num'>순서</th><th class='room'>방 이름</th><th class='go'></th></tr>\";\n-\t\t\tres.forEach(function(d, idx){\n-\t\t\t\tvar rn = d.roomName.trim();\n-\t\t\t\tvar roomNumber = d.roomNumber;\n-\t\t\t\ttag += \"<tr>\"+\n-\t\t\t\t\t\t\t\"<td class='num'>\"+(idx+1)+\"</td>\"+\n-\t\t\t\t\t\t\t\"<td class='room'>\"+ rn +\"</td>\"+\n-\t\t\t\t\t\t\t\"<td class='go'><button type='button' onclick='goRoom(\\\"\"+roomNumber+\"\\\", \\\"\"+rn+\"\\\")'>참여</button></td>\" +\n-\t\t\t\t\t\t\"</tr>\";\t\n-\t\t\t});\n-\t\t\t$(\"#roomList\").empty().append(tag);\n-\t\t}\n-\t}\n-\n-\tfunction commonAjax(url, parameter, type, callback, contentType){\n-\t\t$.ajax({\n-\t\t\turl: url,\n-\t\t\tdata: parameter,\n-\t\t\ttype: type,\n-\t\t\tcontentType : contentType!=null?contentType:'application/x-www-form-urlencoded; charset=UTF-8',\n-\t\t\tsuccess: function (res) {\n-\t\t\t\tcallback(res);\n-\t\t\t},\n-\t\t\terror : function(err){\n-\t\t\t\tconsole.log('error');\n-\t\t\t\tcallback(err);\n-\t\t\t}\n-\t\t});\n-\t}\n-\n-</script>\n-<body>\n-<div class=\"container\">\n-    <h1>채팅방</h1>\n-    <div id=\"roomContainer\" class=\"roomContainer\">\n-        <table id=\"roomList\" class=\"roomList\"></table>\n-    </div>\n-    <div>\n-        <table class=\"inputTable\">\n-            <tr>\n-                <th>방 제목</th>\n-                <th><input type=\"text\" name=\"roomName\" id=\"roomName\"></th>\n-                <th>\n-                    <button id=\"createRoom\">방 만들기</button>\n-                </th>\n-            </tr>\n-        </table>\n-    </div>\n-</div>\n-</body>\n-</html>\n\\ No newline at end of file"
  },
  {
    "sha": "c59bdf89e145e3f0aed394df89ace8c36e7f8af6",
    "filename": "bin/src/test/java/com/lhs/chatting/ChatApplicationTests.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/test/java/com/lhs/chatting/ChatApplicationTests.class",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/bin/src/test/java/com/lhs/chatting/ChatApplicationTests.class",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/bin/src/test/java/com/lhs/chatting/ChatApplicationTests.class?ref=46c659626213d32e68129ce8154dc1e6c860d27b"
  },
  {
    "sha": "7c0ab493bc9a2e23871289d2d1b1dd15efcb3296",
    "filename": "src/main/java/com/lhs/chatting/ChatApplication.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/ChatApplication.java",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/ChatApplication.java",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/src/main/java/com/lhs/chatting/ChatApplication.java?ref=f52385ccebe7adead57c17d4756dcaf74684e69f",
    "patch": "@@ -6,8 +6,8 @@\n @SpringBootApplication\n public class ChatApplication {\n \n-\tpublic static void main(String[] args) {\n-\t\tSpringApplication.run(ChatApplication.class, args);\n-\t}\n+    public static void main(String[] args) {\n+        SpringApplication.run(ChatApplication.class, args);\n+    }\n \n }"
  },
  {
    "sha": "d84c7dd159e7d8beeeebb90280f76a915f9ccb84",
    "filename": "src/main/java/com/lhs/chatting/config/WebSocketConfig.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/config/WebSocketConfig.java",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/config/WebSocketConfig.java",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/src/main/java/com/lhs/chatting/config/WebSocketConfig.java?ref=f52385ccebe7adead57c17d4756dcaf74684e69f",
    "patch": "@@ -12,12 +12,12 @@\n @EnableWebSocket\n public class WebSocketConfig implements WebSocketConfigurer {\n \n-\t@Autowired\n-\tSocketHandler socketHandler;\n+    @Autowired\n+    SocketHandler socketHandler;\n \n-\t@Override\n-\tpublic void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {\n-\t\tregistry.addHandler(socketHandler, \"/chatting/{roomNumber}\");\n-\t}\n+    @Override\n+    public void registerWebSocketHandlers(WebSocketHandlerRegistry registry) {\n+        registry.addHandler(socketHandler, \"/chatting/{roomNumber}\");\n+    }\n \n }\n\\ No newline at end of file"
  },
  {
    "sha": "f3137e6c476c7822ec31055a18d3eb4a6ade7b30",
    "filename": "src/main/java/com/lhs/chatting/controller/FriendApiController.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/FriendApiController.java",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/FriendApiController.java",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/src/main/java/com/lhs/chatting/controller/FriendApiController.java?ref=f52385ccebe7adead57c17d4756dcaf74684e69f",
    "patch": "@@ -30,8 +30,8 @@ public void registerFriend(@RequestBody FriendRequest request) {\n         return new ResponseEntity<>(HttpStatus.OK);\n     }\n \n-    @DeleteMapping(\"/{friendId}\")\n-    public void deleteFriend(@RequestBody FriendRequest request) {\n-        friendService.deleteFriend(request.getUserId(), request.getFriendId());\n+    @DeleteMapping(\"/{friendId}/users/{userId}\")\n+    public void deleteFriend(@PathVariable Long friendId, @PathVariable Long userId) {\n+        friendService.deleteFriend(userId, friendId);\n     }\n }"
  },
  {
    "sha": "ad5b6318a87e0a09952b6d0994e71779c5204850",
    "filename": "src/main/java/com/lhs/chatting/controller/MainPageController.java",
    "status": "modified",
    "additions": 23,
    "deletions": 23,
    "changes": 46,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/MainPageController.java",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/MainPageController.java",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/src/main/java/com/lhs/chatting/controller/MainPageController.java?ref=f52385ccebe7adead57c17d4756dcaf74684e69f",
    "patch": "@@ -13,27 +13,27 @@\n @Controller\n @RequiredArgsConstructor\n public class MainPageController {\n-\tprivate final RoomService roomService;\n-\tprivate final MemberService memberService;\n-\n-\t@GetMapping(\"/chat\")\n-\tpublic String chatPage() {\n-\t\treturn \"chat.html\";\n-\t}\n-\n-\t@GetMapping(\"/room\")\n-\tpublic String roomPage() {\n-\t\treturn \"room.html\";\n-\t}\n-\n-\t@RequestMapping(\"/chatting\")\n-\tpublic String chatting(@RequestParam(\"roomId\") Long roomId) {\n-\t\treturn roomService.isRoomExist(roomId) ? \"chat.html\" : \"room.html\";\n-\t}\n-\n-\t@RequestMapping(\"/list\")\n-\tpublic String listPage(@RequestParam(\"memberId\") Long memberId) {\n-\t\tmemberService.updateLastEntrance(memberId);\n-\t\treturn \"room.html\";\n-\t}\n+    private final RoomService roomService;\n+    private final MemberService memberService;\n+\n+    @GetMapping(\"/chat\")\n+    public String chatPage() {\n+        return \"chat.html\";\n+    }\n+\n+    @GetMapping(\"/room\")\n+    public String roomPage() {\n+        return \"room.html\";\n+    }\n+\n+    @RequestMapping(\"/chatting\")\n+    public String chatting(@RequestParam(\"roomId\") Long roomId) {\n+        return roomService.isRoomExist(roomId) ? \"chat.html\" : \"room.html\";\n+    }\n+\n+    @RequestMapping(\"/list\")\n+    public String listPage(@RequestParam(\"memberId\") Long memberId) {\n+        memberService.updateLastEntranceTime(memberId);\n+        return \"room.html\";\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "407cb68ee28131774798621bdd15a513b4d5bc58",
    "filename": "src/main/java/com/lhs/chatting/controller/MemberApiController.java",
    "status": "modified",
    "additions": 24,
    "deletions": 34,
    "changes": 58,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/MemberApiController.java",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/MemberApiController.java",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/src/main/java/com/lhs/chatting/controller/MemberApiController.java?ref=f52385ccebe7adead57c17d4756dcaf74684e69f",
    "patch": "@@ -1,15 +1,16 @@\n package com.lhs.chatting.controller;\n \n-import java.util.Map;\n-\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.PutMapping;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n import org.springframework.web.bind.annotation.RestController;\n \n-import com.lhs.chatting.entity.Member;\n-import com.lhs.chatting.entity.Room;\n-import com.lhs.chatting.entity.User;\n+import com.lhs.chatting.model.ChangeRoomSettingRequest;\n+import com.lhs.chatting.model.InviteUserRequest;\n import com.lhs.chatting.service.MemberService;\n \n import lombok.RequiredArgsConstructor;\n@@ -18,33 +19,22 @@\n @RequestMapping(\"/api/members\")\n @RequiredArgsConstructor\n public class MemberApiController {\n-\tMemberService memberService;\n-\n-\t@PostMapping(path = \"/invite\")\n-\tpublic void inviteFriend(@RequestBody Map<String, Object> inviteMap) {\n-\t\tUser friend = (User) inviteMap.get(\"friend\");\n-\t\tRoom room = (Room) inviteMap.get(\"room\");\n-\t\tString alias = String.valueOf(inviteMap.get(\"alias\"));\n-\t\tmemberService.inviteFriend(friend, room, alias);\n-\t}\n-\n-\t@PostMapping(path = \"/alias\")\n-\tpublic void changeRoomAlias(@RequestBody Map<String, Object> aliasMap) {\n-\t\tMember member = (Member) aliasMap.get(\"member\");\n-\t\tString alias = String.valueOf(aliasMap.get(\"alias\"));\n-\t\tmemberService.changeRoomAlias(member, alias);\n-\t}\n-\n-\t@PostMapping(path = \"/setting\")\n-\tpublic void changeSetting(@RequestBody Map<String, Object> settingMap) {\n-\t\tMember member = (Member) settingMap.get(\"member\");\n-\t\tString setting = String.valueOf(settingMap.get(\"setting\"));\n-\t\tmemberService.changeSetting(member, setting);\n-\t}\n-\n-\t@PostMapping(path = \"/leave\")\n-\tpublic void leaveRoom(@RequestBody Map<String, Object> leaveMap) {\n-\t\tMember member = (Member) leaveMap.get(\"member\");\n-\t\tmemberService.leaveRoom(member);\n-\t}\n+    private final MemberService memberService;\n+\n+    @PostMapping\n+    public void inviteFriendToRoom(@RequestParam(\"request\") InviteUserRequest request, @RequestParam(\"userId\") Long userId) {\n+        memberService.inviteFriendToRoom(userId, request.getRoomId(), request.getRoomAlias());\n+    }\n+\n+    @PutMapping(\"/{memberId}\")\n+    public void changeRoomSetting(@RequestBody ChangeRoomSettingRequest request, @PathVariable Long memberId) {\n+        String roomAlias = request.getRoomAlias();\n+        String roomSetting = request.getSetting();\n+        memberService.changeRoomSetting(memberId, roomAlias, roomSetting);\n+    }\n+\n+    @DeleteMapping(\"/{memberId}\")\n+    public void leaveRoom(@PathVariable Long memberId) {\n+        memberService.leaveRoom(memberId);\n+    }\n }"
  },
  {
    "sha": "cc12101724a5eb99a3f0cb1fd9eafb4bb836d9c3",
    "filename": "src/main/java/com/lhs/chatting/controller/MessageApiController.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/MessageApiController.java",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/MessageApiController.java",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/src/main/java/com/lhs/chatting/controller/MessageApiController.java?ref=f52385ccebe7adead57c17d4756dcaf74684e69f",
    "patch": "@@ -0,0 +1,25 @@\n+package com.lhs.chatting.controller;\n+\n+import java.util.List;\n+\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import com.lhs.chatting.entity.Message;\n+import com.lhs.chatting.service.MessageService;\n+\n+import lombok.RequiredArgsConstructor;\n+\n+@RestController\n+@RequestMapping(\"/api/messages\")\n+@RequiredArgsConstructor\n+public class MessageApiController {\n+    private final MessageService messageService;\n+\n+    @GetMapping(\"{content}/rooms/{roomId}\")\n+    public List<Message> searchMessageByText(@PathVariable Long roomId, @PathVariable String content) {\n+        return messageService.searchMessageByText(roomId, content);\n+    }\n+}"
  },
  {
    "sha": "c74dc466c7903baa17f02d464fb5be20e2acb8bf",
    "filename": "src/main/java/com/lhs/chatting/controller/MessageController.java",
    "status": "removed",
    "additions": 0,
    "deletions": 32,
    "changes": 32,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/46c659626213d32e68129ce8154dc1e6c860d27b/src/main/java/com/lhs/chatting/controller/MessageController.java",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/46c659626213d32e68129ce8154dc1e6c860d27b/src/main/java/com/lhs/chatting/controller/MessageController.java",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/src/main/java/com/lhs/chatting/controller/MessageController.java?ref=46c659626213d32e68129ce8154dc1e6c860d27b",
    "patch": "@@ -1,32 +0,0 @@\n-package com.lhs.chatting.controller;\n-\n-import java.util.Map;\n-\n-import org.springframework.web.bind.annotation.PostMapping;\n-import org.springframework.web.bind.annotation.RequestBody;\n-import org.springframework.web.bind.annotation.RequestMapping;\n-import org.springframework.web.bind.annotation.RestController;\n-\n-import com.lhs.chatting.entity.Message;\n-import com.lhs.chatting.service.MessageService;\n-\n-import lombok.RequiredArgsConstructor;\n-\n-@RestController\n-@RequestMapping(\"/api/messages\")\n-@RequiredArgsConstructor\n-public class MessageController {\n-\tprivate MessageService messageService;\n-\n-\t@PostMapping\n-\tpublic void registerUser(@RequestBody Map<String, Object> messageMap) {\n-\t\tMessage message = (Message) messageMap.get(\"message\");\n-\t\tmessageService.createMessage(message);\n-\t}\n-\n-\t@PostMapping(path = \"/search\")\n-\tpublic void searchMessage(@RequestBody Map<String, Object> textMap) {\n-\t\tString contents = String.valueOf(textMap.get(\"text\"));\n-\t\tmessageService.searchMessage(contents);\n-\t}\n-}"
  },
  {
    "sha": "28d4543031befff5bc857b852d000571efe6c4e5",
    "filename": "src/main/java/com/lhs/chatting/controller/RoomApiController.java",
    "status": "modified",
    "additions": 21,
    "deletions": 34,
    "changes": 55,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/RoomApiController.java",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/RoomApiController.java",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/src/main/java/com/lhs/chatting/controller/RoomApiController.java?ref=f52385ccebe7adead57c17d4756dcaf74684e69f",
    "patch": "@@ -1,47 +1,34 @@\n package com.lhs.chatting.controller;\n \n-import java.util.ArrayList;\n import java.util.List;\n-import java.util.Map;\n \n-import org.springframework.messaging.handler.annotation.DestinationVariable;\n-import org.springframework.messaging.handler.annotation.MessageMapping;\n-import org.springframework.messaging.handler.annotation.SendTo;\n-import org.springframework.util.StringUtils;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n import org.springframework.web.bind.annotation.RestController;\n \n-import com.lhs.chatting.entity.Room;\n-import com.lhs.chatting.entity.User;\n+import com.lhs.chatting.entity.Member;\n+import com.lhs.chatting.model.RoomRequest;\n import com.lhs.chatting.service.RoomService;\n \n import lombok.RequiredArgsConstructor;\n \n @RestController\n+@RequestMapping(\"/api/rooms\")\n @RequiredArgsConstructor\n public class RoomApiController {\n-\tprivate final RoomService roomService;\n-\n-\t@MessageMapping(\"/rooms/{bodyMap}\")\n-\t@SendTo(\"/topic/public\")\n-\tpublic List<Room> makeRoom(@DestinationVariable Map<String, Object> bodyMap) {\n-\t\tString name = String.valueOf(bodyMap.get(\"roomName\"));\n-\t\tList<User> users = new ArrayList();\n-\t\tif (StringUtils.hasText(name)) {\n-\t\t\troomService.makeRoom(name, users);\n-\t\t}\n-\t\treturn roomService.getRooms();\n-\t}\n-\n-\t@MessageMapping(\"/rooms\")\n-\t@SendTo(\"/topic/public\")\n-\tpublic List<Room> getRooms() {\n-\t\treturn roomService.getRooms();\n-\t}\n-\n-\t@MessageMapping(\"/rooms/{roomMap}\")\n-\t@SendTo(\"/topic/public\")\n-\tpublic Room getRoom(@DestinationVariable Map<String, Object> roomMap) {\n-\t\tRoom room = (Room) roomMap.get(\"room\");\n-\t\treturn roomService.getRoom(room);\n-\t}\n-}\n+    private final RoomService roomService;\n+\n+    @PostMapping\n+    public void makeRoom(@RequestParam(\"request\") RoomRequest request) {\n+        roomService.makeRoom(request.getUserIds(), request.getRoomName());\n+    }\n+\n+    @GetMapping(\"/{roomId}/users/{userId}\")\n+    public Member getRoom(@PathVariable Long roomId, @PathVariable Long userId) {\n+        return roomService.getRoom(roomId, userId);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "c33b0c14b62524b99ed52fa2db32e2beaadd206a",
    "filename": "src/main/java/com/lhs/chatting/controller/UserApiController.java",
    "status": "modified",
    "additions": 38,
    "deletions": 39,
    "changes": 77,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/UserApiController.java",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/controller/UserApiController.java",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/src/main/java/com/lhs/chatting/controller/UserApiController.java?ref=f52385ccebe7adead57c17d4756dcaf74684e69f",
    "patch": "@@ -1,52 +1,51 @@\n package com.lhs.chatting.controller;\n \n-import com.lhs.chatting.entity.Friend;\n-import com.lhs.chatting.entity.User;\n-import com.lhs.chatting.service.UserService;\n-import lombok.RequiredArgsConstructor;\n-\n-import java.util.Map;\n+import java.util.List;\n \n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.PutMapping;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RestController;\n \n+import com.lhs.chatting.entity.Member;\n+import com.lhs.chatting.model.ChangeUserInformationRequest;\n+import com.lhs.chatting.model.RegisterUserRequest;\n+import com.lhs.chatting.service.RoomService;\n+import com.lhs.chatting.service.UserService;\n+\n+import lombok.RequiredArgsConstructor;\n+\n @RestController\n @RequestMapping(\"/api/users\")\n @RequiredArgsConstructor\n public class UserApiController {\n-\tprivate final UserService userService;\n-\n-\t@PostMapping\n-\tpublic void registerUser(@RequestBody User user) {\n-\t\tuserService.registerUser(user);\n-\t}\n-\n-\t@PostMapping(path = \"/password\")\n-\tpublic void changePassword(@RequestBody Map<String, Object> passwordMap) {\n-\t\tUser user = (User) passwordMap.get(\"user\");\n-\t\tString password = String.valueOf(passwordMap.get(\"password\"));\n-\t\tuserService.changePassword(user, password);\n-\t}\n-\n-\t@PostMapping(path = \"/nickname\")\n-\tpublic void changeNickname(@RequestBody Map<String, Object> nicknameMap) {\n-\t\tUser user = (User) nicknameMap.get(\"user\");\n-\t\tString nickname = String.valueOf(nicknameMap.get(\"nickname\"));\n-\t\tuserService.changeNickname(user, nickname);\n-\t}\n-\n-\t@PostMapping(path = \"/profile\")\n-\tpublic void changeProfile(@RequestBody Map<String, Object> profileMap) {\n-\t\tUser user = (User) profileMap.get(\"user\");\n-\t\tString image = String.valueOf(profileMap.get(\"image\"));\n-\t\tuserService.changeProfile(user, image);\n-\t}\n-\n-\t@PostMapping(path = \"/delete\")\n-\tpublic void deleteUser(@RequestBody Map<String, Object> userMap) {\n-\t\tUser user = (User) userMap.get(\"user\");\n-\t\tuserService.deleteUser(user);\n-\t}\n+    private final UserService userService;\n+    private final RoomService roomService;\n+\n+    @PostMapping\n+    public void registerUser(@RequestBody RegisterUserRequest request) {\n+        userService.registerUser(request.getUsername(), request.getPassword(), request.getEmail(), request.getNickname());\n+    }\n+\n+    @PutMapping(\"/{userId}\")\n+    public void changeUserInfo(@RequestBody ChangeUserInformationRequest request, @PathVariable Long userId) {\n+        String password = request.getPassword();\n+        String nickname = request.getNickname();\n+        String profileImage = request.getProfileImage();\n+        userService.changeUserInfo(userId, nickname, password, profileImage);\n+    }\n+    \n+    @GetMapping(\"/{userId}/Rooms\")\n+    public List<Member> getRooms(@PathVariable Long userId) {\n+        return roomService.getRooms(userId);\n+    }\n+\n+    @DeleteMapping(\"/{userId}\")\n+    public void deleteUser(@PathVariable Long userId) {\n+        userService.deleteUser(userId);\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "b36d456c7df266ee09299a1dddc9532608c08642",
    "filename": "src/main/java/com/lhs/chatting/entity/Friend.java",
    "status": "modified",
    "additions": 19,
    "deletions": 9,
    "changes": 28,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/entity/Friend.java",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/entity/Friend.java",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/src/main/java/com/lhs/chatting/entity/Friend.java?ref=f52385ccebe7adead57c17d4756dcaf74684e69f",
    "patch": "@@ -1,10 +1,20 @@\n package com.lhs.chatting.entity;\n \n-import java.sql.Timestamp;\n-\n-import javax.persistence.*;\n-\n-import lombok.*;\n+import java.time.LocalDateTime;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.EnumType;\n+import javax.persistence.Enumerated;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.Setter;\n \n @Entity\n @Table(name = \"friend\")\n@@ -25,19 +35,19 @@\n     private User friend;\n \n     @Setter\n-    @Column(name = \"relation_type\", length = 30, nullable = false)\n+    @Column(name = \"relation_type\", nullable = false)\n     @Enumerated(EnumType.STRING)\n     private FriendRelationType relationType;\n \n     @Column(name = \"created_time\")\n-    private Timestamp createdTime;\n+    private LocalDateTime createdTime;\n \n     public static Friend of(Long userId, Long friendId, FriendRelationType relationType) {\n         return Friend.builder()\n-                .relationType(relationType)\n                 .user(User.builder().id(userId).build())\n                 .friend(User.builder().id(friendId).build())\n-                .createdTime(new Timestamp(System.currentTimeMillis()))\n+                .relationType(relationType)\n+                .createdTime(LocalDateTime.now())\n                 .build();\n     }\n }"
  },
  {
    "sha": "6189869f6650161e0f4048bf9943d20c74fe8b52",
    "filename": "src/main/java/com/lhs/chatting/entity/Member.java",
    "status": "modified",
    "additions": 44,
    "deletions": 38,
    "changes": 82,
    "blob_url": "https://github.com/LeeHyunSeong/chatting/blob/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/entity/Member.java",
    "raw_url": "https://github.com/LeeHyunSeong/chatting/raw/f52385ccebe7adead57c17d4756dcaf74684e69f/src/main/java/com/lhs/chatting/entity/Member.java",
    "contents_url": "https://api.github.com/repos/LeeHyunSeong/chatting/contents/src/main/java/com/lhs/chatting/entity/Member.java?ref=f52385ccebe7adead57c17d4756dcaf74684e69f",
    "patch": "@@ -1,6 +1,6 @@\n package com.lhs.chatting.entity;\n \n-import java.sql.Timestamp;\n+import java.time.LocalDateTime;\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n@@ -10,45 +10,51 @@\n import javax.persistence.ManyToOne;\n import javax.persistence.Table;\n \n-import lombok.AllArgsConstructor;\n-import lombok.Data;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.Setter;\n \n-@Data\n-@AllArgsConstructor\n @Entity\n @Table(name = \"member\")\n+@Builder\n+@Getter\n public class Member {\n-\t@Id\n-\t@GeneratedValue\n-\t@Column(name = \"id\")\n-\tprivate long id;\n-\n-\t@Column(name = \"room_alias\", length = 45, nullable = false)\n-\tprivate String roomAlias;\n-\n-\t@Column(name = \"setting_meta\", length = 45, nullable = false)\n-\tprivate String settingMeta;\n-\n-\t@Column(name = \"joined_time\")\n-\tprivate Timestamp joinedTime;\n-\n-\t@Column(name = \"last_entrance_time\")\n-\tprivate Timestamp lastEntranceTime;\n-\n-\t@ManyToOne(targetEntity = User.class)\n-\t@JoinColumn(name = \"user_id\")\n-\tprivate User user;\n-\n-\t@ManyToOne(targetEntity = Room.class)\n-\t@JoinColumn(name = \"room_id\")\n-\tprivate Room room;\n-\n-\tpublic Member(String roomAlias, User user, Room room) {\n-\t\tthis.roomAlias = roomAlias;\n-\t\tsettingMeta = null;\n-\t\tjoinedTime = new Timestamp(System.currentTimeMillis());\n-\t\tlastEntranceTime = new Timestamp(System.currentTimeMillis());\n-\t\tthis.user = user;\n-\t\tthis.room = room;\n-\t}\n+    @Id\n+    @GeneratedValue\n+    @Column(name = \"id\")\n+    private long id;\n+\n+    @ManyToOne(targetEntity = User.class)\n+    @JoinColumn(name = \"user_id\")\n+    private User user;\n+\n+    @ManyToOne(targetEntity = Room.class)\n+    @JoinColumn(name = \"room_id\")\n+    private Room room;\n+\n+    @Setter\n+    @Column(name = \"room_alias\", length = 20, nullable = false)\n+    private String roomAlias;\n+\n+    @Setter\n+    @Column(name = \"setting_meta\", columnDefinition = \"TEXT\", nullable = false)\n+    private String settingMeta;\n+\n+    @Setter\n+    @Column(name = \"last_entrance_time\")\n+    private LocalDateTime lastEntranceTime;\n+\n+    @Column(name = \"joined_time\")\n+    private LocalDateTime joinedTime;\n+\n+    public static Member of(Long userId, Long roomId, String roomAlias) {\n+        return Member.builder()\n+                .roomAlias(roomAlias)\n+                .settingMeta(\"NORMAL\")\n+                .user(User.builder().id(userId).build())\n+                .room(Room.builder().id(roomId).build())\n+                .joinedTime(LocalDateTime.now())\n+                .lastEntranceTime(LocalDateTime.now())\n+                .build();\n+    }\n }\n\\ No newline at end of file"
  }
]
