[
  {
    "sha": "f05e3d43ac4b65213d25bd94fb930236b03bbd16",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/pom.xml",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/pom.xml",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/pom.xml?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -7,6 +7,18 @@\n     <groupId>org.example</groupId>\n     <artifactId>AutomationPracticeShop</artifactId>\n     <version>1.0-SNAPSHOT</version>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-compiler-plugin</artifactId>\n+                <configuration>\n+                    <source>6</source>\n+                    <target>6</target>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n \n     <properties>\n         <testng.version>7.0.0</testng.version>"
  },
  {
    "sha": "7e5063cc06a2917d2b53f13214520688fc16a2d8",
    "filename": "src/main/java/constants/CommonConstants.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/constants/CommonConstants.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/constants/CommonConstants.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/main/java/constants/CommonConstants.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -1,6 +1,11 @@\n package constants;\n \n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+\n public interface CommonConstants {\n     String AUTOMATION_PRACTICE_SHOP_URL = \"http://automationpractice.com/index.php\";\n     String SIGN_IN_URL = AUTOMATION_PRACTICE_SHOP_URL + \"?controller=authentication&back=my-account\";\n-}\n+    String MY_ACCOUNT_PAGE_URL = AUTOMATION_PRACTICE_SHOP_URL + \"?controller=my-account\";\n+    String PRODUCT_NAME_ON_MAIN_PAGE = \"//*[@id='homefeatured']//self::*[contains(text(),'%s')]\";\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "68fb328c2285f594267036f360483a53c976607c",
    "filename": "src/main/java/pages/BasePage.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/BasePage.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/BasePage.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/main/java/pages/BasePage.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -5,7 +5,7 @@\n import org.openqa.selenium.support.PageFactory;\n import org.openqa.selenium.support.ui.WebDriverWait;\n \n-abstract class BasePage implements CommonConstants {\n+public class BasePage implements CommonConstants {\n     WebDriver driver;\n     WebDriverWait wait;\n \n@@ -15,7 +15,7 @@\n         PageFactory.initElements(driver, this);\n     }\n \n-    abstract void waitForPageOpened();\n-\n-    public void openPage(String url) { driver.get(url); }\n-}\n+    public void openPage(String url) {\n+        driver.get(url);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "cf84a6a0f1eddee8c7609e5fdd1129c85cdfdb1f",
    "filename": "src/main/java/pages/CreateAnAccountPage.java",
    "status": "modified",
    "additions": 119,
    "deletions": 3,
    "changes": 122,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/CreateAnAccountPage.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/CreateAnAccountPage.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/main/java/pages/CreateAnAccountPage.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -1,15 +1,131 @@\n package pages;\n \n+import org.openqa.selenium.By;\n import org.openqa.selenium.WebDriver;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n \n public class CreateAnAccountPage extends BasePage {\n \n+    @FindBy(xpath = \"//*[@id='email_create']\")\n+    WebElement emailAddressFieldInput;\n+\n+    @FindBy(xpath = \"//*[@id='SubmitCreate']\")\n+    WebElement createAnAccountButton;\n+\n+    @FindBy(xpath = \"//*[contains(text(),'Your personal information')]\")\n+    WebElement yourPersonalInfoLabel;\n+\n+    @FindBy(xpath = \"//*[@id='customer_firstname']\")\n+    WebElement yourFirstNameField;\n+\n+    @FindBy(xpath = \"//*[@id='submitAccount']\")\n+    WebElement registrationButton;\n+\n+    @FindBy(xpath = \"//*[@id='center_column']//ancestor::*[contains(text(),'firstname')]\")\n+    WebElement emptyFirstnameFieldErrorText;\n+\n+    @FindBy(xpath = \"//*[@id='passwd']\")\n+    WebElement passwordField;\n+\n+    @FindBy(xpath = \"//*[@class='alert alert-danger']//ancestor::*[contains(text(),'The Zip/Postal')]\")\n+    WebElement longZipcodeErrorText;\n+\n+    @FindBy(xpath = \"//*[@id='customer_lastname']\")\n+    WebElement yourLastnameField;\n+\n+    @FindBy(xpath = \"//*[@id='email']\")\n+    WebElement emailField;\n+\n+    @FindBy(xpath = \"//*[@id='firstname']\")\n+    WebElement companyFirstNameField;\n+\n+    @FindBy(xpath = \"//*[@id='lastname']\")\n+    WebElement companyLastNameField;\n+\n+    @FindBy(xpath = \"//*[@id='address1']\")\n+    WebElement yourAddressField;\n+\n+    @FindBy(xpath = \"//*[@id='city']\")\n+    WebElement cityField;\n+\n+    String stateField = \"//*[@id='id_state']//ancestor::*[contains(text(),'%s')]\";\n+\n+    @FindBy(xpath = \"//*[@id='postcode']\")\n+    WebElement zipCodeField;\n+\n+    String countryField = \"//*[@id='id_country']//ancestor::*[contains(text(),'%s')]\";\n+\n+    @FindBy(xpath = \"//*[@id='phone_mobile']\")\n+    WebElement mobPhoneField;\n+\n+    @FindBy(xpath = \"//*[@id='alias']\")\n+    WebElement assignAddressField;\n+\n+    @FindBy(xpath = \"//*[@id='my-account']\")\n+    WebElement myAccountTab;\n+\n+    @FindBy(xpath = \"//*[@id='alias']\")\n+    WebElement textInFieldAssignAnAddress;\n+\n     public CreateAnAccountPage(WebDriver driver) {\n         super(driver);\n     }\n \n-    @Override\n-    void waitForPageOpened() {\n+    public void fillInEmailAndClickCreateAccountBtn(String emailAddress) {\n+        emailAddressFieldInput.sendKeys(emailAddress);\n+        createAnAccountButton.click();\n+    }\n+\n+    public void inputTextInFormFirstNameAndClickRegister(String firstName) {\n+        yourFirstNameField.sendKeys(firstName);\n+        registrationButton.click();\n+    }\n+\n+    public String getEmptyFirstnameText() {\n+        return emptyFirstnameFieldErrorText.getText();\n+    }\n+\n+    public void inputShortPswrdInField(String zipCode) {\n+        zipCodeField.sendKeys(zipCode);\n+        registrationButton.click();\n+    }\n+\n+    public void clickRegisterButton() {\n+        registrationButton.click();\n     }\n \n-}\n+    public String getShortPswrdInField() {\n+        return longZipcodeErrorText.getText();\n+    }\n+\n+    public void inputTextInRequiredFieldsFormAndReg(String yourFirstName, String yourLastName, String password,\n+                                                    String firstNameCompany, String lastNameCompany,\n+                                                    String addressCompany, String city, String zipCode,\n+                                                    String phoneNumber, String assignCompanyName) {\n+        yourFirstNameField.sendKeys(yourFirstName);\n+        yourLastnameField.sendKeys(yourLastName);\n+        emailField.click();\n+        passwordField.sendKeys(password);\n+        companyFirstNameField.sendKeys(firstNameCompany);\n+        companyLastNameField.sendKeys(lastNameCompany);\n+        yourAddressField.sendKeys(addressCompany);\n+        cityField.sendKeys(city);\n+        zipCodeField.sendKeys(zipCode);\n+        mobPhoneField.sendKeys(phoneNumber);\n+        textInFieldAssignAnAddress.clear();\n+        assignAddressField.sendKeys(assignCompanyName);\n+    }\n+\n+    public void chooseState(String state) {\n+        driver.findElement(By.xpath(String.format(stateField, state))).click();\n+    }\n+\n+    public void chooseCountry(String country) {\n+        driver.findElement(By.xpath(String.format(countryField, country))).click();\n+    }\n+\n+    public boolean isMainStorePageOpened() {\n+        return myAccountTab.isDisplayed();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "1dc673c5b746c9d905bf57c680655165e294262a",
    "filename": "src/main/java/pages/HeaderPage.java",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/HeaderPage.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/HeaderPage.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/main/java/pages/HeaderPage.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -0,0 +1,73 @@\n+package pages;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebDriver;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+import org.openqa.selenium.support.ui.ExpectedConditions;\n+\n+public class HeaderPage extends BasePage {\n+\n+    @FindBy(xpath = \"//*[@id='email']\")\n+    WebElement emailFieldSignIn;\n+\n+    @FindBy(xpath = \"//*[@id='passwd']\")\n+    WebElement passwordFieldSignIn;\n+\n+    @FindBy(xpath = \"//*[@id='SubmitLogin']\")\n+    WebElement signInButton;\n+\n+    @FindBy(xpath = \"//*[@id='email_create']\")\n+    WebElement emailAddressFieldInput;\n+\n+    @FindBy(xpath = \"//*[@id='SubmitCreate']\")\n+    WebElement createAnAccountButton;\n+\n+    @FindBy(xpath = \"//*[@id='header']//ancestor::*[contains(text(),'Sign out')]\")\n+    WebElement signOutBtn;\n+\n+    @FindBy(xpath = \"//*[@class='login']//ancestor::*[contains(text(),'Sign in')]\")\n+    WebElement signInHeaderButton;\n+\n+    @FindBy(xpath = \"//*[@class='page-heading']\")\n+    WebElement myAccountTextLabel;\n+\n+    String menuWomenLink = \"//*[@class='sf-with-ul']//ancestor::*[contains(text(),'%s')]\";\n+\n+    String productName = \"//*[@class='product-name']//self::*[contains(text(),'%s')]\";\n+\n+    public HeaderPage(WebDriver driver) {\n+        super(driver);\n+    }\n+\n+    public void clickMenuHeaderLink(String tabHeader) {\n+        driver.findElement(By.xpath(String.format(menuWomenLink, tabHeader))).click();\n+    }\n+\n+    public void clickProductName(String productNameItem) {\n+        driver.findElement(By.xpath(String.format(productName, productNameItem))).click();\n+    }\n+\n+    public void fillInEmailAndClickCreateAccountBtn(String emailAddress) {\n+        emailAddressFieldInput.sendKeys(emailAddress);\n+        createAnAccountButton.click();\n+    }\n+\n+    public void clickSignOutBtnOnMyAccPage() {\n+        signOutBtn.click();\n+    }\n+\n+    public boolean isSignInHeaderButtonShown() {\n+        return signInHeaderButton.isDisplayed();\n+    }\n+\n+    public void waitForMyAccountPageOpened() {\n+        wait.until(ExpectedConditions.visibilityOf(myAccountTextLabel));\n+    }\n+\n+    public void fillInEmailAndClickSignInBtn(String emailAddress, String password) {\n+        emailFieldSignIn.sendKeys(emailAddress);\n+        passwordFieldSignIn.sendKeys(password);\n+        signInButton.click();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "79d96bc9613f646100dc55a99064cf0089d00ab2",
    "filename": "src/main/java/pages/MainProductsPage.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/MainProductsPage.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/MainProductsPage.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/main/java/pages/MainProductsPage.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -0,0 +1,47 @@\n+package pages;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebDriver;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+import org.openqa.selenium.support.ui.ExpectedConditions;\n+\n+public class MainProductsPage extends HeaderPage {\n+\n+    @FindBy(xpath = \"//*[@id='email_create']\")\n+    WebElement emailAddressFieldInput;\n+\n+    @FindBy(xpath = \"//*[@id='SubmitCreate']\")\n+    WebElement createAnAccountButton;\n+\n+    @FindBy(xpath = \"//*[@class='cross']\")\n+    WebElement cartStorePageLabel;\n+\n+    @FindBy(xpath = \"//*[@class='icon-ok']\")\n+    WebElement tickProductAddedToCartLabel;\n+\n+    @FindBy(xpath = \"//*[@id='add_to_cart']/button/span\")\n+    WebElement addToCartButton;\n+\n+    String productNameOnMainPageText = \"//*[@id='homefeatured']//self::*[contains(text(),'%s')]\";\n+\n+    public MainProductsPage(WebDriver driver) {\n+        super(driver);\n+    }\n+\n+    public void waitForPageOpened() {\n+        wait.until(ExpectedConditions.visibilityOf(cartStorePageLabel));\n+    }\n+\n+    public void findProductNameOnMainPage(String productNameItem) {\n+        driver.findElement(By.xpath(String.format(productNameOnMainPageText, productNameItem))).click();\n+    }\n+\n+    public void clickAddToCartButton() {\n+        addToCartButton.click();\n+    }\n+\n+    public boolean isTickProductAddedToCartPageOpened() {\n+        return tickProductAddedToCartLabel.isDisplayed();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "1b65afb71fc8682189fe2271eafcf514e4fe254d",
    "filename": "src/main/java/pages/MyAccountPage.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/MyAccountPage.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/MyAccountPage.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/main/java/pages/MyAccountPage.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -0,0 +1,9 @@\n+package pages;\n+\n+import org.openqa.selenium.WebDriver;\n+\n+public class MyAccountPage extends HeaderPage {\n+    public MyAccountPage(WebDriver driver) {\n+        super(driver);\n+    }\n+}"
  },
  {
    "sha": "97f6c8e5afd07cf8430d25a03c55c2de819169a6",
    "filename": "src/main/java/pages/SignInPage.java",
    "status": "modified",
    "additions": 12,
    "deletions": 7,
    "changes": 19,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/SignInPage.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/SignInPage.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/main/java/pages/SignInPage.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -4,10 +4,7 @@\n import org.openqa.selenium.WebElement;\n import org.openqa.selenium.support.FindBy;\n \n-public class SignInPage extends BasePage {\n-    public SignInPage(WebDriver driver) {\n-        super(driver);\n-    }\n+public class SignInPage extends HeaderPage {\n \n     @FindBy(xpath = \"//*[@id='email_create']\")\n     WebElement emailAddressFieldInput;\n@@ -21,9 +18,17 @@ public SignInPage(WebDriver driver) {\n     @FindBy(xpath = \"//*[@id='create_account_error']//ancestor::*[contains(text(),'Invalid email address.')]\")\n     WebElement errorWrongEmailAddressInField;\n \n-    @Override\n-    void waitForPageOpened() {\n-        //TODO: Implement this method\n+    @FindBy(xpath = \"//*[@id='email']\")\n+    WebElement emailFieldSignIn;\n+\n+    @FindBy(xpath = \"//*[@id='passwd']\")\n+    WebElement passwordFieldSignIn;\n+\n+    @FindBy(xpath = \"//*[@id='SubmitLogin']\")\n+    WebElement signInButton;\n+\n+    public SignInPage(WebDriver driver) {\n+        super(driver);\n     }\n \n     public void fillInEmailAndClickCreateAccountBtn(String emailAddress) {"
  },
  {
    "sha": "2ce4ef5176f19ea3d1c7a801ea2eba68a85009a5",
    "filename": "src/main/java/pages/YourShoppingCartPage.java",
    "status": "added",
    "additions": 139,
    "deletions": 0,
    "changes": 139,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/YourShoppingCartPage.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/main/java/pages/YourShoppingCartPage.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/main/java/pages/YourShoppingCartPage.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -0,0 +1,139 @@\n+package pages;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebDriver;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+import org.openqa.selenium.support.ui.ExpectedConditions;\n+\n+public class YourShoppingCartPage extends HeaderPage {\n+\n+    @FindBy(xpath = \"//*[@id='email']\")\n+    WebElement emailFieldSignIn;\n+\n+    @FindBy(xpath = \"//*[@id='passwd']\")\n+    WebElement passwordFieldSignIn;\n+\n+    @FindBy(xpath = \"//*[@id='SubmitLogin']\")\n+    WebElement signInButton;\n+\n+    @FindBy(xpath = \"//*[@id='add_to_cart']/button/span\")\n+    WebElement addToCartButton;\n+\n+    @FindBy(xpath = \"//*[@class='icon-plus']\")\n+    WebElement increaseTheQuantityProductsButton;\n+\n+    @FindBy(xpath = \"//*[@id='cart_title']//self::*[contains(text(),'Shopping-cart summary')]\")\n+    WebElement myCartPageWithProductsLabel;\n+\n+    @FindBy(xpath = \"//*[@id='center_column']//ancestor::*[contains(text(),'Your shopping cart is empty.')]\")\n+    WebElement shoppingCartIsEmptyText;\n+\n+    @FindBy(xpath = \"//*[@class='ajax_cart_no_product']\")\n+    WebElement shoppingCartIsEmptyHeaderText;\n+\n+    @FindBy(xpath = \"//*[@id='layer_cart']//self::*[contains(text(),'Proceed to checkout')]\")\n+    WebElement proceedToCheckoutButton;\n+\n+    @FindBy(xpath = \"//*[@id='center_column']//self::*[contains(text(),'Proceed to checkout')]\")\n+    WebElement proceedToCheckoutOnShoppingCartSummaryButton;\n+\n+    @FindBy(xpath = \"//*[@id='cgv']\")\n+    WebElement iAgreeCheckBox;\n+\n+    @FindBy(xpath = \"//*[@class='bankwire']\")\n+    WebElement payBankWire;\n+\n+    @FindBy(xpath = \"//*[@id='cart_navigation']//ancestor::*[contains(text(),'I confirm my order')]\")\n+    WebElement paymentEndBtnIConf;\n+\n+    @FindBy(xpath = \"//*[@class='cheque-indent']//ancestor::*[contains(text(),'Your order on My Store is complete.')]\")\n+    WebElement orderIsCompleteText;\n+\n+    @FindBy(xpath = \"//*[@id='center_column']//ancestor::*[contains(text(),'My account')]\")\n+    WebElement myAccountPageLabel;\n+\n+    String productNameOnPageText = \"//*[@id='homefeatured']//self::*[contains(text(),'%s')]\";\n+\n+    String trashButton = \"//*[@class='cart_quantity_delete']\";\n+\n+    String quantityProductsOnCartPage = \"//*[@class='cart_quantity_input form-control grey']\";\n+\n+    String totalPriceSomeItemsProduct = \"//*[@class='cart_total']\";\n+\n+    public YourShoppingCartPage(WebDriver driver) {\n+        super(driver);\n+    }\n+\n+    public void fillInEmailAndClickSignInBtn(String emailAddress, String password) {\n+        emailFieldSignIn.sendKeys(emailAddress);\n+        passwordFieldSignIn.sendKeys(password);\n+        signInButton.click();\n+    }\n+\n+    public void findProductNameOnPage(String productNameItem) {\n+        driver.findElement(By.xpath(String.format(productNameOnPageText, productNameItem))).click();\n+    }\n+\n+    public void increaseProductsQuantity() {\n+        increaseTheQuantityProductsButton.click();\n+        addToCartButton.click();\n+    }\n+\n+    public void checkedTabShipping() {\n+        iAgreeCheckBox.click();\n+        proceedToCheckoutOnShoppingCartSummaryButton.click();\n+    }\n+\n+    public void clickProceedToCheckoutButton() {\n+        proceedToCheckoutButton.click();\n+    }\n+\n+    public void goToNextPage() {\n+        proceedToCheckoutOnShoppingCartSummaryButton.click();\n+    }\n+\n+    public void clickBankWireBtn() {\n+        payBankWire.click();\n+    }\n+\n+    public void clickAddToCartButton() {\n+        addToCartButton.click();\n+    }\n+\n+    public void clickTrashButton(String productNameItem) {\n+        driver.findElement(By.xpath(String.format(trashButton, productNameItem))).click();\n+    }\n+\n+    public void clickPaymentBtn() {\n+        paymentEndBtnIConf.click();\n+    }\n+\n+    public String getProductsQuantityOnMyCartPage(String productNameItem) {\n+        return driver.findElement(By.xpath(String.format(quantityProductsOnCartPage, productNameItem))).getAttribute(\"value\");\n+    }\n+\n+    public String getTotalPriceProducts(String productNameItem) {\n+        return driver.findElement(By.xpath(String.format(totalPriceSomeItemsProduct, productNameItem))).getText();\n+    }\n+\n+    public String getShoppingCartIsEmptyText() {\n+        return shoppingCartIsEmptyText.getText();\n+    }\n+\n+    public String getShoppingCartIsEmptyHeaderText() {\n+        return shoppingCartIsEmptyHeaderText.getText();\n+    }\n+\n+    public void waitForMyAccountPageOpened() {\n+        wait.until(ExpectedConditions.visibilityOf(myAccountPageLabel));\n+    }\n+\n+    public void waitForMyCartPageIsOpened() {\n+        wait.until(ExpectedConditions.visibilityOf(myCartPageWithProductsLabel));\n+    }\n+\n+    public boolean isOrderIsCompleteTextDisplayed() {\n+        return orderIsCompleteText.isDisplayed();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f5d649ab175fb5d771cd7c19dbcd9b2153c90e38",
    "filename": "src/test/java/test_data/TestConstants.java",
    "status": "modified",
    "additions": 21,
    "deletions": 3,
    "changes": 24,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/test_data/TestConstants.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/test_data/TestConstants.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/test/java/test_data/TestConstants.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -1,10 +1,28 @@\n package test_data;\n \n-\n public interface TestConstants {\n-    String EMAIL_ADDRESS = \"a.ivanov.customer@mail.ru\";\n+    String NOT_REGISTERED_EMAIL_ADDRESS = \"din.ivanov.customer@mail.ru\";\n+    String NEW_NOT_REGISTERED_EMAIL = \"chdrome.pratt.customer@mail.ru\";\n+    String REGISTERED_EMAIL_ADDRESS = \"sss.ivanov.customer@mail.ru\";\n     String EMPTY_EMAIL_ADDRESS = \"\";\n-    String PASSWORD = \"rfvtgb123yhn\";\n     String WRONG_EMAIL_ADDRESS = \"ivanov\";\n+    String FIELD_PASSWORD = \"rfvtgb123\";\n+    String FIELD_ADDRESS_COMPANY = \"Dzerzhinsky Avenue, 57; Flo Inc.\";\n+    String FIELD_NAME_CITY = \"Minsk\";\n+    String FIELD_ZIPCODE = \"22038\";\n+    String FIELD_MOB_PHONE = \"+375259424336\";\n+    String FIELD_YOUR_FIRSTNAME = \"Anton\";\n+    String FIELD_YOUR_FIRSTNAME_COMPANY = \"Anton\";\n+    String EMPTY_FIELD_FIRST_NAME = \"\";\n+    String FIELD_YOUR_LASTNAME = \"Ivanov\";\n+    String FIELD_YOUR_LASTNAME_COMPANY = \"Ivanov\";\n+    String FIELD_COMPANY_ASSIGN_NAME = \"UVR Shipping\";\n+    String SHORT_ZIPCODE = \"12\";\n     String WRONG_EMAIL_ADDRESS_MESSAGE = \"Invalid email address.\";\n+    String EXPECTED_RESULT_EMPTY_FIELD_FIRSTNAME = \"firstname\";\n+    String EXPECTED_RESULT_NOT_LONG_PASSWORD = \"The Zip/Postal code you've entered is invalid. It must follow this format: 00000\";\n+    String EXPECTED_RESULT_QUANTITY_PRODUCTS = \"2\";\n+    String EXPECTED_RESULT_TOTAL_PRICE_SOME_ITEMS = \"$54.00\";\n+    String EXPECTED_RESULT_EMPTY_SHPCART_TEXT = \"Your shopping cart is empty.\";\n+    String EXPECTED_RESULT_EMPTY_SHPCART_HEADER_TEXT = \"(empty)\";\n }"
  },
  {
    "sha": "775bb576ed1f6e3e9c8536fab3bcfd27c38c538e",
    "filename": "src/test/java/tests/BaseTest.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/BaseTest.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/BaseTest.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/test/java/tests/BaseTest.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -6,16 +6,21 @@\n import org.openqa.selenium.chrome.ChromeOptions;\n import org.testng.annotations.AfterMethod;\n import org.testng.annotations.BeforeMethod;\n-import pages.CreateAnAccountPage;\n-import pages.SignInPage;\n+import org.testng.annotations.Listeners;\n+import pages.*;\n import test_data.TestConstants;\n \n import java.util.concurrent.TimeUnit;\n \n+@Listeners(TestListener.class)\n public class BaseTest implements TestConstants {\n     WebDriver driver;\n     SignInPage signInPage;\n     CreateAnAccountPage createAnAccountPage;\n+    MyAccountPage myAccountPage;\n+    MainProductsPage mainProductsPage;\n+    YourShoppingCartPage yourShoppingCartPage;\n+    HeaderPage headerPage;\n \n     @BeforeMethod\n     public void initTest() {\n@@ -35,5 +40,9 @@ public void endTest() {\n     public void initPage() {\n         signInPage = new SignInPage(driver);\n         createAnAccountPage = new CreateAnAccountPage(driver);\n+        myAccountPage = new MyAccountPage(driver);\n+        mainProductsPage = new MainProductsPage(driver);\n+        yourShoppingCartPage = new YourShoppingCartPage(driver);\n+        headerPage = new HeaderPage(driver);\n     }\n }"
  },
  {
    "sha": "5a0937fb60dd4a5e4434737cdaea58307f565994",
    "filename": "src/test/java/tests/CreateAnAccountTests.java",
    "status": "modified",
    "additions": 45,
    "deletions": 1,
    "changes": 46,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/CreateAnAccountTests.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/CreateAnAccountTests.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/test/java/tests/CreateAnAccountTests.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -1,5 +1,49 @@\n package tests;\n \n-public class CreateAnAccountTests extends BaseTest{\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n \n+import static constants.CommonConstants.SIGN_IN_URL;\n+\n+public class CreateAnAccountTests extends BaseTest {\n+\n+    @Test(groups = \"Katia\", description = \"Empty email address verification.\", priority = 3)\n+    public void firstnameFieldIsEmptyTest() {\n+        createAnAccountPage.openPage(SIGN_IN_URL);\n+        createAnAccountPage.fillInEmailAndClickCreateAccountBtn(NOT_REGISTERED_EMAIL_ADDRESS);\n+        createAnAccountPage.inputTextInFormFirstNameAndClickRegister(EMPTY_FIELD_FIRST_NAME);\n+        Assert.assertEquals(createAnAccountPage.getEmptyFirstnameText(), EXPECTED_RESULT_EMPTY_FIELD_FIRSTNAME);\n+    }\n+\n+    @Test(groups = \"Katia\", description = \"Input short-zipcode verification.\", priority = 3)\n+    public void inputLongPasswordTest() {\n+        createAnAccountPage.openPage(SIGN_IN_URL);\n+        createAnAccountPage.fillInEmailAndClickCreateAccountBtn(NOT_REGISTERED_EMAIL_ADDRESS);\n+        createAnAccountPage.inputShortPswrdInField(SHORT_ZIPCODE);\n+        Assert.assertEquals(createAnAccountPage.getShortPswrdInField(), EXPECTED_RESULT_NOT_LONG_PASSWORD);\n+    }\n+\n+    @Test(groups = \"Katia\", description = \"Create an account.The required form fields are filled. Registration is complete.\",\n+            priority = 1, dataProvider = \"Input data for the 'create an account' page.\", dataProviderClass = TestDataProviders.class)\n+    public void createAnAccountTest(String emailAddress, String yourFirstName, String yourLastName, String password,\n+                                    String firstNameCompany, String lastNameCompany, String addressCompany,\n+                                    String city, String state, String zipCode, String country, String phoneNumber, String assignCompanyName) {\n+        createAnAccountPage.openPage(SIGN_IN_URL);\n+        createAnAccountPage.fillInEmailAndClickCreateAccountBtn(emailAddress);\n+        createAnAccountPage.inputTextInRequiredFieldsFormAndReg(yourFirstName,\n+                yourLastName,\n+                password,\n+                firstNameCompany,\n+                lastNameCompany,\n+                addressCompany,\n+                city,\n+                zipCode,\n+                phoneNumber,\n+                assignCompanyName\n+        );\n+        createAnAccountPage.chooseState(state);\n+        createAnAccountPage.chooseCountry(country);\n+        createAnAccountPage.clickRegisterButton();\n+        Assert.assertTrue(createAnAccountPage.isMainStorePageOpened());\n+    }\n }"
  },
  {
    "sha": "9a93de639cdefcd16c23a4210e0706eb3b436823",
    "filename": "src/test/java/tests/HeaderTest.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/HeaderTest.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/HeaderTest.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/test/java/tests/HeaderTest.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -0,0 +1,18 @@\n+package tests;\n+\n+import junit.framework.Assert;\n+import org.testng.annotations.Test;\n+\n+import static constants.CommonConstants.SIGN_IN_URL;\n+\n+public class HeaderTest extends BaseTest{\n+\n+    @Test(groups = \"Katia\", description = \"Sign out of my account\")\n+    public void signOutTest() {\n+        headerPage.openPage(SIGN_IN_URL);\n+        headerPage.fillInEmailAndClickSignInBtn(REGISTERED_EMAIL_ADDRESS, FIELD_PASSWORD);\n+        headerPage.waitForMyAccountPageOpened();\n+        headerPage.clickSignOutBtnOnMyAccPage();\n+        Assert.assertTrue(myAccountPage.isSignInHeaderButtonShown());\n+    }\n+}"
  },
  {
    "sha": "f4a0bfa46deed7b7fe0778f02bdd5d8d20cc211b",
    "filename": "src/test/java/tests/MainProductsTests.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/MainProductsTests.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/MainProductsTests.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/test/java/tests/MainProductsTests.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -0,0 +1,18 @@\n+package tests;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import static constants.CommonConstants.AUTOMATION_PRACTICE_SHOP_URL;\n+\n+public class MainProductsTests extends BaseTest{\n+\n+    @Test(groups = \"Katia\", description = \"Add one product. Click 'Add to cart' button from main page on the cart page.\")\n+    public void addOneProductCartTest() {\n+        mainProductsPage.openPage(AUTOMATION_PRACTICE_SHOP_URL);\n+        mainProductsPage.findProductNameOnMainPage(\"Blouse\");\n+        mainProductsPage.clickAddToCartButton();\n+        mainProductsPage.waitForPageOpened();\n+        Assert.assertTrue(mainProductsPage.isTickProductAddedToCartPageOpened());\n+    }\n+}"
  },
  {
    "sha": "8a224dabca7baebe0b79b240f088061567902760",
    "filename": "src/test/java/tests/MyAccountTests.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/MyAccountTests.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/MyAccountTests.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/test/java/tests/MyAccountTests.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -0,0 +1,10 @@\n+package tests;\n+\n+import junit.framework.Assert;\n+import org.testng.annotations.Test;\n+\n+import static constants.CommonConstants.SIGN_IN_URL;\n+\n+public class MyAccountTests extends BaseTest{\n+\n+}"
  },
  {
    "sha": "5af1ce546c2ec685a5da58c0269923c993dca662",
    "filename": "src/test/java/tests/SignInTests.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/SignInTests.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/SignInTests.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/test/java/tests/SignInTests.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -7,21 +7,21 @@\n \n public class SignInTests extends BaseTest {\n \n-    @Test(groups = \"Katia\")\n+    @Test(groups = \"Katia\", description = \"When inputted right email. After that, We went to Create an account page.\", priority = 1)\n     public void createAnAccountTest() {\n         signInPage.openPage(SIGN_IN_URL);\n-        signInPage.fillInEmailAndClickCreateAccountBtn(EMAIL_ADDRESS);\n+        signInPage.fillInEmailAndClickCreateAccountBtn(NOT_REGISTERED_EMAIL_ADDRESS);\n         Assert.assertTrue(signInPage.isPageOpened());\n     }\n \n-    @Test(groups = \"Katia\")\n+    @Test(groups = \"Katia\", description = \"When field email is empty.\", priority = 3)\n     public void emptyEmailFieldTest() {\n         signInPage.openPage(SIGN_IN_URL);\n         signInPage.fillInEmailAndClickCreateAccountBtn(EMPTY_EMAIL_ADDRESS);\n         Assert.assertEquals(signInPage.getEmailAddressText(), WRONG_EMAIL_ADDRESS_MESSAGE);\n     }\n \n-    @Test(groups = \"Katia\")\n+    @Test(groups = \"Katia\", description = \"When inputted wrong email.\", priority = 2)\n     public void wrongEmailFieldTest() {\n         signInPage.openPage(SIGN_IN_URL);\n         signInPage.fillInEmailAndClickCreateAccountBtn(WRONG_EMAIL_ADDRESS);"
  },
  {
    "sha": "074e826c14c70d04cc514ae8136fe6f5f0cb99e4",
    "filename": "src/test/java/tests/TestDataProviders.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/TestDataProviders.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/TestDataProviders.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/test/java/tests/TestDataProviders.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -0,0 +1,15 @@\n+package tests;\n+\n+import org.testng.annotations.DataProvider;\n+\n+public class TestDataProviders {\n+\n+    @DataProvider(name = \"Input data for the 'create an account' page.\")\n+    public static Object[][] inputForAllRequiredFields() {\n+        return new Object[][]{\n+                {\"e.chernick@mail.ru\", \"Evgenii\", \"Che\", \"12345\", \"Evgenii\", \"Chernikha\", \"32th Blue Str.\", \"Minsk\", \"Arizona\", \"22335\", \"United State\", \"375259874565\", \"MSI Company\"},\n+                {\"o.dziraben@mail.ru\",\"Oleg\", \"Dzi\", \"25333\", \"Oleg\", \"Dziraben\", \"16th Red Str.\", \"Fanipol\", \"Arizona\", \"22365\", \"United State\", \"375259874365\", \"HP Inc.\"},\n+                {\"s.gur@mail.ru\", \"Sasha\", \"Gur\", \"124533\", \"Sasha\", \"Gursky\", \"8th Grey Str.\", \"Borovlyany\", \"Arizona\",\"22095\", \"United State\", \"375259457561\", \"UV Robotic Inc.\"},\n+        };\n+    }\n+}"
  },
  {
    "sha": "16ccad5c5cd0f69140cec9fdbe22a47d44ef78bf",
    "filename": "src/test/java/tests/TestListener.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/TestListener.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/TestListener.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/test/java/tests/TestListener.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -0,0 +1,35 @@\n+package tests;\n+\n+import org.testng.ITestListener;\n+import org.testng.ITestResult;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+public class TestListener implements ITestListener {\n+\n+    @Override\n+    public void onTestStart(ITestResult iTestResult) {\n+        System.out.println(\"---------------STARTING TEST %s ---------------\");\n+    }\n+\n+    @Override\n+    public void onTestSuccess(ITestResult iTestResult) {\n+        System.out.println(\"---------------FINISHED TEST %%s DURATION: %%ss ---------------\" + getExecutionTime(iTestResult));\n+    }\n+\n+    @Override\n+    public void onTestFailure(ITestResult iTestResult) {\n+        System.out.println(\"---------------FAILED TEST %s DURATION: %ss ---------------\" + getExecutionTime(iTestResult));\n+    }\n+\n+    @Override\n+    public void onTestSkipped(ITestResult iTestResult) {\n+        System.out.println(String.format(\"---------------SKIPPING TEST %s ---------------\"));\n+    }\n+\n+    private long getExecutionTime(ITestResult iTestResult) {\n+        return TimeUnit.MILLISECONDS.toSeconds(iTestResult.getEndMillis() - iTestResult.getStartMillis());\n+    }\n+\n+\n+}"
  },
  {
    "sha": "94faabea76281063e16f6a7563cfe11f8898345b",
    "filename": "src/test/java/tests/YourShoppingCartTests.java",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/YourShoppingCartTests.java",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/java/tests/YourShoppingCartTests.java",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/test/java/tests/YourShoppingCartTests.java?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -0,0 +1,52 @@\n+package tests;\n+\n+import org.testng.Assert;\n+import org.testng.annotations.Test;\n+\n+import static constants.CommonConstants.AUTOMATION_PRACTICE_SHOP_URL;\n+import static constants.CommonConstants.SIGN_IN_URL;\n+\n+public class YourShoppingCartTests extends BaseTest{\n+\n+    @Test(groups = \"Katia\", description = \"Add multiple products to cart.\", priority = 1)\n+    public void findMultipleProductsToCart() {\n+        yourShoppingCartPage.openPage(AUTOMATION_PRACTICE_SHOP_URL);\n+        yourShoppingCartPage.findProductNameOnPage(\"Blouse\");\n+        yourShoppingCartPage.increaseProductsQuantity();\n+        yourShoppingCartPage.clickProceedToCheckoutButton();\n+        yourShoppingCartPage.waitForMyCartPageIsOpened();\n+        Assert.assertEquals(yourShoppingCartPage.getProductsQuantityOnMyCartPage(\"Blouse\"), EXPECTED_RESULT_QUANTITY_PRODUCTS);\n+        Assert.assertEquals(yourShoppingCartPage.getTotalPriceProducts(\"Blouse\"), EXPECTED_RESULT_TOTAL_PRICE_SOME_ITEMS);\n+    }\n+\n+    @Test(groups = \"Katia\",\n+            description = \"Payment. Tick a 'I agree to terms'. Pay by bank wire. Button 'I confirm my order'\",\n+            priority = 2)\n+    public void makeEntirePaymentCycle() {\n+        yourShoppingCartPage.openPage(SIGN_IN_URL);\n+        yourShoppingCartPage.fillInEmailAndClickSignInBtn(REGISTERED_EMAIL_ADDRESS, FIELD_PASSWORD);\n+        yourShoppingCartPage.waitForMyAccountPageOpened();\n+        yourShoppingCartPage.clickMenuHeaderLink(\"Women\");\n+        yourShoppingCartPage.clickProductName(\"Printed Chiffon Dress\");\n+        yourShoppingCartPage.clickAddToCartButton();\n+        yourShoppingCartPage.clickProceedToCheckoutButton();\n+        yourShoppingCartPage.goToNextPage();\n+        yourShoppingCartPage.goToNextPage();\n+        yourShoppingCartPage.checkedTabShipping();\n+        yourShoppingCartPage.clickBankWireBtn();\n+        yourShoppingCartPage.clickPaymentBtn();\n+        Assert.assertTrue(yourShoppingCartPage.isOrderIsCompleteTextDisplayed());\n+    }\n+\n+    @Test(groups = \"Katia\", description = \"Checking product removal from the cart.\", priority = 3)\n+    public void deletingProductFromCart() {\n+        yourShoppingCartPage.openPage(AUTOMATION_PRACTICE_SHOP_URL);\n+        yourShoppingCartPage.findProductNameOnPage(\"Blouse\");\n+        yourShoppingCartPage.clickAddToCartButton();\n+        yourShoppingCartPage.clickProceedToCheckoutButton();\n+        yourShoppingCartPage.clickTrashButton(\"Blouse\");\n+        yourShoppingCartPage.waitForMyCartPageIsOpened();\n+        Assert.assertEquals(yourShoppingCartPage.getShoppingCartIsEmptyHeaderText(), EXPECTED_RESULT_EMPTY_SHPCART_HEADER_TEXT);\n+        Assert.assertEquals(yourShoppingCartPage.getShoppingCartIsEmptyText(), EXPECTED_RESULT_EMPTY_SHPCART_TEXT);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "45418b390b23a7617eaeb2d17a4125e50d8ee308",
    "filename": "src/test/resources/test_suite.xml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/blob/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/resources/test_suite.xml",
    "raw_url": "https://github.com/Katerina-Tsu/AutomationPracticeShop2/raw/9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7/src/test/resources/test_suite.xml",
    "contents_url": "https://api.github.com/repos/Katerina-Tsu/AutomationPracticeShop2/contents/src/test/resources/test_suite.xml?ref=9f09fd7f2cc2a50d7b6a67b9fdc3fcd77795b3f7",
    "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE suite SYSTEM \"http://testng.org/testng-1.0.dtd\">\n+<suite name=\"Regression Test\" parallel=\"classes\" thread-count=\"2\">\n+    <test name=\"test 1\">\n+        <classes>\n+            <class name=\"tests.SignInTests\" />\n+            <class name=\"tests.YourShoppingCartTests\" />\n+        </classes>\n+    </test> <!-- Test -->\n+    <test name=\"test 2\">\n+        <classes>\n+            <class name=\"tests.HeaderTest\" />\n+            <class name=\"tests.MainProductsTests\" />\n+        </classes>\n+    </test> <!-- Test -->\n+</suite>\n\\ No newline at end of file"
  }
]
