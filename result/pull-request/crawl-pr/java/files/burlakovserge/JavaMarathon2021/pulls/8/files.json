[
  {
    "sha": "2cf8a73762cb4321805a83673e9fe33373b41f01",
    "filename": "src/main/java/day0/Task1.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day0/Task1.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day0/Task1.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day0/Task1.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -2,6 +2,8 @@\n \n public class Task1 {\n     public static void main(String[] args) {\n+\n+        System.out.println(\"Hello world!\");\n         \n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "96a921d4eb31ba466758d0d6c6c0e969c04c679f",
    "filename": "src/main/java/day1/Task1.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task1.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task1.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day1/Task1.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -2,6 +2,11 @@\n \n public class Task1 {\n     public static void main(String[] args) {\n+        int i = 0;\n+        while (i < 10){\n+            System.out.print(\"JAVA \");\n+            i++;\n+        }\n \n     }\n }"
  },
  {
    "sha": "96a34a3b5b79f17f3164c21fc050bc28aac7b872",
    "filename": "src/main/java/day1/Task2.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task2.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task2.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day1/Task2.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -2,6 +2,9 @@\n \n public class Task2 {\n     public static void main(String[] args) {\n+        for (int i = 0; i <10; i++){\n+            System.out.print(\"JAVA \");\n+        }\n \n     }\n }"
  },
  {
    "sha": "bf2b6d8bd8cb32667ae40d872b460d3c928affc6",
    "filename": "src/main/java/day1/Task3.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task3.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task3.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day1/Task3.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -2,6 +2,9 @@\n \n public class Task3 {\n     public static void main(String[] args) {\n+        for (int i = 0; i < 10; i++){\n+            System.out.println(\"JAVA\");\n+        }\n \n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "b80d306609f147ea4050f818c848ecdfb681a2b3",
    "filename": "src/main/java/day1/Task4.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task4.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task4.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day1/Task4.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -2,6 +2,12 @@\n \n public class Task4 {\n     public static void main(String[] args) {\n+        int year = 1980;\n+        while (year <= 2020){\n+            System.out.println(\"Олимпиада \" +  year + \" года\");\n+            year += 4;\n+\n+        }\n \n     }\n }"
  },
  {
    "sha": "612800a5332835bc25b91f8a5b5b67433694624a",
    "filename": "src/main/java/day1/Task5.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task5.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task5.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day1/Task5.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -3,5 +3,11 @@\n public class Task5 {\n     public static void main(String[] args) {\n \n+        for (int year = 1980; year <= 2020; year +=4){\n+\n+            System.out.println(\"Олимпиада \" + year + \" года\");\n+\n+        }\n+\n     }\n }"
  },
  {
    "sha": "1c44001a8f2a059c6d33165ae06ac30a4106f97a",
    "filename": "src/main/java/day1/Task6.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task6.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day1/Task6.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day1/Task6.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -2,6 +2,10 @@\n \n public class Task6 {\n     public static void main(String[] args) {\n+        int k = 5;\n+        for (int i = 1; i < 10; i++){\n+            System.out.println(k * i);\n+        }\n \n     }\n }"
  },
  {
    "sha": "2ecb690b811d53da05c3434e77849a8a0b0eca3a",
    "filename": "src/main/java/day2/Task1.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day2/Task1.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day2/Task1.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day2/Task1.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -1,7 +1,19 @@\n package day2;\n \n+import java.awt.desktop.ScreenSleepEvent;\n+import java.util.Scanner;\n+\n public class Task1 {\n     public static void main(String[] args) {\n \n+        Scanner scan = new Scanner(System.in);\n+        int count = scan.nextInt();\n+\n+        if (count < 1) System.out.println(\"Ошибка ввода\");\n+        else {\n+            if (count >= 1 && count <= 4) System.out.println(\"Малоэтажный дом\");\n+            if (count >= 5 && count <= 8) System.out.println(\"Среднеэтажный дом\");\n+            if (count >= 9) System.out.println(\"Многоэтажный дом\");\n+        }\n     }\n }"
  },
  {
    "sha": "d649399efe9bfcb82b831d525525549b6d5745b4",
    "filename": "src/main/java/day2/Task2.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day2/Task2.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day2/Task2.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day2/Task2.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -1,7 +1,20 @@\n package day2;\n \n+import java.util.Scanner;\n+\n public class Task2 {\n     public static void main(String[] args) {\n \n+        Scanner scan = new Scanner(System.in);\n+        int a = scan.nextInt() + 1;\n+        int b = scan.nextInt();\n+\n+        if (a >= b) System.out.println(\"Некорректный ввод\");\n+        else {\n+            for (; a < b; a++){\n+                if (((a % 5) == 0) && ((a % 10) != 0)) System.out.println(a);\n+             }\n+        }\n+\n     }\n }"
  },
  {
    "sha": "285793e42a7a737277b2198aa32177671a069e8f",
    "filename": "src/main/java/day2/Task3.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day2/Task3.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day2/Task3.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day2/Task3.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -1,7 +1,21 @@\n package day2;\n \n+import java.util.Scanner;\n+\n public class Task3 {\n     public static void main(String[] args) {\n \n+        Scanner scan = new Scanner(System.in);\n+        int a = scan.nextInt() + 1;\n+        int b = scan.nextInt();\n+\n+        if (a >= b) System.out.println(\"Некорректный ввод\");\n+        else {\n+            while (a < b) {\n+                if (((a % 5) == 0) && ((a % 10) != 0)) System.out.println(a);\n+                a++;\n+            }\n+        }\n+\n     }\n }"
  },
  {
    "sha": "e4751be45a6b853df762c69185e10be08a3b9d93",
    "filename": "src/main/java/day2/Task4.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day2/Task4.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day2/Task4.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day2/Task4.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -1,7 +1,18 @@\n package day2;\n \n+import java.util.Scanner;\n+\n public class Task4 {\n     public static void main(String[] args) {\n \n+        Scanner scan = new Scanner(System.in);\n+        Double x = scan.nextDouble();\n+\n+        if (x <= -3) System.out.println(420);\n+        else {\n+            if ((x < -3) && (x > 5))     System.out.println((x + 3) * (Math.pow(x, 2) - 2));\n+            if (x >= 5)                  System.out.println((x*x - 10) / (100 + 7));\n+        }\n+                    // Обошёлся без переменной y\n     }\n }"
  },
  {
    "sha": "59bb3f9e5c4e1a939e500c3d7012f5bd0135e30e",
    "filename": "src/main/java/day3/Task1.java",
    "status": "modified",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day3/Task1.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day3/Task1.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day3/Task1.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -1,7 +1,44 @@\n package day3;\n \n+import java.util.Scanner;\n+\n public class Task1 {\n     public static void main(String[] args) {\n \n+        Scanner scanner = new Scanner(System.in);\n+        String city = scanner.nextLine();\n+\n+      while (!city.equals(\"Stop\")) {\n+\n+          switch (city) {\n+              case \"Москва\":\n+              case \"Владивосток\":\n+              case \"Ростов\":\n+                  System.out.println(\"Россия\");\n+                  break;\n+\n+              case \"Рим\":\n+              case \"Милан\":\n+              case \"Турин\":\n+                  System.out.println(\"Италия\");\n+                  break;\n+\n+              case \"Ливерпуль\":\n+              case \"Манчестер\":\n+              case \"Лондон\":\n+                  System.out.println(\"Англия\");\n+                  break;\n+\n+              case \"Берлин\":\n+              case \"Мюнхен\":\n+              case \"Кёльн\":\n+                  System.out.println(\"Германия\");\n+                  break;\n+\n+              default:\n+                  System.out.println(\"Неизвестная страна\");\n+          }\n+      city = scanner.nextLine();\n+      }\n     }\n }"
  },
  {
    "sha": "2289e697312f18c4dd36124eb179e6c655b6d736",
    "filename": "src/main/java/day3/Task2.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day3/Task2.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day3/Task2.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day3/Task2.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -1,7 +1,19 @@\n package day3;\n \n+import java.util.Scanner;\n+\n public class Task2 {\n     public static void main(String[] args) {\n \n+        Scanner scanner = new Scanner(System.in);\n+        double dividend = scanner.nextDouble();\n+        double divider = scanner.nextDouble();\n+\n+        while (divider != 0){\n+            System.out.println(dividend / divider);\n+            dividend = scanner.nextDouble();\n+            divider = scanner.nextDouble();\n+        }\n+\n     }\n }"
  },
  {
    "sha": "1d372d387bb3d52a689248ba1eb03d78cc5a5533",
    "filename": "src/main/java/day3/Task3.java",
    "status": "modified",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day3/Task3.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day3/Task3.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day3/Task3.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -1,7 +1,27 @@\n package day3;\n \n+import java.util.Scanner;\n+\n public class Task3 {\n     public static void main(String[] args) {\n \n+        Scanner scanner = new Scanner(System.in);\n+        double dividend;\n+        double divider;\n+        int i = 0;\n+\n+        while (i < 5){\n+\n+            dividend = scanner.nextInt();\n+            divider = scanner.nextInt();\n+\n+            if (divider == 0) {\n+                    System.out.println(\"Деление на 0\");\n+                    i--;\n+                }\n+            if (divider != 0) System.out.println(dividend / divider);\n+\n+            i++;\n+        }\n     }\n }"
  },
  {
    "sha": "fc18eadcde74abcf5ad1aaeddb5ac74edf4ff510",
    "filename": "src/main/java/day4/Task1.java",
    "status": "modified",
    "additions": 27,
    "deletions": 1,
    "changes": 28,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day4/Task1.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day4/Task1.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day4/Task1.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -1,7 +1,33 @@\n-package day4;\n+package day4;           // Task1\n+\n+import java.util.Arrays;\n+import java.util.Random;\n+import java.util.Scanner;\n \n public class Task1 {\n     public static void main(String[] args) {\n \n+        Scanner scanner = new Scanner(System.in);\n+        Random random = new Random();\n+        int[] array = new int[scanner.nextInt()];\n+        int[] counter = new int[5];   //создаю массив счётчика для каждой формулы\n+\n+         for (int i = 0; i < array.length; i++){               // Одним циклом заполняю все ячейки матриц\n+            array[i] = random.nextInt(10);\n+            if (array[i] > 8) counter[0]++;\n+            if (array[i] == 1) counter[1]++;\n+            if (array[i] % 2 == 0 && array[i] != 0) counter[2]++; else counter[3]++;        // Использую else в качестве противоположности\n+            counter[4] = counter[4] + array[i];\n+        }\n+\n+        System.out.println(Arrays.toString(array));\n+        System.out.println(\"Информация о массиве:\");\n+        System.out.println(\"Длина массива: \" + array.length);\n+        System.out.println(\"Количество чисел больше 8: \" + counter[0]);\n+        System.out.println(\"Количество чисел равных 1: \" + counter[1]);\n+        System.out.println(\"Количество четных чисел: \" + counter[2]);\n+        System.out.println(\"Количество нечетных чисел: \" + counter[3]);\n+        System.out.println(\"Сумма всех элементов массива: \" + counter[4]);\n+\n     }\n }"
  },
  {
    "sha": "c0e06a3356b04822e3e0c20c2f1fb5a4ea6a56ba",
    "filename": "src/main/java/day4/Task2.java",
    "status": "modified",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day4/Task2.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day4/Task2.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day4/Task2.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -1,7 +1,45 @@\n package day4;\n \n+import java.util.Arrays;\n+import java.util.Random;\n+\n+/**\n+ * 2. Создать новый массив размера 100 и заполнить его случайными числами из диапазона от 0 до 10000.\n+ * Затем, используя цикл for each вывести в консоль:\n+ * наибольший элемент массива\n+ * наименьший элемент массива\n+ * количество элементов массива, оканчивающихся на 0\n+ * сумму элементов массива, оканчивающихся на 0\n+ *\n+ * Использовать сортировку запрещено.\n+ */\n+\n public class Task2 {\n     public static void main(String[] args) {\n+        Random random = new Random();\n+        int[] array = new int[100];\n+        int[] counter = new int[4];\n+\n+        for (int i = 0; i < array.length; i++){\n+            array[i] = random.nextInt(10000);\n+        }\n+\n+        System.out.println(Arrays.toString(array));\n+\n+        counter[0] = array[0];\n+        counter[1] = array[0];\n+        counter[2] = 0;\n+        counter[3] = 0;\n+        for(int mas2 : array){\n+            if (mas2 > counter[0]) counter[0] = mas2;\n+            if (mas2 < counter[1]) counter[1] = mas2;\n+            if (mas2 % 10 == 0) counter[2] = counter[2] + 1;\n+            if (mas2 % 10 == 0) counter[3] = counter[3] + mas2;\n+        }\n+        System.out.println(\"Наибольший элемент массива: \" + counter[0]);\n+        System.out.println(\"Наименьший элемент массива: \" + counter[1]);\n+        System.out.println(\"Количество элементов массива, оканчивающихся на 0: \" + counter[2]);\n+        System.out.println(\"Сумма элементов массива, оканчивающихся на 0: \" + counter[3]);\n \n     }\n }"
  },
  {
    "sha": "7c5e5c1420a3a5c17858c83c84d1633384d12ab0",
    "filename": "src/main/java/day4/Task3.java",
    "status": "modified",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day4/Task3.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day4/Task3.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day4/Task3.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -1,7 +1,44 @@\n package day4;\n \n+import java.util.Random;\n+\n+/**\n+ * 3. Заполнить двумерный массив (матрицу) случайными числами от 0 до 50.\n+ * Размер матрицы задать m=12, n=8 (m - размерность по строкам, n - размерность по колонкам).\n+ * В консоль вывести индекс строки, сумма чисел в которой максимальна. Если таких строк несколько, в\n+ * ывести индекс последней из них.\n+ *\n+ * Пример сгенерированной матрицы (для простоты m=3, n=5):\n+ *\n+ * 3 2 1 5 7 \t// сумма - 18\n+ * 1 2 5 6 2 \t// сумма - 16\n+ * 3 4 9 6 4\t// сумма - 26\n+ *\n+ * Ответ: 2 (индекс строки, сумма чисел в которой максимальна)\n+ */\n public class Task3 {\n     public static void main(String[] args) {\n \n+        Random r = new Random();\n+        int [][] matrice = new int[12][8];\n+        int count1 = 0, count2 = 0;\n+        int i, j, index = 0;\n+\n+        for (i = 0; i < matrice.length; i++) {\n+            for (j = 0; j < matrice[i].length; j++) {\n+               matrice[i][j] = r.nextInt(50);\n+               System.out.print(matrice[i][j] + \" \");\n+               count1 = count1 + matrice[i][j];\n+            }\n+            System.out.println(\"        \" + count1);\n+\n+            if (count2 < count1) {\n+                count2 = count1;\n+                index = i;\n+            }\n+            count1 = 0;\n+        }\n+        System.out.println(\"Индекс: \" + index);\n+\n     }\n }"
  },
  {
    "sha": "ece1076092b88de17214403ac27a63e38cde3582",
    "filename": "src/main/java/day4/Task4.java",
    "status": "modified",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/burlakovserge/JavaMarathon2021/blob/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day4/Task4.java",
    "raw_url": "https://github.com/burlakovserge/JavaMarathon2021/raw/4ef4a4df78831c7c9beeee303c8d106e868e0557/src/main/java/day4/Task4.java",
    "contents_url": "https://api.github.com/repos/burlakovserge/JavaMarathon2021/contents/src/main/java/day4/Task4.java?ref=4ef4a4df78831c7c9beeee303c8d106e868e0557",
    "patch": "@@ -1,7 +1,48 @@\n package day4;\n \n+import java.util.Arrays;\n+import java.util.Random;\n+\n+/**\n+ * 4. Создать новый массив размера 100 и заполнить его случайными числами из диапазона от 0 до 10000.\n+ * Найти максимум среди сумм трех соседних элементов.\n+ * Для найденной тройки с максимальной суммой выведите значение суммы и индекс первого элемента тройки.\n+ *\n+ * Пример:\n+ * *Для простоты пример показан на массиве размера 10\n+ *\n+ * [1, 456, 1025, 65, 954, 2789, 4, 8742, 1040, 3254]\n+ *\n+ * Тройка с максимальной суммой: [8742, 1040, 3254]\n+ *\n+ * Вывод в консоль:\n+ * 13036\n+ * 7\n+ *\n+ * *Пояснение. Первое число - сумма тройки [8742, 1040, 3254].\n+ * Второе число - индекс первого элемента тройки, то есть индекс числа 8742.\n+ */\n public class Task4 {\n     public static void main(String[] args) {\n \n+        Random r = new Random();\n+        int[] array = new int[100];\n+        int i;\n+        int count = 0;\n+        int[] sum = new int[100];\n+\n+        for (i = 0; i < array.length; i++) {\n+            array[i] = r.nextInt(10000);\n+        }\n+\n+        for (i = 0; i < array.length - 2; i++){\n+            sum[i] = array[i] + array[i + 1] + array[i + 2];\n+            if (sum[i] > sum[count]) {\n+                count = i;\n+            }\n+        }\n+\n+        System.out.println(\"Сумма тройки: \" + sum[count]);\n+        System.out.println(\"Индекс первого элемента тройки: \" + count);\n     }\n }"
  }
]
