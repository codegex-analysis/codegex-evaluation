[
  {
    "sha": "05521c328072e1b4a8187e00b7627e97048e7853",
    "filename": "Linkedlist/src/main/java/com/Linked/Linkedlist/LinkedList.java",
    "status": "modified",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/siddiq76/LinkedList/blob/9b4e8cebb21ab7e07bb798ef7ee8deb2cdbe3f3e/Linkedlist/src/main/java/com/Linked/Linkedlist/LinkedList.java",
    "raw_url": "https://github.com/siddiq76/LinkedList/raw/9b4e8cebb21ab7e07bb798ef7ee8deb2cdbe3f3e/Linkedlist/src/main/java/com/Linked/Linkedlist/LinkedList.java",
    "contents_url": "https://api.github.com/repos/siddiq76/LinkedList/contents/Linkedlist/src/main/java/com/Linked/Linkedlist/LinkedList.java?ref=9b4e8cebb21ab7e07bb798ef7ee8deb2cdbe3f3e",
    "patch": "@@ -167,9 +167,46 @@ public Node(T data) {\n \t\t\tsize--;\n \t\t}\n \t}\n+\t/**\n+\t * deletes the last node of the linked list\n+\t */\n+\tpublic <T> void popLast() {\n+\t\tif(head==null) {\n+\t\t\tSystem.out.println(\"The list is empty, no elements to remove\");\n+\t\t}\n+\t\telse if(size == 1) {\n+\t\t\thead = null;\n+\t\t\tsize--;\n+\t\t}\n+\t\telse {\n+\t\t\tNode t = head, prev = null;\n+\t\t\twhile(t.next != null) {\n+\t\t\t\tprev = t;\n+\t\t\t\tt = t.next;\n+\t\t\t}\n+\t\t\tprev.next = null;\n+\t\t\tsize--;\n+\t\t}\n+\t}\n+\t\n+\t/**\n+\t * @param data,the data which is searched for inside linked list\n+\t * @return, returns true if data present in linked list, else returns false\n+\t */\n+\tpublic <T> boolean search(T data) {\n+\t\tNode n = head;\n+\t\twhile( n != null) {\n+\t\t\tif(n.data == data)\n+\t\t\t\treturn true;\n+\t\t\tn = n.next;\n+\t\t}\n+\t\treturn false;\n+\t}\n \n \tpublic void addNodeAtIndex(int i, int val) {\n \t\t// TODO Auto-generated method stub\n \t\t\n \t}\n+\n+\t\n }\n\\ No newline at end of file"
  },
  {
    "sha": "f6e2e89305da0ce6481258dae2f12e07e5f71330",
    "filename": "Linkedlist/src/main/java/com/Linked/Linkedlist/MainClass.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/siddiq76/LinkedList/blob/9b4e8cebb21ab7e07bb798ef7ee8deb2cdbe3f3e/Linkedlist/src/main/java/com/Linked/Linkedlist/MainClass.java",
    "raw_url": "https://github.com/siddiq76/LinkedList/raw/9b4e8cebb21ab7e07bb798ef7ee8deb2cdbe3f3e/Linkedlist/src/main/java/com/Linked/Linkedlist/MainClass.java",
    "contents_url": "https://api.github.com/repos/siddiq76/LinkedList/contents/Linkedlist/src/main/java/com/Linked/Linkedlist/MainClass.java?ref=9b4e8cebb21ab7e07bb798ef7ee8deb2cdbe3f3e",
    "patch": "@@ -17,8 +17,9 @@ public static void main( String[] args )\n \t\tsc.nextLine();\n         linkedList.addNodeAtIndex(30,val);\n         linkedList.printList();\n-        linkedList.pop();\n-        System.out.print(\"After deleting \");\n+        linkedList.popLast();\n+        System.out.print(\"After deleting from last \");\n         linkedList.printList();\n+        System.out.println(\"Element 70 present inside List: \" + linkedList.search(70));\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "6dd4b7c18704ba13d01d0b1fa357c5e8b1c098a1",
    "filename": "Linkedlist/src/test/java/com/Linked/Linkedlist/LinkedListTest.java",
    "status": "modified",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/siddiq76/LinkedList/blob/9b4e8cebb21ab7e07bb798ef7ee8deb2cdbe3f3e/Linkedlist/src/test/java/com/Linked/Linkedlist/LinkedListTest.java",
    "raw_url": "https://github.com/siddiq76/LinkedList/raw/9b4e8cebb21ab7e07bb798ef7ee8deb2cdbe3f3e/Linkedlist/src/test/java/com/Linked/Linkedlist/LinkedListTest.java",
    "contents_url": "https://api.github.com/repos/siddiq76/LinkedList/contents/Linkedlist/src/test/java/com/Linked/Linkedlist/LinkedListTest.java?ref=9b4e8cebb21ab7e07bb798ef7ee8deb2cdbe3f3e",
    "patch": "@@ -1,6 +1,7 @@\n package com.Linked.Linkedlist;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotEquals;\n import static org.junit.Assert.assertTrue;\n \n@@ -99,4 +100,47 @@ public void deleteFirstNode_InCorrect(){\n     \tlinkedList.pop();\n         assertNotEquals(56, linkedList.returnFirst());\n     }\n+    @Test\n+    public void deleteLastNodeTest_Correct(){\n+    \tlinkedList.addNodeAtLast(56);\n+    \tlinkedList.addNodeAtLast(70);\n+//    \tfor adding element in between index taken as 1\n+    \tlinkedList.addNodeAtIndex(30,1);\n+    \tlinkedList.popLast();\n+        assertEquals(2, linkedList.getSize());\n+        assertEquals(56, linkedList.returnFirst());\n+    }\n+    \n+    @Test\n+    public void deleteLastNodeTest_InCorrect(){\n+    \tlinkedList.addNodeAtLast(56);\n+    \tlinkedList.addNodeAtLast(70);\n+//    \tfor adding element in between index taken as 1\n+    \tlinkedList.addNodeAtIndex(30,1);\n+    \tlinkedList.popLast();\n+        assertEquals(2, linkedList.getSize());\n+        assertNotEquals(30, linkedList.returnFirst());\n+    }\n+    \n+    @Test\n+    public void searchNodeTest_Correct(){\n+    \tlinkedList.addNodeAtLast(56);\n+    \tlinkedList.addNodeAtLast(70);\n+//    \tfor adding element in between index taken as 1\n+    \tlinkedList.addNodeAtIndex(30,1);\n+    \tlinkedList.popLast();\n+        assertEquals(2, linkedList.getSize());\n+        assertTrue(\"The value is not present in list\", linkedList.search(30));\n+    }\n+    \n+    @Test\n+    public void searchNodeTest_InCorrect(){\n+    \tlinkedList.addNodeAtLast(56);\n+    \tlinkedList.addNodeAtLast(70);\n+//    \tfor adding element in between index taken as 1\n+    \tlinkedList.addNodeAtIndex(30,1);\n+    \tlinkedList.popLast();\n+        assertEquals(2, linkedList.getSize());\n+        assertFalse(\"The value is present inside list\", linkedList.search(70));\n+    }\n }"
  }
]
