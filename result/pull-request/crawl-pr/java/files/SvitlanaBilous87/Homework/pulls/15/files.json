[
  {
    "sha": "cd10368ca076980e5c9600525059569ddf993f1b",
    "filename": "src/com/company/hometask_16/Animal.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/SvitlanaBilous87/Homework/blob/0c76dc30e3d809ecff11229f58d244dcddb9244c/src/com/company/hometask_16/Animal.java",
    "raw_url": "https://github.com/SvitlanaBilous87/Homework/raw/0c76dc30e3d809ecff11229f58d244dcddb9244c/src/com/company/hometask_16/Animal.java",
    "contents_url": "https://api.github.com/repos/SvitlanaBilous87/Homework/contents/src/com/company/hometask_16/Animal.java?ref=0c76dc30e3d809ecff11229f58d244dcddb9244c",
    "patch": "@@ -0,0 +1,60 @@\n+package com.company.hometask_16;\n+\n+import java.util.Objects;\n+import java.util.Scanner;\n+\n+public class Animal {\n+\n+    private String type;\n+    private String name;\n+    Scanner scan = new Scanner(System.in);\n+\n+    public Animal(String type, String name) {\n+        this.type = type;\n+        this.name = name;\n+    }\n+\n+    public Animal() {\n+        System.out.println(\"Enter animal's type:\");\n+        this.type = scan.next();\n+        System.out.println(\"Enter animal's name:\");\n+        this.name = scan.next();\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(String type) {\n+        this.type = type;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Animal{\" +\n+                \"type='\" + type + '\\'' +\n+                \", name='\" + name + '\\'' +\n+                '}';\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        Animal animal = (Animal) o;\n+        return type.equals(animal.type) && name.equals(animal.name);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(type, name);\n+    }\n+}"
  },
  {
    "sha": "1ccc1bac395ca2ef155201a4a4840520316d21be",
    "filename": "src/com/company/hometask_16/Main.java",
    "status": "added",
    "additions": 142,
    "deletions": 0,
    "changes": 142,
    "blob_url": "https://github.com/SvitlanaBilous87/Homework/blob/0c76dc30e3d809ecff11229f58d244dcddb9244c/src/com/company/hometask_16/Main.java",
    "raw_url": "https://github.com/SvitlanaBilous87/Homework/raw/0c76dc30e3d809ecff11229f58d244dcddb9244c/src/com/company/hometask_16/Main.java",
    "contents_url": "https://api.github.com/repos/SvitlanaBilous87/Homework/contents/src/com/company/hometask_16/Main.java?ref=0c76dc30e3d809ecff11229f58d244dcddb9244c",
    "patch": "@@ -0,0 +1,142 @@\n+package com.company.hometask_16;\n+\n+import java.util.*;\n+\n+public class Main {\n+\n+    public static void main(String[] args) {\n+\n+        Person p1 = new Person(\"Jake\", 43);\n+        Person p2 = new Person(\"Nadya\", 25);\n+        Person p3 = new Person(\"Mike\", 50);\n+\n+        Animal dog1 = new Animal(\"dog\", \"Maori\");\n+        Animal dog2 = new Animal(\"dog\", \"Baron\");\n+        Animal cat1 = new Animal(\"cat\", \"Fluffy\");\n+        Animal cat2 = new Animal(\"cat\", \"Kiss\");\n+        Animal fish1 = new Animal(\"fish\", \"Ronaldo\");\n+        Animal fish2 = new Animal(\"fish\", \"Shark\");\n+\n+        Map<Person, List<Animal>> zooClub = new HashMap<>();\n+\n+        zooClub.put(p1, Arrays.asList(dog1, fish1));\n+        zooClub.put(p2, Arrays.asList(dog2, cat1));\n+        zooClub.put(p3, Arrays.asList(cat2, fish2));\n+\n+        System.out.println(\"Zooclub consists of: \");\n+        printMap(zooClub);\n+\n+        Scanner scan = new Scanner(System.in);\n+        System.out.println(\"Choose an action:\\n\" +\n+                \"1 - add new person to zooclub\\n\" +\n+                \"2 - add new animal to person\\n\" +\n+                \"3 - take away an animal from person\\n\" +\n+                \"4 - exclude person from zooclub\\n\" +\n+                \"5 - print entire zooclub\\n\" +\n+                \"6 - exit\");\n+\n+        do {\n+                int act = scan.nextInt();\n+                if (act >= 1 && act <= 6) {\n+\n+                    switch (act) {\n+                        case 1:\n+                            zooClub.put(new Person(), new ArrayList<>());\n+                            System.out.println(\"Choose next action:\");\n+                            break;\n+                        case 2:\n+                            addNewAnimalToPerson(zooClub);\n+                            System.out.println(\"Choose next action:\");\n+                            break;\n+                        case 3:\n+                            removeAnimalFromPerson(zooClub);\n+                            System.out.println(\"Choose next action:\");\n+                            break;\n+                        case 4:\n+                            removePerson(zooClub);\n+                            System.out.println(\"Choose next action:\");\n+                            break;\n+                        case 5:\n+                            printMap(zooClub);\n+                            System.out.println(\"Choose next action:\");\n+                            break;\n+                        case 6:\n+                            System.exit(0);\n+                    }\n+\n+                } else {\n+                    System.out.println(\"Incorrect choice. Try again.\");\n+                }\n+            } while (true);\n+        }\n+\n+    private static Person checkPerson(Map<Person, List<Animal>> zooClub){\n+\n+        Person person = new Person();\n+\n+        if (!zooClub.containsKey(person)){\n+            System.out.println(\"There is no such member in zooclub.\");\n+        }\n+        return person;\n+    }\n+\n+    private static Map<Person, List<Animal>> addNewAnimalToPerson(Map<Person, List<Animal>> zooClub){\n+\n+        Person person = checkPerson(zooClub);\n+\n+        if (zooClub.containsKey(person)){\n+            List<Animal> animals = new ArrayList<>(zooClub.get(person));\n+            animals.add(new Animal());\n+            zooClub.put(person, animals);\n+        }\n+        return zooClub;\n+    }\n+\n+    private static Map<Person, List<Animal>> removeAnimalFromPerson(Map<Person, List<Animal>> zooClub){\n+\n+        Person person = checkPerson(zooClub);\n+\n+        if (zooClub.containsKey(person)){\n+            List<Animal> animals = new ArrayList<>(zooClub.get(person));\n+            System.out.println(\"Enter number of animal that should be taken away from \"+person.getName()+\":\");\n+\n+            for (Animal animal : animals) {\n+                System.out.println((animals.indexOf(animal) + 1) + \" - \" + animal);\n+            }\n+\n+            Scanner scan = new Scanner(System.in);\n+            boolean a = true;\n+\n+            while (a){\n+                int i = scan.nextInt();\n+\n+                if (i <= 0 || i > animals.size()){\n+                System.out.println(\"Incorrect input. Try again:\");\n+            }\n+\n+                else {\n+                    animals.remove(i-1);\n+                    zooClub.put(person, animals);\n+                a = false;\n+                }\n+            }\n+        }\n+        return zooClub;\n+    }\n+\n+    private static Map<Person, List<Animal>> removePerson(Map<Person, List<Animal>> zooClub){\n+\n+        Person person = checkPerson(zooClub);\n+\n+        if (zooClub.containsKey(person)){\n+            zooClub.remove(person);\n+        }\n+        return zooClub;\n+    }\n+\n+    private static void printMap(Map<Person, List<Animal>> zooClub) {\n+        for (Map.Entry<Person, List<Animal>> member : zooClub.entrySet()) {\n+            System.out.println(member.getKey() + \" has = \" + member.getValue());\n+        }\n+    }\n+}"
  },
  {
    "sha": "cf9a5d1e40f4352edd49fda95c2fd8c142a5f11e",
    "filename": "src/com/company/hometask_16/Person.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/SvitlanaBilous87/Homework/blob/0c76dc30e3d809ecff11229f58d244dcddb9244c/src/com/company/hometask_16/Person.java",
    "raw_url": "https://github.com/SvitlanaBilous87/Homework/raw/0c76dc30e3d809ecff11229f58d244dcddb9244c/src/com/company/hometask_16/Person.java",
    "contents_url": "https://api.github.com/repos/SvitlanaBilous87/Homework/contents/src/com/company/hometask_16/Person.java?ref=0c76dc30e3d809ecff11229f58d244dcddb9244c",
    "patch": "@@ -0,0 +1,61 @@\n+package com.company.hometask_16;\n+\n+import java.util.Objects;\n+import java.util.Scanner;\n+\n+public class Person {\n+\n+    private String name;\n+    private Integer age;\n+\n+    Scanner scan = new Scanner(System.in);\n+\n+    public Person(String name, Integer age) {\n+        this.name = name;\n+        this.age = age;\n+    }\n+\n+    public Person() {\n+        System.out.println(\"Enter person's name:\");\n+        this.name = scan.next();\n+        System.out.println(\"Enter person's age:\");\n+        this.age = scan.nextInt();\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public Integer getAge() {\n+        return age;\n+    }\n+\n+    public void setAge(Integer age) {\n+        this.age = age;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Person{\" +\n+                \"name='\" + name + '\\'' +\n+                \", age=\" + age +\n+                '}';\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        Person person = (Person) o;\n+        return name.equals(person.name) && age.equals(person.age);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(name, age);\n+    }\n+}"
  }
]
