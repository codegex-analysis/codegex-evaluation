[
  {
    "sha": "bb4e466c958c35eede906ff75ea3d15212f2cacf",
    "filename": "src/main/java/net/rptools/maptool/client/ui/MapToolFrame.java",
    "status": "modified",
    "additions": 94,
    "deletions": 7,
    "changes": 101,
    "blob_url": "https://github.com/RPTools/maptool/blob/eb37a276aac5a35a9beb795a13c0dc7d154b0d69/src/main/java/net/rptools/maptool/client/ui/MapToolFrame.java",
    "raw_url": "https://github.com/RPTools/maptool/raw/eb37a276aac5a35a9beb795a13c0dc7d154b0d69/src/main/java/net/rptools/maptool/client/ui/MapToolFrame.java",
    "contents_url": "https://api.github.com/repos/RPTools/maptool/contents/src/main/java/net/rptools/maptool/client/ui/MapToolFrame.java?ref=eb37a276aac5a35a9beb795a13c0dc7d154b0d69",
    "patch": "@@ -17,13 +17,7 @@\n import com.jidesoft.docking.DefaultDockableHolder;\n import com.jidesoft.docking.DockableFrame;\n import java.awt.*;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.KeyEvent;\n-import java.awt.event.KeyListener;\n-import java.awt.event.MouseAdapter;\n-import java.awt.event.MouseEvent;\n-import java.awt.event.WindowEvent;\n-import java.awt.event.WindowListener;\n+import java.awt.event.*;\n import java.awt.image.BufferedImage;\n import java.io.File;\n import java.io.IOException;\n@@ -159,6 +153,7 @@\n \n   private JPanel visibleControlPanel;\n   private FullScreenFrame fullScreenFrame;\n+  private JPanel fullScreenToolPanel;\n   private final JPanel rendererBorderPanel;\n   private final List<ZoneRenderer> zoneRendererList;\n   private final JMenuBar menuBar;\n@@ -864,6 +859,7 @@ public void showControlPanel(JPanel... panels) {\n       layoutPanel.add(panel, gbc);\n       i++;\n     }\n+\n     layoutPanel.setSize(layoutPanel.getPreferredSize());\n     zoneRendererPanel.add(layoutPanel, PositionalLayout.Position.NE);\n     zoneRendererPanel.setComponentZOrder(layoutPanel, 0);\n@@ -1657,9 +1653,98 @@ public void showFullScreen() {\n     if (!AppUtil.MAC_OS_X) menuBar.setVisible(false);\n \n     fullScreenFrame.setVisible(true);\n+    showFullScreenTools();\n     this.setVisible(false);\n   }\n \n+  public void showFullScreenTools() {\n+    fullScreenToolPanel = new JPanel();\n+    fullScreenToolPanel.setOpaque(false);\n+    fullScreenToolPanel.add(toolbarPanel.getPointerGroupButton());\n+    fullScreenToolPanel.add(toolbarPanel.getDrawButton());\n+    fullScreenToolPanel.add(toolbarPanel.getTemplateButton());\n+    fullScreenToolPanel.add(toolbarPanel.getFogButton());\n+    fullScreenToolPanel.add(toolbarPanel.getTopologyButton());\n+    fullScreenToolPanel.add(toolbarPanel.createZoneSelectionButton());\n+\n+    var initiativeButton =\n+        new JButton(\n+            new ImageIcon(\n+                getClass()\n+                    .getClassLoader()\n+                    .getResource(\"net/rptools/maptool/client/image/arrow_menu.png\")));\n+\n+    initiativeButton.addActionListener(\n+        (e) -> {\n+          if (initiativePanel.isVisible()) initiativePanel.setVisible(false);\n+          else initiativePanel.setVisible(true);\n+        });\n+    fullScreenToolPanel.add(initiativeButton);\n+\n+    // set buttons to uniform size\n+    boolean first = true;\n+    Dimension size = null;\n+    for (var component : fullScreenToolPanel.getComponents()) {\n+      if (!(component instanceof AbstractButton)) continue;\n+\n+      var btn = (AbstractButton) component;\n+      if (first) {\n+        first = false;\n+        size = btn.getSize();\n+      } else btn.setPreferredSize(size);\n+\n+      btn.setText(null);\n+    }\n+    fullScreenToolPanel.setSize(fullScreenToolPanel.getPreferredSize());\n+    zoneRendererPanel.add(fullScreenToolPanel, PositionalLayout.Position.NW);\n+    zoneRendererPanel.setComponentZOrder(fullScreenToolPanel, 0);\n+\n+    var optionPanel = toolbarPanel.getOptionPanel();\n+    // set size of optionpanel to only necessary size\n+    for (Component comp : optionPanel.getComponents()) {\n+      if (comp.isVisible()) {\n+        optionPanel.setSize(comp.getPreferredSize());\n+      }\n+    }\n+\n+    zoneRendererPanel.add(optionPanel, PositionalLayout.Position.N);\n+    zoneRendererPanel.setComponentZOrder(optionPanel, 0);\n+\n+    size = initiativePanel.getPreferredSize();\n+    size.height = zoneRendererPanel.getHeight() / 2;\n+\n+    initiativePanel.setSize(size);\n+\n+    initiativePanel.setVisible(false);\n+\n+    zoneRendererPanel.add(initiativePanel, PositionalLayout.Position.SE);\n+    zoneRendererPanel.setComponentZOrder(initiativePanel, 0);\n+\n+    zoneRendererPanel.revalidate();\n+    zoneRendererPanel.repaint();\n+  }\n+\n+  private void hideFullScreenTools() {\n+    toolbarPanel.add(toolbarPanel.getOptionPanel(), toolbarPanel.getOptionsPanelIndex());\n+\n+    JToggleButton buttons[] = {\n+      toolbarPanel.getTopologyButton(), toolbarPanel.getFogButton(),\n+      toolbarPanel.getTemplateButton(), toolbarPanel.getDrawButton(),\n+      toolbarPanel.getPointerGroupButton()\n+    };\n+\n+    for (var button : buttons) {\n+      button.setPreferredSize(null);\n+      toolbarPanel.add(button, 0);\n+    }\n+\n+    zoneRendererPanel.remove(fullScreenToolPanel);\n+    fullScreenToolPanel = null;\n+    var initiativeFrame = frameMap.get(MTFrame.INITIATIVE);\n+    initiativePanel.setVisible(true);\n+    initiativeFrame.add(initiativePanel);\n+  }\n+\n   public boolean isFullScreen() {\n     return fullScreenFrame != null;\n   }\n@@ -1668,6 +1753,8 @@ public void showWindowed() {\n     if (fullScreenFrame == null) {\n       return;\n     }\n+    hideFullScreenTools();\n+\n     rendererBorderPanel.add(zoneRendererPanel);\n     setJMenuBar(menuBar);\n     menuBar.setVisible(true);"
  },
  {
    "sha": "4290e71462c7888fa85a947446abb28df00033b4",
    "filename": "src/main/java/net/rptools/maptool/client/ui/ToolbarPanel.java",
    "status": "modified",
    "additions": 82,
    "deletions": 42,
    "changes": 124,
    "blob_url": "https://github.com/RPTools/maptool/blob/eb37a276aac5a35a9beb795a13c0dc7d154b0d69/src/main/java/net/rptools/maptool/client/ui/ToolbarPanel.java",
    "raw_url": "https://github.com/RPTools/maptool/raw/eb37a276aac5a35a9beb795a13c0dc7d154b0d69/src/main/java/net/rptools/maptool/client/ui/ToolbarPanel.java",
    "contents_url": "https://api.github.com/repos/RPTools/maptool/contents/src/main/java/net/rptools/maptool/client/ui/ToolbarPanel.java?ref=eb37a276aac5a35a9beb795a13c0dc7d154b0d69",
    "patch": "@@ -14,22 +14,11 @@\n  */\n package net.rptools.maptool.client.ui;\n \n-import java.awt.CardLayout;\n-import java.awt.Component;\n+import java.awt.*;\n import java.io.IOException;\n import java.util.Hashtable;\n import javax.imageio.ImageIO;\n-import javax.swing.Box;\n-import javax.swing.ButtonGroup;\n-import javax.swing.ImageIcon;\n-import javax.swing.JButton;\n-import javax.swing.JLabel;\n-import javax.swing.JPanel;\n-import javax.swing.JSeparator;\n-import javax.swing.JSlider;\n-import javax.swing.JToggleButton;\n-import javax.swing.JToolBar;\n-import javax.swing.SwingUtilities;\n+import javax.swing.*;\n import javax.swing.plaf.basic.BasicToolBarUI;\n import net.rptools.lib.image.ImageUtil;\n import net.rptools.lib.swing.SwingUtil;\n@@ -86,6 +75,12 @@\n \n   private final ButtonGroup buttonGroup = new ButtonGroup();\n   private final ButtonGroup tokenSelectionbuttonGroup = new ButtonGroup();\n+  private final JToggleButton pointerGroupButton;\n+  private final JToggleButton drawButton;\n+  private final JToggleButton templateButton;\n+  private final JToggleButton fogButton;\n+  private final JToggleButton topologyButton;\n+  private final Component horizontalSpacer;\n   private final JPanel optionPanel;\n   private final Toolbox toolbox;\n \n@@ -95,62 +90,52 @@ public ToolbarPanel(Toolbox tbox) {\n     toolbox = tbox;\n     optionPanel = new JPanel(new CardLayout());\n \n-    final OptionPanel pointerGroupOptionPanel = createPointerPanel();\n-    final JToggleButton pointerGroupButton =\n-        createButton(\n-            \"net/rptools/maptool/client/image/tool/pointer-blue.png\",\n-            \"net/rptools/maptool/client/image/tool/pointer-blue-off.png\",\n-            pointerGroupOptionPanel,\n-            I18N.getText(\"tools.interaction.tooltip\"));\n-\n-    final SidePanel aiPanel = new SidePanel();\n-    aiPanel.add(AI_Tool.class);\n-    aiPanel.add(AI_UseVblTool.class);\n-\n-    pointerGroupOptionPanel.add(Box.createHorizontalStrut(5));\n-    pointerGroupOptionPanel.add(aiPanel);\n-\n-    pointerGroupButton.setSelected(true);\n-    pointerGroupOptionPanel.activate();\n-\n     final JSeparator vertSplit = new JSeparator(JSeparator.VERTICAL);\n     final Component vertSpacer = Box.createHorizontalStrut(10);\n \n     final JSeparator horizontalSplit = new JSeparator(JSeparator.HORIZONTAL);\n     horizontalSplit.setVisible(false);\n-    final Component horizontalSpacer = Box.createVerticalStrut(10);\n+    horizontalSpacer = Box.createVerticalStrut(10);\n     horizontalSpacer.setVisible(false);\n \n+    pointerGroupButton = createPointerGroupButton();\n     add(pointerGroupButton);\n-    add(\n+    drawButton =\n         createButton(\n             \"net/rptools/maptool/client/image/tool/draw-blue.png\",\n             \"net/rptools/maptool/client/image/tool/draw-blue-off.png\",\n             createDrawPanel(),\n-            I18N.getText(\"tools.drawing.tooltip\")));\n-    add(\n+            I18N.getText(\"tools.drawing.tooltip\"));\n+    add(drawButton);\n+    templateButton =\n         createButton(\n             \"net/rptools/maptool/client/image/tool/temp-blue.png\",\n             \"net/rptools/maptool/client/image/tool/temp-blue-off.png\",\n             createTemplatePanel(),\n-            I18N.getText(\"tools.template.tooltip\")));\n-    add(\n+            I18N.getText(\"tools.template.tooltip\"));\n+    add(templateButton);\n+    fogButton =\n         createButton(\n             \"net/rptools/maptool/client/image/tool/fog-blue.png\",\n             \"net/rptools/maptool/client/image/tool/fog-blue-off.png\",\n             createFogPanel(),\n-            I18N.getText(\"tools.fog.tooltip\")));\n-    add(\n+            I18N.getText(\"tools.fog.tooltip\"));\n+    add(fogButton);\n+    topologyButton =\n         createButton(\n             \"net/rptools/maptool/client/image/tool/eye-blue.png\",\n             \"net/rptools/maptool/client/image/tool/eye-blue-off.png\",\n             createTopologyPanel(),\n-            I18N.getText(\"tools.topo.tooltip\")));\n+            I18N.getText(\"tools.topo.tooltip\"));\n+    add(topologyButton);\n+\n     add(vertSplit);\n     add(horizontalSplit);\n     add(vertSpacer);\n     add(horizontalSpacer);\n+\n     add(optionPanel);\n+\n     add(Box.createGlue());\n \n     // the Volume icon\n@@ -240,8 +225,58 @@ public ToolbarPanel(Toolbox tbox) {\n         });\n   }\n \n-  private JButton createZoneSelectionButton() {\n-    final String title = I18N.getText(\"tools.zoneselector.tooltip\");\n+  public JPanel getOptionPanel() {\n+    return optionPanel;\n+  }\n+\n+  public JToggleButton getPointerGroupButton() {\n+    return pointerGroupButton;\n+  }\n+\n+  public JToggleButton getDrawButton() {\n+    return drawButton;\n+  }\n+\n+  public JToggleButton getTemplateButton() {\n+    return templateButton;\n+  }\n+\n+  public JToggleButton getFogButton() {\n+    return fogButton;\n+  }\n+\n+  public JToggleButton getTopologyButton() {\n+    return topologyButton;\n+  }\n+\n+  public int getOptionsPanelIndex() {\n+    return getComponentIndex(horizontalSpacer) + 1;\n+  }\n+\n+  private JToggleButton createPointerGroupButton() {\n+    final OptionPanel pointerGroupOptionPanel = createPointerPanel();\n+    final JToggleButton pointerGroupButton =\n+        createButton(\n+            \"net/rptools/maptool/client/image/tool/pointer-blue.png\",\n+            \"net/rptools/maptool/client/image/tool/pointer-blue-off.png\",\n+            pointerGroupOptionPanel,\n+            I18N.getText(\"tools.interaction.tooltip\"));\n+\n+    final SidePanel aiPanel = new SidePanel();\n+    aiPanel.add(AI_Tool.class);\n+    aiPanel.add(AI_UseVblTool.class);\n+\n+    pointerGroupOptionPanel.add(Box.createHorizontalStrut(5));\n+    pointerGroupOptionPanel.add(aiPanel);\n+    pointerGroupButton.setSelected(true);\n+    pointerGroupOptionPanel.activate();\n+\n+    return pointerGroupButton;\n+  }\n+\n+  public JButton createZoneSelectionButton() {\n+    String title = I18N.getText(\"tools.zoneselector.tooltip\");\n+\n     final JButton button =\n         new JButton(\n             title,\n@@ -250,6 +285,7 @@ private JButton createZoneSelectionButton() {\n                     .getClassLoader()\n                     .getResource(\"net/rptools/maptool/client/image/tool/btn-world.png\")));\n     button.setToolTipText(title);\n+\n     SwingUtil.makePopupMenuButton(button, ZoneSelectionPopup::new, true);\n     return button;\n   }\n@@ -339,11 +375,14 @@ private JToggleButton createButton(\n       final String icon, final String offIcon, final OptionPanel panel, String tooltip) {\n     final JToggleButton button = new JToggleButton();\n     button.setToolTipText(tooltip);\n+\n     button.addActionListener(\n         e -> {\n           if (button.isSelected()) {\n             panel.activate();\n             ((CardLayout) optionPanel.getLayout()).show(optionPanel, icon);\n+            // This is has only an effect when the panel is used in fullscreen mode.\n+            optionPanel.setSize(panel.getPreferredSize());\n           }\n         });\n     try {\n@@ -354,6 +393,7 @@ private JToggleButton createButton(\n     }\n     optionPanel.add(panel, icon);\n     buttonGroup.add(button);\n+\n     return button;\n   }\n "
  },
  {
    "sha": "21d0c7f668890b3992c74c7e84a1d972ad2cc94d",
    "filename": "src/main/java/net/rptools/maptool/client/ui/tokenpanel/InitiativePanel.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/RPTools/maptool/blob/eb37a276aac5a35a9beb795a13c0dc7d154b0d69/src/main/java/net/rptools/maptool/client/ui/tokenpanel/InitiativePanel.java",
    "raw_url": "https://github.com/RPTools/maptool/raw/eb37a276aac5a35a9beb795a13c0dc7d154b0d69/src/main/java/net/rptools/maptool/client/ui/tokenpanel/InitiativePanel.java",
    "contents_url": "https://api.github.com/repos/RPTools/maptool/contents/src/main/java/net/rptools/maptool/client/ui/tokenpanel/InitiativePanel.java?ref=eb37a276aac5a35a9beb795a13c0dc7d154b0d69",
    "patch": "@@ -155,6 +155,11 @@ public InitiativePanel() {\n     toolBar.add(round);\n     toolBar.add(Box.createHorizontalStrut(8));\n \n+    // ensure that the preferred width is enough to show the round counter in fullscreen\n+    round.setText(I18N.getText(\"initPanel.round\") + \" 99\");\n+    round.setPreferredSize(round.getMinimumSize());\n+    round.setText(\"\");\n+\n     ownerPermissions = MapTool.getCampaign().isInitiativeOwnerPermissions();\n     movementLock = MapTool.getCampaign().isInitiativeMovementLock();\n     initUseReverseSort = MapTool.getCampaign().isInitiativeUseReverseSort();"
  }
]
