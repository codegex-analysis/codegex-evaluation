[
  {
    "sha": "030079e3aef2793570bc1740afc3a3a15a6a6c82",
    "filename": "docs/images/TransitTimeLine.svg",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/docs/images/TransitTimeLine.svg",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/docs/images/TransitTimeLine.svg",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/docs/images/TransitTimeLine.svg?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -0,0 +1,3 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n+<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xl=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"35.165354 152.16535 628.6693 191.66929\" width=\"628.6693pt\" height=\"191.66929pt\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><metadata> Produced by OmniGraffle 6.6.2 <dc:date>2021-02-08 15:47:55 +0000</dc:date></metadata><defs><font-face font-family=\"Helvetica Neue\" font-size=\"8\" panose-1=\"2 0 5 3 0 0 0 2 0 4\" units-per-em=\"1000\" underline-position=\"-100\" underline-thickness=\"50\" slope=\"0\" x-height=\"517\" cap-height=\"714\" ascent=\"951.99585\" descent=\"-212.99744\" font-weight=\"500\"><font-face-src><font-face-name name=\"HelveticaNeue\"/></font-face-src></font-face><font-face font-family=\"Arial\" font-size=\"9\" panose-1=\"2 11 6 4 2 2 2 2 2 4\" units-per-em=\"1000\" underline-position=\"-105.95703\" underline-thickness=\"73.242188\" slope=\"0\" x-height=\"518.5547\" cap-height=\"716.3086\" ascent=\"905.27344\" descent=\"-211.91406\" font-weight=\"500\"><font-face-src><font-face-name name=\"ArialMT\"/></font-face-src></font-face><font-face font-family=\"Arial\" font-size=\"6\" panose-1=\"2 11 6 4 2 2 2 2 2 4\" units-per-em=\"1000\" underline-position=\"-105.95703\" underline-thickness=\"73.242188\" slope=\"0\" x-height=\"518.5547\" cap-height=\"716.3086\" ascent=\"905.27344\" descent=\"-211.91406\" font-weight=\"500\"><font-face-src><font-face-name name=\"ArialMT\"/></font-face-src></font-face><font-face font-family=\"Arial\" font-size=\"8\" panose-1=\"2 11 6 4 2 2 2 2 2 4\" units-per-em=\"1000\" underline-position=\"-105.95703\" underline-thickness=\"73.242188\" slope=\"0\" x-height=\"518.5547\" cap-height=\"716.3086\" ascent=\"905.27344\" descent=\"-211.91406\" font-weight=\"500\"><font-face-src><font-face-name name=\"ArialMT\"/></font-face-src></font-face><filter id=\"Shadow\" filterUnits=\"userSpaceOnUse\"><feGaussianBlur in=\"SourceAlpha\" result=\"blur\" stdDeviation=\"2.616\"/><feFlood flood-color=\"white\" result=\"flood\"/><feComposite in=\"flood\" in2=\"blur\" operator=\"in\" result=\"color\"/><feMerge><feMergeNode in=\"color\"/><feMergeNode in=\"SourceGraphic\"/></feMerge></filter><marker orient=\"auto\" overflow=\"visible\" markerUnits=\"strokeWidth\" id=\"NegativeControls_Marker\" viewBox=\"-1 -5 2 10\" markerWidth=\"2\" markerHeight=\"10\" color=\"#235e00\"><g><line x1=\"0\" y1=\"-4\" x2=\"0\" y2=\"4\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/></g></marker><marker orient=\"auto\" overflow=\"visible\" markerUnits=\"strokeWidth\" id=\"NegativeControls_Marker_2\" viewBox=\"-1 -5 2 10\" markerWidth=\"2\" markerHeight=\"10\" color=\"#235e00\"><g><line x1=\"0\" y1=\"4\" x2=\"0\" y2=\"-4\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/></g></marker><marker orient=\"auto\" overflow=\"visible\" markerUnits=\"strokeWidth\" id=\"NegativeControls_Marker_3\" viewBox=\"-1 -5 2 10\" markerWidth=\"2\" markerHeight=\"10\" color=\"#235e00\"><g><line x1=\"0\" y1=\"-4\" x2=\"0\" y2=\"4\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/></g></marker><marker orient=\"auto\" overflow=\"visible\" markerUnits=\"strokeWidth\" id=\"NegativeControls_Marker_4\" viewBox=\"-1 -5 2 10\" markerWidth=\"2\" markerHeight=\"10\" color=\"#235e00\"><g><line x1=\"0\" y1=\"4\" x2=\"0\" y2=\"-4\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/></g></marker></defs><g stroke=\"none\" stroke-opacity=\"1\" stroke-dasharray=\"none\" fill=\"none\" fill-opacity=\"1\"><title>Canvas 1</title><g><title>Layer 1</title><text transform=\"translate(316.29675 310.38131)\" fill=\"#800c10\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\".276\" y=\"8\" textLength=\"12.736\">Bor</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\"12.868\" y=\"8\" textLength=\"7.856\">d-</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\"1.756\" y=\"18.223999\" textLength=\"17.488\">Time</tspan></text><line x1=\"419.52756\" y1=\"226.77165\" x2=\"504.56693\" y2=\"226.77165\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><path d=\"M 599.937 227.18898 C 599.937 227.18898 600.55723 225.72791 602.063 226.1285 C 603.56874 226.52908 603.34468 228.70309 605.25197 228.60295 C 607.15925 228.5028 606.7876 225.775 608.79527 225.775 C 610.80295 225.775 610.3309 228.60295 612.33858 228.60295 C 614.34625 228.60295 613.8742 225.775 615.8819 225.775 C 617.88956 225.775 617.41752 228.60295 619.4252 228.60295 C 621.43287 228.60295 621.0612 225.87515 622.9685 225.775 C 624.8758 225.67486 624.65172 227.84887 626.15748 228.24945 C 627.66323 228.65004 628.28346 227.18898 628.28346 227.18898\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><path d=\"M 62.02756 226.93898 C 62.02756 226.93898 62.647788 225.47791 64.153543 225.8785 C 65.659298 226.27908 65.43523 228.45309 67.34252 228.35295 C 69.24981 228.2528 68.878153 225.525 70.885826 225.525 C 72.8935 225.525 72.42146 228.35295 74.429133 228.35295 C 76.436807 228.35295 75.964767 225.525 77.97244 225.525 C 79.980114 225.525 79.508074 228.35295 81.51575 228.35295 C 83.52342 228.35295 83.151765 225.62515 85.059055 225.525 C 86.966344 225.42486 86.742276 227.59887 88.24803 227.99945 C 89.753786 228.40004 90.374015 226.93898 90.374015 226.93898\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><path d=\"M 212.51378 226.68898 C 212.51378 226.68898 213.13401 225.22791 214.63976 225.6285 C 216.14552 226.02908 215.92145 228.20309 217.82874 228.10295 C 219.73603 228.0028 219.36437 225.275 221.37205 225.275 C 223.37972 225.275 222.90768 228.10295 224.91535 228.10295 C 226.92303 228.10295 226.45099 225.275 228.45866 225.275 C 230.46633 225.275 229.9943 228.10295 232.00197 228.10295 C 234.00964 228.10295 233.63798 225.37515 235.54527 225.275 C 237.45256 225.17486 237.2285 227.34887 238.73425 227.74945 C 240.24 228.15004 240.86023 226.68898 240.86023 226.68898\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><rect x=\"116.22047\" y=\"221.10236\" width=\"70.86614\" height=\"11.3385826\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><text transform=\"translate(121.22047 221.62444)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"9\" font-weight=\"500\" x=\"16.003627\" y=\"8\" textLength=\"24.521484\">Line 1</tspan><tspan font-family=\"Arial\" font-size=\"9\" font-weight=\"500\" x=\"39.857143\" y=\"8\" textLength=\"5.005371\">1</tspan></text><rect x=\"504.56693\" y=\"221.10236\" width=\"70.86614\" height=\"11.3385826\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><text transform=\"translate(509.56693 221.62444)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"9\" font-weight=\"500\" x=\"15.669643\" y=\"8\" textLength=\"29.526855\">Line 31</tspan></text><rect x=\"325.98425\" y=\"221.10236\" width=\"70.86614\" height=\"11.3385826\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><text transform=\"translate(330.98425 221.62444)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"9\" font-weight=\"500\" x=\"15.669643\" y=\"8\" textLength=\"29.526855\">Line 21</tspan></text><line x1=\"99.2126\" y1=\"226.77165\" x2=\"116.22047\" y2=\"226.77165\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><line x1=\"187.08661\" y1=\"226.77165\" x2=\"204.09449\" y2=\"226.77165\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><line x1=\"249.44882\" y1=\"226.77165\" x2=\"325.98425\" y2=\"226.77165\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><line x1=\"396.8504\" y1=\"226.77165\" x2=\"413.85827\" y2=\"226.77165\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><circle cx=\"416.6929\" cy=\"226.77165\" r=\"2.8346502\" fill=\"white\"/><circle cx=\"416.6929\" cy=\"226.77165\" r=\"2.8346502\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><circle cx=\"246.61417\" cy=\"226.77165\" r=\"2.8346502\" fill=\"white\"/><circle cx=\"246.61417\" cy=\"226.77165\" r=\"2.8346502\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><circle cx=\"56.692913\" cy=\"226.77165\" r=\"2.8346502\" fill=\"black\"/><circle cx=\"56.692913\" cy=\"226.77165\" r=\"2.8346502\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><circle cx=\"635.0433\" cy=\"226.77165\" r=\"2.8346502\" fill=\"black\"/><circle cx=\"635.0433\" cy=\"226.77165\" r=\"4.2519753\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><circle cx=\"206.92913\" cy=\"226.77165\" r=\"2.8346502\" fill=\"white\"/><circle cx=\"206.92913\" cy=\"226.77165\" r=\"2.8346502\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><circle cx=\"96.37795\" cy=\"226.77165\" r=\"2.8346502\" fill=\"white\"/><circle cx=\"96.37795\" cy=\"226.77165\" r=\"2.8346502\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><circle cx=\"595.2756\" cy=\"226.77165\" r=\"2.8346502\" fill=\"white\"/><circle cx=\"595.2756\" cy=\"226.77165\" r=\"2.8346502\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><line x1=\"274.96063\" y1=\"231.31594\" x2=\"274.96063\" y2=\"222.812\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><line x1=\"396.8504\" y1=\"231.31594\" x2=\"396.8504\" y2=\"222.812\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><line x1=\"445.03937\" y1=\"231.31594\" x2=\"445.03937\" y2=\"222.812\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><line x1=\"575.43307\" y1=\"226.77165\" x2=\"592.44094\" y2=\"226.77165\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><line x1=\"96.37795\" y1=\"198.4252\" x2=\"96.37795\" y2=\"221.10236\" stroke=\"#a5a5a5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"/><path d=\"M 89.03937 181.41732 L 103.38189 181.41732 C 104.48646 181.41732 105.38189 182.31275 105.38189 183.41732 L 105.38189 196.4252 C 105.38189 197.52977 104.48646 198.4252 103.38189 198.4252 L 89.03937 198.4252 C 87.9348 198.4252 87.03937 197.52977 87.03937 196.4252 L 87.03937 183.41732 C 87.03937 182.31275 87.9348 181.41732 89.03937 181.41732 Z\" fill=\"#3a8eed\"/><path d=\"M 89.03937 181.41732 L 103.38189 181.41732 C 104.48646 181.41732 105.38189 182.31275 105.38189 183.41732 L 105.38189 196.4252 C 105.38189 197.52977 104.48646 198.4252 103.38189 198.4252 L 89.03937 198.4252 C 87.9348 198.4252 87.03937 197.52977 87.03937 196.4252 L 87.03937 183.41732 C 87.03937 182.31275 87.9348 181.41732 89.03937 181.41732 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(88.03937 183.72497)\" fill=\"white\"><tspan font-family=\"Arial\" font-size=\"6\" font-weight=\"500\" fill=\"white\" x=\"1.9998731\" y=\"5\" textLength=\"14.009766\">Stop </tspan><tspan font-family=\"Arial\" font-size=\"6\" font-weight=\"500\" fill=\"white\" x=\"6.1702832\" y=\"11.196289\" textLength=\"4.0019531\">A</tspan></text><text transform=\"translate(282.40574 232.63207) rotate(60)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"2.4928948\" y=\"7\" textLength=\"43.132812\">Board Slack</tspan></text><text transform=\"translate(452.73842 232.63207) rotate(60)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"2.4928948\" y=\"7\" textLength=\"43.132812\">Board Slack</tspan></text><text transform=\"translate(584.88605 232.63207) rotate(60)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"3.1608636\" y=\"7\" textLength=\"41.796875\">Alight Slack</tspan></text><text transform=\"translate(406.38802 232.63207) rotate(60)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"3.1608636\" y=\"7\" textLength=\"41.796875\">Alight Slack</tspan></text><text transform=\"translate(195.95889 232.88207) rotate(60)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"3.1608636\" y=\"7\" textLength=\"41.796875\">Alight Slack</tspan></text><text transform=\"translate(262.90574 234.63207) rotate(60)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"1.0905511\" y=\"7\" textLength=\"4.8867188\">T</tspan><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"5.680395\" y=\"7\" textLength=\"41.347656\">ransit Slack</tspan></text><text transform=\"translate(432.98448 234.63207) rotate(60)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"1.0905511\" y=\"7\" textLength=\"4.8867188\">T</tspan><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"5.680395\" y=\"7\" textLength=\"41.347656\">ransit Slack</tspan></text><text transform=\"translate(307.2148 231.29651) rotate(60)\" fill=\"#a5a5a5\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" fill=\"#a5a5a5\" x=\"2.460307\" y=\"7\" textLength=\"49.35547\">«Extra Slack»</tspan></text><text transform=\"translate(482.96283 231.29651) rotate(60)\" fill=\"#a5a5a5\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" fill=\"#a5a5a5\" x=\"2.460307\" y=\"7\" textLength=\"49.35547\">«Extra Slack»</tspan></text><line x1=\"291.9685\" y1=\"231.31594\" x2=\"291.9685\" y2=\"222.812\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><line x1=\"462.04724\" y1=\"231.31594\" x2=\"462.04724\" y2=\"222.812\" stroke=\"#666\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><g filter=\"url(#Shadow)\"><text transform=\"translate(105.073064 232.63207) rotate(60)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"2.4928948\" y=\"7\" textLength=\"43.132812\">Board Slack</tspan></text></g><line x1=\"291.9685\" y1=\"303.64173\" x2=\"291.9685\" y2=\"269.29134\" stroke=\"#b1001c\" stroke-opacity=\".70316914\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(277.031 304.60002)\" fill=\"#800c10\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\".336\" y=\"8\" textLength=\"29.328\">Earliest-</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\"2.628\" y=\"18.223999\" textLength=\"17.032\">Boar</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\"19.516\" y=\"18.223999\" textLength=\"7.856\">d-</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\"6.256\" y=\"28.447998\" textLength=\"17.488\">Time</tspan></text><line x1=\"291.9685\" y1=\"247.69882\" x2=\"291.9685\" y2=\"233.52559\" stroke=\"#b1001c\" stroke-opacity=\".703169\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><line x1=\"462.04724\" y1=\"247.69882\" x2=\"462.04724\" y2=\"233.52559\" stroke=\"#b1001c\" stroke-opacity=\".703169\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><line x1=\"116.22047\" y1=\"303.39173\" x2=\"116.22047\" y2=\"273.04134\" stroke=\"#b1001c\" stroke-opacity=\".703169\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(99.28297 304.60002)\" fill=\"#800c10\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\".264\" y=\"8\" textLength=\"33.472\">(Earliest-)</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\"4.628\" y=\"18.223999\" textLength=\"17.032\">Boar</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\"21.516\" y=\"18.223999\" textLength=\"7.856\">d-</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\"8.256\" y=\"28.447998\" textLength=\"17.488\">Time</tspan></text><line x1=\"116.22047\" y1=\"249.28346\" x2=\"116.22047\" y2=\"235.11023\" stroke=\"#b1001c\" stroke-opacity=\".703169\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><line x1=\"206.92913\" y1=\"198.4252\" x2=\"206.92913\" y2=\"221.10236\" stroke=\"#a5a5a5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"/><path d=\"M 199.59055 181.41732 L 213.93307 181.41732 C 215.03764 181.41732 215.93307 182.31275 215.93307 183.41732 L 215.93307 196.4252 C 215.93307 197.52977 215.03764 198.4252 213.93307 198.4252 L 199.59055 198.4252 C 198.48598 198.4252 197.59055 197.52977 197.59055 196.4252 L 197.59055 183.41732 C 197.59055 182.31275 198.48598 181.41732 199.59055 181.41732 Z\" fill=\"#3a8eed\"/><path d=\"M 199.59055 181.41732 L 213.93307 181.41732 C 215.03764 181.41732 215.93307 182.31275 215.93307 183.41732 L 215.93307 196.4252 C 215.93307 197.52977 215.03764 198.4252 213.93307 198.4252 L 199.59055 198.4252 C 198.48598 198.4252 197.59055 197.52977 197.59055 196.4252 L 197.59055 183.41732 C 197.59055 182.31275 198.48598 181.41732 199.59055 181.41732 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(198.59055 183.72497)\" fill=\"white\"><tspan font-family=\"Arial\" font-size=\"6\" font-weight=\"500\" fill=\"white\" x=\"1.9998731\" y=\"5\" textLength=\"14.009766\">Stop </tspan><tspan font-family=\"Arial\" font-size=\"6\" font-weight=\"500\" fill=\"white\" x=\"6.1702832\" y=\"11.196289\" textLength=\"4.0019531\">B</tspan></text><line x1=\"246.61417\" y1=\"198.4252\" x2=\"246.61417\" y2=\"221.10236\" stroke=\"#a5a5a5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"/><path d=\"M 239.27559 181.41732 L 253.61811 181.41732 C 254.72268 181.41732 255.61811 182.31275 255.61811 183.41732 L 255.61811 196.4252 C 255.61811 197.52977 254.72268 198.4252 253.61811 198.4252 L 239.27559 198.4252 C 238.17102 198.4252 237.27559 197.52977 237.27559 196.4252 L 237.27559 183.41732 C 237.27559 182.31275 238.17102 181.41732 239.27559 181.41732 Z\" fill=\"#3a8eed\"/><path d=\"M 239.27559 181.41732 L 253.61811 181.41732 C 254.72268 181.41732 255.61811 182.31275 255.61811 183.41732 L 255.61811 196.4252 C 255.61811 197.52977 254.72268 198.4252 253.61811 198.4252 L 239.27559 198.4252 C 238.17102 198.4252 237.27559 197.52977 237.27559 196.4252 L 237.27559 183.41732 C 237.27559 182.31275 238.17102 181.41732 239.27559 181.41732 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(238.27559 183.72497)\" fill=\"white\"><tspan font-family=\"Arial\" font-size=\"6\" font-weight=\"500\" fill=\"white\" x=\"1.9998731\" y=\"5\" textLength=\"14.009766\">Stop </tspan><tspan font-family=\"Arial\" font-size=\"6\" font-weight=\"500\" fill=\"white\" x=\"6.004756\" y=\"11.196289\" textLength=\"4.3330078\">C</tspan></text><line x1=\"416.6929\" y1=\"198.4252\" x2=\"416.6929\" y2=\"221.10236\" stroke=\"#a5a5a5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"/><path d=\"M 409.35433 181.41732 L 423.69685 181.41732 C 424.80142 181.41732 425.69685 182.31275 425.69685 183.41732 L 425.69685 196.4252 C 425.69685 197.52977 424.80142 198.4252 423.69685 198.4252 L 409.35433 198.4252 C 408.24976 198.4252 407.35433 197.52977 407.35433 196.4252 L 407.35433 183.41732 C 407.35433 182.31275 408.24976 181.41732 409.35433 181.41732 Z\" fill=\"#3a8eed\"/><path d=\"M 409.35433 181.41732 L 423.69685 181.41732 C 424.80142 181.41732 425.69685 182.31275 425.69685 183.41732 L 425.69685 196.4252 C 425.69685 197.52977 424.80142 198.4252 423.69685 198.4252 L 409.35433 198.4252 C 408.24976 198.4252 407.35433 197.52977 407.35433 196.4252 L 407.35433 183.41732 C 407.35433 182.31275 408.24976 181.41732 409.35433 181.41732 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(408.35433 183.72497)\" fill=\"white\"><tspan font-family=\"Arial\" font-size=\"6\" font-weight=\"500\" fill=\"white\" x=\"1.9998731\" y=\"5\" textLength=\"14.009766\">Stop </tspan><tspan font-family=\"Arial\" font-size=\"6\" font-weight=\"500\" fill=\"white\" x=\"6.004756\" y=\"11.196289\" textLength=\"4.3330078\">D</tspan></text><line x1=\"595.2756\" y1=\"198.4252\" x2=\"595.2756\" y2=\"221.10236\" stroke=\"#a5a5a5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"/><path d=\"M 587.937 181.41732 L 602.27952 181.41732 C 603.3841 181.41732 604.27952 182.31275 604.27952 183.41732 L 604.27952 196.4252 C 604.27952 197.52977 603.3841 198.4252 602.27952 198.4252 L 587.937 198.4252 C 586.83243 198.4252 585.937 197.52977 585.937 196.4252 L 585.937 183.41732 C 585.937 182.31275 586.83243 181.41732 587.937 181.41732 Z\" fill=\"#3a8eed\"/><path d=\"M 587.937 181.41732 L 602.27952 181.41732 C 603.3841 181.41732 604.27952 182.31275 604.27952 183.41732 L 604.27952 196.4252 C 604.27952 197.52977 603.3841 198.4252 602.27952 198.4252 L 587.937 198.4252 C 586.83243 198.4252 585.937 197.52977 585.937 196.4252 L 585.937 183.41732 C 585.937 182.31275 586.83243 181.41732 587.937 181.41732 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(586.937 183.72497)\" fill=\"white\"><tspan font-family=\"Arial\" font-size=\"6\" font-weight=\"500\" fill=\"white\" x=\"1.9998731\" y=\"5\" textLength=\"14.009766\">Stop </tspan><tspan font-family=\"Arial\" font-size=\"6\" font-weight=\"500\" fill=\"white\" x=\"6.1702832\" y=\"11.196289\" textLength=\"4.0019531\">E</tspan></text><line x1=\"96.37795\" y1=\"283.62992\" x2=\"96.37795\" y2=\"232.44094\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(84.94045 283.03486)\" fill=\"#003776\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#003776\" x=\"1.424\" y=\"8\" textLength=\"20.152\">Stop-</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#003776\" x=\".32\" y=\"18.223999\" textLength=\"22.36\">Arrival</tspan></text><line x1=\"325.98425\" y1=\"310.56102\" x2=\"325.98425\" y2=\"280.62992\" stroke=\"#b1001c\" stroke-opacity=\".703169\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><line x1=\"206.92913\" y1=\"283.71457\" x2=\"206.92913\" y2=\"269.54134\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(195.49163 283.03486)\" fill=\"#003776\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#003776\" x=\"1.424\" y=\"8\" textLength=\"20.152\">Stop-</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#003776\" x=\".32\" y=\"18.223999\" textLength=\"22.36\">Arrival</tspan></text><line x1=\"416.6929\" y1=\"283.71457\" x2=\"416.6929\" y2=\"270.29134\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(405.2554 283.03486)\" fill=\"#003776\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#003776\" x=\"1.424\" y=\"8\" textLength=\"20.152\">Stop-</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#003776\" x=\".32\" y=\"18.223999\" textLength=\"22.36\">Arrival</tspan></text><line x1=\"595.2756\" y1=\"283.46457\" x2=\"595.2756\" y2=\"270.04134\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(583.8381 283.03486)\" fill=\"#003776\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#003776\" x=\"1.424\" y=\"8\" textLength=\"20.152\">Stop-</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#003776\" x=\".32\" y=\"18.223999\" textLength=\"22.36\">Arrival</tspan></text><line x1=\"246.61417\" y1=\"283.71457\" x2=\"246.61417\" y2=\"232.3563\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(235.17667 283.03486)\" fill=\"#003776\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#003776\" x=\"1.424\" y=\"8\" textLength=\"20.152\">Stop-</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#003776\" x=\".32\" y=\"18.223999\" textLength=\"22.36\">Arrival</tspan></text><line x1=\"595.2756\" y1=\"248.69882\" x2=\"595.2756\" y2=\"232.44094\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><line x1=\"416.6929\" y1=\"249.94882\" x2=\"416.6929\" y2=\"232.44094\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><line x1=\"325.98425\" y1=\"264.12205\" x2=\"325.98425\" y2=\"235.27559\" stroke=\"#b1001c\" stroke-opacity=\".703169\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><line x1=\"206.92913\" y1=\"249.94882\" x2=\"206.92913\" y2=\"232.44094\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><g filter=\"url(#Shadow)\"><text transform=\"translate(43.678641 212.14079)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"1.841151\" y=\"7\" textLength=\"21.339844\">Origin</tspan></text></g><g filter=\"url(#Shadow)\"><text transform=\"translate(613.4424 212.14079)\" fill=\"black\"><tspan font-family=\"Arial\" font-size=\"8\" font-weight=\"500\" x=\"1.00329103\" y=\"7\" textLength=\"40.023438\">Destination</tspan></text></g><path d=\"M 75.414993 221.10236 L 73.700787 220.6349 L 76.260572 217.65676 L 77.7356 214.05584 L 79.600893 217.46978 L 78.950447 221.05561 L 80.534564 221.10236\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><path d=\"M 77.7356 214.05584 L 78.58118 207.60192 L 75.522035 210.31467 L 75.261857 212.99577\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><path d=\"M 78.58118 207.60192 L 79.470803 210.43982 L 82.204724 212.465\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><ellipse cx=\"79.07535\" cy=\"205.63785\" rx=\"1.5789333\" ry=\"1.543362\" fill=\"white\"/><ellipse cx=\"79.07535\" cy=\"205.63785\" rx=\"1.5789333\" ry=\"1.543362\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><path d=\"M 224.27621 221.10236 L 222.562 220.6349 L 225.12179 217.65676 L 226.59682 214.05584 L 228.46211 217.46978 L 227.81167 221.05561 L 229.39578 221.10236\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><path d=\"M 226.59682 214.05584 L 227.4424 207.60192 L 224.38325 210.31467 L 224.12308 212.99577\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><path d=\"M 227.4424 207.60192 L 228.33202 210.43982 L 231.06594 212.465\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><ellipse cx=\"227.93657\" cy=\"205.63785\" rx=\"1.5789333\" ry=\"1.543362\" fill=\"white\"/><ellipse cx=\"227.93657\" cy=\"205.63785\" rx=\"1.5789333\" ry=\"1.543362\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><path d=\"M 606.61873 221.10236 L 604.90452 220.6349 L 607.4643 217.65676 L 608.93934 214.05584 L 610.80463 217.46978 L 610.1542 221.05561 L 611.7383 221.10236\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><path d=\"M 608.93934 214.05584 L 609.7849 207.60192 L 606.72577 210.31467 L 606.4656 212.99577\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><path d=\"M 609.7849 207.60192 L 610.67454 210.43982 L 613.40846 212.465\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><ellipse cx=\"610.2791\" cy=\"205.63785\" rx=\"1.5789333\" ry=\"1.543362\" fill=\"white\"/><ellipse cx=\"610.2791\" cy=\"205.63785\" rx=\"1.5789333\" ry=\"1.543362\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><line x1=\"246.98917\" y1=\"172.91338\" x2=\"325.73425\" y2=\"172.91338\" marker-end=\"url(#NegativeControls_Marker)\" marker-start=\"url(#NegativeControls_Marker_2)\" stroke=\"#235e00\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><line x1=\"397.2254\" y1=\"172.91338\" x2=\"416.4429\" y2=\"172.91338\" marker-end=\"url(#NegativeControls_Marker)\" marker-start=\"url(#NegativeControls_Marker_2)\" stroke=\"#235e00\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(292.39567 161.22461)\" fill=\"#235e00\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#235e00\" x=\".42\" y=\"8\" textLength=\"7.408\">W</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#235e00\" x=\"7.532\" y=\"8\" textLength=\"65.048\">ait Time (Duration)</tspan></text><line x1=\"327.35925\" y1=\"172.91338\" x2=\"395.3504\" y2=\"172.91338\" stroke=\"#235e00\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\" stroke-dasharray=\"1,4\"/><line x1=\"326.48425\" y1=\"192.7559\" x2=\"396.6004\" y2=\"192.7559\" marker-end=\"url(#NegativeControls_Marker_3)\" marker-start=\"url(#NegativeControls_Marker_4)\" stroke=\"#235e00\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(332.91142 181.06713)\" fill=\"#235e00\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#235e00\" x=\".42\" y=\"8\" textLength=\"4.592\">T</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#235e00\" x=\"4.276\" y=\"8\" textLength=\"52.304\">ransit Duration</tspan></text><line x1=\"96.75295\" y1=\"172.91338\" x2=\"115.97047\" y2=\"172.91338\" marker-end=\"url(#NegativeControls_Marker_3)\" marker-start=\"url(#NegativeControls_Marker_4)\" stroke=\"#235e00\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><line x1=\"187.46161\" y1=\"172.91338\" x2=\"206.67913\" y2=\"172.91338\" marker-end=\"url(#NegativeControls_Marker_3)\" marker-start=\"url(#NegativeControls_Marker_4)\" stroke=\"#235e00\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(115.06299 161.22461)\" fill=\"#235e00\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#235e00\" x=\".42\" y=\"8\" textLength=\"7.408\">W</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#235e00\" x=\"7.532\" y=\"8\" textLength=\"65.048\">ait Time (Duration)</tspan></text><line x1=\"117.59547\" y1=\"172.91338\" x2=\"185.58661\" y2=\"172.91338\" stroke=\"#235e00\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\" stroke-dasharray=\"1,4\"/><line x1=\"116.72047\" y1=\"192.7559\" x2=\"186.83661\" y2=\"192.7559\" marker-end=\"url(#NegativeControls_Marker_3)\" marker-start=\"url(#NegativeControls_Marker_4)\" stroke=\"#235e00\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(123.14764 181.06713)\" fill=\"#235e00\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#235e00\" x=\".42\" y=\"8\" textLength=\"4.592\">T</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#235e00\" x=\"4.276\" y=\"8\" textLength=\"52.304\">ransit Duration</tspan></text><text transform=\"translate(385.6629 310.38131)\" fill=\"#800c10\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\".296\" y=\"8\" textLength=\"23.408\">Alight-</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\"3.256\" y=\"18.223999\" textLength=\"17.488\">Time</tspan></text><line x1=\"396.8504\" y1=\"310.56102\" x2=\"396.8504\" y2=\"235.27559\" stroke=\"#b1001c\" stroke-opacity=\".703169\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><text transform=\"translate(175.89911 310.38131)\" fill=\"#800c10\"><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\".296\" y=\"8\" textLength=\"23.408\">Alight-</tspan><tspan font-family=\"Helvetica Neue\" font-size=\"8\" font-weight=\"500\" fill=\"#800c10\" x=\"3.256\" y=\"18.223999\" textLength=\"17.488\">Time</tspan></text><line x1=\"187.08661\" y1=\"310.56102\" x2=\"187.08661\" y2=\"235.27559\" stroke=\"#b1001c\" stroke-opacity=\".703169\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".5\"/><path d=\"M 169.33557 214.69893 L 137.901165 214.69893 C 137.867145 214.69893 137.83315 214.69719 137.799305 214.69373 L 133.27363 214.23033 C 132.763454 214.1781 132.37549 213.74838 132.37549 213.23553 L 132.37549 209.05274 C 132.37549 208.96517 132.38699 208.87798 132.4097 208.7934 L 133.41784 205.03899 C 133.53516 204.60206 133.93122 204.29833 134.383624 204.29833 L 137.381695 204.29833 C 137.51603 204.29833 137.64804 204.26319 137.7646 204.19641 L 137.7646 204.19641 C 137.88116 204.12962 138.013164 204.09449 138.1475 204.09449 L 140.87083 204.09449 C 140.99715 204.09449 141.12096 204.12979 141.228294 204.19641 L 141.228294 204.19641 C 141.335625 204.26303 141.45944 204.29833 141.58576 204.29833 L 147.87178 204.29833 C 148.022515 204.29833 148.1712 204.26344 148.306206 204.19641 L 148.306206 204.19641 C 148.44121 204.12937 148.5899 204.09449 148.74063 204.09449 L 151.34181 204.09449 C 151.46028 204.09449 151.57602 204.12999 151.674115 204.19641 L 151.674115 204.19641 C 151.77221 204.26283 151.88795 204.29833 152.00642 204.29833 L 158.27539 204.29833 C 158.40172 204.29833 158.52553 204.26303 158.63286 204.19641 L 158.63286 204.19641 C 158.74019 204.12979 158.864 204.09449 158.99033 204.09449 L 161.71157 204.09449 C 161.84072 204.09449 161.96742 204.12973 162.07802 204.19641 L 162.07802 204.19641 C 162.18863 204.26309 162.31533 204.29833 162.44447 204.29833 L 165.8233 204.29833 C 166.17011 204.29833 166.49216 204.47802 166.6743 204.77316 L 169.05282 208.62741 C 169.07914 208.67007 169.10864 208.7107 169.14106 208.74894 L 169.34049 208.98416 C 169.49217 209.16306 169.57614 209.38959 169.57772 209.62414 L 169.6014 213.15366 C 169.60218 213.26973 169.66096 213.37772 169.75802 213.44139 L 169.75802 213.44139 C 169.85498 213.50499 169.91338 213.61316 169.91338 213.72912 L 169.91338 214.12112 C 169.91338 214.44023 169.65469 214.69893 169.33557 214.69893 Z\" fill=\"#2b64b2\"/><path d=\"M 169.33557 214.69893 L 137.901165 214.69893 C 137.867145 214.69893 137.83315 214.69719 137.799305 214.69373 L 133.27363 214.23033 C 132.763454 214.1781 132.37549 213.74838 132.37549 213.23553 L 132.37549 209.05274 C 132.37549 208.96517 132.38699 208.87798 132.4097 208.7934 L 133.41784 205.03899 C 133.53516 204.60206 133.93122 204.29833 134.383624 204.29833 L 137.381695 204.29833 C 137.51603 204.29833 137.64804 204.26319 137.7646 204.19641 L 137.7646 204.19641 C 137.88116 204.12962 138.013164 204.09449 138.1475 204.09449 L 140.87083 204.09449 C 140.99715 204.09449 141.12096 204.12979 141.228294 204.19641 L 141.228294 204.19641 C 141.335625 204.26303 141.45944 204.29833 141.58576 204.29833 L 147.87178 204.29833 C 148.022515 204.29833 148.1712 204.26344 148.306206 204.19641 L 148.306206 204.19641 C 148.44121 204.12937 148.5899 204.09449 148.74063 204.09449 L 151.34181 204.09449 C 151.46028 204.09449 151.57602 204.12999 151.674115 204.19641 L 151.674115 204.19641 C 151.77221 204.26283 151.88795 204.29833 152.00642 204.29833 L 158.27539 204.29833 C 158.40172 204.29833 158.52553 204.26303 158.63286 204.19641 L 158.63286 204.19641 C 158.74019 204.12979 158.864 204.09449 158.99033 204.09449 L 161.71157 204.09449 C 161.84072 204.09449 161.96742 204.12973 162.07802 204.19641 L 162.07802 204.19641 C 162.18863 204.26309 162.31533 204.29833 162.44447 204.29833 L 165.8233 204.29833 C 166.17011 204.29833 166.49216 204.47802 166.6743 204.77316 L 169.05282 208.62741 C 169.07914 208.67007 169.10864 208.7107 169.14106 208.74894 L 169.34049 208.98416 C 169.49217 209.16306 169.57614 209.38959 169.57772 209.62414 L 169.6014 213.15366 C 169.60218 213.26973 169.66096 213.37772 169.75802 213.44139 L 169.75802 213.44139 C 169.85498 213.50499 169.91338 213.61316 169.91338 213.72912 L 169.91338 214.12112 C 169.91338 214.44023 169.65469 214.69893 169.33557 214.69893 Z\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".25\"/><path d=\"M 144.28039 205.09723 L 141.315474 205.09723 C 140.76319 205.09723 140.315474 205.54495 140.315474 206.09723 L 140.315474 207.89019 C 140.315474 208.44248 140.76319 208.89019 141.315474 208.89019 C 141.317185 208.89019 141.318896 208.89019 141.32061 208.89018 L 144.28552 208.87496 C 144.835794 208.87214 145.28039 208.42526 145.28039 207.87497 L 145.28039 206.09723 C 145.28039 205.54495 144.83267 205.09723 144.28039 205.09723 C 144.28039 205.09723 144.28039 205.09723 144.28039 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 144.28039 205.09723 L 141.315474 205.09723 C 140.76319 205.09723 140.315474 205.54495 140.315474 206.09723 L 140.315474 207.89019 C 140.315474 208.44248 140.76319 208.89019 141.315474 208.89019 C 141.317185 208.89019 141.318896 208.89019 141.32061 208.89018 L 144.28552 208.87496 C 144.835794 208.87214 145.28039 208.42526 145.28039 207.87497 L 145.28039 206.09723 C 145.28039 205.54495 144.83267 205.09723 144.28039 205.09723 C 144.28039 205.09723 144.28039 205.09723 144.28039 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 138.38298 205.09723 L 135.17971 205.09723 C 134.72977 205.09723 134.33523 205.39772 134.21566 205.83148 L 133.72549 207.60966 C 133.57872 208.14209 133.89136 208.69269 134.42379 208.83945 C 134.50898 208.86294 134.59692 208.87503 134.68529 208.8754 L 138.37874 208.89107 C 138.93102 208.89342 139.38063 208.44761 139.38297 207.89533 C 139.38298 207.89391 139.38298 207.8925 139.38298 207.89108 L 139.38298 206.09723 C 139.38298 205.54495 138.935266 205.09723 138.38298 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 138.38298 205.09723 L 135.17971 205.09723 C 134.72977 205.09723 134.33523 205.39772 134.21566 205.83148 L 133.72549 207.60966 C 133.57872 208.14209 133.89136 208.69269 134.42379 208.83945 C 134.50898 208.86294 134.59692 208.87503 134.68529 208.8754 L 138.37874 208.89107 C 138.93102 208.89342 139.38063 208.44761 139.38297 207.89533 C 139.38298 207.89391 139.38298 207.8925 139.38298 207.89108 L 139.38298 206.09723 C 139.38298 205.54495 138.935266 205.09723 138.38298 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 150.14045 205.09723 L 147.17554 205.09723 C 146.62325 205.09723 146.17554 205.54495 146.17554 206.09723 L 146.17554 207.89019 C 146.17554 208.44248 146.62325 208.89019 147.17554 208.89019 C 147.17725 208.89019 147.17896 208.89019 147.18067 208.89018 L 150.14558 208.87496 C 150.69586 208.87214 151.14045 208.42526 151.14045 207.87497 L 151.14045 206.09723 C 151.14045 205.54495 150.69274 205.09723 150.14045 205.09723 C 150.14045 205.09723 150.14045 205.09723 150.14045 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 150.14045 205.09723 L 147.17554 205.09723 C 146.62325 205.09723 146.17554 205.54495 146.17554 206.09723 L 146.17554 207.89019 C 146.17554 208.44248 146.62325 208.89019 147.17554 208.89019 C 147.17725 208.89019 147.17896 208.89019 147.18067 208.89018 L 150.14558 208.87496 C 150.69586 208.87214 151.14045 208.42526 151.14045 207.87497 L 151.14045 206.09723 C 151.14045 205.54495 150.69274 205.09723 150.14045 205.09723 C 150.14045 205.09723 150.14045 205.09723 150.14045 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 156.018185 205.09723 L 153.05327 205.09723 C 152.50099 205.09723 152.05327 205.54495 152.05327 206.09723 L 152.05327 207.89019 C 152.05327 208.44248 152.50099 208.89019 153.05327 208.89019 C 153.05498 208.89019 153.05669 208.89019 153.0584 208.89018 L 156.02332 208.87496 C 156.57359 208.87214 157.018185 208.42526 157.018185 207.87497 L 157.018185 206.09723 C 157.018185 205.54495 156.57047 205.09723 156.018185 205.09723 C 156.018185 205.09723 156.018185 205.09723 156.018185 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 156.018185 205.09723 L 153.05327 205.09723 C 152.50099 205.09723 152.05327 205.54495 152.05327 206.09723 L 152.05327 207.89019 C 152.05327 208.44248 152.50099 208.89019 153.05327 208.89019 C 153.05498 208.89019 153.05669 208.89019 153.0584 208.89018 L 156.02332 208.87496 C 156.57359 208.87214 157.018185 208.42526 157.018185 207.87497 L 157.018185 206.09723 C 157.018185 205.54495 156.57047 205.09723 156.018185 205.09723 C 156.018185 205.09723 156.018185 205.09723 156.018185 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 161.89592 205.09723 L 158.93101 205.09723 C 158.37872 205.09723 157.931005 205.54495 157.931005 206.09723 L 157.931005 207.89019 C 157.931005 208.44248 158.37872 208.89019 158.93101 208.89019 C 158.93272 208.89019 158.93443 208.89019 158.93614 208.89018 L 161.90105 208.87496 C 162.45133 208.87214 162.89592 208.42526 162.89592 207.87497 L 162.89592 206.09723 C 162.89592 205.54495 162.4482 205.09723 161.89592 205.09723 C 161.89592 205.09723 161.89592 205.09723 161.89592 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 161.89592 205.09723 L 158.93101 205.09723 C 158.37872 205.09723 157.931005 205.54495 157.931005 206.09723 L 157.931005 207.89019 C 157.931005 208.44248 158.37872 208.89019 158.93101 208.89019 C 158.93272 208.89019 158.93443 208.89019 158.93614 208.89018 L 161.90105 208.87496 C 162.45133 208.87214 162.89592 208.42526 162.89592 207.87497 L 162.89592 206.09723 C 162.89592 205.54495 162.4482 205.09723 161.89592 205.09723 C 161.89592 205.09723 161.89592 205.09723 161.89592 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 165.35382 205.09723 L 164.80874 205.09723 C 164.25645 205.09723 163.80874 205.54495 163.80874 206.09723 L 163.80874 207.88952 C 163.80874 208.4418 164.25645 208.88952 164.80874 208.88952 C 164.81067 208.88952 164.81261 208.88951 164.81454 208.8895 L 166.43767 208.88008 C 166.98994 208.87687 167.43505 208.42657 167.43184 207.87429 C 167.4308 207.69386 167.38095 207.51707 167.28759 207.36266 L 166.20954 205.5798 C 166.02842 205.28026 165.70386 205.09723 165.35382 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 165.35382 205.09723 L 164.80874 205.09723 C 164.25645 205.09723 163.80874 205.54495 163.80874 206.09723 L 163.80874 207.88952 C 163.80874 208.4418 164.25645 208.88952 164.80874 208.88952 C 164.81067 208.88952 164.81261 208.88951 164.81454 208.8895 L 166.43767 208.88008 C 166.98994 208.87687 167.43505 208.42657 167.43184 207.87429 C 167.4308 207.69386 167.38095 207.51707 167.28759 207.36266 L 166.20954 205.5798 C 166.02842 205.28026 165.70386 205.09723 165.35382 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><ellipse cx=\"161.36292\" cy=\"214.61105\" rx=\"2.1721532\" ry=\"2.137905\" fill=\"white\"/><ellipse cx=\"161.36292\" cy=\"214.61105\" rx=\"2.1721532\" ry=\"2.137905\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".25\"/><rect x=\"158.90653\" y=\"214.80085\" width=\"4.9649137\" height=\"3.4668675\" fill=\"white\"/><ellipse cx=\"161.36335\" cy=\"214.57153\" rx=\"1.2412304\" ry=\"1.15562435\" fill=\"white\"/><ellipse cx=\"161.36335\" cy=\"214.57153\" rx=\"1.2412304\" ry=\"1.15562435\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><ellipse cx=\"141.24726\" cy=\"214.61105\" rx=\"2.1721532\" ry=\"2.137905\" fill=\"white\"/><ellipse cx=\"141.24726\" cy=\"214.61105\" rx=\"2.1721532\" ry=\"2.137905\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".25\"/><rect x=\"138.790875\" y=\"214.80085\" width=\"4.9649137\" height=\"3.4668675\" fill=\"white\"/><ellipse cx=\"141.24769\" cy=\"214.57153\" rx=\"1.2412304\" ry=\"1.15562435\" fill=\"white\"/><ellipse cx=\"141.24769\" cy=\"214.57153\" rx=\"1.2412304\" ry=\"1.15562435\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\"/><path d=\"M 556.80703 214.69893 L 525.37262 214.69893 C 525.3386 214.69893 525.3046 214.69719 525.27076 214.69373 L 520.7451 214.23033 C 520.2349 214.1781 519.84695 213.74838 519.84695 213.23553 L 519.84695 209.05274 C 519.84695 208.96517 519.85845 208.87798 519.88116 208.7934 L 520.8893 205.03899 C 521.0066 204.60206 521.40267 204.29833 521.85508 204.29833 L 524.85315 204.29833 C 524.9875 204.29833 525.1195 204.26319 525.23605 204.19641 L 525.23605 204.19641 C 525.35262 204.12962 525.48462 204.09449 525.61896 204.09449 L 528.34228 204.09449 C 528.4686 204.09449 528.59242 204.12979 528.69975 204.19641 L 528.69975 204.19641 C 528.80708 204.26303 528.9309 204.29833 529.05722 204.29833 L 535.34324 204.29833 C 535.49397 204.29833 535.64266 204.26344 535.77766 204.19641 L 535.77766 204.19641 C 535.91266 204.12937 536.06135 204.09449 536.21208 204.09449 L 538.81327 204.09449 C 538.93173 204.09449 539.04748 204.12999 539.14557 204.19641 L 539.14557 204.19641 C 539.24366 204.26283 539.3594 204.29833 539.47787 204.29833 L 545.74685 204.29833 C 545.87317 204.29833 545.99698 204.26303 546.1043 204.19641 L 546.1043 204.19641 C 546.21164 204.12979 546.33546 204.09449 546.46178 204.09449 L 549.18303 204.09449 C 549.31217 204.09449 549.43887 204.12973 549.54948 204.19641 L 549.54948 204.19641 C 549.66008 204.26309 549.78678 204.29833 549.91593 204.29833 L 553.29475 204.29833 C 553.64157 204.29833 553.96362 204.47802 554.14575 204.77316 L 556.52427 208.62741 C 556.5506 208.67007 556.5801 208.7107 556.61252 208.74894 L 556.81195 208.98416 C 556.96363 209.16306 557.0476 209.38959 557.04917 209.62414 L 557.07285 213.15366 C 557.07363 213.26973 557.1324 213.37772 557.22947 213.44139 L 557.22947 213.44139 C 557.32643 213.50499 557.38484 213.61316 557.38484 213.72912 L 557.38484 214.12112 C 557.38484 214.44023 557.12614 214.69893 556.80703 214.69893 Z\" fill=\"#2b64b2\"/><path d=\"M 556.80703 214.69893 L 525.37262 214.69893 C 525.3386 214.69893 525.3046 214.69719 525.27076 214.69373 L 520.7451 214.23033 C 520.2349 214.1781 519.84695 213.74838 519.84695 213.23553 L 519.84695 209.05274 C 519.84695 208.96517 519.85845 208.87798 519.88116 208.7934 L 520.8893 205.03899 C 521.0066 204.60206 521.40267 204.29833 521.85508 204.29833 L 524.85315 204.29833 C 524.9875 204.29833 525.1195 204.26319 525.23605 204.19641 L 525.23605 204.19641 C 525.35262 204.12962 525.48462 204.09449 525.61896 204.09449 L 528.34228 204.09449 C 528.4686 204.09449 528.59242 204.12979 528.69975 204.19641 L 528.69975 204.19641 C 528.80708 204.26303 528.9309 204.29833 529.05722 204.29833 L 535.34324 204.29833 C 535.49397 204.29833 535.64266 204.26344 535.77766 204.19641 L 535.77766 204.19641 C 535.91266 204.12937 536.06135 204.09449 536.21208 204.09449 L 538.81327 204.09449 C 538.93173 204.09449 539.04748 204.12999 539.14557 204.19641 L 539.14557 204.19641 C 539.24366 204.26283 539.3594 204.29833 539.47787 204.29833 L 545.74685 204.29833 C 545.87317 204.29833 545.99698 204.26303 546.1043 204.19641 L 546.1043 204.19641 C 546.21164 204.12979 546.33546 204.09449 546.46178 204.09449 L 549.18303 204.09449 C 549.31217 204.09449 549.43887 204.12973 549.54948 204.19641 L 549.54948 204.19641 C 549.66008 204.26309 549.78678 204.29833 549.91593 204.29833 L 553.29475 204.29833 C 553.64157 204.29833 553.96362 204.47802 554.14575 204.77316 L 556.52427 208.62741 C 556.5506 208.67007 556.5801 208.7107 556.61252 208.74894 L 556.81195 208.98416 C 556.96363 209.16306 557.0476 209.38959 557.04917 209.62414 L 557.07285 213.15366 C 557.07363 213.26973 557.1324 213.37772 557.22947 213.44139 L 557.22947 213.44139 C 557.32643 213.50499 557.38484 213.61316 557.38484 213.72912 L 557.38484 214.12112 C 557.38484 214.44023 557.12614 214.69893 556.80703 214.69893 Z\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".25\"/><path d=\"M 531.75184 205.09723 L 528.78693 205.09723 C 528.23464 205.09723 527.78693 205.54495 527.78693 206.09723 L 527.78693 207.89019 C 527.78693 208.44248 528.23464 208.89019 528.78693 208.89019 C 528.78864 208.89019 528.79035 208.89019 528.79206 208.89018 L 531.75697 208.87496 C 532.30725 208.87214 532.75184 208.42526 532.75184 207.87497 L 532.75184 206.09723 C 532.75184 205.54495 532.30413 205.09723 531.75184 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 531.75184 205.09723 L 528.78693 205.09723 C 528.23464 205.09723 527.78693 205.54495 527.78693 206.09723 L 527.78693 207.89019 C 527.78693 208.44248 528.23464 208.89019 528.78693 208.89019 C 528.78864 208.89019 528.79035 208.89019 528.79206 208.89018 L 531.75697 208.87496 C 532.30725 208.87214 532.75184 208.42526 532.75184 207.87497 L 532.75184 206.09723 C 532.75184 205.54495 532.30413 205.09723 531.75184 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 525.85444 205.09723 L 522.65116 205.09723 C 522.20122 205.09723 521.8067 205.39772 521.68712 205.83148 L 521.19695 207.60966 C 521.05018 208.14209 521.3628 208.69269 521.89524 208.83945 C 521.98044 208.86294 522.06837 208.87503 522.15675 208.8754 L 525.8502 208.89107 C 526.40247 208.89342 526.85208 208.44761 526.85443 207.89533 C 526.85443 207.89391 526.85444 207.8925 526.85444 207.89108 L 526.85444 206.09723 C 526.85444 205.54495 526.40672 205.09723 525.85444 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 525.85444 205.09723 L 522.65116 205.09723 C 522.20122 205.09723 521.8067 205.39772 521.68712 205.83148 L 521.19695 207.60966 C 521.05018 208.14209 521.3628 208.69269 521.89524 208.83945 C 521.98044 208.86294 522.06837 208.87503 522.15675 208.8754 L 525.8502 208.89107 C 526.40247 208.89342 526.85208 208.44761 526.85443 207.89533 C 526.85443 207.89391 526.85444 207.8925 526.85444 207.89108 L 526.85444 206.09723 C 526.85444 205.54495 526.40672 205.09723 525.85444 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 537.6119 205.09723 L 534.647 205.09723 C 534.0947 205.09723 533.647 205.54495 533.647 206.09723 L 533.647 207.89019 C 533.647 208.44248 534.0947 208.89019 534.647 208.89019 C 534.6487 208.89019 534.6504 208.89019 534.65212 208.89018 L 537.61704 208.87496 C 538.1673 208.87214 538.6119 208.42526 538.6119 207.87497 L 538.6119 206.09723 C 538.6119 205.54495 538.1642 205.09723 537.6119 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 537.6119 205.09723 L 534.647 205.09723 C 534.0947 205.09723 533.647 205.54495 533.647 206.09723 L 533.647 207.89019 C 533.647 208.44248 534.0947 208.89019 534.647 208.89019 C 534.6487 208.89019 534.6504 208.89019 534.65212 208.89018 L 537.61704 208.87496 C 538.1673 208.87214 538.6119 208.42526 538.6119 207.87497 L 538.6119 206.09723 C 538.6119 205.54495 538.1642 205.09723 537.6119 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 543.48964 205.09723 L 540.52473 205.09723 C 539.97244 205.09723 539.52473 205.54495 539.52473 206.09723 L 539.52473 207.89019 C 539.52473 208.44248 539.97244 208.89019 540.52473 208.89019 C 540.52644 208.89019 540.52815 208.89019 540.52986 208.89018 L 543.49477 208.87496 C 544.04505 208.87214 544.48964 208.42526 544.48964 207.87497 L 544.48964 206.09723 C 544.48964 205.54495 544.04192 205.09723 543.48964 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 543.48964 205.09723 L 540.52473 205.09723 C 539.97244 205.09723 539.52473 205.54495 539.52473 206.09723 L 539.52473 207.89019 C 539.52473 208.44248 539.97244 208.89019 540.52473 208.89019 C 540.52644 208.89019 540.52815 208.89019 540.52986 208.89018 L 543.49477 208.87496 C 544.04505 208.87214 544.48964 208.42526 544.48964 207.87497 L 544.48964 206.09723 C 544.48964 205.54495 544.04192 205.09723 543.48964 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 549.36737 205.09723 L 546.40246 205.09723 C 545.85017 205.09723 545.40246 205.54495 545.40246 206.09723 L 545.40246 207.89019 C 545.40246 208.44248 545.85017 208.89019 546.40246 208.89019 C 546.40417 208.89019 546.40588 208.89019 546.4076 208.89018 L 549.3725 208.87496 C 549.92278 208.87214 550.36737 208.42526 550.36737 207.87497 L 550.36737 206.09723 C 550.36737 205.54495 549.91966 205.09723 549.36737 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 549.36737 205.09723 L 546.40246 205.09723 C 545.85017 205.09723 545.40246 205.54495 545.40246 206.09723 L 545.40246 207.89019 C 545.40246 208.44248 545.85017 208.89019 546.40246 208.89019 C 546.40417 208.89019 546.40588 208.89019 546.4076 208.89018 L 549.3725 208.87496 C 549.92278 208.87214 550.36737 208.42526 550.36737 207.87497 L 550.36737 206.09723 C 550.36737 205.54495 549.91966 205.09723 549.36737 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 552.82527 205.09723 L 552.2802 205.09723 C 551.7279 205.09723 551.2802 205.54495 551.2802 206.09723 L 551.2802 207.88952 C 551.2802 208.4418 551.7279 208.88952 552.2802 208.88952 C 552.28213 208.88952 552.28406 208.88951 552.286 208.8895 L 553.90912 208.88008 C 554.4614 208.87687 554.9065 208.42657 554.9033 207.87429 C 554.90225 207.69386 554.8524 207.51707 554.75904 207.36266 L 553.681 205.5798 C 553.49988 205.28026 553.1753 205.09723 552.82527 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 552.82527 205.09723 L 552.2802 205.09723 C 551.7279 205.09723 551.2802 205.54495 551.2802 206.09723 L 551.2802 207.88952 C 551.2802 208.4418 551.7279 208.88952 552.2802 208.88952 C 552.28213 208.88952 552.28406 208.88951 552.286 208.8895 L 553.90912 208.88008 C 554.4614 208.87687 554.9065 208.42657 554.9033 207.87429 C 554.90225 207.69386 554.8524 207.51707 554.75904 207.36266 L 553.681 205.5798 C 553.49988 205.28026 553.1753 205.09723 552.82527 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><circle cx=\"548.8384\" cy=\"214.64933\" r=\"2.5511853\" fill=\"white\"/><circle cx=\"548.8384\" cy=\"214.64933\" r=\"2.5511853\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".25\"/><rect x=\"545.6491\" y=\"214.80085\" width=\"6.4817913\" height=\"3.4668675\" fill=\"white\"/><circle cx=\"548.8234\" cy=\"214.70823\" r=\"1.4173251\" fill=\"white\"/><circle cx=\"548.8234\" cy=\"214.70823\" r=\"1.4173251\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.25\"/><circle cx=\"528.99588\" cy=\"214.64933\" r=\"2.5511853\" fill=\"white\"/><circle cx=\"528.99588\" cy=\"214.64933\" r=\"2.5511853\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".25\"/><rect x=\"525.8066\" y=\"214.80085\" width=\"6.4817913\" height=\"3.4668675\" fill=\"white\"/><circle cx=\"528.98088\" cy=\"214.70823\" r=\"1.4173251\" fill=\"white\"/><circle cx=\"528.98088\" cy=\"214.70823\" r=\"1.4173251\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.25\"/><path d=\"M 379.59935 214.69893 L 348.16494 214.69893 C 348.13092 214.69893 348.09693 214.69719 348.06308 214.69373 L 343.5374 214.23033 C 343.02723 214.1781 342.63927 213.74838 342.63927 213.23553 L 342.63927 209.05274 C 342.63927 208.96517 342.65077 208.87798 342.67348 208.7934 L 343.68161 205.03899 C 343.79894 204.60206 344.195 204.29833 344.6474 204.29833 L 347.64547 204.29833 C 347.77981 204.29833 347.91181 204.26319 348.02838 204.19641 L 348.02838 204.19641 C 348.14494 204.12962 348.27694 204.09449 348.41128 204.09449 L 351.1346 204.09449 C 351.26093 204.09449 351.38474 204.12979 351.49207 204.19641 L 351.49207 204.19641 C 351.5994 204.26303 351.72322 204.29833 351.84954 204.29833 L 358.13556 204.29833 C 358.2863 204.29833 358.43498 204.26344 358.56998 204.19641 L 358.56998 204.19641 C 358.70499 204.12937 358.85367 204.09449 359.0044 204.09449 L 361.6056 204.09449 C 361.72406 204.09449 361.8398 204.12999 361.9379 204.19641 L 361.9379 204.19641 C 362.03599 204.26283 362.15173 204.29833 362.2702 204.29833 L 368.53917 204.29833 C 368.6655 204.29833 368.7893 204.26303 368.89664 204.19641 L 368.89664 204.19641 C 369.00397 204.12979 369.12778 204.09449 369.2541 204.09449 L 371.97535 204.09449 C 372.1045 204.09449 372.2312 204.12973 372.3418 204.19641 L 372.3418 204.19641 C 372.4524 204.26309 372.5791 204.29833 372.70825 204.29833 L 376.08708 204.29833 C 376.4339 204.29833 376.75594 204.47802 376.93808 204.77316 L 379.3166 208.62741 C 379.34292 208.67007 379.37242 208.7107 379.40484 208.74894 L 379.60427 208.98416 C 379.75595 209.16306 379.83992 209.38959 379.8415 209.62414 L 379.86518 213.15366 C 379.86596 213.26973 379.92474 213.37772 380.0218 213.44139 L 380.0218 213.44139 C 380.11876 213.50499 380.17716 213.61316 380.17716 213.72912 L 380.17716 214.12112 C 380.17716 214.44023 379.91847 214.69893 379.59935 214.69893 Z\" fill=\"#2b64b2\"/><path d=\"M 379.59935 214.69893 L 348.16494 214.69893 C 348.13092 214.69893 348.09693 214.69719 348.06308 214.69373 L 343.5374 214.23033 C 343.02723 214.1781 342.63927 213.74838 342.63927 213.23553 L 342.63927 209.05274 C 342.63927 208.96517 342.65077 208.87798 342.67348 208.7934 L 343.68161 205.03899 C 343.79894 204.60206 344.195 204.29833 344.6474 204.29833 L 347.64547 204.29833 C 347.77981 204.29833 347.91181 204.26319 348.02838 204.19641 L 348.02838 204.19641 C 348.14494 204.12962 348.27694 204.09449 348.41128 204.09449 L 351.1346 204.09449 C 351.26093 204.09449 351.38474 204.12979 351.49207 204.19641 L 351.49207 204.19641 C 351.5994 204.26303 351.72322 204.29833 351.84954 204.29833 L 358.13556 204.29833 C 358.2863 204.29833 358.43498 204.26344 358.56998 204.19641 L 358.56998 204.19641 C 358.70499 204.12937 358.85367 204.09449 359.0044 204.09449 L 361.6056 204.09449 C 361.72406 204.09449 361.8398 204.12999 361.9379 204.19641 L 361.9379 204.19641 C 362.03599 204.26283 362.15173 204.29833 362.2702 204.29833 L 368.53917 204.29833 C 368.6655 204.29833 368.7893 204.26303 368.89664 204.19641 L 368.89664 204.19641 C 369.00397 204.12979 369.12778 204.09449 369.2541 204.09449 L 371.97535 204.09449 C 372.1045 204.09449 372.2312 204.12973 372.3418 204.19641 L 372.3418 204.19641 C 372.4524 204.26309 372.5791 204.29833 372.70825 204.29833 L 376.08708 204.29833 C 376.4339 204.29833 376.75594 204.47802 376.93808 204.77316 L 379.3166 208.62741 C 379.34292 208.67007 379.37242 208.7107 379.40484 208.74894 L 379.60427 208.98416 C 379.75595 209.16306 379.83992 209.38959 379.8415 209.62414 L 379.86518 213.15366 C 379.86596 213.26973 379.92474 213.37772 380.0218 213.44139 L 380.0218 213.44139 C 380.11876 213.50499 380.17716 213.61316 380.17716 213.72912 L 380.17716 214.12112 C 380.17716 214.44023 379.91847 214.69893 379.59935 214.69893 Z\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".25\"/><path d=\"M 354.54417 205.09723 L 351.57925 205.09723 C 351.02697 205.09723 350.57925 205.54495 350.57925 206.09723 L 350.57925 207.89019 C 350.57925 208.44248 351.02697 208.89019 351.57925 208.89019 C 351.58096 208.89019 351.58267 208.89019 351.58438 208.89018 L 354.5493 208.87496 C 355.09957 208.87214 355.54417 208.42526 355.54417 207.87497 L 355.54417 206.09723 C 355.54417 205.54495 355.09645 205.09723 354.54417 205.09723 C 354.54417 205.09723 354.54417 205.09723 354.54417 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 354.54417 205.09723 L 351.57925 205.09723 C 351.02697 205.09723 350.57925 205.54495 350.57925 206.09723 L 350.57925 207.89019 C 350.57925 208.44248 351.02697 208.89019 351.57925 208.89019 C 351.58096 208.89019 351.58267 208.89019 351.58438 208.89018 L 354.5493 208.87496 C 355.09957 208.87214 355.54417 208.42526 355.54417 207.87497 L 355.54417 206.09723 C 355.54417 205.54495 355.09645 205.09723 354.54417 205.09723 C 354.54417 205.09723 354.54417 205.09723 354.54417 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 348.64676 205.09723 L 345.44348 205.09723 C 344.99355 205.09723 344.59901 205.39772 344.47944 205.83148 L 343.98927 207.60966 C 343.8425 208.14209 344.15514 208.69269 344.68756 208.83945 C 344.77276 208.86294 344.8607 208.87503 344.94907 208.8754 L 348.64252 208.89107 C 349.1948 208.89342 349.6444 208.44761 349.64675 207.89533 C 349.64676 207.89391 349.64676 207.8925 349.64676 207.89108 L 349.64676 206.09723 C 349.64676 205.54495 349.19904 205.09723 348.64676 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 348.64676 205.09723 L 345.44348 205.09723 C 344.99355 205.09723 344.59901 205.39772 344.47944 205.83148 L 343.98927 207.60966 C 343.8425 208.14209 344.15514 208.69269 344.68756 208.83945 C 344.77276 208.86294 344.8607 208.87503 344.94907 208.8754 L 348.64252 208.89107 C 349.1948 208.89342 349.6444 208.44761 349.64675 207.89533 C 349.64676 207.89391 349.64676 207.8925 349.64676 207.89108 L 349.64676 206.09723 C 349.64676 205.54495 349.19904 205.09723 348.64676 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 360.40423 205.09723 L 357.43932 205.09723 C 356.88703 205.09723 356.43932 205.54495 356.43932 206.09723 L 356.43932 207.89019 C 356.43932 208.44248 356.88703 208.89019 357.43932 208.89019 C 357.44103 208.89019 357.44274 208.89019 357.44445 208.89018 L 360.40936 208.87496 C 360.95964 208.87214 361.40423 208.42526 361.40423 207.87497 L 361.40423 206.09723 C 361.40423 205.54495 360.95651 205.09723 360.40423 205.09723 C 360.40423 205.09723 360.40423 205.09723 360.40423 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 360.40423 205.09723 L 357.43932 205.09723 C 356.88703 205.09723 356.43932 205.54495 356.43932 206.09723 L 356.43932 207.89019 C 356.43932 208.44248 356.88703 208.89019 357.43932 208.89019 C 357.44103 208.89019 357.44274 208.89019 357.44445 208.89018 L 360.40936 208.87496 C 360.95964 208.87214 361.40423 208.42526 361.40423 207.87497 L 361.40423 206.09723 C 361.40423 205.54495 360.95651 205.09723 360.40423 205.09723 C 360.40423 205.09723 360.40423 205.09723 360.40423 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 366.28196 205.09723 L 363.31705 205.09723 C 362.76477 205.09723 362.31705 205.54495 362.31705 206.09723 L 362.31705 207.89019 C 362.31705 208.44248 362.76477 208.89019 363.31705 208.89019 C 363.31876 208.89019 363.32047 208.89019 363.32218 208.89018 L 366.2871 208.87496 C 366.83737 208.87214 367.28196 208.42526 367.28196 207.87497 L 367.28196 206.09723 C 367.28196 205.54495 366.83425 205.09723 366.28196 205.09723 C 366.28196 205.09723 366.28196 205.09723 366.28196 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 366.28196 205.09723 L 363.31705 205.09723 C 362.76477 205.09723 362.31705 205.54495 362.31705 206.09723 L 362.31705 207.89019 C 362.31705 208.44248 362.76477 208.89019 363.31705 208.89019 C 363.31876 208.89019 363.32047 208.89019 363.32218 208.89018 L 366.2871 208.87496 C 366.83737 208.87214 367.28196 208.42526 367.28196 207.87497 L 367.28196 206.09723 C 367.28196 205.54495 366.83425 205.09723 366.28196 205.09723 C 366.28196 205.09723 366.28196 205.09723 366.28196 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 372.1597 205.09723 L 369.19478 205.09723 C 368.6425 205.09723 368.19478 205.54495 368.19478 206.09723 L 368.19478 207.89019 C 368.19478 208.44248 368.6425 208.89019 369.19478 208.89019 C 369.1965 208.89019 369.1982 208.89019 369.19992 208.89018 L 372.16483 208.87496 C 372.7151 208.87214 373.1597 208.42526 373.1597 207.87497 L 373.1597 206.09723 C 373.1597 205.54495 372.71198 205.09723 372.1597 205.09723 C 372.1597 205.09723 372.1597 205.09723 372.1597 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 372.1597 205.09723 L 369.19478 205.09723 C 368.6425 205.09723 368.19478 205.54495 368.19478 206.09723 L 368.19478 207.89019 C 368.19478 208.44248 368.6425 208.89019 369.19478 208.89019 C 369.1965 208.89019 369.1982 208.89019 369.19992 208.89018 L 372.16483 208.87496 C 372.7151 208.87214 373.1597 208.42526 373.1597 207.87497 L 373.1597 206.09723 C 373.1597 205.54495 372.71198 205.09723 372.1597 205.09723 C 372.1597 205.09723 372.1597 205.09723 372.1597 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><path d=\"M 375.6176 205.09723 L 375.07252 205.09723 C 374.52023 205.09723 374.07252 205.54495 374.07252 206.09723 L 374.07252 207.88952 C 374.07252 208.4418 374.52023 208.88952 375.07252 208.88952 C 375.07445 208.88952 375.07639 208.88951 375.07832 208.8895 L 376.70144 208.88008 C 377.25372 208.87687 377.69883 208.42657 377.69562 207.87429 C 377.69458 207.69386 377.64473 207.51707 377.55137 207.36266 L 376.47332 205.5798 C 376.2922 205.28026 375.96764 205.09723 375.6176 205.09723 Z\" fill=\"#dadada\"/><path d=\"M 375.6176 205.09723 L 375.07252 205.09723 C 374.52023 205.09723 374.07252 205.54495 374.07252 206.09723 L 374.07252 207.88952 C 374.07252 208.4418 374.52023 208.88952 375.07252 208.88952 C 375.07445 208.88952 375.07639 208.88951 375.07832 208.8895 L 376.70144 208.88008 C 377.25372 208.87687 377.69883 208.42657 377.69562 207.87429 C 377.69458 207.69386 377.64473 207.51707 377.55137 207.36266 L 376.47332 205.5798 C 376.2922 205.28026 375.96764 205.09723 375.6176 205.09723 Z\" stroke=\"#003776\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".2\"/><circle cx=\"371.63073\" cy=\"214.64933\" r=\"2.5511853\" fill=\"white\"/><circle cx=\"371.63073\" cy=\"214.64933\" r=\"2.5511853\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".25\"/><rect x=\"368.44143\" y=\"214.80085\" width=\"6.4817913\" height=\"3.4668675\" fill=\"white\"/><circle cx=\"371.61572\" cy=\"214.70823\" r=\"1.4173251\" fill=\"white\"/><circle cx=\"371.61572\" cy=\"214.70823\" r=\"1.4173251\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.25\"/><circle cx=\"351.7882\" cy=\"214.64933\" r=\"2.5511853\" fill=\"white\"/><circle cx=\"351.7882\" cy=\"214.64933\" r=\"2.5511853\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\".25\"/><rect x=\"348.59892\" y=\"214.80085\" width=\"6.4817913\" height=\"3.4668675\" fill=\"white\"/><circle cx=\"351.7732\" cy=\"214.70823\" r=\"1.4173251\" fill=\"white\"/><circle cx=\"351.7732\" cy=\"214.70823\" r=\"1.4173251\" stroke=\"black\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.25\"/></g></g></svg>"
  },
  {
    "sha": "2144d0718e991fb1cdd01d65ab1d17b422b60860",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/pom.xml",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/pom.xml",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/pom.xml?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -22,7 +22,7 @@\n     </scm>\n \n     <properties>\n-        <otp.serialization.version.id>4</otp.serialization.version.id>\n+        <otp.serialization.version.id>501</otp.serialization.version.id>\n         <!-- Lib versions - keep list sorted on property name -->\n         <geotools.version>21.2</geotools.version>\n         <geotools.wfs.version>16.5</geotools.wfs.version>"
  },
  {
    "sha": "05d0862360e76303ef29ee4dcf4824a9aa592cff",
    "filename": "src/ext/java/org/opentripplanner/ext/flex/FlexIndex.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/ext/java/org/opentripplanner/ext/flex/FlexIndex.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/ext/java/org/opentripplanner/ext/flex/FlexIndex.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/ext/java/org/opentripplanner/ext/flex/FlexIndex.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -9,7 +9,7 @@\n import org.opentripplanner.model.FlexStopLocation;\n import org.opentripplanner.model.FlexLocationGroup;\n import org.opentripplanner.model.Route;\n-import org.opentripplanner.model.SimpleTransfer;\n+import org.opentripplanner.model.transfers.SimpleTransfer;\n import org.opentripplanner.model.StopLocation;\n import org.opentripplanner.model.Trip;\n import org.opentripplanner.routing.graph.Graph;"
  },
  {
    "sha": "de226bf17cd5a4d5417a35f4bb06ac47f3d398d5",
    "filename": "src/ext/java/org/opentripplanner/ext/flex/template/FlexAccessEgressTemplate.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/ext/java/org/opentripplanner/ext/flex/template/FlexAccessEgressTemplate.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/ext/java/org/opentripplanner/ext/flex/template/FlexAccessEgressTemplate.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/ext/java/org/opentripplanner/ext/flex/template/FlexAccessEgressTemplate.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -5,7 +5,7 @@\n import org.opentripplanner.ext.flex.edgetype.FlexTripEdge;\n import org.opentripplanner.ext.flex.flexpathcalculator.FlexPathCalculator;\n import org.opentripplanner.ext.flex.trip.FlexTrip;\n-import org.opentripplanner.model.SimpleTransfer;\n+import org.opentripplanner.model.transfers.SimpleTransfer;\n import org.opentripplanner.model.Stop;\n import org.opentripplanner.model.StopLocation;\n import org.opentripplanner.model.calendar.ServiceDate;"
  },
  {
    "sha": "d2e8348cbdd81753666d5905a1a90f804846397e",
    "filename": "src/ext/java/org/opentripplanner/ext/flex/template/FlexAccessTemplate.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/ext/java/org/opentripplanner/ext/flex/template/FlexAccessTemplate.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/ext/java/org/opentripplanner/ext/flex/template/FlexAccessTemplate.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/ext/java/org/opentripplanner/ext/flex/template/FlexAccessTemplate.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -4,7 +4,7 @@\n import org.opentripplanner.ext.flex.edgetype.FlexTripEdge;\n import org.opentripplanner.ext.flex.flexpathcalculator.FlexPathCalculator;\n import org.opentripplanner.ext.flex.trip.FlexTrip;\n-import org.opentripplanner.model.SimpleTransfer;\n+import org.opentripplanner.model.transfers.SimpleTransfer;\n import org.opentripplanner.model.Stop;\n import org.opentripplanner.model.StopLocation;\n import org.opentripplanner.model.plan.Itinerary;"
  },
  {
    "sha": "84bfe4f1156550983089108b5e1bd32bd610f878",
    "filename": "src/ext/java/org/opentripplanner/ext/flex/template/FlexEgressTemplate.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/ext/java/org/opentripplanner/ext/flex/template/FlexEgressTemplate.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/ext/java/org/opentripplanner/ext/flex/template/FlexEgressTemplate.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/ext/java/org/opentripplanner/ext/flex/template/FlexEgressTemplate.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -5,7 +5,7 @@\n import org.opentripplanner.ext.flex.edgetype.FlexTripEdge;\n import org.opentripplanner.ext.flex.flexpathcalculator.FlexPathCalculator;\n import org.opentripplanner.ext.flex.trip.FlexTrip;\n-import org.opentripplanner.model.SimpleTransfer;\n+import org.opentripplanner.model.transfers.SimpleTransfer;\n import org.opentripplanner.model.Stop;\n import org.opentripplanner.model.StopLocation;\n import org.opentripplanner.routing.core.State;"
  },
  {
    "sha": "a44d891dc2ab7cb4ba0b7724b6f7e0f8946c40e7",
    "filename": "src/ext/java/org/opentripplanner/ext/transmodelapi/model/timetable/InterchangeType.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/ext/java/org/opentripplanner/ext/transmodelapi/model/timetable/InterchangeType.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/ext/java/org/opentripplanner/ext/transmodelapi/model/timetable/InterchangeType.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/ext/java/org/opentripplanner/ext/transmodelapi/model/timetable/InterchangeType.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -4,7 +4,7 @@\n import graphql.schema.GraphQLFieldDefinition;\n import graphql.schema.GraphQLObjectType;\n import graphql.schema.GraphQLOutputType;\n-import org.opentripplanner.model.Transfer;\n+import org.opentripplanner.model.transfers.Transfer;\n \n public class InterchangeType {\n "
  },
  {
    "sha": "17276a3171e24e8f80dd7ebe56f39f5b61881025",
    "filename": "src/main/java/org/opentripplanner/api/mapping/TransferMapper.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/api/mapping/TransferMapper.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/api/mapping/TransferMapper.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/api/mapping/TransferMapper.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -1,7 +1,7 @@\n package org.opentripplanner.api.mapping;\n \n import org.opentripplanner.api.model.ApiTransfer;\n-import org.opentripplanner.model.SimpleTransfer;\n+import org.opentripplanner.model.transfers.SimpleTransfer;\n \n public class TransferMapper {\n     /** Make a transfer from a simpletransfer edge from the graph. */"
  },
  {
    "sha": "9108913b19cd4b71f0f218d03fa8d0161377dce9",
    "filename": "src/main/java/org/opentripplanner/graph_builder/module/AddTransitModelEntitiesToGraph.java",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/graph_builder/module/AddTransitModelEntitiesToGraph.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/graph_builder/module/AddTransitModelEntitiesToGraph.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/graph_builder/module/AddTransitModelEntitiesToGraph.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -16,10 +16,10 @@\n import org.opentripplanner.model.Station;\n import org.opentripplanner.model.StationElement;\n import org.opentripplanner.model.Stop;\n-import org.opentripplanner.model.Transfer;\n+import org.opentripplanner.model.transfers.Transfer;\n import org.opentripplanner.model.TransitMode;\n import org.opentripplanner.model.TripPattern;\n-import org.opentripplanner.routing.core.TransferTable;\n+import org.opentripplanner.model.transfers.TransferService;\n import org.opentripplanner.routing.edgetype.ElevatorAlightEdge;\n import org.opentripplanner.routing.edgetype.ElevatorBoardEdge;\n import org.opentripplanner.routing.edgetype.ElevatorHopEdge;\n@@ -47,12 +47,12 @@\n     private static final Logger LOG = LoggerFactory.getLogger(AddTransitModelEntitiesToGraph.class);\n \n \n-    private GtfsFeedId feedId;\n+    private final GtfsFeedId feedId;\n \n     private final OtpTransitService transitService;\n \n     // Map of all station elements and their vertices in the graph\n-    private Map<StationElement, Vertex> stationElementNodes = new HashMap<>();\n+    private final Map<StationElement, Vertex> stationElementNodes = new HashMap<>();\n \n     private final int subwayAccessTime;\n \n@@ -357,9 +357,10 @@ private void addAgenciesToGraph(Graph graph) {\n \n     private void addTransfersToGraph(Graph graph) {\n         Collection<Transfer> transfers = transitService.getAllTransfers();\n-        TransferTable transferTable = graph.getTransferTable();\n+        TransferService transferService = graph.getTransferService();\n+\n         for (Transfer sourceTransfer : transfers) {\n-            transferTable.addTransfer(sourceTransfer);\n+            transferService.addTransfer(sourceTransfer);\n         }\n     }\n "
  },
  {
    "sha": "d1d083abe912f091a41f5e2700f2cebf5b2f3d21",
    "filename": "src/main/java/org/opentripplanner/graph_builder/module/DirectTransferGenerator.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/graph_builder/module/DirectTransferGenerator.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/graph_builder/module/DirectTransferGenerator.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/graph_builder/module/DirectTransferGenerator.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -4,7 +4,7 @@\n import org.opentripplanner.graph_builder.DataImportIssueStore;\n import org.opentripplanner.graph_builder.issues.StopNotLinkedForTransfers;\n import org.opentripplanner.graph_builder.services.GraphBuilderModule;\n-import org.opentripplanner.model.SimpleTransfer;\n+import org.opentripplanner.model.transfers.SimpleTransfer;\n import org.opentripplanner.model.Stop;\n import org.opentripplanner.routing.graph.Graph;\n import org.opentripplanner.routing.graph.GraphIndex;"
  },
  {
    "sha": "c530659c01945aa71d09ac8fdcc3f9c6fdb7104b",
    "filename": "src/main/java/org/opentripplanner/gtfs/mapping/TransferMapper.java",
    "status": "modified",
    "additions": 59,
    "deletions": 8,
    "changes": 67,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/gtfs/mapping/TransferMapper.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/gtfs/mapping/TransferMapper.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/gtfs/mapping/TransferMapper.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -2,17 +2,45 @@\n \n import org.opentripplanner.model.Route;\n import org.opentripplanner.model.Stop;\n-import org.opentripplanner.model.Transfer;\n-import org.opentripplanner.model.TransferType;\n import org.opentripplanner.model.Trip;\n+import org.opentripplanner.model.transfers.Transfer;\n+import org.opentripplanner.model.transfers.TransferPriority;\n \n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.List;\n import java.util.stream.Collectors;\n \n /** Responsible for mapping GTFS Transfer into the OTP model. */\n class TransferMapper {\n+    /**\n+     * This transfer is recommended over other transfers. The routing algorithm should prefer\n+     * this transfer compared to other transfers, for example by assigning a lower weight to it.\n+     */\n+    private static final int RECOMMENDED = 0;\n+\n+    /**\n+     * This means the departing vehicle will wait for the arriving one and leave sufficient time\n+     * for a rider to transfer between routes.\n+     */\n+    private static final int GUARANTEED = 1;\n+\n+    /**\n+     * This is a regular transfer that is defined in the transit data (as opposed to\n+     * OpenStreetMap data). In the case that both are present, this should take precedence.\n+     * Because the the duration of the transfer is given and not the distance, walk speed will\n+     * have no effect on this.\n+     */\n+    private static final int MIN_TIME = 2;\n+\n+    /**\n+     * Transfers between these stops (and route/trip) is not possible (or not allowed), even if\n+     * a transfer is already defined via OpenStreetMap data or in transit data.\n+     */\n+    private static final int FORBIDDEN = 3;\n+\n+\n     private final RouteMapper routeMapper;\n \n     private final StationMapper stationMapper;\n@@ -38,9 +66,8 @@\n     }\n \n     /** Map from GTFS to OTP model, {@code null} safe.  */\n-\n     Collection<Transfer> map(org.onebusaway.gtfs.model.Transfer orginal) {\n-        return orginal == null ? null : doMap(orginal);\n+        return orginal == null ? List.of() : doMap(orginal);\n     }\n \n     private Collection<Transfer> doMap(org.onebusaway.gtfs.model.Transfer rhs) {\n@@ -49,7 +76,11 @@\n         Trip toTrip = tripMapper.map(rhs.getToTrip());\n         Route fromRoute = routeMapper.map(rhs.getFromRoute());\n         Route toRoute = routeMapper.map(rhs.getToRoute());\n-        TransferType transferType = TransferType.valueOfGtfsCode(rhs.getTransferType());\n+\n+        boolean guaranteed = rhs.getTransferType() == GUARANTEED;\n+        boolean staySeated = sameBlockId(fromTrip, toTrip);\n+\n+        TransferPriority transferPriority = mapTypeToPriority(rhs.getTransferType());\n         int transferTime = rhs.getMinTransferTime();\n \n         // Transfers may be specified using parent stations\n@@ -73,12 +104,14 @@\n                                 toRoute,\n                                 fromTrip,\n                                 toTrip,\n-                                transferType,\n+                                staySeated,\n+                                guaranteed,\n+                                transferPriority,\n                                 transferTime\n-                        ));\n+                        )\n+                );\n             }\n         }\n-\n         return lhs;\n     }\n \n@@ -89,4 +122,22 @@\n             return stationMapper.map(gtfsStop).getChildStops();\n         }\n     }\n+\n+    static TransferPriority mapTypeToPriority(int type) {\n+        switch (type) {\n+            case FORBIDDEN:\n+                return TransferPriority.NOT_ALLOWED;\n+            case GUARANTEED:\n+            case MIN_TIME:\n+                return TransferPriority.ALLOWED;\n+            case RECOMMENDED:\n+                return TransferPriority.RECOMMENDED;\n+        }\n+        throw new IllegalArgumentException(\"Mapping missing for type: \"  + type);\n+    }\n+\n+    private boolean sameBlockId(Trip a, Trip b) {\n+        if(a == null || b == null) { return false; }\n+        return a.getBlockId() != null && a.getBlockId().equals(b.getBlockId());\n+    }\n }"
  },
  {
    "sha": "ef813fb4dabc5e74937b1f306f27e08c777ccd94",
    "filename": "src/main/java/org/opentripplanner/model/OtpTransitService.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/OtpTransitService.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/OtpTransitService.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/OtpTransitService.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -2,6 +2,7 @@\n \n import com.google.common.collect.Multimap;\n import org.opentripplanner.ext.flex.trip.FlexTrip;\n+import org.opentripplanner.model.transfers.Transfer;\n \n import java.util.Collection;\n import java.util.List;"
  },
  {
    "sha": "03a9b48b54198952f2e399756624ff47e461bea9",
    "filename": "src/main/java/org/opentripplanner/model/Station.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/Station.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/Station.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/Station.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -13,7 +13,7 @@\n public class Station extends TransitEntity implements StopCollection {\n \n   private static final long serialVersionUID = 1L;\n-  public static final TransferPriority DEFAULT_COST_PRIORITY = TransferPriority.ALLOWED;\n+  public static final StopTransferPriority DEFAULT_COST_PRIORITY = StopTransferPriority.ALLOWED;\n \n   private final String name;\n \n@@ -23,7 +23,7 @@\n \n   private final WgsCoordinate coordinate;\n \n-  private final TransferPriority costPriority;\n+  private final StopTransferPriority costPriority;\n \n   /**\n    * URL to a web page containing information about this particular station\n@@ -42,7 +42,7 @@ public Station(\n       String description,\n       String url,\n       TimeZone timezone,\n-      TransferPriority costPriority\n+      StopTransferPriority costPriority\n   ) {\n     super(id);\n     this.name = name;\n@@ -91,10 +91,10 @@ public String getUrl() {\n    * adding adjusting the cost for all board-/alight- events in the routing search.\n    * <p/>\n    * To not interfere with request parameters this must be implemented in a neutral way. This mean\n-   * that the {@link TransferPriority#ALLOWED} (witch is default) should a nett-effect of\n+   * that the {@link StopTransferPriority#ALLOWED} (witch is default) should a nett-effect of\n    * adding 0 - zero cost.\n    */\n-  public TransferPriority getCostPriority() {\n+  public StopTransferPriority getCostPriority() {\n     return costPriority;\n   }\n "
  },
  {
    "sha": "4023ff4eba781b1bdbdb15604a1d84154d81d66c",
    "filename": "src/main/java/org/opentripplanner/model/Stop.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/Stop.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/Stop.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/Stop.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -127,8 +127,8 @@ public TransitMode getVehicleType() {\n    * [if parent exist] or return the default value.\n    */\n   @NotNull\n-  public TransferPriority getCostPriority() {\n-    return isPartOfStation() ? getParentStation().getCostPriority() : TransferPriority.ALLOWED;\n+  public StopTransferPriority getCostPriority() {\n+    return isPartOfStation() ? getParentStation().getCostPriority() : StopTransferPriority.ALLOWED;\n   }\n \n   public Collection<FareZone> getFareZones() {"
  },
  {
    "sha": "b647e424f820821550f040da7e726649d2f5a5b9",
    "filename": "src/main/java/org/opentripplanner/model/StopTransferPriority.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/StopTransferPriority.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/StopTransferPriority.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/StopTransferPriority.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -9,7 +9,7 @@\n  * another one, if one of the journeys score better on the transfers, and they have the\n  * same cost.\n  */\n-public enum TransferPriority {\n+public enum StopTransferPriority {\n     /**\n      * Block transfers from/to this stop. In OTP this is not a definitive block,\n      * just a huge penalty is added to the cost function.",
    "previous_filename": "src/main/java/org/opentripplanner/model/TransferPriority.java"
  },
  {
    "sha": "cc9de91b2044dcead6236dbde16cdc60c9d4955c",
    "filename": "src/main/java/org/opentripplanner/model/Transfer.java",
    "status": "removed",
    "additions": 0,
    "deletions": 103,
    "changes": 103,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/a060c5e467f2f7cccc31a3d6497aaecf68697386/src/main/java/org/opentripplanner/model/Transfer.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/a060c5e467f2f7cccc31a3d6497aaecf68697386/src/main/java/org/opentripplanner/model/Transfer.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/Transfer.java?ref=a060c5e467f2f7cccc31a3d6497aaecf68697386",
    "patch": "@@ -1,103 +0,0 @@\n-/* This file is based on code copied from project OneBusAway, see the LICENSE file for further information. */\n-package org.opentripplanner.model;\n-\n-import java.io.Serializable;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-\n-public final class Transfer implements Serializable {\n-\n-    private static final long serialVersionUID = 1L;\n-\n-    private final Stop fromStop;\n-\n-    private final Route fromRoute;\n-\n-    private final Trip fromTrip;\n-\n-    private final Stop toStop;\n-\n-    private final Route toRoute;\n-\n-    private final Trip toTrip;\n-\n-    private final TransferType transferType;\n-\n-    private final int minTransferTimeSeconds;\n-\n-    public Transfer(Transfer obj) {\n-        this.fromStop = obj.fromStop;\n-        this.fromRoute = obj.fromRoute;\n-        this.fromTrip = obj.fromTrip;\n-        this.toStop = obj.toStop;\n-        this.toRoute = obj.toRoute;\n-        this.toTrip = obj.toTrip;\n-        this.transferType = obj.transferType;\n-        this.minTransferTimeSeconds = obj.minTransferTimeSeconds;\n-    }\n-\n-    public Transfer(\n-            Stop fromStop,\n-            Stop toStop,\n-            Route fromRoute,\n-            Route toRoute,\n-            Trip fromTrip,\n-            Trip toTrip,\n-            TransferType transferType,\n-            int minTransferTimeSeconds\n-    ) {\n-        this.fromStop = fromStop;\n-        this.toStop = toStop;\n-        this.fromRoute = fromRoute;\n-        this.toRoute = toRoute;\n-        this.fromTrip = fromTrip;\n-        this.toTrip = toTrip;\n-        this.transferType = transferType;\n-        this.minTransferTimeSeconds = minTransferTimeSeconds;\n-    }\n-\n-    public Stop getFromStop() {\n-        return fromStop;\n-    }\n-\n-    public Route getFromRoute() {\n-        return fromRoute;\n-    }\n-\n-    public Trip getFromTrip() {\n-        return fromTrip;\n-    }\n-\n-    public Stop getToStop() {\n-        return toStop;\n-    }\n-\n-    public Route getToRoute() {\n-        return toRoute;\n-    }\n-\n-    public Trip getToTrip() {\n-        return toTrip;\n-    }\n-\n-    public TransferType getTransferType() {\n-        return transferType;\n-    }\n-\n-    public int getMinTransferTimeSeconds() {\n-        return minTransferTimeSeconds;\n-    }\n-\n-    public String toString() {\n-        return \"<Transfer\"\n-                + toStrOpt(\" stop=\", fromStop, toStop)\n-                + toStrOpt(\" route=\", fromRoute, toRoute)\n-                + toStrOpt(\" trip=\", fromTrip, toTrip)\n-                + \">\";\n-    }\n-\n-    private static String toStrOpt(String lbl, TransitEntity arg1, TransitEntity arg2) {\n-        return  (arg1 == null ? \"\" : (lbl + arg1.getId() + \"..\" + arg2.getId()));\n-    }\n-}"
  },
  {
    "sha": "b8daa46bb1f6854fbb329dba8d664be3e01738d5",
    "filename": "src/main/java/org/opentripplanner/model/TransferType.java",
    "status": "removed",
    "additions": 0,
    "deletions": 41,
    "changes": 41,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/a060c5e467f2f7cccc31a3d6497aaecf68697386/src/main/java/org/opentripplanner/model/TransferType.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/a060c5e467f2f7cccc31a3d6497aaecf68697386/src/main/java/org/opentripplanner/model/TransferType.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/TransferType.java?ref=a060c5e467f2f7cccc31a3d6497aaecf68697386",
    "patch": "@@ -1,41 +0,0 @@\n-package org.opentripplanner.model;\n-\n-public enum TransferType {\n-    /**\n-     * This transfer is recommended over other transfers. The routing algorithm should prefer\n-     * this transfer compared to other transfers, for example by assigning a lower weight to it.\n-     */\n-    RECOMMENDED(0),\n-    /**\n-     * This means the departing vehicle will wait for the arriving one and leave sufficient time\n-     * for a rider to transfer between routes.\n-     */\n-    GUARANTEED(1),\n-    /**\n-     * This is a regular transfer that is defined in the transit data (as opposed to\n-     * OpenStreetMap data). In the case that both are present, this should take precedence.\n-     * Because the the duration of the transfer is given and not the distance, walk speed will\n-     * have no effect on this.\n-     */\n-    MIN_TIME(2),\n-    /**\n-     * Transfers between these stops (and route/trip) is not possible (or not allowed), even if a transfer is\n-     * already defined via OpenStreetMap data or in transit data.\n-     */\n-    FORBIDDEN(3);\n-\n-    TransferType(int gtfsCode) {\n-                this.gtfsCode = gtfsCode;\n-        }\n-\n-    public final int gtfsCode;\n-\n-    public static TransferType valueOfGtfsCode(int gtfsCode) {\n-       for (TransferType value : values()) {\n-           if (value.gtfsCode == gtfsCode) {\n-               return value;\n-           }\n-       }\n-       throw new IllegalArgumentException(\"Unknown GTFS TransferType: \" + gtfsCode);\n-    }\n-}"
  },
  {
    "sha": "eebef049131f5ad5419c7be06a5ec7e9c019cd69",
    "filename": "src/main/java/org/opentripplanner/model/base/ToStringBuilder.java",
    "status": "modified",
    "additions": 17,
    "deletions": 2,
    "changes": 19,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/base/ToStringBuilder.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/base/ToStringBuilder.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/base/ToStringBuilder.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -71,6 +71,13 @@ public ToStringBuilder addBool(String name, Boolean value) {\n         return addIfNotNull(name, value);\n     }\n \n+    public ToStringBuilder addBoolIfTrue(String name, Boolean value) {\n+        if(value != null && value) {\n+            addLabel(name);\n+        }\n+        return this;\n+    }\n+\n     public ToStringBuilder addStr(String name, String value) {\n         return addIfNotNull(name, value, v -> \"'\" + v + \"'\");\n     }\n@@ -187,12 +194,20 @@ public String toString() {\n     }\n \n     private ToStringBuilder addIt(String name, @NotNull String value) {\n+        addLabel(name);\n+        addValue(value);\n+        return this;\n+    }\n+\n+    private void addLabel(String name) {\n         if (first) { first = false; }\n         else { sb.append(FIELD_SEPARATOR); }\n+        sb.append(name);\n+    }\n \n-        sb.append(name).append(FIELD_VALUE_SEP);\n+    private void addValue(@NotNull String value) {\n+        sb.append(FIELD_VALUE_SEP);\n         sb.append(value);\n-        return this;\n     }\n \n     private String formatTime(Date time) {"
  },
  {
    "sha": "df050639ec7ea1ba5798653589c74704c2542dc3",
    "filename": "src/main/java/org/opentripplanner/model/impl/OtpTransitServiceBuilder.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/impl/OtpTransitServiceBuilder.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/impl/OtpTransitServiceBuilder.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/impl/OtpTransitServiceBuilder.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -26,7 +26,7 @@\n import org.opentripplanner.model.Station;\n import org.opentripplanner.model.Stop;\n import org.opentripplanner.model.StopPattern;\n-import org.opentripplanner.model.Transfer;\n+import org.opentripplanner.model.transfers.Transfer;\n import org.opentripplanner.model.TransitEntity;\n import org.opentripplanner.model.Trip;\n import org.opentripplanner.model.TripPattern;"
  },
  {
    "sha": "cfce8582cf1990ec0b74ca388bd414c235e63e19",
    "filename": "src/main/java/org/opentripplanner/model/impl/OtpTransitServiceImpl.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/impl/OtpTransitServiceImpl.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/impl/OtpTransitServiceImpl.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/impl/OtpTransitServiceImpl.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -24,7 +24,7 @@\n import org.opentripplanner.model.Station;\n import org.opentripplanner.model.Stop;\n import org.opentripplanner.model.StopTime;\n-import org.opentripplanner.model.Transfer;\n+import org.opentripplanner.model.transfers.Transfer;\n import org.opentripplanner.model.TransitEntity;\n import org.opentripplanner.model.Trip;\n import org.opentripplanner.model.TripPattern;"
  },
  {
    "sha": "8411cff26f3d47c4496d9bd993ab276743bb1dc1",
    "filename": "src/main/java/org/opentripplanner/model/transfers/SimpleTransfer.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/transfers/SimpleTransfer.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/transfers/SimpleTransfer.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/transfers/SimpleTransfer.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -1,5 +1,6 @@\n-package org.opentripplanner.model;\n+package org.opentripplanner.model.transfers;\n \n+import org.opentripplanner.model.StopLocation;\n import org.opentripplanner.routing.graph.Edge;\n \n import java.io.Serializable;",
    "previous_filename": "src/main/java/org/opentripplanner/model/SimpleTransfer.java"
  },
  {
    "sha": "698f7e6726245195503d8a5011fe829409113b4f",
    "filename": "src/main/java/org/opentripplanner/model/transfers/Transfer.java",
    "status": "added",
    "additions": 191,
    "deletions": 0,
    "changes": 191,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/transfers/Transfer.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/transfers/Transfer.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/transfers/Transfer.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -0,0 +1,191 @@\n+/* This file is based on code copied from project OneBusAway, see the LICENSE file for further information. */\n+package org.opentripplanner.model.transfers;\n+\n+import java.io.Serializable;\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import org.opentripplanner.model.Route;\n+import org.opentripplanner.model.Stop;\n+import org.opentripplanner.model.Trip;\n+import org.opentripplanner.model.base.ToStringBuilder;\n+\n+public final class Transfer implements Serializable {\n+    private static final int NOT_SET = -1;\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    private final Stop fromStop;\n+\n+    private final Route fromRoute;\n+\n+    private final Trip fromTrip;\n+\n+    private final Stop toStop;\n+\n+    private final Route toRoute;\n+\n+    private final Trip toTrip;\n+\n+    private final TransferPriority priority;\n+\n+    private final boolean staySeated;\n+\n+    private final boolean guaranteed;\n+\n+    private final int minTransferTimeSeconds;\n+\n+    private final int specificityRanking;\n+\n+    public Transfer(Transfer obj) {\n+        this.fromStop = obj.fromStop;\n+        this.fromRoute = obj.fromRoute;\n+        this.fromTrip = obj.fromTrip;\n+        this.toStop = obj.toStop;\n+        this.toRoute = obj.toRoute;\n+        this.toTrip = obj.toTrip;\n+        this.staySeated = obj.staySeated;\n+        this.guaranteed = obj.guaranteed;\n+        this.priority = obj.priority;\n+        this.minTransferTimeSeconds = obj.minTransferTimeSeconds;\n+        this.specificityRanking = obj.specificityRanking;\n+    }\n+\n+    public Transfer(\n+            Stop fromStop,\n+            Stop toStop,\n+            Route fromRoute,\n+            Route toRoute,\n+            Trip fromTrip,\n+            Trip toTrip,\n+            boolean staySeated,\n+            boolean guaranteed,\n+            TransferPriority priority,\n+            int minTransferTimeSeconds\n+    ) {\n+        this.fromStop = fromStop;\n+        this.toStop = toStop;\n+        this.fromRoute = fromRoute;\n+        this.toRoute = toRoute;\n+        this.fromTrip = fromTrip;\n+        this.toTrip = toTrip;\n+        this.staySeated = staySeated;\n+        this.guaranteed = guaranteed;\n+        this.priority = priority;\n+        this.minTransferTimeSeconds = minTransferTimeSeconds;\n+        this.specificityRanking = calcSpecificityRanking(fromRoute, fromTrip)\n+            + calcSpecificityRanking(toRoute, toTrip);\n+    }\n+\n+    public Transfer(\n+        Stop fromStop,\n+        Stop toStop,\n+        Trip fromTrip,\n+        Trip toTrip,\n+        boolean staySeated,\n+        boolean guaranteed,\n+        TransferPriority priority\n+    ) {\n+        this(\n+            fromStop, toStop,\n+            null, null,\n+            fromTrip, toTrip,\n+            staySeated,\n+            guaranteed,\n+            priority,\n+            NOT_SET\n+        );\n+    }\n+\n+    public boolean matches(Stop fromStop, Stop toStop, Trip fromTrip, Trip toTrip\n+    ) {\n+        return matches(fromStop, fromTrip, this.fromStop, this.fromRoute, this.fromTrip)\n+            && matches(toStop, toTrip, this.toStop, this.toRoute, this.toTrip);\n+    }\n+\n+    public Stop getFromStop() {\n+        return fromStop;\n+    }\n+\n+    public Route getFromRoute() {\n+        return fromRoute;\n+    }\n+\n+    public Trip getFromTrip() {\n+        return fromTrip;\n+    }\n+\n+    public Stop getToStop() {\n+        return toStop;\n+    }\n+\n+    public Route getToRoute() {\n+        return toRoute;\n+    }\n+\n+    public Trip getToTrip() {\n+        return toTrip;\n+    }\n+\n+    public TransferPriority getPriority() {\n+        return priority;\n+    }\n+\n+    public boolean isStaySeated() {\n+        return staySeated;\n+    }\n+\n+    public boolean isGuaranteed() {\n+        return guaranteed;\n+    }\n+\n+    public int getMinTransferTimeSeconds() {\n+        return minTransferTimeSeconds;\n+    }\n+\n+    /**\n+     * <a href=\"https://developers.google.com/transit/gtfs/reference/gtfs-extensions#specificity-of-a-transfer\">\n+     *   Specificity of a transfer\n+     * </a>\n+     */\n+    public int getSpecificityRanking() {\n+        return specificityRanking;\n+    }\n+\n+    public String toString() {\n+        return ToStringBuilder.of(Transfer.class)\n+            .addObj(\"from\", toString(fromStop, fromTrip, fromRoute))\n+            .addObj(\"to\", toString(toStop, toTrip, toRoute))\n+            .addBoolIfTrue(\"staySeated\", staySeated)\n+            .addBoolIfTrue(\"guaranteed\", guaranteed)\n+            .toString();\n+    }\n+\n+    private static int calcSpecificityRanking(Route route, Trip trip) {\n+        if(trip != null) { return 2; }\n+        if(route != null) { return 1; }\n+        return 0;\n+    }\n+\n+    /**\n+     * Do the given input (stop s, trip t) match the current Transfer (s0, r0, t0)\n+     */\n+    private static boolean matches(\n+        @Nonnull Stop s, @Nonnull Trip t,\n+        @Nonnull Stop s0, @Nullable Route r0, @Nullable Trip t0\n+    ) {\n+        if(s != s0) { return false; }\n+\n+        if(t0 != null) {\n+            return t0 == t;\n+        }\n+        else if(r0 != null) {\n+            return r0 == t.getRoute();\n+        }\n+        return true;\n+    }\n+\n+    private String toString(Stop stop, Trip trip, Route route) {\n+        var t = trip == null ? route : trip;\n+        return t == null ? stop.toString() : \"(\" + stop + \", \" + t + \")\";\n+    }\n+}"
  },
  {
    "sha": "19582898d4e80e5e7e481127325fe3f52519c60c",
    "filename": "src/main/java/org/opentripplanner/model/transfers/TransferPriority.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/transfers/TransferPriority.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/transfers/TransferPriority.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/transfers/TransferPriority.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -0,0 +1,16 @@\n+package org.opentripplanner.model.transfers;\n+\n+/**\n+ * TODO TGR  - Add doc\n+ * Prioritize transfers between to trips\n+ */\n+public enum TransferPriority {\n+  /** TODO TGR  - Add doc */\n+  NOT_ALLOWED,\n+  /** TODO TGR  - Add doc */\n+  ALLOWED,\n+  /** TODO TGR  - Add doc */\n+  RECOMMENDED,\n+  /** TODO TGR  - Add doc */\n+  PREFERRED\n+}"
  },
  {
    "sha": "a0cde9d45f7acd5520e2a6c1715e5cbd0013fb15",
    "filename": "src/main/java/org/opentripplanner/model/transfers/TransferService.java",
    "status": "renamed",
    "additions": 16,
    "deletions": 13,
    "changes": 29,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/transfers/TransferService.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/model/transfers/TransferService.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/model/transfers/TransferService.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -1,36 +1,39 @@\n-package org.opentripplanner.routing.core;\n-\n-import java.io.Serializable;\n-import java.util.Collection;\n+package org.opentripplanner.model.transfers;\n \n import com.google.common.collect.ArrayListMultimap;\n import com.google.common.collect.Multimap;\n+import org.opentripplanner.common.model.P2;\n import org.opentripplanner.model.Stop;\n-import org.opentripplanner.model.Transfer;\n import org.opentripplanner.model.Trip;\n-import org.opentripplanner.common.model.P2;\n \n-// TODO OTP2 reimplement all special kinds of transfers\n+import java.io.Serializable;\n+import java.util.Collection;\n \n /**\n  * This class represents all transfer information in the graph. Transfers are grouped by\n  * stop-to-stop pairs.\n  */\n-public class TransferTable implements Serializable {\n+public class TransferService implements Serializable {\n \n     /**\n      * Table which contains transfers between two stops\n      */\n     protected Multimap<P2<Stop>, Transfer> table = ArrayListMultimap.create();\n \n-    private Transfer getTransfer(Stop fromStop, Stop toStop, Trip fromTrip, Trip toTrip) {\n+    public Transfer findTransfer(Stop fromStop, Stop toStop, Trip fromTrip, Trip toTrip) {\n         Collection<Transfer> transfers = table.get(new P2<>(fromStop, toStop));\n-        for (Transfer transfer : transfers) {\n-            if (transfer.getFromTrip() == fromTrip && transfer.getToTrip() == toTrip) {\n-                return transfer;\n+        Transfer bestTransfer = null;\n+        int bestRank = -1;\n+\n+        for (Transfer it : transfers) {\n+            if (it.matches(fromStop, toStop, fromTrip, toTrip)) {\n+                if(it.getSpecificityRanking() > bestRank) {\n+                    bestTransfer = it;\n+                    bestRank = it.getSpecificityRanking();\n+                }\n             }\n         }\n-        return null;\n+        return bestTransfer;\n     }\n \n     public Collection<Transfer> getTransfers() {",
    "previous_filename": "src/main/java/org/opentripplanner/routing/core/TransferTable.java"
  },
  {
    "sha": "d1f1a049ebfce4cfde978e93e17de5e1eb0293ae",
    "filename": "src/main/java/org/opentripplanner/netex/index/NetexEntityIndex.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/index/NetexEntityIndex.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/index/NetexEntityIndex.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/netex/index/NetexEntityIndex.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -29,6 +29,7 @@\n import org.rutebanken.netex.model.Quay;\n import org.rutebanken.netex.model.Route;\n import org.rutebanken.netex.model.ServiceJourney;\n+import org.rutebanken.netex.model.ServiceJourneyInterchange;\n import org.rutebanken.netex.model.ServiceLink;\n import org.rutebanken.netex.model.StopPlace;\n import org.rutebanken.netex.model.TariffZone;\n@@ -89,6 +90,7 @@\n     public final HierarchicalMap<String, String> quayIdByStopPointRef;\n     public final HierarchicalMapById<Route> routeById;\n     public final HierarchicalMapById<ServiceJourney> serviceJourneyById;\n+    public final HierarchicalMapById<ServiceJourneyInterchange> serviceJourneyInterchangeById;\n     public final HierarchicalMapById<ServiceLink> serviceLinkById;\n     public final HierarchicalVersionMapById<StopPlace> stopPlaceById;\n     public final HierarchicalMapById<TariffZone> tariffZonesById;\n@@ -135,6 +137,7 @@ public NetexEntityIndex() {\n         this.routeById = new HierarchicalMapById<>();\n         this.serviceJourneyById = new HierarchicalMapById<>();\n         this.serviceLinkById = new HierarchicalMapById<>();\n+        this.serviceJourneyInterchangeById = new HierarchicalMapById<>();\n         this.stopPlaceById = new HierarchicalVersionMapById<>();\n         this.tariffZonesById = new HierarchicalMapById<>();\n         this.timeZone = new HierarchicalElement<>();\n@@ -171,6 +174,7 @@ public NetexEntityIndex(NetexEntityIndex parent) {\n         this.routeById = new HierarchicalMapById<>(parent.routeById);\n         this.serviceJourneyById = new HierarchicalMapById<>(parent.serviceJourneyById);\n         this.serviceLinkById = new HierarchicalMapById<>(parent.serviceLinkById);\n+        this.serviceJourneyInterchangeById = new HierarchicalMapById<>(parent.serviceJourneyInterchangeById);\n         this.stopPlaceById = new HierarchicalVersionMapById<>(parent.stopPlaceById);\n         this.tariffZonesById = new HierarchicalMapById<>(parent.tariffZonesById);\n         this.timeZone = new HierarchicalElement<>(parent.timeZone);\n@@ -324,6 +328,11 @@ public Network lookupNetworkForLine(String groupOfLineOrNetworkId) {\n                 return serviceJourneyById;\n             }\n \n+            @Override\n+            public ReadOnlyHierarchicalMapById<ServiceJourneyInterchange> getServiceJourneyInterchangeById() {\n+                return serviceJourneyInterchangeById;\n+            }\n+\n             @Override\n             public ReadOnlyHierarchicalMapById<ServiceLink> getServiceLinkById() {\n                 return serviceLinkById;"
  },
  {
    "sha": "92b0d3713820b7f78b2792305ccb9edb010578cd",
    "filename": "src/main/java/org/opentripplanner/netex/index/api/NetexEntityIndexReadOnlyView.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/index/api/NetexEntityIndexReadOnlyView.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/index/api/NetexEntityIndexReadOnlyView.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/netex/index/api/NetexEntityIndexReadOnlyView.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -19,6 +19,7 @@\n import org.rutebanken.netex.model.Quay;\n import org.rutebanken.netex.model.Route;\n import org.rutebanken.netex.model.ServiceJourney;\n+import org.rutebanken.netex.model.ServiceJourneyInterchange;\n import org.rutebanken.netex.model.ServiceLink;\n import org.rutebanken.netex.model.StopPlace;\n import org.rutebanken.netex.model.TariffZone;\n@@ -48,6 +49,7 @@\n     ReadOnlyHierarchicalMap<String, String> getFlexibleStopPlaceByStopPointRef();\n     ReadOnlyHierarchicalMapById<Route> getRouteById();\n     ReadOnlyHierarchicalMapById<ServiceJourney> getServiceJourneyById();\n+    ReadOnlyHierarchicalMapById<ServiceJourneyInterchange> getServiceJourneyInterchangeById();\n     ReadOnlyHierarchicalMapById<ServiceLink> getServiceLinkById();\n     ReadOnlyHierarchicalVersionMapById<StopPlace> getStopPlaceById();\n     ReadOnlyHierarchicalMapById<TariffZone> getTariffZonesById();"
  },
  {
    "sha": "898cca4e5838684ec781c4ac7eeabae3004f6fe6",
    "filename": "src/main/java/org/opentripplanner/netex/issues/QuayWithoutCoordinates.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/issues/QuayWithoutCoordinates.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/issues/QuayWithoutCoordinates.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/netex/issues/QuayWithoutCoordinates.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -1,4 +1,4 @@\n-package org.opentripplanner.graph_builder.issues;\n+package org.opentripplanner.netex.issues;\n \n import org.opentripplanner.graph_builder.DataImportIssue;\n ",
    "previous_filename": "src/main/java/org/opentripplanner/graph_builder/issues/QuayWithoutCoordinates.java"
  },
  {
    "sha": "3b495e3dfb5d7d34287f63c07937dd129645c508",
    "filename": "src/main/java/org/opentripplanner/netex/issues/StopPlaceWithoutCoordinates.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/issues/StopPlaceWithoutCoordinates.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/issues/StopPlaceWithoutCoordinates.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/netex/issues/StopPlaceWithoutCoordinates.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -1,4 +1,4 @@\n-package org.opentripplanner.graph_builder.issues;\n+package org.opentripplanner.netex.issues;\n \n import org.opentripplanner.graph_builder.DataImportIssue;\n ",
    "previous_filename": "src/main/java/org/opentripplanner/graph_builder/issues/StopPlaceWithoutCoordinates.java"
  },
  {
    "sha": "e0ba0f74350a79f375859aa481e354c4ab4dd097",
    "filename": "src/main/java/org/opentripplanner/netex/loader/parser/TimeTableFrameParser.java",
    "status": "modified",
    "additions": 21,
    "deletions": 1,
    "changes": 22,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/loader/parser/TimeTableFrameParser.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/loader/parser/TimeTableFrameParser.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/netex/loader/parser/TimeTableFrameParser.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -2,9 +2,12 @@\n \n import org.opentripplanner.netex.index.NetexEntityIndex;\n import org.rutebanken.netex.model.DatedServiceJourney;\n+import org.rutebanken.netex.model.Interchange_VersionStructure;\n+import org.rutebanken.netex.model.JourneyInterchangesInFrame_RelStructure;\n import org.rutebanken.netex.model.Journey_VersionStructure;\n import org.rutebanken.netex.model.JourneysInFrame_RelStructure;\n import org.rutebanken.netex.model.ServiceJourney;\n+import org.rutebanken.netex.model.ServiceJourneyInterchange;\n import org.rutebanken.netex.model.Timetable_VersionFrameStructure;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -18,13 +21,16 @@\n \n     private final List<ServiceJourney> serviceJourneys = new ArrayList<>();\n     private final List<DatedServiceJourney> datedServiceJourneys = new ArrayList<>();\n+    private final List<ServiceJourneyInterchange> serviceJourneyInterchanges = new ArrayList<>();\n \n     private final NoticeParser noticeParser = new NoticeParser();\n \n \n     @Override\n     void parse(Timetable_VersionFrameStructure frame) {\n         parseJourneys(frame.getVehicleJourneys());\n+        parseInterchanges(frame.getJourneyInterchanges());\n+\n \n         noticeParser.parseNotices(frame.getNotices());\n         noticeParser.parseNoticeAssignments(frame.getNoticeAssignments());\n@@ -45,7 +51,6 @@ void parse(Timetable_VersionFrameStructure frame) {\n         warnOnMissingMapping(LOG, frame.getInterchangeRules());\n         warnOnMissingMapping(LOG, frame.getJourneyAccountingRef());\n         warnOnMissingMapping(LOG, frame.getJourneyAccountings());\n-        warnOnMissingMapping(LOG, frame.getJourneyInterchanges());\n         warnOnMissingMapping(LOG, frame.getJourneyMeetings());\n         warnOnMissingMapping(LOG, frame.getJourneyPartCouples());\n         warnOnMissingMapping(LOG, frame.getNotices());\n@@ -58,6 +63,7 @@ void parse(Timetable_VersionFrameStructure frame) {\n         warnOnMissingMapping(LOG, frame.getTrainNumbers());\n         warnOnMissingMapping(LOG, frame.getTypesOfService());\n         warnOnMissingMapping(LOG, frame.getVehicleTypes());\n+        warnOnMissingMapping(LOG, frame.getVehicleTypeRef());\n \n         verifyCommonUnusedPropertiesIsNotSet(LOG, frame);\n     }\n@@ -66,6 +72,7 @@ void parse(Timetable_VersionFrameStructure frame) {\n     void setResultOnIndex(NetexEntityIndex netexIndex) {\n         netexIndex.serviceJourneyById.addAll(serviceJourneys);\n         netexIndex.datedServiceJourneys.addAll(datedServiceJourneys);\n+        netexIndex.serviceJourneyInterchangeById.addAll(serviceJourneyInterchanges);\n         noticeParser.setResultOnIndex(netexIndex);\n     }\n \n@@ -82,4 +89,17 @@ else if(it instanceof DatedServiceJourney) {\n             }\n         }\n     }\n+\n+    private void parseInterchanges(JourneyInterchangesInFrame_RelStructure element) {\n+        if(element == null) { return; }\n+        var list = element.getServiceJourneyPatternInterchangeOrServiceJourneyInterchange();\n+        for (Interchange_VersionStructure it : list) {\n+            if (it instanceof ServiceJourneyInterchange) {\n+                serviceJourneyInterchanges.add((ServiceJourneyInterchange) it);\n+            }\n+            else {\n+                warnOnMissingMapping(LOG, it);\n+            }\n+        }\n+    }\n }"
  },
  {
    "sha": "85f79f7cab98008d952e90dd1aae22943622c970",
    "filename": "src/main/java/org/opentripplanner/netex/mapping/DirectionMapper.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/opentripplanner/OpenTripPlanner/blob/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/mapping/DirectionMapper.java",
    "raw_url": "https://github.com/opentripplanner/OpenTripPlanner/raw/c50d55ef1e8712cf5eb81aba0a83be750caeeda3/src/main/java/org/opentripplanner/netex/mapping/DirectionMapper.java",
    "contents_url": "https://api.github.com/repos/opentripplanner/OpenTripPlanner/contents/src/main/java/org/opentripplanner/netex/mapping/DirectionMapper.java?ref=c50d55ef1e8712cf5eb81aba0a83be750caeeda3",
    "patch": "@@ -1,10 +1,10 @@\n-package org.opentripplanner.netex;\n+package org.opentripplanner.netex.mapping;\n \n import org.opentripplanner.model.Direction;\n import org.rutebanken.netex.model.DirectionTypeEnumeration;\n \n-public class DirectionMapper {\n-  public static Direction map(DirectionTypeEnumeration direction) {\n+class DirectionMapper {\n+  static Direction map(DirectionTypeEnumeration direction) {\n     if (direction == null) { return Direction.UNKNOWN; }\n     switch (direction) {\n       case INBOUND:",
    "previous_filename": "src/main/java/org/opentripplanner/netex/DirectionMapper.java"
  }
]
