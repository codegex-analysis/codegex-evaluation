[
  {
    "sha": "5b967bda62385c553299146f6f69d0ac70fb58bd",
    "filename": "README.md",
    "status": "modified",
    "additions": 22,
    "deletions": 14,
    "changes": 36,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/README.md",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/README.md",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/README.md?ref=9dfa480740fbc3226f5a5a8ca5e0919bccd54008",
    "patch": "@@ -1,30 +1,38 @@\n # wikitools\n Minecraft mod to copy NBT and render entities\n \n-## Keybinds\n+## Default Keybinds\n+\n+* Copy NBT\n+  * **Key**: NUMPAD7\n+  * **Description**: Copy NBT to your clipboard of the entity you are looking at, or the item you are hovering over.\n \n * Render\n-  * **Key**: M\n+  * **Key**: NUMPAD8\n   * **Description**: Renders the entity you are looking at to a png with the size of the minecraft window or 512/511px.\n   * **Note**: Because some entities require very fine scaling to render exactly 512px, sometimes they will render to 511px if it takes too long.\n \n-* Steve Modifier\n-  * **Key**: RSHIFT\n-  * **Description**: Changes the skin to Steve if you render a player.\n-\n * Enchant Modifier\n-  * **Key**: RCONTROL\n+  * **Key**: NUMPAD4\n   * **Description**: Does not render enchantment glow.\n \n-* Self Modifier\n-  * **Key**: RMENU\n-  * **Description**: Renders yourself instead.\n+* Steve Modifier\n+  * **Key**: NUMPAD5\n+  * **Description**: Changes the skin to Steve if you render a player.\n \n * Invisible Modifier\n-  * **Key**: APPS\n+  * **Key**: NUMPAD6\n   * **Description**: Makes the entity invisible.\n   * **Note**: This is like an invisibility potion, it will still render armor.\n \n-* Copy\n-  * **Key**: N\n-  * **Description**: Copy NBT to your clipboard of the entity you are looking at, or the item you are hovering over.\n+* Item Held Modifier\n+  * **Key**: NUMPAD1\n+  * **Description**: Does not render the item in the hand.\n+\n+* Self Modifier\n+  * **Key**: NUMPAD2\n+  * **Description**: Renders yourself instead.\n+\n+* Armor Modifier\n+  * **Key**: NUMPAD3\n+  * **Description**: Does not render the armor.\n\\ No newline at end of file"
  },
  {
    "sha": "aba874e34918dc4bce97858c29403e57c920e5e8",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 90,
    "deletions": 82,
    "changes": 172,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/build.gradle",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/build.gradle",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/build.gradle?ref=9dfa480740fbc3226f5a5a8ca5e0919bccd54008",
    "patch": "@@ -1,82 +1,90 @@\n-\n-// For those who want the bleeding edge\n-buildscript {\n-    repositories {\n-        jcenter()\n-        maven {\n-            name = \"forge\"\n-            url = \"http://files.minecraftforge.net/maven\"\n-        }\n-    }\n-    dependencies {\n-        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'\n-    }\n-}\n-apply plugin: 'net.minecraftforge.gradle.forge'\n-\n-/*\n-// for people who want stable - not yet functional for MC 1.8.8 - we require the forgegradle 2.1 snapshot\n-plugins {\n-    id \"net.minecraftforge.gradle.forge\" version \"2.0.2\"\n-}\n-*/\n-version = \"1.0\"\n-group= \"mikuhl.wikitools\" // http://maven.apache.org/guides/mini/guide-naming-conventions.html\n-archivesBaseName = \"wikitools\"\n-\n-minecraft {\n-    version = \"1.8.9-11.15.1.1722\"\n-    runDir = \"run\"\n-    \n-    // the mappings can be changed at any time, and must be in the following format.\n-    // snapshot_YYYYMMDD   snapshot are built nightly.\n-    // stable_#            stables are built at the discretion of the MCP team.\n-    // Use non-default mappings at your own risk. they may not allways work.\n-    // simply re-run your setup task after changing the mappings to update your workspace.\n-    mappings = \"stable_20\"\n-    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.\n-}\n-\n-dependencies {\n-    // you may put jars on which you depend on in ./libs\n-    // or you may define them like so..\n-    //compile \"some.group:artifact:version:classifier\"\n-    //compile \"some.group:artifact:version\"\n-      \n-    // real examples\n-    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env\n-    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env\n-\n-    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.\n-    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'\n-\n-    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,\n-    // except that these dependencies get remapped to your current MCP mappings\n-    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'\n-    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'\n-\n-    // for more info...\n-    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html\n-    // http://www.gradle.org/docs/current/userguide/dependency_management.html\n-\n-}\n-\n-processResources\n-{\n-    // this will ensure that this task is redone when the versions change.\n-    inputs.property \"version\", project.version\n-    inputs.property \"mcversion\", project.minecraft.version\n-\n-    // replace stuff in mcmod.info, nothing else\n-    from(sourceSets.main.resources.srcDirs) {\n-        include 'mcmod.info'\n-                \n-        // replace version and mcversion\n-        expand 'version':project.version, 'mcversion':project.minecraft.version\n-    }\n-        \n-    // copy everything else, thats not the mcmod.info\n-    from(sourceSets.main.resources.srcDirs) {\n-        exclude 'mcmod.info'\n-    }\n-}\n+buildscript {\r\n+    repositories {\r\n+    \t\tmaven { url = 'https://files.minecraftforge.net/maven' }\r\n+\t\t\t\tjcenter()\r\n+\t\t\t\tmavenCentral()\r\n+    }\r\n+    dependencies {\r\n+        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'\r\n+    }\r\n+}\r\n+\r\n+plugins {\r\n+    id 'java'\r\n+    id 'eclipse'\r\n+    id 'idea'\r\n+}\r\n+\r\n+apply plugin: 'net.minecraftforge.gradle.forge'\r\n+\r\n+idea {\r\n+    module {\r\n+        //Exclude directories from being managed\r\n+        for (String excludeDirName in [\"run\", \"out\", \"logs\", \"gradle\"]) {\r\n+            File excludeDir = new File(projectDir, excludeDirName)\r\n+            excludeDirs.add(excludeDir)\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+version = \"1.1.2\"\r\n+group= \"mikuhl.wikitools\"\r\n+archivesBaseName = \"wikitools\"\r\n+sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'\r\n+\r\n+minecraft {\r\n+    version = \"1.8.9-11.15.1.2318-1.8.9\"\r\n+    runDir = \"run\"\r\n+    \r\n+    // the mappings can be changed at any time, and must be in the following format.\r\n+    // snapshot_YYYYMMDD   snapshot are built nightly.\r\n+    // stable_#            stables are built at the discretion of the MCP team.\r\n+    // Use non-default mappings at your own risk. they may not allways work.\r\n+    // simply re-run your setup task after changing the mappings to update your workspace.\r\n+    mappings = \"stable_20\"\r\n+    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.\r\n+}\r\n+\r\n+dependencies {\r\n+    // you may put jars on which you depend on in ./libs\r\n+    // or you may define them like so..\r\n+    //compile \"some.group:artifact:version:classifier\"\r\n+    //compile \"some.group:artifact:version\"\r\n+      \r\n+    // real examples\r\n+    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env\r\n+    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env\r\n+\r\n+    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.\r\n+    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'\r\n+\r\n+    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,\r\n+    // except that these dependencies get remapped to your current MCP mappings\r\n+    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'\r\n+    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'\r\n+\r\n+    // for more info...\r\n+    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html\r\n+    // http://www.gradle.org/docs/current/userguide/dependency_management.html\r\n+\r\n+}\r\n+\r\n+processResources\r\n+{\r\n+    // this will ensure that this task is redone when the versions change.\r\n+    inputs.property \"version\", project.version\r\n+    inputs.property \"mcversion\", project.minecraft.version\r\n+\r\n+    // replace stuff in mcmod.info, nothing else\r\n+    from(sourceSets.main.resources.srcDirs) {\r\n+        include 'mcmod.info'\r\n+                \r\n+        // replace version and mcversion\r\n+        expand 'version':project.version, 'mcversion':project.minecraft.version\r\n+    }\r\n+        \r\n+    // copy everything else, thats not the mcmod.info\r\n+    from(sourceSets.main.resources.srcDirs) {\r\n+        exclude 'mcmod.info'\r\n+    }\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "442aa6ce6bed0c668d1a8055acb7177df412ac09",
    "filename": "src/main/java/mikuhl/wikitools/WikiTools.java",
    "status": "modified",
    "additions": 55,
    "deletions": 13,
    "changes": 68,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/WikiTools.java",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/WikiTools.java",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/src/main/java/mikuhl/wikitools/WikiTools.java?ref=9dfa480740fbc3226f5a5a8ca5e0919bccd54008",
    "patch": "@@ -1,21 +1,63 @@\n package mikuhl.wikitools;\n \n-import mikuhl.wikitools.proxy.CommonProxy;\n+import org.lwjgl.input.Keyboard;\n+\n+import mikuhl.wikitools.handler.CopyNBTHandler;\n+import mikuhl.wikitools.handler.EntityRenderHandler;\n+import mikuhl.wikitools.handler.ModifierHandler;\n+\n+import net.minecraft.client.Minecraft;\n+import net.minecraft.client.settings.KeyBinding;\n+import net.minecraft.util.ChatComponentText;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.fml.client.registry.ClientRegistry;\n import net.minecraftforge.fml.common.Mod;\n import net.minecraftforge.fml.common.Mod.EventHandler;\n-import net.minecraftforge.fml.common.SidedProxy;\n import net.minecraftforge.fml.common.event.FMLInitializationEvent;\n \n-@Mod(modid = WikiTools.MODID, version = WikiTools.VERSION)\n+@Mod(modid = \"WikiTools\", version = \"1.1.1\", clientSideOnly = true)\n public class WikiTools {\n-    public static final String MODID = \"wikitools\";\n-    public static final String VERSION = \"1.0\";\n-\n-    @SidedProxy(serverSide = \"mikuhl.wikitools.proxy.CommonProxy\", clientSide = \"mikuhl.wikitools.proxy.ClientProxy\")\n-    public static CommonProxy proxy;\n-\n-    @EventHandler\n-    public void init(FMLInitializationEvent event) {\n-        proxy.init(event);\n-    }\n+\t\n+\tpublic static void sendMessage(String message) {\n+\t\tMinecraft.getMinecraft().thePlayer.addChatMessage(new ChatComponentText(message.replace('\\u0026', '\\u00a7')));\n+\t}\n+\t\n+\tpublic static final KeyBinding COPY_NBT;\n+\tpublic static final KeyBinding RENDER;\n+\tpublic static final KeyBinding ENCHANT_MODIFIER;\n+\tpublic static final KeyBinding STEVE_MODIFIER;\n+\tpublic static final KeyBinding INVISIBLE_MODIFIER;\n+\tpublic static final KeyBinding HELDITEM_MODIFIER;\n+\tpublic static final KeyBinding SELF_MODIFIER;\n+\tpublic static final KeyBinding ARMOR_MODIFIER;\n+\t\n+\tstatic {\n+\t\tString mod_name = \"WikiTools\";\n+\t\t\n+\t\tCOPY_NBT = new KeyBinding(\"Copy NBT\", Keyboard.KEY_NUMPAD7, mod_name);\n+\t\tRENDER = new KeyBinding(\"Render\", Keyboard.KEY_NUMPAD8, mod_name);\n+\t\tENCHANT_MODIFIER = new KeyBinding(\"Enchant Modifier\", Keyboard.KEY_NUMPAD4, mod_name);\n+\t\tSTEVE_MODIFIER = new KeyBinding(\"Steve Modifier\", Keyboard.KEY_NUMPAD5, mod_name);\n+\t\tINVISIBLE_MODIFIER = new KeyBinding(\"Invisible Modifier\", Keyboard.KEY_NUMPAD6, mod_name);\n+\t\tHELDITEM_MODIFIER = new KeyBinding(\"Item Held Modifier\", Keyboard.KEY_NUMPAD1, mod_name);\n+\t\tSELF_MODIFIER = new KeyBinding(\"Self Modifier\", Keyboard.KEY_NUMPAD2, mod_name);\n+\t\tARMOR_MODIFIER = new KeyBinding(\"Armor Modifier\", Keyboard.KEY_NUMPAD3, mod_name);\n+\t}\n+\t\n+\t@EventHandler\n+\tpublic void init(FMLInitializationEvent event) {\n+\t\tMinecraftForge.EVENT_BUS.register(new ModifierHandler());\n+\t\tMinecraftForge.EVENT_BUS.register(new CopyNBTHandler());\n+\t\tMinecraftForge.EVENT_BUS.register(new EntityRenderHandler());\n+\t\t\n+\t\tClientRegistry.registerKeyBinding(COPY_NBT);\n+\t\tClientRegistry.registerKeyBinding(RENDER);\n+\t\tClientRegistry.registerKeyBinding(ENCHANT_MODIFIER);\n+\t\tClientRegistry.registerKeyBinding(STEVE_MODIFIER);\n+\t\tClientRegistry.registerKeyBinding(INVISIBLE_MODIFIER);\n+\t\tClientRegistry.registerKeyBinding(HELDITEM_MODIFIER);\n+\t\tClientRegistry.registerKeyBinding(SELF_MODIFIER);\n+\t\tClientRegistry.registerKeyBinding(ARMOR_MODIFIER);\n+\t}\n }"
  },
  {
    "sha": "405a8e3e3be2d856281fcb992d885ad51c8a6c0e",
    "filename": "src/main/java/mikuhl/wikitools/WikiToolsKeybinds.java",
    "status": "removed",
    "additions": 0,
    "deletions": 49,
    "changes": 49,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/b1a7968952419185979915feedac050cbcee992e/src/main/java/mikuhl/wikitools/WikiToolsKeybinds.java",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/b1a7968952419185979915feedac050cbcee992e/src/main/java/mikuhl/wikitools/WikiToolsKeybinds.java",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/src/main/java/mikuhl/wikitools/WikiToolsKeybinds.java?ref=b1a7968952419185979915feedac050cbcee992e",
    "patch": "@@ -1,49 +0,0 @@\n-package mikuhl.wikitools;\n-\n-import net.minecraft.client.settings.KeyBinding;\n-import net.minecraftforge.fml.client.registry.ClientRegistry;\n-import org.lwjgl.input.Keyboard;\n-\n-public class WikiToolsKeybinds {\n-\n-    private static String category = \"mikuhl.wikitool.category\";\n-    public static KeyBinding RENDER = new KeyBinding(\n-            \"mikuhl.wikitool.render.description\",\n-            Keyboard.KEY_M,\n-            category\n-    );\n-    public static KeyBinding STEVE_MODIFIER = new KeyBinding(\n-            \"mikuhl.wikitool.steve.modifier.description\",\n-            Keyboard.KEY_RSHIFT,\n-            category\n-    );\n-    public static KeyBinding ENCHANT_MODIFIER = new KeyBinding(\n-            \"mikuhl.wikitool.enchant.modifier.description\",\n-            Keyboard.KEY_RCONTROL,\n-            category\n-    );\n-    public static KeyBinding SELF_MODIFIER = new KeyBinding(\n-            \"mikuhl.wikitool.self.modifier.description\",\n-            Keyboard.KEY_RMENU,\n-            category\n-    );\n-    public static KeyBinding INVISIBLE_MODIFIER = new KeyBinding(\n-            \"mikuhl.wikitool.invisible.modifier.description\",\n-            Keyboard.KEY_APPS,\n-            category\n-    );\n-    public static KeyBinding COPY_NBT = new KeyBinding(\n-            \"mikuhl.wikitool.copy.nbt.description\",\n-            Keyboard.KEY_N,\n-            category\n-    );\n-\n-    public static void init() {\n-        ClientRegistry.registerKeyBinding(RENDER);\n-        ClientRegistry.registerKeyBinding(STEVE_MODIFIER);\n-        ClientRegistry.registerKeyBinding(ENCHANT_MODIFIER);\n-        ClientRegistry.registerKeyBinding(SELF_MODIFIER);\n-        ClientRegistry.registerKeyBinding(INVISIBLE_MODIFIER);\n-        ClientRegistry.registerKeyBinding(COPY_NBT);\n-    }\n-}"
  },
  {
    "sha": "0048b62911ed8958d2bf89390044a5f1de7748ae",
    "filename": "src/main/java/mikuhl/wikitools/entity/EntityRenderClone.java",
    "status": "modified",
    "additions": 27,
    "deletions": 30,
    "changes": 57,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/entity/EntityRenderClone.java",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/entity/EntityRenderClone.java",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/src/main/java/mikuhl/wikitools/entity/EntityRenderClone.java?ref=9dfa480740fbc3226f5a5a8ca5e0919bccd54008",
    "patch": "@@ -1,30 +1,27 @@\n-package mikuhl.wikitools.entity;\n-\n-import com.mojang.authlib.GameProfile;\n-import mikuhl.wikitools.WikiToolsKeybinds;\n-import net.minecraft.client.entity.AbstractClientPlayer;\n-import net.minecraft.util.ResourceLocation;\n-\n-import java.util.UUID;\n-\n-public class EntityRenderClone extends AbstractClientPlayer {\n-\n-    private static GameProfile steveGameProfile = new GameProfile(new UUID(0, 0), \"\");\n-\n-    private ResourceLocation locationSkin;\n-\n-    public EntityRenderClone(AbstractClientPlayer clone, boolean steve) {\n-        super(clone.worldObj, steve ? steveGameProfile : clone.getGameProfile());\n-        locationSkin = (steve ? this : clone).getLocationSkin();\n-        this.clonePlayer(clone, true);\n-        if (WikiToolsKeybinds.INVISIBLE_MODIFIER.isKeyDown()) this.setInvisible(true);\n-    }\n-\n-    @Override\n-    public ResourceLocation getLocationSkin() {\n-        if (locationSkin != null) {\n-            return locationSkin;\n-        }\n-        return super.getLocationSkin();\n-    }\n-}\n+package mikuhl.wikitools.entity;\r\n+\r\n+import mikuhl.wikitools.handler.ModifierHandler;\r\n+\r\n+import net.minecraft.client.entity.AbstractClientPlayer;\r\n+import net.minecraft.util.ResourceLocation;\r\n+\r\n+public class EntityRenderClone extends AbstractClientPlayer {\r\n+\t\r\n+\tprivate static final ResourceLocation STEVE_SKIN = new ResourceLocation(\"textures/entity/steve.png\");\r\n+\t\t\r\n+\tprivate ResourceLocation locationSkin;\r\n+\t\r\n+\tpublic EntityRenderClone(AbstractClientPlayer clone, boolean steve) {\r\n+\t\tsuper(clone.worldObj, clone.getGameProfile());\r\n+\t\t\r\n+\t\tlocationSkin = steve ? STEVE_SKIN : clone.getLocationSkin();\r\n+\t\t\r\n+\t\tclonePlayer(clone, true);\r\n+\t\tsetInvisible(ModifierHandler.INVISIBLE_MODIFIER);\r\n+\t}\r\n+\t\r\n+\t@Override\r\n+\tpublic ResourceLocation getLocationSkin() {\r\n+\t\treturn locationSkin;\r\n+\t}\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "d4afec749fa31fd787d3a24f55737f037b11a361",
    "filename": "src/main/java/mikuhl/wikitools/handler/CopyNBTHandler.java",
    "status": "modified",
    "additions": 44,
    "deletions": 46,
    "changes": 90,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/handler/CopyNBTHandler.java",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/handler/CopyNBTHandler.java",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/src/main/java/mikuhl/wikitools/handler/CopyNBTHandler.java?ref=9dfa480740fbc3226f5a5a8ca5e0919bccd54008",
    "patch": "@@ -1,64 +1,62 @@\n package mikuhl.wikitools.handler;\n \n-import mikuhl.wikitools.WikiToolsKeybinds;\n+import mikuhl.wikitools.WikiTools;\n import mikuhl.wikitools.helper.ClipboardHelper;\n+\n import net.minecraft.client.Minecraft;\n import net.minecraft.client.entity.EntityOtherPlayerMP;\n import net.minecraft.client.gui.inventory.GuiContainer;\n import net.minecraft.entity.Entity;\n import net.minecraft.inventory.Slot;\n-import net.minecraft.item.ItemStack;\n-import net.minecraft.nbt.CompressedStreamTools;\n import net.minecraft.nbt.NBTTagCompound;\n-import net.minecraft.nbt.NBTTagList;\n import net.minecraft.tileentity.TileEntity;\n-import net.minecraft.util.BlockPos;\n import net.minecraft.util.MovingObjectPosition;\n+\n import net.minecraftforge.client.event.GuiScreenEvent;\n-import net.minecraftforge.common.util.Constants;\n-import net.minecraftforge.event.entity.player.ItemTooltipEvent;\n import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;\n import net.minecraftforge.fml.common.gameevent.InputEvent;\n-import org.lwjgl.input.Keyboard;\n \n-import java.io.ByteArrayInputStream;\n-import java.io.IOException;\n+import org.lwjgl.input.Keyboard;\n \n public class CopyNBTHandler {\n-\n-    @SubscribeEvent\n-    public void onKeyInputEvent(InputEvent.KeyInputEvent event) {\n-\n-        if (!WikiToolsKeybinds.COPY_NBT.isKeyDown()) return;\n-\n-        Minecraft minecraft = Minecraft.getMinecraft();\n-        MovingObjectPosition objectMouseOver = minecraft.objectMouseOver;\n-        Entity entity = objectMouseOver.entityHit;\n-\n-        if (entity != null) {\n-            if (entity instanceof EntityOtherPlayerMP) {\n-                NBTTagCompound nbt = new NBTTagCompound();\n-                entity.writeToNBT(nbt);\n-                ClipboardHelper.setClipboard(nbt);\n-            } else {\n-                ClipboardHelper.setClipboard(entity.serializeNBT());\n-            }\n-        } else {\n-            BlockPos pos = objectMouseOver.getBlockPos();\n-            TileEntity tile = minecraft.theWorld.getTileEntity(pos);\n-            if (tile != null) ClipboardHelper.setClipboard(tile.serializeNBT());\n-        }\n-    }\n-\n-    @SubscribeEvent()\n-    public void onKeyboardInputEvent(GuiScreenEvent.KeyboardInputEvent event) {\n-        // Keybinds don't register in GUI's\n-        if (!Keyboard.isKeyDown(WikiToolsKeybinds.COPY_NBT.getKeyCode())) return;\n-        if (event.gui instanceof GuiContainer) {\n-            Slot slot = ((GuiContainer) event.gui).getSlotUnderMouse();\n-            if (slot == null) return;\n-            if (!slot.getHasStack()) return;\n-            ClipboardHelper.setClipboard(slot.getStack().serializeNBT());\n-        }\n-    }\n+\t\n+\t@SubscribeEvent\n+\tpublic void onKeyInputEvent(InputEvent.KeyInputEvent event) {\n+\t\tif (WikiTools.COPY_NBT.isKeyDown()) {\n+\t\t\tMinecraft mc = Minecraft.getMinecraft();\n+\t\t\tMovingObjectPosition objectMouseOver = mc.objectMouseOver;\n+\t\t\tEntity entity = objectMouseOver.entityHit;\n+\t\t\t\n+\t\t\tif (entity != null) {\n+\t\t\t\tif (entity instanceof EntityOtherPlayerMP) {\n+\t\t\t\t\tNBTTagCompound nbt = new NBTTagCompound();\n+\t\t\t\t\tentity.writeToNBT(nbt);\n+\t\t\t\t\t\n+\t\t\t\t\tClipboardHelper.setClipboard(nbt);\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\tClipboardHelper.setClipboard(entity.serializeNBT());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tTileEntity tile = mc.theWorld.getTileEntity(objectMouseOver.getBlockPos());\n+\t\t\t\t\n+\t\t\t\tif (tile != null) {\n+\t\t\t\t\tClipboardHelper.setClipboard(tile.serializeNBT());\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\t\n+\t@SubscribeEvent()\n+\tpublic void onKeyboardInputEvent(GuiScreenEvent.KeyboardInputEvent event) {\n+\t\t// Keybinds don't register in GUI's\n+\t\tif (Keyboard.isKeyDown(WikiTools.COPY_NBT.getKeyCode()) && event.gui instanceof GuiContainer) {\n+\t\t\tSlot slot = ((GuiContainer) event.gui).getSlotUnderMouse();\n+\t\t\t\n+\t\t\tif (slot != null && slot.getHasStack()) {\n+\t\t\t\tClipboardHelper.setClipboard(slot.getStack().serializeNBT());\n+\t\t\t}\n+\t\t}\n+\t}\n }"
  },
  {
    "sha": "fb2a8cd91edb97e8dc341423d37273227c149d92",
    "filename": "src/main/java/mikuhl/wikitools/handler/EntityRenderHandler.java",
    "status": "modified",
    "additions": 124,
    "deletions": 128,
    "changes": 252,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/handler/EntityRenderHandler.java",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/handler/EntityRenderHandler.java",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/src/main/java/mikuhl/wikitools/handler/EntityRenderHandler.java?ref=9dfa480740fbc3226f5a5a8ca5e0919bccd54008",
    "patch": "@@ -1,128 +1,124 @@\n-package mikuhl.wikitools.handler;\n-\n-import mikuhl.wikitools.WikiToolsKeybinds;\n-import mikuhl.wikitools.entity.EntityRenderClone;\n-import mikuhl.wikitools.helper.FramebufferHelper;\n-import net.minecraft.client.Minecraft;\n-import net.minecraft.client.entity.EntityOtherPlayerMP;\n-import net.minecraft.client.gui.ScaledResolution;\n-import net.minecraft.client.shader.Framebuffer;\n-import net.minecraft.entity.Entity;\n-import net.minecraft.entity.EntityList;\n-import net.minecraft.entity.EntityLivingBase;\n-import net.minecraft.item.ItemStack;\n-import net.minecraft.nbt.NBTTagCompound;\n-import net.minecraft.util.MovingObjectPosition;\n-import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;\n-import net.minecraftforge.fml.common.gameevent.InputEvent;\n-\n-import java.awt.image.BufferedImage;\n-\n-import static jdk.nashorn.internal.objects.Global.Infinity;\n-\n-public class EntityRenderHandler {\n-\n-    private static boolean rendering = false;\n-\n-    @SubscribeEvent\n-    public void onKeyInputEvent(InputEvent.KeyInputEvent event) {\n-\n-        if (!WikiToolsKeybinds.RENDER.isKeyDown()) return;\n-\n-        if (rendering) return;\n-\n-        Minecraft minecraft = Minecraft.getMinecraft();\n-\n-        MovingObjectPosition objectMouseOver = minecraft.objectMouseOver;\n-        Entity entityHit = objectMouseOver.entityHit;\n-\n-        boolean steve = WikiToolsKeybinds.STEVE_MODIFIER.isKeyDown();\n-\n-        // Get the right entity\n-        EntityLivingBase entity = null;\n-        if (entityHit instanceof EntityLivingBase) {\n-            if (entityHit instanceof EntityOtherPlayerMP) {\n-                entity = new EntityRenderClone(((EntityOtherPlayerMP) entityHit), steve);\n-            } else {\n-                NBTTagCompound nbt = entityHit.serializeNBT();\n-                entity = ((EntityLivingBase) EntityList.createEntityFromNBT(nbt, minecraft.theWorld));\n-            }\n-        } else if (WikiToolsKeybinds.SELF_MODIFIER.isKeyDown()) {\n-            entity = new EntityRenderClone(minecraft.thePlayer, steve);\n-        }\n-\n-        if (entity == null) return;\n-\n-        rendering = true;\n-\n-        // Disable red glow\n-        entity.hurtTime = 0;\n-\n-\n-        // Disable name tag\n-        entity.posX = Double.MAX_VALUE;\n-        entity.posY = Double.MAX_VALUE;\n-        entity.posZ = Double.MAX_VALUE;\n-\n-        // Set rotation\n-        entity.renderYawOffset = 0;\n-        entity.rotationYaw = 0;\n-        entity.rotationPitch = 0;\n-        entity.rotationYawHead = entity.rotationYaw;\n-        entity.prevRotationYawHead = entity.rotationYaw;\n-\n-        if (WikiToolsKeybinds.ENCHANT_MODIFIER.isKeyDown()) {\n-            for (ItemStack itemStack : entity.getInventory()) {\n-                if (itemStack != null) itemStack.getTagCompound().removeTag(\"ench\");\n-            }\n-        }\n-\n-\n-        int displayWidth = minecraft.displayWidth;\n-        int displayHeight = minecraft.displayHeight;\n-        int shortest = Math.min(Math.min(displayWidth, displayHeight), 512);\n-\n-        Framebuffer framebuffer = FramebufferHelper.createFrameBuffer(displayWidth, displayHeight);\n-\n-        float scale = 1;\n-        BufferedImage bufferedImage = renderEntity(0, scale, entity, framebuffer);\n-        int longest = getLongest(bufferedImage);\n-\n-        if (longest != 0) {\n-            // Some mobs require extremely fine scaling to equal exactly our size.\n-            // Be ok with 1 pixel smaller if it cant find the exact scale fast enough.\n-            while (longest != shortest && longest != shortest - 1) {\n-                scale = shortest / (longest / scale);\n-                if (scale == Infinity) break;\n-                bufferedImage = renderEntity(shortest, scale, entity, framebuffer);\n-                longest = getLongest(bufferedImage);\n-            }\n-\n-            FramebufferHelper.saveBuffer(bufferedImage);\n-            FramebufferHelper.restoreFrameBuffer(framebuffer);\n-        }\n-\n-        rendering = false;\n-\n-    }\n-\n-    private BufferedImage renderEntity(int height, float scale, EntityLivingBase entity, Framebuffer framebuffer) {\n-\n-        FramebufferHelper.clearFrameBuffer();\n-\n-        ScaledResolution resolution = new ScaledResolution(Minecraft.getMinecraft());\n-        int posX = resolution.getScaledWidth() / 2;\n-        int posY = resolution.getScaledHeight() / 2 + (height / resolution.getScaleFactor() / 2);\n-\n-        FramebufferHelper.drawEntityOnScreen(posX, posY, scale, entity);\n-        BufferedImage readImage = FramebufferHelper.readImage(framebuffer);\n-        BufferedImage trimImage = FramebufferHelper.trimImage(readImage);\n-\n-        return trimImage;\n-    }\n-\n-    private int getLongest(BufferedImage image) {\n-        return Math.max(image.getWidth(), image.getHeight());\n-    }\n-\n-}\n+package mikuhl.wikitools.handler;\r\n+\r\n+import mikuhl.wikitools.WikiTools;\r\n+import mikuhl.wikitools.entity.EntityRenderClone;\r\n+import mikuhl.wikitools.helper.FramebufferHelper;\r\n+\r\n+import net.minecraft.client.Minecraft;\r\n+import net.minecraft.client.entity.EntityOtherPlayerMP;\r\n+import net.minecraft.client.gui.ScaledResolution;\r\n+import net.minecraft.client.shader.Framebuffer;\r\n+import net.minecraft.entity.Entity;\r\n+import net.minecraft.entity.EntityList;\r\n+import net.minecraft.entity.EntityLivingBase;\r\n+import net.minecraft.item.ItemStack;\r\n+\r\n+import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;\r\n+import net.minecraftforge.fml.common.gameevent.InputEvent;\r\n+\r\n+import java.awt.image.BufferedImage;\r\n+\r\n+public class EntityRenderHandler {\r\n+\t\r\n+\tprivate boolean rendering;\r\n+\t\r\n+\t@SubscribeEvent\r\n+\tpublic void onKeyInputEvent(InputEvent.KeyInputEvent event) {\r\n+\t\tif (rendering || !WikiTools.RENDER.isKeyDown()) {\r\n+\t\t\treturn;\r\n+\t\t}\r\n+\t\tMinecraft mc = Minecraft.getMinecraft();\r\n+\t\tEntity entityHit = mc.objectMouseOver.entityHit;\r\n+\t\t// Get the right entity\r\n+\t\tEntityLivingBase entity;\r\n+\t\t\r\n+\t\tif (entityHit instanceof EntityLivingBase) {\r\n+\t\t\tif (entityHit instanceof EntityOtherPlayerMP) {\r\n+\t\t\t\tentity = new EntityRenderClone(((EntityOtherPlayerMP) entityHit), ModifierHandler.STEVE_MODIFIER);\r\n+\t\t\t}\r\n+\t\t\telse {\r\n+\t\t\t\tentity = ((EntityLivingBase) EntityList.createEntityFromNBT(entityHit.serializeNBT(), mc.theWorld));\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\telse if (ModifierHandler.SELF_MODIFIER) {\r\n+\t\t\tentity = new EntityRenderClone(mc.thePlayer, ModifierHandler.STEVE_MODIFIER);\r\n+\t\t}\r\n+\t\telse {\r\n+\t\t\tentity = null;\r\n+\t\t}\r\n+\t\tif (entity == null) {\r\n+\t\t\treturn;\r\n+\t\t}\r\n+\t\trendering = true;\r\n+\t\tWikiTools.sendMessage(\"&a[WikiTools] &fRendering has started please wait.\");\r\n+\t\t\r\n+\t\t// Disable red glow\r\n+\t\tentity.hurtTime = 0;\r\n+\t\t\r\n+\t\t// Disable name tag\r\n+\t\tentity.posX = Double.MAX_VALUE;\r\n+\t\tentity.posY = Double.MAX_VALUE;\r\n+\t\tentity.posZ = Double.MAX_VALUE;\r\n+\t\t\r\n+\t\t// Set rotation\r\n+\t\tentity.renderYawOffset = 0;\r\n+\t\tentity.rotationYaw = 0;\r\n+\t\tentity.rotationPitch = 0;\r\n+\t\tentity.rotationYawHead = entity.rotationYaw;\r\n+\t\tentity.prevRotationYawHead = entity.rotationYaw;\r\n+\t\t\r\n+\t\tif (ModifierHandler.HELDITEM_MODIFIER) {\r\n+\t\t\tentity.setCurrentItemOrArmor(0, null);\r\n+\t\t}\r\n+\t\tif (ModifierHandler.ARMOR_MODIFIER) {\r\n+\t\t\tentity.setCurrentItemOrArmor(1, null);\r\n+\t\t\tentity.setCurrentItemOrArmor(2, null);\r\n+\t\t\tentity.setCurrentItemOrArmor(3, null);\r\n+\t\t\tentity.setCurrentItemOrArmor(4, null);\r\n+\t\t}\r\n+\t\telse if (ModifierHandler.ENCHANT_MODIFIER) {\r\n+\t\t\tfor (ItemStack itemStack : entity.getInventory()) {\r\n+\t\t\t\tif (itemStack != null) {\r\n+\t\t\t\t\titemStack.getTagCompound().removeTag(\"ench\");\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\tint displayWidth = mc.displayWidth;\r\n+        int displayHeight = mc.displayHeight;\r\n+        int shortest = Math.min(Math.min(displayWidth, displayHeight), 512);\r\n+\r\n+        Framebuffer framebuffer = FramebufferHelper.createFrameBuffer(displayWidth, displayHeight);\r\n+\r\n+        float scale = 1;\r\n+        BufferedImage image = renderEntity(0, scale, entity, framebuffer);\r\n+\t\t\r\n+\t\tint longest;\r\n+\t\t\r\n+\t\twhile ((longest = Math.max(image.getWidth(), image.getHeight())) != 0 && longest != shortest) {\r\n+\t\t\tscale = shortest / (longest / scale);\r\n+\t\t\t\r\n+\t\t\tif (scale == Double.POSITIVE_INFINITY) {\r\n+\t\t\t\tbreak;\r\n+\t\t\t}\r\n+\t\t\timage = renderEntity(shortest, scale, entity, framebuffer);\r\n+\t\t}\r\n+\t\tFramebufferHelper.saveBuffer(image);\r\n+\t\tFramebufferHelper.restoreFrameBuffer(framebuffer);\r\n+\t\t\r\n+\t\trendering = false;\r\n+\t\tWikiTools.sendMessage(\"&a[WikiTools] &fRendering done.\");\r\n+\t}\r\n+\t\r\n+\tprivate BufferedImage renderEntity(int height, float scale, EntityLivingBase entity, Framebuffer framebuffer) {\r\n+\t\tFramebufferHelper.clearFrameBuffer();\r\n+\t\t\r\n+\t\tScaledResolution resolution = new ScaledResolution(Minecraft.getMinecraft());\r\n+\t\t\r\n+\t\tint posX = resolution.getScaledWidth() / 2;\r\n+\t\tint posY = resolution.getScaledHeight() / 2 + (height / resolution.getScaleFactor() / 2);\r\n+\t\t\r\n+\t\tFramebufferHelper.drawEntityOnScreen(posX, posY, scale, entity);\r\n+\t\t\r\n+\t\treturn FramebufferHelper.trimImage(FramebufferHelper.readImage(framebuffer));\r\n+\t}\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "fdedbf0adad28d8e94c1697cf0625ee21d9edb63",
    "filename": "src/main/java/mikuhl/wikitools/handler/ModifierHandler.java",
    "status": "added",
    "additions": 80,
    "deletions": 0,
    "changes": 80,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/handler/ModifierHandler.java",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/handler/ModifierHandler.java",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/src/main/java/mikuhl/wikitools/handler/ModifierHandler.java?ref=9dfa480740fbc3226f5a5a8ca5e0919bccd54008",
    "patch": "@@ -0,0 +1,80 @@\n+package mikuhl.wikitools.handler;\n+\n+import mikuhl.wikitools.WikiTools;\n+\n+import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;\n+import net.minecraftforge.fml.common.gameevent.InputEvent.KeyInputEvent;\n+\n+public class ModifierHandler {\n+\t\n+\tpublic static boolean ENCHANT_MODIFIER;\n+\tpublic static boolean STEVE_MODIFIER;\n+\tpublic static boolean INVISIBLE_MODIFIER;\n+\tpublic static boolean HELDITEM_MODIFIER;\n+\tpublic static boolean SELF_MODIFIER;\n+\tpublic static boolean ARMOR_MODIFIER;\n+\t\n+\t@SubscribeEvent\n+\tpublic void onKeyInputEvent(KeyInputEvent event) {\n+\t\tif (WikiTools.ENCHANT_MODIFIER.isKeyDown()) {\n+\t\t\tENCHANT_MODIFIER = !ENCHANT_MODIFIER;\n+\t\t\t\n+\t\t\tif (ENCHANT_MODIFIER) {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fEnchat Modifier has been &aenabled&f.\");\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fEnchat Modifier has been &cdisabled&f.\");\n+\t\t\t}\n+\t\t}\n+\t\tif (WikiTools.STEVE_MODIFIER.isKeyDown()) {\n+\t\t\tSTEVE_MODIFIER = !STEVE_MODIFIER;\n+\t\t\t\n+\t\t\tif (STEVE_MODIFIER) {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fSteve Modifier has been &aenabled&f.\");\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fSteve Modifier has been &cdisabled&f.\");\n+\t\t\t}\n+\t\t}\n+\t\tif (WikiTools.INVISIBLE_MODIFIER.isKeyDown()) {\n+\t\t\tINVISIBLE_MODIFIER = !INVISIBLE_MODIFIER;\n+\t\t\t\n+\t\t\tif (INVISIBLE_MODIFIER) {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fInvisible Modifier has been &aenabled&f.\");\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fInvisible Modifier has been &cdisabled&f.\");\n+\t\t\t}\n+\t\t}\n+\t\tif (WikiTools.HELDITEM_MODIFIER.isKeyDown()) {\n+\t\t\tHELDITEM_MODIFIER = !HELDITEM_MODIFIER;\n+\t\t\t\n+\t\t\tif (HELDITEM_MODIFIER) {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fItem Held Modifier has been &aenabled&f.\");\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fItem Held Modifier has been &cdisabled&f.\");\n+\t\t\t}\n+\t\t}\n+\t\tif (WikiTools.SELF_MODIFIER.isKeyDown()) {\n+\t\t\tSELF_MODIFIER = !SELF_MODIFIER;\n+\t\t\t\n+\t\t\tif (SELF_MODIFIER) {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fSelf Modifier has been &aenabled&f.\");\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fSelf Modifier has been &cdisabled&f.\");\n+\t\t\t}\n+\t\t}\n+\t\tif (WikiTools.ARMOR_MODIFIER.isKeyDown()) {\n+\t\t\tARMOR_MODIFIER = !ARMOR_MODIFIER;\n+\t\t\t\n+\t\t\tif (ARMOR_MODIFIER) {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fArmor Modifier has been &aenabled&f.\");\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tWikiTools.sendMessage(\"&a[WikiTools] &fArmor Modifier has been &cdisabled&f.\");\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "37b726ee1b88f6fb4190ce041d21b5ab3bb16b3b",
    "filename": "src/main/java/mikuhl/wikitools/helper/ClipboardHelper.java",
    "status": "modified",
    "additions": 35,
    "deletions": 35,
    "changes": 70,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/helper/ClipboardHelper.java",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/helper/ClipboardHelper.java",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/src/main/java/mikuhl/wikitools/helper/ClipboardHelper.java?ref=9dfa480740fbc3226f5a5a8ca5e0919bccd54008",
    "patch": "@@ -3,43 +3,43 @@\n import net.minecraft.nbt.NBTBase;\n import net.minecraft.nbt.NBTTagByteArray;\n import net.minecraft.nbt.NBTTagCompound;\n-import org.apache.commons.lang3.StringUtils;\n \n-import java.awt.*;\n+import java.awt.Toolkit;\n import java.awt.datatransfer.Clipboard;\n import java.awt.datatransfer.StringSelection;\n \n-public class ClipboardHelper {\n-\n-    private static Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n-\n-    public static void setClipboard(NBTTagCompound nbt) {\n-        setClipboard(walkNBT(nbt));\n-    }\n+import mikuhl.wikitools.WikiTools;\n \n-    private static String walkNBT(NBTTagCompound nbt) {\n-        StringBuilder stringbuilder = new StringBuilder(\"{\");\n-        for (String key : nbt.getKeySet()) {\n-            NBTBase tag = nbt.getTag(key);\n-            if (tag instanceof NBTTagCompound) {\n-                stringbuilder.append(key + \":\" + walkNBT(((NBTTagCompound) tag)));\n-            } else if (tag instanceof NBTTagByteArray) {\n-                byte[] byteArray = ((NBTTagByteArray) tag).getByteArray();\n-                StringBuilder string = new StringBuilder(\"[B;\");\n-                for (byte b : byteArray) string.append(b + \",\");\n-                string.setLength(string.length() - 1);\n-                stringbuilder.append(key + \":\" + string.append(\"]\").toString());\n-            } else {\n-                stringbuilder.append(key + \":\" + tag);\n-            }\n-            stringbuilder.append(\",\");\n-        }\n-        stringbuilder.setLength(stringbuilder.length() - 1);\n-        stringbuilder.append(\"}\");\n-        return stringbuilder.toString();\n-    }\n-\n-    public static void setClipboard(String string) {\n-        clipboard.setContents(new StringSelection(string), null);\n-    }\n-}\n+public class ClipboardHelper {\n+\t\n+\tprivate static Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n+\t\n+\tpublic static void setClipboard(NBTTagCompound nbt) {\n+\t\tclipboard.setContents(new StringSelection(walkNBT(nbt)), null);\n+\t\tWikiTools.sendMessage(\"&a[WikiTools] &fNBT tag copied to your clipboard.\");\n+\t}\n+\t\n+\tprivate static String walkNBT(NBTTagCompound nbt) {\n+\t\tStringBuilder stringbuilder = new StringBuilder(\"{\");\n+\t\tfor (String key : nbt.getKeySet()) {\n+\t\t\tNBTBase tag = nbt.getTag(key);\n+\t\t\tif (tag instanceof NBTTagCompound) {\n+\t\t\t\tstringbuilder.append(key + \":\" + walkNBT(((NBTTagCompound) tag)));\n+\t\t\t}\n+\t\t\telse if (tag instanceof NBTTagByteArray) {\n+\t\t\t\tbyte[] byteArray = ((NBTTagByteArray) tag).getByteArray();\n+\t\t\t\tStringBuilder string = new StringBuilder(\"[B;\");\n+\t\t\t\tfor (byte b : byteArray) string.append(b + \",\");\n+\t\t\t\tstring.setLength(string.length() - 1);\n+\t\t\t\tstringbuilder.append(key + \":\" + string.append(\"]\").toString());\n+\t\t\t}\n+\t\t\telse {\n+\t\t\t\tstringbuilder.append(key + \":\" + tag);\n+\t\t\t}\n+\t\t\tstringbuilder.append(\",\");\n+\t\t}\n+\t\tstringbuilder.setLength(stringbuilder.length() - 1);\n+\t\tstringbuilder.append(\"}\");\n+\t\treturn stringbuilder.toString();\n+\t}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f21521f441a2df9a70e1de41081a4cbdb8d96e0b",
    "filename": "src/main/java/mikuhl/wikitools/helper/FramebufferHelper.java",
    "status": "modified",
    "additions": 172,
    "deletions": 168,
    "changes": 340,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/helper/FramebufferHelper.java",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/9dfa480740fbc3226f5a5a8ca5e0919bccd54008/src/main/java/mikuhl/wikitools/helper/FramebufferHelper.java",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/src/main/java/mikuhl/wikitools/helper/FramebufferHelper.java?ref=9dfa480740fbc3226f5a5a8ca5e0919bccd54008",
    "patch": "@@ -1,168 +1,172 @@\n-package mikuhl.wikitools.helper;\n-\n-import com.google.common.io.Files;\n-import mikuhl.wikitools.WikiTools;\n-import net.minecraft.client.Minecraft;\n-import net.minecraft.client.renderer.GlStateManager;\n-import net.minecraft.client.renderer.OpenGlHelper;\n-import net.minecraft.client.renderer.RenderHelper;\n-import net.minecraft.client.renderer.entity.RenderManager;\n-import net.minecraft.client.renderer.texture.TextureUtil;\n-import net.minecraft.client.shader.Framebuffer;\n-import net.minecraft.entity.EntityLivingBase;\n-import net.minecraft.event.ClickEvent;\n-import net.minecraft.util.ChatComponentText;\n-import net.minecraft.util.ChatComponentTranslation;\n-import net.minecraft.util.IChatComponent;\n-import org.lwjgl.BufferUtils;\n-import org.lwjgl.opengl.GL11;\n-import org.lwjgl.opengl.GL12;\n-import org.lwjgl.opengl.GL30;\n-\n-import javax.imageio.ImageIO;\n-import java.awt.image.BufferedImage;\n-import java.awt.image.WritableRaster;\n-import java.io.File;\n-import java.io.IOException;\n-import java.nio.IntBuffer;\n-import java.util.Date;\n-\n-public class FramebufferHelper {\n-\n-    private static Framebuffer fbo;\n-\n-    public static Framebuffer createFrameBuffer(int width, int height) {\n-        fbo = Minecraft.getMinecraft().getFramebuffer();\n-        Framebuffer framebuffer = new Framebuffer(width, height, true);\n-        framebuffer.bindFramebuffer(true);\n-        clearFrameBuffer();\n-        return framebuffer;\n-    }\n-\n-    public static void clearFrameBuffer() {\n-        GlStateManager.clearColor(0, 0, 0, 0);\n-        GlStateManager.clear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);\n-    }\n-\n-    public static void restoreFrameBuffer(Framebuffer toDelete) {\n-        toDelete.deleteFramebuffer();\n-        if (fbo != null) {\n-            fbo.bindFramebuffer(true);\n-        } else {\n-            GL30.glBindFramebuffer(GL30.GL_FRAMEBUFFER, 0);\n-            GL11.glViewport(0, 0, Minecraft.getMinecraft().displayWidth, Minecraft.getMinecraft().displayHeight);\n-        }\n-    }\n-\n-    public static BufferedImage readImage(Framebuffer framebuffer) {\n-        int width = framebuffer.framebufferWidth;\n-        int height = framebuffer.framebufferHeight;\n-        IntBuffer pixels = BufferUtils.createIntBuffer(width * height);\n-        GlStateManager.bindTexture(framebuffer.framebufferTexture);\n-        GL11.glGetTexImage(GL11.GL_TEXTURE_2D, 0, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, pixels);\n-        int[] vals = new int[width * height];\n-        pixels.get(vals);\n-        TextureUtil.processPixelValues(vals, width, height);\n-        BufferedImage bufferedimage = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);\n-        bufferedimage.setRGB(0, 0, width, height, vals, 0, width);\n-        return bufferedimage;\n-    }\n-\n-    public static BufferedImage trimImage(BufferedImage image) {\n-        WritableRaster raster = image.getAlphaRaster();\n-        int width = raster.getWidth();\n-        int height = raster.getHeight();\n-        int left = 0;\n-        int top = 0;\n-        int right = width - 1;\n-        int bottom = height - 1;\n-        int minRight = width - 1;\n-        int minBottom = height - 1;\n-\n-        top:\n-        for (; top < bottom; top++) {\n-            for (int x = 0; x < width; x++) {\n-                if (raster.getSample(x, top, 0) != 0) {\n-                    minRight = x;\n-                    minBottom = top;\n-                    break top;\n-                }\n-            }\n-        }\n-\n-        left:\n-        for (; left < minRight; left++) {\n-            for (int y = height - 1; y > top; y--) {\n-                if (raster.getSample(left, y, 0) != 0) {\n-                    minBottom = y;\n-                    break left;\n-                }\n-            }\n-        }\n-\n-        bottom:\n-        for (; bottom > minBottom; bottom--) {\n-            for (int x = width - 1; x >= left; x--) {\n-                if (raster.getSample(x, bottom, 0) != 0) {\n-                    minRight = x;\n-                    break bottom;\n-                }\n-            }\n-        }\n-\n-        right:\n-        for (; right > minRight; right--) {\n-            for (int y = bottom; y >= top; y--) {\n-                if (raster.getSample(right, y, 0) != 0) {\n-                    break right;\n-                }\n-            }\n-        }\n-\n-        return image.getSubimage(left, top, right - left + 1, bottom - top + 1);\n-    }\n-\n-    public static void saveBuffer(BufferedImage bufferedImage) {\n-        try {\n-            File f = new File(WikiTools.MODID + \"/\", new Date().getTime() + \".png\");\n-            Files.createParentDirs(f);\n-            f.createNewFile();\n-            ImageIO.write(bufferedImage, \"png\", f);\n-            IChatComponent ichatcomponent = new ChatComponentText(f.getName());\n-            ichatcomponent.getChatStyle().setChatClickEvent(new ClickEvent(ClickEvent.Action.OPEN_FILE, f.getParent()));\n-            ichatcomponent.getChatStyle().setUnderlined(true);\n-            ChatComponentTranslation success = new ChatComponentTranslation(\"screenshot.success\", ichatcomponent);\n-            Minecraft.getMinecraft().ingameGUI.getChatGUI().printChatMessage(success);\n-        } catch (IOException error) {\n-            error.printStackTrace();\n-        }\n-    }\n-\n-    public static void drawEntityOnScreen(int posX, int posY, float scale, EntityLivingBase ent) {\n-        GlStateManager.enableColorMaterial();\n-        GlStateManager.pushMatrix();\n-        GlStateManager.translate((float) posX, (float) posY, 1.0F);\n-        GlStateManager.scale(-scale, scale, scale);\n-        GlStateManager.rotate(180.0F, 0.0F, 0.0F, 1.0F);\n-        GlStateManager.rotate(135.0F, 0.0F, 1.0F, 0.0F);\n-        RenderHelper.enableStandardItemLighting();\n-        GlStateManager.rotate(-135.0F, 0.0F, 1.0F, 0.0F);\n-        GlStateManager.rotate(45.0F, 0.0F, -1.0F, 0.0F);\n-        GlStateManager.rotate(30.0F, 1.0F, 0.0F, -1.0F);\n-        GlStateManager.translate(0.0F, 0.0F, 0.0F);\n-        RenderManager rendermanager = Minecraft.getMinecraft().getRenderManager();\n-        rendermanager.setPlayerViewY(180.0F);\n-        rendermanager.setRenderShadow(false);\n-        rendermanager.renderEntityWithPosYaw(ent, 0,0,0,0,1.0F);\n-        // Fix colored things like sheep, and leather armor.\n-        GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);\n-        rendermanager.setRenderShadow(true);\n-        GlStateManager.popMatrix();\n-        RenderHelper.disableStandardItemLighting();\n-        GlStateManager.disableRescaleNormal();\n-        GlStateManager.setActiveTexture(OpenGlHelper.lightmapTexUnit);\n-        GlStateManager.disableTexture2D();\n-        GlStateManager.setActiveTexture(OpenGlHelper.defaultTexUnit);\n-    }\n-\n-}\n+package mikuhl.wikitools.helper;\r\n+\r\n+import com.google.common.io.Files;\r\n+\r\n+import net.minecraft.client.Minecraft;\r\n+import net.minecraft.client.renderer.GlStateManager;\r\n+import net.minecraft.client.renderer.OpenGlHelper;\r\n+import net.minecraft.client.renderer.RenderHelper;\r\n+import net.minecraft.client.renderer.entity.RenderManager;\r\n+import net.minecraft.client.renderer.texture.TextureUtil;\r\n+import net.minecraft.client.shader.Framebuffer;\r\n+import net.minecraft.entity.EntityLivingBase;\r\n+import net.minecraft.event.ClickEvent;\r\n+import net.minecraft.util.ChatComponentText;\r\n+import net.minecraft.util.ChatComponentTranslation;\r\n+import net.minecraft.util.IChatComponent;\r\n+\r\n+import org.lwjgl.BufferUtils;\r\n+import org.lwjgl.opengl.GL11;\r\n+import org.lwjgl.opengl.GL12;\r\n+import org.lwjgl.opengl.GL30;\r\n+\r\n+import javax.imageio.ImageIO;\r\n+\r\n+import java.awt.image.BufferedImage;\r\n+import java.awt.image.WritableRaster;\r\n+import java.io.File;\r\n+import java.io.IOException;\r\n+import java.nio.IntBuffer;\r\n+import java.util.Date;\r\n+\r\n+public class FramebufferHelper {\r\n+\t\r\n+\tprivate static Framebuffer fbo;\r\n+\t\r\n+\tpublic static Framebuffer createFrameBuffer(int width, int height) {\r\n+\t\tfbo = Minecraft.getMinecraft().getFramebuffer();\r\n+\t\tFramebuffer framebuffer = new Framebuffer(width, height, true);\r\n+\t\tframebuffer.bindFramebuffer(true);\r\n+\t\tclearFrameBuffer();\r\n+\t\treturn framebuffer;\r\n+\t}\r\n+\t\r\n+\tpublic static void clearFrameBuffer() {\r\n+\t\tGlStateManager.clearColor(0, 0, 0, 0);\r\n+\t\tGlStateManager.clear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);\r\n+\t}\r\n+\t\r\n+\tpublic static void restoreFrameBuffer(Framebuffer toDelete) {\r\n+\t\ttoDelete.deleteFramebuffer();\r\n+\t\tif (fbo != null) {\r\n+\t\t\tfbo.bindFramebuffer(true);\r\n+\t\t}\r\n+\t\telse {\r\n+\t\t\tGL30.glBindFramebuffer(GL30.GL_FRAMEBUFFER, 0);\r\n+\t\t\tGL11.glViewport(0, 0, Minecraft.getMinecraft().displayWidth, Minecraft.getMinecraft().displayHeight);\r\n+\t\t}\r\n+\t}\r\n+\t\r\n+\tpublic static BufferedImage readImage(Framebuffer framebuffer) {\r\n+\t\tint width = framebuffer.framebufferWidth;\r\n+\t\tint height = framebuffer.framebufferHeight;\r\n+\t\tIntBuffer pixels = BufferUtils.createIntBuffer(width * height);\r\n+\t\tGlStateManager.bindTexture(framebuffer.framebufferTexture);\r\n+\t\tGL11.glGetTexImage(GL11.GL_TEXTURE_2D, 0, GL12.GL_BGRA, GL12.GL_UNSIGNED_INT_8_8_8_8_REV, pixels);\r\n+\t\tint[] vals = new int[width * height];\r\n+\t\tpixels.get(vals);\r\n+\t\tTextureUtil.processPixelValues(vals, width, height);\r\n+\t\tBufferedImage bufferedimage = new BufferedImage(width, height, BufferedImage.TYPE_INT_ARGB);\r\n+\t\tbufferedimage.setRGB(0, 0, width, height, vals, 0, width);\r\n+\t\treturn bufferedimage;\r\n+\t}\r\n+\t\r\n+\tpublic static BufferedImage trimImage(BufferedImage image) {\r\n+\t\tWritableRaster raster = image.getAlphaRaster();\r\n+\t\tint width = raster.getWidth();\r\n+\t\tint height = raster.getHeight();\r\n+\t\tint left = 0;\r\n+\t\tint top = 0;\r\n+\t\tint right = width - 1;\r\n+\t\tint bottom = height - 1;\r\n+\t\tint minRight = width - 1;\r\n+\t\tint minBottom = height - 1;\r\n+\t\t\r\n+\t\ttop:\r\n+\t\tfor (; top < bottom; top++) {\r\n+\t\t\tfor (int x = 0; x < width; x++) {\r\n+\t\t\t\tif (raster.getSample(x, top, 0) != 0) {\r\n+\t\t\t\t\tminRight = x;\r\n+\t\t\t\t\tminBottom = top;\r\n+\t\t\t\t\tbreak top;\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\t\r\n+\t\tleft:\r\n+\t\tfor (; left < minRight; left++) {\r\n+\t\t\tfor (int y = height - 1; y > top; y--) {\r\n+\t\t\t\tif (raster.getSample(left, y, 0) != 0) {\r\n+\t\t\t\t\tminBottom = y;\r\n+\t\t\t\t\tbreak left;\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\t\r\n+\t\tbottom:\r\n+\t\tfor (; bottom > minBottom; bottom--) {\r\n+\t\t\tfor (int x = width - 1; x >= left; x--) {\r\n+\t\t\t\tif (raster.getSample(x, bottom, 0) != 0) {\r\n+\t\t\t\t\tminRight = x;\r\n+\t\t\t\t\tbreak bottom;\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\t\r\n+\t\tright:\r\n+\t\tfor (; right > minRight; right--) {\r\n+\t\t\tfor (int y = bottom; y >= top; y--) {\r\n+\t\t\t\tif (raster.getSample(right, y, 0) != 0) {\r\n+\t\t\t\t\tbreak right;\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\t\r\n+\t\treturn image.getSubimage(left, top, right - left + 1, bottom - top + 1);\r\n+\t}\r\n+\t\r\n+\tpublic static void saveBuffer(BufferedImage bufferedImage) {\r\n+\t\ttry {\r\n+\t\t\tFile f = new File(\"WikiTools\", new Date().getTime() + \".png\");\r\n+\t\t\tFiles.createParentDirs(f);\r\n+\t\t\tf.createNewFile();\r\n+\t\t\tImageIO.write(bufferedImage, \"png\", f);\r\n+\t\t\tIChatComponent ichatcomponent = new ChatComponentText(f.getName());\r\n+\t\t\tichatcomponent.getChatStyle().setChatClickEvent(new ClickEvent(ClickEvent.Action.OPEN_FILE, f.getParent()));\r\n+\t\t\tichatcomponent.getChatStyle().setUnderlined(true);\r\n+\t\t\tChatComponentTranslation success = new ChatComponentTranslation(\"screenshot.success\", ichatcomponent);\r\n+\t\t\tMinecraft.getMinecraft().ingameGUI.getChatGUI().printChatMessage(success);\r\n+\t\t}\r\n+\t\tcatch (IOException error) {\r\n+\t\t\terror.printStackTrace();\r\n+\t\t}\r\n+\t}\r\n+\t\r\n+\tpublic static void drawEntityOnScreen(int posX, int posY, float scale, EntityLivingBase ent) {\r\n+\t\tGlStateManager.enableColorMaterial();\r\n+\t\tGlStateManager.pushMatrix();\r\n+\t\tGlStateManager.translate(posX, posY, 1.0F);\r\n+\t\tGlStateManager.scale(-scale, scale, scale);\r\n+\t\tGlStateManager.rotate(180.0F, 0.0F, 0.0F, 1.0F);\r\n+\t\tGlStateManager.rotate(135.0F, 0.0F, 1.0F, 0.0F);\r\n+\t\tRenderHelper.enableStandardItemLighting();\r\n+\t\tGlStateManager.rotate(-135.0F, 0.0F, 1.0F, 0.0F);\r\n+\t\tGlStateManager.rotate(45.0F, 0.0F, -1.0F, 0.0F);\r\n+\t\tGlStateManager.rotate(30.0F, 1.0F, 0.0F, -1.0F);\r\n+\t\tGlStateManager.translate(0.0F, 0.0F, 0.0F);\r\n+\t\tRenderManager rendermanager = Minecraft.getMinecraft().getRenderManager();\r\n+\t\trendermanager.setPlayerViewY(180.0F);\r\n+\t\trendermanager.setRenderShadow(false);\r\n+\t\trendermanager.renderEntityWithPosYaw(ent, 0, 0, 0, 0, 1.0F);\r\n+\t\t// Fix colored things like sheep, and leather armor.\r\n+\t\tGlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);\r\n+\t\trendermanager.setRenderShadow(true);\r\n+\t\tGlStateManager.popMatrix();\r\n+\t\tRenderHelper.disableStandardItemLighting();\r\n+\t\tGlStateManager.disableRescaleNormal();\r\n+\t\tGlStateManager.setActiveTexture(OpenGlHelper.lightmapTexUnit);\r\n+\t\tGlStateManager.disableTexture2D();\r\n+\t\tGlStateManager.setActiveTexture(OpenGlHelper.defaultTexUnit);\r\n+\t}\r\n+\t\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "df32a1d0829c8ce1b4a8cdeb833bf336ae7142da",
    "filename": "src/main/java/mikuhl/wikitools/proxy/ClientProxy.java",
    "status": "removed",
    "additions": 0,
    "deletions": 19,
    "changes": 19,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/b1a7968952419185979915feedac050cbcee992e/src/main/java/mikuhl/wikitools/proxy/ClientProxy.java",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/b1a7968952419185979915feedac050cbcee992e/src/main/java/mikuhl/wikitools/proxy/ClientProxy.java",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/src/main/java/mikuhl/wikitools/proxy/ClientProxy.java?ref=b1a7968952419185979915feedac050cbcee992e",
    "patch": "@@ -1,19 +0,0 @@\n-package mikuhl.wikitools.proxy;\n-\n-import mikuhl.wikitools.WikiToolsKeybinds;\n-import mikuhl.wikitools.handler.CopyNBTHandler;\n-import mikuhl.wikitools.handler.EntityRenderHandler;\n-import net.minecraftforge.common.MinecraftForge;\n-import net.minecraftforge.fml.common.event.FMLInitializationEvent;\n-\n-public class ClientProxy extends CommonProxy {\n-    @Override\n-    public void init(FMLInitializationEvent event) {\n-        super.init(event);\n-\n-        MinecraftForge.EVENT_BUS.register(new CopyNBTHandler());\n-        MinecraftForge.EVENT_BUS.register(new EntityRenderHandler());\n-\n-        WikiToolsKeybinds.init();\n-    }\n-}"
  },
  {
    "sha": "05133387a88da4ab556e4d7b227829f5717334a9",
    "filename": "src/main/java/mikuhl/wikitools/proxy/CommonProxy.java",
    "status": "removed",
    "additions": 0,
    "deletions": 9,
    "changes": 9,
    "blob_url": "https://github.com/MichaelPriebe/wikitools/blob/b1a7968952419185979915feedac050cbcee992e/src/main/java/mikuhl/wikitools/proxy/CommonProxy.java",
    "raw_url": "https://github.com/MichaelPriebe/wikitools/raw/b1a7968952419185979915feedac050cbcee992e/src/main/java/mikuhl/wikitools/proxy/CommonProxy.java",
    "contents_url": "https://api.github.com/repos/MichaelPriebe/wikitools/contents/src/main/java/mikuhl/wikitools/proxy/CommonProxy.java?ref=b1a7968952419185979915feedac050cbcee992e",
    "patch": "@@ -1,9 +0,0 @@\n-package mikuhl.wikitools.proxy;\n-\n-import net.minecraftforge.fml.common.event.FMLInitializationEvent;\n-\n-public class CommonProxy {\n-    public void init(FMLInitializationEvent event) {\n-\n-    }\n-}"
  }
]
