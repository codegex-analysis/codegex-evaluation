[
  {
    "sha": "ca85d2d31c1f4cf898fba8d9e19c5d891566084f",
    "filename": ".gitignore",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/gary1998/security-advisor-sdk-java/blob/026fc3b02c354d08a28dc7631c35363cded1f4aa/.gitignore",
    "raw_url": "https://github.com/gary1998/security-advisor-sdk-java/raw/026fc3b02c354d08a28dc7631c35363cded1f4aa/.gitignore",
    "contents_url": "https://api.github.com/repos/gary1998/security-advisor-sdk-java/contents/.gitignore?ref=026fc3b02c354d08a28dc7631c35363cded1f4aa",
    "patch": "@@ -0,0 +1,4 @@\n+**/.settings\n+**/target\n+**/.project\n+**/.classpath\n\\ No newline at end of file"
  },
  {
    "sha": "d05d6140fce64bf743e3f59c12a81cc9f328d3d0",
    "filename": "modules/common/pom.xml",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/gary1998/security-advisor-sdk-java/blob/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/common/pom.xml",
    "raw_url": "https://github.com/gary1998/security-advisor-sdk-java/raw/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/common/pom.xml",
    "contents_url": "https://api.github.com/repos/gary1998/security-advisor-sdk-java/contents/modules/common/pom.xml?ref=026fc3b02c354d08a28dc7631c35363cded1f4aa",
    "patch": "@@ -20,6 +20,11 @@\n     <packaging>jar</packaging>\n \n     <dependencies>\n+        <dependency>\n+            <groupId>com.auth0</groupId>\n+            <artifactId>java-jwt</artifactId>\n+            <version>3.13.0</version>\n+        </dependency>\n         <dependency>\n             <groupId>com.ibm.cloud</groupId>\n             <artifactId>sdk-core</artifactId>"
  },
  {
    "sha": "7162f61ecf5350b8417b08929090c02d0086d288",
    "filename": "modules/common/src/main/java/com/ibm/cloud/securityadvisor/common/SdkCommon.java",
    "status": "modified",
    "additions": 108,
    "deletions": 31,
    "changes": 139,
    "blob_url": "https://github.com/gary1998/security-advisor-sdk-java/blob/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/common/src/main/java/com/ibm/cloud/securityadvisor/common/SdkCommon.java",
    "raw_url": "https://github.com/gary1998/security-advisor-sdk-java/raw/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/common/src/main/java/com/ibm/cloud/securityadvisor/common/SdkCommon.java",
    "contents_url": "https://api.github.com/repos/gary1998/security-advisor-sdk-java/contents/modules/common/src/main/java/com/ibm/cloud/securityadvisor/common/SdkCommon.java?ref=026fc3b02c354d08a28dc7631c35363cded1f4aa",
    "patch": "@@ -14,17 +14,28 @@\n // >>> Replace \"my_services\" with the correct value for your project\n package com.ibm.cloud.securityadvisor.common;\n \n+import okhttp3.OkHttpClient;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import okhttp3.Request.Builder;\n+import java.io.IOException;\n+import com.auth0.jwt.JWT;\n+import com.auth0.jwt.interfaces.DecodedJWT;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+\n import java.io.InputStream;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Properties;\n \n import com.ibm.cloud.sdk.core.http.HttpHeaders;\n import com.ibm.cloud.sdk.core.util.RequestUtils;\n+import com.ibm.cloud.sdk.core.security.Authenticator;\n \n /**\n- * The purpose of this class is to provide SDK-specific HTTP headers to be included in REST API requests made\n- * by the SDK.\n+ * The purpose of this class is to provide SDK-specific HTTP headers to be\n+ * included in REST API requests made by the SDK.\n  */\n public class SdkCommon {\n \n@@ -36,8 +47,10 @@\n     private static String projectName = \"ibm-security-advisor-java-sdk\";\n     private static String version;\n \n-    // >>> Replace \"my-services\" with the parent project's artifactId (e.g. platform-services)\n+    // >>> Replace \"my-services\" with the parent project's artifactId (e.g.\n+    // platform-services)\n     private static String parentArtifactId = \"securityadvisor\";\n+    private static String adminApiUrl = System.getenv().getOrDefault(\"ADMIN_API_URL\", \"https://compliance.cloud.ibm.com/admin/v1\");\n \n     static {\n         readBuildProperties();\n@@ -59,16 +72,17 @@ protected static void readBuildProperties() {\n         try (InputStream is = SdkCommon.class.getResourceAsStream(\"/\" + parentArtifactId + \".properties\")) {\n             buildProps.load(is);\n             version = buildProps.getProperty(\"version\", \"unknown\");\n-       } catch (Throwable t) {\n+        } catch (Throwable t) {\n             version = \"unknown\";\n             projectName = \"unknown\";\n         }\n     }\n \n     /**\n      * This function uses lazy initialization to build the SDK's \"user agent\" value.\n-     * This will consist of the SDK name and version, followed by\n-     * a set of properties provided by the Java Core's RequestUtils class.\n+     * This will consist of the SDK name and version, followed by a set of\n+     * properties provided by the Java Core's RequestUtils class.\n+     *\n      * @return the SDK-specific user agent value\n      */\n     private static synchronized String getUserAgent() {\n@@ -81,41 +95,104 @@ private static synchronized String getUserAgent() {\n     }\n \n     /**\n-     * This function is invoked by generated service methods (i.e. methods which implement the REST API operations\n-     * defined within the API definition). The purpose of this function is to give the SDK implementor the opportunity\n-     * to provide SDK-specific HTTP headers that will be sent with an outgoing REST API request.\n-     * <p>This function is invoked for <b>each</b> invocation of a generated service method,\n-     * so the set of HTTP headers could be request-specific.\n-     * As an optimization, if your SDK will be returning the same set of HTTP headers for each invocation of this\n-     * function, it is recommended that you initialize the returned map just once (perhaps by using\n-     * lazy initialization) and simply return it each time the function is invoked, instead of building it each time\n+     * This function is invoked by generated service methods (i.e. methods which\n+     * implement the REST API operations defined within the API definition). The\n+     * purpose of this function is to give the SDK implementor the opportunity to\n+     * provide SDK-specific HTTP headers that will be sent with an outgoing REST API\n+     * request.\n+     * <p>\n+     * This function is invoked for <b>each</b> invocation of a generated service\n+     * method, so the set of HTTP headers could be request-specific. As an\n+     * optimization, if your SDK will be returning the same set of HTTP headers for\n+     * each invocation of this function, it is recommended that you initialize the\n+     * returned map just once (perhaps by using lazy initialization) and simply\n+     * return it each time the function is invoked, instead of building it each time\n      * as in the example below.\n      *\n      * If you plan to gather metrics for your SDK, the User-Agent header value must\n-     * be a string similar to the following:\n-     * my-java-sdk/0.0.1 (lang=java; java.vendor=AdoptOpenJDK; java.version=1.8.0_232; os.arch=x86_64; os.name=Linux; os.version=5.1)\n-\n+     * be a string similar to the following: my-java-sdk/0.0.1 (lang=java;\n+     * java.vendor=AdoptOpenJDK; java.version=1.8.0_232; os.arch=x86_64;\n+     * os.name=Linux; os.version=5.1)\n+     *\n      * In the example above, the analytics tool will parse the user-agent header and\n-     * use the following properties:\n-     * \"my-java-sdk\" - the name of your sdk\n-     * \"0.0.1\"- the version of your sdk\n-     * \"lang=java\" - the language of the current sdk\n-     * \"java.vendor=AdoptOpenJDK; java.version=1.8.0_232; os.arch=x86_64; os.name=Linux; os.version=5.1\" - system information\n+     * use the following properties: \"my-java-sdk\" - the name of your sdk \"0.0.1\"-\n+     * the version of your sdk \"lang=java\" - the language of the current sdk\n+     * \"java.vendor=AdoptOpenJDK; java.version=1.8.0_232; os.arch=x86_64;\n+     * os.name=Linux; os.version=5.1\" - system information\n      *\n-     * Note: It is very important that the sdk name ends with the string `-sdk`,\n-     * as the analytics data collector uses this to gather usage data.\n+     * Note: It is very important that the sdk name ends with the string `-sdk`, as\n+     * the analytics data collector uses this to gather usage data.\n      *\n-     * @param serviceName\n-     *            the name of the service as defined in the API definition (e.g. \"MyService1\")\n-     * @param serviceVersion\n-     *            the version of the service as defined in the API definition (e.g. \"V1\")\n-     * @param operationId\n-     *            the operationId as defined in the API definition (e.g. getContext)\n-     * @return a Map which contains the set of headers to be included in the REST API request\n+     * @param serviceName    the name of the service as defined in the API\n+     *                       definition (e.g. \"MyService1\")\n+     * @param serviceVersion the version of the service as defined in the API\n+     *                       definition (e.g. \"V1\")\n+     * @param operationId    the operationId as defined in the API definition (e.g.\n+     *                       getContext)\n+     * @return a Map which contains the set of headers to be included in the REST\n+     *         API request\n      */\n     public static Map<String, String> getSdkHeaders(String serviceName, String serviceVersion, String operationId) {\n         Map<String, String> headers = new HashMap<>();\n         headers.put(HttpHeaders.USER_AGENT, getUserAgent());\n         return headers;\n     }\n+\n+    public static String identifyAccount(String authToken) {\n+        try {\n+            DecodedJWT decodedJwt = JWT.decode(authToken.substring(7));\n+            JsonObject accountJsonObj = new JsonParser().parse(decodedJwt.getClaim(\"account\").toString())\n+                    .getAsJsonObject();\n+            return (accountJsonObj.get(\"bss\").getAsString());\n+        } catch (NullPointerException e) {\n+            return null;\n+        }\n+    }\n+\n+    public static String identifyLocation(String accountId, String authToken) {\n+        try {\n+            String url = String.format(\"%s/accounts/%s/settings\", adminApiUrl, accountId);\n+            OkHttpClient client = new OkHttpClient();\n+            Request request = new Request.Builder().url(url).addHeader(\"Authorization\", authToken).build();\n+            Response resp = client.newCall(request).execute();\n+            return resp.body().string();\n+        } catch (IOException | NullPointerException e) {\n+            return null;\n+        }\n+    }\n+\n+    public static String identifyServiceUrl(Authenticator authenticator, String defaultServiceUrl) {\n+        try {\n+            Builder request = new Builder().url(\"https://cloud.ibm.com\");\n+            authenticator.authenticate(request);\n+            String authToken = request.build().header(\"Authorization\");\n+            String accountId = identifyAccount(authToken);\n+            String locationId = identifyLocation(accountId, authToken);\n+            if (locationId != null) {\n+                String locationIdObj = new JsonParser().parse(locationId).getAsJsonObject().get(\"location\")\n+                        .getAsJsonObject().get(\"id\").getAsString();\n+                OkHttpClient client = new OkHttpClient();\n+                Request requestURL = new Request.Builder()\n+                        .url(String.format(\"%s/locations/%s\", adminApiUrl, locationIdObj))\n+                        .addHeader(\"Authorization\", authToken).build();\n+                Response resp = client.newCall(requestURL).execute();\n+                String[] service = defaultServiceUrl.split(\"/\");\n+                String serverURL = new JsonParser().parse(resp.body().string()).getAsJsonObject()\n+                        .get(String.format(\"si_%s_endpoint_url\", service[service.length - 1])).getAsString();\n+                return serverURL;\n+            }\n+        } catch (IOException e) {\n+            return \"\";\n+        }\n+        return \"\";\n+    }\n+\n+    public static String identifyLocationServiceUrl(String defaultServiceUrl, String serviceUrl) {\n+        if (defaultServiceUrl != \"\" && defaultServiceUrl.compareTo(serviceUrl) != 0) {\n+            throw new IllegalArgumentException(\n+                    \"The service URL you specified is incorrect for the location selected for the account. The correct URL is: \"\n+                            + defaultServiceUrl);\n+        }\n+        return serviceUrl;\n+    }\n }"
  },
  {
    "sha": "81280f8c9c8c9ed2fad2e8559f7fbdaadee62363",
    "filename": "modules/common/src/test/java/com/ibm/cloud/securityadvisor/test/SdkCommonTest.java",
    "status": "modified",
    "additions": 36,
    "deletions": 1,
    "changes": 37,
    "blob_url": "https://github.com/gary1998/security-advisor-sdk-java/blob/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/common/src/test/java/com/ibm/cloud/securityadvisor/test/SdkCommonTest.java",
    "raw_url": "https://github.com/gary1998/security-advisor-sdk-java/raw/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/common/src/test/java/com/ibm/cloud/securityadvisor/test/SdkCommonTest.java",
    "contents_url": "https://api.github.com/repos/gary1998/security-advisor-sdk-java/contents/modules/common/src/test/java/com/ibm/cloud/securityadvisor/test/SdkCommonTest.java?ref=026fc3b02c354d08a28dc7631c35363cded1f4aa",
    "patch": "@@ -24,11 +24,19 @@\n \n // >>> Replace \"my_services\" with the correct value for your project (e.g. \"platform_services\")\n import com.ibm.cloud.securityadvisor.common.SdkCommon;\n+import org.powermock.core.classloader.annotations.PowerMockIgnore;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.testng.PowerMockTestCase;\n+import org.powermock.api.mockito.PowerMockito;\n+import com.ibm.cloud.sdk.core.security.Authenticator;\n+import com.ibm.cloud.sdk.core.security.IamAuthenticator;\n \n /**\n  * This class contains tests for the SdkCommon class.\n  */\n-public class SdkCommonTest {\n+@PrepareForTest({ SdkCommon.class })\n+@PowerMockIgnore({ \"javax.net.ssl.*\", \"org.mockito.*\" })\n+public class SdkCommonTest extends PowerMockTestCase {\n \n     @Test\n     public void testGetSdkHeaders() {\n@@ -41,4 +49,31 @@ public void testGetSdkHeaders() {\n         String expectedUserAgentRegex = String.format(\"%s/%s .*\", SdkCommon.getProjectName(), SdkCommon.getVersion());\n         assertTrue(userAgent.matches(expectedUserAgentRegex));\n     }\n+\n+    @Test\n+    public void testIdentifyAccount() {\n+        String authToken = \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2NvdW50Ijp7ImJzcyI6ImFiYzEyMyJ9LCJpYXQiOjE1MTYyMzkwMjJ9.Wy6XQaYGgeZpl_GUXQ9Sa31buwKbLsFwFOqP7MahIwLFdBYqkc6tge-KNAiyaOg8_6gfroxRxfKT_97qSgSOUiqZ4F3Mnejz5XFC-BtmTUyPMPp6DHDm0DAHMGLI9anxV-heGwlUiCE45eamWTtykFszc2pjs7tfYktUKVVRh7NhdjOI_09tesNp3oE7QgaMlykqrEFJMtmG4COnXgpzepKLn-96Dc7f4YWr49ga9uHQ9Ah4k-DBMcFfrq8dJId0GpepHWwdbZvv647u1853IJz_3meh7Bu5-Lq3auLLSNyGezokkCoXmhs9r85jti9p2KQU0iLoLLhlC3A1X85dDg\";\n+        String invalidAccount = SdkCommon.identifyAccount(authToken);\n+        assertTrue(invalidAccount.compareTo(\"abc123\") == 0);\n+    }\n+\n+    @Test\n+    public void testIdentifyLocation() {\n+        String accountId = \"abc123\";\n+        String authToken = \"abc123\";\n+        PowerMockito.mockStatic(SdkCommon.class);\n+        PowerMockito.when(SdkCommon.identifyLocation(accountId, authToken)).thenReturn(\"abc123\");\n+        String resp = SdkCommon.identifyLocation(accountId, authToken);\n+        assertTrue(resp.compareTo(\"abc123\") == 0);\n+    }\n+\n+    @Test\n+    public void testIdentifyServiceUrl(){\n+        String defaultServiceUrl = \"abc123\";\n+        Authenticator authenticator = new IamAuthenticator(\"abc123\");\n+        PowerMockito.mockStatic(SdkCommon.class);\n+        PowerMockito.when(SdkCommon.identifyServiceUrl(authenticator, defaultServiceUrl)).thenReturn(\"abc123\");\n+        String resp = SdkCommon.identifyServiceUrl(authenticator, defaultServiceUrl);\n+        assertTrue(resp.compareTo(\"abc123\") == 0);\n+    }\n }"
  },
  {
    "sha": "22a8d0ee38070ce8d7103a873cc359c41313a77e",
    "filename": "modules/findings_api/src/main/java/com/ibm/cloud/securityadvisor/findings_api/v1/FindingsApi.java",
    "status": "modified",
    "additions": 10,
    "deletions": 2,
    "changes": 12,
    "blob_url": "https://github.com/gary1998/security-advisor-sdk-java/blob/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/findings_api/src/main/java/com/ibm/cloud/securityadvisor/findings_api/v1/FindingsApi.java",
    "raw_url": "https://github.com/gary1998/security-advisor-sdk-java/raw/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/findings_api/src/main/java/com/ibm/cloud/securityadvisor/findings_api/v1/FindingsApi.java",
    "contents_url": "https://api.github.com/repos/gary1998/security-advisor-sdk-java/contents/modules/findings_api/src/main/java/com/ibm/cloud/securityadvisor/findings_api/v1/FindingsApi.java?ref=026fc3b02c354d08a28dc7631c35363cded1f4aa",
    "patch": "@@ -54,7 +54,7 @@\n \n   public static final String DEFAULT_SERVICE_NAME = \"findings_api\";\n \n-  public static final String DEFAULT_SERVICE_URL = \"https://findings-api.cloud.ibm.com/findings\";\n+  public static String defaultServiceUrl = \"https://us-south.secadvisor.cloud.ibm.com/findings\";\n \n  /**\n    * Class method which constructs an instance of the `FindingsApi` client.\n@@ -77,6 +77,8 @@ public static FindingsApi newInstance(String serviceName) {\n     Authenticator authenticator = ConfigBasedAuthenticatorFactory.getAuthenticator(serviceName);\n     FindingsApi service = new FindingsApi(serviceName, authenticator);\n     service.configureService(serviceName);\n+    String serviceUrl = SdkCommon.identifyServiceUrl(authenticator, defaultServiceUrl);\n+    service.setServiceUrl(serviceUrl);\n     return service;\n   }\n \n@@ -89,7 +91,13 @@ public static FindingsApi newInstance(String serviceName) {\n    */\n   public FindingsApi(String serviceName, Authenticator authenticator) {\n     super(serviceName, authenticator);\n-    setServiceUrl(DEFAULT_SERVICE_URL);\n+    defaultServiceUrl = SdkCommon.identifyServiceUrl(authenticator, defaultServiceUrl);\n+  }\n+\n+  @Override\n+  public void setServiceUrl(String serviceUrl) {\n+    String url = SdkCommon.identifyLocationServiceUrl(defaultServiceUrl, serviceUrl);\n+    super.setServiceUrl(url);\n   }\n \n   /**"
  },
  {
    "sha": "3d4d130483d5f76bf8103a201a647fcf0213dde7",
    "filename": "modules/findings_api/src/main/java/com/ibm/cloud/securityadvisor/findings_api/v1/model/ValueType.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/gary1998/security-advisor-sdk-java/blob/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/findings_api/src/main/java/com/ibm/cloud/securityadvisor/findings_api/v1/model/ValueType.java",
    "raw_url": "https://github.com/gary1998/security-advisor-sdk-java/raw/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/findings_api/src/main/java/com/ibm/cloud/securityadvisor/findings_api/v1/model/ValueType.java",
    "contents_url": "https://api.github.com/repos/gary1998/security-advisor-sdk-java/contents/modules/findings_api/src/main/java/com/ibm/cloud/securityadvisor/findings_api/v1/model/ValueType.java?ref=026fc3b02c354d08a28dc7631c35363cded1f4aa",
    "patch": "@@ -67,7 +67,7 @@ public String text() {\n    *\n    * Kind of element - KPI&amp;#58; Kind of value derived from a KPI occurrence - FINDING_COUNT&amp;#58; Kind of value\n    * derived from a count of finding occurrences.\n-   *\n+   * @param kind the kind\n    */\n   public void setKind(String kind) {\n     this.kind = kind;\n@@ -77,7 +77,7 @@ public void setKind(String kind) {\n    * Sets the text.\n    *\n    * The text of this element type.\n-   *\n+   * @param text the text\n    */\n   public void setText(String text) {\n     this.text = text;"
  },
  {
    "sha": "a8578e36cd056234c2b85ad5df78a919090366ab",
    "filename": "modules/findings_api/src/test/java/com/ibm/cloud/securityadvisor/findings_api/v1/FindingsApiIntegrationTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 28,
    "changes": 28,
    "blob_url": "https://github.com/gary1998/security-advisor-sdk-java/blob/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/findings_api/src/test/java/com/ibm/cloud/securityadvisor/findings_api/v1/FindingsApiIntegrationTest.java",
    "raw_url": "https://github.com/gary1998/security-advisor-sdk-java/raw/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/findings_api/src/test/java/com/ibm/cloud/securityadvisor/findings_api/v1/FindingsApiIntegrationTest.java",
    "contents_url": "https://api.github.com/repos/gary1998/security-advisor-sdk-java/contents/modules/findings_api/src/test/java/com/ibm/cloud/securityadvisor/findings_api/v1/FindingsApiIntegrationTest.java?ref=026fc3b02c354d08a28dc7631c35363cded1f4aa",
    "patch": "@@ -3,34 +3,6 @@\n import com.ibm.cloud.sdk.core.security.Authenticator;\n import com.ibm.cloud.sdk.core.security.IamAuthenticator;\n import com.ibm.cloud.securityadvisor.findings_api.v1.model.*;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.ApiListOccurrencesResponse;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.ApiListProvidersResponse;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.ApiNote;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.ApiOccurrence;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.Card;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.CardElementsItem;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.Context;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.CreateNoteOptions;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.CreateOccurrenceOptions;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.DataTransferred;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.DeleteNoteOptions;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.DeleteOccurrenceOptions;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.Finding;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.FindingCountValueType;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.GetNoteOptions;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.GetOccurrenceNoteOptions;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.GetOccurrenceOptions;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.Kpi;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.ListNotesOptions;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.ListOccurrencesOptions;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.ListProvidersOptions;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.NetworkConnection;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.CardElementsItemNumericCardElement;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.PostGraphOptions;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.RemediationStep;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.Reporter;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.SocketAddress;\n-import com.ibm.cloud.securityadvisor.findings_api.v1.model.UpdateOccurrenceOptions;\n import com.ibm.cloud.sdk.core.service.exception.NotFoundException;\n import com.ibm.cloud.sdk.core.service.exception.ServiceResponseException;\n "
  },
  {
    "sha": "7a13ffa7523822bf47741fc4fdcca239cdb7a346",
    "filename": "modules/notifications_api/src/main/java/com/ibm/cloud/securityadvisor/notifications_api/v1/NotificationsApi.java",
    "status": "modified",
    "additions": 10,
    "deletions": 2,
    "changes": 12,
    "blob_url": "https://github.com/gary1998/security-advisor-sdk-java/blob/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/notifications_api/src/main/java/com/ibm/cloud/securityadvisor/notifications_api/v1/NotificationsApi.java",
    "raw_url": "https://github.com/gary1998/security-advisor-sdk-java/raw/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/notifications_api/src/main/java/com/ibm/cloud/securityadvisor/notifications_api/v1/NotificationsApi.java",
    "contents_url": "https://api.github.com/repos/gary1998/security-advisor-sdk-java/contents/modules/notifications_api/src/main/java/com/ibm/cloud/securityadvisor/notifications_api/v1/NotificationsApi.java?ref=026fc3b02c354d08a28dc7631c35363cded1f4aa",
    "patch": "@@ -49,7 +49,7 @@\n \n   public static final String DEFAULT_SERVICE_NAME = \"notifications_api\";\n \n-  public static final String DEFAULT_SERVICE_URL = \"https://notifications-api.cloud.ibm.com/notifications\";\n+  public static String defaultServiceUrl = \"https://us-south.secadvisor.cloud.ibm.com/notifications\";\n \n  /**\n    * Class method which constructs an instance of the `NotificationsApi` client.\n@@ -72,6 +72,8 @@ public static NotificationsApi newInstance(String serviceName) {\n     Authenticator authenticator = ConfigBasedAuthenticatorFactory.getAuthenticator(serviceName);\n     NotificationsApi service = new NotificationsApi(serviceName, authenticator);\n     service.configureService(serviceName);\n+    String serviceUrl = SdkCommon.identifyServiceUrl(authenticator, defaultServiceUrl);\n+    service.setServiceUrl(serviceUrl);\n     return service;\n   }\n \n@@ -84,7 +86,13 @@ public static NotificationsApi newInstance(String serviceName) {\n    */\n   public NotificationsApi(String serviceName, Authenticator authenticator) {\n     super(serviceName, authenticator);\n-    setServiceUrl(DEFAULT_SERVICE_URL);\n+    defaultServiceUrl = SdkCommon.identifyServiceUrl(authenticator, defaultServiceUrl);\n+  }\n+\n+  @Override\n+  public void setServiceUrl(String serviceUrl) {\n+    String url = SdkCommon.identifyLocationServiceUrl(defaultServiceUrl, serviceUrl);\n+    super.setServiceUrl(url);\n   }\n \n   /**"
  },
  {
    "sha": "4a4fc71e5075db636b96166f571ab657dff7d83d",
    "filename": "modules/notifications_api/src/test/java/com/ibm/cloud/securityadvisor/notifications_api/v1/NotificationsApiIntegrationTest.java",
    "status": "modified",
    "additions": 17,
    "deletions": 29,
    "changes": 46,
    "blob_url": "https://github.com/gary1998/security-advisor-sdk-java/blob/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/notifications_api/src/test/java/com/ibm/cloud/securityadvisor/notifications_api/v1/NotificationsApiIntegrationTest.java",
    "raw_url": "https://github.com/gary1998/security-advisor-sdk-java/raw/026fc3b02c354d08a28dc7631c35363cded1f4aa/modules/notifications_api/src/test/java/com/ibm/cloud/securityadvisor/notifications_api/v1/NotificationsApiIntegrationTest.java",
    "contents_url": "https://api.github.com/repos/gary1998/security-advisor-sdk-java/contents/modules/notifications_api/src/test/java/com/ibm/cloud/securityadvisor/notifications_api/v1/NotificationsApiIntegrationTest.java?ref=026fc3b02c354d08a28dc7631c35363cded1f4aa",
    "patch": "@@ -52,7 +52,7 @@ public void testListChannels() throws Throwable {\n         assertEquals(resp.getStatusCode(), 200);\n     }\n \n-    @Test\n+    @Test(expectedExceptions = NotFoundException.class)\n     public void testCreateNotificationChannel() throws Throwable {\n         try {\n             notificationsApi.setServiceUrl(ApiUrl);\n@@ -72,7 +72,7 @@ public void testCreateNotificationChannel() throws Throwable {\n                     .createNotificationChannel(createNotificationChannelOptionsModel).execute();\n             assertNotNull(resp);\n             assertEquals(resp.getStatusCode(), 200);\n-        } catch (NotFoundException e) {\n+        } catch (InternalServerErrorException e) {\n         } finally {\n         }\n     }\n@@ -96,36 +96,24 @@ public void testDeleteChannels() throws Throwable {\n         }\n     }\n \n-    @Test\n+    @Test(expectedExceptions = NotFoundException.class)\n     public void testDeleteChannel() throws Throwable {\n-        try {\n-            notificationsApi.setServiceUrl(ApiUrl);\n-\n-            DeleteNotificationChannelOptions opts = new DeleteNotificationChannelOptions.Builder().accountId(AccountId)\n-                    .channelId(\"koi-bhi-channel\").build();\n-\n-            Response<DeleteChannelResponse> resp = notificationsApi.deleteNotificationChannel(opts).execute();\n-            assertNotNull(resp);\n-            assertEquals(resp.getStatusCode(), 200);\n-        } catch (InternalServerErrorException e) {\n-        } finally {\n-        }\n+        notificationsApi.setServiceUrl(ApiUrl);\n+        DeleteNotificationChannelOptions opts = new DeleteNotificationChannelOptions.Builder().accountId(AccountId)\n+                .channelId(\"koi-bhi-channel\").build();\n+        Response<DeleteChannelResponse> resp = notificationsApi.deleteNotificationChannel(opts).execute();\n+        assertNotNull(resp);\n+        assertEquals(resp.getStatusCode(), 200);\n     }\n \n-    @Test\n+    @Test(expectedExceptions = NotFoundException.class)\n     public void testGetChannel() throws Throwable {\n-        try {\n-            notificationsApi.setServiceUrl(ApiUrl);\n-\n-            GetNotificationChannelOptions opts = new GetNotificationChannelOptions.Builder().accountId(AccountId)\n-                    .channelId(\"koi-bhi-channel\").build();\n-\n-            Response<GetChannelResponse> resp = notificationsApi.getNotificationChannel(opts).execute();\n-            assertNotNull(resp);\n-            assertEquals(resp.getStatusCode(), 200);\n-        } catch (InternalServerErrorException e) {\n-        } finally {\n-        }\n+        notificationsApi.setServiceUrl(ApiUrl);\n+        GetNotificationChannelOptions opts = new GetNotificationChannelOptions.Builder().accountId(AccountId)\n+                .channelId(\"koi-bhi-channel\").build();\n+        Response<GetChannelResponse> resp = notificationsApi.getNotificationChannel(opts).execute();\n+        assertNotNull(resp);\n+        assertEquals(resp.getStatusCode(), 200);\n     }\n \n     @Test\n@@ -152,7 +140,7 @@ public void testUpdateChannel() throws Throwable {\n         }\n     }\n \n-    @Test\n+    @Test(expectedExceptions = NotFoundException.class)\n     public void testTestChannel() throws Throwable {\n         try {\n             notificationsApi.setServiceUrl(ApiUrl);"
  }
]
