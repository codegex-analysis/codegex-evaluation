[
  {
    "sha": "c90834f2d607afe55e6104d8aa2cdfffb713f688",
    "filename": "Java1.iml",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/Java1.iml",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/Java1.iml",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/Java1.iml?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output />\n+    <content url=\"file://$MODULE_DIR$\">\n+      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\n+    </content>\n+    <orderEntry type=\"inheritedJdk\" />\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+  </component>\n+</module>\n\\ No newline at end of file"
  },
  {
    "sha": "2253b5ff0bafc2fefdab559ebed29f2f52bbf38f",
    "filename": "Test",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/Test",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/Test",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/Test?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b"
  },
  {
    "sha": "dad3beebd44f43a6202da2586740ad11f4458810",
    "filename": "src/java_1/collections/CollectionsChallenges.java",
    "status": "modified",
    "additions": 97,
    "deletions": 14,
    "changes": 111,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_1/collections/CollectionsChallenges.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_1/collections/CollectionsChallenges.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_1/collections/CollectionsChallenges.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,50 +1,118 @@\n package java_1.collections;\n \n+import java_1.dataTypes.JavaChallenges;\n+\n import java.util.*;\n \n public class CollectionsChallenges {\n \n \tpublic static void main(String[] args) {\n //\t\tComplete the code challenges for the following static methods\n \n+\t\tvar myArrays = new CollectionsChallenges();\n+\t\tmyArrays.findVal(3);\n+\t\tmyArrays.convertArrToList();\n+\t\tmyArrays.listToSet();\n+\t\tmyArrays.addToList(9);\n+\t\tmyArrays.removeFromList(3);\n+\t\tmyArrays.insertIntoList(2, 3);\n+\t\tmyArrays.reverseNums();\n+\t\t// mutate linked list\n+\t\tmyArrays.removeDuplicates();\n \t}\n \n \n-\tstatic int findVal(int val, ArrayList<Integer> arrList) {\n+\tstatic int findVal(int val) {\n //\t\tfind a value in the input array list.  return it if found.  If not, return 0.\n-\t\treturn 0;\n+\t\tArrayList<Integer> arrList = new ArrayList<Integer>();\n+\t\tarrList.add(5);\n+\t\tarrList.add(8);\n+\t\tarrList.add(2);\n+\t\tarrList.add(6);\n+\t\tarrList.add(3);\n+\n+\t\tif (arrList.contains(val)){\n+\t\t\treturn val;\n+\t\t}\n+\t\telse {\n+\t\t\treturn 0;\n+\t\t}\n \t}\n \n-\tstatic List convertArrToList(Object[] array) {\n+\tstatic List convertArrToList() {\n //\t\tconvert the array to a list and return it.\n-\t\treturn null;\n+\t\tObject[] array = {1, 2, 3, 4, 5};\n+\n+\t\tvar list = Arrays.asList(array);\n+\n+\t\treturn list;\n \t}\n \n-\tstatic Set<String> listToSet(List<String> states) {\n+\tstatic Set<String> listToSet() {\n //\t\tconvert a list of US states to a set.  return the set.\n-\t\treturn null;\n+\t\tList<String> states = new ArrayList<String>();\n+\n+\t\tstates.add(\"Texas\");\n+\t\tstates.add(\"Washington\");\n+\n+\t\tSet<String> newSet = new HashSet<String>(states);\n+\n+\t\treturn newSet;\n \t}\n \n-\tstatic int addToList(int x, ArrayList<Integer> numList) {\n-\t\t// add the x input to the array list.  return the value if succcessfully added.\n+\tstatic int addToList(int x) {\n+\t\t// add the x input to the array list.  return the value if successfully added.\n+\t\tArrayList<Integer> numList = new ArrayList<Integer>();\n+\n+\t\tnumList.add(x);\n+\n \t\treturn x;\n \t}\n \n-\tstatic void removeFromList(int x, ArrayList<Integer> numList) {\n+\tstatic void removeFromList(int x) {\n \t\t// remove the input parameter value x from the numList.\n+\t\tArrayList<Integer> numList = new ArrayList<Integer>();\n+\t\tnumList.add(x);\n+\n+\t\tnumList.remove(0);\n \t}\n \n-\tstatic int insertIntoList(int x, int i, ArrayList<Integer> numList) {\n+\tstatic int insertIntoList(int x, int i) {\n \t\t// insert the the value x at index position i for the input numList.  If the index position is outside the bounds of the current numList, add it to the end of the array list.\n+\t\tArrayList<Integer> numList = new ArrayList<Integer>();\n+\t\tnumList.add(10);\n+\t\tnumList.add(9);\n+\t\tnumList.add(8);\n+\t\tnumList.add(7);\n+\t\tnumList.add(6);\n+\t\tnumList.add(5);\n+\n+\t\tnumList.add(x,i);\n+\n \t\treturn x;\n \t}\n \n-\tstatic List<Integer> reverseNums(ArrayList<Integer> nums) {\n+\tstatic List<Integer> reverseNums() {\n \t\t/*\n \t\treverse the values of the nums list\n \t\treturn the reversed array list.\n \t\t*/\n-\t\treturn null;\n+\t\tArrayList<Integer> nums = new ArrayList<Integer>();\n+\t\tArrayList<Integer> newNums = new ArrayList<Integer>();\n+\n+\t\tnums.add(1);\n+\t\tnums.add(2);\n+\t\tnums.add(3);\n+\t\tnums.add(4);\n+\t\tnums.add(5);\n+\n+\t\tfor (int i = nums.size() - 1; i >= 0; i--) {\n+\t\t\tnewNums.add(nums.get(i));\n+\t\t}\n+\n+\t\treturn newNums;\n+\n+//\t\treturn null;\n \t}\n \n \tstatic LinkedList<String> reverseLinkedList(LinkedList<String> linkedList, boolean mutate) {\n@@ -55,9 +123,24 @@ static int insertIntoList(int x, int i, ArrayList<Integer> numList) {\n \t\treturn linkedList;\n \t}\n \n-\tstatic ArrayList<String> removeDuplicates(ArrayList<String> names) {\n+\tstatic ArrayList<String> removeDuplicates() {\n //\t\tremove duplicates from the list of name strings.  return a new array list with the unique elements.\n-\t\treturn names;\n+\t\tArrayList<String> names = new ArrayList<String>();\n+\t\tnames.add(\"Chad\");\n+\t\tnames.add(\"Hannah\");\n+\t\tnames.add(\"Chad\");\n+\n+\t\tArrayList<String> newNames = new ArrayList<String>();\n+\n+\t\tfor (String element : names) {\n+\t\t\tif (!newNames.contains(element)) {\n+\t\t\t\tnewNames.add(element);\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn newNames;\n+\n+//\t\treturn names;\n \t}\n \n \tstatic class Person {"
  },
  {
    "sha": "3668a6937f10659ddcf0217bf857c5f899a7e419",
    "filename": "src/java_1/dataTypes/Arrays.java",
    "status": "modified",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_1/dataTypes/Arrays.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_1/dataTypes/Arrays.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_1/dataTypes/Arrays.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,13 +1,26 @@\n package java_1.dataTypes;\n \n+import java.util.Random;\n+\n class Arrays {\n+    public static void main(String[] args){\n+        var myArrays = new Arrays();\n+        myArrays.printNums();\n+        myArrays.greet(\"Chad\");\n+        myArrays.bitsToBinaries();\n+        myArrays.keepColors();\n+    }\n+\n     int[] nums = new int[]{10,23,3,4,5,2,1};\n     String[] greetings = new String[]{\"Hello\",\"Howdy\",\"Hallo\",\"Hola\",\"Bonjour\",\"Ciao\",\"أهلا و سهلا\"};\n     int[] bits = new int[]{0,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,1,0};\n     String[] colors = new String[]{\"bluebird\",\"yellow bumblebee\",\"black spider\", \"green monkey\",\"pink\",\"great gatsby\",\"feeding frenzy\",\"black bird\",\"Matterhorn\",\"Great White Lakes\",\"torah\",\"white bible\",\"green quran\", \"red herring\", \"Black Sea\"};\n \n     void printNums() {\n //        Programmatically print the nums array to the console.  Print each number on a new line.  The nums array is defined on this class.\n+        for (int element: nums) {\n+            System.out.println(element);\n+        }\n     };\n \n     void greet(String name) {\n@@ -17,17 +30,34 @@ void greet(String name) {\n                \"ABRAM\" => greet() => \"Hola Abram\"\n                \"maTT => greet() => \"أهلا و سهلا Matt\"\n  */\n+        Random random = new Random();\n+        int index = random.nextInt(greetings.length);\n+        System.out.println(greetings[index]+\" \"+name);\n     };\n \n     boolean[] bitsToBinaries() {\n //        Programmatically convert the bit array of 1's and 0's into a binary array of true and false. return the 'converted' array.\n //        ex : bitsToBinaries() => [false,true,true,true,false,false,false,true,true,true,true,true,false,true,false,false,true,false]\n+        for (int element: bits) {\n+            if (element == 1) {\n+                System.out.println(\"true\");\n+            }\n+            else if (element == 0){\n+                System.out.println(\"false\");\n+            }\n+        }\n             return null;\n     };\n \n     String[] keepColors() {\n //        In this class is an array called \"colors\".  Programmatically remove the elements that do NOT have a color associated with it.  Return the filtered color array of elements that have a color associated with it.\n //        ex : keepColors() => [\"bluebird\",\"yellow bumblebee\",\"black spider\", \"green monkey\",\"pink\",\"black bird\",\"Great White Lakes\",\"white bible\",\"green quran\", \"red herring\", \"Black Sea\"]\n+\n+        String[] newColors = java.util.Arrays.stream(colors).filter((s -> s.toLowerCase().contains(\"blue\") || s.toLowerCase().contains(\"green\") || s.toLowerCase().contains(\"pink\") || s.toLowerCase().contains(\"red\") || s.toLowerCase().contains(\"yellow\") || s.toLowerCase().contains(\"black\") || s.toLowerCase().contains(\"white\"))).toArray(String[]::new);\n+        for (String i: newColors){\n+            System.out.println(i);\n+        }\n+\n         return null;\n     }\n "
  },
  {
    "sha": "d208cdb76f294dd0cfc166457f4f9f28859de109",
    "filename": "src/java_1/dataTypes/DataTypes.java",
    "status": "modified",
    "additions": 76,
    "deletions": 10,
    "changes": 86,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_1/dataTypes/DataTypes.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_1/dataTypes/DataTypes.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_1/dataTypes/DataTypes.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,49 +1,115 @@\n package java_1.dataTypes;\n \n+import java.util.Scanner;\n+\n class DataTypes {\n \n //\t\tboolean number = 2021;\n+\tboolean number = true;\n //\t\tbyte yearOfBirth = 1977;\n+\tint yearOfBirth = 1997;\n //\t\tArray nums = [3,4,5,6,7,8,10,12];\n-//\t\tObject movieName = \"Meet The Parents\";\n+\tint nums[] = {3,4,5,6,7,8,10,12};\n+//\t\tObject movieName = \"Meet The Parents\";.\n+\tString movieName = \"Meet The Parents\";\n //\t\tdouble male = 'm';\n+\tchar male = 'm';\n //\t\ttriple triplet = 3L;\n+\tlong triplet = 3L;\n //\t\tfloat female = 'f';\n+\tchar female = 'f';\n //\t\tshort decimalVal = .0000000000001f;\n+\tdouble decimalVal = .0000000000001f;\n //\t\tlong halfByte = 0101;\n+\tbyte halfByte = 0101;\n \n \n \tpublic static void main(String[] args) {\n \t\t//the class fields defined in this DataTypes class have mistakes with either the data type, or the syntax.  Fix the data types so the main method correctly displays the value of all of the variables\n \t\t//For the methods below in this DataTypes class, determine the appropriate datatypes for the inputs and the outputs\n+\n+\t\tvar myArrays = new DataTypes();\n+\t\tmyArrays.yearsToMonths();\n+\t\tmyArrays.monthsToHours();\n+\t\tmyArrays.daysToSeconds();\n+\t\tmyArrays.centuriesToSeconds();\n+\t\tmyArrays.dollarsToBitcoin();\n+\t\tmyArrays.canDrive();\n \t}\n \n-\tvoid yearsToMonths(Object years) {\n+\tvoid yearsToMonths() {\n \t\t//\tconvert years to months using appropriate data types for the inputs and the outputs, 2 years => 24 months\n+\t\tSystem.out.println(\"Enter years: \");\n+\t\tScanner scanner = new Scanner(System.in);\n+\t\tint years = scanner.nextInt();\n+\t\tint months = years*12;\n+\t\tSystem.out.println(\"Months = \"+months);\n \t}\n \n-\tvoid monthsToHours(Object months) {\n-\t\t//\tconvert months to hours using appropriate data types for the inputs and the outputs, 8 months => 17520 hours\n+\tvoid monthsToHours() {\n+\t\t//\tconvert months to hours using appropriate data types for the inputs and the outputs, 8 months => 17520 hours <- This is literally impossible, correct answer is 5840 hours\n+\t\tSystem.out.println(\"Enter months: \");\n+\t\tScanner scanner = new Scanner(System.in);\n+\t\tint months = scanner.nextInt();\n+\t\tint hours = months*730;\n+\t\tSystem.out.println(\"Hours = \"+hours);\n \t}\n \n-\tvoid daysToSeconds(Object days) {\n-\t\t//\tconvert days to seconds using appropriate data types for the inputs and the outputs, 2 years => 17520 hours\n+\tvoid daysToSeconds() {\n+\t\t//\tconvert days to seconds using appropriate data types for the inputs and the outputs, 2 years => 17520 hours Typo\n+\t\tSystem.out.println(\"Enter days: \");\n+\t\tScanner scanner = new Scanner(System.in);\n+\t\tlong days = scanner.nextInt();\n+\t\tlong seconds = days*86400;\n+\t\tSystem.out.println(\"Seconds = \"+seconds);\n \t}\n \n-\tvoid centuriesToSeconds(Object centuries) {\n+\tvoid centuriesToSeconds() {\n \t\t//\tconvert centuries to seconds using appropriate data types for the inputs and the outputs, 1 century => 3.1556952 x 10^9 Seconds\n+\t\tSystem.out.println(\"Enter centuries: \");\n+\t\tScanner scanner = new Scanner(System.in);\n+\t\tdouble centuries = scanner.nextInt();\n+\t\tdouble seconds = centuries*(3.1556952 * (Math.pow(10, 9)));\n+\t\tSystem.out.println(\"Seconds = \"+seconds);\n \t}\n \n-\tvoid dollarsToBitcoin(Object dollars) {\n-\t\t//\tconvert (usd) dollars $ to bitcoin using appropriate data types for the inputs and the outputs, $35,000 dollars  3.1556952 x 10^9 Seconds\n+\tvoid dollarsToBitcoin() {\n+\t\t//\tconvert (usd) dollars $ to bitcoin using appropriate data types for the inputs and the outputs, $35,000 dollars\n+\t\tSystem.out.println(\"Enter dollars: \");\n+\t\tScanner scanner = new Scanner(System.in);\n+\t\tdouble dollars = scanner.nextInt();\n+\t\tdouble bitcoin = dollars/35000;\n+\t\tSystem.out.println(\"Bitcoin = \"+bitcoin);\n \t}\n \n-\tvoid canDrive(Object age) {\n+\tvoid canDrive() {\n \t\t//determine if the age passed in is ready to drive, return a value indicating whether or not the age passed in is ready to drive.\n+\t\tSystem.out.println(\"Enter age: \");\n+\t\tScanner scanner = new Scanner(System.in);\n+\t\tint age = scanner.nextInt();\n+\t\tif (age > 18) {\n+\t\t\tSystem.out.println(\"Able to drive.\");\n+\t\t}\n+\t\telse if (age > 15) {\n+\t\t\tSystem.out.println(\"Needs a permit to drive.\");\n+\t\t}\n+\t\telse {\n+\t\t\tSystem.out.println(\"Too young to drive.\");\n+\t\t}\n \t}\n \n \tString[] getDataTypes(int num1, boolean bool1, long long1) {\n //\t\tUse Java to get the data type of the three input variables; and return a string representation of the data types of the three variables as an array.  Do NOT hard code the answers here.  Make sure to use Java to programmatically get the data types.\n+\t\tSystem.out.println(\"Enter num1: \");\n+\t\tScanner scanner1 = new Scanner(System.in);\n+\t\tnum1 = scanner1.nextInt();\n+\t\tSystem.out.println(\"Enter boolean: \");\n+\t\tScanner scanner2 = new Scanner(System.in);\n+//\t\tbool1 = scanner2.nextInt();\n+\t\tSystem.out.println(\"Enter long1: \");\n+\t\tScanner scanner3 = new Scanner(System.in);\n+\t\tlong1 = scanner3.nextInt();\n+\n \t\treturn new String[]{null,null,null};\n \t}\n "
  },
  {
    "sha": "f7ca0cdddeab684414dfc2fe9e5c709dddcd8d57",
    "filename": "src/java_1/dataTypes/JavaChallenges.java",
    "status": "modified",
    "additions": 87,
    "deletions": 4,
    "changes": 91,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_1/dataTypes/JavaChallenges.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_1/dataTypes/JavaChallenges.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_1/dataTypes/JavaChallenges.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,9 +1,24 @@\n package java_1.dataTypes;\n \n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Arrays;\n+\n public class JavaChallenges {\n \n \tpublic static void main(String[] args) {\n \t\t//solve the code challenges found in the static methods on this class\n+\n+\t\tvar myArrays = new JavaChallenges();\n+\t\tmyArrays.printMsg(\"hello world\", 3);\n+\t\tSystem.out.println(nthFibonacci(7));\n+\t\tmyArrays.calcPay(80, 50, 8);\n+\t\tmyArrays.solveQuadratic(4, 2, 11);\n+\t\tmyArrays.countQuarters(10.5);\n+\t\tmyArrays.reverseString(\"hello world\");\n+\t\tSystem.out.println(shuffleMessage(\"Hi Dear Friend\"));\n+\t\tmyArrays.calcGPA();\n+\t\tmyArrays.printEgg();\n \t}\n \n \tstatic void printMsg(String msg, int repeats) {\n@@ -13,13 +28,23 @@ static void printMsg(String msg, int repeats) {\n \t\thello world\n \t\thello world\n \t\t */\n+\n+\t\tfor (int i = 0; i < repeats; i++) {\n+\t\t\tSystem.out.println(msg);\n+\t\t}\n+\n \t}\n \n \tstatic int nthFibonacci(int n) {\n \t\t/*calculate the nth fibonacci number and return the value.  The first 4 fibonacci numbers are : 1, 1, 2, 3...  learn more : http://bit.ly/fibonacci-agile\n \t\texample : nthFibonacci(7) => 13\n \t\t */\n-\t\treturn 1;\n+\n+\t\tif (n <= 1)\n+\t\t\treturn n;\n+\t\treturn nthFibonacci(n-1) + nthFibonacci(n-2);\n+\n+//\t\treturn 1;\n \t}\n \n \tstatic double calcPay(int hrsPerPeriod, double hourlyRate, int payPeriods) {\n@@ -28,35 +53,60 @@ static double calcPay(int hrsPerPeriod, double hourlyRate, int payPeriods) {\n \t\t80 hours / period , $50.00 / hr, 8 periods => calcPay(80,25.00,8) => 16000.00\n \t\t1 hr / period, $250.00 / hr, 2 periods => calcPay(1,250.00,2) => 500.00\n  */\n+\t\tdouble totalPay = hrsPerPeriod * hourlyRate * payPeriods;\n+\t\tSystem.out.println(totalPay);\n+\n \t\treturn 0.0d;\n \t}\n \n \tstatic long solveQuadratic(int x, int y, int z) {\n \t\t/* compute a quadratic equation using the input parameters.  Recall that a quadratic equation has the format :  x^2 + y + z */\n+\n+\t\tdouble equation = Math.pow(x, 2) + y + z;\n+\t\tSystem.out.println(equation);\n+\n \t\treturn x;\n \t}\n \n \tstatic int countQuarters(double amount) {\n //\t\tcalculate the number of quarters that can be changed for the given amount.\n //\t\t$10.50 => countQuarters(10.50) => 42\n+\n+\t\tdouble change = amount / .25;\n+\t\tSystem.out.println(change);\n+\n \t\treturn 0;\n \t}\n \n \tstatic String reverseString(String str) {\n \t\t//reverse the input string and return it.\n+\n+\t\tStringBuilder input = new StringBuilder();\n+\t\tinput.append(str);\n+\t\tinput.reverse();\n+\t\tSystem.out.println(input);\n+\n \t\treturn str;\n \t}\n \n-\tstatic String shuffleMessage(String[] messages) {\n+\tstatic String shuffleMessage(String messages) {\n //\t\tCreate a String message by randomly combining the elements of the strings in the messages array.  The output should be randomized.\n /*\t\t[\"hi\", \"dear\", \"friend\"] => shuffleMessage() => \"hi dear friend\";\n \t\t[\"hi\", \"dear\", \"friend\"] => shuffleMessage() => \"dear hi friend\";\n \t\t[\"hi\", \"dear\", \"friend\"] => shuffleMessage() => \"friend dear hi\";\n */\n-\t\treturn null;\n+\t\tList<String> letters = Arrays.asList(messages.split(\" \"));\n+\t\tCollections.shuffle(letters);\n+\t\tStringBuilder builder = new StringBuilder();\n+\t\tfor (String letter : letters) {\n+\t\t\tbuilder.append(letter);\n+\t\t}\n+\t\treturn builder.toString();\n+\n+//\t\treturn null;\n \t}\n \n-\tstatic double calcGPA(int[] scores) {\n+\tstatic double calcGPA() {\n \t\t\t/*calcGpa accepts an array of scores, representing a student's scores for a list of classes, and returns that student's\n \t\t\toverall GPA. The GPA ranges between 0.0 and 4.0 . Ignore any scores are outside the range of 0 to 100.\n \t\t\tGrading Scale :\n@@ -66,6 +116,32 @@ static double calcGPA(int[] scores) {\n \t\t\t80 - 89 - 3.0\n \t\t\t90 - 100 - 4.0\n \t\t */\n+\n+\t\tdouble total = 0;\n+\n+\t\tint[] scores = {66, 50, 90, 70, 85, 100, 91};\n+\n+\t\tfor(int i=0; i<scores.length; i++){\n+\t\t\ttotal = total + scores[i];\n+\t\t}\n+\t\tdouble average = total / scores.length;\n+\n+\t\tif (average >= 90 || average < 100){\n+\t\t\tSystem.out.println(\"GPA = 4.0\");\n+\t\t}\n+\t\telse if (average >= 80 || average < 90){\n+\t\t\tSystem.out.println(\"GPA = 3.0\");\n+\t\t}\n+\t\telse if (average >= 70 || average < 80){\n+\t\t\tSystem.out.println(\"GPA = 2.0\");\n+\t\t}\n+\t\telse if (average >= 60 || average < 70){\n+\t\t\tSystem.out.println(\"GPA = 1.0\");\n+\t\t}\n+\t\telse if (average >= 0 || average < 60){\n+\t\t\tSystem.out.println(\"GPA = 0.0\");\n+\t\t}\n+\n \t\treturn 4.0;\n \t}\n \n@@ -79,6 +155,13 @@ static void printEgg() {\n \t\t\t \\_______/\n \n \t\t*/\n+\n+\t\tSystem.out.println(\"\\t\\t  _______\\n\" +\n+\t\t\t\t\"\\t\\t /       \\\\\\n\" +\n+\t\t\t\t\"\\t\\t/         \\\\\\n\" +\n+\t\t\t\t\"\\t\\t-\\\"-'-\\\"-'-\\\"-\\n\" +\n+\t\t\t\t\"\\t\\t\\\\         /\\n\" +\n+\t\t\t\t\"\\t\\t \\\\_______/\");\n \t}\n \n \tstatic class Item {"
  },
  {
    "sha": "905162a1f8a54e6e304f3b0675c54e3394446bb6",
    "filename": "src/java_2/oop/bank/Account.java",
    "status": "modified",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/bank/Account.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/bank/Account.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/bank/Account.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,5 +1,7 @@\n package java_2.oop.bank;\n \n+import java.util.List;\n+\n public class Account {\n \n \t/*\n@@ -18,6 +20,91 @@\n \n \t */\n \n+    String bankName;\n+    int accountNum;\n+    Customer accountHolder;\n+    int balance;\n+    String type;\n+    List<String> transactions;\n+\n+    public Account(String bankName, int accountNum, Customer accountHolder, int balance, String type, List<String> transactions) {\n+        this.bankName = bankName;\n+        this.accountNum = accountNum;\n+        this.accountHolder = accountHolder;\n+        this.balance = balance;\n+        this.type = type;\n+        this.transactions = transactions;\n+    }\n+\n+    public void withdraw(double money){\n+        accountHolder.setWallet(+money);\n+        balance -= money;\n+        transactions.add(\"withdrew \"+money+\" successfully\");\n+    }\n+\n+    public void deposit(double money){\n+        accountHolder.setWallet(-money);\n+        balance += money;\n+        transactions.add(\"deposited \"+money+\" successfully\");\n+    }\n+\n+    public String getBankName() {\n+        return bankName;\n+    }\n+\n+    public void setBankName(String bankName) {\n+        this.bankName = bankName;\n+    }\n+\n+    public int getAccountNum() {\n+        return accountNum;\n+    }\n+\n+    public void setAccountNum(int accountNum) {\n+        this.accountNum = accountNum;\n+    }\n+\n+    public Customer getAccountHolder() {\n+        return accountHolder;\n+    }\n+\n+    public void setAccountHolder(Customer accountHolder) {\n+        this.accountHolder = accountHolder;\n+    }\n+\n+    public int getBalance() {\n+        return balance;\n+    }\n+\n+    public void setBalance(int balance) {\n+        this.balance = balance;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(String type) {\n+        this.type = type;\n+    }\n+\n+    public List<String> getTransactions() {\n+        return transactions;\n+    }\n \n+    public void setTransactions(List<String> transactions) {\n+        this.transactions = transactions;\n+    }\n \n+    @Override\n+    public String toString() {\n+        return \"Account{\" +\n+                \"bankName='\" + bankName + '\\'' +\n+                \", accountNum=\" + accountNum +\n+                \", accountHolder=\" + accountHolder +\n+                \", balance=\" + balance +\n+                \", type='\" + type + '\\'' +\n+                \", transactions=\" + transactions +\n+                '}';\n+    }\n }"
  },
  {
    "sha": "25aad83c54e04a410ed835b80712a73caa59a0c5",
    "filename": "src/java_2/oop/bank/Bank.java",
    "status": "modified",
    "additions": 56,
    "deletions": 1,
    "changes": 57,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/bank/Bank.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/bank/Bank.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/bank/Bank.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,5 +1,7 @@\n package java_2.oop.bank;\n \n+import java.util.List;\n+\n public class Bank {\n \n \t/*\n@@ -12,4 +14,57 @@\n \t \t\tgetAccountByCustomer(Customer);\n \t \t\tgetAccountByNumber(acctNum);\n \t */\n-}\n\\ No newline at end of file\n+\n+    String bankName = \"All Star\";\n+    List<Account> accounts;\n+\n+    public Bank(List<Account> accounts) {\n+        this.accounts = accounts;\n+    }\n+\n+    public Account openAccount(int accountNum, Customer accountHolder, int balance, String type, List<String> transactions){\n+        Account newAccount = new Account(this.bankName, accountNum, accountHolder, balance, type, transactions);\n+\n+        accounts.add(newAccount);\n+\n+        return newAccount;\n+    }\n+\n+    public void closeAccount(Account account){\n+        accounts.remove(account);\n+        System.out.println(\"Account removed.\");\n+    }\n+\n+    public void showAllAccounts(){\n+        for (Account account : accounts){\n+            System.out.println(\"Account Number \"+account.getAccountNum()+\" Customer \"+account.getAccountHolder().getFirstName());\n+        }\n+    }\n+\n+    public Account customerByNumber(int number){\n+        for (Account account : accounts){\n+            if (account.getAccountNum() == number){\n+                System.out.println(account);\n+                return account;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public void getAccountByCustomer(Account Customer){\n+        if(accounts.contains(Customer)){\n+            System.out.println(Customer.accountHolder.firstName + \" \" + Customer.accountHolder.lastName);\n+        }\n+        else{\n+            System.out.println(\"Customer does not have an account with this bank\");\n+        }\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Bank{\" +\n+                \"bankName='\" + bankName + '\\'' +\n+                \", accounts=\" + accounts +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "22764aa79681438400cb3f071aeee788ef36dd21",
    "filename": "src/java_2/oop/bank/BankingApp.java",
    "status": "modified",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/bank/BankingApp.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/bank/BankingApp.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/bank/BankingApp.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,5 +1,9 @@\n package java_2.oop.bank;\n \n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n public class BankingApp {\n \n \tpublic static void main(String[] args) {\n@@ -13,5 +17,40 @@ public static void main(String[] args) {\n \t\t\t\t-find an account by any of the customer credentials\n \t\t\t\t-find an account by account number.\n \t\t \t*/\n+\n+\t\t// Classes, instantiation, encapsulation\n+\n+\t\t// List<Customer> customer = new ArrayList<>();\n+\t\tCustomer customer1 = new Customer(\"Chad\", \"Fouts\", 12345, \"52389\", 100);\n+\t\tCustomer customer2 = new Customer(\"Some\", \"Body\", 12345, \"52389\", 100);\n+\t\tCustomer customer3 = new Customer(\"Once\", \"Told\", 12345, \"52389\", 100);\n+\t\tCustomer customer4 = new Customer(\"Me\", \"I\", 12345, \"52389\", 100);\n+\t\tCustomer customer5 = new Customer(\"Aint\", \"The\", 12345, \"52389\", 100);\n+\n+\t\tList<String> transaction1 = new ArrayList<>();\n+\t\tList<String> transaction2 = new ArrayList<>();\n+\t\tList<String> transaction3 = new ArrayList<>();\n+\t\tList<String> transaction4 = new ArrayList<>();\n+\t\tList<String> transaction5 = new ArrayList<>();\n+\n+\t\tList<Account> listAccounts = new ArrayList<>(Arrays.asList());\n+\t\tBank theBank = new Bank(listAccounts);\n+\n+\t\tAccount chadsAccount = theBank.openAccount(1234567, customer1, 0, \"savings\", transaction1);\n+\t\tAccount somesAccount = theBank.openAccount(54321, customer2, 0, \"checking\", transaction2);\n+\t\tAccount oncesAccount = theBank.openAccount(987654, customer3, 0, \"savings\", transaction3);\n+\t\tAccount mesAccount = theBank.openAccount(258741, customer4, 0, \"checking\", transaction4);\n+\t\tAccount aintsAccount = theBank.openAccount(369852, customer5, 0, \"savings\", transaction5);\n+\n+\t\ttheBank.showAllAccounts();\n+\t\ttheBank.closeAccount(chadsAccount);\n+\t\ttheBank.closeAccount(somesAccount);\n+\t\ttheBank.showAllAccounts();\n+\t\ttheBank.customerByNumber(258741);\n+\t\ttheBank.getAccountByCustomer(chadsAccount);\n+\t\ttheBank.getAccountByCustomer(oncesAccount);\n \t}\n+\n+\n+\n }"
  },
  {
    "sha": "65deae6b92e24429dd3e734bca8cfb0983bb7cba",
    "filename": "src/java_2/oop/bank/Customer.java",
    "status": "modified",
    "additions": 68,
    "deletions": 1,
    "changes": 69,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/bank/Customer.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/bank/Customer.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/bank/Customer.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,13 +1,80 @@\n package java_2.oop.bank;\n \n public class Customer {\n-\t\t/*\n+    String firstName = \"\";\n+    String lastName = \"\";\n+    int ssn = 0;\n+    String dob = \"\";\n+    double wallet = 0;\n+\n+    public Customer(String fName, String lName, int social, String birthDate, double dollarAmount) {\n+        this.firstName = fName;\n+        this.lastName = lName;\n+        this.ssn = social;\n+        this.dob = birthDate;\n+        this.wallet = dollarAmount;\n+\n+        // ...\n+    }\n+\n+    public String getFirstName() {\n+        return firstName;\n+    }\n+\n+    public String getLastName() {\n+        return lastName;\n+    }\n+\n+    public int getSsn() {\n+        return ssn;\n+    }\n+\n+    public String getDob() {\n+        return dob;\n+    }\n+\n+    public double getWallet() {\n+        return wallet;\n+    }\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    public void setSsn(int ssn) {\n+        this.ssn = ssn;\n+    }\n+\n+    public void setDob(String dob) {\n+        this.dob = dob;\n+    }\n+\n+    public void setWallet(double wallet) {\n+        this.wallet = wallet;\n+    }\n+\n+    /*\n \t\t\tProperties :\n \t\t\t\tfirstName;\n \t\t\t\tlastName;\n \t\t\t\tssn;\n \t\t\t\tdob;\n \t\t\t\twallet; $ in the wallet\n \t\t*/\n+\n+    @Override\n+    public String toString() {\n+        return \"Customer{\" +\n+                \"firstName='\" + firstName + '\\'' +\n+                \", lastName='\" + lastName + '\\'' +\n+                \", ssn=\" + ssn +\n+                \", dob='\" + dob + '\\'' +\n+                \", wallet=\" + wallet +\n+                '}';\n+    }\n }\n "
  },
  {
    "sha": "96aa458765c9e31c34cb459e41532e8b55e02ec4",
    "filename": "src/java_2/oop/coffee/CoffeeApp.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/coffee/CoffeeApp.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/coffee/CoffeeApp.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/coffee/CoffeeApp.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -11,6 +11,8 @@ public static void main(String[] args) {\n \t-\n  */\n \n+\t\t// The coffee app uses inheritance and polymorphism, I moved on from this assignment to focus on the others and get enough points to move on.\n+\n \t\tCoffeeBeans java = new CoffeeBeans();\n \t\tCup mug = new Cup();\n \t\tCoffeeMaker keureg = new CoffeeMaker();"
  },
  {
    "sha": "583e2d1a05949385facb46c2ad7b37223956cba3",
    "filename": "src/java_2/oop/monkey/MonkeyApp.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/monkey/MonkeyApp.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/monkey/MonkeyApp.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/monkey/MonkeyApp.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -13,5 +13,16 @@ public static void main(String[] args) {\n         You are NOT allowed to move the Monkey class outside of the MonkeyCage class.  Keep it exactly where it is.\n         */\n \n+\t\t// Inner classes\n+\n+\t\tMonkeyCage monkeyCage = new MonkeyCage();\n+\t\tMonkeyCage.Monkey Jojo = monkeyCage.new Monkey(\"Jojo\", false);\n+\t\tMonkeyCage.Monkey Dio = monkeyCage.new Monkey(\"Dio\", false);\n+\t\tMonkeyCage.Monkey pillarMen = monkeyCage.new Monkey(\"Yo\", true);\n+\n+\t\tmonkeyCage.addMonkey(Jojo);\n+\t\tmonkeyCage.addMonkey(Dio);\n+\t\tmonkeyCage.addMonkey(pillarMen);\n+\t\tmonkeyCage.areMonkeysSmiling(monkeyCage.monkeys);\n \t}\n }"
  },
  {
    "sha": "49db8b824c0097eafaa51b7f4230edd1f7554c30",
    "filename": "src/java_2/oop/monkey/MonkeyCage.java",
    "status": "modified",
    "additions": 36,
    "deletions": 3,
    "changes": 39,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/monkey/MonkeyCage.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/monkey/MonkeyCage.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/monkey/MonkeyCage.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,23 +1,48 @@\n package java_2.oop.monkey;\n \n+import java.util.ArrayList;\n import java.util.List;\n \n class MonkeyCage {\n \n-    private List<Monkey> monkeys;\n+    public List<Monkey> monkeys = new ArrayList();\n \n-    boolean areMonkeysSmiling(Monkey[] monkeys) {\n+    boolean areMonkeysSmiling(List<Monkey> monkeys) {\n     //We have an array of monkeys.  Each Monkey has a boolean smile property, which indicates if that particular monkey is smiling.  Determine whether or not the majority of monkeys are smiling.  If the majority are smiling, return true.  if the majority are not smiling, return false.  If it is a tie, return true.\n-        return true;\n+        int teeth = 0;\n+        int cavities = 0;\n+\n+        for (Monkey notChimps : monkeys){\n+            if (notChimps.smiling == true){\n+                teeth++;\n+            }\n+            else {\n+                cavities++;\n+            }\n+        }\n+\n+        if (teeth >= cavities){\n+            System.out.println(\"Monkeys are smiling\");\n+\n+            return true;\n+        }\n+        else {\n+            System.out.println(\"Monkeys are not smiling\");\n+\n+            return false;\n+        }\n     }\n \n     Monkey addMonkey(Monkey monkey) {\n //        add a new monkey to the MonkeyCage\n+        monkeys.add(monkey);\n+\n         return monkey;\n     }\n \n     void removeMonkey(Monkey monkey) {\n //        remove a monkey from the MonkeyCage\n+        monkeys.remove(monkey);\n     }\n \n     class Monkey { //inner class.  DO NOT MOVE THIS CLASS\n@@ -28,5 +53,13 @@ public Monkey(String name, boolean smiling) {\n             this.name = name;\n             this.smiling = smiling;\n         }\n+\n+        @Override\n+        public String toString() {\n+            return \"Monkey{\" +\n+                    \"name='\" + name + '\\'' +\n+                    \", smiling=\" + smiling +\n+                    '}';\n+        }\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "189c3d7d3f17a93305a1efae78445a205a91ee1e",
    "filename": "src/java_2/oop/phone/CellPhone.java",
    "status": "modified",
    "additions": 94,
    "deletions": 1,
    "changes": 95,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/phone/CellPhone.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/phone/CellPhone.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/phone/CellPhone.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,6 +1,9 @@\n package java_2.oop.phone;\n \n-class CellPhone {\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+class CellPhone implements Phoneable {\n /*\n \t* Properties :\n \t* \tcontact list\n@@ -20,6 +23,96 @@\n \n ****Be sure not to expose the inner workings of the CellPhone (use concepts of encapsulation)**\n */\n+\n+    List<Contact> contactList = new ArrayList<>();\n+    int cost;\n+    String carrier;\n+    String brand;\n+    boolean power;\n+\n+    public CellPhone(int cost, String carrier, String brand, boolean power) {\n+        this.cost = cost;\n+        this.carrier = carrier;\n+        this.brand = brand;\n+        this.power = power;\n+    }\n+\n+    public void addContact(Contact contact) {\n+        if (contactList.contains(contact)){\n+            System.out.println(\"This contact currently exists already.\");\n+        }\n+        else {\n+            contactList.add(contact);\n+            System.out.println(\"Contact added successfully.\");\n+        }\n+    }\n+\n+    public void removeContact(Contact contact) {\n+        contactList.remove(contact);\n+        System.out.println(\"Contact has been removed.\");\n+    }\n+\n+    public void updateContact(Contact contact, String name, String phoneNum, String address) {\n+        if (contactList.contains(contact)){\n+            contact.setName(name);\n+            contact.setPhoneNum(phoneNum);\n+            contact.setAddress(address);\n+            System.out.println(contact);\n+        }\n+        else {\n+            System.out.println(\"This contact doesn't exist.\");\n+        }\n+    }\n+\n+    public void contactSearch(List<Contact> contactList, Contact contact) {\n+        if (contactList.contains(contact)){\n+            System.out.println(contact);\n+        }\n+        else {\n+            System.out.println(\"This contact doesn't exist.\");\n+        }\n+    }\n+\n+    @Override\n+    public void call(Contact contact) {\n+        System.out.println(\"Calling: \"+contact.name+\"...\");\n+    }\n+\n+    @Override\n+    public void ring() {\n+\n+    }\n+\n+    @Override\n+    public void hangUp() {\n+\n+    }\n+\n+    @Override\n+    public void pickUp() {\n+\n+    }\n+\n+    @Override\n+    public void powerOff() {\n+\n+    }\n+\n+    @Override\n+    public void powerOn() {\n+\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"CellPhone{\" +\n+                \"contactList=\" + contactList +\n+                \", cost=\" + cost +\n+                \", carrier='\" + carrier + '\\'' +\n+                \", brand='\" + brand + '\\'' +\n+                \", power=\" + power +\n+                '}';\n+    }\n }\n \n "
  },
  {
    "sha": "9fef66bc7ae8d80f4f6c4e0c557381fa9b2951e2",
    "filename": "src/java_2/oop/phone/Contact.java",
    "status": "modified",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/phone/Contact.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/phone/Contact.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/phone/Contact.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -7,5 +7,48 @@\n         - Phone number\n \t\t- Address\n */\n+\n+    String name;\n+    String phoneNum;\n+    String address;\n+\n+    public Contact(String name, String phoneNum, String address) {\n+        this.name = name;\n+        this.phoneNum = phoneNum;\n+        this.address = address;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getPhoneNum() {\n+        return phoneNum;\n+    }\n+\n+    public void setPhoneNum(String phoneNum) {\n+        this.phoneNum = phoneNum;\n+    }\n+\n+    public String getAddress() {\n+        return address;\n+    }\n+\n+    public void setAddress(String address) {\n+        this.address = address;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Contact{\" +\n+                \"name='\" + name + '\\'' +\n+                \", phoneNum='\" + phoneNum + '\\'' +\n+                \", address='\" + address + '\\'' +\n+                '}';\n+    }\n }\n "
  },
  {
    "sha": "e5f03b47b54cab0cae9998a518a98d53c983c089",
    "filename": "src/java_2/oop/phone/PhoneApp.java",
    "status": "modified",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/phone/PhoneApp.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/phone/PhoneApp.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/phone/PhoneApp.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -16,5 +16,38 @@ public static void main(String[] args) {\n \t\t-Make the CellPhone class implement the Phoneable interface.  Implement the methods how you see fit in the CellPhone Class\n */\n \n+\t\t// inheritance and association, interfaces\n+\n+\t\tCellPhone chadsPhone = new CellPhone(750, \"Samsung Galaxy S9001\", \"Verizon\", true);\n+\t\tCellPhone dumbPhone = new CellPhone(9999, \"iPhone-12\", \"AT&T\", false);\n+\t\tCellPhone goodPhone = new CellPhone(925, \"Samsung Galaxy S21\", \"Sprint\", true);\n+\n+\t\tContact person1 = new Contact(\"Some Body\", \"123456789\", \"IDK WHERE I AM\");\n+\t\tContact person2 = new Contact(\"Red-Eyes\", \"12345678\", \"1234 Dragon Land\");\n+\t\tContact person3 = new Contact(\"Blue-Eyes\", \"1234567\", \"4321 Dragon Land\");\n+\n+\t\tContact person4 = new Contact(\"Dark Magician\", \"123456\", \"7765 Man Cave\");\n+\t\tContact person5 = new Contact(\"Celtic Garden\", \"12345\", \"5596 Open Forest\");\n+\t\tContact person6 = new Contact(\"Mystical Elf\", \"1234\", \"7745 Spring Valley\");\n+\n+\t\tContact person7 = new Contact(\"Buster Blader\", \"123\", \"2249 Dragon Land\");\n+\t\tContact person8 = new Contact(\"Galaxy-Eyes\", \"12\", \"8526 Dragon Land\");\n+\t\tContact person9 = new Contact(\"Niko Gal\", \"1\", \"7964 Not a Card\");\n+\n+\t\tchadsPhone.addContact(person1);\n+\t\tchadsPhone.addContact(person2);\n+\t\tchadsPhone.addContact(person3);\n+\n+\t\tdumbPhone.addContact(person4);\n+\t\tdumbPhone.addContact(person5);\n+\t\tdumbPhone.addContact(person6);\n+\n+\t\tgoodPhone.addContact(person7);\n+\t\tgoodPhone.addContact(person8);\n+\t\tgoodPhone.addContact(person9);\n+\n+\t\tchadsPhone.updateContact(person1, \"Told Me\", \"987654321\", \"I STILL DON'T KNOW WHERE I AM\");\n+\n+\t\tchadsPhone.contactSearch(chadsPhone.contactList, person2);\n \t}\n }"
  },
  {
    "sha": "60ae11b20efec1f43927ad2448d3cee020d6d43e",
    "filename": "src/java_2/oop/phone/Phoneable.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/phone/Phoneable.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/phone/Phoneable.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/phone/Phoneable.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -3,4 +3,12 @@\n public interface Phoneable {\n \t//\t\tAnything that implements Phoneable has the following functionality :\n \t//\t\tcall() ring(), hangUp(), pickUp(); powerOff(); powerOn();  Implement these methods how you see fit in the CellPhone Class\n+\n+    public void call(Contact contact);\n+    public void ring();\n+    public void hangUp();\n+    public void pickUp();\n+    public void powerOff();\n+    public void powerOn();\n+\n }"
  },
  {
    "sha": "cc727793e79e187cdd91be1c29ab0a2f5441f1f8",
    "filename": "src/java_2/oop/podcast/Main.java",
    "status": "modified",
    "additions": 39,
    "deletions": 1,
    "changes": 40,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/podcast/Main.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/podcast/Main.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/podcast/Main.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -14,6 +14,44 @@ public static void main(String[] args) {\n        \t\t - show the playlist in the 3rd podcasting app\n        \t\t - remove a podcast from the playlist in the 3rd podcasting app\n \t\t */\n-\t}\n \n+\t\tPodcast dnd = new Podcast(\"Dragons and Dragons\", \"Tom and Jerry\", \"3 hours\");\n+\t\tPodcast rnr = new Podcast(\"Rest and Relaxation\", \"Don Cheadle\", \"2 hours\");\n+\t\tPodcast ns = new Podcast(\"Nature sounds\", \"N/A\", \"10 hours\");\n+\t\tPodcast politics = new Podcast(\"Don't talk about this\", \"Some Guy\", \"Too long/2 hours\");\n+\t\tPodcast gn = new Podcast(\"Gaming News\", \"Tony Hawk\", \"2 hours\");\n+\t\tPodcast cs = new Podcast(\"Cooking Show\", \"Paula Dean\", \"2 hours\");\n+\t\tPodcast ne = new Podcast(\"Nerd Expo\", \"Albert Einstein\", \"5 hours\");\n+\t\tPodcast pc = new Podcast(\"Pod's Cast\", \"Pod Jones\", \"1 hour\");\n+\t\tPodcast ph = new Podcast(\"Program Humor\", \"Ice. T\", \"3 hours\");\n+\n+\t\tPodcastingApp luxury = new PodcastingApp(\"Luxury Podcasts\");\n+\t\tPodcastingApp decent = new PodcastingApp(\"Decent Podcasts\");\n+\t\tPodcastingApp nerdy = new PodcastingApp(\"Nerdy Podcasts\");\n+\n+\t\tluxury.addPodcast(cs);\n+\t\tluxury.addPodcast(ne);\n+\t\tluxury.addPodcast(politics);\n+\n+\t\tdecent.addPodcast(rnr);\n+\t\tdecent.addPodcast(pc);\n+\t\tdecent.addPodcast(ns);\n+\n+\t\tnerdy.addPodcast(ph);\n+\t\tnerdy.addPodcast(dnd);\n+\t\tnerdy.addPodcast(gn);\n+\n+\t\tluxury.play(luxury);\n+\t\tluxury.stop(luxury);\n+\n+\t\tdecent.next(decent);\n+\t\tdecent.previous(decent);\n+\n+\t\tnerdy.repeat(nerdy);\n+\n+\t\tnerdy.displayPodcast(nerdy);\n+\n+\t\tnerdy.remove(ph);\n+\t\tnerdy.displayPodcast(nerdy);\n+\t}\n }"
  },
  {
    "sha": "4854cd2717e298063f4b6f047e22bbbd931056fe",
    "filename": "src/java_2/oop/podcast/Podcast.java",
    "status": "modified",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/podcast/Podcast.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/podcast/Podcast.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/podcast/Podcast.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -8,4 +8,38 @@\n \t\t   - Duration\n \t\t - **A podcast must exist in the Podcast before it can be added to the playlist (so you can only podcasts that you own.)**\n \t*/\n+\n+    String title;\n+    String host;\n+    String duration;\n+\n+    public Podcast(String title, String host, String duration) {\n+        this.title = title;\n+        this.host = host;\n+        this.duration = duration;\n+    }\n+\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    public void setTitle(String title) {\n+        this.title = title;\n+    }\n+\n+    public String getHost() {\n+        return host;\n+    }\n+\n+    public void setHost(String host) {\n+        this.host = host;\n+    }\n+\n+    public String getDuration() {\n+        return duration;\n+    }\n+\n+    public void setDuration(String duration) {\n+        this.duration = duration;\n+    }\n }"
  },
  {
    "sha": "663e7fc421933b6800dc8c576c298a54f0a17159",
    "filename": "src/java_2/oop/podcast/PodcastingApp.java",
    "status": "modified",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/podcast/PodcastingApp.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/podcast/PodcastingApp.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/podcast/PodcastingApp.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,5 +1,8 @@\n package java_2.oop.podcast;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n class PodcastingApp {\n \n /*\n@@ -19,5 +22,52 @@\n        - removeFromPlaylist(Podcast)\n */\n \n+    String appName;\n+    List<Podcast> playLists = new ArrayList<>();\n+\n+    public PodcastingApp(String appName) {\n+        this.appName = appName;\n+    }\n+\n+    public String getAppName() {\n+        return appName;\n+    }\n+\n+    public void setAppName(String appName) {\n+        this.appName = appName;\n+    }\n+\n+    public void addPodcast(Podcast podcast) {\n+        playLists.add(podcast);\n+    }\n+\n+    public void play(PodcastingApp playit) {\n+        System.out.println(\"Playing \"+playit.appName);\n+    }\n+\n+    public void stop(PodcastingApp stopit) {\n+        System.out.println(\"Stopping \"+stopit.appName);\n+    }\n+\n+    public void next(PodcastingApp nextPC) {\n+        System.out.println(\"Playing next podcast\");\n+    }\n+\n+    public void previous(PodcastingApp lastPC) {\n+        System.out.println(\"Playing previous podcast\");\n+    }\n+\n+    public void repeat(PodcastingApp loop) {\n+        System.out.println(\"Repeating \"+loop.appName);\n+    }\n+\n+    public void displayPodcast(PodcastingApp display) {\n+        display.playLists.stream().forEach(show -> System.out.println(show.title));\n+    }\n+\n+    public void remove(Podcast takeAway) {\n+        playLists.remove(takeAway);\n+\n+    }\n }\n "
  },
  {
    "sha": "3d9b3504b4a0ccd63241ab0da57d8a59898adb8a",
    "filename": "src/java_2/oop/rainforest/Creature.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/rainforest/Creature.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/rainforest/Creature.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/rainforest/Creature.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -2,5 +2,15 @@\n \n public abstract class Creature {\n //\tDefine 1 common characteristic that any Creature may generally possess\n+    protected String name;\n+    protected String type;\n+    protected String[] food;\n+\n+    public Creature(String name, String type, String[] food){\n+        this.name = name;\n+        this.type = type;\n+        this.food = food;\n+    }\n+\n //\tDefine 1 common action that any Creature may generally perform\n }"
  },
  {
    "sha": "50a532474fff34f546ebfb5761591f91638d2c6f",
    "filename": "src/java_2/oop/rainforest/RainforestApp.java",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/rainforest/RainforestApp.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/rainforest/RainforestApp.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/rainforest/RainforestApp.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,5 +1,7 @@\n package java_2.oop.rainforest;\n \n+import java.sql.SQLOutput;\n+\n public class RainforestApp {\n \n \tpublic static void main(String[] args) {\n@@ -17,6 +19,19 @@ public static void main(String[] args) {\n \t\tchoose your own characteristics and methods to model).\n \n */\n+\t\t// Polymorphism, abstraction, extension\n+\n+\t\t// RainforestCreature creature;\n+\n+\t\tRainforestCreature armadillo = new RainforestCreature(\"Armadillo\", \"mammal\", new String[]{\"insects\", \"fruits\"});\n+\t\tRainforestCreature otter = new RainforestCreature(\"Otter\", \"mammal\", new String[]{\"fish\", \"birds\"});\n+\t\tRainforestCreature jaguar = new RainforestCreature(\"Jaguar\", \"mammal\", new String[]{\"rodent\", \"fish\", \"birds\", \"mammals\"});\n+\t\tRainforestCreature ocelot = new RainforestCreature(\"Ocelot\", \"mammal\", new String[]{\"birds\", \"snakes\", \"monkeys\"});\n+\t\tRainforestCreature toucan = new RainforestCreature(\"Toucan\", \"mammal\", new String[]{\"insects\", \"fruits\", \"eggs\", \"small birds\"});\n+\t\tRainforestCreature dartFrog = new RainforestCreature(\"Dart Frog\", \"amphibian\", new String[]{\"insects\", \"more insects\", \"even more insects\"});\n+\n+\t\tSystem.out.println(\"Name: \"+armadillo.name+\" Type: \"+armadillo.type+\" Food: \"+String.join(\", \", armadillo.food));\n+\t\tarmadillo.eat();\n \t}\n \n }"
  },
  {
    "sha": "43284fbb95f71692b1334f51970a21cbee0ec5ec",
    "filename": "src/java_2/oop/rainforest/RainforestCreature.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/rainforest/RainforestCreature.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_2/oop/rainforest/RainforestCreature.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_2/oop/rainforest/RainforestCreature.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -2,4 +2,9 @@\n \n public class RainforestCreature extends Creature {\n \t//your code here\n+    public RainforestCreature(String name, String type, String[]food){super (name,type, food);}\n+\n+    public void eat(){\n+        System.out.println(this.name+\" eats \"+String.join(\", \", this.food));\n+    }\n }"
  },
  {
    "sha": "012b6c07a8b7bad6db47d66afcc31aeba5e45397",
    "filename": "src/java_3/concurrency/Main.java",
    "status": "modified",
    "additions": 22,
    "deletions": 3,
    "changes": 25,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/concurrency/Main.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/concurrency/Main.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_3/concurrency/Main.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -4,9 +4,21 @@\n    \n     public static void main(String[] args) {\n          //run all of your threads from this main class.\n-        Sync syncThread = new Sync(\"sync thread\");\n-        syncThread.start();\n-        System.out.println(syncThread.getNums());  //this prints out an empty list. write some code that will allow the data generated in the syncThread to show up here.\n+        Sync syncThread1 = new Sync(\"sync thread\");\n+        syncThread1.start();\n+        Sync syncThread2 = new Sync(\"sync thread\");\n+        syncThread2.start();\n+        Sync syncThread3 = new Sync(\"sync thread\");\n+        syncThread3.start();\n+        Sync syncThread4 = new Sync(\"sync thread\");\n+        syncThread4.start();\n+        Sync syncThread5 = new Sync(\"sync thread\");\n+        syncThread5.start();\n+        Sync syncThread6 = new Sync(\"sync thread\");\n+        syncThread6.start();\n+        Team teamThread = new Team(\"Code-Killers\");\n+        teamThread.run();\n+        System.out.println(syncThread1.getNums());  //this prints out an empty list. write some code that will allow the data generated in the syncThread to show up here.\n         /*\n             -Create 5 sync threads\n             -Allow the list of nums to be a shared resource amongst all of the threads.\n@@ -17,5 +29,12 @@ public static void main(String[] args) {\n             Kick off a Team Thread here.\n             Set the name of the thead to be your agile team name.\n         */\n+\n+        //Reasoning threadStart = new Reasoning();\n+        //threadStart.start();\n+\n+        Reasoning threadRun = new Reasoning();\n+        threadRun.run();\n+\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "fc5295d7ae05d4b5c57b6f1a3a82578bd19ecc01",
    "filename": "src/java_3/concurrency/Reasoning.java",
    "status": "modified",
    "additions": 16,
    "deletions": 1,
    "changes": 17,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/concurrency/Reasoning.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/concurrency/Reasoning.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_3/concurrency/Reasoning.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,11 +1,26 @@\n package java_3.concurrency;\n \n-class Reasoning {\n+class Reasoning extends Thread {\n     //set up this class so it can become a valid thread. Reasoning should be created by inheriting from the Thread class.\n \n     void distinguish() {\n         //print to the console the difference between a thread and a process\n         //print out you think will happen if you invoke the run() method of a thread as opposed to the start() method of a thread.\n+        System.out.println(\"A process is a program in execution, and a thread is part of that running process.\");\n+        System.out.println(\"Invoking the start method will invoke both the run and the start methods, while invoking the run method will only run the run method.\");\n+\n+    }\n+\n+    @Override\n+    public void run(){\n+        distinguish();\n+        super.run();\n+    }\n+\n+    @Override\n+    public void start(){\n+        distinguish();\n+        super.start();\n     }\n }\n "
  },
  {
    "sha": "81a3d495a88aa80d6e9cd207978524b3b4bd58f2",
    "filename": "src/java_3/concurrency/Sync.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/concurrency/Sync.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/concurrency/Sync.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_3/concurrency/Sync.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -5,7 +5,7 @@\n import java.util.Random;\n \n class Sync extends Thread {\n-    private List nums = new ArrayList<>();\n+    protected List nums = new ArrayList<>();\n \n     Sync(String name) {\n         super(name);\n@@ -19,6 +19,7 @@ public void run() {\n             int randInt = rand.nextInt(100);\n             this.nums.add(randInt);\n         }\n+        System.out.println(nums);\n     }\n \n     public List getNums() {"
  },
  {
    "sha": "c5322b5b93a5205b061dbc0ecb2d40b85c5d65d8",
    "filename": "src/java_3/concurrency/Team.java",
    "status": "modified",
    "additions": 20,
    "deletions": 3,
    "changes": 23,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/concurrency/Team.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/concurrency/Team.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_3/concurrency/Team.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -3,11 +3,30 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-class Team {\n+class Team implements Runnable {\n \n     private String teamName;\n     private List<String> team = new ArrayList<>();\n \n+    public Team(String teamName) {\n+        this.teamName = teamName;\n+    }\n+\n+    @Override\n+    public void run() {\n+        var teamMembers = List.of(\"Chad\", \"Taylor\", \"Edward\", \"Jaleel\", \"James\", \"Marina\", \"Anthony\");\n+\n+        for (int i = 0; i < teamMembers.size(); i++) {\n+            team.add(teamMembers.get(i));\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+            System.out.println(teamMembers.get(i));\n+        }\n+    }\n+\n     /*\n         -This thread should be created by implementing the Runnable interface, NOT by extending the Thread class.\n         -In the run method of this thread, push each member of your team to the team list.\n@@ -18,6 +37,4 @@\n         Set the name of the thead to be your agile team name.\n      */\n \n-\n-\n }\n\\ No newline at end of file"
  },
  {
    "sha": "087802b7988a8d8b7f8b458dc00844d029ded109",
    "filename": "src/java_3/serial/Fax.java",
    "status": "modified",
    "additions": 26,
    "deletions": 3,
    "changes": 29,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/serial/Fax.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/serial/Fax.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_3/serial/Fax.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,5 +1,7 @@\n package java_3.serial;\n \n+import java.io.IOException;\n+\n public class Fax {\n \n /*\tProperties :\n@@ -12,13 +14,34 @@\n \t\treceive(message)\n \n  */\n-\tprivate void transmit(Message msg) {\n+\n+\tString brand;\n+\tString model;\n+\tString year;\n+\n+\tpublic Fax(String brand, String model, String year) {\n+\t\tthis.brand = brand;\n+\t\tthis.model = model;\n+\t\tthis.year = year;\n+\t}\n+\n+\tpublic static void transmit(Message msg, String msgFileName) throws IOException {\n \t\t//The transmit message must serialize a Message, and write it to a file.\n+\t\tSerialization.serialization(msg, msgFileName);\n \t}\n \n-\tprivate Message receive(String filename) {\n+\tpublic static void receive(Message msg, String msgFileName) throws IOException, ClassNotFoundException {\n //\t\tThe receive method should deserialize a message by reading it in from a file. and then print it to the console.\n-\t\treturn new Message();\n+\t\tMessage reMsg = (Message) Serialization.deserialization(msgFileName);\n+\t\tSystem.out.println(reMsg);\n \t}\n \n+\t@Override\n+\tpublic String toString() {\n+\t\treturn \"Fax{\" +\n+\t\t\t\t\"brand='\" + brand + '\\'' +\n+\t\t\t\t\", model='\" + model + '\\'' +\n+\t\t\t\t\", year='\" + year + '\\'' +\n+\t\t\t\t'}';\n+\t}\n }"
  },
  {
    "sha": "a2bcfc1d7ce6bc7b5244c805d4a3e20eec9cb1f6",
    "filename": "src/java_3/serial/Message.java",
    "status": "modified",
    "additions": 10,
    "deletions": 5,
    "changes": 15,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/serial/Message.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/serial/Message.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_3/serial/Message.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -1,7 +1,9 @@\n package java_3.serial;\n \n \n-public class Message {\n+import java.io.Serializable;\n+\n+public class Message implements Serializable {\n \tprivate int id;\n \tprivate String msgTxt;\n \n@@ -10,9 +12,6 @@ public Message(int id, String msgTxt) {\n \t\tthis.msgTxt = msgTxt;\n \t}\n \n-\tpublic Message() {}\n-\n-\n \tpublic String getMsgTxt() {\n \t\treturn msgTxt;\n \t}\n@@ -33,5 +32,11 @@ public void setId(int id) {\n \t\tthis.id = id;\n \t}\n \n-\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn \"Message{\" +\n+\t\t\t\t\"id=\" + id +\n+\t\t\t\t\", msgTxt='\" + msgTxt + '\\'' +\n+\t\t\t\t'}';\n+\t}\n }"
  },
  {
    "sha": "03937b4026a1ddbaeee1befe9ce99f8256be42f0",
    "filename": "src/java_3/serial/Serialization.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/ChadJF/Java1/blob/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/serial/Serialization.java",
    "raw_url": "https://github.com/ChadJF/Java1/raw/cc2b39d4f63d7917ca19e17f47f805efe2e09a1b/src/java_3/serial/Serialization.java",
    "contents_url": "https://api.github.com/repos/ChadJF/Java1/contents/src/java_3/serial/Serialization.java?ref=cc2b39d4f63d7917ca19e17f47f805efe2e09a1b",
    "patch": "@@ -0,0 +1,24 @@\n+package java_3.serial;\n+\n+import java.io.*;\n+\n+public class Serialization {\n+\n+    public static void serialization(Object obj, String fileName) throws IOException {\n+        FileOutputStream fos = new FileOutputStream(fileName);\n+        ObjectOutputStream oos = new ObjectOutputStream(fos);\n+        oos.writeObject(obj);\n+        fos.close();\n+        oos.close();\n+    }\n+\n+    public static Object deserialization(String fileName) throws IOException, ClassNotFoundException {\n+        FileInputStream fis = new FileInputStream(fileName);\n+        ObjectInputStream ois = new ObjectInputStream(fis);\n+        Object obj = ois.readObject();\n+        fis.close();\n+        ois.close();\n+        return obj;\n+    }\n+\n+}"
  }
]
