[
  {
    "sha": "06852ec32b0b498d23249a039b7e596145d84af2",
    "filename": "plugin.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/blob/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/plugin.xml",
    "raw_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/raw/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/plugin.xml",
    "contents_url": "https://api.github.com/repos/OneSignal/OneSignal-Cordova-SDK/contents/plugin.xml?ref=85b2a1eab53c13893fe64a57fe4dd5890fa386e7",
    "patch": "@@ -26,7 +26,7 @@\n   </engines>\n \n   <platform name=\"android\">\n-    <framework src=\"com.onesignal:OneSignal:3.15.7\" />\n+    <framework src=\"com.onesignal:OneSignal:4.2.0\" />\n     <framework src=\"build-extras-onesignal.gradle\" custom=\"true\" type=\"gradleReference\" />\n \n     <config-file target=\"res/xml/config.xml\" parent=\"/*\">\n@@ -88,7 +88,7 @@\n       <string>production</string>\n     </config-file>\n \n-    <framework src=\"OneSignal\" type=\"podspec\" spec=\"2.16.2\" />\n+    <framework src=\"OneSignal\" type=\"podspec\" spec=\"3.2.3\" />\n     <header-file src=\"src/ios/OneSignalPush.h\" />\n     <source-file src=\"src/ios/OneSignalPush.m\" />\n "
  },
  {
    "sha": "2f31918359e12f8964ebcaa4f99925708c80826d",
    "filename": "src/android/com/plugin/gcm/OneSignalController.java",
    "status": "modified",
    "additions": 33,
    "deletions": 67,
    "changes": 100,
    "blob_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/blob/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/android/com/plugin/gcm/OneSignalController.java",
    "raw_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/raw/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/android/com/plugin/gcm/OneSignalController.java",
    "contents_url": "https://api.github.com/repos/OneSignal/OneSignal-Cordova-SDK/contents/src/android/com/plugin/gcm/OneSignalController.java?ref=85b2a1eab53c13893fe64a57fe4dd5890fa386e7",
    "patch": "@@ -1,25 +1,17 @@\n package com.plugin.gcm;\n \n-import android.util.Log;\n+import com.onesignal.OSDeviceState;\n+import com.onesignal.OneSignal;\n+import com.onesignal.OneSignal.PostNotificationResponseHandler;\n+\n import org.apache.cordova.CallbackContext;\n import org.json.JSONArray;\n import org.json.JSONException;\n import org.json.JSONObject;\n+\n import java.util.ArrayList;\n import java.util.Collection;\n \n-\n-import com.onesignal.OneSignal;\n-import com.onesignal.OSNotification;\n-import com.onesignal.OSNotificationOpenResult;\n-import com.onesignal.OSInAppMessageAction;\n-\n-import com.onesignal.OneSignal.NotificationOpenedHandler;\n-import com.onesignal.OneSignal.NotificationReceivedHandler;\n-import com.onesignal.OneSignal.GetTagsHandler;\n-import com.onesignal.OneSignal.IdsAvailableHandler;\n-import com.onesignal.OneSignal.PostNotificationResponseHandler;\n-\n public class OneSignalController {\n   private static CallbackContext notifReceivedCallbackContext;\n   private static CallbackContext notifOpenedCallbackContext;\n@@ -32,7 +24,7 @@\n    */\n   public static boolean getTags(CallbackContext callbackContext) {\n     final CallbackContext jsTagsAvailableCallBack = callbackContext;\n-    OneSignal.getTags(new GetTagsHandler() {\n+    OneSignal.getTags(new OneSignal.OSGetTagsHandler() {\n       @Override\n       public void tagsAvailable(JSONObject tags) {\n         CallbackHelper.callbackSuccess(jsTagsAvailableCallBack, tags);\n@@ -67,14 +59,16 @@ public static boolean deleteTags(JSONArray data) {\n   /**\n    * Subscriptions\n    */\n-  public static boolean getPermissionSubscriptionState(CallbackContext callbackContext) {\n-    CallbackHelper.callbackSuccess(callbackContext, OneSignal.getPermissionSubscriptionState().toJSONObject());\n+  public static boolean getDeviceState(CallbackContext callbackContext) {\n+    OSDeviceState deviceState = OneSignal.getDeviceState();\n+    if (deviceState != null)\n+      CallbackHelper.callbackSuccess(callbackContext, deviceState.toJSONObject());\n     return true;\n   }\n \n-  public static boolean setSubscription(JSONArray data) {\n+  public static boolean disablePush(JSONArray data) {\n     try {\n-      OneSignal.setSubscription(data.getBoolean(0));\n+      OneSignal.disablePush(data.getBoolean(0));\n       return true;\n     }\n     catch (Throwable t) {\n@@ -147,59 +141,22 @@ public static boolean registerForPushNotifications() {\n   }\n \n   public static boolean getIds(CallbackContext callbackContext) {\n-    final CallbackContext jsIdsAvailableCallBack = callbackContext;\n-    OneSignal.idsAvailable(new IdsAvailableHandler() {\n-      @Override\n-      public void idsAvailable(String userId, String registrationId) {\n-        JSONObject jsonIds = new JSONObject();\n-        try {\n-          jsonIds.put(\"userId\", userId);\n-          if (registrationId != null)\n-            jsonIds.put(\"pushToken\", registrationId);\n-          else\n-            jsonIds.put(\"pushToken\", \"\");\n-\n-          CallbackHelper.callbackSuccess(jsIdsAvailableCallBack, jsonIds);\n-        }\n-        catch (Throwable t) {\n-          t.printStackTrace();\n-        }\n-      }\n-    });\n-    return true;\n-  }\n+    OSDeviceState deviceState = OneSignal.getDeviceState();\n \n-  public static boolean enableVibrate(JSONArray data) {\n-    try {\n-      OneSignal.enableVibrate(data.getBoolean(0));\n-      return true;\n-    }\n-    catch (Throwable t) {\n-      t.printStackTrace();\n+    if (deviceState == null)\n       return false;\n-    }\n-  }\n \n-  public static boolean enableSound(JSONArray data) {\n+    JSONObject jsonIds = new JSONObject();\n     try {\n-      OneSignal.enableSound(data.getBoolean(0));\n-      return true;\n-    }\n-    catch (Throwable t) {\n+      jsonIds.put(\"userId\", deviceState.getUserId());\n+      jsonIds.put(\"pushToken\", deviceState.getPushToken() == null ? \"\" : deviceState.getPushToken());\n+\n+      CallbackHelper.callbackSuccess(callbackContext, jsonIds);\n+    } catch (Throwable t) {\n       t.printStackTrace();\n-      return false;\n     }\n-  }\n \n-  public static boolean setInFocusDisplaying(JSONArray data) {\n-    try {\n-      OneSignal.setInFocusDisplaying(data.getInt(0));\n-      return true;\n-    }\n-    catch (JSONException e) {\n-      Log.e(TAG, \"execute: Got JSON Exception \" + e.getMessage());\n-      return false;\n-    }\n+    return true;\n   }\n \n   public static void setLogLevel(JSONArray data) {\n@@ -214,7 +171,6 @@ public static void setLogLevel(JSONArray data) {\n \n   public static boolean userProvidedConsent(CallbackContext callbackContext) {\n     boolean providedConsent = OneSignal.userProvidedPrivacyConsent();\n-    final CallbackContext jsUserProvidedConsentContext = callbackContext;\n     CallbackHelper.callbackSuccessBoolean(callbackContext, providedConsent);\n     return true;\n   }\n@@ -247,9 +203,14 @@ public static boolean setExternalUserId(final CallbackContext callback, JSONArra\n \n       OneSignal.setExternalUserId(data.getString(0), authHashToken, new OneSignal.OSExternalUserIdUpdateCompletionHandler() {\n         @Override\n-        public void onComplete(JSONObject results) {\n+        public void onSuccess(JSONObject results) {\n           CallbackHelper.callbackSuccess(callback, results);\n         }\n+\n+        @Override\n+        public void onFailure(OneSignal.ExternalIdError error) {\n+          CallbackHelper.callbackError(callback, error.getMessage());\n+        }\n       });\n       return true;\n     } catch (JSONException e) {\n@@ -261,9 +222,14 @@ public void onComplete(JSONObject results) {\n   public static boolean removeExternalUserId(final CallbackContext callback) {\n     OneSignal.removeExternalUserId(new OneSignal.OSExternalUserIdUpdateCompletionHandler() {\n       @Override\n-      public void onComplete(JSONObject results) {\n+      public void onSuccess(JSONObject results) {\n         CallbackHelper.callbackSuccess(callback, results);\n       }\n+\n+      @Override\n+      public void onFailure(OneSignal.ExternalIdError error) {\n+        CallbackHelper.callbackError(callback, error.getMessage());\n+      }\n     });\n     return true;\n   }"
  },
  {
    "sha": "a7586a9c6f74ab21547113c6b6c14169c72a6026",
    "filename": "src/android/com/plugin/gcm/OneSignalEmailController.java",
    "status": "modified",
    "additions": 68,
    "deletions": 77,
    "changes": 145,
    "blob_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/blob/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/android/com/plugin/gcm/OneSignalEmailController.java",
    "raw_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/raw/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/android/com/plugin/gcm/OneSignalEmailController.java",
    "contents_url": "https://api.github.com/repos/OneSignal/OneSignal-Cordova-SDK/contents/src/android/com/plugin/gcm/OneSignalEmailController.java?ref=85b2a1eab53c13893fe64a57fe4dd5890fa386e7",
    "patch": "@@ -1,97 +1,88 @@\n package com.plugin.gcm;\n \n+import com.onesignal.OneSignal;\n+import com.onesignal.OneSignal.EmailUpdateError;\n+import com.onesignal.OneSignal.EmailUpdateHandler;\n+\n import org.apache.cordova.CallbackContext;\n import org.json.JSONArray;\n import org.json.JSONException;\n import org.json.JSONObject;\n \n-import com.onesignal.OneSignal;\n-import com.onesignal.OneSignal.EmailUpdateHandler;\n-import com.onesignal.OneSignal.EmailUpdateError;\n-\n-\n public class OneSignalEmailController {\n-  public static boolean setEmail(CallbackContext callbackContext, JSONArray data) {\n-    final CallbackContext jsSetEmailContext = callbackContext;\n-    try {\n-      OneSignal.setEmail(data.getString(0), data.getString(1), new EmailUpdateHandler() {\n-        @Override\n-        public void onSuccess() {\n-          CallbackHelper.callbackSuccess(jsSetEmailContext, null);\n-        }\n+    public static boolean setEmail(CallbackContext callbackContext, JSONArray data) {\n+        final CallbackContext jsSetEmailContext = callbackContext;\n+        try {\n+            OneSignal.setEmail(data.getString(0), data.getString(1), new EmailUpdateHandler() {\n+                @Override\n+                public void onSuccess() {\n+                    CallbackHelper.callbackSuccess(jsSetEmailContext, null);\n+                }\n \n-        @Override\n-        public void onFailure(EmailUpdateError error) {\n-          try {\n-            JSONObject errorObject = new JSONObject(\"{'error' : '\" + error.getMessage() + \"'}\");\n-            CallbackHelper.callbackError(jsSetEmailContext, errorObject);\n-          } catch (JSONException e) {\n-            e.printStackTrace();\n-          }\n-        }\n-      });\n+                @Override\n+                public void onFailure(EmailUpdateError error) {\n+                    try {\n+                        JSONObject errorObject = new JSONObject(\"{'error' : '\" + error.getMessage() + \"'}\");\n+                        CallbackHelper.callbackError(jsSetEmailContext, errorObject);\n+                    } catch (JSONException e) {\n+                        e.printStackTrace();\n+                    }\n+                }\n+            });\n \n-      return true;\n-    } catch(Throwable t) {\n-      t.printStackTrace();\n-      return false;\n+            return true;\n+        } catch (Throwable t) {\n+            t.printStackTrace();\n+            return false;\n+        }\n     }\n-  }\n \n-  public static boolean setUnauthenticatedEmail(CallbackContext callbackContext, JSONArray data) {\n-    final CallbackContext jsSetEmailContext = callbackContext;\n-    try {\n-      OneSignal.setEmail(data.getString(0), null, new EmailUpdateHandler() {\n-        @Override\n-        public void onSuccess() {\n-          CallbackHelper.callbackSuccess(jsSetEmailContext, null);\n-        }\n+    public static boolean setUnauthenticatedEmail(CallbackContext callbackContext, JSONArray data) {\n+        final CallbackContext jsSetEmailContext = callbackContext;\n+        try {\n+            OneSignal.setEmail(data.getString(0), null, new EmailUpdateHandler() {\n+                @Override\n+                public void onSuccess() {\n+                    CallbackHelper.callbackSuccess(jsSetEmailContext, null);\n+                }\n \n-        @Override\n-        public void onFailure(EmailUpdateError error) {\n-          try {\n-            JSONObject errorObject = new JSONObject(\"{'error' : '\" + error.getMessage() + \"'}\");\n-            CallbackHelper.callbackError(jsSetEmailContext, errorObject);\n-          } catch (JSONException e) {\n-            e.printStackTrace();\n-          }\n-        }\n-      });\n+                @Override\n+                public void onFailure(EmailUpdateError error) {\n+                    try {\n+                        JSONObject errorObject = new JSONObject(\"{'error' : '\" + error.getMessage() + \"'}\");\n+                        CallbackHelper.callbackError(jsSetEmailContext, errorObject);\n+                    } catch (JSONException e) {\n+                        e.printStackTrace();\n+                    }\n+                }\n+            });\n \n-      return true;\n-    } catch (Throwable t) {\n-      t.printStackTrace();\n-      return false;\n+            return true;\n+        } catch (Throwable t) {\n+            t.printStackTrace();\n+            return false;\n+        }\n     }\n-  }\n-\n-  public static boolean logoutEmail(CallbackContext callbackContext) {\n-    final CallbackContext jsSetEmailContext = callbackContext;\n-    OneSignal.logoutEmail(new EmailUpdateHandler() {\n-      @Override\n-      public void onSuccess() {\n-        CallbackHelper.callbackSuccess(jsSetEmailContext, null);\n-      }\n \n-      @Override\n-      public void onFailure(EmailUpdateError error) {\n-        try {\n-          JSONObject errorObject = new JSONObject(\"{'error' : '\" + error.getMessage() + \"'}\");\n-          CallbackHelper.callbackError(jsSetEmailContext, errorObject);\n-        } catch (JSONException e) {\n-          e.printStackTrace();\n-        }\n-      }\n-    });\n+    public static boolean logoutEmail(CallbackContext callbackContext) {\n+        final CallbackContext jsSetEmailContext = callbackContext;\n+        OneSignal.logoutEmail(new EmailUpdateHandler() {\n+            @Override\n+            public void onSuccess() {\n+                CallbackHelper.callbackSuccess(jsSetEmailContext, null);\n+            }\n \n-    return true;\n-  }\n+            @Override\n+            public void onFailure(EmailUpdateError error) {\n+                try {\n+                    JSONObject errorObject = new JSONObject(\"{'error' : '\" + error.getMessage() + \"'}\");\n+                    CallbackHelper.callbackError(jsSetEmailContext, errorObject);\n+                } catch (JSONException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        });\n \n-  public static void syncHashedEmail(JSONArray data) {\n-    try {\n-      OneSignal.syncHashedEmail(data.getString(0));\n-    } catch(Throwable t) {\n-      t.printStackTrace();\n+        return true;\n     }\n-  }\n }"
  },
  {
    "sha": "c60f21620aba11fbd542ec0602a68788bd1ef284",
    "filename": "src/android/com/plugin/gcm/OneSignalInAppMessagingController.java",
    "status": "modified",
    "additions": 71,
    "deletions": 54,
    "changes": 125,
    "blob_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/blob/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/android/com/plugin/gcm/OneSignalInAppMessagingController.java",
    "raw_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/raw/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/android/com/plugin/gcm/OneSignalInAppMessagingController.java",
    "contents_url": "https://api.github.com/repos/OneSignal/OneSignal-Cordova-SDK/contents/src/android/com/plugin/gcm/OneSignalInAppMessagingController.java?ref=85b2a1eab53c13893fe64a57fe4dd5890fa386e7",
    "patch": "@@ -1,76 +1,93 @@\n package com.plugin.gcm;\n \n-import org.apache.cordova.CallbackContext;\n+import com.onesignal.OneSignal;\n \n+import org.apache.cordova.CallbackContext;\n import org.apache.cordova.PluginResult;\n import org.json.JSONArray;\n import org.json.JSONException;\n import org.json.JSONObject;\n \n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n \n-import com.onesignal.OneSignal;\n+public class OneSignalInAppMessagingController {\n \n+    // This is to prevent an issue where if two Javascript calls are made to OneSignal expecting a callback then only one would fire.\n+    private static void callbackSuccess(CallbackContext callbackContext, JSONObject jsonObject) {\n+        if (jsonObject == null) // in case there are no data\n+            jsonObject = new JSONObject();\n \n-public class OneSignalInAppMessagingController {\n+        PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, jsonObject);\n+        pluginResult.setKeepCallback(true);\n+        callbackContext.sendPluginResult(pluginResult);\n+    }\n \n-  // This is to prevent an issue where if two Javascript calls are made to OneSignal expecting a callback then only one would fire.\n-  private static void callbackSuccess(CallbackContext callbackContext, JSONObject jsonObject) {\n-    if (jsonObject == null) // in case there are no data\n-      jsonObject = new JSONObject();\n+    public static boolean addTriggers(JSONArray data) {\n+        try {\n+            JSONObject triggersObject = data.getJSONObject(0);\n+            Map<String, Object> triggers = new HashMap<>();\n+            Iterator<String> keys = triggersObject.keys();\n \n-    PluginResult pluginResult = new PluginResult(PluginResult.Status.OK, jsonObject);\n-    pluginResult.setKeepCallback(true);\n-    callbackContext.sendPluginResult(pluginResult);\n-  }\n-  \n+            while (keys.hasNext()) {\n+                String key = keys.next();\n+                triggers.put(key, triggersObject.get(key));\n+            }\n \n-  public static boolean addTriggers(JSONArray data) {\n-    try {\n-      OneSignal.addTriggersFromJsonString(data.getJSONObject(0).toString());\n-      return true;\n-    } catch (JSONException e) {\n-      e.printStackTrace();\n-      return false;\n+            OneSignal.addTriggers(triggers);\n+            return true;\n+        } catch (JSONException e) {\n+            e.printStackTrace();\n+            return false;\n+        }\n     }\n-  }\n \n-  public static boolean removeTriggersForKeys(JSONArray data) {\n-    try{\n-      OneSignal.removeTriggersForKeysFromJsonArrayString(data.getString(0));\n-      return true;\n-    } catch (JSONException e){\n-      e.printStackTrace();\n-      return false;\n-    } \n-  }\n+    public static boolean removeTriggersForKeys(JSONArray data) {\n+        try {\n+            JSONArray triggerKeysArray = data.getJSONArray(0);\n+            List<String> triggerKeys = new ArrayList<>();\n+\n+            for (int i = 0; i < triggerKeysArray.length(); i++) {\n+                triggerKeys.add(triggerKeysArray.getString(i));\n+            }\n \n-  public static boolean getTriggerValueForKey(CallbackContext callbackContext, JSONArray data) {\n-    try {\n-      Object value = OneSignal.getTriggerValueForKey(data.getString(0));\n-      if (value == null) {\n-        callbackSuccess(callbackContext, new JSONObject());\n-      } else {\n-        callbackSuccess(callbackContext, new JSONObject(\n-          \"{value:\"\n-          + value.toString()\n-          + \"}\"));\n-      }\n-      return true;\n-    } catch (JSONException e){\n-      e.printStackTrace();\n-      return false;\n+            OneSignal.removeTriggersForKeys(triggerKeys);\n+            return true;\n+        } catch (JSONException e) {\n+            e.printStackTrace();\n+            return false;\n+        }\n     }\n-  }\n \n-  public static boolean pauseInAppMessages(JSONArray data) {\n-    try {\n-      OneSignal.pauseInAppMessages(data.getBoolean(0));\n-      return true;\n-    } catch (JSONException e){\n-      e.printStackTrace();\n-      return false;\n+    public static boolean getTriggerValueForKey(CallbackContext callbackContext, JSONArray data) {\n+        try {\n+            Object value = OneSignal.getTriggerValueForKey(data.getString(0));\n+            if (value == null) {\n+                callbackSuccess(callbackContext, new JSONObject());\n+            } else {\n+                callbackSuccess(callbackContext, new JSONObject(\n+                        \"{value:\"\n+                                + value.toString()\n+                                + \"}\"));\n+            }\n+            return true;\n+        } catch (JSONException e) {\n+            e.printStackTrace();\n+            return false;\n+        }\n     }\n-  }\n \n-}\n+    public static boolean pauseInAppMessages(JSONArray data) {\n+        try {\n+            OneSignal.pauseInAppMessages(data.getBoolean(0));\n+            return true;\n+        } catch (JSONException e) {\n+            e.printStackTrace();\n+            return false;\n+        }\n+    }\n \n+}"
  },
  {
    "sha": "cc35ef7bbdc33e6617c43653dca7ae9babb4c686",
    "filename": "src/android/com/plugin/gcm/OneSignalOutcomeController.java",
    "status": "modified",
    "additions": 9,
    "deletions": 9,
    "changes": 18,
    "blob_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/blob/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/android/com/plugin/gcm/OneSignalOutcomeController.java",
    "raw_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/raw/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/android/com/plugin/gcm/OneSignalOutcomeController.java",
    "contents_url": "https://api.github.com/repos/OneSignal/OneSignal-Cordova-SDK/contents/src/android/com/plugin/gcm/OneSignalOutcomeController.java?ref=85b2a1eab53c13893fe64a57fe4dd5890fa386e7",
    "patch": "@@ -2,12 +2,12 @@\n \n import android.util.Log;\n \n+import androidx.annotation.Nullable;\n+\n+import com.onesignal.OSOutcomeEvent;\n import com.onesignal.OneSignal;\n-import com.onesignal.OutcomeEvent;\n-import com.onesignal.OneSignal.OutcomeCallback;\n \n import org.apache.cordova.CallbackContext;\n-\n import org.json.JSONArray;\n import org.json.JSONException;\n import org.json.JSONObject;\n@@ -20,9 +20,9 @@ public static boolean sendUniqueOutcome(CallbackContext callbackContext, JSONArr\n     try {\n       final CallbackContext jsSendUniqueOutcomeCallback = callbackContext;\n       final String name = data.getString(0);\n-      OneSignal.sendUniqueOutcome(name, new OutcomeCallback(){\n+      OneSignal.sendUniqueOutcome(name, new OneSignal.OutcomeCallback(){\n         @Override\n-        public void onSuccess(OutcomeEvent outcomeEvent) {\n+        public void onSuccess(@Nullable OSOutcomeEvent outcomeEvent) {\n           if (outcomeEvent == null)\n             CallbackHelper.callbackSuccess(jsSendUniqueOutcomeCallback, new JSONObject());\n           else {\n@@ -45,9 +45,9 @@ public static boolean sendOutcome(CallbackContext callbackContext, JSONArray dat\n     try {\n       final CallbackContext jsSendOutcomeCallback = callbackContext;\n       final String name = data.getString(0);\n-      OneSignal.sendOutcome(name, new OutcomeCallback() {\n+      OneSignal.sendOutcome(name, new OneSignal.OutcomeCallback(){\n         @Override\n-        public void onSuccess(OutcomeEvent outcomeEvent) {\n+        public void onSuccess(@Nullable OSOutcomeEvent outcomeEvent) {\n           if (outcomeEvent == null)\n             CallbackHelper.callbackSuccess(jsSendOutcomeCallback, new JSONObject());\n           else {\n@@ -71,9 +71,9 @@ public static boolean sendOutcomeWithValue(CallbackContext callbackContext, JSON\n       final CallbackContext jsSendOutcomeWithValueCallback = callbackContext;\n       final String name = data.getString(0);\n       final float value = Double.valueOf(data.optDouble(1)).floatValue();\n-      OneSignal.sendOutcomeWithValue(name, value, new OutcomeCallback() {\n+      OneSignal.sendOutcomeWithValue(name, value,new OneSignal.OutcomeCallback(){\n         @Override\n-        public void onSuccess(OutcomeEvent outcomeEvent) {\n+        public void onSuccess(@Nullable OSOutcomeEvent outcomeEvent) {\n           if (outcomeEvent == null)\n             CallbackHelper.callbackSuccess(jsSendOutcomeWithValueCallback, new JSONObject());\n           else {"
  },
  {
    "sha": "d7a4e49213b12c4f1f7d1b1def7adfbfd52b128f",
    "filename": "src/android/com/plugin/gcm/OneSignalPush.java",
    "status": "modified",
    "additions": 19,
    "deletions": 73,
    "changes": 92,
    "blob_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/blob/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/android/com/plugin/gcm/OneSignalPush.java",
    "raw_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/raw/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/android/com/plugin/gcm/OneSignalPush.java",
    "contents_url": "https://api.github.com/repos/OneSignal/OneSignal-Cordova-SDK/contents/src/android/com/plugin/gcm/OneSignalPush.java?ref=85b2a1eab53c13893fe64a57fe4dd5890fa386e7",
    "patch": "@@ -1,7 +1,7 @@\n /**\n  * Modified MIT License\n  *\n- * Copyright 2017 OneSignal\n+ * Copyright 2021 OneSignal\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n@@ -28,24 +28,17 @@\n package com.plugin.gcm;\n \n import android.util.Log;\n+\n+import com.onesignal.OSInAppMessageAction;\n+import com.onesignal.OSNotificationReceivedEvent;\n+import com.onesignal.OneSignal;\n+\n import org.apache.cordova.CallbackContext;\n import org.apache.cordova.CordovaPlugin;\n import org.json.JSONArray;\n import org.json.JSONException;\n import org.json.JSONObject;\n \n-import com.onesignal.OneSignal;\n-import com.onesignal.OSNotification;\n-import com.onesignal.OSNotificationOpenResult;\n-import com.onesignal.OSInAppMessageAction;\n-import com.onesignal.OneSignal.NotificationOpenedHandler;\n-import com.onesignal.OneSignal.NotificationReceivedHandler;\n-import com.onesignal.OneSignal.InAppMessageClickHandler;\n-\n-import com.onesignal.OSPermissionObserver;\n-import com.onesignal.OSEmailSubscriptionObserver;\n-import com.onesignal.OSSubscriptionObserver;\n-\n public class OneSignalPush extends CordovaPlugin {\n   private static final String TAG = \"OneSignalPush\";\n \n@@ -127,22 +120,10 @@ public boolean init(CallbackContext callbackContext, JSONArray data) {\n       String googleProjectNumber = data.getString(1);\n \n       OneSignal.sdkType = \"cordova\";\n-      OneSignal.Builder builder = OneSignal.getCurrentOrNewInitBuilder();\n-      builder.unsubscribeWhenNotificationsAreDisabled(true);\n-      builder.filterOtherGCMReceivers(true);\n-      builder.setInAppMessageClickHandler(new CordovaInAppMessageClickHandler(inAppMessageClickedCallbackContext));\n \n-      OneSignal.init(this.cordova.getActivity(),\n-              googleProjectNumber,\n-              appId,\n-              new CordovaNotificationOpenedHandler(notifOpenedCallbackContext),\n-              new CordovaNotificationReceivedHandler(notifReceivedCallbackContext)\n-      );\n-\n-      // data.getJSONObject(2) is for iOS settings.\n-\n-      int displayOption = data.getInt(3);\n-      OneSignal.setInFocusDisplaying(displayOption);\n+      OneSignal.setInAppMessageClickHandler(new CordovaInAppMessageClickHandler(inAppMessageClickedCallbackContext));\n+      OneSignal.setAppId(appId);\n+      OneSignal.initWithContext(this.cordova.getActivity());\n \n       return true;\n     } catch (JSONException e) {\n@@ -155,7 +136,6 @@ public boolean init(CallbackContext callbackContext, JSONArray data) {\n   public boolean execute(String action, JSONArray data, CallbackContext callbackContext) {\n     boolean result = false;\n \n-\n     switch(action) {\n       case SET_NOTIFICATION_OPENED_HANDLER:\n         result = setNotificationOpenedHandler(callbackContext);\n@@ -173,10 +153,6 @@ public boolean execute(String action, JSONArray data, CallbackContext callbackCo\n         result = init(callbackContext, data);\n         break;\n \n-      case SET_IN_FOCUS_DISPLAYING:\n-        result = OneSignalController.setInFocusDisplaying(data);\n-        break;\n-\n       case ADD_PERMISSION_OBSERVER:\n         result = OneSignalObserverController.addPermissionObserver(callbackContext);\n         break;\n@@ -194,7 +170,7 @@ public boolean execute(String action, JSONArray data, CallbackContext callbackCo\n         break;\n \n       case GET_PERMISSION_SUBCRIPTION_STATE:\n-        result = OneSignalController.getPermissionSubscriptionState(callbackContext);\n+        result = OneSignalController.getDeviceState(callbackContext);\n         break;\n \n       case GET_IDS:\n@@ -213,16 +189,8 @@ public boolean execute(String action, JSONArray data, CallbackContext callbackCo\n         result = OneSignalController.registerForPushNotifications();\n         break;\n \n-      case ENABLE_VIBRATE:\n-        result = OneSignalController.enableVibrate(data);\n-        break;\n-\n-      case ENABLE_SOUND:\n-        result = OneSignalController.enableSound(data);\n-        break;\n-\n       case SET_SUBSCRIPTION:\n-        result = OneSignalController.setSubscription(data);\n+        result = OneSignalController.disablePush(data);\n         break;\n \n       case POST_NOTIFICATION:\n@@ -233,10 +201,6 @@ public boolean execute(String action, JSONArray data, CallbackContext callbackCo\n         OneSignalController.promptLocation();\n         break;\n \n-      case SYNC_HASHED_EMAIL:\n-        OneSignalEmailController.syncHashedEmail(data);\n-        break;\n-\n       case SET_LOG_LEVEL:\n         OneSignalController.setLogLevel(data);\n         break;\n@@ -322,45 +286,27 @@ public boolean execute(String action, JSONArray data, CallbackContext callbackCo\n    * Handlers\n    */\n \n-  private class CordovaNotificationReceivedHandler implements NotificationReceivedHandler {\n-\n-    private CallbackContext jsNotificationReceivedCallBack;\n-\n-    public CordovaNotificationReceivedHandler(CallbackContext inCallbackContext) {\n-      jsNotificationReceivedCallBack = inCallbackContext;\n-    }\n-\n-    @Override\n-    public void notificationReceived(OSNotification notification) {\n-      try {\n-        CallbackHelper.callbackSuccess(jsNotificationReceivedCallBack, new JSONObject(notification.stringify()));\n-      }\n-      catch (Throwable t) {\n-        t.printStackTrace();\n-      }\n-    }\n-  }\n-\n-  private class CordovaNotificationOpenedHandler implements NotificationOpenedHandler {\n+  private class CordovaNotificationInForegroundHandler implements OneSignal.OSNotificationWillShowInForegroundHandler {\n \n     private CallbackContext jsNotificationOpenedCallBack;\n \n-    public CordovaNotificationOpenedHandler(CallbackContext inCallbackContext) {\n+    public CordovaNotificationInForegroundHandler(CallbackContext inCallbackContext) {\n       jsNotificationOpenedCallBack = inCallbackContext;\n     }\n \n     @Override\n-    public void notificationOpened(OSNotificationOpenResult result) {\n+    public void notificationWillShowInForeground(OSNotificationReceivedEvent notificationReceivedEvent) {\n       try {\n-        CallbackHelper.callbackSuccess(jsNotificationOpenedCallBack, new JSONObject(result.stringify()));\n+        notificationReceivedEvent.complete(notificationReceivedEvent.getNotification());\n+        CallbackHelper.callbackSuccess(jsNotificationOpenedCallBack, new JSONObject(notificationReceivedEvent.toJSONObject().toString()));\n       }\n       catch (Throwable t) {\n         t.printStackTrace();\n       }\n     }\n   }\n \n-  private class CordovaInAppMessageClickHandler implements InAppMessageClickHandler {\n+  private class CordovaInAppMessageClickHandler implements OneSignal.OSInAppMessageClickHandler {\n \n     private CallbackContext jsInAppMessageClickedCallback;\n \n@@ -381,7 +327,7 @@ public void inAppMessageClicked(OSInAppMessageAction result) {\n \n   @Override\n   public void onDestroy() {\n-    OneSignal.removeNotificationOpenedHandler();\n-    OneSignal.removeNotificationReceivedHandler();\n+    OneSignal.setNotificationOpenedHandler(null);\n+    OneSignal.setNotificationWillShowInForegroundHandler(null);\n   }\n }"
  },
  {
    "sha": "ff4181a5866d2ff18fadb59ebd4985380698a3b7",
    "filename": "src/ios/OneSignalPush.h",
    "status": "modified",
    "additions": 55,
    "deletions": 51,
    "changes": 106,
    "blob_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/blob/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/ios/OneSignalPush.h",
    "raw_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/raw/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/ios/OneSignalPush.h",
    "contents_url": "https://api.github.com/repos/OneSignal/OneSignal-Cordova-SDK/contents/src/ios/OneSignalPush.h?ref=85b2a1eab53c13893fe64a57fe4dd5890fa386e7",
    "patch": "@@ -33,56 +33,60 @@\n \n @interface OneSignalPush : CDVPlugin <OSPermissionObserver, OSSubscriptionObserver, OSEmailSubscriptionObserver>\n \n-- (void)setNotificationReceivedHandler:(CDVInvokedUrlCommand*)command;\n-- (void)setNotificationOpenedHandler:(CDVInvokedUrlCommand*)command;\n-- (void)init:(CDVInvokedUrlCommand*)command;\n-\n-- (void)setInFocusDisplaying:(CDVInvokedUrlCommand*)command;\n-- (void)getPermissionSubscriptionState:(CDVInvokedUrlCommand*)command;\n-\n-- (void)addPermissionObserver:(CDVInvokedUrlCommand*)command;\n-- (void)addSubscriptionObserver:(CDVInvokedUrlCommand*)command;\n-- (void)addEmailSubscriptionObserver:(CDVInvokedUrlCommand *)command;\n-\n-- (void)getTags:(CDVInvokedUrlCommand*)command;\n-- (void)getIds:(CDVInvokedUrlCommand*)command;\n-- (void)sendTags:(CDVInvokedUrlCommand*)command;\n-- (void)deleteTags:(CDVInvokedUrlCommand*)command;\n-- (void)promptForPushNotificationsWithUserResponse:(CDVInvokedUrlCommand*)command;\n-- (void)registerForPushNotifications:(CDVInvokedUrlCommand*)command;\n-- (void)setSubscription:(CDVInvokedUrlCommand*)command;\n-- (void)postNotification:(CDVInvokedUrlCommand*)command;\n-- (void)setLogLevel:(CDVInvokedUrlCommand*)command;\n-- (void)promptLocation:(CDVInvokedUrlCommand*)command;\n-- (void)syncHashedEmail:(CDVInvokedUrlCommand*)command;\n-- (void)setLocationShared:(CDVInvokedUrlCommand *)command;\n-\n-//email\n-- (void)setEmail:(CDVInvokedUrlCommand *)command;\n-- (void)setUnauthenticatedEmail:(CDVInvokedUrlCommand *)command;\n-- (void)logoutEmail:(CDVInvokedUrlCommand *)command;\n-\n-// Android Only\n-- (void)enableVibrate:(CDVInvokedUrlCommand*)command;\n-- (void)enableSound:(CDVInvokedUrlCommand*)command;\n-- (void)clearOneSignalNotifications:(CDVInvokedUrlCommand*)command;\n-\n-- (void)userProvidedPrivacyConsent:(CDVInvokedUrlCommand *)command;\n-- (void)setRequiresUserPrivacyConsent:(CDVInvokedUrlCommand *)command;\n-- (void)provideUserConsent:(CDVInvokedUrlCommand *)command;\n-\n-- (void)setExternalUserId:(CDVInvokedUrlCommand *)command;\n-- (void)removeExternalUserId:(CDVInvokedUrlCommand *)command;\n+- (void)setProvidesNotificationSettingsView:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)setNotificationWillShowInForegroundHandler:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)setNotificationOpenedHandler:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)init:(CDVInvokedUrlCommand* _Nonnull)command;\n+\n+- (void)getDeviceState:(CDVInvokedUrlCommand* _Nonnull)command;\n+\n+- (void)addPermissionObserver:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)addSubscriptionObserver:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)addEmailSubscriptionObserver:(CDVInvokedUrlCommand* _Nonnull)command;\n+\n+- (void)setLogLevel:(CDVInvokedUrlCommand* _Nonnull)command;\n+\n+- (void)getTags:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)sendTags:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)deleteTags:(CDVInvokedUrlCommand* _Nonnull)command;\n+\n+- (void)promptForPushNotificationsWithUserResponse:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)registerForProvisionalAuthorization:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)disablePush:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)postNotification:(CDVInvokedUrlCommand* _Nonnull)command;\n+\n+// Email\n+- (void)setEmail:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)setUnauthenticatedEmail:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)logoutEmail:(CDVInvokedUrlCommand* _Nonnull)command;\n+\n+// Start Android Only\n+- (void)clearOneSignalNotifications:(CDVInvokedUrlCommand* _Nonnull)command;\n+// End Android Only\n+\n+- (void)consentGranted:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)requiresUserPrivacyConsent:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)setRequiresUserPrivacyConsent:(CDVInvokedUrlCommand* _Nonnull)command;\n+\n+- (void)setExternalUserId:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)removeExternalUserId:(CDVInvokedUrlCommand* _Nonnull)command;\n     \n-// in app\n-- (void)setInAppMessageClickHandler:(CDVInvokedUrlCommand*)command;\n-- (void)addTriggers:(CDVInvokedUrlCommand*)command;\n-- (void)removeTriggersForKeys:(CDVInvokedUrlCommand*)command;\n-- (void)getTriggerValueForKey:(CDVInvokedUrlCommand*)command;\n-- (void)pauseInAppMessages:(CDVInvokedUrlCommand*)command;\n-\n-// outcomes\n-- (void)sendOutcome:(CDVInvokedUrlCommand*)command;\n-- (void)sendUniqueOutcome:(CDVInvokedUrlCommand*)command;\n-- (void)sendOutcomeWithValue:(CDVInvokedUrlCommand*)command;\n+// In App Message\n+- (void)setLaunchURLsInApp:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)setInAppMessageClickHandler:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)addTriggers:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)removeTriggersForKeys:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)getTriggerValueForKey:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)pauseInAppMessages:(CDVInvokedUrlCommand* _Nonnull)command;\n+\n+// Outcomes\n+- (void)sendOutcome:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)sendUniqueOutcome:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)sendOutcomeWithValue:(CDVInvokedUrlCommand* _Nonnull)command;\n+\n+// Location\n+- (void)promptLocation:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)setLocationShared:(CDVInvokedUrlCommand* _Nonnull)command;\n+- (void)isLocationShared:(CDVInvokedUrlCommand* _Nonnull)command;\n+\n @end"
  },
  {
    "sha": "f2b5ced44853ef8c7a866fa0c992014cb96b0abf",
    "filename": "src/ios/OneSignalPush.m",
    "status": "modified",
    "additions": 91,
    "deletions": 108,
    "changes": 199,
    "blob_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/blob/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/ios/OneSignalPush.m",
    "raw_url": "https://github.com/OneSignal/OneSignal-Cordova-SDK/raw/85b2a1eab53c13893fe64a57fe4dd5890fa386e7/src/ios/OneSignalPush.m",
    "contents_url": "https://api.github.com/repos/OneSignal/OneSignal-Cordova-SDK/contents/src/ios/OneSignalPush.m?ref=85b2a1eab53c13893fe64a57fe4dd5890fa386e7",
    "patch": "@@ -1,7 +1,7 @@\n /**\n  * Modified MIT License\n  * \n- * Copyright 2017 OneSignal\n+ * Copyright 2021 OneSignal\n  *\n  * Permission is hereby granted, free of charge, to any person obtaining a copy\n  * of this software and associated documentation files (the \"Software\"), to deal\n@@ -31,7 +31,7 @@\n #import \"OneSignalPush.h\"\n #import <OneSignal/OneSignal.h>\n \n-NSString* notificationReceivedCallbackId;\n+NSString* notificationWillShowInForegoundCallbackId;\n NSString* notificationOpenedCallbackId;\n NSString* getTagsCallbackId;\n NSString* getIdsCallbackId;\n@@ -64,15 +64,15 @@ void failureCallback(NSString* callbackId, NSDictionary* data) {\n     [pluginCommandDelegate sendPluginResult:commandResult callbackId:callbackId];\n }\n \n-void processNotificationReceived(OSNotification* _notif) {\n+void processNotificationWillShowInForeground(OSNotification* _notif) {\n     NSString * data = [_notif stringify];\n     NSError *jsonError;\n     NSData *objectData = [data dataUsingEncoding:NSUTF8StringEncoding];\n     NSDictionary *json = [NSJSONSerialization JSONObjectWithData:objectData\n                                                          options:NSJSONReadingMutableContainers\n                                                            error:&jsonError];\n     if(!jsonError) {\n-        successCallback(notificationReceivedCallbackId, json);\n+        successCallback(notificationWillShowInForegoundCallbackId, json);\n         notification = nil;\n     }\n }\n@@ -90,27 +90,11 @@ void processNotificationOpened(OSNotificationOpenedResult* result) {\n     }\n }\n \n-void initOneSignalObject(NSDictionary* launchOptions, const char* appId, int displayOption, BOOL inAppLaunchURL, BOOL autoPrompt, BOOL fromColdStart) {\n-    [OneSignal setValue:@\"cordova\" forKey:@\"mSDKType\"];\n-\n-    NSString* appIdStr = (appId ? [NSString stringWithUTF8String: appId] : nil);    \n-    NSDictionary *iOSSettings = initialLaunchFired ? @{kOSSettingsKeyAutoPrompt : @(autoPrompt),\n-                                                       kOSSettingsKeyInFocusDisplayOption : @(displayOption),\n-                                                       kOSSettingsKeyInAppLaunchURL : @(inAppLaunchURL),\n-                                                       @\"kOSSettingsKeyInOmitNoAppIdLogging\": @(fromColdStart)} : @{@\"kOSSettingsKeyInOmitNoAppIdLogging\": @(fromColdStart),\n-                                                                                                                          kOSSettingsKeyAutoPrompt : @false\n-                                                                                                                        };\n-    \n-    [OneSignal initWithLaunchOptions:launchOptions appId:appIdStr handleNotificationReceived:^(OSNotification* _notif) {\n-        notification = _notif;\n-        if (pluginCommandDelegate)\n-            processNotificationReceived(_notif);\n-    } handleNotificationAction:^(OSNotificationOpenedResult* openResult) {\n-        actionNotification = openResult;\n-        if (pluginCommandDelegate)\n-            processNotificationOpened(openResult);\n-    } settings: iOSSettings];\n-\n+void initOneSignalObject(NSDictionary* launchOptions, const char* appId) {\n+    NSString* appIdStr = (appId ? [NSString stringWithUTF8String: appId] : nil);\n+    [OneSignal setMSDKType:@\"cordova\"];\n+    [OneSignal setAppId:appIdStr];\n+    [OneSignal initWithLaunchOptions:launchOptions];\n     initialLaunchFired = true;\n }\n \n@@ -138,7 +122,7 @@ + (void)load {\n \n static Class delegateClass = nil;\n \n-- (void) setOneSignalCordovaDelegate:(id<UIApplicationDelegate>)delegate {\n+- (void)setOneSignalCordovaDelegate:(id<UIApplicationDelegate>)delegate {\n     if(delegateClass != nil)\n         return;\n     delegateClass = [delegate class];\n@@ -149,7 +133,7 @@ - (void) setOneSignalCordovaDelegate:(id<UIApplicationDelegate>)delegate {\n }\n \n - (BOOL)oneSignalApplication:(UIApplication*)application didFinishLaunchingWithOptions:(NSDictionary*)launchOptions {\n-    initOneSignalObject(launchOptions, nil, 1, YES, NO, YES);\n+    initOneSignalObject(launchOptions, nil);\n     \n     if ([self respondsToSelector:@selector(oneSignalApplication:didFinishLaunchingWithOptions:)])\n         return [self oneSignalApplication:application didFinishLaunchingWithOptions:launchOptions];\n@@ -168,12 +152,17 @@ - (void)onOSSubscriptionChanged:(OSSubscriptionStateChanges*)stateChanges {\n     successCallback(subscriptionObserverCallbackId, [stateChanges toDictionary]);\n }\n \n--(void)onOSEmailSubscriptionChanged:(OSEmailSubscriptionStateChanges *)stateChanges {\n+- (void)onOSEmailSubscriptionChanged:(OSEmailSubscriptionStateChanges *)stateChanges {\n     successCallback(emailSubscriptionCallbackId, [stateChanges toDictionary]);\n }\n \n-- (void)setNotificationReceivedHandler:(CDVInvokedUrlCommand*)command {\n-    notificationReceivedCallbackId = command.callbackId;\n+- (void)setProvidesNotificationSettingsView:(CDVInvokedUrlCommand *)command {\n+    BOOL providesView = command.arguments[0];\n+    [OneSignal setProvidesNotificationSettingsView:providesView];\n+}\n+\n+- (void)setNotificationWillShowInForegroundHandler:(CDVInvokedUrlCommand*)command {\n+    notificationWillShowInForegoundCallbackId = command.callbackId;\n }\n \n - (void)setNotificationOpenedHandler:(CDVInvokedUrlCommand*)command {\n@@ -185,38 +174,51 @@ - (void)init:(CDVInvokedUrlCommand*)command {\n     pluginCommandDelegate = self.commandDelegate;\n \n     NSString* appId = (NSString*)command.arguments[0];\n-    NSDictionary* settings = command.arguments[2] == [NSNull null] ? @{} : (NSDictionary*)command.arguments[2];\n-    \n-    BOOL inAppLaunchURL = settings[@\"kOSSettingsKeyInAppLaunchURL\"] ? [(NSNumber*)settings[@\"kOSSettingsKeyInAppLaunchURL\"] boolValue] : YES;\n-    BOOL autoPrompt = settings[@\"kOSSettingsKeyAutoPrompt\"] ? [(NSNumber*)settings[@\"kOSSettingsKeyAutoPrompt\"] boolValue] : YES;\n-\n-    int displayOption = [(NSNumber*)command.arguments[3] intValue];\n-\n-    initOneSignalObject(nil, [appId UTF8String], displayOption, inAppLaunchURL, autoPrompt, NO);\n+    initOneSignalObject(nil, [appId UTF8String]);\n     \n     if (notification)\n-        processNotificationReceived(notification);\n+        processNotificationWillShowInForeground(notification);\n     if (actionNotification)\n         processNotificationOpened(actionNotification);\n }\n \n+- (void)getDeviceState:(CDVInvokedUrlCommand*)command {\n+    successCallback(command.callbackId, [[OneSignal getDeviceState] jsonRepresentation]);\n+}\n+\n+- (void)addPermissionObserver:(CDVInvokedUrlCommand*)command {\n+    bool first = permissionObserverCallbackId  == nil;\n+    permissionObserverCallbackId = command.callbackId;\n+    if (first)\n+        [OneSignal addPermissionObserver:self];\n+}\n+\n+- (void)addSubscriptionObserver:(CDVInvokedUrlCommand*)command {\n+    bool first = subscriptionObserverCallbackId  == nil;\n+    subscriptionObserverCallbackId = command.callbackId;\n+    if (first)\n+        [OneSignal addSubscriptionObserver:self];\n+}\n+\n+- (void)addEmailSubscriptionObserver:(CDVInvokedUrlCommand *)command {\n+    bool first = emailSubscriptionCallbackId == nil;\n+    emailSubscriptionCallbackId = command.callbackId;\n+    if (first)\n+        [OneSignal addEmailSubscriptionObserver:self];\n+}\n+\n+- (void)setLogLevel:(CDVInvokedUrlCommand*)command {\n+    NSDictionary* options = command.arguments[0];\n+    [OneSignal setLogLevel:[options[@\"logLevel\"] intValue] visualLevel:[options[@\"visualLevel\"] intValue]];\n+}\n+\n - (void)getTags:(CDVInvokedUrlCommand*)command {\n     getTagsCallbackId = command.callbackId;\n     [OneSignal getTags:^(NSDictionary* result) {\n         successCallback(getTagsCallbackId, result);\n     }];\n }\n \n-- (void)getIds:(CDVInvokedUrlCommand*)command {\n-    getIdsCallbackId = command.callbackId;\n-    [OneSignal IdsAvailable:^(NSString* userId, NSString* pushToken) {\n-        if (pushToken == nil)\n-            pushToken = @\"\";\n-        \n-        successCallback(getIdsCallbackId, @{@\"userId\" : userId, @\"pushToken\" : pushToken});\n-    }];\n-}\n-\n - (void)sendTags:(CDVInvokedUrlCommand*)command {\n     [OneSignal sendTags:command.arguments[0]];\n }\n@@ -225,23 +227,19 @@ - (void)deleteTags:(CDVInvokedUrlCommand*)command {\n     [OneSignal deleteTags:command.arguments];\n }   \n \n-- (void)registerForPushNotifications:(CDVInvokedUrlCommand*)command {\n-    [OneSignal registerForPushNotifications];\n-}\n-    \n-- (void)setLocationShared:(CDVInvokedUrlCommand *)command {\n-   [OneSignal setLocationShared:[command.arguments[0] boolValue]];\n-}\n-\n - (void)promptForPushNotificationsWithUserResponse:(CDVInvokedUrlCommand*)command {\n    promptForPushNotificationsWithUserResponseCallbackId = command.callbackId;\n     [OneSignal promptForPushNotificationsWithUserResponse:^(BOOL accepted) {\n         successCallback(promptForPushNotificationsWithUserResponseCallbackId, @{@\"accepted\": (accepted ? @\"true\" : @\"false\")});\n     }];\n }\n \n-- (void)setSubscription:(CDVInvokedUrlCommand*)command {\n-    [OneSignal setSubscription:[command.arguments[0] boolValue]];\n+- (void)registerForProvisionalAuthorization:(CDVInvokedUrlCommand *)command {\n+\n+}\n+\n+- (void)disablePush:(CDVInvokedUrlCommand*)command {\n+    [OneSignal disablePush:[command.arguments[0] boolValue]];\n }\n \n - (void)postNotification:(CDVInvokedUrlCommand*)command {\n@@ -260,54 +258,6 @@ - (void)postNotification:(CDVInvokedUrlCommand*)command {\n     }];\n }\n \n-- (void)promptLocation:(CDVInvokedUrlCommand*)command {\n-   [OneSignal promptLocation];\n-}\n-\n-- (void)syncHashedEmail:(CDVInvokedUrlCommand*)command {\n-   [OneSignal syncHashedEmail:command.arguments[0]];\n-}\n-\n-- (void)setLogLevel:(CDVInvokedUrlCommand*)command {\n-    NSDictionary* options = command.arguments[0];\n-    [OneSignal setLogLevel:[options[@\"logLevel\"] intValue] visualLevel:[options[@\"visualLevel\"] intValue]];\n-}\n-\n-// Android only\n-- (void)enableVibrate:(CDVInvokedUrlCommand*)command {}\n-- (void)enableSound:(CDVInvokedUrlCommand*)command {}\n-- (void)clearOneSignalNotifications:(CDVInvokedUrlCommand*)command {}\n-\n-\n-- (void)setInFocusDisplaying:(CDVInvokedUrlCommand*)command {\n-    OneSignal.inFocusDisplayType = [(NSNumber*)command.arguments[0] intValue];\n-}\n-\n-- (void)getPermissionSubscriptionState:(CDVInvokedUrlCommand*)command {\n-    successCallback(command.callbackId, [[OneSignal getPermissionSubscriptionState] toDictionary]);\n-}\n-\n-- (void)addPermissionObserver:(CDVInvokedUrlCommand*)command {\n-    bool first = permissionObserverCallbackId  == nil;\n-    permissionObserverCallbackId = command.callbackId;\n-    if (first)\n-        [OneSignal addPermissionObserver:self];\n-}\n-\n-- (void)addSubscriptionObserver:(CDVInvokedUrlCommand*)command {\n-    bool first = subscriptionObserverCallbackId  == nil;\n-    subscriptionObserverCallbackId = command.callbackId;\n-    if (first)\n-        [OneSignal addSubscriptionObserver:self];\n-}\n-\n-- (void)addEmailSubscriptionObserver:(CDVInvokedUrlCommand *)command {\n-    bool first = emailSubscriptionCallbackId == nil;\n-    emailSubscriptionCallbackId = command.callbackId;\n-    if (first)\n-        [OneSignal addEmailSubscriptionObserver:self];\n-}\n-\n - (void)setEmail:(CDVInvokedUrlCommand *)command {\n     setEmailCallbackId = command.callbackId;\n     \n@@ -343,6 +293,19 @@ - (void)logoutEmail:(CDVInvokedUrlCommand *)command {\n     }];\n }\n \n+\n+// Start Android only\n+- (void)clearOneSignalNotifications:(CDVInvokedUrlCommand*)command {}\n+// Finish Android only\n+\n+- (void)consentGranted:(CDVInvokedUrlCommand *)command {\n+    \n+}\n+\n+- (void)requiresUserPrivacyConsent:(CDVInvokedUrlCommand *)command {\n+\n+}\n+\n - (void)userProvidedPrivacyConsent:(CDVInvokedUrlCommand *)command {\n     CDVPluginResult* commandResult = [CDVPluginResult resultWithStatus:CDVCommandStatus_OK messageAsBool:!OneSignal.requiresUserPrivacyConsent];\n     commandResult.keepCallback = @1;\n@@ -371,21 +334,29 @@ - (void)setExternalUserId:(CDVInvokedUrlCommand *)command {\n     [OneSignal setExternalUserId:externalId withExternalIdAuthHashToken:authHashToken withSuccess:^(NSDictionary *results) {\n         successCallback(setExternalIdCallbackId, results);\n     } withFailure: ^(NSError* error) {\n-        [OneSignal onesignal_Log:ONE_S_LL_VERBOSE message:[NSString stringWithFormat:@\"Set external user id Failure with error: %@\", error]];\n+        [OneSignal onesignalLog:ONE_S_LL_VERBOSE message:[NSString stringWithFormat:@\"Set external user id Failure with error: %@\", error]];\n         failureCallback(setExternalIdCallbackId, error.userInfo);\n     }];\n }\n \n - (void)removeExternalUserId:(CDVInvokedUrlCommand *)command {\n     [OneSignal removeExternalUserId:^(NSDictionary *results) {\n         successCallback(command.callbackId, results);\n+    } withFailure:^(NSError* error) {\n+        [OneSignal onesignalLog:ONE_S_LL_VERBOSE message:[NSString stringWithFormat:@\"Remove external user id Failure with error: %@\", error]];\n+        failureCallback(command.callbackId, error.userInfo);\n     }];\n }\n \n /**\n  * In-App Messaging\n  */\n \n+- (void)setLaunchURLsInApp:(CDVInvokedUrlCommand *)command {\n+    BOOL launchInApp = command.arguments[0];\n+    [OneSignal setLaunchURLsInApp:launchInApp];\n+}\n+\n - (void)setInAppMessageClickHandler:(CDVInvokedUrlCommand*)command {\n     [OneSignal setInAppMessageClickHandler:^(OSInAppMessageAction* action) {\n             NSDictionary *result = @{\n@@ -446,4 +417,16 @@ - (void)sendOutcomeWithValue:(CDVInvokedUrlCommand*)command {\n     }];\n }\n \n+- (void)promptLocation:(CDVInvokedUrlCommand*)command {\n+  [OneSignal promptLocation];\n+}\n+\n+- (void)setLocationShared:(CDVInvokedUrlCommand *)command {\n+  [OneSignal setLocationShared:[command.arguments[0] boolValue]];\n+}\n+\n+- (void)isLocationShared:(CDVInvokedUrlCommand *)command {\n+    \n+}\n+\n @end"
  }
]
