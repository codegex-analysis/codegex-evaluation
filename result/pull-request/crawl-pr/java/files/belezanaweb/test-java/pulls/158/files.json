[
  {
    "sha": "1c6d2181f3b7f29328f6a2ba74bc653b6d89c25c",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 17,
    "deletions": 1,
    "changes": 18,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/pom.xml",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/pom.xml",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/pom.xml?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -36,7 +36,23 @@\n \t\t\t<artifactId>spring-boot-starter-test</artifactId>\n \t\t\t<scope>test</scope>\n \t\t</dependency>\n-\t</dependencies>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <version>4.12</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>commons-logging</groupId>\n+            <artifactId>commons-logging</artifactId>\n+            <version>1.1.1</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.google.code.gson</groupId>\n+            <artifactId>gson</artifactId>\n+            <version>2.6.2</version>\n+        </dependency>\n+    </dependencies>\n \n \t<build>\n \t\t<plugins>"
  },
  {
    "sha": "105a2294d3ab7ac05285e468bb653795f7e165c1",
    "filename": "src/main/java/br/com/blz/testjava/Repository/WarehouseRepository.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/Repository/WarehouseRepository.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/Repository/WarehouseRepository.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/Repository/WarehouseRepository.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,36 @@\n+package br.com.blz.testjava.Repository;\n+\n+import br.com.blz.testjava.entity.Warehouse;\n+import br.com.blz.testjava.service.ProdutoService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Repository;\n+\n+import java.util.*;\n+\n+@Repository\n+public class WarehouseRepository {\n+\n+    Logger logger = LoggerFactory.getLogger(ProdutoService.class);\n+\n+    private final Set<Warehouse> warehouses = new HashSet<>();\n+\n+    public void save(Warehouse warehouse) {\n+            this.warehouses.add(warehouse);\n+    }\n+\n+    public Set<Warehouse> list() {\n+        return Collections.unmodifiableSet(this.warehouses);\n+    }\n+\n+    public Warehouse findWarehouseByUf(String uf){\n+        for (Warehouse item : this.warehouses) {\n+            if (item.getLocality().equals(uf)){\n+                return item;\n+            }\n+        }\n+        logger.error(\"Warehouse n√£o encontrada!\");\n+        throw new NoSuchElementException();\n+    }\n+\n+}"
  },
  {
    "sha": "8f770dc8bb867708bb32cd6df80be3eeb0e8af76",
    "filename": "src/main/java/br/com/blz/testjava/TestJavaApplication.java",
    "status": "modified",
    "additions": 17,
    "deletions": 1,
    "changes": 18,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/TestJavaApplication.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/TestJavaApplication.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/TestJavaApplication.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -1,12 +1,28 @@\n package br.com.blz.testjava;\n \n+import br.com.blz.testjava.Repository.WarehouseRepository;\n+import br.com.blz.testjava.entity.Warehouse;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.ApplicationArguments;\n+import org.springframework.boot.ApplicationRunner;\n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n \n @SpringBootApplication(scanBasePackageClasses = TestJavaApplication.class)\n-public class TestJavaApplication {\n+public class TestJavaApplication implements ApplicationRunner {\n+\n+    @Autowired\n+    WarehouseRepository warehouseRepository;\n+\n+    @Override\n+    public void run(ApplicationArguments args) throws Exception {\n+        warehouseRepository.save(new Warehouse(\"SP\", \"ECOMMERCE\"));\n+        warehouseRepository.save(new Warehouse(\"MOEMA\", \"PHYSICAL_STORE\"));\n+    }\n \n \tpublic static void main(String[] args) {\n \t\tSpringApplication.run(TestJavaApplication.class, args);\n \t}\n+\n+\n }"
  },
  {
    "sha": "55906f415ea130545396c09fa12c4a0119d05750",
    "filename": "src/main/java/br/com/blz/testjava/controller/ProdutoController.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/controller/ProdutoController.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/controller/ProdutoController.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/controller/ProdutoController.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,66 @@\n+package br.com.blz.testjava.controller;\n+\n+import br.com.blz.testjava.entity.dto.ProdutoEntradaDTO;\n+import br.com.blz.testjava.entity.dto.ProdutoRetornoDTO;\n+import br.com.blz.testjava.service.ProdutoService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+import org.springframework.web.util.UriComponentsBuilder;\n+\n+import java.net.URI;\n+\n+@RestController\n+@RequestMapping(value = \"/produto\")\n+public class ProdutoController {\n+\n+    @Autowired\n+    ProdutoService produtoService;\n+    Logger logger = LoggerFactory.getLogger(ProdutoService.class);\n+\n+    @GetMapping(\"/{sku}\")\n+    public ResponseEntity<ProdutoRetornoDTO> getProduto(@PathVariable Long sku) {\n+        try{\n+            return ResponseEntity.ok(produtoService.getProduto(sku));\n+        } catch (Exception e){\n+            logger.error(\"Erro ao buscar o produto\");\n+            return ResponseEntity.notFound().build();\n+        }\n+    }\n+\n+    @PostMapping\n+    public ResponseEntity<ProdutoRetornoDTO> salvar(@RequestBody ProdutoEntradaDTO dto, UriComponentsBuilder uriBuilder){\n+        try {\n+            produtoService.save(dto);\n+            URI uri = uriBuilder.path(\"/produto/{sku}\").buildAndExpand(dto.getSku()).toUri();\n+            return ResponseEntity.created(uri).body(produtoService.getProduto(dto.getSku()));\n+        } catch (Exception e){\n+            logger.error(\"Erro ao salvar o produto\");\n+            return ResponseEntity.badRequest().build();\n+        }\n+    }\n+\n+    @PutMapping(\"/{sku}\")\n+    public ResponseEntity<ProdutoRetornoDTO> atualizar(@RequestBody ProdutoEntradaDTO dto, @PathVariable Long sku) {\n+        try{\n+            return ResponseEntity.ok(produtoService.atualizar(sku, dto));\n+        } catch (Exception e){\n+            logger.error(\"Erro ao atualizar o produto\");\n+            return ResponseEntity.notFound().build();\n+        }\n+    }\n+\n+    @DeleteMapping(\"/{sku}\")\n+    public ResponseEntity<?> deletar(@PathVariable Long sku) {\n+        try{\n+            produtoService.deletar(sku);\n+            return ResponseEntity.ok().build();\n+        } catch (Exception e){\n+            logger.error(\"Erro ao deletar o produto\");\n+            return ResponseEntity.notFound().build();\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "595adf565cf0b40de96b83eeceea569d7c635044",
    "filename": "src/main/java/br/com/blz/testjava/entity/Produto.java",
    "status": "added",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/Produto.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/Produto.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/entity/Produto.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,63 @@\n+package br.com.blz.testjava.entity;\n+\n+import java.util.Objects;\n+\n+public class Produto {\n+\n+    private Long sku;\n+    private String name;\n+    private int quantity;\n+\n+    public Produto(Long sku, String name, int quantity) {\n+        this.sku = sku;\n+        this.name = name;\n+        this.quantity = quantity;\n+    }\n+\n+    public Produto() {\n+    }\n+\n+    public Long getSku() {\n+        return sku;\n+    }\n+\n+    public void setSku(Long sku) {\n+        this.sku = sku;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public int getQuantity() {\n+        return quantity;\n+    }\n+\n+    public void setQuantity(int quantity) {\n+        this.quantity = quantity;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Produto{\" +\n+            \"sku=\" + sku +\n+            \", name='\" + name + '\\'' +\n+            '}';\n+    }\n+\n+    @Override\n+    public boolean equals(Object outroProduto) {\n+        Produto produto = (Produto) outroProduto;\n+        return Objects.equals(sku, produto.sku) &&\n+            Objects.equals(name, produto.name);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(sku);\n+    }\n+}"
  },
  {
    "sha": "18e637b0d08dd934aab4baae2bd1f2bcfe407931",
    "filename": "src/main/java/br/com/blz/testjava/entity/ProdutoExistenteException.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/ProdutoExistenteException.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/ProdutoExistenteException.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/entity/ProdutoExistenteException.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,7 @@\n+package br.com.blz.testjava.entity;\n+\n+public class ProdutoExistenteException extends RuntimeException {\n+    public ProdutoExistenteException() {\n+        super(\"produto j√° existe no estoque\");\n+    }\n+}"
  },
  {
    "sha": "801296871e5613bd62c876ae3845cd13b405ee3f",
    "filename": "src/main/java/br/com/blz/testjava/entity/Warehouse.java",
    "status": "added",
    "additions": 89,
    "deletions": 0,
    "changes": 89,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/Warehouse.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/Warehouse.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/entity/Warehouse.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,89 @@\n+package br.com.blz.testjava.entity;\n+\n+import java.util.*;\n+\n+public class Warehouse implements Comparable<Warehouse>{\n+\n+    private String locality;\n+    private String type;\n+    private final Set<Produto> estoque = new HashSet<>();\n+    private final Map<Long, Produto> produtosNoEstoque = new HashMap<>();\n+\n+    public Warehouse(String locality, String type) {\n+        this.locality = locality;\n+        this.type = type;\n+    }\n+\n+    public Warehouse() {\n+\n+    }\n+\n+    public String getLocality() {\n+        return locality;\n+    }\n+\n+    public void setLocality(String locality) {\n+        this.locality = locality;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(String type) {\n+        this.type = type;\n+    }\n+\n+    public void saveProduto(Produto produto) {\n+\n+        if (this.existeNoEstoque(produto.getSku())){\n+            throw new ProdutoExistenteException();\n+        }\n+        this.estoque.add(produto);\n+        this.produtosNoEstoque.put(produto.getSku(), produto);\n+    }\n+\n+    public void atualizarProduto(Produto produto) {\n+\n+        if (!this.existeNoEstoque(produto.getSku())){\n+            throw new RuntimeException();\n+        }\n+        this.estoque.add(produto);\n+        this.produtosNoEstoque.put(produto.getSku(), produto);\n+    }\n+\n+    public Set<Produto> produtosNoEstoque(){\n+        return Collections.unmodifiableSet(this.estoque);\n+    }\n+\n+    public Produto findProdutoBySku(Long sku){\n+        if (!this.produtosNoEstoque.containsKey(sku)) {\n+            throw new NoSuchElementException();\n+        }\n+        return this.produtosNoEstoque.get(sku);\n+    }\n+\n+    public boolean existeNoEstoque(Long sku){\n+        return this.produtosNoEstoque.containsKey(sku);\n+    }\n+\n+    public void deletarProduto(Long sku){\n+        if (!this.produtosNoEstoque.containsKey(sku)) {\n+            throw new NoSuchElementException();\n+        }\n+        Produto produto = this.findProdutoBySku(sku);\n+        this.estoque.remove(produto);\n+        this.produtosNoEstoque.remove(sku);\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        Warehouse warehouse = (Warehouse) o;\n+        return Objects.equals(this.locality, warehouse.locality);\n+    }\n+\n+    @Override\n+    public int compareTo(Warehouse o) {\n+        return 0;\n+    }\n+}"
  },
  {
    "sha": "847af52a481d9f9b60eaaa29df285b5fb44a8463",
    "filename": "src/main/java/br/com/blz/testjava/entity/dto/InventoryEntrada.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/dto/InventoryEntrada.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/dto/InventoryEntrada.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/entity/dto/InventoryEntrada.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,20 @@\n+package br.com.blz.testjava.entity.dto;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class InventoryEntrada {\n+\n+    private List<WarehouseDTO> warehouses = new ArrayList<>();\n+\n+    public InventoryEntrada() {\n+    }\n+\n+    public List<WarehouseDTO> getWarehouses() {\n+        return warehouses;\n+    }\n+\n+    public void setWarehouses(List<WarehouseDTO> warehouses) {\n+        this.warehouses = warehouses;\n+    }\n+}"
  },
  {
    "sha": "6c5711fe0e8fc6eac721cded55e1fc304cd34e1b",
    "filename": "src/main/java/br/com/blz/testjava/entity/dto/InventoryRetorno.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/dto/InventoryRetorno.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/dto/InventoryRetorno.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/entity/dto/InventoryRetorno.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,29 @@\n+package br.com.blz.testjava.entity.dto;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class InventoryRetorno {\n+\n+    private int quantity;\n+    private List<WarehouseDTO> warehouses = new ArrayList<>();\n+\n+    public InventoryRetorno() {\n+    }\n+\n+    public int getQuantity() {\n+        return quantity;\n+    }\n+\n+    public void setQuantity(int quantity) {\n+        this.quantity = quantity;\n+    }\n+\n+    public List<WarehouseDTO> getWarehouses() {\n+        return warehouses;\n+    }\n+\n+    public void setWarehouses(List<WarehouseDTO> warehouses) {\n+        this.warehouses = warehouses;\n+    }\n+}"
  },
  {
    "sha": "ab45fee423564bf42f13cccc50dcfc33fc07eb79",
    "filename": "src/main/java/br/com/blz/testjava/entity/dto/ProdutoEntradaDTO.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/dto/ProdutoEntradaDTO.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/dto/ProdutoEntradaDTO.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/entity/dto/ProdutoEntradaDTO.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,42 @@\n+package br.com.blz.testjava.entity.dto;\n+\n+\n+public class ProdutoEntradaDTO {\n+\n+    private Long sku;\n+    private String name;\n+    private InventoryEntrada inventory;\n+\n+    public ProdutoEntradaDTO(Long sku, String name, InventoryEntrada inventory) {\n+        this.sku = sku;\n+        this.name = name;\n+        this.inventory = inventory;\n+    }\n+\n+    public ProdutoEntradaDTO() {\n+    }\n+\n+    public Long getSku() {\n+        return sku;\n+    }\n+\n+    public void setSku(Long sku) {\n+        this.sku = sku;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public InventoryEntrada getInventory() {\n+        return this.inventory;\n+    }\n+\n+    public void setInventory(InventoryEntrada inventory) {\n+        this.inventory = inventory;\n+    }\n+}"
  },
  {
    "sha": "497b9f0c72429760dc36d08f31bd59a246d9c8c6",
    "filename": "src/main/java/br/com/blz/testjava/entity/dto/ProdutoRetornoDTO.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/dto/ProdutoRetornoDTO.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/dto/ProdutoRetornoDTO.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/entity/dto/ProdutoRetornoDTO.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,44 @@\n+package br.com.blz.testjava.entity.dto;\n+\n+public class ProdutoRetornoDTO {\n+\n+    private Long sku;\n+    private String name;\n+    private InventoryRetorno inventory = new InventoryRetorno();\n+    private boolean isMarketable;\n+\n+    public ProdutoRetornoDTO() {\n+    }\n+\n+    public Long getSku() {\n+        return sku;\n+    }\n+\n+    public void setSku(Long sku) {\n+        this.sku = sku;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public InventoryRetorno getInventory() {\n+        return this.inventory;\n+    }\n+\n+    public void setInventory(InventoryRetorno inventory) {\n+        this.inventory = inventory;\n+    }\n+\n+    public boolean getIsMarketable() {\n+        return isMarketable;\n+    }\n+\n+    public void setIsMarketable(boolean isMarketable) {\n+        this.isMarketable = isMarketable;\n+    }\n+}"
  },
  {
    "sha": "b320813233d05ec421bf1a39e982c3ccefbd4b9b",
    "filename": "src/main/java/br/com/blz/testjava/entity/dto/WarehouseDTO.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/dto/WarehouseDTO.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/entity/dto/WarehouseDTO.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/entity/dto/WarehouseDTO.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,42 @@\n+package br.com.blz.testjava.entity.dto;\n+\n+public class WarehouseDTO {\n+\n+    private String locality;\n+    private String type;\n+    private int quantity;\n+\n+    public WarehouseDTO(String locality, String type, int quantity) {\n+        this.locality = locality;\n+        this.type = type;\n+        this.quantity = quantity;\n+    }\n+\n+    public WarehouseDTO() {\n+\n+    }\n+\n+    public String getLocality() {\n+        return locality;\n+    }\n+\n+    public void setLocality(String locality) {\n+        this.locality = locality;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(String type) {\n+        this.type = type;\n+    }\n+\n+    public int getQuantity() {\n+        return quantity;\n+    }\n+\n+    public void setQuantity(int quantity) {\n+        this.quantity = quantity;\n+    }\n+}"
  },
  {
    "sha": "719cac3cac7d9ea304e8bdbd47a42846acd901c0",
    "filename": "src/main/java/br/com/blz/testjava/service/ProdutoService.java",
    "status": "added",
    "additions": 97,
    "deletions": 0,
    "changes": 97,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/service/ProdutoService.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/main/java/br/com/blz/testjava/service/ProdutoService.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/main/java/br/com/blz/testjava/service/ProdutoService.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,97 @@\n+package br.com.blz.testjava.service;\n+\n+import br.com.blz.testjava.Repository.WarehouseRepository;\n+import br.com.blz.testjava.entity.Produto;\n+import br.com.blz.testjava.entity.Warehouse;\n+import br.com.blz.testjava.entity.dto.ProdutoEntradaDTO;\n+import br.com.blz.testjava.entity.dto.ProdutoRetornoDTO;\n+import br.com.blz.testjava.entity.dto.WarehouseDTO;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import java.util.List;\n+import java.util.NoSuchElementException;\n+import java.util.Set;\n+\n+@Service\n+public class ProdutoService {\n+\n+    @Autowired\n+    WarehouseRepository repository;\n+\n+    Logger logger = LoggerFactory.getLogger(ProdutoService.class);\n+\n+    public void save(ProdutoEntradaDTO dto){\n+\n+        List<WarehouseDTO> warehousesDTO = dto.getInventory().getWarehouses();\n+\n+        for (WarehouseDTO item : warehousesDTO) {\n+            Warehouse warehouse = repository.findWarehouseByUf(item.getLocality());\n+            Produto produto = new Produto(dto.getSku(), dto.getName(), item.getQuantity());\n+            warehouse.saveProduto(produto);\n+            repository.save(warehouse);\n+        }\n+        logger.info(String.format(\"Produto salvo com sucesso! SKU %d\", dto.getSku()));\n+    }\n+\n+    public ProdutoRetornoDTO getProduto(Long sku){\n+\n+        ProdutoRetornoDTO produtoRetornoDTO = new ProdutoRetornoDTO();\n+        produtoRetornoDTO.setSku(sku);\n+        int quantidade = 0;\n+        Set<Warehouse> warehouses = repository.list();\n+\n+        for (Warehouse warehouse: warehouses) {\n+            if(warehouse.existeNoEstoque(sku)){\n+                Produto produtoExistente = warehouse.findProdutoBySku(sku);\n+                if(produtoRetornoDTO.getName() == null){\n+                    produtoRetornoDTO.setName(produtoExistente.getName());\n+                }\n+                WarehouseDTO warehouseDTO = new WarehouseDTO(warehouse.getLocality(), warehouse.getType(), produtoExistente.getQuantity());\n+                quantidade += produtoExistente.getQuantity();\n+                produtoRetornoDTO.getInventory().getWarehouses().add(warehouseDTO);\n+            }\n+        }\n+\n+        produtoRetornoDTO.getInventory().setQuantity(quantidade);\n+        produtoRetornoDTO.setIsMarketable(produtoRetornoDTO.getInventory().getQuantity() >= 0);\n+\n+        if (produtoRetornoDTO.getInventory().getWarehouses().size() == 0){\n+            logger.error(String.format(\"Produto n√£o encontrado! SKU %d\", sku));\n+            throw new NoSuchElementException();\n+        }\n+\n+        produtoRetornoDTO.setIsMarketable(produtoRetornoDTO.getInventory().getQuantity() > 0);\n+\n+        logger.info(String.format(\"Produto encontrado! SKU %d\", sku));\n+\n+        return produtoRetornoDTO;\n+\n+    }\n+\n+    public ProdutoRetornoDTO atualizar(Long sku, ProdutoEntradaDTO dto){\n+\n+        List<WarehouseDTO> warehousesDTO = dto.getInventory().getWarehouses();\n+\n+        for (WarehouseDTO item : warehousesDTO) {\n+            Warehouse warehouse = repository.findWarehouseByUf(item.getLocality());\n+            Produto produto = new Produto(sku, dto.getName(), item.getQuantity());\n+            warehouse.atualizarProduto(produto);\n+            repository.save(warehouse);\n+        }\n+\n+        logger.info(String.format(\"Produto atualizado com sucesso! SKU %d\", sku));\n+        return getProduto(sku);\n+    }\n+\n+    public void deletar(Long sku){\n+\n+        for (Warehouse warehouse : repository.list()) {\n+            warehouse.deletarProduto(sku);\n+            repository.save(warehouse);\n+        }\n+        logger.info(String.format(\"Produto deletado com sucesso! SKU %d\", sku));\n+    }\n+}"
  },
  {
    "sha": "f80240baadd68a5e7321dadca5e3dc824b37ab9d",
    "filename": "src/test/java/br/com/blz/testjava/service/ProdutoServiceTest.java",
    "status": "added",
    "additions": 115,
    "deletions": 0,
    "changes": 115,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/test/java/br/com/blz/testjava/service/ProdutoServiceTest.java",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/test/java/br/com/blz/testjava/service/ProdutoServiceTest.java",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/test/java/br/com/blz/testjava/service/ProdutoServiceTest.java?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,115 @@\n+package br.com.blz.testjava.service;\n+\n+import br.com.blz.testjava.Repository.WarehouseRepository;\n+import br.com.blz.testjava.entity.Produto;\n+import br.com.blz.testjava.entity.ProdutoExistenteException;\n+import br.com.blz.testjava.entity.Warehouse;\n+import br.com.blz.testjava.entity.dto.ProdutoEntradaDTO;\n+import br.com.blz.testjava.entity.dto.ProdutoRetornoDTO;\n+import com.google.gson.Gson;\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.internal.util.collections.Sets;\n+import org.mockito.junit.MockitoJUnit;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.mockito.junit.MockitoRule;\n+import org.mockito.quality.Strictness;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.util.ResourceUtils;\n+\n+import java.io.*;\n+import java.nio.file.Files;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+import static org.mockito.Mockito.when;\n+\n+@SpringBootTest\n+@RunWith(MockitoJUnitRunner.Silent.class)\n+public class ProdutoServiceTest {\n+\n+    @Mock\n+    WarehouseRepository repository;\n+    @InjectMocks\n+    ProdutoService service = new ProdutoService();\n+    @Rule\n+    public MockitoRule rule = MockitoJUnit.rule().strictness(Strictness.LENIENT);\n+\n+    @Test\n+    public void salvarEBuscarProdutoTest() throws IOException {\n+\n+        when(repository.findWarehouseByUf(\"SP\")).thenReturn(new Warehouse(\"SP\", \"ECOMMERCE\"));\n+        when(repository.findWarehouseByUf(\"MOEMA\")).thenReturn(new Warehouse(\"MOEMA\", \"PHYSICAL_STORE\"));\n+        when(repository.list()).thenReturn(Collections.unmodifiableSet(criarWareHouses()));\n+\n+        ProdutoEntradaDTO entradaDTO = new Gson().fromJson(carregarProdutoEntradaDTO(), ProdutoEntradaDTO.class);\n+        ProdutoRetornoDTO retornoDTO = new Gson().fromJson(carregarProdutoRetornoDTO(), ProdutoRetornoDTO.class);\n+\n+        service.save(entradaDTO);\n+\n+        Assert.assertEquals(new Gson().toJson(service.getProduto(entradaDTO.getSku())), new Gson().toJson(retornoDTO));\n+\n+\n+    }\n+\n+    @Test(expected = ProdutoExistenteException.class)\n+    public void salvarEBuscarProdutoTestErro() throws IOException {\n+\n+        List<Warehouse> warehouses = criarListaWareHouses();\n+\n+        when(repository.findWarehouseByUf(\"SP\")).thenReturn(warehouses.get(0));\n+        when(repository.findWarehouseByUf(\"MOEMA\")).thenReturn(warehouses.get(1));\n+        when(repository.list()).thenReturn(Collections.unmodifiableSet(criarWareHouses()));\n+\n+        ProdutoEntradaDTO entradaDTO = new Gson().fromJson(carregarProdutoEntradaDTO(), ProdutoEntradaDTO.class);\n+\n+        service.save(entradaDTO);\n+    }\n+\n+    private String carregarProdutoEntradaDTO() throws IOException {\n+        File file = ResourceUtils.getFile(\"classpath:dtoEntrada.txt\");\n+        return new String(Files.readAllBytes(file.toPath()));\n+    }\n+\n+    private String carregarProdutoRetornoDTO() throws IOException {\n+        File file = ResourceUtils.getFile(\"classpath:dtoRetorno.txt\");\n+        return new String(Files.readAllBytes(file.toPath()));\n+    }\n+\n+    private Set<Warehouse> criarWareHouses(){\n+        Warehouse warehouse = new Warehouse();\n+        warehouse.setLocality(\"SP\");\n+        warehouse.setType(\"ECOMMERCE\");\n+        warehouse.saveProduto(new Produto(12345L, \"Produto Teste\", 12));\n+\n+        Warehouse warehouse2 = new Warehouse();\n+        warehouse2.setLocality(\"MOEMA\");\n+        warehouse2.setType(\"PHYSICAL_STORE\");\n+        warehouse2.saveProduto(new Produto(12345L, \"Produto Teste\", 3));\n+\n+        return Sets.newSet(warehouse, warehouse2);\n+\n+    }\n+\n+    private List<Warehouse> criarListaWareHouses(){\n+        Warehouse warehouse = new Warehouse();\n+        warehouse.setLocality(\"SP\");\n+        warehouse.setType(\"ECOMMERCE\");\n+        warehouse.saveProduto(new Produto(12345L, \"Produto Teste\", 12));\n+\n+        Warehouse warehouse2 = new Warehouse();\n+        warehouse2.setLocality(\"MOEMA\");\n+        warehouse2.setType(\"PHYSICAL_STORE\");\n+        warehouse2.saveProduto(new Produto(12345L, \"Produto Teste\", 3));\n+\n+        return Arrays.asList(warehouse, warehouse2);\n+\n+    }\n+\n+}"
  },
  {
    "sha": "43b73aff5bd4c22bcaab5c6cdb971ddeaca56aac",
    "filename": "src/test/resources/dtoEntrada.txt",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/test/resources/dtoEntrada.txt",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/test/resources/dtoEntrada.txt",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/test/resources/dtoEntrada.txt?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,18 @@\n+{\n+    \"sku\": 12345,\n+    \"name\": \"Produto Teste\",\n+    \"inventory\": {\n+        \"warehouses\": [\n+            {\n+                \"locality\": \"SP\",\n+                \"quantity\": 12,\n+                \"type\": \"ECOMMERCE\"\n+            },\n+            {\n+                \"locality\": \"MOEMA\",\n+                \"quantity\": 3,\n+                \"type\": \"PHYSICAL_STORE\"\n+            }\n+        ]\n+    }\n+}"
  },
  {
    "sha": "8586af42e7c587855bd7813758d2a81622c743fd",
    "filename": "src/test/resources/dtoRetorno.txt",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/belezanaweb/test-java/blob/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/test/resources/dtoRetorno.txt",
    "raw_url": "https://github.com/belezanaweb/test-java/raw/7bcae4e29f04830728c5d5c1f25754d5f791ed1b/src/test/resources/dtoRetorno.txt",
    "contents_url": "https://api.github.com/repos/belezanaweb/test-java/contents/src/test/resources/dtoRetorno.txt?ref=7bcae4e29f04830728c5d5c1f25754d5f791ed1b",
    "patch": "@@ -0,0 +1,20 @@\n+{\n+    \"sku\": 12345,\n+    \"name\": \"Produto Teste\",\n+    \"inventory\": {\n+        \"quantity\": 15,\n+        \"warehouses\": [\n+            {\n+                \"locality\": \"SP\",\n+                \"type\": \"ECOMMERCE\",\n+                \"quantity\": 12\n+            },\n+            {\n+                \"locality\": \"MOEMA\",\n+                \"type\": \"PHYSICAL_STORE\",\n+                \"quantity\": 3\n+            }\n+        ]\n+    },\n+    \"isMarketable\": true\n+}"
  }
]
