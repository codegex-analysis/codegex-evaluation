[
  {
    "sha": "22ac26e1d792fe7a98e35979868c58444b3fcd84",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/Valerivelli/KyryllovaLesson2/blob/8d6277225c3eaa0b02d4baac18156d908377539a/.gitignore",
    "raw_url": "https://github.com/Valerivelli/KyryllovaLesson2/raw/8d6277225c3eaa0b02d4baac18156d908377539a/.gitignore",
    "contents_url": "https://api.github.com/repos/Valerivelli/KyryllovaLesson2/contents/.gitignore?ref=8d6277225c3eaa0b02d4baac18156d908377539a",
    "patch": "@@ -1,2 +1,3 @@\n # Project exclude paths\n-/target/\n\\ No newline at end of file\n+/target/\n+!/src/main/java/com/kyryllova/homeworks/lesson/Main.java"
  },
  {
    "sha": "2994c5704895b87466afe6a593ce3544414bfc84",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 19,
    "deletions": 3,
    "changes": 22,
    "blob_url": "https://github.com/Valerivelli/KyryllovaLesson2/blob/8d6277225c3eaa0b02d4baac18156d908377539a/pom.xml",
    "raw_url": "https://github.com/Valerivelli/KyryllovaLesson2/raw/8d6277225c3eaa0b02d4baac18156d908377539a/pom.xml",
    "contents_url": "https://api.github.com/repos/Valerivelli/KyryllovaLesson2/contents/pom.xml?ref=8d6277225c3eaa0b02d4baac18156d908377539a",
    "patch": "@@ -28,16 +28,32 @@\n         <version>5.7.0</version>\n         <scope>test</scope>\n     </dependency>\n+\n     <dependency>\n         <groupId>org.projectlombok</groupId>\n         <artifactId>lombok</artifactId>\n         <version>1.18.16</version>\n         <scope>provided</scope>\n     </dependency>\n-    </dependencies>\n-\n-\n \n+    <dependency>\n+        <groupId>ch.qos.logback</groupId>\n+        <artifactId>logback-classic</artifactId>\n+        <version>1.0.13</version>\n+    </dependency>\n+    <dependency>\n+        <groupId>org.junit.jupiter</groupId>\n+        <artifactId>junit-jupiter-api</artifactId>\n+        <version>5.7.0</version>\n+        <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+        <groupId>org.junit.jupiter</groupId>\n+        <artifactId>junit-jupiter-api</artifactId>\n+        <version>5.7.0</version>\n+        <scope>compile</scope>\n+    </dependency>\n \n+</dependencies>\n \n </project>"
  },
  {
    "sha": "f07e1f35eb38cad0d7d016fbaf7fb2e802287815",
    "filename": "src/main/java/com/kyryllova/homeworks/hw16/FractionNumberTest.java",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/Valerivelli/KyryllovaLesson2/blob/8d6277225c3eaa0b02d4baac18156d908377539a/src/main/java/com/kyryllova/homeworks/hw16/FractionNumberTest.java",
    "raw_url": "https://github.com/Valerivelli/KyryllovaLesson2/raw/8d6277225c3eaa0b02d4baac18156d908377539a/src/main/java/com/kyryllova/homeworks/hw16/FractionNumberTest.java",
    "contents_url": "https://api.github.com/repos/Valerivelli/KyryllovaLesson2/contents/src/main/java/com/kyryllova/homeworks/hw16/FractionNumberTest.java?ref=8d6277225c3eaa0b02d4baac18156d908377539a",
    "patch": "@@ -0,0 +1,88 @@\n+package com.kyryllova.homeworks.hw16;\n+\n+import hw6.Fraction;\n+import hw6.FractionNumber;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class FractionNumberTest {\n+    private static FractionNumber fractionNumber1;\n+    private static FractionNumber fractionNumber2;\n+    private static FractionNumber fractionNumber3;\n+\n+\n+    @BeforeAll\n+    static void setUp() {\n+        fractionNumber1 = new FractionNumber(1, 3);\n+        fractionNumber2 = new FractionNumber(2, 3);\n+        fractionNumber3 = new FractionNumber(3, 4);\n+    }\n+\n+    @MyTest\n+    void badFractionCreation() {\n+        assertThrows(IllegalArgumentException.class, () -> new FractionNumber(1, 0));\n+    }\n+\n+    @MyTest\n+    void testEquals() {\n+        assertEquals(new FractionNumber(1, 3), fractionNumber1);\n+        assertNotEquals(fractionNumber2, fractionNumber1);\n+        assertEquals(new FractionNumber(3, 9), fractionNumber1);\n+        assertEquals(new FractionNumber(3, 1), new FractionNumber(9, 3));\n+    }\n+\n+    @MyTest\n+    void testPlusWithTheSameDenominator() {\n+        Fraction result = fractionNumber1.plus(fractionNumber2);\n+        assertEquals(new FractionNumber(3, 3), result);\n+        assertEquals(new FractionNumber(1, 1), result);\n+\n+    }\n+\n+    @MyTest\n+    void testPlusWithNotTheSameDenominator() {\n+        Fraction result = fractionNumber1.plus(fractionNumber3);\n+        assertEquals(new FractionNumber(13, 12), result);\n+    }\n+\n+    @MyTest\n+    void testMinusWithTheSameDenominator() {\n+        Fraction result = fractionNumber1.minus(fractionNumber2);\n+        assertEquals(new FractionNumber(-1, 3), result);\n+    }\n+\n+    @MyTest\n+    void testMinusWithNotTheSameDenominator() {\n+        Fraction result = fractionNumber1.minus(fractionNumber3);\n+        assertEquals(new FractionNumber(-5, 12), result);\n+    }\n+\n+    @MyTest\n+    void testMultiplyWithTheSameDenominator() {\n+        Fraction result = fractionNumber1.multiply(fractionNumber2);\n+        assertEquals(new FractionNumber(2, 9), result);\n+    }\n+\n+    @MyTest\n+    void testMultiplyWithNotTheSameDenominator() {\n+        Fraction result = fractionNumber1.multiply(fractionNumber3);\n+        assertEquals(new FractionNumber(3, 12), result);\n+\n+    }\n+\n+\n+    @MyTest\n+    void testDivideWithTheSameDenominator() {\n+        Fraction result = fractionNumber1.divide(fractionNumber2);\n+        assertEquals(new FractionNumber(1, 2), result);\n+    }\n+\n+    @MyTest\n+    void testDivideWithNotTheSameDenominator() {\n+        Fraction result = fractionNumber1.divide(fractionNumber3);\n+        assertEquals(new FractionNumber(4, 9), result);\n+    }\n+}"
  },
  {
    "sha": "ae1113ce615da17f868594752068786068712c4a",
    "filename": "src/main/java/com/kyryllova/homeworks/hw16/MyTest.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Valerivelli/KyryllovaLesson2/blob/8d6277225c3eaa0b02d4baac18156d908377539a/src/main/java/com/kyryllova/homeworks/hw16/MyTest.java",
    "raw_url": "https://github.com/Valerivelli/KyryllovaLesson2/raw/8d6277225c3eaa0b02d4baac18156d908377539a/src/main/java/com/kyryllova/homeworks/hw16/MyTest.java",
    "contents_url": "https://api.github.com/repos/Valerivelli/KyryllovaLesson2/contents/src/main/java/com/kyryllova/homeworks/hw16/MyTest.java?ref=8d6277225c3eaa0b02d4baac18156d908377539a",
    "patch": "@@ -0,0 +1,11 @@\n+package com.kyryllova.homeworks.hw16;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.METHOD)\n+public @interface MyTest {\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2751d228b20e2362f0e88fc286bc6e5cd67e7577",
    "filename": "src/main/java/com/kyryllova/homeworks/hw16/TestRun.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/Valerivelli/KyryllovaLesson2/blob/8d6277225c3eaa0b02d4baac18156d908377539a/src/main/java/com/kyryllova/homeworks/hw16/TestRun.java",
    "raw_url": "https://github.com/Valerivelli/KyryllovaLesson2/raw/8d6277225c3eaa0b02d4baac18156d908377539a/src/main/java/com/kyryllova/homeworks/hw16/TestRun.java",
    "contents_url": "https://api.github.com/repos/Valerivelli/KyryllovaLesson2/contents/src/main/java/com/kyryllova/homeworks/hw16/TestRun.java?ref=8d6277225c3eaa0b02d4baac18156d908377539a",
    "patch": "@@ -0,0 +1,30 @@\n+package com.kyryllova.homeworks.hw16;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n+@Slf4j\n+public class TestRun {\n+    public static void main(String[] args) {\n+        try {\n+            Class<?> aClass = Class.forName(\"D:\\\\загрузки\\\\JavaRushTasks\\\\2.JavaCore\\\\KyryllovaLesson2\\\\src\\\\main\\\\java\\\\com\\\\kyryllova\\\\homeworks\\\\hw16\\\\FractionNumberTest.java\");\n+            Method[] declaredMethods = aClass.getDeclaredMethods();\n+            for (Method method:declaredMethods) {\n+                if (method.isAnnotationPresent(MyTest.class)){\n+                    String name = method.getName();\n+                    log.debug(name);\n+                    try {\n+                        method.invoke(null);\n+                        log.debug(name+\" \"+\"DONE\");\n+                    } catch (InvocationTargetException e) {\n+                        e.printStackTrace();\n+                        log.debug(name+\" \"+\"FAILED\");\n+                    }\n+                }\n+            }\n+        } catch (ClassNotFoundException | IllegalAccessException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}"
  },
  {
    "sha": "6b22c65135c40eaf9e66ca9063692b61c30d6a5f",
    "filename": "src/main/resources/logback",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Valerivelli/KyryllovaLesson2/blob/8d6277225c3eaa0b02d4baac18156d908377539a/src/main/resources/logback",
    "raw_url": "https://github.com/Valerivelli/KyryllovaLesson2/raw/8d6277225c3eaa0b02d4baac18156d908377539a/src/main/resources/logback",
    "contents_url": "https://api.github.com/repos/Valerivelli/KyryllovaLesson2/contents/src/main/resources/logback?ref=8d6277225c3eaa0b02d4baac18156d908377539a",
    "patch": "@@ -0,0 +1,18 @@\n+<configuration>\n+    <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n+        <encoder>\n+            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>\n+        </encoder>\n+    </appender>\n+    <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n+        <file>testFile.log</file>\n+        <append>true</append>\n+        <encoder>\n+            <pattern>%d{HH:mm:ss.SSSS} [%thread] %-5level %logger{35} - %msg%n</pattern>\n+        </encoder>\n+    </appender>\n+    <root level=\"DEBUG\">\n+        <appender-ref ref=\"STDOUT\" />\n+        <appender-ref ref=\"FILE\" />\n+    </root>\n+</configuration>\n\\ No newline at end of file"
  }
]
