[
  {
    "sha": "60b0893f71a9dab425d6f6e92463493bd33f95e7",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Glino-MES/HexedPlugin/blob/34c9fa0ad0fa4512616b6c48fb858a7c07558643/build.gradle",
    "raw_url": "https://github.com/Glino-MES/HexedPlugin/raw/34c9fa0ad0fa4512616b6c48fb858a7c07558643/build.gradle",
    "contents_url": "https://api.github.com/repos/Glino-MES/HexedPlugin/contents/build.gradle?ref=34c9fa0ad0fa4512616b6c48fb858a7c07558643",
    "patch": "@@ -12,7 +12,7 @@ repositories{\n }\n \n dependencies{\n-    def version = \"v120\"\n+    def version = \"v126\"\n     compileOnly \"com.github.Anuken.Arc:arc-core:$version\"\n     compileOnly \"com.github.Anuken.Mindustry:core:$version\"\n     compile 'com.googlecode.json-simple:json-simple:1.1.1'"
  },
  {
    "sha": "e42a6424b7622e4758d4c8ebb275d651c099456d",
    "filename": "src/hexed/HexedMod.java",
    "status": "modified",
    "additions": 28,
    "deletions": 10,
    "changes": 38,
    "blob_url": "https://github.com/Glino-MES/HexedPlugin/blob/34c9fa0ad0fa4512616b6c48fb858a7c07558643/src/hexed/HexedMod.java",
    "raw_url": "https://github.com/Glino-MES/HexedPlugin/raw/34c9fa0ad0fa4512616b6c48fb858a7c07558643/src/hexed/HexedMod.java",
    "contents_url": "https://api.github.com/repos/Glino-MES/HexedPlugin/contents/src/hexed/HexedMod.java?ref=34c9fa0ad0fa4512616b6c48fb858a7c07558643",
    "patch": "@@ -51,7 +51,8 @@\n \n     public static final int messageTime = 1;\n     //in ticks: 60 minutes\n-    private final static int roundTime = 60 * 60 * 60;\n+    private final static int roundTimeMins = 50;\n+    private final static int roundTime = 60 * 60 * roundTimeMins;\n     //in ticks: 3 minutes\n     private final static int leaderboardTime = 60 * 60 * 2;\n \n@@ -67,9 +68,9 @@\n     private HexData data;\n     private boolean restarting = false, registered = false;\n \n-    private Schematic start;\n+    private Schematic start1,midgamestart;\n     private double counter = 0f;\n-    private int lastMin;\n+    private int lastMin = roundTimeMins;\n     private Net net = new Net();\n     JSONObject configData = configReader.get(\"config\");\n     private final String hexURL = configData.getString(\"hexURL\");\n@@ -78,19 +79,19 @@\n     public void init(){\n         rules.pvp = true;\n         rules.tags.put(\"hexed\", \"true\");\n-        rules.loadout = ItemStack.list(Items.copper, 1500, Items.lead, 1500, Items.graphite, 250, Items.metaglass, 250, Items.silicon, 250, Items.plastanium, 50);\n+        rules.loadout = ItemStack.list(Items.copper, 1500, Items.lead, 1500, Items.graphite, 250, Items.metaglass, 250, Items.silicon, 250, Items.thorium,50,Items.plastanium, 50,Items.titanium, 150,Items.surgeAlloy,5,Items.phaseFabric,20);\n         rules.buildCostMultiplier = 1f;\n         rules.buildSpeedMultiplier = 1f / 2f;\n         rules.blockHealthMultiplier = 1.5f;\n         rules.unitBuildSpeedMultiplier = 1f;\n         rules.enemyCoreBuildRadius = (Hex.diameter - 1) * tilesize / 2f;\n         rules.unitDamageMultiplier = 1.25f;\n         rules.canGameOver = false;\n-        start = Schematics.readBase64(\"bXNjaAF4nFWSXW6kMBCE2zZgG8j+aC+QC/CSi+wZHMZaITH2CJhEOXnewnZ15yEZifmwu6rcNNBAPy01JV0zdc9pz49PNFzyPm/L7VhqIXqgP8dypLLcr9NrWtdpTdu/TA/fNinMtbzkt7qRS9tMv271NW9TqZf8qR/2yjfTLZW80rjlW1p4VZdykN/ndBx5o3GuW57KfV7zfaffXxyfId01lwsLw72sNeHOP4v1jYj+8kWGrGE4slg1ZMGOZOkVgeQXVTmocsQKa+sYjpxliM+oz8CH2kAOyh8wwGobVINjmWVBPE/qTSv3rmM0KmzRitVIq5EWkahxKzD3aMRqK1YPcNhpEUUOaMgFjvIkTYqkgSQin2zPq4bMwH99yxqD/ZHJGyJuIR4ZHAT0eJhWax1qA6OBlUsdXwb7UvbSHMOgW4/W0EiPxjym0jBGnoM9z/Pj/GC+G9jEjaELZA6BQwVeEbTGc+gYfGrLkEEHtUc9POJwnrEMhCHvN2pY1LCIMNSiKgdVjpoiYT0+DysPKPCKoDX+IP4DZRpQpQ==\");\n-\n+        start1 = Schematics.readBase64(\"bXNjaAF4nFWSXW6kMBCE2zZgG8j+aC+QC/CSi+wZHMZaITH2CJhEOXnewnZ15yEZifmwu6rcNNBAPy01JV0zdc9pz49PNFzyPm/L7VhqIXqgP8dypLLcr9NrWtdpTdu/TA/fNinMtbzkt7qRS9tMv271NW9TqZf8qR/2yjfTLZW80rjlW1p4VZdykN/ndBx5o3GuW57KfV7zfaffXxyfId01lwsLw72sNeHOP4v1jYj+8kWGrGE4slg1ZMGOZOkVgeQXVTmocsQKa+sYjpxliM+oz8CH2kAOyh8wwGobVINjmWVBPE/qTSv3rmM0KmzRitVIq5EWkahxKzD3aMRqK1YPcNhpEUUOaMgFjvIkTYqkgSQin2zPq4bMwH99yxqD/ZHJGyJuIR4ZHAT0eJhWax1qA6OBlUsdXwb7UvbSHMOgW4/W0EiPxjym0jBGnoM9z/Pj/GC+G9jEjaELZA6BQwVeEbTGc+gYfGrLkEEHtUc9POJwnrEMhCHvN2pY1LCIMNSiKgdVjpoiYT0+DysPKPCKoDX+IP4DZRpQpQ==\");\n+        midgamestart =Schematics.readBase64(\"bXNjaAF4nE2Ra27CMBCEN05InAe09AS9QM7SM5hg0UjBRiYUcfH+LN3JgESkZLz2zpfdtbTyZqQI7uil27mz/zyO+wOidu/PQxpP8xiDyFq6+Tum8XLsr26a5OM16ieXDl628zi7gM0hhh9/i0lylwaphtswxeDl/RSvPvUh7v3D0p6jLvqTC36SLvmTGzWKY5ilG2LyfbgMk7+cZfuS+PCWRx/2Pom9hCk6rKqdm2efbiLyJXyyx6tPzlUhYlRKSkWxTKmZ21BaSicZdP3EKSjDa1QWSkZKRkoGSqFxiwhwWeHULqa81LVqpVKgJKOn+jFEGaIMUUZRJlNZP+pH2TnskEKZaq6ETaF6/ChvNFJ0q58GbIP9jlkblrN0tQIBsrS74lnJxkspYFVWqcc59jfCRoGx3KpgheikUEhns/vf/TfHWBeaZXNWcw2koliMxaK5SqUBynLalr+pn9ex4hAWe017DTtSaoykhg9RR8OG92coOaWgLLCGsIawhrU0SllE7f9tPU+n\");\n         Events.run(Trigger.update, () -> {\n             if(active()){\n-                Vars.state.rules.modeName = \"Hex\";\n+\n                 data.updateStats();\n \n                 for(Player player : Groups.player){\n@@ -117,10 +118,12 @@ public void init(){\n \n                 if(interval.get(timerBoard, leaderboardTime)){\n                     Call.infoToast(getLeaderboard(), 15f);\n-                    rules.loadout.each(e => e.amount *= 1.075);//every 2 minutes increases starting res by 7.5%\n+                    //Call.infoPopup(p.con, \"[accent][green]Register[] NOW to [green]save[] the EXP\", 6f, 18, 230, 0, 10, 10);\n                 }\n \n                 if(interval.get(timerUpdate, updateTime)){\n+                    Vars.state.rules.modeName = \"Hex\";\n+                    //rules.loadout.each(e -> e.amount = (int) (e.amount*1.1));//every 2 minutes increases starting res by 7.5%\n                     data.updateControl();\n                 }\n \n@@ -228,7 +231,7 @@ void updateText(Player player){\n             message.append(\"<Unknown>\");\n         }\n \n-        Call.setHudText(player.con, message.toString());\n+        Call.setHudText(player.con, \"\\n\\n\\n\"+message.toString()); // todo neeed to change this\n     }\n \n     @Override\n@@ -373,9 +376,19 @@ void killTiles(Team team){\n     }\n \n     void loadout(Player player, int x, int y){\n+        boolean midgame = false;\n+        if (lastMin <= roundTimeMins/2){\n+            midgame=true;\n+        }\n+        Schematic start = start1;\n+        if (midgame){\n+            start = midgamestart;\n+        }\n         Stile coreTile = start.tiles.find(s -> s.block instanceof CoreBlock);\n         if(coreTile == null) throw new IllegalArgumentException(\"Schematics don't have core tiles. Exiting.\");\n         int ox = x - coreTile.x, oy = y - coreTile.y;\n+\n+        boolean finalMidgame = midgame;\n         start.tiles.each(st -> {\n             Tile tile = world.tile(st.x + ox, st.y + oy);\n             if(tile == null) return;\n@@ -389,9 +402,14 @@ void loadout(Player player, int x, int y){\n             if(st.config != null){\n                 tile.build.configureAny(st.config);\n             }\n+\n             if(tile.block() instanceof CoreBlock){\n                 for(ItemStack stack : state.rules.loadout){\n-                    Call.setItem(tile.build, stack.item, stack.amount);\n+                    int amount = (int) (((double)stack.amount)*( 1. + ((double) roundTimeMins-(double)lastMin)/15. ));\n+                    if (finalMidgame){\n+                        amount += 400;\n+                    }\n+                    Call.setItem(tile.build, stack.item, amount);\n                 }\n             }\n         });"
  }
]
