[
  {
    "sha": "bef42ef2814c5e962dc906d48128192e9a6bc0b5",
    "filename": ".github/workflows/gradle.yml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/.github/workflows/gradle.yml",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/.github/workflows/gradle.yml",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/.github/workflows/gradle.yml?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -83,10 +83,10 @@ jobs:\n     runs-on: ubuntu-18.04\n \n     steps:\n-      - name: Set up JDK 8\n+      - name: Set up JDK 11\n         uses: actions/setup-java@v1\n         with:\n-          java-version: 8\n+          java-version: 11\n \n       - name: Set up Node.js v12.x\n         uses: actions/setup-node@v1"
  },
  {
    "sha": "0eeb9d14555877fa8513e1a2ffe7e76b9b94a7ef",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/.gitignore",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/.gitignore",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/.gitignore?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -4,6 +4,8 @@\n /.idea/libraries/\n /.idea/*.xml\n *.iml\n+*.ipr\n+*.iws\n \n # Gradle\n "
  },
  {
    "sha": "338c75d632629f851dc6b0d1b700f816e6618617",
    "filename": "CHANGELOG.md",
    "status": "modified",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/CHANGELOG.md",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/CHANGELOG.md?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -1,3 +1,20 @@\n+# [3.0.0](https://github.com/Silthus/spigot-plugin-template/compare/v2.0.1...v3.0.0) (2020-11-17)\n+\n+\n+### Bug Fixes\n+\n+* **release:** upgrade to jdk11 ([120683e](https://github.com/Silthus/spigot-plugin-template/commit/120683ea45318ff61a40c02f2cc65fdb41045fc4))\n+\n+\n+### Features\n+\n+* add gradle lombok plugin ([d2468bf](https://github.com/Silthus/spigot-plugin-template/commit/d2468bf845b4f0b3c498d197ad641bb46fd341d0))\n+\n+\n+### BREAKING CHANGES\n+\n+* **release:** the template now supports jdk11 and upwards\n+\n ## [2.0.1](https://github.com/Silthus/spigot-plugin-template/compare/v2.0.0...v2.0.1) (2020-07-06)\n \n "
  },
  {
    "sha": "fa4d1d38756b28778c640223e50b11dc7cee8ce9",
    "filename": "README.md",
    "status": "modified",
    "additions": 186,
    "deletions": 25,
    "changes": 211,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/README.md",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/README.md",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/README.md?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -1,25 +1,186 @@\n-# WorldSystem\r\n-A spigot plugin to give every user his own world\r\n-\r\n-[![Codacy Badge](https://api.codacy.com/project/badge/Grade/2ff2b6f5f2254dcdb4bdb5b45445465c)](https://app.codacy.com/app/Butzlabben/worldsystem?utm_source=github.com&utm_medium=referral&utm_content=Butzlabben/worldsystem&utm_campaign=Badge_Grade_Dashboard)\r\n-[![Build Status](https://travis-ci.org/Butzlabben/worldsystem.svg?branch=master)](https://travis-ci.org/Butzlabben/worldsystem) [![](https://jitpack.io/v/Butzlabben/worldsystem.svg)](https://jitpack.io/#Butzlabben/worldsystem)\r\n-\r\n-\r\n-## About\r\n-WorldSystem is a plugin where every player can get a world. There they can build, play and do anything they want without creating stress in a single world. The world owner can also add other players and manage their permissions on his world like is he allowed to build, teleport or changing his gamemode.\r\n-\r\n-When a player creates a new world you can also set a template which will then be cloned.\r\n-\r\n-## How to help making this resource better\r\n-- Contributing code\r\n-- Creating useful issues\r\n-- Donating something\r\n-- [![Build Status](https://www.paypalobjects.com/en_US/DK/i/btn/btn_donateCC_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=johannes.c.naegele%40gmail.com&currency_code=EUR&source=url)\r\n-- Helping other users\r\n-- Leaving a good review\r\n-\r\n-## Useful links\r\n-- Download Resource: https://www.spigotmc.org/resources/49756/\r\n-- Contact author on spigot (rather consider to create an issue here): https://www.spigotmc.org/conversations/add?to=trainerlord\r\n-- Discord server: https://discord.gg/WYz7Qck\r\n-- Author on Discord: Trainerlord#3534\r\n+# Spigot Plugin Template\n+\n+[![Build Status](https://github.com/Silthus/spigot-plugin-template/workflows/Build/badge.svg)](../../actions?query=workflow%3ABuild)\n+[![GitHub release (latest SemVer including pre-releases)](https://img.shields.io/github/v/release/Silthus/spigot-plugin-template?include_prereleases&label=release)](../../releases)\n+![Spiget tested server versions](https://img.shields.io/spiget/tested-versions/79903)\n+[![Spiget Downloads](https://img.shields.io/spiget/downloads/79903)](https://www.spigotmc.org/resources/splugintemplate.79903/)\n+[![Spiget Rating](https://img.shields.io/spiget/rating/79903)](https://www.spigotmc.org/resources/splugintemplate.79903/)\n+[![codecov](https://codecov.io/gh/Silthus/spigot-plugin-template/branch/master/graph/badge.svg)](https://codecov.io/gh/Silthus/spigot-plugin-template)\n+[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n+[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n+\n+You can use this template to develop your own high quality Spigot plugins using [Gradle](https://gradle.org/) with ease.\n+\n+* [Features](#features)\n+* [Quickstart setup](#quickstart-setup)\n+* [Releasing a new version of your plugin](#releasing-a-new-version-of-your-plugin)\n+  * [Commit message format](#commit-message-format)\n+* [Publishing your maven package](#publishing-your-maven-package)\n+  * [About the group and artifactId](#about-the-group-and-artifactid)\n+  * [Github Package Authentication](#github-package-authentication)\n+* [Debugging your plugin](#debugging-your-plugin)\n+  * [Copy your plugin automatically](#copy-your-plugin-automatically)\n+  * [Running and debugging the Minecraft server](#running-and-debugging-the-minecraft-server)\n+* [References](#references)\n+\n+## Features\n+\n+The template or better boilerplate comes with a lot of features that are useful if you want to develop high quality plugins. However you don't need to use all of them, you can simply remove the features you don't need.\n+\n+* Ready to use [**Gradle**](https://gradle.org/) project with lots of utility tasks\n+* Automatic **generation of `plugin.yaml`** based of project properties with [SpiGradle](https://github.com/EntryPointKR/Spigradle/)\n+* Integrated [**Spigot test server**](https://github.com/EntryPointKR/Spigradle/) with a one click build, copy plugin and start debugging in IntelliJ task \n+* [**Gradle shadow plugin**](https://imperceptiblethoughts.com/shadow/) to easily ship your needed dependencies with your plugin\n+* **[JUnit 5](https://junit.org/junit5/docs/current/user-guide/)** test setup including [MockBukkit](https://github.com/seeseemelk/MockBukkit) and [AssertJ](https://joel-costigliola.github.io/assertj/)\n+* **[Jacoco](https://github.com/jacoco/jacoco) code coverage** report including an upload task to [codecov](https://codecov.io/) \n+* Fully integrated [**semantic-release**](https://semantic-release.gitbook.io/semantic-release/) release pipeline \n+* Automatic [**changelog generation**](https://github.com/semantic-release/changelog) based on [conventional commit messages](https://www.conventionalcommits.org/)\n+* [**Github Actions**](https://github.com/features/actions) workflow for build and release\n+* Publishing of **maven artifacts** to [GitHub Packages](https://github.com/features/packages)\n+  > no more need for self hosted nexus or artifactory server\n+* GitHub [**issue templates**](https://help.github.com/en/github/building-a-strong-community/configuring-issue-templates-for-your-repository) for bug and feature requests\n+* Contributing and Code of Conduct **guidelines**\n+* Nice [**badges**](https://shields.io) to show of your project\n+\n+## Quickstart setup\n+\n+* Create a [new Github project](https://github.com/Silthus/spigot-plugin-template/generate) using this template.\n+* **Clone** the new repository and open it in IntelliJ.\n+* **Update** the **gradle.properties** file and change the following variables:\n+  * `group`: your-maven-group-id (e.g.: io.github.silthus)\n+  * `pluginName`: YourPluginName\n+  * `author`: YourName\n+* **Update** the `root.projectName` inside **settings.gradle**. This will be your `artifactId`.\n+* **Delete** the  `CHANGELOG.md`. It will be generated on your [first release](#releasing-a-new-version-of-your-plugin).\n+* **Update** the `README` to point to your project and spigot resource id.\n+* **Rename** the java package and plugin to match your project.\n+* Then execute the `Server` run configuration and the template will run the Spigot BuildTools to download and build spigot or paper for you.\n+* **Code away :)** - *and once you are ready, push your commit (in [conventional commit style](#commit-message-format)) to master.*\n+\n+Please read the [Contributing Guidelines](CONTRIBUTING.md) before submitting any pull requests or opening issues.\n+\n+## Releasing a new version of your plugin\n+\n+One of the major benefits of this template is the fact that it will **automatically release a new version** on every push to `master` based on your commit messages. This makes sure your plugin is released following the [semantic versioning](https://semver.org/) guidelines. For this to work you have to follow a few simple rules:\n+\n+* Commit only working and tested code to the master branch. *Use Pull Requests to work on bigger features or bug fixes and merge them when you are ready.*\n+* Every bugfix, feature and change should have one commit associated with it. *Do not mix multiple bugs, features, etc. into one huge commit message. Keep your commit size small and commit often.*\n+* Your commit messages must follow the [conventional commit rules](https://www.conventionalcommits.org/).\n+\n+### Commit message format\n+\n+See the [conventional commit homepage](https://www.conventionalcommits.org/) for more details and examples on the topic. But here is a quick summary to get you started.\n+\n+> The Conventional Commits specification is a lightweight convention on top of commit messages. It provides an easy set of rules for creating an explicit commit history; which makes it easier to write automated tools on top of. This convention dovetails with [SemVer](http://semver.org/), by describing the features, fixes, and breaking changes made in commit messages.\n+\n+The commit message should be structured as follows:\n+\n+```text\n+<type>[optional scope]: <description>\n+\n+[optional body]\n+\n+[optional footer(s)]\n+```\n+\n+The commit contains the following structural elements, to communicate intent to the consumers of your library or plugin:\n+\n+* `fix:` a commit of the type fix patches a bug in your codebase (this correlates with PATCH in semantic versioning).\n+* `feat:` a commit of the type feat introduces a new feature to the codebase (this correlates with MINOR in semantic versioning).\n+* `BREAKING CHANGE:` a commit that has a footer BREAKING CHANGE:, or appends a ! after the type/scope, introduces a breaking API change (correlating with MAJOR in semantic versioning). A BREAKING CHANGE can be part of commits of any type.\n+* types other than fix: and feat: are allowed, for example @commitlint/config-conventional (based on the the Angular convention) recommends `build:`, `chore:`, `ci:`, `docs:`, `style:`, `refactor:`, `perf:`, `test:`, and others.\n+* footers other than `BREAKING CHANGE: <description>` may be provided and follow a convention similar to git trailer format.\n+Additional types are not mandated by the Conventional Commits specification, and have no implicit effect in semantic versioning (unless they include a BREAKING CHANGE).\n+\n+A scope may be provided to a commit’s type, to provide additional contextual information and is contained within parenthesis, e.g., `feat(parser): add ability to parse arrays`.\n+\n+Here are some examples:\n+\n+<details>\n+<summary>Commit message with description and breaking change footer</summary>\n+\n+```text\n+feat: allow provided config object to extend other configs\n+\n+BREAKING CHANGE: `extends` key in config file is now used for extending other config files\n+```\n+\n+</details>\n+\n+<details>\n+<summary>Commit message with no body</summary>\n+\n+```text\n+docs: correct spelling of CHANGELOG\n+```\n+\n+</details>\n+\n+<details>\n+<summary>Commit message with scope</summary>\n+\n+```text\n+feat(lang): add polish language\n+```\n+\n+</details>\n+\n+<details>\n+<summary>Commit message with multi-paragraph body and multiple footers</summary>\n+\n+```text\n+fix: correct minor typos in code\n+\n+see the issue for details\n+\n+on typos fixed.\n+\n+Reviewed-by: Z\n+Refs #133\n+```\n+\n+</details>\n+\n+## Publishing your maven package\n+\n+Your plugin will be automatically published as a maven package on [Github packages](https://github.com/features/packages) as soon as you [release a new version](#releasing-a-new-version-of-your-plugin).\n+\n+### About the group and artifactId\n+\n+The `group` appended by your `artifactId` is used to uniquely identify your project when importing it in other projects. When you import spigot in your project you use the group `org.spigotmc` followed by the artifactId `spigot-api` and the version.\n+\n+The following was taken from the [offical maven naming guide](https://maven.apache.org/guides/mini/guide-naming-conventions.html).\n+\n+* `groupId` uniquely identifies your project across all projects. A group ID should follow [Java's package name rules](https://docs.oracle.com/javase/specs/jls/se6/html/packages.html#7.7). This means it starts with a reversed domain name you control. For example: `org.apache.maven`, `org.apache.commons`.  \n+  If you dont't own a domain, you can use the github domain `io.github` appended by your Github username, e.g. `io.github.silthus`\n+* `artifactId` is the name of the jar without version. If you created it, then you can choose whatever name you want with lowercase letters and no strange symbols. For example: `maven, commons-math\n+\n+### Github Package Authentication\n+\n+You need to configure [authentication for Github Packages](https://help.github.com/en/packages/using-github-packages-with-your-projects-ecosystem/configuring-gradle-for-use-with-github-packages#authenticating-to-github-packages) if you want to use your maven package in other projects.\n+\n+1. [Create a Github Personal Access Token](https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line)\n+2. Create or update the `gradle.properties` inside `C:\\Users\\%username%\\.gradle` with the following and replace `YOUR_GITHUB_USERNAME` with your Github username and `YOUR_PERSONAL_ACCESS_TOKEN` with the access token from step 1.\n+\n+```properties\n+gpr.user=YOUR_GITHUB_USERNAME\n+gpr.key=YOUR_PERSONAL_ACCESS_TOKEN\n+```\n+\n+## Debugging your plugin\n+\n+### Copy your plugin automatically\n+\n+You can export your plugin to the plugins directory from your working directory with the Gradle **prepareSpigotPlugins** task. The task will **build and copy** your plugin **automatically** into the `plugins/` directory.\n+\n+### Running and debugging the Minecraft server\n+\n+You can run or debug your plugin using the `Server` run configuration from within IntelliJ to automatically download the Minecraft server, built it, copy your and dependent plugins into it and start it in debugging mode.\n+\n+This is due to the awesome power of Spigradle's debug tasks. Find out more on the [Spigradle Github page](https://github.com/spigradle/spigradle).\n+\n+## References\n+\n+* [Spigradle](https://github.com/spigradle/spigradle/): *provides awesome gradle tasks that make your live a lot easier*\n+* [semantic-release](https://semantic-release.gitbook.io/semantic-release/): *in my opinion every project should use this!*\n+* [conventional commit messages](https://www.conventionalcommits.org/): *do commit message the right way*"
  },
  {
    "sha": "1375050772336b44374ff1512d5191ab982ce5f4",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 50,
    "deletions": 47,
    "changes": 97,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/build.gradle",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/build.gradle",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/build.gradle?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -8,13 +8,19 @@ buildscript {\n plugins {\n     id 'com.github.johnrengelman.shadow' version '6.1.0'\n     id 'kr.entree.spigradle' version '2.2.3'\n+    id 'io.freefair.lombok' version '5.3.0'\n     id 'java'\n     id 'jacoco'\n+    id 'idea'\n }\n \n apply from: \"$rootDir/gradle/jacoco.gradle\"\n //apply from: \"$rootDir/gradle/publish.gradle\"\n \n+if (project.hasProperty(\"local_script\")) {\n+    apply from: file(local_script + \"/build.local.gradle\")\n+}\n+\n sourceCompatibility = 8\n targetCompatibility = 8\n \n@@ -27,9 +33,11 @@ group project.property(\"group\")\n spigot {\n     name = project.property(\"pluginName\")\n     authors = [project.property(\"author\")]\n-    apiVersion = project.property(\"apiVersion\")\n-\t//Comands\n \n+    apiVersion = project.property(\"apiVersion\")\n+    load = STARTUP\n+    softDepends = [\"PlaceholderAPI\",\"Vault\"]\n+\tloadBefore = [\"FastAsyncWorldEdit\", \"WorldEdit\", \"BuildersUtilities\",\"PlaceholderAPI\"]\n \tcommands {\n         \"ws\" {\n             description = 'All WorldSystem Commands'\n@@ -109,9 +117,7 @@ spigot {\n             description = 'You can confirm (if needed) an auto-update'\n             defaults = 'op'\n         }\n-    }\n-    load = STARTUP\n-    //    depends = ['']\n+\t}\n }\n \n compileJava {\n@@ -124,60 +130,56 @@ compileJava {\n archivesBaseName = project.property(\"pluginName\")\n \n repositories {\n-\n+    mavenCentral()\n     jcenter()\n-\n     spigot()\n-//    bungeecord()\n-//    paper()\n-//    protocolLib()\n-//    enginehub()\n-\n-    maven {\n+ // Commons - IO\n+    maven { url = \"https://mvnrepository.com/artifact/commons-io/commons-io\" }\n+    // WorldEdit\n+    maven { url = \"http://maven.enginehub.org/repo/\" }\n+      maven {\n             url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'\n-    }\n-    maven {\n+        }\n+        maven {\n             url = 'https://jitpack.io'\n-    }\n-    maven {\n+        }\n+        maven {\n             url = 'https://libraries.minecraft.net'\n-    }\n-    maven {\n-        url = 'https://repo.onarandombox.com/content/groups/public/'\n-    }\n-    maven {\n-        url = 'http://ci.athion.net/job/FastAsyncWorldEdit/ws/mvn/'\n-    }\n-    maven {\n-        url = 'http://maven.sk89q.com/repo/'\n-    }\n-    maven { url = \"https://mvn.intellectualsites.com/content/repositories/releases/\" }\n-    mavenCentral()\n+        }\n+        maven {\n+            url = 'https://repo.onarandombox.com/content/groups/public/'\n+        }\n+        maven {\n+            url = 'http://ci.athion.net/job/FastAsyncWorldEdit/ws/mvn/'\n+        }\n+        maven {\n+            url = 'http://maven.sk89q.com/repo/'\n+        }\n+        maven { url = \"https://mvn.intellectualsites.com/content/repositories/releases/\" }\n }\n \n dependencies {\n-    compileOnly lombok()\n-    annotationProcessor lombok()\n-\n     compileOnly spigot(mcVersion)\n \n     //Add dependencies here\n+\tworldedit()\n     //Test dependencies\n     testImplementation 'org.junit.jupiter:junit-jupiter:5.+'\n-    testImplementation \"org.mockito:mockito-core:3.+\"\n-    testImplementation mockBukkit()\n-    testImplementation 'org.assertj:assertj-core:3.+'\n-    testImplementation lombok()\n-    testAnnotationProcessor lombok()\n-\n-    compileOnly 'me.clip:placeholderapi:2.10.9'\n-    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'\n-    compileOnly 'com.mojang:authlib:1.5.25'\n-\tcompileOnly 'org.projectlombok:lombok:1.18.14'\n-    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.0.0-SNAPSHOT'\n-    compileOnly 'com.sk89q.worldedit:worldedit-core:7.0.0-SNAPSHOT'\n-    compile files('C:/Users/train/Desktop/Programing/Git/worldsystem/lib/commons-io-2.7.jar')\n-    compile files('C:/Users/train/Desktop/Programing/Git/worldsystem/lib/FastAsyncWorldEdit.jar')\n+        testImplementation \"org.mockito:mockito-core:3.+\"\n+        testImplementation mockBukkit()\n+        testImplementation 'org.assertj:assertj-core:3.+'\n+        testImplementation lombok()\n+        testAnnotationProcessor lombok()\n+\n+        compileOnly 'me.clip:placeholderapi:2.10.9'\n+        compileOnly 'com.github.MilkBowl:VaultAPI:1.7'\n+        compileOnly 'com.mojang:authlib:1.5.25'\n+        compileOnly 'org.projectlombok:lombok:1.18.14'\n+\n+        compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.2.0-SNAPSHOT'\n+        compileOnly 'com.sk89q.worldedit:worldedit-core:7.2.0-SNAPSHOT'\n+        compile group: 'commons-io', name: 'commons-io', version: '2.8.0'\n+        compileOnly files('lib/FastAsyncWorldEdit.jar')\n }\n \n shadowJar {\n@@ -190,6 +192,8 @@ shadowJar {\n }\n \n tasks.build.dependsOn(shadowJar)\n+//tasks.publish.dependsOn(shadowJar)\n+tasks.prepareSpigotPlugins.dependsOn(shadowJar)\n \n test {\n     useJUnitPlatform()\n@@ -205,4 +209,3 @@ processResources {\n }\n \n defaultTasks 'build'\n-"
  },
  {
    "sha": "4489fc29ce41550e3260102a17247e0f9300abbb",
    "filename": "gradle.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/gradle.properties",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/gradle.properties",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/gradle.properties?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -3,5 +3,4 @@ pluginName = WorldSystem\n author = Trainerlord & Butzlabben\n mcVersion = 1.16.2\n apiVersion = 1.15\n-version = 2.4.11\n-\n+version = 2.4.13-(21w02a)"
  },
  {
    "sha": "df5f136a67bf9e5750ee2f37a4a58c7004421400",
    "filename": "gradle/publish.gradle",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/gradle/publish.gradle",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/gradle/publish.gradle",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/gradle/publish.gradle?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -0,0 +1,53 @@\n+apply plugin: 'maven-publish'\n+\n+def getBranch() {\n+    def process = 'git branch --show-current'.execute()\n+    process.waitFor()\n+    return process.text.trim()\n+}\n+\n+def getHash() {\n+    def process = 'git rev-parse HEAD'.execute()\n+    process.waitFor()\n+    return process.text.trim()\n+}\n+\n+java {\n+    withJavadocJar()\n+    withSourcesJar()\n+}\n+\n+jar {\n+    manifest {\n+        attributes (\n+                'Build-Jdk': \"${System.properties['java.vendor']} ${System.properties['java.vm.version']}\",\n+                'Created-By': \"Gradle ${gradle.gradleVersion}\",\n+                'Git-Branch': getBranch(),\n+                'Git-Hash': getHash()\n+        )\n+    }\n+}\n+\n+publishing {\n+    publications {\n+        mavenJava(MavenPublication) {\n+            from components.java\n+        }\n+    }\n+    repositories {\n+        maven {\n+            name = \"GitHubPackages\"\n+            url = uri(\"https://maven.pkg.github.com/${project.findProperty(\"GITHUB_REPOSITORY\")?: System.getenv(\"GITHUB_REPOSITORY\")}\")\n+            credentials {\n+                username = project.findProperty(\"gpr.user\") ?: System.getenv(\"GITHUB_ACTOR\")\n+                password = project.findProperty(\"gpr.key\") ?: System.getenv(\"GITHUB_TOKEN\")\n+            }\n+        }\n+    }\n+}\n+\n+javadoc {\n+    if(JavaVersion.current().isJava9Compatible()) {\n+        options.addBooleanOption('html5', true)\n+    }\n+}"
  },
  {
    "sha": "8a0fb16f1816b2da92a7ad68735dfb4e27b4e05a",
    "filename": "lib/FastAsyncWorldEdit.jar",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/lib/FastAsyncWorldEdit.jar",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/lib/FastAsyncWorldEdit.jar",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/lib/FastAsyncWorldEdit.jar?ref=be1a2d9d5a464608237d8a67033fb34806749abe"
  },
  {
    "sha": "58894589299dc569abde1d4060b4e77b7c874957",
    "filename": "lib/commons-io-2.7.jar",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/7a23cbe084e4f986f9c3e4c6357c7cd4fca19f7b/lib/commons-io-2.7.jar",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/7a23cbe084e4f986f9c3e4c6357c7cd4fca19f7b/lib/commons-io-2.7.jar",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/lib/commons-io-2.7.jar?ref=7a23cbe084e4f986f9c3e4c6357c7cd4fca19f7b"
  },
  {
    "sha": "177e58dc65d1e2ba706a7535ec9f6f29927401be",
    "filename": "lib/commons-io-2.8.0.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/lib/commons-io-2.8.0.jar",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/lib/commons-io-2.8.0.jar",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/lib/commons-io-2.8.0.jar?ref=be1a2d9d5a464608237d8a67033fb34806749abe"
  },
  {
    "sha": "84201de9575ed962546837bc07a3f1b6b81b4bd2",
    "filename": "lombok.config",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/lombok.config",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/lombok.config",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/lombok.config?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -0,0 +1,3 @@\n+# This file is generated by the 'io.freefair.lombok' Gradle plugin\r\n+config.stopBubbling = true\r\n+lombok.addLombokGeneratedAnnotation = true\r"
  },
  {
    "sha": "f760ecbef9d9983a7fb44a45979a694f75f24c96",
    "filename": "package.json",
    "status": "modified",
    "additions": 4,
    "deletions": 22,
    "changes": 26,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/package.json",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/package.json",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/package.json?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -3,33 +3,15 @@\n     \"@semantic-release/changelog\": \"5.0.1\",\n     \"@semantic-release/commit-analyzer\": \"8.0.1\",\n     \"@semantic-release/git\": \"9.0.0\",\n-    \"@semantic-release/github\": \"7.1.1\",\n+    \"@semantic-release/github\": \"7.2.0\",\n     \"@semantic-release/release-notes-generator\": \"9.0.1\",\n-    \"commitlint\": \"11.0.0\",\n-    \"conventional-changelog-conventionalcommits\": \"4.4.0\",\n-    \"gradle-semantic-release-plugin\": \"1.4.8\",\n-    \"husky\": \"4.3.0\",\n-    \"lint-staged\": \"10.2.13\",\n-    \"prettier\": \"2.1.1\",\n-    \"semantic-release\": \"17.2.0\"\n+    \"conventional-changelog-conventionalcommits\": \"4.5.0\",\n+    \"gradle-semantic-release-plugin\": \"1.4.13\",\n+    \"semantic-release\": \"17.3.1\"\n   },\n   \"scripts\": {\n     \"semantic-release\": \"npx semantic-release\"\n   },\n-  \"husky\": {\n-    \"hooks\": {\n-      \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n-    }\n-  },\n-  \"lint-staged\": {\n-    \"*.{md,json}\": [\n-      \"prettier --write\",\n-      \"git add\"\n-    ],\n-    \"*.{gradle,java}\": [\n-      \"git add\"\n-    ]\n-  },\n   \"release\": {\n     \"plugins\": [\n       \"@semantic-release/commit-analyzer\","
  },
  {
    "sha": "e05aac8d5bb97897e8d40a11f603bfd50fde216d",
    "filename": "settings.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/settings.gradle",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/settings.gradle",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/settings.gradle?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -1 +1 @@\n-rootProject.name = 'World System'\n\\ No newline at end of file\n+rootProject.name = 'worldsystem'\n\\ No newline at end of file"
  },
  {
    "sha": "0797ff5ac1e42f5a1b46f7345098fbb1a693328e",
    "filename": "src/main/java/de/butzlabben/world/WorldSystem.java",
    "status": "modified",
    "additions": 50,
    "deletions": 38,
    "changes": 88,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/WorldSystem.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/WorldSystem.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/WorldSystem.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -2,32 +2,24 @@\n \n import de.butzlabben.world.autoupdater.AutoUpdater;\n import de.butzlabben.world.command.CommandRegistry;\n-import de.butzlabben.world.config.DependenceConfig;\n-import de.butzlabben.world.config.GuiConfig;\n-import de.butzlabben.world.config.MessageConfig;\n-import de.butzlabben.world.config.PluginConfig;\n-import de.butzlabben.world.config.SettingsConfig;\n-import de.butzlabben.world.listener.BlockListener;\n-import de.butzlabben.world.listener.CommandListener;\n-import de.butzlabben.world.listener.PlayerListener;\n-import de.butzlabben.world.listener.WorldEditListener;\n+import de.butzlabben.world.config.*;\n+import de.butzlabben.world.listener.*;\n import de.butzlabben.world.util.PapiExtension;\n import de.butzlabben.world.util.PlayerPositions;\n import de.butzlabben.world.util.VersionUtil;\n import de.butzlabben.world.util.database.DatabaseProvider;\n import de.butzlabben.world.wrapper.AsyncCreatorAdapter;\n import de.butzlabben.world.wrapper.CreatorAdapter;\n import de.butzlabben.world.wrapper.SystemWorld;\n-import java.io.File;\n-import java.io.IOException;\n import org.bstats.bukkit.Metrics;\n import org.bukkit.Bukkit;\n import org.bukkit.World;\n-\n import org.bukkit.configuration.file.YamlConfiguration;\n import org.bukkit.plugin.PluginManager;\n import org.bukkit.plugin.java.JavaPlugin;\n \n+import java.io.File;\n+import java.io.IOException;\n /**\n  * @author Butzlabben\n  * @author Jubeki\n@@ -38,59 +30,82 @@\n     private static boolean is1_13Plus = false;\n     final private String version = this.getDescription().getVersion();\n     private CreatorAdapter creator;\n+\n+    /**\n+     createConfigs()\n+\n+     creates all necessary config files for the plugin to run\n+     */\n     public static void createConfigs() {\n+            //Registers the plugin data folder as a variable\n         File folder = getInstance().getDataFolder();\n+            //Grabs/Creates the World Sources Directory and stores it as a variable\n         File dir = new File(folder + \"/worldsources\");\n+            // Grabs/Creates The Config File and stores it as a variable\n         File config = new File(folder, \"config.yml\");\n+            // Grabs/Creates Dependence Config and stores it as a variable\n         File dconfig = new File(folder, \"dependence.yml\");\n+            //Grabs/Creates the directory for language files and stores it as a variable\n         File languages = new File(folder + \"/languages\");\n+            //Grabs/Creates the gui config file and stores it as a variable\n         File gui = new File(folder, \"gui.yml\");\n \n-        if (!dir.exists()) {\n+            //checks to make sure the worldsources directory exists\n+        if (!dir.exists())\n+                //the it doesn't exist, it is created\n             dir.mkdirs();\n-        }\n \n+            //checks to make sure the language directory exists\n         if (!languages.exists())\n+                //the it doesn't exist, it is created\n             languages.mkdirs();\n \n+            //Calls a method from the Bukkit Class **Plugin Config** to make sure the template config\n+            //matchs the one in the data folder.\n         PluginConfig.checkConfig(config);\n \n-        // Done with #6\n-        MessageConfig.checkConfig(new File(languages, \"en.yml\"));\n-\n-        MessageConfig.checkConfig(new File(languages, \"de.yml\"));\n+            //Registers and creates all the language files for the plugin\n+        MessageConfig.checkConfig(new File(languages, \"en.yml\"));//Registers english\n+        MessageConfig.checkConfig(new File(languages, \"de.yml\"));//Registers German\n         MessageConfig.checkConfig(new File(languages, \"hu.yml\"));\n         MessageConfig.checkConfig(new File(languages, \"nl.yml\"));\n         MessageConfig.checkConfig(new File(languages, \"pl.yml\"));\n         MessageConfig.checkConfig(new File(languages, \"es.yml\"));\n-        MessageConfig.checkConfig(new File(languages, \"ru.yml\"));\n+        MessageConfig.checkConfig(new File(languages, \"ru.yml\"));//Registers Russian\n         MessageConfig.checkConfig(new File(languages, \"fi.yml\"));\n         MessageConfig.checkConfig(new File(languages, \"ja.yml\"));\n-        // Here we are for #5\n         MessageConfig.checkConfig(new File(languages, \"zh.yml\"));\n-        MessageConfig.checkConfig(new File(languages, \"fr.yml\"));\n+        MessageConfig.checkConfig(new File(languages, \"fr.yml\"));//Registers French\n \n-        // If has custom language\n+            //Registers and creates language files for custom languages\n         MessageConfig.checkConfig(new File(languages, PluginConfig.getLanguage() + \".yml\"));\n \n+            //checks to make sure the DependenceConfig exists\n         if (!dconfig.exists()) {\n+                //Uses a try catch statement to create the DependenceConfig.\n             try {\n                 dconfig.createNewFile();\n             } catch (IOException e) {\n+                    //Prints the Error the the console for the server operator.\n                 System.err.println(\"Wasn't able to create DependenceConfig\");\n                 e.printStackTrace();\n             }\n             new DependenceConfig();\n         }\n-\n+            //creates a YAML Interpreter\n         YamlConfiguration cfg = YamlConfiguration.loadConfiguration(config);\n+            //Checks for any errors in Settings Config (settings.yml)\n         SettingsConfig.checkConfig();\n \n+        //Grabs the Director for where user worlds will be stored\n         File worlddir = new File(cfg.getString(\"worldfolder\"));\n+        //Checks if the world directory exists\n         if (!worlddir.exists()) {\n+            //creates the world directory\n             worlddir.mkdirs();\n         }\n \n+        //Checks for any errors in Gui Config (gui.yml)\n         GuiConfig.checkConfig(gui);\n     }\n \n@@ -120,6 +135,7 @@ public void onEnable() {\n         pm.registerEvents(new PlayerListener(), this);\n         pm.registerEvents(new BlockListener(), this);\n         pm.registerEvents(new CommandListener(), this);\n+        pm.registerEvents(new WorldInitSkipSpawn(), this);\n         if (pm.getPlugin(\"WorldEdit\") != null)\n             pm.registerEvents(new WorldEditListener(), this);\n \n@@ -132,14 +148,16 @@ public void onEnable() {\n                     20 * PluginConfig.getGCPeriod());\n         }\n \n+\n+        /* TODO better check this only on worldInitEvent\n         Bukkit.getScheduler().scheduleSyncRepeatingTask(this, () -> {\n             for (World w : Bukkit.getWorlds()) {\n                 SystemWorld sw = SystemWorld.getSystemWorld(w.getName());\n                 if (sw != null && sw.isLoaded())\n                     SettingsConfig.editWorld(w);\n \n             }\n-        }, 20, 20 * 10);\n+        }, 20, 20 * 10);*/\n \n         Bukkit.getScheduler().scheduleSyncRepeatingTask(this, () -> {\n             for (World w : Bukkit.getWorlds()) {\n@@ -158,26 +176,19 @@ public void onEnable() {\n         //this.getCommand(\"ws tnt\").setExecutor(new WorldTnt());\n         //this.getCommand(\"ws fire\").setExecutor(new WorldFire());\n \n-\n-\n-\n-\n-\n-\n         System.setProperty(\"bstats.relocatecheck\", \"false\");\n         Metrics m = new Metrics(this);\n         m.addCustomChart(new Metrics.SingleLineChart(\"worlds\", DependenceConfig::getHighestID));\n \n         AutoUpdater.startAsync();\n \n         // Choose right creatoradapter for #16\n-        if (Bukkit.getPluginManager().getPlugin(\"FastAsyncWorldEdit\") != null\n-                && Bukkit.getPluginManager().getPlugin(\"WorldEdit\") != null\n-                && PluginConfig.loadWorldsASync()\n-                && !is1_13Plus) {\n+        if (Bukkit.getPluginManager().getPlugin(\"FastAsyncWorldEdit\") != null && Bukkit.getPluginManager().getPlugin(\"WorldEdit\") != null && PluginConfig.loadWorldsASync() && !is1_13Plus) {\n+            System.out.println(\"Registering Adapter\");\n             creator = new AsyncCreatorAdapter();\n-            Bukkit.getConsoleSender()\n-                    .sendMessage(PluginConfig.getPrefix() + \"Found FAWE! Worlds now will be created asynchronously\");\n+            System.out.println(\"Logging Adapter\");\n+            Bukkit.getConsoleSender().sendMessage(PluginConfig.getPrefix() + \"Found FAWE! Worlds now will be created asynchronously\");\n+\n         } else {\n             creator = (c, sw, r) -> {\n                 Bukkit.getWorlds().add(c.createWorld());\n@@ -193,9 +204,10 @@ public void onEnable() {\n                     + \"Searching for old worlds to delete if not loaded for \" + PluginConfig.deleteAfter() + \" days\");\n             DependenceConfig.checkWorlds();\n         }\n-\n-        if (Bukkit.getPluginManager().isPluginEnabled(\"PlaceholderAPI\"))\n+        if (Bukkit.getPluginManager().getPlugin(\"PlaceholderAPI\") != null) {\n             new PapiExtension().register();\n+            System.out.println(PluginConfig.getPrefix() + \"Found PlaceholderAPI\");\n+        }\n \n         Bukkit.getConsoleSender().sendMessage(PluginConfig.getPrefix() + \"Successfully enabled WorldSystem v\" + version);\n     }"
  },
  {
    "sha": "a89d0410e279a35ca1eb1a225b0daaf5a3fa8b75",
    "filename": "src/main/java/de/butzlabben/world/autoupdater/UpdateInformations.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/autoupdater/UpdateInformations.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/autoupdater/UpdateInformations.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/autoupdater/UpdateInformations.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -27,7 +27,7 @@ public UpdateInformations(String version, String url, String plugin, boolean sil\n     }\n \n     protected static synchronized UpdateInformations getInformations() {\n-        String json = callURL(\"https://zendilu.net/butzlabben/worldsystem/info.php?version=\" + WorldSystem.getInstance().getDescription().getVersion());\n+        String json = callURL(\"trainerlordDevelopment.uk.to/autoUpdater/worldsystem.php\" + WorldSystem.getInstance().getDescription().getVersion());\n         Gson gson = new GsonBuilder().create();\n         return gson.fromJson(json, UpdateInformations.class);\n     }"
  },
  {
    "sha": "34e3500b66db8e56c285dd742076c5d7a7d294c4",
    "filename": "src/main/java/de/butzlabben/world/command/CommandRegistry.java",
    "status": "modified",
    "additions": 27,
    "deletions": 9,
    "changes": 36,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/command/CommandRegistry.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/command/CommandRegistry.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/command/CommandRegistry.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -3,13 +3,11 @@\n import de.butzlabben.world.command.commands.WSCommands;\r\n import de.butzlabben.world.command.commands.WorldAdministrateCommand;\r\n import de.butzlabben.world.command.commands.WorldSettingsCommands;\r\n+import de.butzlabben.world.util.Worldutils;\r\n+import de.butzlabben.world.wrapper.WorldTemplateProvider;\r\n import org.bukkit.command.Command;\r\n import org.bukkit.command.CommandExecutor;\r\n import org.bukkit.command.CommandSender;\r\n-import static de.butzlabben.world.command.commands.WSCommands.*;\r\n-import static de.butzlabben.world.command.commands.WorldAdministrateCommand.*;\r\n-\r\n-import java.util.List;\r\n \r\n \r\n public class CommandRegistry implements CommandExecutor {\r\n@@ -27,9 +25,9 @@ public boolean onCommand(CommandSender sender, Command command, String label, St\n             switch (args[0]) {\r\n                 //WSCommands\r\n                 case \"get\":\r\n-                        return ws.getCommand(sender, command, label, args);\r\n+                    return ws.getCommand(sender, command, label, args);\r\n                 case \"gui\":\r\n-                        return ws.guiCommand(sender, command, label, args);\r\n+                    return ws.guiCommand(sender, command, label, args);\r\n                 case \"confirm\":\r\n                     if (sender.hasPermission(\"ws.confirm\")) {\r\n                         return ws.confirmCommand(sender, command, label, args);\r\n@@ -43,8 +41,19 @@ public boolean onCommand(CommandSender sender, Command command, String label, St\n                 case \"leave\":\r\n                     return ws.leaveCommand(sender, command, label, args);\r\n                 case \"tp\":\r\n-                        return ws.tpCommand(sender, command, label, args);\r\n+                    return ws.tpCommand(sender, command, label, args);\r\n                 //Admin Command\r\n+                case \"day\":\r\n+                    return admin.setTime(sender,0);\r\n+                case \"night\":\r\n+                    return admin.setTime(sender,14000);\r\n+                case \"time\":\r\n+                    return admin.setTime(sender, args[1]);\r\n+                case \"rain\":\r\n+                case \"storm\":\r\n+                    return admin.setStorm(sender,true);\r\n+                case \"sun\":\r\n+                    return admin.setStorm(sender, false);\r\n                 case \"delmember\":\r\n                     return admin.delMemberCommand(sender, command, label, args);\r\n                 case \"delete\":\r\n@@ -68,6 +77,7 @@ public boolean onCommand(CommandSender sender, Command command, String label, St\n                     return settings.resetCommand(sender, command, label, args);\r\n                 case \"sethome\":\r\n                     sender.sendMessage(\"Disabled For Major Error and Rework\");\r\n+                    return false;\r\n                             /*\r\n                     if (sender.hasPermission(\"ws.sethome\")) {\r\n                         return settings.setHomeCommand(sender, command, label, args);\r\n@@ -78,9 +88,17 @@ public boolean onCommand(CommandSender sender, Command command, String label, St\n                     return settings.tntCommand(sender, command, label, args);\r\n                 case \"fire\":\r\n                     return settings.fireCommand(sender, command, label, args);\r\n+                case \"reload\":\r\n+                    if(!sender.isOp()){\r\n+                        sender.sendMessage(\"Reloading Settings!\");\r\n+                        WorldTemplateProvider.getInstance().reload();\r\n+                        Worldutils.reloadWorldSettings();\r\n+                        return true;\r\n+                    }\r\n                 default:\r\n-                    return false;\r\n+                    //default command is better than the other one\r\n+                    return ws.mainCommand(sender, command, label, args);\r\n             }\r\n         }\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "9718c0fa915c798a8344d308542844c2d0fe0d2b",
    "filename": "src/main/java/de/butzlabben/world/command/commands/WSCommands.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/command/commands/WSCommands.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/command/commands/WSCommands.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/command/commands/WSCommands.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -28,13 +28,16 @@ public boolean mainCommand(CommandSender sender, Command command, String label,\n \r\n         String prefix = PluginConfig.getPrefix();\r\n         cs.sendMessage(\r\n-                prefix + \"WorldSystem by Butzlabben v\" + WorldSystem.getInstance().getDescription().getVersion());\r\n+                prefix + \"WorldSystem by Butzlabben v + Trainerlord\" + WorldSystem.getInstance().getDescription().getVersion());\r\n         cs.sendMessage(prefix + \"Contributors: Jubeki, montlikadani, jstoeckm2\");\r\n         List<String> cmdHelp = MessageConfig.getCommandHelp();\r\n         cmdHelp.forEach(s -> cs.sendMessage(prefix + s));\r\n         if (cs.hasPermission(\"ws.delete\")) {\r\n             cs.sendMessage(MessageConfig.getDeleteCommandHelp());\r\n         }\r\n+        if (cs.hasPermission(\"ws.saveall\")) {\r\n+            cs.sendMessage(MessageConfig.getSaveCommandHelp());\r\n+        }\r\n         return true;\r\n     }\r\n \r"
  },
  {
    "sha": "181c20f05a0318af398c2da92f67bb1b88c5aaec",
    "filename": "src/main/java/de/butzlabben/world/command/commands/WorldAdministrateCommand.java",
    "status": "modified",
    "additions": 152,
    "deletions": 76,
    "changes": 228,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/command/commands/WorldAdministrateCommand.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/command/commands/WorldAdministrateCommand.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/command/commands/WorldAdministrateCommand.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -9,11 +9,13 @@\n import de.butzlabben.world.event.WorldDeleteEvent;\r\n import de.butzlabben.world.event.WorldRemovememberEvent;\r\n import de.butzlabben.world.util.PlayerPositions;\r\n+import de.butzlabben.world.util.PlayerWrapper;\r\n import de.butzlabben.world.wrapper.SystemWorld;\r\n import de.butzlabben.world.wrapper.WorldPlayer;\r\n import org.apache.commons.io.FileUtils;\r\n import org.bukkit.Bukkit;\r\n import org.bukkit.OfflinePlayer;\r\n+import org.bukkit.World;\r\n import org.bukkit.command.Command;\r\n import org.bukkit.command.CommandSender;\r\n import org.bukkit.configuration.file.YamlConfiguration;\r\n@@ -24,51 +26,115 @@\n \r\n public class WorldAdministrateCommand {\r\n \r\n-    public boolean delMemberCommand(CommandSender sender, Command command, String label, String[] args) {\r\n-        if (sender instanceof Player) {\r\n-            Player p = (Player) sender;\r\n-        if (args.length < 2) {\r\n-            p.sendMessage(MessageConfig.getWrongUsage().replaceAll(\"%usage\", \"/ws delmember <Player>\"));\r\n-            return false;\r\n+    public boolean setTime(CommandSender sender, String ticks) {\r\n+        switch (ticks) {\r\n+            case \"day\":\r\n+                return setTime(sender, 0);\r\n+            case \"night\":\r\n+                return setTime(sender, 14000);\r\n+            case \"dawn\":\r\n+                return setTime(sender, 23000);\r\n+            default:\r\n+                try {\r\n+                    return setTime(sender, Long.parseLong(ticks));\r\n+                } catch (NumberFormatException e) {\r\n+                    sender.sendMessage(MessageConfig.getWrongUsage().replaceAll(\"%usage\", \"/ws time [day/night/dawn/0-24000]\"));\r\n+                    return false;\r\n+                }\r\n+\r\n         }\r\n+    }\r\n \r\n+    public boolean setStorm(CommandSender sender, boolean storm) {\r\n+        if (!(sender instanceof Player)) {\r\n+            sender.sendMessage(\"Command has to be executed as a player!\");\r\n+            return false;\r\n+        }\r\n+        Player p = (Player) sender;\r\n         DependenceConfig dc = new DependenceConfig(p);\r\n         if (!dc.hasWorld()) {\r\n-            p.sendMessage(MessageConfig.getNoWorldOwn());\r\n+            p.sendMessage(MessageConfig.getNotOnWorld());\r\n             return false;\r\n         }\r\n \r\n-        @SuppressWarnings(\"deprecation\")\r\n-        OfflinePlayer a = Bukkit.getOfflinePlayer(args[1]);\r\n-        WorldConfig wc = WorldConfig.getWorldConfig(dc.getWorldname());\r\n-        if (a == null) {\r\n-            p.sendMessage(MessageConfig.getNotRegistered().replaceAll(\"%player\", args[1]));\r\n-            return false;\r\n-        } else if (!wc.isMember(a.getUniqueId())) {\r\n-            p.sendMessage(MessageConfig.getNoMemberOwn());\r\n-            return false;\r\n+        if (dc.getWorldname().equals(p.getWorld().getName())) {\r\n+            p.getWorld().setStorm(storm);\r\n+            return true;\r\n         }\r\n-        WorldRemovememberEvent event = new WorldRemovememberEvent(a.getUniqueId(), dc.getWorldname(), p);\r\n-        Bukkit.getPluginManager().callEvent(event);\r\n-        if (event.isCancelled())\r\n+\r\n+\r\n+        p.sendMessage(MessageConfig.getNotOnWorld());\r\n+        return false;\r\n+    }\r\n+\r\n+    public boolean setTime(CommandSender sender, long ticks) {\r\n+        if (!(sender instanceof Player)) {\r\n+            sender.sendMessage(\"Command has to be executed as a player!\");\r\n             return false;\r\n+        }\r\n \r\n-        if (a.isOnline()) {\r\n-            Player t = (Player) a;\r\n-            if (t.getWorld().getName().equals(new DependenceConfig(p).getWorldname())) {\r\n-                t.teleport(PluginConfig.getSpawn(t));\r\n-                t.setGameMode(PluginConfig.getSpawnGamemode());\r\n-            }\r\n+        Player p = (Player) sender;\r\n+        DependenceConfig dc = new DependenceConfig(p);\r\n+        if (!dc.hasWorld()) {\r\n+            p.sendMessage(MessageConfig.getNotOnWorld());\r\n+            return false;\r\n         }\r\n \r\n-        wc.removeMember(a.getUniqueId());\r\n-        try {\r\n-            wc.save();\r\n-        } catch (IOException e) {\r\n-            p.sendMessage(MessageConfig.getUnknownError());\r\n-            e.printStackTrace();\r\n+        if (dc.getWorldname().equals(p.getWorld().getName())) {\r\n+            p.getWorld().setTime(ticks);\r\n+            return true;\r\n         }\r\n-        p.sendMessage(MessageConfig.getMemberRemoved().replaceAll(\"%player\", a.getName()));\r\n+\r\n+\r\n+        p.sendMessage(MessageConfig.getNotOnWorld());\r\n+        return false;\r\n+    }\r\n+\r\n+    public boolean delMemberCommand(CommandSender sender, Command command, String label, String[] args) {\r\n+        if (sender instanceof Player) {\r\n+            Player p = (Player) sender;\r\n+            if (args.length < 2) {\r\n+                p.sendMessage(MessageConfig.getWrongUsage().replaceAll(\"%usage\", \"/ws delmember <Player>\"));\r\n+                return false;\r\n+            }\r\n+\r\n+            DependenceConfig dc = new DependenceConfig(p);\r\n+            if (!dc.hasWorld()) {\r\n+                p.sendMessage(MessageConfig.getNoWorldOwn());\r\n+                return false;\r\n+            }\r\n+\r\n+            @SuppressWarnings(\"deprecation\")\r\n+            OfflinePlayer a = PlayerWrapper.getOfflinePlayer(args[1]);\r\n+            WorldConfig wc = WorldConfig.getWorldConfig(dc.getWorldname());\r\n+            if (a == null) {\r\n+                p.sendMessage(MessageConfig.getNotRegistered().replaceAll(\"%player\", args[1]));\r\n+                return false;\r\n+            } else if (!wc.isMember(a.getUniqueId())) {\r\n+                p.sendMessage(MessageConfig.getNoMemberOwn());\r\n+                return false;\r\n+            }\r\n+            WorldRemovememberEvent event = new WorldRemovememberEvent(a.getUniqueId(), dc.getWorldname(), p);\r\n+            Bukkit.getPluginManager().callEvent(event);\r\n+            if (event.isCancelled())\r\n+                return false;\r\n+\r\n+            if (a.isOnline()) {\r\n+                Player t = (Player) a;\r\n+                if (t.getWorld().getName().equals(new DependenceConfig(p).getWorldname())) {\r\n+                    t.teleport(PluginConfig.getSpawn(t));\r\n+                    t.setGameMode(PluginConfig.getSpawnGamemode());\r\n+                }\r\n+            }\r\n+\r\n+            wc.removeMember(a.getUniqueId());\r\n+            try {\r\n+                wc.save();\r\n+            } catch (IOException e) {\r\n+                p.sendMessage(MessageConfig.getUnknownError());\r\n+                e.printStackTrace();\r\n+            }\r\n+            p.sendMessage(MessageConfig.getMemberRemoved().replaceAll(\"%player\", a.getName()));\r\n             return true;\r\n         } else {\r\n             sender.sendMessage(\"No Console\"); //TODO Get Config\r\n@@ -139,8 +205,11 @@ public boolean deleteCommand(CommandSender sender, Command command, String label\n     }\r\n \r\n     public boolean addMemberCommand(CommandSender sender, Command command, String label, String[] args) {\r\n-        if (sender instanceof Player) {\r\n-            Player p = (Player) sender;\r\n+        if (!(sender instanceof Player)) {\r\n+            sender.sendMessage(\"No Console\"); //TODO Get Config\r\n+            return false;\r\n+        }\r\n+        Player p = (Player) sender;\r\n         if (args.length < 2) {\r\n             p.sendMessage(MessageConfig.getWrongUsage().replaceAll(\"%usage\", \"/ws addmember <Player>\"));\r\n             return false;\r\n@@ -151,8 +220,7 @@ public boolean addMemberCommand(CommandSender sender, Command command, String la\n             p.sendMessage(MessageConfig.getNoWorldOwn());\r\n             return false;\r\n         }\r\n-        @SuppressWarnings(\"deprecation\")\r\n-        OfflinePlayer a = Bukkit.getOfflinePlayer(args[1]);\r\n+        OfflinePlayer a = PlayerWrapper.getOfflinePlayer(args[1]);\r\n         WorldConfig wc = WorldConfig.getWorldConfig(dc.getWorldname());\r\n         if (a == null) {\r\n             p.sendMessage(MessageConfig.getNotRegistered().replaceAll(\"%player\", args[1]));\r\n@@ -176,10 +244,6 @@ public boolean addMemberCommand(CommandSender sender, Command command, String la\n         }\r\n         p.sendMessage(MessageConfig.getMemberAdded().replaceAll(\"%player\", a.getName()));\r\n             return true;\r\n-        } else {\r\n-            sender.sendMessage(\"No Console\"); //TODO Get Config\r\n-            return false;\r\n-        }\r\n     }\r\n \r\n     public boolean toggleTeleportCommand(CommandSender sender, Command command, String label, String[] args) {\r\n@@ -195,8 +259,7 @@ public boolean toggleTeleportCommand(CommandSender sender, Command command, Stri\n                 p.sendMessage(MessageConfig.getNoWorldOwn());\r\n                 return false;\r\n             }\r\n-            @SuppressWarnings(\"deprecation\")\r\n-            OfflinePlayer a = Bukkit.getOfflinePlayer(args[1]);\r\n+            OfflinePlayer a = PlayerWrapper.getOfflinePlayer(args[1]);\r\n             WorldConfig wc = WorldConfig.getWorldConfig(dc.getWorldname());\r\n             if (!wc.isMember(a.getUniqueId())) {\r\n                 p.sendMessage(MessageConfig.getNoMemberOwn());\r\n@@ -222,33 +285,33 @@ public boolean toggleTeleportCommand(CommandSender sender, Command command, Stri\n     public boolean toggleGamemodeCommand(CommandSender sender, Command command, String label, String[] args) {\r\n         if (sender instanceof Player) {\r\n             Player p = (Player) sender;\r\n-        if (args.length < 2) {\r\n-            p.sendMessage(MessageConfig.getWrongUsage().replaceAll(\"%usage\", \"/ws togglegm <Player>\"));\r\n-            return false;\r\n-        }\r\n+            if (args.length < 2) {\r\n+                p.sendMessage(MessageConfig.getWrongUsage().replaceAll(\"%usage\", \"/ws togglegm <Player>\"));\r\n+                return false;\r\n+            }\r\n \r\n-        DependenceConfig dc = new DependenceConfig(p);\r\n-        if (!dc.hasWorld()) {\r\n-            p.sendMessage(MessageConfig.getNoWorldOwn());\r\n-            return false;\r\n-        }\r\n-        @SuppressWarnings(\"deprecation\")\r\n-        OfflinePlayer a = Bukkit.getOfflinePlayer(args[1]);\r\n-        WorldConfig wc = WorldConfig.getWorldConfig(dc.getWorldname());\r\n-        if (!wc.isMember(a.getUniqueId())) {\r\n-            p.sendMessage(MessageConfig.getNoMemberOwn());\r\n-            return false;\r\n-        }\r\n-        WorldPlayer wp = new WorldPlayer(a, dc.getWorldname());\r\n-        if (wp.isOwnerofWorld()) {\r\n-            p.sendMessage(PluginConfig.getPrefix() + \"§cYou are the owner\");\r\n-            return false;\r\n-        }\r\n-        if (wp.toggleGamemode()) {\r\n-            p.sendMessage(MessageConfig.getToggleGameModeEnabled().replaceAll(\"%player\", a.getName()));\r\n-        } else {\r\n-            p.sendMessage(MessageConfig.getToggleGameModeDisabled().replaceAll(\"%player\", a.getName()));\r\n-        }\r\n+            DependenceConfig dc = new DependenceConfig(p);\r\n+            if (!dc.hasWorld()) {\r\n+                p.sendMessage(MessageConfig.getNoWorldOwn());\r\n+                return false;\r\n+            }\r\n+            @SuppressWarnings(\"deprecation\")\r\n+            OfflinePlayer a = PlayerWrapper.getOfflinePlayer(args[1]);\r\n+            WorldConfig wc = WorldConfig.getWorldConfig(dc.getWorldname());\r\n+            if (!wc.isMember(a.getUniqueId())) {\r\n+                p.sendMessage(MessageConfig.getNoMemberOwn());\r\n+                return false;\r\n+            }\r\n+            WorldPlayer wp = new WorldPlayer(a, dc.getWorldname());\r\n+            if (wp.isOwnerofWorld()) {\r\n+                p.sendMessage(PluginConfig.getPrefix() + \"§cYou are the owner\");\r\n+                return false;\r\n+            }\r\n+            if (wp.toggleGamemode()) {\r\n+                p.sendMessage(MessageConfig.getToggleGameModeEnabled().replaceAll(\"%player\", a.getName()));\r\n+            } else {\r\n+                p.sendMessage(MessageConfig.getToggleGameModeDisabled().replaceAll(\"%player\", a.getName()));\r\n+            }\r\n             return true;\r\n         } else {\r\n             sender.sendMessage(\"No Console\"); //TODO Get Config\r\n@@ -270,7 +333,7 @@ public boolean toggleWorldeditCommand(CommandSender sender, Command command, Str\n                 return false;\r\n             }\r\n             @SuppressWarnings(\"deprecation\")\r\n-            OfflinePlayer a = Bukkit.getOfflinePlayer(args[1]);\r\n+            OfflinePlayer a = PlayerWrapper.getOfflinePlayer(args[1]);\r\n             WorldConfig wc = WorldConfig.getWorldConfig(dc.getWorldname());\r\n             if (!wc.isMember(a.getUniqueId())) {\r\n                 p.sendMessage(MessageConfig.getNoMemberOwn());\r\n@@ -294,8 +357,8 @@ public boolean toggleWorldeditCommand(CommandSender sender, Command command, Str\n     }\r\n \r\n     public boolean toggleBuildCommand(CommandSender sender, Command command, String label, String[] args) {\r\n-            if (sender instanceof Player) {\r\n-                Player p = (Player) sender;\r\n+        if (sender instanceof Player) {\r\n+            Player p = (Player) sender;\r\n             if (args.length < 2) {\r\n                 p.sendMessage(MessageConfig.getWrongUsage().replaceAll(\"%usage\", \"/ws togglebuild <Player>\"));\r\n                 return false;\r\n@@ -307,7 +370,7 @@ public boolean toggleBuildCommand(CommandSender sender, Command command, String\n                 return false;\r\n             }\r\n             @SuppressWarnings(\"deprecation\")\r\n-            OfflinePlayer a = Bukkit.getOfflinePlayer(args[1]);\r\n+            OfflinePlayer a = PlayerWrapper.getOfflinePlayer(args[1]);\r\n             WorldConfig wc = WorldConfig.getWorldConfig(dc.getWorldname());\r\n             if (!wc.isMember(a.getUniqueId())) {\r\n                 p.sendMessage(MessageConfig.getNoMemberOwn());\r\n@@ -323,10 +386,23 @@ public boolean toggleBuildCommand(CommandSender sender, Command command, String\n             } else {\r\n                 p.sendMessage(MessageConfig.getToggleBuildDisabled().replaceAll(\"%player\", a.getName()));\r\n             }\r\n-                return true;\r\n-            } else {\r\n-                sender.sendMessage(\"No Console\"); //TODO Get Config\r\n-                return false;\r\n+            return true;\r\n+        } else {\r\n+            sender.sendMessage(\"No Console\"); //TODO Get Config\r\n+            return false;\r\n+        }\r\n+    }\r\n+\r\n+    public boolean saveAll(CommandSender sender, Command command, String label, String[] args) {\r\n+        if (sender.hasPermission(\"ws.saveall\")) {\r\n+            for (World w : Bukkit.getWorlds()) {\r\n+                SystemWorld sw = SystemWorld.getSystemWorld(w.getName());\r\n+                if (sw != null && sw.isLoaded()) {\r\n+                    sw.directUnload(w);\r\n+                }\r\n             }\r\n+            return true;\r\n         }\r\n+        return false;\r\n+    }\r\n }\r"
  },
  {
    "sha": "d303c176206397d318c9445d820c1ec8354da22b",
    "filename": "src/main/java/de/butzlabben/world/config/DependenceConfig.java",
    "status": "modified",
    "additions": 163,
    "deletions": 163,
    "changes": 326,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/config/DependenceConfig.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/config/DependenceConfig.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/config/DependenceConfig.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -1,163 +1,163 @@\n-package de.butzlabben.world.config;\n-\n-import org.bukkit.Bukkit;\n-import org.bukkit.OfflinePlayer;\n-import org.bukkit.configuration.file.YamlConfiguration;\n-import org.bukkit.entity.Player;\n-\n-import java.io.File;\n-import java.io.IOException;\n-import java.util.UUID;\n-\n-public class DependenceConfig {\n-\n-    private UUID uuid;\n-\n-    public DependenceConfig() {\n-        setConfig();\n-    }\n-\n-    @SuppressWarnings(\"deprecation\")\n-    public DependenceConfig(String s) {\n-        OfflinePlayer op = null;\n-        try {\n-            op = Bukkit.getOfflinePlayer(UUID.fromString(s));\n-        } catch (Exception ignored) {\n-        }\n-        if (op == null) {\n-            op = Bukkit.getOfflinePlayer(s);\n-        }\n-        uuid = op.getUniqueId();\n-    }\n-\n-    public DependenceConfig(Player p) {\n-        uuid = p.getUniqueId();\n-        refreshName();\n-    }\n-\n-    public DependenceConfig(OfflinePlayer p) {\n-        uuid = p.getUniqueId();\n-        refreshName();\n-    }\n-\n-    public DependenceConfig(UUID uuid) {\n-        this.uuid = uuid;\n-    }\n-\n-    public static int getHighestID() {\n-        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\n-        YamlConfiguration dcfg = YamlConfiguration.loadConfiguration(dconfig);\n-        return dcfg.getInt(\"HighestID\");\n-    }\n-\n-    public static void checkWorlds() {\n-        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\n-        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\n-\n-        long deleteTime = 1000 * 60 * 60 * 24 * PluginConfig.deleteAfter();\n-        long now = System.currentTimeMillis();\n-        for (String s : cfg.getConfigurationSection(\"Dependences\").getKeys(false)) {\n-            if (!cfg.isLong(\"Dependences.\" + s + \".last_loaded\") && !cfg.isInt(\"Dependences.\" + s + \".last_loaded\"))\n-                continue;\n-            long lastLoaded = cfg.getLong(\"Dependences.\" + s + \".last_loaded\");\n-            long diff = now - lastLoaded;\n-            if (diff > deleteTime) {\n-                Bukkit.getConsoleSender().sendMessage(\n-                        PluginConfig.getPrefix() + \"World of \" + s + \" was not loaded for too long. Deleting!\");\n-                Bukkit.dispatchCommand(Bukkit.getConsoleSender(), \"ws delete \" + s);\n-            }\n-        }\n-    }\n-\n-    private void setConfig() {\n-        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\n-        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\n-        cfg.set(\"HighestID\", -1);\n-        try {\n-            cfg.save(dconfig);\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n-    public void refreshName() {\n-        if (hasWorld()) {\n-            File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\n-            YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\n-            String uuid = this.uuid.toString();\n-            cfg.set(\"Dependences.\" + uuid + \".ActualName\", Bukkit.getOfflinePlayer(this.uuid).getName());\n-            try {\n-                cfg.save(dconfig);\n-            } catch (IOException e) {\n-                e.printStackTrace();\n-            }\n-        }\n-    }\n-\n-    public void createNewEntry() {\n-        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\n-        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\n-        String uuid = this.uuid.toString();\n-        int id = cfg.getInt(\"HighestID\");\n-        id++;\n-        cfg.set(\"HighestID\", id);\n-        cfg.set(\"Dependences.\" + uuid + \".ID\", id);\n-        cfg.set(\"Dependences.\" + uuid + \".ActualName\", Bukkit.getOfflinePlayer(this.uuid).getName());\n-        try {\n-            cfg.save(dconfig);\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n-    public boolean hasWorld() {\n-        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\n-        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\n-        String uuid = this.uuid.toString();\n-        //Fix for #40\n-        return cfg.isInt(\"Dependences.\" + uuid + \".ID\");\n-    }\n-\n-    public String getWorldname() {\n-        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\n-        YamlConfiguration dcfg = YamlConfiguration.loadConfiguration(dconfig);\n-        String uuid = this.uuid.toString();\n-        int id = dcfg.getInt(\"Dependences.\" + uuid + \".ID\");\n-        return \"ID\" + id + \"-\" + uuid;\n-    }\n-\n-    public String getWorldNameByOfflinePlayer() {\n-        String name;\n-        String uuid = this.uuid.toString();\n-        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\n-        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\n-        if (cfg.getString(\"Dependences.\" + uuid + \".ActualName\") == null) {\n-            name = \"n\";\n-        } else {\n-            name = \"ID\" + cfg.getInt(\"Dependences.\" + uuid + \".ID\") + \"-\" + uuid;\n-        }\n-        return name;\n-    }\n-\n-    public void setLastLoaded() {\n-        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\n-        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\n-        String uuid = this.uuid.toString();\n-        cfg.set(\"Dependences.\" + uuid + \".last_loaded\", System.currentTimeMillis());\n-        try {\n-            cfg.save(dconfig);\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n-    }\n-\n-    public int getID() {\n-        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\n-        YamlConfiguration dcfg = YamlConfiguration.loadConfiguration(dconfig);\n-        return dcfg.getInt(\"Dependences.\" + this.uuid.toString() + \".ID\");\n-    }\n-\n-    public OfflinePlayer getOwner() {\n-        return Bukkit.getOfflinePlayer(uuid);\n-    }\n-}\n+package de.butzlabben.world.config;\r\n+\r\n+import de.butzlabben.world.util.PlayerWrapper;\r\n+import org.bukkit.Bukkit;\r\n+import org.bukkit.OfflinePlayer;\r\n+import org.bukkit.configuration.file.YamlConfiguration;\r\n+import org.bukkit.entity.Player;\r\n+\r\n+import java.io.File;\r\n+import java.io.IOException;\r\n+import java.util.UUID;\r\n+\r\n+public class DependenceConfig {\r\n+\r\n+    private UUID uuid;\r\n+\r\n+    public DependenceConfig() {\r\n+        setConfig();\r\n+    }\r\n+\r\n+    public DependenceConfig(String s) {\r\n+        OfflinePlayer op = null;\r\n+        try {\r\n+            op = PlayerWrapper.getOfflinePlayer(UUID.fromString(s));\r\n+        } catch (Exception ignored) {\r\n+        }\r\n+        if (op == null) {\r\n+            op = PlayerWrapper.getOfflinePlayer(s);\r\n+        }\r\n+        uuid = op.getUniqueId();\r\n+    }\r\n+\r\n+    public DependenceConfig(Player p) {\r\n+        uuid = p.getUniqueId();\r\n+        refreshName();\r\n+    }\r\n+\r\n+    public DependenceConfig(OfflinePlayer p) {\r\n+        uuid = p.getUniqueId();\r\n+        refreshName();\r\n+    }\r\n+\r\n+    public DependenceConfig(UUID uuid) {\r\n+        this.uuid = uuid;\r\n+    }\r\n+\r\n+    public static int getHighestID() {\r\n+        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\r\n+        YamlConfiguration dcfg = YamlConfiguration.loadConfiguration(dconfig);\r\n+        return dcfg.getInt(\"HighestID\");\r\n+    }\r\n+\r\n+    public static void checkWorlds() {\r\n+        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\r\n+        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\r\n+\r\n+        long deleteTime = 1000 * 60 * 60 * 24 * PluginConfig.deleteAfter();\r\n+        long now = System.currentTimeMillis();\r\n+        for (String s : cfg.getConfigurationSection(\"Dependences\").getKeys(false)) {\r\n+            if (!cfg.isLong(\"Dependences.\" + s + \".last_loaded\") && !cfg.isInt(\"Dependences.\" + s + \".last_loaded\"))\r\n+                continue;\r\n+            long lastLoaded = cfg.getLong(\"Dependences.\" + s + \".last_loaded\");\r\n+            long diff = now - lastLoaded;\r\n+            if (diff > deleteTime) {\r\n+                Bukkit.getConsoleSender().sendMessage(\r\n+                        PluginConfig.getPrefix() + \"World of \" + s + \" was not loaded for too long. Deleting!\");\r\n+                Bukkit.dispatchCommand(Bukkit.getConsoleSender(), \"ws delete \" + s);\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    private void setConfig() {\r\n+        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\r\n+        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\r\n+        cfg.set(\"HighestID\", -1);\r\n+        try {\r\n+            cfg.save(dconfig);\r\n+        } catch (IOException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+    }\r\n+\r\n+    public void refreshName() {\r\n+        if (hasWorld()) {\r\n+            File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\r\n+            YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\r\n+            String uuid = this.uuid.toString();\r\n+            cfg.set(\"Dependences.\" + uuid + \".ActualName\", PlayerWrapper.getOfflinePlayer(this.uuid).getName());\r\n+            try {\r\n+                cfg.save(dconfig);\r\n+            } catch (IOException e) {\r\n+                e.printStackTrace();\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    public void createNewEntry() {\r\n+        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\r\n+        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\r\n+        String uuid = this.uuid.toString();\r\n+        int id = cfg.getInt(\"HighestID\");\r\n+        id++;\r\n+        cfg.set(\"HighestID\", id);\r\n+        cfg.set(\"Dependences.\" + uuid + \".ID\", id);\r\n+        cfg.set(\"Dependences.\" + uuid + \".ActualName\", PlayerWrapper.getOfflinePlayer(this.uuid).getName());\r\n+        try {\r\n+            cfg.save(dconfig);\r\n+        } catch (IOException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+    }\r\n+\r\n+    public boolean hasWorld() {\r\n+        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\r\n+        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\r\n+        String uuid = this.uuid.toString();\r\n+        //Fix for #40\r\n+        return cfg.isInt(\"Dependences.\" + uuid + \".ID\");\r\n+    }\r\n+\r\n+    public String getWorldname() {\r\n+        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\r\n+        YamlConfiguration dcfg = YamlConfiguration.loadConfiguration(dconfig);\r\n+        String uuid = this.uuid.toString();\r\n+        int id = dcfg.getInt(\"Dependences.\" + uuid + \".ID\");\r\n+        return \"ID\" + id + \"-\" + uuid;\r\n+    }\r\n+\r\n+    public String getWorldNameByOfflinePlayer() {\r\n+        String name;\r\n+        String uuid = this.uuid.toString();\r\n+        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\r\n+        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\r\n+        if (cfg.getString(\"Dependences.\" + uuid + \".ActualName\") == null) {\r\n+            name = \"n\";\r\n+        } else {\r\n+            name = \"ID\" + cfg.getInt(\"Dependences.\" + uuid + \".ID\") + \"-\" + uuid;\r\n+        }\r\n+        return name;\r\n+    }\r\n+\r\n+    public void setLastLoaded() {\r\n+        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\r\n+        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(dconfig);\r\n+        String uuid = this.uuid.toString();\r\n+        cfg.set(\"Dependences.\" + uuid + \".last_loaded\", System.currentTimeMillis());\r\n+        try {\r\n+            cfg.save(dconfig);\r\n+        } catch (IOException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+    }\r\n+\r\n+    public int getID() {\r\n+        File dconfig = new File(\"plugins//WorldSystem//dependence.yml\");\r\n+        YamlConfiguration dcfg = YamlConfiguration.loadConfiguration(dconfig);\r\n+        return dcfg.getInt(\"Dependences.\" + this.uuid.toString() + \".ID\");\r\n+    }\r\n+\r\n+    public OfflinePlayer getOwner() {\r\n+        return PlayerWrapper.getOfflinePlayer(uuid);\r\n+    }\r\n+}\r"
  },
  {
    "sha": "641b9d560b44004282b6d7e0ea793421e081c5d9",
    "filename": "src/main/java/de/butzlabben/world/config/MessageConfig.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/config/MessageConfig.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/config/MessageConfig.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/config/MessageConfig.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -267,6 +267,10 @@ public static String getDeleteCommandHelp() {\n         return getMessage(\"command_help.delete_command\", \"/ws delete §8- §7Will delete a World\");\n     }\n \n+    public static String getSaveCommandHelp() {\n+        return getMessage(\"command_help.save_command\", \"/ws save-all &8- &7Saves All worlds\");\n+    }\n+\n     public static List<String> getCommandHelp() {\n         List<String> list = getConfig().getStringList(\"command_help.list\");\n         if (list == null)"
  },
  {
    "sha": "57864a3917c7a037bd23bbe6b9deca08aaf6599d",
    "filename": "src/main/java/de/butzlabben/world/config/PluginConfig.java",
    "status": "modified",
    "additions": 248,
    "deletions": 242,
    "changes": 490,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/config/PluginConfig.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/config/PluginConfig.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/config/PluginConfig.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -1,242 +1,248 @@\n-package de.butzlabben.world.config;\n-\n-import de.butzlabben.world.WorldSystem;\n-import de.butzlabben.world.util.PlayerPositions;\n-import net.md_5.bungee.api.ChatColor;\n-import org.bukkit.Bukkit;\n-import org.bukkit.GameMode;\n-import org.bukkit.Location;\n-import org.bukkit.World;\n-import org.bukkit.configuration.file.YamlConfiguration;\n-import org.bukkit.entity.Player;\n-import org.bukkit.plugin.java.JavaPlugin;\n-\n-import java.io.*;\n-import java.nio.charset.StandardCharsets;\n-import java.nio.file.Files;\n-import java.nio.file.StandardCopyOption;\n-import java.text.SimpleDateFormat;\n-import java.util.Date;\n-\n-public class PluginConfig {\n-\n-    private final static GameMode[] gameModes = new GameMode[]{GameMode.SURVIVAL, GameMode.CREATIVE,\n-            GameMode.ADVENTURE, GameMode.SPECTATOR};\n-    private static File file;\n-\n-    private PluginConfig() {\n-    }\n-\n-    public static void checkConfig(File f) {\n-        file = f;\n-        if (file.exists()) {\n-            YamlConfiguration cfg = getConfig();\n-            if (!(cfg.isString(\"worldfolder\") && cfg.isInt(\"unloadingtime\")\n-                    && cfg.isBoolean(\"survival\") && cfg.isString(\"language\") && cfg.isString(\"prefix\")\n-                    && cfg.isInt(\"request_expires\") && cfg.isBoolean(\"need_confirm\")\n-                    && cfg.isBoolean(\"contact_authserver\") && cfg.isBoolean(\"spawn_teleportation\")\n-                    && cfg.isInt(\"delete_after\") && cfg.isBoolean(\"worldtemplates.multi_choose\")\n-                    && cfg.isString(\"worldtemplates.default\") && cfg.isBoolean(\"load_worlds_async\") &&\n-\n-                    // Database stuff\n-                    cfg.isString(\"database.type\") && cfg.isString(\"database.worlds_table_name\") && cfg.isString(\"database.players_table_name\")\n-                    && cfg.isString(\"database.mysql_settings.host\") && cfg.isInt(\"database.mysql_settings.port\")\n-                    && cfg.isString(\"database.mysql_settings.username\") && cfg.isString(\"database.mysql_settings.password\")\n-                    && cfg.isString(\"database.mysql_settings.database\") && cfg.isString(\"database.sqlite_settings.file\") &&\n-\n-                    cfg.isInt(\"lagsystem.period_in_seconds\") && cfg.isInt(\"lagsystem.entities_per_world\")\n-                    && cfg.isBoolean(\"lagsystem.garbagecollector.use\")\n-                    && cfg.isInt(\"lagsystem.garbagecollector.period_in_minutes\") &&\n-\n-                    cfg.isString(\"spawn.spawnpoint.world\") && cfg.isInt(\"spawn.gamemode\")\n-                    && cfg.isBoolean(\"spawn.spawnpoint.use_last_location\")\n-                    && (cfg.isDouble(\"spawn.spawnpoint.x\") || cfg.isInt(\"spawn.spawnpoint.x\"))\n-                    && (cfg.isDouble(\"spawn.spawnpoint.y\") || cfg.isInt(\"spawn.spawnpoint.y\"))\n-                    && (cfg.isDouble(\"spawn.spawnpoint.z\") || cfg.isInt(\"spawn.spawnpoint.z\"))\n-                    && (cfg.isDouble(\"spawn.spawnpoint.yaw\") || cfg.isInt(\"spawn.spawnpoint.yaw\"))\n-                    && (cfg.isDouble(\"spawn.spawnpoint.pitch\") || cfg.isInt(\"spawn.spawnpoint.pitch\")) &&\n-\n-                    cfg.isBoolean(\"worldspawn.use\") && cfg.isBoolean(\"worldspawn.use_last_location\")\n-                    && (cfg.isDouble(\"worldspawn.spawnpoint.x\") || cfg.isInt(\"worldspawn.spawnpoint.x\"))\n-                    && (cfg.isDouble(\"worldspawn.spawnpoint.y\") || cfg.isInt(\"worldspawn.spawnpoint.y\"))\n-                    && (cfg.isDouble(\"worldspawn.spawnpoint.z\") || cfg.isInt(\"worldspawn.spawnpoint.z\"))\n-                    && (cfg.isDouble(\"worldspawn.spawnpoint.yaw\") || cfg.isInt(\"worldspawn.spawnpoint.yaw\"))\n-                    && (cfg.isDouble(\"worldspawn.spawnpoint.pitch\") || cfg.isInt(\"worldspawn.spawnpoint.pitch\")))) {\n-                try {\n-                    Files.copy(file.toPath(),\n-                            new File(file.getParentFile(), \"config-broken-\"\n-                                    + new SimpleDateFormat(\"dd-MM-yyyy-HH-mm-ss\").format(new Date()) + \".yml\").toPath(),\n-                            StandardCopyOption.REPLACE_EXISTING);\n-                    Files.delete(file.toPath());\n-                    System.err.println(\"[WorldSystem] Config is broken, creating a new one!\");\n-                    checkConfig(f);\n-                } catch (IOException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n-        } else {\n-            try {\n-                InputStream in = JavaPlugin.getPlugin(WorldSystem.class).getResource(\"config.yml\");\n-                Files.copy(in, file.toPath());\n-            } catch (IOException e) {\n-                System.err.println(\"Wasn't able to create Config\");\n-                e.printStackTrace();\n-            }\n-        }\n-\n-        // Should fix #2\n-        if (getSpawn(null).getWorld() == null) {\n-            Bukkit.getConsoleSender().sendMessage(getPrefix() + \"§cWorld is null in spawn.world!\");\n-        }\n-    }\n-\n-    public static YamlConfiguration getConfig() {\n-        try {\n-            return YamlConfiguration\n-                    .loadConfiguration(new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8));\n-        } catch (FileNotFoundException e) {\n-            e.printStackTrace();\n-        }\n-        throw new IllegalStateException(\"Cannot access config file\");\n-    }\n-\n-    public static int getGCPeriod() {\n-        return getConfig().getInt(\"lagsystem.garbagecollector.period_in_minutes\", 5);\n-    }\n-\n-    public static boolean useGC() {\n-        return getConfig().getBoolean(\"lagsystem.garbagecollector.use\", false);\n-    }\n-\n-    public static int getEntitysPerWorld() {\n-        return getConfig().getInt(\"lagsystem.entities_per_world\", 350);\n-    }\n-\n-    public static int getLagCheckPeriod() {\n-        return getConfig().getInt(\"lagsystem.period_in_seconds\", 10);\n-    }\n-\n-    public static boolean useWorldSpawn() {\n-        return getConfig().getBoolean(\"worldspawn.use\", true);\n-    }\n-\n-    public static boolean isSurvival() {\n-        return getConfig().getBoolean(\"survival\", false);\n-    }\n-\n-    public static int getUnloadingTime() {\n-        return getConfig().getInt(\"unloadingtime\", 20);\n-    }\n-\n-    public static GameMode getSpawnGamemode() {\n-        return gameModes[getConfig().getInt(\"spawn.gamemode\", 2)];\n-    }\n-\n-    public static String getWorlddir() {\n-        return getConfig().getString(\"worldfolder\", \"plugins/WorldSystem/Worlds\") + \"/\";\n-    }\n-\n-    public static boolean isMultiChoose() {\n-        return getConfig().getBoolean(\"worldtemplates.multi_choose\", false);\n-    }\n-\n-    public static String getDefaultWorldTemplate() {\n-        return getConfig().getString(\"worldtemplates.default\", \"\");\n-    }\n-\n-    public static String getLanguage() {\n-        return getConfig().getString(\"language\", \"en\");\n-    }\n-\n-    public static String getPrefix() {\n-        return ChatColor.translateAlternateColorCodes('&', getConfig().getString(\"prefix\", \"§8[§3WorldSystem§8] §6\"));\n-    }\n-\n-    public static Location getWorldSpawn(World w) {\n-        return getLocation(getConfig(), \"worldspawn.spawnpoint\", w);\n-    }\n-\n-    public static Location getSpawn(Player player) {\n-        YamlConfiguration cfg = getConfig();\n-        Location location = getLocation(cfg, \"spawn.spawnpoint\", Bukkit.getWorld(cfg.getString(\"spawn.spawnpoint.world\", \"world\")));\n-        return PlayerPositions.instance.injectPlayersLocation(player, location);\n-    }\n-\n-    public static int getRequestExpire() {\n-        return getConfig().getInt(\"request_expires\", 20);\n-    }\n-\n-    private static Location getLocation(YamlConfiguration cfg, String path, World world) {\n-        return new Location(world, cfg.getDouble(path + \".x\", 0), cfg.getDouble(path + \".y\", 20),\n-                cfg.getDouble(path + \".z\", 0), (float) cfg.getDouble(path + \".yaw\", 0),\n-                (float) cfg.getDouble(path + \".pitch\", 0));\n-    }\n-\n-    public static boolean confirmNeed() {\n-        return getConfig().getBoolean(\"need_confirm\", true);\n-    }\n-\n-    public static boolean contactAuth() {\n-        return getConfig().getBoolean(\"contact_authserver\", true);\n-    }\n-\n-    public static boolean spawnTeleportation() {\n-        return getConfig().getBoolean(\"spawn_teleportation\", true);\n-    }\n-\n-    public static boolean shouldDelete() {\n-        return getConfig().getInt(\"delete_after\") != -1;\n-    }\n-\n-    public static long deleteAfter() {\n-        return getConfig().getLong(\"delete_after\");\n-    }\n-\n-    public static boolean useWorldSpawnLastLocation() {\n-        return getConfig().getBoolean(\"worldspawn.use_last_location\");\n-    }\n-\n-    public static boolean useSpawnLastLocation() {\n-        return getConfig().getBoolean(\"spawn.spawnpoint.use_last_location\");\n-    }\n-\n-    public static String getWorldsTableName() {\n-        return getConfig().getString(\"database.worlds_table_name\");\n-    }\n-\n-    public static String getPlayersTableName() {\n-        return getConfig().getString(\"database.players_table_name\");\n-    }\n-\n-    public static String getDatabaseType() {\n-        return getConfig().getString(\"database.type\");\n-    }\n-\n-    public static String getSqliteFile() {\n-        return getConfig().getString(\"database.sqlite_settings.file\");\n-    }\n-\n-    public static String getMysqlHost() {\n-        return getConfig().getString(\"database.mysql_settings.host\");\n-    }\n-\n-    public static int getMysqlPort() {\n-        return getConfig().getInt(\"database.mysql_settings.port\");\n-    }\n-\n-    public static String getMysqlUser() {\n-        return getConfig().getString(\"database.mysql_settings.username\");\n-    }\n-\n-    public static String getMysqlPassword() {\n-        return getConfig().getString(\"database.mysql_settings.password\");\n-    }\n-\n-    public static String getMysqlDatabaseName() {\n-        return getConfig().getString(\"database.mysql_settings.database\");\n-    }\n-\n-    public static boolean loadWorldsASync() {\n-        return getConfig().getBoolean(\"load_worlds_async\");\n-    }\n-}\n+package de.butzlabben.world.config;\r\n+\r\n+import de.butzlabben.world.WorldSystem;\r\n+import de.butzlabben.world.util.PlayerPositions;\r\n+import net.md_5.bungee.api.ChatColor;\r\n+import org.bukkit.Bukkit;\r\n+import org.bukkit.GameMode;\r\n+import org.bukkit.Location;\r\n+import org.bukkit.World;\r\n+import org.bukkit.configuration.file.YamlConfiguration;\r\n+import org.bukkit.entity.Player;\r\n+import org.bukkit.plugin.java.JavaPlugin;\r\n+\r\n+import java.io.*;\r\n+import java.nio.charset.StandardCharsets;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.StandardCopyOption;\r\n+import java.text.SimpleDateFormat;\r\n+import java.util.Date;\r\n+\r\n+public class PluginConfig {\r\n+\r\n+    private final static GameMode[] gameModes = new GameMode[]{GameMode.SURVIVAL, GameMode.CREATIVE,\r\n+            GameMode.ADVENTURE, GameMode.SPECTATOR};\r\n+    private static File file;\r\n+\r\n+    private PluginConfig() {\r\n+    }\r\n+\r\n+    public static void checkConfig(File f) {\r\n+        file = f;\r\n+        if (file.exists()) {\r\n+            YamlConfiguration cfg = getConfig();\r\n+            if (!(cfg.isString(\"worldfolder\") && cfg.isInt(\"unloadingtime\")\r\n+                    && cfg.isBoolean(\"survival\") && cfg.isString(\"language\") && cfg.isString(\"prefix\")\r\n+                    && cfg.isInt(\"request_expires\") && cfg.isBoolean(\"need_confirm\")\r\n+                    && cfg.isBoolean(\"contact_authserver\") && cfg.isBoolean(\"spawn_teleportation\")\r\n+                    && cfg.isInt(\"delete_after\") && cfg.isBoolean(\"worldtemplates.multi_choose\")\r\n+                    && cfg.isString(\"worldtemplates.default\") && cfg.isBoolean(\"load_worlds_async\") &&\r\n+\r\n+                    // Database stuff\r\n+                    cfg.isString(\"database.type\") && cfg.isString(\"database.worlds_table_name\") && cfg.isString(\"database.players_table_name\")\r\n+                    && cfg.isString(\"database.mysql_settings.host\") && cfg.isInt(\"database.mysql_settings.port\")\r\n+                    && cfg.isString(\"database.mysql_settings.username\") && cfg.isString(\"database.mysql_settings.password\")\r\n+                    && cfg.isString(\"database.mysql_settings.database\") && cfg.isString(\"database.sqlite_settings.file\") &&\r\n+\r\n+                    cfg.isInt(\"lagsystem.period_in_seconds\") && cfg.isInt(\"lagsystem.entities_per_world\")\r\n+                    && cfg.isBoolean(\"lagsystem.garbagecollector.use\")\r\n+                    && cfg.isInt(\"lagsystem.garbagecollector.period_in_minutes\") &&\r\n+\r\n+                    cfg.isString(\"spawn.spawnpoint.world\") && cfg.isInt(\"spawn.gamemode\")\r\n+                    && cfg.isBoolean(\"spawn.spawnpoint.use_last_location\")\r\n+                    && (cfg.isDouble(\"spawn.spawnpoint.x\") || cfg.isInt(\"spawn.spawnpoint.x\"))\r\n+                    && (cfg.isDouble(\"spawn.spawnpoint.y\") || cfg.isInt(\"spawn.spawnpoint.y\"))\r\n+                    && (cfg.isDouble(\"spawn.spawnpoint.z\") || cfg.isInt(\"spawn.spawnpoint.z\"))\r\n+                    && (cfg.isDouble(\"spawn.spawnpoint.yaw\") || cfg.isInt(\"spawn.spawnpoint.yaw\"))\r\n+                    && (cfg.isDouble(\"spawn.spawnpoint.pitch\") || cfg.isInt(\"spawn.spawnpoint.pitch\")) &&\r\n+\r\n+                    cfg.isBoolean(\"worldspawn.use\") && cfg.isBoolean(\"worldspawn.use_last_location\")\r\n+                    && (cfg.isDouble(\"worldspawn.spawnpoint.x\") || cfg.isInt(\"worldspawn.spawnpoint.x\"))\r\n+                    && (cfg.isDouble(\"worldspawn.spawnpoint.y\") || cfg.isInt(\"worldspawn.spawnpoint.y\"))\r\n+                    && (cfg.isDouble(\"worldspawn.spawnpoint.z\") || cfg.isInt(\"worldspawn.spawnpoint.z\"))\r\n+                    && (cfg.isDouble(\"worldspawn.spawnpoint.yaw\") || cfg.isInt(\"worldspawn.spawnpoint.yaw\"))\r\n+                    && (cfg.isDouble(\"worldspawn.spawnpoint.pitch\") || cfg.isInt(\"worldspawn.spawnpoint.pitch\")))) {\r\n+                try {\r\n+                    Files.copy(file.toPath(),\r\n+                            new File(file.getParentFile(), \"config-broken-\"\r\n+                                    + new SimpleDateFormat(\"dd-MM-yyyy-HH-mm-ss\").format(new Date()) + \".yml\").toPath(),\r\n+                            StandardCopyOption.REPLACE_EXISTING);\r\n+                    Files.delete(file.toPath());\r\n+                    System.err.println(\"[WorldSystem] Config is broken, creating a new one!\");\r\n+                    checkConfig(f);\r\n+                } catch (IOException e) {\r\n+                    e.printStackTrace();\r\n+                }\r\n+            }\r\n+        } else {\r\n+            try {\r\n+                InputStream in = JavaPlugin.getPlugin(WorldSystem.class).getResource(\"config.yml\");\r\n+                Files.copy(in, file.toPath());\r\n+            } catch (IOException e) {\r\n+                System.err.println(\"Wasn't able to create Config\");\r\n+                e.printStackTrace();\r\n+            }\r\n+        }\r\n+\r\n+        // Should fix #2\r\n+        if (getSpawn(null).getWorld() == null) {\r\n+            Bukkit.getConsoleSender().sendMessage(getPrefix() + \"§cWorld is null in spawn.world!\");\r\n+        }\r\n+    }\r\n+\r\n+    public static YamlConfiguration getConfig() {\r\n+        try {\r\n+            return YamlConfiguration\r\n+                    .loadConfiguration(new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8));\r\n+        } catch (FileNotFoundException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+        throw new IllegalStateException(\"Cannot access config file\");\r\n+    }\r\n+\r\n+    public static int getGCPeriod() {\r\n+        return getConfig().getInt(\"lagsystem.garbagecollector.period_in_minutes\", 5);\r\n+    }\r\n+\r\n+    public static boolean useGC() {\r\n+        return getConfig().getBoolean(\"lagsystem.garbagecollector.use\", false);\r\n+    }\r\n+\r\n+    public static int getEntitysPerWorld() {\r\n+        return getConfig().getInt(\"lagsystem.entities_per_world\", 350);\r\n+    }\r\n+\r\n+    public static int getLagCheckPeriod() {\r\n+        return getConfig().getInt(\"lagsystem.period_in_seconds\", 10);\r\n+    }\r\n+\r\n+    public static boolean useWorldSpawn() {\r\n+        return getConfig().getBoolean(\"worldspawn.use\", true);\r\n+    }\r\n+\r\n+    public static boolean isSurvival() {\r\n+        return getConfig().getBoolean(\"survival\", false);\r\n+    }\r\n+\r\n+    public static int getUnloadingTime() {\r\n+        return getConfig().getInt(\"unloadingtime\", 20);\r\n+    }\r\n+\r\n+    public static GameMode getSpawnGamemode() {\r\n+        return gameModes[getConfig().getInt(\"spawn.gamemode\", 2)];\r\n+    }\r\n+\r\n+    public static String getWorlddir() {\r\n+        return getConfig().getString(\"worldfolder\", \"plugins/WorldSystem/Worlds\") + \"/\";\r\n+    }\r\n+\r\n+    public static boolean isMultiChoose() {\r\n+        return getConfig().getBoolean(\"worldtemplates.multi_choose\", false);\r\n+    }\r\n+\r\n+    public static String getDefaultWorldTemplate() {\r\n+        return getConfig().getString(\"worldtemplates.default\", \"\");\r\n+    }\r\n+\r\n+    public static String getLanguage() {\r\n+        return getConfig().getString(\"language\", \"en\");\r\n+    }\r\n+\r\n+    public static String getPrefix() {\r\n+        return ChatColor.translateAlternateColorCodes('&', getConfig().getString(\"prefix\", \"§8[§3WorldSystem§8] §6\"));\r\n+    }\r\n+\r\n+    public static Location getWorldSpawn(World w) {\r\n+        return getLocation(getConfig(), \"worldspawn.spawnpoint\", w);\r\n+    }\r\n+\r\n+    public static Location getSpawn(Player player) {\r\n+        YamlConfiguration cfg = getConfig();\r\n+        Location location = getLocation(cfg, \"spawn.spawnpoint\", Bukkit.getWorld(cfg.getString(\"spawn.spawnpoint.world\", \"world\")));\r\n+        return PlayerPositions.instance.injectPlayersLocation(player, location);\r\n+    }\r\n+\r\n+    public static int getRequestExpire() {\r\n+        return getConfig().getInt(\"request_expires\", 20);\r\n+    }\r\n+\r\n+    private static Location getLocation(YamlConfiguration cfg, String path, World world) {\r\n+        return new Location(world, cfg.getDouble(path + \".x\", 0), cfg.getDouble(path + \".y\", 20),\r\n+                cfg.getDouble(path + \".z\", 0), (float) cfg.getDouble(path + \".yaw\", 0),\r\n+                (float) cfg.getDouble(path + \".pitch\", 0));\r\n+    }\r\n+\r\n+    public static boolean confirmNeed() {\r\n+        return getConfig().getBoolean(\"need_confirm\", true);\r\n+    }\r\n+\r\n+    public static boolean contactAuth() {\r\n+        return getConfig().getBoolean(\"contact_authserver\", true);\r\n+    }\r\n+\r\n+    public static boolean spawnTeleportation() {\r\n+        return getConfig().getBoolean(\"spawn_teleportation\", true);\r\n+    }\r\n+\r\n+    public static boolean shouldDelete() {\r\n+        return getConfig().getInt(\"delete_after\") != -1;\r\n+    }\r\n+\r\n+    public static long deleteAfter() {\r\n+        return getConfig().getLong(\"delete_after\");\r\n+    }\r\n+\r\n+    public static boolean useWorldSpawnLastLocation() {\r\n+        return getConfig().getBoolean(\"worldspawn.use_last_location\");\r\n+    }\r\n+\r\n+    public static boolean useSpawnLastLocation() {\r\n+        return getConfig().getBoolean(\"spawn.spawnpoint.use_last_location\");\r\n+    }\r\n+\r\n+    public static String getWorldsTableName() {\r\n+        return getConfig().getString(\"database.worlds_table_name\");\r\n+    }\r\n+\r\n+    public static String getPlayersTableName() {\r\n+        return getConfig().getString(\"database.players_table_name\");\r\n+    }\r\n+\r\n+    public static String getUUIDTableName() {\r\n+        return getConfig().getString(\"database.players_uuids\");\r\n+    }\r\n+\r\n+\r\n+\r\n+    public static String getDatabaseType() {\r\n+        return getConfig().getString(\"database.type\");\r\n+    }\r\n+\r\n+    public static String getSqliteFile() {\r\n+        return getConfig().getString(\"database.sqlite_settings.file\");\r\n+    }\r\n+\r\n+    public static String getMysqlHost() {\r\n+        return getConfig().getString(\"database.mysql_settings.host\");\r\n+    }\r\n+\r\n+    public static int getMysqlPort() {\r\n+        return getConfig().getInt(\"database.mysql_settings.port\");\r\n+    }\r\n+\r\n+    public static String getMysqlUser() {\r\n+        return getConfig().getString(\"database.mysql_settings.username\");\r\n+    }\r\n+\r\n+    public static String getMysqlPassword() {\r\n+        return getConfig().getString(\"database.mysql_settings.password\");\r\n+    }\r\n+\r\n+    public static String getMysqlDatabaseName() {\r\n+        return getConfig().getString(\"database.mysql_settings.database\");\r\n+    }\r\n+\r\n+    public static boolean loadWorldsASync() {\r\n+        return getConfig().getBoolean(\"load_worlds_async\");\r\n+    }\r\n+}\r"
  },
  {
    "sha": "48c05eeb16cfa19c2009bd7fd5ae9667be2abc24",
    "filename": "src/main/java/de/butzlabben/world/config/SettingsConfig.java",
    "status": "modified",
    "additions": 196,
    "deletions": 193,
    "changes": 389,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/config/SettingsConfig.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/config/SettingsConfig.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/config/SettingsConfig.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -1,193 +1,196 @@\n-package de.butzlabben.world.config;\n-\n-import de.butzlabben.world.WorldSystem;\n-import de.butzlabben.world.wrapper.SystemWorld;\n-import org.bukkit.Bukkit;\n-import org.bukkit.Difficulty;\n-import org.bukkit.Location;\n-import org.bukkit.World;\n-import org.bukkit.configuration.file.YamlConfiguration;\n-import org.bukkit.entity.Player;\n-import org.bukkit.plugin.java.JavaPlugin;\n-\n-import java.io.*;\n-import java.nio.charset.StandardCharsets;\n-import java.nio.file.Files;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.UUID;\n-\n-public class SettingsConfig {\n-\n-    private static final HashMap<String, Long> borderSizes = new HashMap<>();\n-\n-    private static File file;\n-\n-    private SettingsConfig() {\n-    }\n-\n-    @SuppressWarnings(\"deprecation\")\n-    public static void editWorld(World w) {\n-        YamlConfiguration cfg = getConfig();\n-\n-        SystemWorld sw = SystemWorld.getSystemWorld(w.getName());\n-\n-        boolean shouldChange = cfg.getBoolean(\"worldborder.should_change\", false);\n-        if (shouldChange) {\n-            long size = cfg.getLong(\"worldborder.normal\", 1000);\n-            if (sw != null && sw.isLoaded()) {\n-                String worldname = w.getName();\n-                UUID uuid = UUID.fromString(worldname.substring(worldname.length() - 36));\n-                Player p = Bukkit.getPlayer(uuid);\n-\n-                // Only edit worldborder size if owner is online\n-                if (p != null && p.isOnline()) {\n-\n-                    // Check permissions\n-                    for (String string : borderSizes.keySet()) {\n-                        if (p.hasPermission(string) && size < borderSizes.get(string)) {\n-                            size = borderSizes.get(string);\n-                        }\n-                    }\n-\n-                    w.getWorldBorder().setSize(size);\n-                }\n-\n-                if (cfg.getBoolean(\"worldborder.center.as_spawn\", true)) {\n-                    if (PluginConfig.useWorldSpawn()) {\n-                        w.getWorldBorder().setCenter(PluginConfig.getWorldSpawn(w));\n-                    } else {\n-                        w.getWorldBorder().setCenter(w.getSpawnLocation());\n-                    }\n-                } else {\n-                    Location loc = new Location(w, cfg.getDouble(\"worldborder.center.x\", 0),\n-                            cfg.getDouble(\"worldborder.center.y\", 20), cfg.getDouble(\"worldborder.center.z\", 0));\n-                    w.getWorldBorder().setCenter(loc);\n-                }\n-                if (cfg.getBoolean(\"worldborder.center.as_home\")) {\n-                    WorldConfig config = WorldConfig.getWorldConfig(w.getName());\n-                    if (config.getHome() != null)\n-                        w.getWorldBorder().setCenter(config.getHome());\n-                }\n-            }\n-        }\n-\n-        // Fix for #17\n-        String diff = cfg.getString(\"difficulty\");\n-        try {\n-            Difficulty difficulty = Difficulty.valueOf(diff.toUpperCase());\n-            w.setDifficulty(difficulty);\n-        } catch (IllegalArgumentException e) {\n-            Bukkit.getConsoleSender().sendMessage(PluginConfig.getPrefix() + \"§cUnknown difficulty \\\"\" + diff + \"\\\" in settings.yml\");\n-        }\n-\n-        if (w.isGameRule(\"announceAdvancements\"))\n-            w.setGameRuleValue(\"announceAdvancements\", cfg.getString(\"announceAdvancements\"));\n-\n-        if (w.isGameRule(\"commandBlockOutput\"))\n-            w.setGameRuleValue(\"commandBlockOutput\", cfg.getString(\"commandBlockOutput\"));\n-\n-        if (w.isGameRule(\"disableElytraMovementCheck\"))\n-            w.setGameRuleValue(\"disableElytraMovementCheck\", cfg.getString(\"disableElytraMovementCheck\"));\n-\n-        if (w.isGameRule(\"doDaylightCycle\"))\n-            w.setGameRuleValue(\"doDaylightCycle\", cfg.getString(\"doDaylightCycle\"));\n-\n-        if (w.isGameRule(\"doEntityDrops\"))\n-            w.setGameRuleValue(\"doEntityDrops\", cfg.getString(\"doEntityDrops\"));\n-\n-        if (w.isGameRule(\"doFireTick\"))\n-            w.setGameRuleValue(\"doFireTick\", cfg.getString(\"doFireTick\"));\n-\n-        if (w.isGameRule(\"doLimitedCrafting\"))\n-            w.setGameRuleValue(\"doLimitedCrafting\", cfg.getString(\"doLimitedCrafting\"));\n-\n-        if (w.isGameRule(\"doMobLoot\"))\n-            w.setGameRuleValue(\"doMobLoot\", cfg.getString(\"doMobLoot\"));\n-\n-        if (w.isGameRule(\"doMobSpawning\"))\n-            w.setGameRuleValue(\"doMobSpawning\", cfg.getString(\"doMobSpawning\"));\n-\n-        if (w.isGameRule(\"doTileDrops\"))\n-            w.setGameRuleValue(\"doTileDrops\", cfg.getString(\"doTileDrops\"));\n-\n-        if (w.isGameRule(\"doWeatherCycle\"))\n-            w.setGameRuleValue(\"doWeatherCycle\", cfg.getString(\"doWeatherCycle\"));\n-\n-        if (w.isGameRule(\"gameLoopFunction\"))\n-            w.setGameRuleValue(\"gameLoopFunction\", cfg.getString(\"gameLoopFunction\"));\n-\n-        if (w.isGameRule(\"keepInventory\"))\n-            w.setGameRuleValue(\"keepInventory\", cfg.getString(\"keepInventory\"));\n-\n-        if (w.isGameRule(\"logAdminCommands\"))\n-            w.setGameRuleValue(\"logAdminCommands\", cfg.getString(\"logAdminCommands\"));\n-\n-        if (w.isGameRule(\"maxCommandChainLength\"))\n-            w.setGameRuleValue(\"maxCommandChainLength\", cfg.getString(\"maxCommandChainLength\"));\n-\n-        if (w.isGameRule(\"maxEntityCramming\"))\n-            w.setGameRuleValue(\"maxEntityCramming\", cfg.getString(\"maxEntityCramming\"));\n-\n-        if (w.isGameRule(\"mobGriefing\"))\n-            w.setGameRuleValue(\"mobGriefing\", cfg.getString(\"mobGriefing\"));\n-\n-        if (w.isGameRule(\"naturalRegeneration\"))\n-            w.setGameRuleValue(\"naturalRegeneration\", cfg.getString(\"naturalRegeneration\"));\n-\n-        if (w.isGameRule(\"randomTickSpeed\"))\n-            w.setGameRuleValue(\"randomTickSpeed\", cfg.getString(\"randomTickSpeed\"));\n-\n-        if (w.isGameRule(\"reducedDebugInfo\"))\n-            w.setGameRuleValue(\"reducedDebugInfo\", cfg.getString(\"reducedDebugInfo\"));\n-\n-        if (w.isGameRule(\"sendCommandFeedback\"))\n-            w.setGameRuleValue(\"sendCommandFeedback\", cfg.getString(\"sendCommandFeedback\"));\n-\n-        if (w.isGameRule(\"showDeathMessages\"))\n-            w.setGameRuleValue(\"showDeathMessages\", cfg.getString(\"showDeathMessages\"));\n-\n-        if (w.isGameRule(\"spawnRadius\"))\n-            w.setGameRuleValue(\"spawnRadius\", cfg.getString(\"spawnRadius\"));\n-\n-        if (w.isGameRule(\"spectatorsGenerateChunks\"))\n-            w.setGameRuleValue(\"spectatorsGenerateChunks\", cfg.getString(\"spectatorsGenerateChunks\"));\n-    }\n-\n-    private static YamlConfiguration getConfig() {\n-        try {\n-            return YamlConfiguration\n-                    .loadConfiguration(new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8));\n-        } catch (FileNotFoundException e) {\n-            e.printStackTrace();\n-        }\n-        return null;\n-    }\n-\n-    public static void checkConfig() {\n-        File file = new File(WorldSystem.getInstance().getDataFolder(), \"settings.yml\");\n-        SettingsConfig.file = file;\n-        if (!file.exists()) {\n-            try {\n-                InputStream in = JavaPlugin.getPlugin(WorldSystem.class).getResource(\"settings.yml\");\n-                Files.copy(in, file.toPath());\n-            } catch (IOException e) {\n-                System.err.println(\"Wasn't able to create Config\");\n-                e.printStackTrace();\n-            }\n-        }\n-        YamlConfiguration cfg = getConfig();\n-        for (String s : cfg.getConfigurationSection(\"worldborder.ranks\").getKeys(true)) {\n-            if (cfg.isInt(\"worldborder.ranks.\" + s) || cfg.isLong(\"worldborder.ranks.\" + s))\n-                borderSizes.put(s, cfg.getLong(\"worldborder.ranks.\" + s));\n-        }\n-    }\n-\n-    /**\n-     * @return the commands specified in settings.yml on /ws get\n-     */\n-    public static List<String> getCommandsonGet() {\n-        YamlConfiguration cfg = getConfig();\n-        return cfg.getStringList(\"commands_on_get\");\n-    }\n-}\n+package de.butzlabben.world.config;\r\n+\r\n+import de.butzlabben.world.WorldSystem;\r\n+import de.butzlabben.world.wrapper.SystemWorld;\r\n+import org.bukkit.Bukkit;\r\n+import org.bukkit.Difficulty;\r\n+import org.bukkit.Location;\r\n+import org.bukkit.World;\r\n+import org.bukkit.configuration.file.YamlConfiguration;\r\n+import org.bukkit.entity.Player;\r\n+import org.bukkit.plugin.java.JavaPlugin;\r\n+\r\n+import java.io.*;\r\n+import java.nio.charset.StandardCharsets;\r\n+import java.nio.file.Files;\r\n+import java.util.HashMap;\r\n+import java.util.List;\r\n+import java.util.UUID;\r\n+\r\n+//maybe just merge this config with the WorldConfig\r\n+public class SettingsConfig {\r\n+\r\n+    private static final HashMap<String, Long> borderSizes = new HashMap<>();\r\n+\r\n+    private static File file;\r\n+\r\n+    private SettingsConfig() {\r\n+    }\r\n+\r\n+    @SuppressWarnings(\"deprecation\")\r\n+    // TODO rebuild this, as it's inperformant and not very beautiful code..\r\n+    // only load once, and then reload the things from the disk on command\r\n+    public static void editWorld(World w) {\r\n+        YamlConfiguration cfg = getConfig();\r\n+\r\n+        SystemWorld sw = SystemWorld.getSystemWorld(w.getName());\r\n+\r\n+        boolean shouldChange = cfg.getBoolean(\"worldborder.should_change\", false);\r\n+        if (shouldChange) {\r\n+            long size = cfg.getLong(\"worldborder.normal\", 1000);\r\n+            if (sw != null && sw.isLoaded()) {\r\n+                String worldname = w.getName();\r\n+                UUID uuid = UUID.fromString(worldname.substring(worldname.length() - 36));\r\n+                Player p = Bukkit.getPlayer(uuid);\r\n+\r\n+                // Only edit worldborder size if owner is online\r\n+                if (p != null && p.isOnline()) {\r\n+\r\n+                    // Check permissions\r\n+                    for (String string : borderSizes.keySet()) {\r\n+                        if (p.hasPermission(string) && size < borderSizes.get(string)) {\r\n+                            size = borderSizes.get(string);\r\n+                        }\r\n+                    }\r\n+\r\n+                    w.getWorldBorder().setSize(size);\r\n+                }\r\n+\r\n+                if (cfg.getBoolean(\"worldborder.center.as_spawn\", true)) {\r\n+                    if (PluginConfig.useWorldSpawn()) {\r\n+                        w.getWorldBorder().setCenter(PluginConfig.getWorldSpawn(w));\r\n+                    } else {\r\n+                        w.getWorldBorder().setCenter(w.getSpawnLocation());\r\n+                    }\r\n+                } else {\r\n+                    Location loc = new Location(w, cfg.getDouble(\"worldborder.center.x\", 0),\r\n+                            cfg.getDouble(\"worldborder.center.y\", 20), cfg.getDouble(\"worldborder.center.z\", 0));\r\n+                    w.getWorldBorder().setCenter(loc);\r\n+                }\r\n+                if (cfg.getBoolean(\"worldborder.center.as_home\")) {\r\n+                    WorldConfig config = WorldConfig.getWorldConfig(w.getName());\r\n+                    if (config.getHome() != null)\r\n+                        w.getWorldBorder().setCenter(config.getHome());\r\n+                }\r\n+            }\r\n+        }\r\n+\r\n+        // Fix for #17\r\n+        String diff = cfg.getString(\"difficulty\");\r\n+        try {\r\n+            Difficulty difficulty = Difficulty.valueOf(diff.toUpperCase());\r\n+            w.setDifficulty(difficulty);\r\n+        } catch (IllegalArgumentException e) {\r\n+            Bukkit.getConsoleSender().sendMessage(PluginConfig.getPrefix() + \"§cUnknown difficulty \\\"\" + diff + \"\\\" in settings.yml\");\r\n+        }\r\n+\r\n+        if (w.isGameRule(\"announceAdvancements\"))\r\n+            w.setGameRuleValue(\"announceAdvancements\", cfg.getString(\"announceAdvancements\"));\r\n+\r\n+        if (w.isGameRule(\"commandBlockOutput\"))\r\n+            w.setGameRuleValue(\"commandBlockOutput\", cfg.getString(\"commandBlockOutput\"));\r\n+\r\n+        if (w.isGameRule(\"disableElytraMovementCheck\"))\r\n+            w.setGameRuleValue(\"disableElytraMovementCheck\", cfg.getString(\"disableElytraMovementCheck\"));\r\n+\r\n+        if (w.isGameRule(\"doDaylightCycle\"))\r\n+            w.setGameRuleValue(\"doDaylightCycle\", cfg.getString(\"doDaylightCycle\"));\r\n+\r\n+        if (w.isGameRule(\"doEntityDrops\"))\r\n+            w.setGameRuleValue(\"doEntityDrops\", cfg.getString(\"doEntityDrops\"));\r\n+\r\n+        if (w.isGameRule(\"doFireTick\"))\r\n+            w.setGameRuleValue(\"doFireTick\", cfg.getString(\"doFireTick\"));\r\n+\r\n+        if (w.isGameRule(\"doLimitedCrafting\"))\r\n+            w.setGameRuleValue(\"doLimitedCrafting\", cfg.getString(\"doLimitedCrafting\"));\r\n+\r\n+        if (w.isGameRule(\"doMobLoot\"))\r\n+            w.setGameRuleValue(\"doMobLoot\", cfg.getString(\"doMobLoot\"));\r\n+\r\n+        if (w.isGameRule(\"doMobSpawning\"))\r\n+            w.setGameRuleValue(\"doMobSpawning\", cfg.getString(\"doMobSpawning\"));\r\n+\r\n+        if (w.isGameRule(\"doTileDrops\"))\r\n+            w.setGameRuleValue(\"doTileDrops\", cfg.getString(\"doTileDrops\"));\r\n+\r\n+        if (w.isGameRule(\"doWeatherCycle\"))\r\n+            w.setGameRuleValue(\"doWeatherCycle\", cfg.getString(\"doWeatherCycle\"));\r\n+\r\n+        if (w.isGameRule(\"gameLoopFunction\"))\r\n+            w.setGameRuleValue(\"gameLoopFunction\", cfg.getString(\"gameLoopFunction\"));\r\n+\r\n+        if (w.isGameRule(\"keepInventory\"))\r\n+            w.setGameRuleValue(\"keepInventory\", cfg.getString(\"keepInventory\"));\r\n+\r\n+        if (w.isGameRule(\"logAdminCommands\"))\r\n+            w.setGameRuleValue(\"logAdminCommands\", cfg.getString(\"logAdminCommands\"));\r\n+\r\n+        if (w.isGameRule(\"maxCommandChainLength\"))\r\n+            w.setGameRuleValue(\"maxCommandChainLength\", cfg.getString(\"maxCommandChainLength\"));\r\n+\r\n+        if (w.isGameRule(\"maxEntityCramming\"))\r\n+            w.setGameRuleValue(\"maxEntityCramming\", cfg.getString(\"maxEntityCramming\"));\r\n+\r\n+        if (w.isGameRule(\"mobGriefing\"))\r\n+            w.setGameRuleValue(\"mobGriefing\", cfg.getString(\"mobGriefing\"));\r\n+\r\n+        if (w.isGameRule(\"naturalRegeneration\"))\r\n+            w.setGameRuleValue(\"naturalRegeneration\", cfg.getString(\"naturalRegeneration\"));\r\n+\r\n+        if (w.isGameRule(\"randomTickSpeed\"))\r\n+            w.setGameRuleValue(\"randomTickSpeed\", cfg.getString(\"randomTickSpeed\"));\r\n+\r\n+        if (w.isGameRule(\"reducedDebugInfo\"))\r\n+            w.setGameRuleValue(\"reducedDebugInfo\", cfg.getString(\"reducedDebugInfo\"));\r\n+\r\n+        if (w.isGameRule(\"sendCommandFeedback\"))\r\n+            w.setGameRuleValue(\"sendCommandFeedback\", cfg.getString(\"sendCommandFeedback\"));\r\n+\r\n+        if (w.isGameRule(\"showDeathMessages\"))\r\n+            w.setGameRuleValue(\"showDeathMessages\", cfg.getString(\"showDeathMessages\"));\r\n+\r\n+        if (w.isGameRule(\"spawnRadius\"))\r\n+            w.setGameRuleValue(\"spawnRadius\", cfg.getString(\"spawnRadius\"));\r\n+\r\n+        if (w.isGameRule(\"spectatorsGenerateChunks\"))\r\n+            w.setGameRuleValue(\"spectatorsGenerateChunks\", cfg.getString(\"spectatorsGenerateChunks\"));\r\n+    }\r\n+\r\n+    private static YamlConfiguration getConfig() {\r\n+        try {\r\n+            return YamlConfiguration\r\n+                    .loadConfiguration(new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8));\r\n+        } catch (FileNotFoundException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+        return null;\r\n+    }\r\n+\r\n+    public static void checkConfig() {\r\n+        File file = new File(WorldSystem.getInstance().getDataFolder(), \"settings.yml\");\r\n+        SettingsConfig.file = file;\r\n+        if (!file.exists()) {\r\n+            try {\r\n+                InputStream in = JavaPlugin.getPlugin(WorldSystem.class).getResource(\"settings.yml\");\r\n+                Files.copy(in, file.toPath());\r\n+            } catch (IOException e) {\r\n+                System.err.println(\"Wasn't able to create Config\");\r\n+                e.printStackTrace();\r\n+            }\r\n+        }\r\n+        YamlConfiguration cfg = getConfig();\r\n+        for (String s : cfg.getConfigurationSection(\"worldborder.ranks\").getKeys(true)) {\r\n+            if (cfg.isInt(\"worldborder.ranks.\" + s) || cfg.isLong(\"worldborder.ranks.\" + s))\r\n+                borderSizes.put(s, cfg.getLong(\"worldborder.ranks.\" + s));\r\n+        }\r\n+    }\r\n+\r\n+    /**\r\n+     * @return the commands specified in settings.yml on /ws get\r\n+     */\r\n+    public static List<String> getCommandsonGet() {\r\n+        YamlConfiguration cfg = getConfig();\r\n+        return cfg.getStringList(\"commands_on_get\");\r\n+    }\r\n+}\r"
  },
  {
    "sha": "5aed148298c72c5b280f3f7789041bd40a95f785",
    "filename": "src/main/java/de/butzlabben/world/config/WorldConfig.java",
    "status": "modified",
    "additions": 593,
    "deletions": 592,
    "changes": 1185,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/config/WorldConfig.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/config/WorldConfig.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/config/WorldConfig.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -1,592 +1,593 @@\n-package de.butzlabben.world.config;\n-\n-import com.google.common.collect.Sets;\n-import com.mojang.authlib.GameProfile;\n-import de.butzlabben.world.GameProfileBuilder;\n-import de.butzlabben.world.wrapper.WorldTemplate;\n-import java.io.File;\n-import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Objects;\n-import java.util.UUID;\n-import org.bukkit.Bukkit;\n-import org.bukkit.Location;\n-import org.bukkit.OfflinePlayer;\n-import org.bukkit.configuration.ConfigurationSection;\n-import org.bukkit.configuration.file.YamlConfiguration;\n-\n-/**\n- * This class represents a worldconfig.yml file Here you can edit and read all\n- * things Get an instance via WorldConfig.getWorldConfig()\n- *\n- * @since 01.05.2018\n- */\n-@SuppressWarnings(\"ResultOfMethodCallIgnored\")\n-public class WorldConfig {\n-\n-    private static final HashMap<String, WorldConfig> instances = new HashMap<>();\n-\n-    private final UUID owner;\n-    private final int id;\n-\n-    private final HashMap<UUID, HashSet<WorldPerm>> permissions = new HashMap<>();\n-\n-    private String ownerName;\n-    private String templateKey;\n-    private boolean fire, tnt;\n-\n-    public Location home = null;\n-\n-    private WorldConfig(String worldname) {\n-        if (!exists(worldname))\n-            throw new IllegalArgumentException(\"WorldConfig doesn't exist\");\n-        owner = UUID.fromString(worldname.substring(worldname.length() - 36));\n-        id = Integer.parseInt(worldname.split(\"-\")[0].substring(2));\n-    }\n-\n-    public static File getWorldFile(String worldname) {\n-        File worldconfig = new File(Bukkit.getWorldContainer(), worldname + \"/worldconfig.yml\");\n-        if (!worldconfig.exists()) {\n-            worldconfig = new File(PluginConfig.getWorlddir() + \"/\" + worldname + \"/worldconfig.yml\");\n-        }\n-        if (!worldconfig.exists()) {\n-            worldconfig = new File(worldname + \"/worldconfig.yml\");\n-        }\n-        return worldconfig;\n-    }\n-\n-    /**\n-     * Returns whether a worldconfig exists for this worldname\n-     *\n-     * @param worldname name of the world\n-     * @return Whether this world has a worldconfig\n-     */\n-    public static boolean exists(String worldname) {\n-        return getWorldFile(worldname).exists();\n-    }\n-\n-    /**\n-     * Gets the worldconfig for a specific worldname or creates a new one of no\n-     * exists\n-     *\n-     * @param worldname of the world\n-     * @return WorldConfig of the world\n-     */\n-    public static WorldConfig getWorldConfig(String worldname) {\n-        if (!instances.containsKey(worldname))\n-            instances.put(worldname, new WorldConfig(worldname));\n-        return instances.get(worldname).load();\n-    }\n-\n-    public static void create(UUID uuid, WorldTemplate template) {\n-        DependenceConfig dc = new DependenceConfig(uuid);\n-        String worldname = dc.getWorldname();\n-        File file = new File(PluginConfig.getWorlddir() + worldname + \"/worldconfig.yml\");\n-        try {\n-            file.createNewFile();\n-        } catch (IOException e1) {\n-            e1.printStackTrace();\n-            System.err.println(\"Error while creating worldconfig for \" + uuid.toString());\n-        }\n-        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(file);\n-        cfg.set(\"Informations.ID\", dc.getID());\n-        cfg.set(\"Informations.Owner.PlayerUUID\", uuid.toString());\n-        cfg.set(\"Informations.Owner.Actualname\", Objects.requireNonNull(Bukkit.getOfflinePlayer(uuid)).getName());\n-        cfg.set(\"Informations.template_key\", template.getName());\n-        cfg.set(\"Settings.TNTDamage\", false);\n-        cfg.set(\"Settings.Fire\", false);\n-        cfg.set(\"Members\", null);\n-        try {\n-            cfg.save(file);\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-            System.err.println(\"Error while saving worldconfig for \" + uuid.toString());\n-        }\n-    }\n-\n-    /**\n-     * Add a permission to a player of this world\n-     *\n-     * @param player who is edited\n-     * @param perm   which permission will be added\n-     * @return true if the permission was added, false if he already has the\n-     * permission\n-     */\n-    public boolean addPermission(UUID player, WorldPerm perm) {\n-        if (owner.equals(player))\n-            throw new IllegalArgumentException(\"Permissions of the owner cannot change\");\n-        HashSet<WorldPerm> perms = permissions.computeIfAbsent(player, k -> new HashSet<>());\n-        return perms.add(perm);\n-    }\n-\n-    /**\n-     * Remove a permission from a player of this world\n-     *\n-     * @param player who is edited\n-     * @param perm   which permission will be removed\n-     * @return true if the permission was removed, false if he doesn't have the\n-     * permission\n-     */\n-    public boolean removePermission(UUID player, WorldPerm perm) {\n-        if (owner.equals(player))\n-            throw new IllegalArgumentException(\"Permissions of the owner cannot change\");\n-        HashSet<WorldPerm> perms = permissions.get(player);\n-        if (perms == null) {\n-            return false;\n-        }\n-        return perms.remove(perm);\n-    }\n-\n-    /**\n-     * Remove all permissions from a player of this world\n-     *\n-     * @param player who is edited\n-     * @return true if a permission was removed false otherwise\n-     */\n-    public boolean removeAllPermissions(UUID player) {\n-        if (owner.equals(player))\n-            throw new IllegalArgumentException(\"Permissions of the owner cannot change\");\n-        HashSet<WorldPerm> perms = permissions.remove(player);\n-        return perms != null && perms.size() != 0;\n-    }\n-\n-    /**\n-     * Add all permissions to a player of this world\n-     *\n-     * @param player who is edited\n-     * @return true if the permissions of the player changed, false otherwiste\n-     */\n-    public boolean addAllPermissions(UUID player) {\n-        if (owner.equals(player))\n-            throw new IllegalArgumentException(\"Permissions of the owner cannot change\");\n-        HashSet<WorldPerm> perms = permissions.computeIfAbsent(player, k -> new HashSet<>());\n-        return perms.addAll(Sets.newHashSet(WorldPerm.values()));\n-    }\n-\n-    /**\n-     * Checks the permission of a player\n-     *\n-     * @param player who gets their permission checked\n-     * @param perm   to check\n-     * @return true if the player has the permission, false otherwise\n-     */\n-    public boolean hasPermission(UUID player, WorldPerm perm) {\n-        if (owner.equals(player))\n-            return true;\n-        HashSet<WorldPerm> perms = permissions.get(player);\n-        return perms != null && perms.contains(perm);\n-    }\n-\n-    /**\n-     * Get all permissions of a player\n-     *\n-     * @param player from who to get the permissions\n-     * @return all permissions for this player\n-     */\n-    public HashSet<WorldPerm> getPermissions(UUID player) {\n-        if (owner == player) {\n-            return Sets.newHashSet(WorldPerm.values());\n-        }\n-        HashSet<WorldPerm> perms = permissions.get(player);\n-        if (perms == null) {\n-            return Sets.newHashSet();\n-        }\n-        return Sets.newHashSet(perms);\n-    }\n-\n-    /**\n-     * Adds a player to the world\n-     *\n-     * @param player who gets added\n-     * @return true if the player was no member\n-     */\n-    public boolean addMember(UUID player) {\n-        return addPermission(player, WorldPerm.MEMBER);\n-    }\n-\n-    /**\n-     * Try to add a player to the world\n-     *\n-     * @param player who's permission gets checked\n-     * @param target to add to the world\n-     * @return true if the player was successfully added\n-     */\n-    public boolean addMember(UUID player, UUID target) {\n-        if (hasPermission(player, WorldPerm.EDITMEMBERS)) {\n-            return addMember(target);\n-        }\n-        return false;\n-    }\n-\n-    /**\n-     * @return the owner of this world\n-     */\n-    public UUID getOwner() {\n-        return owner;\n-    }\n-\n-    /**\n-     * Is the player a member of this world\n-     *\n-     * @param player to check\n-     * @return if the player is a member of this world\n-     */\n-    public boolean isMember(UUID player) {\n-        return hasPermission(player, WorldPerm.MEMBER);\n-    }\n-\n-    /**\n-     * Removes a Member from this world\n-     *\n-     * @param player to remove\n-     * @return if the player was a member of this world\n-     */\n-    public boolean removeMember(UUID player) {\n-        return removeAllPermissions(player);\n-    }\n-\n-    /**\n-     * Try to remove a Member from this world\n-     *\n-     * @param player who gets his permissions checked\n-     * @param target to remove\n-     * @return if the player was a member of this world\n-     */\n-    public boolean removeMember(UUID player, UUID target) {\n-        if (hasPermission(player, WorldPerm.EDITMEMBERS) && !hasPermission(player, WorldPerm.EDITMEMBERS)) {\n-            return removeMember(target);\n-        }\n-        return false;\n-    }\n-\n-    /**\n-     * Checks wheater a player can build or not\n-     *\n-     * @param player to check\n-     * @return if the can build or not\n-     */\n-    public boolean canBuild(UUID player) {\n-        return hasPermission(player, WorldPerm.BUILD);\n-    }\n-\n-    /**\n-     * Allow or disallow a player to build on this world\n-     *\n-     * @param player  to edit\n-     * @param allowed if he is allowed to build\n-     */\n-    public void setBuild(UUID player, boolean allowed) {\n-        if (allowed) {\n-            addPermission(player, WorldPerm.BUILD);\n-        } else {\n-            removePermission(player, WorldPerm.BUILD);\n-        }\n-    }\n-\n-    /**\n-     * Allow or disallow a player to build with the permissions of a spefic\n-     * player\n-     *\n-     * @param player  who gets his permission checked\n-     * @param target  to allow or disallow\n-     * @param allowed if he is allowed to build\n-     * @return if the player has the permissions\n-     */\n-    public boolean setBuild(UUID player, UUID target, boolean allowed) {\n-        if (!isAllowedToAdministrateMember(player, target))\n-            return false;\n-        setBuild(target, allowed);\n-        return true;\n-    }\n-\n-    private boolean isAllowedToAdministrateMember(UUID player, UUID target) {\n-        return target != owner && player != target && hasPermission(player, WorldPerm.ADMINISTRATEMEMBERS)\n-                && hasPermission(player, WorldPerm.ADMINISTRATEMEMBERS);\n-    }\n-\n-    /**\n-     * Checks wheater a player can build on this world or not\n-     *\n-     * @param player to check\n-     * @return if the player can build\n-     */\n-    public boolean canGamemode(UUID player) {\n-        return hasPermission(player, WorldPerm.GAMEMODE);\n-    }\n-\n-    /**\n-     * Allow or disallow a player to change his gamemode\n-     *\n-     * @param player  to allow or disallow\n-     * @param allowed if he is allowed to change his gamemode or not\n-     */\n-    public void setGamemode(UUID player, boolean allowed) {\n-        if (allowed) {\n-            addPermission(player, WorldPerm.GAMEMODE);\n-        } else {\n-            removePermission(player, WorldPerm.GAMEMODE);\n-        }\n-    }\n-\n-    public boolean setGamemode(UUID player, UUID target, boolean allowed) {\n-        if (!isAllowedToAdministrateMember(player, target))\n-            return false;\n-        setGamemode(target, allowed);\n-        return true;\n-    }\n-\n-    public boolean canTeleport(UUID player) {\n-        return hasPermission(player, WorldPerm.TELEPORT);\n-    }\n-\n-    /**\n-     * Allow or disallow a player to teleport\n-     *\n-     * @param player  to allow or disallow\n-     * @param allowed if he is allowed to teleport or not\n-     */\n-    public void setTeleport(UUID player, boolean allowed) {\n-        if (allowed) {\n-            addPermission(player, WorldPerm.TELEPORT);\n-        } else {\n-            removePermission(player, WorldPerm.TELEPORT);\n-        }\n-    }\n-\n-    public boolean setTeleport(UUID player, UUID target, boolean allowed) {\n-        if (!isAllowedToAdministrateMember(player, target))\n-            return false;\n-        setTeleport(target, allowed);\n-        return true;\n-    }\n-\n-    public HashSet<UUID> getMembers() {\n-        return Sets.newHashSet(permissions.keySet());\n-    }\n-\n-    public HashMap<UUID, String> getMembersWithNames() {\n-        HashMap<UUID, String> map = new HashMap<>();\n-        for (UUID uuid : permissions.keySet()) {\n-            OfflinePlayer op = Bukkit.getOfflinePlayer(uuid);\n-            if (op == null || op.getName() == null) {\n-                if (PluginConfig.contactAuth()) {\n-                    try {\n-                        GameProfile prof = GameProfileBuilder.fetch(uuid);\n-                        map.put(uuid, prof.getName());\n-                    } catch (IOException e) {\n-                        e.printStackTrace();\n-                    }\n-                }\n-            } else\n-                map.put(uuid, op.getName());\n-        }\n-        return map;\n-    }\n-\n-    public WorldConfig save() throws IOException {\n-        File file = getWorldFile(getWorldName());\n-        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(file);\n-\n-        cfg.set(\"Informations.ID\", id);\n-        cfg.set(\"Informations.Owner.Actualname\", ownerName);\n-        cfg.set(\"Informations.Owner.PlayerUUID\", owner.toString());\n-        cfg.set(\"Informations.template_key\", templateKey);\n-        cfg.set(\"Settings.TNTDamage\", tnt);\n-        cfg.set(\"Settings.Fire\", fire);\n-\n-        if (home != null) {\n-            cfg.set(\"Settings.home.x\", home.getX());\n-            cfg.set(\"Settings.home.y\", home.getY());\n-            cfg.set(\"Settings.home.z\", home.getZ());\n-            cfg.set(\"Settings.home.yaw\", home.getYaw());\n-            cfg.set(\"Settings.home.pitch\", home.getPitch());\n-        } else {\n-            cfg.set(\"Settings.home\", null);\n-        }\n-\n-        cfg.set(\"Members\", null);\n-\n-        for (java.util.Map.Entry<UUID, HashSet<WorldPerm>> entry : permissions.entrySet()) {\n-            ArrayList<String> array = new ArrayList<>(entry.getValue().size());\n-            for (WorldPerm perm : entry.getValue()) {\n-                array.add(perm.name());\n-            }\n-            cfg.set(\"Members.\" + entry.getKey(), array);\n-        }\n-\n-        cfg.save(file);\n-        return this;\n-    }\n-\n-    private String getWorldName() {\n-        return \"ID\" + id + \"-\" + owner;\n-    }\n-\n-    public WorldConfig load() {\n-        File file = getWorldFile(getWorldName());\n-        permissions.clear();\n-\n-        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(file);\n-        ownerName = cfg.getString(\"Informations.Owner.Actualname\", \"Unknown Playername\");\n-        templateKey = cfg.getString(\"Informations.template_key\");\n-        tnt = cfg.getBoolean(\"Settings.TNTDamage\", true);\n-        fire = cfg.getBoolean(\"Settings.Fire\", true);\n-\n-        if (cfg.isSet(\"Settings.home\")) {\n-            home = new Location(null, cfg.getDouble(\"Settings.home.x\"), cfg.getDouble(\"Settings.home.y\"),\n-                    cfg.getDouble(\"Settings.home.z\"), (float) cfg.getDouble(\"Settings.home.yaw\"),\n-                    (float) cfg.getDouble(\"Settings.home.pitch\"));\n-        }\n-\n-        if (membersOldFormatted(cfg)) {\n-            for (String s : cfg.getConfigurationSection(\"Members\").getKeys(false)) {\n-                HashSet<WorldPerm> perms = new HashSet<>();\n-                perms.add(WorldPerm.MEMBER);\n-                if (cfg.getBoolean(\"Members.\" + s + \".Permissions.CanBuild\"))\n-                    perms.add(WorldPerm.BUILD);\n-                if (cfg.getBoolean(\"Members.\" + s + \".Permissions.CanTP\"))\n-                    perms.add(WorldPerm.TELEPORT);\n-                if (cfg.getBoolean(\"Members.\" + s + \".Permissions.CanBuild\"))\n-                    perms.add(WorldPerm.GAMEMODE);\n-                permissions.put(UUID.fromString(s), perms);\n-            }\n-            try {\n-                save();\n-            } catch (IOException e) {\n-                e.printStackTrace();\n-            }\n-        } else {\n-            ConfigurationSection section = cfg.getConfigurationSection(\"Members\");\n-            if (section != null) {\n-                for (String suuid : section.getKeys(false)) {\n-                    UUID uuid = UUID.fromString(suuid);\n-                    List<String> list = section.getStringList(suuid);\n-                    HashSet<WorldPerm> perms = new HashSet<>(list.size());\n-                    for (String perm : list) {\n-                        perms.add(WorldPerm.valueOf(perm));\n-                    }\n-                    permissions.put(uuid, perms);\n-                }\n-            }\n-        }\n-        return this;\n-    }\n-\n-    private boolean membersOldFormatted(YamlConfiguration cfg) {\n-        if (cfg.getConfigurationSection(\"Members\") == null)\n-            return false;\n-        String name = cfg.getString(\n-                \"Members.\" + cfg.getConfigurationSection(\"Members\").getKeys(false).iterator().next() + \".Actualname\");\n-        return name != null;\n-    }\n-\n-    /**\n-     * @return the home of the world. If not set returns null\n-     */\n-    public Location getHome() {\n-        if (home == null)\n-            return null;\n-        return new Location(Bukkit.getWorld(getWorldName()), home.getX(), home.getY(), home.getZ(), home.getYaw(),\n-                home.getPitch());\n-    }\n-\n-    /**\n-     * @param loc the new home of the world\n-     */\n-    /*public void setHome(Location loc) {\n-        home = loc;\n-    }*/\n-\n-    public String getOwnerName() {\n-        return ownerName;\n-    }\n-\n-    public void setOwnerName(String ownerName) {\n-        this.ownerName = ownerName;\n-    }\n-\n-    public boolean isFire() {\n-        return fire;\n-    }\n-\n-    public void setFire(boolean fire) {\n-        this.fire = fire;\n-    }\n-\n-    /**\n-     * Allow or Disallow Fire Damage on this world\n-     *\n-     * @param player the player which toggles fire\n-     * @param fire   if fire is enabled\n-     * @return if the player has the permissions to change the value\n-     */\n-    public boolean setFire(UUID player, boolean fire) {\n-        if (!hasPermission(player, WorldPerm.ADMINISTRATEWORLD))\n-            return false;\n-        setFire(fire);\n-        return true;\n-    }\n-\n-    public boolean isTnt() {\n-        return tnt;\n-    }\n-\n-    public void setTnt(boolean tnt) {\n-        this.tnt = tnt;\n-    }\n-\n-    /**\n-     * Allow or Disallow TNT Damage on this world\n-     *\n-     * @param player which toggles tnt\n-     * @param tnt    if tnt is enabled\n-     * @return if the player has the permissions to change the value\n-     */\n-    public boolean setTnt(UUID player, boolean tnt) {\n-        if (!hasPermission(player, WorldPerm.ADMINISTRATEWORLD))\n-            return false;\n-        setTnt(tnt);\n-        return true;\n-    }\n-\n-    /**\n-     * Get the id of this world. The id is written in the filename at the xx\n-     * position: 'IDxx-uuid.yml'\n-     *\n-     * @return id of this world\n-     */\n-    public int getId() {\n-        return id;\n-    }\n-\n-    public void setWorldEdit(UUID player, boolean allowed) {\n-        if (allowed) {\n-            addPermission(player, WorldPerm.WORLDEDIT);\n-        } else {\n-            removePermission(player, WorldPerm.WORLDEDIT);\n-        }\n-    }\n-\n-    public boolean setWorldEdit(UUID player, UUID target, boolean allowed) {\n-        if (!isAllowedToAdministrateMember(player, target)) {\n-            return false;\n-        }\n-        setWorldEdit(target, allowed);\n-        return true;\n-    }\n-\n-    public boolean canWorldEdit(UUID player) {\n-        return hasPermission(player, WorldPerm.WORLDEDIT);\n-    }\n-\n-    public String getTemplateKey() {\n-        return templateKey;\n-    }\n-\n-    public void setTemplateKey(String templateKey) {\n-        this.templateKey = templateKey;\n-    }\n-}\n+package de.butzlabben.world.config;\r\n+\r\n+import com.google.common.collect.Sets;\r\n+import com.mojang.authlib.GameProfile;\r\n+import de.butzlabben.world.GameProfileBuilder;\r\n+import de.butzlabben.world.util.PlayerWrapper;\r\n+import de.butzlabben.world.wrapper.WorldTemplate;\r\n+import java.io.File;\r\n+import java.io.IOException;\r\n+import java.util.ArrayList;\r\n+import java.util.HashMap;\r\n+import java.util.HashSet;\r\n+import java.util.List;\r\n+import java.util.Objects;\r\n+import java.util.UUID;\r\n+import org.bukkit.Bukkit;\r\n+import org.bukkit.Location;\r\n+import org.bukkit.OfflinePlayer;\r\n+import org.bukkit.configuration.ConfigurationSection;\r\n+import org.bukkit.configuration.file.YamlConfiguration;\r\n+\r\n+/**\r\n+ * This class represents a worldconfig.yml file Here you can edit and read all\r\n+ * things Get an instance via WorldConfig.getWorldConfig()\r\n+ *\r\n+ * @since 01.05.2018\r\n+ */\r\n+@SuppressWarnings(\"ResultOfMethodCallIgnored\")\r\n+public class WorldConfig {\r\n+\r\n+    private static final HashMap<String, WorldConfig> instances = new HashMap<>();\r\n+\r\n+    private final UUID owner;\r\n+    private final int id;\r\n+\r\n+    private final HashMap<UUID, HashSet<WorldPerm>> permissions = new HashMap<>();\r\n+\r\n+    private String ownerName;\r\n+    private String templateKey;\r\n+    private boolean fire, tnt;\r\n+\r\n+    public Location home = null;\r\n+\r\n+    private WorldConfig(String worldname) {\r\n+        if (!exists(worldname))\r\n+            throw new IllegalArgumentException(\"WorldConfig doesn't exist\");\r\n+        owner = UUID.fromString(worldname.substring(worldname.length() - 36));\r\n+        id = Integer.parseInt(worldname.split(\"-\")[0].substring(2));\r\n+    }\r\n+\r\n+    public static File getWorldFile(String worldname) {\r\n+        File worldconfig = new File(Bukkit.getWorldContainer(), worldname + \"/worldconfig.yml\");\r\n+        if (!worldconfig.exists()) {\r\n+            worldconfig = new File(PluginConfig.getWorlddir() + \"/\" + worldname + \"/worldconfig.yml\");\r\n+        }\r\n+        if (!worldconfig.exists()) {\r\n+            worldconfig = new File(worldname + \"/worldconfig.yml\");\r\n+        }\r\n+        return worldconfig;\r\n+    }\r\n+\r\n+    /**\r\n+     * Returns whether a worldconfig exists for this worldname\r\n+     *\r\n+     * @param worldname name of the world\r\n+     * @return Whether this world has a worldconfig\r\n+     */\r\n+    public static boolean exists(String worldname) {\r\n+        return getWorldFile(worldname).exists();\r\n+    }\r\n+\r\n+    /**\r\n+     * Gets the worldconfig for a specific worldname or creates a new one of no\r\n+     * exists\r\n+     *\r\n+     * @param worldname of the world\r\n+     * @return WorldConfig of the world\r\n+     */\r\n+    public static WorldConfig getWorldConfig(String worldname) {\r\n+        if (!instances.containsKey(worldname))\r\n+            instances.put(worldname, new WorldConfig(worldname));\r\n+        return instances.get(worldname).load();\r\n+    }\r\n+\r\n+    public static void create(UUID uuid, WorldTemplate template) {\r\n+        DependenceConfig dc = new DependenceConfig(uuid);\r\n+        String worldname = dc.getWorldname();\r\n+        File file = new File(PluginConfig.getWorlddir() + worldname + \"/worldconfig.yml\");\r\n+        try {\r\n+            file.createNewFile();\r\n+        } catch (IOException e1) {\r\n+            e1.printStackTrace();\r\n+            System.err.println(\"Error while creating worldconfig for \" + uuid.toString());\r\n+        }\r\n+        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(file);\r\n+        cfg.set(\"Informations.ID\", dc.getID());\r\n+        cfg.set(\"Informations.Owner.PlayerUUID\", uuid.toString());\r\n+        cfg.set(\"Informations.Owner.Actualname\", Objects.requireNonNull(PlayerWrapper.getOfflinePlayer(uuid)).getName());\r\n+        cfg.set(\"Informations.template_key\", template.getName());\r\n+        cfg.set(\"Settings.TNTDamage\", false);\r\n+        cfg.set(\"Settings.Fire\", false);\r\n+        cfg.set(\"Members\", null);\r\n+        try {\r\n+            cfg.save(file);\r\n+        } catch (IOException e) {\r\n+            e.printStackTrace();\r\n+            System.err.println(\"Error while saving worldconfig for \" + uuid.toString());\r\n+        }\r\n+    }\r\n+\r\n+    /**\r\n+     * Add a permission to a player of this world\r\n+     *\r\n+     * @param player who is edited\r\n+     * @param perm   which permission will be added\r\n+     * @return true if the permission was added, false if he already has the\r\n+     * permission\r\n+     */\r\n+    public boolean addPermission(UUID player, WorldPerm perm) {\r\n+        if (owner.equals(player))\r\n+            throw new IllegalArgumentException(\"Permissions of the owner cannot change\");\r\n+        HashSet<WorldPerm> perms = permissions.computeIfAbsent(player, k -> new HashSet<>());\r\n+        return perms.add(perm);\r\n+    }\r\n+\r\n+    /**\r\n+     * Remove a permission from a player of this world\r\n+     *\r\n+     * @param player who is edited\r\n+     * @param perm   which permission will be removed\r\n+     * @return true if the permission was removed, false if he doesn't have the\r\n+     * permission\r\n+     */\r\n+    public boolean removePermission(UUID player, WorldPerm perm) {\r\n+        if (owner.equals(player))\r\n+            throw new IllegalArgumentException(\"Permissions of the owner cannot change\");\r\n+        HashSet<WorldPerm> perms = permissions.get(player);\r\n+        if (perms == null) {\r\n+            return false;\r\n+        }\r\n+        return perms.remove(perm);\r\n+    }\r\n+\r\n+    /**\r\n+     * Remove all permissions from a player of this world\r\n+     *\r\n+     * @param player who is edited\r\n+     * @return true if a permission was removed false otherwise\r\n+     */\r\n+    public boolean removeAllPermissions(UUID player) {\r\n+        if (owner.equals(player))\r\n+            throw new IllegalArgumentException(\"Permissions of the owner cannot change\");\r\n+        HashSet<WorldPerm> perms = permissions.remove(player);\r\n+        return perms != null && perms.size() != 0;\r\n+    }\r\n+\r\n+    /**\r\n+     * Add all permissions to a player of this world\r\n+     *\r\n+     * @param player who is edited\r\n+     * @return true if the permissions of the player changed, false otherwiste\r\n+     */\r\n+    public boolean addAllPermissions(UUID player) {\r\n+        if (owner.equals(player))\r\n+            throw new IllegalArgumentException(\"Permissions of the owner cannot change\");\r\n+        HashSet<WorldPerm> perms = permissions.computeIfAbsent(player, k -> new HashSet<>());\r\n+        return perms.addAll(Sets.newHashSet(WorldPerm.values()));\r\n+    }\r\n+\r\n+    /**\r\n+     * Checks the permission of a player\r\n+     *\r\n+     * @param player who gets their permission checked\r\n+     * @param perm   to check\r\n+     * @return true if the player has the permission, false otherwise\r\n+     */\r\n+    public boolean hasPermission(UUID player, WorldPerm perm) {\r\n+        if (owner.equals(player))\r\n+            return true;\r\n+        HashSet<WorldPerm> perms = permissions.get(player);\r\n+        return perms != null && perms.contains(perm);\r\n+    }\r\n+\r\n+    /**\r\n+     * Get all permissions of a player\r\n+     *\r\n+     * @param player from who to get the permissions\r\n+     * @return all permissions for this player\r\n+     */\r\n+    public HashSet<WorldPerm> getPermissions(UUID player) {\r\n+        if (owner == player) {\r\n+            return Sets.newHashSet(WorldPerm.values());\r\n+        }\r\n+        HashSet<WorldPerm> perms = permissions.get(player);\r\n+        if (perms == null) {\r\n+            return Sets.newHashSet();\r\n+        }\r\n+        return Sets.newHashSet(perms);\r\n+    }\r\n+\r\n+    /**\r\n+     * Adds a player to the world\r\n+     *\r\n+     * @param player who gets added\r\n+     * @return true if the player was no member\r\n+     */\r\n+    public boolean addMember(UUID player) {\r\n+        return addPermission(player, WorldPerm.MEMBER);\r\n+    }\r\n+\r\n+    /**\r\n+     * Try to add a player to the world\r\n+     *\r\n+     * @param player who's permission gets checked\r\n+     * @param target to add to the world\r\n+     * @return true if the player was successfully added\r\n+     */\r\n+    public boolean addMember(UUID player, UUID target) {\r\n+        if (hasPermission(player, WorldPerm.EDITMEMBERS)) {\r\n+            return addMember(target);\r\n+        }\r\n+        return false;\r\n+    }\r\n+\r\n+    /**\r\n+     * @return the owner of this world\r\n+     */\r\n+    public UUID getOwner() {\r\n+        return owner;\r\n+    }\r\n+\r\n+    /**\r\n+     * Is the player a member of this world\r\n+     *\r\n+     * @param player to check\r\n+     * @return if the player is a member of this world\r\n+     */\r\n+    public boolean isMember(UUID player) {\r\n+        return hasPermission(player, WorldPerm.MEMBER);\r\n+    }\r\n+\r\n+    /**\r\n+     * Removes a Member from this world\r\n+     *\r\n+     * @param player to remove\r\n+     * @return if the player was a member of this world\r\n+     */\r\n+    public boolean removeMember(UUID player) {\r\n+        return removeAllPermissions(player);\r\n+    }\r\n+\r\n+    /**\r\n+     * Try to remove a Member from this world\r\n+     *\r\n+     * @param player who gets his permissions checked\r\n+     * @param target to remove\r\n+     * @return if the player was a member of this world\r\n+     */\r\n+    public boolean removeMember(UUID player, UUID target) {\r\n+        if (hasPermission(player, WorldPerm.EDITMEMBERS) && !hasPermission(player, WorldPerm.EDITMEMBERS)) {\r\n+            return removeMember(target);\r\n+        }\r\n+        return false;\r\n+    }\r\n+\r\n+    /**\r\n+     * Checks wheater a player can build or not\r\n+     *\r\n+     * @param player to check\r\n+     * @return if the can build or not\r\n+     */\r\n+    public boolean canBuild(UUID player) {\r\n+        return hasPermission(player, WorldPerm.BUILD);\r\n+    }\r\n+\r\n+    /**\r\n+     * Allow or disallow a player to build on this world\r\n+     *\r\n+     * @param player  to edit\r\n+     * @param allowed if he is allowed to build\r\n+     */\r\n+    public void setBuild(UUID player, boolean allowed) {\r\n+        if (allowed) {\r\n+            addPermission(player, WorldPerm.BUILD);\r\n+        } else {\r\n+            removePermission(player, WorldPerm.BUILD);\r\n+        }\r\n+    }\r\n+\r\n+    /**\r\n+     * Allow or disallow a player to build with the permissions of a spefic\r\n+     * player\r\n+     *\r\n+     * @param player  who gets his permission checked\r\n+     * @param target  to allow or disallow\r\n+     * @param allowed if he is allowed to build\r\n+     * @return if the player has the permissions\r\n+     */\r\n+    public boolean setBuild(UUID player, UUID target, boolean allowed) {\r\n+        if (!isAllowedToAdministrateMember(player, target))\r\n+            return false;\r\n+        setBuild(target, allowed);\r\n+        return true;\r\n+    }\r\n+\r\n+    private boolean isAllowedToAdministrateMember(UUID player, UUID target) {\r\n+        return target != owner && player != target && hasPermission(player, WorldPerm.ADMINISTRATEMEMBERS)\r\n+                && hasPermission(player, WorldPerm.ADMINISTRATEMEMBERS);\r\n+    }\r\n+\r\n+    /**\r\n+     * Checks wheater a player can build on this world or not\r\n+     *\r\n+     * @param player to check\r\n+     * @return if the player can build\r\n+     */\r\n+    public boolean canGamemode(UUID player) {\r\n+        return hasPermission(player, WorldPerm.GAMEMODE);\r\n+    }\r\n+\r\n+    /**\r\n+     * Allow or disallow a player to change his gamemode\r\n+     *\r\n+     * @param player  to allow or disallow\r\n+     * @param allowed if he is allowed to change his gamemode or not\r\n+     */\r\n+    public void setGamemode(UUID player, boolean allowed) {\r\n+        if (allowed) {\r\n+            addPermission(player, WorldPerm.GAMEMODE);\r\n+        } else {\r\n+            removePermission(player, WorldPerm.GAMEMODE);\r\n+        }\r\n+    }\r\n+\r\n+    public boolean setGamemode(UUID player, UUID target, boolean allowed) {\r\n+        if (!isAllowedToAdministrateMember(player, target))\r\n+            return false;\r\n+        setGamemode(target, allowed);\r\n+        return true;\r\n+    }\r\n+\r\n+    public boolean canTeleport(UUID player) {\r\n+        return hasPermission(player, WorldPerm.TELEPORT);\r\n+    }\r\n+\r\n+    /**\r\n+     * Allow or disallow a player to teleport\r\n+     *\r\n+     * @param player  to allow or disallow\r\n+     * @param allowed if he is allowed to teleport or not\r\n+     */\r\n+    public void setTeleport(UUID player, boolean allowed) {\r\n+        if (allowed) {\r\n+            addPermission(player, WorldPerm.TELEPORT);\r\n+        } else {\r\n+            removePermission(player, WorldPerm.TELEPORT);\r\n+        }\r\n+    }\r\n+\r\n+    public boolean setTeleport(UUID player, UUID target, boolean allowed) {\r\n+        if (!isAllowedToAdministrateMember(player, target))\r\n+            return false;\r\n+        setTeleport(target, allowed);\r\n+        return true;\r\n+    }\r\n+\r\n+    public HashSet<UUID> getMembers() {\r\n+        return Sets.newHashSet(permissions.keySet());\r\n+    }\r\n+\r\n+    public HashMap<UUID, String> getMembersWithNames() {\r\n+        HashMap<UUID, String> map = new HashMap<>();\r\n+        for (UUID uuid : permissions.keySet()) {\r\n+            OfflinePlayer op = PlayerWrapper.getOfflinePlayer(uuid);\r\n+            if (op == null || op.getName() == null) {\r\n+                if (PluginConfig.contactAuth()) {\r\n+                    try {\r\n+                        GameProfile prof = GameProfileBuilder.fetch(uuid);\r\n+                        map.put(uuid, prof.getName());\r\n+                    } catch (IOException e) {\r\n+                        e.printStackTrace();\r\n+                    }\r\n+                }\r\n+            } else\r\n+                map.put(uuid, op.getName());\r\n+        }\r\n+        return map;\r\n+    }\r\n+\r\n+    public WorldConfig save() throws IOException {\r\n+        File file = getWorldFile(getWorldName());\r\n+        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(file);\r\n+\r\n+        cfg.set(\"Informations.ID\", id);\r\n+        cfg.set(\"Informations.Owner.Actualname\", ownerName);\r\n+        cfg.set(\"Informations.Owner.PlayerUUID\", owner.toString());\r\n+        cfg.set(\"Informations.template_key\", templateKey);\r\n+        cfg.set(\"Settings.TNTDamage\", tnt);\r\n+        cfg.set(\"Settings.Fire\", fire);\r\n+\r\n+        if (home != null) {\r\n+            cfg.set(\"Settings.home.x\", home.getX());\r\n+            cfg.set(\"Settings.home.y\", home.getY());\r\n+            cfg.set(\"Settings.home.z\", home.getZ());\r\n+            cfg.set(\"Settings.home.yaw\", home.getYaw());\r\n+            cfg.set(\"Settings.home.pitch\", home.getPitch());\r\n+        } else {\r\n+            cfg.set(\"Settings.home\", null);\r\n+        }\r\n+\r\n+        cfg.set(\"Members\", null);\r\n+\r\n+        for (java.util.Map.Entry<UUID, HashSet<WorldPerm>> entry : permissions.entrySet()) {\r\n+            ArrayList<String> array = new ArrayList<>(entry.getValue().size());\r\n+            for (WorldPerm perm : entry.getValue()) {\r\n+                array.add(perm.name());\r\n+            }\r\n+            cfg.set(\"Members.\" + entry.getKey(), array);\r\n+        }\r\n+\r\n+        cfg.save(file);\r\n+        return this;\r\n+    }\r\n+\r\n+    private String getWorldName() {\r\n+        return \"ID\" + id + \"-\" + owner;\r\n+    }\r\n+\r\n+    public WorldConfig load() {\r\n+        File file = getWorldFile(getWorldName());\r\n+        permissions.clear();\r\n+\r\n+        YamlConfiguration cfg = YamlConfiguration.loadConfiguration(file);\r\n+        ownerName = cfg.getString(\"Informations.Owner.Actualname\", \"Unknown Playername\");\r\n+        templateKey = cfg.getString(\"Informations.template_key\");\r\n+        tnt = cfg.getBoolean(\"Settings.TNTDamage\", true);\r\n+        fire = cfg.getBoolean(\"Settings.Fire\", true);\r\n+\r\n+        if (cfg.isSet(\"Settings.home\")) {\r\n+            home = new Location(null, cfg.getDouble(\"Settings.home.x\"), cfg.getDouble(\"Settings.home.y\"),\r\n+                    cfg.getDouble(\"Settings.home.z\"), (float) cfg.getDouble(\"Settings.home.yaw\"),\r\n+                    (float) cfg.getDouble(\"Settings.home.pitch\"));\r\n+        }\r\n+\r\n+        if (membersOldFormatted(cfg)) {\r\n+            for (String s : cfg.getConfigurationSection(\"Members\").getKeys(false)) {\r\n+                HashSet<WorldPerm> perms = new HashSet<>();\r\n+                perms.add(WorldPerm.MEMBER);\r\n+                if (cfg.getBoolean(\"Members.\" + s + \".Permissions.CanBuild\"))\r\n+                    perms.add(WorldPerm.BUILD);\r\n+                if (cfg.getBoolean(\"Members.\" + s + \".Permissions.CanTP\"))\r\n+                    perms.add(WorldPerm.TELEPORT);\r\n+                if (cfg.getBoolean(\"Members.\" + s + \".Permissions.CanBuild\"))\r\n+                    perms.add(WorldPerm.GAMEMODE);\r\n+                permissions.put(UUID.fromString(s), perms);\r\n+            }\r\n+            try {\r\n+                save();\r\n+            } catch (IOException e) {\r\n+                e.printStackTrace();\r\n+            }\r\n+        } else {\r\n+            ConfigurationSection section = cfg.getConfigurationSection(\"Members\");\r\n+            if (section != null) {\r\n+                for (String suuid : section.getKeys(false)) {\r\n+                    UUID uuid = UUID.fromString(suuid);\r\n+                    List<String> list = section.getStringList(suuid);\r\n+                    HashSet<WorldPerm> perms = new HashSet<>(list.size());\r\n+                    for (String perm : list) {\r\n+                        perms.add(WorldPerm.valueOf(perm));\r\n+                    }\r\n+                    permissions.put(uuid, perms);\r\n+                }\r\n+            }\r\n+        }\r\n+        return this;\r\n+    }\r\n+\r\n+    private boolean membersOldFormatted(YamlConfiguration cfg) {\r\n+        if (cfg.getConfigurationSection(\"Members\") == null)\r\n+            return false;\r\n+        String name = cfg.getString(\r\n+                \"Members.\" + cfg.getConfigurationSection(\"Members\").getKeys(false).iterator().next() + \".Actualname\");\r\n+        return name != null;\r\n+    }\r\n+\r\n+    /**\r\n+     * @return the home of the world. If not set returns null\r\n+     */\r\n+    public Location getHome() {\r\n+        if (home == null)\r\n+            return null;\r\n+        return new Location(Bukkit.getWorld(getWorldName()), home.getX(), home.getY(), home.getZ(), home.getYaw(),\r\n+                home.getPitch());\r\n+    }\r\n+\r\n+    /**\r\n+     * @param loc the new home of the world\r\n+     */\r\n+    /*public void setHome(Location loc) {\r\n+        home = loc;\r\n+    }*/\r\n+\r\n+    public String getOwnerName() {\r\n+        return ownerName;\r\n+    }\r\n+\r\n+    public void setOwnerName(String ownerName) {\r\n+        this.ownerName = ownerName;\r\n+    }\r\n+\r\n+    public boolean isFire() {\r\n+        return fire;\r\n+    }\r\n+\r\n+    public void setFire(boolean fire) {\r\n+        this.fire = fire;\r\n+    }\r\n+\r\n+    /**\r\n+     * Allow or Disallow Fire Damage on this world\r\n+     *\r\n+     * @param player the player which toggles fire\r\n+     * @param fire   if fire is enabled\r\n+     * @return if the player has the permissions to change the value\r\n+     */\r\n+    public boolean setFire(UUID player, boolean fire) {\r\n+        if (!hasPermission(player, WorldPerm.ADMINISTRATEWORLD))\r\n+            return false;\r\n+        setFire(fire);\r\n+        return true;\r\n+    }\r\n+\r\n+    public boolean isTnt() {\r\n+        return tnt;\r\n+    }\r\n+\r\n+    public void setTnt(boolean tnt) {\r\n+        this.tnt = tnt;\r\n+    }\r\n+\r\n+    /**\r\n+     * Allow or Disallow TNT Damage on this world\r\n+     *\r\n+     * @param player which toggles tnt\r\n+     * @param tnt    if tnt is enabled\r\n+     * @return if the player has the permissions to change the value\r\n+     */\r\n+    public boolean setTnt(UUID player, boolean tnt) {\r\n+        if (!hasPermission(player, WorldPerm.ADMINISTRATEWORLD))\r\n+            return false;\r\n+        setTnt(tnt);\r\n+        return true;\r\n+    }\r\n+\r\n+    /**\r\n+     * Get the id of this world. The id is written in the filename at the xx\r\n+     * position: 'IDxx-uuid.yml'\r\n+     *\r\n+     * @return id of this world\r\n+     */\r\n+    public int getId() {\r\n+        return id;\r\n+    }\r\n+\r\n+    public void setWorldEdit(UUID player, boolean allowed) {\r\n+        if (allowed) {\r\n+            addPermission(player, WorldPerm.WORLDEDIT);\r\n+        } else {\r\n+            removePermission(player, WorldPerm.WORLDEDIT);\r\n+        }\r\n+    }\r\n+\r\n+    public boolean setWorldEdit(UUID player, UUID target, boolean allowed) {\r\n+        if (!isAllowedToAdministrateMember(player, target)) {\r\n+            return false;\r\n+        }\r\n+        setWorldEdit(target, allowed);\r\n+        return true;\r\n+    }\r\n+\r\n+    public boolean canWorldEdit(UUID player) {\r\n+        return hasPermission(player, WorldPerm.WORLDEDIT);\r\n+    }\r\n+\r\n+    public String getTemplateKey() {\r\n+        return templateKey;\r\n+    }\r\n+\r\n+    public void setTemplateKey(String templateKey) {\r\n+        this.templateKey = templateKey;\r\n+    }\r\n+}\r"
  },
  {
    "sha": "64181a95a599fa828dc0944acec967ccc95658e3",
    "filename": "src/main/java/de/butzlabben/world/gui/PlayerOptionsGUI.java",
    "status": "modified",
    "additions": 73,
    "deletions": 72,
    "changes": 145,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/gui/PlayerOptionsGUI.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/gui/PlayerOptionsGUI.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/gui/PlayerOptionsGUI.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -1,72 +1,73 @@\n-package de.butzlabben.world.gui;\n-\n-import de.butzlabben.inventory.DependListener;\n-import de.butzlabben.inventory.OrcInventory;\n-import de.butzlabben.inventory.OrcItem;\n-import de.butzlabben.world.config.GuiConfig;\n-import de.butzlabben.world.gui.clicklistener.ComingSoonClickListener;\n-import de.butzlabben.world.gui.clicklistener.CommandExecutorClickListener;\n-import de.butzlabben.world.gui.playeroption.BuildStatus;\n-import de.butzlabben.world.gui.playeroption.GamemodeStatus;\n-import de.butzlabben.world.gui.playeroption.TeleportStatus;\n-import de.butzlabben.world.gui.playeroption.WorldEditStatus;\n-import de.butzlabben.world.wrapper.WorldPlayer;\n-import org.bukkit.Bukkit;\n-import org.bukkit.entity.Player;\n-\n-import java.util.UUID;\n-\n-public class PlayerOptionsGUI extends OrcInventory {\n-\n-    private final static String path = \"options.player.\";\n-\n-    public PlayerOptionsGUI(Player loader, String otherPlayer, UUID other) {\n-        super(GuiConfig.getTitle(GuiConfig.getConfig(), \"options.player\").replace(\"%player\", otherPlayer), GuiConfig.getRows(\"options.player\"), GuiConfig.isFill(\"options.player\"));\n-        WorldPlayer wp = new WorldPlayer(Bukkit.getOfflinePlayer(other), loader.getWorld().getName());\n-        loadItem(\"build\", \"/ws togglebuild \" + otherPlayer, new BuildStatus(wp));\n-        loadItem(\"gamemode\", \"/ws togglegm \" + otherPlayer, new GamemodeStatus(wp));\n-        loadItem(\"teleport\", \"/ws toggletp \" + otherPlayer, new TeleportStatus(wp));\n-        loadItem(\"worldedit\", \"/ws togglewe \" + otherPlayer, new WorldEditStatus(wp));\n-        loadItem(\"time\");\n-        loadItem(\"addmember\");\n-        loadItem(\"delmember\");\n-        loadItem(\"setpermissions\");\n-        loadItem(\"administrateworld\");\n-\n-        if (GuiConfig.isEnabled(path + \"back\")) {\n-            OrcItem back = OrcItem.back.clone();\n-            back.setOnClick((p, inv, i) -> {\n-                p.closeInventory();\n-                PlayersPageGUI.openGUI(p);\n-            });\n-            addItem(GuiConfig.getSlot(path + \"back\"), back);\n-        }\n-    }\n-\n-    public void loadItem(String subpath, String message, DependListener depend) {\n-        if (!GuiConfig.isEnabled(path + subpath))\n-            return;\n-        OrcItem item = GuiConfig.getItem(path + subpath);\n-        if (item != null) {\n-            if (message == null) {\n-                item.setOnClick(new ComingSoonClickListener());\n-            } else {\n-                item.setOnClick(new CommandExecutorClickListener(message));\n-            }\n-            addItem(GuiConfig.getSlot(path + subpath), item);\n-            if (depend == null) {\n-                addItem(GuiConfig.getState(path + subpath), OrcItem.coming_soon.clone());\n-            } else {\n-                addItem(GuiConfig.getState(path + subpath), OrcItem.disabled.clone().setDepend(depend));\n-            }\n-        }\n-    }\n-\n-    public void loadItem(String subpath, String message) {\n-        loadItem(subpath, message, null);\n-    }\n-\n-    public void loadItem(String subpath) {\n-        loadItem(subpath, null);\n-    }\n-}\n+package de.butzlabben.world.gui;\r\n+\r\n+import de.butzlabben.inventory.DependListener;\r\n+import de.butzlabben.inventory.OrcInventory;\r\n+import de.butzlabben.inventory.OrcItem;\r\n+import de.butzlabben.world.config.GuiConfig;\r\n+import de.butzlabben.world.gui.clicklistener.ComingSoonClickListener;\r\n+import de.butzlabben.world.gui.clicklistener.CommandExecutorClickListener;\r\n+import de.butzlabben.world.gui.playeroption.BuildStatus;\r\n+import de.butzlabben.world.gui.playeroption.GamemodeStatus;\r\n+import de.butzlabben.world.gui.playeroption.TeleportStatus;\r\n+import de.butzlabben.world.gui.playeroption.WorldEditStatus;\r\n+import de.butzlabben.world.util.PlayerWrapper;\r\n+import de.butzlabben.world.wrapper.WorldPlayer;\r\n+import org.bukkit.Bukkit;\r\n+import org.bukkit.entity.Player;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+public class PlayerOptionsGUI extends OrcInventory {\r\n+\r\n+    private final static String path = \"options.player.\";\r\n+\r\n+    public PlayerOptionsGUI(Player loader, String otherPlayer, UUID other) {\r\n+        super(GuiConfig.getTitle(GuiConfig.getConfig(), \"options.player\").replace(\"%player\", otherPlayer), GuiConfig.getRows(\"options.player\"), GuiConfig.isFill(\"options.player\"));\r\n+        WorldPlayer wp = new WorldPlayer(PlayerWrapper.getOfflinePlayer(other), loader.getWorld().getName());\r\n+        loadItem(\"build\", \"/ws togglebuild \" + otherPlayer, new BuildStatus(wp));\r\n+        loadItem(\"gamemode\", \"/ws togglegm \" + otherPlayer, new GamemodeStatus(wp));\r\n+        loadItem(\"teleport\", \"/ws toggletp \" + otherPlayer, new TeleportStatus(wp));\r\n+        loadItem(\"worldedit\", \"/ws togglewe \" + otherPlayer, new WorldEditStatus(wp));\r\n+        loadItem(\"time\");\r\n+        loadItem(\"addmember\");\r\n+        loadItem(\"delmember\");\r\n+        loadItem(\"setpermissions\");\r\n+        loadItem(\"administrateworld\");\r\n+\r\n+        if (GuiConfig.isEnabled(path + \"back\")) {\r\n+            OrcItem back = OrcItem.back.clone();\r\n+            back.setOnClick((p, inv, i) -> {\r\n+                p.closeInventory();\r\n+                PlayersPageGUI.openGUI(p);\r\n+            });\r\n+            addItem(GuiConfig.getSlot(path + \"back\"), back);\r\n+        }\r\n+    }\r\n+\r\n+    public void loadItem(String subpath, String message, DependListener depend) {\r\n+        if (!GuiConfig.isEnabled(path + subpath))\r\n+            return;\r\n+        OrcItem item = GuiConfig.getItem(path + subpath);\r\n+        if (item != null) {\r\n+            if (message == null) {\r\n+                item.setOnClick(new ComingSoonClickListener());\r\n+            } else {\r\n+                item.setOnClick(new CommandExecutorClickListener(message));\r\n+            }\r\n+            addItem(GuiConfig.getSlot(path + subpath), item);\r\n+            if (depend == null) {\r\n+                addItem(GuiConfig.getState(path + subpath), OrcItem.coming_soon.clone());\r\n+            } else {\r\n+                addItem(GuiConfig.getState(path + subpath), OrcItem.disabled.clone().setDepend(depend));\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    public void loadItem(String subpath, String message) {\r\n+        loadItem(subpath, message, null);\r\n+    }\r\n+\r\n+    public void loadItem(String subpath) {\r\n+        loadItem(subpath, null);\r\n+    }\r\n+}\r"
  },
  {
    "sha": "4dd734e3ea1c330b9d75e4c9cb646693d8245c0a",
    "filename": "src/main/java/de/butzlabben/world/listener/PlayerListener.java",
    "status": "modified",
    "additions": 115,
    "deletions": 83,
    "changes": 198,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/listener/PlayerListener.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/listener/PlayerListener.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/listener/PlayerListener.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -1,84 +1,116 @@\n-package de.butzlabben.world.listener;\n-\n-import de.butzlabben.world.config.DependenceConfig;\n-import de.butzlabben.world.config.PluginConfig;\n-import de.butzlabben.world.config.WorldConfig;\n-import de.butzlabben.world.util.PlayerPositions;\n-import de.butzlabben.world.wrapper.SystemWorld;\n-import de.butzlabben.world.wrapper.WorldPlayer;\n-import java.util.HashMap;\n-import java.util.UUID;\n-import org.bukkit.World;\n-import org.bukkit.entity.Player;\n-import org.bukkit.event.EventHandler;\n-import org.bukkit.event.EventPriority;\n-import org.bukkit.event.Listener;\n-import org.bukkit.event.entity.PlayerDeathEvent;\n-import org.bukkit.event.player.PlayerJoinEvent;\n-import org.bukkit.event.player.PlayerQuitEvent;\n-import org.bukkit.event.player.PlayerRespawnEvent;\n-\n-public class PlayerListener implements Listener {\n-\n-    private final HashMap<UUID, World> deathLocations = new HashMap<>();\n-\n-    //#17\n-    @EventHandler(priority = EventPriority.HIGHEST)\n-    public void onJoin(PlayerJoinEvent e) {\n-        if (PluginConfig.spawnTeleportation()) {\n-            Player p = e.getPlayer();\n-            DependenceConfig dc = new DependenceConfig(p);\n-            if (dc.hasWorld()) {\n-                SystemWorld sw = SystemWorld.getSystemWorld(dc.getWorldname());\n-                if (sw != null && !sw.isLoaded()) {\n-                    e.getPlayer().teleport(PluginConfig.getSpawn(e.getPlayer()));\n-                }\n-            }\n-        }\n-    }\n-\n-    @EventHandler\n-    public void onLeave(PlayerQuitEvent e) {\n-        Player p = e.getPlayer();\n-        World w = p.getWorld();\n-        WorldPlayer player = new WorldPlayer(p);\n-        // Save last location for #23\n-        if (player.isOnSystemWorld()) {\n-            WorldConfig config = WorldConfig.getWorldConfig(player.getWorldname());\n-            PlayerPositions.getInstance().saveWorldsPlayerLocation(p, config);\n-        }\n-        SystemWorld.tryUnloadLater(w);\n-    }\n-\n-    @EventHandler\n-    public void onDie(PlayerDeathEvent e) {\n-        Player p = e.getEntity();\n-        WorldPlayer wp = new WorldPlayer(p, p.getWorld().getName());\n-        if (wp.isOnSystemWorld()) {\n-            deathLocations.put(p.getUniqueId(), p.getLocation().getWorld());\n-        } else {\n-            p.setGameMode(PluginConfig.getSpawnGamemode());\n-        }\n-    }\n-\n-    @EventHandler\n-    public void onRespawn(PlayerRespawnEvent e) {\n-        Player p = e.getPlayer();\n-        if (deathLocations.containsKey(p.getUniqueId())) {\n-            World world = deathLocations.remove(p.getUniqueId());\n-\n-            WorldConfig config = WorldConfig.getWorldConfig(world.getName());\n-\n-            if (config.getHome() != null) {\n-                e.setRespawnLocation(config.getHome());\n-            } else {\n-                if (PluginConfig.useWorldSpawn()) {\n-                    e.setRespawnLocation(PluginConfig.getWorldSpawn(world));\n-                } else {\n-                    e.setRespawnLocation(world.getSpawnLocation());\n-                }\n-            }\n-        }\n-    }\n-\n+package de.butzlabben.world.listener;\r\n+\r\n+import de.butzlabben.world.WorldSystem;\r\n+import de.butzlabben.world.config.DependenceConfig;\r\n+import de.butzlabben.world.config.MessageConfig;\r\n+import de.butzlabben.world.config.PluginConfig;\r\n+import de.butzlabben.world.config.WorldConfig;\r\n+import de.butzlabben.world.util.PlayerPositions;\r\n+import de.butzlabben.world.util.PlayerWrapper;\r\n+import de.butzlabben.world.wrapper.SystemWorld;\r\n+import de.butzlabben.world.wrapper.WorldPlayer;\r\n+import java.util.HashMap;\r\n+import java.util.UUID;\r\n+\r\n+import de.butzlabben.world.wrapper.WorldTemplate;\r\n+import de.butzlabben.world.wrapper.WorldTemplateProvider;\r\n+import org.bukkit.Bukkit;\r\n+import org.bukkit.World;\r\n+import org.bukkit.entity.Player;\r\n+import org.bukkit.event.EventHandler;\r\n+import org.bukkit.event.EventPriority;\r\n+import org.bukkit.event.Listener;\r\n+import org.bukkit.event.entity.PlayerDeathEvent;\r\n+import org.bukkit.event.player.PlayerJoinEvent;\r\n+import org.bukkit.event.player.PlayerQuitEvent;\r\n+import org.bukkit.event.player.PlayerRespawnEvent;\r\n+\r\n+public class PlayerListener implements Listener {\r\n+\r\n+    private final HashMap<UUID, World> deathLocations = new HashMap<>();\r\n+\r\n+    //#17\r\n+    @EventHandler(priority = EventPriority.HIGHEST)\r\n+    public void onJoin(PlayerJoinEvent e) {\r\n+        PlayerWrapper.updateDatabase(e.getPlayer());\r\n+        if (PluginConfig.spawnTeleportation()) {\r\n+            Player p = e.getPlayer();\r\n+            DependenceConfig dc = new DependenceConfig(p);\r\n+            if (dc.hasWorld()) {\r\n+                SystemWorld sw = SystemWorld.getSystemWorld(dc.getWorldname());\r\n+                if (sw != null && !sw.isLoaded()) {\r\n+                    e.getPlayer().teleport(PluginConfig.getSpawn(e.getPlayer()));\r\n+                }\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    @EventHandler\r\n+    public void onLeave(PlayerQuitEvent e) {\r\n+        Player p = e.getPlayer();\r\n+        World w = p.getWorld();\r\n+        WorldPlayer player = new WorldPlayer(p);\r\n+        // Save last location for #23\r\n+        if (player.isOnSystemWorld()) {\r\n+            WorldConfig config = WorldConfig.getWorldConfig(player.getWorldname());\r\n+            PlayerPositions.instance.saveWorldsPlayerLocation(p, config);\r\n+        }\r\n+        SystemWorld.tryUnloadLater(w);\r\n+    }\r\n+\r\n+    @EventHandler\r\n+    public void onDie(PlayerDeathEvent e) {\r\n+        Player p = e.getEntity();\r\n+        WorldPlayer wp = new WorldPlayer(p, p.getWorld().getName());\r\n+        if (wp.isOnSystemWorld()) {\r\n+            deathLocations.put(p.getUniqueId(), p.getLocation().getWorld());\r\n+        } else {\r\n+            p.setGameMode(PluginConfig.getSpawnGamemode());\r\n+        }\r\n+    }\r\n+\r\n+    @EventHandler\r\n+    public void onRespawn(PlayerRespawnEvent e) {\r\n+        Player p = e.getPlayer();\r\n+        if (deathLocations.containsKey(p.getUniqueId())) {\r\n+            World world = deathLocations.remove(p.getUniqueId());\r\n+\r\n+            WorldConfig config = WorldConfig.getWorldConfig(world.getName());\r\n+\r\n+            if (config.getHome() != null) {\r\n+                e.setRespawnLocation(config.getHome());\r\n+            } else {\r\n+                if (PluginConfig.useWorldSpawn()) {\r\n+                    e.setRespawnLocation(PluginConfig.getWorldSpawn(world));\r\n+                } else {\r\n+                    e.setRespawnLocation(world.getSpawnLocation());\r\n+                }\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    /*@EventHandler(priority = EventPriority.HIGHEST)\r\n+    public void onJoin(PlayerJoinEvent event) {\r\n+        System.out.println(\"creating world for \" + event.getPlayer().getDisplayName());\r\n+        if (PluginConfig.canCreateWorldOnJoin()) {\r\n+            if (!SystemWorld.hasWorld(event.getPlayer())) {\r\n+\r\n+                WorldTemplate template = WorldTemplateProvider.getInstance().getTemplate(PluginConfig.getDefaultWorldTemplate());\r\n+                if (template != null) {\r\n+                    //event.getPlayer().sendMessage(PluginConfig.getPrefix() + \"Creating you world\");\r\n+                    this.create(event.getPlayer(), template);\r\n+                } else {\r\n+                    event.getPlayer().sendMessage(PluginConfig.getPrefix() + \"§cError in config at \\\"worldtemplates.default\\\"\");\r\n+                    event.getPlayer().sendMessage(PluginConfig.getPrefix() + \"§cPlease contact an administrator\");\r\n+                }\r\n+            }\r\n+        }\r\n+    }\r\n+    private void create (Player p, WorldTemplate template){\r\n+        Bukkit.getScheduler().runTask(WorldSystem.getInstance(), () -> {\r\n+            if (SystemWorld.create(p, template))\r\n+                p.sendMessage(MessageConfig.getSettingUpWorld());\r\n+        });\r\n+    }*/\r\n+\r\n }\n\\ No newline at end of file"
  },
  {
    "sha": "59da59ab518f11cbd8d2a7c28be00a64db217c3c",
    "filename": "src/main/java/de/butzlabben/world/listener/WorldInitSkipSpawn.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/listener/WorldInitSkipSpawn.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/listener/WorldInitSkipSpawn.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/listener/WorldInitSkipSpawn.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -0,0 +1,23 @@\n+package de.butzlabben.world.listener;\r\n+\r\n+import de.butzlabben.world.config.SettingsConfig;\r\n+import de.butzlabben.world.wrapper.SystemWorld;\r\n+import org.bukkit.World;\r\n+import org.bukkit.event.EventHandler;\r\n+import org.bukkit.event.Listener;\r\n+import org.bukkit.event.world.WorldInitEvent;\r\n+\r\n+public class WorldInitSkipSpawn implements Listener {\r\n+\r\n+    @EventHandler\r\n+    public void worldInit(WorldInitEvent e) {\r\n+        World world = e.getWorld();\r\n+        SystemWorld sw = SystemWorld.getSystemWorld(world.getName());\r\n+        if(sw == null)\r\n+            return;\r\n+\r\n+        SettingsConfig.editWorld(world);\r\n+        e.getWorld().setKeepSpawnInMemory(false);\r\n+    }\r\n+\r\n+}\r"
  },
  {
    "sha": "5dece1c763a33055bab0d3a463a49d8b47070a33",
    "filename": "src/main/java/de/butzlabben/world/util/MoneyUtil.java",
    "status": "modified",
    "additions": 59,
    "deletions": 59,
    "changes": 118,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/util/MoneyUtil.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/util/MoneyUtil.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/util/MoneyUtil.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -1,59 +1,59 @@\n-package de.butzlabben.world.util;\n-\n-import com.google.common.base.Preconditions;\n-import de.butzlabben.world.config.PluginConfig;\n-import net.milkbowl.vault.economy.Economy;\n-import net.milkbowl.vault.economy.EconomyResponse;\n-import org.bukkit.Bukkit;\n-import org.bukkit.OfflinePlayer;\n-import org.bukkit.plugin.RegisteredServiceProvider;\n-\n-import java.util.UUID;\n-\n-/**\n- * Little util class for dealing with money with vault\n- * Used for #15\n- */\n-public class MoneyUtil {\n-    private static Object economy = null;\n-\n-    static {\n-        if (Bukkit.getPluginManager().getPlugin(\"Vault\") != null) {\n-            try {\n-                RegisteredServiceProvider<Economy> service = Bukkit.getServicesManager().getRegistration(Economy.class);\n-                if (service != null)\n-                    economy = service.getProvider();\n-            } catch (Exception ignored) {\n-            }\n-\n-        }\n-\n-        if (economy == null)\n-            Bukkit.getConsoleSender().sendMessage(PluginConfig.getPrefix() + \"Couldn't find a Vault Economy extension\");\n-    }\n-\n-    private MoneyUtil() {\n-    }\n-\n-    public static void removeMoney(UUID uuid, int money) {\n-        Preconditions.checkNotNull(uuid);\n-        Preconditions.checkNotNull(economy);\n-        Preconditions.checkArgument(money > 0, \"Money must not be negative\");\n-        OfflinePlayer op = Bukkit.getOfflinePlayer(uuid);\n-        Economy economy = (Economy) MoneyUtil.economy;\n-        EconomyResponse response = economy.withdrawPlayer(op, money);\n-        if (!response.transactionSuccess()) {\n-            Bukkit.getConsoleSender().sendMessage(PluginConfig.getPrefix() + \"§cTransaction failure for removing \" + money + \" from \" + op.getName());\n-            Bukkit.getConsoleSender().sendMessage(PluginConfig.getPrefix() + \"§cError message: \" + response.errorMessage);\n-        }\n-    }\n-\n-    public static boolean hasMoney(UUID uuid, int money) {\n-        Preconditions.checkNotNull(uuid);\n-        Preconditions.checkNotNull(economy);\n-        Preconditions.checkArgument(money > 0, \"Money must not be negative\");\n-        OfflinePlayer op = Bukkit.getOfflinePlayer(uuid);\n-        Economy economy = (Economy) MoneyUtil.economy;\n-        return economy.getBalance(op) >= money;\n-    }\n-}\n+package de.butzlabben.world.util;\r\n+\r\n+import com.google.common.base.Preconditions;\r\n+import de.butzlabben.world.config.PluginConfig;\r\n+import net.milkbowl.vault.economy.Economy;\r\n+import net.milkbowl.vault.economy.EconomyResponse;\r\n+import org.bukkit.Bukkit;\r\n+import org.bukkit.OfflinePlayer;\r\n+import org.bukkit.plugin.RegisteredServiceProvider;\r\n+\r\n+import java.util.UUID;\r\n+\r\n+/**\r\n+ * Little util class for dealing with money with vault\r\n+ * Used for #15\r\n+ */\r\n+public class MoneyUtil {\r\n+    private static Object economy = null;\r\n+\r\n+    static {\r\n+        if (Bukkit.getPluginManager().getPlugin(\"Vault\") != null) {\r\n+            try {\r\n+                RegisteredServiceProvider<Economy> service = Bukkit.getServicesManager().getRegistration(Economy.class);\r\n+                if (service != null)\r\n+                    economy = service.getProvider();\r\n+            } catch (Exception ignored) {\r\n+            }\r\n+\r\n+        }\r\n+\r\n+        if (economy == null)\r\n+            Bukkit.getConsoleSender().sendMessage(PluginConfig.getPrefix() + \"Couldn't find a Vault Economy extension\");\r\n+    }\r\n+\r\n+    private MoneyUtil() {\r\n+    }\r\n+\r\n+    public static void removeMoney(UUID uuid, int money) {\r\n+        Preconditions.checkNotNull(uuid);\r\n+        Preconditions.checkNotNull(economy);\r\n+        Preconditions.checkArgument(money > 0, \"Money must not be negative\");\r\n+        OfflinePlayer op = PlayerWrapper.getOfflinePlayer(uuid);\r\n+        Economy economy = (Economy) MoneyUtil.economy;\r\n+        EconomyResponse response = economy.withdrawPlayer(op, money);\r\n+        if (!response.transactionSuccess()) {\r\n+            Bukkit.getConsoleSender().sendMessage(PluginConfig.getPrefix() + \"§cTransaction failure for removing \" + money + \" from \" + op.getName());\r\n+            Bukkit.getConsoleSender().sendMessage(PluginConfig.getPrefix() + \"§cError message: \" + response.errorMessage);\r\n+        }\r\n+    }\r\n+\r\n+    public static boolean hasMoney(UUID uuid, int money) {\r\n+        Preconditions.checkNotNull(uuid);\r\n+        Preconditions.checkNotNull(economy);\r\n+        Preconditions.checkArgument(money > 0, \"Money must not be negative\");\r\n+        OfflinePlayer op = PlayerWrapper.getOfflinePlayer(uuid);\r\n+        Economy economy = (Economy) MoneyUtil.economy;\r\n+        return economy.getBalance(op) >= money;\r\n+    }\r\n+}\r"
  },
  {
    "sha": "df7c151351db7ca338768e416a2b97961e051383",
    "filename": "src/main/java/de/butzlabben/world/util/PapiExtension.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/util/PapiExtension.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/util/PapiExtension.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/util/PapiExtension.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -17,14 +17,19 @@\n \n     private final WorldSystem worldSystem = WorldSystem.getInstance();\n \n+    @Override\n+    public boolean canRegister(){\n+        return true;\n+    }\n+\n     @Override\n     public String getIdentifier() {\n         return \"worldsystem\";\n     }\n \n     @Override\n     public String getAuthor() {\n-        return \"Butzlabben\";\n+        return \"Butzlabben & Trainerlord\";\n     }\n \n     @Override"
  },
  {
    "sha": "0430e9c744364bd60c6874b0631c749b49574f1e",
    "filename": "src/main/java/de/butzlabben/world/util/PlayerWrapper.java",
    "status": "added",
    "additions": 98,
    "deletions": 0,
    "changes": 98,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/util/PlayerWrapper.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/util/PlayerWrapper.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/util/PlayerWrapper.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -0,0 +1,98 @@\n+package de.butzlabben.world.util;\r\n+\r\n+import com.google.common.base.Preconditions;\r\n+import com.sk89q.worldedit.bukkit.BukkitPlayer;\r\n+import de.butzlabben.world.config.PluginConfig;\r\n+import de.butzlabben.world.util.database.DatabaseProvider;\r\n+import de.butzlabben.world.util.database.DatabaseUtil;\r\n+import org.bukkit.Bukkit;\r\n+import org.bukkit.OfflinePlayer;\r\n+import org.bukkit.entity.Player;\r\n+\r\n+import java.sql.PreparedStatement;\r\n+import java.sql.ResultSet;\r\n+import java.sql.SQLException;\r\n+import java.util.UUID;\r\n+\r\n+public class PlayerWrapper {\r\n+\r\n+\r\n+    private static final DatabaseUtil util = DatabaseProvider.instance.util;\r\n+\r\n+    static {\r\n+        checkTables();\r\n+    }\r\n+\r\n+    public static void checkTables() {\r\n+        if (!util.isConnectionAvailable())\r\n+            return;\r\n+\r\n+        String uuidTableName = PluginConfig.getUUIDTableName();\r\n+        try {\r\n+            PreparedStatement ps = util.prepareStatement(\"CREATE TABLE IF NOT EXISTS \" + uuidTableName +\r\n+                    \" ( `uuid` VARCHAR(36) NOT NULL , `name` VARCHAR(36) NOT NULL , \" +\r\n+                    \" PRIMARY KEY (`name`))\");\r\n+\r\n+            util.executeUpdate(ps);\r\n+        } catch (SQLException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+    }\r\n+\r\n+    public static void updateDatabase(Player player) {\r\n+        if (!util.isConnectionAvailable())\r\n+            return;\r\n+\r\n+        Preconditions.checkNotNull(player);\r\n+        String uuidTableName = PluginConfig.getUUIDTableName();\r\n+\r\n+        try {\r\n+            PreparedStatement ps = util.prepareStatement(\"REPLACE INTO \" + uuidTableName +\r\n+                    \" (uuid, name) VALUES (?, ?)\");\r\n+            ps.setString(1, player.getUniqueId().toString());\r\n+            ps.setString(2, player.getName());\r\n+\r\n+            util.executeUpdate(ps);\r\n+        } catch (SQLException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    private static UUID getUUID(String name) {\r\n+        String uuidTableName = PluginConfig.getUUIDTableName();\r\n+\r\n+        try {\r\n+            PreparedStatement ps = util.prepareStatement(\"SELECT * FROM \" + uuidTableName + \" WHERE name=?\");\r\n+\r\n+            ps.setString(1, name);\r\n+            ResultSet rs = util.executeQuery(ps);\r\n+            if (!rs.next())\r\n+                return null;\r\n+\r\n+            return UUID.fromString(rs.getString(\"uuid\"));\r\n+\r\n+        } catch (SQLException e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+        return null;\r\n+    }\r\n+\r\n+    public static OfflinePlayer getOfflinePlayer(String name) {\r\n+        Player player = Bukkit.getPlayer(name);\r\n+        if(player != null)\r\n+            return Bukkit.getOfflinePlayer(player.getUniqueId());\r\n+\r\n+        UUID uuid = PlayerWrapper.getUUID(name);\r\n+        if(uuid != null)\r\n+            return Bukkit.getOfflinePlayer(uuid);\r\n+\r\n+        return Bukkit.getOfflinePlayer(name);\r\n+    }\r\n+\r\n+    public static OfflinePlayer getOfflinePlayer(UUID uuid) {\r\n+        return Bukkit.getOfflinePlayer(uuid);\r\n+    }\r\n+\r\n+\r\n+}\r"
  },
  {
    "sha": "553fc745115687b001b0b6774e6fa3ef16089c8a",
    "filename": "src/main/java/de/butzlabben/world/util/Worldutils.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/trainerlord/worldsystem/blob/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/util/Worldutils.java",
    "raw_url": "https://github.com/trainerlord/worldsystem/raw/be1a2d9d5a464608237d8a67033fb34806749abe/src/main/java/de/butzlabben/world/util/Worldutils.java",
    "contents_url": "https://api.github.com/repos/trainerlord/worldsystem/contents/src/main/java/de/butzlabben/world/util/Worldutils.java?ref=be1a2d9d5a464608237d8a67033fb34806749abe",
    "patch": "@@ -0,0 +1,18 @@\n+package de.butzlabben.world.util;\r\n+\r\n+import de.butzlabben.world.config.SettingsConfig;\r\n+import de.butzlabben.world.wrapper.SystemWorld;\r\n+import org.bukkit.Bukkit;\r\n+import org.bukkit.World;\r\n+\r\n+public class Worldutils {\r\n+\r\n+    public static void reloadWorldSettings(){\r\n+        for (World w : Bukkit.getWorlds()) {\r\n+            SystemWorld sw = SystemWorld.getSystemWorld(w.getName());\r\n+            if (sw != null && sw.isLoaded())\r\n+                SettingsConfig.editWorld(w);\r\n+\r\n+        }\r\n+    }\r\n+}\r"
  }
]
