[
  {
    "sha": "1bedf97afd365d23005cc0e5a2d3d7f3ed059158",
    "filename": ".github/workflows/maven.yml",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/blob/cb12f591960e552be1b7a203f2f80eb72a67a77e/.github/workflows/maven.yml",
    "raw_url": "https://github.com/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/raw/cb12f591960e552be1b7a203f2f80eb72a67a77e/.github/workflows/maven.yml",
    "contents_url": "https://api.github.com/repos/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/contents/.github/workflows/maven.yml?ref=cb12f591960e552be1b7a203f2f80eb72a67a77e",
    "patch": "@@ -0,0 +1,24 @@\n+# This workflow will build a Java project with Maven\n+# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven\n+\n+name: Java CI with Maven\n+\n+on:\n+  push:\n+    branches: [ main ]\n+  pull_request:\n+    branches: [ main ]\n+\n+jobs:\n+  build:\n+\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up JDK 1.8\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: 1.8\n+    - name: Build with Maven\n+      run: mvn test"
  },
  {
    "sha": "541196c9132778e33d113138a44502045db078d4",
    "filename": "README.md",
    "status": "modified",
    "additions": 10,
    "deletions": 7,
    "changes": 17,
    "blob_url": "https://github.com/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/blob/cb12f591960e552be1b7a203f2f80eb72a67a77e/README.md",
    "raw_url": "https://github.com/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/raw/cb12f591960e552be1b7a203f2f80eb72a67a77e/README.md",
    "contents_url": "https://api.github.com/repos/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/contents/README.md?ref=cb12f591960e552be1b7a203f2f80eb72a67a77e",
    "patch": "@@ -3,18 +3,21 @@\n \n Try to *check* the *checkboxes* as you go, and commit changes to the Readme.md as well.\n \n-## Part 1\n+## Part 1 [check]\n There are a few tests that are not finished. And so, you will have a few tasks here.\n You will make frequent commits:\n * Create one test, and make sure it fails\n * Commit to GitHub\n * Write your code to pass the test\n * Commit to GitHub\n ## Part 2\n-* [ ] Create a GitHub action to run your tests from Part 1\n+* [check] Create a GitHub action to run your tests from Part 1\n ## Part 3 \n-* [ ] You will use the TDD technique for this part, remember to create a test before you implement the method; commit to GitHub every working change you make\n-* [ ] Create a method **removeBiggerThan(int threshold)** the AWS class that will remove all values bigger than a **threshold** that you send and return the number of removed values; use FILLER_VALUE to replace removed values\n-* [ ] Create unit tests for **removeBiggerThan(int threshold)**\n-* [ ] Create a method **stepMultiplier()** in the AWS class that will multiply all values less than 10 by 2, and all values that are less than 20 and bigger than 10 by 4, and all values that are less than 100 and bigger than 20 by 100;\n-* [ ] Create a unit tests for **stepMultiplier()**\n+* [check] You will use the TDD technique for this part, remember to create a test before you implement the method; commit to GitHub every working change you make\n+* [check] Create a method **removeBiggerThan(int threshold)** the AWS class that will remove all values bigger than a **threshold** that you send and return the number of removed values; use FILLER_VALUE to replace removed values\n+* [check] Create unit tests for **removeBiggerThan(int threshold)**\n+* [check] Create a method **stepMultiplier()** in the AWS class that will multiply all values less than 10 by 2, and all values that are less than 20 and bigger than 10 by 4, and all values that are less than 100 and bigger than 20 by 100;\n+* [check] Create a unit tests for **stepMultiplier()**\n+\n+\n+Discussed regarding git actions and test methods with Aliya Shaikh"
  },
  {
    "sha": "5a2db81001ebfc406ee6c4e90cf2ed77412df6b6",
    "filename": "pom.xml",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/blob/cb12f591960e552be1b7a203f2f80eb72a67a77e/pom.xml",
    "raw_url": "https://github.com/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/raw/cb12f591960e552be1b7a203f2f80eb72a67a77e/pom.xml",
    "contents_url": "https://api.github.com/repos/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/contents/pom.xml?ref=cb12f591960e552be1b7a203f2f80eb72a67a77e",
    "patch": "@@ -0,0 +1,68 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>sepHW1</groupId>\n+  <artifactId>sepHW1</artifactId>\n+  <version>0.0.1-SNAPSHOT</version>\n+  <properties>\n+\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\t\t<maven.compiler.source>1.8</maven.compiler.source>\n+\t\t<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>\n+\t\t<junit.version>4.13.2</junit.version>\n+\t</properties>\n+\n+\t<dependencyManagement>\n+\t\t<dependencies>\n+            <dependency>\n+                <groupId>org.junit</groupId>\n+                <artifactId>junit-bom</artifactId>\n+                <version>5.7.1</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+\t\t</dependencies>\n+\t</dependencyManagement>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-api</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>junit</groupId>\n+\t\t\t<artifactId>junit</artifactId>\n+\t\t\t<version>${junit.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.vintage</groupId>\n+\t\t\t<artifactId>junit-vintage-engine</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t</dependencies>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n+\t\t\t\t<version>2.22.2</version>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<!--<groups>fast</groups>-->\n+\t\t\t\t\t<excludedGroups>slow</excludedGroups>\n+\t\t\t\t\t<properties>\n+\t\t\t\t\t\t<!--\n+\t\t\t\t\t\t<configurationParameters>\n+\t\t\t\t\t\t\tjunit.jupiter.conditions.deactivate = *\n+\t\t\t\t\t\t</configurationParameters>\n+\t\t\t\t\t\t-->\n+\t\t\t\t\t</properties>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+</project>"
  },
  {
    "sha": "767f5ca28d063cb325349e70ce7dd2e02099f614",
    "filename": "src/main/java/AWS.java",
    "status": "renamed",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/blob/cb12f591960e552be1b7a203f2f80eb72a67a77e/src/main/java/AWS.java",
    "raw_url": "https://github.com/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/raw/cb12f591960e552be1b7a203f2f80eb72a67a77e/src/main/java/AWS.java",
    "contents_url": "https://api.github.com/repos/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/contents/src/main/java/AWS.java?ref=cb12f591960e552be1b7a203f2f80eb72a67a77e",
    "patch": "@@ -55,5 +55,49 @@ public void fillAndExpand(int position, int nt) {\n \t\t}\n \t\tvalues = newArray;\n \t}\n+        public void multiplication() {\n+\t\tfor(int i=0; i<values.length;++i) {\n+\t\t\tif(values[i]<10) {\n+\t\t\t\tvalues[i]=values[i]*4;\n+\t\t\t}\n+\t\t\t\n+\t\t}\n+          \n+\t}\n+        public int removeBiggerThan(int threshold) {\n+\n+\t\tint count =0;\n+\t\tfor(int i=1;i<values.length; ++i) {\n+\t\t\tif(values[i]>threshold) {\n+\t\t\t\tcount +=1;\n+\t\t\t\tvalues[i]=FILLER_VALUE;\n+\t\t\t}\n+\t\t}\n+\t\treturn count;\n+\t\n+        }\n+        public void stepMultiplier() {\n+                for(int i=0; i<values.length;++i) {\n+\t\t\tif(values[i]<10) {\n+\t\t\t\tvalues[i]=values[i]*2;\n+\t\t\t}\n+\t\t\telse if(values[i]>=10 && values[i]<20) {\n+\t\t\t\tvalues[i]=values[i]*4;\n+\t\t\t}\n+\t\t\telse if(values[i]>=20 && values[i]<100){\n+\t\t\t\tvalues[i]=values[i]*100;\n+\t\t\t}\n+\t\t}\n+\t\n+\n+\t}\n \n }\n+\n+\n+\n+\n+\n+\n+\n+",
    "previous_filename": "AWS.java"
  },
  {
    "sha": "25be771bc5038f83fb71ceaa4ad17c54304f6a32",
    "filename": "src/test/java/AWSTest.java",
    "status": "renamed",
    "additions": 69,
    "deletions": 5,
    "changes": 74,
    "blob_url": "https://github.com/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/blob/cb12f591960e552be1b7a203f2f80eb72a67a77e/src/test/java/AWSTest.java",
    "raw_url": "https://github.com/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/raw/cb12f591960e552be1b7a203f2f80eb72a67a77e/src/test/java/AWSTest.java",
    "contents_url": "https://api.github.com/repos/OU-CS5213/introduction-to-the-test-drive-development-LahariMittapalli/contents/src/test/java/AWSTest.java?ref=cb12f591960e552be1b7a203f2f80eb72a67a77e",
    "patch": "@@ -16,17 +16,40 @@ void setUp() throws Exception {\n \n \t@Test\n \tvoid testGetValues() {\n-\t\tfail(\"Not yet implemented\");\n+                int[] arr= {1,2,3};\n+\t\tAWS aws=new AWS(arr);\n+\t\tint[] result=aws.getValues();\n+\t\tassertEquals(result[0], arr[0]);\n+                assertEquals(result[1], arr[1]);\n+                assertEquals(result[2], arr[2]);\n+                assertEquals(result.length, arr.length);\n+                //fail(\"Not yet implemented\");\n \t}\n \n \t@Test\n \tvoid testSetValues() {\n-\t\tfail(\"Not yet implemented\");\n+                int a[] = {5,6,7};\n+\t\tint b[]= {3,4,5};\n+\t\tAWS aws=new AWS(a);\n+\t\taws.setValues(b);\n+\t\tint[] result=aws.getValues();\n+\t\tassertEquals(result[0], b[0]);\n+\t\tassertEquals(result[1], b[1]);\n+\t\tassertEquals(result[2], b[2]);\n+\t\tassertEquals(result.length, b.length);\n+                //fail(\"Not yet implemented\");\n \t}\n \n \t@Test\n-\tvoid testToString() {\n-\t\tfail(\"Not yet implemented\");\n+\tvoid testToString(){\n+                int[] x={1,2,3};\n+                AWS aws=new AWS(x);\n+\t\tString expected = \"AWS [values=[1, 2, 3]]\";\n+\t\tString result= aws.toString();\n+\t\tassertEquals(result,expected);\n+\n+\n+                //fail(\"Not yet implemented\");\n \t}\n \n \t@Test\n@@ -102,7 +125,7 @@ void testFillAndExpandWithNegative() {\n \t\tint[] org = originalAWS.getValues();\n \t\tint expectedValue = org[position];\n  \t\tint first = org[0];\n-\t\tint expected = originalAWS.getValues().length + numberOfTimes;\n+\t\tint expected = originalAWS.getValues().length + Math.abs(numberOfTimes);\n \t\toriginalAWS.fillAndExpand(position, numberOfTimes);\n \t\tint[] result = originalAWS.getValues();\n \t\tassertEquals(expected, result.length);\n@@ -118,6 +141,47 @@ void testFillAndExpandWithNegative() {\n \n \t\n \t}\n+\t@Test\n+        void testMultiplication() {\n+\t\tint[] x= {3,15};\n+\t\tAWS aws=new AWS(x);\n+\t\tint expected=3*4;\n+\t\t\n+\t\taws.multiplication();\n+\t\tint[] result= aws.getValues();\n+\t\tassertEquals(expected, result[0]);\n+\t}\n+        @Test\n+\tvoid testremoveBiggerThan() {\n+\t\tint threshold =2;\n+\t\tint expCount = 1;\n+\t\tint expected = FILLER_VALUE;\n+\t\t\n+\t\tint resCount= originalAWS.removeBiggerThan(threshold);\n+\t\t\n+\t\tint[] resValues= originalAWS.getValues();\n+\t\t\n+\t\tassertEquals(expCount, resCount);\n+\t\tassertEquals(expected, resValues[2]);\n+\t\t\n+\t\t\n+  \n+\t}\n+        @Test\n+\tvoid teststepMultiplier() {\n+\t\tint[] x= {3,17,50};\n+\t\tAWS aws = new AWS(x);\n+\t\tint exp1 = 3*2;\n+\t\tint exp2 = 17*4;\n+\t\tint exp3 = 50*100;\n+\t\t\n+\t\taws.stepMultiplier();\n+\t\tint[] result = aws.getValues();\n+\t\tassertEquals(exp1, result[0]);\n+\t\tassertEquals(exp2, result[1]);\n+\t\tassertEquals(exp3, result[2]);\n+\t}\n+\n \n \n }",
    "previous_filename": "AWSTest.java"
  }
]
