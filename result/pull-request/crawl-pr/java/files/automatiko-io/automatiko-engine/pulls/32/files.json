[
  {
    "sha": "dc0eea3422a2381a309bc8dcf9091d1449f6df4c",
    "filename": "addons/persistence/automatiko-filesystem-persistence-addon/src/test/java/io/automatiko/engine/addons/persistence/filesystem/FileSystemProcessInstancesTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/addons/persistence/automatiko-filesystem-persistence-addon/src/test/java/io/automatiko/engine/addons/persistence/filesystem/FileSystemProcessInstancesTest.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/addons/persistence/automatiko-filesystem-persistence-addon/src/test/java/io/automatiko/engine/addons/persistence/filesystem/FileSystemProcessInstancesTest.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/addons/persistence/automatiko-filesystem-persistence-addon/src/test/java/io/automatiko/engine/addons/persistence/filesystem/FileSystemProcessInstancesTest.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -28,7 +28,6 @@\n import io.automatiko.engine.addons.persistence.AbstractProcessInstancesFactory;\n import io.automatiko.engine.addons.persistence.data.Address;\n import io.automatiko.engine.addons.persistence.data.Person;\n-import io.automatiko.engine.addons.persistence.filesystem.FileSystemProcessInstances;\n import io.automatiko.engine.api.auth.SecurityPolicy;\n import io.automatiko.engine.api.definition.process.WorkflowProcess;\n import io.automatiko.engine.api.runtime.process.ProcessContext;\n@@ -103,7 +102,7 @@ public void execute(ProcessContext kcontext) throws Exception {\n         mutablePi.start();\n         assertThat(mutablePi.status()).isEqualTo(STATE_ERROR);\n         assertThat(mutablePi.error()).hasValueSatisfying(error -> {\n-            assertThat(error.errorMessage()).endsWith(\"java.lang.NullPointerException - null\");\n+            assertThat(error.errorMessage()).isNull();\n             assertThat(error.failedNodeId()).isEqualTo(\"ScriptTask_1\");\n         });\n         assertThat(mutablePi.variables().toMap()).containsExactly(entry(\"var\", \"value\"));\n@@ -117,7 +116,7 @@ public void execute(ProcessContext kcontext) throws Exception {\n                 .findById(mutablePi.id(), ProcessInstanceReadMode.READ_ONLY).get();\n         assertThat(readOnlyPi.status()).isEqualTo(STATE_ERROR);\n         assertThat(readOnlyPi.error()).hasValueSatisfying(error -> {\n-            assertThat(error.errorMessage()).endsWith(\"java.lang.NullPointerException - null\");\n+            assertThat(error.errorMessage()).isEqualTo(\"\");\n             assertThat(error.failedNodeId()).isEqualTo(\"ScriptTask_1\");\n         });\n         assertThat(readOnlyPi.variables().toMap()).containsExactly(entry(\"var\", \"value\"));"
  },
  {
    "sha": "9ff45179f6f578181520600c2b451a7be6062b27",
    "filename": "addons/persistence/automatiko-infinispan-persistence-addon/src/test/java/io/automatiko/engine/addons/persistence/infinispan/MockCacheProcessInstancesTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/addons/persistence/automatiko-infinispan-persistence-addon/src/test/java/io/automatiko/engine/addons/persistence/infinispan/MockCacheProcessInstancesTest.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/addons/persistence/automatiko-infinispan-persistence-addon/src/test/java/io/automatiko/engine/addons/persistence/infinispan/MockCacheProcessInstancesTest.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/addons/persistence/automatiko-infinispan-persistence-addon/src/test/java/io/automatiko/engine/addons/persistence/infinispan/MockCacheProcessInstancesTest.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -126,7 +126,8 @@ public void execute(ProcessContext kcontext) throws Exception {\n         mutablePi.start();\n         assertThat(mutablePi.status()).isEqualTo(STATE_ERROR);\n         assertThat(mutablePi.error()).hasValueSatisfying(error -> {\n-            assertThat(error.errorMessage()).endsWith(\"java.lang.NullPointerException - null\");\n+            assertThat(error.errorMessage()).isNull();\n+            ;\n             assertThat(error.failedNodeId()).isEqualTo(\"ScriptTask_1\");\n         });\n         assertThat(mutablePi.variables().toMap()).containsExactly(entry(\"var\", \"value\"));\n@@ -140,7 +141,7 @@ public void execute(ProcessContext kcontext) throws Exception {\n                 .findById(mutablePi.id(), ProcessInstanceReadMode.READ_ONLY).get();\n         assertThat(readOnlyPi.status()).isEqualTo(STATE_ERROR);\n         assertThat(readOnlyPi.error()).hasValueSatisfying(error -> {\n-            assertThat(error.errorMessage()).endsWith(\"java.lang.NullPointerException - null\");\n+            assertThat(error.errorMessage()).isEqualTo(\"\");\n             assertThat(error.failedNodeId()).isEqualTo(\"ScriptTask_1\");\n         });\n         assertThat(readOnlyPi.variables().toMap()).containsExactly(entry(\"var\", \"value\"));\n@@ -268,7 +269,7 @@ public void execute(ProcessContext kcontext) throws Exception {\n         Optional<ProcessError> errorOp = processInstance.error();\n         assertThat(errorOp).isPresent();\n         assertThat(errorOp.get().failedNodeId()).isEqualTo(\"ScriptTask_1\");\n-        assertThat(errorOp.get().errorMessage()).isNotNull().contains(\"java.lang.NullPointerException - null\");\n+        assertThat(errorOp.get().errorMessage()).isNull();\n \n         op.accept(processInstance);\n         processInstance.error().ifPresent(e -> e.retrigger());"
  },
  {
    "sha": "bc57807d9c193f72d5ea8d8706244a94a0ead3d1",
    "filename": "addons/process-management/automatiko-process-management-addon/src/main/java/io/automatiko/engine/addons/process/management/ProcessInstanceManagementResource.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/addons/process-management/automatiko-process-management-addon/src/main/java/io/automatiko/engine/addons/process/management/ProcessInstanceManagementResource.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/addons/process-management/automatiko-process-management-addon/src/main/java/io/automatiko/engine/addons/process/management/ProcessInstanceManagementResource.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/addons/process-management/automatiko-process-management-addon/src/main/java/io/automatiko/engine/addons/process/management/ProcessInstanceManagementResource.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -201,7 +201,9 @@ public ProcessInstanceDetailsDTO getInstance(@Context UriInfo uriInfo,\n             details.setDescription(pi.description());\n             details.setFailed(pi.error().isPresent());\n             if (pi.error().isPresent()) {\n+                details.setErrorId(pi.error().get().errorId());\n                 details.setErrorMessage(pi.error().get().errorMessage());\n+                details.setErrorDetails(pi.error().get().errorDetails());\n                 details.setFailedNodeId(pi.error().get().failedNodeId());\n             }\n             details.setImage("
  },
  {
    "sha": "b68b4efc70053c1c3c0b10472d7660b0fc329ce8",
    "filename": "addons/process-management/automatiko-process-management-addon/src/main/java/io/automatiko/engine/addons/process/management/model/ProcessInstanceDetailsDTO.java",
    "status": "modified",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/addons/process-management/automatiko-process-management-addon/src/main/java/io/automatiko/engine/addons/process/management/model/ProcessInstanceDetailsDTO.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/addons/process-management/automatiko-process-management-addon/src/main/java/io/automatiko/engine/addons/process/management/model/ProcessInstanceDetailsDTO.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/addons/process-management/automatiko-process-management-addon/src/main/java/io/automatiko/engine/addons/process/management/model/ProcessInstanceDetailsDTO.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -23,8 +23,12 @@\n \n     private Object variables;\n \n+    private String errorId;\n+\n     private String errorMessage;\n \n+    private String errorDetails;\n+\n     private String failedNodeId;\n \n     public String getId() {\n@@ -107,6 +111,22 @@ public void setErrorMessage(String errorMessage) {\n         this.errorMessage = errorMessage;\n     }\n \n+    public String getErrorId() {\n+        return errorId;\n+    }\n+\n+    public void setErrorId(String errorId) {\n+        this.errorId = errorId;\n+    }\n+\n+    public String getErrorDetails() {\n+        return errorDetails;\n+    }\n+\n+    public void setErrorDetails(String errorDetails) {\n+        this.errorDetails = errorDetails;\n+    }\n+\n     public String getFailedNodeId() {\n         return failedNodeId;\n     }"
  },
  {
    "sha": "da9bc526789d3c4fd34e5fff52d93aff8370cb42",
    "filename": "addons/process-management/automatiko-process-management-addon/src/main/resources/automatiko-index.html",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/addons/process-management/automatiko-process-management-addon/src/main/resources/automatiko-index.html",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/addons/process-management/automatiko-process-management-addon/src/main/resources/automatiko-index.html",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/addons/process-management/automatiko-process-management-addon/src/main/resources/automatiko-index.html?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -258,7 +258,7 @@\n \t\t// display error information\n \t\tif (instanceData.failed) {\n \t\t\t$(\"#piError\")\n-\t\t\t\t.html('<div class=\"row\"><div class=\"col-12\"><div class=\"float-right\"><button type=\"button\" class=\"btn btn-sm btn-dark\" onclick=\"retryInstance(\\''+ instanceData.processId + '\\', \\''+ instanceData.id + '\\');\">Retry</button>&nbsp;&nbsp;<button type=\"button\" class=\"btn btn-sm btn-danger\" onclick=\"skipInstance(\\''+ instanceData.processId + '\\', \\''+ instanceData.id + '\\');\">Skip</button></div></div></div><div class=\"row\"><div class=\"col-12\"><hr/></div></div><div class=\"row\"><pre>' + instanceData.errorMessage + '</pre></div>');\n+\t\t\t\t.html('<div class=\"row\"><div class=\"col-12\"><div class=\"float-right\"><button type=\"button\" class=\"btn btn-sm btn-dark\" onclick=\"retryInstance(\\''+ instanceData.processId + '\\', \\''+ instanceData.id + '\\');\">Retry</button>&nbsp;&nbsp;<button type=\"button\" class=\"btn btn-sm btn-danger\" onclick=\"skipInstance(\\''+ instanceData.processId + '\\', \\''+ instanceData.id + '\\');\">Skip</button></div></div></div><div class=\"row\"><div class=\"col-12\"><hr/></div></div><div class=\"row\"><b>Error Id</b>&nbsp;&nbsp;' + instanceData.errorId + '</div><div class=\"row\"><pre>' + instanceData.errorMessage + '</pre></div><div class=\"row\"><pre>' + instanceData.errorDetails + '</pre></div>');\n \t\t}\n \t\t$('#collapseInstanceData').collapse();\n \t\t$('#collapseSubprocesses').collapse();"
  },
  {
    "sha": "982df90b40b1bd627c75a8373234fc50f87f67e3",
    "filename": "api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/decision/DecisionModel.java",
    "status": "modified",
    "additions": 12,
    "deletions": 10,
    "changes": 22,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/decision/DecisionModel.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/decision/DecisionModel.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/decision/DecisionModel.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -5,24 +5,26 @@\n \n public interface DecisionModel<M, C, R, F> {\n \n-\tC newContext(Map<String, Object> inputSet);\n+    C newContext(Map<String, Object> inputSet);\n \n-\tC newContext(F inputSet);\n+    C newContext(F inputSet);\n \n-\tR evaluateAll(C context);\n+    R evaluateAll(C context);\n \n-\tR evaluateDecisionService(C context, String decisionServiceName);\n+    R evaluateDecisionService(C context, String decisionServiceName);\n \n-\tM getDMNModel();\n+    M getDMNModel();\n \n-\tR evaluateDecisionByName(C context, String... decisionName);\n+    R evaluateDecisionByName(C context, String... decisionName);\n \n-\tR evaluateDecisionById(C context, String... decisionId);\n+    R evaluateDecisionById(C context, String... decisionId);\n \n-\tboolean hasErrors(R result);\n+    boolean hasErrors(R result);\n \n-\tMap<String, Object> getResultData(R result);\n+    Map<String, Object> getResultData(R result);\n \n-\tString buildErrorMessage(R result);\n+    String buildErrorMessage(R result);\n+\n+    String getName();\n \n }"
  },
  {
    "sha": "470dc30885536bfb3d3159a71dc7543bd6e0be9c",
    "filename": "api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/event/process/ProcessEventListener.java",
    "status": "modified",
    "additions": 127,
    "deletions": 127,
    "changes": 254,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/event/process/ProcessEventListener.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/event/process/ProcessEventListener.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/event/process/ProcessEventListener.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -8,132 +8,132 @@\n  */\n public interface ProcessEventListener extends EventListener {\n \n-\t/**\n-\t * This listener method is invoked right before a process instance is being\n-\t * started.\n-\t * \n-\t * @param event\n-\t */\n-\tvoid beforeProcessStarted(ProcessStartedEvent event);\n-\n-\t/**\n-\t * This listener method is invoked right after a process instance has been\n-\t * started.\n-\t * \n-\t * @param event\n-\t */\n-\tvoid afterProcessStarted(ProcessStartedEvent event);\n-\n-\t/**\n-\t * This listener method is invoked right before a process instance is being\n-\t * completed (or aborted).\n-\t * \n-\t * @param event\n-\t */\n-\tvoid beforeProcessCompleted(ProcessCompletedEvent event);\n-\n-\t/**\n-\t * This listener method is invoked right after a process instance has been\n-\t * completed (or aborted).\n-\t * \n-\t * @param event\n-\t */\n-\tvoid afterProcessCompleted(ProcessCompletedEvent event);\n-\n-\t/**\n-\t * This listener method is invoked right before a node in a process instance is\n-\t * being triggered (which is when the node is being entered, for example when an\n-\t * incoming connection triggers it).\n-\t * \n-\t * @param event\n-\t */\n-\tvoid beforeNodeTriggered(ProcessNodeTriggeredEvent event);\n-\n-\t/**\n-\t * This listener method is invoked right after a node in a process instance has\n-\t * been triggered (which is when the node was entered, for example when an\n-\t * incoming connection triggered it).\n-\t * \n-\t * @param event\n-\t */\n-\tvoid afterNodeTriggered(ProcessNodeTriggeredEvent event);\n-\n-\t/**\n-\t * This listener method is invoked right before a node in a process instance is\n-\t * being left (which is when the node is completed, for example when it has\n-\t * performed the task it was designed for).\n-\t * \n-\t * @param event\n-\t */\n-\tvoid beforeNodeLeft(ProcessNodeLeftEvent event);\n-\n-\t/**\n-\t * This listener method is invoked right after a node in a process instance has\n-\t * been left (which is when the node was completed, for example when it\n-\t * performed the task it was designed for).\n-\t * \n-\t * @param event\n-\t */\n-\tvoid afterNodeLeft(ProcessNodeLeftEvent event);\n-\n-\t/**\n-\t * This listener method is invoked right before the value of a process variable\n-\t * is being changed.\n-\t * \n-\t * @param event\n-\t */\n-\tvoid beforeVariableChanged(ProcessVariableChangedEvent event);\n-\n-\t/**\n-\t * This listener method is invoked right after the value of a process variable\n-\t * has been changed.\n-\t * \n-\t * @param event\n-\t */\n-\tvoid afterVariableChanged(ProcessVariableChangedEvent event);\n-\n-\t/**\n-\t * This listener method is invoked right before a process/node instance's SLA\n-\t * has been violated.\n-\t * \n-\t * @param event\n-\t */\n-\tdefault void beforeSLAViolated(SLAViolatedEvent event) {\n-\t};\n-\n-\t/**\n-\t * This listener method is invoked right after a process/node instance's SLA has\n-\t * been violated.\n-\t * \n-\t * @param event\n-\t */\n-\tdefault void afterSLAViolated(SLAViolatedEvent event) {\n-\t};\n-\n-\t/**\n-\t * This listener method is invoked right before a work item transition.\n-\t * \n-\t * @param event\n-\t */\n-\tdefault void beforeWorkItemTransition(ProcessWorkItemTransitionEvent event) {\n-\t};\n-\n-\t/**\n-\t * This listener method is invoked right after a work item transition.\n-\t * \n-\t * @param event\n-\t */\n-\tdefault void afterWorkItemTransition(ProcessWorkItemTransitionEvent event) {\n-\t}\n-\n-\t/**\n-\t * This listener method is invoked right after a node instance failed at\n-\t * execution\n-\t * \n-\t * @param event\n-\t */\n-\tdefault void afterNodeInstanceFailed(ProcessNodeInstanceFailedEvent e) {\n-\n-\t}\n+    /**\n+     * This listener method is invoked right before a process instance is being\n+     * started.\n+     * \n+     * @param event\n+     */\n+    void beforeProcessStarted(ProcessStartedEvent event);\n+\n+    /**\n+     * This listener method is invoked right after a process instance has been\n+     * started.\n+     * \n+     * @param event\n+     */\n+    void afterProcessStarted(ProcessStartedEvent event);\n+\n+    /**\n+     * This listener method is invoked right before a process instance is being\n+     * completed (or aborted).\n+     * \n+     * @param event\n+     */\n+    void beforeProcessCompleted(ProcessCompletedEvent event);\n+\n+    /**\n+     * This listener method is invoked right after a process instance has been\n+     * completed (or aborted).\n+     * \n+     * @param event\n+     */\n+    void afterProcessCompleted(ProcessCompletedEvent event);\n+\n+    /**\n+     * This listener method is invoked right before a node in a process instance is\n+     * being triggered (which is when the node is being entered, for example when an\n+     * incoming connection triggers it).\n+     * \n+     * @param event\n+     */\n+    void beforeNodeTriggered(ProcessNodeTriggeredEvent event);\n+\n+    /**\n+     * This listener method is invoked right after a node in a process instance has\n+     * been triggered (which is when the node was entered, for example when an\n+     * incoming connection triggered it).\n+     * \n+     * @param event\n+     */\n+    void afterNodeTriggered(ProcessNodeTriggeredEvent event);\n+\n+    /**\n+     * This listener method is invoked right before a node in a process instance is\n+     * being left (which is when the node is completed, for example when it has\n+     * performed the task it was designed for).\n+     * \n+     * @param event\n+     */\n+    void beforeNodeLeft(ProcessNodeLeftEvent event);\n+\n+    /**\n+     * This listener method is invoked right after a node in a process instance has\n+     * been left (which is when the node was completed, for example when it\n+     * performed the task it was designed for).\n+     * \n+     * @param event\n+     */\n+    void afterNodeLeft(ProcessNodeLeftEvent event);\n+\n+    /**\n+     * This listener method is invoked right before the value of a process variable\n+     * is being changed.\n+     * \n+     * @param event\n+     */\n+    void beforeVariableChanged(ProcessVariableChangedEvent event);\n+\n+    /**\n+     * This listener method is invoked right after the value of a process variable\n+     * has been changed.\n+     * \n+     * @param event\n+     */\n+    void afterVariableChanged(ProcessVariableChangedEvent event);\n+\n+    /**\n+     * This listener method is invoked right before a process/node instance's SLA\n+     * has been violated.\n+     * \n+     * @param event\n+     */\n+    default void beforeSLAViolated(SLAViolatedEvent event) {\n+    };\n+\n+    /**\n+     * This listener method is invoked right after a process/node instance's SLA has\n+     * been violated.\n+     * \n+     * @param event\n+     */\n+    default void afterSLAViolated(SLAViolatedEvent event) {\n+    };\n+\n+    /**\n+     * This listener method is invoked right before a work item transition.\n+     * \n+     * @param event\n+     */\n+    default void beforeWorkItemTransition(ProcessWorkItemTransitionEvent event) {\n+    };\n+\n+    /**\n+     * This listener method is invoked right after a work item transition.\n+     * \n+     * @param event\n+     */\n+    default void afterWorkItemTransition(ProcessWorkItemTransitionEvent event) {\n+    }\n+\n+    /**\n+     * This listener method is invoked right after a node instance failed at\n+     * execution\n+     * \n+     * @param event\n+     */\n+    default void afterNodeInstanceFailed(ProcessNodeInstanceFailedEvent e) {\n+\n+    }\n \n }"
  },
  {
    "sha": "3b10754872a7b4589bbd33a515e62c44ec66c31f",
    "filename": "api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/event/process/ProcessNodeInstanceFailedEvent.java",
    "status": "modified",
    "additions": 27,
    "deletions": 13,
    "changes": 40,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/event/process/ProcessNodeInstanceFailedEvent.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/event/process/ProcessNodeInstanceFailedEvent.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/event/process/ProcessNodeInstanceFailedEvent.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -8,18 +8,32 @@\n  */\n public interface ProcessNodeInstanceFailedEvent extends ProcessEvent {\n \n-\t/**\n-\t * Returns node instance that failed at execution\n-\t * \n-\t * @return work item\n-\t */\n-\tNodeInstance getNodeInstance();\n-\n-\t/**\n-\t * Returns the actual exception that was thrown at execution\n-\t * \n-\t * @return transition\n-\t */\n-\tException getException();\n+    /**\n+     * Returns node instance that failed at execution\n+     * \n+     * @return work item\n+     */\n+    NodeInstance getNodeInstance();\n+\n+    /**\n+     * Unique identifier of the error\n+     * \n+     * @return error identifier\n+     */\n+    String getErrorId();\n+\n+    /**\n+     * Short descriptive message of the error\n+     * \n+     * @return error message\n+     */\n+    String getErrorMessage();\n+\n+    /**\n+     * Returns the actual exception that was thrown at execution\n+     * \n+     * @return transition\n+     */\n+    Exception getException();\n \n }"
  },
  {
    "sha": "dfb0ac9e51f0b71d7409ae48c3302308103e56fb",
    "filename": "api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/runtime/process/WorkflowProcessInstance.java",
    "status": "modified",
    "additions": 17,
    "deletions": 6,
    "changes": 23,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/runtime/process/WorkflowProcessInstance.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/runtime/process/WorkflowProcessInstance.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/runtime/process/WorkflowProcessInstance.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -59,19 +59,30 @@\n      */\n     String getNodeIdInError();\n \n+    /**\n+     * Returns unique error id associated with this process instance in case it is in an error\n+     * state.\n+     * \n+     * @return unique error id\n+     */\n+    String getErrorId();\n+\n     /**\n      * Returns error message associated with this process instance in case it is in\n-     * an error state. It will consists of\n-     * <ul>\n-     * <li>unique error id (uuid)</li>\n-     * <li>fully qualified class name of the root cause</li>\n-     * <li>error message of the root cause</li>\n-     * </ul>\n+     * an error state.\n      * \n      * @return error message\n      */\n     String getErrorMessage();\n \n+    /**\n+     * Returns error details associated with this process instance in case it is in an error\n+     * state.\n+     * \n+     * @return error message\n+     */\n+    String getErrorDetails();\n+\n     /**\n      * Returns optional correlation key assigned to process instance\n      * "
  },
  {
    "sha": "a992bf9c665f088ba6c58493c1f8fab54d8b7bdf",
    "filename": "api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/ProcessError.java",
    "status": "modified",
    "additions": 8,
    "deletions": 4,
    "changes": 12,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/ProcessError.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/ProcessError.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/ProcessError.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -2,11 +2,15 @@\n \n public interface ProcessError {\n \n-\tString failedNodeId();\n+    String failedNodeId();\n \n-\tString errorMessage();\n+    String errorId();\n \n-\tvoid retrigger();\n+    String errorMessage();\n \n-\tvoid skip();\n+    String errorDetails();\n+\n+    void retrigger();\n+\n+    void skip();\n }"
  },
  {
    "sha": "af52aec6c5177a7305ac87cc2e3b6eadfae49a3c",
    "filename": "api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/ServiceExecutionError.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/ServiceExecutionError.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/ServiceExecutionError.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/ServiceExecutionError.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -14,4 +14,12 @@ public ServiceExecutionError(String errorCode) {\n         super(errorCode);\n     }\n \n+    public ServiceExecutionError(String errorCode, String errorDetails, Throwable e) {\n+        super(errorCode, errorDetails, e);\n+    }\n+\n+    public ServiceExecutionError(String errorCode, String errorDetails) {\n+        super(errorCode, errorDetails);\n+    }\n+\n }"
  },
  {
    "sha": "6aceb23b2a6599c97608721d16b0c5bd18598262",
    "filename": "api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/workitem/WorkItemExecutionError.java",
    "status": "modified",
    "additions": 42,
    "deletions": 22,
    "changes": 64,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/workitem/WorkItemExecutionError.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/workitem/WorkItemExecutionError.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/api/automatiko-engine-api/src/main/java/io/automatiko/engine/api/workflow/workitem/WorkItemExecutionError.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -3,27 +3,47 @@\n \n public class WorkItemExecutionError extends RuntimeException {\n \n-\tprivate static final long serialVersionUID = 4739415822214766299L;\n-\n-\tprivate final String errorCode;\n-\n-\tpublic WorkItemExecutionError(String errorCode) {\n-\t\tsuper(\"WorkItem execution failed with error code \" + errorCode);\n-\t\tthis.errorCode = errorCode;\n-\t}\n-\n-\tpublic WorkItemExecutionError(String errorCode, Throwable e) {\n-\t\tsuper(\"WorkItem execution failed with error code \" + errorCode, e);\n-\t\tthis.errorCode = errorCode;\n-\t}\n-\n-\tpublic String getErrorCode() {\n-\t\treturn errorCode;\n-\t}\n-\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn \"WorkItemExecutionError [errorCode=\" + errorCode + \"]\";\n-\t}\n+    private static final long serialVersionUID = 4739415822214766299L;\n+\n+    private final String errorCode;\n+\n+    private final String errorDetails;\n+\n+    public WorkItemExecutionError(String errorCode) {\n+        super(\"WorkItem execution failed with error code \" + errorCode);\n+        this.errorCode = errorCode;\n+        this.errorDetails = \"\";\n+    }\n+\n+    public WorkItemExecutionError(String errorCode, String errorDetails) {\n+        super(\"WorkItem execution failed with error code \" + errorCode);\n+        this.errorCode = errorCode;\n+        this.errorDetails = errorDetails;\n+    }\n+\n+    public WorkItemExecutionError(String errorCode, Throwable e) {\n+        super(\"WorkItem execution failed with error code \" + errorCode, e);\n+        this.errorCode = errorCode;\n+        this.errorDetails = \"\";\n+    }\n+\n+    public WorkItemExecutionError(String errorCode, String errorDetails, Throwable e) {\n+        super(\"WorkItem execution failed with error code \" + errorCode, e);\n+        this.errorCode = errorCode;\n+        this.errorDetails = errorDetails;\n+    }\n+\n+    public String getErrorCode() {\n+        return errorCode;\n+    }\n+\n+    public String getErrorDetails() {\n+        return errorDetails;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"WorkItemExecutionError [errorCode=\" + errorCode + \"]\";\n+    }\n \n }"
  },
  {
    "sha": "a662d122ce673b48bcad9b4cf6bd0953777f980b",
    "filename": "codegen/src/test/java/io/automatiko/engine/codegen/tests/PublishEventTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/codegen/src/test/java/io/automatiko/engine/codegen/tests/PublishEventTest.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/codegen/src/test/java/io/automatiko/engine/codegen/tests/PublishEventTest.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/codegen/src/test/java/io/automatiko/engine/codegen/tests/PublishEventTest.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -436,7 +436,7 @@ public void testServiceTaskProcessWithError() throws Exception {\n                                                                                               // time\n \n         assertThat(body.getError()).isNotNull();\n-        assertThat(body.getError().getErrorMessage()).contains(\"java.lang.NullPointerException - null\");\n+        assertThat(body.getError().getErrorMessage()).isNull();\n         assertThat(body.getError().getNodeDefinitionId()).isEqualTo(\"_38E04E27-3CCA-47F9-927B-E37DC4B8CE25\");\n \n         parameters.put(\"s\", \"john\");\n@@ -450,7 +450,7 @@ public void testServiceTaskProcessWithError() throws Exception {\n         assertThat(events).isNotNull().hasSize(1);\n         body = assertProcessInstanceEvent(events.get(0), \"ServiceProcessDifferentOperations\", \"Service Process\", 5);\n         assertThat(body.getError()).isNotNull();\n-        assertThat(body.getError().getErrorMessage()).contains(\"java.lang.NullPointerException - null\");\n+        assertThat(body.getError().getErrorMessage()).isNull();\n         assertThat(body.getError().getNodeDefinitionId()).isEqualTo(\"_38E04E27-3CCA-47F9-927B-E37DC4B8CE25\");\n \n         uow = app.unitOfWorkManager().newUnitOfWork();"
  },
  {
    "sha": "bbde17e95fca63724b0c5d494e7a2d06b7692d2a",
    "filename": "decision/automatiko-decision-dmn/src/main/java/io/automatiko/engine/decision/dmn/DmnDecisionModel.java",
    "status": "modified",
    "additions": 24,
    "deletions": 19,
    "changes": 43,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/decision/automatiko-decision-dmn/src/main/java/io/automatiko/engine/decision/dmn/DmnDecisionModel.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/decision/automatiko-decision-dmn/src/main/java/io/automatiko/engine/decision/dmn/DmnDecisionModel.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/decision/automatiko-decision-dmn/src/main/java/io/automatiko/engine/decision/dmn/DmnDecisionModel.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -6,29 +6,29 @@\n \n import org.kie.dmn.api.core.DMNContext;\n import org.kie.dmn.api.core.DMNMessage.Severity;\n-\n-import io.automatiko.engine.api.ExecutionIdSupplier;\n-import io.automatiko.engine.api.decision.DecisionModel;\n-\n import org.kie.dmn.api.core.DMNModel;\n import org.kie.dmn.api.core.DMNResult;\n import org.kie.dmn.api.core.DMNRuntime;\n import org.kie.dmn.api.core.FEELPropertyAccessible;\n \n+import io.automatiko.engine.api.ExecutionIdSupplier;\n+import io.automatiko.engine.api.decision.DecisionModel;\n+\n public class DmnDecisionModel implements DecisionModel<DMNModel, DMNContext, DMNResult, FEELPropertyAccessible> {\n \n-    private final DMNRuntime dmnRuntime;    \n+    private final DMNRuntime dmnRuntime;\n     private final DMNModel dmnModel;\n \n     public DmnDecisionModel(DMNRuntime dmnRuntime, String namespace, String name) {\n         this(dmnRuntime, namespace, name, null);\n     }\n \n     public DmnDecisionModel(DMNRuntime dmnRuntime, String namespace, String name, ExecutionIdSupplier execIdSupplier) {\n-        this.dmnRuntime = dmnRuntime;        \n+        this.dmnRuntime = dmnRuntime;\n         this.dmnModel = dmnRuntime.getModel(namespace, name);\n         if (dmnModel == null) {\n-            throw new IllegalStateException(\"DMN model '\" + name + \"' not found with namespace '\" + namespace + \"' in the inherent DMNRuntime.\");\n+            throw new IllegalStateException(\n+                    \"DMN model '\" + name + \"' not found with namespace '\" + namespace + \"' in the inherent DMNRuntime.\");\n         }\n     }\n \n@@ -67,21 +67,26 @@ public DMNModel getDMNModel() {\n         return dmnModel;\n     }\n \n-\t@Override\n-\tpublic boolean hasErrors(DMNResult result) {\n-\t\treturn result.hasErrors();\n-\t}\n+    @Override\n+    public boolean hasErrors(DMNResult result) {\n+        return result.hasErrors();\n+    }\n \n-\t@Override\n-\tpublic Map<String, Object> getResultData(DMNResult result) {\n+    @Override\n+    public Map<String, Object> getResultData(DMNResult result) {\n \n-\t\treturn result.getContext().getAll();\n-\t}\n+        return result.getContext().getAll();\n+    }\n \n-\t@Override\n-\tpublic String buildErrorMessage(DMNResult result) {\n-\t\treturn result.getMessages(Severity.ERROR).stream()\n+    @Override\n+    public String buildErrorMessage(DMNResult result) {\n+        return result.getMessages(Severity.ERROR).stream()\n                 .map(Object::toString)\n                 .collect(Collectors.joining(\", \"));\n-\t}\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return dmnModel.getName() + \" (\" + dmnModel.getNamespace() + \")\";\n+    }\n }"
  },
  {
    "sha": "8e9ca25fdb193c6b08b3e6b7bb5840ed63f0266e",
    "filename": "workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/BoundaryEventHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/BoundaryEventHandler.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/BoundaryEventHandler.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/BoundaryEventHandler.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -2,7 +2,7 @@\n package io.automatiko.engine.workflow.bpmn2.xml;\n \n import java.util.ArrayList;\n-import java.util.HashMap;\n+import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n \n@@ -97,7 +97,7 @@ public Object end(final String uri, final String localName, final ExtensibleXmlP\n             }\n             xmlNode = xmlNode.getNextSibling();\n         }\n-        node.setMetaData(\"DataOutputs\", new HashMap<String, String>(dataOutputTypes));\n+        node.setMetaData(\"DataOutputs\", new LinkedHashMap<String, String>(dataOutputTypes));\n \n         NodeContainer nodeContainer = (NodeContainer) parser.getParent();\n         nodeContainer.addNode(node);"
  },
  {
    "sha": "bdceb22cfdc534b10b43806f9da02c8291b84579",
    "filename": "workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/IntermediateCatchEventHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/IntermediateCatchEventHandler.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/IntermediateCatchEventHandler.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/IntermediateCatchEventHandler.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -3,7 +3,7 @@\n \n import java.text.MessageFormat;\n import java.util.ArrayList;\n-import java.util.HashMap;\n+import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n \n@@ -96,7 +96,7 @@ public Object end(final String uri, final String localName, final ExtensibleXmlP\n             }\n             xmlNode = xmlNode.getNextSibling();\n         }\n-        node.setMetaData(\"DataOutputs\", new HashMap<String, String>(dataOutputTypes));\n+        node.setMetaData(\"DataOutputs\", new LinkedHashMap<String, String>(dataOutputTypes));\n \n         NodeContainer nodeContainer = (NodeContainer) parser.getParent();\n         nodeContainer.addNode(node);"
  },
  {
    "sha": "aaac01c0936a260b518bf9c97a7f2e8711e20f23",
    "filename": "workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/ScriptTaskHandler.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/ScriptTaskHandler.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/ScriptTaskHandler.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/ScriptTaskHandler.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -3,6 +3,7 @@\n \n import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.LinkedHashMap;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n@@ -87,8 +88,8 @@ protected void handleNode(final Node node, final Element element, final String u\n             xmlNode = xmlNode.getNextSibling();\n         }\n \n-        actionNode.setMetaData(\"DataInputs\", new HashMap<String, String>(dataInputs));\n-        actionNode.setMetaData(\"DataOutputs\", new HashMap<String, String>(dataOutputs));\n+        actionNode.setMetaData(\"DataInputs\", new LinkedHashMap<String, String>(dataInputs));\n+        actionNode.setMetaData(\"DataOutputs\", new LinkedHashMap<String, String>(dataOutputs));\n \n         String compensation = element.getAttribute(\"isForCompensation\");\n         if (compensation != null) {"
  },
  {
    "sha": "3b3284ef2c3fa5d860d698d3b768e5767a969662",
    "filename": "workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/StartEventHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/StartEventHandler.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/StartEventHandler.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/StartEventHandler.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -2,7 +2,7 @@\n package io.automatiko.engine.workflow.bpmn2.xml;\n \n import java.util.ArrayList;\n-import java.util.HashMap;\n+import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n \n@@ -210,7 +210,7 @@ protected void handleNode(final Node node, final Element element, final String u\n             xmlNode = xmlNode.getNextSibling();\n         }\n \n-        node.setMetaData(\"DataOutputs\", new HashMap<String, String>(dataOutputTypes));\n+        node.setMetaData(\"DataOutputs\", new LinkedHashMap<String, String>(dataOutputTypes));\n     }\n \n     private void addTriggerWithInMappings(StartNode startNode, String triggerEventType) {"
  },
  {
    "sha": "f6fbc7b2258d8af5eefd7310f1e1dc269911fed5",
    "filename": "workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/TaskHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/TaskHandler.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/TaskHandler.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-bpmn2/src/main/java/io/automatiko/engine/workflow/bpmn2/xml/TaskHandler.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -5,7 +5,6 @@\n import static io.automatiko.engine.workflow.process.executable.core.Metadata.CONDITION;\n \n import java.util.ArrayList;\n-import java.util.HashMap;\n import java.util.LinkedHashMap;\n import java.util.LinkedList;\n import java.util.List;\n@@ -81,8 +80,8 @@ protected void handleNode(final Node node, final Element element, final String u\n             }\n             xmlNode = xmlNode.getNextSibling();\n         }\n-        workItemNode.setMetaData(\"DataInputs\", new HashMap<String, String>(dataTypeInputs));\n-        workItemNode.setMetaData(\"DataOutputs\", new HashMap<String, String>(dataTypeOutputs));\n+        workItemNode.setMetaData(\"DataInputs\", new LinkedHashMap<String, String>(dataTypeInputs));\n+        workItemNode.setMetaData(\"DataOutputs\", new LinkedHashMap<String, String>(dataTypeOutputs));\n         handleScript(workItemNode, element, \"onEntry\");\n         handleScript(workItemNode, element, \"onExit\");\n "
  },
  {
    "sha": "64bb331620f51887c421338d424af9d9d329bd2e",
    "filename": "workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/AbstractProcessInstance.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/AbstractProcessInstance.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/AbstractProcessInstance.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/AbstractProcessInstance.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -821,7 +821,9 @@ private ProcessRuntime getProcessRuntime() {\n     protected ProcessError buildProcessError() {\n         WorkflowProcessInstanceImpl pi = (WorkflowProcessInstanceImpl) processInstance();\n \n+        final String errorId = pi.getErrorId();\n         final String errorMessage = pi.getErrorMessage();\n+        final String errorDetails = pi.getErrorDetails();\n         final String nodeInError = pi.getNodeIdInError();\n         return new ProcessError() {\n \n@@ -835,6 +837,16 @@ public String errorMessage() {\n                 return errorMessage;\n             }\n \n+            @Override\n+            public String errorId() {\n+                return errorId;\n+            }\n+\n+            @Override\n+            public String errorDetails() {\n+                return errorDetails;\n+            }\n+\n             @Override\n             public void retrigger() {\n                 WorkflowProcessInstanceImpl pInstance = (WorkflowProcessInstanceImpl) processInstance();\n@@ -843,6 +855,9 @@ public void retrigger() {\n                 pInstance.setState(STATE_ACTIVE);\n                 pInstance.internalSetErrorNodeId(null);\n                 pInstance.internalSetErrorMessage(null);\n+                pInstance.internalSetErrorId(null);\n+                pInstance.internalSetErrorDetails(null);\n+\n                 ni.trigger(null, io.automatiko.engine.workflow.process.core.Node.CONNECTION_DEFAULT_TYPE);\n                 removeOnFinish();\n             }\n@@ -855,6 +870,9 @@ public void skip() {\n                 pInstance.setState(STATE_ACTIVE);\n                 pInstance.internalSetErrorNodeId(null);\n                 pInstance.internalSetErrorMessage(null);\n+                pInstance.internalSetErrorId(null);\n+                pInstance.internalSetErrorDetails(null);\n+\n                 ((NodeInstanceImpl) ni)\n                         .triggerCompleted(io.automatiko.engine.workflow.process.core.Node.CONNECTION_DEFAULT_TYPE, true);\n                 removeOnFinish();"
  },
  {
    "sha": "dabfbfd62b1f10de60138e7a8aee614749dfa7eb",
    "filename": "workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/core/event/ProcessEventSupport.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/core/event/ProcessEventSupport.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/core/event/ProcessEventSupport.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/core/event/ProcessEventSupport.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -361,11 +361,11 @@ public void fireAfterWorkItemTransition(final ProcessInstance instance, WorkItem\n     }\n \n     public void fireAfterNodeInstanceFailed(final ProcessInstance instance, NodeInstance nodeInstance,\n-            Exception exception, ProcessRuntime runtime) {\n+            String errorId, String errorMessage, Exception exception, ProcessRuntime runtime) {\n         final Iterator<ProcessEventListener> iter = getEventListenersIterator();\n         final List<ProcessEventListener> delayedListeners = new ArrayList<ProcessEventListener>();\n         final ProcessNodeInstanceFailedEvent event = new ProcessNodeInstanceFailedEventImpl(instance, nodeInstance,\n-                exception, runtime);\n+                errorId, errorMessage, exception, runtime);\n         if (iter.hasNext()) {\n             do {\n                 ProcessEventListener listener = iter.next();"
  },
  {
    "sha": "fe34a605260b40999d682b092fc9b6669cce8a49",
    "filename": "workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/core/event/ProcessNodeInstanceFailedEventImpl.java",
    "status": "modified",
    "additions": 44,
    "deletions": 27,
    "changes": 71,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/core/event/ProcessNodeInstanceFailedEventImpl.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/core/event/ProcessNodeInstanceFailedEventImpl.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/core/event/ProcessNodeInstanceFailedEventImpl.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -7,31 +7,48 @@\n \n public class ProcessNodeInstanceFailedEventImpl extends ProcessEvent implements ProcessNodeInstanceFailedEvent {\n \n-\tprivate static final long serialVersionUID = 510l;\n-\n-\tprivate NodeInstance nodeInstance;\n-\tprivate Exception exception;\n-\n-\tpublic ProcessNodeInstanceFailedEventImpl(final ProcessInstance instance, NodeInstance nodeInstance,\n-\t\t\tException exception, ProcessRuntime runtime) {\n-\t\tsuper(instance, runtime);\n-\t\tthis.nodeInstance = nodeInstance;\n-\t\tthis.exception = exception;\n-\t}\n-\n-\t@Override\n-\tpublic NodeInstance getNodeInstance() {\n-\t\treturn this.nodeInstance;\n-\t}\n-\n-\t@Override\n-\tpublic Exception getException() {\n-\t\treturn exception;\n-\t}\n-\n-\tpublic String toString() {\n-\t\treturn \"==>[ProcessNodeInstanceFailed(name=\" + getProcessInstance().getProcessName() + \"; id=\"\n-\t\t\t\t+ getProcessInstance().getId() + \"; node instance=\" + getNodeInstance().getId() + \"; node name=\"\n-\t\t\t\t+ getNodeInstance().getNodeName() + \"; exception=\" + getException().getMessage() + \")]\";\n-\t}\n+    private static final long serialVersionUID = 510l;\n+\n+    private NodeInstance nodeInstance;\n+\n+    private String errorId;\n+\n+    private String errorMessage;\n+\n+    private Exception exception;\n+\n+    public ProcessNodeInstanceFailedEventImpl(final ProcessInstance instance, NodeInstance nodeInstance,\n+            String errorId, String errorMessage, Exception exception, ProcessRuntime runtime) {\n+        super(instance, runtime);\n+        this.nodeInstance = nodeInstance;\n+        this.errorId = errorId;\n+        this.errorMessage = errorMessage;\n+        this.exception = exception;\n+    }\n+\n+    @Override\n+    public NodeInstance getNodeInstance() {\n+        return this.nodeInstance;\n+    }\n+\n+    @Override\n+    public String getErrorId() {\n+        return errorId;\n+    }\n+\n+    @Override\n+    public String getErrorMessage() {\n+        return errorMessage;\n+    }\n+\n+    @Override\n+    public Exception getException() {\n+        return exception;\n+    }\n+\n+    public String toString() {\n+        return \"==>[ProcessNodeInstanceFailed(name=\" + getProcessInstance().getProcessName() + \"; id=\"\n+                + getProcessInstance().getId() + \"; node instance=\" + getNodeInstance().getId() + \"; node name=\"\n+                + getNodeInstance().getNodeName() + \"; exception=\" + getException().getMessage() + \")]\";\n+    }\n }"
  },
  {
    "sha": "1a0232236329eb9b0d55f1ab3d5aedf6d3bc9c4e",
    "filename": "workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/instance/ProcessInstance.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/instance/ProcessInstance.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/instance/ProcessInstance.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/instance/ProcessInstance.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -34,7 +34,7 @@\n \n     void setState(int state, String outcome, Object faultData);\n \n-    void setErrorState(NodeInstance nodeInstanceInError, Exception e);\n+    String setErrorState(NodeInstance nodeInstanceInError, Exception e);\n \n     void setProcessRuntime(InternalProcessRuntime runtime);\n "
  },
  {
    "sha": "dcf32c458f8719b94dc201d208325a05569d020a",
    "filename": "workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/instance/impl/humantask/HumanTaskWorkItemImpl.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/instance/impl/humantask/HumanTaskWorkItemImpl.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/instance/impl/humantask/HumanTaskWorkItemImpl.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/base/instance/impl/humantask/HumanTaskWorkItemImpl.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -2,7 +2,6 @@\n package io.automatiko.engine.workflow.base.instance.impl.humantask;\n \n import java.util.HashSet;\n-import java.util.List;\n import java.util.Set;\n \n import org.slf4j.Logger;\n@@ -154,11 +153,11 @@ protected void enforceAuthorization(IdentityProvider identity) {\n                         \"User \" + user + \" is not authorized to access task instance with id \" + getId());\n             }\n \n-            checkAssignedOwners(user, identity.getRoles());\n+            checkAssignedOwners(user, identity);\n         }\n     }\n \n-    protected void checkAssignedOwners(String user, List<String> roles) {\n+    protected void checkAssignedOwners(String user, IdentityProvider identity) {\n         // is not in the excluded users\n         if (getExcludedUsers().contains(user)) {\n             logger.debug(\"Requesting user '{}' is excluded from the potential workers on work item {}\", user, getId());\n@@ -171,7 +170,7 @@ protected void checkAssignedOwners(String user, List<String> roles) {\n             return;\n         }\n         // check if user is in potential users or groups\n-        if (!getPotentialUsers().contains(user) && getPotentialGroups().stream().noneMatch(roles::contains)) {\n+        if (!getPotentialUsers().contains(user) && getPotentialGroups().stream().noneMatch(identity::hasRole)) {\n             throw new NotAuthorizedException(\n                     \"User \" + user + \" is not authorized to access task instance with id \" + getId());\n         }"
  },
  {
    "sha": "ba8b89b17bf57da4b10239be363f463d36bef653",
    "filename": "workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/marshalling/impl/AbstractProtobufProcessInstanceMarshaller.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/marshalling/impl/AbstractProtobufProcessInstanceMarshaller.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/marshalling/impl/AbstractProtobufProcessInstanceMarshaller.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/marshalling/impl/AbstractProtobufProcessInstanceMarshaller.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -101,6 +101,12 @@\n         if (workFlow.getErrorMessage() != null) {\n             _instance.setErrorMessage(workFlow.getErrorMessage());\n         }\n+        if (workFlow.getErrorId() != null) {\n+            _instance.setErrorId(workFlow.getErrorId());\n+        }\n+        if (workFlow.getErrorDetails() != null) {\n+            _instance.setErrorDetails(workFlow.getErrorDetails());\n+        }\n         if (workFlow.getReferenceId() != null) {\n             _instance.setReferenceId(workFlow.getReferenceId());\n         }\n@@ -692,6 +698,8 @@ public ProcessInstance readProcessInstance(MarshallerReaderContext context) thro\n \n         processInstance.internalSetErrorNodeId(_instance.getErrorNodeId());\n         processInstance.internalSetErrorMessage(_instance.getErrorMessage());\n+        processInstance.internalSetErrorId(_instance.getErrorId());\n+        processInstance.internalSetErrorDetails(_instance.getErrorDetails());\n \n         processInstance.setReferenceId(_instance.getReferenceId());\n "
  },
  {
    "sha": "a8426507f06c1d2e5a28b5e2b8b6e38922f5d571",
    "filename": "workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/marshalling/impl/AutomatikoMessages.java",
    "status": "modified",
    "additions": 626,
    "deletions": 261,
    "changes": 887,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/marshalling/impl/AutomatikoMessages.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/marshalling/impl/AutomatikoMessages.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/marshalling/impl/AutomatikoMessages.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -10064,6 +10064,40 @@ public ProcessData parsePartialFrom(\n     com.google.protobuf.ByteString\n         getInitiatorBytes();\n \n+    /**\n+     * <code>optional string error_id = 31;</code>\n+     * @return Whether the errorId field is set.\n+     */\n+    boolean hasErrorId();\n+    /**\n+     * <code>optional string error_id = 31;</code>\n+     * @return The errorId.\n+     */\n+    java.lang.String getErrorId();\n+    /**\n+     * <code>optional string error_id = 31;</code>\n+     * @return The bytes for errorId.\n+     */\n+    com.google.protobuf.ByteString\n+        getErrorIdBytes();\n+\n+    /**\n+     * <code>optional string error_details = 32;</code>\n+     * @return Whether the errorDetails field is set.\n+     */\n+    boolean hasErrorDetails();\n+    /**\n+     * <code>optional string error_details = 32;</code>\n+     * @return The errorDetails.\n+     */\n+    java.lang.String getErrorDetails();\n+    /**\n+     * <code>optional string error_details = 32;</code>\n+     * @return The bytes for errorDetails.\n+     */\n+    com.google.protobuf.ByteString\n+        getErrorDetailsBytes();\n+\n     /**\n      * <code>repeated .io.automatiko.engine.workflow.marshalling.ProcessInstance.SwimlaneContextInstance swimlane_context = 6;</code>\n      */\n@@ -10286,6 +10320,8 @@ private ProcessInstance() {\n       errorMessage_ = \"\";\n       referenceId_ = \"\";\n       initiator_ = \"\";\n+      errorId_ = \"\";\n+      errorDetails_ = \"\";\n       swimlaneContext_ = java.util.Collections.emptyList();\n       nodeInstance_ = java.util.Collections.emptyList();\n       variable_ = java.util.Collections.emptyList();\n@@ -10356,36 +10392,36 @@ private ProcessInstance(\n               break;\n             }\n             case 50: {\n-              if (!((mutable_bitField0_ & 0x00200000) != 0)) {\n+              if (!((mutable_bitField0_ & 0x00800000) != 0)) {\n                 swimlaneContext_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.SwimlaneContextInstance>();\n-                mutable_bitField0_ |= 0x00200000;\n+                mutable_bitField0_ |= 0x00800000;\n               }\n               swimlaneContext_.add(\n                   input.readMessage(io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.SwimlaneContextInstance.PARSER, extensionRegistry));\n               break;\n             }\n             case 58: {\n-              if (!((mutable_bitField0_ & 0x00400000) != 0)) {\n+              if (!((mutable_bitField0_ & 0x01000000) != 0)) {\n                 nodeInstance_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.NodeInstance>();\n-                mutable_bitField0_ |= 0x00400000;\n+                mutable_bitField0_ |= 0x01000000;\n               }\n               nodeInstance_.add(\n                   input.readMessage(io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.NodeInstance.PARSER, extensionRegistry));\n               break;\n             }\n             case 66: {\n-              if (!((mutable_bitField0_ & 0x00800000) != 0)) {\n+              if (!((mutable_bitField0_ & 0x02000000) != 0)) {\n                 variable_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.Variable>();\n-                mutable_bitField0_ |= 0x00800000;\n+                mutable_bitField0_ |= 0x02000000;\n               }\n               variable_.add(\n                   input.readMessage(io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.Variable.PARSER, extensionRegistry));\n               break;\n             }\n             case 82: {\n-              if (!((mutable_bitField0_ & 0x01000000) != 0)) {\n+              if (!((mutable_bitField0_ & 0x04000000) != 0)) {\n                 exclusiveGroup_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ExclusiveGroupInstance>();\n-                mutable_bitField0_ |= 0x01000000;\n+                mutable_bitField0_ |= 0x04000000;\n               }\n               exclusiveGroup_.add(\n                   input.readMessage(io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ExclusiveGroupInstance.PARSER, extensionRegistry));\n@@ -10405,17 +10441,17 @@ private ProcessInstance(\n             }\n             case 106: {\n               com.google.protobuf.ByteString bs = input.readBytes();\n-              if (!((mutable_bitField0_ & 0x02000000) != 0)) {\n+              if (!((mutable_bitField0_ & 0x08000000) != 0)) {\n                 completedNodeIds_ = new com.google.protobuf.LazyStringArrayList();\n-                mutable_bitField0_ |= 0x02000000;\n+                mutable_bitField0_ |= 0x08000000;\n               }\n               completedNodeIds_.add(bs);\n               break;\n             }\n             case 114: {\n-              if (!((mutable_bitField0_ & 0x04000000) != 0)) {\n+              if (!((mutable_bitField0_ & 0x10000000) != 0)) {\n                 iterationLevels_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.IterationLevel>();\n-                mutable_bitField0_ |= 0x04000000;\n+                mutable_bitField0_ |= 0x10000000;\n               }\n               iterationLevels_.add(\n                   input.readMessage(io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.IterationLevel.PARSER, extensionRegistry));\n@@ -10496,18 +10532,18 @@ private ProcessInstance(\n               break;\n             }\n             case 226: {\n-              if (!((mutable_bitField0_ & 0x08000000) != 0)) {\n+              if (!((mutable_bitField0_ & 0x20000000) != 0)) {\n                 children_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ProcessInstanchChildren>();\n-                mutable_bitField0_ |= 0x08000000;\n+                mutable_bitField0_ |= 0x20000000;\n               }\n               children_.add(\n                   input.readMessage(io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ProcessInstanchChildren.PARSER, extensionRegistry));\n               break;\n             }\n             case 234: {\n-              if (!((mutable_bitField0_ & 0x10000000) != 0)) {\n+              if (!((mutable_bitField0_ & 0x40000000) != 0)) {\n                 tags_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.Tag>();\n-                mutable_bitField0_ |= 0x10000000;\n+                mutable_bitField0_ |= 0x40000000;\n               }\n               tags_.add(\n                   input.readMessage(io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.Tag.PARSER, extensionRegistry));\n@@ -10519,6 +10555,18 @@ private ProcessInstance(\n               initiator_ = bs;\n               break;\n             }\n+            case 250: {\n+              com.google.protobuf.ByteString bs = input.readBytes();\n+              bitField0_ |= 0x00200000;\n+              errorId_ = bs;\n+              break;\n+            }\n+            case 258: {\n+              com.google.protobuf.ByteString bs = input.readBytes();\n+              bitField0_ |= 0x00400000;\n+              errorDetails_ = bs;\n+              break;\n+            }\n             default: {\n               if (!parseUnknownField(\n                   input, unknownFields, extensionRegistry, tag)) {\n@@ -10534,28 +10582,28 @@ private ProcessInstance(\n         throw new com.google.protobuf.InvalidProtocolBufferException(\n             e).setUnfinishedMessage(this);\n       } finally {\n-        if (((mutable_bitField0_ & 0x00200000) != 0)) {\n+        if (((mutable_bitField0_ & 0x00800000) != 0)) {\n           swimlaneContext_ = java.util.Collections.unmodifiableList(swimlaneContext_);\n         }\n-        if (((mutable_bitField0_ & 0x00400000) != 0)) {\n+        if (((mutable_bitField0_ & 0x01000000) != 0)) {\n           nodeInstance_ = java.util.Collections.unmodifiableList(nodeInstance_);\n         }\n-        if (((mutable_bitField0_ & 0x00800000) != 0)) {\n+        if (((mutable_bitField0_ & 0x02000000) != 0)) {\n           variable_ = java.util.Collections.unmodifiableList(variable_);\n         }\n-        if (((mutable_bitField0_ & 0x01000000) != 0)) {\n+        if (((mutable_bitField0_ & 0x04000000) != 0)) {\n           exclusiveGroup_ = java.util.Collections.unmodifiableList(exclusiveGroup_);\n         }\n-        if (((mutable_bitField0_ & 0x02000000) != 0)) {\n+        if (((mutable_bitField0_ & 0x08000000) != 0)) {\n           completedNodeIds_ = completedNodeIds_.getUnmodifiableView();\n         }\n-        if (((mutable_bitField0_ & 0x04000000) != 0)) {\n+        if (((mutable_bitField0_ & 0x10000000) != 0)) {\n           iterationLevels_ = java.util.Collections.unmodifiableList(iterationLevels_);\n         }\n-        if (((mutable_bitField0_ & 0x08000000) != 0)) {\n+        if (((mutable_bitField0_ & 0x20000000) != 0)) {\n           children_ = java.util.Collections.unmodifiableList(children_);\n         }\n-        if (((mutable_bitField0_ & 0x10000000) != 0)) {\n+        if (((mutable_bitField0_ & 0x40000000) != 0)) {\n           tags_ = java.util.Collections.unmodifiableList(tags_);\n         }\n         this.unknownFields = unknownFields.build();\n@@ -32957,6 +33005,102 @@ public boolean hasInitiator() {\n       }\n     }\n \n+    public static final int ERROR_ID_FIELD_NUMBER = 31;\n+    private volatile java.lang.Object errorId_;\n+    /**\n+     * <code>optional string error_id = 31;</code>\n+     * @return Whether the errorId field is set.\n+     */\n+    @java.lang.Override\n+    public boolean hasErrorId() {\n+      return ((bitField0_ & 0x00200000) != 0);\n+    }\n+    /**\n+     * <code>optional string error_id = 31;</code>\n+     * @return The errorId.\n+     */\n+    @java.lang.Override\n+    public java.lang.String getErrorId() {\n+      java.lang.Object ref = errorId_;\n+      if (ref instanceof java.lang.String) {\n+        return (java.lang.String) ref;\n+      } else {\n+        com.google.protobuf.ByteString bs = \n+            (com.google.protobuf.ByteString) ref;\n+        java.lang.String s = bs.toStringUtf8();\n+        if (bs.isValidUtf8()) {\n+          errorId_ = s;\n+        }\n+        return s;\n+      }\n+    }\n+    /**\n+     * <code>optional string error_id = 31;</code>\n+     * @return The bytes for errorId.\n+     */\n+    @java.lang.Override\n+    public com.google.protobuf.ByteString\n+        getErrorIdBytes() {\n+      java.lang.Object ref = errorId_;\n+      if (ref instanceof java.lang.String) {\n+        com.google.protobuf.ByteString b = \n+            com.google.protobuf.ByteString.copyFromUtf8(\n+                (java.lang.String) ref);\n+        errorId_ = b;\n+        return b;\n+      } else {\n+        return (com.google.protobuf.ByteString) ref;\n+      }\n+    }\n+\n+    public static final int ERROR_DETAILS_FIELD_NUMBER = 32;\n+    private volatile java.lang.Object errorDetails_;\n+    /**\n+     * <code>optional string error_details = 32;</code>\n+     * @return Whether the errorDetails field is set.\n+     */\n+    @java.lang.Override\n+    public boolean hasErrorDetails() {\n+      return ((bitField0_ & 0x00400000) != 0);\n+    }\n+    /**\n+     * <code>optional string error_details = 32;</code>\n+     * @return The errorDetails.\n+     */\n+    @java.lang.Override\n+    public java.lang.String getErrorDetails() {\n+      java.lang.Object ref = errorDetails_;\n+      if (ref instanceof java.lang.String) {\n+        return (java.lang.String) ref;\n+      } else {\n+        com.google.protobuf.ByteString bs = \n+            (com.google.protobuf.ByteString) ref;\n+        java.lang.String s = bs.toStringUtf8();\n+        if (bs.isValidUtf8()) {\n+          errorDetails_ = s;\n+        }\n+        return s;\n+      }\n+    }\n+    /**\n+     * <code>optional string error_details = 32;</code>\n+     * @return The bytes for errorDetails.\n+     */\n+    @java.lang.Override\n+    public com.google.protobuf.ByteString\n+        getErrorDetailsBytes() {\n+      java.lang.Object ref = errorDetails_;\n+      if (ref instanceof java.lang.String) {\n+        com.google.protobuf.ByteString b = \n+            com.google.protobuf.ByteString.copyFromUtf8(\n+                (java.lang.String) ref);\n+        errorDetails_ = b;\n+        return b;\n+      } else {\n+        return (com.google.protobuf.ByteString) ref;\n+      }\n+    }\n+\n     public static final int SWIMLANE_CONTEXT_FIELD_NUMBER = 6;\n     private java.util.List<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.SwimlaneContextInstance> swimlaneContext_;\n     /**\n@@ -33373,6 +33517,12 @@ public void writeTo(com.google.protobuf.CodedOutputStream output)\n       if (((bitField0_ & 0x00100000) != 0)) {\n         com.google.protobuf.GeneratedMessageV3.writeString(output, 30, initiator_);\n       }\n+      if (((bitField0_ & 0x00200000) != 0)) {\n+        com.google.protobuf.GeneratedMessageV3.writeString(output, 31, errorId_);\n+      }\n+      if (((bitField0_ & 0x00400000) != 0)) {\n+        com.google.protobuf.GeneratedMessageV3.writeString(output, 32, errorDetails_);\n+      }\n       unknownFields.writeTo(output);\n     }\n \n@@ -33487,6 +33637,12 @@ public int getSerializedSize() {\n       if (((bitField0_ & 0x00100000) != 0)) {\n         size += com.google.protobuf.GeneratedMessageV3.computeStringSize(30, initiator_);\n       }\n+      if (((bitField0_ & 0x00200000) != 0)) {\n+        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(31, errorId_);\n+      }\n+      if (((bitField0_ & 0x00400000) != 0)) {\n+        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(32, errorDetails_);\n+      }\n       size += unknownFields.getSerializedSize();\n       memoizedSize = size;\n       return size;\n@@ -33607,6 +33763,16 @@ public boolean equals(final java.lang.Object obj) {\n         if (!getInitiator()\n             .equals(other.getInitiator())) return false;\n       }\n+      if (hasErrorId() != other.hasErrorId()) return false;\n+      if (hasErrorId()) {\n+        if (!getErrorId()\n+            .equals(other.getErrorId())) return false;\n+      }\n+      if (hasErrorDetails() != other.hasErrorDetails()) return false;\n+      if (hasErrorDetails()) {\n+        if (!getErrorDetails()\n+            .equals(other.getErrorDetails())) return false;\n+      }\n       if (!getSwimlaneContextList()\n           .equals(other.getSwimlaneContextList())) return false;\n       if (!getNodeInstanceList()\n@@ -33722,6 +33888,14 @@ public int hashCode() {\n         hash = (37 * hash) + INITIATOR_FIELD_NUMBER;\n         hash = (53 * hash) + getInitiator().hashCode();\n       }\n+      if (hasErrorId()) {\n+        hash = (37 * hash) + ERROR_ID_FIELD_NUMBER;\n+        hash = (53 * hash) + getErrorId().hashCode();\n+      }\n+      if (hasErrorDetails()) {\n+        hash = (37 * hash) + ERROR_DETAILS_FIELD_NUMBER;\n+        hash = (53 * hash) + getErrorDetails().hashCode();\n+      }\n       if (getSwimlaneContextCount() > 0) {\n         hash = (37 * hash) + SWIMLANE_CONTEXT_FIELD_NUMBER;\n         hash = (53 * hash) + getSwimlaneContextList().hashCode();\n@@ -33936,47 +34110,51 @@ public Builder clear() {\n         bitField0_ = (bitField0_ & ~0x00080000);\n         initiator_ = \"\";\n         bitField0_ = (bitField0_ & ~0x00100000);\n+        errorId_ = \"\";\n+        bitField0_ = (bitField0_ & ~0x00200000);\n+        errorDetails_ = \"\";\n+        bitField0_ = (bitField0_ & ~0x00400000);\n         if (swimlaneContextBuilder_ == null) {\n           swimlaneContext_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x00200000);\n+          bitField0_ = (bitField0_ & ~0x00800000);\n         } else {\n           swimlaneContextBuilder_.clear();\n         }\n         if (nodeInstanceBuilder_ == null) {\n           nodeInstance_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x00400000);\n+          bitField0_ = (bitField0_ & ~0x01000000);\n         } else {\n           nodeInstanceBuilder_.clear();\n         }\n         if (variableBuilder_ == null) {\n           variable_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x00800000);\n+          bitField0_ = (bitField0_ & ~0x02000000);\n         } else {\n           variableBuilder_.clear();\n         }\n         if (exclusiveGroupBuilder_ == null) {\n           exclusiveGroup_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x01000000);\n+          bitField0_ = (bitField0_ & ~0x04000000);\n         } else {\n           exclusiveGroupBuilder_.clear();\n         }\n         completedNodeIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;\n-        bitField0_ = (bitField0_ & ~0x02000000);\n+        bitField0_ = (bitField0_ & ~0x08000000);\n         if (iterationLevelsBuilder_ == null) {\n           iterationLevels_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x04000000);\n+          bitField0_ = (bitField0_ & ~0x10000000);\n         } else {\n           iterationLevelsBuilder_.clear();\n         }\n         if (childrenBuilder_ == null) {\n           children_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x08000000);\n+          bitField0_ = (bitField0_ & ~0x20000000);\n         } else {\n           childrenBuilder_.clear();\n         }\n         if (tagsBuilder_ == null) {\n           tags_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x10000000);\n+          bitField0_ = (bitField0_ & ~0x40000000);\n         } else {\n           tagsBuilder_.clear();\n         }\n@@ -34092,69 +34270,77 @@ public Builder clear() {\n           to_bitField0_ |= 0x00100000;\n         }\n         result.initiator_ = initiator_;\n+        if (((from_bitField0_ & 0x00200000) != 0)) {\n+          to_bitField0_ |= 0x00200000;\n+        }\n+        result.errorId_ = errorId_;\n+        if (((from_bitField0_ & 0x00400000) != 0)) {\n+          to_bitField0_ |= 0x00400000;\n+        }\n+        result.errorDetails_ = errorDetails_;\n         if (swimlaneContextBuilder_ == null) {\n-          if (((bitField0_ & 0x00200000) != 0)) {\n+          if (((bitField0_ & 0x00800000) != 0)) {\n             swimlaneContext_ = java.util.Collections.unmodifiableList(swimlaneContext_);\n-            bitField0_ = (bitField0_ & ~0x00200000);\n+            bitField0_ = (bitField0_ & ~0x00800000);\n           }\n           result.swimlaneContext_ = swimlaneContext_;\n         } else {\n           result.swimlaneContext_ = swimlaneContextBuilder_.build();\n         }\n         if (nodeInstanceBuilder_ == null) {\n-          if (((bitField0_ & 0x00400000) != 0)) {\n+          if (((bitField0_ & 0x01000000) != 0)) {\n             nodeInstance_ = java.util.Collections.unmodifiableList(nodeInstance_);\n-            bitField0_ = (bitField0_ & ~0x00400000);\n+            bitField0_ = (bitField0_ & ~0x01000000);\n           }\n           result.nodeInstance_ = nodeInstance_;\n         } else {\n           result.nodeInstance_ = nodeInstanceBuilder_.build();\n         }\n         if (variableBuilder_ == null) {\n-          if (((bitField0_ & 0x00800000) != 0)) {\n+          if (((bitField0_ & 0x02000000) != 0)) {\n             variable_ = java.util.Collections.unmodifiableList(variable_);\n-            bitField0_ = (bitField0_ & ~0x00800000);\n+            bitField0_ = (bitField0_ & ~0x02000000);\n           }\n           result.variable_ = variable_;\n         } else {\n           result.variable_ = variableBuilder_.build();\n         }\n         if (exclusiveGroupBuilder_ == null) {\n-          if (((bitField0_ & 0x01000000) != 0)) {\n+          if (((bitField0_ & 0x04000000) != 0)) {\n             exclusiveGroup_ = java.util.Collections.unmodifiableList(exclusiveGroup_);\n-            bitField0_ = (bitField0_ & ~0x01000000);\n+            bitField0_ = (bitField0_ & ~0x04000000);\n           }\n           result.exclusiveGroup_ = exclusiveGroup_;\n         } else {\n           result.exclusiveGroup_ = exclusiveGroupBuilder_.build();\n         }\n-        if (((bitField0_ & 0x02000000) != 0)) {\n+        if (((bitField0_ & 0x08000000) != 0)) {\n           completedNodeIds_ = completedNodeIds_.getUnmodifiableView();\n-          bitField0_ = (bitField0_ & ~0x02000000);\n+          bitField0_ = (bitField0_ & ~0x08000000);\n         }\n         result.completedNodeIds_ = completedNodeIds_;\n         if (iterationLevelsBuilder_ == null) {\n-          if (((bitField0_ & 0x04000000) != 0)) {\n+          if (((bitField0_ & 0x10000000) != 0)) {\n             iterationLevels_ = java.util.Collections.unmodifiableList(iterationLevels_);\n-            bitField0_ = (bitField0_ & ~0x04000000);\n+            bitField0_ = (bitField0_ & ~0x10000000);\n           }\n           result.iterationLevels_ = iterationLevels_;\n         } else {\n           result.iterationLevels_ = iterationLevelsBuilder_.build();\n         }\n         if (childrenBuilder_ == null) {\n-          if (((bitField0_ & 0x08000000) != 0)) {\n+          if (((bitField0_ & 0x20000000) != 0)) {\n             children_ = java.util.Collections.unmodifiableList(children_);\n-            bitField0_ = (bitField0_ & ~0x08000000);\n+            bitField0_ = (bitField0_ & ~0x20000000);\n           }\n           result.children_ = children_;\n         } else {\n           result.children_ = childrenBuilder_.build();\n         }\n         if (tagsBuilder_ == null) {\n-          if (((bitField0_ & 0x10000000) != 0)) {\n+          if (((bitField0_ & 0x40000000) != 0)) {\n             tags_ = java.util.Collections.unmodifiableList(tags_);\n-            bitField0_ = (bitField0_ & ~0x10000000);\n+            bitField0_ = (bitField0_ & ~0x40000000);\n           }\n           result.tags_ = tags_;\n         } else {\n@@ -34302,11 +34488,21 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n           initiator_ = other.initiator_;\n           onChanged();\n         }\n+        if (other.hasErrorId()) {\n+          bitField0_ |= 0x00200000;\n+          errorId_ = other.errorId_;\n+          onChanged();\n+        }\n+        if (other.hasErrorDetails()) {\n+          bitField0_ |= 0x00400000;\n+          errorDetails_ = other.errorDetails_;\n+          onChanged();\n+        }\n         if (swimlaneContextBuilder_ == null) {\n           if (!other.swimlaneContext_.isEmpty()) {\n             if (swimlaneContext_.isEmpty()) {\n               swimlaneContext_ = other.swimlaneContext_;\n-              bitField0_ = (bitField0_ & ~0x00200000);\n+              bitField0_ = (bitField0_ & ~0x00800000);\n             } else {\n               ensureSwimlaneContextIsMutable();\n               swimlaneContext_.addAll(other.swimlaneContext_);\n@@ -34319,7 +34515,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n               swimlaneContextBuilder_.dispose();\n               swimlaneContextBuilder_ = null;\n               swimlaneContext_ = other.swimlaneContext_;\n-              bitField0_ = (bitField0_ & ~0x00200000);\n+              bitField0_ = (bitField0_ & ~0x00800000);\n               swimlaneContextBuilder_ = \n                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?\n                    getSwimlaneContextFieldBuilder() : null;\n@@ -34332,7 +34528,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n           if (!other.nodeInstance_.isEmpty()) {\n             if (nodeInstance_.isEmpty()) {\n               nodeInstance_ = other.nodeInstance_;\n-              bitField0_ = (bitField0_ & ~0x00400000);\n+              bitField0_ = (bitField0_ & ~0x01000000);\n             } else {\n               ensureNodeInstanceIsMutable();\n               nodeInstance_.addAll(other.nodeInstance_);\n@@ -34345,7 +34541,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n               nodeInstanceBuilder_.dispose();\n               nodeInstanceBuilder_ = null;\n               nodeInstance_ = other.nodeInstance_;\n-              bitField0_ = (bitField0_ & ~0x00400000);\n+              bitField0_ = (bitField0_ & ~0x01000000);\n               nodeInstanceBuilder_ = \n                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?\n                    getNodeInstanceFieldBuilder() : null;\n@@ -34358,7 +34554,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n           if (!other.variable_.isEmpty()) {\n             if (variable_.isEmpty()) {\n               variable_ = other.variable_;\n-              bitField0_ = (bitField0_ & ~0x00800000);\n+              bitField0_ = (bitField0_ & ~0x02000000);\n             } else {\n               ensureVariableIsMutable();\n               variable_.addAll(other.variable_);\n@@ -34371,7 +34567,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n               variableBuilder_.dispose();\n               variableBuilder_ = null;\n               variable_ = other.variable_;\n-              bitField0_ = (bitField0_ & ~0x00800000);\n+              bitField0_ = (bitField0_ & ~0x02000000);\n               variableBuilder_ = \n                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?\n                    getVariableFieldBuilder() : null;\n@@ -34384,7 +34580,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n           if (!other.exclusiveGroup_.isEmpty()) {\n             if (exclusiveGroup_.isEmpty()) {\n               exclusiveGroup_ = other.exclusiveGroup_;\n-              bitField0_ = (bitField0_ & ~0x01000000);\n+              bitField0_ = (bitField0_ & ~0x04000000);\n             } else {\n               ensureExclusiveGroupIsMutable();\n               exclusiveGroup_.addAll(other.exclusiveGroup_);\n@@ -34397,7 +34593,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n               exclusiveGroupBuilder_.dispose();\n               exclusiveGroupBuilder_ = null;\n               exclusiveGroup_ = other.exclusiveGroup_;\n-              bitField0_ = (bitField0_ & ~0x01000000);\n+              bitField0_ = (bitField0_ & ~0x04000000);\n               exclusiveGroupBuilder_ = \n                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?\n                    getExclusiveGroupFieldBuilder() : null;\n@@ -34409,7 +34605,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n         if (!other.completedNodeIds_.isEmpty()) {\n           if (completedNodeIds_.isEmpty()) {\n             completedNodeIds_ = other.completedNodeIds_;\n-            bitField0_ = (bitField0_ & ~0x02000000);\n+            bitField0_ = (bitField0_ & ~0x08000000);\n           } else {\n             ensureCompletedNodeIdsIsMutable();\n             completedNodeIds_.addAll(other.completedNodeIds_);\n@@ -34420,7 +34616,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n           if (!other.iterationLevels_.isEmpty()) {\n             if (iterationLevels_.isEmpty()) {\n               iterationLevels_ = other.iterationLevels_;\n-              bitField0_ = (bitField0_ & ~0x04000000);\n+              bitField0_ = (bitField0_ & ~0x10000000);\n             } else {\n               ensureIterationLevelsIsMutable();\n               iterationLevels_.addAll(other.iterationLevels_);\n@@ -34433,7 +34629,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n               iterationLevelsBuilder_.dispose();\n               iterationLevelsBuilder_ = null;\n               iterationLevels_ = other.iterationLevels_;\n-              bitField0_ = (bitField0_ & ~0x04000000);\n+              bitField0_ = (bitField0_ & ~0x10000000);\n               iterationLevelsBuilder_ = \n                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?\n                    getIterationLevelsFieldBuilder() : null;\n@@ -34446,7 +34642,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n           if (!other.children_.isEmpty()) {\n             if (children_.isEmpty()) {\n               children_ = other.children_;\n-              bitField0_ = (bitField0_ & ~0x08000000);\n+              bitField0_ = (bitField0_ & ~0x20000000);\n             } else {\n               ensureChildrenIsMutable();\n               children_.addAll(other.children_);\n@@ -34459,7 +34655,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n               childrenBuilder_.dispose();\n               childrenBuilder_ = null;\n               children_ = other.children_;\n-              bitField0_ = (bitField0_ & ~0x08000000);\n+              bitField0_ = (bitField0_ & ~0x20000000);\n               childrenBuilder_ = \n                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?\n                    getChildrenFieldBuilder() : null;\n@@ -34472,7 +34668,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n           if (!other.tags_.isEmpty()) {\n             if (tags_.isEmpty()) {\n               tags_ = other.tags_;\n-              bitField0_ = (bitField0_ & ~0x10000000);\n+              bitField0_ = (bitField0_ & ~0x40000000);\n             } else {\n               ensureTagsIsMutable();\n               tags_.addAll(other.tags_);\n@@ -34485,7 +34681,7 @@ public Builder mergeFrom(io.automatiko.engine.workflow.marshalling.impl.Automati\n               tagsBuilder_.dispose();\n               tagsBuilder_ = null;\n               tags_ = other.tags_;\n-              bitField0_ = (bitField0_ & ~0x10000000);\n+              bitField0_ = (bitField0_ & ~0x40000000);\n               tagsBuilder_ = \n                 com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?\n                    getTagsFieldBuilder() : null;\n@@ -36018,12 +36214,180 @@ public Builder setInitiatorBytes(\n         return this;\n       }\n \n+      private java.lang.Object errorId_ = \"\";\n+      /**\n+       * <code>optional string error_id = 31;</code>\n+       * @return Whether the errorId field is set.\n+       */\n+      public boolean hasErrorId() {\n+        return ((bitField0_ & 0x00200000) != 0);\n+      }\n+      /**\n+       * <code>optional string error_id = 31;</code>\n+       * @return The errorId.\n+       */\n+      public java.lang.String getErrorId() {\n+        java.lang.Object ref = errorId_;\n+        if (!(ref instanceof java.lang.String)) {\n+          com.google.protobuf.ByteString bs =\n+              (com.google.protobuf.ByteString) ref;\n+          java.lang.String s = bs.toStringUtf8();\n+          if (bs.isValidUtf8()) {\n+            errorId_ = s;\n+          }\n+          return s;\n+        } else {\n+          return (java.lang.String) ref;\n+        }\n+      }\n+      /**\n+       * <code>optional string error_id = 31;</code>\n+       * @return The bytes for errorId.\n+       */\n+      public com.google.protobuf.ByteString\n+          getErrorIdBytes() {\n+        java.lang.Object ref = errorId_;\n+        if (ref instanceof String) {\n+          com.google.protobuf.ByteString b = \n+              com.google.protobuf.ByteString.copyFromUtf8(\n+                  (java.lang.String) ref);\n+          errorId_ = b;\n+          return b;\n+        } else {\n+          return (com.google.protobuf.ByteString) ref;\n+        }\n+      }\n+      /**\n+       * <code>optional string error_id = 31;</code>\n+       * @param value The errorId to set.\n+       * @return This builder for chaining.\n+       */\n+      public Builder setErrorId(\n+          java.lang.String value) {\n+        if (value == null) {\n+    throw new NullPointerException();\n+  }\n+  bitField0_ |= 0x00200000;\n+        errorId_ = value;\n+        onChanged();\n+        return this;\n+      }\n+      /**\n+       * <code>optional string error_id = 31;</code>\n+       * @return This builder for chaining.\n+       */\n+      public Builder clearErrorId() {\n+        bitField0_ = (bitField0_ & ~0x00200000);\n+        errorId_ = getDefaultInstance().getErrorId();\n+        onChanged();\n+        return this;\n+      }\n+      /**\n+       * <code>optional string error_id = 31;</code>\n+       * @param value The bytes for errorId to set.\n+       * @return This builder for chaining.\n+       */\n+      public Builder setErrorIdBytes(\n+          com.google.protobuf.ByteString value) {\n+        if (value == null) {\n+    throw new NullPointerException();\n+  }\n+  bitField0_ |= 0x00200000;\n+        errorId_ = value;\n+        onChanged();\n+        return this;\n+      }\n+\n+      private java.lang.Object errorDetails_ = \"\";\n+      /**\n+       * <code>optional string error_details = 32;</code>\n+       * @return Whether the errorDetails field is set.\n+       */\n+      public boolean hasErrorDetails() {\n+        return ((bitField0_ & 0x00400000) != 0);\n+      }\n+      /**\n+       * <code>optional string error_details = 32;</code>\n+       * @return The errorDetails.\n+       */\n+      public java.lang.String getErrorDetails() {\n+        java.lang.Object ref = errorDetails_;\n+        if (!(ref instanceof java.lang.String)) {\n+          com.google.protobuf.ByteString bs =\n+              (com.google.protobuf.ByteString) ref;\n+          java.lang.String s = bs.toStringUtf8();\n+          if (bs.isValidUtf8()) {\n+            errorDetails_ = s;\n+          }\n+          return s;\n+        } else {\n+          return (java.lang.String) ref;\n+        }\n+      }\n+      /**\n+       * <code>optional string error_details = 32;</code>\n+       * @return The bytes for errorDetails.\n+       */\n+      public com.google.protobuf.ByteString\n+          getErrorDetailsBytes() {\n+        java.lang.Object ref = errorDetails_;\n+        if (ref instanceof String) {\n+          com.google.protobuf.ByteString b = \n+              com.google.protobuf.ByteString.copyFromUtf8(\n+                  (java.lang.String) ref);\n+          errorDetails_ = b;\n+          return b;\n+        } else {\n+          return (com.google.protobuf.ByteString) ref;\n+        }\n+      }\n+      /**\n+       * <code>optional string error_details = 32;</code>\n+       * @param value The errorDetails to set.\n+       * @return This builder for chaining.\n+       */\n+      public Builder setErrorDetails(\n+          java.lang.String value) {\n+        if (value == null) {\n+    throw new NullPointerException();\n+  }\n+  bitField0_ |= 0x00400000;\n+        errorDetails_ = value;\n+        onChanged();\n+        return this;\n+      }\n+      /**\n+       * <code>optional string error_details = 32;</code>\n+       * @return This builder for chaining.\n+       */\n+      public Builder clearErrorDetails() {\n+        bitField0_ = (bitField0_ & ~0x00400000);\n+        errorDetails_ = getDefaultInstance().getErrorDetails();\n+        onChanged();\n+        return this;\n+      }\n+      /**\n+       * <code>optional string error_details = 32;</code>\n+       * @param value The bytes for errorDetails to set.\n+       * @return This builder for chaining.\n+       */\n+      public Builder setErrorDetailsBytes(\n+          com.google.protobuf.ByteString value) {\n+        if (value == null) {\n+    throw new NullPointerException();\n+  }\n+  bitField0_ |= 0x00400000;\n+        errorDetails_ = value;\n+        onChanged();\n+        return this;\n+      }\n+\n       private java.util.List<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.SwimlaneContextInstance> swimlaneContext_ =\n         java.util.Collections.emptyList();\n       private void ensureSwimlaneContextIsMutable() {\n-        if (!((bitField0_ & 0x00200000) != 0)) {\n+        if (!((bitField0_ & 0x00800000) != 0)) {\n           swimlaneContext_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.SwimlaneContextInstance>(swimlaneContext_);\n-          bitField0_ |= 0x00200000;\n+          bitField0_ |= 0x00800000;\n          }\n       }\n \n@@ -36173,7 +36537,7 @@ public Builder addAllSwimlaneContext(\n       public Builder clearSwimlaneContext() {\n         if (swimlaneContextBuilder_ == null) {\n           swimlaneContext_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x00200000);\n+          bitField0_ = (bitField0_ & ~0x00800000);\n           onChanged();\n         } else {\n           swimlaneContextBuilder_.clear();\n@@ -36250,7 +36614,7 @@ public Builder removeSwimlaneContext(int index) {\n           swimlaneContextBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<\n               io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.SwimlaneContextInstance, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.SwimlaneContextInstance.Builder, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.SwimlaneContextInstanceOrBuilder>(\n                   swimlaneContext_,\n-                  ((bitField0_ & 0x00200000) != 0),\n+                  ((bitField0_ & 0x00800000) != 0),\n                   getParentForChildren(),\n                   isClean());\n           swimlaneContext_ = null;\n@@ -36261,9 +36625,9 @@ public Builder removeSwimlaneContext(int index) {\n       private java.util.List<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.NodeInstance> nodeInstance_ =\n         java.util.Collections.emptyList();\n       private void ensureNodeInstanceIsMutable() {\n-        if (!((bitField0_ & 0x00400000) != 0)) {\n+        if (!((bitField0_ & 0x01000000) != 0)) {\n           nodeInstance_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.NodeInstance>(nodeInstance_);\n-          bitField0_ |= 0x00400000;\n+          bitField0_ |= 0x01000000;\n          }\n       }\n \n@@ -36413,7 +36777,7 @@ public Builder addAllNodeInstance(\n       public Builder clearNodeInstance() {\n         if (nodeInstanceBuilder_ == null) {\n           nodeInstance_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x00400000);\n+          bitField0_ = (bitField0_ & ~0x01000000);\n           onChanged();\n         } else {\n           nodeInstanceBuilder_.clear();\n@@ -36490,7 +36854,7 @@ public Builder removeNodeInstance(int index) {\n           nodeInstanceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<\n               io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.NodeInstance, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.NodeInstance.Builder, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.NodeInstanceOrBuilder>(\n                   nodeInstance_,\n-                  ((bitField0_ & 0x00400000) != 0),\n+                  ((bitField0_ & 0x01000000) != 0),\n                   getParentForChildren(),\n                   isClean());\n           nodeInstance_ = null;\n@@ -36501,9 +36865,9 @@ public Builder removeNodeInstance(int index) {\n       private java.util.List<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.Variable> variable_ =\n         java.util.Collections.emptyList();\n       private void ensureVariableIsMutable() {\n-        if (!((bitField0_ & 0x00800000) != 0)) {\n+        if (!((bitField0_ & 0x02000000) != 0)) {\n           variable_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.Variable>(variable_);\n-          bitField0_ |= 0x00800000;\n+          bitField0_ |= 0x02000000;\n          }\n       }\n \n@@ -36653,7 +37017,7 @@ public Builder addAllVariable(\n       public Builder clearVariable() {\n         if (variableBuilder_ == null) {\n           variable_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x00800000);\n+          bitField0_ = (bitField0_ & ~0x02000000);\n           onChanged();\n         } else {\n           variableBuilder_.clear();\n@@ -36730,7 +37094,7 @@ public Builder removeVariable(int index) {\n           variableBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<\n               io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.Variable, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.Variable.Builder, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.VariableOrBuilder>(\n                   variable_,\n-                  ((bitField0_ & 0x00800000) != 0),\n+                  ((bitField0_ & 0x02000000) != 0),\n                   getParentForChildren(),\n                   isClean());\n           variable_ = null;\n@@ -36741,9 +37105,9 @@ public Builder removeVariable(int index) {\n       private java.util.List<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ExclusiveGroupInstance> exclusiveGroup_ =\n         java.util.Collections.emptyList();\n       private void ensureExclusiveGroupIsMutable() {\n-        if (!((bitField0_ & 0x01000000) != 0)) {\n+        if (!((bitField0_ & 0x04000000) != 0)) {\n           exclusiveGroup_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ExclusiveGroupInstance>(exclusiveGroup_);\n-          bitField0_ |= 0x01000000;\n+          bitField0_ |= 0x04000000;\n          }\n       }\n \n@@ -36893,7 +37257,7 @@ public Builder addAllExclusiveGroup(\n       public Builder clearExclusiveGroup() {\n         if (exclusiveGroupBuilder_ == null) {\n           exclusiveGroup_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x01000000);\n+          bitField0_ = (bitField0_ & ~0x04000000);\n           onChanged();\n         } else {\n           exclusiveGroupBuilder_.clear();\n@@ -36970,7 +37334,7 @@ public Builder removeExclusiveGroup(int index) {\n           exclusiveGroupBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<\n               io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ExclusiveGroupInstance, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ExclusiveGroupInstance.Builder, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ExclusiveGroupInstanceOrBuilder>(\n                   exclusiveGroup_,\n-                  ((bitField0_ & 0x01000000) != 0),\n+                  ((bitField0_ & 0x04000000) != 0),\n                   getParentForChildren(),\n                   isClean());\n           exclusiveGroup_ = null;\n@@ -36980,9 +37344,9 @@ public Builder removeExclusiveGroup(int index) {\n \n       private com.google.protobuf.LazyStringList completedNodeIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;\n       private void ensureCompletedNodeIdsIsMutable() {\n-        if (!((bitField0_ & 0x02000000) != 0)) {\n+        if (!((bitField0_ & 0x08000000) != 0)) {\n           completedNodeIds_ = new com.google.protobuf.LazyStringArrayList(completedNodeIds_);\n-          bitField0_ |= 0x02000000;\n+          bitField0_ |= 0x08000000;\n          }\n       }\n       /**\n@@ -37067,7 +37431,7 @@ public Builder addAllCompletedNodeIds(\n        */\n       public Builder clearCompletedNodeIds() {\n         completedNodeIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;\n-        bitField0_ = (bitField0_ & ~0x02000000);\n+        bitField0_ = (bitField0_ & ~0x08000000);\n         onChanged();\n         return this;\n       }\n@@ -37090,9 +37454,9 @@ public Builder addCompletedNodeIdsBytes(\n       private java.util.List<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.IterationLevel> iterationLevels_ =\n         java.util.Collections.emptyList();\n       private void ensureIterationLevelsIsMutable() {\n-        if (!((bitField0_ & 0x04000000) != 0)) {\n+        if (!((bitField0_ & 0x10000000) != 0)) {\n           iterationLevels_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.IterationLevel>(iterationLevels_);\n-          bitField0_ |= 0x04000000;\n+          bitField0_ |= 0x10000000;\n          }\n       }\n \n@@ -37242,7 +37606,7 @@ public Builder addAllIterationLevels(\n       public Builder clearIterationLevels() {\n         if (iterationLevelsBuilder_ == null) {\n           iterationLevels_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x04000000);\n+          bitField0_ = (bitField0_ & ~0x10000000);\n           onChanged();\n         } else {\n           iterationLevelsBuilder_.clear();\n@@ -37319,7 +37683,7 @@ public Builder removeIterationLevels(int index) {\n           iterationLevelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<\n               io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.IterationLevel, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.IterationLevel.Builder, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.IterationLevelOrBuilder>(\n                   iterationLevels_,\n-                  ((bitField0_ & 0x04000000) != 0),\n+                  ((bitField0_ & 0x10000000) != 0),\n                   getParentForChildren(),\n                   isClean());\n           iterationLevels_ = null;\n@@ -37330,9 +37694,9 @@ public Builder removeIterationLevels(int index) {\n       private java.util.List<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ProcessInstanchChildren> children_ =\n         java.util.Collections.emptyList();\n       private void ensureChildrenIsMutable() {\n-        if (!((bitField0_ & 0x08000000) != 0)) {\n+        if (!((bitField0_ & 0x20000000) != 0)) {\n           children_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ProcessInstanchChildren>(children_);\n-          bitField0_ |= 0x08000000;\n+          bitField0_ |= 0x20000000;\n          }\n       }\n \n@@ -37482,7 +37846,7 @@ public Builder addAllChildren(\n       public Builder clearChildren() {\n         if (childrenBuilder_ == null) {\n           children_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x08000000);\n+          bitField0_ = (bitField0_ & ~0x20000000);\n           onChanged();\n         } else {\n           childrenBuilder_.clear();\n@@ -37559,7 +37923,7 @@ public Builder removeChildren(int index) {\n           childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<\n               io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ProcessInstanchChildren, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ProcessInstanchChildren.Builder, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.ProcessInstanchChildrenOrBuilder>(\n                   children_,\n-                  ((bitField0_ & 0x08000000) != 0),\n+                  ((bitField0_ & 0x20000000) != 0),\n                   getParentForChildren(),\n                   isClean());\n           children_ = null;\n@@ -37570,9 +37934,9 @@ public Builder removeChildren(int index) {\n       private java.util.List<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.Tag> tags_ =\n         java.util.Collections.emptyList();\n       private void ensureTagsIsMutable() {\n-        if (!((bitField0_ & 0x10000000) != 0)) {\n+        if (!((bitField0_ & 0x40000000) != 0)) {\n           tags_ = new java.util.ArrayList<io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.Tag>(tags_);\n-          bitField0_ |= 0x10000000;\n+          bitField0_ |= 0x40000000;\n          }\n       }\n \n@@ -37722,7 +38086,7 @@ public Builder addAllTags(\n       public Builder clearTags() {\n         if (tagsBuilder_ == null) {\n           tags_ = java.util.Collections.emptyList();\n-          bitField0_ = (bitField0_ & ~0x10000000);\n+          bitField0_ = (bitField0_ & ~0x40000000);\n           onChanged();\n         } else {\n           tagsBuilder_.clear();\n@@ -37799,7 +38163,7 @@ public Builder removeTags(int index) {\n           tagsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<\n               io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.Tag, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.Tag.Builder, io.automatiko.engine.workflow.marshalling.impl.AutomatikoMessages.ProcessInstance.TagOrBuilder>(\n                   tags_,\n-                  ((bitField0_ & 0x10000000) != 0),\n+                  ((bitField0_ & 0x40000000) != 0),\n                   getParentForChildren(),\n                   isClean());\n           tags_ = null;\n@@ -50016,7 +50380,7 @@ public VariableContainer parsePartialFrom(\n       \"atiko.engine.workflow.marshalling.Trigge\" +\n       \"r\\\"T\\n\\013TriggerType\\022\\010\\n\\004CRON\\020\\000\\022\\014\\n\\010INTERVAL\\020\\001\" +\n       \"\\022\\021\\n\\rPOINT_IN_TIME\\020\\002\\022\\032\\n\\026COMPOSITE_MAX_DUR\" +\n-      \"ATION\\020\\003\\\"\\024\\n\\013ProcessData*\\005\\010\\n\\020\\310\\001\\\"\\347(\\n\\017Proces\" +\n+      \"ATION\\020\\003\\\"\\024\\n\\013ProcessData*\\005\\010\\n\\020\\310\\001\\\"\\220)\\n\\017Proces\" +\n       \"sInstance\\022\\024\\n\\014process_type\\030\\001 \\001(\\t\\022\\n\\n\\002id\\030\\002 \" +\n       \"\\001(\\t\\022\\022\\n\\nprocess_id\\030\\003 \\001(\\t\\022\\r\\n\\005state\\030\\004 \\001(\\005\\022\\035\" +\n       \"\\n\\025node_instance_counter\\030\\005 \\001(\\003\\022\\023\\n\\013process\" +\n@@ -50029,175 +50393,176 @@ public VariableContainer parsePartialFrom(\n       \"_id\\030\\026 \\001(\\t\\022\\022\\n\\nstart_date\\030\\027 \\001(\\003\\022\\027\\n\\017root_pr\" +\n       \"ocess_id\\030\\030 \\001(\\t\\022\\025\\n\\rerror_node_id\\030\\031 \\001(\\t\\022\\025\\n\" +\n       \"\\rerror_message\\030\\032 \\001(\\t\\022\\024\\n\\014reference_id\\030\\033 \\001\" +\n-      \"(\\t\\022\\021\\n\\tinitiator\\030\\036 \\001(\\t\\022l\\n\\020swimlane_contex\" +\n-      \"t\\030\\006 \\003(\\0132R.io.automatiko.engine.workflow.\" +\n-      \"marshalling.ProcessInstance.SwimlaneCont\" +\n-      \"extInstance\\022^\\n\\rnode_instance\\030\\007 \\003(\\0132G.io.\" +\n-      \"automatiko.engine.workflow.marshalling.P\" +\n-      \"rocessInstance.NodeInstance\\022E\\n\\010variable\\030\" +\n-      \"\\010 \\003(\\01323.io.automatiko.engine.workflow.ma\" +\n-      \"rshalling.Variable\\022j\\n\\017exclusive_group\\030\\n \" +\n-      \"\\003(\\0132Q.io.automatiko.engine.workflow.mars\" +\n-      \"halling.ProcessInstance.ExclusiveGroupIn\" +\n-      \"stance\\022\\030\\n\\020completedNodeIds\\030\\r \\003(\\t\\022R\\n\\017iter\" +\n-      \"ationLevels\\030\\016 \\003(\\01329.io.automatiko.engine\" +\n-      \".workflow.marshalling.IterationLevel\\022d\\n\\010\" +\n-      \"children\\030\\034 \\003(\\0132R.io.automatiko.engine.wo\" +\n-      \"rkflow.marshalling.ProcessInstance.Proce\" +\n-      \"ssInstanchChildren\\022L\\n\\004tags\\030\\035 \\003(\\0132>.io.au\" +\n+      \"(\\t\\022\\021\\n\\tinitiator\\030\\036 \\001(\\t\\022\\020\\n\\010error_id\\030\\037 \\001(\\t\\022\" +\n+      \"\\025\\n\\rerror_details\\030  \\001(\\t\\022l\\n\\020swimlane_conte\" +\n+      \"xt\\030\\006 \\003(\\0132R.io.automatiko.engine.workflow\" +\n+      \".marshalling.ProcessInstance.SwimlaneCon\" +\n+      \"textInstance\\022^\\n\\rnode_instance\\030\\007 \\003(\\0132G.io\" +\n+      \".automatiko.engine.workflow.marshalling.\" +\n+      \"ProcessInstance.NodeInstance\\022E\\n\\010variable\" +\n+      \"\\030\\010 \\003(\\01323.io.automatiko.engine.workflow.m\" +\n+      \"arshalling.Variable\\022j\\n\\017exclusive_group\\030\\n\" +\n+      \" \\003(\\0132Q.io.automatiko.engine.workflow.mar\" +\n+      \"shalling.ProcessInstance.ExclusiveGroupI\" +\n+      \"nstance\\022\\030\\n\\020completedNodeIds\\030\\r \\003(\\t\\022R\\n\\017ite\" +\n+      \"rationLevels\\030\\016 \\003(\\01329.io.automatiko.engin\" +\n+      \"e.workflow.marshalling.IterationLevel\\022d\\n\" +\n+      \"\\010children\\030\\034 \\003(\\0132R.io.automatiko.engine.w\" +\n+      \"orkflow.marshalling.ProcessInstance.Proc\" +\n+      \"essInstanchChildren\\022L\\n\\004tags\\030\\035 \\003(\\0132>.io.a\" +\n+      \"utomatiko.engine.workflow.marshalling.Pr\" +\n+      \"ocessInstance.Tag\\032:\\n\\027ProcessInstanchChil\" +\n+      \"dren\\022\\022\\n\\nprocess_id\\030\\001 \\001(\\t\\022\\013\\n\\003ids\\030\\002 \\003(\\t\\032 \\n\" +\n+      \"\\003Tag\\022\\n\\n\\002id\\030\\001 \\001(\\t\\022\\r\\n\\005value\\030\\002 \\001(\\t\\032=\\n\\027Swiml\" +\n+      \"aneContextInstance\\022\\020\\n\\010swimlane\\030\\001 \\001(\\t\\022\\020\\n\\010\" +\n+      \"actor_id\\030\\002 \\001(\\t\\032\\243\\002\\n\\014NodeInstance\\022\\n\\n\\002id\\030\\001 \" +\n+      \"\\001(\\t\\022\\017\\n\\007node_id\\030\\002 \\001(\\003\\022_\\n\\007content\\030\\004 \\001(\\0132N.\" +\n+      \"io.automatiko.engine.workflow.marshallin\" +\n+      \"g.ProcessInstance.NodeInstanceContent\\022\\r\\n\" +\n+      \"\\005level\\030\\005 \\001(\\005\\022\\024\\n\\014sla_timer_id\\030\\006 \\001(\\t\\022\\024\\n\\014sl\" +\n+      \"a_due_date\\030\\007 \\001(\\003\\022\\026\\n\\016sla_compliance\\030\\010 \\001(\\005\" +\n+      \"\\022\\024\\n\\014trigger_date\\030\\t \\001(\\003\\022\\024\\n\\014retry_job_id\\030\\n\" +\n+      \" \\001(\\t\\022\\026\\n\\016retry_attempts\\030\\013 \\001(\\005\\0328\\n\\026Exclusiv\" +\n+      \"eGroupInstance\\022\\036\\n\\026group_node_instance_id\" +\n+      \"\\030\\001 \\003(\\t\\032\\206\\031\\n\\023NodeInstanceContent\\022Y\\n\\004type\\030\\001\" +\n+      \" \\001(\\0162K.io.automatiko.engine.workflow.mar\" +\n+      \"shalling.ProcessInstance.NodeInstanceTyp\" +\n+      \"e\\022l\\n\\010rule_set\\030\\002 \\001(\\0132Z.io.automatiko.engi\" +\n+      \"ne.workflow.marshalling.ProcessInstance.\" +\n+      \"NodeInstanceContent.RuleSetNode\\022p\\n\\nhuman\" +\n+      \"_task\\030\\003 \\001(\\0132\\\\.io.automatiko.engine.workf\" +\n+      \"low.marshalling.ProcessInstance.NodeInst\" +\n+      \"anceContent.HumanTaskNode\\022n\\n\\twork_item\\030\\004\" +\n+      \" \\001(\\0132[.io.automatiko.engine.workflow.mar\" +\n+      \"shalling.ProcessInstance.NodeInstanceCon\" +\n+      \"tent.WorkItemNode\\022r\\n\\013sub_process\\030\\005 \\001(\\0132]\" +\n+      \".io.automatiko.engine.workflow.marshalli\" +\n+      \"ng.ProcessInstance.NodeInstanceContent.S\" +\n+      \"ubProcessNode\\022o\\n\\tmilestone\\030\\006 \\001(\\0132\\\\.io.au\" +\n       \"tomatiko.engine.workflow.marshalling.Pro\" +\n-      \"cessInstance.Tag\\032:\\n\\027ProcessInstanchChild\" +\n-      \"ren\\022\\022\\n\\nprocess_id\\030\\001 \\001(\\t\\022\\013\\n\\003ids\\030\\002 \\003(\\t\\032 \\n\\003\" +\n-      \"Tag\\022\\n\\n\\002id\\030\\001 \\001(\\t\\022\\r\\n\\005value\\030\\002 \\001(\\t\\032=\\n\\027Swimla\" +\n-      \"neContextInstance\\022\\020\\n\\010swimlane\\030\\001 \\001(\\t\\022\\020\\n\\010a\" +\n-      \"ctor_id\\030\\002 \\001(\\t\\032\\243\\002\\n\\014NodeInstance\\022\\n\\n\\002id\\030\\001 \\001\" +\n-      \"(\\t\\022\\017\\n\\007node_id\\030\\002 \\001(\\003\\022_\\n\\007content\\030\\004 \\001(\\0132N.i\" +\n-      \"o.automatiko.engine.workflow.marshalling\" +\n-      \".ProcessInstance.NodeInstanceContent\\022\\r\\n\\005\" +\n-      \"level\\030\\005 \\001(\\005\\022\\024\\n\\014sla_timer_id\\030\\006 \\001(\\t\\022\\024\\n\\014sla\" +\n-      \"_due_date\\030\\007 \\001(\\003\\022\\026\\n\\016sla_compliance\\030\\010 \\001(\\005\\022\" +\n-      \"\\024\\n\\014trigger_date\\030\\t \\001(\\003\\022\\024\\n\\014retry_job_id\\030\\n \" +\n-      \"\\001(\\t\\022\\026\\n\\016retry_attempts\\030\\013 \\001(\\005\\0328\\n\\026Exclusive\" +\n-      \"GroupInstance\\022\\036\\n\\026group_node_instance_id\\030\" +\n-      \"\\001 \\003(\\t\\032\\206\\031\\n\\023NodeInstanceContent\\022Y\\n\\004type\\030\\001 \" +\n-      \"\\001(\\0162K.io.automatiko.engine.workflow.mars\" +\n-      \"halling.ProcessInstance.NodeInstanceType\" +\n-      \"\\022l\\n\\010rule_set\\030\\002 \\001(\\0132Z.io.automatiko.engin\" +\n-      \"e.workflow.marshalling.ProcessInstance.N\" +\n-      \"odeInstanceContent.RuleSetNode\\022p\\n\\nhuman_\" +\n-      \"task\\030\\003 \\001(\\0132\\\\.io.automatiko.engine.workfl\" +\n-      \"ow.marshalling.ProcessInstance.NodeInsta\" +\n-      \"nceContent.HumanTaskNode\\022n\\n\\twork_item\\030\\004 \" +\n-      \"\\001(\\0132[.io.automatiko.engine.workflow.mars\" +\n+      \"cessInstance.NodeInstanceContent.Milesto\" +\n+      \"neNode\\022g\\n\\005event\\030\\007 \\001(\\0132X.io.automatiko.en\" +\n+      \"gine.workflow.marshalling.ProcessInstanc\" +\n+      \"e.NodeInstanceContent.EventNode\\022g\\n\\005timer\" +\n+      \"\\030\\010 \\001(\\0132X.io.automatiko.engine.workflow.m\" +\n+      \"arshalling.ProcessInstance.NodeInstanceC\" +\n+      \"ontent.TimerNode\\022e\\n\\004join\\030\\t \\001(\\0132W.io.auto\" +\n+      \"matiko.engine.workflow.marshalling.Proce\" +\n+      \"ssInstance.NodeInstanceContent.JoinNode\\022\" +\n+      \"g\\n\\005state\\030\\n \\001(\\0132X.io.automatiko.engine.wo\" +\n+      \"rkflow.marshalling.ProcessInstance.NodeI\" +\n+      \"nstanceContent.StateNode\\022v\\n\\tcomposite\\030\\013 \" +\n+      \"\\001(\\0132c.io.automatiko.engine.workflow.mars\" +\n       \"halling.ProcessInstance.NodeInstanceCont\" +\n-      \"ent.WorkItemNode\\022r\\n\\013sub_process\\030\\005 \\001(\\0132].\" +\n-      \"io.automatiko.engine.workflow.marshallin\" +\n-      \"g.ProcessInstance.NodeInstanceContent.Su\" +\n-      \"bProcessNode\\022o\\n\\tmilestone\\030\\006 \\001(\\0132\\\\.io.aut\" +\n-      \"omatiko.engine.workflow.marshalling.Proc\" +\n-      \"essInstance.NodeInstanceContent.Mileston\" +\n-      \"eNode\\022g\\n\\005event\\030\\007 \\001(\\0132X.io.automatiko.eng\" +\n-      \"ine.workflow.marshalling.ProcessInstance\" +\n-      \".NodeInstanceContent.EventNode\\022g\\n\\005timer\\030\" +\n-      \"\\010 \\001(\\0132X.io.automatiko.engine.workflow.ma\" +\n-      \"rshalling.ProcessInstance.NodeInstanceCo\" +\n-      \"ntent.TimerNode\\022e\\n\\004join\\030\\t \\001(\\0132W.io.autom\" +\n-      \"atiko.engine.workflow.marshalling.Proces\" +\n-      \"sInstance.NodeInstanceContent.JoinNode\\022g\" +\n-      \"\\n\\005state\\030\\n \\001(\\0132X.io.automatiko.engine.wor\" +\n-      \"kflow.marshalling.ProcessInstance.NodeIn\" +\n-      \"stanceContent.StateNode\\022v\\n\\tcomposite\\030\\013 \\001\" +\n-      \"(\\0132c.io.automatiko.engine.workflow.marsh\" +\n+      \"ent.CompositeContextNode\\022l\\n\\010for_each\\030\\014 \\001\" +\n+      \"(\\0132Z.io.automatiko.engine.workflow.marsh\" +\n       \"alling.ProcessInstance.NodeInstanceConte\" +\n-      \"nt.CompositeContextNode\\022l\\n\\010for_each\\030\\014 \\001(\" +\n-      \"\\0132Z.io.automatiko.engine.workflow.marsha\" +\n+      \"nt.ForEachNode\\022r\\n\\013async_event\\030\\r \\001(\\0132].io\" +\n+      \".automatiko.engine.workflow.marshalling.\" +\n+      \"ProcessInstance.NodeInstanceContent.Asyn\" +\n+      \"cEventNode\\032\\351\\001\\n\\013RuleSetNode\\022\\031\\n\\021timer_inst\" +\n+      \"ance_id\\030\\001 \\003(\\t\\022y\\n\\010mapEntry\\030\\002 \\003(\\0132g.io.aut\" +\n+      \"omatiko.engine.workflow.marshalling.Proc\" +\n+      \"essInstance.NodeInstanceContent.RuleSetN\" +\n+      \"ode.TextMapEntry\\022\\027\\n\\017rule_flow_group\\030\\003 \\001(\" +\n+      \"\\t\\032+\\n\\014TextMapEntry\\022\\014\\n\\004name\\030\\001 \\001(\\t\\022\\r\\n\\005value\" +\n+      \"\\030\\002 \\001(\\t\\032\\274\\001\\n\\rHumanTaskNode\\022\\024\\n\\014work_item_id\" +\n+      \"\\030\\001 \\001(\\t\\022\\031\\n\\021timer_instance_id\\030\\002 \\003(\\t\\022*\\n\\\"err\" +\n+      \"or_handling_process_instance_id\\030\\003 \\001(\\t\\022N\\n\" +\n+      \"\\010workitem\\030\\004 \\001(\\0132<.io.automatiko.engine.w\" +\n+      \"orkflow.marshalling.HumanTaskWorkItem\\032\\262\\001\" +\n+      \"\\n\\014WorkItemNode\\022\\024\\n\\014work_item_id\\030\\001 \\001(\\t\\022\\031\\n\\021\" +\n+      \"timer_instance_id\\030\\002 \\003(\\t\\022*\\n\\\"error_handlin\" +\n+      \"g_process_instance_id\\030\\003 \\001(\\t\\022E\\n\\010workitem\\030\" +\n+      \"\\004 \\001(\\01323.io.automatiko.engine.workflow.ma\" +\n+      \"rshalling.WorkItem\\032g\\n\\016SubProcessNode\\022\\033\\n\\023\" +\n+      \"process_instance_id\\030\\001 \\001(\\t\\022\\031\\n\\021timer_insta\" +\n+      \"nce_id\\030\\002 \\003(\\t\\022\\035\\n\\025process_instance_name\\030\\003 \" +\n+      \"\\001(\\t\\032*\\n\\rMilestoneNode\\022\\031\\n\\021timer_instance_i\" +\n+      \"d\\030\\001 \\003(\\t\\032\\013\\n\\tEventNode\\032\\035\\n\\tTimerNode\\022\\020\\n\\010tim\" +\n+      \"er_id\\030\\001 \\001(\\t\\032\\261\\001\\n\\010JoinNode\\022t\\n\\007trigger\\030\\001 \\003(\" +\n+      \"\\0132c.io.automatiko.engine.workflow.marsha\" +\n       \"lling.ProcessInstance.NodeInstanceConten\" +\n-      \"t.ForEachNode\\022r\\n\\013async_event\\030\\r \\001(\\0132].io.\" +\n-      \"automatiko.engine.workflow.marshalling.P\" +\n-      \"rocessInstance.NodeInstanceContent.Async\" +\n-      \"EventNode\\032\\351\\001\\n\\013RuleSetNode\\022\\031\\n\\021timer_insta\" +\n-      \"nce_id\\030\\001 \\003(\\t\\022y\\n\\010mapEntry\\030\\002 \\003(\\0132g.io.auto\" +\n-      \"matiko.engine.workflow.marshalling.Proce\" +\n-      \"ssInstance.NodeInstanceContent.RuleSetNo\" +\n-      \"de.TextMapEntry\\022\\027\\n\\017rule_flow_group\\030\\003 \\001(\\t\" +\n-      \"\\032+\\n\\014TextMapEntry\\022\\014\\n\\004name\\030\\001 \\001(\\t\\022\\r\\n\\005value\\030\" +\n-      \"\\002 \\001(\\t\\032\\274\\001\\n\\rHumanTaskNode\\022\\024\\n\\014work_item_id\\030\" +\n-      \"\\001 \\001(\\t\\022\\031\\n\\021timer_instance_id\\030\\002 \\003(\\t\\022*\\n\\\"erro\" +\n-      \"r_handling_process_instance_id\\030\\003 \\001(\\t\\022N\\n\\010\" +\n-      \"workitem\\030\\004 \\001(\\0132<.io.automatiko.engine.wo\" +\n-      \"rkflow.marshalling.HumanTaskWorkItem\\032\\262\\001\\n\" +\n-      \"\\014WorkItemNode\\022\\024\\n\\014work_item_id\\030\\001 \\001(\\t\\022\\031\\n\\021t\" +\n-      \"imer_instance_id\\030\\002 \\003(\\t\\022*\\n\\\"error_handling\" +\n-      \"_process_instance_id\\030\\003 \\001(\\t\\022E\\n\\010workitem\\030\\004\" +\n-      \" \\001(\\01323.io.automatiko.engine.workflow.mar\" +\n-      \"shalling.WorkItem\\032g\\n\\016SubProcessNode\\022\\033\\n\\023p\" +\n-      \"rocess_instance_id\\030\\001 \\001(\\t\\022\\031\\n\\021timer_instan\" +\n-      \"ce_id\\030\\002 \\003(\\t\\022\\035\\n\\025process_instance_name\\030\\003 \\001\" +\n-      \"(\\t\\032*\\n\\rMilestoneNode\\022\\031\\n\\021timer_instance_id\" +\n-      \"\\030\\001 \\003(\\t\\032\\013\\n\\tEventNode\\032\\035\\n\\tTimerNode\\022\\020\\n\\010time\" +\n-      \"r_id\\030\\001 \\001(\\t\\032\\261\\001\\n\\010JoinNode\\022t\\n\\007trigger\\030\\001 \\003(\\013\" +\n-      \"2c.io.automatiko.engine.workflow.marshal\" +\n-      \"ling.ProcessInstance.NodeInstanceContent\" +\n-      \".JoinNode.JoinTrigger\\032/\\n\\013JoinTrigger\\022\\017\\n\\007\" +\n-      \"node_id\\030\\001 \\001(\\003\\022\\017\\n\\007counter\\030\\002 \\001(\\005\\032&\\n\\tStateN\" +\n-      \"ode\\022\\031\\n\\021timer_instance_id\\030\\001 \\003(\\t\\032\\230\\003\\n\\024Compo\" +\n-      \"siteContextNode\\022\\031\\n\\021timer_instance_id\\030\\002 \\003\" +\n-      \"(\\t\\022E\\n\\010variable\\030\\003 \\003(\\01323.io.automatiko.eng\" +\n-      \"ine.workflow.marshalling.Variable\\022^\\n\\rnod\" +\n-      \"e_instance\\030\\004 \\003(\\0132G.io.automatiko.engine.\" +\n-      \"workflow.marshalling.ProcessInstance.Nod\" +\n-      \"eInstance\\022j\\n\\017exclusive_group\\030\\005 \\003(\\0132Q.io.\" +\n-      \"automatiko.engine.workflow.marshalling.P\" +\n-      \"rocessInstance.ExclusiveGroupInstance\\022R\\n\" +\n-      \"\\017iterationLevels\\030\\006 \\003(\\01329.io.automatiko.e\" +\n-      \"ngine.workflow.marshalling.IterationLeve\" +\n-      \"l\\032\\244\\002\\n\\013ForEachNode\\022^\\n\\rnode_instance\\030\\001 \\003(\\013\" +\n-      \"2G.io.automatiko.engine.workflow.marshal\" +\n-      \"ling.ProcessInstance.NodeInstance\\022E\\n\\010var\" +\n-      \"iable\\030\\002 \\003(\\01323.io.automatiko.engine.workf\" +\n-      \"low.marshalling.Variable\\022R\\n\\017iterationLev\" +\n-      \"els\\030\\003 \\003(\\01329.io.automatiko.engine.workflo\" +\n-      \"w.marshalling.IterationLevel\\022\\032\\n\\022sequenti\" +\n-      \"al_counter\\030\\004 \\001(\\005\\032$\\n\\016AsyncEventNode\\022\\022\\n\\nev\" +\n-      \"ent_type\\030\\001 \\001(\\t\\\"\\276\\002\\n\\020NodeInstanceType\\022\\021\\n\\rR\" +\n-      \"ULE_SET_NODE\\020\\000\\022\\023\\n\\017HUMAN_TASK_NODE\\020\\001\\022\\022\\n\\016W\" +\n-      \"ORK_ITEM_NODE\\020\\002\\022\\023\\n\\017SUBPROCESS_NODE\\020\\003\\022\\022\\n\\016\" +\n-      \"MILESTONE_NODE\\020\\004\\022\\016\\n\\nEVENT_NODE\\020\\005\\022\\016\\n\\nTIME\" +\n-      \"R_NODE\\020\\006\\022\\r\\n\\tJOIN_NODE\\020\\007\\022\\016\\n\\nSTATE_NODE\\020\\010\\022\" +\n-      \"\\032\\n\\026COMPOSITE_CONTEXT_NODE\\020\\t\\022\\021\\n\\rFOR_EACH_\" +\n-      \"NODE\\020\\n\\022\\020\\n\\014DYNAMIC_NODE\\020\\013\\022\\031\\n\\025EVENT_SUBPRO\" +\n-      \"CESS_NODE\\020\\014\\022\\024\\n\\020ASYNC_EVENT_NODE\\020\\r\\022\\024\\n\\020SUB\" +\n-      \"_PROCESS_NODE\\020\\016\\\"R\\n\\010Variable\\022\\014\\n\\004name\\030\\001 \\001(\" +\n-      \"\\t\\022\\026\\n\\016strategy_index\\030\\002 \\001(\\005\\022\\r\\n\\005value\\030\\003 \\001(\\014\" +\n-      \"\\022\\021\\n\\tdata_type\\030\\004 \\001(\\t\\\"\\255\\002\\n\\010WorkItem\\022\\n\\n\\002id\\030\\001\" +\n-      \" \\001(\\t\\022\\034\\n\\024process_instances_id\\030\\002 \\001(\\t\\022\\014\\n\\004na\" +\n-      \"me\\030\\003 \\001(\\t\\022\\r\\n\\005state\\030\\004 \\001(\\005\\022E\\n\\010variable\\030\\005 \\003(\" +\n-      \"\\01323.io.automatiko.engine.workflow.marsha\" +\n-      \"lling.Variable\\022\\025\\n\\rdeployment_id\\030\\006 \\001(\\t\\022\\030\\n\" +\n-      \"\\020node_instance_id\\030\\007 \\001(\\t\\022\\017\\n\\007node_id\\030\\010 \\001(\\003\" +\n-      \"\\022\\020\\n\\010phase_id\\030\\t \\001(\\t\\022\\024\\n\\014phase_status\\030\\n \\001(\\t\" +\n-      \"\\022\\022\\n\\nstart_date\\030\\013 \\001(\\003\\022\\025\\n\\rcomplete_date\\030\\014 \" +\n-      \"\\001(\\003\\\"\\227\\004\\n\\021HumanTaskWorkItem\\022\\n\\n\\002id\\030\\001 \\001(\\t\\022\\034\\n\" +\n-      \"\\024process_instances_id\\030\\002 \\001(\\t\\022\\014\\n\\004name\\030\\003 \\001(\" +\n-      \"\\t\\022\\r\\n\\005state\\030\\004 \\001(\\005\\022E\\n\\010variable\\030\\005 \\003(\\01323.io.\" +\n-      \"automatiko.engine.workflow.marshalling.V\" +\n-      \"ariable\\022\\025\\n\\rdeployment_id\\030\\006 \\001(\\t\\022\\030\\n\\020node_i\" +\n-      \"nstance_id\\030\\007 \\001(\\t\\022\\017\\n\\007node_id\\030\\010 \\001(\\003\\022\\020\\n\\010pha\" +\n-      \"se_id\\030\\t \\001(\\t\\022\\024\\n\\014phase_status\\030\\n \\001(\\t\\022\\022\\n\\nsta\" +\n-      \"rt_date\\030\\013 \\001(\\003\\022\\025\\n\\rcomplete_date\\030\\014 \\001(\\003\\022\\021\\n\\t\" +\n-      \"task_name\\030\\r \\001(\\t\\022\\030\\n\\020task_description\\030\\016 \\001(\" +\n-      \"\\t\\022\\025\\n\\rtask_priority\\030\\017 \\001(\\t\\022\\024\\n\\014actual_owner\" +\n-      \"\\030\\020 \\001(\\t\\022\\021\\n\\tpot_users\\030\\021 \\003(\\t\\022\\022\\n\\npot_groups\\030\" +\n-      \"\\022 \\003(\\t\\022\\026\\n\\016excluded_users\\030\\023 \\003(\\t\\022\\023\\n\\013admin_u\" +\n-      \"sers\\030\\024 \\003(\\t\\022\\024\\n\\014admin_groups\\030\\025 \\003(\\t\\022\\033\\n\\023task\" +\n-      \"_reference_name\\030\\026 \\001(\\t\\\"\\213\\003\\n\\014ProcessTimer\\022T\" +\n-      \"\\n\\005timer\\030\\001 \\001(\\0132E.io.automatiko.engine.wor\" +\n-      \"kflow.marshalling.ProcessTimer.TimerInst\" +\n-      \"ance\\022C\\n\\007trigger\\030\\002 \\001(\\01322.io.automatiko.en\" +\n-      \"gine.workflow.marshalling.Trigger\\032\\337\\001\\n\\rTi\" +\n-      \"merInstance\\022\\n\\n\\002id\\030\\001 \\001(\\003\\022\\020\\n\\010timer_id\\030\\002 \\001(\" +\n-      \"\\t\\022\\r\\n\\005delay\\030\\003 \\001(\\003\\022\\016\\n\\006period\\030\\004 \\001(\\003\\022\\033\\n\\023proc\" +\n-      \"ess_instance_id\\030\\005 \\001(\\t\\022\\026\\n\\016activated_time\\030\" +\n-      \"\\006 \\001(\\003\\022\\026\\n\\016last_triggered\\030\\007 \\001(\\003\\022\\034\\n\\024DEPRECA\" +\n-      \"TED_sessionId\\030\\010 \\001(\\005\\022\\021\\n\\tsessionId\\030\\t \\001(\\003\\022\\023\" +\n-      \"\\n\\013repeatLimit\\030\\n \\001(\\005\\\"+\\n\\016IterationLevel\\022\\n\\n\" +\n-      \"\\002id\\030\\001 \\001(\\t\\022\\r\\n\\005level\\030\\002 \\001(\\005\\\"Z\\n\\021VariableCont\" +\n-      \"ainer\\022E\\n\\010variable\\030\\001 \\003(\\01323.io.automatiko.\" +\n-      \"engine.workflow.marshalling.Variable:\\214\\001\\n\" +\n-      \"\\020process_instance\\0226.io.automatiko.engine\" +\n-      \".workflow.marshalling.ProcessData\\030\\n \\003(\\0132\" +\n-      \":.io.automatiko.engine.workflow.marshall\" +\n-      \"ing.ProcessInstance:~\\n\\twork_item\\0226.io.au\" +\n-      \"tomatiko.engine.workflow.marshalling.Pro\" +\n-      \"cessData\\030\\013 \\003(\\01323.io.automatiko.engine.wo\" +\n-      \"rkflow.marshalling.WorkItem:H\\n\\010timer_id\\022\" +\n-      \"6.io.automatiko.engine.workflow.marshall\" +\n-      \"ing.ProcessData\\030\\r \\001(\\003:\\206\\001\\n\\rprocess_timer\\022\" +\n-      \"6.io.automatiko.engine.workflow.marshall\" +\n-      \"ing.ProcessData\\030\\014 \\003(\\01327.io.automatiko.en\" +\n-      \"gine.workflow.marshalling.ProcessTimerBD\" +\n-      \"\\n.io.automatiko.engine.workflow.marshall\" +\n-      \"ing.implB\\022AutomatikoMessages\"\n+      \"t.JoinNode.JoinTrigger\\032/\\n\\013JoinTrigger\\022\\017\\n\" +\n+      \"\\007node_id\\030\\001 \\001(\\003\\022\\017\\n\\007counter\\030\\002 \\001(\\005\\032&\\n\\tState\" +\n+      \"Node\\022\\031\\n\\021timer_instance_id\\030\\001 \\003(\\t\\032\\230\\003\\n\\024Comp\" +\n+      \"ositeContextNode\\022\\031\\n\\021timer_instance_id\\030\\002 \" +\n+      \"\\003(\\t\\022E\\n\\010variable\\030\\003 \\003(\\01323.io.automatiko.en\" +\n+      \"gine.workflow.marshalling.Variable\\022^\\n\\rno\" +\n+      \"de_instance\\030\\004 \\003(\\0132G.io.automatiko.engine\" +\n+      \".workflow.marshalling.ProcessInstance.No\" +\n+      \"deInstance\\022j\\n\\017exclusive_group\\030\\005 \\003(\\0132Q.io\" +\n+      \".automatiko.engine.workflow.marshalling.\" +\n+      \"ProcessInstance.ExclusiveGroupInstance\\022R\" +\n+      \"\\n\\017iterationLevels\\030\\006 \\003(\\01329.io.automatiko.\" +\n+      \"engine.workflow.marshalling.IterationLev\" +\n+      \"el\\032\\244\\002\\n\\013ForEachNode\\022^\\n\\rnode_instance\\030\\001 \\003(\" +\n+      \"\\0132G.io.automatiko.engine.workflow.marsha\" +\n+      \"lling.ProcessInstance.NodeInstance\\022E\\n\\010va\" +\n+      \"riable\\030\\002 \\003(\\01323.io.automatiko.engine.work\" +\n+      \"flow.marshalling.Variable\\022R\\n\\017iterationLe\" +\n+      \"vels\\030\\003 \\003(\\01329.io.automatiko.engine.workfl\" +\n+      \"ow.marshalling.IterationLevel\\022\\032\\n\\022sequent\" +\n+      \"ial_counter\\030\\004 \\001(\\005\\032$\\n\\016AsyncEventNode\\022\\022\\n\\ne\" +\n+      \"vent_type\\030\\001 \\001(\\t\\\"\\276\\002\\n\\020NodeInstanceType\\022\\021\\n\\r\" +\n+      \"RULE_SET_NODE\\020\\000\\022\\023\\n\\017HUMAN_TASK_NODE\\020\\001\\022\\022\\n\\016\" +\n+      \"WORK_ITEM_NODE\\020\\002\\022\\023\\n\\017SUBPROCESS_NODE\\020\\003\\022\\022\\n\" +\n+      \"\\016MILESTONE_NODE\\020\\004\\022\\016\\n\\nEVENT_NODE\\020\\005\\022\\016\\n\\nTIM\" +\n+      \"ER_NODE\\020\\006\\022\\r\\n\\tJOIN_NODE\\020\\007\\022\\016\\n\\nSTATE_NODE\\020\\010\" +\n+      \"\\022\\032\\n\\026COMPOSITE_CONTEXT_NODE\\020\\t\\022\\021\\n\\rFOR_EACH\" +\n+      \"_NODE\\020\\n\\022\\020\\n\\014DYNAMIC_NODE\\020\\013\\022\\031\\n\\025EVENT_SUBPR\" +\n+      \"OCESS_NODE\\020\\014\\022\\024\\n\\020ASYNC_EVENT_NODE\\020\\r\\022\\024\\n\\020SU\" +\n+      \"B_PROCESS_NODE\\020\\016\\\"R\\n\\010Variable\\022\\014\\n\\004name\\030\\001 \\001\" +\n+      \"(\\t\\022\\026\\n\\016strategy_index\\030\\002 \\001(\\005\\022\\r\\n\\005value\\030\\003 \\001(\" +\n+      \"\\014\\022\\021\\n\\tdata_type\\030\\004 \\001(\\t\\\"\\255\\002\\n\\010WorkItem\\022\\n\\n\\002id\\030\" +\n+      \"\\001 \\001(\\t\\022\\034\\n\\024process_instances_id\\030\\002 \\001(\\t\\022\\014\\n\\004n\" +\n+      \"ame\\030\\003 \\001(\\t\\022\\r\\n\\005state\\030\\004 \\001(\\005\\022E\\n\\010variable\\030\\005 \\003\" +\n+      \"(\\01323.io.automatiko.engine.workflow.marsh\" +\n+      \"alling.Variable\\022\\025\\n\\rdeployment_id\\030\\006 \\001(\\t\\022\\030\" +\n+      \"\\n\\020node_instance_id\\030\\007 \\001(\\t\\022\\017\\n\\007node_id\\030\\010 \\001(\" +\n+      \"\\003\\022\\020\\n\\010phase_id\\030\\t \\001(\\t\\022\\024\\n\\014phase_status\\030\\n \\001(\" +\n+      \"\\t\\022\\022\\n\\nstart_date\\030\\013 \\001(\\003\\022\\025\\n\\rcomplete_date\\030\\014\" +\n+      \" \\001(\\003\\\"\\227\\004\\n\\021HumanTaskWorkItem\\022\\n\\n\\002id\\030\\001 \\001(\\t\\022\\034\" +\n+      \"\\n\\024process_instances_id\\030\\002 \\001(\\t\\022\\014\\n\\004name\\030\\003 \\001\" +\n+      \"(\\t\\022\\r\\n\\005state\\030\\004 \\001(\\005\\022E\\n\\010variable\\030\\005 \\003(\\01323.io\" +\n+      \".automatiko.engine.workflow.marshalling.\" +\n+      \"Variable\\022\\025\\n\\rdeployment_id\\030\\006 \\001(\\t\\022\\030\\n\\020node_\" +\n+      \"instance_id\\030\\007 \\001(\\t\\022\\017\\n\\007node_id\\030\\010 \\001(\\003\\022\\020\\n\\010ph\" +\n+      \"ase_id\\030\\t \\001(\\t\\022\\024\\n\\014phase_status\\030\\n \\001(\\t\\022\\022\\n\\nst\" +\n+      \"art_date\\030\\013 \\001(\\003\\022\\025\\n\\rcomplete_date\\030\\014 \\001(\\003\\022\\021\\n\" +\n+      \"\\ttask_name\\030\\r \\001(\\t\\022\\030\\n\\020task_description\\030\\016 \\001\" +\n+      \"(\\t\\022\\025\\n\\rtask_priority\\030\\017 \\001(\\t\\022\\024\\n\\014actual_owne\" +\n+      \"r\\030\\020 \\001(\\t\\022\\021\\n\\tpot_users\\030\\021 \\003(\\t\\022\\022\\n\\npot_groups\" +\n+      \"\\030\\022 \\003(\\t\\022\\026\\n\\016excluded_users\\030\\023 \\003(\\t\\022\\023\\n\\013admin_\" +\n+      \"users\\030\\024 \\003(\\t\\022\\024\\n\\014admin_groups\\030\\025 \\003(\\t\\022\\033\\n\\023tas\" +\n+      \"k_reference_name\\030\\026 \\001(\\t\\\"\\213\\003\\n\\014ProcessTimer\\022\" +\n+      \"T\\n\\005timer\\030\\001 \\001(\\0132E.io.automatiko.engine.wo\" +\n+      \"rkflow.marshalling.ProcessTimer.TimerIns\" +\n+      \"tance\\022C\\n\\007trigger\\030\\002 \\001(\\01322.io.automatiko.e\" +\n+      \"ngine.workflow.marshalling.Trigger\\032\\337\\001\\n\\rT\" +\n+      \"imerInstance\\022\\n\\n\\002id\\030\\001 \\001(\\003\\022\\020\\n\\010timer_id\\030\\002 \\001\" +\n+      \"(\\t\\022\\r\\n\\005delay\\030\\003 \\001(\\003\\022\\016\\n\\006period\\030\\004 \\001(\\003\\022\\033\\n\\023pro\" +\n+      \"cess_instance_id\\030\\005 \\001(\\t\\022\\026\\n\\016activated_time\" +\n+      \"\\030\\006 \\001(\\003\\022\\026\\n\\016last_triggered\\030\\007 \\001(\\003\\022\\034\\n\\024DEPREC\" +\n+      \"ATED_sessionId\\030\\010 \\001(\\005\\022\\021\\n\\tsessionId\\030\\t \\001(\\003\\022\" +\n+      \"\\023\\n\\013repeatLimit\\030\\n \\001(\\005\\\"+\\n\\016IterationLevel\\022\\n\" +\n+      \"\\n\\002id\\030\\001 \\001(\\t\\022\\r\\n\\005level\\030\\002 \\001(\\005\\\"Z\\n\\021VariableCon\" +\n+      \"tainer\\022E\\n\\010variable\\030\\001 \\003(\\01323.io.automatiko\" +\n+      \".engine.workflow.marshalling.Variable:\\214\\001\" +\n+      \"\\n\\020process_instance\\0226.io.automatiko.engin\" +\n+      \"e.workflow.marshalling.ProcessData\\030\\n \\003(\\013\" +\n+      \"2:.io.automatiko.engine.workflow.marshal\" +\n+      \"ling.ProcessInstance:~\\n\\twork_item\\0226.io.a\" +\n+      \"utomatiko.engine.workflow.marshalling.Pr\" +\n+      \"ocessData\\030\\013 \\003(\\01323.io.automatiko.engine.w\" +\n+      \"orkflow.marshalling.WorkItem:H\\n\\010timer_id\" +\n+      \"\\0226.io.automatiko.engine.workflow.marshal\" +\n+      \"ling.ProcessData\\030\\r \\001(\\003:\\206\\001\\n\\rprocess_timer\" +\n+      \"\\0226.io.automatiko.engine.workflow.marshal\" +\n+      \"ling.ProcessData\\030\\014 \\003(\\01327.io.automatiko.e\" +\n+      \"ngine.workflow.marshalling.ProcessTimerB\" +\n+      \"D\\n.io.automatiko.engine.workflow.marshal\" +\n+      \"ling.implB\\022AutomatikoMessages\"\n     };\n     descriptor = com.google.protobuf.Descriptors.FileDescriptor\n       .internalBuildGeneratedFileFrom(descriptorData,\n@@ -50268,7 +50633,7 @@ public VariableContainer parsePartialFrom(\n     internal_static_io_automatiko_engine_workflow_marshalling_ProcessInstance_fieldAccessorTable = new\n       com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(\n         internal_static_io_automatiko_engine_workflow_marshalling_ProcessInstance_descriptor,\n-        new java.lang.String[] { \"ProcessType\", \"Id\", \"ProcessId\", \"State\", \"NodeInstanceCounter\", \"ProcessXml\", \"ParentProcessInstanceId\", \"Description\", \"SignalCompletion\", \"DeploymentId\", \"CorrelationKey\", \"SlaTimerId\", \"SlaDueDate\", \"SlaCompliance\", \"RootProcessInstanceId\", \"StartDate\", \"RootProcessId\", \"ErrorNodeId\", \"ErrorMessage\", \"ReferenceId\", \"Initiator\", \"SwimlaneContext\", \"NodeInstance\", \"Variable\", \"ExclusiveGroup\", \"CompletedNodeIds\", \"IterationLevels\", \"Children\", \"Tags\", });\n+        new java.lang.String[] { \"ProcessType\", \"Id\", \"ProcessId\", \"State\", \"NodeInstanceCounter\", \"ProcessXml\", \"ParentProcessInstanceId\", \"Description\", \"SignalCompletion\", \"DeploymentId\", \"CorrelationKey\", \"SlaTimerId\", \"SlaDueDate\", \"SlaCompliance\", \"RootProcessInstanceId\", \"StartDate\", \"RootProcessId\", \"ErrorNodeId\", \"ErrorMessage\", \"ReferenceId\", \"Initiator\", \"ErrorId\", \"ErrorDetails\", \"SwimlaneContext\", \"NodeInstance\", \"Variable\", \"ExclusiveGroup\", \"CompletedNodeIds\", \"IterationLevels\", \"Children\", \"Tags\", });\n     internal_static_io_automatiko_engine_workflow_marshalling_ProcessInstance_ProcessInstanchChildren_descriptor =\n       internal_static_io_automatiko_engine_workflow_marshalling_ProcessInstance_descriptor.getNestedTypes().get(0);\n     internal_static_io_automatiko_engine_workflow_marshalling_ProcessInstance_ProcessInstanchChildren_fieldAccessorTable = new"
  },
  {
    "sha": "a07dadfa0925febdb960ed2b445a3397c1dc36de",
    "filename": "workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/core/node/SubProcessNode.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/core/node/SubProcessNode.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/core/node/SubProcessNode.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/core/node/SubProcessNode.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -19,6 +19,7 @@\n import io.automatiko.engine.api.runtime.process.DataTransformer;\n import io.automatiko.engine.api.runtime.process.ProcessContext;\n import io.automatiko.engine.api.workflow.ProcessInstance;\n+import io.automatiko.engine.api.workflow.workitem.WorkItemExecutionError;\n import io.automatiko.engine.workflow.base.core.Context;\n import io.automatiko.engine.workflow.base.core.ContextContainer;\n import io.automatiko.engine.workflow.base.core.context.AbstractContext;\n@@ -423,6 +424,8 @@ private void handleAssignment(ProcessContext ctx, Map<String, Object> output, As\n                     action.execute(workItem, ctx);\n \n                     output.putAll(workItem.getParameters());\n+                } catch (WorkItemExecutionError e) {\n+                    throw e;\n                 } catch (Exception e) {\n                     throw new RuntimeException(\"unable to execute Assignment\", e);\n                 }"
  },
  {
    "sha": "34ee6851c137700d8fb60027d437f82059e525b9",
    "filename": "workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/impl/NodeInstanceImpl.java",
    "status": "modified",
    "additions": 16,
    "deletions": 6,
    "changes": 22,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/impl/NodeInstanceImpl.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/impl/NodeInstanceImpl.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/impl/NodeInstanceImpl.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -259,9 +259,10 @@ public final void trigger(NodeInstance from, String type) {\n         try {\n             internalTrigger(from, type);\n         } catch (Exception e) {\n-            captureError(e);\n+            String errorId = captureError(e);\n             internalChangeState(NodeInstanceState.Failed);\n-            runtime.getProcessEventSupport().fireAfterNodeInstanceFailed(getProcessInstance(), this, e, runtime);\n+            runtime.getProcessEventSupport().fireAfterNodeInstanceFailed(getProcessInstance(), this, errorId,\n+                    getRootException(e).getMessage(), e, runtime);\n             // stop after capturing error\n             return;\n         }\n@@ -270,8 +271,8 @@ public final void trigger(NodeInstance from, String type) {\n         }\n     }\n \n-    protected void captureError(Exception e) {\n-        getProcessInstance().setErrorState(this, e);\n+    protected String captureError(Exception e) {\n+        return getProcessInstance().setErrorState(this, e);\n     }\n \n     public abstract void internalTrigger(NodeInstance from, String type);\n@@ -535,9 +536,10 @@ public void retry() {\n                 runtime.getProcessEventSupport().fireAfterNodeLeft(this, runtime);\n             }\n         } catch (Exception e) {\n-            captureError(e);\n+            String errorId = captureError(e);\n             internalChangeState(NodeInstanceState.Failed);\n-            runtime.getProcessEventSupport().fireAfterNodeInstanceFailed(getProcessInstance(), this, e, runtime);\n+            runtime.getProcessEventSupport().fireAfterNodeInstanceFailed(getProcessInstance(), this, errorId,\n+                    getRootException(e).getMessage(), e, runtime);\n             // stop after capturing error\n             return;\n         }\n@@ -717,4 +719,12 @@ protected void internalChangeState(NodeInstanceState newState) {\n         ((WorkflowProcessInstanceImpl) getProcessInstance()).broadcaseNodeInstanceStateChange(this);\n     }\n \n+    protected Throwable getRootException(Throwable exception) {\n+        Throwable rootException = exception;\n+        while (rootException.getCause() != null) {\n+            rootException = rootException.getCause();\n+        }\n+        return rootException;\n+    }\n+\n }"
  },
  {
    "sha": "e58a5826b58fcc9d3b5d4ccb588efe98f9f0cb1e",
    "filename": "workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/impl/WorkflowProcessInstanceImpl.java",
    "status": "modified",
    "additions": 34,
    "deletions": 3,
    "changes": 37,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/impl/WorkflowProcessInstanceImpl.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/impl/WorkflowProcessInstanceImpl.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/impl/WorkflowProcessInstanceImpl.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -15,6 +15,8 @@\n import static io.automatiko.engine.workflow.process.executable.core.Metadata.UNIQUE_ID;\n import static io.automatiko.engine.workflow.process.instance.impl.DummyEventListener.EMPTY_EVENT_LISTENER;\n \n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n@@ -56,6 +58,7 @@\n import io.automatiko.engine.api.workflow.flexible.AdHocFragment;\n import io.automatiko.engine.api.workflow.flexible.ItemDescription;\n import io.automatiko.engine.api.workflow.flexible.Milestone;\n+import io.automatiko.engine.api.workflow.workitem.WorkItemExecutionError;\n import io.automatiko.engine.services.correlation.CorrelationKey;\n import io.automatiko.engine.services.time.TimerInstance;\n import io.automatiko.engine.workflow.base.core.ContextContainer;\n@@ -130,7 +133,9 @@\n     private Date endDate;\n \n     private String nodeIdInError;\n+    private String errorId;\n     private String errorMessage;\n+    private String errorDetails;\n \n     private int slaCompliance = SLA_NA;\n     private Date slaDueDate;\n@@ -1103,6 +1108,14 @@ public String getErrorMessage() {\n         return errorMessage;\n     }\n \n+    public String getErrorId() {\n+        return errorId;\n+    }\n+\n+    public String getErrorDetails() {\n+        return errorDetails;\n+    }\n+\n     @Override\n     public void setReferenceId(String referenceId) {\n         this.referenceId = referenceId;\n@@ -1135,18 +1148,28 @@ private boolean isVariableExpression(String eventType) {\n     }\n \n     @Override\n-    public void setErrorState(NodeInstance nodeInstanceInError, Exception e) {\n+    public String setErrorState(NodeInstance nodeInstanceInError, Exception e) {\n         String errorId = UUID.randomUUID().toString();\n         this.nodeIdInError = nodeInstanceInError.getNodeDefinitionId();\n         Throwable rootException = getRootException(e);\n-        this.errorMessage = errorId + \" - \" + rootException.getClass().getCanonicalName() + \" - \"\n-                + rootException.getMessage();\n+        this.errorMessage = rootException.getMessage();\n+        if (e instanceof WorkItemExecutionError) {\n+            this.errorDetails = ((WorkItemExecutionError) e).getErrorDetails();\n+        } else {\n+            StringWriter sw = new StringWriter();\n+            PrintWriter pw = new PrintWriter(sw);\n+            e.printStackTrace(pw);\n+            this.errorDetails = sw.toString();\n+        }\n+\n         setState(STATE_ERROR);\n         logger.error(\"Unexpected error (id {}) while executing node {} in process instance {}\", errorId,\n                 nodeInstanceInError.getNode().getName(), this.getId(), e);\n         // remove node instance that caused an error\n         ((io.automatiko.engine.workflow.process.instance.NodeInstanceContainer) nodeInstanceInError\n                 .getNodeInstanceContainer()).removeNodeInstance(nodeInstanceInError);\n+\n+        return errorId;\n     }\n \n     public void internalSetErrorNodeId(String errorNodeId) {\n@@ -1157,6 +1180,14 @@ public void internalSetErrorMessage(String errorMessage) {\n         this.errorMessage = errorMessage;\n     }\n \n+    public void internalSetErrorId(String errorId) {\n+        this.errorId = errorId;\n+    }\n+\n+    public void internalSetErrorDetails(String errorDetails) {\n+        this.errorDetails = errorDetails;\n+    }\n+\n     @Override\n     public Collection<AdHocFragment> adHocFragments() {\n         return Stream.of(getNodeContainer().getNodes())"
  },
  {
    "sha": "f9df596146c40378ac9f746a96d538cd9f53e073",
    "filename": "workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/node/ActionNodeInstance.java",
    "status": "modified",
    "additions": 9,
    "deletions": 3,
    "changes": 12,
    "blob_url": "https://github.com/automatiko-io/automatiko-engine/blob/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/node/ActionNodeInstance.java",
    "raw_url": "https://github.com/automatiko-io/automatiko-engine/raw/22196a1acf637d3a477dac28a20e5b521d5f4213/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/node/ActionNodeInstance.java",
    "contents_url": "https://api.github.com/repos/automatiko-io/automatiko-engine/contents/workflow/automatiko-workflow-core/src/main/java/io/automatiko/engine/workflow/process/instance/node/ActionNodeInstance.java?ref=22196a1acf637d3a477dac28a20e5b521d5f4213",
    "patch": "@@ -2,8 +2,9 @@\n package io.automatiko.engine.workflow.process.instance.node;\n \n import java.util.Date;\n+import java.util.HashMap;\n import java.util.List;\n-import java.util.stream.Collectors;\n+import java.util.Map;\n \n import io.automatiko.engine.api.runtime.process.DataTransformer;\n import io.automatiko.engine.api.runtime.process.NodeInstance;\n@@ -68,8 +69,13 @@ public void setOutputVariable(Object variable) {\n                         DataTransformer transformer = DataTransformerRegistry.get().find(transformation.getLanguage());\n                         if (transformer != null) {\n                             final Object currentValue = variable;\n-                            variable = transformer.transform(transformation.getCompiledExpression(),\n-                                    output.getSources().stream().collect(Collectors.toMap(s -> s, v -> currentValue)));\n+                            Map<String, Object> dataSet = new HashMap<String, Object>();\n+\n+                            for (String source : output.getSources()) {\n+                                dataSet.put(source, currentValue);\n+                            }\n+\n+                            variable = transformer.transform(transformation.getCompiledExpression(), dataSet);\n                         }\n                     }\n "
  }
]
