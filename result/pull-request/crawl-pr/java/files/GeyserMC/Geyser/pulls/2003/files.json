[
  {
    "sha": "0d879c4016cab2caa3ce2ad1ebb268ba87fd2c84",
    "filename": "connector/src/main/java/org/geysermc/connector/configuration/GeyserConfiguration.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/GeyserMC/Geyser/blob/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/java/org/geysermc/connector/configuration/GeyserConfiguration.java",
    "raw_url": "https://github.com/GeyserMC/Geyser/raw/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/java/org/geysermc/connector/configuration/GeyserConfiguration.java",
    "contents_url": "https://api.github.com/repos/GeyserMC/Geyser/contents/connector/src/main/java/org/geysermc/connector/configuration/GeyserConfiguration.java?ref=b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87",
    "patch": "@@ -81,6 +81,8 @@\n \n     Path getFloodgateKeyPath();\n \n+    boolean isAddNonBedrockItems();\n+\n     boolean isAboveBedrockNetherBuilding();\n \n     boolean isCacheChunks();"
  },
  {
    "sha": "cdc0ad239c9e8ab3398d7388def080ddc2884188",
    "filename": "connector/src/main/java/org/geysermc/connector/configuration/GeyserJacksonConfiguration.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/GeyserMC/Geyser/blob/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/java/org/geysermc/connector/configuration/GeyserJacksonConfiguration.java",
    "raw_url": "https://github.com/GeyserMC/Geyser/raw/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/java/org/geysermc/connector/configuration/GeyserJacksonConfiguration.java",
    "contents_url": "https://api.github.com/repos/GeyserMC/Geyser/contents/connector/src/main/java/org/geysermc/connector/configuration/GeyserJacksonConfiguration.java?ref=b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87",
    "patch": "@@ -115,6 +115,9 @@\n     @JsonProperty(\"allow-custom-skulls\")\n     private boolean allowCustomSkulls = true;\n \n+    @JsonProperty(\"add-non-bedrock-items\")\n+    private boolean addNonBedrockItems = true;\n+\n     @JsonProperty(\"above-bedrock-nether-building\")\n     private boolean aboveBedrockNetherBuilding = false;\n "
  },
  {
    "sha": "ce2c769b05fb41c3d26dd5fc9367f8e25773625f",
    "filename": "connector/src/main/java/org/geysermc/connector/network/UpstreamPacketHandler.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/GeyserMC/Geyser/blob/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/java/org/geysermc/connector/network/UpstreamPacketHandler.java",
    "raw_url": "https://github.com/GeyserMC/Geyser/raw/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/java/org/geysermc/connector/network/UpstreamPacketHandler.java",
    "contents_url": "https://api.github.com/repos/GeyserMC/Geyser/contents/connector/src/main/java/org/geysermc/connector/network/UpstreamPacketHandler.java?ref=b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87",
    "patch": "@@ -27,6 +27,7 @@\n \n import com.nukkitx.protocol.bedrock.BedrockPacket;\n import com.nukkitx.protocol.bedrock.BedrockPacketCodec;\n+import com.nukkitx.protocol.bedrock.data.ExperimentData;\n import com.nukkitx.protocol.bedrock.data.ResourcePackType;\n import com.nukkitx.protocol.bedrock.packet.*;\n import com.nukkitx.protocol.bedrock.v428.Bedrock_v428;\n@@ -36,6 +37,7 @@\n import org.geysermc.connector.network.session.GeyserSession;\n import org.geysermc.connector.network.session.cache.AdvancementsCache;\n import org.geysermc.connector.network.translators.PacketTranslatorRegistry;\n+import org.geysermc.connector.network.translators.item.ItemRegistry;\n import org.geysermc.connector.network.translators.world.block.BlockTranslator1_16_100;\n import org.geysermc.connector.network.translators.world.block.BlockTranslator1_16_210;\n import org.geysermc.connector.utils.*;\n@@ -133,6 +135,11 @@ public boolean handle(ResourcePackClientResponsePacket packet) {\n                     stackPacket.getResourcePacks().add(new ResourcePackStackPacket.Entry(header.getUuid().toString(), header.getVersionString(), \"\"));\n                 }\n \n+                if (ItemRegistry.FURNACE_MINECART_DATA != null) {\n+                    // Allow custom items to work\n+                    stackPacket.getExperiments().add(new ExperimentData(\"data_driven_items\", true));\n+                }\n+\n                 session.sendUpstreamPacket(stackPacket);\n                 break;\n "
  },
  {
    "sha": "4c3f67dcd0a06854c6d93e59a4f57cff223512a5",
    "filename": "connector/src/main/java/org/geysermc/connector/network/session/GeyserSession.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/GeyserMC/Geyser/blob/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/java/org/geysermc/connector/network/session/GeyserSession.java",
    "raw_url": "https://github.com/GeyserMC/Geyser/raw/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/java/org/geysermc/connector/network/session/GeyserSession.java",
    "contents_url": "https://api.github.com/repos/GeyserMC/Geyser/contents/connector/src/main/java/org/geysermc/connector/network/session/GeyserSession.java?ref=b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87",
    "patch": "@@ -445,6 +445,12 @@ public void connect(RemoteServer remoteServer) {\n         // Set the hardcoded shield ID to the ID we just defined in StartGamePacket\n         upstream.getSession().getHardcodedBlockingId().set(ItemRegistry.SHIELD.getBedrockId());\n \n+        if (ItemRegistry.FURNACE_MINECART_DATA != null) {\n+            ItemComponentPacket componentPacket = new ItemComponentPacket();\n+            componentPacket.getItems().add(ItemRegistry.FURNACE_MINECART_DATA);\n+            upstream.sendPacket(componentPacket);\n+        }\n+\n         ChunkUtils.sendEmptyChunks(this, playerEntity.getPosition().toInt(), 0, false);\n \n         BiomeDefinitionListPacket biomeDefinitionListPacket = new BiomeDefinitionListPacket();"
  },
  {
    "sha": "be190f6ff4bc6e1634c8ee548a4b2e19f925d0cb",
    "filename": "connector/src/main/java/org/geysermc/connector/network/translators/item/ItemRegistry.java",
    "status": "modified",
    "additions": 71,
    "deletions": 2,
    "changes": 73,
    "blob_url": "https://github.com/GeyserMC/Geyser/blob/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/java/org/geysermc/connector/network/translators/item/ItemRegistry.java",
    "raw_url": "https://github.com/GeyserMC/Geyser/raw/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/java/org/geysermc/connector/network/translators/item/ItemRegistry.java",
    "contents_url": "https://api.github.com/repos/GeyserMC/Geyser/contents/connector/src/main/java/org/geysermc/connector/network/translators/item/ItemRegistry.java?ref=b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87",
    "patch": "@@ -28,14 +28,19 @@\n import com.fasterxml.jackson.core.type.TypeReference;\n import com.fasterxml.jackson.databind.JsonNode;\n import com.github.steveice10.mc.protocol.data.game.entity.metadata.ItemStack;\n+import com.google.common.collect.ImmutableSet;\n import com.nukkitx.nbt.NbtMap;\n+import com.nukkitx.nbt.NbtMapBuilder;\n+import com.nukkitx.nbt.NbtType;\n import com.nukkitx.nbt.NbtUtils;\n+import com.nukkitx.protocol.bedrock.data.inventory.ComponentItemData;\n import com.nukkitx.protocol.bedrock.data.inventory.ItemData;\n import com.nukkitx.protocol.bedrock.packet.StartGamePacket;\n import it.unimi.dsi.fastutil.ints.Int2ObjectMap;\n import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;\n import it.unimi.dsi.fastutil.ints.IntArrayList;\n import it.unimi.dsi.fastutil.ints.IntList;\n+import it.unimi.dsi.fastutil.objects.ObjectOpenHashSet;\n import org.geysermc.connector.GeyserConnector;\n import org.geysermc.connector.utils.FileUtils;\n import org.geysermc.connector.utils.LanguageUtils;\n@@ -55,8 +60,7 @@\n     /**\n      * A list of all identifiers that only exist on Java. Used to prevent creative items from becoming these unintentionally.\n      */\n-    private static final List<String> JAVA_ONLY_ITEMS = Arrays.asList(\"minecraft:spectral_arrow\", \"minecraft:debug_stick\",\n-            \"minecraft:knowledge_book\", \"minecraft:tipped_arrow\", \"minecraft:furnace_minecart\");\n+    private static final Set<String> JAVA_ONLY_ITEMS;\n \n     public static final ItemData[] CREATIVE_ITEMS;\n \n@@ -107,6 +111,11 @@\n \n     public static int BARRIER_INDEX = 0;\n \n+    /**\n+     * Stores the properties and data of the \"custom\" furnace minecart item.\n+     */\n+    public static final ComponentItemData FURNACE_MINECART_DATA;\n+\n     public static void init() {\n         // no-op\n     }\n@@ -150,9 +159,16 @@ public static void init() {\n         }\n \n         int itemIndex = 0;\n+        int javaFurnaceMinecartId = 0;\n+        boolean usingFurnaceMinecart = GeyserConnector.getInstance().getConfig().isAddNonBedrockItems();\n         Iterator<Map.Entry<String, JsonNode>> iterator = items.fields();\n         while (iterator.hasNext()) {\n             Map.Entry<String, JsonNode> entry = iterator.next();\n+            if (usingFurnaceMinecart && entry.getKey().equals(\"minecraft:furnace_minecart\")) {\n+                javaFurnaceMinecartId = itemIndex;\n+                itemIndex++;\n+                continue;\n+            }\n             int bedrockId = entry.getValue().get(\"bedrock_id\").intValue();\n             String bedrockIdentifier = bedrockIdToIdentifier.get(bedrockId);\n             if (bedrockIdentifier == null) {\n@@ -224,6 +240,9 @@ public static void init() {\n             itemIndex++;\n         }\n \n+        itemNames.add(\"minecraft:furnace_minecart\");\n+        itemNames.add(\"minecraft:spectral_arrow\");\n+\n         if (lodestoneCompassId == 0) {\n             throw new RuntimeException(\"Lodestone compass not found in item palette!\");\n         }\n@@ -248,9 +267,59 @@ public static void init() {\n             ItemData item = getBedrockItemFromJson(itemNode);\n             creativeItems.add(ItemData.fromNet(netId++, item.getId(), item.getDamage(), item.getCount(), item.getTag()));\n         }\n+\n+        if (usingFurnaceMinecart) {\n+            // Add the furnace minecart as an item\n+            int furnaceMinecartId = ITEMS.size() + 1;\n+\n+            ITEMS.add(new StartGamePacket.ItemEntry(\"geysermc:furnace_minecart\", (short) furnaceMinecartId, true));\n+            ITEM_ENTRIES.put(javaFurnaceMinecartId, new ItemEntry(\"minecraft:furnace_minecart\", \"geysermc:furnace_minecart\", javaFurnaceMinecartId,\n+                    furnaceMinecartId, 0, false, 1));\n+            creativeItems.add(ItemData.fromNet(netId, furnaceMinecartId, (short) 0, 1, null));\n+\n+            NbtMapBuilder builder = NbtMap.builder();\n+            builder.putString(\"name\", \"geysermc:furnace_minecart\")\n+                    .putInt(\"id\", furnaceMinecartId);\n+\n+            NbtMapBuilder componentBuilder = NbtMap.builder();\n+            // Conveniently, as of 1.16.200, the furnace minecart has a texture AND translation string already.\n+            componentBuilder.putCompound(\"minecraft:icon\", NbtMap.builder().putString(\"texture\", \"minecart_furnace\").build());\n+            componentBuilder.putCompound(\"minecraft:display_name\", NbtMap.builder().putString(\"value\", \"item.minecartFurnace.name\").build());\n+\n+            // Indicate that the arm animation should play on rails\n+            List<NbtMap> useOnTag = Collections.singletonList(NbtMap.builder().putString(\"tags\", \"q.any_tag('rail')\").build());\n+            componentBuilder.putCompound(\"minecraft:entity_placer\", NbtMap.builder()\n+                    .putList(\"dispense_on\", NbtType.COMPOUND, useOnTag)\n+                    .putString(\"entity\", \"minecraft:minecart\")\n+                    .putList(\"use_on\", NbtType.COMPOUND, useOnTag)\n+            .build());\n+\n+            NbtMapBuilder itemProperties = NbtMap.builder();\n+            // We always want to allow offhand usage when we can - matches Java Edition\n+            itemProperties.putBoolean(\"allow_off_hand\", true);\n+            itemProperties.putBoolean(\"hand_equipped\", false);\n+            itemProperties.putInt(\"max_stack_size\", 1);\n+            itemProperties.putString(\"creative_group\", \"itemGroup.name.minecart\");\n+            itemProperties.putInt(\"creative_category\", 4); // 4 - \"Items\"\n+\n+            componentBuilder.putCompound(\"item_properties\", itemProperties.build());\n+            builder.putCompound(\"components\", componentBuilder.build());\n+            FURNACE_MINECART_DATA = new ComponentItemData(\"geysermc:furnace_minecart\", builder.build());\n+        } else {\n+            FURNACE_MINECART_DATA = null;\n+        }\n+\n         CREATIVE_ITEMS = creativeItems.toArray(new ItemData[0]);\n \n         ITEM_NAMES = itemNames.toArray(new String[0]);\n+\n+        Set<String> javaOnlyItems = new ObjectOpenHashSet<>();\n+        Collections.addAll(javaOnlyItems, \"minecraft:spectral_arrow\", \"minecraft:debug_stick\",\n+                \"minecraft:knowledge_book\", \"minecraft:tipped_arrow\");\n+        if (!usingFurnaceMinecart) {\n+            javaOnlyItems.add(\"minecraft:furnace_minecart\");\n+        }\n+        JAVA_ONLY_ITEMS = ImmutableSet.copyOf(javaOnlyItems);\n     }\n \n     /**"
  },
  {
    "sha": "847eded1ad9e50be6420757efe26930fd2a103a4",
    "filename": "connector/src/main/resources/config.yml",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/GeyserMC/Geyser/blob/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/resources/config.yml",
    "raw_url": "https://github.com/GeyserMC/Geyser/raw/b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87/connector/src/main/resources/config.yml",
    "contents_url": "https://api.github.com/repos/GeyserMC/Geyser/contents/connector/src/main/resources/config.yml?ref=b4b1e8d6674c65c8a9e24bbc8cf6f5e3a429ff87",
    "patch": "@@ -139,6 +139,12 @@ cache-images: 0\n # Allows custom skulls to be displayed. Keeping them enabled may cause a performance decrease on older/weaker devices.\n allow-custom-skulls: true\n \n+# Whether to add (at this time, only) the furnace minecart as a separate item in the game, which normally does not exist in Bedrock Edition.\n+# This should only need to be disabled if using a proxy that does not use the \"transfer packet\" style of server switching.\n+# If this is disabled, furnace minecart items will be mapped to hopper minecart items.\n+# This option requires a restart of Geyser in order to change its setting.\n+add-non-bedrock-items: true\n+\n # Bedrock prevents building and displaying blocks above Y127 in the Nether -\n # enabling this config option works around that by changing the Nether dimension ID\n # to the End ID. The main downside to this is that the sky will resemble that of"
  }
]
