[
  {
    "sha": "ce1f98896fead93b702ec052c685dec3793c0931",
    "filename": "tps-forvalteren-componenttest/src/test/java/no/nav/tps/forvalteren/testdatacontroller/LagreTilTPSCompTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-componenttest/src/test/java/no/nav/tps/forvalteren/testdatacontroller/LagreTilTPSCompTest.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-componenttest/src/test/java/no/nav/tps/forvalteren/testdatacontroller/LagreTilTPSCompTest.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-componenttest/src/test/java/no/nav/tps/forvalteren/testdatacontroller/LagreTilTPSCompTest.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -21,7 +21,6 @@\n import java.util.stream.Collectors;\n import javax.jms.JMSException;\n import org.junit.Before;\n-import org.junit.Ignore;\n import org.junit.Test;\n import org.mockito.ArgumentCaptor;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -89,7 +88,6 @@ public void setup() throws JMSException {\n     }\n \n     @Test\n-    @Ignore\n     @WithUserDetails(TestUserDetails.USERNAME)\n     public void shouldSendSuccesfulSkdMessagesToTPS() throws Exception {\n         mvc.perform(post(getUrl()).contentType(MediaType.APPLICATION_JSON)"
  },
  {
    "sha": "6859c30cfdbb808f0ed804aa9a2aae1a22c6b19b",
    "filename": "tps-forvalteren-domain/tps-forvalteren-domain-jpa/src/main/java/no/nav/tps/forvalteren/domain/jpa/Postadresse.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-domain/tps-forvalteren-domain-jpa/src/main/java/no/nav/tps/forvalteren/domain/jpa/Postadresse.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-domain/tps-forvalteren-domain-jpa/src/main/java/no/nav/tps/forvalteren/domain/jpa/Postadresse.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-domain/tps-forvalteren-domain-jpa/src/main/java/no/nav/tps/forvalteren/domain/jpa/Postadresse.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -41,7 +41,7 @@\n     @EqualsAndHashCode.Exclude\n     @Getter(AccessLevel.NONE)\n     @ManyToOne(fetch = FetchType.LAZY)\n-    @JoinColumn(name = \"PERSON_ID\", nullable = false)\n+    @JoinColumn(name = \"PERSON_ID\", nullable = false, insertable = false, updatable = false)\n     private Person person;\n \n     @Column(name = \"POST_LINJE_1\", length = 30)"
  },
  {
    "sha": "13e426be8069538eb8e84c031a338b0407bd9a42",
    "filename": "tps-forvalteren-domain/tps-forvalteren-domain-jpa/src/main/java/no/nav/tps/forvalteren/domain/jpa/Relasjon.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-domain/tps-forvalteren-domain-jpa/src/main/java/no/nav/tps/forvalteren/domain/jpa/Relasjon.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-domain/tps-forvalteren-domain-jpa/src/main/java/no/nav/tps/forvalteren/domain/jpa/Relasjon.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-domain/tps-forvalteren-domain-jpa/src/main/java/no/nav/tps/forvalteren/domain/jpa/Relasjon.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -38,11 +38,11 @@\n     @Column(name = \"RELASJON_ID\", nullable = false, updatable = false)\n     private Long id;\n \n-    @JoinColumn(name = \"person_id\", nullable = false)\n+    @JoinColumn(name = \"person_id\", nullable =false)\n     @ManyToOne(fetch = FetchType.EAGER)\n     private Person person;\n \n-    @JoinColumn(name = \"person_relasjon_id\", nullable = false)\n+    @JoinColumn(name = \"person_relasjon_id\", nullable = false, updatable = false)\n     @ManyToOne(fetch = FetchType.LAZY)\n     private Person personRelasjonMed;\n "
  },
  {
    "sha": "fd863affd604ac18c4ad413b6859b0a77e6898ff",
    "filename": "tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/AdresseRepository.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/AdresseRepository.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/AdresseRepository.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/AdresseRepository.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -3,6 +3,7 @@\n import java.util.Collection;\n import java.util.List;\n import java.util.Optional;\n+import java.util.Set;\n import org.springframework.data.jpa.repository.Modifying;\n import org.springframework.data.repository.CrudRepository;\n \n@@ -20,5 +21,5 @@\n     Optional<List<Adresse>> findAdresseByPersonIdIn(Collection<Long> personIds);\n \n     @Modifying\n-    int deleteByIdIn(List<Long> idents);\n+    int deleteByIdIn(Set<Long> ids);\n }"
  },
  {
    "sha": "b8c4794fa83345cefee3c3fd7b76ac1c848c1c7c",
    "filename": "tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/FullmaktRepository.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/FullmaktRepository.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/FullmaktRepository.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/FullmaktRepository.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -1,9 +1,9 @@\n package no.nav.tps.forvalteren.repository.jpa;\n \n-import no.nav.tps.forvalteren.domain.jpa.Fullmakt;\n+import java.util.Set;\n import org.springframework.data.repository.Repository;\n \n-import java.util.List;\n+import no.nav.tps.forvalteren.domain.jpa.Fullmakt;\n \n public interface FullmaktRepository extends Repository<Fullmakt, Long> {\n \n@@ -13,7 +13,7 @@\n \n     void deleteById(Long id);\n \n-    void deleteByIdIn(List<Long> ids);\n+    int deleteByIdIn(Set<Long> ids);\n \n     void deleteAll();\n }"
  },
  {
    "sha": "e0c8b4c457da486abfa8104f53e17cc4739d6465",
    "filename": "tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/PersonRepository.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/PersonRepository.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/PersonRepository.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/PersonRepository.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -2,6 +2,8 @@\n \n import java.util.Collection;\n import java.util.List;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.context.annotation.ScopedProxyMode;\n import org.springframework.data.domain.Pageable;\n import org.springframework.data.jpa.repository.Modifying;\n import org.springframework.data.jpa.repository.Query;\n@@ -10,6 +12,7 @@\n \n import no.nav.tps.forvalteren.domain.jpa.Person;\n \n+@Scope(proxyMode = ScopedProxyMode.INTERFACES)\n public interface PersonRepository extends PagingAndSortingRepository<Person, Long> {\n \n     List<Person> findAllByOrderByIdAsc();"
  },
  {
    "sha": "af22df01d1508b2a5a4bdfd68876ed476553ef84",
    "filename": "tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/PostadresseRepository.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/PostadresseRepository.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/PostadresseRepository.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/PostadresseRepository.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -1,10 +1,13 @@\n package no.nav.tps.forvalteren.repository.jpa;\n \n+import java.util.Set;\n import org.springframework.data.repository.Repository;\n \n import no.nav.tps.forvalteren.domain.jpa.Postadresse;\n \n public interface PostadresseRepository extends Repository<Postadresse, Long> {\n \n-    void deletePostadresseById(Long id);\n+    void deleteById(Long id);\n+\n+    int deleteByIdIn(Set<Long> id);\n }\n\\ No newline at end of file"
  },
  {
    "sha": "17867941396b30a09224f1e283f50e7a01a2bc22",
    "filename": "tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/RelasjonRepository.java",
    "status": "modified",
    "additions": 1,
    "deletions": 5,
    "changes": 6,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/RelasjonRepository.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/RelasjonRepository.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/RelasjonRepository.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -1,8 +1,6 @@\n package no.nav.tps.forvalteren.repository.jpa;\n \n-import java.util.Collection;\n import java.util.List;\n-import java.util.Optional;\n import java.util.Set;\n import org.springframework.data.jpa.repository.Modifying;\n import org.springframework.data.repository.CrudRepository;\n@@ -18,11 +16,9 @@\n \n     List<Relasjon> findByPersonAndRelasjonTypeNavn(Person person, String relasjonTypeNavn);\n \n-    Optional<List<Relasjon>> findByPersonRelasjonMedIdIn(Collection<Long> personIds);\n-\n     @Modifying\n     void deleteByIdIn(Set<Long> ids);\n \n     @Modifying\n-    void deleteByPersonRelasjonMedIdIn(List<Long> personIds);\n+    void deleteByPersonRelasjonMedIdIn(Set<Long> personIds);\n }"
  },
  {
    "sha": "3ab733540704b54361302b053dc1acb9f7b770ab",
    "filename": "tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/VergemaalRepository.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/VergemaalRepository.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/VergemaalRepository.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-repository/tps-forvalteren-repository-jpa/src/main/java/no/nav/tps/forvalteren/repository/jpa/VergemaalRepository.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -1,6 +1,6 @@\n package no.nav.tps.forvalteren.repository.jpa;\n \n-import java.util.List;\n+import java.util.Set;\n import org.springframework.data.repository.Repository;\n \n import no.nav.tps.forvalteren.domain.jpa.Vergemaal;\n@@ -13,7 +13,7 @@\n \n     void deleteById(Long id);\n \n-    void deleteByIdIn(List<Long> ids);\n+    int deleteByIdIn(Set<Long> ids);\n \n     void deleteAll();\n }"
  },
  {
    "sha": "c4c9f282d5434fb18679bb09433a70eaeb1df003",
    "filename": "tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/config/CommandConfig.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/config/CommandConfig.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/config/CommandConfig.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/config/CommandConfig.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -256,8 +256,8 @@ SkdMeldingResolver vergemaal() {\n         return new VergemaalAarsakskode37();\n     }\n \n-    @Bean EndreKontaktopplysninger kontaktopplysninger() {\n+    @Bean\n+    EndreKontaktopplysninger kontaktopplysninger() {\n         return new EndreKontaktopplysninger();\n     }\n-\n }"
  },
  {
    "sha": "51e32124c9bc8f6cad9e65028bb907b9d0fc56b7",
    "filename": "tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeletePersonerByIdIn.java",
    "status": "modified",
    "additions": 34,
    "deletions": 6,
    "changes": 40,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeletePersonerByIdIn.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeletePersonerByIdIn.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeletePersonerByIdIn.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -2,30 +2,58 @@\n \n import static no.nav.tps.forvalteren.service.command.testdata.utils.TestdataConstants.ORACLE_MAX_IN_SET_ELEMENTS;\n \n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n+import javax.persistence.EntityManagerFactory;\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n import com.google.common.collect.Lists;\n \n-import lombok.RequiredArgsConstructor;\n+import no.nav.tps.forvalteren.domain.jpa.Person;\n import no.nav.tps.forvalteren.repository.jpa.DoedsmeldingRepository;\n import no.nav.tps.forvalteren.repository.jpa.PersonRepository;\n import no.nav.tps.forvalteren.repository.jpa.RelasjonRepository;\n \n @Service\n-@RequiredArgsConstructor\n public class DeletePersonerByIdIn {\n \n-    private final PersonRepository personRepository;\n-    private final RelasjonRepository relasjonRepository;\n-    private final DoedsmeldingRepository doedsmeldingRepository;\n+    private PersonRepository personRepository;\n+    private RelasjonRepository relasjonRepository;\n+    private DoedsmeldingRepository doedsmeldingRepository;\n+    private SessionFactory sessionFactory;\n+\n+    public DeletePersonerByIdIn(EntityManagerFactory factory, PersonRepository personRepository,\n+            RelasjonRepository relasjonRepository, DoedsmeldingRepository doedsmeldingRepository) {\n+\n+        this.sessionFactory = factory.unwrap(SessionFactory.class);\n+        this.personRepository = personRepository;\n+        this.relasjonRepository = relasjonRepository;\n+        this.doedsmeldingRepository = doedsmeldingRepository;\n+    }\n \n     public void execute(List<Long> ids) {\n \n         List<List<Long>> partitionsIds = Lists.partition(ids, ORACLE_MAX_IN_SET_ELEMENTS);\n         for (List<Long> partition : partitionsIds) {\n             doedsmeldingRepository.deleteByPersonIdIn(partition);\n-            relasjonRepository.deleteByPersonRelasjonMedIdIn(partition);\n+            relasjonRepository.deleteByPersonRelasjonMedIdIn(new HashSet<>(partition));\n             personRepository.deleteByIdIn(partition);\n         }\n     }\n+\n+    @Transactional\n+    public void delete(Set<Long> personIds) {\n+\n+        Session session = sessionFactory.openSession();\n+        session.beginTransaction();\n+\n+        personIds.forEach(id ->\n+                session.delete(session.get(Person.class, id)));\n+\n+        session.getTransaction().commit();\n+        session.close();\n+    }\n }"
  },
  {
    "sha": "f8eaee9919e2e8808ebd36b72a0c01020743de62",
    "filename": "tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeleteRelasjonerByIdIn.java",
    "status": "modified",
    "additions": 26,
    "deletions": 4,
    "changes": 30,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeleteRelasjonerByIdIn.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeleteRelasjonerByIdIn.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeleteRelasjonerByIdIn.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -2,24 +2,46 @@\n \n import static no.nav.tps.forvalteren.service.command.testdata.utils.TestdataConstants.ORACLE_MAX_IN_SET_ELEMENTS;\n \n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n+import javax.persistence.EntityManagerFactory;\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n import org.springframework.stereotype.Service;\n import com.google.common.collect.Lists;\n \n-import lombok.RequiredArgsConstructor;\n+import no.nav.tps.forvalteren.domain.jpa.Relasjon;\n import no.nav.tps.forvalteren.repository.jpa.RelasjonRepository;\n \n @Service\n-@RequiredArgsConstructor\n public class DeleteRelasjonerByIdIn {\n \n-    private final RelasjonRepository relasjonRepository;\n+    private RelasjonRepository relasjonRepository;\n+    private SessionFactory sessionFactory;\n+\n+    public DeleteRelasjonerByIdIn(EntityManagerFactory factory, RelasjonRepository relasjonRepository) {\n+        this.sessionFactory = factory.unwrap(SessionFactory.class);\n+        this.relasjonRepository = relasjonRepository;\n+    }\n \n     public void execute(List<Long> personIds) {\n \n         List<List<Long>> partitionsIds = Lists.partition(personIds, ORACLE_MAX_IN_SET_ELEMENTS);\n         for (List<Long> partition : partitionsIds) {\n-            relasjonRepository.deleteByPersonRelasjonMedIdIn(partition);\n+            relasjonRepository.deleteByPersonRelasjonMedIdIn(new HashSet<>(partition));\n         }\n     }\n+\n+    public void delete(Set<Long> relasjonIds) {\n+\n+        Session session = sessionFactory.openSession();\n+        session.beginTransaction();\n+\n+        relasjonIds.forEach(id ->\n+                session.delete(session.get(Relasjon.class, id)));\n+\n+        session.getTransaction().commit();\n+        session.close();\n+    }\n }"
  },
  {
    "sha": "5a3275db83a5a2e68a0534a7fd57d418ef86bec1",
    "filename": "tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeleteSivilstandByIdIn.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeleteSivilstandByIdIn.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeleteSivilstandByIdIn.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/DeleteSivilstandByIdIn.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -0,0 +1,49 @@\n+package no.nav.tps.forvalteren.service.command.testdata;\n+\n+import static no.nav.tps.forvalteren.service.command.testdata.utils.TestdataConstants.ORACLE_MAX_IN_SET_ELEMENTS;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import javax.persistence.EntityManagerFactory;\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import com.google.common.collect.Lists;\n+\n+import no.nav.tps.forvalteren.domain.jpa.Sivilstand;\n+import no.nav.tps.forvalteren.repository.jpa.SivilstandRepository;\n+\n+@Service\n+public class DeleteSivilstandByIdIn {\n+\n+    private SivilstandRepository sivilstandRepository;\n+    private SessionFactory sessionFactory;\n+\n+    public DeleteSivilstandByIdIn(EntityManagerFactory factory, SivilstandRepository sivilstandRepository) {\n+        this.sessionFactory = factory.unwrap(SessionFactory.class);\n+        this.sivilstandRepository = sivilstandRepository;\n+    }\n+\n+    @Transactional\n+    public void execute(List<Long> personIds) {\n+\n+        List<List<Long>> partitionsIds = Lists.partition(personIds, ORACLE_MAX_IN_SET_ELEMENTS);\n+        for (List<Long> partition : partitionsIds) {\n+            sivilstandRepository.deleteByIdIn(new HashSet<>(partition));\n+        }\n+    }\n+\n+    public void delete(Set<Long> relasjonIds) {\n+        Session session = sessionFactory.openSession();\n+        session.beginTransaction();\n+\n+        relasjonIds.forEach(id ->\n+                session.delete(session.get(Sivilstand.class, id)));\n+\n+        session.getTransaction().commit();\n+        session.close();\n+\n+    }\n+}"
  },
  {
    "sha": "c4a03ff2db6b71747aa4678e7b29e9345fa5c6e7",
    "filename": "tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/SavePersonListService.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/SavePersonListService.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/SavePersonListService.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/SavePersonListService.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -53,7 +53,7 @@ public void execute(List<Person> personer) {\n                 person.getSivilstander().forEach(sivilstand -> sivilstand.setPerson(person));\n                 utdaterteRelasjonIder = hentUtdaterteRelasjonIder.execute(person, personDb);\n                 adresseRepository.deleteAllByPerson(personDb);\n-                personDb.getPostadresse().forEach(adresse -> postadresseRepository.deletePostadresseById(adresse.getId()));\n+                personDb.getPostadresse().forEach(adresse -> postadresseRepository.deleteById(adresse.getId()));\n             }\n \n             adresseOgSpesregService.updateAdresseOgSpesregAttributes(person);"
  },
  {
    "sha": "e372e6e9f464c7daa9e91fdf6763689be5912249",
    "filename": "tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/restreq/PersonService.java",
    "status": "modified",
    "additions": 77,
    "deletions": 75,
    "changes": 152,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/restreq/PersonService.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/restreq/PersonService.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/restreq/PersonService.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -1,54 +1,49 @@\n package no.nav.tps.forvalteren.service.command.testdata.restreq;\n \n-import lombok.RequiredArgsConstructor;\n-import no.nav.tps.forvalteren.domain.jpa.Adresse;\n-import no.nav.tps.forvalteren.domain.jpa.Person;\n-import no.nav.tps.forvalteren.domain.jpa.Relasjon;\n-import no.nav.tps.forvalteren.domain.jpa.Sivilstand;\n-import no.nav.tps.forvalteren.repository.jpa.AdresseRepository;\n-import no.nav.tps.forvalteren.repository.jpa.DoedsmeldingRepository;\n-import no.nav.tps.forvalteren.repository.jpa.FullmaktRepository;\n-import no.nav.tps.forvalteren.repository.jpa.IdenthistorikkRepository;\n-import no.nav.tps.forvalteren.repository.jpa.PersonRepository;\n-import no.nav.tps.forvalteren.repository.jpa.RelasjonRepository;\n-import no.nav.tps.forvalteren.repository.jpa.SivilstandRepository;\n-import no.nav.tps.forvalteren.repository.jpa.VergemaalRepository;\n-import no.nav.tps.forvalteren.service.IdentpoolService;\n-import no.nav.tps.forvalteren.service.command.exceptions.NotFoundException;\n-import no.nav.tps.forvalteren.service.command.tps.skdmelding.TpsPersonService;\n-import org.apache.commons.lang3.StringUtils;\n-import org.springframework.data.domain.PageRequest;\n-import org.springframework.stereotype.Service;\n+import static com.google.common.collect.Lists.partition;\n+import static java.util.stream.Collectors.toSet;\n+import static no.nav.tps.forvalteren.service.command.testdata.utils.TestdataConstants.ORACLE_MAX_IN_SET_ELEMENTS;\n \n-import javax.transaction.Transactional;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Optional;\n import java.util.Set;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.data.domain.PageRequest;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n \n-import static com.google.common.collect.Lists.partition;\n-import static java.util.Objects.nonNull;\n-import static java.util.stream.Collectors.toList;\n-import static java.util.stream.Collectors.toSet;\n-import static no.nav.tps.forvalteren.service.command.testdata.utils.TestdataConstants.ORACLE_MAX_IN_SET_ELEMENTS;\n+import lombok.RequiredArgsConstructor;\n+import no.nav.tps.forvalteren.domain.jpa.Fullmakt;\n+import no.nav.tps.forvalteren.domain.jpa.IdentHistorikk;\n+import no.nav.tps.forvalteren.domain.jpa.Person;\n+import no.nav.tps.forvalteren.domain.jpa.Relasjon;\n+import no.nav.tps.forvalteren.domain.jpa.Sivilstand;\n+import no.nav.tps.forvalteren.domain.jpa.Vergemaal;\n+import no.nav.tps.forvalteren.repository.jpa.IdenthistorikkRepository;\n+import no.nav.tps.forvalteren.repository.jpa.PersonRepository;\n+import no.nav.tps.forvalteren.service.IdentpoolService;\n+import no.nav.tps.forvalteren.service.command.exceptions.NotFoundException;\n+import no.nav.tps.forvalteren.service.command.testdata.DeletePersonerByIdIn;\n+import no.nav.tps.forvalteren.service.command.testdata.DeleteRelasjonerByIdIn;\n+import no.nav.tps.forvalteren.service.command.testdata.DeleteSivilstandByIdIn;\n+import no.nav.tps.forvalteren.service.command.tps.skdmelding.TpsPersonService;\n \n @Service\n @RequiredArgsConstructor\n public class PersonService {\n \n     private final PersonRepository personRepository;\n-    private final AdresseRepository adresseRepository;\n-    private final RelasjonRepository relasjonRepository;\n-    private final DoedsmeldingRepository doedsmeldingRepository;\n     private final IdenthistorikkRepository identhistorikkRepository;\n-    private final SivilstandRepository sivilstandRepository;\n     private final IdentpoolService identpoolService;\n     private final TpsPersonService tpsPersonService;\n-    private final VergemaalRepository vergemaalRepository;\n-    private final FullmaktRepository fullmaktRepository;\n+    private final DeletePersonerByIdIn deletePersonerByIdIn;\n+    private final DeleteRelasjonerByIdIn deleteRelasjonerByIdIn;\n+    private final DeleteSivilstandByIdIn deleteSivilstandByIdIn;\n \n     public List<Person> getPersonerByIdenter(List<String> identer) {\n \n@@ -61,58 +56,65 @@\n         return resultat;\n     }\n \n-    @Transactional\n     public void deletePersons(List<String> miljoer, List<String> identer) {\n \n-        Set<String> alleIdenter = new HashSet<>(identer);\n-\n-        List<Person> persons = personRepository.findByIdentIn(identer);\n+        List<Person> persons = personRepository.findByIdentIn(new HashSet<>(identer));\n \n-        Set<Long> orignalPersonId = persons.stream().map(Person::getId).collect(toSet());\n-        Set<Long> personIds = new HashSet(orignalPersonId);\n-\n-        if (personIds.isEmpty()) {\n+        if (persons.isEmpty()) {\n             throw new NotFoundException(\"Ingen personer funnet\");\n         }\n \n-        Optional<List<Relasjon>> relasjoner = relasjonRepository.findByPersonRelasjonMedIdIn(personIds);\n-        if (relasjoner.isPresent()) {\n-            alleIdenter.addAll(relasjoner.get().stream().map(Relasjon::getPerson).map(Person::getIdent).collect(toList()));\n-            personIds.addAll(relasjoner.get().stream().map(Relasjon::getPerson).map(Person::getId).collect(toList()));\n-\n-            Optional<List<Relasjon>> alleRelasjoner = relasjonRepository.findByPersonRelasjonMedIdIn(personIds);\n-            if (alleRelasjoner.isPresent()) {\n-                relasjonRepository.deleteByIdIn(alleRelasjoner.get().stream().map(Relasjon::getId).collect(toSet()));\n-            }\n-\n-            Set<Long> sivilstandIds = alleRelasjoner.get().stream().filter(relasjon -> nonNull(relasjon.getPersonRelasjonMed()))\n-                    .map(Relasjon::getPersonRelasjonMed)\n-                    .flatMap(person -> person.getSivilstander().stream())\n-                    .map(Sivilstand::getId)\n-                    .collect(toSet());\n-\n-            sivilstandRepository.deleteByIdIn(sivilstandIds);\n-        }\n-\n-        Optional<List<Adresse>> adresser = adresseRepository.findAdresseByPersonIdIn(personIds);\n-        if (adresser.isPresent()) {\n-            adresseRepository.deleteByIdIn(adresser.get().stream().map(Adresse::getId).collect(toList()));\n-        }\n-\n-        deleteIdenthistorikk(persons);\n-\n-        vergemaalRepository.deleteByIdIn(personIds.stream().collect(toList()));\n-\n-        fullmaktRepository.deleteByIdIn(personIds.stream().collect(toList()));\n-\n-        doedsmeldingRepository.deleteByPersonIdIn(personIds);\n-\n-        personRepository.deleteByIdIn(personIds);\n+        Set<Person> allConnectedPeople = Stream.of(\n+                persons,\n+                persons.stream()\n+                        .map(Person::getRelasjoner)\n+                        .flatMap(Collection::stream)\n+                        .map(Relasjon::getPersonRelasjonMed)\n+                        .collect(Collectors.toSet()),\n+                persons.stream()\n+                        .map(Person::getIdentHistorikk)\n+                        .flatMap(Collection::stream)\n+                        .map(IdentHistorikk::getAliasPerson)\n+                        .collect(Collectors.toSet()),\n+                persons.stream()\n+                        .map(Person::getFullmakt)\n+                        .flatMap(Collection::stream)\n+                        .map(Fullmakt::getFullmektig)\n+                        .collect(Collectors.toSet()),\n+                persons.stream()\n+                        .map(Person::getVergemaal)\n+                        .flatMap(Collection::stream)\n+                        .map(Vergemaal::getVerge)\n+                        .collect(Collectors.toSet()))\n+                .flatMap(Collection::stream)\n+                .collect(toSet());\n+\n+        deleteSivilstandByIdIn.delete(allConnectedPeople.stream()\n+                .map(Person::getSivilstander)\n+                .flatMap(Collection::stream)\n+                .map(Sivilstand::getId)\n+                .collect(toSet()));\n+\n+        deleteRelasjonerByIdIn.delete(allConnectedPeople.stream()\n+                .map(Person::getRelasjoner)\n+                .flatMap(Collection::stream)\n+                .map(Relasjon::getId)\n+                .collect(Collectors.toSet()));\n+\n+        deletePersonerByIdIn.delete(allConnectedPeople.stream()\n+                .map(Person::getId)\n+                .collect(Collectors.toSet()));\n \n         //Wipe persons in TPS\n-        tpsPersonService.sendDeletePersonMeldinger(miljoer, alleIdenter);\n-\n-        identpoolService.recycleIdents(alleIdenter);\n+        tpsPersonService.sendDeletePersonMeldinger(miljoer, Stream.of(persons, allConnectedPeople)\n+                .flatMap(Collection::stream)\n+                .map(Person::getIdent)\n+                .collect(Collectors.toSet()));\n+\n+        identpoolService.recycleIdents(Stream.of(persons, allConnectedPeople)\n+                .flatMap(Collection::stream)\n+                .map(Person::getIdent)\n+                .collect(Collectors.toSet()));\n     }\n \n     @Transactional"
  },
  {
    "sha": "ffbf8cba8baa4c72c3ff4145d45abaad94f52159",
    "filename": "tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/skd/SendSkdMeldingTilGitteMiljoer.java",
    "status": "modified",
    "additions": 8,
    "deletions": 3,
    "changes": 11,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/skd/SendSkdMeldingTilGitteMiljoer.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/skd/SendSkdMeldingTilGitteMiljoer.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-service/tps-forvalteren-service-java/src/main/java/no/nav/tps/forvalteren/service/command/testdata/skd/SendSkdMeldingTilGitteMiljoer.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -1,8 +1,8 @@\n package no.nav.tps.forvalteren.service.command.testdata.skd;\n \n+import java.util.HashMap;\n import java.util.Map;\n import java.util.Set;\n-import java.util.stream.Collectors;\n import org.springframework.stereotype.Service;\n \n import lombok.RequiredArgsConstructor;\n@@ -20,8 +20,13 @@\n     public Map<String, String> execute(String skdMelding, TpsSkdRequestMeldingDefinition skdRequestMeldingDefinition, Set<String> environments) {\n \n         Set<String> envToCheck = filterEnvironmentsOnDeployedEnvironment.execute(environments);\n-        return envToCheck.parallelStream()\n-                .collect(Collectors.toMap(env -> env, env -> sendEnSkdMelding.sendSkdMelding(skdMelding, skdRequestMeldingDefinition, env)));\n+        Map<String, String> responseSkdMeldinger = new HashMap<>(envToCheck.size());\n+\n+        for (String env : envToCheck) {\n+            String responsMelding = sendEnSkdMelding.sendSkdMelding(skdMelding, skdRequestMeldingDefinition, env);\n+            responseSkdMeldinger.put(env, responsMelding);\n+        }\n+        return responseSkdMeldinger;\n     }\n \n     public String execute(String skdMelding, TpsSkdRequestMeldingDefinition skdRequestMeldingDefinition, String environment) {"
  },
  {
    "sha": "c6e1892937ac31ec170cb715214d2aa479e2e747",
    "filename": "tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/DeletePersonerByIdInTest.java",
    "status": "modified",
    "additions": 9,
    "deletions": 4,
    "changes": 13,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/DeletePersonerByIdInTest.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/DeletePersonerByIdInTest.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/DeletePersonerByIdInTest.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -2,15 +2,16 @@\n \n import static no.nav.tps.forvalteren.service.command.testdata.utils.TestdataConstants.ORACLE_MAX_IN_SET_ELEMENTS;\n import static org.mockito.ArgumentMatchers.anyList;\n+import static org.mockito.ArgumentMatchers.anySet;\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n import java.util.List;\n+import javax.persistence.EntityManagerFactory;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n-import org.mockito.InjectMocks;\n import org.mockito.Mock;\n import org.mockito.junit.MockitoJUnitRunner;\n \n@@ -30,14 +31,18 @@\n     @Mock\n     private DoedsmeldingRepository doedsmeldingRepository;\n \n-    @InjectMocks\n+    @Mock\n+    private EntityManagerFactory entityManagerFactory;\n+\n     private DeletePersonerByIdIn deletePersonerByIdIn;\n \n     @Mock\n     private List<Long> personIds;\n \n     @Before\n     public void setup() {\n+        deletePersonerByIdIn = new DeletePersonerByIdIn(entityManagerFactory, personRepository,\n+                relasjonRepository, doedsmeldingRepository);\n         when(personIds.size()).thenReturn(ORACLE_MAX_IN_SET_ELEMENTS);\n     }\n \n@@ -46,7 +51,7 @@ public void verifyAllServices() {\n         deletePersonerByIdIn.execute(personIds);\n \n         verify(doedsmeldingRepository).deleteByPersonIdIn(anyList());\n-        verify(relasjonRepository).deleteByPersonRelasjonMedIdIn(anyList());\n+        verify(relasjonRepository).deleteByPersonRelasjonMedIdIn(anySet());\n         verify(personRepository).deleteByIdIn(anyList());\n     }\n \n@@ -57,7 +62,7 @@ public void verifyAllServicesWithMorePersonsThanOracleLimit() {\n         deletePersonerByIdIn.execute(personIds);\n \n         verify(doedsmeldingRepository, times(10)).deleteByPersonIdIn(anyList());\n-        verify(relasjonRepository, times(10)).deleteByPersonRelasjonMedIdIn(anyList());\n+        verify(relasjonRepository, times(10)).deleteByPersonRelasjonMedIdIn(anySet());\n         verify(personRepository, times(10)).deleteByIdIn(anyList());\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "cd93c41968df4024106e3b5fcf99c4df165400f2",
    "filename": "tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/DeleteRelasjonerByIdInTest.java",
    "status": "modified",
    "additions": 11,
    "deletions": 9,
    "changes": 20,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/DeleteRelasjonerByIdInTest.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/DeleteRelasjonerByIdInTest.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/DeleteRelasjonerByIdInTest.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -1,16 +1,16 @@\n package no.nav.tps.forvalteren.service.command.testdata;\n \n import static no.nav.tps.forvalteren.service.command.testdata.utils.TestdataConstants.ORACLE_MAX_IN_SET_ELEMENTS;\n-import static org.mockito.ArgumentMatchers.anyList;\n+import static org.mockito.ArgumentMatchers.anySet;\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n import static org.mockito.Mockito.when;\n \n import java.util.List;\n+import javax.persistence.EntityManagerFactory;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n-import org.mockito.InjectMocks;\n import org.mockito.Mock;\n import org.mockito.junit.MockitoJUnitRunner;\n \n@@ -21,32 +21,34 @@\n \n     @Mock\n     private RelasjonRepository relasjonRepository;\n-    \n-    @InjectMocks\n+\n+    @Mock\n+    private EntityManagerFactory entityManagerFactory;\n+\n     private DeleteRelasjonerByIdIn deleteRelasjonerByIdIn;\n     \n     @Mock\n     private List<Long> personIds;\n     \n     @Before\n     public void setup() {\n+        deleteRelasjonerByIdIn = new DeleteRelasjonerByIdIn(entityManagerFactory, relasjonRepository);\n         when(personIds.size()).thenReturn(ORACLE_MAX_IN_SET_ELEMENTS);\n     }\n     \n     @Test\n     public void verifyServiceCall() {\n         deleteRelasjonerByIdIn.execute(personIds);\n \n-        verify(relasjonRepository).deleteByPersonRelasjonMedIdIn(anyList());\n+        verify(relasjonRepository).deleteByPersonRelasjonMedIdIn(anySet());\n     }\n \n     @Test\n     public void verifyServiceCallWithMoreRelasjonerThanMaxInQuery() {\n         when(personIds.size()).thenReturn(ORACLE_MAX_IN_SET_ELEMENTS * 10);\n-        \n+\n         deleteRelasjonerByIdIn.execute(personIds);\n-        \n-        verify(relasjonRepository, times(10)).deleteByPersonRelasjonMedIdIn(anyList());\n+\n+        verify(relasjonRepository, times(10)).deleteByPersonRelasjonMedIdIn(anySet());\n     }\n-    \n }\n\\ No newline at end of file"
  },
  {
    "sha": "6b4005e6962ce9579fe70d5aea2f2b78c353324f",
    "filename": "tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/restreq/PersonServiceTest.java",
    "status": "modified",
    "additions": 27,
    "deletions": 52,
    "changes": 79,
    "blob_url": "https://github.com/navikt/tps-forvalteren/blob/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/restreq/PersonServiceTest.java",
    "raw_url": "https://github.com/navikt/tps-forvalteren/raw/4bb8472b621ee65b92f08a51ee1bc761522ded4a/tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/restreq/PersonServiceTest.java",
    "contents_url": "https://api.github.com/repos/navikt/tps-forvalteren/contents/tps-forvalteren-service/tps-forvalteren-service-java/src/test/java/no/nav/tps/forvalteren/service/command/testdata/restreq/PersonServiceTest.java?ref=4bb8472b621ee65b92f08a51ee1bc761522ded4a",
    "patch": "@@ -1,36 +1,29 @@\n package no.nav.tps.forvalteren.service.command.testdata.restreq;\n \n-import no.nav.tps.forvalteren.domain.jpa.Gateadresse;\n+import static com.google.common.collect.Lists.newArrayList;\n+import static java.util.Collections.singletonList;\n+import static org.mockito.ArgumentMatchers.anySet;\n+import static org.mockito.Mockito.anyList;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.ArrayList;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n import no.nav.tps.forvalteren.domain.jpa.IdentHistorikk;\n import no.nav.tps.forvalteren.domain.jpa.Person;\n-import no.nav.tps.forvalteren.domain.jpa.Relasjon;\n-import no.nav.tps.forvalteren.repository.jpa.AdresseRepository;\n-import no.nav.tps.forvalteren.repository.jpa.DoedsmeldingRepository;\n-import no.nav.tps.forvalteren.repository.jpa.FullmaktRepository;\n import no.nav.tps.forvalteren.repository.jpa.IdenthistorikkRepository;\n import no.nav.tps.forvalteren.repository.jpa.PersonRepository;\n-import no.nav.tps.forvalteren.repository.jpa.RelasjonRepository;\n-import no.nav.tps.forvalteren.repository.jpa.SivilstandRepository;\n-import no.nav.tps.forvalteren.repository.jpa.VergemaalRepository;\n import no.nav.tps.forvalteren.service.IdentpoolService;\n import no.nav.tps.forvalteren.service.command.exceptions.NotFoundException;\n+import no.nav.tps.forvalteren.service.command.testdata.DeletePersonerByIdIn;\n+import no.nav.tps.forvalteren.service.command.testdata.DeleteRelasjonerByIdIn;\n+import no.nav.tps.forvalteren.service.command.testdata.DeleteSivilstandByIdIn;\n import no.nav.tps.forvalteren.service.command.tps.skdmelding.TpsPersonService;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.mockito.InjectMocks;\n-import org.mockito.Mock;\n-import org.mockito.junit.MockitoJUnitRunner;\n-\n-import java.util.ArrayList;\n-import java.util.Optional;\n-\n-import static com.google.common.collect.Lists.newArrayList;\n-import static java.util.Collections.singletonList;\n-import static org.mockito.ArgumentMatchers.any;\n-import static org.mockito.ArgumentMatchers.anySet;\n-import static org.mockito.Mockito.anyList;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.Mockito.when;\n \n @RunWith(MockitoJUnitRunner.class)\n public class PersonServiceTest {\n@@ -42,31 +35,22 @@\n     private PersonRepository personRepository;\n \n     @Mock\n-    private AdresseRepository adresseRepository;\n-\n-    @Mock\n-    private RelasjonRepository relasjonRepository;\n-\n-    @Mock\n-    private DoedsmeldingRepository doedsmeldingRepository;\n-\n-    @Mock\n-    private IdenthistorikkRepository identhistorikkRepository;\n+    private IdentpoolService identpoolService;\n \n     @Mock\n-    private VergemaalRepository vergemaalRepository;\n+    private TpsPersonService tpsPersonService;\n \n     @Mock\n-    private FullmaktRepository fullmaktRepository;\n+    private DeletePersonerByIdIn deletePersonerByIdIn;\n \n     @Mock\n-    private SivilstandRepository sivilstandRepository;\n+    private DeleteRelasjonerByIdIn deleteRelasjonerByIdIn;\n \n     @Mock\n-    private IdentpoolService identpoolService;\n+    private DeleteSivilstandByIdIn deleteSivilstandByIdIn;\n \n     @Mock\n-    private TpsPersonService tpsPersonService;\n+    private IdenthistorikkRepository identhistorikkRepository;\n \n     @InjectMocks\n     private PersonService personService;\n@@ -80,23 +64,14 @@ public void deletePersons_NotFound() {\n     @Test\n     public void deletePersons_OK() {\n \n-        when(personRepository.findByIdentIn(anyList())).thenReturn(singletonList(Person.builder().build()));\n-        when(relasjonRepository.findByPersonRelasjonMedIdIn(anySet())).thenReturn(Optional.of(newArrayList(Relasjon.builder()\n-                .id(ID)\n-                .person(Person.builder().ident(IDENT1).build())\n-                .build())));\n-        Gateadresse gateadresse = Gateadresse.builder().build();\n-        gateadresse.setId(ID);\n-        when(adresseRepository.findAdresseByPersonIdIn(any())).thenReturn(Optional.of(newArrayList(gateadresse)));\n+        when(personRepository.findByIdentIn(anySet())).thenReturn(singletonList(Person.builder().build()));\n \n         personService.deletePersons(new ArrayList<>(), newArrayList(IDENT1));\n \n-        verify(relasjonRepository).deleteByIdIn(anySet());\n-        verify(sivilstandRepository).deleteByIdIn(anySet());\n-        verify(adresseRepository).deleteByIdIn(anyList());\n-        verify(doedsmeldingRepository).deleteByPersonIdIn(any());\n-        verify(personRepository).deleteByIdIn(anySet());\n         verify(tpsPersonService).sendDeletePersonMeldinger(anyList() ,anySet());\n+        verify(deletePersonerByIdIn).delete(anySet());\n+        verify(deleteSivilstandByIdIn).delete(anySet());\n+        verify(deleteRelasjonerByIdIn).delete(anySet());\n         verify(identpoolService).recycleIdents(anySet());\n     }\n "
  }
]
