[
  {
    "sha": "35ee262018b77d0449ba1f43cb6bddbbef0bde3b",
    "filename": "2021 robot/src/main/java/frc/robot/Robot.java",
    "status": "modified",
    "additions": 12,
    "deletions": 18,
    "changes": 30,
    "blob_url": "https://github.com/amschmidt2/Taft-Robotic-Eagles-2021/blob/3d9864c366adcba7368c89198090e716ef619139/2021%20robot/src/main/java/frc/robot/Robot.java",
    "raw_url": "https://github.com/amschmidt2/Taft-Robotic-Eagles-2021/raw/3d9864c366adcba7368c89198090e716ef619139/2021%20robot/src/main/java/frc/robot/Robot.java",
    "contents_url": "https://api.github.com/repos/amschmidt2/Taft-Robotic-Eagles-2021/contents/2021%20robot/src/main/java/frc/robot/Robot.java?ref=3d9864c366adcba7368c89198090e716ef619139",
    "patch": "@@ -65,22 +65,17 @@ public void robotInit() {\n     \n     leftEncoder = leftMotor.getEncoder();\n     rightEncoder = rightMotor.getEncoder();\n-    \n-    leftEncoder = leftMotor.getEncoder(EncoderType.kQuadrature, 4096);\n-    rightEncoder = rightMotor.getEncoder(EncoderType.kQuadrature, 4096);\n-\n-// Encoder Set up\n-    leftEncoder = leftMotor.getEncoder();\n-    rightEncoder = rightMotor.getEncoder();\n-\n-    leftEncoder = leftMotor.getEncoder(EncoderType.kQuadrature, 4096);\n-    rightEncoder = rightMotor.getEncoder(EncoderType.kQuadrature, 4096);\n \n-    leftMotor.setSensorPhase(false);\n-    rightMotor.setSensorPhase(true);\n+    //was this supposed to be inversion?\n+    // leftEncoder.setInverted(true);\n+    \n+    // leftMotor.setSensorPhase(false);\n+    // rightMotor.setSensorPhase(true);\n \n-    leftMotor.setSelectedSensorPosition(0, 0, 10);\n-    rightMotor.setSelectedSensorPosition(0, 0, 10);\n+    // are you trying to zero things?\n+    leftEncoder.setPosition(0.0);\n+    // leftMotor.setSelectedSensorPosition(0, 0, 10);\n+    // rightMotor.setSelectedSensorPosition(0, 0, 10);\n \n \n // Deadband\n@@ -107,10 +102,9 @@ public void autonomousInit() {\n     //startTime = Timer.getFPGATimestamp();\n \n // Reset Encoders to zero\n-    leftencoder.setPosition(0);\n-    rightencoder.setPosition(0);\n+    leftEncoder.setPosition(0);\n+    rightEncoder.setPosition(0);\n \n-    encoder.reset();\n     errorSum = 0;\n   }\n \n@@ -128,7 +122,7 @@ public void autonomousInit() {\n   @Override\n   public void autonomousPeriodic() {\n // Get Sensor Position\n-    double sensorPosition = encoder.get() * kDriveTick2Feet;\n+    double sensorPosition = leftEncoder.get() * kDriveTick2Feet;\n \n // Calculations\n     double error = setpoint - sensorPosition;"
  }
]
