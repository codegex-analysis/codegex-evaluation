[
  {
    "sha": "20b7f06a837af1528bc9145d7bd2f8d87c4e554a",
    "filename": "app/src/main/java/com/myfirst/restdemo/MainActivity.java",
    "status": "modified",
    "additions": 129,
    "deletions": 5,
    "changes": 134,
    "blob_url": "https://github.com/d-yaskevich/RESTDemo/blob/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/MainActivity.java",
    "raw_url": "https://github.com/d-yaskevich/RESTDemo/raw/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/MainActivity.java",
    "contents_url": "https://api.github.com/repos/d-yaskevich/RESTDemo/contents/app/src/main/java/com/myfirst/restdemo/MainActivity.java?ref=1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7",
    "patch": "@@ -16,13 +16,19 @@\n import androidx.recyclerview.widget.RecyclerView;\n \n import com.google.android.material.snackbar.Snackbar;\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n import com.myfirst.restdemo.adapters.ReposAdapter;\n import com.myfirst.restdemo.rest.API;\n-import com.myfirst.restdemo.rest.GithubConfig;\n import com.myfirst.restdemo.rest.models.Repo;\n+import com.myfirst.restdemo.rest.responses.GithubResponse;\n import com.myfirst.restdemo.rest.requests.ProjectRequest;\n import com.myfirst.restdemo.rest.responses.ProjectResponse;\n \n+import org.json.JSONArray;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n import java.io.BufferedReader;\n import java.io.IOException;\n import java.io.InputStream;\n@@ -33,10 +39,13 @@\n \n import javax.net.ssl.HttpsURLConnection;\n \n+import okhttp3.ResponseBody;\n import retrofit2.Call;\n import retrofit2.Callback;\n import retrofit2.Response;\n \n+import static com.myfirst.restdemo.rest.GithubConfig.GITHUB_API_BASE_URL;\n+\n public class MainActivity extends AppCompatActivity {\n \n     private static final String TAG = MainActivity.class.getSimpleName();\n@@ -59,21 +68,31 @@ protected void onCreate(Bundle savedInstanceState) {\n         RecyclerView rvReps = findViewById(R.id.rv_repos);\n         rvReps.setLayoutManager(new LinearLayoutManager(this));\n         rvReps.setAdapter(adapter);\n+\n     }\n \n     public void onGetClick(View view) {\n         AsyncTask.execute(() -> {\n-            String response = getDataFrom(GithubConfig.GITHUB_API_BASE_URL);\n-\n+            String response = getDataFrom(GITHUB_API_BASE_URL);\n+            Log.d(TAG, \"response\" + response);\n             //todo add convert String to GithubResponse model using JSON (Gson)\n+            GithubResponse githubResponse = fromGson(response);\n \n             new Handler(Looper.getMainLooper()).post(() ->\n                     //todo show 'nice' (formatted) contents GithubResponse model\n-                    tvResponse.setText(response)\n+                    //tvResponse.setText(response)\n+                    tvResponse.setText(githubResponse.toString())\n             );\n         });\n     }\n \n+    public static GithubResponse fromGson(String response) {\n+        GsonBuilder builder = new GsonBuilder();\n+\n+        Gson gson = builder.create();\n+        return gson.fromJson(response, GithubResponse.class);\n+    }\n+\n     private String getDataFrom(String urlString) {\n         Context context = getApplicationContext();\n         StringBuilder stringBuilder = new StringBuilder();\n@@ -158,15 +177,41 @@ public void onFailure(Call<ArrayList<Repo>> call, Throwable t) {\n         });\n     }\n \n+\n+    public void deletePost(View view) {\n+        String owner = \"AnnaTestREST\";\n+        String repo = \"TestDelete\";\n+        API.github().deleteRepo(owner, repo).enqueue(new Callback<Void>() {\n+            @Override\n+            public void onResponse(Call<Void> call, Response<Void> response) {\n+                tvResponse.setText(\"Code: \" + response.code()+ \"\\n message = \" + response.message()\n+                + \"\\n to string =\" +response.toString());\n+                // some actions\n+\n+                Log.i(TAG, \"<-- \" + response.code() + \" \" + call.request().method() + \" \" + call.request().url());\n+            }\n+\n+            @Override\n+            public void onFailure(Call<Void> call, Throwable t) {\n+                Log.e(TAG, t.toString());\n+                Snackbar snackbar = Snackbar.make(tvResponse, t.toString(), Snackbar.LENGTH_INDEFINITE);\n+                snackbar.setAction(android.R.string.ok, v -> snackbar.dismiss());\n+                snackbar.show();\n+            }\n+        });\n+    }\n+\n+\n     public void onCreateProjectClick(View view) {\n-        ProjectRequest request = new ProjectRequest(\"Some name\", null);\n+        ProjectRequest request = new ProjectRequest(\"Admin\", null);\n         API.github().createProject(request).enqueue(new Callback<ProjectResponse>() {\n             @Override\n             public void onResponse(Call<ProjectResponse> call, Response<ProjectResponse> response) {\n                 ProjectResponse project = response.body();\n                 // some actions\n \n                 Log.i(TAG, \"<-- \" + response.code() + \" \" + call.request().method() + \" \" + call.request().url());\n+                Log.d(\"ID + NAME\", project.toString());\n                 if (project != null) Log.i(TAG, project.toString());\n             }\n \n@@ -179,4 +224,83 @@ public void onFailure(Call<ProjectResponse> call, Throwable t) {\n             }\n         });\n     }\n+\n+    public void onTopicClick(View view) {\n+\n+        String owner = \"AnnaTestREST\";\n+        String repo = \"TestTopic\";\n+        JSONObject jsonRequest = new JSONObject();\n+        JSONArray jsonArray = new JSONArray();\n+        jsonArray.put(\"first\");\n+        jsonArray.put(\"second\");\n+        jsonArray.put(\"third\");\n+\n+        try {\n+            jsonRequest.put(\"names\", jsonArray);\n+        } catch (JSONException e) {\n+            e.printStackTrace();\n+        }\n+        API.github().putTopic(owner, repo, jsonRequest).enqueue(new Callback<Void>() {\n+            @Override\n+            public void onResponse(Call<Void> call, Response<Void> response) {\n+                tvResponse.setText(\"Code: \" + response.code()+ \"\\n message = \" + response.message()\n+                        + \"\\n to string =\" +response.toString() + response.body());\n+\n+                Log.i(TAG, \"<-- \" + response.code() + \" \" + call.request().method() + \" \" + call.request().url());\n+            }\n+\n+            @Override\n+            public void onFailure(Call<Void> call, Throwable t) {\n+                Log.e(TAG, t.toString());\n+                Snackbar snackbar = Snackbar.make(tvResponse, t.toString(), Snackbar.LENGTH_INDEFINITE);\n+                snackbar.setAction(android.R.string.ok, v -> snackbar.dismiss());\n+                snackbar.show();\n+            }\n+\n+    });\n+    }\n+\n+    public void onPutCollaborationClick(View view) {\n+        int project_id = 11891059;\n+        String username = \"AnnaAlekseevich\";\n+        String permission = \"Write\";\n+        API.github().putWriter(\"application/vnd.github.inertia-preview+json\", project_id, username, permission).enqueue(new Callback<ResponseBody>() {\n+            @Override\n+            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n+                try {\n+                    String jsonString = response.body().string();\n+                }catch (IOException e){\n+                    e.printStackTrace();\n+                }\n+            }\n+\n+            @Override\n+            public void onFailure(Call<ResponseBody> call, Throwable t) {\n+\n+            }\n+        });\n+\n+    }\n+\n+    public void onPutVulnerabilityAlertsClick(View view) {\n+        String owner = \"AnnaTestREST\";\n+        String repo = \"VulnerabilityAlerts\";\n+        API.github().putAlert(owner, repo).enqueue(new Callback<ResponseBody>() {\n+            @Override\n+            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n+                try {\n+                    String jsonString = response.body().string();\n+                }catch (IOException e){\n+                    e.printStackTrace();\n+                }\n+            }\n+\n+            @Override\n+            public void onFailure(Call<ResponseBody> call, Throwable t) {\n+\n+            }\n+        });\n+    }\n+\n+\n }\n\\ No newline at end of file"
  },
  {
    "sha": "2c1d2faf85e759448e979eed8583c4cee419b89a",
    "filename": "app/src/main/java/com/myfirst/restdemo/adapters/ReposAdapter.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/d-yaskevich/RESTDemo/blob/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/adapters/ReposAdapter.java",
    "raw_url": "https://github.com/d-yaskevich/RESTDemo/raw/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/adapters/ReposAdapter.java",
    "contents_url": "https://api.github.com/repos/d-yaskevich/RESTDemo/contents/app/src/main/java/com/myfirst/restdemo/adapters/ReposAdapter.java?ref=1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7",
    "patch": "@@ -30,6 +30,14 @@ public void resetRepos(ArrayList<Repo> repos) {\n         notifyDataSetChanged();\n     }\n \n+    public void notifyRepos(Repo repos) {\n+        this.repos.clear();\n+        if (repos != null) {\n+            this.repos.add(repos);\n+        }\n+        notifyDataSetChanged();\n+    }\n+\n     @NonNull\n     @Override\n     public RepoVH onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {"
  },
  {
    "sha": "2ba82ed424049ee54055b13312e9bc8fd2b63236",
    "filename": "app/src/main/java/com/myfirst/restdemo/rest/GithubConfig.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/d-yaskevich/RESTDemo/blob/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/rest/GithubConfig.java",
    "raw_url": "https://github.com/d-yaskevich/RESTDemo/raw/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/rest/GithubConfig.java",
    "contents_url": "https://api.github.com/repos/d-yaskevich/RESTDemo/contents/app/src/main/java/com/myfirst/restdemo/rest/GithubConfig.java?ref=1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7",
    "patch": "@@ -2,8 +2,12 @@\n \n public class GithubConfig {\n     public static final String GITHUB_ACCEPT = \"application/vnd.github.inertia-preview+json\";\n-    public static final String GITHUB_AUTH_TOKEN = \"token 70a22a7151b5ad3b83ff89d14b35483311427249\";\n+    //public static final String GITHUB_AUTH_TOKEN = \"token 70a22a7151b5ad3b83ff89d14b35483311427249\";\n+    public static final String GITHUB_AUTH_TOKEN = \"token 9b09f48c82d1622468db0b874eb9c1549cc579dc\";\n+    public static final String GITHUB_API_PROJECT_TOPICS = \"/repos/{owner}/{repo}/topics\";\n     public static final String GITHUB_API_BASE_URL = \"https://api.github.com/\";\n     public static final String GITHUB_API_REPOS = \"users/{user}/repos\";\n     public static final String GITHUB_API_CREATE_PROJECT = \"/user/projects\";\n+    public static final String GITHUB_API_DELETE_OWNER = \"/repos/{owner}/{repo}\";\n+    public static final String GITHUB_API_ADD_WRITER = \"/projects/{project_id}/collaborators/{username}\";\n }"
  },
  {
    "sha": "ed7c33001610db4563b59611f173a03c362fa8d9",
    "filename": "app/src/main/java/com/myfirst/restdemo/rest/GithubService.java",
    "status": "modified",
    "additions": 21,
    "deletions": 3,
    "changes": 24,
    "blob_url": "https://github.com/d-yaskevich/RESTDemo/blob/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/rest/GithubService.java",
    "raw_url": "https://github.com/d-yaskevich/RESTDemo/raw/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/rest/GithubService.java",
    "contents_url": "https://api.github.com/repos/d-yaskevich/RESTDemo/contents/app/src/main/java/com/myfirst/restdemo/rest/GithubService.java?ref=1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7",
    "patch": "@@ -4,22 +4,28 @@\n import com.myfirst.restdemo.rest.requests.ProjectRequest;\n import com.myfirst.restdemo.rest.responses.ProjectResponse;\n \n+import org.json.JSONObject;\n+\n import java.util.ArrayList;\n \n+import okhttp3.ResponseBody;\n import retrofit2.Call;\n import retrofit2.http.Body;\n+import retrofit2.http.DELETE;\n import retrofit2.http.GET;\n+import retrofit2.http.Header;\n import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n import retrofit2.http.Path;\n \n+import static com.myfirst.restdemo.rest.GithubConfig.GITHUB_API_ADD_WRITER;\n import static com.myfirst.restdemo.rest.GithubConfig.GITHUB_API_CREATE_PROJECT;\n+import static com.myfirst.restdemo.rest.GithubConfig.GITHUB_API_DELETE_OWNER;\n+import static com.myfirst.restdemo.rest.GithubConfig.GITHUB_API_PROJECT_TOPICS;\n import static com.myfirst.restdemo.rest.GithubConfig.GITHUB_API_REPOS;\n \n public interface GithubService {\n \n-//    @GET(GITHUB_API_REPOS)\n-//    Call<ResponseBody> listReposTest(@Path(\"user\") String user);\n-\n     @GET(GITHUB_API_REPOS)\n     Call<ArrayList<Repo>> listRepos(@Path(\"user\") String user);\n \n@@ -29,4 +35,16 @@\n \n     //todo add one function for each request method: POST, PUT, DELETE from https://docs.github.com/en/rest/overview/endpoints-available-for-github-apps\n \n+    @DELETE(GITHUB_API_DELETE_OWNER)\n+    Call<Void> deleteRepo(@Path(\"owner\") String owner, @Path(\"repo\") String repo );\n+\n+    @PUT(GITHUB_API_ADD_WRITER)\n+    Call<ResponseBody> putWriter(@Header(\"Accept\") String accept, @Path(\"project_id\") int id, @Path(\"username\") String username, @Body String permission);\n+\n+    @PUT(GITHUB_API_PROJECT_TOPICS)\n+    Call<Void> putTopic(@Path(\"owner\") String owner, @Path(\"repo\") String repo, @Body JSONObject request);\n+\n+    @PUT(\"/repos/{owner}/{repo}/vulnerability-alerts\")\n+    Call<ResponseBody> putAlert(@Path(\"owner\") String owner, @Path(\"repo\") String repo);\n+\n }"
  },
  {
    "sha": "d642acc9a5569217cc3676e909673106a4c5a0dc",
    "filename": "app/src/main/java/com/myfirst/restdemo/rest/models/Repo.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/d-yaskevich/RESTDemo/blob/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/rest/models/Repo.java",
    "raw_url": "https://github.com/d-yaskevich/RESTDemo/raw/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/rest/models/Repo.java",
    "contents_url": "https://api.github.com/repos/d-yaskevich/RESTDemo/contents/app/src/main/java/com/myfirst/restdemo/rest/models/Repo.java?ref=1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7",
    "patch": "@@ -156,4 +156,8 @@ public String toString() {\n                 \"name='\" + name + '\\'' +\n                 '}';\n     }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n }"
  },
  {
    "sha": "79b1361fe1b44b66898d42a07f4d72ae90c230f6",
    "filename": "app/src/main/java/com/myfirst/restdemo/rest/responses/GithubResponse.java",
    "status": "modified",
    "additions": 424,
    "deletions": 0,
    "changes": 424,
    "blob_url": "https://github.com/d-yaskevich/RESTDemo/blob/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/rest/responses/GithubResponse.java",
    "raw_url": "https://github.com/d-yaskevich/RESTDemo/raw/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/java/com/myfirst/restdemo/rest/responses/GithubResponse.java",
    "contents_url": "https://api.github.com/repos/d-yaskevich/RESTDemo/contents/app/src/main/java/com/myfirst/restdemo/rest/responses/GithubResponse.java?ref=1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7",
    "patch": "@@ -1,6 +1,430 @@\n package com.myfirst.restdemo.rest.responses;\n \n+import com.google.gson.annotations.SerializedName;\n+\n // response from GITHUB_API_BASE_URL\n public class GithubResponse {\n     //todo add fields\n+    @SerializedName(\"current_user_url\")\n+    public String currentUserUrl;\n+    @SerializedName(\"current_user_authorizations_html_url\")\n+    public String currentUserAuthorizationsHtmlUrl;\n+    @SerializedName(\"authorizations_url\")\n+    public String authorizationsUrl;\n+    @SerializedName(\"code_search_url\")\n+    public String codeSearchUrl;\n+    @SerializedName(\"commit_search_url\")\n+    public String commitSearchUrl;\n+    @SerializedName(\"emails_url\")\n+    public String emailsUrl;\n+    @SerializedName(\"emojis_url\")\n+    public String emojisUrl;\n+    @SerializedName(\"events_url\")\n+    public String eventsUrl;\n+    @SerializedName(\"feeds_url\")\n+    public String feedsUrl;\n+    @SerializedName(\"followers_url\")\n+    public String followersUrl;\n+    @SerializedName(\"following_url\")\n+    public String followingUrl;\n+    @SerializedName(\"gists_url\")\n+    public String gistsUrl;\n+    @SerializedName(\"hub_url\")\n+    public String hubUrl;\n+    @SerializedName(\"issue_search_url\")\n+    public String issueSearchUrl;\n+    @SerializedName(\"issues_url\")\n+    public String issuesUrl;\n+    @SerializedName(\"keys_url\")\n+    public String keysUrl;\n+    @SerializedName(\"label_search_url\")\n+    public String labelSearchUrl;\n+    @SerializedName(\"notifications_url\")\n+    public String notificationsUrl;\n+    @SerializedName(\"organization_url\")\n+    public String organizationUrl;\n+    @SerializedName(\"organization_repositories_url\")\n+    public String organizationRepositoriesUrl;\n+    @SerializedName(\"organization_teams_url\")\n+    public String organizationTeamsUrl;\n+    @SerializedName(\"public_gists_url\")\n+    public String publicGistsUrl;\n+    @SerializedName(\"rate_limit_url\")\n+    public String rateLimitUrl;\n+    @SerializedName(\"repository_url\")\n+    public String repositoryUrl;\n+    @SerializedName(\"repository_search_url\")\n+    public String repositorySearchUrl;\n+    @SerializedName(\"current_user_repositories_url\")\n+    public String currentUserRepositoriesUrl;\n+    @SerializedName(\"starred_url\")\n+    public String starredUrl;\n+    @SerializedName(\"starred_gists_url\")\n+    public String starredGistsUrl;\n+    @SerializedName(\"user_url\")\n+    public String userUrl;\n+    @SerializedName(\"user_organizations_url\")\n+    public String userOrganizationsUrl;\n+    @SerializedName(\"user_repositories_url\")\n+    public String userRepositoriesUrl;\n+    @SerializedName(\"user_search_url\")\n+    public String userSearchUrl;\n+\n+    @Override\n+    public String toString() {\n+        return \"GithubResponse{ \" + \"\\n\" +\n+                \"currentUserUrl = \" + currentUserUrl + ',' + '\\n' +\n+                \"currentUserAuthorizationsHtmlUrl = \" + currentUserAuthorizationsHtmlUrl + ',' + '\\n' +\n+                \"authorizationsUrl = \" + authorizationsUrl + ',' + '\\n' +\n+                \"codeSearchUrl = \" + codeSearchUrl + ',' + '\\n' +\n+                \"commitSearchUrl = \" + commitSearchUrl + ',' + '\\n' +\n+                \"emailsUrl = \" + emailsUrl + ',' + '\\n' +\n+                \"emojisUrl = \" + emojisUrl + ',' + '\\n' +\n+                \"eventsUrl = \" + eventsUrl + ',' + '\\n' +\n+                \"feedsUrl = \" + feedsUrl + ',' + '\\n' +\n+                \"followersUrl = \" + followersUrl + ',' + '\\n' +\n+                \"followingUrl = \" + followingUrl + ',' + '\\n' +\n+                \"gistsUrl = \" + gistsUrl + ',' + '\\n' +\n+                \"hubUrl = \" + hubUrl + ',' + '\\n' +\n+                \"issueSearchUrl = \" + issueSearchUrl + ',' + '\\n' +\n+                \"issuesUrl = \" + issuesUrl + ',' + '\\n' +\n+                \"keysUrl = \" + keysUrl + ',' + '\\n' +\n+                \"labelSearchUrl = \" + labelSearchUrl + ',' + '\\n' +\n+                \"notificationsUrl = \" + notificationsUrl + ',' + '\\n' +\n+                \"organizationUrl = \" + organizationUrl + ',' + '\\n' +\n+                \"organizationRepositoriesUrl = \" + organizationRepositoriesUrl + ',' + '\\n' +\n+                \"organizationTeamsUrl = \" + organizationTeamsUrl + ',' + '\\n' +\n+                \"publicGistsUrl = \" + publicGistsUrl + ',' + '\\n' +\n+                \"rateLimitUrl = \" + rateLimitUrl + ',' + '\\n' +\n+                \"repositoryUrl = \" + repositoryUrl + ',' + '\\n' +\n+                \"repositorySearchUrl = \" + repositorySearchUrl + ',' + '\\n' +\n+                \"currentUserRepositoriesUrl = \" + currentUserRepositoriesUrl + ',' + '\\n' +\n+                \"starredUrl = \" + starredUrl + ',' + '\\n' +\n+                \"starredGistsUrl = \" + starredGistsUrl + ',' + '\\n' +\n+                \"userUrl = \" + userUrl + ',' + '\\n' +\n+                \"userOrganizationsUrl = \" + userOrganizationsUrl + ',' + '\\n' +\n+                \"userRepositoriesUrl = \" + userRepositoriesUrl + ',' + '\\n' +\n+                \"userSearchUrl = \" + userSearchUrl + ',' + '\\n' +\n+                '}';\n+    }\n+\n+    /*@SerializedName(\"current_user_url\")\n+    public String getCurrentUserUrl() {\n+        return currentUserUrl;\n+    }\n+\n+    @SerializedName(\"current_user_url\")\n+    public void setCurrentUserUrl(String currentUserUrl) {\n+        this.currentUserUrl = currentUserUrl;\n+    }\n+\n+    @SerializedName(\"current_user_authorizations_html_url\")\n+    public String getCurrentUserAuthorizationsHtmlUrl() {\n+        return currentUserAuthorizationsHtmlUrl;\n+    }\n+\n+    @SerializedName(\"current_user_authorizations_html_url\")\n+    public void setCurrentUserAuthorizationsHtmlUrl(String currentUserAuthorizationsHtmlUrl) {\n+        this.currentUserAuthorizationsHtmlUrl = currentUserAuthorizationsHtmlUrl;\n+    }\n+\n+    @SerializedName(\"authorizations_url\")\n+    public String getAuthorizationsUrl() {\n+        return authorizationsUrl;\n+    }\n+\n+    @SerializedName(\"authorizations_url\")\n+    public void setAuthorizationsUrl(String authorizationsUrl) {\n+        this.authorizationsUrl = authorizationsUrl;\n+    }\n+\n+    @SerializedName(\"code_search_url\")\n+    public String getCodeSearchUrl() {\n+        return codeSearchUrl;\n+    }\n+\n+    @SerializedName(\"code_search_url\")\n+    public void setCodeSearchUrl(String codeSearchUrl) {\n+        this.codeSearchUrl = codeSearchUrl;\n+    }\n+\n+    @SerializedName(\"commit_search_url\")\n+    public String getCommitSearchUrl() {\n+        return commitSearchUrl;\n+    }\n+\n+    @SerializedName(\"commit_search_url\")\n+    public void setCommitSearchUrl(String commitSearchUrl) {\n+        this.commitSearchUrl = commitSearchUrl;\n+    }\n+\n+    @SerializedName(\"emails_url\")\n+    public String getEmailsUrl() {\n+        return emailsUrl;\n+    }\n+\n+    @SerializedName(\"emails_url\")\n+    public void setEmailsUrl(String emailsUrl) {\n+        this.emailsUrl = emailsUrl;\n+    }\n+\n+    @SerializedName(\"emojis_url\")\n+    public String getEmojisUrl() {\n+        return emojisUrl;\n+    }\n+\n+    @SerializedName(\"emojis_url\")\n+    public void setEmojisUrl(String emojisUrl) {\n+        this.emojisUrl = emojisUrl;\n+    }\n+\n+    @SerializedName(\"events_url\")\n+    public String getEventsUrl() {\n+        return eventsUrl;\n+    }\n+\n+    @SerializedName(\"events_url\")\n+    public void setEventsUrl(String eventsUrl) {\n+        this.eventsUrl = eventsUrl;\n+    }\n+\n+    @SerializedName(\"feeds_url\")\n+    public String getFeedsUrl() {\n+        return feedsUrl;\n+    }\n+\n+    @SerializedName(\"feeds_url\")\n+    public void setFeedsUrl(String feedsUrl) {\n+        this.feedsUrl = feedsUrl;\n+    }\n+\n+    @SerializedName(\"followers_url\")\n+    public String getFollowersUrl() {\n+        return followersUrl;\n+    }\n+\n+    @SerializedName(\"followers_url\")\n+    public void setFollowersUrl(String followersUrl) {\n+        this.followersUrl = followersUrl;\n+    }\n+\n+    @SerializedName(\"following_url\")\n+    public String getFollowingUrl() {\n+        return followingUrl;\n+    }\n+\n+    @SerializedName(\"following_url\")\n+    public void setFollowingUrl(String followingUrl) {\n+        this.followingUrl = followingUrl;\n+    }\n+\n+    @SerializedName(\"gists_url\")\n+    public String getGistsUrl() {\n+        return gistsUrl;\n+    }\n+\n+    @SerializedName(\"gists_url\")\n+    public void setGistsUrl(String gistsUrl) {\n+        this.gistsUrl = gistsUrl;\n+    }\n+\n+    @SerializedName(\"hub_url\")\n+    public String getHubUrl() {\n+        return hubUrl;\n+    }\n+\n+    @SerializedName(\"hub_url\")\n+    public void setHubUrl(String hubUrl) {\n+        this.hubUrl = hubUrl;\n+    }\n+\n+    @SerializedName(\"issue_search_url\")\n+    public String getIssueSearchUrl() {\n+        return issueSearchUrl;\n+    }\n+\n+    @SerializedName(\"issue_search_url\")\n+    public void setIssueSearchUrl(String issueSearchUrl) {\n+        this.issueSearchUrl = issueSearchUrl;\n+    }\n+\n+    @SerializedName(\"issues_url\")\n+    public String getIssuesUrl() {\n+        return issuesUrl;\n+    }\n+\n+    @SerializedName(\"issues_url\")\n+    public void setIssuesUrl(String issuesUrl) {\n+        this.issuesUrl = issuesUrl;\n+    }\n+\n+    @SerializedName(\"keys_url\")\n+    public String getKeysUrl() {\n+        return keysUrl;\n+    }\n+\n+    @SerializedName(\"keys_url\")\n+    public void setKeysUrl(String keysUrl) {\n+        this.keysUrl = keysUrl;\n+    }\n+\n+    @SerializedName(\"label_search_url\")\n+    public String getLabelSearchUrl() {\n+        return labelSearchUrl;\n+    }\n+\n+    @SerializedName(\"label_search_url\")\n+    public void setLabelSearchUrl(String labelSearchUrl) {\n+        this.labelSearchUrl = labelSearchUrl;\n+    }\n+\n+    @SerializedName(\"notifications_url\")\n+    public String getNotificationsUrl() {\n+        return notificationsUrl;\n+    }\n+\n+    @SerializedName(\"notifications_url\")\n+    public void setNotificationsUrl(String notificationsUrl) {\n+        this.notificationsUrl = notificationsUrl;\n+    }\n+\n+    @SerializedName(\"organization_url\")\n+    public String getOrganizationUrl() {\n+        return organizationUrl;\n+    }\n+\n+    @SerializedName(\"organization_url\")\n+    public void setOrganizationUrl(String organizationUrl) {\n+        this.organizationUrl = organizationUrl;\n+    }\n+\n+    @SerializedName(\"organization_repositories_url\")\n+    public String getOrganizationRepositoriesUrl() {\n+        return organizationRepositoriesUrl;\n+    }\n+\n+    @SerializedName(\"organization_repositories_url\")\n+    public void setOrganizationRepositoriesUrl(String organizationRepositoriesUrl) {\n+        this.organizationRepositoriesUrl = organizationRepositoriesUrl;\n+    }\n+\n+    @SerializedName(\"organization_teams_url\")\n+    public String getOrganizationTeamsUrl() {\n+        return organizationTeamsUrl;\n+    }\n+\n+    @SerializedName(\"organization_teams_url\")\n+    public void setOrganizationTeamsUrl(String organizationTeamsUrl) {\n+        this.organizationTeamsUrl = organizationTeamsUrl;\n+    }\n+\n+    @SerializedName(\"public_gists_url\")\n+    public String getPublicGistsUrl() {\n+        return publicGistsUrl;\n+    }\n+\n+    @SerializedName(\"public_gists_url\")\n+    public void setPublicGistsUrl(String publicGistsUrl) {\n+        this.publicGistsUrl = publicGistsUrl;\n+    }\n+\n+    @SerializedName(\"rate_limit_url\")\n+    public String getRateLimitUrl() {\n+        return rateLimitUrl;\n+    }\n+\n+    @SerializedName(\"rate_limit_url\")\n+    public void setRateLimitUrl(String rateLimitUrl) {\n+        this.rateLimitUrl = rateLimitUrl;\n+    }\n+\n+    @SerializedName(\"repository_url\")\n+    public String getRepositoryUrl() {\n+        return repositoryUrl;\n+    }\n+\n+    @SerializedName(\"repository_url\")\n+    public void setRepositoryUrl(String repositoryUrl) {\n+        this.repositoryUrl = repositoryUrl;\n+    }\n+\n+    @SerializedName(\"repository_search_url\")\n+    public String getRepositorySearchUrl() {\n+        return repositorySearchUrl;\n+    }\n+\n+    @SerializedName(\"repository_search_url\")\n+    public void setRepositorySearchUrl(String repositorySearchUrl) {\n+        this.repositorySearchUrl = repositorySearchUrl;\n+    }\n+\n+    @SerializedName(\"current_user_repositories_url\")\n+    public String getCurrentUserRepositoriesUrl() {\n+        return currentUserRepositoriesUrl;\n+    }\n+\n+    @SerializedName(\"current_user_repositories_url\")\n+    public void setCurrentUserRepositoriesUrl(String currentUserRepositoriesUrl) {\n+        this.currentUserRepositoriesUrl = currentUserRepositoriesUrl;\n+    }\n+\n+    @SerializedName(\"starred_url\")\n+    public String getStarredUrl() {\n+        return starredUrl;\n+    }\n+\n+    @SerializedName(\"starred_url\")\n+    public void setStarredUrl(String starredUrl) {\n+        this.starredUrl = starredUrl;\n+    }\n+\n+    @SerializedName(\"starred_gists_url\")\n+    public String getStarredGistsUrl() {\n+        return starredGistsUrl;\n+    }\n+\n+    @SerializedName(\"starred_gists_url\")\n+    public void setStarredGistsUrl(String starredGistsUrl) {\n+        this.starredGistsUrl = starredGistsUrl;\n+    }\n+\n+    @SerializedName(\"user_url\")\n+    public String getUserUrl() {\n+        return userUrl;\n+    }\n+\n+    @SerializedName(\"user_url\")\n+    public void setUserUrl(String userUrl) {\n+        this.userUrl = userUrl;\n+    }\n+\n+    @SerializedName(\"user_organizations_url\")\n+    public String getUserOrganizationsUrl() {\n+        return userOrganizationsUrl;\n+    }\n+\n+    @SerializedName(\"user_organizations_url\")\n+    public void setUserOrganizationsUrl(String userOrganizationsUrl) {\n+        this.userOrganizationsUrl = userOrganizationsUrl;\n+    }\n+\n+    @SerializedName(\"user_repositories_url\")\n+    public String getUserRepositoriesUrl() {\n+        return userRepositoriesUrl;\n+    }\n+\n+    @SerializedName(\"user_repositories_url\")\n+    public void setUserRepositoriesUrl(String userRepositoriesUrl) {\n+        this.userRepositoriesUrl = userRepositoriesUrl;\n+    }\n+\n+    @SerializedName(\"user_search_url\")\n+    public String getUserSearchUrl() {\n+        return userSearchUrl;\n+    }\n+\n+    @SerializedName(\"user_search_url\")\n+    public void setUserSearchUrl(String userSearchUrl) {\n+        this.userSearchUrl = userSearchUrl;\n+    }*/\n }"
  },
  {
    "sha": "3d67d6fce2a3af4527d7aa3ba385b2c62c00a6f0",
    "filename": "app/src/main/res/layout/activity_main.xml",
    "status": "modified",
    "additions": 48,
    "deletions": 3,
    "changes": 51,
    "blob_url": "https://github.com/d-yaskevich/RESTDemo/blob/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/res/layout/activity_main.xml",
    "raw_url": "https://github.com/d-yaskevich/RESTDemo/raw/1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7/app/src/main/res/layout/activity_main.xml",
    "contents_url": "https://api.github.com/repos/d-yaskevich/RESTDemo/contents/app/src/main/res/layout/activity_main.xml?ref=1176ee4c2fd78a3e42aedd3019266ba1d9ac70f7",
    "patch": "@@ -21,7 +21,7 @@\n     <androidx.core.widget.NestedScrollView\n         android:id=\"@+id/nsv_response\"\n         android:layout_width=\"0dp\"\n-        android:layout_height=\"150dp\"\n+        android:layout_height=\"80dp\"\n         android:background=\"@color/teal_200\"\n \n         app:layout_constraintLeft_toLeftOf=\"parent\"\n@@ -34,6 +34,7 @@\n             android:layout_width=\"match_parent\"\n             android:layout_height=\"match_parent\"\n             android:padding=\"16dp\"\n+            android:textSize=\"12sp\"\n             tools:text=\"Hello World!\" />\n \n     </androidx.core.widget.NestedScrollView>\n@@ -66,10 +67,10 @@\n         android:layout_height=\"wrap_content\"\n         android:layout_marginTop=\"16dp\"\n         android:layout_marginBottom=\"16dp\"\n-\n         app:layout_constraintEnd_toEndOf=\"parent\"\n         app:layout_constraintStart_toStartOf=\"parent\"\n-        app:layout_constraintTop_toBottomOf=\"@id/btn_get_repos\" />\n+        app:layout_constraintTop_toBottomOf=\"@id/btn_get_repos\"\n+        app:layout_constraintVertical_bias=\"0.09\" />\n \n     <Button\n         android:id=\"@+id/btn_create_project\"\n@@ -84,4 +85,48 @@\n         app:layout_constraintStart_toStartOf=\"parent\"\n         app:layout_constraintTop_toBottomOf=\"@id/rv_repos\" />\n \n+    <Button\n+        android:id=\"@+id/btn_delete\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:onClick=\"deletePost\"\n+        android:text=\"Delete\"\n+\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@id/btn_create_project\" />\n+\n+    <Button\n+        android:id=\"@+id/btn_topic\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:onClick=\"onTopicClick\"\n+        android:text=\"TOPIC\"\n+\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@id/btn_delete\" />\n+\n+    <Button\n+        android:id=\"@+id/btn_Collaboration\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:onClick=\"onPutCollaborationClick\"\n+        android:text=\"Collaboration\"\n+\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@id/btn_topic\" />\n+\n+    <Button\n+        android:id=\"@+id/btn_vulnerability_alerts\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:onClick=\"onPutVulnerabilityAlertsClick\"\n+        android:text=\"Vulnerability Alerts\"\n+\n+        app:layout_constraintEnd_toEndOf=\"parent\"\n+        app:layout_constraintStart_toStartOf=\"parent\"\n+        app:layout_constraintTop_toBottomOf=\"@id/btn_Collaboration\" />\n+\n </androidx.constraintlayout.widget.ConstraintLayout>\n\\ No newline at end of file"
  }
]
