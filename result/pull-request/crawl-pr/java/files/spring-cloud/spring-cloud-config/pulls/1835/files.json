[
  {
    "sha": "642d38705bf688b8602fb144e91d0390f7744a04",
    "filename": "spring-cloud-config-client/src/main/java/org/springframework/cloud/config/client/ConfigServicePropertySourceLocator.java",
    "status": "modified",
    "additions": 27,
    "deletions": 1,
    "changes": 28,
    "blob_url": "https://github.com/spring-cloud/spring-cloud-config/blob/8c9cf4f9255e5203298b952679362341837704db/spring-cloud-config-client/src/main/java/org/springframework/cloud/config/client/ConfigServicePropertySourceLocator.java",
    "raw_url": "https://github.com/spring-cloud/spring-cloud-config/raw/8c9cf4f9255e5203298b952679362341837704db/spring-cloud-config-client/src/main/java/org/springframework/cloud/config/client/ConfigServicePropertySourceLocator.java",
    "contents_url": "https://api.github.com/repos/spring-cloud/spring-cloud-config/contents/spring-cloud-config-client/src/main/java/org/springframework/cloud/config/client/ConfigServicePropertySourceLocator.java?ref=8c9cf4f9255e5203298b952679362341837704db",
    "patch": "@@ -69,14 +69,20 @@\n \n \tprivate ConfigClientProperties defaultProperties;\n \n+\tprivate final String ACTIVE_PROFILES_PROPERTY_NAME = \"spring.profiles.active\";\n+\n \tpublic ConfigServicePropertySourceLocator(ConfigClientProperties defaultProperties) {\n \t\tthis.defaultProperties = defaultProperties;\n \t}\n \n \t@Override\n-\t@Retryable(interceptor = \"configServerRetryInterceptor\")\n \tpublic org.springframework.core.env.PropertySource<?> locate(org.springframework.core.env.Environment environment) {\n \t\tConfigClientProperties properties = this.defaultProperties.override(environment);\n+\t\treturn locate(properties);\n+\t}\n+\n+\t@Retryable(interceptor = \"configServerRetryInterceptor\")\n+\tpublic org.springframework.core.env.PropertySource<?> locate(ConfigClientProperties properties) {\n \t\tCompositePropertySource composite = new OriginTrackedCompositePropertySource(\"configService\");\n \t\tConfigClientRequestTemplateFactory requestTemplateFactory = new ConfigClientRequestTemplateFactory(logger,\n \t\t\t\tproperties);\n@@ -101,6 +107,17 @@ public ConfigServicePropertySourceLocator(ConfigClientProperties defaultProperti\n \t\t\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n \t\t\t\t\t\t\tMap<String, Object> map = translateOrigins(source.getName(),\n \t\t\t\t\t\t\t\t\t(Map<String, Object>) source.getSource());\n+\n+\t\t\t\t\t\t\t// if different profile is activated within the default\n+\t\t\t\t\t\t\t// profile\n+\t\t\t\t\t\t\tboolean relocate = checkIfProfileIsActivatedInDefault(result.getProfiles(), map);\n+\t\t\t\t\t\t\tif (relocate) {\n+\t\t\t\t\t\t\t\tOriginTrackedValue newProfiles = (OriginTrackedValue) map\n+\t\t\t\t\t\t\t\t\t\t.get(ACTIVE_PROFILES_PROPERTY_NAME);\n+\t\t\t\t\t\t\t\tproperties.setProfile(newProfiles.getValue().toString());\n+\t\t\t\t\t\t\t\treturn this.locate(properties); // relocate again\n+\t\t\t\t\t\t\t}\n+\n \t\t\t\t\t\t\tcomposite.addPropertySource(new OriginTrackedMapPropertySource(source.getName(), map));\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n@@ -138,6 +155,15 @@ public ConfigServicePropertySourceLocator(ConfigClientProperties defaultProperti\n \n \t}\n \n+\t// to check if different profile is activated within the default profile\n+\tprivate boolean checkIfProfileIsActivatedInDefault(String[] profiles, Map<String, Object> map) {\n+\t\tList<String> profilesList = Arrays.asList(profiles);\n+\t\treturn (profilesList.size() == 1 && profilesList.get(0).equalsIgnoreCase(\"default\")\n+\t\t\t\t&& map.containsKey(ACTIVE_PROFILES_PROPERTY_NAME)\n+\t\t\t\t&& !(((OriginTrackedValue) map.get(ACTIVE_PROFILES_PROPERTY_NAME))).getValue().toString()\n+\t\t\t\t\t\t.equalsIgnoreCase(\"default\"));\n+\t}\n+\n \t@Override\n \t@Retryable(interceptor = \"configServerRetryInterceptor\")\n \tpublic Collection<org.springframework.core.env.PropertySource<?>> locateCollection("
  }
]
