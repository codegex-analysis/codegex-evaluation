[
  {
    "sha": "0dbe063f13dec22176a59b63adf9b42a18f6f5b9",
    "filename": "documentation/docs/tutorials/data_styling.md",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/MarcusWolschon/osmeditor4android/blob/04068978679c43ae3bff523c6282d8d4c1c97fe9/documentation/docs/tutorials/data_styling.md",
    "raw_url": "https://github.com/MarcusWolschon/osmeditor4android/raw/04068978679c43ae3bff523c6282d8d4c1c97fe9/documentation/docs/tutorials/data_styling.md",
    "contents_url": "https://api.github.com/repos/MarcusWolschon/osmeditor4android/contents/documentation/docs/tutorials/data_styling.md?ref=04068978679c43ae3bff523c6282d8d4c1c97fe9",
    "patch": "@@ -25,7 +25,7 @@ Node styling is limited to the __labelKey__ and __iconPath__ attributes.\n |                           | touchRadius    | \n |                           | scale          | Used with marker_scale, increase/decrease size of various markers\n |                           | length         | User with min_handle_len, defines the minimum length a way segment must have on screen so that the geometry improvement handles are shown\n-|                           | zoom           | Used with icon_zoom_limit, minimum zoom level at which POI icons are still displayed\n+|                           | zoom           | Used with icon_zoom_limit, minimum zoom level at which POI icons are still displayed, and labelZoomLimit for the limit for displaying labels\n |__&lt;feature&gt;__        |                | Feature elements can be nested and each feature can contain one or more other feature elements. Nested elements inherit attributes from their parents. \n |                           | type           | \"way\", \"node\" or \"relation\" to match the corresponding OSM elements, or a name\n |                           | tags           | Tags to use for matching, ignored for named styles, in the format _key_=_value_ or _key_=_*_ for any value. Multiple tags can be added using __&vert;__ as a separator.\n@@ -48,6 +48,7 @@ Node styling is limited to the __labelKey__ and __iconPath__ attributes.\n |                           | arrowStyle     | Reference to a style to use for way arrows                          \n |                           | oneway         | Set this on the referenced arrowStyle if it should have oneway semantics\n |                           | labelKey       | Tag key to use as label if present, magic value \"preset\" will use the preset name.\n+|                           | labelZoomLimit | List for displaying labels on ways, if not set no label will be displayed\n |                           | iconPath       | Path, relative to the directory in which the style file resides, to a PNG format icon, magic value \"preset\" will use the preset icon.\n |__&lt;dash&gt;__           |                | feature sub-element used to define a dash pattern\n |                           | phase          | Phase of the dash"
  },
  {
    "sha": "c6fa864ce55d3d8e7d2708294cee93aed9ed8942",
    "filename": "src/main/assets/styles/Color-round-no-mp.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MarcusWolschon/osmeditor4android/blob/04068978679c43ae3bff523c6282d8d4c1c97fe9/src/main/assets/styles/Color-round-no-mp.xml",
    "raw_url": "https://github.com/MarcusWolschon/osmeditor4android/raw/04068978679c43ae3bff523c6282d8d4c1c97fe9/src/main/assets/styles/Color-round-no-mp.xml",
    "contents_url": "https://api.github.com/repos/MarcusWolschon/osmeditor4android/contents/src/main/assets/styles/Color-round-no-mp.xml?ref=04068978679c43ae3bff523c6282d8d4c1c97fe9",
    "patch": "@@ -163,7 +163,7 @@\n             <interval length=\"2.0\" />\n         </dash>\n     </feature>\n-    <feature type=\"way\" tags=\"highway\" updateWidth=\"true\" widthFactor=\"1.0\" color=\"88888888\" style=\"STROKE\" cap=\"BUTT\" join=\"MITER\" arrowStyle=\"oneway_direction\">\n+    <feature type=\"way\" tags=\"highway\" updateWidth=\"true\" widthFactor=\"1.0\" color=\"88888888\" style=\"STROKE\" cap=\"BUTT\" join=\"MITER\" arrowStyle=\"oneway_direction\" labelZoomLimit=\"20\" >\n         <feature type=\"way\" tags=\"highway=construction\" widthFactor=\"1.0\" color=\"88888888\" />\n         <feature type=\"way\" tags=\"highway=proposed\" widthFactor=\"1.0\" color=\"88888888\" />\n         <feature type=\"way\" tags=\"highway=pedestrian\" widthFactor=\"0.8\" color=\"ff888888\" />"
  },
  {
    "sha": "37c70d9fcbbb8918779c359d9d5cca0bf0296efc",
    "filename": "src/main/assets/styles/Color-round.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MarcusWolschon/osmeditor4android/blob/04068978679c43ae3bff523c6282d8d4c1c97fe9/src/main/assets/styles/Color-round.xml",
    "raw_url": "https://github.com/MarcusWolschon/osmeditor4android/raw/04068978679c43ae3bff523c6282d8d4c1c97fe9/src/main/assets/styles/Color-round.xml",
    "contents_url": "https://api.github.com/repos/MarcusWolschon/osmeditor4android/contents/src/main/assets/styles/Color-round.xml?ref=04068978679c43ae3bff523c6282d8d4c1c97fe9",
    "patch": "@@ -163,7 +163,7 @@\n             <interval length=\"2.0\" />\n         </dash>\n     </feature>\n-    <feature type=\"way\" tags=\"highway\" updateWidth=\"true\" widthFactor=\"1.0\" color=\"88888888\" style=\"STROKE\" cap=\"BUTT\" join=\"MITER\" arrowStyle=\"oneway_direction\">\n+    <feature type=\"way\" tags=\"highway\" updateWidth=\"true\" widthFactor=\"1.0\" color=\"88888888\" style=\"STROKE\" cap=\"BUTT\" join=\"MITER\" arrowStyle=\"oneway_direction\" labelZoomLimit=\"20\" >\n         <feature type=\"way\" tags=\"highway=construction\" widthFactor=\"1.0\" color=\"88888888\" />\n         <feature type=\"way\" tags=\"highway=proposed\" widthFactor=\"1.0\" color=\"88888888\" />\n         <feature type=\"way\" tags=\"highway=pedestrian\" widthFactor=\"0.8\" color=\"ff888888\" />"
  },
  {
    "sha": "0f3728c169010fbba015cb11c6ff118ca111e257",
    "filename": "src/main/assets/styles/Pen-round.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/MarcusWolschon/osmeditor4android/blob/04068978679c43ae3bff523c6282d8d4c1c97fe9/src/main/assets/styles/Pen-round.xml",
    "raw_url": "https://github.com/MarcusWolschon/osmeditor4android/raw/04068978679c43ae3bff523c6282d8d4c1c97fe9/src/main/assets/styles/Pen-round.xml",
    "contents_url": "https://api.github.com/repos/MarcusWolschon/osmeditor4android/contents/src/main/assets/styles/Pen-round.xml?ref=04068978679c43ae3bff523c6282d8d4c1c97fe9",
    "patch": "@@ -163,7 +163,7 @@\n             <interval length=\"2.0\" />\n         </dash>\n     </feature>\n-    <feature type=\"way\" tags=\"highway\" updateWidth=\"true\" widthFactor=\"1.0\" color=\"88888888\" style=\"STROKE\" cap=\"BUTT\" join=\"MITER\" arrowStyle=\"oneway_direction\">\n+    <feature type=\"way\" tags=\"highway\" updateWidth=\"true\" widthFactor=\"1.0\" color=\"88888888\" style=\"STROKE\" cap=\"BUTT\" join=\"MITER\" arrowStyle=\"oneway_direction\" labelZoomLimit=\"20\" >\n         <feature type=\"way\" tags=\"highway=construction\" widthFactor=\"1.0\" color=\"88888888\" />\n         <feature type=\"way\" tags=\"highway=proposed\" widthFactor=\"1.0\" color=\"88888888\" />\n         <feature type=\"way\" tags=\"highway=pedestrian\" widthFactor=\"0.8\" color=\"ff888888\" />"
  },
  {
    "sha": "fade0c6d11ea9963837b1e3e53ae353814dea1ee",
    "filename": "src/main/java/de/blau/android/layer/data/MapOverlay.java",
    "status": "modified",
    "additions": 100,
    "deletions": 50,
    "changes": 150,
    "blob_url": "https://github.com/MarcusWolschon/osmeditor4android/blob/04068978679c43ae3bff523c6282d8d4c1c97fe9/src/main/java/de/blau/android/layer/data/MapOverlay.java",
    "raw_url": "https://github.com/MarcusWolschon/osmeditor4android/raw/04068978679c43ae3bff523c6282d8d4c1c97fe9/src/main/java/de/blau/android/layer/data/MapOverlay.java",
    "contents_url": "https://api.github.com/repos/MarcusWolschon/osmeditor4android/contents/src/main/java/de/blau/android/layer/data/MapOverlay.java?ref=04068978679c43ae3bff523c6282d8d4c1c97fe9",
    "patch": "@@ -28,6 +28,7 @@\n import android.graphics.Paint;\n import android.graphics.Paint.FontMetrics;\n import android.graphics.Path;\n+import android.graphics.PathMeasure;\n import android.graphics.RectF;\n import android.graphics.drawable.BitmapDrawable;\n import android.location.Location;\n@@ -97,22 +98,19 @@\n     public static final int  ICON_SIZE_DP         = 20;\n     private static final int HOUSE_NUMBER_RADIUS  = 10;\n     private static final int ICON_SELECTED_BORDER = 2;\n+    private static final int LABEL_EXTRA          = 40;\n \n-    /**\n-     * zoom level from which on we display icons and house numbers\n-     */\n-    private static final int    SHOW_ICONS_LIMIT        = 15;\n-    public static final int     SHOW_LABEL_LIMIT        = SHOW_ICONS_LIMIT + 5;\n-    protected static final long AUTOPRUNE_MIN_INTERVALL = 10;                  // seconds between autoprunes\n+    protected static final long AUTOPRUNE_MIN_INTERVALL = 10; // seconds between autoprunes\n+    private static final int    PAN_AND_ZOOM_LIMIT      = 17;\n \n     /** half the width/height of a node icon in px */\n     private final int iconRadius;\n     private final int iconSelectedBorder;\n     private final int houseNumberRadius;\n     private final int verticalNumberOffset;\n     private float     maxDownloadSpeed;\n-    protected int     autoPruneNodeLimit = 5000;                // node count for autoprune\n-    private int       panAndZoomLimit    = SHOW_ICONS_LIMIT + 2;\n+    protected int     autoPruneNodeLimit = 5000;              // node count for autoprune\n+    private int       panAndZoomLimit    = PAN_AND_ZOOM_LIMIT;\n \n     private final StorageDelegator delegator;\n     private final Context          context;\n@@ -248,6 +246,10 @@\n     private FeatureStyle labelTextStyleNormalSelected;\n     private FeatureStyle labelTextStyleSmallSelected;\n \n+    // other styling params\n+    private int showIconsLimit;\n+    private int showIconLabelZoomLimit;\n+\n     /** cached zoom level, calculated once per onDraw pass **/\n     private int zoomLevel = 0;\n \n@@ -260,7 +262,8 @@\n     /**\n      * We just need one path object\n      */\n-    private Path path = new Path();\n+    private final Path        path = new Path();\n+    private final PathMeasure pm   = new PathMeasure();\n \n     private LongHashSet handles;\n \n@@ -967,7 +970,7 @@ private void paintNode(@NonNull final Canvas canvas, @NonNull final Node node, f\n                         paintHouseNumber(x, y, canvas, featureStyleThin, featureStyleFontSmall, houseNumber);\n                         return;\n                     }\n-                } else if (zoomLevel > SHOW_LABEL_LIMIT) {\n+                } else if (zoomLevel > showIconLabelZoomLimit) {\n                     paintLabel(x, y, canvas, featureStyleFont, node, nodeFeatureStyleTagged.getPaint().getStrokeWidth(), true);\n                 }\n             }\n@@ -1288,7 +1291,7 @@ private void paintWay(@NonNull final Canvas canvas, @NonNull final Way way, fina\n \n         // draw the way itself\n         if (pointsSize > 2) {\n-            path.reset();\n+            path.rewind();\n             path.moveTo(linePoints[0], linePoints[1]);\n             for (int i = 0; i < pointsSize; i = i + 4) {\n                 path.lineTo(linePoints[i + 2], linePoints[i + 3]);\n@@ -1300,55 +1303,99 @@ private void paintWay(@NonNull final Canvas canvas, @NonNull final Way way, fina\n             canvas.drawPath(path, style.getPaint());\n         }\n \n-        // display icons on closed ways\n-        if (showIcons && showWayIcons && zoomLevel > SHOW_ICONS_LIMIT && way.isClosed()) {\n-            int vs = pointsSize;\n-            if (vs < nodes.size() * 2) {\n-                return;\n-            }\n-            // calc centroid\n-            double A = 0;\n-            double Y = 0;\n-            double X = 0;\n-            double x1 = linePoints[0];\n-            double y1 = linePoints[1];\n-            for (int i = 0; i < vs; i = i + 2) {\n-                double x2 = linePoints[(i + 2) % vs];\n-                double y2 = linePoints[(i + 3) % vs];\n-                double d = x1 * y2 - x2 * y1;\n-                A = A + d;\n-                X = X + (x1 + x2) * d;\n-                Y = Y + (y1 + y2) * d;\n-                x1 = x2;\n-                y1 = y2;\n-            }\n-            if (Util.notZero(A)) {\n-                Y = Y / (3 * A); // NOSONAR nonZero tests for zero\n-                X = X / (3 * A); // NOSONAR nonZero tests for zero\n-                boolean iconDrawn = false;\n-                if (tmpPresets != null) {\n-                    iconDrawn = paintNodeIcon(way, canvas, (float) X, (float) Y, isSelected ? nodeFeatureStyleTaggedSelected : null);\n-                    boolean doLabel = false;\n-                    if (!iconDrawn) {\n-                        String houseNumber = way.getTagWithKey(Tags.KEY_ADDR_HOUSENUMBER);\n-                        if (houseNumber != null && !\"\".equals(houseNumber)) { // draw house-numbers\n-                            paintHouseNumber((float) X, (float) Y, canvas, isSelected ? nodeFeatureStyleThinSelected : nodeFeatureStyleThin,\n-                                    labelFontStyleSmall, houseNumber);\n+        if (way.isClosed()) {\n+            // display icons on closed ways\n+            if (showIcons && showWayIcons && zoomLevel > showIconsLimit) {\n+                int vs = pointsSize;\n+                if (vs < nodes.size() * 2) {\n+                    return;\n+                }\n+                // calc centroid\n+                double A = 0;\n+                double Y = 0;\n+                double X = 0;\n+                double x1 = linePoints[0];\n+                double y1 = linePoints[1];\n+                for (int i = 0; i < vs; i = i + 2) {\n+                    double x2 = linePoints[(i + 2) % vs];\n+                    double y2 = linePoints[(i + 3) % vs];\n+                    double d = x1 * y2 - x2 * y1;\n+                    A = A + d;\n+                    X = X + (x1 + x2) * d;\n+                    Y = Y + (y1 + y2) * d;\n+                    x1 = x2;\n+                    y1 = y2;\n+                }\n+                if (Util.notZero(A)) {\n+                    Y = Y / (3 * A); // NOSONAR nonZero tests for zero\n+                    X = X / (3 * A); // NOSONAR nonZero tests for zero\n+                    boolean iconDrawn = false;\n+                    if (tmpPresets != null) {\n+                        iconDrawn = paintNodeIcon(way, canvas, (float) X, (float) Y, isSelected ? nodeFeatureStyleTaggedSelected : null);\n+                        String label = null;\n+                        if (!iconDrawn) {\n+                            String houseNumber = way.getTagWithKey(Tags.KEY_ADDR_HOUSENUMBER);\n+                            if (houseNumber != null && !\"\".equals(houseNumber)) { // draw house-numbers\n+                                paintHouseNumber((float) X, (float) Y, canvas, isSelected ? nodeFeatureStyleThinSelected : nodeFeatureStyleThin,\n+                                        labelFontStyleSmall, houseNumber);\n+                            } else {\n+                                label = getLabel(way, style);\n+                            }\n                         } else {\n-                            doLabel = way.hasTagKey(Tags.KEY_NAME);\n+                            label = zoomLevel >= showIconLabelZoomLimit ? getLabel(way, style) : null;\n+                        }\n+                        if (label != null) {\n+                            Paint p = nodeFeatureStyleTaggedSelected.getPaint();\n+                            paintLabel((float) X, (float) Y, canvas, labelFontStyle, way, iconDrawn ? p.getStrokeWidth() : 0, iconDrawn);\n                         }\n+                    }\n+                }\n+            }\n+        } else if (zoomLevel >= style.getLabelZoomLimit()) {\n+            String label = getLabel(way, style);\n+            if (label != null) {\n+                for (int i = 0; i < pointsSize; i = i + 4) {\n+                    path.rewind();\n+                    final float startX = linePoints[i];\n+                    final float endX = linePoints[i + 2];\n+                    if (startX > endX) {\n+                        path.moveTo(endX, linePoints[i + 3]);\n+                        path.lineTo(startX, linePoints[i + 1]);\n                     } else {\n-                        doLabel = zoomLevel > SHOW_LABEL_LIMIT && way.hasTagKey(Tags.KEY_NAME);\n+                        path.moveTo(startX, linePoints[i + 1]);\n+                        path.lineTo(endX, linePoints[i + 3]);\n                     }\n-                    if (doLabel) {\n-                        Paint p = nodeFeatureStyleTaggedSelected.getPaint();\n-                        paintLabel((float) X, (float) Y, canvas, labelFontStyle, way, iconDrawn ? p.getStrokeWidth() : 0, iconDrawn);\n+                    float labelWidth = labelFontStyle.getPaint().measureText(label);\n+                    pm.setPath(path, false); // path is still correct here\n+                    int repeat = Math.round(pm.getLength() / (2 * (labelWidth + LABEL_EXTRA)));\n+                    if (repeat > 0) {\n+                        FontMetrics fm = labelFontStyle.getPaint().getFontMetrics();\n+                        float offset = (fm.top + fm.bottom) / 2;\n+                        float hInc = pm.getLength() / repeat;\n+                        float hOffset = (hInc - labelWidth) / 2;\n+                        for (int j = 0; j < repeat; j++) {\n+                            canvas.drawTextOnPath(label, path, hOffset, -offset, labelFontStyle.getPaint());\n+                            hOffset += hInc;\n+                        }\n                     }\n                 }\n             }\n         }\n     }\n \n+    /**\n+     * Get a label for a way\n+     * \n+     * @param way the Way\n+     * @param style the FeatureStyle\n+     * @return the label or null\n+     */\n+    @Nullable\n+    private String getLabel(@NonNull final Way way, @NonNull FeatureStyle style) {\n+        String labelKey = style.getLabelKey() != null ? style.getLabelKey() : Tags.KEY_NAME;\n+        return way.getTagWithKey(labelKey);\n+    }\n+\n     /**\n      * Paints the given way on the canvas with the \"hidden\" style.\n      * \n@@ -1549,6 +1596,9 @@ public void updateStyle() {\n         wayFeatureStyleHidden = DataStyle.getInternal(DataStyle.HIDDEN_WAY);\n         wayFeatureStyleRelation = DataStyle.getInternal(DataStyle.SELECTED_RELATION_WAY);\n         handlePaint = DataStyle.getInternal(DataStyle.HANDLE).getPaint();\n+\n+        showIconsLimit = DataStyle.getCurrent().getIconZoomLimit();\n+        showIconLabelZoomLimit = DataStyle.getCurrent().getIconLabelZoomLimit();\n     }\n \n     /**"
  },
  {
    "sha": "1062a18f82aa992bb6ca164c6f42aca84e811701",
    "filename": "src/main/java/de/blau/android/resources/DataStyle.java",
    "status": "modified",
    "additions": 49,
    "deletions": 1,
    "changes": 50,
    "blob_url": "https://github.com/MarcusWolschon/osmeditor4android/blob/04068978679c43ae3bff523c6282d8d4c1c97fe9/src/main/java/de/blau/android/resources/DataStyle.java",
    "raw_url": "https://github.com/MarcusWolschon/osmeditor4android/raw/04068978679c43ae3bff523c6282d8d4c1c97fe9/src/main/java/de/blau/android/resources/DataStyle.java",
    "contents_url": "https://api.github.com/repos/MarcusWolschon/osmeditor4android/contents/src/main/java/de/blau/android/resources/DataStyle.java?ref=04068978679c43ae3bff523c6282d8d4c1c97fe9",
    "patch": "@@ -164,6 +164,7 @@\n     private static final String NAME_ATTR             = \"name\";\n     private static final String TAGS_ATTR             = \"tags\";\n     private static final String LABEL_KEY_ATTR        = \"labelKey\";\n+    private static final String LABEL_ZOOM_LIMIT_ATTR = \"labelZoomLimit\";\n     private static final String ICON_PATH_ATTR        = \"iconPath\";\n     private static final String PRESET                = \"preset\";\n \n@@ -187,6 +188,7 @@\n         private Boolean           closed         = null;\n         private String            labelKey       = null;\n         private String            iconPath       = null;\n+        private int               labelZoomLimit = Integer.MAX_VALUE;\n \n         List<FeatureStyle> cascadedStyles = null;\n \n@@ -259,6 +261,7 @@\n             oneway = fp.oneway;\n             closed = fp.closed;\n             labelKey = fp.labelKey;\n+            setLabelZoomLimit(fp.getLabelZoomLimit());\n             iconPath = fp.iconPath;\n             cascadedStyles = null;\n         }\n@@ -556,6 +559,24 @@ public String getLabelKey() {\n             return labelKey;\n         }\n \n+        /**\n+         * Get the limit from which on we display labels\n+         * \n+         * @return the labelZoomLimit\n+         */\n+        public int getLabelZoomLimit() {\n+            return labelZoomLimit;\n+        }\n+\n+        /**\n+         * Set the limit from which on we display labels\n+         * \n+         * @param labelZoomLimit the labelZoomLimit to set\n+         */\n+        public void setLabelZoomLimit(int labelZoomLimit) {\n+            this.labelZoomLimit = labelZoomLimit;\n+        }\n+\n         /**\n          * Check if labelkey is set to \"preset\"\n          * \n@@ -615,6 +636,9 @@ public void toXml(@NonNull final XmlSerializer s) throws IllegalArgumentExceptio\n             if (labelKey != null) {\n                 s.attribute(\"\", LABEL_KEY_ATTR, labelKey);\n             }\n+            if (getLabelZoomLimit() < Integer.MAX_VALUE) {\n+                s.attribute(\"\", LABEL_ZOOM_LIMIT_ATTR, Integer.toString(getLabelZoomLimit()));\n+            }\n             if (iconPath != null) {\n                 s.attribute(\"\", ICON_PATH_ATTR, iconPath);\n             }\n@@ -680,6 +704,12 @@ public String toString() {\n     private static final int TOLERANCE_ALPHA   = 40;\n     private static final int TOLERANCE_ALPHA_2 = 128;\n \n+    /**\n+     * zoom level from which on we display icons and house numbers\n+     */\n+    private static final int DEFAULT_SHOW_ICONS_LIMIT      = 15;\n+    private static final int DEFAULT_SHOW_ICON_LABEL_LIMIT = DEFAULT_SHOW_ICONS_LIMIT + 5;\n+\n     /**\n      * GPS arrow\n      */\n@@ -717,6 +747,7 @@ public String toString() {\n     private float largDragToleranceRadius;\n     private float minLenForHandle;\n     private int   iconZoomLimit;\n+    private int   iconLabelZoomLimit;\n \n     private final Context ctx;\n     private String        iconDirPath;\n@@ -758,7 +789,8 @@ private void init() {\n         wayToleranceValue = Density.dpToPx(ctx, 40f);\n         largDragToleranceRadius = Density.dpToPx(ctx, 100f);\n         minLenForHandle = 5 * nodeToleranceValue;\n-        iconZoomLimit = 15;\n+        iconZoomLimit = DEFAULT_SHOW_ICONS_LIMIT;\n+        iconLabelZoomLimit = DEFAULT_SHOW_ICON_LABEL_LIMIT;\n \n         createOrientationPath(1.0f);\n         createWayPointPath(1.0f);\n@@ -1233,6 +1265,13 @@ public int getIconZoomLimit() {\n         return iconZoomLimit;\n     }\n \n+    /**\n+     * @return the iconLabelZoomLimit\n+     */\n+    public int getIconLabelZoomLimit() {\n+        return iconLabelZoomLimit;\n+    }\n+\n     /**\n      * Get the minimum length of a segment to show a geometry improvement handle on it\n      * \n@@ -1442,6 +1481,10 @@ public void startElement(final String uri, final String element, final String qN\n                         if (zoomStr != null) {\n                             iconZoomLimit = Integer.parseInt(zoomStr);\n                         }\n+                        String labelZoomLimitString = atts.getValue(LABEL_ZOOM_LIMIT_ATTR);\n+                        if (labelZoomLimitString != null) {\n+                            iconLabelZoomLimit = Integer.parseInt(labelZoomLimitString);\n+                        }\n                         return;\n                     default:\n                         Log.e(DEBUG_TAG, \"unknown config type \" + type);\n@@ -1556,6 +1599,11 @@ public void startElement(final String uri, final String element, final String qN\n \n                 tempFeatureStyle.setLabelKey(atts.getValue(LABEL_KEY_ATTR));\n \n+                String labelZoomLimitString = atts.getValue(LABEL_ZOOM_LIMIT_ATTR);\n+                if (labelZoomLimitString != null) {\n+                    tempFeatureStyle.setLabelZoomLimit(Integer.parseInt(labelZoomLimitString));\n+                }\n+\n                 tempFeatureStyle.setIconPath(atts.getValue(ICON_PATH_ATTR));\n \n                 validationCode = 0; // reset"
  }
]
