[
  {
    "sha": "b78f40a96df96367bfa8e48aeeeb91eff1e9a14e",
    "filename": "sormas-api/src/main/java/de/symeda/sormas/api/i18n/Captions.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-api/src/main/java/de/symeda/sormas/api/i18n/Captions.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-api/src/main/java/de/symeda/sormas/api/i18n/Captions.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-api/src/main/java/de/symeda/sormas/api/i18n/Captions.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -163,6 +163,9 @@\n \tString bulkInvestigationStatus = \"bulkInvestigationStatus\";\n \tString bulkLostToFollowUp = \"bulkLostToFollowUp\";\n \tString bulkSurveillanceOfficer = \"bulkSurveillanceOfficer\";\n+\tString bulkTaskassignee = \"bulkTaskassignee\";\n+\tString bulkTaskPriority = \"bulkTaskPriority\";\n+\tString bulkTaskStatus = \"bulkTaskStatus\";\n \tString Campaign = \"Campaign\";\n \tString Campaign_area = \"Campaign.area\";\n \tString Campaign_community = \"Campaign.community\";"
  },
  {
    "sha": "fb8ba9fa838dceea0f0a66f9fc855db601772edc",
    "filename": "sormas-api/src/main/java/de/symeda/sormas/api/i18n/Strings.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-api/src/main/java/de/symeda/sormas/api/i18n/Strings.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-api/src/main/java/de/symeda/sormas/api/i18n/Strings.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-api/src/main/java/de/symeda/sormas/api/i18n/Strings.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -65,6 +65,8 @@\n \tString confirmationArchivePointsOfEntry = \"confirmationArchivePointsOfEntry\";\n \tString confirmationArchiveRegion = \"confirmationArchiveRegion\";\n \tString confirmationArchiveRegions = \"confirmationArchiveRegions\";\n+\tString confirmationArchiveTask = \"confirmationArchiveTask\";\n+\tString confirmationArchiveTasks = \"confirmationArchiveTasks\";\n \tString confirmationCancelExternalFollowUpPopup = \"confirmationCancelExternalFollowUpPopup\";\n \tString confirmationCancelFollowUp = \"confirmationCancelFollowUp\";\n \tString confirmationChangeCaseDisease = \"confirmationChangeCaseDisease\";\n@@ -90,6 +92,8 @@\n \tString confirmationDearchivePointsOfEntry = \"confirmationDearchivePointsOfEntry\";\n \tString confirmationDearchiveRegion = \"confirmationDearchiveRegion\";\n \tString confirmationDearchiveRegions = \"confirmationDearchiveRegions\";\n+\tString confirmationDearchiveTask = \"confirmationDearchiveTask\";\n+\tString confirmationDearchiveTasks = \"confirmationDearchiveTasks\";\n \tString confirmationDeleteCases = \"confirmationDeleteCases\";\n \tString confirmationDeleteContacts = \"confirmationDeleteContacts\";\n \tString confirmationDeleteEntity = \"confirmationDeleteEntity\";\n@@ -464,6 +468,8 @@\n \tString headingSurveillanceReports = \"headingSurveillanceReports\";\n \tString headingSymptomJournalAccountCreation = \"headingSymptomJournalAccountCreation\";\n \tString headingSyncUsers = \"headingSyncUsers\";\n+\tString headingTasksArchived = \"headingTasksArchived\";\n+\tString headingTasksDearchived = \"headingTasksDearchived\";\n \tString headingTasksDeleted = \"headingTasksDeleted\";\n \tString headingTemplateNotAvailable = \"headingTemplateNotAvailable\";\n \tString headingTests = \"headingTests\";\n@@ -814,7 +820,10 @@\n \tString messageSymptomsVisitHint = \"messageSymptomsVisitHint\";\n \tString messageSystemFollowUpCanceled = \"messageSystemFollowUpCanceled\";\n \tString messageSystemFollowUpCanceledByDropping = \"messageSystemFollowUpCanceledByDropping\";\n+\tString messageTasksArchived = \"messageTasksArchived\";\n+\tString messageTasksDearchived = \"messageTasksDearchived\";\n \tString messageTasksDeleted = \"messageTasksDeleted\";\n+\tString messageTasksEdited = \"messageTasksEdited\";\n \tString messageTemplateNotAvailable = \"messageTemplateNotAvailable\";\n \tString messageTreatmentCreated = \"messageTreatmentCreated\";\n \tString messageTreatmentSaved = \"messageTreatmentSaved\";"
  },
  {
    "sha": "a1d917eb8c281efcdb09117a1baa5140d38214e1",
    "filename": "sormas-api/src/main/java/de/symeda/sormas/api/task/TaskFacade.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-api/src/main/java/de/symeda/sormas/api/task/TaskFacade.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-api/src/main/java/de/symeda/sormas/api/task/TaskFacade.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-api/src/main/java/de/symeda/sormas/api/task/TaskFacade.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -62,4 +62,6 @@\n \tList<TaskIndexDto> getIndexList(TaskCriteria criteria, Integer first, Integer max, List<SortProperty> sortProperties);\n \n \tvoid sendNewAndDueTaskMessages();\n+\n+\tvoid updateArchived(List<String> taskUuids, boolean archived);\n }"
  },
  {
    "sha": "f8afcdf6f4ce8364141a8fc3cbce3685bccaa058",
    "filename": "sormas-api/src/main/resources/captions.properties",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-api/src/main/resources/captions.properties",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-api/src/main/resources/captions.properties",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-api/src/main/resources/captions.properties?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -223,6 +223,9 @@ bulkFacility=Change facility\n bulkInvestigationStatus=Change investigation status\n bulkLostToFollowUp=Set to lost to follow-up\n bulkSurveillanceOfficer=Change surveillance officer\n+bulkTaskStatus=Change task status\n+bulkTaskassignee=Change assignee\n+bulkTaskPriority=Change priority\n \n # Campaign\n campaignActiveCampaigns=Active campaigns"
  },
  {
    "sha": "02f86c003a140bdeed2bb9da1ceb35300c585214",
    "filename": "sormas-api/src/main/resources/strings.properties",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-api/src/main/resources/strings.properties",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-api/src/main/resources/strings.properties",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-api/src/main/resources/strings.properties?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -111,6 +111,8 @@ confirmationArchiveCase = Are you sure you want to archive this case? This will\n confirmationArchiveCases = Are you sure you want to archive all %d selected cases?\n confirmationArchiveEvent = Are you sure you want to archive this event? This will not remove it from the system or any statistics, but only hide it from the normal event directory.\n confirmationArchiveEvents = Are you sure you want to archive all %d selected events?\n+confirmationArchiveTask = Are you sure you want to archive all %d selected tasks?\n+confirmationArchiveTasks = Are you sure you want to archive this task? This will not remove it from the system or any statistics, but only hide it from the normal task management.\n confirmationCancelFollowUp = Are you sure you want to cancel the follow-up of all %d selected contacts?\n confirmationChangeCaseDisease = Really change case disease?\n confirmationDearchiveCampaign = Are you sure you want to de-archive this campaign? This will make it appear in the normal campaign directory again.\n@@ -167,6 +169,8 @@ confirmationArchiveFacilities = Are you sure you want to archive all %d selected\n confirmationDearchiveFacilities = Are you sure you want to de-archive all %d selected facilities?\n confirmationArchiveLaboratories = Are you sure you want to archive all %d selected laboratories?\n confirmationDearchiveLaboratories = Are you sure you want to de-archive all %d selected laboratories?\n+confirmationDearchiveTask = Are you sure you want to de-archive this task? This will make it appear in the normal task directory again.\n+confirmationDearchiveTasks = Are you sure you want to de-archive all %d selected tasks?\n confirmationArchivePointsOfEntry = Are you sure you want to archive all %d selected points of entry?\n confirmationDearchivePointsOfEntry = Are you sure you want to de-archive all %d selected points of entry?\n confirmationContactSourceCaseDiscardUnsavedChanges = Changing or removing the source case of a contact will discard all unsaved changes you have made to the contact. Are you sure you want to continue?\n@@ -456,6 +460,8 @@ headingSetOutbreakStatus = Set status of all districts:\n headingShowLabMessage = Lab message\n headingSignsAndSymptoms = Clinical Signs and Symptoms\n headingSyncUsers = Sync Users\n+headingTasksArchived = Tasks archived\n+headingTasksDearchived = Tasks de-archived\n headingTasksDeleted = Tasks deleted\n headingTemplateNotAvailable = Template not available\n headingTests = Pathogen tests\n@@ -784,6 +790,9 @@ messageSpecifyFilterAttributes = Please specify all selected filter attributes a\n messageSpecifyRowAttribute = Please specify the row attribute you have chosen for the visualization\n messageSymptomsHint = <i>Please tick an answer for ALL symptoms indicating if they occurred at any point in time during this illness:</i> \n messageSymptomsVisitHint = <i>Please tick an answer for ALL symptoms indicating if they were present at the time of this visit:</i>\n+messageTasksArchived = All selected tasks have been archived\n+messageTasksEdited = All tasks have been edited\n+messageTasksDearchived = All selected tasks have been de-archived\n messageTasksDeleted = All selected tasks have been deleted\n messageTemplateNotAvailable = The template file is not available. Please contact an admin and tell them about this issue.\n messageTreatmentCreated = Treatment created"
  },
  {
    "sha": "73cb085b0ed9dc7ab2e73c50103574531e51d9fe",
    "filename": "sormas-app/app/src/main/java/de/symeda/sormas/app/backend/task/TaskDao.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-app/app/src/main/java/de/symeda/sormas/app/backend/task/TaskDao.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-app/app/src/main/java/de/symeda/sormas/app/backend/task/TaskDao.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-app/app/src/main/java/de/symeda/sormas/app/backend/task/TaskDao.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -329,4 +329,16 @@ public long countByCriteria(TaskCriteria criteria) {\n \t\tqueryBuilder.setWhere(where);\n \t\treturn queryBuilder;\n \t}\n+\n+\tpublic void deleteTaskAndAllDependingEntities(String taskUuid) throws SQLException {\n+\t\tTask task = queryUuidWithEmbedded(taskUuid);\n+\n+\t\t// Cancel if not in local database\n+\t\tif (task == null) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t// Delete event\n+\t\tdeleteCascade(task);\n+\t}\n }"
  },
  {
    "sha": "272255de00a3734c06209a79abdbcd5a97cadc1b",
    "filename": "sormas-app/app/src/main/java/de/symeda/sormas/app/rest/SynchronizeDataAsync.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-app/app/src/main/java/de/symeda/sormas/app/rest/SynchronizeDataAsync.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-app/app/src/main/java/de/symeda/sormas/app/rest/SynchronizeDataAsync.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-app/app/src/main/java/de/symeda/sormas/app/rest/SynchronizeDataAsync.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -448,6 +448,12 @@ private void pullAndRemoveArchivedUuidsSince(Date since) throws NoConnectionExce\n \t\t\t\tDatabaseHelper.getEventDao().deleteEventAndAllDependingEntities(eventUuid);\n \t\t\t}\n \n+\t\t\t// Tasks\n+\t\t\tList<String> taskUuids = executeUuidCall(RetroProvider.getTaskFacade().pullArchivedUuidsSince(since != null ? since.getTime() : 0));\n+\t\t\tfor (String taskUuid : taskUuids) {\n+\t\t\t\tDatabaseHelper.getTaskDao().deleteTaskAndAllDependingEntities(taskUuid);\n+\t\t\t}\n+\n \t\t\t// Inactive outbreaks\n \t\t\tList<String> outbreakUuids =\n \t\t\t\texecuteUuidCall(RetroProvider.getOutbreakFacade().pullInactiveUuidsSince(since != null ? since.getTime() : 0));"
  },
  {
    "sha": "f8c0bd6eed7f5297f3b6c9fa97de2ad3d21936d3",
    "filename": "sormas-app/app/src/main/java/de/symeda/sormas/app/rest/TaskFacadeRetro.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-app/app/src/main/java/de/symeda/sormas/app/rest/TaskFacadeRetro.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-app/app/src/main/java/de/symeda/sormas/app/rest/TaskFacadeRetro.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-app/app/src/main/java/de/symeda/sormas/app/rest/TaskFacadeRetro.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -41,4 +41,7 @@\n \n \t@GET(\"tasks/uuids\")\n \tCall<List<String>> pullUuids();\n+\n+\t@GET(\"tasks/archived/{since}\")\n+\tCall<List<String>> pullArchivedUuidsSince(@Path(\"since\") long since);\n }"
  },
  {
    "sha": "9643dc5a17b957dbd576a6c23953deddcbaa17e8",
    "filename": "sormas-backend/src/main/java/de/symeda/sormas/backend/task/Task.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-backend/src/main/java/de/symeda/sormas/backend/task/Task.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-backend/src/main/java/de/symeda/sormas/backend/task/Task.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-backend/src/main/java/de/symeda/sormas/backend/task/Task.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -65,6 +65,7 @@\n \tpublic static final String TASK_TYPE = \"taskType\";\n \tpublic static final String CLOSED_LAT = \"closedLat\";\n \tpublic static final String CLOSED_LON = \"closedLon\";\n+\tpublic static final String ARCHIVED = \"archived\";\n \n \tprivate TaskContext taskContext;\n \tprivate Case caze;\n@@ -88,6 +89,8 @@\n \tprivate Double closedLon;\n \tprivate Float closedLatLonAccuracy;\n \n+\tprivate boolean archived;\n+\n \t@Enumerated(EnumType.STRING)\n \tpublic TaskContext getTaskContext() {\n \t\treturn taskContext;\n@@ -247,4 +250,12 @@ public void setClosedLatLonAccuracy(Float closedLatLonAccuracy) {\n \t\tthis.closedLatLonAccuracy = closedLatLonAccuracy;\n \t}\n \n+\t@Column\n+\tpublic boolean isArchived() {\n+\t\treturn archived;\n+\t}\n+\n+\tpublic void setArchived(boolean archived) {\n+\t\tthis.archived = archived;\n+\t}\n }"
  },
  {
    "sha": "30e946497cc37233eda17e0634447ce8f3905d3f",
    "filename": "sormas-backend/src/main/java/de/symeda/sormas/backend/task/TaskFacadeEjb.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-backend/src/main/java/de/symeda/sormas/backend/task/TaskFacadeEjb.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-backend/src/main/java/de/symeda/sormas/backend/task/TaskFacadeEjb.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-backend/src/main/java/de/symeda/sormas/backend/task/TaskFacadeEjb.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -104,6 +104,7 @@\n @Stateless(name = \"TaskFacade\")\n public class TaskFacadeEjb implements TaskFacade {\n \n+\tprivate static final int ARCHIVE_BATCH_SIZE = 1000;\n \tprivate final Logger logger = LoggerFactory.getLogger(getClass());\n \n \t@PersistenceContext(unitName = ModelConstants.PERSISTENCE_UNIT_NAME)\n@@ -730,6 +731,11 @@ public void sendNewAndDueTaskMessages() {\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic void updateArchived(List<String> taskUuids, boolean archived) {\n+\t\tIterableHelper.executeBatched(taskUuids, ARCHIVE_BATCH_SIZE, e -> taskService.updateArchived(e, archived));\n+\t}\n+\n \t@LocalBean\n \t@Stateless\n \tpublic static class TaskFacadeEjbLocal extends TaskFacadeEjb {"
  },
  {
    "sha": "a225d2e8039b7c97cab0c8cf35c04c5f6acf2d40",
    "filename": "sormas-backend/src/main/java/de/symeda/sormas/backend/task/TaskService.java",
    "status": "modified",
    "additions": 38,
    "deletions": 13,
    "changes": 51,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-backend/src/main/java/de/symeda/sormas/backend/task/TaskService.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-backend/src/main/java/de/symeda/sormas/backend/task/TaskService.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-backend/src/main/java/de/symeda/sormas/backend/task/TaskService.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -17,6 +17,8 @@\n  *******************************************************************************/\n package de.symeda.sormas.backend.task;\n \n+import java.sql.Timestamp;\n+import java.time.Instant;\n import java.util.ArrayList;\n import java.util.Date;\n import java.util.List;\n@@ -25,8 +27,11 @@\n import javax.ejb.EJB;\n import javax.ejb.LocalBean;\n import javax.ejb.Stateless;\n+import javax.ejb.TransactionAttribute;\n+import javax.ejb.TransactionAttributeType;\n import javax.persistence.criteria.CriteriaBuilder;\n import javax.persistence.criteria.CriteriaQuery;\n+import javax.persistence.criteria.CriteriaUpdate;\n import javax.persistence.criteria.Expression;\n import javax.persistence.criteria.From;\n import javax.persistence.criteria.Join;\n@@ -215,7 +220,8 @@ public Predicate buildCriteriaFilter(TaskCriteria taskCriteria, CriteriaBuilder\n \t\t\tfilter = CriteriaBuilderHelper.and(cb, filter, cb.equal(joins.getAssignee().get(User.UUID), taskCriteria.getAssigneeUser().getUuid()));\n \t\t}\n \t\tif (taskCriteria.getExcludeAssigneeUser() != null) {\n-\t\t\tfilter = CriteriaBuilderHelper.and(cb, filter, cb.notEqual(joins.getAssignee().get(User.UUID), taskCriteria.getExcludeAssigneeUser().getUuid()));\n+\t\t\tfilter = CriteriaBuilderHelper\n+\t\t\t\t.and(cb, filter, cb.notEqual(joins.getAssignee().get(User.UUID), taskCriteria.getExcludeAssigneeUser().getUuid()));\n \t\t}\n \t\tif (taskCriteria.getCaze() != null) {\n \t\t\tfilter = CriteriaBuilderHelper.and(cb, filter, cb.equal(joins.getCaze().get(Case.UUID), taskCriteria.getCaze().getUuid()));\n@@ -224,7 +230,8 @@ public Predicate buildCriteriaFilter(TaskCriteria taskCriteria, CriteriaBuilder\n \t\t\tfilter = CriteriaBuilderHelper.and(cb, filter, cb.equal(joins.getContact().get(Contact.UUID), taskCriteria.getContact().getUuid()));\n \t\t}\n \t\tif (taskCriteria.getContactPerson() != null) {\n-\t\t\tfilter = CriteriaBuilderHelper.and(cb, filter, cb.equal(joins.getContactPerson().get(User.UUID), taskCriteria.getContactPerson().getUuid()));\n+\t\t\tfilter =\n+\t\t\t\tCriteriaBuilderHelper.and(cb, filter, cb.equal(joins.getContactPerson().get(User.UUID), taskCriteria.getContactPerson().getUuid()));\n \t\t}\n \t\tif (taskCriteria.getEvent() != null) {\n \t\t\tfilter = CriteriaBuilderHelper.and(cb, filter, cb.equal(joins.getEvent().get(Event.UUID), taskCriteria.getEvent().getUuid()));\n@@ -249,6 +256,7 @@ public Predicate buildCriteriaFilter(TaskCriteria taskCriteria, CriteriaBuilder\n \t\t\t\t\tcb,\n \t\t\t\t\tfilter,\n \t\t\t\t\tcb.or(\n+\t\t\t\t\t\tcb.isTrue(from.get(Task.ARCHIVED)),\n \t\t\t\t\t\tcb.and(cb.equal(from.get(Task.TASK_CONTEXT), TaskContext.CASE), cb.equal(joins.getCaze().get(Case.ARCHIVED), true)),\n \t\t\t\t\t\tcb.and(cb.equal(from.get(Task.TASK_CONTEXT), TaskContext.CONTACT), cb.equal(joins.getContactCase().get(Case.ARCHIVED), true)),\n \t\t\t\t\t\tcb.and(cb.equal(from.get(Task.TASK_CONTEXT), TaskContext.EVENT), cb.equal(joins.getEvent().get(Event.ARCHIVED), true))));\n@@ -330,17 +338,19 @@ private Predicate buildActiveTasksFilter(CriteriaBuilder cb, Root<Task> from) {\n \t\tJoin<Contact, Case> contactCaze = contact.join(Contact.CAZE, JoinType.LEFT);\n \t\tJoin<Task, Event> event = from.join(Task.EVENT, JoinType.LEFT);\n \n-\t\treturn cb.or(\n-\t\t\tcb.equal(from.get(Task.TASK_CONTEXT), TaskContext.GENERAL),\n-\t\t\tcb.and(\n-\t\t\t\tcb.equal(from.get(Task.TASK_CONTEXT), TaskContext.CASE),\n-\t\t\t\tcb.or(cb.equal(caze.get(Case.ARCHIVED), false), cb.isNull(caze.get(Case.ARCHIVED)))),\n-\t\t\tcb.and(\n-\t\t\t\tcb.equal(from.get(Task.TASK_CONTEXT), TaskContext.CONTACT),\n-\t\t\t\tcb.or(cb.equal(contactCaze.get(Case.ARCHIVED), false), cb.isNull(contactCaze.get(Case.ARCHIVED)))),\n-\t\t\tcb.and(\n-\t\t\t\tcb.equal(from.get(Task.TASK_CONTEXT), TaskContext.EVENT),\n-\t\t\t\tcb.or(cb.equal(event.get(Event.ARCHIVED), false), cb.isNull(event.get(Event.ARCHIVED)))));\n+\t\treturn cb.and(\n+\t\t\tcb.isFalse(from.get(Task.ARCHIVED)),\n+\t\t\tcb.or(\n+\t\t\t\tcb.equal(from.get(Task.TASK_CONTEXT), TaskContext.GENERAL),\n+\t\t\t\tcb.and(\n+\t\t\t\t\tcb.equal(from.get(Task.TASK_CONTEXT), TaskContext.CASE),\n+\t\t\t\t\tcb.or(cb.equal(caze.get(Case.ARCHIVED), false), cb.isNull(caze.get(Case.ARCHIVED)))),\n+\t\t\t\tcb.and(\n+\t\t\t\t\tcb.equal(from.get(Task.TASK_CONTEXT), TaskContext.CONTACT),\n+\t\t\t\t\tcb.or(cb.equal(contactCaze.get(Case.ARCHIVED), false), cb.isNull(contactCaze.get(Case.ARCHIVED)))),\n+\t\t\t\tcb.and(\n+\t\t\t\t\tcb.equal(from.get(Task.TASK_CONTEXT), TaskContext.EVENT),\n+\t\t\t\t\tcb.or(cb.equal(event.get(Event.ARCHIVED), false), cb.isNull(event.get(Event.ARCHIVED))))));\n \t}\n \n \tpublic Task buildTask(User creatorUser) {\n@@ -398,4 +408,19 @@ public User getTaskAssignee(Contact contact) throws TaskCreationException {\n \n \t\treturn assignee;\n \t}\n+\n+\t@TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)\n+\tpublic void updateArchived(List<String> taskUuids, boolean archived) {\n+\n+\t\tCriteriaBuilder cb = em.getCriteriaBuilder();\n+\t\tCriteriaUpdate<Task> cu = cb.createCriteriaUpdate(Task.class);\n+\t\tRoot<Task> root = cu.from(Task.class);\n+\n+\t\tcu.set(Task.CHANGE_DATE, Timestamp.from(Instant.now()));\n+\t\tcu.set(root.get(Task.ARCHIVED), archived);\n+\n+\t\tcu.where(root.get(Task.UUID).in(taskUuids));\n+\n+\t\tem.createQuery(cu).executeUpdate();\n+\t}\n }"
  },
  {
    "sha": "78d96300b04f6bf246ff244558cf43b380e0f0d4",
    "filename": "sormas-backend/src/main/resources/sql/sormas_schema.sql",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-backend/src/main/resources/sql/sormas_schema.sql",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-backend/src/main/resources/sql/sormas_schema.sql",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-backend/src/main/resources/sql/sormas_schema.sql?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -6822,4 +6822,10 @@ ALTER TABLE cases\n \n INSERT INTO schema_version (version_number, comment) VALUES (344, 'Add a \"sampling reason\" field in the sample #4555');\n \n+-- 2020-03-03 Add archived to task #3430\n+ALTER TABLE task ADD COLUMN archived boolean NOT NULL DEFAULT false;\n+ALTER TABLE task_history ADD COLUMN archived boolean NOT NULL DEFAULT false;\n+\n+INSERT INTO schema_version (version_number, comment) VALUES (345, 'Add archived to task #3430');\n+\n -- *** Insert new sql commands BEFORE this line ***"
  },
  {
    "sha": "e10a1919fa34763d508048f09ab0a67da8a68431",
    "filename": "sormas-ui/src/main/java/de/symeda/sormas/ui/task/BulkTaskDataForm.java",
    "status": "added",
    "additions": 169,
    "deletions": 0,
    "changes": 169,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-ui/src/main/java/de/symeda/sormas/ui/task/BulkTaskDataForm.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-ui/src/main/java/de/symeda/sormas/ui/task/BulkTaskDataForm.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-ui/src/main/java/de/symeda/sormas/ui/task/BulkTaskDataForm.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -0,0 +1,169 @@\n+/*******************************************************************************\n+ * SORMAS® - Surveillance Outbreak Response Management & Analysis System\n+ * Copyright © 2016-2018 Helmholtz-Zentrum für Infektionsforschung GmbH (HZI)\n+ *\n+ * This program is free software: you can redistribute it and/or modify\n+ * it under the terms of the GNU General Public License as published by\n+ * the Free Software Foundation, either version 3 of the License, or\n+ * (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU General Public License\n+ * along with this program. If not, see <https://www.gnu.org/licenses/>.\n+ *******************************************************************************/\n+package de.symeda.sormas.ui.task;\n+\n+import static de.symeda.sormas.ui.utils.CssStyles.VSPACE_4;\n+import static de.symeda.sormas.ui.utils.LayoutUtil.fluidRowLocs;\n+import static de.symeda.sormas.ui.utils.LayoutUtil.fluidRowLocsCss;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import com.vaadin.v7.ui.CheckBox;\n+\n+import com.vaadin.v7.ui.ComboBox;\n+import de.symeda.sormas.api.FacadeProvider;\n+import de.symeda.sormas.api.ReferenceDto;\n+import de.symeda.sormas.api.feature.FeatureType;\n+import de.symeda.sormas.api.i18n.Captions;\n+import de.symeda.sormas.api.i18n.I18nProperties;\n+import de.symeda.sormas.api.region.DistrictReferenceDto;\n+import de.symeda.sormas.api.task.TaskDto;\n+import de.symeda.sormas.api.user.JurisdictionLevel;\n+import de.symeda.sormas.api.user.UserDto;\n+import de.symeda.sormas.api.user.UserReferenceDto;\n+import de.symeda.sormas.api.user.UserRole;\n+import de.symeda.sormas.ui.UserProvider;\n+import de.symeda.sormas.ui.utils.AbstractEditForm;\n+import de.symeda.sormas.ui.utils.FieldHelper;\n+import de.symeda.sormas.ui.utils.NullableOptionGroup;\n+\n+public class BulkTaskDataForm extends AbstractEditForm<TaskBulkEditData> {\n+\n+\tprivate static final long serialVersionUID = 1L;\n+\n+\tpublic static final String ASSIGNEE_CHECKBOX = \"assigneeCheckbox\";\n+\tpublic static final String PRORITY_CHECKBOX = \"prorityCheckbox\";\n+\tpublic static final String STATUS_CHECKBOX = \"statusCheckbox\";\n+\n+\tprivate static final String HTML_LAYOUT = fluidRowLocsCss(VSPACE_4, ASSIGNEE_CHECKBOX)\n+\t\t+ fluidRowLocs(TaskBulkEditData.TASK_ASSIGNEE)\n+\t\t+ fluidRowLocsCss(VSPACE_4, PRORITY_CHECKBOX)\n+\t\t+ fluidRowLocs(TaskBulkEditData.TASK_PRIORITY)\n+\t\t+ fluidRowLocsCss(VSPACE_4, STATUS_CHECKBOX)\n+\t\t+ fluidRowLocs(TaskBulkEditData.TASK_STATUS);\n+\n+\tprivate final DistrictReferenceDto district;\n+\n+\tprivate boolean initialized = false;\n+\n+\tprivate CheckBox assigneeCheckbox;\n+\tprivate CheckBox priorityCheckbox;\n+\tprivate CheckBox taskStatusCheckbox;\n+\n+\tpublic BulkTaskDataForm(DistrictReferenceDto district) {\n+\t\tsuper(TaskBulkEditData.class, TaskDto.I18N_PREFIX);\n+\t\tthis.district = district;\n+\t\tsetWidth(680, Unit.PIXELS);\n+\t\thideValidationUntilNextCommit();\n+\t\tinitialized = true;\n+\t\taddFields();\n+\t}\n+\n+\t@Override\n+\tprotected void addFields() {\n+\n+\t\tif (!initialized) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\ttaskStatusCheckbox = new CheckBox(I18nProperties.getCaption(Captions.bulkTaskStatus));\n+\t\tgetContent().addComponent(taskStatusCheckbox, STATUS_CHECKBOX);\n+\t\tNullableOptionGroup status = addField(TaskBulkEditData.TASK_STATUS, NullableOptionGroup.class);\n+\t\tstatus.setEnabled(false);\n+\t\tFieldHelper.setRequiredWhen(getFieldGroup(), taskStatusCheckbox, Arrays.asList(TaskBulkEditData.TASK_STATUS), Arrays.asList(true));\n+\t\ttaskStatusCheckbox.addValueChangeListener(e -> {\n+\t\t\tstatus.setEnabled((boolean) e.getProperty().getValue());\n+\t\t});\n+\n+\t\tpriorityCheckbox = new CheckBox(I18nProperties.getCaption(Captions.bulkTaskPriority));\n+\t\tgetContent().addComponent(priorityCheckbox, PRORITY_CHECKBOX);\n+\t\tNullableOptionGroup priority = addField(TaskBulkEditData.TASK_PRIORITY, NullableOptionGroup.class);\n+\t\tpriority.setEnabled(false);\n+\t\tFieldHelper.setRequiredWhen(getFieldGroup(), priorityCheckbox, Arrays.asList(TaskBulkEditData.TASK_PRIORITY), Arrays.asList(true));\n+\t\tpriorityCheckbox.addValueChangeListener(e -> {\n+\t\t\tpriority.setEnabled((boolean) e.getProperty().getValue());\n+\t\t});\n+\n+\t\tif (district != null) {\n+\t\t\tassigneeCheckbox = new CheckBox(I18nProperties.getCaption(Captions.bulkTaskassignee));\n+\t\t\tgetContent().addComponent(assigneeCheckbox, ASSIGNEE_CHECKBOX);\n+\t\t\tComboBox assignee = addField(TaskBulkEditData.TASK_ASSIGNEE, ComboBox.class);\n+\t\t\tassignee.setEnabled(false);\n+\t\t\tFieldHelper.addSoftRequiredStyleWhen(\n+\t\t\t\t\tgetFieldGroup(),\n+\t\t\t\t\tassigneeCheckbox,\n+\t\t\t\t\tArrays.asList(TaskBulkEditData.TASK_ASSIGNEE),\n+\t\t\t\t\tArrays.asList(true),\n+\t\t\t\t\tnull);\n+\n+\t\t\tList<UserReferenceDto> users = getUsers();\n+\t\t\tMap<String, Long> userTaskCounts =\n+\t\t\t\t\tFacadeProvider.getTaskFacade().getPendingTaskCountPerUser(users.stream().map(ReferenceDto::getUuid).collect(Collectors.toList()));\n+\t\t\tfor (UserReferenceDto user : users) {\n+\t\t\t\tassignee.addItem(user);\n+\t\t\t\tLong userTaskCount = userTaskCounts.get(user.getUuid());\n+\t\t\t\tassignee.setItemCaption(user, user.getCaption() + \" (\" + (userTaskCount != null ? userTaskCount.toString() : \"0\") + \")\");\n+\t\t\t}\n+\n+\t\t\tassigneeCheckbox.addValueChangeListener(e -> {\n+\t\t\t\tassignee.setEnabled((boolean) e.getProperty().getValue());\n+\t\t\t});\n+\t\t}\n+\t}\n+\n+\tprivate List<UserReferenceDto> getUsers() {\n+\t\tfinal List<UserReferenceDto> users = new ArrayList<>();\n+\t\tUserDto userDto = UserProvider.getCurrent().getUser();\n+\n+\t\tif (district != null) {\n+\t\t\tusers.addAll(FacadeProvider.getUserFacade().getUserRefsByDistrict(district, true));\n+\t\t}\n+\n+\t\t// Allow regional users to assign the task to national ones\n+\t\tif (FacadeProvider.getFeatureConfigurationFacade().isFeatureEnabled(FeatureType.ASSIGN_TASKS_TO_HIGHER_LEVEL)\n+\t\t\t&& userDto.getDistrict() == null\n+\t\t\t&& userDto.getRegion() != null) {\n+\t\t\tusers.addAll(\n+\t\t\t\tFacadeProvider.getUserFacade()\n+\t\t\t\t\t.getUsersByRegionAndRoles(null, UserRole.getWithJurisdictionLevels(JurisdictionLevel.NATION).toArray(new UserRole[0])));\n+\t\t}\n+\t\treturn users;\n+\t}\n+\n+\t@Override\n+\tprotected String createHtmlLayout() {\n+\t\treturn HTML_LAYOUT;\n+\t}\n+\n+\tpublic CheckBox getAssigneeCheckbox() {\n+\t\treturn assigneeCheckbox;\n+\t}\n+\n+\tpublic CheckBox getPriorityCheckbox() {\n+\t\treturn priorityCheckbox;\n+\t}\n+\n+\tpublic CheckBox getTaskStatusCheckbox() {\n+\t\treturn taskStatusCheckbox;\n+\t}\n+\n+}"
  },
  {
    "sha": "15b470b1314fdf969ccf10c2da08739854f0f848",
    "filename": "sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskBulkEditData.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskBulkEditData.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskBulkEditData.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskBulkEditData.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -0,0 +1,44 @@\n+package de.symeda.sormas.ui.task;\n+\n+import de.symeda.sormas.api.EntityDto;\n+import de.symeda.sormas.api.task.TaskPriority;\n+import de.symeda.sormas.api.task.TaskStatus;\n+import de.symeda.sormas.api.user.UserReferenceDto;\n+\n+public class TaskBulkEditData extends EntityDto {\n+\n+\tprivate static final long serialVersionUID = -7234609753914205675L;\n+\n+\tpublic static final String TASK_ASSIGNEE = \"taskAssignee\";\n+\tpublic static final String TASK_PRIORITY = \"taskPriority\";\n+\tpublic static final String TASK_STATUS = \"taskStatus\";\n+\n+\n+\tprivate UserReferenceDto taskAssignee;\n+\tprivate TaskPriority taskPriority;\n+\tprivate TaskStatus taskStatus;\n+\n+\tpublic UserReferenceDto getTaskAssignee() {\n+\t\treturn taskAssignee;\n+\t}\n+\n+\tpublic void setTaskAssignee(UserReferenceDto taskAssignee) {\n+\t\tthis.taskAssignee = taskAssignee;\n+\t}\n+\n+\tpublic TaskPriority getTaskPriority() {\n+\t\treturn taskPriority;\n+\t}\n+\n+\tpublic void setTaskPriority(TaskPriority taskPriority) {\n+\t\tthis.taskPriority = taskPriority;\n+\t}\n+\n+\tpublic TaskStatus getTaskStatus() {\n+\t\treturn taskStatus;\n+\t}\n+\n+\tpublic void setTaskStatus(TaskStatus taskStatus) {\n+\t\tthis.taskStatus = taskStatus;\n+\t}\n+}"
  },
  {
    "sha": "a49ddf49be72af87d9de98f0c8e31112cae80057",
    "filename": "sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskController.java",
    "status": "modified",
    "additions": 140,
    "deletions": 0,
    "changes": 140,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskController.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskController.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskController.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -18,14 +18,19 @@\n package de.symeda.sormas.ui.task;\n \n import com.vaadin.server.Page;\n+import com.vaadin.ui.Label;\n import com.vaadin.ui.Notification;\n import com.vaadin.ui.Notification.Type;\n import com.vaadin.ui.UI;\n import com.vaadin.ui.Window;\n import de.symeda.sormas.api.FacadeProvider;\n import de.symeda.sormas.api.ReferenceDto;\n+import de.symeda.sormas.api.caze.CaseDataDto;\n+import de.symeda.sormas.api.contact.ContactDto;\n+import de.symeda.sormas.api.event.EventDto;\n import de.symeda.sormas.api.i18n.I18nProperties;\n import de.symeda.sormas.api.i18n.Strings;\n+import de.symeda.sormas.api.region.DistrictReferenceDto;\n import de.symeda.sormas.api.sample.SampleDto;\n import de.symeda.sormas.api.task.TaskContext;\n import de.symeda.sormas.api.task.TaskDto;\n@@ -41,6 +46,8 @@\n import de.symeda.sormas.ui.utils.VaadinUiUtil;\n \n import java.util.Collection;\n+import java.util.List;\n+import java.util.stream.Collectors;\n \n public class TaskController {\n \n@@ -177,4 +184,137 @@ public void run() {\n \t\t\t\t});\n \t\t}\n \t}\n+\n+\tprivate DistrictReferenceDto getTaskIndexDistrict(TaskIndexDto taskDto) {\n+\t\tDistrictReferenceDto district = null;\n+\t\tif (taskDto.getCaze() != null) {\n+\t\t\tCaseDataDto caseDto = FacadeProvider.getCaseFacade().getCaseDataByUuid(taskDto.getCaze().getUuid());\n+\t\t\tdistrict = caseDto.getDistrict();\n+\t\t} else if (taskDto.getContact() != null) {\n+\t\t\tContactDto contactDto = FacadeProvider.getContactFacade().getContactByUuid(taskDto.getContact().getUuid());\n+\t\t\tif (contactDto.getRegion() != null && contactDto.getDistrict() != null) {\n+\t\t\t\tdistrict = contactDto.getDistrict();\n+\t\t\t} else {\n+\t\t\t\tCaseDataDto caseDto = FacadeProvider.getCaseFacade().getCaseDataByUuid(contactDto.getCaze().getUuid());\n+\t\t\t\tdistrict = caseDto.getDistrict();\n+\t\t\t}\n+\t\t} else if (taskDto.getEvent() != null) {\n+\t\t\tEventDto eventDto = FacadeProvider.getEventFacade().getEventByUuid(taskDto.getEvent().getUuid());\n+\t\t\tdistrict = eventDto.getEventLocation().getDistrict();\n+\t\t}\n+\t\treturn district;\n+\t}\n+\n+\tpublic void showBulkTaskDataEditComponent(Collection<? extends TaskIndexDto> selectedTasks) {\n+\t\tif (selectedTasks.size() == 0) {\n+\t\t\tnew Notification(\n+\t\t\t\tI18nProperties.getString(Strings.headingNoTasksSelected),\n+\t\t\t\tI18nProperties.getString(Strings.messageNoTasksSelected),\n+\t\t\t\tType.WARNING_MESSAGE,\n+\t\t\t\tfalse).show(Page.getCurrent());\n+\t\t\treturn;\n+\t\t}\n+\n+\t\t// Check if tasks with multiple districts have been selected\n+\t\tDistrictReferenceDto district = null;\n+\t\tfor (TaskIndexDto taskIndexDto : selectedTasks) {\n+\t\t\tDistrictReferenceDto taskDistrict = this.getTaskIndexDistrict(taskIndexDto);\n+\t\t\tif (district == null) {\n+\t\t\t\tdistrict = taskDistrict;\n+\t\t\t} else if (!district.equals(taskDistrict)) {\n+\t\t\t\tdistrict = null;\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t}\n+\n+\t\t// Create a temporary task in order to use the CommitDiscardWrapperComponent\n+\t\tTaskBulkEditData bulkEditData = new TaskBulkEditData();\n+\t\tBulkTaskDataForm form = new BulkTaskDataForm(district);\n+\t\tform.setValue(bulkEditData);\n+\t\tfinal CommitDiscardWrapperComponent<BulkTaskDataForm> editView = new CommitDiscardWrapperComponent<>(form, form.getFieldGroup());\n+\n+\t\tWindow popupWindow = VaadinUiUtil.showModalPopupWindow(editView, I18nProperties.getString(Strings.headingEditTask));\n+\n+\t\teditView.addCommitListener(() -> {\n+\t\t\tTaskBulkEditData updatedBulkEditData = form.getValue();\n+\t\t\tfor (TaskIndexDto indexDto : selectedTasks) {\n+\t\t\t\tTaskDto dto = FacadeProvider.getTaskFacade().getByUuid(indexDto.getUuid());\n+\t\t\t\tif (form.getPriorityCheckbox().getValue()) {\n+\t\t\t\t\tdto.setPriority(updatedBulkEditData.getTaskPriority());\n+\t\t\t\t}\n+\t\t\t\tif (form.getAssigneeCheckbox().getValue()) {\n+\t\t\t\t\tdto.setAssigneeUser(updatedBulkEditData.getTaskAssignee());\n+\t\t\t\t}\n+\t\t\t\tif (form.getTaskStatusCheckbox().getValue()) {\n+\t\t\t\t\tdto.setTaskStatus(updatedBulkEditData.getTaskStatus());\n+\t\t\t\t}\n+\n+\t\t\t\tFacadeProvider.getTaskFacade().saveTask(dto);\n+\t\t\t}\n+\t\t\tpopupWindow.close();\n+\t\t\tNotification.show(I18nProperties.getString(Strings.messageTasksEdited), Type.HUMANIZED_MESSAGE);\n+\t\t});\n+\n+\t\teditView.addDiscardListener(popupWindow::close);\n+\t}\n+\n+\tpublic void archiveAllSelectedItems(Collection<? extends TaskIndexDto> selectedRows, Runnable callback) {\n+\n+\t\tif (selectedRows.size() == 0) {\n+\t\t\tnew Notification(\n+\t\t\t\tI18nProperties.getString(Strings.headingNoTasksSelected),\n+\t\t\t\tI18nProperties.getString(Strings.messageNoTasksSelected),\n+\t\t\t\tType.WARNING_MESSAGE,\n+\t\t\t\tfalse).show(Page.getCurrent());\n+\t\t} else {\n+\t\t\tVaadinUiUtil.showConfirmationPopup(\n+\t\t\t\tI18nProperties.getString(Strings.headingConfirmArchiving),\n+\t\t\t\tnew Label(String.format(I18nProperties.getString(Strings.confirmationArchiveTasks), selectedRows.size())),\n+\t\t\t\tI18nProperties.getString(Strings.yes),\n+\t\t\t\tI18nProperties.getString(Strings.no),\n+\t\t\t\tnull,\n+\t\t\t\te -> {\n+\t\t\t\t\tif (e.booleanValue()) {\n+\t\t\t\t\t\tList<String> caseUuids = selectedRows.stream().map(TaskIndexDto::getUuid).collect(Collectors.toList());\n+\t\t\t\t\t\tFacadeProvider.getTaskFacade().updateArchived(caseUuids, true);\n+\t\t\t\t\t\tcallback.run();\n+\t\t\t\t\t\tnew Notification(\n+\t\t\t\t\t\t\tI18nProperties.getString(Strings.headingTasksArchived),\n+\t\t\t\t\t\t\tI18nProperties.getString(Strings.messageTasksArchived),\n+\t\t\t\t\t\t\tType.HUMANIZED_MESSAGE,\n+\t\t\t\t\t\t\tfalse).show(Page.getCurrent());\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t}\n+\t}\n+\n+\tpublic void dearchiveAllSelectedItems(Collection<? extends TaskIndexDto> selectedRows, Runnable callback) {\n+\n+\t\tif (selectedRows.size() == 0) {\n+\t\t\tnew Notification(\n+\t\t\t\tI18nProperties.getString(Strings.headingNoTasksSelected),\n+\t\t\t\tI18nProperties.getString(Strings.messageNoTasksSelected),\n+\t\t\t\tType.WARNING_MESSAGE,\n+\t\t\t\tfalse).show(Page.getCurrent());\n+\t\t} else {\n+\t\t\tVaadinUiUtil.showConfirmationPopup(\n+\t\t\t\tI18nProperties.getString(Strings.headingConfirmDearchiving),\n+\t\t\t\tnew Label(String.format(I18nProperties.getString(Strings.confirmationDearchiveTasks), selectedRows.size())),\n+\t\t\t\tI18nProperties.getString(Strings.yes),\n+\t\t\t\tI18nProperties.getString(Strings.no),\n+\t\t\t\tnull,\n+\t\t\t\te -> {\n+\t\t\t\t\tif (e.booleanValue() == true) {\n+\t\t\t\t\t\tList<String> caseUuids = selectedRows.stream().map(TaskIndexDto::getUuid).collect(Collectors.toList());\n+\t\t\t\t\t\tFacadeProvider.getTaskFacade().updateArchived(caseUuids, false);\n+\t\t\t\t\t\tcallback.run();\n+\t\t\t\t\t\tnew Notification(\n+\t\t\t\t\t\t\tI18nProperties.getString(Strings.headingTasksDearchived),\n+\t\t\t\t\t\t\tI18nProperties.getString(Strings.messageTasksDearchived),\n+\t\t\t\t\t\t\tType.HUMANIZED_MESSAGE,\n+\t\t\t\t\t\t\tfalse).show(Page.getCurrent());\n+\t\t\t\t\t}\n+\t\t\t\t});\n+\t\t}\n+\t}\n }"
  },
  {
    "sha": "c19cfc3b83cf56269053ac6c266965b8e92079a3",
    "filename": "sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskGridComponent.java",
    "status": "modified",
    "additions": 35,
    "deletions": 7,
    "changes": 42,
    "blob_url": "https://github.com/hzi-braunschweig/SORMAS-Project/blob/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskGridComponent.java",
    "raw_url": "https://github.com/hzi-braunschweig/SORMAS-Project/raw/cbd44afcb8abc28557758bbef5d63b51f96dde20/sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskGridComponent.java",
    "contents_url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project/contents/sormas-ui/src/main/java/de/symeda/sormas/ui/task/TaskGridComponent.java?ref=cbd44afcb8abc28557758bbef5d63b51f96dde20",
    "patch": "@@ -17,7 +17,9 @@\n  *******************************************************************************/\n package de.symeda.sormas.ui.task;\n \n+import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n \n import com.vaadin.icons.VaadinIcons;\n@@ -167,13 +169,39 @@ public HorizontalLayout createAssigneeFilterBar() {\n \t\t\t// Bulk operation dropdown\n \t\t\tif (UserProvider.getCurrent().hasUserRight(UserRight.PERFORM_BULK_OPERATIONS)) {\n \t\t\t\tassigneeFilterLayout.setWidth(100, Unit.PERCENTAGE);\n-\n-\t\t\t\tbulkOperationsDropdown = MenuBarHelper.createDropDown(\n-\t\t\t\t\tCaptions.bulkActions,\n-\t\t\t\t\tnew MenuBarHelper.MenuBarItem(I18nProperties.getCaption(Captions.bulkDelete), VaadinIcons.TRASH, selectedItem -> {\n-\t\t\t\t\t\tControllerProvider.getTaskController()\n-\t\t\t\t\t\t\t.deleteAllSelectedItems(grid.asMultiSelect().getSelectedItems(), () -> tasksView.navigateTo(criteria));\n-\t\t\t\t\t}, UserProvider.getCurrent().hasUserRight(UserRight.TASK_DELETE)));\n+\t\t\t\tboolean hasBulkOperationsRight = UserProvider.getCurrent().hasUserRight(UserRight.PERFORM_BULK_OPERATIONS);\n+\n+\t\t\t\tfinal List<MenuBarHelper.MenuBarItem> menuBarItems = new ArrayList<>();\n+\n+\t\t\t\tmenuBarItems.add(\n+\t\t\t\t\t\tnew MenuBarHelper.MenuBarItem(\n+\t\t\t\t\t\t\t\tI18nProperties.getCaption(Captions.bulkEdit),\n+\t\t\t\t\t\t\t\tVaadinIcons.ELLIPSIS_H,\n+\t\t\t\t\t\t\t\tmi -> ControllerProvider.getTaskController().showBulkTaskDataEditComponent(this.grid.asMultiSelect().getSelectedItems()),\n+\t\t\t\t\t\t\t\thasBulkOperationsRight));\n+\t\t\t\tmenuBarItems.add(\n+\t\t\t\t\t\tnew MenuBarHelper.MenuBarItem(\n+\t\t\t\t\t\t\t\tI18nProperties.getCaption(Captions.bulkDelete),\n+\t\t\t\t\t\t\t\tVaadinIcons.TRASH,\n+\t\t\t\t\t\t\t\tselectedItem -> ControllerProvider.getTaskController()\n+\t\t\t\t\t\t\t\t\t\t.deleteAllSelectedItems(this.grid.asMultiSelect().getSelectedItems(), () -> tasksView.navigateTo(criteria)),\n+\t\t\t\t\t\t\t\thasBulkOperationsRight));\n+\t\t\t\tmenuBarItems.add(\n+\t\t\t\t\t\tnew MenuBarHelper.MenuBarItem(\n+\t\t\t\t\t\t\t\tI18nProperties.getCaption(Captions.actionArchive),\n+\t\t\t\t\t\t\t\tVaadinIcons.ARCHIVE,\n+\t\t\t\t\t\t\t\tmi -> ControllerProvider.getTaskController()\n+\t\t\t\t\t\t\t\t\t\t.archiveAllSelectedItems(this.grid.asMultiSelect().getSelectedItems(), () -> tasksView.navigateTo(criteria)),\n+\t\t\t\t\t\t\t\thasBulkOperationsRight && EntityRelevanceStatus.ACTIVE.equals(criteria.getRelevanceStatus())));\n+\t\t\t\tmenuBarItems.add(\n+\t\t\t\t\t\tnew MenuBarHelper.MenuBarItem(\n+\t\t\t\t\t\t\t\tI18nProperties.getCaption(Captions.actionDearchive),\n+\t\t\t\t\t\t\t\tVaadinIcons.ARCHIVE,\n+\t\t\t\t\t\t\t\tmi -> ControllerProvider.getTaskController()\n+\t\t\t\t\t\t\t\t\t\t.dearchiveAllSelectedItems(this.grid.asMultiSelect().getSelectedItems(), () -> tasksView.navigateTo(criteria)),\n+\t\t\t\t\t\t\t\thasBulkOperationsRight && EntityRelevanceStatus.ARCHIVED.equals(criteria.getRelevanceStatus())));\n+\n+\t\t\t\tbulkOperationsDropdown = MenuBarHelper.createDropDown(Captions.bulkActions, menuBarItems);\n \n \t\t\t\tbulkOperationsDropdown.setVisible(tasksView.getViewConfiguration().isInEagerMode());\n \t\t\t\tactionButtonsLayout.addComponent(bulkOperationsDropdown);"
  }
]
