[
  {
    "sha": "c5fa491b4c557bf997d5dd21797de782545dc9e5",
    "filename": "aspnetcore/.swagger-codegen-ignore",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/.swagger-codegen-ignore",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/.swagger-codegen-ignore",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/.swagger-codegen-ignore?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,23 @@\n+# Swagger Codegen Ignore\n+# Generated by swagger-codegen https://github.com/swagger-api/swagger-codegen\n+\n+# Use this file to prevent files from being overwritten by the generator.\n+# The patterns follow closely to .gitignore or .dockerignore.\n+\n+# As an example, the C# client generator defines ApiClient.cs.\n+# You can make changes and tell Swagger Codgen to ignore just this file by uncommenting the following line:\n+#ApiClient.cs\n+\n+# You can match any string of characters against a directory, file or extension with a single asterisk (*):\n+#foo/*/qux\n+# The above matches foo/bar/qux and foo/baz/qux, but not foo/bar/baz/qux\n+\n+# You can recursively match patterns against a directory, file or extension with a double asterisk (**):\n+#foo/**/qux\n+# This matches foo/bar/qux, foo/baz/qux, and foo/bar/baz/qux\n+\n+# You can also negate patterns with an exclamation (!).\n+# For example, you can ignore all files in a docs folder with the file extension .md:\n+#docs/*.md\n+# Then explicitly reverse the ignore rule for a single file:\n+#!docs/README.md"
  },
  {
    "sha": "b39b0b9e015ab8dbac2bae2769447e4f341d633d",
    "filename": "aspnetcore/.swagger-codegen/VERSION",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/.swagger-codegen/VERSION",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/.swagger-codegen/VERSION",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/.swagger-codegen/VERSION?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1 @@\n+3.0.24\n\\ No newline at end of file"
  },
  {
    "sha": "43c6a7593fcb377835b54edb69e5151919a7167c",
    "filename": "aspnetcore/IO.Swagger.sln",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/IO.Swagger.sln",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/IO.Swagger.sln",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/IO.Swagger.sln?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,22 @@\n+ï»¿\n+Microsoft Visual Studio Solution File, Format Version 12.00\n+# Visual Studio 15\n+VisualStudioVersion = 15.0.27428.2043\n+MinimumVisualStudioVersion = 10.0.40219.1\n+Project(\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\") = \"IO.Swagger\", \"src\\IO.Swagger\\IO.Swagger.csproj\", \"{DB6B2042-6BD7-45A3-8C93-34AC5CCCF69E}\"\n+EndProject\n+Global\n+    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n+        Debug|Any CPU = Debug|Any CPU\n+        Release|Any CPU = Release|Any CPU\n+    EndGlobalSection\n+    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n+        {DB6B2042-6BD7-45A3-8C93-34AC5CCCF69E}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n+        {DB6B2042-6BD7-45A3-8C93-34AC5CCCF69E}.Debug|Any CPU.Build.0 = Debug|Any CPU\n+        {DB6B2042-6BD7-45A3-8C93-34AC5CCCF69E}.Release|Any CPU.ActiveCfg = Release|Any CPU\n+        {DB6B2042-6BD7-45A3-8C93-34AC5CCCF69E}.Release|Any CPU.Build.0 = Release|Any CPU\n+    EndGlobalSection\n+    GlobalSection(SolutionProperties) = preSolution\n+        HideSolutionNode = FALSE\n+    EndGlobalSection\n+EndGlobal"
  },
  {
    "sha": "01f3d1f203fb6024199654ec55e20661a9d59f56",
    "filename": "aspnetcore/NuGet.Config",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/NuGet.Config",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/NuGet.Config",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/NuGet.Config?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<configuration>\n+  <packageSources>\n+    <!--To inherit the global NuGet package sources remove the <clear/> line below -->\n+    <clear />\n+    <add key=\"dotnet-core\" value=\"https://www.myget.org/F/dotnet-core/api/v3/index.json\" />\n+    <add key=\"api.nuget.org\" value=\"https://api.nuget.org/v3/index.json\" />\n+  </packageSources>\n+</configuration>"
  },
  {
    "sha": "512ba08e47e1942a169e387a7c894c374288aacc",
    "filename": "aspnetcore/README.md",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/README.md",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/README.md",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/README.md?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,25 @@\n+# IO.Swagger - ASP.NET Core 2.0 Server\n+\n+Api Documentation\n+\n+## Run\n+\n+Linux/OS X:\n+\n+```\n+sh build.sh\n+```\n+\n+Windows:\n+\n+```\n+build.bat\n+```\n+\n+## Run in Docker\n+\n+```\n+cd src/IO.Swagger\n+docker build -t io.swagger .\n+docker run -p 5000:5000 io.swagger\n+```"
  },
  {
    "sha": "2e041233a06597c80cf73d0af1dc0f34d1c69d02",
    "filename": "aspnetcore/build.bat",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/build.bat",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/build.bat",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/build.bat?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,9 @@\n+:: Generated by: https://github.com/swagger-api/swagger-codegen.git\n+::\n+\n+@echo off\n+\n+dotnet restore src\\IO.Swagger\n+dotnet build src\\IO.Swagger\n+echo Now, run the following to start the project: dotnet run -p src\\IO.Swagger\\IO.Swagger.csproj --launch-profile web.\n+echo."
  },
  {
    "sha": "ce6063a2f494bc2450d20811cf01ae5281dde162",
    "filename": "aspnetcore/build.sh",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/build.sh",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/build.sh",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/build.sh?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,8 @@\n+#!/usr/bin/env bash\n+#\n+# Generated by: https://github.com/swagger-api/swagger-codegen.git\n+#\n+\n+dotnet restore src/IO.Swagger/ && \\\n+    dotnet build src/IO.Swagger/ && \\\n+    echo \"Now, run the following to start the project: dotnet run -p src/IO.Swagger/IO.Swagger.csproj --launch-profile web\""
  },
  {
    "sha": "cd9b840e5498e2a416a35713c9f51eeaacb61eb5",
    "filename": "aspnetcore/src/IO.Swagger/.gitignore",
    "status": "added",
    "additions": 208,
    "deletions": 0,
    "changes": 208,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/.gitignore",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/.gitignore",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/.gitignore?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,208 @@\n+PID\n+\n+## Ignore Visual Studio temporary files, build results, and\n+## files generated by popular Visual Studio add-ons.\n+\n+# User-specific files\n+*.suo\n+*.user\n+*.userosscache\n+*.sln.docstates\n+\n+# User-specific files (MonoDevelop/Xamarin Studio)\n+*.userprefs\n+\n+# Build results\n+[Dd]ebug/\n+[Dd]ebugPublic/\n+[Rr]elease/\n+[Rr]eleases/\n+x64/\n+x86/\n+build/\n+bld/\n+[Bb]in/\n+[Oo]bj/\n+\n+# Visual Studio 2015 cache/options directory\n+.vs/\n+\n+# MSTest test Results\n+[Tt]est[Rr]esult*/\n+[Bb]uild[Ll]og.*\n+\n+# NUNIT\n+*.VisualState.xml\n+TestResult.xml\n+\n+# Build Results of an ATL Project\n+[Dd]ebugPS/\n+[Rr]eleasePS/\n+dlldata.c\n+\n+# DNX\n+project.lock.json\n+artifacts/\n+\n+*_i.c\n+*_p.c\n+*_i.h\n+*.ilk\n+*.meta\n+*.obj\n+*.pch\n+*.pdb\n+*.pgc\n+*.pgd\n+*.rsp\n+*.sbr\n+*.tlb\n+*.tli\n+*.tlh\n+*.tmp\n+*.tmp_proj\n+*.log\n+*.vspscc\n+*.vssscc\n+.builds\n+*.pidb\n+*.svclog\n+*.scc\n+\n+# Chutzpah Test files\n+_Chutzpah*\n+\n+# Visual C++ cache files\n+ipch/\n+*.aps\n+*.ncb\n+*.opensdf\n+*.sdf\n+*.cachefile\n+\n+# Visual Studio profiler\n+*.psess\n+*.vsp\n+*.vspx\n+\n+# TFS 2012 Local Workspace\n+$tf/\n+\n+# Guidance Automation Toolkit\n+*.gpState\n+\n+# ReSharper is a .NET coding add-in\n+_ReSharper*/\n+*.[Rr]e[Ss]harper\n+*.DotSettings.user\n+\n+# JustCode is a .NET coding add-in\n+.JustCode\n+\n+# TeamCity is a build add-in\n+_TeamCity*\n+\n+# DotCover is a Code Coverage Tool\n+*.dotCover\n+\n+# NCrunch\n+_NCrunch_*\n+.*crunch*.local.xml\n+\n+# MightyMoose\n+*.mm.*\n+AutoTest.Net/\n+\n+# Web workbench (sass)\n+.sass-cache/\n+\n+# Installshield output folder\n+[Ee]xpress/\n+\n+# DocProject is a documentation generator add-in\n+DocProject/buildhelp/\n+DocProject/Help/*.HxT\n+DocProject/Help/*.HxC\n+DocProject/Help/*.hhc\n+DocProject/Help/*.hhk\n+DocProject/Help/*.hhp\n+DocProject/Help/Html2\n+DocProject/Help/html\n+\n+# Click-Once directory\n+publish/\n+\n+# Publish Web Output\n+*.[Pp]ublish.xml\n+*.azurePubxml\n+# TODO: Comment the next line if you want to checkin your web deploy settings\n+# but database connection strings (with potential passwords) will be unencrypted\n+*.pubxml\n+*.publishproj\n+\n+# NuGet Packages\n+*.nupkg\n+# The packages folder can be ignored because of Package Restore\n+**/packages/*\n+# except build/, which is used as an MSBuild target.\n+!**/packages/build/\n+# Uncomment if necessary however generally it will be regenerated when needed\n+#!**/packages/repositories.config\n+\n+# Windows Azure Build Output\n+csx/\n+*.build.csdef\n+\n+# Windows Store app package directory\n+AppPackages/\n+\n+# Visual Studio cache files\n+# files ending in .cache can be ignored\n+*.[Cc]ache\n+# but keep track of directories ending in .cache\n+!*.[Cc]ache/\n+\n+# Others\n+ClientBin/\n+[Ss]tyle[Cc]op.*\n+~$*\n+*~\n+*.dbmdl\n+*.dbproj.schemaview\n+*.pfx\n+*.publishsettings\n+node_modules/\n+bower_components/\n+orleans.codegen.cs\n+\n+# RIA/Silverlight projects\n+Generated_Code/\n+\n+# Backup & report files from converting an old project file\n+# to a newer Visual Studio version. Backup files are not needed,\n+# because we have git ;-)\n+_UpgradeReport_Files/\n+Backup*/\n+UpgradeLog*.XML\n+UpgradeLog*.htm\n+\n+# SQL Server files\n+*.mdf\n+*.ldf\n+\n+# Business Intelligence projects\n+*.rdl.data\n+*.bim.layout\n+*.bim_*.settings\n+\n+# Microsoft Fakes\n+FakesAssemblies/\n+\n+# Node.js Tools for Visual Studio\n+.ntvs_analysis.dat\n+\n+# Visual Studio 6 build log\n+*.plg\n+\n+# Visual Studio 6 workspace options file\n+*.opt"
  },
  {
    "sha": "07cfabe83cf98e38b025d6080a055d93fe112b3b",
    "filename": "aspnetcore/src/IO.Swagger/Attributes/ValidateModelStateAttribute.cs",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Attributes/ValidateModelStateAttribute.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Attributes/ValidateModelStateAttribute.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Attributes/ValidateModelStateAttribute.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,61 @@\n+using System.ComponentModel.DataAnnotations;\n+using System.Reflection;\n+using Microsoft.AspNetCore.Mvc;\n+using Microsoft.AspNetCore.Mvc.Controllers;\n+using Microsoft.AspNetCore.Mvc.Filters;\n+using Microsoft.AspNetCore.Mvc.ModelBinding;\n+\n+namespace IO.Swagger.Attributes\n+{\n+    /// <summary>\n+    /// Model state validation attribute\n+    /// </summary>\n+    public class ValidateModelStateAttribute : ActionFilterAttribute\n+    {\n+        /// <summary>\n+        /// Called before the action method is invoked\n+        /// </summary>\n+        /// <param name=\"context\"></param>\n+        public override void OnActionExecuting(ActionExecutingContext context)\n+        {\n+            // Per https://blog.markvincze.com/how-to-validate-action-parameters-with-dataannotation-attributes/\n+            var descriptor = context.ActionDescriptor as ControllerActionDescriptor;\n+            if (descriptor != null)\n+            {\n+                foreach (var parameter in descriptor.MethodInfo.GetParameters())\n+                {\n+                    object args = null;\n+                    if (context.ActionArguments.ContainsKey(parameter.Name))\n+                    { \n+                        args = context.ActionArguments[parameter.Name];\n+                    }\n+\n+                    ValidateAttributes(parameter, args, context.ModelState);\n+                }\n+            }\n+\n+            if (!context.ModelState.IsValid)\n+            {\n+                context.Result = new BadRequestObjectResult(context.ModelState);\n+            }\n+        }\n+\n+        private void ValidateAttributes(ParameterInfo parameter, object args, ModelStateDictionary modelState)\n+        {\n+            foreach (var attributeData in parameter.CustomAttributes)\n+            {\n+                var attributeInstance = parameter.GetCustomAttribute(attributeData.AttributeType);\n+\n+                var validationAttribute = attributeInstance as ValidationAttribute;\n+                if (validationAttribute != null)\n+                {\n+                    var isValid = validationAttribute.IsValid(args);\n+                    if (!isValid)\n+                    {\n+                        modelState.AddModelError(parameter.Name, validationAttribute.FormatErrorMessage(parameter.Name));\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "60bbed925730618865a16fbc257a23e783c45003",
    "filename": "aspnetcore/src/IO.Swagger/Controllers/BasicErrorControllerApi.cs",
    "status": "added",
    "additions": 276,
    "deletions": 0,
    "changes": 276,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Controllers/BasicErrorControllerApi.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Controllers/BasicErrorControllerApi.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Controllers/BasicErrorControllerApi.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,276 @@\n+/*\n+ * SponTan API\n+ *\n+ * Api Documentation\n+ *\n+ * OpenAPI spec version: 1.0\n+ * \n+ * Generated by: https://github.com/swagger-api/swagger-codegen.git\n+ */\n+using System;\n+using System.Collections.Generic;\n+using Microsoft.AspNetCore.Mvc;\n+using Swashbuckle.AspNetCore.Annotations;\n+using Swashbuckle.AspNetCore.SwaggerGen;\n+using Newtonsoft.Json;\n+using System.ComponentModel.DataAnnotations;\n+using IO.Swagger.Attributes;\n+\n+using Microsoft.AspNetCore.Authorization;\n+using IO.Swagger.Models;\n+\n+namespace IO.Swagger.Controllers\n+{ \n+    /// <summary>\n+    /// \n+    /// </summary>\n+    [ApiController]\n+    public class BasicErrorControllerApiController : ControllerBase\n+    { \n+        /// <summary>\n+        /// errorHtml\n+        /// </summary>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"204\">No Content</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        [HttpDelete]\n+        [Route(\"/danielloza1108/SponTan/1.0/error\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"ErrorHtmlUsingDELETE\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(ModelAndView), description: \"OK\")]\n+        public virtual IActionResult ErrorHtmlUsingDELETE()\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(ModelAndView));\n+\n+            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(204);\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+            string exampleJson = null;\n+            exampleJson = \"{\\n  \\\"reference\\\" : true,\\n  \\\"view\\\" : {\\n    \\\"contentType\\\" : \\\"contentType\\\"\\n  },\\n  \\\"viewName\\\" : \\\"viewName\\\",\\n  \\\"model\\\" : { },\\n  \\\"modelMap\\\" : {\\n    \\\"key\\\" : { }\\n  },\\n  \\\"empty\\\" : true,\\n  \\\"status\\\" : \\\"ACCEPTED\\\"\\n}\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<ModelAndView>(exampleJson)\n+                        : default(ModelAndView);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+\n+        /// <summary>\n+        /// errorHtml\n+        /// </summary>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        /// <response code=\"404\">Not Found</response>\n+        [HttpGet]\n+        [Route(\"/danielloza1108/SponTan/1.0/error\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"ErrorHtmlUsingGET\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(ModelAndView), description: \"OK\")]\n+        public virtual IActionResult ErrorHtmlUsingGET()\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(ModelAndView));\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+\n+            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(404);\n+            string exampleJson = null;\n+            exampleJson = \"{\\n  \\\"reference\\\" : true,\\n  \\\"view\\\" : {\\n    \\\"contentType\\\" : \\\"contentType\\\"\\n  },\\n  \\\"viewName\\\" : \\\"viewName\\\",\\n  \\\"model\\\" : { },\\n  \\\"modelMap\\\" : {\\n    \\\"key\\\" : { }\\n  },\\n  \\\"empty\\\" : true,\\n  \\\"status\\\" : \\\"ACCEPTED\\\"\\n}\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<ModelAndView>(exampleJson)\n+                        : default(ModelAndView);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+\n+        /// <summary>\n+        /// errorHtml\n+        /// </summary>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"204\">No Content</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        [HttpHead]\n+        [Route(\"/danielloza1108/SponTan/1.0/error\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"ErrorHtmlUsingHEAD\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(ModelAndView), description: \"OK\")]\n+        public virtual IActionResult ErrorHtmlUsingHEAD()\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(ModelAndView));\n+\n+            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(204);\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+            string exampleJson = null;\n+            exampleJson = \"{\\n  \\\"reference\\\" : true,\\n  \\\"view\\\" : {\\n    \\\"contentType\\\" : \\\"contentType\\\"\\n  },\\n  \\\"viewName\\\" : \\\"viewName\\\",\\n  \\\"model\\\" : { },\\n  \\\"modelMap\\\" : {\\n    \\\"key\\\" : { }\\n  },\\n  \\\"empty\\\" : true,\\n  \\\"status\\\" : \\\"ACCEPTED\\\"\\n}\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<ModelAndView>(exampleJson)\n+                        : default(ModelAndView);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+\n+        /// <summary>\n+        /// errorHtml\n+        /// </summary>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"204\">No Content</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        [HttpOptions]\n+        [Route(\"/danielloza1108/SponTan/1.0/error\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"ErrorHtmlUsingOPTIONS\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(ModelAndView), description: \"OK\")]\n+        public virtual IActionResult ErrorHtmlUsingOPTIONS()\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(ModelAndView));\n+\n+            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(204);\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+            string exampleJson = null;\n+            exampleJson = \"{\\n  \\\"reference\\\" : true,\\n  \\\"view\\\" : {\\n    \\\"contentType\\\" : \\\"contentType\\\"\\n  },\\n  \\\"viewName\\\" : \\\"viewName\\\",\\n  \\\"model\\\" : { },\\n  \\\"modelMap\\\" : {\\n    \\\"key\\\" : { }\\n  },\\n  \\\"empty\\\" : true,\\n  \\\"status\\\" : \\\"ACCEPTED\\\"\\n}\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<ModelAndView>(exampleJson)\n+                        : default(ModelAndView);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+\n+        /// <summary>\n+        /// errorHtml\n+        /// </summary>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"204\">No Content</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        [HttpPatch]\n+        [Route(\"/danielloza1108/SponTan/1.0/error\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"ErrorHtmlUsingPATCH\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(ModelAndView), description: \"OK\")]\n+        public virtual IActionResult ErrorHtmlUsingPATCH()\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(ModelAndView));\n+\n+            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(204);\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+            string exampleJson = null;\n+            exampleJson = \"{\\n  \\\"reference\\\" : true,\\n  \\\"view\\\" : {\\n    \\\"contentType\\\" : \\\"contentType\\\"\\n  },\\n  \\\"viewName\\\" : \\\"viewName\\\",\\n  \\\"model\\\" : { },\\n  \\\"modelMap\\\" : {\\n    \\\"key\\\" : { }\\n  },\\n  \\\"empty\\\" : true,\\n  \\\"status\\\" : \\\"ACCEPTED\\\"\\n}\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<ModelAndView>(exampleJson)\n+                        : default(ModelAndView);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+\n+        /// <summary>\n+        /// errorHtml\n+        /// </summary>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"201\">Created</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        /// <response code=\"404\">Not Found</response>\n+        [HttpPost]\n+        [Route(\"/danielloza1108/SponTan/1.0/error\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"ErrorHtmlUsingPOST\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(ModelAndView), description: \"OK\")]\n+        public virtual IActionResult ErrorHtmlUsingPOST()\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(ModelAndView));\n+\n+            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(201);\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+\n+            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(404);\n+            string exampleJson = null;\n+            exampleJson = \"{\\n  \\\"reference\\\" : true,\\n  \\\"view\\\" : {\\n    \\\"contentType\\\" : \\\"contentType\\\"\\n  },\\n  \\\"viewName\\\" : \\\"viewName\\\",\\n  \\\"model\\\" : { },\\n  \\\"modelMap\\\" : {\\n    \\\"key\\\" : { }\\n  },\\n  \\\"empty\\\" : true,\\n  \\\"status\\\" : \\\"ACCEPTED\\\"\\n}\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<ModelAndView>(exampleJson)\n+                        : default(ModelAndView);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+\n+        /// <summary>\n+        /// errorHtml\n+        /// </summary>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"201\">Created</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        /// <response code=\"404\">Not Found</response>\n+        [HttpPut]\n+        [Route(\"/danielloza1108/SponTan/1.0/error\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"ErrorHtmlUsingPUT\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(ModelAndView), description: \"OK\")]\n+        public virtual IActionResult ErrorHtmlUsingPUT()\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(ModelAndView));\n+\n+            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(201);\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+\n+            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(404);\n+            string exampleJson = null;\n+            exampleJson = \"{\\n  \\\"reference\\\" : true,\\n  \\\"view\\\" : {\\n    \\\"contentType\\\" : \\\"contentType\\\"\\n  },\\n  \\\"viewName\\\" : \\\"viewName\\\",\\n  \\\"model\\\" : { },\\n  \\\"modelMap\\\" : {\\n    \\\"key\\\" : { }\\n  },\\n  \\\"empty\\\" : true,\\n  \\\"status\\\" : \\\"ACCEPTED\\\"\\n}\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<ModelAndView>(exampleJson)\n+                        : default(ModelAndView);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+    }\n+}"
  },
  {
    "sha": "a4041534f8f86650bd6eacc88c865753787a24aa",
    "filename": "aspnetcore/src/IO.Swagger/Controllers/EventControllerApi.cs",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Controllers/EventControllerApi.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Controllers/EventControllerApi.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Controllers/EventControllerApi.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,69 @@\n+/*\n+ * SponTan API\n+ *\n+ * Api Documentation\n+ *\n+ * OpenAPI spec version: 1.0\n+ * \n+ * Generated by: https://github.com/swagger-api/swagger-codegen.git\n+ */\n+using System;\n+using System.Collections.Generic;\n+using Microsoft.AspNetCore.Mvc;\n+using Swashbuckle.AspNetCore.Annotations;\n+using Swashbuckle.AspNetCore.SwaggerGen;\n+using Newtonsoft.Json;\n+using System.ComponentModel.DataAnnotations;\n+using IO.Swagger.Attributes;\n+\n+using Microsoft.AspNetCore.Authorization;\n+using IO.Swagger.Models;\n+\n+namespace IO.Swagger.Controllers\n+{ \n+    /// <summary>\n+    /// \n+    /// </summary>\n+    [ApiController]\n+    public class EventControllerApiController : ControllerBase\n+    { \n+        /// <summary>\n+        /// addEvent\n+        /// </summary>\n+        /// <param name=\"body\"></param>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"201\">Created</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        /// <response code=\"404\">Not Found</response>\n+        [HttpPost]\n+        [Route(\"/danielloza1108/SponTan/1.0/api/event/add\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"AddEventUsingPOST\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(string), description: \"OK\")]\n+        public virtual IActionResult AddEventUsingPOST([FromBody]EventDTO body)\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(string));\n+\n+            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(201);\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+\n+            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(404);\n+            string exampleJson = null;\n+            exampleJson = \"\\\"\\\"\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<string>(exampleJson)\n+                        : default(string);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+    }\n+}"
  },
  {
    "sha": "b23e9083ef2e1004231671dd26a298d233ffe33d",
    "filename": "aspnetcore/src/IO.Swagger/Controllers/UserControllerApi.cs",
    "status": "added",
    "additions": 252,
    "deletions": 0,
    "changes": 252,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Controllers/UserControllerApi.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Controllers/UserControllerApi.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Controllers/UserControllerApi.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,252 @@\n+/*\n+ * SponTan API\n+ *\n+ * Api Documentation\n+ *\n+ * OpenAPI spec version: 1.0\n+ * \n+ * Generated by: https://github.com/swagger-api/swagger-codegen.git\n+ */\n+using System;\n+using System.Collections.Generic;\n+using Microsoft.AspNetCore.Mvc;\n+using Swashbuckle.AspNetCore.Annotations;\n+using Swashbuckle.AspNetCore.SwaggerGen;\n+using Newtonsoft.Json;\n+using System.ComponentModel.DataAnnotations;\n+using IO.Swagger.Attributes;\n+\n+using Microsoft.AspNetCore.Authorization;\n+using IO.Swagger.Models;\n+\n+namespace IO.Swagger.Controllers\n+{ \n+    /// <summary>\n+    /// \n+    /// </summary>\n+    [ApiController]\n+    public class UserControllerApiController : ControllerBase\n+    { \n+        /// <summary>\n+        /// addFriend\n+        /// </summary>\n+        /// <param name=\"body\">Add friend to the user.</param>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"201\">Created</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        /// <response code=\"404\">Not Found</response>\n+        [HttpPost]\n+        [Route(\"/danielloza1108/SponTan/1.0/api/user/addFriend\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"AddFriendUsingPOST\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(string), description: \"OK\")]\n+        public virtual IActionResult AddFriendUsingPOST([FromBody]Body body)\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(string));\n+\n+            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(201);\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+\n+            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(404);\n+            string exampleJson = null;\n+            exampleJson = \"\\\"\\\"\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<string>(exampleJson)\n+                        : default(string);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+\n+        /// <summary>\n+        /// addUser\n+        /// </summary>\n+        /// <param name=\"body\"></param>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"201\">Created</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        /// <response code=\"404\">Not Found</response>\n+        [HttpPost]\n+        [Route(\"/danielloza1108/SponTan/1.0/api/user/add\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"AddUserUsingPOST\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(string), description: \"OK\")]\n+        public virtual IActionResult AddUserUsingPOST([FromBody]UserDTO body)\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(string));\n+\n+            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(201);\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+\n+            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(404);\n+            string exampleJson = null;\n+            exampleJson = \"\\\"\\\"\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<string>(exampleJson)\n+                        : default(string);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+\n+        /// <summary>\n+        /// editPassword\n+        /// </summary>\n+        /// <param name=\"body\">Edit user&#x27;s password.</param>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"201\">Created</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        /// <response code=\"404\">Not Found</response>\n+        [HttpPost]\n+        [Route(\"/danielloza1108/SponTan/1.0/api/user/edit/password\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"EditPasswordUsingPOST\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(string), description: \"OK\")]\n+        public virtual IActionResult EditPasswordUsingPOST([FromBody]Body1 body)\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(string));\n+\n+            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(201);\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+\n+            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(404);\n+            string exampleJson = null;\n+            exampleJson = \"\\\"\\\"\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<string>(exampleJson)\n+                        : default(string);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+\n+        /// <summary>\n+        /// getFriends\n+        /// </summary>\n+        /// <param name=\"email\">email</param>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        /// <response code=\"404\">Not Found</response>\n+        [HttpGet]\n+        [Route(\"/danielloza1108/SponTan/1.0/api/user/getFriendsId/{email}\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"GetFriendsUsingGET\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(List<long?>), description: \"OK\")]\n+        public virtual IActionResult GetFriendsUsingGET([FromRoute][Required]string email)\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(List<long?>));\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+\n+            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(404);\n+            string exampleJson = null;\n+            exampleJson = \"[ 0, 0 ]\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<List<long?>>(exampleJson)\n+                        : default(List<long?>);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+\n+        /// <summary>\n+        /// getUserById\n+        /// </summary>\n+        /// <param name=\"id\">id</param>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        /// <response code=\"404\">Not Found</response>\n+        [HttpGet]\n+        [Route(\"/danielloza1108/SponTan/1.0/api/user/getUserById/{id}\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"GetUserByIdUsingGET\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(UserDTO), description: \"OK\")]\n+        public virtual IActionResult GetUserByIdUsingGET([FromRoute][Required]long? id)\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(UserDTO));\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+\n+            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(404);\n+            string exampleJson = null;\n+            exampleJson = \"{\\n  \\\"name\\\" : \\\"name\\\",\\n  \\\"email\\\" : \\\"email\\\"\\n}\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<UserDTO>(exampleJson)\n+                        : default(UserDTO);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+\n+        /// <summary>\n+        /// getUser\n+        /// </summary>\n+        /// <param name=\"email\">email</param>\n+        /// <response code=\"200\">OK</response>\n+        /// <response code=\"401\">Unauthorized</response>\n+        /// <response code=\"403\">Forbidden</response>\n+        /// <response code=\"404\">Not Found</response>\n+        [HttpGet]\n+        [Route(\"/danielloza1108/SponTan/1.0/api/user/get/{email}\")]\n+        [ValidateModelState]\n+        [SwaggerOperation(\"GetUserUsingGET\")]\n+        [SwaggerResponse(statusCode: 200, type: typeof(UserDTO), description: \"OK\")]\n+        public virtual IActionResult GetUserUsingGET([FromRoute][Required]string email)\n+        { \n+            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(200, default(UserDTO));\n+\n+            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(401);\n+\n+            //TODO: Uncomment the next line to return response 403 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(403);\n+\n+            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...\n+            // return StatusCode(404);\n+            string exampleJson = null;\n+            exampleJson = \"{\\n  \\\"name\\\" : \\\"name\\\",\\n  \\\"email\\\" : \\\"email\\\"\\n}\";\n+            \n+                        var example = exampleJson != null\n+                        ? JsonConvert.DeserializeObject<UserDTO>(exampleJson)\n+                        : default(UserDTO);            //TODO: Change the data returned\n+            return new ObjectResult(example);\n+        }\n+    }\n+}"
  },
  {
    "sha": "a22c4e17fec7363b8ff3c42ef2a06a99739b6f5a",
    "filename": "aspnetcore/src/IO.Swagger/Dockerfile",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Dockerfile",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Dockerfile",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Dockerfile?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,19 @@\n+FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build-env\n+WORKDIR /app\n+\n+ENV DOTNET_CLI_TELEMETRY_OPTOUT 1\n+\n+# copy csproj and restore as distinct layers\n+COPY *.csproj ./\n+RUN dotnet restore\n+\n+# copy everything else and build\n+COPY . ./\n+RUN dotnet publish -c Release -o out\n+\n+# build runtime image\n+FROM mcr.microsoft.com/dotnet/core/aspnet:3.1\n+WORKDIR /app\n+COPY --from=build-env /app/out .\n+\n+ENTRYPOINT [\"dotnet\", \"IO.Swagger.dll\"]"
  },
  {
    "sha": "c9d95d6d1898bd0d6d2e124c0376092568d3bbb0",
    "filename": "aspnetcore/src/IO.Swagger/Filters/BasePathFilter.cs",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Filters/BasePathFilter.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Filters/BasePathFilter.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Filters/BasePathFilter.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,51 @@\n+using System.Linq;\n+using System.Text.RegularExpressions;\n+using Swashbuckle.AspNetCore.Swagger;\n+using Swashbuckle.AspNetCore.SwaggerGen;\n+using Microsoft.OpenApi.Models;\n+\n+namespace IO.Swagger.Filters\n+{\n+    /// <summary>\n+    /// BasePath Document Filter sets BasePath property of Swagger and removes it from the individual URL paths\n+    /// </summary>\n+    public class BasePathFilter : IDocumentFilter\n+    {\n+        /// <summary>\n+        /// Constructor\n+        /// </summary>\n+        /// <param name=\"basePath\">BasePath to remove from Operations</param>\n+        public BasePathFilter(string basePath)\n+        {\n+            BasePath = basePath;\n+        }\n+\n+        /// <summary>\n+        /// Gets the BasePath of the Swagger Doc\n+        /// </summary>\n+        /// <returns>The BasePath of the Swagger Doc</returns>\n+        public string BasePath { get; }\n+\n+        /// <summary>\n+        /// Apply the filter\n+        /// </summary>\n+        /// <param name=\"swaggerDoc\">OpenApiDocument</param>\n+        /// <param name=\"context\">FilterContext</param>\n+        public void Apply(OpenApiDocument swaggerDoc, DocumentFilterContext context)\n+        {\n+            swaggerDoc.Servers.Add(new OpenApiServer() { Url = this.BasePath });\n+\n+            var pathsToModify = swaggerDoc.Paths.Where(p => p.Key.StartsWith(this.BasePath)).ToList();\n+\n+            foreach (var path in pathsToModify)\n+            {\n+                if (path.Key.StartsWith(this.BasePath))\n+                {\n+                    string newKey = Regex.Replace(path.Key, $\"^{this.BasePath}\", string.Empty);\n+                    swaggerDoc.Paths.Remove(path.Key);\n+                    swaggerDoc.Paths.Add(newKey, path.Value);\n+                }\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "1845e56ac94018500cc2d616ee7e89c348a6f417",
    "filename": "aspnetcore/src/IO.Swagger/Filters/GeneratePathParamsValidationFilter.cs",
    "status": "added",
    "additions": 96,
    "deletions": 0,
    "changes": 96,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Filters/GeneratePathParamsValidationFilter.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Filters/GeneratePathParamsValidationFilter.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Filters/GeneratePathParamsValidationFilter.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,96 @@\n+using System.ComponentModel.DataAnnotations;\n+using System.Linq;\n+using Microsoft.AspNetCore.Mvc.Controllers;\n+using Microsoft.OpenApi.Models;\n+using Swashbuckle.AspNetCore.SwaggerGen;\n+\n+namespace IO.Swagger.Filters\n+{\n+    /// <summary>\n+    /// Path Parameter Validation Rules Filter\n+    /// </summary>\n+    public class GeneratePathParamsValidationFilter : IOperationFilter\n+    {\n+        /// <summary>\n+        /// Constructor\n+        /// </summary>\n+        /// <param name=\"operation\">Operation</param>\n+        /// <param name=\"context\">OperationFilterContext</param>\n+        public void Apply(OpenApiOperation operation, OperationFilterContext context)\n+        {\n+            var pars = context.ApiDescription.ParameterDescriptions;\n+\n+            foreach (var par in pars)\n+            {\n+                var swaggerParam = operation.Parameters.SingleOrDefault(p => p.Name == par.Name);\n+\n+                var attributes = ((ControllerParameterDescriptor)par.ParameterDescriptor).ParameterInfo.CustomAttributes;\n+\n+                if (attributes != null && attributes.Count() > 0 && swaggerParam != null)\n+                {\n+                    // Required - [Required]\n+                    var requiredAttr = attributes.FirstOrDefault(p => p.AttributeType == typeof(RequiredAttribute));\n+                    if (requiredAttr != null)\n+                    {\n+                        swaggerParam.Required = true;\n+                    }\n+\n+                    // Regex Pattern [RegularExpression]\n+                    var regexAttr = attributes.FirstOrDefault(p => p.AttributeType == typeof(RegularExpressionAttribute));\n+                    if (regexAttr != null)\n+                    {\n+                        string regex = (string)regexAttr.ConstructorArguments[0].Value;\n+                        if (swaggerParam is OpenApiParameter)\n+                        {\n+                            ((OpenApiParameter)swaggerParam).Schema.Pattern = regex;\n+                        }\n+                    }\n+\n+                    // String Length [StringLength]\n+                    int? minLenght = null, maxLength = null;\n+                    var stringLengthAttr = attributes.FirstOrDefault(p => p.AttributeType == typeof(StringLengthAttribute));\n+                    if (stringLengthAttr != null)\n+                    {\n+                        if (stringLengthAttr.NamedArguments.Count == 1)\n+                        {\n+                            minLenght = (int)stringLengthAttr.NamedArguments.Single(p => p.MemberName == \"MinimumLength\").TypedValue.Value;\n+                        }\n+                        maxLength = (int)stringLengthAttr.ConstructorArguments[0].Value;\n+                    }\n+\n+                    var minLengthAttr = attributes.FirstOrDefault(p => p.AttributeType == typeof(MinLengthAttribute));\n+                    if (minLengthAttr != null)\n+                    {\n+                        minLenght = (int)minLengthAttr.ConstructorArguments[0].Value;\n+                    }\n+\n+                    var maxLengthAttr = attributes.FirstOrDefault(p => p.AttributeType == typeof(MaxLengthAttribute));\n+                    if (maxLengthAttr != null)\n+                    {\n+                        maxLength = (int)maxLengthAttr.ConstructorArguments[0].Value;\n+                    }\n+\n+                    if (swaggerParam is OpenApiParameter)\n+                    {\n+                        ((OpenApiParameter)swaggerParam).Schema.MinLength = minLenght;\n+                        ((OpenApiParameter)swaggerParam).Schema.MaxLength = maxLength;\n+                    }\n+\n+                    // Range [Range]\n+                    var rangeAttr = attributes.FirstOrDefault(p => p.AttributeType == typeof(RangeAttribute));\n+                    if (rangeAttr != null)\n+                    {\n+                        int rangeMin = (int)rangeAttr.ConstructorArguments[0].Value;\n+                        int rangeMax = (int)rangeAttr.ConstructorArguments[1].Value;\n+\n+                        if (swaggerParam is OpenApiParameter)\n+                        {\n+                            ((OpenApiParameter)swaggerParam).Schema.Minimum = rangeMin;\n+                            ((OpenApiParameter)swaggerParam).Schema.Maximum = rangeMax;\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "b75da4e4eb58323b47859f117537525cc9ad291e",
    "filename": "aspnetcore/src/IO.Swagger/IO.Swagger.csproj",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/IO.Swagger.csproj",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/IO.Swagger.csproj",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/IO.Swagger.csproj?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,21 @@\n+<Project Sdk=\"Microsoft.NET.Sdk.Web\">\n+  <PropertyGroup>\n+    <Description>IO.Swagger</Description>\n+    <Copyright>IO.Swagger</Copyright>\n+    <TargetFramework>netcoreapp3.1</TargetFramework>\n+    <GenerateDocumentationFile>true</GenerateDocumentationFile>\n+    <PreserveCompilationContext>true</PreserveCompilationContext>\n+    <AssemblyName>IO.Swagger</AssemblyName>\n+    <PackageId>IO.Swagger</PackageId>\n+  </PropertyGroup>\n+  <ItemGroup>\n+    <PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"5.5.1\"/>\n+    <PackageReference Include=\"Swashbuckle.AspNetCore.SwaggerGen\" Version=\"5.5.1\"/>\n+    <PackageReference Include=\"Swashbuckle.AspNetCore.SwaggerUI\" Version=\"5.5.1\"/>\n+    <PackageReference Include=\"Swashbuckle.AspNetCore.Annotations\" Version=\"5.5.1\" />\n+    <PackageReference Include=\"Swashbuckle.AspNetCore.Newtonsoft\" Version=\"5.5.1\"/>\n+  </ItemGroup>\n+  <ItemGroup>\n+    <DotNetCliToolReference Include=\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\" Version=\"2.0.4\" />\n+  </ItemGroup>\n+</Project>"
  },
  {
    "sha": "81c7be1f61abf13446d8cc019100f377ed6df41f",
    "filename": "aspnetcore/src/IO.Swagger/Models/Body.cs",
    "status": "added",
    "additions": 133,
    "deletions": 0,
    "changes": 133,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/Body.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/Body.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Models/Body.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,133 @@\n+/*\n+ * SponTan API\n+ *\n+ * Api Documentation\n+ *\n+ * OpenAPI spec version: 1.0\n+ * \n+ * Generated by: https://github.com/swagger-api/swagger-codegen.git\n+ */\n+using System;\n+using System.Linq;\n+using System.IO;\n+using System.Text;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.Collections.ObjectModel;\n+using System.ComponentModel.DataAnnotations;\n+using System.Runtime.Serialization;\n+using Newtonsoft.Json;\n+\n+namespace IO.Swagger.Models\n+{ \n+    /// <summary>\n+    /// \n+    /// </summary>\n+    [DataContract]\n+    public partial class Body : IEquatable<Body>\n+    { \n+        /// <summary>\n+        /// Gets or Sets UserEmail\n+        /// </summary>\n+        [DataMember(Name=\"userEmail\")]\n+        public string UserEmail { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets FriendEmail\n+        /// </summary>\n+        [DataMember(Name=\"friendEmail\")]\n+        public string FriendEmail { get; set; }\n+\n+        /// <summary>\n+        /// Returns the string presentation of the object\n+        /// </summary>\n+        /// <returns>String presentation of the object</returns>\n+        public override string ToString()\n+        {\n+            var sb = new StringBuilder();\n+            sb.Append(\"class Body {\\n\");\n+            sb.Append(\"  UserEmail: \").Append(UserEmail).Append(\"\\n\");\n+            sb.Append(\"  FriendEmail: \").Append(FriendEmail).Append(\"\\n\");\n+            sb.Append(\"}\\n\");\n+            return sb.ToString();\n+        }\n+\n+        /// <summary>\n+        /// Returns the JSON string presentation of the object\n+        /// </summary>\n+        /// <returns>JSON string presentation of the object</returns>\n+        public string ToJson()\n+        {\n+            return JsonConvert.SerializeObject(this, Formatting.Indented);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if objects are equal\n+        /// </summary>\n+        /// <param name=\"obj\">Object to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public override bool Equals(object obj)\n+        {\n+            if (ReferenceEquals(null, obj)) return false;\n+            if (ReferenceEquals(this, obj)) return true;\n+            return obj.GetType() == GetType() && Equals((Body)obj);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if Body instances are equal\n+        /// </summary>\n+        /// <param name=\"other\">Instance of Body to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public bool Equals(Body other)\n+        {\n+            if (ReferenceEquals(null, other)) return false;\n+            if (ReferenceEquals(this, other)) return true;\n+\n+            return \n+                (\n+                    UserEmail == other.UserEmail ||\n+                    UserEmail != null &&\n+                    UserEmail.Equals(other.UserEmail)\n+                ) && \n+                (\n+                    FriendEmail == other.FriendEmail ||\n+                    FriendEmail != null &&\n+                    FriendEmail.Equals(other.FriendEmail)\n+                );\n+        }\n+\n+        /// <summary>\n+        /// Gets the hash code\n+        /// </summary>\n+        /// <returns>Hash code</returns>\n+        public override int GetHashCode()\n+        {\n+            unchecked // Overflow is fine, just wrap\n+            {\n+                var hashCode = 41;\n+                // Suitable nullity checks etc, of course :)\n+                    if (UserEmail != null)\n+                    hashCode = hashCode * 59 + UserEmail.GetHashCode();\n+                    if (FriendEmail != null)\n+                    hashCode = hashCode * 59 + FriendEmail.GetHashCode();\n+                return hashCode;\n+            }\n+        }\n+\n+        #region Operators\n+        #pragma warning disable 1591\n+\n+        public static bool operator ==(Body left, Body right)\n+        {\n+            return Equals(left, right);\n+        }\n+\n+        public static bool operator !=(Body left, Body right)\n+        {\n+            return !Equals(left, right);\n+        }\n+\n+        #pragma warning restore 1591\n+        #endregion Operators\n+    }\n+}"
  },
  {
    "sha": "b804a1331a2aa39ae136dfcf5b18ec020a575c1f",
    "filename": "aspnetcore/src/IO.Swagger/Models/Body1.cs",
    "status": "added",
    "additions": 133,
    "deletions": 0,
    "changes": 133,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/Body1.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/Body1.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Models/Body1.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,133 @@\n+/*\n+ * SponTan API\n+ *\n+ * Api Documentation\n+ *\n+ * OpenAPI spec version: 1.0\n+ * \n+ * Generated by: https://github.com/swagger-api/swagger-codegen.git\n+ */\n+using System;\n+using System.Linq;\n+using System.IO;\n+using System.Text;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.Collections.ObjectModel;\n+using System.ComponentModel.DataAnnotations;\n+using System.Runtime.Serialization;\n+using Newtonsoft.Json;\n+\n+namespace IO.Swagger.Models\n+{ \n+    /// <summary>\n+    /// \n+    /// </summary>\n+    [DataContract]\n+    public partial class Body1 : IEquatable<Body1>\n+    { \n+        /// <summary>\n+        /// Gets or Sets Email\n+        /// </summary>\n+        [DataMember(Name=\"email\")]\n+        public string Email { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets Password\n+        /// </summary>\n+        [DataMember(Name=\"password\")]\n+        public string Password { get; set; }\n+\n+        /// <summary>\n+        /// Returns the string presentation of the object\n+        /// </summary>\n+        /// <returns>String presentation of the object</returns>\n+        public override string ToString()\n+        {\n+            var sb = new StringBuilder();\n+            sb.Append(\"class Body1 {\\n\");\n+            sb.Append(\"  Email: \").Append(Email).Append(\"\\n\");\n+            sb.Append(\"  Password: \").Append(Password).Append(\"\\n\");\n+            sb.Append(\"}\\n\");\n+            return sb.ToString();\n+        }\n+\n+        /// <summary>\n+        /// Returns the JSON string presentation of the object\n+        /// </summary>\n+        /// <returns>JSON string presentation of the object</returns>\n+        public string ToJson()\n+        {\n+            return JsonConvert.SerializeObject(this, Formatting.Indented);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if objects are equal\n+        /// </summary>\n+        /// <param name=\"obj\">Object to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public override bool Equals(object obj)\n+        {\n+            if (ReferenceEquals(null, obj)) return false;\n+            if (ReferenceEquals(this, obj)) return true;\n+            return obj.GetType() == GetType() && Equals((Body1)obj);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if Body1 instances are equal\n+        /// </summary>\n+        /// <param name=\"other\">Instance of Body1 to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public bool Equals(Body1 other)\n+        {\n+            if (ReferenceEquals(null, other)) return false;\n+            if (ReferenceEquals(this, other)) return true;\n+\n+            return \n+                (\n+                    Email == other.Email ||\n+                    Email != null &&\n+                    Email.Equals(other.Email)\n+                ) && \n+                (\n+                    Password == other.Password ||\n+                    Password != null &&\n+                    Password.Equals(other.Password)\n+                );\n+        }\n+\n+        /// <summary>\n+        /// Gets the hash code\n+        /// </summary>\n+        /// <returns>Hash code</returns>\n+        public override int GetHashCode()\n+        {\n+            unchecked // Overflow is fine, just wrap\n+            {\n+                var hashCode = 41;\n+                // Suitable nullity checks etc, of course :)\n+                    if (Email != null)\n+                    hashCode = hashCode * 59 + Email.GetHashCode();\n+                    if (Password != null)\n+                    hashCode = hashCode * 59 + Password.GetHashCode();\n+                return hashCode;\n+            }\n+        }\n+\n+        #region Operators\n+        #pragma warning disable 1591\n+\n+        public static bool operator ==(Body1 left, Body1 right)\n+        {\n+            return Equals(left, right);\n+        }\n+\n+        public static bool operator !=(Body1 left, Body1 right)\n+        {\n+            return !Equals(left, right);\n+        }\n+\n+        #pragma warning restore 1591\n+        #endregion Operators\n+    }\n+}"
  },
  {
    "sha": "b8e36b4a5ca76d2ad30494b50b7a5aac33b636f5",
    "filename": "aspnetcore/src/IO.Swagger/Models/EventDTO.cs",
    "status": "added",
    "additions": 175,
    "deletions": 0,
    "changes": 175,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/EventDTO.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/EventDTO.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Models/EventDTO.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,175 @@\n+/*\n+ * SponTan API\n+ *\n+ * Api Documentation\n+ *\n+ * OpenAPI spec version: 1.0\n+ * \n+ * Generated by: https://github.com/swagger-api/swagger-codegen.git\n+ */\n+using System;\n+using System.Linq;\n+using System.IO;\n+using System.Text;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.Collections.ObjectModel;\n+using System.ComponentModel.DataAnnotations;\n+using System.Runtime.Serialization;\n+using Newtonsoft.Json;\n+\n+namespace IO.Swagger.Models\n+{ \n+    /// <summary>\n+    /// \n+    /// </summary>\n+    [DataContract]\n+    public partial class EventDTO : IEquatable<EventDTO>\n+    { \n+        /// <summary>\n+        /// Gets or Sets DurationOfTheEvent\n+        /// </summary>\n+        [DataMember(Name=\"durationOfTheEvent\")]\n+        public DateTime? DurationOfTheEvent { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets EventPlace\n+        /// </summary>\n+        [DataMember(Name=\"eventPlace\")]\n+        public string EventPlace { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets EventStart\n+        /// </summary>\n+        [DataMember(Name=\"eventStart\")]\n+        public DateTime? EventStart { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets Name\n+        /// </summary>\n+        [DataMember(Name=\"name\")]\n+        public string Name { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets QuantityOfPlayers\n+        /// </summary>\n+        [DataMember(Name=\"quantityOfPlayers\")]\n+        public int? QuantityOfPlayers { get; set; }\n+\n+        /// <summary>\n+        /// Returns the string presentation of the object\n+        /// </summary>\n+        /// <returns>String presentation of the object</returns>\n+        public override string ToString()\n+        {\n+            var sb = new StringBuilder();\n+            sb.Append(\"class EventDTO {\\n\");\n+            sb.Append(\"  DurationOfTheEvent: \").Append(DurationOfTheEvent).Append(\"\\n\");\n+            sb.Append(\"  EventPlace: \").Append(EventPlace).Append(\"\\n\");\n+            sb.Append(\"  EventStart: \").Append(EventStart).Append(\"\\n\");\n+            sb.Append(\"  Name: \").Append(Name).Append(\"\\n\");\n+            sb.Append(\"  QuantityOfPlayers: \").Append(QuantityOfPlayers).Append(\"\\n\");\n+            sb.Append(\"}\\n\");\n+            return sb.ToString();\n+        }\n+\n+        /// <summary>\n+        /// Returns the JSON string presentation of the object\n+        /// </summary>\n+        /// <returns>JSON string presentation of the object</returns>\n+        public string ToJson()\n+        {\n+            return JsonConvert.SerializeObject(this, Formatting.Indented);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if objects are equal\n+        /// </summary>\n+        /// <param name=\"obj\">Object to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public override bool Equals(object obj)\n+        {\n+            if (ReferenceEquals(null, obj)) return false;\n+            if (ReferenceEquals(this, obj)) return true;\n+            return obj.GetType() == GetType() && Equals((EventDTO)obj);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if EventDTO instances are equal\n+        /// </summary>\n+        /// <param name=\"other\">Instance of EventDTO to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public bool Equals(EventDTO other)\n+        {\n+            if (ReferenceEquals(null, other)) return false;\n+            if (ReferenceEquals(this, other)) return true;\n+\n+            return \n+                (\n+                    DurationOfTheEvent == other.DurationOfTheEvent ||\n+                    DurationOfTheEvent != null &&\n+                    DurationOfTheEvent.Equals(other.DurationOfTheEvent)\n+                ) && \n+                (\n+                    EventPlace == other.EventPlace ||\n+                    EventPlace != null &&\n+                    EventPlace.Equals(other.EventPlace)\n+                ) && \n+                (\n+                    EventStart == other.EventStart ||\n+                    EventStart != null &&\n+                    EventStart.Equals(other.EventStart)\n+                ) && \n+                (\n+                    Name == other.Name ||\n+                    Name != null &&\n+                    Name.Equals(other.Name)\n+                ) && \n+                (\n+                    QuantityOfPlayers == other.QuantityOfPlayers ||\n+                    QuantityOfPlayers != null &&\n+                    QuantityOfPlayers.Equals(other.QuantityOfPlayers)\n+                );\n+        }\n+\n+        /// <summary>\n+        /// Gets the hash code\n+        /// </summary>\n+        /// <returns>Hash code</returns>\n+        public override int GetHashCode()\n+        {\n+            unchecked // Overflow is fine, just wrap\n+            {\n+                var hashCode = 41;\n+                // Suitable nullity checks etc, of course :)\n+                    if (DurationOfTheEvent != null)\n+                    hashCode = hashCode * 59 + DurationOfTheEvent.GetHashCode();\n+                    if (EventPlace != null)\n+                    hashCode = hashCode * 59 + EventPlace.GetHashCode();\n+                    if (EventStart != null)\n+                    hashCode = hashCode * 59 + EventStart.GetHashCode();\n+                    if (Name != null)\n+                    hashCode = hashCode * 59 + Name.GetHashCode();\n+                    if (QuantityOfPlayers != null)\n+                    hashCode = hashCode * 59 + QuantityOfPlayers.GetHashCode();\n+                return hashCode;\n+            }\n+        }\n+\n+        #region Operators\n+        #pragma warning disable 1591\n+\n+        public static bool operator ==(EventDTO left, EventDTO right)\n+        {\n+            return Equals(left, right);\n+        }\n+\n+        public static bool operator !=(EventDTO left, EventDTO right)\n+        {\n+            return !Equals(left, right);\n+        }\n+\n+        #pragma warning restore 1591\n+        #endregion Operators\n+    }\n+}"
  },
  {
    "sha": "e2df8bbb1ad7ff361b1e37b91e624c94caf2d568",
    "filename": "aspnetcore/src/IO.Swagger/Models/ModelAndView.cs",
    "status": "added",
    "additions": 550,
    "deletions": 0,
    "changes": 550,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/ModelAndView.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/ModelAndView.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Models/ModelAndView.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,550 @@\n+/*\n+ * SponTan API\n+ *\n+ * Api Documentation\n+ *\n+ * OpenAPI spec version: 1.0\n+ * \n+ * Generated by: https://github.com/swagger-api/swagger-codegen.git\n+ */\n+using System;\n+using System.Linq;\n+using System.IO;\n+using System.Text;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.Collections.ObjectModel;\n+using System.ComponentModel.DataAnnotations;\n+using System.Runtime.Serialization;\n+using Newtonsoft.Json;\n+\n+namespace IO.Swagger.Models\n+{ \n+    /// <summary>\n+    /// \n+    /// </summary>\n+    [DataContract]\n+    public partial class ModelAndView : IEquatable<ModelAndView>\n+    { \n+        /// <summary>\n+        /// Gets or Sets Empty\n+        /// </summary>\n+        [DataMember(Name=\"empty\")]\n+        public bool? Empty { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets Model\n+        /// </summary>\n+        [DataMember(Name=\"model\")]\n+        public Object Model { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets ModelMap\n+        /// </summary>\n+        [DataMember(Name=\"modelMap\")]\n+        public Dictionary<string, Object> ModelMap { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets Reference\n+        /// </summary>\n+        [DataMember(Name=\"reference\")]\n+        public bool? Reference { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets Status\n+        /// </summary>\n+        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]\n+        public enum StatusEnum\n+        {\n+            /// <summary>\n+            /// Enum ACCEPTEDEnum for ACCEPTED\n+            /// </summary>\n+            [EnumMember(Value = \"ACCEPTED\")]\n+            ACCEPTEDEnum = 0,\n+            /// <summary>\n+            /// Enum ALREADYREPORTEDEnum for ALREADY_REPORTED\n+            /// </summary>\n+            [EnumMember(Value = \"ALREADY_REPORTED\")]\n+            ALREADYREPORTEDEnum = 1,\n+            /// <summary>\n+            /// Enum BADGATEWAYEnum for BAD_GATEWAY\n+            /// </summary>\n+            [EnumMember(Value = \"BAD_GATEWAY\")]\n+            BADGATEWAYEnum = 2,\n+            /// <summary>\n+            /// Enum BADREQUESTEnum for BAD_REQUEST\n+            /// </summary>\n+            [EnumMember(Value = \"BAD_REQUEST\")]\n+            BADREQUESTEnum = 3,\n+            /// <summary>\n+            /// Enum BANDWIDTHLIMITEXCEEDEDEnum for BANDWIDTH_LIMIT_EXCEEDED\n+            /// </summary>\n+            [EnumMember(Value = \"BANDWIDTH_LIMIT_EXCEEDED\")]\n+            BANDWIDTHLIMITEXCEEDEDEnum = 4,\n+            /// <summary>\n+            /// Enum CHECKPOINTEnum for CHECKPOINT\n+            /// </summary>\n+            [EnumMember(Value = \"CHECKPOINT\")]\n+            CHECKPOINTEnum = 5,\n+            /// <summary>\n+            /// Enum CONFLICTEnum for CONFLICT\n+            /// </summary>\n+            [EnumMember(Value = \"CONFLICT\")]\n+            CONFLICTEnum = 6,\n+            /// <summary>\n+            /// Enum CONTINUEEnum for CONTINUE\n+            /// </summary>\n+            [EnumMember(Value = \"CONTINUE\")]\n+            CONTINUEEnum = 7,\n+            /// <summary>\n+            /// Enum CREATEDEnum for CREATED\n+            /// </summary>\n+            [EnumMember(Value = \"CREATED\")]\n+            CREATEDEnum = 8,\n+            /// <summary>\n+            /// Enum DESTINATIONLOCKEDEnum for DESTINATION_LOCKED\n+            /// </summary>\n+            [EnumMember(Value = \"DESTINATION_LOCKED\")]\n+            DESTINATIONLOCKEDEnum = 9,\n+            /// <summary>\n+            /// Enum EXPECTATIONFAILEDEnum for EXPECTATION_FAILED\n+            /// </summary>\n+            [EnumMember(Value = \"EXPECTATION_FAILED\")]\n+            EXPECTATIONFAILEDEnum = 10,\n+            /// <summary>\n+            /// Enum FAILEDDEPENDENCYEnum for FAILED_DEPENDENCY\n+            /// </summary>\n+            [EnumMember(Value = \"FAILED_DEPENDENCY\")]\n+            FAILEDDEPENDENCYEnum = 11,\n+            /// <summary>\n+            /// Enum FORBIDDENEnum for FORBIDDEN\n+            /// </summary>\n+            [EnumMember(Value = \"FORBIDDEN\")]\n+            FORBIDDENEnum = 12,\n+            /// <summary>\n+            /// Enum FOUNDEnum for FOUND\n+            /// </summary>\n+            [EnumMember(Value = \"FOUND\")]\n+            FOUNDEnum = 13,\n+            /// <summary>\n+            /// Enum GATEWAYTIMEOUTEnum for GATEWAY_TIMEOUT\n+            /// </summary>\n+            [EnumMember(Value = \"GATEWAY_TIMEOUT\")]\n+            GATEWAYTIMEOUTEnum = 14,\n+            /// <summary>\n+            /// Enum GONEEnum for GONE\n+            /// </summary>\n+            [EnumMember(Value = \"GONE\")]\n+            GONEEnum = 15,\n+            /// <summary>\n+            /// Enum HTTPVERSIONNOTSUPPORTEDEnum for HTTP_VERSION_NOT_SUPPORTED\n+            /// </summary>\n+            [EnumMember(Value = \"HTTP_VERSION_NOT_SUPPORTED\")]\n+            HTTPVERSIONNOTSUPPORTEDEnum = 16,\n+            /// <summary>\n+            /// Enum IMUSEDEnum for IM_USED\n+            /// </summary>\n+            [EnumMember(Value = \"IM_USED\")]\n+            IMUSEDEnum = 17,\n+            /// <summary>\n+            /// Enum INSUFFICIENTSPACEONRESOURCEEnum for INSUFFICIENT_SPACE_ON_RESOURCE\n+            /// </summary>\n+            [EnumMember(Value = \"INSUFFICIENT_SPACE_ON_RESOURCE\")]\n+            INSUFFICIENTSPACEONRESOURCEEnum = 18,\n+            /// <summary>\n+            /// Enum INSUFFICIENTSTORAGEEnum for INSUFFICIENT_STORAGE\n+            /// </summary>\n+            [EnumMember(Value = \"INSUFFICIENT_STORAGE\")]\n+            INSUFFICIENTSTORAGEEnum = 19,\n+            /// <summary>\n+            /// Enum INTERNALSERVERERROREnum for INTERNAL_SERVER_ERROR\n+            /// </summary>\n+            [EnumMember(Value = \"INTERNAL_SERVER_ERROR\")]\n+            INTERNALSERVERERROREnum = 20,\n+            /// <summary>\n+            /// Enum IAMATEAPOTEnum for I_AM_A_TEAPOT\n+            /// </summary>\n+            [EnumMember(Value = \"I_AM_A_TEAPOT\")]\n+            IAMATEAPOTEnum = 21,\n+            /// <summary>\n+            /// Enum LENGTHREQUIREDEnum for LENGTH_REQUIRED\n+            /// </summary>\n+            [EnumMember(Value = \"LENGTH_REQUIRED\")]\n+            LENGTHREQUIREDEnum = 22,\n+            /// <summary>\n+            /// Enum LOCKEDEnum for LOCKED\n+            /// </summary>\n+            [EnumMember(Value = \"LOCKED\")]\n+            LOCKEDEnum = 23,\n+            /// <summary>\n+            /// Enum LOOPDETECTEDEnum for LOOP_DETECTED\n+            /// </summary>\n+            [EnumMember(Value = \"LOOP_DETECTED\")]\n+            LOOPDETECTEDEnum = 24,\n+            /// <summary>\n+            /// Enum METHODFAILUREEnum for METHOD_FAILURE\n+            /// </summary>\n+            [EnumMember(Value = \"METHOD_FAILURE\")]\n+            METHODFAILUREEnum = 25,\n+            /// <summary>\n+            /// Enum METHODNOTALLOWEDEnum for METHOD_NOT_ALLOWED\n+            /// </summary>\n+            [EnumMember(Value = \"METHOD_NOT_ALLOWED\")]\n+            METHODNOTALLOWEDEnum = 26,\n+            /// <summary>\n+            /// Enum MOVEDPERMANENTLYEnum for MOVED_PERMANENTLY\n+            /// </summary>\n+            [EnumMember(Value = \"MOVED_PERMANENTLY\")]\n+            MOVEDPERMANENTLYEnum = 27,\n+            /// <summary>\n+            /// Enum MOVEDTEMPORARILYEnum for MOVED_TEMPORARILY\n+            /// </summary>\n+            [EnumMember(Value = \"MOVED_TEMPORARILY\")]\n+            MOVEDTEMPORARILYEnum = 28,\n+            /// <summary>\n+            /// Enum MULTIPLECHOICESEnum for MULTIPLE_CHOICES\n+            /// </summary>\n+            [EnumMember(Value = \"MULTIPLE_CHOICES\")]\n+            MULTIPLECHOICESEnum = 29,\n+            /// <summary>\n+            /// Enum MULTISTATUSEnum for MULTI_STATUS\n+            /// </summary>\n+            [EnumMember(Value = \"MULTI_STATUS\")]\n+            MULTISTATUSEnum = 30,\n+            /// <summary>\n+            /// Enum NETWORKAUTHENTICATIONREQUIREDEnum for NETWORK_AUTHENTICATION_REQUIRED\n+            /// </summary>\n+            [EnumMember(Value = \"NETWORK_AUTHENTICATION_REQUIRED\")]\n+            NETWORKAUTHENTICATIONREQUIREDEnum = 31,\n+            /// <summary>\n+            /// Enum NONAUTHORITATIVEINFORMATIONEnum for NON_AUTHORITATIVE_INFORMATION\n+            /// </summary>\n+            [EnumMember(Value = \"NON_AUTHORITATIVE_INFORMATION\")]\n+            NONAUTHORITATIVEINFORMATIONEnum = 32,\n+            /// <summary>\n+            /// Enum NOTACCEPTABLEEnum for NOT_ACCEPTABLE\n+            /// </summary>\n+            [EnumMember(Value = \"NOT_ACCEPTABLE\")]\n+            NOTACCEPTABLEEnum = 33,\n+            /// <summary>\n+            /// Enum NOTEXTENDEDEnum for NOT_EXTENDED\n+            /// </summary>\n+            [EnumMember(Value = \"NOT_EXTENDED\")]\n+            NOTEXTENDEDEnum = 34,\n+            /// <summary>\n+            /// Enum NOTFOUNDEnum for NOT_FOUND\n+            /// </summary>\n+            [EnumMember(Value = \"NOT_FOUND\")]\n+            NOTFOUNDEnum = 35,\n+            /// <summary>\n+            /// Enum NOTIMPLEMENTEDEnum for NOT_IMPLEMENTED\n+            /// </summary>\n+            [EnumMember(Value = \"NOT_IMPLEMENTED\")]\n+            NOTIMPLEMENTEDEnum = 36,\n+            /// <summary>\n+            /// Enum NOTMODIFIEDEnum for NOT_MODIFIED\n+            /// </summary>\n+            [EnumMember(Value = \"NOT_MODIFIED\")]\n+            NOTMODIFIEDEnum = 37,\n+            /// <summary>\n+            /// Enum NOCONTENTEnum for NO_CONTENT\n+            /// </summary>\n+            [EnumMember(Value = \"NO_CONTENT\")]\n+            NOCONTENTEnum = 38,\n+            /// <summary>\n+            /// Enum OKEnum for OK\n+            /// </summary>\n+            [EnumMember(Value = \"OK\")]\n+            OKEnum = 39,\n+            /// <summary>\n+            /// Enum PARTIALCONTENTEnum for PARTIAL_CONTENT\n+            /// </summary>\n+            [EnumMember(Value = \"PARTIAL_CONTENT\")]\n+            PARTIALCONTENTEnum = 40,\n+            /// <summary>\n+            /// Enum PAYLOADTOOLARGEEnum for PAYLOAD_TOO_LARGE\n+            /// </summary>\n+            [EnumMember(Value = \"PAYLOAD_TOO_LARGE\")]\n+            PAYLOADTOOLARGEEnum = 41,\n+            /// <summary>\n+            /// Enum PAYMENTREQUIREDEnum for PAYMENT_REQUIRED\n+            /// </summary>\n+            [EnumMember(Value = \"PAYMENT_REQUIRED\")]\n+            PAYMENTREQUIREDEnum = 42,\n+            /// <summary>\n+            /// Enum PERMANENTREDIRECTEnum for PERMANENT_REDIRECT\n+            /// </summary>\n+            [EnumMember(Value = \"PERMANENT_REDIRECT\")]\n+            PERMANENTREDIRECTEnum = 43,\n+            /// <summary>\n+            /// Enum PRECONDITIONFAILEDEnum for PRECONDITION_FAILED\n+            /// </summary>\n+            [EnumMember(Value = \"PRECONDITION_FAILED\")]\n+            PRECONDITIONFAILEDEnum = 44,\n+            /// <summary>\n+            /// Enum PRECONDITIONREQUIREDEnum for PRECONDITION_REQUIRED\n+            /// </summary>\n+            [EnumMember(Value = \"PRECONDITION_REQUIRED\")]\n+            PRECONDITIONREQUIREDEnum = 45,\n+            /// <summary>\n+            /// Enum PROCESSINGEnum for PROCESSING\n+            /// </summary>\n+            [EnumMember(Value = \"PROCESSING\")]\n+            PROCESSINGEnum = 46,\n+            /// <summary>\n+            /// Enum PROXYAUTHENTICATIONREQUIREDEnum for PROXY_AUTHENTICATION_REQUIRED\n+            /// </summary>\n+            [EnumMember(Value = \"PROXY_AUTHENTICATION_REQUIRED\")]\n+            PROXYAUTHENTICATIONREQUIREDEnum = 47,\n+            /// <summary>\n+            /// Enum REQUESTEDRANGENOTSATISFIABLEEnum for REQUESTED_RANGE_NOT_SATISFIABLE\n+            /// </summary>\n+            [EnumMember(Value = \"REQUESTED_RANGE_NOT_SATISFIABLE\")]\n+            REQUESTEDRANGENOTSATISFIABLEEnum = 48,\n+            /// <summary>\n+            /// Enum REQUESTENTITYTOOLARGEEnum for REQUEST_ENTITY_TOO_LARGE\n+            /// </summary>\n+            [EnumMember(Value = \"REQUEST_ENTITY_TOO_LARGE\")]\n+            REQUESTENTITYTOOLARGEEnum = 49,\n+            /// <summary>\n+            /// Enum REQUESTHEADERFIELDSTOOLARGEEnum for REQUEST_HEADER_FIELDS_TOO_LARGE\n+            /// </summary>\n+            [EnumMember(Value = \"REQUEST_HEADER_FIELDS_TOO_LARGE\")]\n+            REQUESTHEADERFIELDSTOOLARGEEnum = 50,\n+            /// <summary>\n+            /// Enum REQUESTTIMEOUTEnum for REQUEST_TIMEOUT\n+            /// </summary>\n+            [EnumMember(Value = \"REQUEST_TIMEOUT\")]\n+            REQUESTTIMEOUTEnum = 51,\n+            /// <summary>\n+            /// Enum REQUESTURITOOLONGEnum for REQUEST_URI_TOO_LONG\n+            /// </summary>\n+            [EnumMember(Value = \"REQUEST_URI_TOO_LONG\")]\n+            REQUESTURITOOLONGEnum = 52,\n+            /// <summary>\n+            /// Enum RESETCONTENTEnum for RESET_CONTENT\n+            /// </summary>\n+            [EnumMember(Value = \"RESET_CONTENT\")]\n+            RESETCONTENTEnum = 53,\n+            /// <summary>\n+            /// Enum SEEOTHEREnum for SEE_OTHER\n+            /// </summary>\n+            [EnumMember(Value = \"SEE_OTHER\")]\n+            SEEOTHEREnum = 54,\n+            /// <summary>\n+            /// Enum SERVICEUNAVAILABLEEnum for SERVICE_UNAVAILABLE\n+            /// </summary>\n+            [EnumMember(Value = \"SERVICE_UNAVAILABLE\")]\n+            SERVICEUNAVAILABLEEnum = 55,\n+            /// <summary>\n+            /// Enum SWITCHINGPROTOCOLSEnum for SWITCHING_PROTOCOLS\n+            /// </summary>\n+            [EnumMember(Value = \"SWITCHING_PROTOCOLS\")]\n+            SWITCHINGPROTOCOLSEnum = 56,\n+            /// <summary>\n+            /// Enum TEMPORARYREDIRECTEnum for TEMPORARY_REDIRECT\n+            /// </summary>\n+            [EnumMember(Value = \"TEMPORARY_REDIRECT\")]\n+            TEMPORARYREDIRECTEnum = 57,\n+            /// <summary>\n+            /// Enum TOOEARLYEnum for TOO_EARLY\n+            /// </summary>\n+            [EnumMember(Value = \"TOO_EARLY\")]\n+            TOOEARLYEnum = 58,\n+            /// <summary>\n+            /// Enum TOOMANYREQUESTSEnum for TOO_MANY_REQUESTS\n+            /// </summary>\n+            [EnumMember(Value = \"TOO_MANY_REQUESTS\")]\n+            TOOMANYREQUESTSEnum = 59,\n+            /// <summary>\n+            /// Enum UNAUTHORIZEDEnum for UNAUTHORIZED\n+            /// </summary>\n+            [EnumMember(Value = \"UNAUTHORIZED\")]\n+            UNAUTHORIZEDEnum = 60,\n+            /// <summary>\n+            /// Enum UNAVAILABLEFORLEGALREASONSEnum for UNAVAILABLE_FOR_LEGAL_REASONS\n+            /// </summary>\n+            [EnumMember(Value = \"UNAVAILABLE_FOR_LEGAL_REASONS\")]\n+            UNAVAILABLEFORLEGALREASONSEnum = 61,\n+            /// <summary>\n+            /// Enum UNPROCESSABLEENTITYEnum for UNPROCESSABLE_ENTITY\n+            /// </summary>\n+            [EnumMember(Value = \"UNPROCESSABLE_ENTITY\")]\n+            UNPROCESSABLEENTITYEnum = 62,\n+            /// <summary>\n+            /// Enum UNSUPPORTEDMEDIATYPEEnum for UNSUPPORTED_MEDIA_TYPE\n+            /// </summary>\n+            [EnumMember(Value = \"UNSUPPORTED_MEDIA_TYPE\")]\n+            UNSUPPORTEDMEDIATYPEEnum = 63,\n+            /// <summary>\n+            /// Enum UPGRADEREQUIREDEnum for UPGRADE_REQUIRED\n+            /// </summary>\n+            [EnumMember(Value = \"UPGRADE_REQUIRED\")]\n+            UPGRADEREQUIREDEnum = 64,\n+            /// <summary>\n+            /// Enum URITOOLONGEnum for URI_TOO_LONG\n+            /// </summary>\n+            [EnumMember(Value = \"URI_TOO_LONG\")]\n+            URITOOLONGEnum = 65,\n+            /// <summary>\n+            /// Enum USEPROXYEnum for USE_PROXY\n+            /// </summary>\n+            [EnumMember(Value = \"USE_PROXY\")]\n+            USEPROXYEnum = 66,\n+            /// <summary>\n+            /// Enum VARIANTALSONEGOTIATESEnum for VARIANT_ALSO_NEGOTIATES\n+            /// </summary>\n+            [EnumMember(Value = \"VARIANT_ALSO_NEGOTIATES\")]\n+            VARIANTALSONEGOTIATESEnum = 67        }\n+\n+        /// <summary>\n+        /// Gets or Sets Status\n+        /// </summary>\n+        [DataMember(Name=\"status\")]\n+        public StatusEnum? Status { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets View\n+        /// </summary>\n+        [DataMember(Name=\"view\")]\n+        public View View { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets ViewName\n+        /// </summary>\n+        [DataMember(Name=\"viewName\")]\n+        public string ViewName { get; set; }\n+\n+        /// <summary>\n+        /// Returns the string presentation of the object\n+        /// </summary>\n+        /// <returns>String presentation of the object</returns>\n+        public override string ToString()\n+        {\n+            var sb = new StringBuilder();\n+            sb.Append(\"class ModelAndView {\\n\");\n+            sb.Append(\"  Empty: \").Append(Empty).Append(\"\\n\");\n+            sb.Append(\"  Model: \").Append(Model).Append(\"\\n\");\n+            sb.Append(\"  ModelMap: \").Append(ModelMap).Append(\"\\n\");\n+            sb.Append(\"  Reference: \").Append(Reference).Append(\"\\n\");\n+            sb.Append(\"  Status: \").Append(Status).Append(\"\\n\");\n+            sb.Append(\"  View: \").Append(View).Append(\"\\n\");\n+            sb.Append(\"  ViewName: \").Append(ViewName).Append(\"\\n\");\n+            sb.Append(\"}\\n\");\n+            return sb.ToString();\n+        }\n+\n+        /// <summary>\n+        /// Returns the JSON string presentation of the object\n+        /// </summary>\n+        /// <returns>JSON string presentation of the object</returns>\n+        public string ToJson()\n+        {\n+            return JsonConvert.SerializeObject(this, Formatting.Indented);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if objects are equal\n+        /// </summary>\n+        /// <param name=\"obj\">Object to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public override bool Equals(object obj)\n+        {\n+            if (ReferenceEquals(null, obj)) return false;\n+            if (ReferenceEquals(this, obj)) return true;\n+            return obj.GetType() == GetType() && Equals((ModelAndView)obj);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if ModelAndView instances are equal\n+        /// </summary>\n+        /// <param name=\"other\">Instance of ModelAndView to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public bool Equals(ModelAndView other)\n+        {\n+            if (ReferenceEquals(null, other)) return false;\n+            if (ReferenceEquals(this, other)) return true;\n+\n+            return \n+                (\n+                    Empty == other.Empty ||\n+                    Empty != null &&\n+                    Empty.Equals(other.Empty)\n+                ) && \n+                (\n+                    Model == other.Model ||\n+                    Model != null &&\n+                    Model.Equals(other.Model)\n+                ) && \n+                (\n+                    ModelMap == other.ModelMap ||\n+                    ModelMap != null &&\n+                    ModelMap.SequenceEqual(other.ModelMap)\n+                ) && \n+                (\n+                    Reference == other.Reference ||\n+                    Reference != null &&\n+                    Reference.Equals(other.Reference)\n+                ) && \n+                (\n+                    Status == other.Status ||\n+                    Status != null &&\n+                    Status.Equals(other.Status)\n+                ) && \n+                (\n+                    View == other.View ||\n+                    View != null &&\n+                    View.Equals(other.View)\n+                ) && \n+                (\n+                    ViewName == other.ViewName ||\n+                    ViewName != null &&\n+                    ViewName.Equals(other.ViewName)\n+                );\n+        }\n+\n+        /// <summary>\n+        /// Gets the hash code\n+        /// </summary>\n+        /// <returns>Hash code</returns>\n+        public override int GetHashCode()\n+        {\n+            unchecked // Overflow is fine, just wrap\n+            {\n+                var hashCode = 41;\n+                // Suitable nullity checks etc, of course :)\n+                    if (Empty != null)\n+                    hashCode = hashCode * 59 + Empty.GetHashCode();\n+                    if (Model != null)\n+                    hashCode = hashCode * 59 + Model.GetHashCode();\n+                    if (ModelMap != null)\n+                    hashCode = hashCode * 59 + ModelMap.GetHashCode();\n+                    if (Reference != null)\n+                    hashCode = hashCode * 59 + Reference.GetHashCode();\n+                    if (Status != null)\n+                    hashCode = hashCode * 59 + Status.GetHashCode();\n+                    if (View != null)\n+                    hashCode = hashCode * 59 + View.GetHashCode();\n+                    if (ViewName != null)\n+                    hashCode = hashCode * 59 + ViewName.GetHashCode();\n+                return hashCode;\n+            }\n+        }\n+\n+        #region Operators\n+        #pragma warning disable 1591\n+\n+        public static bool operator ==(ModelAndView left, ModelAndView right)\n+        {\n+            return Equals(left, right);\n+        }\n+\n+        public static bool operator !=(ModelAndView left, ModelAndView right)\n+        {\n+            return !Equals(left, right);\n+        }\n+\n+        #pragma warning restore 1591\n+        #endregion Operators\n+    }\n+}"
  },
  {
    "sha": "ae315ec9e3a63464058d1322aabc4033943a533e",
    "filename": "aspnetcore/src/IO.Swagger/Models/User.cs",
    "status": "added",
    "additions": 175,
    "deletions": 0,
    "changes": 175,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/User.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/User.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Models/User.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,175 @@\n+/*\n+ * SponTan API\n+ *\n+ * Api Documentation\n+ *\n+ * OpenAPI spec version: 1.0\n+ * \n+ * Generated by: https://github.com/swagger-api/swagger-codegen.git\n+ */\n+using System;\n+using System.Linq;\n+using System.IO;\n+using System.Text;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.Collections.ObjectModel;\n+using System.ComponentModel.DataAnnotations;\n+using System.Runtime.Serialization;\n+using Newtonsoft.Json;\n+\n+namespace IO.Swagger.Models\n+{ \n+    /// <summary>\n+    /// \n+    /// </summary>\n+    [DataContract]\n+    public partial class User : IEquatable<User>\n+    { \n+        /// <summary>\n+        /// Gets or Sets Email\n+        /// </summary>\n+        [DataMember(Name=\"email\")]\n+        public string Email { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets Friends\n+        /// </summary>\n+        [DataMember(Name=\"friends\")]\n+        public List<User> Friends { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets Id\n+        /// </summary>\n+        [DataMember(Name=\"id\")]\n+        public long? Id { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets Name\n+        /// </summary>\n+        [DataMember(Name=\"name\")]\n+        public string Name { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets Password\n+        /// </summary>\n+        [DataMember(Name=\"password\")]\n+        public string Password { get; set; }\n+\n+        /// <summary>\n+        /// Returns the string presentation of the object\n+        /// </summary>\n+        /// <returns>String presentation of the object</returns>\n+        public override string ToString()\n+        {\n+            var sb = new StringBuilder();\n+            sb.Append(\"class User {\\n\");\n+            sb.Append(\"  Email: \").Append(Email).Append(\"\\n\");\n+            sb.Append(\"  Friends: \").Append(Friends).Append(\"\\n\");\n+            sb.Append(\"  Id: \").Append(Id).Append(\"\\n\");\n+            sb.Append(\"  Name: \").Append(Name).Append(\"\\n\");\n+            sb.Append(\"  Password: \").Append(Password).Append(\"\\n\");\n+            sb.Append(\"}\\n\");\n+            return sb.ToString();\n+        }\n+\n+        /// <summary>\n+        /// Returns the JSON string presentation of the object\n+        /// </summary>\n+        /// <returns>JSON string presentation of the object</returns>\n+        public string ToJson()\n+        {\n+            return JsonConvert.SerializeObject(this, Formatting.Indented);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if objects are equal\n+        /// </summary>\n+        /// <param name=\"obj\">Object to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public override bool Equals(object obj)\n+        {\n+            if (ReferenceEquals(null, obj)) return false;\n+            if (ReferenceEquals(this, obj)) return true;\n+            return obj.GetType() == GetType() && Equals((User)obj);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if User instances are equal\n+        /// </summary>\n+        /// <param name=\"other\">Instance of User to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public bool Equals(User other)\n+        {\n+            if (ReferenceEquals(null, other)) return false;\n+            if (ReferenceEquals(this, other)) return true;\n+\n+            return \n+                (\n+                    Email == other.Email ||\n+                    Email != null &&\n+                    Email.Equals(other.Email)\n+                ) && \n+                (\n+                    Friends == other.Friends ||\n+                    Friends != null &&\n+                    Friends.SequenceEqual(other.Friends)\n+                ) && \n+                (\n+                    Id == other.Id ||\n+                    Id != null &&\n+                    Id.Equals(other.Id)\n+                ) && \n+                (\n+                    Name == other.Name ||\n+                    Name != null &&\n+                    Name.Equals(other.Name)\n+                ) && \n+                (\n+                    Password == other.Password ||\n+                    Password != null &&\n+                    Password.Equals(other.Password)\n+                );\n+        }\n+\n+        /// <summary>\n+        /// Gets the hash code\n+        /// </summary>\n+        /// <returns>Hash code</returns>\n+        public override int GetHashCode()\n+        {\n+            unchecked // Overflow is fine, just wrap\n+            {\n+                var hashCode = 41;\n+                // Suitable nullity checks etc, of course :)\n+                    if (Email != null)\n+                    hashCode = hashCode * 59 + Email.GetHashCode();\n+                    if (Friends != null)\n+                    hashCode = hashCode * 59 + Friends.GetHashCode();\n+                    if (Id != null)\n+                    hashCode = hashCode * 59 + Id.GetHashCode();\n+                    if (Name != null)\n+                    hashCode = hashCode * 59 + Name.GetHashCode();\n+                    if (Password != null)\n+                    hashCode = hashCode * 59 + Password.GetHashCode();\n+                return hashCode;\n+            }\n+        }\n+\n+        #region Operators\n+        #pragma warning disable 1591\n+\n+        public static bool operator ==(User left, User right)\n+        {\n+            return Equals(left, right);\n+        }\n+\n+        public static bool operator !=(User left, User right)\n+        {\n+            return !Equals(left, right);\n+        }\n+\n+        #pragma warning restore 1591\n+        #endregion Operators\n+    }\n+}"
  },
  {
    "sha": "1e54e6c084023fd4255f49c9ec8b980711d0b15b",
    "filename": "aspnetcore/src/IO.Swagger/Models/UserDTO.cs",
    "status": "added",
    "additions": 133,
    "deletions": 0,
    "changes": 133,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/UserDTO.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/UserDTO.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Models/UserDTO.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,133 @@\n+/*\n+ * SponTan API\n+ *\n+ * Api Documentation\n+ *\n+ * OpenAPI spec version: 1.0\n+ * \n+ * Generated by: https://github.com/swagger-api/swagger-codegen.git\n+ */\n+using System;\n+using System.Linq;\n+using System.IO;\n+using System.Text;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.Collections.ObjectModel;\n+using System.ComponentModel.DataAnnotations;\n+using System.Runtime.Serialization;\n+using Newtonsoft.Json;\n+\n+namespace IO.Swagger.Models\n+{ \n+    /// <summary>\n+    /// \n+    /// </summary>\n+    [DataContract]\n+    public partial class UserDTO : IEquatable<UserDTO>\n+    { \n+        /// <summary>\n+        /// Gets or Sets Email\n+        /// </summary>\n+        [DataMember(Name=\"email\")]\n+        public string Email { get; set; }\n+\n+        /// <summary>\n+        /// Gets or Sets Name\n+        /// </summary>\n+        [DataMember(Name=\"name\")]\n+        public string Name { get; set; }\n+\n+        /// <summary>\n+        /// Returns the string presentation of the object\n+        /// </summary>\n+        /// <returns>String presentation of the object</returns>\n+        public override string ToString()\n+        {\n+            var sb = new StringBuilder();\n+            sb.Append(\"class UserDTO {\\n\");\n+            sb.Append(\"  Email: \").Append(Email).Append(\"\\n\");\n+            sb.Append(\"  Name: \").Append(Name).Append(\"\\n\");\n+            sb.Append(\"}\\n\");\n+            return sb.ToString();\n+        }\n+\n+        /// <summary>\n+        /// Returns the JSON string presentation of the object\n+        /// </summary>\n+        /// <returns>JSON string presentation of the object</returns>\n+        public string ToJson()\n+        {\n+            return JsonConvert.SerializeObject(this, Formatting.Indented);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if objects are equal\n+        /// </summary>\n+        /// <param name=\"obj\">Object to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public override bool Equals(object obj)\n+        {\n+            if (ReferenceEquals(null, obj)) return false;\n+            if (ReferenceEquals(this, obj)) return true;\n+            return obj.GetType() == GetType() && Equals((UserDTO)obj);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if UserDTO instances are equal\n+        /// </summary>\n+        /// <param name=\"other\">Instance of UserDTO to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public bool Equals(UserDTO other)\n+        {\n+            if (ReferenceEquals(null, other)) return false;\n+            if (ReferenceEquals(this, other)) return true;\n+\n+            return \n+                (\n+                    Email == other.Email ||\n+                    Email != null &&\n+                    Email.Equals(other.Email)\n+                ) && \n+                (\n+                    Name == other.Name ||\n+                    Name != null &&\n+                    Name.Equals(other.Name)\n+                );\n+        }\n+\n+        /// <summary>\n+        /// Gets the hash code\n+        /// </summary>\n+        /// <returns>Hash code</returns>\n+        public override int GetHashCode()\n+        {\n+            unchecked // Overflow is fine, just wrap\n+            {\n+                var hashCode = 41;\n+                // Suitable nullity checks etc, of course :)\n+                    if (Email != null)\n+                    hashCode = hashCode * 59 + Email.GetHashCode();\n+                    if (Name != null)\n+                    hashCode = hashCode * 59 + Name.GetHashCode();\n+                return hashCode;\n+            }\n+        }\n+\n+        #region Operators\n+        #pragma warning disable 1591\n+\n+        public static bool operator ==(UserDTO left, UserDTO right)\n+        {\n+            return Equals(left, right);\n+        }\n+\n+        public static bool operator !=(UserDTO left, UserDTO right)\n+        {\n+            return !Equals(left, right);\n+        }\n+\n+        #pragma warning restore 1591\n+        #endregion Operators\n+    }\n+}"
  },
  {
    "sha": "3727bbe806a500c8785fc4f9f44530912ae3a445",
    "filename": "aspnetcore/src/IO.Swagger/Models/View.cs",
    "status": "added",
    "additions": 119,
    "deletions": 0,
    "changes": 119,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/View.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Models/View.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Models/View.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,119 @@\n+/*\n+ * SponTan API\n+ *\n+ * Api Documentation\n+ *\n+ * OpenAPI spec version: 1.0\n+ * \n+ * Generated by: https://github.com/swagger-api/swagger-codegen.git\n+ */\n+using System;\n+using System.Linq;\n+using System.IO;\n+using System.Text;\n+using System.Collections;\n+using System.Collections.Generic;\n+using System.Collections.ObjectModel;\n+using System.ComponentModel.DataAnnotations;\n+using System.Runtime.Serialization;\n+using Newtonsoft.Json;\n+\n+namespace IO.Swagger.Models\n+{ \n+    /// <summary>\n+    /// \n+    /// </summary>\n+    [DataContract]\n+    public partial class View : IEquatable<View>\n+    { \n+        /// <summary>\n+        /// Gets or Sets ContentType\n+        /// </summary>\n+        [DataMember(Name=\"contentType\")]\n+        public string ContentType { get; set; }\n+\n+        /// <summary>\n+        /// Returns the string presentation of the object\n+        /// </summary>\n+        /// <returns>String presentation of the object</returns>\n+        public override string ToString()\n+        {\n+            var sb = new StringBuilder();\n+            sb.Append(\"class View {\\n\");\n+            sb.Append(\"  ContentType: \").Append(ContentType).Append(\"\\n\");\n+            sb.Append(\"}\\n\");\n+            return sb.ToString();\n+        }\n+\n+        /// <summary>\n+        /// Returns the JSON string presentation of the object\n+        /// </summary>\n+        /// <returns>JSON string presentation of the object</returns>\n+        public string ToJson()\n+        {\n+            return JsonConvert.SerializeObject(this, Formatting.Indented);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if objects are equal\n+        /// </summary>\n+        /// <param name=\"obj\">Object to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public override bool Equals(object obj)\n+        {\n+            if (ReferenceEquals(null, obj)) return false;\n+            if (ReferenceEquals(this, obj)) return true;\n+            return obj.GetType() == GetType() && Equals((View)obj);\n+        }\n+\n+        /// <summary>\n+        /// Returns true if View instances are equal\n+        /// </summary>\n+        /// <param name=\"other\">Instance of View to be compared</param>\n+        /// <returns>Boolean</returns>\n+        public bool Equals(View other)\n+        {\n+            if (ReferenceEquals(null, other)) return false;\n+            if (ReferenceEquals(this, other)) return true;\n+\n+            return \n+                (\n+                    ContentType == other.ContentType ||\n+                    ContentType != null &&\n+                    ContentType.Equals(other.ContentType)\n+                );\n+        }\n+\n+        /// <summary>\n+        /// Gets the hash code\n+        /// </summary>\n+        /// <returns>Hash code</returns>\n+        public override int GetHashCode()\n+        {\n+            unchecked // Overflow is fine, just wrap\n+            {\n+                var hashCode = 41;\n+                // Suitable nullity checks etc, of course :)\n+                    if (ContentType != null)\n+                    hashCode = hashCode * 59 + ContentType.GetHashCode();\n+                return hashCode;\n+            }\n+        }\n+\n+        #region Operators\n+        #pragma warning disable 1591\n+\n+        public static bool operator ==(View left, View right)\n+        {\n+            return Equals(left, right);\n+        }\n+\n+        public static bool operator !=(View left, View right)\n+        {\n+            return !Equals(left, right);\n+        }\n+\n+        #pragma warning restore 1591\n+        #endregion Operators\n+    }\n+}"
  },
  {
    "sha": "ae409c1ecb89465b31c051ebf810c318d7c254ed",
    "filename": "aspnetcore/src/IO.Swagger/Program.cs",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Program.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Program.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Program.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,29 @@\n+using Microsoft.AspNetCore.Hosting;\n+using Microsoft.AspNetCore;\n+\n+namespace IO.Swagger\n+{\n+    /// <summary>\n+    /// Program\n+    /// </summary>\n+    public class Program\n+    {\n+        /// <summary>\n+        /// Main\n+        /// </summary>\n+        /// <param name=\"args\"></param>\n+        public static void Main(string[] args)\n+        {\n+            CreateWebHostBuilder(args).Build().Run();\n+        }\n+\n+        /// <summary>\n+        /// Create the web host builder.\n+        /// </summary>\n+        /// <param name=\"args\"></param>\n+        /// <returns>IWebHostBuilder</returns>\n+        public static IWebHostBuilder CreateWebHostBuilder(string[] args) =>\n+            WebHost.CreateDefaultBuilder(args)\n+                .UseStartup<Startup>();\n+    }\n+}"
  },
  {
    "sha": "5bb6f829942229dd4dcbeabedea0a018cd642ce1",
    "filename": "aspnetcore/src/IO.Swagger/Properties/launchSettings.json",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Properties/launchSettings.json",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Properties/launchSettings.json",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Properties/launchSettings.json?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,36 @@\n+{\n+  \"iisSettings\": {\n+    \"windowsAuthentication\": false,\n+    \"anonymousAuthentication\": true,\n+    \"iisExpress\": {\n+      \"applicationUrl\": \"http://localhost:50352/\",\n+      \"sslPort\": 0\n+    }\n+  },\n+  \"profiles\": {\n+    \"IIS Express\": {\n+      \"commandName\": \"IISExpress\",\n+      \"launchBrowser\": true,\n+      \"launchUrl\": \"swagger/\",\n+      \"environmentVariables\": {\n+        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\n+      }\n+    },\n+    \"web\": {\n+      \"commandName\": \"Project\",\n+      \"launchBrowser\": true,\n+      \"launchUrl\": \"swagger\",\n+      \"applicationUrl\": \"https://localhost:5001;http://localhost:5000\",\n+      \"environmentVariables\": {\n+        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\n+      }\n+    },\n+    \"Docker\": {\n+      \"commandName\": \"Docker\",\n+      \"launchBrowser\": true,\n+      \"launchUrl\": \"{Scheme}://{ServiceHost}:{ServicePort}/swagger\",\n+      \"publishAllPorts\": true,\n+      \"useSSL\": true\n+    }\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "5bfcae05a8e0be34330824b27b06f19223c0bd33",
    "filename": "aspnetcore/src/IO.Swagger/Startup.cs",
    "status": "added",
    "additions": 143,
    "deletions": 0,
    "changes": 143,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Startup.cs",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/Startup.cs",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/Startup.cs?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,143 @@\n+/*\n+ * SponTan API\n+ *\n+ * Api Documentation\n+ *\n+ * OpenAPI spec version: 1.0\n+ * \n+ * Generated by: https://github.com/swagger-api/swagger-codegen.git\n+ */\n+using System;\n+using System.IO;\n+using Microsoft.AspNetCore.Authentication;\n+using Microsoft.AspNetCore.Builder;\n+using Microsoft.AspNetCore.Hosting;\n+using Microsoft.Extensions.Configuration;\n+using Microsoft.Extensions.DependencyInjection;\n+using Microsoft.Extensions.Hosting;\n+using Microsoft.Extensions.Logging;\n+using Microsoft.OpenApi.Models;\n+using Newtonsoft.Json.Converters;\n+using Newtonsoft.Json.Serialization;\n+using Swashbuckle.AspNetCore.Swagger;\n+using Swashbuckle.AspNetCore.SwaggerGen;\n+using IO.Swagger.Filters;\n+\n+\n+namespace IO.Swagger\n+{\n+    /// <summary>\n+    /// Startup\n+    /// </summary>\n+    public class Startup\n+    {\n+        private readonly IWebHostEnvironment _hostingEnv;\n+\n+        private IConfiguration Configuration { get; }\n+\n+        /// <summary>\n+        /// Constructor\n+        /// </summary>\n+        /// <param name=\"env\"></param>\n+        /// <param name=\"configuration\"></param>\n+        public Startup(IWebHostEnvironment env, IConfiguration configuration)\n+        {\n+            _hostingEnv = env;\n+            Configuration = configuration;\n+        }\n+\n+        /// <summary>\n+        /// This method gets called by the runtime. Use this method to add services to the container.\n+        /// </summary>\n+        /// <param name=\"services\"></param>\n+        public void ConfigureServices(IServiceCollection services)\n+        {\n+            // Add framework services.\n+            services\n+                .AddMvc(options =>\n+                {\n+                    options.InputFormatters.RemoveType<Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter>();\n+                    options.OutputFormatters.RemoveType<Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter>();\n+                })\n+                .AddNewtonsoftJson(opts =>\n+                {\n+                    opts.SerializerSettings.ContractResolver = new CamelCasePropertyNamesContractResolver();\n+                    opts.SerializerSettings.Converters.Add(new StringEnumConverter(new CamelCaseNamingStrategy()));\n+                })\n+                .AddXmlSerializerFormatters();\n+\n+\n+            services\n+                .AddSwaggerGen(c =>\n+                {\n+                    c.SwaggerDoc(\"1.0\", new OpenApiInfo\n+                    {\n+                        Version = \"1.0\",\n+                        Title = \"SponTan API\",\n+                        Description = \"SponTan API (ASP.NET Core 3.1)\",\n+                        Contact = new OpenApiContact()\n+                        {\n+                           Name = \"Swagger Codegen Contributors\",\n+                           Url = new Uri(\"https://github.com/swagger-api/swagger-codegen\"),\n+                           Email = \"\"\n+                        },\n+                        TermsOfService = new Uri(\"urn:tos\")\n+                    });\n+                    c.CustomSchemaIds(type => type.FullName);\n+                    c.IncludeXmlComments($\"{AppContext.BaseDirectory}{Path.DirectorySeparatorChar}{_hostingEnv.ApplicationName}.xml\");\n+                    // Sets the basePath property in the Swagger document generated\n+                    c.DocumentFilter<BasePathFilter>(\"/danielloza1108/SponTan/1.0\");\n+\n+                    // Include DataAnnotation attributes on Controller Action parameters as Swagger validation rules (e.g required, pattern, ..)\n+                    // Use [ValidateModelState] on Actions to actually validate it in C# as well!\n+                    c.OperationFilter<GeneratePathParamsValidationFilter>();\n+                });\n+        }\n+\n+        /// <summary>\n+        /// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\n+        /// </summary>\n+        /// <param name=\"app\"></param>\n+        /// <param name=\"env\"></param>\n+        /// <param name=\"loggerFactory\"></param>\n+        public void Configure(IApplicationBuilder app, IWebHostEnvironment env, ILoggerFactory loggerFactory)\n+        {\n+            app.UseRouting();\n+\n+            //TODO: Uncomment this if you need wwwroot folder\n+            // app.UseStaticFiles();\n+\n+            app.UseAuthorization();\n+\n+            app.UseSwagger();\n+            app.UseSwaggerUI(c =>\n+            {\n+                //TODO: Either use the SwaggerGen generated Swagger contract (generated from C# classes)\n+                c.SwaggerEndpoint(\"/swagger/1.0/swagger.json\", \"SponTan API\");\n+\n+                //TODO: Or alternatively use the original Swagger contract that's included in the static files\n+                // c.SwaggerEndpoint(\"/swagger-original.json\", \"SponTan API Original\");\n+            });\n+\n+            //TODO: Use Https Redirection\n+            // app.UseHttpsRedirection();\n+\n+            app.UseEndpoints(endpoints =>\n+            {\n+                endpoints.MapControllers();\n+            });\n+\n+            if (env.IsDevelopment())\n+            {\n+                app.UseDeveloperExceptionPage();\n+            }\n+            else\n+            {\n+                //TODO: Enable production exception handling (https://docs.microsoft.com/en-us/aspnet/core/fundamentals/error-handling)\n+                app.UseExceptionHandler(\"/Error\");\n+\n+                app.UseHsts();\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "c6af7d9b069517acbbc954d1ab9b46557dc884ae",
    "filename": "aspnetcore/src/IO.Swagger/appsettings.json",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/appsettings.json",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/appsettings.json",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/appsettings.json?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,10 @@\n+{\n+  \"Logging\": {\n+    \"IncludeScopes\": false,\n+    \"LogLevel\": {\n+      \"Default\": \"Information\",\n+      \"System\": \"Information\",\n+      \"Microsoft\": \"Information\"\n+    }\n+  }\n+}"
  },
  {
    "sha": "a3b9f6add9c3c5feb6e8e69d6c7bfdef927214ee",
    "filename": "aspnetcore/src/IO.Swagger/web.config",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/web.config",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/web.config",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/web.config?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,14 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<configuration>\n+\n+  <!--\n+    Configure your application settings in appsettings.json. Learn more at http://go.microsoft.com/fwlink/?LinkId=786380\n+  -->\n+\n+  <system.webServer>\n+    <handlers>\n+      <add name=\"aspNetCore\" path=\"*\" verb=\"*\" modules=\"AspNetCoreModule\" resourceType=\"Unspecified\"/>\n+    </handlers>\n+    <aspNetCore processPath=\"%LAUNCHER_PATH%\" arguments=\"%LAUNCHER_ARGS%\" stdoutLogEnabled=\"false\" stdoutLogFile=\".\\logs\\stdout\" forwardWindowsAuthToken=\"false\"/>\n+  </system.webServer>\n+</configuration>"
  },
  {
    "sha": "6a0b78471a33c5f2ad176d1a1df8a78ddb76f92a",
    "filename": "aspnetcore/src/IO.Swagger/wwwroot/README.md",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/wwwroot/README.md",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/wwwroot/README.md",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/wwwroot/README.md?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1,42 @@\n+# Welcome to ASP.NET 5 Preview\n+\n+We've made some big updates in this release, so itâs **important** that you spend a few minutes to learn whatâs new.\n+\n+ASP.NET 5 has been rearchitected to make it **lean** and **composable**. It's fully **open source** and available on [GitHub](http://go.microsoft.com/fwlink/?LinkID=517854).\n+Your new project automatically takes advantage of modern client-side utilities like [Bower](http://go.microsoft.com/fwlink/?LinkId=518004) and [npm](http://go.microsoft.com/fwlink/?LinkId=518005) (to add client-side libraries) and [Gulp](http://go.microsoft.com/fwlink/?LinkId=518007) (for client-side build and automation tasks).\n+\n+We hope you enjoy the new capabilities in ASP.NET 5 and Visual Studio 2015.\n+The ASP.NET Team\n+\n+### You've created a new ASP.NET 5 project. [Learn what's new](http://go.microsoft.com/fwlink/?LinkId=518016)\n+\n+### This application consists of:\n+* Sample pages using ASP.NET MVC 6\n+* [Gulp](http://go.microsoft.com/fwlink/?LinkId=518007) and [Bower](http://go.microsoft.com/fwlink/?LinkId=518004) for managing client-side resources\n+* Theming using [Bootstrap](http://go.microsoft.com/fwlink/?LinkID=398939)\n+\n+#### NEW CONCEPTS\n+* [The 'wwwroot' explained](http://go.microsoft.com/fwlink/?LinkId=518008)\n+* [Configuration in ASP.NET 5](http://go.microsoft.com/fwlink/?LinkId=518012)\n+* [Dependency Injection](http://go.microsoft.com/fwlink/?LinkId=518013)\n+* [Razor TagHelpers](http://go.microsoft.com/fwlink/?LinkId=518014)\n+* [Manage client packages using Gulp](http://go.microsoft.com/fwlink/?LinkID=517849)\n+* [Develop on different platforms](http://go.microsoft.com/fwlink/?LinkID=517850)\n+\n+#### CUSTOMIZE APP\n+* [Add Controllers and Views](http://go.microsoft.com/fwlink/?LinkID=398600)\n+* [Add Data using EntityFramework](http://go.microsoft.com/fwlink/?LinkID=398602)\n+* [Add Authentication using Identity](http://go.microsoft.com/fwlink/?LinkID=398603)\n+* [Add real time support using SignalR](http://go.microsoft.com/fwlink/?LinkID=398606)\n+* [Add Class library](http://go.microsoft.com/fwlink/?LinkID=398604)\n+* [Add Web APIs with MVC 6](http://go.microsoft.com/fwlink/?LinkId=518009)\n+* [Add client packages using Bower](http://go.microsoft.com/fwlink/?LinkID=517848)\n+\n+#### DEPLOY\n+* [Run your app locally](http://go.microsoft.com/fwlink/?LinkID=517851)\n+* [Run your app on ASP.NET Core 5](http://go.microsoft.com/fwlink/?LinkID=517852)\n+* [Run commands in your 'project.json'](http://go.microsoft.com/fwlink/?LinkID=517853)\n+* [Publish to Microsoft Azure Web Sites](http://go.microsoft.com/fwlink/?LinkID=398609)\n+* [Publish to the file system](http://go.microsoft.com/fwlink/?LinkId=518019)\n+\n+We would love to hear your [feedback](http://go.microsoft.com/fwlink/?LinkId=518015)"
  },
  {
    "sha": "cde1f2f90b9273a9124afdaefd1e29b16fcc2234",
    "filename": "aspnetcore/src/IO.Swagger/wwwroot/index.html",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/danielloza1108/spontan/blob/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/wwwroot/index.html",
    "raw_url": "https://github.com/danielloza1108/spontan/raw/f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d/aspnetcore/src/IO.Swagger/wwwroot/index.html",
    "contents_url": "https://api.github.com/repos/danielloza1108/spontan/contents/aspnetcore/src/IO.Swagger/wwwroot/index.html?ref=f66a3d1a9d12cfc4cfb5607d586cf79872f68b8d",
    "patch": "@@ -0,0 +1 @@\n+<meta http-equiv=\"refresh\" content=\"0;URL='./swagger/'\" />\n\\ No newline at end of file"
  }
]
