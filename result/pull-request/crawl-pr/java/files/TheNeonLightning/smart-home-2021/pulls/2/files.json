[
  {
    "sha": "c90fa2f527a2dd16bba29236a15eba6089c51889",
    "filename": "STUDENT_GUIDE.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/STUDENT_GUIDE.md",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/STUDENT_GUIDE.md",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/STUDENT_GUIDE.md?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -75,7 +75,7 @@ class HallChecker\n **Нет**\n \n ```java\n-package ru.sbt.mipt.oop.SmartHome;\n+package ru.sbt.mipt.oop.SmartHome.SmartHome;\n ```\n \n ### Не используйте статические методы в бизнес логике"
  },
  {
    "sha": "85fcdd06a0598de548737371b6565575aacdd4a0",
    "filename": "src/main/java/ru/sbt/mipt/oop/Action.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/Action.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/Action.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Action.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -0,0 +1,6 @@\n+package ru.sbt.mipt.oop;\n+\n+@FunctionalInterface\n+public interface Action {\n+    void applyAction(Object object);\n+}"
  },
  {
    "sha": "92690918b915cc2d960eac48962202da568844c1",
    "filename": "src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/Actionable.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Actionable.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop;\n+\n+\n+public interface Actionable {\n+\n+    void execute(Action action);\n+}"
  },
  {
    "sha": "f3989f13b944458b301d16cb3e6d4fae8f878a2a",
    "filename": "src/main/java/ru/sbt/mipt/oop/Application.java",
    "status": "modified",
    "additions": 7,
    "deletions": 4,
    "changes": 11,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/Application.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/Application.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Application.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -13,6 +13,9 @@\n import ru.sbt.mipt.oop.HomeRunner.SmartHomeRunner;\n import ru.sbt.mipt.oop.HomeSupervision.HomeSupervision;\n import ru.sbt.mipt.oop.HomeSupervision.HomeSupervisionSimulator;\n+import ru.sbt.mipt.oop.SmartHome.SmartHome;\n+\n+import java.util.Arrays;\n \n // class Application is used to set up specific realizations of interfaces\n // and to start smart home activity\n@@ -27,10 +30,10 @@ public static void main(String... args) {\n         SmartHome smartHome = homeProvider.provideHome();\n \n         EventResolver eventResolver = new SmartHomeEventResolver(\n-                smartHome,\n-                new LightEventProcessor(smartHome),\n-                new DoorEventProcessor(smartHome),\n-                new HallDoorEventProcessor(homeControl, smartHome)\n+                Arrays.asList(\n+                        new LightEventProcessor(smartHome),\n+                        new DoorEventProcessor(smartHome),\n+                        new HallDoorEventProcessor(homeControl, smartHome))\n         );\n \n         HomeRunner homeRunner = new SmartHomeRunner(homeSupervision, eventResolver);"
  },
  {
    "sha": "beb0cabe38c4d340e54fa312fa368e29fccb7ef8",
    "filename": "src/main/java/ru/sbt/mipt/oop/Door.java",
    "status": "removed",
    "additions": 0,
    "deletions": 19,
    "changes": 19,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/809bee51ee2de872b8b56f2d46a61ef1cc5451be/src/main/java/ru/sbt/mipt/oop/Door.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/809bee51ee2de872b8b56f2d46a61ef1cc5451be/src/main/java/ru/sbt/mipt/oop/Door.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Door.java?ref=809bee51ee2de872b8b56f2d46a61ef1cc5451be",
    "patch": "@@ -1,19 +0,0 @@\n-package ru.sbt.mipt.oop;\n-\n-public class Door {\n-    private final String id;\n-    private boolean isOpen;\n-\n-    public Door(boolean isOpen, String id) {\n-        this.isOpen = isOpen;\n-        this.id = id;\n-    }\n-\n-    public String getId() {\n-        return id;\n-    }\n-\n-    public void setOpen(boolean open) {\n-        isOpen = open;\n-    }\n-}"
  },
  {
    "sha": "61125ea764e6013059c409fdf5a8cc405ece6f87",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventProcessor/DoorEventProcessor.java",
    "status": "modified",
    "additions": 19,
    "deletions": 6,
    "changes": 25,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/EventProcessor/DoorEventProcessor.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/EventProcessor/DoorEventProcessor.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/EventProcessor/DoorEventProcessor.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -1,6 +1,7 @@\n package ru.sbt.mipt.oop.EventProcessor;\n \n import ru.sbt.mipt.oop.*;\n+import ru.sbt.mipt.oop.SmartHome.*;\n \n \n public class DoorEventProcessor implements EventProcessor {\n@@ -20,14 +21,26 @@ public void processEvent(SensorEvent event) {\n     }\n \n     private void handleDoorOpen(String doorId) {\n-        Door door = SmartHomeUtility.findDoor(smartHome, doorId);\n-        door.setOpen(true);\n-        System.out.println(\"Door \" + door.getId() + \" was opened.\");\n+        smartHome.execute((object) -> {\n+            if (object instanceof Door) {\n+                Door door = (Door) object;\n+                if (door.getId().equals(doorId)) {\n+                    door.setOpen(true);\n+                    System.out.println(\"Door \" + door.getId() + \" was opened.\");\n+                }\n+            }\n+        });\n     }\n \n     private void handleDoorClosed(String doorId)  {\n-        Door door = SmartHomeUtility.findDoor(smartHome, doorId);\n-        door.setOpen(false);\n-        System.out.println(\"Door \" + door.getId() + \" was closed.\");\n+        smartHome.execute((object) -> {\n+            if (object instanceof Door) {\n+                Door door = (Door) object;\n+                if (door.getId().equals(doorId)) {\n+                    door.setOpen(false);\n+                    System.out.println(\"Door \" + door.getId() + \" was closed.\");\n+                }\n+            }\n+        });\n     }\n }"
  },
  {
    "sha": "85042a640b2d2101965f3775b89962288496cda2",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventProcessor/HallDoorEventProcessor.java",
    "status": "modified",
    "additions": 37,
    "deletions": 18,
    "changes": 55,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/EventProcessor/HallDoorEventProcessor.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/EventProcessor/HallDoorEventProcessor.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/EventProcessor/HallDoorEventProcessor.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -2,6 +2,7 @@\n \n import ru.sbt.mipt.oop.*;\n import ru.sbt.mipt.oop.HomeControl.HomeControl;\n+import ru.sbt.mipt.oop.SmartHome.*;\n \n \n public class HallDoorEventProcessor implements EventProcessor {\n@@ -16,29 +17,47 @@ public HallDoorEventProcessor(HomeControl homeControl, SmartHome smartHome) {\n \n     @Override\n     public void processEvent(SensorEvent event) {\n-        switch (event.getType()) {\n-            case DOOR_OPEN -> handleDoorOpen(event.getObjectId());\n-            case DOOR_CLOSED -> handleDoorClosed(event.getObjectId());\n+        // Even if the door is hall door it would get closed/opened by generic\n+        // DoorEventProcessor; Here we only have to chek if the door\n+        // being closed is in hall\n+        // and if it is we turn off all the lights;\n+        //\n+        // With this we don't have to check type off door in DoorEventProcessor:\n+        // all doors behave the same considering closing/opening.\n+        if (event.getType() == SensorEventType.DOOR_CLOSED) {\n+            handleDoorClosed(event.getObjectId());\n         }\n     }\n \n-    private void handleDoorOpen(String doorId) {\n-        Door door = SmartHomeUtility.findDoor(smartHome, doorId);\n-        door.setOpen(true);\n-        System.out.println(\"Hall door \" + door.getId() + \" was opened.\");\n-    }\n-\n-    private void handleDoorClosed(String doorId)  {\n-        Door door = SmartHomeUtility.findDoor(smartHome, doorId);\n-        door.setOpen(false);\n-        System.out.println(\"Hall door \" + door.getId() + \" was closed.\");\n-\n-        for (Room homeRoom : smartHome.getRooms()) {\n-            for (Light light : homeRoom.getLights()) {\n+    private void turnOffLights() {\n+        smartHome.execute((object) -> {\n+            if (object instanceof Light) {\n+                Light light = (Light) object;\n                 light.setOn(false);\n-                SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF, light.getId());\n+                SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF,\n+                        light.getId());\n                 homeControl.sendCommand(command);\n             }\n-        }\n+        });\n+    }\n+\n+    private void handleDoorClosed(String doorId) {\n+        smartHome.execute(object -> {\n+            if (object instanceof Room) {\n+                Room room = (Room) object;\n+                if (room.getName().equals(\"hall\")) {\n+                    room.execute(localObject -> {\n+                        if (localObject instanceof Door) {\n+                            Door door = (Door) localObject;\n+                            if (door.getId().equals(doorId)) {\n+                                turnOffLights();\n+                                System.out.println(\"Turning off all the lights, \" +\n+                                        \"as the hall door was closed\");\n+                            }\n+                        }\n+                    });\n+                }\n+            }\n+        });\n     }\n }"
  },
  {
    "sha": "a750a3a80364d2bfaca4d7c8782ccd8a164dac0d",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventProcessor/LightEventProcessor.java",
    "status": "modified",
    "additions": 21,
    "deletions": 6,
    "changes": 27,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/EventProcessor/LightEventProcessor.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/EventProcessor/LightEventProcessor.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/EventProcessor/LightEventProcessor.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -1,6 +1,7 @@\n package ru.sbt.mipt.oop.EventProcessor;\n \n import ru.sbt.mipt.oop.*;\n+import ru.sbt.mipt.oop.SmartHome.*;\n \n \n public class LightEventProcessor implements EventProcessor {\n@@ -20,14 +21,28 @@ public void processEvent(SensorEvent event) {\n     }\n \n     private void handleLightOn(String lightId) {\n-        Light light = SmartHomeUtility.findLight(smartHome, lightId);\n-        light.setOn(true);\n-        System.out.println(\"Light \" + light.getId() + \" was turned on.\");\n+        smartHome.execute((object) -> {\n+            if (object instanceof Light) {\n+                Light light = (Light) object;\n+                if (light.getId().equals(lightId)) {\n+                    light.setOn(true);\n+                    System.out.println(\"Light \" +\n+                            light.getId() + \" was turned on.\");\n+                }\n+            }\n+        });\n     }\n \n     private void handleLightOff(String lightId) {\n-        Light light = SmartHomeUtility.findLight(smartHome, lightId);\n-        light.setOn(false);\n-        System.out.println(\"Light \" + light.getId() + \" was turned off.\");\n+        smartHome.execute((object) -> {\n+            if (object instanceof Light) {\n+                Light light = (Light) object;\n+                if (light.getId().equals(lightId)) {\n+                    light.setOn(false);\n+                    System.out.println(\"Light \" +\n+                            light.getId() + \" was turned off.\");\n+                }\n+            }\n+        });\n     }\n }"
  },
  {
    "sha": "9985ea0e607d23ebd2822f60a10b9a70dba46c7e",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventResolver/SmartHomeEventResolver.java",
    "status": "modified",
    "additions": 8,
    "deletions": 33,
    "changes": 41,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/EventResolver/SmartHomeEventResolver.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/EventResolver/SmartHomeEventResolver.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/EventResolver/SmartHomeEventResolver.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -1,51 +1,26 @@\n package ru.sbt.mipt.oop.EventResolver;\n \n-import ru.sbt.mipt.oop.EventProcessor.DoorEventProcessor;\n import ru.sbt.mipt.oop.EventProcessor.EventProcessor;\n-import ru.sbt.mipt.oop.EventProcessor.HallDoorEventProcessor;\n-import ru.sbt.mipt.oop.EventProcessor.LightEventProcessor;\n-import ru.sbt.mipt.oop.Room;\n import ru.sbt.mipt.oop.SensorEvent;\n-import ru.sbt.mipt.oop.SmartHome;\n-import ru.sbt.mipt.oop.SmartHomeUtility;\n+import ru.sbt.mipt.oop.SmartHome.SmartHome;\n+\n+import java.util.List;\n \n // contains event processors for different types of events\n // separates logic of choosing event processor to resolve received event\n public class SmartHomeEventResolver implements EventResolver {\n \n-    private final SmartHome smartHome;\n-\n-    private final EventProcessor lightEventProcessor;\n-    private final EventProcessor doorEventProcessor;\n-    private final EventProcessor hallDoorEventProcessor;\n \n-    public SmartHomeEventResolver(\n-            SmartHome smartHome,\n-            LightEventProcessor lightEventProcessor,\n-            DoorEventProcessor doorEventProcessor,\n-            HallDoorEventProcessor hallDoorEventProcessor) {\n-        this.smartHome = smartHome;\n+    private final List<EventProcessor> processors;\n \n-        this.lightEventProcessor = lightEventProcessor;\n-        this.doorEventProcessor = doorEventProcessor;\n-        this.hallDoorEventProcessor = hallDoorEventProcessor;\n+    public SmartHomeEventResolver(List<EventProcessor> processors) {\n+        this.processors = processors;\n     }\n \n     @Override\n     public void resolveEvent(SensorEvent event) {\n-\n-        switch (event.getType()) {\n-            case LIGHT_OFF, LIGHT_ON ->\n-                    lightEventProcessor.processEvent(event);\n-\n-            case DOOR_CLOSED, DOOR_OPEN -> {\n-                Room room = SmartHomeUtility.findRoom(smartHome, event.getObjectId());\n-                if (room.getName().equals(\"hall\")) {\n-                    hallDoorEventProcessor.processEvent(event);\n-                } else {\n-                    doorEventProcessor.processEvent(event);\n-                }\n-            }\n+        for (EventProcessor processor : processors) {\n+            processor.processEvent(event);\n         }\n     }\n }"
  },
  {
    "sha": "d9e6c4a91a6845c49354d76e14957f9c92cd7cc5",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeBuilder.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/HomeBuilder.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/HomeBuilder.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomeBuilder.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -2,6 +2,7 @@\n \n import com.google.gson.Gson;\n import com.google.gson.GsonBuilder;\n+import ru.sbt.mipt.oop.SmartHome.*;\n \n import java.io.BufferedWriter;\n import java.io.IOException;"
  },
  {
    "sha": "8fd57be6d21fe84a05d7b8137c5b982d550777f4",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeProvider/HomeProvider.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/HomeProvider/HomeProvider.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/HomeProvider/HomeProvider.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomeProvider/HomeProvider.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -1,7 +1,7 @@\n package ru.sbt.mipt.oop.HomeProvider;\n \n \n-import ru.sbt.mipt.oop.SmartHome;\n+import ru.sbt.mipt.oop.SmartHome.SmartHome;\n \n // interface HomeProvider is used to separate getting SmartHome logic\n public interface HomeProvider {"
  },
  {
    "sha": "fc11f413787607ffd30970be189411273f51c8e5",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeProvider/JsonHomeProvider.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/HomeProvider/JsonHomeProvider.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/HomeProvider/JsonHomeProvider.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomeProvider/JsonHomeProvider.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -1,7 +1,7 @@\n package ru.sbt.mipt.oop.HomeProvider;\n \n import com.google.gson.Gson;\n-import ru.sbt.mipt.oop.SmartHome;\n+import ru.sbt.mipt.oop.SmartHome.SmartHome;\n \n import java.io.IOException;\n import java.nio.file.Files;"
  },
  {
    "sha": "d1ab185c4e320924d1577bfa2c8eb37c197f61eb",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeRunner/SmartHomeRunner.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/HomeRunner/SmartHomeRunner.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/HomeRunner/SmartHomeRunner.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomeRunner/SmartHomeRunner.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -4,6 +4,7 @@\n import ru.sbt.mipt.oop.HomeSupervision.HomeSupervision;\n import ru.sbt.mipt.oop.SensorEvent;\n \n+\n public class SmartHomeRunner implements HomeRunner {\n \n     private final HomeSupervision homeSupervision;"
  },
  {
    "sha": "c326b397ae8bd4a7128dc8a952a48ddc092d94b3",
    "filename": "src/main/java/ru/sbt/mipt/oop/HomeSupervision/HomeSupervisionSimulator.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/HomeSupervision/HomeSupervisionSimulator.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/HomeSupervision/HomeSupervisionSimulator.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/HomeSupervision/HomeSupervisionSimulator.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -22,9 +22,9 @@ public SensorEvent getNextSensorEvent() {\n         String objectId;\n \n         if (eventIndex < 2) {\n-            objectId = \"\" + ((int) (8 * Math.random()) + 1);\n+            objectId = \"\" + ((int) (9 * Math.random()) + 1);\n         } else {\n-            objectId = \"\" + ((int) (3 * Math.random()) + 1);\n+            objectId = \"\" + ((int) (4 * Math.random()) + 1);\n         }\n \n         return new SensorEvent(sensorEventType, objectId);"
  },
  {
    "sha": "32ebd57d733820629b9e25b83f2b58bddd1bfa09",
    "filename": "src/main/java/ru/sbt/mipt/oop/SmartHome/Door.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/SmartHome/Door.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/SmartHome/Door.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/SmartHome/Door.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -0,0 +1,31 @@\n+package ru.sbt.mipt.oop.SmartHome;\n+\n+import ru.sbt.mipt.oop.Action;\n+import ru.sbt.mipt.oop.Actionable;\n+\n+public class Door implements Actionable {\n+    private final String id;\n+    private boolean isOpen;\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.applyAction(this);\n+    }\n+\n+    public Door(boolean isOpen, String id) {\n+        this.isOpen = isOpen;\n+        this.id = id;\n+    }\n+\n+    public boolean isOpen() {\n+        return isOpen;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setOpen(boolean open) {\n+        isOpen = open;\n+    }\n+}"
  },
  {
    "sha": "82993466c38d32fccb70980b2c8f556b2e29544b",
    "filename": "src/main/java/ru/sbt/mipt/oop/SmartHome/Light.java",
    "status": "renamed",
    "additions": 10,
    "deletions": 2,
    "changes": 12,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/SmartHome/Light.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/SmartHome/Light.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/SmartHome/Light.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -1,9 +1,17 @@\n-package ru.sbt.mipt.oop;\n+package ru.sbt.mipt.oop.SmartHome;\n \n-public class Light {\n+import ru.sbt.mipt.oop.Action;\n+import ru.sbt.mipt.oop.Actionable;\n+\n+public class Light implements Actionable {\n     private boolean isOn;\n     private final String id;\n \n+    @Override\n+    public void execute(Action action) {\n+        action.applyAction(this);\n+    }\n+\n     public Light(String id, boolean isOn) {\n         this.id = id;\n         this.isOn = isOn;",
    "previous_filename": "src/main/java/ru/sbt/mipt/oop/Light.java"
  },
  {
    "sha": "5bc70aaa45986b65ed8201b7a68ae96a0217996e",
    "filename": "src/main/java/ru/sbt/mipt/oop/SmartHome/Room.java",
    "status": "renamed",
    "additions": 16,
    "deletions": 2,
    "changes": 18,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/SmartHome/Room.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/SmartHome/Room.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/SmartHome/Room.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -1,12 +1,26 @@\n-package ru.sbt.mipt.oop;\n+package ru.sbt.mipt.oop.SmartHome;\n+\n+import ru.sbt.mipt.oop.Action;\n+import ru.sbt.mipt.oop.Actionable;\n \n import java.util.Collection;\n \n-public class Room {\n+public class Room implements Actionable {\n     private Collection<Light> lights;\n     private Collection<Door> doors;\n     private String name;\n \n+    @Override\n+    public void execute(Action action) {\n+        for (Light light : lights) {\n+            light.execute(action);\n+        }\n+        for (Door door : doors) {\n+            door.execute(action);\n+        }\n+        action.applyAction(this);\n+    }\n+\n     public Room(Collection<Light> lights, Collection<Door> doors, String name) {\n         this.lights = lights;\n         this.doors = doors;",
    "previous_filename": "src/main/java/ru/sbt/mipt/oop/Room.java"
  },
  {
    "sha": "fa55c13917d3f729ce11642287d48f9551e2717d",
    "filename": "src/main/java/ru/sbt/mipt/oop/SmartHome/SmartHome.java",
    "status": "renamed",
    "additions": 13,
    "deletions": 2,
    "changes": 15,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/SmartHome/SmartHome.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/SmartHome/SmartHome.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/SmartHome/SmartHome.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -1,11 +1,22 @@\n-package ru.sbt.mipt.oop;\n+package ru.sbt.mipt.oop.SmartHome;\n+\n+import ru.sbt.mipt.oop.Action;\n+import ru.sbt.mipt.oop.Actionable;\n \n import java.util.ArrayList;\n import java.util.Collection;\n \n-public class SmartHome {\n+public class SmartHome implements Actionable {\n     Collection<Room> rooms;\n \n+    @Override\n+    public void execute(Action action) {\n+        for (Room room : rooms) {\n+            room.execute(action);\n+        }\n+        action.applyAction(this);\n+    }\n+\n     public SmartHome() {\n         rooms = new ArrayList<>();\n     }",
    "previous_filename": "src/main/java/ru/sbt/mipt/oop/SmartHome.java"
  },
  {
    "sha": "5b00beceaad0cb06381c6ea21a4191d676b90c78",
    "filename": "src/main/java/ru/sbt/mipt/oop/SmartHomeUtility.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/SmartHomeUtility.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/main/java/ru/sbt/mipt/oop/SmartHomeUtility.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/SmartHomeUtility.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -1,5 +1,7 @@\n package ru.sbt.mipt.oop;\n \n+import ru.sbt.mipt.oop.SmartHome.*;\n+\n public class SmartHomeUtility {\n     public static Room findRoom(SmartHome home, String doorId) {\n         for (Room room : home.getRooms()) {"
  },
  {
    "sha": "d54c955db31f447e3b007946c136d2dca7aeb06e",
    "filename": "src/test/java/ActionableSmartHomeTest.java",
    "status": "added",
    "additions": 127,
    "deletions": 0,
    "changes": 127,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/test/java/ActionableSmartHomeTest.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/test/java/ActionableSmartHomeTest.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/test/java/ActionableSmartHomeTest.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -0,0 +1,127 @@\n+import org.junit.Assert;\n+import org.junit.Test;\n+import ru.sbt.mipt.oop.Action;\n+import ru.sbt.mipt.oop.HomeProvider.HomeProvider;\n+import ru.sbt.mipt.oop.HomeProvider.JsonHomeProvider;\n+import ru.sbt.mipt.oop.SmartHome.Door;\n+import ru.sbt.mipt.oop.SmartHome.Light;\n+import ru.sbt.mipt.oop.SmartHome.Room;\n+import ru.sbt.mipt.oop.SmartHome.SmartHome;\n+import ru.sbt.mipt.oop.SmartHomeUtility;\n+\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+\n+public class ActionableSmartHomeTest {\n+\n+    HomeProvider homeProvider;\n+    SmartHome smartHome;\n+\n+    public void setHome() {\n+        homeProvider = new JsonHomeProvider(\"smart-home-1.js\");\n+        smartHome = homeProvider.provideHome();\n+    }\n+\n+    @Test\n+    public void ActionableLightsTest() {\n+        setHome();\n+\n+        smartHome.execute((object) -> {\n+            if (object instanceof Light) {\n+                Light light = (Light) object;\n+                light.setOn(true);\n+            }\n+        });\n+        checkAllLightsOn();\n+\n+        String lightId = \"4\";\n+        smartHome.execute((object) -> {\n+            if (object instanceof Light) {\n+                Light light = (Light) object;\n+                if (light.getId().equals(lightId)) {\n+                    light.setOn(false);\n+                }\n+            }\n+        });\n+        Assert.assertFalse(SmartHomeUtility.findLight(smartHome, lightId).isOn());\n+    }\n+\n+    @Test\n+    public void ActionableDoorsTest() {\n+        setHome();\n+\n+        smartHome.execute((object) -> {\n+            if (object instanceof Door) {\n+                Door door = (Door) object;\n+                door.setOpen(true);\n+            }\n+        });\n+        checkAllDoorsOpen();\n+\n+        String hallDoorId = \"4\";\n+        smartHome.execute((object) -> {\n+            if (object instanceof Door) {\n+                Door door = (Door) object;\n+                if (door.getId().equals(hallDoorId)) {\n+                    door.setOpen(false);\n+                }\n+            }\n+        });\n+        Assert.assertFalse(SmartHomeUtility.findDoor(smartHome, hallDoorId).isOpen());\n+    }\n+\n+    @Test\n+    public void ActionableRoomsTest() {\n+        setHome();\n+\n+        smartHome.execute(object -> {\n+            if (object instanceof Room) {\n+                Room room = (Room) object;\n+                if (room.getName().equals(\"hall\")) {\n+                    room.execute(localObject -> {\n+                        if (localObject instanceof Door) {\n+                            Door door = (Door) localObject;\n+                            door.setOpen(false);\n+                        }\n+                    });\n+                }\n+            }\n+        });\n+\n+        String hallDoorId = \"4\";\n+        Assert.assertFalse(SmartHomeUtility.findDoor(smartHome, hallDoorId).isOpen());\n+    }\n+\n+    @Test\n+    public void ActionableSmartHomeTest() {\n+        setHome();\n+        int homeObjectsNumber = 18;\n+\n+        class LocalAction implements Action {\n+            public int counter = 0;\n+\n+            @Override\n+            public void applyAction(Object object) {\n+                ++counter;\n+            }\n+        }\n+\n+        LocalAction action = new LocalAction();\n+        smartHome.execute(action);\n+        Assert.assertEquals(homeObjectsNumber, action.counter);\n+    }\n+\n+    private void checkAllDoorsOpen() {\n+        for (int id = 1; id < 5; ++id) {\n+            String doorId = Integer.valueOf(id).toString();\n+            Assert.assertTrue(SmartHomeUtility.findDoor(smartHome, doorId).isOpen());\n+        }\n+    }\n+\n+    private void checkAllLightsOn() {\n+        for (int id = 1; id < 9; ++id) {\n+            String lightId = Integer.valueOf(id).toString();\n+            Assert.assertTrue(SmartHomeUtility.findLight(smartHome, lightId).isOn());\n+        }\n+    }\n+}"
  },
  {
    "sha": "484eba83a1c095701a4a1228a92e85dc5d58dc0d",
    "filename": "src/test/java/DoorEventProcessorTest.java",
    "status": "added",
    "additions": 84,
    "deletions": 0,
    "changes": 84,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/test/java/DoorEventProcessorTest.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/test/java/DoorEventProcessorTest.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/test/java/DoorEventProcessorTest.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -0,0 +1,84 @@\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import ru.sbt.mipt.oop.EventProcessor.DoorEventProcessor;\n+import ru.sbt.mipt.oop.EventProcessor.EventProcessor;\n+import ru.sbt.mipt.oop.HomeProvider.HomeProvider;\n+import ru.sbt.mipt.oop.HomeProvider.JsonHomeProvider;\n+import ru.sbt.mipt.oop.SensorEvent;\n+import ru.sbt.mipt.oop.SensorEventType;\n+import ru.sbt.mipt.oop.SmartHome.Door;\n+import ru.sbt.mipt.oop.SmartHome.SmartHome;\n+import ru.sbt.mipt.oop.SmartHomeUtility;\n+\n+\n+public class DoorEventProcessorTest {\n+\n+    HomeProvider homeProvider;\n+    SmartHome smartHome;\n+    EventProcessor eventProcessor;\n+\n+    public void setHome() {\n+        homeProvider = new JsonHomeProvider(\"smart-home-1.js\");\n+        smartHome = homeProvider.provideHome();\n+        eventProcessor = new DoorEventProcessor(smartHome);\n+    }\n+\n+    @Test\n+    public void processDoorEventTest() {\n+        setHome();\n+\n+        setAllDoorsClosedAndCheck();\n+        setAllDoorsOpenAndCheck();\n+    }\n+\n+    @Test\n+    public void processUnrelatedEventTest() {\n+        setHome();\n+\n+        setAllDoorsClosedAndCheck();\n+\n+        for (int id = 1; id < 9; ++id) {\n+            String lightId = Integer.valueOf(id).toString();\n+\n+            SensorEvent event = new SensorEvent(SensorEventType.LIGHT_OFF, lightId);\n+            eventProcessor.processEvent(event);\n+            checkAllDoorsClosed();\n+        }\n+\n+        for (int id = 1; id < 9; ++id) {\n+            String lightId = Integer.valueOf(id).toString();\n+\n+            SensorEvent event = new SensorEvent(SensorEventType.LIGHT_ON, lightId);\n+            eventProcessor.processEvent(event);\n+            checkAllDoorsClosed();\n+        }\n+    }\n+\n+    private void setAllDoorsOpenAndCheck() {\n+        for (int id = 1; id < 5; ++id) {\n+            String doorId = Integer.valueOf(id).toString();\n+\n+            SensorEvent event = new SensorEvent(SensorEventType.DOOR_OPEN, doorId);\n+            eventProcessor.processEvent(event);\n+            Assert.assertTrue(SmartHomeUtility.findDoor(smartHome, doorId).isOpen());\n+        }\n+    }\n+\n+    private void setAllDoorsClosedAndCheck() {\n+        for (int id = 1; id < 5; ++id) {\n+            String doorId = Integer.valueOf(id).toString();\n+\n+            SensorEvent event = new SensorEvent(SensorEventType.DOOR_CLOSED, doorId);\n+            eventProcessor.processEvent(event);\n+            Assert.assertFalse(SmartHomeUtility.findDoor(smartHome, doorId).isOpen());\n+        }\n+    }\n+\n+    private void checkAllDoorsClosed() {\n+        for (int id = 1; id < 5; ++id) {\n+            String doorId = Integer.valueOf(id).toString();\n+            Assert.assertFalse(SmartHomeUtility.findDoor(smartHome, doorId).isOpen());\n+        }\n+    }\n+}"
  },
  {
    "sha": "d6781b65230766268088568796a96ec68e94714b",
    "filename": "src/test/java/HallDoorEventProcessorTest.java",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/test/java/HallDoorEventProcessorTest.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/test/java/HallDoorEventProcessorTest.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/test/java/HallDoorEventProcessorTest.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -0,0 +1,86 @@\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import ru.sbt.mipt.oop.EventProcessor.DoorEventProcessor;\n+import ru.sbt.mipt.oop.EventProcessor.EventProcessor;\n+import ru.sbt.mipt.oop.EventProcessor.HallDoorEventProcessor;\n+import ru.sbt.mipt.oop.EventProcessor.LightEventProcessor;\n+import ru.sbt.mipt.oop.EventResolver.EventResolver;\n+import ru.sbt.mipt.oop.EventResolver.SmartHomeEventResolver;\n+import ru.sbt.mipt.oop.HomeControl.HomeControl;\n+import ru.sbt.mipt.oop.HomeControl.HomeControlSimulator;\n+import ru.sbt.mipt.oop.HomeProvider.HomeProvider;\n+import ru.sbt.mipt.oop.HomeProvider.JsonHomeProvider;\n+import ru.sbt.mipt.oop.SensorEvent;\n+import ru.sbt.mipt.oop.SensorEventType;\n+import ru.sbt.mipt.oop.SmartHome.Door;\n+import ru.sbt.mipt.oop.SmartHome.SmartHome;\n+import ru.sbt.mipt.oop.SmartHomeUtility;\n+\n+import java.util.Arrays;\n+\n+\n+public class HallDoorEventProcessorTest {\n+\n+    HomeProvider homeProvider;\n+    SmartHome smartHome;\n+    EventResolver eventResolver;\n+    HomeControl homeControl;\n+\n+    public void setHome() {\n+        homeProvider = new JsonHomeProvider(\"smart-home-1.js\");\n+        smartHome = homeProvider.provideHome();\n+        homeControl = new HomeControlSimulator();\n+        eventResolver = new SmartHomeEventResolver(\n+                Arrays.asList(\n+                        new LightEventProcessor(smartHome),\n+                        new DoorEventProcessor(smartHome),\n+                        new HallDoorEventProcessor(homeControl, smartHome))\n+        );\n+    }\n+\n+    @Test\n+    public void processHallDoorClosedEventTest() {\n+        setHome();\n+        String hallDoorId = \"4\";\n+\n+        setAllLightsOn();\n+        SensorEvent event = new SensorEvent(SensorEventType.DOOR_CLOSED, hallDoorId);\n+        eventResolver.resolveEvent(event);\n+        checkAllLightsOff();\n+    }\n+\n+    @Test\n+    public void processHallDoorOpenEventTest() {\n+        setHome();\n+        String hallDoorId = \"4\";\n+\n+        setAllLightsOn();\n+        SensorEvent event = new SensorEvent(SensorEventType.DOOR_OPEN, hallDoorId);\n+        eventResolver.resolveEvent(event);\n+        checkAllLightsOn();\n+    }\n+\n+    private void setAllLightsOn() {\n+        for (int id = 1; id < 9; ++id) {\n+            String lightId = Integer.valueOf(id).toString();\n+\n+            SensorEvent event = new SensorEvent(SensorEventType.LIGHT_ON, lightId);\n+            eventResolver.resolveEvent(event);\n+        }\n+    }\n+\n+    private void checkAllLightsOn() {\n+        for (int id = 1; id < 9; ++id) {\n+            String lightId = Integer.valueOf(id).toString();\n+            Assert.assertTrue(SmartHomeUtility.findLight(smartHome, lightId).isOn());\n+        }\n+    }\n+\n+    private void checkAllLightsOff() {\n+        for (int id = 1; id < 9; ++id) {\n+            String lightId = Integer.valueOf(id).toString();\n+            Assert.assertFalse(SmartHomeUtility.findLight(smartHome, lightId).isOn());\n+        }\n+    }\n+}"
  },
  {
    "sha": "4cb434ae28d8ce90afb505e63ba4e2a9a6ec57a0",
    "filename": "src/test/java/LightEventProcessorTest.java",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/TheNeonLightning/smart-home-2021/blob/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/test/java/LightEventProcessorTest.java",
    "raw_url": "https://github.com/TheNeonLightning/smart-home-2021/raw/6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c/src/test/java/LightEventProcessorTest.java",
    "contents_url": "https://api.github.com/repos/TheNeonLightning/smart-home-2021/contents/src/test/java/LightEventProcessorTest.java?ref=6aef65cc222fc55ef9c5138a72b0cbef0ec0dc8c",
    "patch": "@@ -0,0 +1,83 @@\n+import org.junit.Assert;\n+import org.junit.Test;\n+import ru.sbt.mipt.oop.EventProcessor.EventProcessor;\n+import ru.sbt.mipt.oop.EventProcessor.LightEventProcessor;\n+import ru.sbt.mipt.oop.HomeProvider.HomeProvider;\n+import ru.sbt.mipt.oop.HomeProvider.JsonHomeProvider;\n+import ru.sbt.mipt.oop.SensorEvent;\n+import ru.sbt.mipt.oop.SensorEventType;\n+import ru.sbt.mipt.oop.SmartHome.SmartHome;\n+import ru.sbt.mipt.oop.SmartHomeUtility;\n+\n+public class LightEventProcessorTest {\n+\n+    HomeProvider homeProvider;\n+    SmartHome smartHome;\n+    EventProcessor eventProcessor;\n+\n+    public void setHome() {\n+        homeProvider = new JsonHomeProvider(\"smart-home-1.js\");\n+        smartHome = homeProvider.provideHome();\n+        eventProcessor = new LightEventProcessor(smartHome);\n+    }\n+\n+    @Test\n+    public void processLightEventTest() {\n+        setHome();\n+\n+        setAllLightsOffAndCheck();\n+        setAllLightsOnAndCheck();\n+    }\n+\n+    @Test\n+    public void processUnrelatedEventTest() {\n+        setHome();\n+\n+        setAllLightsOffAndCheck();\n+\n+        for (int id = 1; id < 5; ++id) {\n+            String doorId = Integer.valueOf(id).toString();\n+\n+            SensorEvent event = new SensorEvent(SensorEventType.DOOR_CLOSED, doorId);\n+            eventProcessor.processEvent(event);\n+            checkAllLightsOff();\n+        }\n+\n+        for (int id = 1; id < 5; ++id) {\n+            String doorId = Integer.valueOf(id).toString();\n+\n+            SensorEvent event = new SensorEvent(SensorEventType.DOOR_OPEN, doorId);\n+            eventProcessor.processEvent(event);\n+            checkAllLightsOff();\n+        }\n+    }\n+\n+    private void setAllLightsOffAndCheck() {\n+        for (int id = 1; id < 9; ++id) {\n+            String lightId = Integer.valueOf(id).toString();\n+\n+            SensorEvent event = new SensorEvent(SensorEventType.LIGHT_OFF, lightId);\n+            eventProcessor.processEvent(event);\n+            Assert.assertFalse(SmartHomeUtility.findLight(smartHome, lightId).isOn());\n+        }\n+    }\n+\n+    private void setAllLightsOnAndCheck() {\n+        for (int id = 1; id < 9; ++id) {\n+            String lightId = Integer.valueOf(id).toString();\n+\n+            SensorEvent event = new SensorEvent(SensorEventType.LIGHT_ON, lightId);\n+            eventProcessor.processEvent(event);\n+            Assert.assertTrue(SmartHomeUtility.findLight(smartHome, lightId).isOn());\n+        }\n+\n+\n+    }\n+\n+    private void checkAllLightsOff() {\n+        for (int id = 1; id < 9; ++id) {\n+            String lightId = Integer.valueOf(id).toString();\n+            Assert.assertFalse(SmartHomeUtility.findLight(smartHome, lightId).isOn());\n+        }\n+    }\n+}"
  }
]
