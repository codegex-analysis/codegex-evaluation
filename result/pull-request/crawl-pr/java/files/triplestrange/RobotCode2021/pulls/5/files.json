[
  {
    "sha": "49239252968114d75542b2374a761e20ebac68e9",
    "filename": "RobotCode2021-Imported/src/main/java/frc/robot/RobotContainer.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/triplestrange/RobotCode2021/blob/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/RobotContainer.java",
    "raw_url": "https://github.com/triplestrange/RobotCode2021/raw/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/RobotContainer.java",
    "contents_url": "https://api.github.com/repos/triplestrange/RobotCode2021/contents/RobotCode2021-Imported/src/main/java/frc/robot/RobotContainer.java?ref=fe8a81eddd2b217cff9a513ca3f63f8e2322be4e",
    "patch": "@@ -64,7 +64,9 @@\n     public final static Shooter shooter = new Shooter();\n     private final Climb climb = new Climb();\n     private final PhotonCamera camera = new PhotonCamera(\"TurretCamera\");\n+    private final PhotonCamera camera1 = new PhotonCamera(\"OtherCamera\");\n     private final Vision vision = new Vision(camera);\n+    private final Vision vision1 = new Vision(camera1);\n     private final Turret turret = new Turret(swerveDrive);\n     // The driver's controller\n     public static Joystick m_driverController = new Joystick(OIConstants.kDriverControllerPort);\n@@ -131,23 +133,21 @@ private void configureButtonBindings() {\n         // JoystickButton ok = new JoystickButton(m_driverController, 7);\n \n         BarrelPath Barrel = new BarrelPath(swerveDrive, theta);\n-    \n         SmartDashboard.putData(Scheduler.getInstance());\n         SmartDashboard.putData(\"Barrel Path\", Barrel);\n \n-        \n         BouncePath Bounce = new BouncePath(swerveDrive, theta);\n-    \n         SmartDashboard.putData(Scheduler.getInstance());\n         SmartDashboard.putData(\"Bounce Path\", Bounce);\n \n-\n-        \n         SlalomPath1 Slolam = new SlalomPath1(swerveDrive, theta);\n     \n         SmartDashboard.putData(Scheduler.getInstance());\n         SmartDashboard.putData(\"Slalom Path\", Slolam);\n \n+        GalacticPathA galA = new GalacticPathA(swerveDrive, intake, theta);\n+        SmartDashboard.putData(Scheduler.getInstance());\n+        SmartDashboard.putData(\"GalacticA\", galA);\n \n         // A button \n         butA.whileHeld(new ExtendIntake(intake, m_operatorController));\n@@ -206,7 +206,7 @@ public Command getAutonomousCommand(Trajectory trajectory) {\n         GalacticA galA = new GalacticA(swerveDrive, theta);\n \n         return galA;\n-\n+        \n     }\n \n }"
  },
  {
    "sha": "bb9ee88c3f743e3ec500fb94997202e17c5a56aa",
    "filename": "RobotCode2021-Imported/src/main/java/frc/robot/commands/Auto/GalacticA.java",
    "status": "modified",
    "additions": 48,
    "deletions": 36,
    "changes": 84,
    "blob_url": "https://github.com/triplestrange/RobotCode2021/blob/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/commands/Auto/GalacticA.java",
    "raw_url": "https://github.com/triplestrange/RobotCode2021/raw/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/commands/Auto/GalacticA.java",
    "contents_url": "https://api.github.com/repos/triplestrange/RobotCode2021/contents/RobotCode2021-Imported/src/main/java/frc/robot/commands/Auto/GalacticA.java?ref=fe8a81eddd2b217cff9a513ca3f63f8e2322be4e",
    "patch": "@@ -7,6 +7,7 @@\n import edu.wpi.first.wpilibj.command.Command;\n import edu.wpi.first.wpilibj.command.CommandGroup;\n import edu.wpi.first.wpilibj.command.InstantCommand;\n+import edu.wpi.first.wpilibj.command.Scheduler;\n \n import java.util.List;\n \n@@ -25,44 +26,55 @@\n import frc.robot.Constants.SwerveDriveConstants;\n import frc.robot.subsystems.*;\n \n+\n public class GalacticA extends CommandGroup {\n         /** Add your docs here. */\n-        public GalacticA(SwerveDrive swerveDrive, ProfiledPIDController theta) {\n-\n-                final RobotContainer m_robotContainer;\n-                final Intake intake;\n-\n-                // Create config for trajectory\n-                TrajectoryConfig config = new TrajectoryConfig(2.1,\n-                                AutoConstants.kMaxAccelerationMetersPerSecondSquared)\n-                                                // Add kinematics to ensure max speed is actually obeyed\n-                                                // .setKinematics(SwerveDriveConstants.kDriveKinematics)\n-                                                .setEndVelocity(1.5);\n-\n-                Trajectory trajectory = TrajectoryGenerator\n-                                .generateTrajectory(new Pose2d(0, 0, new Rotation2d(-Math.PI / 2)), List.of(\n-\n-                                ),\n-                                                // direction robot moves\n-                                                new Pose2d(0, -3, new Rotation2d(Math.PI / 2)), config);\n-\n-                SwerveControllerCommand swerveControllerCommand1 = new SwerveControllerCommand(trajectory, (0),\n-                                swerveDrive::getPose, // Functional interface to feed supplier\n-                                SwerveDriveConstants.kDriveKinematics,\n \n-                                // Position controllers\n-                                new PIDController(AutoConstants.kPXController, 1, AutoConstants.kDXController),\n-                                new PIDController(AutoConstants.kPYController, 1, AutoConstants.kDYController), theta,\n-\n-                                swerveDrive::setModuleStates,\n-\n-                                swerveDrive\n-\n-                );\n-\n-                addSequential(swerveControllerCommand1);\n-               \n+        private final RobotContainer m_robotContainer;\n+        // private final Intake m_intake;\n+        \n+        public GalacticA(SwerveDrive swerveDrive, ProfiledPIDController theta) {\n+                m_robotContainer = new RobotContainer();\n+                Intake m_intake = new Intake();\n+\n+                \n+         // Create config for trajectory\n+\n+         //top speed: 2.1\n+        TrajectoryConfig config = new TrajectoryConfig(.5,\n+                AutoConstants.kMaxAccelerationMetersPerSecondSquared)\n+                // Add kinematics to ensure max speed is actually obeyed\n+                // .setKinematics(SwerveDriveConstants.kDriveKinematics)\n+\n+                //change to 1.5\n+                .setEndVelocity(.5);\n+\n+        Trajectory trajectory = TrajectoryGenerator\n+               .generateTrajectory(new Pose2d(0, 0, new Rotation2d(0)), List.of(\n+\n+                ),\n+                                   // direction robot moves\n+                new Pose2d(0, -3, new Rotation2d(0)), config);\n+\n+        SwerveControllerCommand swerveControllerCommand1 = new SwerveControllerCommand(trajectory, (0),\n+                swerveDrive::getPose, // Functional interface to feed supplier\n+                SwerveDriveConstants.kDriveKinematics,\n+                \n+                // Position controllers\n+                new PIDController(AutoConstants.kPXController, 1, AutoConstants.kDXController),\n+                new PIDController(AutoConstants.kPYController, 1, AutoConstants.kDYController), theta,\n+                swerveDrive::setModuleStates,\n+                swerveDrive\n+        );\n+        \n+                m_intake.extendAuto();\n+                m_intake.runWheelsAuto();\n+                \n+                IntakeCommand intakeCommand = new IntakeCommand(m_intake);\n+                \n+\n+                addParallel(swerveControllerCommand1);\n+                addSequential(intakeCommand);\n \n         }\n-\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "12fd9c5490aba2538ef19b4185c9df9007d1c362",
    "filename": "RobotCode2021-Imported/src/main/java/frc/robot/commands/Auto/GalacticPathA.java",
    "status": "added",
    "additions": 75,
    "deletions": 0,
    "changes": 75,
    "blob_url": "https://github.com/triplestrange/RobotCode2021/blob/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/commands/Auto/GalacticPathA.java",
    "raw_url": "https://github.com/triplestrange/RobotCode2021/raw/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/commands/Auto/GalacticPathA.java",
    "contents_url": "https://api.github.com/repos/triplestrange/RobotCode2021/contents/RobotCode2021-Imported/src/main/java/frc/robot/commands/Auto/GalacticPathA.java?ref=fe8a81eddd2b217cff9a513ca3f63f8e2322be4e",
    "patch": "@@ -0,0 +1,75 @@\n+// Copyright (c) FIRST and other WPILib contributors.\n+// Open Source Software; you can modify and/or share it under the terms of\n+// the WPILib BSD license file in the root directory of this project.\n+\n+package frc.robot.commands.Auto;\n+\n+import edu.wpi.first.wpilibj.command.Command;\n+import edu.wpi.first.wpilibj.command.CommandGroup;\n+\n+import java.util.List;\n+\n+import edu.wpi.first.wpilibj.geometry.Pose2d;\n+import edu.wpi.first.wpilibj.geometry.Rotation2d;\n+import edu.wpi.first.wpilibj.geometry.Translation2d;\n+import edu.wpi.first.wpilibj.trajectory.Trajectory;\n+import edu.wpi.first.wpilibj.trajectory.TrajectoryConfig;\n+import edu.wpi.first.wpilibj.trajectory.TrajectoryGenerator;\n+import frc.robot.commands.*;\n+import edu.wpi.first.wpilibj.controller.PIDController;\n+import edu.wpi.first.wpilibj.controller.ProfiledPIDController;\n+import frc.robot.RobotContainer;\n+import frc.robot.Constants.AutoConstants;\n+import frc.robot.Constants.SwerveDriveConstants;\n+import frc.robot.subsystems.*;\n+\n+public class GalacticPathA extends CommandGroup {\n+  /** Add your docs here. */\n+  private final SwerveDrive swerveDrive;\n+  private final Intake intake;\n+\n+  public GalacticPathA(SwerveDrive swerveDrive, Intake intake, ProfiledPIDController theta) {\n+    // private final Intake m_intake;\n+    requires(swerveDrive);\n+    requires(intake);\n+\n+    this.swerveDrive =  swerveDrive;\n+    this.intake =  intake;\n+    // Create config for trajectory\n+    // top speed: 2.1\n+    TrajectoryConfig config = new TrajectoryConfig(1, AutoConstants.kMaxAccelerationMetersPerSecondSquared)\n+        // Add kinematics to ensure max speed is actually obeyed\n+        // .setKinematics(SwerveDriveConstants.kDriveKinematics)\n+        // set end: 1.5\n+        .setEndVelocity(1);\n+\n+    Trajectory traject = TrajectoryGenerator.generateTrajectory(\n+      \n+    new Pose2d(0, 0, new  Rotation2d(-Math.PI/2)), List.of(\n+     \n+\n+  ), \n+                       //direction robot moves\n+ new Pose2d(5, 0, new Rotation2d(-Math.PI / 2)), config);\n+\n+    SwerveControllerCommand swerveControllerCommand1 = new SwerveControllerCommand(traject, (0), swerveDrive::getPose, \n+    // Functional\n+    // feed\n+    // supplier\n+        SwerveDriveConstants.kDriveKinematics,\n+\n+        // Position controllers\n+        new PIDController(AutoConstants.kPXController, 1, AutoConstants.kDXController),\n+        new PIDController(AutoConstants.kPYController, 1, AutoConstants.kDYController), theta,\n+\n+        swerveDrive::setModuleStates,\n+\n+        swerveDrive\n+\n+    );\n+\n+    addParallel(swerveControllerCommand1);\n+    IntakeCommand intakeCommand = new IntakeCommand(intake);\n+    addSequential(intakeCommand);\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "6b1b3063911f9ba1b5d705400cf5f01a4be39bc7",
    "filename": "RobotCode2021-Imported/src/main/java/frc/robot/commands/IntakeCommand.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/triplestrange/RobotCode2021/blob/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/commands/IntakeCommand.java",
    "raw_url": "https://github.com/triplestrange/RobotCode2021/raw/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/commands/IntakeCommand.java",
    "contents_url": "https://api.github.com/repos/triplestrange/RobotCode2021/contents/RobotCode2021-Imported/src/main/java/frc/robot/commands/IntakeCommand.java?ref=fe8a81eddd2b217cff9a513ca3f63f8e2322be4e",
    "patch": "@@ -0,0 +1,37 @@\n+// Copyright (c) FIRST and other WPILib contributors.\n+// Open Source Software; you can modify and/or share it under the terms of\n+// the WPILib BSD license file in the root directory of this project.\n+\n+package frc.robot.commands;\n+\n+import edu.wpi.first.wpilibj.command.CommandGroup;\n+import frc.robot.subsystems.Intake;\n+\n+public class IntakeCommand extends CommandGroup {\n+  /** Creates a new IntakeCommand. */\n+  private final Intake m_intake;\n+  \n+  public IntakeCommand(Intake subsystem) {\n+    requires(subsystem);\n+    m_intake = subsystem;\n+    // Use addRequirements() here to declare subsystem dependencies.\n+  }\n+\n+\n+// Called when the command is initially scheduled.\n+  @Override\n+  public void initialize() {}\n+\n+  // Called every time the scheduler runs while the command is scheduled.\n+  @Override\n+  public void execute() {\n+    m_intake.runWheelsAuto();\n+    m_intake.extendAuto();\n+  }\n+\n+  // Returns true when the command should end.\n+  @Override\n+  public boolean isFinished() {\n+    return false;\n+  }\n+}"
  },
  {
    "sha": "221a0075f3435e67896c782c98443beca6364d60",
    "filename": "RobotCode2021-Imported/src/main/java/frc/robot/subsystems/Intake.java",
    "status": "modified",
    "additions": 16,
    "deletions": 4,
    "changes": 20,
    "blob_url": "https://github.com/triplestrange/RobotCode2021/blob/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/subsystems/Intake.java",
    "raw_url": "https://github.com/triplestrange/RobotCode2021/raw/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/subsystems/Intake.java",
    "contents_url": "https://api.github.com/repos/triplestrange/RobotCode2021/contents/RobotCode2021-Imported/src/main/java/frc/robot/subsystems/Intake.java?ref=fe8a81eddd2b217cff9a513ca3f63f8e2322be4e",
    "patch": "@@ -29,17 +29,18 @@ public Intake() {\n     public void extend(Joystick joystick) {\n         intakeSolenoid.set(Value.kForward);\n         setExtended(true);\n-        double speedIn = joystick.getRawAxis(2);\n-        double speedOut = joystick.getRawAxis(3);\n+        double speedIn = joystick.getRawAxis(3);\n+        double speedOut = joystick.getRawAxis(2);\n \n         if (speedIn > 0.1)\n-            intakeMotor.set(speedIn / 3.5);\n+            intakeMotor.set(speedIn / 2);\n         else if (speedOut > 0.1)\n             intakeMotor.set(-speedOut);\n         else\n             intakeMotor.set(0);\n     }\n \n+\n     public void retract() {\n         intakeSolenoid.set(Value.kReverse);\n         setExtended(false);\n@@ -50,14 +51,25 @@ public void runWheels(Joystick joystick) {\n         double speedIn = joystick.getRawAxis(3);\n         if (getExtended()) {\n             if (speedIn > 0.1)\n-                intakeMotor.set(speedIn / 3.5);\n+                intakeMotor.set(speedIn / 2);\n             else if (speedOut > 0.1)\n                 intakeMotor.set(-speedOut);\n          else\n             intakeMotor.set(0);\n         }\n     }\n \n+    //auto intakes\n+    public void runWheelsAuto() {\n+        intakeMotor.set(.5);\n+    }\n+\n+    public void extendAuto() {\n+        intakeSolenoid.set(Value.kForward);\n+        setExtended(true);\n+        intakeMotor.set(.5);\n+    }\n+\n     public boolean getExtended() {\n         return extended;\n     }"
  },
  {
    "sha": "b869d97a08ea62d26f8668f78fa71358d3253a24",
    "filename": "RobotCode2021-Imported/src/main/java/frc/robot/subsystems/Shooter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/triplestrange/RobotCode2021/blob/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/subsystems/Shooter.java",
    "raw_url": "https://github.com/triplestrange/RobotCode2021/raw/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/subsystems/Shooter.java",
    "contents_url": "https://api.github.com/repos/triplestrange/RobotCode2021/contents/RobotCode2021-Imported/src/main/java/frc/robot/subsystems/Shooter.java?ref=fe8a81eddd2b217cff9a513ca3f63f8e2322be4e",
    "patch": "@@ -73,7 +73,7 @@ public Shooter() {\n   }\n \n   public void runShooter() {\n-    setPoint = SmartDashboard.getNumber(\"Shooter Velocity\", 4550);\n+    setPoint = SmartDashboard.getNumber(\"Shooter Velocity\", 1000);\n \n     m_pidController.setP(30);\n     m_pidController.setReference(setPoint, ControlType.kVelocity);"
  },
  {
    "sha": "2b5f9d2f963c82590d45af3a38e273b3878de901",
    "filename": "RobotCode2021-Imported/src/main/java/frc/robot/subsystems/SwerveDrive.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/triplestrange/RobotCode2021/blob/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/subsystems/SwerveDrive.java",
    "raw_url": "https://github.com/triplestrange/RobotCode2021/raw/fe8a81eddd2b217cff9a513ca3f63f8e2322be4e/RobotCode2021-Imported/src/main/java/frc/robot/subsystems/SwerveDrive.java",
    "contents_url": "https://api.github.com/repos/triplestrange/RobotCode2021/contents/RobotCode2021-Imported/src/main/java/frc/robot/subsystems/SwerveDrive.java?ref=fe8a81eddd2b217cff9a513ca3f63f8e2322be4e",
    "patch": "@@ -178,6 +178,7 @@ public void resetEncoders() {\n    */\n   public void zeroHeading() {\n     navX.reset();\n+    resetEncoders();\n     gyroReset = true;\n   }\n "
  }
]
