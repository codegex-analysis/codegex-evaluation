[
  {
    "sha": "70c85202ec02532f7d2b9ea5433be5fd1dcf000c",
    "filename": "2020-11/spring-25/.gitignore",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/.gitignore",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/.gitignore",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/.gitignore?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,25 @@\n+target/\n+\n+### STS ###\n+.apt_generated\n+.classpath\n+.factorypath\n+.project\n+.settings\n+.springBeans\n+.sts4-cache\n+\n+### IntelliJ IDEA ###\n+.idea\n+*.iws\n+*.iml\n+*.ipr\n+*.log\n+\n+### NetBeans ###\n+/nbproject/private/\n+/build/\n+/nbbuild/\n+/dist/\n+/nbdist/\n+/.nb-gradle/"
  },
  {
    "sha": "90ac17f2e0b5cb5b806f13eb6a2183d8738dd57c",
    "filename": "2020-11/spring-25/pom.xml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/pom.xml",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/pom.xml",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/pom.xml?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <groupId>ru.otus</groupId>\n+    <artifactId>spring-25</artifactId>\n+    <version>1.0</version>\n+\n+    <packaging>pom</packaging>\n+\n+    <modules>\n+        <module>spring-25-exercise</module>\n+    </modules>\n+</project>"
  },
  {
    "sha": "c5886ffe3cfb616ca18124b0aeabfff144e78fd3",
    "filename": "2020-11/spring-25/spring-25-exercise/pom.xml",
    "status": "added",
    "additions": 96,
    "deletions": 0,
    "changes": 96,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/pom.xml",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/pom.xml",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/pom.xml?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,96 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.4.0</version>\n+        <relativePath/>\n+    </parent>\n+\n+    <groupId>ru.otus</groupId>\n+    <artifactId>spring-25-exercise</artifactId>\n+    <version>1.0</version>\n+\n+    <properties>\n+        <maven.compiler.target>1.8</maven.compiler.target>\n+        <maven.compiler.source>1.8</maven.compiler.source>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+\n+    <dependencies>\n+        <!-- Это зависимость spring-context,\n+             содержит базовую функциональность IoC -->\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>1.18.16</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-test</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-thymeleaf</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-data-jpa</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <version>1.4.200</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.webjars</groupId>\n+            <artifactId>jquery</artifactId>\n+            <version>3.3.1</version>\n+        </dependency>\n+        <!-- Spring Security -->\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-security</artifactId>\n+        </dependency>\n+        <!--Тестирование-->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <version>${junit-jupiter.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-engine</artifactId>\n+            <version>${junit-jupiter.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <!-- For Spring Security testing -->\n+        <dependency>\n+            <groupId>org.springframework.security</groupId>\n+            <artifactId>spring-security-test</artifactId>\n+            <version>${spring-security.version}</version>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>"
  },
  {
    "sha": "61cc10ca6d38e05861c9d718619b2d1e67e3e550",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/Main.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/Main.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/Main.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/Main.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.otus.spring;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+\n+@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true)\n+@SpringBootApplication\n+public class Main {\n+    public static void main(String[] args) throws Exception  {\n+        // ! Без запуска SpringApplication.run база данных вообще не создастся\n+        ApplicationContext context = SpringApplication.run(Main.class, args);\n+    }\n+\n+}"
  },
  {
    "sha": "57bfb6ef16b9e0c707c8b4b3e88acfa0e5bdcf8a",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/controller/BookAsyncController.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/controller/BookAsyncController.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/controller/BookAsyncController.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/controller/BookAsyncController.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,23 @@\n+package ru.otus.spring.controller;\r\n+\r\n+import lombok.AllArgsConstructor;\r\n+import org.springframework.security.access.prepost.PostFilter;\r\n+import org.springframework.web.bind.annotation.GetMapping;\r\n+import org.springframework.web.bind.annotation.RestController;\r\n+import ru.otus.spring.domain.Book;\r\n+import ru.otus.spring.service.Library;\r\n+\r\n+import java.util.List;\r\n+\r\n+@RestController\r\n+@AllArgsConstructor\r\n+public class BookAsyncController {\r\n+    private final Library library;\r\n+\r\n+    @PostFilter(\"hasRole('ADMIN_ROLE') || hasRole('USER_ROLE')\")\r\n+    @GetMapping(\"/all-books\")\r\n+    public List<Book> getAllLibraryBooks() {\r\n+        return library.showAllBooks();\r\n+    }\r\n+\r\n+}\r"
  },
  {
    "sha": "34e55cfc833a8f3e93201fd652ed216b94046620",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/controller/BookController.java",
    "status": "added",
    "additions": 121,
    "deletions": 0,
    "changes": 121,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/controller/BookController.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/controller/BookController.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/controller/BookController.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,121 @@\n+package ru.otus.spring.controller;\r\n+\r\n+import lombok.AllArgsConstructor;\r\n+import org.apache.logging.log4j.LogManager;\r\n+import org.apache.logging.log4j.Logger;\r\n+import org.springframework.context.annotation.Import;\r\n+import org.springframework.security.access.prepost.PreAuthorize;\r\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\r\n+import org.springframework.security.core.Authentication;\r\n+import org.springframework.security.core.context.SecurityContext;\r\n+import org.springframework.security.core.context.SecurityContextHolder;\r\n+import org.springframework.security.core.userdetails.UserDetails;\r\n+import org.springframework.stereotype.Controller;\r\n+import org.springframework.ui.Model;\r\n+import org.springframework.web.bind.annotation.GetMapping;\r\n+import org.springframework.web.bind.annotation.PostMapping;\r\n+import org.springframework.web.bind.annotation.RequestParam;\r\n+import ru.otus.spring.domain.Author;\r\n+import ru.otus.spring.domain.Book;\r\n+import ru.otus.spring.domain.Genre;\r\n+import ru.otus.spring.domain.User;\r\n+import ru.otus.spring.service.Library;\r\n+import ru.otus.spring.service.LibraryImpl;\r\n+\r\n+import java.util.Optional;\r\n+\r\n+@Controller\r\n+@AllArgsConstructor\r\n+@Import({LibraryImpl.class})\r\n+public class BookController {\r\n+    private final Library library;\r\n+    private static Logger logger = LogManager.getLogger();\r\n+    private final Book emptyBook = new Book(0, new Author(0, \"\"), new Genre(0, \"\"), \"\");\r\n+\r\n+    @GetMapping(\"/error\")\r\n+    public String errorPage() {\r\n+        return \"error\";\r\n+    }\r\n+    @GetMapping(\"/library\")\r\n+    public String libraryShow(@RequestParam(value = \"bookId\", defaultValue = \"0\") long bookId, Model model) {\r\n+        model.addAttribute(\"book\", emptyBook);\r\n+        return \"library\";\r\n+    }\r\n+\r\n+    @GetMapping(\"/insertBook\")\r\n+    public String prepareForInsert(@RequestParam(value = \"bookId\", defaultValue = \"0\") long bookId, Model model) {\r\n+        model.addAttribute(\"authors\", library.getAllAuthors());\r\n+        model.addAttribute(\"genres\", library.getAllGenres());\r\n+        model.addAttribute(\"book\", emptyBook);\r\n+        return \"insertBook\";\r\n+    }\r\n+\r\n+    @PreAuthorize(\"hasRole('ADMIN_ROLE')\")\r\n+    @PostMapping(\"/insertBook\")\r\n+    public String bookInsert(\r\n+            Book book,\r\n+            Model model\r\n+    ) {\r\n+        try {\r\n+            library.bookInsert(book.getAuthor().getAuthorId(), book.getGenre().getGenreId(), book.getName());\r\n+        } catch (Exception e) {\r\n+            logger.error(e.getMessage());\r\n+        }\r\n+        model.addAttribute(\"book\", emptyBook);\r\n+        model.addAttribute(\"authors\", library.getAllAuthors());\r\n+        model.addAttribute(\"genres\", library.getAllGenres());\r\n+\r\n+        return \"insertBook\";\r\n+    }\r\n+\r\n+    @GetMapping(\"/editBook\")\r\n+    public String bookFind(@RequestParam(\"bookId\") long bookId, Model model) {\r\n+        Optional<Book> book = library.bookShow(bookId);\r\n+        if (book.isPresent()) {\r\n+            model.addAttribute(\"book\", book.get());\r\n+        } else {\r\n+            model.addAttribute(\"book\", emptyBook);\r\n+        }\r\n+        model.addAttribute(\"authors\", library.getAllAuthors());\r\n+        model.addAttribute(\"genres\", library.getAllGenres());\r\n+\r\n+        return \"editBook\";\r\n+    }\r\n+\r\n+    @PreAuthorize(\"hasRole('ADMIN_ROLE')\")\r\n+    @PostMapping(\"/editBook\")\r\n+    public String bookEdit(\r\n+            Book book,\r\n+            Model model\r\n+    ) {\r\n+        try {\r\n+            library.bookUpdate(book.getBookId(), book.getAuthor().getAuthorId(), book.getGenre().getGenreId(), book.getName());\r\n+        } catch (Exception e) {\r\n+            logger.error(e.getMessage());\r\n+        }\r\n+        model.addAttribute(\"book\", library.bookShow(book.getBookId()).get());\r\n+        return \"editBook\";\r\n+    }\r\n+\r\n+    @GetMapping(\"/deleteBook\")\r\n+    public String bookFindForDelete(@RequestParam(\"bookId\") long bookId, Model model) {\r\n+        bookFind(bookId, model);\r\n+        return \"deleteBook\";\r\n+    }\r\n+\r\n+    @PreAuthorize(\"hasRole('ADMIN_ROLE')\")\r\n+    @PostMapping(\"/deleteBook\")\r\n+    public String bookDelete(\r\n+            Book book, Model model\r\n+    ) {\r\n+        try {\r\n+            library.bookDelete(book.getBookId());\r\n+        } catch (Exception e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+\r\n+        model.addAttribute(\"book\", emptyBook);\r\n+        return \"deleteBook\";\r\n+    }\r\n+\r\n+}\r"
  },
  {
    "sha": "fa7ae8e3a032b4fdc7b89baacb1f7c15ac0e1c81",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/AuthorDao.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/AuthorDao.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/AuthorDao.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/AuthorDao.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.otus.spring.dao;\r\n+\r\n+import org.springframework.data.jpa.repository.JpaRepository;\r\n+import ru.otus.spring.domain.Author;\r\n+\r\n+public interface AuthorDao extends JpaRepository<Author, Long> {\r\n+}\r"
  },
  {
    "sha": "051e385d57df497bf5bfb671f6242835779ee063",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/BookCommentDao.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/BookCommentDao.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/BookCommentDao.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/BookCommentDao.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.otus.spring.dao;\r\n+\r\n+import org.springframework.data.jpa.repository.JpaRepository;\r\n+import org.springframework.transaction.annotation.Transactional;\r\n+import ru.otus.spring.domain.Book;\r\n+import ru.otus.spring.domain.BookComment;\r\n+\r\n+import java.util.List;\r\n+\r\n+public interface BookCommentDao extends JpaRepository<BookComment, Long> {\r\n+    @Transactional\r\n+    void deleteAllByBook(Book book);\r\n+\r\n+    @Transactional(readOnly = true)\r\n+    List<BookComment> findAllByBook(Book book);\r\n+}\r"
  },
  {
    "sha": "6d8d1a962b551ed9ddf6c3fb26e3739409978491",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/BookDao.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/BookDao.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/BookDao.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/BookDao.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.otus.spring.dao;\r\n+\r\n+import org.springframework.data.jpa.repository.JpaRepository;\r\n+import org.springframework.transaction.annotation.Transactional;\r\n+import ru.otus.spring.domain.Book;\r\n+\r\n+import java.util.List;\r\n+import java.util.Optional;\r\n+\r\n+public interface BookDao extends JpaRepository<Book, Long> {\r\n+    @Transactional(readOnly = true)\r\n+    Optional<Book> findFirstByNameEquals(String bookName);\r\n+\r\n+    @Transactional(readOnly = true)\r\n+    List<Book> findBooksByAuthorNotNullAndGenreNotNull();\r\n+}\r"
  },
  {
    "sha": "2dba17d5c7b19513b37a15a46cf173dcfbdb3bff",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/GenreDao.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/GenreDao.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/GenreDao.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/GenreDao.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.otus.spring.dao;\r\n+\r\n+import org.springframework.data.jpa.repository.JpaRepository;\r\n+import ru.otus.spring.domain.Genre;\r\n+\r\n+public interface GenreDao extends JpaRepository<Genre, Long> {\r\n+}\r"
  },
  {
    "sha": "863b08e69cc65475de58a94fe243c6430ac3c7f7",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/UserDao.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/UserDao.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/UserDao.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/dao/UserDao.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.otus.spring.dao;\r\n+\r\n+import org.springframework.data.jpa.repository.JpaRepository;\r\n+import ru.otus.spring.domain.User;\r\n+\r\n+public interface UserDao extends JpaRepository<User, Long> {\r\n+}\r"
  },
  {
    "sha": "9e289bdf09170889caaae9e3fe81083f2175dd3c",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Author.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Author.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Author.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Author.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,22 @@\n+package ru.otus.spring.domain;\r\n+\r\n+import lombok.AllArgsConstructor;\r\n+import lombok.Data;\r\n+import lombok.NoArgsConstructor;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+@Data\r\n+@AllArgsConstructor\r\n+@NoArgsConstructor\r\n+@Entity\r\n+@Table(name = \"tauthors\")\r\n+public class Author {\r\n+    @Id\r\n+    @Column(name = \"AuthorID\")\r\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n+    private long authorId;\r\n+\r\n+    @Column(name = \"FIO\")\r\n+    private String FIO;\r\n+}\r"
  },
  {
    "sha": "385dbae1345da7f0aaf3e4366687ae27e63c6ac2",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Book.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Book.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Book.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Book.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,37 @@\n+package ru.otus.spring.domain;\r\n+\r\n+import lombok.AllArgsConstructor;\r\n+import lombok.Data;\r\n+import lombok.NoArgsConstructor;\r\n+import org.hibernate.annotations.BatchSize;\r\n+import org.hibernate.annotations.Fetch;\r\n+import org.hibernate.annotations.FetchMode;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+@Data\r\n+@AllArgsConstructor\r\n+@NoArgsConstructor\r\n+@Entity\r\n+@Table(name = \"tbook\")\r\n+public class Book {\r\n+   @Id\r\n+   @Column(name = \"BookID\")\r\n+   @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n+   private long bookId;\r\n+\r\n+   @Fetch(FetchMode.SELECT)\r\n+   @BatchSize(size = 10)\r\n+   @ManyToOne(fetch = FetchType.EAGER)\r\n+   @JoinColumn(name = \"AuthorID\", referencedColumnName = \"AuthorID\")\r\n+   private Author author;\r\n+\r\n+   @Fetch(FetchMode.SELECT)\r\n+   @BatchSize(size = 10)\r\n+   @ManyToOne(fetch = FetchType.EAGER)\r\n+   @JoinColumn(name = \"GenreID\", referencedColumnName = \"GenreID\")\r\n+   private Genre genre;\r\n+\r\n+   @Column(name = \"Name\")\r\n+   private String name;\r\n+}\r"
  },
  {
    "sha": "c643b23c1e961341d50df3f2b7e75db1075924fb",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/BookComment.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/BookComment.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/BookComment.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/BookComment.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,32 @@\n+package ru.otus.spring.domain;\r\n+\r\n+import lombok.AllArgsConstructor;\r\n+import lombok.Data;\r\n+import lombok.NoArgsConstructor;\r\n+import org.hibernate.annotations.BatchSize;\r\n+import org.hibernate.annotations.Fetch;\r\n+import org.hibernate.annotations.FetchMode;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+@Data\r\n+@AllArgsConstructor\r\n+@NoArgsConstructor\r\n+@Entity\r\n+@Table(name = \"tbookcomment\")\r\n+public class BookComment {\r\n+    @Id\r\n+    @Column(name = \"bookcommentID\")\r\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n+    private long bookCommentId;\r\n+\r\n+    @Fetch(FetchMode.SELECT)\r\n+    @BatchSize(size = 20)\r\n+    @ManyToOne(fetch = FetchType.LAZY)\r\n+    @JoinColumn(name = \"BookID\", referencedColumnName = \"BookID\")\r\n+    private Book book;\r\n+\r\n+    @Column(name = \"Comment\")\r\n+    private String comment;\r\n+}\r\n+\r"
  },
  {
    "sha": "ef6c6bc480c95043c7043649d0f0c98390539903",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Genre.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Genre.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Genre.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/Genre.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,22 @@\n+package ru.otus.spring.domain;\r\n+\r\n+import lombok.AllArgsConstructor;\r\n+import lombok.Data;\r\n+import lombok.NoArgsConstructor;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+@Data\r\n+@AllArgsConstructor\r\n+@NoArgsConstructor\r\n+@Entity\r\n+@Table(name = \"tgenre\")\r\n+public class Genre {\r\n+    @Id\r\n+    @Column(name = \"GenreID\")\r\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n+    private long genreId;\r\n+\r\n+    @Column(name = \"Name\")\r\n+    private String Name;\r\n+}\r"
  },
  {
    "sha": "9436c41405bf7bdcfb1e01536a836683f3316c0a",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/User.java",
    "status": "added",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/User.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/User.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/domain/User.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,63 @@\n+package ru.otus.spring.domain;\r\n+\r\n+import antlr.collections.List;\r\n+import lombok.AllArgsConstructor;\r\n+import lombok.Data;\r\n+import lombok.NoArgsConstructor;\r\n+import org.springframework.security.core.GrantedAuthority;\r\n+import org.springframework.security.core.userdetails.UserDetails;\r\n+import ru.otus.spring.dao.UserDao;\r\n+\r\n+import javax.persistence.*;\r\n+import java.util.Collection;\r\n+\r\n+@Data\r\n+@AllArgsConstructor\r\n+@NoArgsConstructor\r\n+@Entity\r\n+@Table(name = \"tusers\")\r\n+public class User implements UserDetails {\r\n+    @Id\r\n+    @Column(name = \"UserID\")\r\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n+    private long userId;\r\n+\r\n+    @Column(name = \"Login\")\r\n+    private String login;\r\n+\r\n+    @Column(name = \"Password\")\r\n+    private String password;\r\n+\r\n+    @Column(name = \"Role\")\r\n+    private String role;\r\n+\r\n+    @Override\r\n+    public Collection<? extends GrantedAuthority> getAuthorities() {\r\n+        return null;\r\n+    }\r\n+\r\n+    @Override\r\n+    public String getUsername() {\r\n+        return login;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean isAccountNonExpired() {\r\n+        return true;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean isAccountNonLocked() {\r\n+        return true;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean isCredentialsNonExpired() {\r\n+        return true;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean isEnabled() {\r\n+        return true;\r\n+    }\r\n+}\r"
  },
  {
    "sha": "57c7ed8ff619467a9414540c05f40ba36b581e16",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/security/SecurityConfiguration.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/security/SecurityConfiguration.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/security/SecurityConfiguration.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/security/SecurityConfiguration.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,67 @@\n+package ru.otus.spring.security;\r\n+\r\n+import org.springframework.context.annotation.Bean;\r\n+import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\r\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\r\n+import org.springframework.security.config.annotation.web.builders.WebSecurity;\r\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\r\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\r\n+import org.springframework.security.config.http.SessionCreationPolicy;\r\n+import org.springframework.security.crypto.password.NoOpPasswordEncoder;\r\n+import org.springframework.security.crypto.password.PasswordEncoder;\r\n+import ru.otus.spring.dao.UserDao;\r\n+import ru.otus.spring.domain.User;\r\n+\r\n+import java.util.List;\r\n+\r\n+@EnableWebSecurity\r\n+public class SecurityConfiguration extends WebSecurityConfigurerAdapter {\r\n+    private final UserDao userDao;\r\n+\r\n+    public SecurityConfiguration(UserDao userDao) {\r\n+        this.userDao = userDao;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void configure(WebSecurity web) {\r\n+        web.ignoring().antMatchers(\"/\");\r\n+    }\r\n+\r\n+    @Override\r\n+    public void configure(HttpSecurity http) throws Exception {\r\n+        http\r\n+          // По умолчанию SecurityContext хранится в сессии. Эта часть вырубает и каждый запросом приходит\r\n+         .csrf().disable()\r\n+         .sessionManagement()\r\n+         .sessionCreationPolicy(SessionCreationPolicy.ALWAYS)\r\n+         .and()\r\n+         .authorizeRequests().antMatchers(\"/library\").permitAll()\r\n+         .and()\r\n+         .authorizeRequests().antMatchers( \"/deleteBook\", \"/editBook\", \"/insertBook\").authenticated()\r\n+         .and()\r\n+         .formLogin()\r\n+         .and()\r\n+         .logout().logoutUrl(\"/error\");\r\n+\r\n+    }\r\n+\r\n+    @SuppressWarnings(\"deprecation\")\r\n+    @Bean\r\n+    public PasswordEncoder passwordEncoder() {\r\n+        return NoOpPasswordEncoder.getInstance();\r\n+    }\r\n+\r\n+    @Override\r\n+    public void configure( AuthenticationManagerBuilder auth ) throws Exception {\r\n+\r\n+        List<User> userList = userDao.findAll();\r\n+        for (int i=0; i < userList.size(); i++) {\r\n+            User tmpUser = userList.get(i);\r\n+            auth.inMemoryAuthentication()\r\n+                    .withUser( tmpUser.getLogin() ).password( tmpUser.getPassword() ).roles( tmpUser.getRole() );\r\n+\r\n+        }\r\n+    }\r\n+\r\n+\r\n+}\r"
  },
  {
    "sha": "a318170db2138f67551494cde740278937c99fe1",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/service/Library.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/service/Library.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/service/Library.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/service/Library.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,22 @@\n+package ru.otus.spring.service;\r\n+\r\n+import org.springframework.security.access.prepost.PreAuthorize;\r\n+import ru.otus.spring.domain.Author;\r\n+import ru.otus.spring.domain.Book;\r\n+import ru.otus.spring.domain.Genre;\r\n+\r\n+import java.util.List;\r\n+import java.util.Optional;\r\n+\r\n+public interface Library {\r\n+    List<Genre> getAllGenres();\r\n+    List<Author> getAllAuthors();\r\n+    Optional<Book> bookShow(long bookId);\r\n+    boolean bookInsert(long authorId, long genreId, String bookName) throws Exception;\r\n+\r\n+    boolean bookDelete(long bookId) throws Exception;\r\n+\r\n+    boolean bookUpdate(long bookId, long authorId, long genreId, String bookName) throws Exception;\r\n+    void showCoomentsByBook(long bookId) throws Exception;\r\n+    List<Book> showAllBooks();\r\n+}\r"
  },
  {
    "sha": "f46bcd52a48459a75e4f442b31534df578bdbf32",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/service/LibraryImpl.java",
    "status": "added",
    "additions": 137,
    "deletions": 0,
    "changes": 137,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/service/LibraryImpl.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/service/LibraryImpl.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/java/ru/otus/spring/service/LibraryImpl.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,137 @@\n+package ru.otus.spring.service;\r\n+\r\n+import lombok.RequiredArgsConstructor;\r\n+import lombok.val;\r\n+import org.apache.logging.log4j.LogManager;\r\n+import org.apache.logging.log4j.Logger;\r\n+import org.springframework.security.access.prepost.PreAuthorize;\r\n+import org.springframework.transaction.annotation.Transactional;\r\n+import ru.otus.spring.dao.AuthorDao;\r\n+import ru.otus.spring.dao.BookCommentDao;\r\n+import ru.otus.spring.dao.BookDao;\r\n+import ru.otus.spring.dao.GenreDao;\r\n+import ru.otus.spring.domain.Author;\r\n+import ru.otus.spring.domain.Book;\r\n+import ru.otus.spring.domain.BookComment;\r\n+import ru.otus.spring.domain.Genre;\r\n+\r\n+import java.util.List;\r\n+import java.util.Optional;\r\n+\r\n+// Класс работы с приложением \"Библиотека книг\"\r\n+@RequiredArgsConstructor\r\n+public class LibraryImpl implements Library {\r\n+\r\n+    private final BookDao bookDao;\r\n+    private final BookCommentDao bookCommentDao;\r\n+    private final AuthorDao authorDao;\r\n+    private final GenreDao genreDao;\r\n+    private final String BOOK_NOT_EXIST_MESSAGE = \"Книга не существует в базе данных.\";\r\n+\r\n+    private static Logger logger = LogManager.getLogger();\r\n+\r\n+    @Override\r\n+    public List<Genre> getAllGenres() {\r\n+        return genreDao.findAll();\r\n+    }\r\n+\r\n+    @Override\r\n+    public List<Author> getAllAuthors() {\r\n+        return authorDao.findAll();\r\n+    }\r\n+\r\n+    @Override\r\n+    public Optional<Book> bookShow(long bookId) {\r\n+        return bookDao.findById(bookId);\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean bookInsert(long authorId, long genreId, String bookName) throws Exception {\r\n+        boolean result = false;\r\n+\r\n+        Author author = authorDao.findById(authorId).get();\r\n+        Genre genre = genreDao.findById(genreId).get();\r\n+        Book b = new Book(0, author, genre, bookName);\r\n+        try {\r\n+            bookDao.save(b);\r\n+            result = true;\r\n+            logger.info(\"Книга успешно добавлена.\");\r\n+        }catch (Exception e) {\r\n+            logger.error(e.getMessage());\r\n+            throw new Exception(e);\r\n+        }\r\n+\r\n+        return result;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean bookUpdate(long bookId, long authorId, long genreId, String bookName) throws Exception {\r\n+        boolean result = false;\r\n+\r\n+        Author author = authorDao.findById(authorId).get();\r\n+        Genre genre = genreDao.findById(genreId).get();\r\n+        Book b = new Book(bookId, author, genre, bookName);\r\n+        try {\r\n+            val optionalBook = bookDao.findById(bookId);\r\n+            if (optionalBook.isPresent()) {\r\n+                bookDao.save(b);\r\n+                result = true;\r\n+                logger.info(\"Книга успешно изменена.\");\r\n+            }\r\n+            else {\r\n+               logger.error(BOOK_NOT_EXIST_MESSAGE);\r\n+            }\r\n+        }catch (Exception e) {\r\n+            logger.error(e.getMessage());\r\n+            throw new Exception(e);\r\n+        }\r\n+\r\n+        return result;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean bookDelete(long bookId) throws Exception {\r\n+        boolean result = false;\r\n+        try {\r\n+            val optionalBook = bookDao.findById(bookId);\r\n+            if (optionalBook.isPresent()) {\r\n+                bookCommentDao.deleteAllByBook(optionalBook.get());\r\n+                bookDao.deleteById(bookId);\r\n+                result = true;\r\n+                logger.info(\"Книга успешно удалена.\");\r\n+            }\r\n+            else {\r\n+                logger.info(BOOK_NOT_EXIST_MESSAGE);\r\n+            }\r\n+        }catch (Exception e) {\r\n+            logger.error(e.getMessage());\r\n+            throw new Exception(e);\r\n+        }\r\n+\r\n+        return result;\r\n+    }\r\n+\r\n+    @Override\r\n+    public List<Book> showAllBooks() {\r\n+        return bookDao.findBooksByAuthorNotNullAndGenreNotNull();\r\n+    }\r\n+\r\n+    @Override\r\n+    @Transactional\r\n+    public void showCoomentsByBook(long bookId) throws Exception {\r\n+        try {\r\n+            val optionalBook = bookDao.findById(bookId);\r\n+            if (optionalBook.isPresent()) {\r\n+                List<BookComment> lbc = bookCommentDao.findAllByBook(optionalBook.get());\r\n+                System.out.println(\"Комментарии книги bookId=\" + String.valueOf(bookId));\r\n+                lbc.forEach(System.out::println);\r\n+            } else {\r\n+                logger.info(BOOK_NOT_EXIST_MESSAGE);\r\n+            }\r\n+        } catch (Exception e) {\r\n+            logger.error(e.getMessage());\r\n+            throw new Exception(e);\r\n+        }\r\n+    }\r\n+\r\n+}\r"
  },
  {
    "sha": "c9010cd978ea9193aa59fca4ccbceef48195c063",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/resources/application.yml",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/application.yml",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/resources/application.yml?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,22 @@\n+spring:\n+  datasource:\n+    url: jdbc:h2:mem:testdb\n+    initialization-mode: always\n+\n+  h2:\n+    console:\n+      path: /h2-console\n+      settings:\n+        web-allow-others: true\n+\n+  jpa:\n+    generate-ddl: false\n+    #generate-ddl: true\n+    hibernate:\n+      ddl-auto: none\n+      #ddl-auto: create-drop\n+    show-sql: true\n+    properties:\n+      hibernate:\n+        format_sql: true\n+"
  },
  {
    "sha": "76fa2d7335cd60cee0567880a97daae001935a65",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/resources/data.sql",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/data.sql",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/data.sql",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/resources/data.sql?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,16 @@\n+insert into tAuthors (AuthorID, `FIO`) values (1, 'Эдуард Успенский');\n+insert into tAuthors (AuthorID, `FIO`) values (2, 'Александр Сергеевич Пушкин');\n+insert into tAuthors (AuthorID, `FIO`) values (3, 'Михаил Хазин');\n+\n+insert into tGenre (GenreID, `Name`) values (1, 'Детские сказки');\n+insert into tGenre (GenreID, `Name`) values (2, 'Экономика');\n+insert into tGenre (GenreID, `Name`) values (3, 'Фантастика');\n+\n+insert into tBook (BookID, AuthorID, GenreID, `Name`) values (1, 2, 2, 'Тестовая книга для комментариев');\n+insert into tBook (BookID, AuthorID, GenreID, `Name`) values (2, 3, 3, 'Вторая книга для комментариев');\n+insert into tBookComment (BookCommentID, BookID, Comment) values (101, 1, 'Первый комментарий для Тестовая книга');\n+insert into tBookComment (BookCommentID, BookID, Comment) values (102, 1, 'Второй комментарий для Тестовая книга');\n+\n+insert into tUsers (Login, Password, Role) values ('user1', '1', 'USER_ROLE');\n+insert into tUsers (Login, Password, Role) values ('user2', '2', 'USER_ROLE');\n+insert into tUsers (Login, Password, Role) values ('admin', 'password', 'ADMIN_ROLE');"
  },
  {
    "sha": "fd9fe36711191384a7bdda50be6b5bb6abb3ab8e",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/resources/schema.sql",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/schema.sql",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/schema.sql",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/resources/schema.sql?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,50 @@\n+DROP TABLE IF EXISTS tBookComment;\n+DROP TABLE IF EXISTS tBook;\n+DROP TABLE IF EXISTS tAuthors;\n+DROP TABLE IF EXISTS tGenre;\n+DROP TABLE IF EXISTS tUsers;\n+\n+CREATE TABLE tAuthors(AuthorID numeric(15,0) PRIMARY KEY, FIO VARCHAR(255));\n+\n+DROP INDEX IF EXISTS XPKtAuthors;\n+create unique index XPKtAuthors on tAuthors (AuthorID);\n+\n+DROP INDEX IF EXISTS XAK1tAuthors;\n+create unique index XAK1tAuthors on tAuthors (FIO);\n+------\n+CREATE TABLE tGenre(GenreID numeric(15,0) PRIMARY KEY, Name VARCHAR(60));\n+\n+DROP INDEX IF EXISTS XPKtGenre;\n+create unique index XPKtGenre on tGenre (GenreID);\n+\n+DROP INDEX IF EXISTS XAK1tGenre;\n+create unique index XAK1tGenre on tGenre (Name);\n+------\n+CREATE TABLE tBook(\n+BookID numeric(15,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,\n+AuthorID numeric(15,0),\n+GenreID numeric(15,0),\n+Name VARCHAR(255),\n+FOREIGN KEY (AuthorID) REFERENCES tAuthors (AuthorID),\n+FOREIGN KEY (GenreID) REFERENCES tGenre (GenreID)\n+);\n+\n+DROP INDEX IF EXISTS XPKtBook;\n+create unique index XPKtBook on tBook (BookID);\n+------\n+CREATE TABLE tBookComment(\n+BookCommentID numeric(15,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,\n+BookID numeric(15,0),\n+Comment VARCHAR(255),\n+FOREIGN KEY (BookID) REFERENCES tBook (BookID)\n+);\n+------\n+CREATE TABLE tUsers(\n+UserID numeric(15,0) GENERATED ALWAYS AS IDENTITY PRIMARY KEY,\n+Login VARCHAR(30),\n+Password VARCHAR(30),\n+Role VARCHAR(30)\n+);\n+\n+DROP INDEX IF EXISTS XPKtUsers;\n+create unique index XPKtUsers on tUsers (UserID);"
  },
  {
    "sha": "2e317b5d1484fd0cde151695cc53d6a11c356f17",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/resources/templates/deleteBook.html",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/deleteBook.html",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/deleteBook.html",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/deleteBook.html?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,69 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\"/>\n+    <title>Delete Book</title>\n+    <style type=\"text/css\">\n+        body {\n+            padding: 50px;\n+        }\n+\n+        label {\n+            display: inline-block;\n+            width: 150px;\n+        }\n+\n+        big_label {\n+            display: inline-block;\n+            width: 250px;\n+            color: crimson;\n+        }\n+\n+        input:read-only {\n+            background: lightgray;\n+        }\n+\n+        .row {\n+            margin-top: 10px;\n+        }\n+    </style>\n+</head>\n+<body>\n+\n+<!-- Book edition -->\n+<form id=\"deleteBook-form\" th:action=\"@{/deleteBook(bookId=${book.bookId})}\" th:method=\"post\" action=\"deleteBook.html\">\n+    <h1>Удаление книги:</h1>\n+\n+    <div class=\"row\">\n+        <label for=\"id-input\">ID книги:</label>\n+        <input id=\"id-input\" type=\"text\" readonly=\"readonly\" th:value=\"${book.bookId}\" value=\"1\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"holder-input\">Наименование книги:</label>\n+        <input id=\"holder-input\" name=\"name\" type=\"text\" readonly=\"readonly\" th:value=\"${book.name}\" value=\"Test Book Name\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"author-input\">Автор:</label>\n+        <input id=\"author-input\" name=\"authorFio\" type=\"text\" readonly=\"readonly\" th:value=\"${book.getAuthor().getFIO()}\" value=\"Author\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"genre-input\">Жанр:</label>\n+        <input id=\"genre-input\" name=\"genreName\" type=\"text\" readonly=\"readonly\" th:value=\"${book.getGenre().getName()}\" value=\"Genre\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <button type=\"submit\">Удалить</button>\n+    </div>\n+\n+    <div class=\"row\">\n+        <big_label for=\"copyright-input\">CopyRight: Tsaplin Sergey </big_label>\n+        <a th:href=\"@{/library}\">Back</a>\n+    </div>\n+\n+</form>\n+\n+</body>\n+</html>"
  },
  {
    "sha": "0e952a08abec29f5488520e4b6ffc3bddaae30cf",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/resources/templates/editBook.html",
    "status": "added",
    "additions": 80,
    "deletions": 0,
    "changes": 80,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/editBook.html",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/editBook.html",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/editBook.html?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,80 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\"/>\n+    <title>Edit Book</title>\n+    <style type=\"text/css\">\n+        body {\n+            padding: 50px;\n+        }\n+\n+        label {\n+            width: 150px;\n+            display: inline-block;\n+        }\n+\n+        big_label {\n+            display: inline-block;\n+            width: 250px;\n+            color: crimson;\n+        }\n+\n+        input:read-only {\n+            background: lightgray;\n+        }\n+\n+        .row {\n+            margin-top: 10px;\n+        }\n+    </style>\n+</head>\n+<body>\n+\n+<!-- Book edition -->\n+<form id=\"editBook-form\" th:action=\"@{/editBook(bookId=${book.bookId})}\" th:method=\"post\" action=\"editBook.html\">\n+    <h1>Редактирование книги:</h1>\n+\n+    <div class=\"row\">\n+        <label for=\"id-input\">ID книги:</label>\n+        <input id=\"id-input\" type=\"text\" readonly=\"readonly\" th:value=\"${book.bookId}\" value=\"1\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"holder-input\">Наименование книги:</label>\n+        <input id=\"holder-input\" name=\"name\" type=\"text\" th:value=\"${book.name}\" value=\"Test Book Name\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"author-lookup\">Автор:</label>\n+        <select class=\"form-control\" name=\"author\" id=\"author-lookup\">\n+            <option th:value=\"${book.getAuthor().getAuthorId()}\" th:text=\"${book.getAuthor().getFIO()}\">Автор этой книги</option>\n+            <option th:each=\"author : ${authors}\"\n+                    th:value=\"${author.getAuthorId()}\"\n+                    th:text=\"${author.getFIO()}\">\n+            </option>\n+        </select>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"genre-lookup\">Жанр:</label>\n+        <select class=\"form-control\" name=\"genre\" id=\"genre-lookup\">\n+            <option th:value=\"${book.genre.getGenreId()}\" th:text=\"${book.genre.getName()}\">Жанр этой книги</option>\n+            <option th:each=\"genre : ${genres}\"\n+                    th:value=\"${genre.getGenreId()}\"\n+                    th:text=\"${genre.getName()}\">\n+            </option>\n+        </select>\n+    </div>\n+\n+    <div class=\"row\">\n+        <button type=\"submit\">Редактировать</button>\n+    </div>\n+\n+    <div class=\"row\">\n+        <big_label for=\"copyright-input\">CopyRight: Tsaplin Sergey </big_label>\n+        <a th:href=\"@{/library}\">Back</a>\n+    </div>\n+</form>\n+\n+</body>\n+</html>"
  },
  {
    "sha": "182ccd6dfa859fb8d9125745628dc081fdd160d0",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/resources/templates/error.html",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/error.html",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/error.html",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/error.html?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,10 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+<head>\n+    <meta charset=\"UTF-8\"/>\n+    <title>Ошибка</title>\n+</head>\n+<body>\n+Что-то пошло не так. Ошибка\n+</body>\n+</html>"
  },
  {
    "sha": "450b555a340f75bfcd972eb3ad2a4c50c40dda9e",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/resources/templates/insertBook.html",
    "status": "added",
    "additions": 74,
    "deletions": 0,
    "changes": 74,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/insertBook.html",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/insertBook.html",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/insertBook.html?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,74 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\"/>\n+    <title>Insert Book</title>\n+    <style type=\"text/css\">\n+        body {\n+            padding: 50px;\n+        }\n+\n+        label {\n+            width: 150px;\n+            display: inline-block;\n+        }\n+\n+        big_label {\n+            display: inline-block;\n+            width: 250px;\n+            color: crimson;\n+        }\n+\n+        input:read-only {\n+            background: lightgray;\n+        }\n+\n+        .row {\n+            margin-top: 10px;\n+        }\n+    </style>\n+</head>\n+<body>\n+\n+<!-- Book insert -->\n+<form id=\"insertBook-form\" th:action=\"@{/insertBook(bookId=0)}\" th:method=\"post\" action=\"insertBook.html\">\n+    <h1>Добавление книги:</h1>\n+\n+    <div class=\"row\">\n+        <label for=\"holder-input\">Наименование книги:</label>\n+        <input id=\"holder-input\" name=\"name\" type=\"text\" value=\"\"/>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"author-lookup\">Автор:</label>\n+        <select class=\"form-control\" name=\"author\" id=\"author-lookup\">\n+            <option th:each=\"author : ${authors}\"\n+                    th:value=\"${author.getAuthorId()}\"\n+                    th:text=\"${author.getFIO()}\">\n+            </option>\n+        </select>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label for=\"genre-lookup\">Жанр:</label>\n+        <select class=\"form-control\" name=\"genre\" id=\"genre-lookup\">\n+            <option th:each=\"genre : ${genres}\"\n+                    th:value=\"${genre.getGenreId()}\"\n+                    th:text=\"${genre.getName()}\">\n+            </option>\n+        </select>\n+    </div>\n+\n+    <div class=\"row\">\n+        <button type=\"submit\">Добавить</button>\n+    </div>\n+\n+    <div class=\"row\">\n+        <big_label for=\"copyright-input\">CopyRight: Tsaplin Sergey </big_label>\n+        <a th:href=\"@{/library}\">Back</a>\n+    </div>\n+\n+</form>\n+\n+</body>\n+</html>"
  },
  {
    "sha": "a729ffa65f6fcd5ad5487780c3608b3c802ccc5f",
    "filename": "2020-11/spring-25/spring-25-exercise/src/main/resources/templates/library.html",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/library.html",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/library.html",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/main/resources/templates/library.html?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,88 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\"/>\n+    <title>Library</title>\n+    <style type=\"text/css\">\n+        body {\n+            padding: 50px;\n+        }\n+\n+        label {\n+            width: 150px;\n+            display: inline-block;\n+        }\n+\n+        label2 {\n+            display: inline-block;\n+            width: 250px;\n+            font-weight: bold;\n+            font-size: 20px;\n+        }\n+\n+        input:read-only {\n+            background: lightgray;\n+        }\n+\n+        .row {\n+            margin-top: 10px;\n+        }\n+    </style>\n+    <script src=\"webjars/jquery/3.3.1/jquery.min.js\"></script>\n+</head>\n+<body>\n+\n+<!-- Library -->\n+<form id=\"library-form\" th:action=\"@{/library(bookId=${book.bookId})}\" th:method=\"post\" action=\"library.html\">\n+    <h1>Библиотека</h1>\n+\n+    <div class=\"row\">\n+        <a th:href=\"@{/insertBook(bookId=${book.bookId})}\">Добавление книги</a>\n+    </div>\n+\n+    <div class=\"row\">\n+        <a th:href=\"@{/editBook(bookId=${book.bookId})}\">Редактирование книги</a>\n+    </div>\n+\n+    <div class=\"row\">\n+        <a th:href=\"@{/deleteBook(bookId=${book.bookId})}\">Удаление книги</a>\n+    </div>\n+\n+    <div class=\"row\">\n+        <label2 for=\"book-list\">Перечень книг</label2>\n+    </div>\n+\n+    <table border=\"1\" class=\"table table-striped table-primary\">\n+        <thead class=\"ttop\">\n+        <tr class=\"table-info\">\n+            <th>ID</th>\n+            <th>Наименование книги</th>\n+            <td><b>Автор</b> </td>\n+            <td><b>Жанр</b> </td>\n+        </tr>\n+        </thead>\n+        <tbody>\n+        </tbody>\n+    </table>\n+\n+    <script>\n+        $( document ).ready(function() {\n+            $(function () {\n+                $.get('/all-books').done(function (books) {\n+                    Array.from(books).map(function (bookElement, i) {\n+                        $('tbody').append(`\n+                    <tr>\n+                        <td>${bookElement.bookId}</td>\n+                        <td>${bookElement.name}</td>\n+                        <td>${bookElement.author.fio}</td>\n+                        <td>${bookElement.genre.name}</td>\n+                    </tr>\n+                `)\n+                    });\n+                })\n+            });\n+        });\n+    </script>\n+\n+</body>\n+</html>"
  },
  {
    "sha": "658b3cf0f7b1218fc6f063119358cf8c88312c3b",
    "filename": "2020-11/spring-25/spring-25-exercise/src/test/java/ru/otus/spring/service/TestApplication.java",
    "status": "added",
    "additions": 139,
    "deletions": 0,
    "changes": 139,
    "blob_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/blob/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/test/java/ru/otus/spring/service/TestApplication.java",
    "raw_url": "https://github.com/Tsaplin/2020-11-otus-spring-Tsaplin/raw/58ce532621d0d3d84eea00a1eed4a5305a705945/2020-11/spring-25/spring-25-exercise/src/test/java/ru/otus/spring/service/TestApplication.java",
    "contents_url": "https://api.github.com/repos/Tsaplin/2020-11-otus-spring-Tsaplin/contents/2020-11/spring-25/spring-25-exercise/src/test/java/ru/otus/spring/service/TestApplication.java?ref=58ce532621d0d3d84eea00a1eed4a5305a705945",
    "patch": "@@ -0,0 +1,139 @@\n+package ru.otus.spring.service;\r\n+\r\n+import lombok.val;\r\n+import org.junit.jupiter.api.DisplayName;\r\n+import org.junit.jupiter.api.Test;\r\n+import org.springframework.beans.factory.annotation.Autowired;\r\n+import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;\r\n+import org.springframework.context.annotation.Import;\r\n+import ru.otus.spring.dao.AuthorDao;\r\n+import ru.otus.spring.dao.BookCommentDao;\r\n+import ru.otus.spring.dao.BookDao;\r\n+import ru.otus.spring.dao.GenreDao;\r\n+import ru.otus.spring.domain.Book;\r\n+\r\n+import java.util.List;\r\n+\r\n+import static org.junit.jupiter.api.Assertions.assertEquals;\r\n+\r\n+@DisplayName(\"Запуск юнит-тестов\")\r\n+@DataJpaTest\r\n+@Import({LibraryImpl.class})\r\n+public class TestApplication {\r\n+    @Autowired\r\n+    BookCommentDao bookCommentDao;\r\n+    @Autowired\r\n+    AuthorDao authorDao;\r\n+    @Autowired\r\n+    GenreDao genreDao;\r\n+\r\n+    @Autowired\r\n+    private Library library;\r\n+\r\n+    @Autowired\r\n+    private BookDao bookDao;\r\n+\r\n+    @Test\r\n+    @DisplayName(\"Запуск юнит-теста insertTest\")\r\n+    public void insertTest()\r\n+    {\r\n+        boolean res = false;\r\n+        int actual = 0;\r\n+\r\n+        try {\r\n+            res = library.bookInsert(1, 1, \"Книга юнит-теста insertTest\");\r\n+        } catch (Exception e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+\r\n+        actual = (res) ? 1 : 0;\r\n+\r\n+        assertEquals(1, actual);\r\n+    }\r\n+\r\n+    @Test\r\n+    @DisplayName(\"Запуск юнит-теста updateTest\")\r\n+    public void updateTest()\r\n+    {\r\n+        boolean res = false;\r\n+        int actual = 0;\r\n+        long bookId = 0;\r\n+        String bookName = \"Книга юнит-теста updateTest\";\r\n+\r\n+        try {\r\n+            res = library.bookInsert(1, 2, bookName);\r\n+        } catch (Exception e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+\r\n+        val optionalBook = bookDao.findFirstByNameEquals(bookName);\r\n+\r\n+        if (optionalBook.isPresent()) {\r\n+            bookId = optionalBook.get().getBookId();\r\n+            try {\r\n+                res = library.bookUpdate(bookId, 2, 3, \"Книга юнит-теста updateTest модифицированная\");\r\n+            } catch (Exception e) {\r\n+                e.printStackTrace();\r\n+            }\r\n+        }\r\n+\r\n+        actual = (res) ? 1 : 0;\r\n+        assertEquals(1, actual);\r\n+    }\r\n+\r\n+    @Test\r\n+    @DisplayName(\"Запуск юнит-теста deleteTest\")\r\n+    public void deleteTest()\r\n+    {\r\n+        boolean res = false;\r\n+        int actual = 0;\r\n+        long bookId = 0;\r\n+        String bookName = \"Книга юнит-теста deleteTest\";\r\n+\r\n+        try {\r\n+            res = library.bookInsert(2, 3, bookName);\r\n+        } catch (Exception e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+\r\n+        val optionalBook = bookDao.findFirstByNameEquals(bookName);\r\n+\r\n+        if (optionalBook.isPresent()) {\r\n+            bookId = optionalBook.get().getBookId();\r\n+            try {\r\n+                res = library.bookDelete(bookId);\r\n+            } catch (Exception e) {\r\n+                e.printStackTrace();\r\n+            }\r\n+        }\r\n+\r\n+        actual = (res) ? 1 : 0;\r\n+        assertEquals(1, actual);\r\n+    }\r\n+\r\n+    @Test\r\n+    @DisplayName(\"Запуск юнит-теста getAllTest\")\r\n+    public void getAllTest()\r\n+    {\r\n+        boolean res = false;\r\n+        int actual = 0;\r\n+        String bookName = \"Книга юнит-теста getAllTest\";\r\n+\r\n+        try {\r\n+            res = library.bookInsert(1, 1, bookName);\r\n+        } catch (Exception e) {\r\n+            e.printStackTrace();\r\n+        }\r\n+\r\n+        List<Book> lb = bookDao.findBooksByAuthorNotNullAndGenreNotNull();\r\n+        for (int i = 0; i < lb.size(); i++) {\r\n+            Book b = lb.get(i);\r\n+            if (b.getName().equals(bookName)) {\r\n+                actual = 1;\r\n+                break;\r\n+            }\r\n+        }\r\n+        assertEquals(1, actual);\r\n+    }\r\n+\r\n+}\r"
  }
]
