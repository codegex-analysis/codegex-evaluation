[
  {
    "sha": "d0fd5a2a87ecaf3f41323287d99079a00c0686f9",
    "filename": "src/main/java/ru/gofit/controllers/SportTypeController.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/master-kot/auheal/blob/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/controllers/SportTypeController.java",
    "raw_url": "https://github.com/master-kot/auheal/raw/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/controllers/SportTypeController.java",
    "contents_url": "https://api.github.com/repos/master-kot/auheal/contents/src/main/java/ru/gofit/controllers/SportTypeController.java?ref=da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b",
    "patch": "@@ -0,0 +1,59 @@\n+package ru.gofit.controllers;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import lombok.RequiredArgsConstructor;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+import ru.gofit.dto.SportTypeRqDto;\n+import ru.gofit.dto.SportTypeRsDto;\n+import ru.gofit.services.api.SportTypeService;\n+\n+import javax.validation.Valid;\n+\n+@Api(tags = \"Виды спорта\")\n+@Slf4j\n+@RestController\n+@RequiredArgsConstructor\n+@RequestMapping(\"/sport_types\")\n+public class SportTypeController {\n+\n+    private final SportTypeService sportTypeService;\n+\n+    @ApiOperation(\"Запрос списка видов спорта\")\n+    @GetMapping\n+    public Page<SportTypeRsDto> getAll(Pageable pageable) {\n+        return sportTypeService.getAll(pageable);\n+    }\n+\n+    @ApiOperation(\"Запрос вида спорта по id\")\n+    @GetMapping(\"/{id}\")\n+    public SportTypeRsDto getById(@ApiParam(name = \"id\", value = \"ID вида спорта\") @PathVariable Short id) {\n+        return sportTypeService.getById(id);\n+    }\n+\n+    @ApiOperation(\"Создать вид спорта\")\n+    @PostMapping\n+    public SportTypeRsDto save(@Valid @RequestBody SportTypeRqDto sportTypeRqDto) {\n+        return sportTypeService.save(sportTypeRqDto);\n+    }\n+\n+    @ApiOperation(\"Обновить вид спорта\")\n+    @PutMapping(\"/{id}\")\n+    public SportTypeRsDto update(@ApiParam(name = \"id\", value = \"ID вида спорта\") @PathVariable Short id,\n+                                 @RequestBody SportTypeRqDto sportTypeRqDto) {\n+        return sportTypeService.update(id, sportTypeRqDto);\n+    }\n+\n+    @ApiOperation(\"Удалить вид спорта\")\n+    @DeleteMapping(\"/{id}\")\n+    public ResponseEntity<?> delete(@ApiParam(name = \"id\", value = \"ID вида спорта\") @PathVariable Short id) {\n+        sportTypeService.deleteById(id);\n+        return ResponseEntity.accepted()\n+                .build();\n+    }\n+}"
  },
  {
    "sha": "07998687e753161c9ae355f429fb28ee8cfe8b3b",
    "filename": "src/main/java/ru/gofit/dto/SportTypeRqDto.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/master-kot/auheal/blob/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/dto/SportTypeRqDto.java",
    "raw_url": "https://github.com/master-kot/auheal/raw/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/dto/SportTypeRqDto.java",
    "contents_url": "https://api.github.com/repos/master-kot/auheal/contents/src/main/java/ru/gofit/dto/SportTypeRqDto.java?ref=da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b",
    "patch": "@@ -0,0 +1,23 @@\n+package ru.gofit.dto;\n+\n+import io.swagger.annotations.ApiModelProperty;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+import javax.validation.constraints.NotBlank;\n+\n+import static ru.gofit.helpers.Messages.DATA_NOT_BLANK;\n+\n+\n+@Data\n+@Builder\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class SportTypeRqDto {\n+\n+    @ApiModelProperty(\"Описание вида спорта\")\n+    @NotBlank(message = DATA_NOT_BLANK + \": Описание вида спорта\")\n+    private String description;\n+}"
  },
  {
    "sha": "b422f07ca6e6eb24a452c40b2714ab9d53262b62",
    "filename": "src/main/java/ru/gofit/dto/SportTypeRsDto.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/master-kot/auheal/blob/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/dto/SportTypeRsDto.java",
    "raw_url": "https://github.com/master-kot/auheal/raw/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/dto/SportTypeRsDto.java",
    "contents_url": "https://api.github.com/repos/master-kot/auheal/contents/src/main/java/ru/gofit/dto/SportTypeRsDto.java?ref=da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.gofit.dto;\n+\n+import io.swagger.annotations.ApiModelProperty;\n+import lombok.AllArgsConstructor;\n+import lombok.Builder;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@Builder\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class SportTypeRsDto {\n+\n+    @ApiModelProperty(\"Вида спорта\")\n+    private Short id;\n+\n+    @ApiModelProperty(\"Описание вида спорта\")\n+    private String description;\n+}"
  },
  {
    "sha": "b991df80ffb9b793e587209d35d99d400f9b87a1",
    "filename": "src/main/java/ru/gofit/mappers/SportTypeMapper.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/master-kot/auheal/blob/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/mappers/SportTypeMapper.java",
    "raw_url": "https://github.com/master-kot/auheal/raw/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/mappers/SportTypeMapper.java",
    "contents_url": "https://api.github.com/repos/master-kot/auheal/contents/src/main/java/ru/gofit/mappers/SportTypeMapper.java?ref=da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.gofit.mappers;\n+\n+import org.mapstruct.Mapper;\n+import org.mapstruct.MappingTarget;\n+import org.mapstruct.ReportingPolicy;\n+import ru.gofit.dto.SportTypeRqDto;\n+import ru.gofit.dto.SportTypeRsDto;\n+import ru.gofit.entities.SportType;\n+\n+\n+@Mapper(componentModel = \"spring\", unmappedTargetPolicy = ReportingPolicy.IGNORE)\n+public interface SportTypeMapper {\n+\n+    SportTypeRsDto mapEntityToDto(SportType entity);\n+\n+    SportType mapDtoToEntity(SportTypeRqDto sportTypeRqDto);\n+\n+    SportType update(@MappingTarget SportType entity, SportTypeRqDto sportTypeRqDto);\n+}"
  },
  {
    "sha": "62c00995936dbe1644e68cd19b8ec35aa88e8d0a",
    "filename": "src/main/java/ru/gofit/services/api/SportTypeService.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/master-kot/auheal/blob/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/services/api/SportTypeService.java",
    "raw_url": "https://github.com/master-kot/auheal/raw/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/services/api/SportTypeService.java",
    "contents_url": "https://api.github.com/repos/master-kot/auheal/contents/src/main/java/ru/gofit/services/api/SportTypeService.java?ref=da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b",
    "patch": "@@ -0,0 +1,49 @@\n+package ru.gofit.services.api;\n+\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+import ru.gofit.dto.SportTypeRqDto;\n+import ru.gofit.dto.SportTypeRsDto;\n+\n+public interface SportTypeService {\n+\n+    /**\n+     * Найти все виды спорта\n+     *\n+     * @param pageable количество страниц и количество видов спорта на странице\n+     * @return список видов спорта\n+     */\n+    Page<SportTypeRsDto> getAll(Pageable pageable);\n+\n+    /**\n+     * Найти вида спорта по его идентификатору\n+     *\n+     * @param id идентификатор вида спорта\n+     * @return вид спорта\n+     */\n+    SportTypeRsDto getById(Short id);\n+\n+    /**\n+     * Создать новый вид спорта\n+     *\n+     * @param sportTypeRqDto запрос с данными вида спорта\n+     * @return новый вид спорта, сохраненный в репозитории\n+     */\n+    SportTypeRsDto save(SportTypeRqDto sportTypeRqDto);\n+\n+    /**\n+     * Изменить описание вида спорта\n+     *\n+     * @param id             вида спорта\n+     * @param sportTypeRqDto изиененное описание вида спорта\n+     * @return измененный вид спорта, сохраненный в репозитории\n+     */\n+    SportTypeRsDto update(Short id, SportTypeRqDto sportTypeRqDto);\n+\n+    /**\n+     * Удалить вид спорта по его идентификатору\n+     *\n+     * @param id идентификатор вида спорта\n+     */\n+    void deleteById(Short id);\n+}"
  },
  {
    "sha": "b097ed83d992e9c2fca4d0646bc9ac2dbd6bc44f",
    "filename": "src/main/java/ru/gofit/services/core/SportTypeServiceImpl.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/master-kot/auheal/blob/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/services/core/SportTypeServiceImpl.java",
    "raw_url": "https://github.com/master-kot/auheal/raw/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/java/ru/gofit/services/core/SportTypeServiceImpl.java",
    "contents_url": "https://api.github.com/repos/master-kot/auheal/contents/src/main/java/ru/gofit/services/core/SportTypeServiceImpl.java?ref=da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b",
    "patch": "@@ -0,0 +1,67 @@\n+package ru.gofit.services.core;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.data.domain.Page;\n+import org.springframework.data.domain.Pageable;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+import ru.gofit.dto.SportTypeRqDto;\n+import ru.gofit.dto.SportTypeRsDto;\n+import ru.gofit.entities.SportType;\n+import ru.gofit.exceptions.DataNotFoundException;\n+import ru.gofit.mappers.SportTypeMapper;\n+import ru.gofit.repositories.SportTypeRepository;\n+import ru.gofit.services.api.SportTypeService;\n+\n+import static ru.gofit.helpers.Messages.DATA_WAS_NOT_FOUND_BY_ID;\n+import static ru.gofit.helpers.Messages.USER_NOT_FOUND_BY_ID;\n+\n+@Service\n+@RequiredArgsConstructor\n+public class SportTypeServiceImpl implements SportTypeService {\n+\n+    private final SportTypeRepository sportTypeRepository;\n+    private final SportTypeMapper sportTypeMapper;\n+\n+    @Override\n+    public Page<SportTypeRsDto> getAll(Pageable pageable) {\n+        return sportTypeRepository.findAll(pageable)\n+                .map(sportTypeMapper::mapEntityToDto);\n+    }\n+\n+    @Override\n+    public SportTypeRsDto getById(Short id) {\n+        return sportTypeRepository.findById(id)\n+                .map(sportTypeMapper::mapEntityToDto)\n+                .orElseThrow(() ->\n+                        new DataNotFoundException(String.format(DATA_WAS_NOT_FOUND_BY_ID, id))\n+                );\n+    }\n+\n+    @Override\n+    @Transactional\n+    public SportTypeRsDto save(SportTypeRqDto sportTypeRqDto) {\n+        SportType newSportType = sportTypeRepository.save(sportTypeMapper.mapDtoToEntity(sportTypeRqDto));\n+        return sportTypeMapper.mapEntityToDto(newSportType);\n+    }\n+\n+    @Override\n+    @Transactional\n+    public SportTypeRsDto update(Short id, SportTypeRqDto sportTypeRqDto) {\n+        SportType sportTypeFromDb = sportTypeRepository.findById(id)\n+                .orElseThrow(() -> new DataNotFoundException(String.format(USER_NOT_FOUND_BY_ID, id)));\n+        SportType updateSportType = sportTypeMapper.update(sportTypeFromDb, sportTypeRqDto);\n+        return sportTypeMapper.mapEntityToDto(sportTypeRepository.save(updateSportType));\n+    }\n+\n+    @Override\n+    @Transactional\n+    public void deleteById(Short id) {\n+        sportTypeRepository.findById(id)\n+                .ifPresentOrElse(sportTypeRepository::delete,\n+                        () -> {\n+                            throw new DataNotFoundException(String.format(USER_NOT_FOUND_BY_ID, id));\n+                        }\n+                );\n+    }\n+}"
  },
  {
    "sha": "a9ca4ee07ce1dbdc62f157345cb8b1531068eae7",
    "filename": "src/main/resources/application.properties",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/master-kot/auheal/blob/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/resources/application.properties",
    "raw_url": "https://github.com/master-kot/auheal/raw/da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/master-kot/auheal/contents/src/main/resources/application.properties?ref=da7ff47a3c0dbd6138dc48cb2527f77f6b9b8d2b",
    "patch": "@@ -1,6 +1,9 @@\n server.port=8080\n server.servlet.context-path=/\n \n+server.error.include-message=always\n+server.error.include-binding-errors=always\n+\n # Разрешаем использование скрытых методов, etc DeleteMapping\n spring.mvc.hiddenmethod.filter.enabled=true\n "
  }
]
