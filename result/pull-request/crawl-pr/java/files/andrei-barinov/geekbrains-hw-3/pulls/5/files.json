[
  {
    "sha": "549e00a2a96fa9d7c5dbc9859664a78d980158c2",
    "filename": "spring-boot-project/.gitignore",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/.gitignore",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/.gitignore",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/.gitignore?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,33 @@\n+HELP.md\n+target/\n+!.mvn/wrapper/maven-wrapper.jar\n+!**/src/main/**/target/\n+!**/src/test/**/target/\n+\n+### STS ###\n+.apt_generated\n+.classpath\n+.factorypath\n+.project\n+.settings\n+.springBeans\n+.sts4-cache\n+\n+### IntelliJ IDEA ###\n+.idea\n+*.iws\n+*.iml\n+*.ipr\n+\n+### NetBeans ###\n+/nbproject/private/\n+/nbbuild/\n+/dist/\n+/nbdist/\n+/.nb-gradle/\n+build/\n+!**/src/main/**/build/\n+!**/src/test/**/build/\n+\n+### VS Code ###\n+.vscode/"
  },
  {
    "sha": "e76d1f3241d38db9b28f05133823bbed1ad289ff",
    "filename": "spring-boot-project/.mvn/wrapper/MavenWrapperDownloader.java",
    "status": "added",
    "additions": 117,
    "deletions": 0,
    "changes": 117,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/.mvn/wrapper/MavenWrapperDownloader.java",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/.mvn/wrapper/MavenWrapperDownloader.java",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/.mvn/wrapper/MavenWrapperDownloader.java?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2007-present the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import java.net.*;\n+import java.io.*;\n+import java.nio.channels.*;\n+import java.util.Properties;\n+\n+public class MavenWrapperDownloader {\n+\n+    private static final String WRAPPER_VERSION = \"0.5.6\";\n+    /**\n+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.\n+     */\n+    private static final String DEFAULT_DOWNLOAD_URL = \"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/\"\n+        + WRAPPER_VERSION + \"/maven-wrapper-\" + WRAPPER_VERSION + \".jar\";\n+\n+    /**\n+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to\n+     * use instead of the default one.\n+     */\n+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =\n+            \".mvn/wrapper/maven-wrapper.properties\";\n+\n+    /**\n+     * Path where the maven-wrapper.jar will be saved to.\n+     */\n+    private static final String MAVEN_WRAPPER_JAR_PATH =\n+            \".mvn/wrapper/maven-wrapper.jar\";\n+\n+    /**\n+     * Name of the property which should be used to override the default download url for the wrapper.\n+     */\n+    private static final String PROPERTY_NAME_WRAPPER_URL = \"wrapperUrl\";\n+\n+    public static void main(String args[]) {\n+        System.out.println(\"- Downloader started\");\n+        File baseDirectory = new File(args[0]);\n+        System.out.println(\"- Using base directory: \" + baseDirectory.getAbsolutePath());\n+\n+        // If the maven-wrapper.properties exists, read it and check if it contains a custom\n+        // wrapperUrl parameter.\n+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);\n+        String url = DEFAULT_DOWNLOAD_URL;\n+        if(mavenWrapperPropertyFile.exists()) {\n+            FileInputStream mavenWrapperPropertyFileInputStream = null;\n+            try {\n+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);\n+                Properties mavenWrapperProperties = new Properties();\n+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);\n+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);\n+            } catch (IOException e) {\n+                System.out.println(\"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\");\n+            } finally {\n+                try {\n+                    if(mavenWrapperPropertyFileInputStream != null) {\n+                        mavenWrapperPropertyFileInputStream.close();\n+                    }\n+                } catch (IOException e) {\n+                    // Ignore ...\n+                }\n+            }\n+        }\n+        System.out.println(\"- Downloading from: \" + url);\n+\n+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);\n+        if(!outputFile.getParentFile().exists()) {\n+            if(!outputFile.getParentFile().mkdirs()) {\n+                System.out.println(\n+                        \"- ERROR creating output directory '\" + outputFile.getParentFile().getAbsolutePath() + \"'\");\n+            }\n+        }\n+        System.out.println(\"- Downloading to: \" + outputFile.getAbsolutePath());\n+        try {\n+            downloadFileFromURL(url, outputFile);\n+            System.out.println(\"Done\");\n+            System.exit(0);\n+        } catch (Throwable e) {\n+            System.out.println(\"- Error downloading\");\n+            e.printStackTrace();\n+            System.exit(1);\n+        }\n+    }\n+\n+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {\n+        if (System.getenv(\"MVNW_USERNAME\") != null && System.getenv(\"MVNW_PASSWORD\") != null) {\n+            String username = System.getenv(\"MVNW_USERNAME\");\n+            char[] password = System.getenv(\"MVNW_PASSWORD\").toCharArray();\n+            Authenticator.setDefault(new Authenticator() {\n+                @Override\n+                protected PasswordAuthentication getPasswordAuthentication() {\n+                    return new PasswordAuthentication(username, password);\n+                }\n+            });\n+        }\n+        URL website = new URL(urlString);\n+        ReadableByteChannel rbc;\n+        rbc = Channels.newChannel(website.openStream());\n+        FileOutputStream fos = new FileOutputStream(destination);\n+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);\n+        fos.close();\n+        rbc.close();\n+    }\n+\n+}"
  },
  {
    "sha": "2cc7d4a55c0cd0092912bf49ae38b3a9e3fd0054",
    "filename": "spring-boot-project/.mvn/wrapper/maven-wrapper.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/.mvn/wrapper/maven-wrapper.jar",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/.mvn/wrapper/maven-wrapper.jar",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/.mvn/wrapper/maven-wrapper.jar?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8"
  },
  {
    "sha": "642d572ce90e5085986bdd9c9204b9404f028084",
    "filename": "spring-boot-project/.mvn/wrapper/maven-wrapper.properties",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/.mvn/wrapper/maven-wrapper.properties",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/.mvn/wrapper/maven-wrapper.properties",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/.mvn/wrapper/maven-wrapper.properties?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,2 @@\n+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip\n+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
  },
  {
    "sha": "a16b5431b4c3cab50323a3f558003fd0abd87dad",
    "filename": "spring-boot-project/mvnw",
    "status": "added",
    "additions": 310,
    "deletions": 0,
    "changes": 310,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/mvnw",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/mvnw",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/mvnw?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,310 @@\n+#!/bin/sh\n+# ----------------------------------------------------------------------------\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#    https://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+# ----------------------------------------------------------------------------\n+\n+# ----------------------------------------------------------------------------\n+# Maven Start Up Batch script\n+#\n+# Required ENV vars:\n+# ------------------\n+#   JAVA_HOME - location of a JDK home dir\n+#\n+# Optional ENV vars\n+# -----------------\n+#   M2_HOME - location of maven2's installed home dir\n+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+#     e.g. to debug Maven itself, use\n+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+# ----------------------------------------------------------------------------\n+\n+if [ -z \"$MAVEN_SKIP_RC\" ] ; then\n+\n+  if [ -f /etc/mavenrc ] ; then\n+    . /etc/mavenrc\n+  fi\n+\n+  if [ -f \"$HOME/.mavenrc\" ] ; then\n+    . \"$HOME/.mavenrc\"\n+  fi\n+\n+fi\n+\n+# OS specific support.  $var _must_ be set to either true or false.\n+cygwin=false;\n+darwin=false;\n+mingw=false\n+case \"`uname`\" in\n+  CYGWIN*) cygwin=true ;;\n+  MINGW*) mingw=true;;\n+  Darwin*) darwin=true\n+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n+    if [ -z \"$JAVA_HOME\" ]; then\n+      if [ -x \"/usr/libexec/java_home\" ]; then\n+        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n+      else\n+        export JAVA_HOME=\"/Library/Java/Home\"\n+      fi\n+    fi\n+    ;;\n+esac\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  if [ -r /etc/gentoo-release ] ; then\n+    JAVA_HOME=`java-config --jre-home`\n+  fi\n+fi\n+\n+if [ -z \"$M2_HOME\" ] ; then\n+  ## resolve links - $0 may be a link to maven's home\n+  PRG=\"$0\"\n+\n+  # need this for relative symlinks\n+  while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+      PRG=\"$link\"\n+    else\n+      PRG=\"`dirname \"$PRG\"`/$link\"\n+    fi\n+  done\n+\n+  saveddir=`pwd`\n+\n+  M2_HOME=`dirname \"$PRG\"`/..\n+\n+  # make it fully qualified\n+  M2_HOME=`cd \"$M2_HOME\" && pwd`\n+\n+  cd \"$saveddir\"\n+  # echo Using m2 at $M2_HOME\n+fi\n+\n+# For Cygwin, ensure paths are in UNIX format before anything is touched\n+if $cygwin ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\n+fi\n+\n+# For Mingw, ensure paths are in UNIX format before anything is touched\n+if $mingw ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ]; then\n+  javaExecutable=\"`which javac`\"\n+  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n+    # readlink(1) is not available as standard on Solaris 10.\n+    readLink=`which readlink`\n+    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n+      if $darwin ; then\n+        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n+      else\n+        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n+      fi\n+      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n+      JAVA_HOME=\"$javaHome\"\n+      export JAVA_HOME\n+    fi\n+  fi\n+fi\n+\n+if [ -z \"$JAVACMD\" ] ; then\n+  if [ -n \"$JAVA_HOME\"  ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+      # IBM's JDK on AIX uses strange locations for the executables\n+      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+      JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+  else\n+    JAVACMD=\"`which java`\"\n+  fi\n+fi\n+\n+if [ ! -x \"$JAVACMD\" ] ; then\n+  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n+  echo \"  We cannot execute $JAVACMD\" >&2\n+  exit 1\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  echo \"Warning: JAVA_HOME environment variable is not set.\"\n+fi\n+\n+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n+\n+# traverses directory structure from process work directory to filesystem root\n+# first directory with .mvn subdirectory is considered project base directory\n+find_maven_basedir() {\n+\n+  if [ -z \"$1\" ]\n+  then\n+    echo \"Path not specified to find_maven_basedir\"\n+    return 1\n+  fi\n+\n+  basedir=\"$1\"\n+  wdir=\"$1\"\n+  while [ \"$wdir\" != '/' ] ; do\n+    if [ -d \"$wdir\"/.mvn ] ; then\n+      basedir=$wdir\n+      break\n+    fi\n+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n+    if [ -d \"${wdir}\" ]; then\n+      wdir=`cd \"$wdir/..\"; pwd`\n+    fi\n+    # end of workaround\n+  done\n+  echo \"${basedir}\"\n+}\n+\n+# concatenates all lines of a file\n+concat_lines() {\n+  if [ -f \"$1\" ]; then\n+    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n+  fi\n+}\n+\n+BASE_DIR=`find_maven_basedir \"$(pwd)\"`\n+if [ -z \"$BASE_DIR\" ]; then\n+  exit 1;\n+fi\n+\n+##########################################################################################\n+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+# This allows using the maven wrapper in projects that prohibit checking in binary data.\n+##########################################################################################\n+if [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n+    fi\n+else\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n+    fi\n+    if [ -n \"$MVNW_REPOURL\" ]; then\n+      jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    else\n+      jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    fi\n+    while IFS=\"=\" read key value; do\n+      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n+      esac\n+    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Downloading from: $jarUrl\"\n+    fi\n+    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n+    if $cygwin; then\n+      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n+    fi\n+\n+    if command -v wget > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found wget ... using wget\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            wget \"$jarUrl\" -O \"$wrapperJarPath\"\n+        else\n+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n+        fi\n+    elif command -v curl > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found curl ... using curl\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        else\n+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        fi\n+\n+    else\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Falling back to using Java to download\"\n+        fi\n+        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n+        # For Cygwin, switch paths to Windows format before running javac\n+        if $cygwin; then\n+          javaClass=`cygpath --path --windows \"$javaClass\"`\n+        fi\n+        if [ -e \"$javaClass\" ]; then\n+            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n+                fi\n+                # Compiling the Java class\n+                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n+            fi\n+            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                # Running the downloader\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Running MavenWrapperDownloader.java ...\"\n+                fi\n+                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n+            fi\n+        fi\n+    fi\n+fi\n+##########################################################################################\n+# End of extension\n+##########################################################################################\n+\n+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\n+if [ \"$MVNW_VERBOSE\" = true ]; then\n+  echo $MAVEN_PROJECTBASEDIR\n+fi\n+MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n+  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\n+fi\n+\n+# Provide a \"standardized\" way to retrieve the CLI args that will\n+# work with both Windows and non-Windows executions.\n+MAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\n+export MAVEN_CMD_LINE_ARGS\n+\n+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+exec \"$JAVACMD\" \\\n+  $MAVEN_OPTS \\\n+  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n+  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\""
  },
  {
    "sha": "c8d43372c986d97911cdc21bd87e0cbe3d83bdda",
    "filename": "spring-boot-project/mvnw.cmd",
    "status": "added",
    "additions": 182,
    "deletions": 0,
    "changes": 182,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/mvnw.cmd",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/mvnw.cmd",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/mvnw.cmd?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,182 @@\n+@REM ----------------------------------------------------------------------------\n+@REM Licensed to the Apache Software Foundation (ASF) under one\n+@REM or more contributor license agreements.  See the NOTICE file\n+@REM distributed with this work for additional information\n+@REM regarding copyright ownership.  The ASF licenses this file\n+@REM to you under the Apache License, Version 2.0 (the\n+@REM \"License\"); you may not use this file except in compliance\n+@REM with the License.  You may obtain a copy of the License at\n+@REM\n+@REM    https://www.apache.org/licenses/LICENSE-2.0\n+@REM\n+@REM Unless required by applicable law or agreed to in writing,\n+@REM software distributed under the License is distributed on an\n+@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+@REM KIND, either express or implied.  See the License for the\n+@REM specific language governing permissions and limitations\n+@REM under the License.\n+@REM ----------------------------------------------------------------------------\n+\n+@REM ----------------------------------------------------------------------------\n+@REM Maven Start Up Batch script\n+@REM\n+@REM Required ENV vars:\n+@REM JAVA_HOME - location of a JDK home dir\n+@REM\n+@REM Optional ENV vars\n+@REM M2_HOME - location of maven2's installed home dir\n+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+@REM     e.g. to debug Maven itself, use\n+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+@REM ----------------------------------------------------------------------------\n+\n+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n+@echo off\n+@REM set title of command window\n+title %0\n+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n+@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n+\n+@REM set %HOME% to equivalent of $HOME\n+if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n+\n+@REM Execute a user defined script before this one\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n+@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\n+if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n+:skipRcPre\n+\n+@setlocal\n+\n+set ERROR_CODE=0\n+\n+@REM To isolate internal variables from possible post scripts, we use another setlocal\n+@setlocal\n+\n+@REM ==== START VALIDATION ====\n+if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n+\n+echo.\n+echo Error: JAVA_HOME not found in your environment. >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+:OkJHome\n+if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n+\n+echo.\n+echo Error: JAVA_HOME is set to an invalid directory. >&2\n+echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+@REM ==== END VALIDATION ====\n+\n+:init\n+\n+@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n+@REM Fallback to current working directory if not found.\n+\n+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n+IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n+\n+set EXEC_DIR=%CD%\n+set WDIR=%EXEC_DIR%\n+:findBaseDir\n+IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n+cd ..\n+IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n+set WDIR=%CD%\n+goto findBaseDir\n+\n+:baseDirFound\n+set MAVEN_PROJECTBASEDIR=%WDIR%\n+cd \"%EXEC_DIR%\"\n+goto endDetectBaseDir\n+\n+:baseDirNotFound\n+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n+cd \"%EXEC_DIR%\"\n+\n+:endDetectBaseDir\n+\n+IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n+\n+@setlocal EnableExtensions EnableDelayedExpansion\n+for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n+\n+:endReadAdditionalConfig\n+\n+SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n+set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+\n+FOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n+    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n+)\n+\n+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n+if exist %WRAPPER_JAR% (\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Found %WRAPPER_JAR%\n+    )\n+) else (\n+    if not \"%MVNW_REPOURL%\" == \"\" (\n+        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    )\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n+        echo Downloading from: %DOWNLOAD_URL%\n+    )\n+\n+    powershell -Command \"&{\"^\n+\t\t\"$webclient = new-object System.Net.WebClient;\"^\n+\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n+\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n+\t\t\"}\"^\n+\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n+\t\t\"}\"\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Finished downloading %WRAPPER_JAR%\n+    )\n+)\n+@REM End of extension\n+\n+@REM Provide a \"standardized\" way to retrieve the CLI args that will\n+@REM work with both Windows and non-Windows executions.\n+set MAVEN_CMD_LINE_ARGS=%*\n+\n+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\n+if ERRORLEVEL 1 goto error\n+goto end\n+\n+:error\n+set ERROR_CODE=1\n+\n+:end\n+@endlocal & set ERROR_CODE=%ERROR_CODE%\n+\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n+@REM check for post script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\n+if exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n+:skipRcPost\n+\n+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\n+if \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n+\n+if \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n+\n+exit /B %ERROR_CODE%"
  },
  {
    "sha": "d73e107b7ee3f40cf550269e8e0288b690ef6e89",
    "filename": "spring-boot-project/pom.xml",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/pom.xml",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/pom.xml",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/pom.xml?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,88 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<parent>\n+\t\t<groupId>org.springframework.boot</groupId>\n+\t\t<artifactId>spring-boot-starter-parent</artifactId>\n+\t\t<version>2.4.2</version>\n+\t\t<relativePath/> <!-- lookup parent from repository -->\n+\t</parent>\n+\t<groupId>ru.geekbrains</groupId>\n+\t<artifactId>spring-boot-project</artifactId>\n+\t<version>0.0.1-SNAPSHOT</version>\n+\t<name>spring-boot-project</name>\n+\t<description>Demo project for Spring Boot</description>\n+\t<properties>\n+\t\t<java.version>11</java.version>\n+\t</properties>\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-thymeleaf</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.projectlombok</groupId>\n+\t\t\t<artifactId>lombok</artifactId>\n+\t\t\t<optional>true</optional>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n+\t\t\t<artifactId>jackson-databind</artifactId>\n+\t\t\t<version>2.11.1</version>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.fasterxml.jackson.dataformat</groupId>\n+\t\t\t<artifactId>jackson-dataformat-xml</artifactId>\n+\t\t\t<version>2.11.1</version>\n+\t\t</dependency>\n+\t\t<!-- https://mvnrepository.com/artifact/org.json/json -->\n+\t\t<dependency>\n+\t\t\t<groupId>org.json</groupId>\n+\t\t\t<artifactId>json</artifactId>\n+\t\t\t<version>20160810</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>com.vaadin.external.google</groupId>\n+\t\t\t<artifactId>android-json</artifactId>\n+\t\t\t<version>0.0.20131108.vaadin1</version>\n+\t\t\t<scope>compile</scope>\n+\t\t</dependency>\n+\t\t<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jetty -->\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-jetty</artifactId>\n+\t\t\t<version>2.4.2</version>\n+\t\t</dependency>\n+\n+\t</dependencies>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<excludes>\n+\t\t\t\t\t\t<exclude>\n+\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\n+\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\n+\t\t\t\t\t\t</exclude>\n+\t\t\t\t\t</excludes>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\n+</project>"
  },
  {
    "sha": "91e4d7948d78b600b8cbf2fac763ba4a5655ea2d",
    "filename": "spring-boot-project/src/main/java/ru/geekbrains/boot/SpringBootProjectApplication.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/SpringBootProjectApplication.java",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/SpringBootProjectApplication.java",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/java/ru/geekbrains/boot/SpringBootProjectApplication.java?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.geekbrains.boot;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class SpringBootProjectApplication {\n+\n+\tpublic static void main(String[] args) {\n+\t\tSpringApplication.run(SpringBootProjectApplication.class, args);\n+\t}\n+\n+}"
  },
  {
    "sha": "39013ae2be1f4fab87dec3ef3225fddcb496574a",
    "filename": "spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/JsonController.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/JsonController.java",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/JsonController.java",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/JsonController.java?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.geekbrains.boot.controllers;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import ru.geekbrains.boot.model.Product;\n+\n+@Controller\n+public class JsonController {\n+    @GetMapping(\"/json/get\")\n+    public String getJson(Model model) throws JsonProcessingException {\n+        ObjectMapper mapper = new ObjectMapper();\n+        Product product = new Product(10, \"Car\", 100);\n+        String StrJson = mapper.writeValueAsString(product);\n+        model.addAttribute(\"message\", StrJson);\n+        return \"/repository/format/json\";\n+    }\n+}"
  },
  {
    "sha": "65c4c2553cba837ee0e051ee671461e2e66a7654",
    "filename": "spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/ProductController.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/ProductController.java",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/ProductController.java",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/ProductController.java?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,34 @@\n+package ru.geekbrains.boot.controllers;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.*;\n+import ru.geekbrains.boot.model.Product;\n+import ru.geekbrains.boot.services.ProductService;\n+\n+\n+@Controller\n+@RequestMapping(\"/repository\")\n+@RequiredArgsConstructor\n+public class ProductController {\n+    private final ProductService productService;\n+\n+    @GetMapping\n+    public String showAll(Model model){\n+        model.addAttribute(\"productList\", productService.findAll());\n+        return \"/repository/products\";\n+    }\n+\n+    @GetMapping(\"/new\")\n+    public String newProduct(Model uiModel){\n+        uiModel.addAttribute(\"product\", new Product());\n+        return \"/repository/new\";\n+    }\n+\n+    @PostMapping()\n+    public String create(@ModelAttribute(\"product\") Product product){\n+        productService.save(product);\n+        return \"redirect:/repository\";\n+    }\n+}"
  },
  {
    "sha": "0881a522a29c753d01caf28fb3b35ad47a6e68b2",
    "filename": "spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/XmlController.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/XmlController.java",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/XmlController.java",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/java/ru/geekbrains/boot/controllers/XmlController.java?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,28 @@\n+package ru.geekbrains.boot.controllers;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.json.XML;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import ru.geekbrains.boot.model.Product;\n+\n+@Controller\n+public class XmlController {\n+\n+\n+    @GetMapping (\"xml/get\")\n+    public String getXml(Model model) throws JsonProcessingException, JSONException {\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        Product product = new Product(10, \"Car\", 100);\n+        String StrJson = objectMapper.writeValueAsString(product);\n+        JSONObject json = new JSONObject(StrJson);\n+        String strXml = XML.toString(json);\n+        model.addAttribute(\"message\", strXml);\n+        return \"/repository/format/xml\";\n+    }\n+\n+}"
  },
  {
    "sha": "f3a186289ceb319999dcbb9eb8b1d2b493c30c03",
    "filename": "spring-boot-project/src/main/java/ru/geekbrains/boot/model/Product.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/model/Product.java",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/model/Product.java",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/java/ru/geekbrains/boot/model/Product.java?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.geekbrains.boot.model;\n+\n+import lombok.*;\n+\n+@Setter\n+@Getter\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class Product {\n+    private int id;\n+    private String name;\n+    private int price;\n+}"
  },
  {
    "sha": "55e5f29d19051a58f0493b5b704058d8196108d1",
    "filename": "spring-boot-project/src/main/java/ru/geekbrains/boot/repositories/ProductRepository.java",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/repositories/ProductRepository.java",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/repositories/ProductRepository.java",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/java/ru/geekbrains/boot/repositories/ProductRepository.java?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,53 @@\n+package ru.geekbrains.boot.repositories;\n+\n+import org.springframework.stereotype.Component;\n+import ru.geekbrains.boot.model.Product;\n+\n+import javax.annotation.PostConstruct;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+@Component\n+public class ProductRepository {\n+    private List<Product> productList;\n+    private static int PRODUCT_COUNT;\n+\n+    @PostConstruct\n+    public void init(){\n+        this.productList = new ArrayList<>(Arrays.asList(\n+                new Product(++PRODUCT_COUNT, \"Orange\", 10),\n+                new Product(++PRODUCT_COUNT, \"Banana\", 20),\n+                new Product(++PRODUCT_COUNT, \"Kiwi\", 30),\n+                new Product(++PRODUCT_COUNT, \"Pineapple\", 40),\n+                new Product(++PRODUCT_COUNT, \"Apple\", 50)\n+        ));\n+    }\n+\n+    public Product show(int id){\n+        return productList.stream().filter(product -> product.getId() == id).findAny().orElse(null);\n+    }\n+\n+    public Product save(Product product){\n+        boolean a = false;\n+        product.setId(++PRODUCT_COUNT);\n+        for(int i=0; i < productList.size(); i++){\n+            if(productList.get(i).getName().equals(product.getName()) && productList.get(i).getPrice() == product.getPrice()){\n+                a = true;\n+            }\n+            else if (productList.get(i).getName().equals(product.getName())){\n+                productList.set(i, product);\n+                a = true;\n+                break;\n+            }\n+\n+        }\n+        if(!a) productList.add(product);\n+        return product;\n+    }\n+\n+    public List<Product> findAll(){\n+        return Collections.unmodifiableList(productList);\n+    }\n+}"
  },
  {
    "sha": "42bb715df7659265629abdd1c682b3383c82c435",
    "filename": "spring-boot-project/src/main/java/ru/geekbrains/boot/services/ProductService.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/services/ProductService.java",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/java/ru/geekbrains/boot/services/ProductService.java",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/java/ru/geekbrains/boot/services/ProductService.java?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,26 @@\n+package ru.geekbrains.boot.services;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Service;\n+import ru.geekbrains.boot.model.Product;\n+import ru.geekbrains.boot.repositories.ProductRepository;\n+\n+import java.util.List;\n+\n+@Service\n+@RequiredArgsConstructor\n+public class ProductService {\n+    private final ProductRepository productRepository;\n+\n+    public List<Product> findAll(){\n+        return productRepository.findAll();\n+    }\n+\n+    public Product save(Product product){\n+        return productRepository.save(product);\n+    }\n+\n+    public Product show(int id){\n+        return productRepository.show(id);\n+    }\n+}"
  },
  {
    "sha": "7d64be15066462ed80c609ab23abdf1d5e9bd751",
    "filename": "spring-boot-project/src/main/resources/application.yaml",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/resources/application.yaml",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/resources/application.yaml",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/resources/application.yaml?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,4 @@\n+server:\n+  port: 8089\n+  servlet:\n+    context-path: /"
  },
  {
    "sha": "9fd2ccaae760627602255600e9c1c9a74c0c2978",
    "filename": "spring-boot-project/src/main/resources/templates/repository/format/json.html",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/resources/templates/repository/format/json.html",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/resources/templates/repository/format/json.html",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/resources/templates/repository/format/json.html?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,10 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns:th=\"http://www.w3.org/1999/xhtml\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <title>JSON</title>\n+</head>\n+<body>\n+<xml th:text=\"${message}\"/>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "627965c9f2db23cde833d63dd93c01ecfe6e00c3",
    "filename": "spring-boot-project/src/main/resources/templates/repository/format/xml.html",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/resources/templates/repository/format/xml.html",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/resources/templates/repository/format/xml.html",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/resources/templates/repository/format/xml.html?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,10 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+<head>\n+    <meta charset=\"UTF-8\" xmlns:th=\"http://www.w3.org/1999/xhtml\">\n+    <title>XML</title>\n+</head>\n+<body>\n+<p th:text=\"${message}\"></p>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "687234cb78731a14e212710360625dcb55d3e4c8",
    "filename": "spring-boot-project/src/main/resources/templates/repository/new.html",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/resources/templates/repository/new.html",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/resources/templates/repository/new.html",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/resources/templates/repository/new.html?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,33 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <title>Add product</title>\n+    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\n+    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n+    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"></script>\n+</head>\n+<body>\n+<div class=\"container\">\n+    <form th:method=\"POST\" th:action=\"@{/repository}\" th:object=\"${product}\">\n+        <div class=\"form-group row\">\n+            <label for=\"name\" class=\"col-sm-2 col-form-label\">Name of product:</label>\n+            <div class=\"col-sm-10\">\n+                <input type=\"text\" th:field=\"*{name}\" class=\"form-control\" id=\"name\">\n+            </div>\n+        </div>\n+        <div class=\"form-group row\">\n+            <label for=\"price\" class=\"col-sm-2 col-form-label\">Price of product</label>\n+            <div class=\"col-sm-10\">\n+                <input type=\"text\" th:field=\"*{price}\" class=\"form-control\" id=\"price\">\n+            </div>\n+        </div>\n+        <div class=\"form-group row\">\n+            <div class=\"offset-sm-2 col-sm-10\">\n+                <button type=\"submit\" class=\"btn btn-primary\">Add</button>\n+            </div>\n+        </div>\n+    </form>\n+</div>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "f57437e6956d4b897d9d82c2372df7aead716ac2",
    "filename": "spring-boot-project/src/main/resources/templates/repository/products.html",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/resources/templates/repository/products.html",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/main/resources/templates/repository/products.html",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/main/resources/templates/repository/products.html?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,29 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:th=\"http://www.thymeleaf.org\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <title>Goods</title>\n+    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\">\n+    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js\"></script>\n+    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"></script>\n+</head>\n+<body>\n+<h1>Список товаров</h1>\n+<table class=\"table table-hover\">\n+    <thead class=\"thead-dark\">\n+    <tr>\n+        <th>ID</th>\n+        <th>Имя товара</th>\n+        <th>Цена</th>\n+    </tr>\n+    </thead>\n+    <tbody>\n+    <tr th:each=\"product : ${productList}\">\n+        <td th:text=\"${product.id}\"></td>\n+        <td th:text=\"${product.name}\"></td>\n+        <td th:text=\"${product.price}\"></td>\n+    </tr>\n+    </tbody>\n+</table>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "5154eea758aa7ad8bd0cb81e574e977c1d230050",
    "filename": "spring-boot-project/src/test/java/ru/geekbrains/boot/SpringBootProjectApplicationTests.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/andrei-barinov/geekbrains-hw-3/blob/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/test/java/ru/geekbrains/boot/SpringBootProjectApplicationTests.java",
    "raw_url": "https://github.com/andrei-barinov/geekbrains-hw-3/raw/8d45fd528e21a8464df9452f5efa8073b4f417e8/spring-boot-project/src/test/java/ru/geekbrains/boot/SpringBootProjectApplicationTests.java",
    "contents_url": "https://api.github.com/repos/andrei-barinov/geekbrains-hw-3/contents/spring-boot-project/src/test/java/ru/geekbrains/boot/SpringBootProjectApplicationTests.java?ref=8d45fd528e21a8464df9452f5efa8073b4f417e8",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.geekbrains.boot;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+@SpringBootTest\n+class SpringBootProjectApplicationTests {\n+\n+\t@Test\n+\tvoid contextLoads() {\n+\t}\n+\n+}"
  }
]
