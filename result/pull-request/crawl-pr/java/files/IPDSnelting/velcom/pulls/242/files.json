[
  {
    "sha": "0c2e032e474e638555f1f9af43ad05c7dbb85a13",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/ServerMain.java",
    "status": "modified",
    "additions": 1,
    "deletions": 4,
    "changes": 5,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/ServerMain.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/ServerMain.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/ServerMain.java?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -14,7 +14,6 @@\n import de.aaaaaaah.velcom.backend.data.benchrepo.BenchRepo;\n import de.aaaaaaah.velcom.backend.data.queue.Queue;\n import de.aaaaaaah.velcom.backend.data.recentruns.SignificantRunsCollector;\n-import de.aaaaaaah.velcom.backend.data.repocomparison.TimesliceComparison;\n import de.aaaaaaah.velcom.backend.data.runcomparison.RunComparator;\n import de.aaaaaaah.velcom.backend.data.runcomparison.SignificanceFactors;\n import de.aaaaaaah.velcom.backend.listener.Listener;\n@@ -157,8 +156,6 @@ public void run(GlobalConfig configuration, Environment environment) throws Exce\n \t\t\tconfiguration.getSignificanceMinStddevAmount()\n \t\t);\n \t\tRunComparator runComparator = new RunComparator(significanceFactors);\n-\t\tTimesliceComparison comparison = new TimesliceComparison(benchmarkAccess, commitAccess,\n-\t\t\tdimensionAccess, runCache, latestRunCache);\n \t\tSignificantRunsCollector significantRunsCollector = new SignificantRunsCollector(\n \t\t\tsignificanceFactors, benchmarkAccess, commitAccess, dimensionAccess, runCache, latestRunCache,\n \t\t\trunComparator);\n@@ -188,7 +185,7 @@ public void run(GlobalConfig configuration, Environment environment) throws Exce\n \t\t\tnew CompareEndpoint(benchmarkAccess, commitAccess, dimensionAccess, runCache, latestRunCache,\n \t\t\t\trunComparator, significanceFactors),\n \t\t\tnew DebugEndpoint(benchmarkAccess, dispatcher),\n-\t\t\tnew GraphComparisonEndpoint(dimensionAccess, comparison),\n+\t\t\tnew GraphComparisonEndpoint(benchmarkAccess, commitAccess, dimensionAccess),\n \t\t\tnew GraphDetailEndpoint(commitAccess, benchmarkAccess, dimensionAccess, repoAccess, runCache,\n \t\t\t\tlatestRunCache),\n \t\t\tnew ListenerEndpoint(listener),"
  },
  {
    "sha": "ead7335319fe05f91b41931087b1196a66c7156f",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/GraphEntry.java",
    "status": "removed",
    "additions": 0,
    "deletions": 57,
    "changes": 57,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/GraphEntry.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/GraphEntry.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/GraphEntry.java?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,57 +0,0 @@\n-package de.aaaaaaah.velcom.backend.data.repocomparison;\n-\n-import de.aaaaaaah.velcom.backend.access.committaccess.entities.Commit;\n-import de.aaaaaaah.velcom.backend.access.committaccess.entities.CommitHash;\n-import java.time.Instant;\n-import java.util.Objects;\n-\n-/**\n- * An entry for a single commit and value in the {@link RepoComparisonGraph}.\n- */\n-public class GraphEntry {\n-\n-\tprivate final CommitHash hash;\n-\tprivate final String author;\n-\tprivate final Instant authorDate;\n-\tprivate final String summary;\n-\tprivate final double value;\n-\n-\tpublic GraphEntry(Commit commit, double value) {\n-\t\tObjects.requireNonNull(commit);\n-\n-\t\tthis.hash = commit.getHash();\n-\t\tthis.author = commit.getAuthor();\n-\t\tthis.authorDate = commit.getAuthorDate();\n-\t\tthis.summary = commit.getSummary();\n-\t\tthis.value = value;\n-\t}\n-\n-\tpublic CommitHash getHash() {\n-\t\treturn hash;\n-\t}\n-\n-\tpublic String getAuthor() {\n-\t\treturn author;\n-\t}\n-\n-\tpublic Instant getAuthorDate() {\n-\t\treturn authorDate;\n-\t}\n-\n-\tpublic String getSummary() {\n-\t\treturn summary;\n-\t}\n-\n-\tpublic double getValue() {\n-\t\treturn value;\n-\t}\n-\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn \"GraphEntry{\" +\n-\t\t\t\"hash=\" + hash +\n-\t\t\t\", value=\" + value +\n-\t\t\t'}';\n-\t}\n-\n-}"
  },
  {
    "sha": "b8af9110656df8ce0c12029e85518fc7e433963a",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoComparison.java",
    "status": "removed",
    "additions": 0,
    "deletions": 32,
    "changes": 32,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoComparison.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoComparison.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoComparison.java?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,32 +0,0 @@\n-package de.aaaaaaah.velcom.backend.data.repocomparison;\n-\n-import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.Dimension;\n-import de.aaaaaaah.velcom.backend.access.repoaccess.entities.BranchName;\n-import de.aaaaaaah.velcom.backend.access.repoaccess.entities.RepoId;\n-import java.time.Instant;\n-import java.util.Map;\n-import java.util.Set;\n-import javax.annotation.Nullable;\n-\n-/**\n- * Can generate a comparison graph showing how certain repositories perform regarding a certain\n- * measurement.\n- */\n-public interface RepoComparison {\n-\n-\t/**\n-\t * Generates a comparison graph using the given measurement to determine how well repositories are\n-\t * doing. A startTime and stopTime can be provided to limit the graph to a certain time frame.\n-\t *\n-\t * @param measurement the measurement to use for comparison\n-\t * @param repoBranches the repositories and which of their branches should be considered in this\n-\t * \tcomparison\n-\t * @param startTime the instant before which commits won't be considered\n-\t * @param stopTime the instant after which commits won't be considered\n-\t * @return the generated graph\n-\t */\n-\tRepoComparisonGraph generateGraph(Dimension measurement,\n-\t\tMap<RepoId, Set<BranchName>> repoBranches,\n-\t\t@Nullable Instant startTime, @Nullable Instant stopTime);\n-\n-}"
  },
  {
    "sha": "7a94d4f84e0394cecab7bffdd584b3efd76e0f71",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoComparisonGraph.java",
    "status": "removed",
    "additions": 0,
    "deletions": 54,
    "changes": 54,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoComparisonGraph.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoComparisonGraph.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoComparisonGraph.java?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,54 +0,0 @@\n-package de.aaaaaaah.velcom.backend.data.repocomparison;\n-\n-import static java.util.Objects.requireNonNull;\n-\n-import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.DimensionInfo;\n-import java.time.Instant;\n-import java.util.List;\n-import java.util.Optional;\n-import javax.annotation.Nullable;\n-\n-/**\n- * Data for a graph that compares multiple repos in a single dimension.\n- */\n-public class RepoComparisonGraph {\n-\n-\tprivate final DimensionInfo dimensionInfo;\n-\tprivate final List<RepoGraphData> data;\n-\tprivate final Instant startTime;\n-\tprivate final Instant endTime;\n-\n-\tpublic RepoComparisonGraph(DimensionInfo dimensionInfo,\n-\t\tList<RepoGraphData> data, @Nullable Instant startTime, @Nullable Instant endTime) {\n-\t\tthis.dimensionInfo = requireNonNull(dimensionInfo);\n-\t\tthis.data = requireNonNull(data);\n-\t\tthis.startTime = startTime;\n-\t\tthis.endTime = endTime;\n-\t}\n-\n-\tpublic DimensionInfo getDimensionInfo() {\n-\t\treturn dimensionInfo;\n-\t}\n-\n-\tpublic List<RepoGraphData> getData() {\n-\t\treturn data;\n-\t}\n-\n-\tpublic Optional<Instant> getStartTime() {\n-\t\treturn Optional.ofNullable(startTime);\n-\t}\n-\n-\tpublic Optional<Instant> getEndTime() {\n-\t\treturn Optional.ofNullable(endTime);\n-\t}\n-\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn \"RepoComparisonGraph{\" +\n-\t\t\t\"dimensionInfo=\" + dimensionInfo +\n-\t\t\t\", startTime=\" + startTime +\n-\t\t\t\", endTime=\" + endTime +\n-\t\t\t'}';\n-\t}\n-\n-}"
  },
  {
    "sha": "2f46ee549914079322d87344163266bb62eff46d",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoDataResult.java",
    "status": "removed",
    "additions": 0,
    "deletions": 45,
    "changes": 45,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoDataResult.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoDataResult.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoDataResult.java?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,45 +0,0 @@\n-package de.aaaaaaah.velcom.backend.data.repocomparison;\n-\n-import java.time.Instant;\n-import java.util.Objects;\n-\n-/**\n- * Contains the comparison graph data for a single repository, the startTime (which was either set\n- * manually or is the author date of the oldest commit of this repository in this graph), and the\n- * endTime which also was either set or is the author date of the youngest commit of this repository\n- * in this graph.\n- */\n-public class RepoDataResult {\n-\n-\tprivate final RepoGraphData graphData;\n-\tprivate final Instant startTime;\n-\tprivate final Instant endTime;\n-\n-\tpublic RepoDataResult(RepoGraphData graphData, Instant startTime, Instant endTime) {\n-\t\tthis.graphData = Objects.requireNonNull(graphData);\n-\t\tthis.startTime = Objects.requireNonNull(startTime);\n-\t\tthis.endTime = Objects.requireNonNull(endTime);\n-\t}\n-\n-\tpublic RepoGraphData getGraphData() {\n-\t\treturn graphData;\n-\t}\n-\n-\tpublic Instant getStartTime() {\n-\t\treturn startTime;\n-\t}\n-\n-\tpublic Instant getEndTime() {\n-\t\treturn endTime;\n-\t}\n-\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn \"RepoDataResult{\" +\n-\t\t\t\"graphData=\" + graphData +\n-\t\t\t\", startTime=\" + startTime +\n-\t\t\t\", endTime=\" + endTime +\n-\t\t\t'}';\n-\t}\n-\n-}"
  },
  {
    "sha": "4f1c8eab096cf5bbf12d9b2bdb40c0c3245ec1c6",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoGraphData.java",
    "status": "removed",
    "additions": 0,
    "deletions": 40,
    "changes": 40,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoGraphData.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoGraphData.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/RepoGraphData.java?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,40 +0,0 @@\n-package de.aaaaaaah.velcom.backend.data.repocomparison;\n-\n-import static java.util.Objects.requireNonNull;\n-\n-import de.aaaaaaah.velcom.backend.access.repoaccess.entities.RepoId;\n-import java.util.List;\n-\n-/**\n- * Data for a single repo in a {@link de.aaaaaaah.velcom.backend.data.repocomparison.RepoComparisonGraph}.\n- */\n-public class RepoGraphData {\n-\n-\tprivate final RepoId repoId;\n-\tprivate final List<GraphEntry> entries;\n-\n-\tpublic RepoGraphData(RepoId repoId, List<GraphEntry> entries) {\n-\t\tthis.repoId = requireNonNull(repoId);\n-\t\tthis.entries = requireNonNull(entries);\n-\t}\n-\n-\tpublic RepoId getRepoId() {\n-\t\treturn repoId;\n-\t}\n-\n-\t/**\n-\t * @return a list containing all entries for this repository sorted by the author date of the\n-\t * \tcommits.\n-\t */\n-\tpublic List<GraphEntry> getEntries() {\n-\t\treturn entries;\n-\t}\n-\n-\t@Override\n-\tpublic String toString() {\n-\t\treturn \"RepoGraphData{\" +\n-\t\t\t\"repoId=\" + repoId +\n-\t\t\t'}';\n-\t}\n-\n-}"
  },
  {
    "sha": "e653f9e02e8169589e44f4a21dcc19e49122a0a3",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/TimesliceComparison.java",
    "status": "removed",
    "additions": 0,
    "deletions": 269,
    "changes": 269,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/TimesliceComparison.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/TimesliceComparison.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/TimesliceComparison.java?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,269 +0,0 @@\n-package de.aaaaaaah.velcom.backend.data.repocomparison;\n-\n-import static java.util.stream.Collectors.toList;\n-import static java.util.stream.Collectors.toMap;\n-\n-import de.aaaaaaah.velcom.backend.access.benchmarkaccess.BenchmarkReadAccess;\n-import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.Measurement;\n-import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.MeasurementValues;\n-import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.Run;\n-import de.aaaaaaah.velcom.backend.access.caches.LatestRunCache;\n-import de.aaaaaaah.velcom.backend.access.caches.RunCache;\n-import de.aaaaaaah.velcom.backend.access.committaccess.CommitReadAccess;\n-import de.aaaaaaah.velcom.backend.access.committaccess.entities.Commit;\n-import de.aaaaaaah.velcom.backend.access.committaccess.entities.CommitHash;\n-import de.aaaaaaah.velcom.backend.access.dimensionaccess.DimensionReadAccess;\n-import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.Dimension;\n-import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.DimensionInfo;\n-import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.Interpretation;\n-import de.aaaaaaah.velcom.backend.access.repoaccess.entities.BranchName;\n-import de.aaaaaaah.velcom.backend.access.repoaccess.entities.RepoId;\n-import de.aaaaaaah.velcom.backend.data.repocomparison.grouping.CommitGrouper;\n-import de.aaaaaaah.velcom.backend.data.repocomparison.grouping.GroupByDay;\n-import de.aaaaaaah.velcom.backend.data.repocomparison.grouping.GroupByHour;\n-import de.aaaaaaah.velcom.backend.data.repocomparison.grouping.GroupByWeek;\n-import io.micrometer.core.annotation.Timed;\n-import java.time.Instant;\n-import java.time.ZoneOffset;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Objects;\n-import java.util.Optional;\n-import java.util.Set;\n-import java.util.stream.Collectors;\n-import javax.annotation.Nullable;\n-\n-/**\n- * A timeslice comparison compares the provided repositories with their respective commits in the\n- * given time frame by splitting that time frame into smaller time slices and considering only the\n- * best commit per repository for each time slice. This way the graph will be a lot smoother,\n- * removing small one-off performance drops and peaks, which lends itself better for comparisons.\n- */\n-public class TimesliceComparison implements RepoComparison {\n-\n-\t// Difference of start and end time (in seconds) below which the hourly grouper should be used.\n-\tpublic static final long HOURLY_THRESHOLD = 60 * 60 * 24 * 20; // 20 days\n-\t// Difference of start and end time (in seconds) below which the daily grouper should be used.3\n-\tpublic static final long DAILY_THRESHOLD = 60 * 60 * 24 * 7 * 20; // 20 weeks\n-\t// If the start and end time difference is greater than this, the weekly grouper is used.\n-\n-\tprivate static final CommitGrouper<Long> HOURLY_GROUPER = new GroupByHour();\n-\tprivate static final CommitGrouper<Long> DAILY_GROUPER = new GroupByDay();\n-\tprivate static final CommitGrouper<Long> WEEKLY_GROUPER = new GroupByWeek();\n-\n-\tprivate final BenchmarkReadAccess benchmarkAccess;\n-\tprivate final CommitReadAccess commitAccess;\n-\tprivate final DimensionReadAccess dimensionAccess;\n-\tprivate final RunCache runCache;\n-\tprivate final LatestRunCache latestRunCache;\n-\n-\t/**\n-\t * Constructs a new time slice comparison.\n-\t *\n-\t * @param benchmarkAccess the benchmark access used to collect benchmark data\n-\t * @param commitAccess the commit access used to collect commit data\n-\t * @param dimensionAccess the dimension access\n-\t * @param runCache the run cache\n-\t * @param latestRunCache the latest run cache\n-\t */\n-\tpublic TimesliceComparison(BenchmarkReadAccess benchmarkAccess, CommitReadAccess commitAccess,\n-\t\tDimensionReadAccess dimensionAccess, RunCache runCache, LatestRunCache latestRunCache) {\n-\n-\t\tthis.benchmarkAccess = benchmarkAccess;\n-\t\tthis.commitAccess = commitAccess;\n-\t\tthis.dimensionAccess = dimensionAccess;\n-\t\tthis.runCache = runCache;\n-\t\tthis.latestRunCache = latestRunCache;\n-\t}\n-\n-\t@Override\n-\t@Timed(histogram = true)\n-\tpublic RepoComparisonGraph generateGraph(Dimension dimension,\n-\t\tMap<RepoId, Set<BranchName>> repoBranches, @Nullable Instant startTime,\n-\t\t@Nullable Instant endTime) {\n-\n-\t\tfinal DimensionInfo dimensionInfo = dimensionAccess.getDimensionInfo(dimension);\n-\n-\t\tList<RepoGraphData> dataList = new ArrayList<>();\n-\t\tInstant actualStartTime = startTime;\n-\t\tInstant actualEndTime = endTime;\n-\n-\t\tfor (RepoId repoId : repoBranches.keySet()) {\n-\t\t\tSet<BranchName> branchNames = repoBranches.get(repoId);\n-\n-\t\t\tRepoDataResult result = collectData(repoId, dimensionInfo, branchNames, startTime, endTime)\n-\t\t\t\t.orElse(null);\n-\n-\t\t\tif (result != null) {\n-\t\t\t\tdataList.add(result.getGraphData());\n-\n-\t\t\t\tif (actualStartTime == null || result.getStartTime().isBefore(actualStartTime)) {\n-\t\t\t\t\tactualStartTime = result.getStartTime();\n-\t\t\t\t}\n-\n-\t\t\t\tif (actualEndTime == null || result.getEndTime().isAfter(actualEndTime)) {\n-\t\t\t\t\tactualEndTime = result.getEndTime();\n-\t\t\t\t}\n-\n-\t\t\t}\n-\t\t}\n-\n-\t\treturn new RepoComparisonGraph(dimensionInfo, dataList, actualStartTime, actualEndTime);\n-\t}\n-\n-\tprivate Optional<RepoDataResult> collectData(RepoId repoId, DimensionInfo dimensionInfo,\n-\t\tSet<BranchName> branchNames, @Nullable Instant startTime, @Nullable Instant endTime) {\n-\n-\t\t// 1.) Get commits\n-\t\tMap<CommitHash, Commit> commitMap = commitAccess\n-\t\t\t.getCommitsBetween(repoId, branchNames, startTime, endTime)\n-\t\t\t.stream()\n-\t\t\t.collect(toMap(Commit::getHash, commit -> commit));\n-\n-\t\t// 2.) Get relevant runs & values\n-\t\tMap<CommitHash, Run> latestRuns = latestRunCache\n-\t\t\t.getLatestRuns(benchmarkAccess, runCache, repoId, commitMap.keySet());\n-\n-\t\tif (latestRuns.isEmpty()) {\n-\t\t\treturn Optional.empty(); // No graph data available\n-\t\t}\n-\n-\t\t// 3.) Filter out unsuccessful measurements\n-\t\tMap<CommitHash, Measurement> measurementMap = new HashMap<>();\n-\n-\t\tlatestRuns.forEach((hash, run) -> findMeasurement(dimensionInfo.getDimension(), run)\n-\t\t\t.filter(m -> m.getContent().isRight())\n-\t\t\t.ifPresent(values -> measurementMap.put(hash, values)));\n-\n-\t\tif (measurementMap.isEmpty()) {\n-\t\t\treturn Optional.empty(); // No graph data available\n-\t\t}\n-\n-\t\t// 4.) Determine additional information\n-\n-\t\tInstant oldestAuthorDate = null;\n-\t\tInstant youngestAuthorDate = null;\n-\n-\t\tfor (CommitHash commitHash : measurementMap.keySet()) {\n-\t\t\tCommit commit = commitMap.get(commitHash);\n-\t\t\tObjects.requireNonNull(commit, \"commit not found: \" + commitHash);\n-\n-\t\t\tInstant authorDate = commit.getAuthorDate();\n-\n-\t\t\tif (oldestAuthorDate == null || authorDate.isBefore(oldestAuthorDate)) {\n-\t\t\t\toldestAuthorDate = authorDate;\n-\t\t\t}\n-\n-\t\t\tif (youngestAuthorDate == null || authorDate.isAfter(youngestAuthorDate)) {\n-\t\t\t\tyoungestAuthorDate = authorDate;\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (startTime == null) {\n-\t\t\tstartTime = oldestAuthorDate;\n-\t\t}\n-\t\tif (endTime == null) {\n-\t\t\tendTime = youngestAuthorDate;\n-\t\t}\n-\n-\t\t// 5.) Build initial graph data (convert pairs to GraphEntry instances)\n-\t\tList<GraphEntry> entries = new ArrayList<>();\n-\n-\t\tmeasurementMap.forEach((hash, measurement) -> {\n-\t\t\tCommit commit = commitMap.get(hash);\n-\t\t\tObjects.requireNonNull(commit, \"commit not found: \" + hash);\n-\n-\t\t\tMeasurementValues values = measurement.getContent().getRight().orElseThrow();\n-\t\t\tentries.add(new GraphEntry(commit, values.getAverageValue()));\n-\t\t});\n-\n-\t\t// 6.) Group commits into time slices\n-\t\tfinal Map<Long, List<GraphEntry>> groupMap = groupEntries(\n-\t\t\tstartTime, endTime, entries, commitMap\n-\t\t);\n-\n-\t\t// 7.) Find best entry for each time slice\n-\t\tMap<Long, GraphEntry> bestEntries = new HashMap<>();\n-\t\tInterpretation interp = dimensionInfo.getInterpretation();\n-\n-\t\tgroupMap.forEach((groupingValue, groupedEntries) -> findBestEntry(groupedEntries, interp)\n-\t\t\t.ifPresent(bestEntry -> bestEntries.put(groupingValue, bestEntry))\n-\t\t);\n-\n-\t\tfinal List<GraphEntry> graphEntries = bestEntries.keySet().stream()\n-\t\t\t.sorted()\n-\t\t\t.map(bestEntries::get)\n-\t\t\t.collect(toList());\n-\n-\t\treturn Optional.of(new RepoDataResult(\n-\t\t\tnew RepoGraphData(repoId, graphEntries),\n-\t\t\tstartTime,\n-\t\t\tendTime\n-\t\t));\n-\t}\n-\n-\tprivate Map<Long, List<GraphEntry>> groupEntries(Instant startTime,\n-\t\tInstant stopTime, Collection<GraphEntry> entries, Map<CommitHash, Commit> commitMap) {\n-\n-\t\tfinal CommitGrouper<Long> grouper = determineGrouper(startTime, stopTime);\n-\n-\t\treturn entries.stream()\n-\t\t\t.collect(Collectors.groupingBy(entry -> grouper.getGroup(\n-\t\t\t\tentry.getAuthorDate().atZone(ZoneOffset.UTC)\n-\t\t\t)));\n-\t}\n-\n-\tprivate Optional<GraphEntry> findBestEntry(Collection<GraphEntry> entries,\n-\t\tInterpretation interpretation) {\n-\n-\t\t// This assumes that the measurements all have the same interpretation as the most recently\n-\t\t// benchmarked commit\n-\t\treturn entries.stream().reduce((a, b) -> {\n-\t\t\tif (interpretation.equals(Interpretation.MORE_IS_BETTER)\n-\t\t\t\t== (a.getValue() >= b.getValue())) {\n-\t\t\t\treturn a;\n-\t\t\t} else {\n-\t\t\t\treturn b;\n-\t\t\t}\n-\t\t});\n-\t}\n-\n-\tprivate CommitGrouper<Long> determineGrouper(@Nullable Instant startTime,\n-\t\t@Nullable Instant stopTime) {\n-\n-\t\tCommitGrouper<Long> grouper;\n-\t\tif (startTime != null && stopTime != null) {\n-\t\t\tlong difference = stopTime.getEpochSecond() - startTime.getEpochSecond();\n-\t\t\tif (difference < HOURLY_THRESHOLD) {\n-\t\t\t\tgrouper = HOURLY_GROUPER;\n-\t\t\t} else if (difference < DAILY_THRESHOLD) {\n-\t\t\t\tgrouper = DAILY_GROUPER;\n-\t\t\t} else {\n-\t\t\t\tgrouper = WEEKLY_GROUPER;\n-\t\t\t}\n-\t\t} else {\n-\t\t\tgrouper = WEEKLY_GROUPER; // TODO choose grouper based on returned commits?\n-\t\t}\n-\n-\t\treturn grouper;\n-\t}\n-\n-\tprivate Optional<Measurement> findMeasurement(Dimension name, Run run) {\n-\t\tif (run.getResult().isRight()) {\n-\t\t\tCollection<Measurement> measurements = run.getResult().getRight().get();\n-\n-\t\t\tMeasurement measurement = measurements.stream()\n-\t\t\t\t.filter(m -> m.getDimension().equals(name))\n-\t\t\t\t.findAny()\n-\t\t\t\t.orElse(null);\n-\n-\t\t\treturn Optional.ofNullable(measurement);\n-\t\t}\n-\n-\t\treturn Optional.empty();\n-\t}\n-\n-}"
  },
  {
    "sha": "845422b35397b3bbb8f848a511a22a69a9213fad",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/CommitGrouper.java",
    "status": "removed",
    "additions": 0,
    "deletions": 21,
    "changes": 21,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/CommitGrouper.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/CommitGrouper.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/CommitGrouper.java?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,21 +0,0 @@\n-package de.aaaaaaah.velcom.backend.data.repocomparison.grouping;\n-\n-import java.time.ZonedDateTime;\n-\n-/**\n- * Group timestamps using arbitrary grouping logic. Calculates an arbitrary group name. Timestamps\n- * where the same group name was returned belong in the same group.\n- *\n- * @param <T> type of the group name\n- */\n-public interface CommitGrouper<T> {\n-\n-\t/**\n-\t * Calculate the group name for a timestamp.\n-\t *\n-\t * @param time the timestamp whose group name to calculate\n-\t * @return the timestamp's group name\n-\t */\n-\tT getGroup(ZonedDateTime time);\n-\n-}"
  },
  {
    "sha": "a4d8a4fa3509794e09200f58a9e5c24a4692c750",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByDay.java",
    "status": "removed",
    "additions": 0,
    "deletions": 16,
    "changes": 16,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByDay.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByDay.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByDay.java?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,16 +0,0 @@\n-package de.aaaaaaah.velcom.backend.data.repocomparison.grouping;\n-\n-import java.time.ZonedDateTime;\n-import java.time.temporal.JulianFields;\n-\n-/**\n- * Group timestamps by their day. A new day begins at midnight.\n- */\n-public class GroupByDay implements CommitGrouper<Long> {\n-\n-\t@Override\n-\tpublic Long getGroup(ZonedDateTime time) {\n-\t\treturn time.getLong(JulianFields.JULIAN_DAY);\n-\t}\n-\n-}"
  },
  {
    "sha": "4f3ce03f86211f20ff187861c84c33053a9321ef",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByHour.java",
    "status": "removed",
    "additions": 0,
    "deletions": 21,
    "changes": 21,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByHour.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByHour.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByHour.java?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,21 +0,0 @@\n-package de.aaaaaaah.velcom.backend.data.repocomparison.grouping;\n-\n-import java.time.ZonedDateTime;\n-import java.time.temporal.JulianFields;\n-\n-/**\n- * Group timestamps by their hour.\n- */\n-public class GroupByHour implements CommitGrouper<Long> {\n-\n-\t/**\n-\t * An upper bound on the amount of hours per day.\n-\t */\n-\tprivate static final long HOURS_PER_DAY = 25;\n-\n-\t@Override\n-\tpublic Long getGroup(ZonedDateTime time) {\n-\t\treturn time.getLong(JulianFields.JULIAN_DAY) * HOURS_PER_DAY + time.getHour();\n-\t}\n-\n-}"
  },
  {
    "sha": "38a010ab119b380d39424996036fad3a28bdcf3e",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByWeek.java",
    "status": "removed",
    "additions": 0,
    "deletions": 17,
    "changes": 17,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByWeek.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByWeek.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/data/repocomparison/grouping/GroupByWeek.java?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,17 +0,0 @@\n-package de.aaaaaaah.velcom.backend.data.repocomparison.grouping;\n-\n-import java.time.ZonedDateTime;\n-import java.time.temporal.JulianFields;\n-\n-/**\n- * Group timestamps into slices which are one week long. No guarantee is given which day of the week\n- * the slices start and end on.\n- */\n-public class GroupByWeek implements CommitGrouper<Long> {\n-\n-\t@Override\n-\tpublic Long getGroup(ZonedDateTime time) {\n-\t\treturn time.getLong(JulianFields.JULIAN_DAY) / 7;\n-\t}\n-\n-}"
  },
  {
    "sha": "efa26ffdfc2b4beb5c134bcd7b1de4b066d61b10",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/GraphComparisonEndpoint.java",
    "status": "modified",
    "additions": 122,
    "deletions": 71,
    "changes": 193,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/GraphComparisonEndpoint.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/GraphComparisonEndpoint.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/GraphComparisonEndpoint.java?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -1,21 +1,35 @@\n package de.aaaaaaah.velcom.backend.restapi.endpoints;\n \n import static java.util.stream.Collectors.toList;\n-\n+import static java.util.stream.Collectors.toMap;\n+\n+import de.aaaaaaah.velcom.backend.access.benchmarkaccess.BenchmarkReadAccess;\n+import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.Measurement;\n+import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.MeasurementValues;\n+import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.Run;\n+import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.RunId;\n+import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.sources.CommitSource;\n+import de.aaaaaaah.velcom.backend.access.committaccess.CommitReadAccess;\n+import de.aaaaaaah.velcom.backend.access.committaccess.entities.Commit;\n+import de.aaaaaaah.velcom.backend.access.committaccess.entities.CommitHash;\n+import de.aaaaaaah.velcom.backend.access.committaccess.entities.FullCommit;\n import de.aaaaaaah.velcom.backend.access.dimensionaccess.DimensionReadAccess;\n import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.Dimension;\n+import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.DimensionInfo;\n import de.aaaaaaah.velcom.backend.access.repoaccess.entities.BranchName;\n import de.aaaaaaah.velcom.backend.access.repoaccess.entities.RepoId;\n-import de.aaaaaaah.velcom.backend.data.repocomparison.RepoComparison;\n-import de.aaaaaaah.velcom.backend.data.repocomparison.RepoComparisonGraph;\n import de.aaaaaaah.velcom.backend.restapi.endpoints.utils.EndpointUtils;\n import de.aaaaaaah.velcom.backend.restapi.exception.InvalidQueryParamsException;\n import de.aaaaaaah.velcom.backend.restapi.jsonobjects.JsonDimension;\n import de.aaaaaaah.velcom.shared.util.Pair;\n import io.micrometer.core.annotation.Timed;\n import java.time.Instant;\n+import java.util.Collection;\n+import java.util.Comparator;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.UUID;\n import javax.annotation.Nullable;\n@@ -33,12 +47,21 @@\n @Produces(MediaType.APPLICATION_JSON)\n public class GraphComparisonEndpoint {\n \n+\tprivate static final String NO_RUN_FOUND = \"N\";\n+\tprivate static final String NO_MEASUREMENT_FOUND = \"O\";\n+\tprivate static final String RUN_FAILED = \"R\";\n+\tprivate static final String MEASUREMENT_FAILED = \"M\";\n+\n+\tprivate final BenchmarkReadAccess benchmarkAccess;\n+\tprivate final CommitReadAccess commitAccess;\n \tprivate final DimensionReadAccess dimensionAccess;\n-\tprivate final RepoComparison comparison;\n \n-\tpublic GraphComparisonEndpoint(DimensionReadAccess dimensionAccess, RepoComparison comparison) {\n+\tpublic GraphComparisonEndpoint(BenchmarkReadAccess benchmarkAccess, CommitReadAccess commitAccess,\n+\t\tDimensionReadAccess dimensionAccess) {\n+\n+\t\tthis.benchmarkAccess = benchmarkAccess;\n+\t\tthis.commitAccess = commitAccess;\n \t\tthis.dimensionAccess = dimensionAccess;\n-\t\tthis.comparison = comparison;\n \t}\n \n \t@GET\n@@ -68,99 +91,127 @@ public GetReply get(\n \t\t\tthrow new InvalidQueryParamsException(\"start time must be earlier than end time\");\n \t\t}\n \n-\t\tfinal Map<RepoId, Set<BranchName>> repos = EndpointUtils.parseRepos(reposStr);\n-\t\tRepoComparisonGraph result = comparison.generateGraph(dimension, repos, startTime, endTime);\n-\t\tJsonDimension jsonDimension = JsonDimension.fromDimensionInfo(result.getDimensionInfo());\n-\n-\t\tfinal List<JsonGraphRepo> repoResults = result.getData().stream()\n-\t\t\t.map(data -> new JsonGraphRepo(\n-\t\t\t\tdata.getRepoId().getId(),\n-\t\t\t\tdata.getEntries().stream().map(graphEntry -> new JsonGraphCommit(\n-\t\t\t\t\tgraphEntry.getHash().getHash(),\n-\t\t\t\t\tgraphEntry.getAuthor(),\n-\t\t\t\t\tgraphEntry.getAuthorDate().getEpochSecond(),\n-\t\t\t\t\tgraphEntry.getSummary(),\n-\t\t\t\t\tgraphEntry.getValue()\n-\t\t\t\t)).collect(toList())\n-\t\t\t)).collect(toList());\n-\n-\t\treturn new GetReply(jsonDimension, repoResults);\n+\t\t// Retrieve the graph information.\n+\t\t//\n+\t\t// You are standing in front of a dense forest. The forest is full of streams. If you venture\n+\t\t// any further, you might slip. Do you want to continue? [Y/n]\n+\t\tList<JsonGraphRepo> repos = EndpointUtils.parseRepos(reposStr)\n+\t\t\t.entrySet()\n+\t\t\t.stream()\n+\t\t\t.map(entry -> {\n+\t\t\t\t// Iterating over all repos (and associated branches) from the request...\n+\t\t\t\tRepoId repoId = entry.getKey();\n+\t\t\t\tSet<BranchName> branches = entry.getValue();\n+\n+\t\t\t\t// Find the commits that will later be displayed in the graph\n+\t\t\t\tList<Commit> commits = commitAccess.getCommitsBetween(repoId, branches, startTime, endTime);\n+\t\t\t\tList<FullCommit> fullCommits = commitAccess.promoteCommits(commits);\n+\t\t\t\tMap<CommitHash, FullCommit> fullCommitsByHash = fullCommits.stream()\n+\t\t\t\t\t.collect(toMap(Commit::getHash, it -> it));\n+\n+\t\t\t\tfullCommits = EndpointUtils.topologicalSort(fullCommits, fullCommitsByHash);\n+\t\t\t\tfullCommits.sort(Comparator.comparing(Commit::getCommitterDate));\n+\n+\t\t\t\t// Find the latest run belonging to each commit\n+\t\t\t\tSet<RunId> latestRunIds = new HashSet<>(\n+\t\t\t\t\tbenchmarkAccess.getLatestRunIds(repoId, fullCommitsByHash.keySet()).values());\n+\t\t\t\tMap<CommitHash, Run> runs = benchmarkAccess.getRuns(latestRunIds).stream()\n+\t\t\t\t\t.collect(toMap(\n+\t\t\t\t\t\trun -> run.getSource().getLeft().map(CommitSource::getHash).orElse(null),\n+\t\t\t\t\t\trun -> run\n+\t\t\t\t\t));\n+\n+\t\t\t\t// Collect the commit and run information as JsonGraphCommits\n+\t\t\t\tList<JsonGraphCommit> graphCommits = fullCommits.stream()\n+\t\t\t\t\t.map(commit -> new JsonGraphCommit(\n+\t\t\t\t\t\tcommit.getHashAsString(),\n+\t\t\t\t\t\tcommit.getParentHashes().stream().map(CommitHash::getHash).collect(toList()),\n+\t\t\t\t\t\tcommit.getAuthor(),\n+\t\t\t\t\t\tcommit.getCommitterDate().getEpochSecond(),\n+\t\t\t\t\t\tcommit.getSummary(),\n+\t\t\t\t\t\tgetValueOfCommit(commit, dimension, runs)\n+\t\t\t\t\t))\n+\t\t\t\t\t.collect(toList());\n+\n+\t\t\t\t// We've now collected all information required for this particular repository\n+\t\t\t\treturn new JsonGraphRepo(repoId.getId(), graphCommits);\n+\t\t\t})\n+\t\t\t.collect(toList());\n+\n+\t\tDimensionInfo dimensionInfo = dimensionAccess.getDimensionInfo(dimension);\n+\t\tJsonDimension jsonDimension = JsonDimension.fromDimensionInfo(dimensionInfo);\n+\n+\t\treturn new GetReply(jsonDimension, repos);\n \t}\n \n-\tprivate static class GetReply {\n+\tprivate static Object getValueOfCommit(Commit commit, Dimension dimension,\n+\t\tMap<CommitHash, Run> runs) {\n \n-\t\tprivate final JsonDimension dimension;\n-\t\tprivate final List<JsonGraphRepo> repos;\n+\t\tRun run = runs.get(commit.getHash());\n+\t\tif (run == null) {\n+\t\t\treturn NO_RUN_FOUND;\n+\t\t}\n \n-\t\tpublic GetReply(JsonDimension dimension, List<JsonGraphRepo> repos) {\n-\t\t\tthis.dimension = dimension;\n-\t\t\tthis.repos = repos;\n+\t\tOptional<Collection<Measurement>> result = run.getResult().getRight();\n+\t\tif (result.isEmpty()) {\n+\t\t\treturn RUN_FAILED;\n \t\t}\n \n-\t\tpublic JsonDimension getDimension() {\n-\t\t\treturn dimension;\n+\t\tOptional<Measurement> measurement = result.get().stream()\n+\t\t\t.filter(it -> it.getDimension().equals(dimension))\n+\t\t\t.findFirst();\n+\t\tif (measurement.isEmpty()) {\n+\t\t\treturn NO_MEASUREMENT_FOUND;\n \t\t}\n \n-\t\tpublic List<JsonGraphRepo> getRepos() {\n-\t\t\treturn repos;\n+\t\tOptional<MeasurementValues> values = measurement.get().getContent().getRight();\n+\t\tif (values.isEmpty()) {\n+\t\t\treturn MEASUREMENT_FAILED;\n+\t\t}\n+\n+\t\treturn values.get().getAverageValue();\n+\t}\n+\n+\tprivate static class GetReply {\n+\n+\t\tpublic final JsonDimension dimension;\n+\t\tpublic final List<JsonGraphRepo> repos;\n+\n+\t\tpublic GetReply(JsonDimension dimension, List<JsonGraphRepo> repos) {\n+\t\t\tthis.dimension = dimension;\n+\t\t\tthis.repos = repos;\n \t\t}\n \t}\n \n \tprivate static class JsonGraphRepo {\n \n-\t\tprivate final UUID repoId;\n-\t\tprivate final List<JsonGraphCommit> commits;\n+\t\tpublic final UUID repoId;\n+\t\tpublic final List<JsonGraphCommit> commits;\n \n \t\tpublic JsonGraphRepo(UUID repoId, List<JsonGraphCommit> commits) {\n \t\t\tthis.repoId = repoId;\n \t\t\tthis.commits = commits;\n \t\t}\n-\n-\t\tpublic UUID getRepoId() {\n-\t\t\treturn repoId;\n-\t\t}\n-\n-\t\tpublic List<JsonGraphCommit> getCommits() {\n-\t\t\treturn commits;\n-\t\t}\n \t}\n \n \tprivate static class JsonGraphCommit {\n \n-\t\tprivate final String hash;\n-\t\tprivate final String author;\n-\t\tprivate final long authorDate;\n-\t\tprivate final String summary;\n-\t\tprivate final double value;\n+\t\tpublic final String hash;\n+\t\tpublic final List<String> parents;\n+\t\tpublic final String author;\n+\t\tpublic final long committerDate;\n+\t\tpublic final String summary;\n+\t\tpublic final Object value;\n \n-\t\tpublic JsonGraphCommit(String hash, String author, long authorDate, String summary,\n-\t\t\tdouble value) {\n+\t\tpublic JsonGraphCommit(String hash, List<String> parents, String author, long committerDate,\n+\t\t\tString summary, Object value) {\n \n \t\t\tthis.hash = hash;\n+\t\t\tthis.parents = parents;\n \t\t\tthis.author = author;\n-\t\t\tthis.authorDate = authorDate;\n+\t\t\tthis.committerDate = committerDate;\n \t\t\tthis.summary = summary;\n \t\t\tthis.value = value;\n \t\t}\n-\n-\t\tpublic String getHash() {\n-\t\t\treturn hash;\n-\t\t}\n-\n-\t\tpublic String getAuthor() {\n-\t\t\treturn author;\n-\t\t}\n-\n-\t\tpublic long getAuthorDate() {\n-\t\t\treturn authorDate;\n-\t\t}\n-\n-\t\tpublic String getSummary() {\n-\t\t\treturn summary;\n-\t\t}\n-\n-\t\tpublic double getValue() {\n-\t\t\treturn value;\n-\t\t}\n \t}\n }"
  },
  {
    "sha": "c8f7838c96bf9043d63813cc7e2eeaafe5438c40",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/GraphDetailEndpoint.java",
    "status": "modified",
    "additions": 9,
    "deletions": 87,
    "changes": 96,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/GraphDetailEndpoint.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/GraphDetailEndpoint.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/GraphDetailEndpoint.java?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -1,6 +1,5 @@\n package de.aaaaaaah.velcom.backend.restapi.endpoints;\n \n-import static java.util.stream.Collectors.toCollection;\n import static java.util.stream.Collectors.toMap;\n \n import de.aaaaaaah.velcom.backend.access.benchmarkaccess.BenchmarkReadAccess;\n@@ -25,16 +24,11 @@\n import de.aaaaaaah.velcom.shared.util.Pair;\n import io.micrometer.core.annotation.Timed;\n import java.time.Instant;\n-import java.util.ArrayDeque;\n-import java.util.ArrayList;\n import java.util.Collection;\n-import java.util.Collections;\n import java.util.Comparator;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n-import java.util.Queue;\n import java.util.Set;\n import java.util.UUID;\n import java.util.stream.Collectors;\n@@ -108,29 +102,24 @@ public GetReply get(\n \t\t\tthrow new InvalidQueryParamsException(\"start time must be earlier than end time\");\n \t\t}\n \n-\t\t// Figure out which commits we'll need to show\n-\t\tList<FullCommit> commits = new ArrayList<>(commitAccess.promoteCommits(\n-\t\t\tcommitAccess.getTrackedCommitsBetween(repoId, startTime, endTime)\n-\t\t));\n+\t\t// Find the commits that will later be displayed in the graph\n+\t\tList<Commit> commits = commitAccess.getTrackedCommitsBetween(repoId, startTime, endTime);\n+\t\tList<FullCommit> fullCommits = commitAccess.promoteCommits(commits);\n+\t\tMap<CommitHash, FullCommit> fullCommitsByHash = fullCommits.stream()\n+\t\t\t.collect(toMap(Commit::getHash, it -> it));\n \n-\t\tMap<CommitHash, FullCommit> hashes = commits.stream()\n-\t\t\t.collect(toMap(\n-\t\t\t\tCommit::getHash,\n-\t\t\t\tit -> it\n-\t\t\t));\n-\n-\t\tcommits = topologicalSort(commits, hashes);\n-\t\tcommits.sort(Comparator.comparing(Commit::getCommitterDate));\n+\t\tfullCommits = EndpointUtils.topologicalSort(fullCommits, fullCommitsByHash);\n+\t\tfullCommits.sort(Comparator.comparing(Commit::getCommitterDate));\n \n \t\t// Obtain the relevant runs\n \t\tMap<CommitHash, Run> runs = latestRunCache\n-\t\t\t.getLatestRuns(benchmarkAccess, runCache, repoId, hashes.keySet());\n+\t\t\t.getLatestRuns(benchmarkAccess, runCache, repoId, fullCommitsByHash.keySet());\n \n \t\t// Finally, put everything together.\n \t\tList<JsonDimension> jsonDimensions = existingDimensions.stream()\n \t\t\t.map(JsonDimension::fromDimensionInfo)\n \t\t\t.collect(Collectors.toList());\n-\t\tList<JsonGraphCommit> jsonGraphCommits = commits.stream()\n+\t\tList<JsonGraphCommit> jsonGraphCommits = fullCommits.stream()\n \t\t\t.map(commit -> new JsonGraphCommit(\n \t\t\t\tcommit.getHash().getHash(),\n \t\t\t\tcommit.getParentHashes().stream().map(CommitHash::getHash).collect(Collectors.toList()),\n@@ -144,73 +133,6 @@ public GetReply get(\n \t\treturn new GetReply(jsonDimensions, jsonGraphCommits);\n \t}\n \n-\t/**\n-\t * @param commits the commits to sort\n-\t * @param hashes a map from hash to commit <em>for <strong>exactly</strong> the commits in the\n-\t * \tcommits list</em>\n-\t * @return a mutable list containing a topological ordering of the input commits\n-\t */\n-\tprivate List<FullCommit> topologicalSort(List<FullCommit> commits,\n-\t\tMap<CommitHash, FullCommit> hashes) {\n-\n-\t\t// Based on Khan's Algorithm\n-\t\t// https://en.wikipedia.org/wiki/Topological_sorting#Kahn's_algorithm\n-\n-\t\tList<FullCommit> topologicallySorted = new ArrayList<>();\n-\n-\t\tQueue<FullCommit> leaves = commits.stream()\n-\t\t\t// Only consider commits in our commits list. Throw away all children *not* in the list, as\n-\t\t\t// we are focusing on a small part of the graph and trying to sort only this part\n-\t\t\t// topologically.\n-\t\t\t// If we do not throw them away, we will find children outside the range, leading to too few\n-\t\t\t// found leaf nodes\n-\t\t\t.filter(it -> it.getChildHashes().stream().noneMatch(hashes::containsKey))\n-\t\t\t.collect(toCollection(ArrayDeque::new));\n-\n-\t\t// We can not modify the actual children or remove edges. This is one of the pre-requisites for\n-\t\t// Khan's Algorithm though, as it deletes all explored edges starting with the leaves.\n-\t\t// Furthermore, not all children should be considered - only those that we know are in the\n-\t\t// commits list. All other children are outside the time range and irrelevant, as they should\n-\t\t// not appear in the graph.\n-\t\t// If we do not exclude those here, we will have too many children and won't always end up with\n-\t\t// *zero* leftover children, causing the Commit to not be recognized as a new leaf.\n-\t\tMap<FullCommit, Set<CommitHash>> parentChildMap = commits.stream()\n-\t\t\t.collect(toMap(\n-\t\t\t\tit -> it,\n-\t\t\t\tit -> it.getChildHashes().stream()\n-\t\t\t\t\t.filter(hashes::containsKey)\n-\t\t\t\t\t.collect(toCollection(HashSet::new))\n-\t\t\t));\n-\n-\t\twhile (!leaves.isEmpty()) {\n-\t\t\tFullCommit commit = leaves.poll();\n-\t\t\ttopologicallySorted.add(commit);\n-\n-\t\t\tfor (CommitHash parentHash : commit.getParentHashes()) {\n-\t\t\t\tFullCommit parentCommit = hashes.get(parentHash);\n-\n-\t\t\t\t// outside of our time bound (i.e. commits i.e. hashes)\n-\t\t\t\tif (parentCommit == null) {\n-\t\t\t\t\tcontinue;\n-\t\t\t\t}\n-\n-\t\t\t\tSet<CommitHash> existingchildren = parentChildMap.get(parentCommit);\n-\t\t\t\texistingchildren.remove(commit.getHash());\n-\n-\t\t\t\t// This commit has no other children in our time window -> it is now a leaf!\n-\t\t\t\tif (existingchildren.isEmpty()) {\n-\t\t\t\t\tleaves.add(parentCommit);\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n-\n-\t\t// We appended to the end, so we now need to reverse it. Our leaves are the first entries\n-\t\t// currently, but they should be the last.\n-\t\tCollections.reverse(topologicallySorted);\n-\n-\t\treturn topologicallySorted;\n-\t}\n-\n \tprivate static List<Object> extractValuesFromCommit(List<DimensionInfo> dimensions,\n \t\tMap<CommitHash, Run> runs, Commit commit) {\n "
  },
  {
    "sha": "1a93d09b2b98c69d82f5632c63c726a2e9bedcdc",
    "filename": "backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/utils/EndpointUtils.java",
    "status": "modified",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/utils/EndpointUtils.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/utils/EndpointUtils.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/main/java/de/aaaaaaah/velcom/backend/restapi/endpoints/utils/EndpointUtils.java?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -1,5 +1,8 @@\n package de.aaaaaaah.velcom.backend.restapi.endpoints.utils;\n \n+import static java.util.stream.Collectors.toCollection;\n+import static java.util.stream.Collectors.toMap;\n+\n import de.aaaaaaah.velcom.backend.access.benchmarkaccess.BenchmarkReadAccess;\n import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.Run;\n import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.RunId;\n@@ -8,6 +11,7 @@\n import de.aaaaaaah.velcom.backend.access.caches.RunCache;\n import de.aaaaaaah.velcom.backend.access.committaccess.CommitReadAccess;\n import de.aaaaaaah.velcom.backend.access.committaccess.entities.CommitHash;\n+import de.aaaaaaah.velcom.backend.access.committaccess.entities.FullCommit;\n import de.aaaaaaah.velcom.backend.access.dimensionaccess.DimensionReadAccess;\n import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.Dimension;\n import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.DimensionInfo;\n@@ -21,9 +25,14 @@\n import de.aaaaaaah.velcom.shared.util.Pair;\n import java.time.Duration;\n import java.time.Instant;\n+import java.util.ArrayDeque;\n+import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Queue;\n import java.util.Set;\n import java.util.UUID;\n import java.util.stream.Collectors;\n@@ -197,4 +206,71 @@ public static JsonRun fromRun(DimensionReadAccess dimensionAccess, CommitReadAcc\n \n \t\treturn new Pair<>(startTime, endTime);\n \t}\n+\n+\t/**\n+\t * @param commits the commits to sort\n+\t * @param hashes a map from hash to commit <em>for <strong>exactly</strong> the commits in the\n+\t * \tcommits list</em>\n+\t * @return a mutable list containing a topological ordering of the input commits\n+\t */\n+\tpublic static List<FullCommit> topologicalSort(List<FullCommit> commits,\n+\t\tMap<CommitHash, FullCommit> hashes) {\n+\n+\t\t// Based on Khan's Algorithm\n+\t\t// https://en.wikipedia.org/wiki/Topological_sorting#Kahn's_algorithm\n+\n+\t\tList<FullCommit> topologicallySorted = new ArrayList<>();\n+\n+\t\tQueue<FullCommit> leaves = commits.stream()\n+\t\t\t// Only consider commits in our commits list. Throw away all children *not* in the list, as\n+\t\t\t// we are focusing on a small part of the graph and trying to sort only this part\n+\t\t\t// topologically.\n+\t\t\t// If we do not throw them away, we will find children outside the range, leading to too few\n+\t\t\t// found leaf nodes\n+\t\t\t.filter(it -> it.getChildHashes().stream().noneMatch(hashes::containsKey))\n+\t\t\t.collect(toCollection(ArrayDeque::new));\n+\n+\t\t// We can not modify the actual children or remove edges. This is one of the pre-requisites for\n+\t\t// Khan's Algorithm though, as it deletes all explored edges starting with the leaves.\n+\t\t// Furthermore, not all children should be considered - only those that we know are in the\n+\t\t// commits list. All other children are outside the time range and irrelevant, as they should\n+\t\t// not appear in the graph.\n+\t\t// If we do not exclude those here, we will have too many children and won't always end up with\n+\t\t// *zero* leftover children, causing the Commit to not be recognized as a new leaf.\n+\t\tMap<FullCommit, Set<CommitHash>> parentChildMap = commits.stream()\n+\t\t\t.collect(toMap(\n+\t\t\t\tit -> it,\n+\t\t\t\tit -> it.getChildHashes().stream()\n+\t\t\t\t\t.filter(hashes::containsKey)\n+\t\t\t\t\t.collect(toCollection(HashSet::new))\n+\t\t\t));\n+\n+\t\twhile (!leaves.isEmpty()) {\n+\t\t\tFullCommit commit = leaves.poll();\n+\t\t\ttopologicallySorted.add(commit);\n+\n+\t\t\tfor (CommitHash parentHash : commit.getParentHashes()) {\n+\t\t\t\tFullCommit parentCommit = hashes.get(parentHash);\n+\n+\t\t\t\t// outside of our time bound (i.e. commits i.e. hashes)\n+\t\t\t\tif (parentCommit == null) {\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\tSet<CommitHash> existingchildren = parentChildMap.get(parentCommit);\n+\t\t\t\texistingchildren.remove(commit.getHash());\n+\n+\t\t\t\t// This commit has no other children in our time window -> it is now a leaf!\n+\t\t\t\tif (existingchildren.isEmpty()) {\n+\t\t\t\t\tleaves.add(parentCommit);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\t// We appended to the end, so we now need to reverse it. Our leaves are the first entries\n+\t\t// currently, but they should be the last.\n+\t\tCollections.reverse(topologicallySorted);\n+\n+\t\treturn topologicallySorted;\n+\t}\n }"
  },
  {
    "sha": "021b80263dd2fd4c35f7fa241ee4512dba796c09",
    "filename": "backend/backend/src/test/java/de/aaaaaaah/velcom/backend/data/repocomparison/TimesliceComparisonTest.java",
    "status": "removed",
    "additions": 0,
    "deletions": 246,
    "changes": 246,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/test/java/de/aaaaaaah/velcom/backend/data/repocomparison/TimesliceComparisonTest.java",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/backend/backend/src/test/java/de/aaaaaaah/velcom/backend/data/repocomparison/TimesliceComparisonTest.java",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/backend/backend/src/test/java/de/aaaaaaah/velcom/backend/data/repocomparison/TimesliceComparisonTest.java?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,246 +0,0 @@\n-package de.aaaaaaah.velcom.backend.data.repocomparison;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.mockito.ArgumentMatchers.any;\n-import static org.mockito.ArgumentMatchers.anySet;\n-import static org.mockito.ArgumentMatchers.eq;\n-import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.when;\n-\n-import de.aaaaaaah.velcom.backend.access.benchmarkaccess.BenchmarkReadAccess;\n-import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.Measurement;\n-import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.MeasurementValues;\n-import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.Run;\n-import de.aaaaaaah.velcom.backend.access.benchmarkaccess.entities.RunId;\n-import de.aaaaaaah.velcom.backend.access.caches.LatestRunCache;\n-import de.aaaaaaah.velcom.backend.access.caches.RunCache;\n-import de.aaaaaaah.velcom.backend.access.committaccess.CommitReadAccess;\n-import de.aaaaaaah.velcom.backend.access.committaccess.entities.Commit;\n-import de.aaaaaaah.velcom.backend.access.committaccess.entities.CommitHash;\n-import de.aaaaaaah.velcom.backend.access.dimensionaccess.DimensionReadAccess;\n-import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.Dimension;\n-import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.DimensionInfo;\n-import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.Interpretation;\n-import de.aaaaaaah.velcom.backend.access.dimensionaccess.entities.Unit;\n-import de.aaaaaaah.velcom.backend.access.repoaccess.entities.BranchName;\n-import de.aaaaaaah.velcom.backend.access.repoaccess.entities.RepoId;\n-import de.aaaaaaah.velcom.shared.util.Either;\n-import java.time.Instant;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-import java.util.UUID;\n-import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Test;\n-\n-class TimesliceComparisonTest {\n-\n-\tprivate BenchmarkReadAccess benchmarkReadAccess;\n-\tprivate CommitReadAccess commitReadAccess;\n-\tprivate DimensionReadAccess dimensionAccess;\n-\tprivate RunCache runCache;\n-\tprivate LatestRunCache latestRunCache;\n-\tprivate RepoComparison comparison;\n-\n-\tprivate Dimension dimension;\n-\tprivate DimensionInfo dimensionInfo;\n-\tprivate RepoId repoId;\n-\tprivate Set<BranchName> startBranches;\n-\tprivate Map<RepoId, Set<BranchName>> repoBranches;\n-\n-\tprivate CommitHash c1Hash;\n-\tprivate CommitHash c2Hash;\n-\tprivate CommitHash c3Hash;\n-\tprivate CommitHash c4Hash;\n-\tprivate Commit c1;\n-\tprivate Commit c2;\n-\tprivate Commit c3;\n-\tprivate Commit c4;\n-\tprivate List<Commit> commitList;\n-\n-\tprivate Measurement m1;\n-\tprivate Measurement m2;\n-\tprivate Measurement m3;\n-\tprivate Measurement m4;\n-\tprivate Run r1;\n-\tprivate Run r2;\n-\tprivate Run r3;\n-\tprivate Run r4;\n-\tprivate Map<CommitHash, Run> runMap;\n-\n-\t@BeforeEach\n-\tvoid setup() {\n-\t\tbenchmarkReadAccess = mock(BenchmarkReadAccess.class);\n-\t\tcommitReadAccess = mock(CommitReadAccess.class);\n-\t\tdimensionAccess = mock(DimensionReadAccess.class);\n-\t\trunCache = mock(RunCache.class);\n-\t\tlatestRunCache = mock(LatestRunCache.class);\n-\t\tcomparison = new TimesliceComparison(benchmarkReadAccess, commitReadAccess, dimensionAccess,\n-\t\t\trunCache, latestRunCache);\n-\n-\t\tc1Hash = new CommitHash(\"hash1\");\n-\t\tc2Hash = new CommitHash(\"hash2\");\n-\t\tc3Hash = new CommitHash(\"hash3\");\n-\t\tc4Hash = new CommitHash(\"hash4\");\n-\t\tc1 = mock(Commit.class);\n-\t\tc2 = mock(Commit.class);\n-\t\tc3 = mock(Commit.class);\n-\t\tc4 = mock(Commit.class);\n-\t\twhen(c1.getHash()).thenReturn(c1Hash);\n-\t\twhen(c2.getHash()).thenReturn(c2Hash);\n-\t\twhen(c3.getHash()).thenReturn(c3Hash);\n-\t\twhen(c4.getHash()).thenReturn(c4Hash);\n-\t\tcommitList = new ArrayList<>();\n-\t\tcommitList.add(c1);\n-\t\tcommitList.add(c2);\n-\t\tcommitList.add(c3);\n-\t\tcommitList.add(c4);\n-\n-\t\tdimension = new Dimension(\"benchmark\", \"metric\");\n-\t\tdimensionInfo = new DimensionInfo(dimension, new Unit(\"testunit\"),\n-\t\t\tInterpretation.MORE_IS_BETTER, true);\n-\t\trepoId = new RepoId(UUID.randomUUID());\n-\t\tstartBranches = Set.of(BranchName.fromName(\"main\"), BranchName.fromName(\"stable\"));\n-\n-\t\trepoBranches = new HashMap<>();\n-\t\trepoBranches.put(repoId, startBranches);\n-\n-\t\tm1 = new Measurement(mock(RunId.class), dimension,\n-\t\t\tEither.ofRight(new MeasurementValues(List.of(1d, 2d, 3d))));\n-\t\tm2 = new Measurement(mock(RunId.class), dimension,\n-\t\t\tEither.ofRight(new MeasurementValues(List.of(4d, 5d, 6d))));\n-\t\tm3 = new Measurement(mock(RunId.class), dimension,\n-\t\t\tEither.ofRight(new MeasurementValues(List.of(7d, 8d, 9d))));\n-\t\tm4 = new Measurement(mock(RunId.class), dimension,\n-\t\t\tEither.ofRight(new MeasurementValues(List.of(10d, 11d, 12d))));\n-\t\tr1 = mock(Run.class);\n-\t\tr2 = mock(Run.class);\n-\t\tr3 = mock(Run.class);\n-\t\tr4 = mock(Run.class);\n-\t\twhen(r1.getResult()).thenReturn(Either.ofRight(List.of(m1)));\n-\t\twhen(r2.getResult()).thenReturn(Either.ofRight(List.of(m2)));\n-\t\twhen(r3.getResult()).thenReturn(Either.ofRight(List.of(m3)));\n-\t\twhen(r4.getResult()).thenReturn(Either.ofRight(List.of(m4)));\n-\t\trunMap = new HashMap<>();\n-\t\trunMap.put(c1Hash, r1);\n-\t\trunMap.put(c2Hash, r2);\n-\t\trunMap.put(c3Hash, r3);\n-\t\trunMap.put(c4Hash, r4);\n-\n-\t\twhen(latestRunCache.getLatestRuns(\n-\t\t\tany(BenchmarkReadAccess.class),\n-\t\t\tany(RunCache.class),\n-\t\t\teq(repoId),\n-\t\t\tanySet()\n-\t\t)).thenReturn(runMap);\n-\n-\t\twhen(dimensionAccess.getDimensionInfo(dimension)).thenReturn(dimensionInfo);\n-\t}\n-\n-\t@Test\n-\tvoid hourly() {\n-\t\t// c1 and c3 are exactly one hour apart and thus must be sorted into different entry groups.\n-\t\t// c2 is right between c1 and c3 and thus must be sorted into either c1's or c3's group.\n-\t\t// c4 is more than an hour apart from c3.\n-\t\t// The hourly threshold is not hit.\n-\t\t// This means that there should be exactly 3 groups.\n-\t\tlong startTime = 1577873472;\n-\t\tlong c1Time = startTime + 123;\n-\t\tlong c2Time = c1Time + 60 * 50;\n-\t\tlong c3Time = c1Time + 60 * 60;\n-\t\tlong c4Time = c3Time + 60 * 60 + 1;\n-\t\tlong stopTime = startTime + TimesliceComparison.HOURLY_THRESHOLD - 1;\n-\t\tInstant startInstant = Instant.ofEpochSecond(startTime);\n-\t\tInstant stopInstant = Instant.ofEpochSecond(stopTime);\n-\n-\t\twhen(c1.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c1Time));\n-\t\twhen(c2.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c2Time));\n-\t\twhen(c3.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c3Time));\n-\t\twhen(c4.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c4Time));\n-\n-\t\twhen(commitReadAccess.getCommitsBetween(repoId, startBranches, startInstant, stopInstant))\n-\t\t\t.thenReturn(commitList);\n-\n-\t\tRepoComparisonGraph graph = comparison\n-\t\t\t.generateGraph(dimension, repoBranches, startInstant, stopInstant);\n-\n-\t\tassertEquals(dimension, graph.getDimensionInfo().getDimension());\n-\t\tassertEquals(1, graph.getData().size()); // Only one repo\n-\n-\t\tRepoGraphData data = graph.getData().get(0);\n-\t\tassertEquals(repoId, data.getRepoId());\n-\t\tassertEquals(3, data.getEntries().size());\n-\t}\n-\n-\t@Test\n-\tvoid daily() {\n-\t\t// c1 and c3 are exactly one day apart and thus must be sorted into different entry groups.\n-\t\t// c2 is right between c1 and c3 and thus must be sorted into either c1's or c3's group.\n-\t\t// c4 is more than a day apart from c3.\n-\t\t// The daily threshold is not hit.\n-\t\t// This means that there should be exactly 3 groups.\n-\t\tlong startTime = 1577873472;\n-\t\tlong c1Time = startTime + 123;\n-\t\tlong c2Time = c1Time + 60 * 60 * 22;\n-\t\tlong c3Time = c1Time + 60 * 60 * 24;\n-\t\tlong c4Time = c3Time + 60 * 60 * 24 + 1;\n-\t\tlong stopTime = startTime + TimesliceComparison.DAILY_THRESHOLD - 1;\n-\t\tInstant startInstant = Instant.ofEpochSecond(startTime);\n-\t\tInstant stopInstant = Instant.ofEpochSecond(stopTime);\n-\n-\t\twhen(c1.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c1Time));\n-\t\twhen(c2.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c2Time));\n-\t\twhen(c3.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c3Time));\n-\t\twhen(c4.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c4Time));\n-\n-\t\twhen(commitReadAccess.getCommitsBetween(repoId, startBranches, startInstant, stopInstant))\n-\t\t\t.thenReturn(commitList);\n-\n-\t\tRepoComparisonGraph graph = comparison.generateGraph(dimension, repoBranches,\n-\t\t\tstartInstant, stopInstant);\n-\n-\t\tassertEquals(dimension, graph.getDimensionInfo().getDimension());\n-\t\tassertEquals(1, graph.getData().size()); // Only one repo\n-\n-\t\tRepoGraphData data = graph.getData().get(0);\n-\t\tassertEquals(repoId, data.getRepoId());\n-\t\tassertEquals(3, data.getEntries().size());\n-\t}\n-\n-\t@Test\n-\tvoid weekly() {\n-\t\t// c1 and c3 are exactly one week apart and thus must be sorted into different entry groups.\n-\t\t// c2 is right between c1 and c3 and thus must be sorted into either c1's or c3's group.\n-\t\t// c4 is more than a week apart from c3.\n-\t\t// The daily threshold is hit.\n-\t\t// This means that there should be exactly 3 groups.\n-\t\tlong startTime = 1577873472;\n-\t\tlong c1Time = startTime + 123;\n-\t\tlong c2Time = c1Time + 60 * 60 * 24 * 3;\n-\t\tlong c3Time = c1Time + 60 * 60 * 24 * 7;\n-\t\tlong c4Time = c3Time + 60 * 60 * 24 * 7 + 1;\n-\t\tlong stopTime = startTime + TimesliceComparison.DAILY_THRESHOLD;\n-\t\tInstant startInstant = Instant.ofEpochSecond(startTime);\n-\t\tInstant stopInstant = Instant.ofEpochSecond(stopTime);\n-\n-\t\twhen(c1.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c1Time));\n-\t\twhen(c2.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c2Time));\n-\t\twhen(c3.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c3Time));\n-\t\twhen(c4.getAuthorDate()).thenReturn(Instant.ofEpochSecond(c4Time));\n-\n-\t\twhen(commitReadAccess.getCommitsBetween(repoId, startBranches, startInstant, stopInstant))\n-\t\t\t.thenReturn(commitList);\n-\n-\t\tRepoComparisonGraph graph = comparison.generateGraph(dimension, repoBranches,\n-\t\t\tstartInstant, stopInstant);\n-\n-\t\tassertEquals(dimension, graph.getDimensionInfo().getDimension());\n-\t\tassertEquals(1, graph.getData().size()); // Only one repo\n-\n-\t\tRepoGraphData data = graph.getData().get(0);\n-\t\tassertEquals(repoId, data.getRepoId());\n-\t\tassertEquals(3, data.getEntries().size());\n-\t}\n-}"
  },
  {
    "sha": "97541e551f734cc1d25142250130006476f634b4",
    "filename": "docs/public_api.yaml",
    "status": "modified",
    "additions": 20,
    "deletions": 5,
    "changes": 25,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/docs/public_api.yaml",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/docs/public_api.yaml",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/docs/public_api.yaml?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -518,6 +518,7 @@ paths:\n                       $ref: '#/components/schemas/Dimension'\n                   commits:\n                     type: array\n+                    description: 'Ordered from old to new. If multiple commits have the same committer time (e. g. because of a rebase), they are ordered topologically from parent to child.'\n                     items:\n                       type: object\n                       properties:\n@@ -538,7 +539,7 @@ paths:\n                           description: |-\n                             One value for each dimension. For the order, see the `dimensions` field.\n \n-                            If there is no value for any reason, the array contains a string as placeholder describing why there is no value. `\"N\"` means that the commit has no correspondin run. `\"O\"` means that the run has no corresponding measurement. `\"R\"` means that the entire run has failed. `\"M\"` means that only the measurement itself has failed.\n+                            If there is no value for any reason, the array contains a string as placeholder describing why there is no value. `\"N\"` means that the commit has no corresponding run. `\"O\"` means that the run has no corresponding measurement. `\"R\"` means that the entire run has failed. `\"M\"` means that only the measurement itself has failed.\n                           items:\n                             type:\n                               - number\n@@ -672,24 +673,38 @@ paths:\n                           $ref: '#/components/schemas/RepoId'\n                         commits:\n                           type: array\n+                          description: 'Ordered from old to new. If multiple commits have the same committer time (e. g. because of a rebase), they are ordered topologically from parent to child.'\n                           items:\n                             type: object\n                             properties:\n                               hash:\n                                 $ref: '#/components/schemas/CommitHash'\n+                              parents:\n+                                type: array\n+                                items:\n+                                  $ref: '#/components/schemas/CommitHash'\n                               author:\n                                 type: string\n-                              author_date:\n+                              committer_date:\n                                 $ref: '#/components/schemas/Time'\n                               summary:\n                                 type: string\n                               value:\n-                                type: number\n-                                description: 'One value for each dimension. For the order, see the `dimensions` field'\n+                                type:\n+                                  - number\n+                                  - string\n+                                description: |-\n+                                  One value for each dimension. For the order, see the `dimensions` field.\n+\n+                                  If there is no value for any reason, the array contains a string as placeholder describing why there is no value. `\"N\"` means that the commit has no corresponding run. `\"O\"` means that the run has no corresponding measurement. `\"R\"` means that the entire run has failed. `\"M\"` means that only the measurement itself has failed.\n+                                pattern: '^[NORM]$'\n+                                minLength: 1\n+                                maxLength: 1\n                             required:\n                               - hash\n+                              - parents\n                               - author\n-                              - author_date\n+                              - committer_date\n                               - summary\n                               - value\n                       required:"
  },
  {
    "sha": "1c42f33e227ba30e6ec13c6cb0dc6a78ccdb564e",
    "filename": "frontend/package.json",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/package.json",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/package.json",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/package.json?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -8,12 +8,10 @@\n     \"lint\": \"vue-cli-service lint --no-fix\"\n   },\n   \"dependencies\": {\n-    \"@types/d3\": \"^5.16.3\",\n     \"@types/dygraphs\": \"^1.1.11\",\n     \"ansi_up\": \"^5.0.0\",\n     \"axios\": \"^0.21.1\",\n     \"core-js\": \"^3.9.0\",\n-    \"d3\": \"^5.15.0\",\n     \"dygraphs\": \"git://github.com/I-Al-Istannen/dygraphs.git#1e0170e98b5e8501d0ab12d897e14b1b322bd169\",\n     \"echarts\": \"^5.0.2\",\n     \"vue\": \"^2.6.12\","
  },
  {
    "sha": "0e4f8ff16b18bfdf048defeec00de03f3f37bd76",
    "filename": "frontend/src/components/RepoSelector.vue",
    "status": "removed",
    "additions": 0,
    "deletions": 157,
    "changes": 157,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/frontend/src/components/RepoSelector.vue",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/frontend/src/components/RepoSelector.vue",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/RepoSelector.vue?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,157 +0,0 @@\n-<template>\n-  <div class=\"repo-selector\">\n-    <v-container fluid class=\"ma-0 pa-0\">\n-      <v-card flat>\n-        <v-card-title>\n-          <v-toolbar color=\"toolbarColor\" dark>Repositories</v-toolbar>\n-        </v-card-title>\n-        <v-card-text>\n-          <v-list>\n-            <v-list-group v-for=\"repo in allRepos\" :key=\"repo.id\">\n-              <template v-slot:activator>\n-                <v-checkbox\n-                  v-model=\"selectedRepos\"\n-                  :value=\"repo.id\"\n-                  :color=\"colorById(repo.id)\"\n-                  @click.native.stop\n-                  @change=\"updateSelectedRepos()\"\n-                ></v-checkbox>\n-                <v-tooltip bottom>\n-                  <template #activator=\"{ on }\">\n-                    <router-link\n-                      class=\"ml-3 mx-auto\"\n-                      :to=\"{ name: 'repo-detail', params: { id: repo.id } }\"\n-                      tag=\"button\"\n-                    >\n-                      <v-list-item-title v-on=\"on\">{{\n-                        repo.name\n-                      }}</v-list-item-title>\n-                      <v-list-item-subtitle v-on=\"on\">{{\n-                        repo.id\n-                      }}</v-list-item-subtitle>\n-                    </router-link>\n-                  </template>\n-                  <span>go to detail page of {{ repo.name }}</span>\n-                </v-tooltip>\n-              </template>\n-              <v-list-item\n-                v-for=\"(branch, index) in repo.trackedBranches\"\n-                :key=\"index\"\n-              >\n-                <v-list-item-title>\n-                  <v-checkbox\n-                    multiple\n-                    class=\"ml-5\"\n-                    :input-value=\"selectedBranchesByRepo(repo.id)\"\n-                    :label=\"branch\"\n-                    :value=\"branch\"\n-                    :disabled=\"!repoSelected(repo.id)\"\n-                    :color=\"colorById(repo.id)\"\n-                    @change=\"\n-                      updateSelectedBranchesForRepo(repo.id, branch, $event)\n-                    \"\n-                  />\n-                </v-list-item-title>\n-              </v-list-item>\n-            </v-list-group>\n-          </v-list>\n-        </v-card-text>\n-      </v-card>\n-    </v-container>\n-  </div>\n-</template>\n-\n-<script lang=\"ts\">\n-import Vue from 'vue'\n-import Component from 'vue-class-component'\n-import { Watch } from 'vue-property-decorator'\n-import { vxm } from '../store/index'\n-import { Repo, RepoId } from '../store/types'\n-\n-@Component\n-export default class RepoSelector extends Vue {\n-  private notifyTimeout: number | undefined\n-\n-  get selectedRepos(): RepoId[] {\n-    return vxm.comparisonGraphModule.selectedRepos\n-  }\n-\n-  set selectedRepos(repos: RepoId[]) {\n-    vxm.comparisonGraphModule.selectedRepos = repos\n-  }\n-\n-  get allRepos(): Repo[] {\n-    return vxm.repoModule.allRepos\n-  }\n-\n-  get repoSelected(): (repoId: string) => boolean {\n-    return (repoId: string) => this.selectedRepos.indexOf(repoId) > -1\n-  }\n-\n-  get selectedBranchesByRepo(): (repoId: string) => string[] {\n-    return (repoId: string) =>\n-      vxm.comparisonGraphModule.selectedBranchesByRepoId[repoId]\n-  }\n-\n-  get allColors(): string[] {\n-    return vxm.colorModule.allColors\n-  }\n-\n-  get colorById(): (repoId: string) => string {\n-    return (repoId: string) => {\n-      const repoIndex = vxm.repoModule.repoIndex(repoId)\n-      return vxm.colorModule.colorByIndex(repoIndex)\n-    }\n-  }\n-\n-  updateSelectedRepos(): void {\n-    this.debounce(this.notifySelectionChanged, 1000)()\n-  }\n-\n-  updateSelectedBranchesForRepo(\n-    repoId: string,\n-    branch: string,\n-    checkedValues: string[]\n-  ): void {\n-    vxm.comparisonGraphModule.setSelectedBranchesForRepo({\n-      repoId: repoId,\n-      selectedBranches: checkedValues\n-    })\n-    this.debounce(this.notifySelectionChanged, 1000)()\n-  }\n-\n-  debounce(func: (...args: any[]) => void, wait: number): () => void {\n-    return () => {\n-      if (this.notifyTimeout) {\n-        return\n-      }\n-      // eslint-disable-next-line @typescript-eslint/no-this-alias\n-      const context = this\n-      const args = arguments\n-      clearTimeout(this.notifyTimeout)\n-      this.notifyTimeout = setTimeout(() => {\n-        this.notifyTimeout = undefined\n-        func.apply(context, Array.from(args))\n-      }, wait)\n-    }\n-  }\n-\n-  notifySelectionChanged(): void {\n-    this.$emit('selection-changed')\n-  }\n-\n-  @Watch('allRepos')\n-  addMissingColors(): void {\n-    if (this.allColors.length < this.allRepos.length) {\n-      const diff = this.allRepos.length - this.allColors.length\n-      vxm.colorModule.addColors(diff)\n-    }\n-  }\n-}\n-</script>\n-\n-<style scoped>\n-.panel-header {\n-  font-size: large;\n-}\n-</style>"
  },
  {
    "sha": "e5c3f6a0b298ecae7d16d86532f49d1a36ac899e",
    "filename": "frontend/src/components/dialogs/GraphDatapointDialog.vue",
    "status": "renamed",
    "additions": 45,
    "deletions": 35,
    "changes": 80,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/dialogs/GraphDatapointDialog.vue",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/dialogs/GraphDatapointDialog.vue",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/dialogs/GraphDatapointDialog.vue?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -11,8 +11,9 @@\n               text\n               outlined\n               @click=\"setAsReference\"\n-              >Use datapoint as reference</v-btn\n             >\n+              Use datapoint as reference\n+            </v-btn>\n           </v-col>\n         </v-row>\n         <v-row dense>\n@@ -24,8 +25,9 @@\n               text\n               outlined\n               @click=\"removeReferenceLine\"\n-              >remove reference line</v-btn\n             >\n+              Remove reference line\n+            </v-btn>\n           </v-col>\n         </v-row>\n         <v-row v-if=\"allowSelectCompare\" class=\"mt-4\" dense>\n@@ -36,8 +38,9 @@\n               text\n               outlined\n               @click=\"setAsCompare\"\n-              >Select this commit to compare</v-btn\n             >\n+              Select this commit to compare\n+            </v-btn>\n           </v-col>\n         </v-row>\n         <v-row v-if=\"allowSelectCompare && commitToCompare\" dense>\n@@ -49,8 +52,9 @@\n               outlined\n               class=\"reflow-button py-2\"\n               @click=\"compareCommits\"\n-              >{{ compareLabel }}</v-btn\n             >\n+              {{ compareLabel }}\n+            </v-btn>\n           </v-col>\n         </v-row>\n         <v-row v-if=\"commitToCompare\" dense>\n@@ -62,8 +66,9 @@\n               outlined\n               class=\"reflow-button py-2\"\n               @click=\"removeCompare\"\n-              >Reset comparison</v-btn\n             >\n+              Reset comparison\n+            </v-btn>\n           </v-col>\n         </v-row>\n       </v-card-text>\n@@ -83,32 +88,41 @@\n import Vue from 'vue'\n import Component from 'vue-class-component'\n import { Prop } from 'vue-property-decorator'\n-import { CommitDescription, DetailDataPoint, Dimension } from '@/store/types'\n-import { vxm } from '@/store'\n-import { DimensionDetailPoint } from '@/store/modules/detailGraphStore'\n+import {\n+  AttributedDatapoint,\n+  CommitDescription,\n+  GraphDataPoint,\n+  SeriesId\n+} from '@/store/types'\n import CommitBenchmarkActions from '@/components/CommitBenchmarkActions.vue'\n \n @Component({\n   components: {\n     'benchmark-actions': CommitBenchmarkActions\n   }\n })\n-export default class DetailDatapointDialog extends Vue {\n+export default class GraphDatapointDialog extends Vue {\n   @Prop({ default: false })\n-  dialogOpen!: boolean\n+  private readonly dialogOpen!: boolean\n \n   @Prop()\n-  selectedDatapoint!: DetailDataPoint\n+  private readonly selectedDatapoint!: GraphDataPoint\n \n   @Prop()\n-  dimension!: Dimension\n+  private readonly seriesId!: SeriesId\n+\n+  @Prop({ default: null })\n+  private readonly commitToCompare!: AttributedDatapoint | null\n+\n+  @Prop({ default: null })\n+  private readonly referenceDatapoint!: AttributedDatapoint | null\n \n   private get commitHasValue() {\n-    return this.selectedDatapoint.successful(this.dimension)\n+    return this.selectedDatapoint.successful(this.seriesId)\n   }\n \n   private get commitHasRun() {\n-    return !this.selectedDatapoint.unbenchmarked(this.dimension)\n+    return !this.selectedDatapoint.unbenchmarked(this.seriesId)\n   }\n \n   private get allowSelectAsReference(): boolean {\n@@ -119,53 +133,49 @@ export default class DetailDatapointDialog extends Vue {\n     return this.commitHasValue\n   }\n \n-  private get commitToCompare(): DimensionDetailPoint | null {\n-    return vxm.detailGraphModule.commitToCompare\n-  }\n-\n   private get hasReferenceLine() {\n-    return vxm.detailGraphModule.referenceDatapoint !== null\n+    return this.referenceDatapoint !== null\n   }\n \n   private get selectedDatapointAsCommitDescription() {\n     return new CommitDescription(\n-      vxm.detailGraphModule.selectedRepoId,\n+      this.selectedDatapoint.repoId,\n       this.selectedDatapoint.hash,\n       this.selectedDatapoint.author,\n-      this.selectedDatapoint.committerDate,\n+      this.selectedDatapoint.committerTime,\n       this.selectedDatapoint.summary\n     )\n   }\n \n   private get compareLabel(): string {\n     return this.commitToCompare\n-      ? 'Compare this commit to commit ' + this.commitToCompare.dataPoint.hash\n+      ? 'Compare this commit to commit ' + this.commitToCompare.datapoint.hash\n       : ''\n   }\n \n   private setAsReference() {\n-    vxm.detailGraphModule.referenceDatapoint = {\n-      dataPoint: this.selectedDatapoint,\n-      dimension: this.dimension\n-    }\n+    this.$emit('update:referenceDatapoint', {\n+      datapoint: this.selectedDatapoint,\n+      seriesId: this.seriesId\n+    } as AttributedDatapoint)\n     this.$emit('close')\n   }\n \n   private removeReferenceLine() {\n-    vxm.detailGraphModule.referenceDatapoint = null\n+    this.$emit('update:referenceDatapoint', null)\n     this.$emit('close')\n   }\n \n   private setAsCompare() {\n-    vxm.detailGraphModule.commitToCompare = {\n-      dimension: this.dimension,\n-      dataPoint: this.selectedDatapoint\n-    }\n+    this.$emit('update:commitToCompare', {\n+      datapoint: this.selectedDatapoint,\n+      seriesId: this.seriesId\n+    } as AttributedDatapoint)\n     this.$emit('close')\n   }\n \n   private removeCompare() {\n-    vxm.detailGraphModule.commitToCompare = null\n+    this.$emit('update:commitToCompare', null)\n     this.$emit('close')\n   }\n \n@@ -175,11 +185,11 @@ export default class DetailDatapointDialog extends Vue {\n   }\n \n   private pointDialogExecuteCompare() {\n-    if (!vxm.detailGraphModule.commitToCompare || !this.selectedDatapoint) {\n+    if (!this.commitToCompare || !this.selectedDatapoint) {\n       return\n     }\n-    const repoId = vxm.detailGraphModule.selectedRepoId\n-    const hashFrom = vxm.detailGraphModule.commitToCompare.dataPoint.hash\n+    const repoId = this.commitToCompare.datapoint.repoId\n+    const hashFrom = this.commitToCompare.datapoint.hash\n     const hashTo = this.selectedDatapoint.hash\n \n     this.$router.push({",
    "previous_filename": "frontend/src/components/dialogs/DetailDatapointDialog.vue"
  },
  {
    "sha": "600147a5d734dc6fd83b2842507d055a8a353e5b",
    "filename": "frontend/src/components/graphs/ComparisonGraph.vue",
    "status": "removed",
    "additions": 0,
    "deletions": 984,
    "changes": 984,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/frontend/src/components/graphs/ComparisonGraph.vue",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/frontend/src/components/graphs/ComparisonGraph.vue",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/graphs/ComparisonGraph.vue?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,984 +0,0 @@\n-<template>\n-  <v-container fluid>\n-    <v-row align=\"center\" justify=\"center\">\n-      <v-col>\n-        <div id=\"chart\" :style=\"{ height: this.height + 'px' }\">\n-          <svg id=\"mainSvg\" />\n-        </div>\n-      </v-col>\n-    </v-row>\n-    <v-row>\n-      <v-col>\n-        <datapoint-dialog\n-          :dialogOpen=\"dialogOpen\"\n-          :selectedCommit=\"undefined\"\n-          @setReference=\"setReference\"\n-          @removeReference=\"removeReference\"\n-          @viewInDetailGraph=\"showInDetailGraph\"\n-          @close=\"closeDialog\"\n-        ></datapoint-dialog>\n-      </v-col>\n-    </v-row>\n-  </v-container>\n-</template>\n-\n-<script lang=\"ts\">\n-import Vue from 'vue'\n-import Component from 'vue-class-component'\n-import { Prop, Watch } from 'vue-property-decorator'\n-import * as d3 from 'd3'\n-import { vxm } from '@/store'\n-import { formatDateUTC } from '@/util/TimeUtil'\n-import { ComparisonDataPoint, Repo } from '@/store/types'\n-import ComparisonDatapointDialog from '../dialogs/ComparisonDatapointDialog.vue'\n-import { crosshairIcon } from '../graphs/crosshairIcon'\n-import { showCommitInDetailGraph } from '@/util/GraphNavigation'\n-\n-@Component({\n-  components: {\n-    'datapoint-dialog': ComparisonDatapointDialog\n-  }\n-})\n-export default class ComparisonGraph extends Vue {\n-  @Prop({ default: true })\n-  beginYAtZero!: boolean\n-\n-  // dimensions\n-  private width: number = 0\n-  private height: number = 0\n-  private datapointWidth: number = 50\n-\n-  private margin: {\n-    left: number\n-    right: number\n-    top: number\n-    bottom: number\n-    between: number\n-  } = {\n-    left: 100,\n-    right: 50,\n-    top: 20,\n-    bottom: 70,\n-    between: 70\n-  }\n-\n-  private get innerWidth(): number {\n-    return this.width - this.margin.left - this.margin.right\n-  }\n-\n-  private get innerHeight(): number {\n-    return this.height - this.margin.top - this.margin.bottom\n-  }\n-\n-  private get focusHeight(): number {\n-    return 0.8 * (this.innerHeight - this.margin.between)\n-  }\n-\n-  private get contextHeight(): number {\n-    return this.innerHeight - this.margin.between - this.focusHeight\n-  }\n-\n-  // retrieving and interpreting data points\n-  private get dataPoints(): { [key: string]: ComparisonDataPoint[] } {\n-    return vxm.comparisonGraphModule.allDatapoints\n-  }\n-\n-  private get repos(): string[] {\n-    return vxm.repoModule.allRepos.map((repo: Repo) => repo.id)\n-  }\n-\n-  private get metric(): string {\n-    return vxm.comparisonGraphModule.selectedMetric\n-  }\n-\n-  private get unit(): string {\n-    // TODO: This\n-    return 'unit'\n-  }\n-\n-  private get minTimestamp(): number {\n-    return vxm.comparisonGraphModule.startDate.getTime()\n-  }\n-\n-  private get maxTimestamp(): number {\n-    return vxm.comparisonGraphModule.stopDate.getTime() + 1000 * 60 * 60 * 24\n-  }\n-\n-  private context: number[] = [this.minTimestamp, this.maxTimestamp]\n-  private focus: number[] = this.context\n-\n-  brushedArea(): number[] {\n-    return this.focus\n-  }\n-\n-  get allDataPoints(): ComparisonDataPoint[] {\n-    return Array.from(Object.values(this.dataPoints)).reduce(\n-      (acc, next) => acc.concat(next),\n-      []\n-    )\n-  }\n-\n-  private get minContextVal(): number | undefined {\n-    return d3.min(this.allDataPoints, (d: ComparisonDataPoint) => {\n-      return d.value\n-    })\n-  }\n-\n-  private get maxContextVal(): number | undefined {\n-    return d3.max(this.allDataPoints, (d: ComparisonDataPoint) => {\n-      return d.value\n-    })\n-  }\n-\n-  private get minFocusVal(): number | undefined {\n-    const inFocusMin: number | undefined = d3.min(\n-      this.allDataPoints,\n-      (d: ComparisonDataPoint) => {\n-        const date: number = d.authorDate ? d.authorDate.getTime() : 0\n-        return this.focus[0] <= date && date <= this.focus[1] ? d.value : NaN\n-      }\n-    )\n-\n-    if (inFocusMin) {\n-      return vxm.comparisonGraphModule.referenceDatapoint !== undefined &&\n-        vxm.comparisonGraphModule.referenceDatapoint.value < inFocusMin\n-        ? vxm.comparisonGraphModule.referenceDatapoint.value\n-        : inFocusMin\n-    }\n-    return vxm.comparisonGraphModule.referenceDatapoint !== undefined\n-      ? vxm.comparisonGraphModule.referenceDatapoint.value\n-      : 0\n-  }\n-\n-  private get maxFocusVal(): number | undefined {\n-    const inFocusMax: number | undefined = d3.max(\n-      this.allDataPoints,\n-      (d: ComparisonDataPoint) => {\n-        const date: number = d.authorDate ? d.authorDate.getTime() : 0\n-        return this.focus[0] <= date && date <= this.focus[1] ? d.value : NaN\n-      }\n-    )\n-\n-    if (inFocusMax) {\n-      return vxm.comparisonGraphModule.referenceDatapoint !== undefined &&\n-        vxm.comparisonGraphModule.referenceDatapoint.value > inFocusMax\n-        ? vxm.comparisonGraphModule.referenceDatapoint.value\n-        : inFocusMax\n-    }\n-    return vxm.comparisonGraphModule.referenceDatapoint !== undefined\n-      ? vxm.comparisonGraphModule.referenceDatapoint.value\n-      : 0\n-  }\n-\n-  private get yFocusDomain(): number[] {\n-    return this.minFocusVal !== undefined && this.maxFocusVal !== undefined\n-      ? [this.minFocusVal, this.maxFocusVal]\n-      : [0, 0]\n-  }\n-\n-  private get dataAvailable(): boolean {\n-    return this.metric !== '' && this.maxContextVal !== undefined\n-  }\n-\n-  // scales and axes\n-  private xScale(domain: number[]): d3.ScaleTime<number, number> {\n-    return d3.scaleUtc().domain(domain).range([0, this.innerWidth])\n-  }\n-\n-  private yScale(\n-    domain: number[],\n-    height: number\n-  ): d3.ScaleLinear<number, number> {\n-    const min: number = !this.beginYAtZero && domain[0] ? domain[0] : 0\n-    const max: number = domain[1] || 0\n-    return d3.scaleLinear().domain([min, max]).nice().range([height, 0])\n-  }\n-\n-  private x(domain: number[], datapoint: ComparisonDataPoint): number {\n-    return datapoint.authorDate\n-      ? this.xScale(domain)(datapoint.authorDate.getTime())!\n-      : 0\n-  }\n-\n-  private y(\n-    domain: number[],\n-    datapoint: ComparisonDataPoint,\n-    height: number\n-  ): number {\n-    return this.yScale(domain, height)(datapoint.value)!\n-  }\n-\n-  private valueFormat: any = d3.format('<.4')\n-\n-  private focusXAxis(): d3.Axis<number | Date | { valueOf(): number }> {\n-    return d3.axisBottom(this.xScale(this.focus)).ticks(this.innerWidth / 80)\n-  }\n-\n-  private contextXAxis(): d3.Axis<number | Date | { valueOf(): number }> {\n-    return d3\n-      .axisBottom(this.xScale(this.context))\n-      .ticks(this.innerWidth / 80)\n-      .tickSizeOuter(2)\n-  }\n-\n-  private yAxis(): d3.Axis<number | { valueOf(): number }> {\n-    return d3\n-      .axisLeft(this.yScale(this.yFocusDomain, this.focusHeight))\n-      .tickFormat(this.valueFormat)\n-  }\n-\n-  get yLabel(): string {\n-    if (this.metric) {\n-      return this.unit ? this.metric + ' in ' + this.unit : this.metric\n-    } else {\n-      return '-'\n-    }\n-  }\n-\n-  // interacting with the context graph via brushing, updating the focus graph accordingly\n-  private get brush() {\n-    return d3\n-      .brushX()\n-      .extent([\n-        [0, -2],\n-        [this.innerWidth, this.contextHeight + 2]\n-      ])\n-      .handleSize(15)\n-      .on('brush', this.brushed)\n-      .on('end', this.brushended)\n-  }\n-\n-  private brushed() {\n-    const selection = d3.event.selection\n-\n-    if (selection) {\n-      const newMinDate: Date = this.xScale(this.context).invert(selection[0])\n-      const newMaxDate: Date = this.xScale(this.context).invert(selection[1])\n-\n-      const newFocusMin: number = newMinDate.getTime()\n-      const newFocusMax: number = newMaxDate.getTime()\n-\n-      this.focus = [newFocusMin, newFocusMax]\n-    }\n-  }\n-\n-  private brushended() {\n-    if (!d3.event.selection) {\n-      d3.select('#brush').call(\n-        this.brush.move as any,\n-        this.context.map(this.xScale(this.context))\n-      )\n-    }\n-  }\n-\n-  // interacting with data points via DatapointDialog\n-  private dialogOpen: boolean = false\n-  private selectedDatapoint: ComparisonDataPoint | null = null\n-\n-  openDatapointMenu(datapoint: ComparisonDataPoint): void {\n-    this.selectedDatapoint = datapoint\n-    this.dialogOpen = true\n-  }\n-\n-  setReference(): void {\n-    if (vxm.comparisonGraphModule.referenceDatapoint !== undefined) {\n-      this.removeCrosshair(vxm.comparisonGraphModule.referenceDatapoint)\n-    }\n-    if (this.selectedDatapoint) {\n-      vxm.comparisonGraphModule.referenceCommit = this.selectedDatapoint\n-    }\n-    if (vxm.comparisonGraphModule.referenceDatapoint !== undefined) {\n-      this.drawReferenceLine(vxm.comparisonGraphModule.referenceDatapoint)\n-      this.drawCrosshair(vxm.comparisonGraphModule.referenceDatapoint)\n-    }\n-    this.closeDialog()\n-  }\n-\n-  private drawReferenceLine(datapoint: ComparisonDataPoint) {\n-    const referenceLine = d3\n-      .select('#focusLayer')\n-      .selectAll<SVGPathElement, unknown>('#referenceLine')\n-      .data([datapoint])\n-\n-    referenceLine\n-      .enter()\n-      .append('line')\n-      .attr('id', 'referenceLine')\n-      .merge(referenceLine as any)\n-      .transition()\n-      .duration(50)\n-      .delay(0)\n-      .attr('stroke', this.graphReferenceElementsColor)\n-      .attr('x1', this.innerWidth)\n-      .attr('y1', this.y(this.yFocusDomain, datapoint, this.focusHeight))\n-      .attr('x2', 0)\n-      .attr('y2', this.y(this.yFocusDomain, datapoint, this.focusHeight))\n-\n-    referenceLine.exit().transition().attr('opacity', 0).remove()\n-  }\n-\n-  private removeReference() {\n-    d3.select('#referenceLine').transition().attr('opacity', 0).remove()\n-    this.removeCrosshair(vxm.comparisonGraphModule.referenceDatapoint!)\n-    vxm.comparisonGraphModule.referenceCommit = null\n-    this.closeDialog()\n-  }\n-\n-  private crosshairIcon = crosshairIcon\n-\n-  private drawCrosshair(datapoint: ComparisonDataPoint) {\n-    const crosshair = d3.select(\n-      '#' + '_' + datapoint.repoId + '_' + datapoint.hash\n-    )\n-\n-    if (crosshair.node()) {\n-      d3.select('#' + '_' + datapoint.repoId + '_' + datapoint.hash)\n-        .transition()\n-        .attr(\n-          'd',\n-          d3.symbol().type(this.crosshairIcon).size(this.datapointWidth)\n-        )\n-        .attr(\n-          'transform',\n-          'translate(' +\n-            (this.x(this.focus, datapoint) - 12) +\n-            ', ' +\n-            (this.y(this.yFocusDomain, datapoint, this.focusHeight) - 12) +\n-            ')'\n-        )\n-        .attr('opacity', 1)\n-        .attr('fill', this.colorById(datapoint.repoId))\n-        .attr('stroke', this.colorById(datapoint.repoId))\n-        .attr('stroke-width', 2)\n-    }\n-  }\n-\n-  private removeCrosshair(datapoint: ComparisonDataPoint) {\n-    d3.select('#' + '_' + datapoint.repoId + '_' + datapoint.hash)\n-      .attr('d', d3.symbol().type(d3.symbolCircle).size(this.datapointWidth))\n-      .attr(\n-        'transform',\n-        'translate(' +\n-          this.x(this.focus, datapoint) +\n-          ', ' +\n-          this.y(this.yFocusDomain, datapoint, this.focusHeight) +\n-          ')'\n-      )\n-      .attr('fill', this.colorById(datapoint.repoId))\n-      .attr('stroke', this.colorById(datapoint.repoId))\n-      .attr('stroke-width', 2)\n-  }\n-\n-  private closeDialog() {\n-    this.dialogOpen = false\n-  }\n-\n-  // drawing the graph\n-  private graphDrawn: boolean = false\n-\n-  private drawGraph(animation: { delay: number; duration: number }) {\n-    if (this.dataAvailable) {\n-      if (!this.graphDrawn) {\n-        d3.select('#dataLayer').remove()\n-        this.defineSvgElements()\n-        this.graphDrawn = true\n-      }\n-\n-      const keyFn: d3.ValueFn<any, any, string> = (d: ComparisonDataPoint) => {\n-        return '_' + d.repoId + '_' + d.hash\n-      }\n-\n-      this.repos.forEach(repoID => {\n-        this.drawPaths(repoID, animation)\n-      })\n-      this.drawDatapoints(keyFn, animation)\n-      this.appendTooltips(keyFn)\n-      this.setReference()\n-    } else {\n-      if (this.graphDrawn) {\n-        this.graphDrawn = false\n-      }\n-      d3.select('#dataLayer').remove()\n-\n-      const information: string =\n-        this.metric === ''\n-          ? '<tspan x=\"0\" dy=\"1.2em\">No data available.</tspan><tspan x=\"0\" dy=\"1.2em\">Please select benchmark and metric.</tspan>'\n-          : '<tspan x=\"0\" dy=\"1.2em\">There are no commits within the specified time period</tspan><tspan x=\"0\" dy=\"1.2em\"> that have been benchmarked with this metric.</tspan>'\n-\n-      d3.select('#mainSvg')\n-        .append('g')\n-        .attr('id', 'dataLayer')\n-        .attr(\n-          'transform',\n-          'translate(' + this.margin.left + ',' + this.margin.top + ')'\n-        )\n-        .append('text')\n-        .attr('y', this.innerHeight / 2)\n-        .attr('x', -this.margin.left)\n-        .html(information)\n-        .attr('class', 'information')\n-    }\n-  }\n-\n-  private drawPaths(\n-    repoID: string,\n-    animation: { delay: number; duration: number }\n-  ) {\n-    const contextDomain: number[] =\n-      this.minContextVal !== undefined && this.maxContextVal !== undefined\n-        ? [this.minContextVal, this.maxContextVal]\n-        : [0, 0]\n-\n-    this.drawPath(\n-      repoID,\n-      'focus',\n-      this.focus,\n-      this.yFocusDomain,\n-      this.focusHeight,\n-      animation\n-    )\n-\n-    this.drawPath(\n-      repoID,\n-      'context',\n-      this.context,\n-      contextDomain,\n-      this.contextHeight,\n-      animation\n-    )\n-  }\n-\n-  private drawPath(\n-    repoID: string,\n-    layer: string,\n-    xDomain: number[],\n-    yDomain: number[],\n-    height: number,\n-    animation: { delay: number; duration: number }\n-  ) {\n-    if (this.dataPoints[repoID]) {\n-      const path: any = d3\n-        .select('#' + layer + 'Layer')\n-        .selectAll<SVGPathElement, unknown>('#' + layer + 'line_' + repoID)\n-        .data([this.dataPoints[repoID]])\n-      path\n-        .enter()\n-        .append('path')\n-        .attr('id', layer + 'line_' + repoID)\n-        .merge(path)\n-        .transition()\n-        .duration(animation.duration)\n-        .delay(animation.delay)\n-        .attr('d', this.line(xDomain, yDomain, height))\n-        .attr('stroke', this.colorById(repoID))\n-        .attr('stroke-width', 2)\n-        .attr('fill', 'none')\n-        .attr('pointer-events', 'none')\n-      path.exit().transition().attr('opacity', 0).attr('width', 0).remove()\n-    } else {\n-      d3.select('#' + layer + 'Layer')\n-        .select('#' + layer + 'line_' + repoID)\n-        .remove()\n-    }\n-  }\n-\n-  get line(): (xDomain: number[], yDomain: number[], height: number) => any {\n-    return (xDomain: number[], yDomain: number[], height: number) =>\n-      d3\n-        .line<ComparisonDataPoint>()\n-        .x((d: ComparisonDataPoint) => {\n-          return this.x(xDomain, d)\n-        })\n-        .y((d: ComparisonDataPoint) => {\n-          return this.y(yDomain, d, height)\n-        })\n-  }\n-\n-  private drawDatapoints(\n-    keyFn: d3.ValueFn<any, any, string>,\n-    animation: { delay: number; duration: number }\n-  ) {\n-    const datapoints: d3.Selection<\n-      SVGPathElement,\n-      ComparisonDataPoint,\n-      d3.BaseType,\n-      unknown\n-    > = d3\n-      .select('#focusLayer')\n-      .selectAll<SVGPathElement, unknown>('.datapoint')\n-      .data(this.allDataPoints, keyFn)\n-\n-    datapoints\n-      .enter()\n-      .append('path')\n-      .attr('class', 'datapoint')\n-      .attr('id', (d: ComparisonDataPoint) => '_' + d.repoId + '_' + d.hash)\n-      .merge(datapoints)\n-      .transition()\n-      .delay(animation.delay)\n-      .duration(animation.duration)\n-      .attr('d', d3.symbol().type(d3.symbolCircle).size(this.datapointWidth))\n-      .attr(\n-        'transform',\n-        (d: ComparisonDataPoint) =>\n-          'translate(' +\n-          this.x(this.focus, d) +\n-          ', ' +\n-          this.y(this.yFocusDomain, d, this.focusHeight) +\n-          ')'\n-      )\n-      .attr('fill', (d: ComparisonDataPoint) => this.colorById(d.repoId))\n-      .attr('stroke', (d: ComparisonDataPoint) => this.colorById(d.repoId))\n-      .attr('stroke-width', 2)\n-      .attr('opacity', 1)\n-      .style('cursor', 'pointer')\n-\n-    datapoints.exit().transition().attr('opacity', 0).attr('width', 0).remove()\n-  }\n-\n-  private appendTooltips(keyFn: d3.ValueFn<any, any, string>) {\n-    d3.selectAll('.datapoint')\n-      .data(this.allDataPoints, keyFn)\n-      .on('mouseover', this.mouseover)\n-      .on('mousemove', this.mousemove)\n-      .on('mouseleave', this.mouseleave)\n-      .on('click', (d: ComparisonDataPoint) => {\n-        this.$router.push({\n-          name: 'run-detail',\n-          params: { first: d.repoId, second: d.hash }\n-        })\n-      })\n-      .on('contextmenu', (d: ComparisonDataPoint) => {\n-        d3.event.preventDefault()\n-        this.openDatapointMenu(d)\n-      })\n-      .on('mousedown', (d: ComparisonDataPoint) => {\n-        if (d3.event.which === 2) {\n-          d3.event.preventDefault()\n-          const routeData = this.$router.resolve({\n-            name: 'run-detail',\n-            params: { first: d.repoId, second: d.hash }\n-          })\n-          window.open(routeData.href, '_blank')\n-        }\n-      })\n-  }\n-\n-  private mouseover() {\n-    d3.select('#tooltip')\n-      .transition()\n-      .duration(300)\n-      .style('opacity', 1)\n-      .style('visibility', 'visible')\n-  }\n-\n-  private mousemove(d: ComparisonDataPoint) {\n-    const tooltip: d3.Selection<\n-      d3.BaseType,\n-      unknown,\n-      HTMLElement,\n-      any\n-    > = d3.select('#tooltip')\n-    const tipWidth = (tooltip.node() as HTMLElement).getBoundingClientRect()\n-      .width\n-    const tipHeight = (tooltip.node() as HTMLElement).getBoundingClientRect()\n-      .height\n-\n-    const date = d.authorDate\n-\n-    const htmlMessage = `\n-        <table class=\"tooltip-table\">\n-          <tr>\n-            <td>Commit</td>\n-            <td>${d.hash}</td>\n-          </tr>\n-          <tr>\n-            <td>Author</td>\n-            <td>${d.author}</td>\n-          </tr>\n-          <tr>\n-            <td>Date</td>\n-            <td>${formatDateUTC(date)}</td>\n-          </tr>\n-          <tr>\n-            <td>Exact value</td>\n-            <td>${this.valueFormat(d.value)} ${this.unit}</td>\n-          </tr>\n-          <tr>\n-            <td>Commit summary</td>\n-            <td>${d.summary!.trim()}</td>\n-          </tr>\n-        </table>\n-      `\n-    tooltip.html(htmlMessage)\n-\n-    const horizontalMousePos = d3.mouse(\n-      d3.select('#mainSvg').node() as SVGSVGElement\n-    )[0]\n-    const verticalMousePos = d3.mouse(\n-      d3.select('#mainSvg').node() as SVGSVGElement\n-    )[1]\n-\n-    if (horizontalMousePos < this.width / 2) {\n-      tooltip.style('left', horizontalMousePos - 20 + 'px')\n-      ;(tooltip.node() as HTMLElement).style.setProperty('--tail-left', '15px')\n-    } else {\n-      tooltip.style('left', horizontalMousePos - tipWidth + 20 + 'px')\n-      ;(tooltip.node() as HTMLElement).style.setProperty(\n-        '--tail-left',\n-        tipWidth - 25 + 'px'\n-      )\n-    }\n-    if (verticalMousePos < this.height / 2) {\n-      tooltip.style('top', verticalMousePos + 10 + 'px')\n-      ;(tooltip.node() as HTMLElement).style.setProperty('--tail-top', '-10px')\n-      ;(tooltip.node() as HTMLElement).style.setProperty(\n-        '--tail-rotation',\n-        'rotate(90deg)'\n-      )\n-    } else {\n-      tooltip.style('top', verticalMousePos - tipHeight - 10 + 'px')\n-      ;(tooltip.node() as HTMLElement).style.setProperty(\n-        '--tail-top',\n-        tipHeight - 5 + 'px'\n-      )\n-      ;(tooltip.node() as HTMLElement).style.setProperty(\n-        '--tail-rotation',\n-        'rotate(270deg)'\n-      )\n-    }\n-  }\n-\n-  mouseleave(): void {\n-    d3.select('#tooltip')\n-      .transition()\n-      .duration(500)\n-      .style('opacity', 0)\n-      .style('visibility', 'hidden')\n-  }\n-\n-  get colorById(): (repoID: string) => string {\n-    return (repoID: string) => {\n-      const index: number = vxm.repoModule.repoIndex(repoID)\n-      return vxm.colorModule.colorByIndex(index)\n-    }\n-  }\n-\n-  // updating\n-  // eslint-disable-next-line @typescript-eslint/no-empty-function\n-  private resizeListener: () => void = function () {}\n-\n-  private resize() {\n-    const chart = d3.select('#chart').node() as HTMLElement\n-    this.width = chart ? chart.getBoundingClientRect().width : 900\n-    this.height = this.width * 0.6\n-\n-    d3.select('#contextLayer').attr(\n-      'transform',\n-      'translate(0,' + (this.focusHeight + this.margin.between) + ')'\n-    )\n-\n-    this.resetBrush()\n-\n-    d3.select('#mainSvg')\n-      .select('#focusClipRect')\n-      .attr('width', this.innerWidth)\n-      .attr('height', this.focusHeight + 12)\n-\n-    d3.select('#mainSvg')\n-      .select('#contextClipRect')\n-      .attr('width', this.innerWidth + 1 /* 1 px stroke width? */)\n-      .attr('height', this.contextHeight + 2)\n-\n-    this.updateFocus()\n-  }\n-\n-  @Watch('allDataPoints')\n-  @Watch('minTimestamp')\n-  @Watch('maxTimestamp')\n-  @Watch('beginYAtZero')\n-  private updateData() {\n-    this.context = [this.minTimestamp, this.maxTimestamp]\n-    if (this.focus[0] < this.context[0] || this.focus[1] > this.context[1]) {\n-      this.focus = this.context\n-    }\n-    this.resetBrush()\n-    d3.select('#yLabel').text(this.yLabel)\n-    this.updateAxes()\n-    this.drawGraph({ delay: 100, duration: 1000 })\n-  }\n-\n-  private zooming: boolean = true\n-\n-  @Watch('focus')\n-  private updateFocus() {\n-    let animation: {\n-      delay: number\n-      duration: number\n-    } = { delay: 0, duration: 0 }\n-    if (!this.zooming) {\n-      animation = { delay: 100, duration: 1000 }\n-      this.zooming = true\n-    }\n-    this.updateAxes()\n-    this.drawGraph(animation)\n-  }\n-\n-  @Watch('dialogOpen')\n-  private dialogClosed() {\n-    if (!this.dialogOpen) {\n-      this.selectedDatapoint = null\n-    }\n-  }\n-\n-  private resetBrush() {\n-    this.zooming = false\n-    d3.select('#contextLayer')\n-      .select('#brush')\n-      .call(this.brush as any)\n-      .call(this.brush.move as any, this.focus.map(this.xScale(this.context)))\n-  }\n-\n-  private updateAxes() {\n-    ;(d3.select('#focusXAxis') as d3.Selection<\n-      SVGGElement,\n-      unknown,\n-      HTMLElement,\n-      any\n-    >)\n-      .attr('transform', 'translate(0,' + this.focusHeight + ')')\n-      .call(this.focusXAxis())\n-      .selectAll('text')\n-      .attr('transform', 'translate(-10, 10) rotate(-35)')\n-      .style('text-anchor', 'end')\n-    ;(d3.select('#contextXAxis') as d3.Selection<\n-      SVGGElement,\n-      unknown,\n-      HTMLElement,\n-      any\n-    >)\n-      .attr('transform', 'translate(0,' + this.innerHeight + ')')\n-      .call(this.contextXAxis())\n-      .selectAll('text')\n-      .attr('transform', 'translate(-10, 10) rotate(-35)')\n-      .style('text-anchor', 'end')\n-    ;(d3.select('#yAxis') as d3.Selection<\n-      SVGGElement,\n-      unknown,\n-      HTMLElement,\n-      any\n-    >).call(this.yAxis())\n-\n-    d3.select('#yLabel')\n-      .attr('y', -this.margin.left + 30)\n-      .attr('x', -this.focusHeight / 2)\n-  }\n-\n-  private defineSvgElements() {\n-    d3.select('#mainSvg')\n-      .append('g')\n-      .attr('id', 'dataLayer')\n-      .attr(\n-        'transform',\n-        'translate(' + this.margin.left + ',' + this.margin.top + ')'\n-      )\n-\n-    d3.select('#mainSvg')\n-      .append('clipPath')\n-      .attr('id', 'focusClip')\n-      .append('rect')\n-      .attr('id', 'focusClipRect')\n-      .attr('y', -6)\n-      .attr('width', this.innerWidth)\n-      .attr('height', this.focusHeight + 12)\n-\n-    d3.select('#mainSvg')\n-      .append('clipPath')\n-      .attr('id', 'contextClip')\n-      .append('rect')\n-      .attr('id', 'contextClipRect')\n-      .attr('y', -2)\n-      .attr('width', this.innerWidth + 1 /* 1 px stroke width? */)\n-      .attr('height', this.contextHeight + 2)\n-\n-    d3.select('#dataLayer')\n-      .append('g')\n-      .attr('id', 'focusLayer')\n-      .attr('clip-path', 'url(#focusClip)')\n-\n-    d3.select('#dataLayer')\n-      .append('g')\n-      .attr('id', 'contextLayer')\n-      .attr(\n-        'transform',\n-        'translate(0,' + (this.focusHeight + this.margin.between) + ')'\n-      )\n-      .attr('clip-path', 'url(#contextClip)')\n-\n-    d3.select('#contextLayer')\n-      .append('g')\n-      .attr('id', 'brush')\n-      .call(this.brush)\n-      .call(this.brush.move, this.context.map(this.xScale(this.context)))\n-\n-    d3.select('#dataLayer')\n-      .append('g')\n-      .attr('class', 'axis')\n-      .attr('id', 'focusXAxis')\n-      .attr('transform', 'translate(0,' + this.focusHeight + ')')\n-      .call(this.focusXAxis())\n-\n-    d3.select('#dataLayer')\n-      .append('g')\n-      .attr('class', 'axis')\n-      .attr('id', 'yAxis')\n-      .call(this.yAxis())\n-\n-    d3.select('#dataLayer')\n-      .append('g')\n-      .attr('class', 'axis')\n-      .attr('id', 'contextXAxis')\n-      .attr('transform', 'translate(0,' + this.innerHeight + ')')\n-      .call(this.contextXAxis())\n-\n-    d3.select('#dataLayer')\n-      .append('text')\n-      .attr('id', 'yLabel')\n-      .attr('fill', 'currentcolor')\n-      .attr('text-anchor', 'middle')\n-      .attr('transform', 'rotate(-90)')\n-      .attr('y', -this.margin.left + 30)\n-      .attr('x', -this.focusHeight / 2)\n-      .text(this.yLabel)\n-\n-    d3.select('#chart')\n-      .append('div')\n-      .attr('class', 'tooltip')\n-      .attr('id', 'tooltip')\n-      .style('opacity', 0)\n-  }\n-\n-  private async showInDetailGraph() {\n-    if (\n-      !this.selectedDatapoint ||\n-      !vxm.comparisonGraphModule.selectedDimension\n-    ) {\n-      return\n-    }\n-    this.closeDialog()\n-    const dataPoint = this.selectedDatapoint\n-\n-    await showCommitInDetailGraph(\n-      vxm.comparisonGraphModule.selectedDimension,\n-      dataPoint.repoId,\n-      dataPoint.hash,\n-      dataPoint.authorDate,\n-      this.$router\n-    )\n-  }\n-\n-  // initializing\n-  created(): void {\n-    this.resizeListener = () => {\n-      this.resize()\n-    }\n-    window.addEventListener('resize', this.resizeListener)\n-  }\n-\n-  mounted(): void {\n-    d3.select('#mainSvg')\n-      .attr('width', '100%')\n-      .attr('height', '100%')\n-      .attr('align', 'end')\n-      .attr('justify', 'end')\n-    this.resize()\n-  }\n-\n-  // noinspection JSUnusedGlobalSymbols\n-  beforeDestroy(): void {\n-    window.removeEventListener('resize', this.resizeListener)\n-  }\n-\n-  @Watch('graphReferenceElementsColor')\n-  private updateColors() {\n-    this.updateData()\n-  }\n-\n-  private get graphReferenceElementsColor() {\n-    return this.$vuetify.theme.currentTheme.graphReferenceElements as string\n-  }\n-}\n-</script>\n-<style>\n-.axis text {\n-  font-family: Roboto, sans-serif;\n-  font-size: 13px;\n-}\n-\n-.tooltip-table tr td {\n-  padding: 2px;\n-}\n-\n-.tooltip-table tr td:nth-child(2) {\n-  font-family: monospace;\n-}\n-.tooltip-table tr td:first-child {\n-  padding-right: 10px;\n-}\n-.tooltip-table tr td:only-child {\n-  font-weight: bold;\n-  padding-top: 1em;\n-  font-size: 1.1em;\n-}\n-\n-/*noinspection CssUnusedSymbol*/\n-.tooltip {\n-  font-size: 10pt;\n-  position: absolute;\n-  padding: 5px;\n-  border-radius: 5px;\n-  background-color: rgba(0, 0, 0, 0.8);\n-  color: rgba(255, 255, 255, 0.9);\n-  text-align: center;\n-  margin: 0;\n-}\n-\n-/*noinspection CssUnresolvedCustomProperty,CssUnusedSymbol*/\n-.tooltip:after {\n-  content: '';\n-  display: block;\n-  width: 0;\n-  height: 0;\n-  position: absolute;\n-  border-top: 8px solid transparent;\n-  border-bottom: 8px solid transparent;\n-  border-right: 8px solid black;\n-  transform: var(--tail-rotation);\n-  left: var(--tail-left);\n-  top: var(--tail-top);\n-}\n-\n-/*noinspection CssUnusedSymbol*/\n-.information {\n-  text-align: center;\n-  font-size: 18px;\n-  fill: currentColor;\n-  opacity: 0.8;\n-}\n-\n-/*noinspection CssUnusedSymbol*/\n-#referenceLine {\n-  fill: none;\n-  stroke-width: 1px;\n-  stroke-dasharray: 5;\n-}\n-\n-#chart {\n-  position: relative;\n-}\n-\n-/*noinspection CssUnusedSymbol*/\n-.datapointDialog .v-input .v-label {\n-  height: unset !important;\n-}\n-</style>"
  },
  {
    "sha": "aad7704bfac33e00ce7df62a0fbfaf4c4d9a65e1",
    "filename": "frontend/src/components/graphs/DytailGraph.vue",
    "status": "modified",
    "additions": 131,
    "deletions": 139,
    "changes": 270,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/DytailGraph.vue",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/DytailGraph.vue",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/graphs/DytailGraph.vue?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -1,20 +1,18 @@\n <template>\n-  <v-container fluid>\n-    <v-row align=\"center\" justify=\"center\">\n-      <v-col>\n-        <datapoint-dialog\n-          v-if=\"pointDialogDatapoint\"\n-          :dialogOpen=\"pointDialogOpen\"\n-          :selectedDatapoint=\"pointDialogDatapoint\"\n-          :dimension=\"pointDialogDimension\"\n-          @close=\"pointDialogOpen = false\"\n-        ></datapoint-dialog>\n+  <v-container fluid style=\"height: 100%\" class=\"mx-0 px-0\">\n+    <v-row\n+      align=\"center\"\n+      justify=\"center\"\n+      style=\"height: 100%\"\n+      class=\"mx-0 px-0\"\n+    >\n+      <v-col style=\"height: 100%\" class=\"mx-0 px-0\">\n         <div\n           id=\"chart\"\n-          :style=\"{ height: '500px' }\"\n           @wheel=\"$emit('wheel', $event)\"\n+          style=\"height: 100%; width: 100%\"\n         ></div>\n-        <div id=\"ranger\" :style=\"{ height: '500px', height: '30px' }\"></div>\n+        <div id=\"ranger\" :style=\"{ height: '30px' }\"></div>\n       </v-col>\n     </v-row>\n   </v-container>\n@@ -25,14 +23,19 @@ import Vue from 'vue'\n import Component from 'vue-class-component'\n import { Prop, Watch } from 'vue-property-decorator'\n import Dygraph from 'dygraphs'\n-import { DetailDataPoint, Dimension, DimensionId } from '@/store/types'\n+import {\n+  AttributedDatapoint,\n+  DetailDataPoint,\n+  GraphDataPoint,\n+  SeriesId,\n+  SeriesInformation\n+} from '@/store/types'\n import { vxm } from '@/store'\n import 'dygraphs/css/dygraph.css'\n import Crosshair from 'dygraphs/src/extras/crosshair.js'\n import { escapeHtml } from '@/util/TextUtils'\n+import GraphDatapointDialog from '@/components/dialogs/GraphDatapointDialog.vue'\n import { formatDate } from '@/util/TimeUtil'\n-import { debounce, defaultWaitTime } from '@/util/Debouncer.ts'\n-import DetailDatapointDialog from '@/components/dialogs/DetailDatapointDialog.vue'\n \n // eslint-disable-next-line no-undef\n type RealOptions = dygraphs.Options & {\n@@ -42,37 +45,62 @@ type RealOptions = dygraphs.Options & {\n \n @Component({\n   components: {\n-    'datapoint-dialog': DetailDatapointDialog\n+    'datapoint-dialog': GraphDatapointDialog\n   }\n })\n export default class DytailGraph extends Vue {\n   // <!--<editor-fold desc=\"PROPS\">-->\n+  @Prop({ default: false })\n+  private beginYAtZero!: boolean\n+\n   @Prop()\n-  private dimensions!: Dimension[]\n+  private zoomXStartValue!: number | null\n \n-  @Prop({ default: true })\n-  private beginYAtZero!: boolean\n+  @Prop()\n+  private zoomXEndValue!: number | null\n+\n+  @Prop()\n+  private zoomYStartValue!: number | null\n+\n+  @Prop()\n+  private zoomYEndValue!: number | null\n+\n+  @Prop()\n+  private dataRangeMin!: Date\n+\n+  @Prop()\n+  private dataRangeMax!: Date\n \n-  @Prop({ default: true })\n-  private dayEquidistant!: boolean\n+  @Prop()\n+  private datapoints!: GraphDataPoint[]\n+\n+  @Prop()\n+  private seriesInformation!: SeriesInformation[]\n+\n+  @Prop()\n+  private visiblePointCount!: number\n+\n+  @Prop({ default: null })\n+  private commitToCompare!: AttributedDatapoint | null\n+\n+  @Prop({ default: null })\n+  private referenceDatapoint!: AttributedDatapoint | null\n+\n+  @Prop({ default: 0 })\n+  private refreshKey!: number\n   // <!--</editor-fold>-->\n \n   // <!--<editor-fold desc=\"FIELDS\">-->\n   private graph!: Dygraph\n-  private height: number = 500\n \n   // >>>> Datapoint Dialog >>>>\n   private pointDialogDatapoint: DetailDataPoint | null = null\n-  private pointDialogDimension: Dimension | null = null\n+  private pointDialogSeries: SeriesInformation | null = null\n   private pointDialogOpen: boolean = false\n   // <<<< Datapoint Dialog <<<<\n   //  <!--</editor-fold>-->\n \n   // <!--<editor-fold desc=\"DATA POINTS\">-->\n-  private get datapoints(): DetailDataPoint[] {\n-    return vxm.detailGraphModule.detailGraph\n-  }\n-\n   /**\n    * The only possibility one has to find the (abstract) data point for a given\n    * point in the graph is to go by x axis position ( = the committer date).\n@@ -86,25 +114,25 @@ export default class DytailGraph extends Vue {\n     authorDate: number\n   ): DetailDataPoint | undefined {\n     return this.datapoints.find(\n-      point => point.positionDate.getTime() === authorDate\n-    )\n+      point => point.positionTime.getTime() === authorDate\n+    ) as DetailDataPoint | undefined\n   }\n \n   /**\n    * Returns the first DataPoint that contains a (successful) benchmark for a given\n    * dimension, therefore providing a value by which it can be placed in the graph\n    *\n-   * @param dimension: the ID of the dimension of interest\n+   * @param series: the ID of the series of interest\n    * @private\n    */\n-  private firstSuccessful(dimension: DimensionId): number {\n+  private firstSuccessful(series: SeriesId): number {\n     for (const datapoint of this.datapoints) {\n-      const value = datapoint.values.get(dimension)\n+      const value = datapoint.values.get(series)\n       if (typeof value === 'number') {\n         return value\n       }\n     }\n-    return this.height / 2\n+    return 0\n   }\n \n   //  <!--</editor-fold>-->\n@@ -114,6 +142,8 @@ export default class DytailGraph extends Vue {\n    * initialize graph with all options, but without data\n    */\n   mounted(): void {\n+    window.addEventListener('resize', this.onResize)\n+\n     // empty string because div is not expected to be NULL\n     const chartDiv = document.getElementById('chart') || ''\n \n@@ -146,7 +176,7 @@ export default class DytailGraph extends Vue {\n             axisLineColor: 'currentColor'\n           }\n         },\n-        ylabel: this.yLabel,\n+        ylabel: '',\n         pointClickCallback: this.pointClickCallback,\n         labels: ['', ''], // will be replaced in update\n         legend: 'follow',\n@@ -178,24 +208,34 @@ export default class DytailGraph extends Vue {\n     this.update()\n   }\n \n+  private beforeDestroy() {\n+    window.removeEventListener('resize', this.onResize)\n+  }\n+\n+  private onResize() {\n+    window.requestAnimationFrame(() => {\n+      this.graph.resize()\n+    })\n+  }\n+\n   @Watch('datapoints')\n   @Watch('dimensions')\n   @Watch('beginYAtZero')\n   @Watch('darkTheme')\n-  @Watch('dayEquidistant')\n+  @Watch('refreshKey')\n   private update() {\n     const data: number[][] = []\n \n     // One array entry = #dimensions data points per commit\n     // each array entry has the form [x-val, dim1, dim2, ...]\n     for (let i = 0; i < this.datapoints.length; i++) {\n-      data[i] = [this.datapoints[i].positionDate.getTime()]\n+      data[i] = [this.datapoints[i].positionTime.getTime()]\n     }\n \n-    for (const dimension of this.dimensions) {\n-      let lastValue = this.firstSuccessful(dimension)\n+    for (const series of this.seriesInformation) {\n+      let lastValue = this.firstSuccessful(series.id)\n       this.datapoints.forEach((point, index) => {\n-        let pointValue = point.values.get(dimension)\n+        let pointValue = point.values.get(series.id)\n         if (typeof pointValue !== 'number') {\n           pointValue = lastValue\n         }\n@@ -207,18 +247,13 @@ export default class DytailGraph extends Vue {\n \n     this.graph.updateOptions({\n       file: data,\n-      labels: ['x', ...this.dimensions.map(it => escapeHtml(it.toString()))],\n-      colors: this.dimensionsColors(),\n+      labels: ['x', ...this.seriesInformation.map(it => escapeHtml(it.id))],\n+      colors: this.seriesInformation.map(it => it.color),\n       dateWindow: [\n-        vxm.detailGraphModule.zoomXStartValue ||\n-          vxm.detailGraphModule.startTime.getTime(),\n-        vxm.detailGraphModule.zoomXEndValue ||\n-          vxm.detailGraphModule.endTime.getTime()\n-      ],\n-      valueRange: [\n-        vxm.detailGraphModule.zoomYStartValue,\n-        vxm.detailGraphModule.zoomYEndValue\n+        this.zoomXStartValue || this.dataRangeMin.getTime(),\n+        this.zoomXEndValue || this.dataRangeMax.getTime()\n       ],\n+      valueRange: [this.zoomYStartValue, this.zoomYEndValue],\n       includeZero: this.beginYAtZero,\n       rangeSelectorPlotLineWidth: this.selectorLineWidth,\n       rangeSelectorAlpha: this.selectorAlpha\n@@ -240,17 +275,6 @@ export default class DytailGraph extends Vue {\n     )\n   }\n \n-  /**\n-   * if only the values for one metric are displayed in the graph, the\n-   * y axis is labeled\n-   */\n-  private get yLabel(): string {\n-    if (this.dimensions.length === 1) {\n-      return this.dimensions[0].metric + ' in ' + this.dimensions[0].unit\n-    }\n-    return ''\n-  }\n-\n   /**\n    * formats the date that determines the x axis position of a data point, depending on the length\n    * of the timespan currently displayed on the x axis:\n@@ -294,25 +318,30 @@ export default class DytailGraph extends Vue {\n       // Sort them so the order corresponds to the order of the lines\n       data.sort((a, b) => b.y - a.y)\n \n-      const dimensionRows = data.map(val => {\n-        const safeDimension = escapeHtml(val.labelHTML)\n+      const seriesRows = data.map(val => {\n         const color = val.color\n-        const dimension = this.dimensions.find(\n-          it => escapeHtml(it.toString()) === val.labelHTML\n+        const series = this.seriesInformation.find(\n+          it => escapeHtml(it.id.toString()) === val.labelHTML\n         )\n+        let safeSeriesId = 'N/A'\n+        if (series !== undefined) {\n+          safeSeriesId = escapeHtml(series.displayName)\n+        }\n \n         let value: string = this.numberFormat.format(val.y)\n-        if (dimension && datapoint.unbenchmarked(dimension)) {\n-          value = 'Unbenchmarked'\n-        } else if (dimension && !datapoint.successful(dimension)) {\n+        if (series && datapoint.commitUnbenchmarked(series.id)) {\n+          value = 'Commit was not benchmarked'\n+        } else if (series && datapoint.metricNotBenchmarked(series.id)) {\n+          value = 'Metric not measured for commit'\n+        } else if (series && !datapoint.successful(series.id)) {\n           value = 'Failed'\n         }\n \n         return `\n                 <tr>\n                   <td>\n                     <span class=\"color-preview\" style=\"background-color: ${color}\"></span>\n-                    ${safeDimension}\n+                    ${safeSeriesId}\n                   </td>\n                   <td>${value}</td>\n                 </tr>\n@@ -322,23 +351,20 @@ export default class DytailGraph extends Vue {\n       return `<table class=\"dygraphs-tooltip-table\">\n                   <tr>\n                     <td>Hash</td>\n-                    <td>${datapoint ? escapeHtml(datapoint.hash) : 'xxx'}</td>\n+                    <td>${escapeHtml(datapoint.hash)}</td>\n                   </tr>\n                   </tr>\n                     <td>Message</td>\n-                    <td>${\n-                      datapoint ? escapeHtml(datapoint.summary) : 'xxx'\n-                    }</td>\n+                    <td>${escapeHtml(datapoint.summary)}</td>\n                   </tr>\n                   <tr>\n                     <td>Author</td>\n                     <td>\n-                      ${datapoint ? escapeHtml(datapoint.author) : 'xxx'} at ${\n-        datapoint ? formatDate(datapoint.committerDate) : 'xxx'\n-      }\n+                      ${escapeHtml(datapoint.author)} at\n+                      ${formatDate(datapoint.committerTime)}\n                     </td>\n                   </tr>\n-                 ${dimensionRows.join('\\n')}\n+                 ${seriesRows.join('\\n')}\n               </table>\n             `\n     }\n@@ -355,16 +381,6 @@ export default class DytailGraph extends Vue {\n     return vxm.userModule.darkThemeSelected\n   }\n \n-  private dimensionColor(dimension: DimensionId) {\n-    return vxm.colorModule.colorByIndex(\n-      vxm.detailGraphModule.colorIndex(dimension)!\n-    )\n-  }\n-\n-  private dimensionsColors(): string[] {\n-    return this.dimensions.map(this.dimensionColor)\n-  }\n-\n   private get graphFailedOrUnbenchmarkedColor() {\n     return this.$vuetify.theme.currentTheme.graphFailedOrUnbenchmarked as string\n   }\n@@ -408,17 +424,17 @@ export default class DytailGraph extends Vue {\n     pointSize: number,\n     idx: number\n   ) {\n-    const datapoint: DetailDataPoint = this.datapoints[idx]\n-    const dimension: DimensionId | undefined = this.dimensions.find(\n-      it => it.benchmark + ' - ' + it.metric === seriesName\n+    const datapoint: DetailDataPoint = this.datapoints[idx] as DetailDataPoint\n+    const series = this.seriesInformation.find(\n+      it => it.id.toString() === seriesName\n     )\n-    if (!dimension) {\n+    if (!series) {\n       return\n     }\n \n     canvasContext.strokeStyle = color\n \n-    if (datapoint.failed(dimension)) {\n+    if (datapoint.failed(series.id)) {\n       // gray cross icon\n       canvasContext.beginPath()\n       canvasContext.strokeStyle = this.graphFailedOrUnbenchmarkedColor\n@@ -431,7 +447,7 @@ export default class DytailGraph extends Vue {\n       canvasContext.lineTo(cx - pointSize, cy + pointSize)\n       canvasContext.stroke()\n       canvasContext.closePath()\n-    } else if (datapoint.unbenchmarked(dimension)) {\n+    } else if (datapoint.unbenchmarked(series.id)) {\n       // grey empty circle\n       canvasContext.beginPath()\n       canvasContext.lineWidth = 2\n@@ -457,10 +473,10 @@ export default class DytailGraph extends Vue {\n   private drawMarkers() {\n     const annotations = []\n     if (vxm.detailGraphModule.referenceDatapoint) {\n-      const { dimension, dataPoint } = vxm.detailGraphModule.referenceDatapoint\n+      const { seriesId, datapoint } = vxm.detailGraphModule.referenceDatapoint\n       annotations.push({\n-        series: dimension.toString(),\n-        x: dataPoint.committerDate.getTime(),\n+        series: seriesId,\n+        x: datapoint.positionTime.getTime(),\n         shortText: 'R',\n         text: 'Reference datapoint',\n         width: 20,\n@@ -497,34 +513,18 @@ export default class DytailGraph extends Vue {\n     // Datapoint dialog on right click\n     if (e.button === 2) {\n       this.pointDialogDatapoint = datapoint\n-      this.pointDialogDimension = this.dimensions.find(\n-        it => it.toString() === graphPoint.name\n+      this.pointDialogSeries = this.seriesInformation.find(\n+        it => it.id.toString() === graphPoint.name\n       )!\n       this.pointDialogOpen = true\n \n       return\n     }\n \n-    // New tab on control\n-    if (e.ctrlKey) {\n-      const routeData = this.$router.resolve({\n-        name: 'run-detail',\n-        params: {\n-          first: vxm.detailGraphModule.selectedRepoId,\n-          second: datapoint.hash\n-        }\n-      })\n-      window.open(routeData.href, '_blank')\n-    } else {\n-      // open it in place on a normal left click\n-      this.$router.push({\n-        name: 'run-detail',\n-        params: {\n-          first: vxm.detailGraphModule.selectedRepoId,\n-          second: datapoint.hash\n-        }\n-      })\n-    }\n+    this.$emit('click', {\n+      datapoint: datapoint,\n+      ctrl: e.ctrlKey\n+    })\n   }\n \n   /**\n@@ -552,20 +552,12 @@ export default class DytailGraph extends Vue {\n    * @private\n    */\n   private dygraphsPanned() {\n-    if (vxm.detailGraphModule.endTime.getTime() < this.graph.xAxisRange()[1]) {\n-      debounce(() => {\n-        vxm.detailGraphModule.fetchDetailGraph()\n-        vxm.detailGraphModule.endTime = new Date(this.graph.xAxisRange()[1])\n-        vxm.detailGraphModule.zoomXEndValue = this.graph.xAxisRange()[1]\n-      }, defaultWaitTime)()\n-    } else if (\n-      vxm.detailGraphModule.startTime.getTime() > this.graph.xAxisRange()[0]\n-    ) {\n-      debounce(() => {\n-        vxm.detailGraphModule.fetchDetailGraph()\n-        vxm.detailGraphModule.startTime = new Date(this.graph.xAxisRange()[0])\n-        vxm.detailGraphModule.zoomXStartValue = this.graph.xAxisRange()[0]\n-      }, defaultWaitTime)()\n+    if (this.dataRangeMax.getTime() < this.graph.xAxisRange()[1]) {\n+      this.$emit('update:dataRangeMax', new Date(this.graph.xAxisRange()[1]))\n+      this.$emit('update:zoomXEndValue', this.graph.xAxisRange()[1])\n+    } else if (this.dataRangeMin.getTime() > this.graph.xAxisRange()[0]) {\n+      this.$emit('update:dataRangeMin', new Date(this.graph.xAxisRange()[0]))\n+      this.$emit('update:zoomXStartValue', this.graph.xAxisRange()[0])\n     }\n   }\n \n@@ -575,20 +567,20 @@ export default class DytailGraph extends Vue {\n     yRanges: [number, number][]\n   ) {\n     if (this.graph.isZoomed('x')) {\n-      vxm.detailGraphModule.zoomXStartValue = startX\n-      vxm.detailGraphModule.zoomXEndValue = endX\n+      this.$emit('update:zoomXStartValue', startX)\n+      this.$emit('update:zoomXEndValue', endX)\n     } else {\n-      vxm.detailGraphModule.zoomXStartValue = vxm.detailGraphModule.startTime.getTime()\n-      vxm.detailGraphModule.zoomXEndValue = vxm.detailGraphModule.endTime.getTime()\n+      this.$emit('update:zoomXStartValue', this.dataRangeMin.getTime())\n+      this.$emit('update:zoomXEndValue', this.dataRangeMax.getTime())\n     }\n \n     if (this.graph.isZoomed('y')) {\n       const [yZoomStart, yZoomEnd] = yRanges[0]\n-      vxm.detailGraphModule.zoomYStartValue = yZoomStart\n-      vxm.detailGraphModule.zoomYEndValue = yZoomEnd\n+      this.$emit('update:zoomYStartValue', yZoomStart)\n+      this.$emit('update:zoomYEndValue', yZoomEnd)\n     } else {\n-      vxm.detailGraphModule.zoomYStartValue = null\n-      vxm.detailGraphModule.zoomYEndValue = null\n+      this.$emit('update:zoomYStartValue', null)\n+      this.$emit('update:zoomYEndValue', null)\n     }\n   }\n "
  },
  {
    "sha": "4d17e97ed2c5e403c73b303d78f913630776ee9d",
    "filename": "frontend/src/components/graphs/EchartsDetailGraph.vue",
    "status": "modified",
    "additions": 217,
    "deletions": 187,
    "changes": 404,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/EchartsDetailGraph.vue",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/EchartsDetailGraph.vue",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/graphs/EchartsDetailGraph.vue?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -1,15 +1,20 @@\n <template>\n-  <v-container fluid class=\"mt-0 pt-0\">\n-    <v-row align=\"center\" justify=\"center\">\n-      <v-col>\n-        <datapoint-dialog\n+  <v-container fluid class=\"mt-0 pt-0 full-height\">\n+    <v-row align=\"center\" justify=\"center\" class=\"full-height\" no-gutters>\n+      <v-col class=\"full-height\">\n+        <slot\n+          name=\"dialog\"\n           v-if=\"pointDialogDatapoint\"\n-          :dialogOpen=\"pointDialogOpen\"\n-          :selectedDatapoint=\"pointDialogDatapoint\"\n-          :dimension=\"pointDialogDimension\"\n-          @close=\"pointDialogOpen = false\"\n-        ></datapoint-dialog>\n-        <div id=\"chart-container\" @wheel.capture=\"$emit('wheel', $event)\">\n+          :dialog-open=\"pointDialogOpen\"\n+          :selected-datapoint=\"pointDialogDatapoint\"\n+          :series-information=\"pointDialogSeries\"\n+          :closeDialog=\"() => (pointDialogOpen = false)\"\n+        ></slot>\n+        <div\n+          id=\"chart-container\"\n+          @wheel.capture=\"$emit('wheel', $event)\"\n+          class=\"full-height\"\n+        >\n           <v-chart\n             ref=\"chart\"\n             :autoresize=\"true\"\n@@ -18,7 +23,7 @@\n             @datazoom=\"echartsZoomed\"\n             @contextmenu=\"echartsOpenContextMenu\"\n             @click=\"echartsClicked\"\n-            @restore=\"echartsZoomReset\"\n+            @restore=\"$emit('reset-zoom')\"\n           />\n         </div>\n       </v-col>\n@@ -30,10 +35,10 @@\n import Vue from 'vue'\n import Component from 'vue-class-component'\n import {\n-  DetailDataPoint,\n-  Dimension,\n-  DimensionId,\n-  dimensionIdEqual\n+  AttributedDatapoint,\n+  GraphDataPoint,\n+  SeriesId,\n+  SeriesInformation\n } from '@/store/types'\n import { Prop, Watch } from 'vue-property-decorator'\n import EChartsComp from 'vue-echarts'\n@@ -64,12 +69,8 @@ import {\n   MarkPointComponentOption\n } from 'echarts/components'\n import { use, ComposeOption } from 'echarts/core'\n-import { vxm } from '@/store'\n-import DetailDatapointDialog from '@/components/dialogs/DetailDatapointDialog.vue'\n-import { DimensionDetailPoint } from '@/store/modules/detailGraphStore'\n-import { formatDate } from '@/util/TimeUtil'\n import { escapeHtml } from '@/util/TextUtils'\n-import { CustomKeyEqualsMap } from '@/util/CustomKeyEqualsMap'\n+import { formatDate } from '@/util/TimeUtil'\n \n use([\n   LineChart,\n@@ -101,17 +102,40 @@ type ECOption = ComposeOption<\n >\n \n type ValidEchartsSeries = LineSeriesOption | GraphSeriesOption\n-type SeriesGenerationFunction = (id: DimensionId) => ValidEchartsSeries\n+type SeriesGenerationFunction = (\n+  seriesInformation: SeriesInformation\n+) => ValidEchartsSeries\n \n-type BenchmarkStatus = 'success' | 'failed' | 'unbenchmarked'\n+type BenchmarkStatus = 'success' | 'failed' | 'no-such-metric' | 'unbenchmarked'\n \n const crossIcon =\n   'path://M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z'\n \n+/*\n+FIXME: Delete this\n+Echarts needs:\n+  1. X-axis value (time)\n+  2. **Y-axis value** (based on the *series*)\n+  3. A symbol / benchmark status\n+  4. A unique name used by the graph series\n+  5. A color\n+  6. Enough for a **tooltip** (author / summary right now)\n+\n+Echarts datapoints are grouped by dimension. We could introduce a more general \"Series[Key]\" type for that.\n+\n+That could then also tell you how to extract a y value and color.\n+\n+Tooltips are too custom, they'd need to be done differently. Inject a tooltip formatter as property?\n+\n+We need some shared state with 2-way binding for the dialog and graph that should be persisted:\n+  - Reference datapoint (series key, value)\n+  - Comparison datapoint (series key, name)\n+  - Zoom levels (X / Y axis)\n+ */\n+\n class EchartsDataPoint {\n   // convenience methods for accessing the value\n-  readonly time: Date\n-  readonly committerDate: Date\n+  readonly positionTime: Date\n   readonly dataValue: number\n \n   // Used to display the symbol\n@@ -137,60 +161,80 @@ class EchartsDataPoint {\n     borderWidth: number\n   }\n \n-  readonly summary: string\n-  readonly author: string\n   readonly benchmarkStatus: BenchmarkStatus\n \n   constructor(\n-    time: Date,\n-    committerDate: Date,\n+    positionTime: Date,\n     dataValue: number,\n     benchmarkStatus: BenchmarkStatus,\n     name: string,\n     color: string,\n-    borderColor: string,\n-    summary: string,\n-    author: string\n+    borderColor: string\n   ) {\n-    this.time = time\n-    this.committerDate = committerDate\n+    this.positionTime = positionTime\n     this.dataValue = dataValue\n-    this.value = [this.time, this.dataValue]\n+    this.value = [this.positionTime, this.dataValue]\n     this.benchmarkStatus = benchmarkStatus\n     this.name = name\n     this.itemStyle = {\n       color: color,\n       borderColor: borderColor,\n       borderWidth: 2\n     }\n-    this.summary = summary\n-    this.author = author\n \n-    if (benchmarkStatus === 'success' || benchmarkStatus === 'unbenchmarked') {\n-      this.symbol = 'circle'\n-    } else {\n+    if (benchmarkStatus === 'failed') {\n       this.symbol = crossIcon\n+    } else {\n+      this.symbol = 'circle'\n     }\n   }\n }\n \n @Component({\n   components: {\n-    'datapoint-dialog': DetailDatapointDialog,\n     'v-chart': EChartsComp\n   }\n })\n export default class EchartsDetailGraph extends Vue {\n   // <!--<editor-fold desc=\"PROPS\">-->\n-  // noinspection JSMismatchedCollectionQueryUpdate\n+  @Prop({ default: false })\n+  private readonly beginYAtZero!: boolean\n+\n   @Prop()\n-  private dimensions!: Dimension[]\n+  private readonly zoomXStartValue!: number | null\n \n-  @Prop({ default: false })\n-  private beginYAtZero!: boolean\n+  @Prop()\n+  private readonly zoomXEndValue!: number | null\n+\n+  @Prop()\n+  private readonly zoomYStartValue!: number | null\n \n-  @Prop({ default: true })\n-  private dayEquidistant!: boolean\n+  @Prop()\n+  private readonly zoomYEndValue!: number | null\n+\n+  @Prop()\n+  private readonly dataRangeMin!: Date\n+\n+  @Prop()\n+  private readonly dataRangeMax!: Date\n+\n+  @Prop()\n+  private readonly datapoints!: GraphDataPoint[]\n+\n+  @Prop()\n+  private readonly seriesInformation!: SeriesInformation[]\n+\n+  @Prop()\n+  private readonly visiblePointCount!: number\n+\n+  @Prop({ default: null })\n+  private readonly commitToCompare!: AttributedDatapoint | null\n+\n+  @Prop({ default: null })\n+  private readonly referenceDatapoint!: AttributedDatapoint | null\n+\n+  @Prop({ default: 0 })\n+  private readonly refreshKey!: number\n   // <!--</editor-fold>-->\n \n   // <!--<editor-fold desc=\"FIELDS\">-->\n@@ -199,19 +243,17 @@ export default class EchartsDetailGraph extends Vue {\n \n   // >>>> Datapoint Dialog >>>>\n   private pointDialogOpen: boolean = false\n-  private pointDialogDatapoint: DetailDataPoint | null = null\n-  private pointDialogDimension: Dimension | null = null\n+  private pointDialogDatapoint: GraphDataPoint | null = null\n+  private pointDialogSeries: SeriesInformation | null = null\n   // <<<< Datapoint Dialog <<<<\n   //  <!--</editor-fold>-->\n \n-  private get detailDataPoints(): DetailDataPoint[] {\n-    return vxm.detailGraphModule.detailGraph\n-  }\n-\n   // <!--<editor-fold desc=\"ECHARTS GRAPH OPTIONS\">-->\n-  @Watch('detailDataPoints')\n+  @Watch('datapoints')\n   @Watch('beginYAtZero')\n-  @Watch('dayEquidistant')\n+  @Watch('dataRangeMin')\n+  @Watch('dataRangeMax')\n+  @Watch('refreshKey')\n   @Watch('graphFailedOrUnbenchmarkedColor') // DataPoints need adjusting, they store the color\n   private updateGraph() {\n     console.log('Echarts updated')\n@@ -226,8 +268,8 @@ export default class EchartsDetailGraph extends Vue {\n       },\n       xAxis: {\n         type: 'time',\n-        min: vxm.detailGraphModule.startTime.getTime(),\n-        max: vxm.detailGraphModule.endTime.getTime(),\n+        min: this.dataRangeMin.getTime(),\n+        max: this.dataRangeMax.getTime(),\n         axisLabel: {\n           formatter: {\n             year: '{MMM}\\n{yyyy}',\n@@ -265,23 +307,23 @@ export default class EchartsDetailGraph extends Vue {\n           xAxisIndex: [0],\n           type: 'inside',\n           // Start at the correct place when changing the series type\n-          startValue: vxm.detailGraphModule.zoomXStartValue || undefined,\n-          endValue: vxm.detailGraphModule.zoomXEndValue || undefined\n+          startValue: this.zoomXStartValue || undefined,\n+          endValue: this.zoomXEndValue || undefined\n         },\n         {\n           id: 'y',\n           type: 'inside',\n           yAxisIndex: [0],\n-          startValue: vxm.detailGraphModule.zoomYStartValue || undefined,\n-          endValue: vxm.detailGraphModule.zoomYEndValue || undefined,\n+          startValue: this.zoomYStartValue || undefined,\n+          endValue: this.zoomYEndValue || undefined,\n           zoomOnMouseWheel: false\n         },\n         {\n           id: 'xAxis',\n           type: 'slider',\n           // Start at the correct place when changing the series type\n-          startValue: vxm.detailGraphModule.zoomXStartValue || undefined,\n-          endValue: vxm.detailGraphModule.zoomXEndValue || undefined\n+          startValue: this.zoomXStartValue || undefined,\n+          endValue: this.zoomXEndValue || undefined\n         }\n       ],\n       tooltip: {\n@@ -291,143 +333,147 @@ export default class EchartsDetailGraph extends Vue {\n         formatter: this.tooltipFormatter,\n         confine: true\n       },\n-      series: this.dimensions.map(this.seriesGenerator)\n+      series: this.seriesInformation.map(this.seriesGenerator)\n     }\n \n     this.updateReferenceDatapoint()\n     this.updateMarkPoints()\n   }\n \n+  @Watch('visibleDataPoints')\n+  private onVisibleDatapointsChange() {\n+    if (this.selectAppropriateSeries() === 're-render') {\n+      this.updateGraph()\n+    }\n+  }\n+\n   // The correct type is not exposed sadly\n   private tooltipFormatter(params: any) {\n     const values = Array.isArray(params) ? params.slice() : [params]\n     // Sort them so the order corresponds to the order of the lines\n     values.sort((a, b) => {\n       const first = a.data as EchartsDataPoint\n       const second = b.data as EchartsDataPoint\n-\n       return second.dataValue - first.dataValue\n     })\n-\n-    const dimensionRows = values.map(val => {\n-      const dimension = this.dimensions[val.seriesIndex || 0]\n-      const color = this.dimensionColor(dimension)\n+    const seriesRows = values.map(val => {\n+      const seriesInformation = this.seriesInformation[val.seriesIndex || 0]\n+      const color = seriesInformation.color\n       const datapoint = val.data as EchartsDataPoint\n-      const safeBenchmark = escapeHtml(dimension.benchmark)\n-      const safeMetric = escapeHtml(dimension.metric)\n-\n+      const safeDisplayName = escapeHtml(seriesInformation.displayName)\n       let value: string\n       if (datapoint.benchmarkStatus === 'success') {\n         value = this.numberFormat.format(datapoint.dataValue)\n       } else if (datapoint.benchmarkStatus === 'unbenchmarked') {\n-        value = 'Unbenchmarked'\n+        value = 'Commit was not benchmarked'\n+      } else if (datapoint.benchmarkStatus === 'no-such-metric') {\n+        value = 'Metric not measured for commit'\n       } else {\n         value = 'Failed'\n       }\n-\n       return `\n                 <tr>\n                   <td>\n                     <span class=\"color-preview\" style=\"background-color: ${color}\"></span>\n-                    ${safeBenchmark} - ${safeMetric}\n+                    ${safeDisplayName}\n                   </td>\n                   <td>${value}</td>\n                 </tr>\n                 `\n     })\n-\n     const samplePoint = values[0].data as EchartsDataPoint\n+    const point = this.datapoints.find(it => it.uid === samplePoint.name)\n+\n+    if (!point) {\n+      return 'No point found :/'\n+    }\n \n-    const committerDate = formatDate(samplePoint.committerDate)\n+    const committerDate = formatDate(point.committerTime)\n     return `\n-                <table class=\"echarts-tooltip-table\">\n-                  <tr>\n-                    <td>Hash</td>\n-                    <td>${escapeHtml(samplePoint.name)}</td>\n-                  </tr>\n-                  </tr>\n-                    <td>Message</td>\n-                    <td>${escapeHtml(samplePoint.summary)}</td>\n-                  </tr>\n-                  <tr>\n-                    <td>Author</td>\n-                    <td>\n-                      ${escapeHtml(samplePoint.author)} at ${committerDate}\n-                    </td>\n-                  </tr>\n-                  ${dimensionRows.join('\\n')}\n-                </table>\n+           <table class=\"echarts-tooltip-table\">\n+             <tr>\n+               <td>Hash</td>\n+               <td>${escapeHtml(point.hash)}</td>\n+             </tr>\n+             </tr>\n+               <td>Message</td>\n+               <td>${escapeHtml(point.summary)}</td>\n+             </tr>\n+             <tr>\n+               <td>Author</td>\n+               <td>\n+                 ${escapeHtml(point.author)} at ${committerDate}\n+               </td>\n+             </tr>\n+             ${seriesRows.join('\\n')}\n+           </table>\n             `\n   }\n-\n   // <!--</editor-fold>-->\n \n   // <!--<editor-fold desc=\"SERIES GENERATION\">-->\n-  private findFirstSuccessful = (dimension: DimensionId) => {\n-    const point = this.detailDataPoints.find(it => it.successful(dimension))\n+  private findFirstSuccessful = (seriesId: SeriesId) => {\n+    const point = this.datapoints.find(it => it.successful(seriesId))\n \n     if (point) {\n-      return point.values.get(dimension) as number\n+      return point.values.get(seriesId) as number\n     }\n     return 0\n   }\n \n-  private buildPointsForSingleDimension(dimension: DimensionId) {\n-    let lastSuccessfulValue: number = this.findFirstSuccessful(dimension)\n-    return this.detailDataPoints.map(point => {\n+  private buildPointsForSeries(seriesInformation: SeriesInformation) {\n+    const seriesId = seriesInformation.id\n+    let lastSuccessfulValue: number = this.findFirstSuccessful(seriesId)\n+    return this.datapoints.map(point => {\n       let benchmarkStatus: BenchmarkStatus = 'success'\n-      let color = this.dimensionColor(dimension)\n+      let color = seriesInformation.color\n       let borderColor = color\n \n-      let pointValue = point.values.get(dimension)\n+      let pointValue = point.values.get(seriesId)\n       if (typeof pointValue !== 'number') {\n         pointValue = lastSuccessfulValue\n       }\n       lastSuccessfulValue = pointValue\n \n-      if (point.failed(dimension)) {\n+      if (point.failed(seriesId)) {\n         // grey circle\n         benchmarkStatus = 'failed'\n         color = this.graphFailedOrUnbenchmarkedColor\n         borderColor = color\n-      } else if (point.unbenchmarked(dimension)) {\n-        benchmarkStatus = 'unbenchmarked'\n+      } else if (point.unbenchmarked(seriesId)) {\n+        benchmarkStatus = point.commitUnbenchmarked(seriesId)\n+          ? 'unbenchmarked'\n+          : 'no-such-metric'\n         // empty circle with outline\n         color = this.graphBackgroundColor\n         borderColor = this.graphFailedOrUnbenchmarkedColor\n       }\n \n       return new EchartsDataPoint(\n-        point.positionDate,\n-        point.committerDate,\n+        point.positionTime,\n         pointValue,\n         benchmarkStatus,\n-        point.hash,\n+        point.uid,\n         color,\n-        borderColor,\n-        point.summary,\n-        point.author\n+        borderColor\n       )\n     })\n   }\n \n-  private get echartsDataPoints(): Map<DimensionId, EchartsDataPoint[]> {\n-    const map: Map<DimensionId, EchartsDataPoint[]> = new CustomKeyEqualsMap(\n-      [],\n-      dimensionIdEqual\n-    )\n+  private get echartsDataPoints(): Map<SeriesId, EchartsDataPoint[]> {\n+    const map: Map<SeriesId, EchartsDataPoint[]> = new Map([])\n \n-    this.dimensions.forEach(dimension => {\n-      map.set(dimension, this.buildPointsForSingleDimension(dimension))\n+    this.seriesInformation.forEach(series => {\n+      map.set(series.id, this.buildPointsForSeries(series))\n     })\n \n     return map\n   }\n \n-  private buildLineSeries(dimension: DimensionId): LineSeriesOption {\n+  private buildLineSeries(series: SeriesInformation): LineSeriesOption {\n     // noinspection JSMismatchedCollectionQueryUpdate\n     const echartPoints: EchartsDataPoint[] = this.echartsDataPoints.get(\n-      dimension\n+      series.id\n     )!\n \n     return {\n@@ -436,21 +482,21 @@ export default class EchartsDetailGraph extends Vue {\n       symbol: ((value: EchartsDataPoint) => value.symbol) as any,\n       symbolSize: 6,\n       lineStyle: {\n-        color: this.dimensionColor(dimension)\n+        color: series.color\n       },\n       data: echartPoints as any\n     }\n   }\n \n-  private buildGraphSeries(dimension: DimensionId): GraphSeriesOption {\n+  private buildGraphSeries(series: SeriesInformation): GraphSeriesOption {\n     // noinspection JSMismatchedCollectionQueryUpdate\n     const echartPoints: EchartsDataPoint[] = this.echartsDataPoints.get(\n-      dimension\n+      series.id\n     )!\n-    const links = this.detailDataPoints.flatMap(point => {\n-      return point.parents.map(parent => ({\n-        source: point.hash,\n-        target: parent\n+    const links = this.datapoints.flatMap(point => {\n+      return point.parentUids.map(parentUid => ({\n+        source: point.uid,\n+        target: parentUid\n       }))\n     })\n \n@@ -470,7 +516,7 @@ export default class EchartsDetailGraph extends Vue {\n       symbol: ((value: EchartsDataPoint) => value.symbol) as any,\n       symbolSize: 6,\n       lineStyle: {\n-        color: this.dimensionColor(dimension)\n+        color: series.color\n       },\n       links: links,\n       data: echartPoints as any\n@@ -483,7 +529,7 @@ export default class EchartsDetailGraph extends Vue {\n    * If the number is manageable, the graph type will be selected.\n    */\n   private selectAppropriateSeries(): 're-render' | 'unchanged' {\n-    const visibleDataPoints = vxm.detailGraphModule.visiblePoints\n+    const visibleDataPoints = this.visiblePointCount\n     const newGenerator: SeriesGenerationFunction =\n       visibleDataPoints > 200 ? this.buildLineSeries : this.buildGraphSeries\n \n@@ -502,30 +548,22 @@ export default class EchartsDetailGraph extends Vue {\n   // <!--</editor-fold>-->\n \n   // <!--<editor-fold desc=\"REFERENCE LINE, COMPARE\">-->\n-  private get commitToCompare(): DimensionDetailPoint | null {\n-    return vxm.detailGraphModule.commitToCompare\n-  }\n-\n-  private get referenceDatapoint() {\n-    return vxm.detailGraphModule.referenceDatapoint\n-  }\n-\n   private get showReferenceMarkers() {\n     if (!this.referenceDatapoint) {\n       return false\n     }\n-    const dimensions = this.referenceDatapoint.dimension\n+    const seriesId = this.referenceDatapoint.seriesId\n \n-    return this.dimensions.find(it => it.equals(dimensions))\n+    return this.seriesInformation.find(it => it.id === seriesId)\n   }\n \n   private get showCommitToCompareMarker() {\n     if (!this.commitToCompare) {\n       return false\n     }\n-    const dimensions = this.commitToCompare.dimension\n+    const seriesId = this.commitToCompare.seriesId\n \n-    return this.dimensions.find(it => it.equals(dimensions))\n+    return this.seriesInformation.find(it => it.id === seriesId)\n   }\n \n   @Watch('referenceDatapoint')\n@@ -537,20 +575,20 @@ export default class EchartsDetailGraph extends Vue {\n     const markLineData: any[] = []\n     if (this.showReferenceMarkers) {\n       const reference = this.referenceDatapoint!\n-      const referenceValue = reference.dataPoint.values.get(reference.dimension)\n+      const referenceValue = reference.datapoint.values.get(reference.seriesId)\n       if (typeof referenceValue === 'number') {\n         markLineData.push({ yAxis: referenceValue, name: 'Reference' })\n       }\n     }\n     if (this.showCommitToCompareMarker) {\n       // Day equidistant points might move the point and its author date\n       const displayedPoint = this.echartsDataPoints\n-        .get(this.commitToCompare!.dimension)!\n-        .find(it => it.name === this.commitToCompare!.dataPoint.hash)\n+        .get(this.commitToCompare!.seriesId)!\n+        .find(it => it.name === this.commitToCompare!.datapoint.uid)\n \n       if (displayedPoint) {\n         markLineData.push({\n-          xAxis: displayedPoint.time,\n+          xAxis: displayedPoint.positionTime,\n           name: 'Comparing…'\n         })\n       }\n@@ -594,15 +632,15 @@ export default class EchartsDetailGraph extends Vue {\n     const markPointData: any[] = []\n \n     if (this.showReferenceMarkers) {\n-      const point = this.referenceDatapoint!.dataPoint\n+      const point = this.referenceDatapoint!.datapoint\n       const displayedPoint = this.echartsDataPoints\n-        .get(this.referenceDatapoint!.dimension)!\n-        .find(it => it.name === point.hash)\n+        .get(this.referenceDatapoint!.seriesId)!\n+        .find(it => it.name === point.uid)\n \n       markPointData.push({\n         coord: [\n-          displayedPoint!.time,\n-          point.values.get(this.referenceDatapoint!.dimension)\n+          displayedPoint!.positionTime,\n+          point.values.get(this.referenceDatapoint!.seriesId)\n         ],\n         label: {\n           show: true,\n@@ -659,35 +697,25 @@ export default class EchartsDetailGraph extends Vue {\n     const dataZooms = actualOptions.dataZoom as DataZoomComponentOption[]\n \n     if (seriesId === 'x' || seriesId.includes('xAxis')) {\n-      vxm.detailGraphModule.zoomXStartValue = orNull(dataZooms[0], 'start')\n-      vxm.detailGraphModule.zoomXEndValue = orNull(dataZooms[0], 'end')\n+      this.$emit('update:zoomXStartValue', orNull(dataZooms[0], 'start'))\n+      this.$emit('update:zoomXEndValue', orNull(dataZooms[0], 'end'))\n     } else {\n-      vxm.detailGraphModule.zoomYStartValue = orNull(dataZooms[1], 'start')\n-      vxm.detailGraphModule.zoomYEndValue = orNull(dataZooms[1], 'end')\n+      this.$emit('update:zoomYStartValue', orNull(dataZooms[1], 'start'))\n+      this.$emit('update:zoomYEndValue', orNull(dataZooms[1], 'end'))\n     }\n   }\n \n-  private echartsZoomReset() {\n-    vxm.detailGraphModule.zoomXStartValue = vxm.detailGraphModule.startTime.getTime()\n-    vxm.detailGraphModule.zoomXEndValue = vxm.detailGraphModule.endTime.getTime()\n-    vxm.detailGraphModule.zoomYStartValue = null\n-    vxm.detailGraphModule.zoomYEndValue = null\n-    this.updateGraph()\n-  }\n-\n   private echartsOpenContextMenu(e: any) {\n     if (!e.data) {\n       return\n     }\n \n     const echartsPoint = e.data as EchartsDataPoint\n \n-    const detailPoint = this.detailDataPoints.find(\n-      it => it.hash === echartsPoint.name\n-    )\n-    const dimension = this.dimensions[e.seriesIndex]\n+    const datapoint = this.datapoints.find(it => it.uid === echartsPoint.name)\n+    const seriesInformation = this.seriesInformation[e.seriesIndex]\n \n-    if (!detailPoint || !dimension) {\n+    if (!datapoint || !seriesInformation) {\n       return\n     }\n \n@@ -697,8 +725,8 @@ export default class EchartsDetailGraph extends Vue {\n       event.preventDefault()\n     }\n \n-    this.pointDialogDatapoint = detailPoint\n-    this.pointDialogDimension = dimension\n+    this.pointDialogDatapoint = datapoint\n+    this.pointDialogSeries = seriesInformation\n     this.pointDialogOpen = true\n   }\n \n@@ -707,28 +735,38 @@ export default class EchartsDetailGraph extends Vue {\n       return\n     }\n \n+    // Was a *link* (i.e. the arrow between two datapoints) and no datapoint\n+    if (e.data.name === undefined) {\n+      return\n+    }\n+\n     const echartsPoint = e.data as EchartsDataPoint\n+    const datapoint = this.datapoints.find(it => it.uid === echartsPoint.name)\n+\n+    // Should not happen, but better be safe than sorry\n+    if (!datapoint) {\n+      return\n+    }\n \n     if ((e as any).event && (e as any).event.event) {\n       const event = (e as any).event.event as MouseEvent\n       if (event.ctrlKey) {\n         const routeData = this.$router.resolve({\n           name: 'run-detail',\n           params: {\n-            first: vxm.detailGraphModule.selectedRepoId,\n-            second: echartsPoint.name\n+            first: datapoint.repoId,\n+            second: datapoint.hash\n           }\n         })\n         window.open(routeData.href, '_blank')\n         return\n       }\n     }\n-\n     this.$router.push({\n       name: 'run-detail',\n       params: {\n-        first: vxm.detailGraphModule.selectedRepoId,\n-        second: echartsPoint.name\n+        first: datapoint.repoId,\n+        second: datapoint.hash\n       }\n     })\n   }\n@@ -746,12 +784,6 @@ export default class EchartsDetailGraph extends Vue {\n     return this.$vuetify.theme.currentTheme.graphBackground as string\n   }\n \n-  private dimensionColor(dimension: DimensionId) {\n-    return vxm.colorModule.colorByIndex(\n-      vxm.detailGraphModule.colorIndex(dimension)!\n-    )\n-  }\n-\n   private get graphFailedOrUnbenchmarkedColor() {\n     return this.$vuetify.theme.currentTheme.graphFailedOrUnbenchmarked as string\n   }\n@@ -773,9 +805,7 @@ export default class EchartsDetailGraph extends Vue {\n         }\n       },\n       axisLabel: {\n-        textStyle: {\n-          color: 'currentColor'\n-        }\n+        color: 'currentColor'\n       },\n       splitLine: {\n         lineStyle: {\n@@ -799,9 +829,7 @@ export default class EchartsDetailGraph extends Vue {\n       },\n       toolbox: {\n         iconStyle: {\n-          normal: {\n-            borderColor: 'currentColor'\n-          }\n+          borderColor: 'currentColor'\n         }\n       }\n     }\n@@ -813,7 +841,9 @@ export default class EchartsDetailGraph extends Vue {\n <style scoped>\n #chart-container {\n   position: relative;\n-  height: 80vh;\n+}\n+.full-height {\n+  height: 100%;\n }\n </style>\n "
  },
  {
    "sha": "b7c5238c345cf91354040cda14a9516a9ec82bd4",
    "filename": "frontend/src/components/graphs/GraphTimespanControls.vue",
    "status": "renamed",
    "additions": 26,
    "deletions": 15,
    "changes": 41,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/GraphTimespanControls.vue",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/GraphTimespanControls.vue",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/graphs/GraphTimespanControls.vue?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -97,8 +97,7 @@\n import Vue from 'vue'\n import Component from 'vue-class-component'\n import { mdiCalendar, mdiLock, mdiLockOpenVariant } from '@mdi/js'\n-import { vxm } from '@/store'\n-import { Watch } from 'vue-property-decorator'\n+import { Prop, Watch } from 'vue-property-decorator'\n \n type TimeField = {\n   ref: string\n@@ -111,7 +110,7 @@ type TimeField = {\n }\n \n @Component\n-export default class RepoGraphTimespanControls extends Vue {\n+export default class GraphTimespanControls extends Vue {\n   // <!--<editor-fold desc=\"Fields\">-->\n   /**\n    * The value of the \"duration\" input field. Not applied until saveDuration is called.\n@@ -127,11 +126,11 @@ export default class RepoGraphTimespanControls extends Vue {\n       opened: false,\n       saveFunction: (field: TimeField, value: string) => {\n         this.saveMenu(field.ref, value)\n-        vxm.detailGraphModule.startTime = new Date(value)\n+        this.$emit('update:startTime', new Date(value))\n         this.$emit('reload-graph-data')\n       },\n       allowedDates: (value: string) => {\n-        return new Date(value) <= vxm.detailGraphModule.endTime\n+        return new Date(value) <= this.endTime\n       },\n       rules: []\n     },\n@@ -142,17 +141,25 @@ export default class RepoGraphTimespanControls extends Vue {\n       opened: false,\n       saveFunction: (field: TimeField, value: string) => {\n         this.saveMenu(field.ref, value)\n-        vxm.detailGraphModule.endTime = new Date(value)\n+        this.$emit('update:endTime', new Date(value))\n         this.$emit('reload-graph-data')\n       },\n       allowedDates: (value: string) => {\n-        return new Date(value) >= vxm.detailGraphModule.startTime\n+        return new Date(value) >= this.startTime\n       },\n       rules: [this.ruleStopAfterStart]\n     }\n   ]\n   // <!--</editor-fold>-->\n \n+  // <!--<editor-fold desc=\"Props\">-->\n+  @Prop()\n+  private readonly endTime!: Date\n+\n+  @Prop()\n+  private readonly startTime!: Date\n+  // <!--</editor-fold>-->\n+\n   private saveMenu(ref: string, value: string) {\n     let field: any\n     const readRef = this.$refs[ref]\n@@ -167,7 +174,9 @@ export default class RepoGraphTimespanControls extends Vue {\n \n   // <!--<editor-fold desc=\"Duration\">-->\n   private get duration(): number {\n-    return vxm.detailGraphModule.duration\n+    const timeDiff = this.endTime.getTime() - this.startTime.getTime()\n+\n+    return Math.ceil(timeDiff / (1000 * 3600 * 24)) // round up to days\n   }\n \n   private saveDuration() {\n@@ -185,12 +194,14 @@ export default class RepoGraphTimespanControls extends Vue {\n     const durationAsMillis = duration * 1000 * 60 * 60 * 24 // ms * minutes * hours * days\n \n     if (this.dateLocked === 'start') {\n-      vxm.detailGraphModule.endTime = new Date(\n-        vxm.detailGraphModule.startTime.getTime() + durationAsMillis\n+      this.$emit(\n+        'update:endTime',\n+        new Date(this.startTime.getTime() + durationAsMillis)\n       )\n     } else {\n-      vxm.detailGraphModule.startTime = new Date(\n-        vxm.detailGraphModule.endTime.getTime() - durationAsMillis\n+      this.$emit(\n+        'update:startTime',\n+        new Date(this.endTime.getTime() - durationAsMillis)\n       )\n     }\n \n@@ -210,11 +221,11 @@ export default class RepoGraphTimespanControls extends Vue {\n   }\n \n   private get startTimeString(): string {\n-    return vxm.detailGraphModule.startTime.toISOString().substring(0, 10)\n+    return this.startTime.toISOString().substring(0, 10)\n   }\n \n   private get endTimeString(): string {\n-    return vxm.detailGraphModule.endTime.toISOString().substring(0, 10)\n+    return this.endTime.toISOString().substring(0, 10)\n   }\n   // <!--</editor-fold>-->\n \n@@ -230,7 +241,7 @@ export default class RepoGraphTimespanControls extends Vue {\n \n   // <!--<editor-fold desc=\"Rules\">-->\n   private ruleStopAfterStart(input: string): boolean | string {\n-    return vxm.detailGraphModule.startTime <= new Date(input)\n+    return this.startTime <= new Date(input)\n       ? true\n       : 'You have to select a date after the first one!'\n   }",
    "previous_filename": "frontend/src/components/repodetail/RepoGraphTimespanControls.vue"
  },
  {
    "sha": "6bccfaf5eb8550d0f5220afb673756c1f8d2e36e",
    "filename": "frontend/src/components/graphs/OverscrollToZoom.ts",
    "status": "modified",
    "additions": 24,
    "deletions": 14,
    "changes": 38,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/OverscrollToZoom.ts",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/OverscrollToZoom.ts",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/graphs/OverscrollToZoom.ts?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -1,21 +1,32 @@\n-import { vxm } from '@/store'\n+export type OverscrollStore = {\n+  zoomXStartValue: number | null\n+  zoomXEndValue: number | null\n+\n+  startTime: Date\n+  endTime: Date\n+}\n \n export default class OverscrollToZoom {\n   private scrollToZoomInProgress = false\n+  private readonly refreshFunction: () => Promise<unknown>\n+  private readonly store: OverscrollStore\n+\n+  constructor(refreshFunction: () => Promise<unknown>, store: OverscrollStore) {\n+    this.refreshFunction = refreshFunction\n+    this.store = store\n+  }\n \n   private isZoomedOut(): boolean {\n     if (\n-      vxm.detailGraphModule.zoomXStartValue == null &&\n-      vxm.detailGraphModule.zoomXEndValue == null\n+      this.store.zoomXStartValue == null &&\n+      this.store.zoomXEndValue == null\n     ) {\n       return true\n     }\n \n     return (\n-      vxm.detailGraphModule.zoomXStartValue ===\n-        vxm.detailGraphModule.startTime.getTime() &&\n-      vxm.detailGraphModule.zoomXEndValue ===\n-        vxm.detailGraphModule.endTime.getTime()\n+      this.store.zoomXStartValue === this.store.startTime.getTime() &&\n+      this.store.zoomXEndValue === this.store.endTime.getTime()\n     )\n   }\n \n@@ -41,16 +52,15 @@ export default class OverscrollToZoom {\n     }\n     this.scrollToZoomInProgress = true\n \n-    vxm.detailGraphModule.startTime = new Date(\n-      vxm.detailGraphModule.startTime.getTime() - 7 * 1000 * 60 * 60 * 24\n+    this.store.startTime = new Date(\n+      this.store.startTime.getTime() - 7 * 1000 * 60 * 60 * 24\n     )\n \n     const clamp = (a: number) => Math.min(a, new Date().getTime())\n-    vxm.detailGraphModule.endTime = new Date(\n-      clamp(vxm.detailGraphModule.endTime.getTime() + 7 * 1000 * 60 * 60 * 24)\n+    this.store.endTime = new Date(\n+      clamp(this.store.endTime.getTime() + 7 * 1000 * 60 * 60 * 24)\n     )\n-    vxm.detailGraphModule\n-      .fetchDetailGraph()\n-      .finally(() => (this.scrollToZoomInProgress = false))\n+\n+    this.refreshFunction().finally(() => (this.scrollToZoomInProgress = false))\n   }\n }"
  },
  {
    "sha": "880b59282e865689f24d3664e42f51dc8e0b300a",
    "filename": "frontend/src/components/graphs/comparison/ComparisonDimensionSelector.vue",
    "status": "added",
    "additions": 106,
    "deletions": 0,
    "changes": 106,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/comparison/ComparisonDimensionSelector.vue",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/comparison/ComparisonDimensionSelector.vue",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/graphs/comparison/ComparisonDimensionSelector.vue?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -0,0 +1,106 @@\n+<template>\n+  <v-card\n+    :outlined=\"selectedItem === null\"\n+    :class=\"{ 'warning-outline': possibleDimensions.length !== 0 }\"\n+    style=\"height: 100%\"\n+  >\n+    <v-card-text\n+      :class=\"{ disabled: errorMessage !== null }\"\n+      style=\"height: 100%\"\n+    >\n+      <v-row class=\"my-0\" align=\"center\" style=\"height: 100%\">\n+        <v-col\n+          v-if=\"errorMessage !== null\"\n+          class=\"d-flex align-center text-warning py-0\"\n+        >\n+          {{ errorMessage }}\n+        </v-col>\n+        <v-col v-if=\"errorMessage === null\" class=\"py-0\">\n+          <v-autocomplete\n+            :value=\"selectedItem\"\n+            :items=\"items\"\n+            @input=\"selectDimension\"\n+            class=\"py-0\"\n+            label=\"Dimension to compare…\"\n+            return-object\n+            hide-details\n+            no-data-text=\"No repo(s) selected or no common dimensions\"\n+          >\n+          </v-autocomplete>\n+        </v-col>\n+      </v-row>\n+    </v-card-text>\n+  </v-card>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue'\n+import Component from 'vue-class-component'\n+import { Dimension } from '@/store/types'\n+import { Model, Prop } from 'vue-property-decorator'\n+\n+class Item {\n+  readonly text: string\n+  readonly value: string\n+  readonly dimension: Dimension\n+\n+  constructor(dimension: Dimension) {\n+    this.text = dimension.toString()\n+    this.value = dimension.toString()\n+    this.dimension = dimension\n+  }\n+}\n+\n+@Component\n+export default class ComparisonDimensionSelector extends Vue {\n+  @Prop()\n+  private readonly possibleDimensions!: Dimension[]\n+\n+  @Model('input')\n+  private readonly selectedDimension!: Dimension\n+\n+  @Prop()\n+  private readonly errorMessage!: string | null\n+\n+  private get items() {\n+    return this.possibleDimensions.map(dimension => new Item(dimension))\n+  }\n+\n+  private get selectedItem() {\n+    if (!this.selectedDimension) {\n+      return null\n+    }\n+    if (\n+      !this.possibleDimensions.find(it => it.equals(this.selectedDimension))\n+    ) {\n+      return null\n+    }\n+    return (\n+      this.items.find(it => it.dimension.equals(this.selectedDimension)) || null\n+    )\n+  }\n+\n+  private selectDimension(value: Item) {\n+    if (!value) {\n+      this.$emit('input', null)\n+    } else {\n+      this.$emit('input', value.dimension)\n+    }\n+  }\n+}\n+</script>\n+\n+<!--suppress CssUnresolvedCustomProperty -->\n+<style scoped>\n+.text-warning {\n+  color: var(--v-warning-base) !important;\n+}\n+</style>\n+\n+<!--suppress CssUnresolvedCustomProperty -->\n+<style>\n+/*noinspection CssUnusedSymbol*/\n+.warning-outline {\n+  border-color: var(--v-warning-base) !important;\n+}\n+</style>"
  },
  {
    "sha": "2f02361b64cd6829d0fecc02a84e6488b1ad44a6",
    "filename": "frontend/src/components/graphs/comparison/ComparisonGraph.vue",
    "status": "added",
    "additions": 210,
    "deletions": 0,
    "changes": 210,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/comparison/ComparisonGraph.vue",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/comparison/ComparisonGraph.vue",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/graphs/comparison/ComparisonGraph.vue?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -0,0 +1,210 @@\n+<template>\n+  <v-card :style=\"{ height: height }\">\n+    <v-card-text style=\"height: 100%\" class=\"py-0 my-0\">\n+      <component\n+        :is=\"graphComponent\"\n+        :zoom-x-start-value.sync=\"zoomXStartValue\"\n+        :zoom-x-end-value.sync=\"zoomXEndValue\"\n+        :zoom-y-start-value.sync=\"zoomYStartValue\"\n+        :zoom-y-end-value.sync=\"zoomYEndValue\"\n+        :datapoints=\"comparisonDatapoints\"\n+        :data-range-min.sync=\"dataRangeMin\"\n+        :data-range-max.sync=\"dataRangeMax\"\n+        :series-information=\"seriesInformation\"\n+        :visible-point-count=\"visiblePointCount\"\n+        :reference-datapoint=\"referenceDatapoint\"\n+        :commit-to-compare=\"commitToCompare\"\n+        :begin-y-at-zero=\"beginYAtZero\"\n+        :refresh-key=\"graphRefreshKey\"\n+        @wheel=\"overscrollToZoom.scrolled($event)\"\n+        @reset-zoom=\"resetZoom\"\n+      >\n+        <template\n+          #dialog=\"{\n+            dialogOpen,\n+            selectedDatapoint,\n+            seriesInformation,\n+            closeDialog\n+          }\"\n+        >\n+          <graph-datapoint-dialog\n+            :dialog-open=\"dialogOpen\"\n+            :selected-datapoint=\"selectedDatapoint\"\n+            :series-id=\"seriesInformation.id\"\n+            :commit-to-compare.sync=\"commitToCompare\"\n+            :reference-datapoint.sync=\"referenceDatapoint\"\n+            @close=\"closeDialog()\"\n+          ></graph-datapoint-dialog>\n+        </template>\n+      </component>\n+    </v-card-text>\n+  </v-card>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue'\n+import Component from 'vue-class-component'\n+import EchartsDetailGraph from '@/components/graphs//EchartsDetailGraph.vue'\n+import DytailGraph from '@/components/graphs/DytailGraph.vue'\n+import {\n+  AttributedDatapoint,\n+  ComparisonDataPoint,\n+  SeriesId,\n+  SeriesInformation\n+} from '@/store/types'\n+import { vxm } from '@/store'\n+import GraphDatapointDialog from '@/components/dialogs/GraphDatapointDialog.vue'\n+import { Prop } from 'vue-property-decorator'\n+import {\n+  roundDateDown,\n+  roundDateUp\n+} from '@/store/modules/comparisonGraphStore'\n+import OverscrollToZoom from '@/components/graphs/OverscrollToZoom'\n+\n+@Component({\n+  components: {\n+    GraphDatapointDialog,\n+    EchartsDetailGraph,\n+    DytailGraph\n+  }\n+})\n+export default class ComparisonGraph extends Vue {\n+  private graphRefreshKey: number = 0\n+\n+  // noinspection JSMismatchedCollectionQueryUpdate\n+  @Prop()\n+  private readonly comparisonDatapoints!: ComparisonDataPoint[]\n+\n+  @Prop()\n+  private readonly graphComponent!: typeof Vue\n+\n+  @Prop()\n+  private readonly beginYAtZero!: boolean\n+\n+  @Prop({ default: '80vh' })\n+  private readonly height!: string\n+\n+  // <!--<editor-fold desc=\"Getters\">-->\n+  private get overscrollToZoom() {\n+    return new OverscrollToZoom(() => {\n+      // Not needed as the RepoComparison will handle refresh\n+      // FIXME: Also move repo detail refreshes to parent component and remove this parameter\n+      return Promise.resolve()\n+    }, vxm.comparisonGraphModule)\n+  }\n+\n+  private get seriesInformation(): SeriesInformation[] {\n+    return Array.from(vxm.comparisonGraphModule.selectedBranches.keys()).map(\n+      repoId => ({\n+        id: repoId as SeriesId,\n+        color: vxm.colorModule.colorByIndex(\n+          vxm.repoModule.allRepos.findIndex(it => it.id === repoId)\n+        ),\n+        displayName: vxm.repoModule.repoById(repoId)!.name\n+      })\n+    )\n+  }\n+\n+  private get dataRangeMin() {\n+    return vxm.comparisonGraphModule.startTime\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set dataRangeMin(date: Date) {\n+    vxm.comparisonGraphModule.startTime = roundDateDown(date)\n+  }\n+\n+  private get dataRangeMax() {\n+    return vxm.comparisonGraphModule.endTime\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set dataRangeMax(date: Date) {\n+    vxm.comparisonGraphModule.endTime = roundDateUp(date)\n+  }\n+\n+  private get commitToCompare(): AttributedDatapoint | null {\n+    return vxm.comparisonGraphModule.commitToCompare\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set commitToCompare(commit: AttributedDatapoint | null) {\n+    vxm.comparisonGraphModule.commitToCompare = commit\n+  }\n+\n+  private get referenceDatapoint(): AttributedDatapoint | null {\n+    return vxm.comparisonGraphModule.referenceDatapoint\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set referenceDatapoint(datapoint: AttributedDatapoint | null) {\n+    vxm.comparisonGraphModule.referenceDatapoint = datapoint\n+  }\n+\n+  private get visiblePointCount() {\n+    const startValue = this.zoomXStartValue\n+    const endValue = this.zoomXEndValue\n+\n+    // TODO: Is this a performance problem? There might be 10.000+ items here\n+    // and this method is called every time the slider is dragged or the user\n+    // zooms using the mouse wheel\n+    let visibleDataPoints = 0\n+    for (const point of this.comparisonDatapoints) {\n+      if (\n+        (startValue === null || point.positionTime.getTime() >= startValue) &&\n+        (endValue === null || point.positionTime.getTime() <= endValue)\n+      ) {\n+        visibleDataPoints++\n+      }\n+    }\n+    return visibleDataPoints\n+  }\n+\n+  // <!--<editor-fold desc=\"Zoom boilerplate\">-->\n+  private get zoomXStartValue(): number | null {\n+    return vxm.comparisonGraphModule.zoomXStartValue\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set zoomXStartValue(value: number | null) {\n+    vxm.comparisonGraphModule.zoomXStartValue = value\n+  }\n+\n+  private get zoomXEndValue(): number | null {\n+    return vxm.comparisonGraphModule.zoomXEndValue\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set zoomXEndValue(value: number | null) {\n+    vxm.comparisonGraphModule.zoomXEndValue = value\n+  }\n+\n+  private get zoomYStartValue(): number | null {\n+    return vxm.comparisonGraphModule.zoomYStartValue\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set zoomYStartValue(value: number | null) {\n+    vxm.comparisonGraphModule.zoomYStartValue = value\n+  }\n+\n+  private get zoomYEndValue(): number | null {\n+    return vxm.comparisonGraphModule.zoomYEndValue\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set zoomYEndValue(value: number | null) {\n+    vxm.comparisonGraphModule.zoomYEndValue = value\n+  }\n+  // <!--</editor-fold>-->\n+  // <!--</editor-fold>-->\n+\n+  private resetZoom() {\n+    this.zoomYStartValue = null\n+    this.zoomYEndValue = null\n+    this.zoomXStartValue = this.dataRangeMin.getTime()\n+    this.zoomXEndValue = this.dataRangeMax.getTime()\n+    this.graphRefreshKey++\n+  }\n+}\n+</script>"
  },
  {
    "sha": "7b20bf4cf6b145d0948a5fe1ab1475653fa41285",
    "filename": "frontend/src/components/graphs/comparison/ComparisonGraphSettings.vue",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/comparison/ComparisonGraphSettings.vue",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/comparison/ComparisonGraphSettings.vue",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/graphs/comparison/ComparisonGraphSettings.vue?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -0,0 +1,82 @@\n+<template>\n+  <v-card>\n+    <v-card-text>\n+      <v-row align=\"center\">\n+        <v-col cols=\"auto\">\n+          <v-btn-toggle v-model=\"selectedGraphVariant\" mandatory dense>\n+            <v-btn\n+              v-for=\"{ component, name } in availableGraphComponents\"\n+              :key=\"name\"\n+              :value=\"component\"\n+            >\n+              {{ name }}\n+            </v-btn>\n+          </v-btn-toggle>\n+        </v-col>\n+        <v-spacer></v-spacer>\n+        <v-col cols=\"auto\">\n+          <v-btn\n+            @click=\"$emit('update:beginYAtZero', !beginYAtZero)\"\n+            color=\"primary\"\n+            outlined\n+            text\n+          >\n+            <span v-if=\"beginYAtZero\">Begin Y-Axis at minimum value</span>\n+            <span v-else>Begin Y-Axis at zero</span>\n+          </v-btn>\n+        </v-col>\n+        <v-col cols=\"auto\">\n+          <v-btn\n+            color=\"primary\"\n+            outlined\n+            text\n+            class=\"mr-4\"\n+            @click=\"\n+              $emit(\n+                'update:dayEquidistantGraphSelected',\n+                !dayEquidistantGraphSelected\n+              )\n+            \"\n+          >\n+            <span v-if=\"dayEquidistantGraphSelected\">\n+              Disable Day-Equidistant Graph\n+            </span>\n+            <span v-else>Enable Day-Equidistant Graph</span>\n+          </v-btn>\n+        </v-col>\n+      </v-row>\n+    </v-card-text>\n+  </v-card>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue'\n+import Component from 'vue-class-component'\n+import { availableGraphComponents } from '@/util/GraphVariantSelection'\n+import { Prop } from 'vue-property-decorator'\n+\n+@Component\n+export default class ComparisonGraphSettings extends Vue {\n+  @Prop()\n+  private graphComponent!: typeof Vue\n+\n+  @Prop({ default: true })\n+  private beginYAtZero!: boolean\n+\n+  @Prop({ default: true })\n+  private dayEquidistantGraphSelected!: boolean\n+\n+  private get selectedGraphVariant() {\n+    return this.graphComponent\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set selectedGraphVariant(variant: typeof Vue) {\n+    this.$emit('update:graphComponent', variant)\n+  }\n+\n+  private get availableGraphComponents() {\n+    return availableGraphComponents\n+  }\n+}\n+</script>"
  },
  {
    "sha": "5712649b06f9fcc2a2d4d735321937919ca53e42",
    "filename": "frontend/src/components/graphs/comparison/RepoBranchSelector.vue",
    "status": "added",
    "additions": 140,
    "deletions": 0,
    "changes": 140,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/comparison/RepoBranchSelector.vue",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/graphs/comparison/RepoBranchSelector.vue",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/graphs/comparison/RepoBranchSelector.vue?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -0,0 +1,140 @@\n+<template>\n+  <v-expansion-panels multiple accordion>\n+    <v-expansion-panel\n+      v-for=\"repo in sortedRepos\"\n+      :key=\"repo.id\"\n+      :disabled=\"repo.trackedBranches.length === 0\"\n+    >\n+      <v-expansion-panel-header>\n+        <v-checkbox\n+          :input-value=\"allBranchesSelected(repo)\"\n+          :indeterminate=\"onlySomeBranchesSelected(repo)\"\n+          :style=\"{ color: colorForRepo(repo.id) }\"\n+          :color=\"colorForRepo(repo.id)\"\n+          dense\n+          hide-details\n+          class=\"ma-0 pa-0 flex-grow-0 colored-checkbox\"\n+          @change=\"toggleRepo(repo)\"\n+          @click.native.stop=\"() => {}\"\n+        ></v-checkbox>\n+        <span v-if=\"!hasConflictingNames\">{{ repo.name }}</span>\n+\n+        <v-container fluid class=\"ma-0 pa-0\" v-if=\"hasConflictingNames\">\n+          <v-row no-gutters class=\"mt-0\">\n+            <v-col>\n+              <span>{{ repo.name }}</span>\n+            </v-col>\n+          </v-row>\n+          <v-row no-gutters class=\"mt-0\">\n+            <v-col>\n+              <span class=\"caption text--disabled\">{{ repo.id }}</span>\n+            </v-col>\n+          </v-row>\n+        </v-container>\n+\n+        <span v-if=\"repo.trackedBranches.length === 0\" class=\"text-end ml-3\">\n+          No tracked branches\n+        </span>\n+      </v-expansion-panel-header>\n+      <v-expansion-panel-content>\n+        <v-list dense class=\"pt-0\">\n+          <v-list-item v-for=\"branch in repo.trackedBranches\" :key=\"branch\">\n+            <v-list-item-content class=\"ma-0 pa-0\">\n+              <v-checkbox\n+                :input-value=\"selectedBranchesForRepo(repo.id)\"\n+                :value=\"branch\"\n+                :label=\"branch\"\n+                :color=\"colorForRepo(repo.id)\"\n+                :style=\"{ color: colorForRepo(repo.id) }\"\n+                class=\"ma-0 pa-0 colored-checkbox\"\n+                hide-details\n+                dense\n+                @change=\"toggleBranch(repo, branch)\"\n+              ></v-checkbox>\n+            </v-list-item-content>\n+          </v-list-item>\n+        </v-list>\n+      </v-expansion-panel-content>\n+    </v-expansion-panel>\n+  </v-expansion-panels>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue'\n+import Component from 'vue-class-component'\n+import { Repo, RepoId } from '@/store/types'\n+import { vxm } from '@/store'\n+\n+@Component\n+export default class RepoBranchSelector extends Vue {\n+  private selectedBranchesForRepo(repoId: RepoId) {\n+    return vxm.comparisonGraphModule.selectedBranchesForRepo(repoId)\n+  }\n+\n+  private get sortedRepos() {\n+    return vxm.repoModule.allRepos.slice().sort((a, b) => {\n+      if (a.trackedBranches.length === 0 && b.trackedBranches.length === 0) {\n+        return a.name.localeCompare(b.name)\n+      }\n+      if (a.trackedBranches.length === 0) {\n+        return 1\n+      }\n+      if (b.trackedBranches.length === 0) {\n+        return -1\n+      }\n+      return a.name.localeCompare(b.name)\n+    })\n+  }\n+\n+  private get hasConflictingNames() {\n+    const distinct = new Set(this.sortedRepos.map(it => it.name.trim()))\n+    return distinct.size !== this.sortedRepos.length\n+  }\n+\n+  private colorForRepo(repoId: RepoId) {\n+    return vxm.colorModule.colorByIndex(\n+      vxm.repoModule.allRepos.findIndex(repo => repo.id === repoId) || 0\n+    )\n+  }\n+\n+  private onlySomeBranchesSelected(repo: Repo) {\n+    const selectedLength = this.selectedBranchesForRepo(repo.id).length\n+    return selectedLength < repo.trackedBranches.length && selectedLength > 0\n+  }\n+\n+  private allBranchesSelected(repo: Repo) {\n+    if (repo.trackedBranches.length === 0) {\n+      return false\n+    }\n+    const selectedLength = this.selectedBranchesForRepo(repo.id).length\n+    return selectedLength === repo.trackedBranches.length\n+  }\n+\n+  private toggleRepo(repo: Repo) {\n+    if (this.allBranchesSelected(repo)) {\n+      vxm.comparisonGraphModule.setSelectedBranchesForRepo({\n+        repoId: repo.id,\n+        branches: []\n+      })\n+    } else {\n+      vxm.comparisonGraphModule.setSelectedBranchesForRepo({\n+        repoId: repo.id,\n+        branches: repo.trackedBranches\n+      })\n+    }\n+  }\n+\n+  private toggleBranch(repo: Repo, branch: string) {\n+    vxm.comparisonGraphModule.toggleRepoBranch({\n+      repoId: repo.id,\n+      branch: branch\n+    })\n+  }\n+}\n+</script>\n+\n+<style>\n+.colored-checkbox .v-icon {\n+  color: inherit !important;\n+}\n+</style>"
  },
  {
    "sha": "0b225239f47efc6f76c4ae83274ce7a8be0241d0",
    "filename": "frontend/src/components/graphs/crosshairIcon.ts",
    "status": "removed",
    "additions": 0,
    "deletions": 119,
    "changes": 119,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/frontend/src/components/graphs/crosshairIcon.ts",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0/frontend/src/components/graphs/crosshairIcon.ts",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/graphs/crosshairIcon.ts?ref=8e4a29190f50a34fa08d12c020e9fb9c6b15f3f0",
    "patch": "@@ -1,119 +0,0 @@\n-// mdiCrosshairsGps as svg path\n-export const crosshairIcon = {\n-  draw: function (context: CanvasRenderingContext2D, size: number): void {\n-    const scale: (x: number) => number = (x: number) => 0.02 * size * x\n-\n-    context.moveTo(scale(12), scale(8))\n-    context.bezierCurveTo(\n-      scale(14.209138999323173),\n-      scale(8),\n-      scale(16),\n-      scale(9.790861000676827),\n-      scale(16),\n-      scale(12)\n-    )\n-    context.bezierCurveTo(\n-      scale(16),\n-      scale(14.209138999323173),\n-      scale(14.209138999323173),\n-      scale(16),\n-      scale(12),\n-      scale(16)\n-    )\n-    context.bezierCurveTo(\n-      scale(9.790861000676827),\n-      scale(16),\n-      scale(8),\n-      scale(14.209138999323173),\n-      scale(8),\n-      scale(12)\n-    )\n-    context.bezierCurveTo(\n-      scale(8),\n-      scale(9.790861000676827),\n-      scale(9.790861000676827),\n-      scale(8),\n-      scale(12),\n-      scale(8)\n-    )\n-    context.moveTo(scale(3.05), scale(13))\n-    context.lineTo(scale(1), scale(13))\n-    context.lineTo(scale(1), scale(11))\n-    context.lineTo(scale(3.05), scale(11))\n-    context.bezierCurveTo(\n-      scale(3.5),\n-      scale(6.83),\n-      scale(6.83),\n-      scale(3.5),\n-      scale(11),\n-      scale(3.05)\n-    )\n-    context.lineTo(scale(11), scale(1))\n-    context.lineTo(scale(13), scale(1))\n-    context.lineTo(scale(13), scale(3.05))\n-    context.bezierCurveTo(\n-      scale(17.17),\n-      scale(3.5),\n-      scale(20.5),\n-      scale(6.83),\n-      scale(20.95),\n-      scale(11)\n-    )\n-    context.lineTo(scale(23), scale(11))\n-    context.lineTo(scale(23), scale(13))\n-    context.lineTo(scale(20.95), scale(13))\n-    context.bezierCurveTo(\n-      scale(20.5),\n-      scale(17.17),\n-      scale(17.17),\n-      scale(20.5),\n-      scale(13),\n-      scale(20.95)\n-    )\n-    context.lineTo(scale(13), scale(23))\n-    context.lineTo(scale(11), scale(23))\n-    context.lineTo(scale(11), scale(20.95))\n-    context.bezierCurveTo(\n-      scale(6.83),\n-      scale(20.5),\n-      scale(3.5),\n-      scale(17.17),\n-      scale(3.05),\n-      scale(13)\n-    )\n-    context.moveTo(scale(12), scale(5))\n-    context.bezierCurveTo(\n-      scale(8.134006751184447),\n-      scale(5.000000000000001),\n-      scale(4.999999999999999),\n-      scale(8.134006751184447),\n-      scale(5),\n-      scale(12)\n-    )\n-    context.bezierCurveTo(\n-      scale(5.000000000000001),\n-      scale(15.865993248815553),\n-      scale(8.134006751184447),\n-      scale(19),\n-      scale(12),\n-      scale(19)\n-    )\n-    context.bezierCurveTo(\n-      scale(15.865993248815553),\n-      scale(19),\n-      scale(19),\n-      scale(15.865993248815553),\n-      scale(19),\n-      scale(12)\n-    )\n-    context.bezierCurveTo(\n-      scale(19),\n-      scale(8.134006751184447),\n-      scale(15.865993248815553),\n-      scale(5),\n-      scale(12),\n-      scale(5)\n-    )\n-    context.closePath()\n-  }\n-}"
  },
  {
    "sha": "bcee0e40c7c4d766c7d4e2858757106ee2693ad6",
    "filename": "frontend/src/components/repodetail/RepoGraph.vue",
    "status": "modified",
    "additions": 195,
    "deletions": 40,
    "changes": 235,
    "blob_url": "https://github.com/IPDSnelting/velcom/blob/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/repodetail/RepoGraph.vue",
    "raw_url": "https://github.com/IPDSnelting/velcom/raw/55831efbb773f6351c05a3b449070a3b3548f3af/frontend/src/components/repodetail/RepoGraph.vue",
    "contents_url": "https://api.github.com/repos/IPDSnelting/velcom/contents/frontend/src/components/repodetail/RepoGraph.vue?ref=55831efbb773f6351c05a3b449070a3b3548f3af",
    "patch": "@@ -25,23 +25,52 @@\n               </v-col>\n             </v-row>\n           </v-card-title>\n-          <v-card-text>\n-            <v-row no-gutters>\n-              <v-col style=\"position: relative\">\n+          <v-card-text style=\"height: 70vh\">\n+            <v-row no-gutters style=\"height: 100%\">\n+              <v-col style=\"position: relative; height: 100%\">\n                 <component\n                   ref=\"graphComponent\"\n                   :placeholderHeight=\"graphPlaceholderHeight\"\n                   :is=\"selectedGraphComponent\"\n-                  :dimensions=\"selectedDimensions\"\n-                  :beginYAtZero=\"yStartsAtZero\"\n-                  :dayEquidistant=\"dayEquidistantGraphSelected\"\n+                  :zoom-x-start-value.sync=\"zoomXStartValue\"\n+                  :zoom-x-end-value.sync=\"zoomXEndValue\"\n+                  :zoom-y-start-value.sync=\"zoomYStartValue\"\n+                  :zoom-y-end-value.sync=\"zoomYEndValue\"\n+                  :datapoints=\"datapoints\"\n+                  :data-range-min.sync=\"dataRangeMin\"\n+                  :data-range-max.sync=\"dataRangeMax\"\n+                  :series-information=\"seriesInformation\"\n+                  :visible-point-count=\"visiblePointCount\"\n+                  :point-table-formatter=\"pointFormatter\"\n+                  :reference-datapoint=\"referenceDatapoint\"\n+                  :commit-to-compare=\"commitToCompare\"\n+                  :begin-y-at-zero=\"yStartsAtZero\"\n+                  :refresh-key=\"graphRefreshKey\"\n                   @wheel=\"overscrollToZoom.scrolled($event)\"\n-                ></component>\n+                  @reset-zoom=\"resetZoom\"\n+                >\n+                  <template\n+                    #dialog=\"{\n+                      dialogOpen,\n+                      selectedDatapoint,\n+                      seriesInformation,\n+                      closeDialog\n+                    }\"\n+                  >\n+                    <graph-datapoint-dialog\n+                      :dialog-open=\"dialogOpen\"\n+                      :selected-datapoint=\"selectedDatapoint\"\n+                      :series-id=\"seriesInformation.id\"\n+                      :commit-to-compare.sync=\"commitToCompare\"\n+                      :reference-datapoint.sync=\"referenceDatapoint\"\n+                      @close=\"closeDialog()\"\n+                    ></graph-datapoint-dialog>\n+                  </template>\n+                </component>\n                 <v-overlay\n                   v-if=\"overlayText\"\n                   absolute\n                   class=\"ma-0 pa-0\"\n-                  z-index=\"20\"\n                   color=\"black\"\n                 >\n                   <span class=\"text-h6\">{{ overlayText }}</span>\n@@ -62,38 +91,32 @@ import MatrixDimensionSelection from '@/components/graphs/MatrixDimensionSelecti\n import DimensionSelection from '@/components/graphs/DimensionSelection.vue'\n import ShareGraphLinkDialog from '@/views/ShareGraphLinkDialog.vue'\n import { vxm } from '@/store'\n-import EchartsDetailGraph from '@/components/graphs/EchartsDetailGraph.vue'\n-import DytailGraph from '@/components/graphs/DytailGraph.vue'\n import OverscrollToZoom from '@/components/graphs/OverscrollToZoom'\n import GraphPlaceholder from '@/components/graphs/GraphPlaceholder.vue'\n-import { Dimension } from '@/store/types'\n+import {\n+  AttributedDatapoint,\n+  DetailDataPoint,\n+  Dimension,\n+  DimensionId,\n+  SeriesInformation\n+} from '@/store/types'\n import { Prop, Watch } from 'vue-property-decorator'\n import { getInnerHeight } from '@/util/MeasurementUtils'\n-\n-const availableGraphComponents = [\n-  {\n-    predicate: () => {\n-      // Do not care about zooming, only use echarts when he have only a handful of data points\n-      const points =\n-        vxm.detailGraphModule.detailGraph.length *\n-        vxm.detailGraphModule.selectedDimensions.length\n-      return points < 30_000\n-    },\n-    component: EchartsDetailGraph,\n-    name: 'Fancy'\n-  },\n-  {\n-    predicate: () => {\n-      // matches from first to last. this one is the fallback\n-      return true\n-    },\n-    component: DytailGraph,\n-    name: 'Fast'\n-  }\n-]\n+import { escapeHtml } from '@/util/TextUtils'\n+import { formatDate } from '@/util/TimeUtil'\n+import {\n+  roundDateDown,\n+  roundDateUp\n+} from '@/store/modules/comparisonGraphStore'\n+import GraphDatapointDialog from '@/components/dialogs/GraphDatapointDialog.vue'\n+import {\n+  availableGraphComponents,\n+  selectGraphVariant\n+} from '@/util/GraphVariantSelection'\n \n @Component({\n   components: {\n+    GraphDatapointDialog,\n     'share-graph-link-dialog': ShareGraphLinkDialog,\n     'matrix-dimension-selection': MatrixDimensionSelection,\n     'normal-dimension-selection': DimensionSelection\n@@ -102,7 +125,7 @@ const availableGraphComponents = [\n export default class RepoGraphs extends Vue {\n   private graphPlaceholderHeight: number = 100\n   private selectedGraphComponent: typeof Vue | null = GraphPlaceholder\n-  private overscrollToZoom = new OverscrollToZoom()\n+  private graphRefreshKey = 0\n \n   @Prop()\n   private readonly reloadGraphDataCounter!: number\n@@ -115,14 +138,17 @@ export default class RepoGraphs extends Vue {\n     return availableGraphComponents\n   }\n \n-  private get dayEquidistantGraphSelected() {\n-    return vxm.detailGraphModule.dayEquidistantGraph\n-  }\n-\n   private get yStartsAtZero() {\n     return vxm.detailGraphModule.beginYScaleAtZero\n   }\n \n+  private get overscrollToZoom() {\n+    return new OverscrollToZoom(\n+      () => vxm.detailGraphModule.fetchDetailGraph(),\n+      vxm.detailGraphModule\n+    )\n+  }\n+\n   private setSelectedGraphComponent(component: typeof Vue) {\n     if (this.selectedGraphComponent === GraphPlaceholder) {\n       return\n@@ -148,8 +174,9 @@ export default class RepoGraphs extends Vue {\n     }\n \n     await vxm.detailGraphModule.fetchDetailGraph()\n-    const correctSeries = this.availableGraphComponents.find(it =>\n-      it.predicate()\n+    const correctSeries = selectGraphVariant(\n+      vxm.detailGraphModule.visiblePoints *\n+        vxm.detailGraphModule.selectedDimensions.length\n     )\n     if (correctSeries) {\n       this.selectedGraphComponent = correctSeries.component\n@@ -159,5 +186,133 @@ export default class RepoGraphs extends Vue {\n   private mounted() {\n     this.retrieveGraphData()\n   }\n+\n+  // <!--<editor-fold desc=\"Graph bindings\">-->\n+  private resetZoom() {\n+    this.zoomYStartValue = null\n+    this.zoomYEndValue = null\n+    this.zoomXStartValue = this.dataRangeMin.getTime()\n+    this.zoomXEndValue = this.dataRangeMax.getTime()\n+    this.graphRefreshKey++\n+  }\n+\n+  private pointFormatter(point: DetailDataPoint) {\n+    const committerDate = formatDate(point.committerTime)\n+    return `\n+            <tr>\n+              <td>Hash</td>\n+              <td>${escapeHtml(point.hash)}</td>\n+            </tr>\n+            </tr>\n+              <td>Message</td>\n+              <td>${escapeHtml(point.summary)}</td>\n+            </tr>\n+            <tr>\n+              <td>Author</td>\n+              <td>\n+                ${escapeHtml(point.author)} at ${committerDate}\n+              </td>\n+            </tr>\n+            `\n+  }\n+\n+  private get datapoints(): DetailDataPoint[] {\n+    return vxm.detailGraphModule.detailGraph\n+  }\n+\n+  private get seriesInformation(): SeriesInformation[] {\n+    return this.selectedDimensions.map(dimension => ({\n+      displayName: dimension.toString(),\n+      id: dimension.toString(),\n+      color: this.dimensionColor(dimension)\n+    }))\n+  }\n+\n+  private dimensionColor(dimension: DimensionId) {\n+    return vxm.colorModule.colorByIndex(\n+      vxm.detailGraphModule.colorIndex(dimension)!\n+    )\n+  }\n+\n+  private get visiblePointCount() {\n+    return vxm.detailGraphModule.visiblePoints\n+  }\n+\n+  private get dataRangeMin() {\n+    return vxm.detailGraphModule.startTime\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set dataRangeMin(date: Date) {\n+    vxm.detailGraphModule.startTime = roundDateDown(date)\n+    vxm.detailGraphModule.fetchDetailGraph()\n+  }\n+\n+  private get dataRangeMax() {\n+    return vxm.detailGraphModule.endTime\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set dataRangeMax(date: Date) {\n+    vxm.detailGraphModule.endTime = roundDateUp(date)\n+    vxm.detailGraphModule.fetchDetailGraph()\n+  }\n+\n+  private get commitToCompare(): AttributedDatapoint | null {\n+    return vxm.detailGraphModule.commitToCompare\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set commitToCompare(commit: AttributedDatapoint | null) {\n+    vxm.detailGraphModule.commitToCompare = commit\n+  }\n+\n+  private get referenceDatapoint(): AttributedDatapoint | null {\n+    return vxm.detailGraphModule.referenceDatapoint\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set referenceDatapoint(datapoint: AttributedDatapoint | null) {\n+    vxm.detailGraphModule.referenceDatapoint = datapoint\n+  }\n+\n+  // <!--<editor-fold desc=\"Zoom boilerplate\">-->\n+  private get zoomXStartValue(): number | null {\n+    return vxm.detailGraphModule.zoomXStartValue\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set zoomXStartValue(value: number | null) {\n+    vxm.detailGraphModule.zoomXStartValue = value\n+  }\n+\n+  private get zoomXEndValue(): number | null {\n+    return vxm.detailGraphModule.zoomXEndValue\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set zoomXEndValue(value: number | null) {\n+    vxm.detailGraphModule.zoomXEndValue = value\n+  }\n+\n+  private get zoomYStartValue(): number | null {\n+    return vxm.detailGraphModule.zoomYStartValue\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set zoomYStartValue(value: number | null) {\n+    vxm.detailGraphModule.zoomYStartValue = value\n+  }\n+\n+  private get zoomYEndValue(): number | null {\n+    return vxm.detailGraphModule.zoomYEndValue\n+  }\n+\n+  // noinspection JSUnusedLocalSymbols\n+  private set zoomYEndValue(value: number | null) {\n+    vxm.detailGraphModule.zoomYEndValue = value\n+  }\n+  // <!--</editor-fold>-->\n+  // <!--</editor-fold>-->\n }\n </script>"
  }
]
