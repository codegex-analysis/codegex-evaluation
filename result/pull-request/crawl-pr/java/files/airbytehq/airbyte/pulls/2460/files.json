[
  {
    "sha": "579780efc29ccea362f0911760c6d47b044fd967",
    "filename": "airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/22f6c74f-5699-40ff-833c-4a879ea40133.json",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/22f6c74f-5699-40ff-833c-4a879ea40133.json",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/22f6c74f-5699-40ff-833c-4a879ea40133.json",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/22f6c74f-5699-40ff-833c-4a879ea40133.json?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -2,6 +2,6 @@\n   \"destinationDefinitionId\": \"22f6c74f-5699-40ff-833c-4a879ea40133\",\n   \"name\": \"BigQuery\",\n   \"dockerRepository\": \"airbyte/destination-bigquery\",\n-  \"dockerImageTag\": \"0.2.0\",\n+  \"dockerImageTag\": \"0.2.1\",\n   \"documentationUrl\": \"https://docs.airbyte.io/integrations/destinations/bigquery\"\n }"
  },
  {
    "sha": "7dd1822ccaa9205a1fd998f269bc4974ea83295a",
    "filename": "airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/25c5221d-dce2-4163-ade9-739ef790f503.json",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/25c5221d-dce2-4163-ade9-739ef790f503.json",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/25c5221d-dce2-4163-ade9-739ef790f503.json",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/25c5221d-dce2-4163-ade9-739ef790f503.json?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -2,6 +2,6 @@\n   \"destinationDefinitionId\": \"25c5221d-dce2-4163-ade9-739ef790f503\",\n   \"name\": \"Postgres\",\n   \"dockerRepository\": \"airbyte/destination-postgres\",\n-  \"dockerImageTag\": \"0.2.0\",\n+  \"dockerImageTag\": \"0.2.1\",\n   \"documentationUrl\": \"https://docs.airbyte.io/integrations/destinations/postgres\"\n }"
  },
  {
    "sha": "12dcacc859e9b6359fdbe837a073ef3fd119f227",
    "filename": "airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/424892c4-daac-4491-b35d-c6688ba547ba.json",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/424892c4-daac-4491-b35d-c6688ba547ba.json",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/424892c4-daac-4491-b35d-c6688ba547ba.json",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/424892c4-daac-4491-b35d-c6688ba547ba.json?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -2,6 +2,6 @@\n   \"destinationDefinitionId\": \"424892c4-daac-4491-b35d-c6688ba547ba\",\n   \"name\": \"Snowflake\",\n   \"dockerRepository\": \"airbyte/destination-snowflake\",\n-  \"dockerImageTag\": \"0.2.0\",\n+  \"dockerImageTag\": \"0.2.1\",\n   \"documentationUrl\": \"https://docs.airbyte.io/integrations/destinations/snowflake\"\n }"
  },
  {
    "sha": "1bb15390bda7e573dcbcc546ff26fff9b25a2733",
    "filename": "airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/8be1cf83-fde1-477f-a4ad-318d23c9f3c6.json",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/8be1cf83-fde1-477f-a4ad-318d23c9f3c6.json",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/8be1cf83-fde1-477f-a4ad-318d23c9f3c6.json",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/8be1cf83-fde1-477f-a4ad-318d23c9f3c6.json?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -2,6 +2,6 @@\n   \"destinationDefinitionId\": \"8be1cf83-fde1-477f-a4ad-318d23c9f3c6\",\n   \"name\": \"Local CSV\",\n   \"dockerRepository\": \"airbyte/destination-csv\",\n-  \"dockerImageTag\": \"0.2.0\",\n+  \"dockerImageTag\": \"0.2.1\",\n   \"documentationUrl\": \"https://docs.airbyte.io/integrations/destinations/local-csv\"\n }"
  },
  {
    "sha": "69b31ac99480d3ec83edc0fd61f6176c84d09e76",
    "filename": "airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/a625d593-bba5-4a1c-a53d-2d246268a816.json",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/a625d593-bba5-4a1c-a53d-2d246268a816.json",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/a625d593-bba5-4a1c-a53d-2d246268a816.json",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/a625d593-bba5-4a1c-a53d-2d246268a816.json?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -2,6 +2,6 @@\n   \"destinationDefinitionId\": \"a625d593-bba5-4a1c-a53d-2d246268a816\",\n   \"name\": \"Local JSON\",\n   \"dockerRepository\": \"airbyte/destination-local-json\",\n-  \"dockerImageTag\": \"0.2.0\",\n+  \"dockerImageTag\": \"0.2.1\",\n   \"documentationUrl\": \"https://docs.airbyte.io/integrations/destinations/local-json\"\n }"
  },
  {
    "sha": "70c6cc54f5a71cc9d535d0e4b60a466932f02400",
    "filename": "airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/af7c921e-5892-4ff2-b6c1-4a5ab258fb7e.json",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/af7c921e-5892-4ff2-b6c1-4a5ab258fb7e.json",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/af7c921e-5892-4ff2-b6c1-4a5ab258fb7e.json",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/af7c921e-5892-4ff2-b6c1-4a5ab258fb7e.json?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -2,6 +2,6 @@\n   \"destinationDefinitionId\": \"af7c921e-5892-4ff2-b6c1-4a5ab258fb7e\",\n   \"name\": \"MeiliSearch\",\n   \"dockerRepository\": \"airbyte/destination-meilisearch\",\n-  \"dockerImageTag\": \"0.2.0\",\n+  \"dockerImageTag\": \"0.2.1\",\n   \"documentationUrl\": \"https://docs.airbyte.io/integrations/destinations/meilisearch\"\n }"
  },
  {
    "sha": "bad04e3c4cbe9e762d3a059d38b2ad906a896d5f",
    "filename": "airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/f7a7d195-377f-cf5b-70a5-be6b819019dc.json",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/f7a7d195-377f-cf5b-70a5-be6b819019dc.json",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/f7a7d195-377f-cf5b-70a5-be6b819019dc.json",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-config/init/src/main/resources/config/STANDARD_DESTINATION_DEFINITION/f7a7d195-377f-cf5b-70a5-be6b819019dc.json?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -2,6 +2,6 @@\n   \"destinationDefinitionId\": \"f7a7d195-377f-cf5b-70a5-be6b819019dc\",\n   \"name\": \"Redshift\",\n   \"dockerRepository\": \"airbyte/destination-redshift\",\n-  \"dockerImageTag\": \"0.2.0\",\n+  \"dockerImageTag\": \"0.2.1\",\n   \"documentationUrl\": \"https://docs.airbyte.io/integrations/destinations/redshift\"\n }"
  },
  {
    "sha": "7b2457d4b7f17c438b27c9d43ab17dae10194c77",
    "filename": "airbyte-config/init/src/main/resources/seed/destination_definitions.yaml",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/seed/destination_definitions.yaml",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-config/init/src/main/resources/seed/destination_definitions.yaml",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-config/init/src/main/resources/seed/destination_definitions.yaml?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -1,35 +1,35 @@\n - destinationDefinitionId: a625d593-bba5-4a1c-a53d-2d246268a816\n   name: Local JSON\n   dockerRepository: airbyte/destination-local-json\n-  dockerImageTag: 0.2.0\n+  dockerImageTag: 0.2.1\n   documentationUrl: https://docs.airbyte.io/integrations/destinations/local-json\n - destinationDefinitionId: 8be1cf83-fde1-477f-a4ad-318d23c9f3c6\n   name: Local CSV\n   dockerRepository: airbyte/destination-csv\n-  dockerImageTag: 0.2.0\n+  dockerImageTag: 0.2.1\n   documentationUrl: https://docs.airbyte.io/integrations/destinations/local-csv\n - destinationDefinitionId: 25c5221d-dce2-4163-ade9-739ef790f503\n   name: Postgres\n   dockerRepository: airbyte/destination-postgres\n-  dockerImageTag: 0.2.0\n+  dockerImageTag: 0.2.1\n   documentationUrl: https://docs.airbyte.io/integrations/destinations/postgres\n - destinationDefinitionId: 22f6c74f-5699-40ff-833c-4a879ea40133\n   name: BigQuery\n   dockerRepository: airbyte/destination-bigquery\n-  dockerImageTag: 0.2.0\n+  dockerImageTag: 0.2.1\n   documentationUrl: https://docs.airbyte.io/integrations/destinations/bigquery\n - destinationDefinitionId: 424892c4-daac-4491-b35d-c6688ba547ba\n   name: Snowflake\n   dockerRepository: airbyte/destination-snowflake\n-  dockerImageTag: 0.2.0\n+  dockerImageTag: 0.2.1\n   documentationUrl: https://docs.airbyte.io/integrations/destinations/snowflake\n - destinationDefinitionId: f7a7d195-377f-cf5b-70a5-be6b819019dc\n   name: Redshift\n   dockerRepository: airbyte/destination-redshift\n-  dockerImageTag: 0.2.0\n+  dockerImageTag: 0.2.1\n   documentationUrl: https://docs.airbyte.io/integrations/destinations/redshift\n - destinationDefinitionId: af7c921e-5892-4ff2-b6c1-4a5ab258fb7e\n   name: MeiliSearch\n   dockerRepository: airbyte/destination-meilisearch\n-  dockerImageTag: 0.2.0\n+  dockerImageTag: 0.2.1\n   documentationUrl: https://docs.airbyte.io/integrations/destinations/meilisearch"
  },
  {
    "sha": "685e494e3e6419efef1573b8af02f21e584818c9",
    "filename": "airbyte-integrations/bases/base-java/src/main/java/io/airbyte/integrations/destination/WriteConfig.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/bases/base-java/src/main/java/io/airbyte/integrations/destination/WriteConfig.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/bases/base-java/src/main/java/io/airbyte/integrations/destination/WriteConfig.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/bases/base-java/src/main/java/io/airbyte/integrations/destination/WriteConfig.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -24,17 +24,17 @@\n \n package io.airbyte.integrations.destination;\n \n-import io.airbyte.protocol.models.SyncMode;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n \n public class WriteConfig {\n \n   private final String streamName;\n   private final String outputNamespaceName;\n   private final String tmpTableName;\n   private final String outputTableName;\n-  private final SyncMode syncMode;\n+  private final DestinationSyncMode syncMode;\n \n-  public WriteConfig(String streamName, String outputNamespaceName, String tmpTableName, String outputTableName, SyncMode syncMode) {\n+  public WriteConfig(String streamName, String outputNamespaceName, String tmpTableName, String outputTableName, DestinationSyncMode syncMode) {\n     this.streamName = streamName;\n     this.outputNamespaceName = outputNamespaceName;\n     this.tmpTableName = tmpTableName;\n@@ -58,7 +58,7 @@ public String getOutputTableName() {\n     return outputTableName;\n   }\n \n-  public SyncMode getSyncMode() {\n+  public DestinationSyncMode getSyncMode() {\n     return syncMode;\n   }\n "
  },
  {
    "sha": "cc5eeffa104f4717b91542b7c5a3720d3348ee4c",
    "filename": "airbyte-integrations/bases/standard-destination-test/src/main/java/io/airbyte/integrations/standardtest/destination/TestDestination.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/bases/standard-destination-test/src/main/java/io/airbyte/integrations/standardtest/destination/TestDestination.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/bases/standard-destination-test/src/main/java/io/airbyte/integrations/standardtest/destination/TestDestination.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/bases/standard-destination-test/src/main/java/io/airbyte/integrations/standardtest/destination/TestDestination.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -48,6 +48,7 @@\n import io.airbyte.protocol.models.AirbyteStream;\n import io.airbyte.protocol.models.CatalogHelpers;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import io.airbyte.protocol.models.ConnectorSpecification;\n import io.airbyte.protocol.models.SyncMode;\n import io.airbyte.workers.DefaultCheckConnectionWorker;\n@@ -292,7 +293,10 @@ public void testIncrementalSync(String messagesFilename, String catalogFilename)\n     final AirbyteCatalog catalog =\n         Jsons.deserialize(MoreResources.readResource(catalogFilename), AirbyteCatalog.class);\n     final ConfiguredAirbyteCatalog configuredCatalog = CatalogHelpers.toDefaultConfiguredCatalog(catalog);\n-    configuredCatalog.getStreams().forEach(s -> s.withSyncMode(SyncMode.INCREMENTAL));\n+    configuredCatalog.getStreams().forEach(s -> {\n+      s.withSyncMode(SyncMode.INCREMENTAL);\n+      s.withDestinationSyncMode(DestinationSyncMode.APPEND);\n+    });\n     final List<AirbyteMessage> firstSyncMessages = MoreResources.readResource(messagesFilename).lines()\n         .map(record -> Jsons.deserialize(record, AirbyteMessage.class)).collect(Collectors.toList());\n     runSync(getConfig(), firstSyncMessages, configuredCatalog);"
  },
  {
    "sha": "1bafdb421ce19a34dd938eb4a0e3797fa78806ad",
    "filename": "airbyte-integrations/bases/standard-source-test/src/main/java/io/airbyte/integrations/standardtest/source/StandardSourceTest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/bases/standard-source-test/src/main/java/io/airbyte/integrations/standardtest/source/StandardSourceTest.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/bases/standard-source-test/src/main/java/io/airbyte/integrations/standardtest/source/StandardSourceTest.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/bases/standard-source-test/src/main/java/io/airbyte/integrations/standardtest/source/StandardSourceTest.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -48,6 +48,7 @@\n import io.airbyte.protocol.models.AirbyteStateMessage;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n import io.airbyte.protocol.models.ConfiguredAirbyteStream;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import io.airbyte.protocol.models.ConnectorSpecification;\n import io.airbyte.workers.DefaultCheckConnectionWorker;\n import io.airbyte.workers.DefaultDiscoverCatalogWorker;\n@@ -378,6 +379,7 @@ private ConfiguredAirbyteCatalog withFullRefreshSyncModes(ConfiguredAirbyteCatal\n     for (ConfiguredAirbyteStream configuredStream : clone.getStreams()) {\n       if (configuredStream.getStream().getSupportedSyncModes().contains(FULL_REFRESH)) {\n         configuredStream.setSyncMode(FULL_REFRESH);\n+        configuredStream.setDestinationSyncMode(DestinationSyncMode.OVERWRITE);\n       }\n     }\n     return clone;"
  },
  {
    "sha": "183dd69a9c1f457e9152075b0caf7a29313c2756",
    "filename": "airbyte-integrations/connectors/destination-bigquery/Dockerfile",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-bigquery/Dockerfile",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-bigquery/Dockerfile",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-bigquery/Dockerfile?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -8,5 +8,5 @@ COPY build/distributions/${APPLICATION}*.tar ${APPLICATION}.tar\n \n RUN tar xf ${APPLICATION}.tar --strip-components=1\n \n-LABEL io.airbyte.version=0.2.0\n+LABEL io.airbyte.version=0.2.1\n LABEL io.airbyte.name=airbyte/destination-bigquery"
  },
  {
    "sha": "1e88db0d985ebaa9506341542a3e676116972425",
    "filename": "airbyte-integrations/connectors/destination-bigquery/src/main/java/io/airbyte/integrations/destination/bigquery/BigQueryDestination.java",
    "status": "modified",
    "additions": 13,
    "deletions": 8,
    "changes": 21,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-bigquery/src/main/java/io/airbyte/integrations/destination/bigquery/BigQueryDestination.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-bigquery/src/main/java/io/airbyte/integrations/destination/bigquery/BigQueryDestination.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-bigquery/src/main/java/io/airbyte/integrations/destination/bigquery/BigQueryDestination.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -64,8 +64,8 @@\n import io.airbyte.protocol.models.AirbyteMessage;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n import io.airbyte.protocol.models.ConfiguredAirbyteStream;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import io.airbyte.protocol.models.ConnectorSpecification;\n-import io.airbyte.protocol.models.SyncMode;\n import java.io.ByteArrayInputStream;\n import java.io.IOException;\n import java.nio.ByteBuffer;\n@@ -231,7 +231,7 @@ private static Job waitForQuery(Job queryJob) {\n           .setFormatOptions(FormatOptions.json()).build(); // new-line delimited json.\n \n       final TableDataWriteChannel writer = bigquery.writer(JobId.of(UUID.randomUUID().toString()), writeChannelConfiguration);\n-      final WriteDisposition syncMode = getWriteDisposition(stream.getSyncMode());\n+      final WriteDisposition syncMode = getWriteDisposition(stream.getDestinationSyncMode());\n \n       writeConfigs.put(stream.getStream().getName(),\n           new WriteConfig(TableId.of(schemaName, tableName), TableId.of(schemaName, tmpTableName), writer, syncMode));\n@@ -242,13 +242,18 @@ private static Job waitForQuery(Job queryJob) {\n     return new RecordConsumer(bigquery, writeConfigs, catalog);\n   }\n \n-  private static WriteDisposition getWriteDisposition(SyncMode syncMode) {\n-    if (syncMode == null || syncMode == SyncMode.FULL_REFRESH) {\n-      return WriteDisposition.WRITE_TRUNCATE;\n-    } else if (syncMode == SyncMode.INCREMENTAL) {\n+  private static WriteDisposition getWriteDisposition(DestinationSyncMode syncMode) {\n+    if (syncMode == null) {\n       return WriteDisposition.WRITE_APPEND;\n-    } else {\n-      throw new IllegalStateException(\"Unrecognized sync mode: \" + syncMode);\n+    }\n+    switch (syncMode) {\n+      case OVERWRITE -> {\n+        return WriteDisposition.WRITE_TRUNCATE;\n+      }\n+      case APPEND, APPEND_DEDUP -> {\n+        return WriteDisposition.WRITE_APPEND;\n+      }\n+      default -> throw new IllegalStateException(\"Unrecognized sync mode: \" + syncMode);\n     }\n   }\n "
  },
  {
    "sha": "d2b981e74afe85bf0df9df4773acd340a2ebda7d",
    "filename": "airbyte-integrations/connectors/destination-csv/Dockerfile",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-csv/Dockerfile",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-csv/Dockerfile",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-csv/Dockerfile?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -7,5 +7,5 @@ COPY build/distributions/${APPLICATION}*.tar ${APPLICATION}.tar\n \n RUN tar xf ${APPLICATION}.tar --strip-components=1\n \n-LABEL io.airbyte.version=0.2.0\n+LABEL io.airbyte.version=0.2.1\n LABEL io.airbyte.name=airbyte/destination-csv"
  },
  {
    "sha": "7a7d7fae3c9474136da15bed96c727b07fbfdf2f",
    "filename": "airbyte-integrations/connectors/destination-csv/src/main/java/io/airbyte/integrations/destination/csv/CsvDestination.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-csv/src/main/java/io/airbyte/integrations/destination/csv/CsvDestination.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-csv/src/main/java/io/airbyte/integrations/destination/csv/CsvDestination.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-csv/src/main/java/io/airbyte/integrations/destination/csv/CsvDestination.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -39,8 +39,8 @@\n import io.airbyte.protocol.models.AirbyteMessage;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n import io.airbyte.protocol.models.ConfiguredAirbyteStream;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import io.airbyte.protocol.models.ConnectorSpecification;\n-import io.airbyte.protocol.models.SyncMode;\n import java.io.FileWriter;\n import java.io.IOException;\n import java.nio.file.Files;\n@@ -105,12 +105,12 @@ public AirbyteConnectionStatus check(JsonNode config) {\n       final Path finalPath = destinationDir.resolve(tableName + \".csv\");\n       CSVFormat csvFormat = CSVFormat.DEFAULT.withHeader(JavaBaseConstants.COLUMN_NAME_AB_ID, JavaBaseConstants.COLUMN_NAME_EMITTED_AT,\n           JavaBaseConstants.COLUMN_NAME_DATA);\n-      final boolean isIncremental = stream.getSyncMode() == SyncMode.INCREMENTAL;\n-      if (isIncremental && finalPath.toFile().exists()) {\n+      final boolean isAppendMode = stream.getDestinationSyncMode() != DestinationSyncMode.OVERWRITE;\n+      if (isAppendMode && finalPath.toFile().exists()) {\n         Files.copy(finalPath, tmpPath, StandardCopyOption.REPLACE_EXISTING);\n         csvFormat = csvFormat.withSkipHeaderRecord();\n       }\n-      final FileWriter fileWriter = new FileWriter(tmpPath.toFile(), isIncremental);\n+      final FileWriter fileWriter = new FileWriter(tmpPath.toFile(), isAppendMode);\n       final CSVPrinter printer = new CSVPrinter(fileWriter, csvFormat);\n       writeConfigs.put(stream.getStream().getName(), new WriteConfig(printer, tmpPath, finalPath));\n     }"
  },
  {
    "sha": "2f3681605029918c3ccafa723992f4034af0e35e",
    "filename": "airbyte-integrations/connectors/destination-jdbc/Dockerfile",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-jdbc/Dockerfile",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-jdbc/Dockerfile",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-jdbc/Dockerfile?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -8,5 +8,5 @@ COPY build/distributions/${APPLICATION}*.tar ${APPLICATION}.tar\n \n RUN tar xf ${APPLICATION}.tar --strip-components=1\n \n-LABEL io.airbyte.version=0.2.0\n+LABEL io.airbyte.version=0.2.1\n LABEL io.airbyte.name=airbyte/destination-jdbc"
  },
  {
    "sha": "53d4407effa6e9eea9d770f6b0df9439325044c2",
    "filename": "airbyte-integrations/connectors/destination-jdbc/src/main/java/io/airbyte/integrations/destination/jdbc/JdbcBufferedConsumerFactory.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-jdbc/src/main/java/io/airbyte/integrations/destination/jdbc/JdbcBufferedConsumerFactory.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-jdbc/src/main/java/io/airbyte/integrations/destination/jdbc/JdbcBufferedConsumerFactory.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-jdbc/src/main/java/io/airbyte/integrations/destination/jdbc/JdbcBufferedConsumerFactory.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -38,7 +38,7 @@\n import io.airbyte.integrations.destination.buffered_stream_consumer.BufferedStreamConsumer.RecordWriter;\n import io.airbyte.protocol.models.AirbyteMessage;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n-import io.airbyte.protocol.models.SyncMode;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import java.time.Instant;\n import java.util.List;\n import java.util.Map;\n@@ -84,7 +84,7 @@\n       final String schemaName = namingResolver.getIdentifier(config.get(\"schema\").asText());\n       final String tableName = Names.concatQuotedNames(\"_airbyte_raw_\", namingResolver.getIdentifier(streamName));\n       final String tmpTableName = Names.concatQuotedNames(\"_airbyte_\" + now.toEpochMilli() + \"_\", tableName);\n-      final SyncMode syncMode = stream.getSyncMode() != null ? stream.getSyncMode() : SyncMode.FULL_REFRESH;\n+      final DestinationSyncMode syncMode = stream.getDestinationSyncMode() != null ? stream.getDestinationSyncMode() : DestinationSyncMode.APPEND;\n       return new WriteConfig(streamName, schemaName, tmpTableName, tableName, syncMode);\n     }).collect(Collectors.toList());\n   }\n@@ -138,8 +138,9 @@ private static OnCloseFunction onCloseFunction(JdbcDatabase database, SqlOperati\n \n           sqlOperations.createTableIfNotExists(database, schemaName, dstTableName);\n           switch (writeConfig.getSyncMode()) {\n-            case FULL_REFRESH -> queries.append(sqlOperations.truncateTableQuery(schemaName, dstTableName));\n-            case INCREMENTAL -> {}\n+            case OVERWRITE -> queries.append(sqlOperations.truncateTableQuery(schemaName, dstTableName));\n+            case APPEND -> {}\n+            case APPEND_DEDUP -> {}\n             default -> throw new IllegalStateException(\"Unrecognized sync mode: \" + writeConfig.getSyncMode());\n           }\n           queries.append(sqlOperations.copyTableQuery(schemaName, srcTableName, dstTableName));"
  },
  {
    "sha": "fad6a91c8f6d6fa618830d245ea6baec0dc77269",
    "filename": "airbyte-integrations/connectors/destination-jdbc/src/test/java/io/airbyte/integrations/destination/jdbc/JdbcDestinationTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-jdbc/src/test/java/io/airbyte/integrations/destination/jdbc/JdbcDestinationTest.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-jdbc/src/test/java/io/airbyte/integrations/destination/jdbc/JdbcDestinationTest.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-jdbc/src/test/java/io/airbyte/integrations/destination/jdbc/JdbcDestinationTest.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -53,6 +53,7 @@\n import io.airbyte.protocol.models.CatalogHelpers;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n import io.airbyte.protocol.models.ConfiguredAirbyteStream;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import io.airbyte.protocol.models.ConnectorSpecification;\n import io.airbyte.protocol.models.Field;\n import io.airbyte.protocol.models.Field.JsonSchemaPrimitive;\n@@ -183,7 +184,10 @@ void testWriteSuccess() throws Exception {\n   @Test\n   void testWriteIncremental() throws Exception {\n     final ConfiguredAirbyteCatalog catalog = Jsons.clone(CATALOG);\n-    catalog.getStreams().forEach(stream -> stream.withSyncMode(SyncMode.INCREMENTAL));\n+    catalog.getStreams().forEach(stream -> {\n+      stream.withSyncMode(SyncMode.INCREMENTAL);\n+      stream.withDestinationSyncMode(DestinationSyncMode.APPEND);\n+    });\n \n     final JdbcDestination destination = new JdbcDestination();\n     final DestinationConsumer<AirbyteMessage> consumer = destination.write(config, catalog);"
  },
  {
    "sha": "3fd4bac87dcb8c2b5d4b9c600bd9ebf7de339263",
    "filename": "airbyte-integrations/connectors/destination-local-json/Dockerfile",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-local-json/Dockerfile",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-local-json/Dockerfile",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-local-json/Dockerfile?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -7,5 +7,5 @@ COPY build/distributions/${APPLICATION}*.tar ${APPLICATION}.tar\n \n RUN tar xf ${APPLICATION}.tar --strip-components=1\n \n-LABEL io.airbyte.version=0.2.0\n+LABEL io.airbyte.version=0.2.1\n LABEL io.airbyte.name=airbyte/destination-local-json"
  },
  {
    "sha": "afc3f11ee2fcd5f02c66d03bd2c0fb6e6a5d3859",
    "filename": "airbyte-integrations/connectors/destination-local-json/src/main/java/io/airbyte/integrations/destination/local_json/LocalJsonDestination.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-local-json/src/main/java/io/airbyte/integrations/destination/local_json/LocalJsonDestination.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-local-json/src/main/java/io/airbyte/integrations/destination/local_json/LocalJsonDestination.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-local-json/src/main/java/io/airbyte/integrations/destination/local_json/LocalJsonDestination.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -40,8 +40,8 @@\n import io.airbyte.protocol.models.AirbyteMessage;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n import io.airbyte.protocol.models.ConfiguredAirbyteStream;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import io.airbyte.protocol.models.ConnectorSpecification;\n-import io.airbyte.protocol.models.SyncMode;\n import java.io.FileWriter;\n import java.io.IOException;\n import java.io.Writer;\n@@ -102,12 +102,12 @@ public AirbyteConnectionStatus check(JsonNode config) {\n       final Path finalPath = destinationDir.resolve(namingResolver.getRawTableName(streamName) + \".jsonl\");\n       final Path tmpPath = destinationDir.resolve(namingResolver.getTmpTableName(streamName) + \".jsonl\");\n \n-      final boolean isIncremental = stream.getSyncMode() == SyncMode.INCREMENTAL;\n-      if (isIncremental && finalPath.toFile().exists()) {\n+      final boolean isAppendMode = stream.getDestinationSyncMode() != DestinationSyncMode.OVERWRITE;\n+      if (isAppendMode && finalPath.toFile().exists()) {\n         Files.copy(finalPath, tmpPath, StandardCopyOption.REPLACE_EXISTING);\n       }\n \n-      final Writer writer = new FileWriter(tmpPath.toFile(), isIncremental);\n+      final Writer writer = new FileWriter(tmpPath.toFile(), isAppendMode);\n       writeConfigs.put(stream.getStream().getName(), new WriteConfig(writer, tmpPath, finalPath));\n     }\n "
  },
  {
    "sha": "80c80a0d86997d1ba5141685597e791f069250f9",
    "filename": "airbyte-integrations/connectors/destination-meilisearch/Dockerfile",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-meilisearch/Dockerfile",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-meilisearch/Dockerfile",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-meilisearch/Dockerfile?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -8,5 +8,5 @@ COPY build/distributions/${APPLICATION}*.tar ${APPLICATION}.tar\n \n RUN tar xf ${APPLICATION}.tar --strip-components=1\n \n-LABEL io.airbyte.version=0.2.0\n+LABEL io.airbyte.version=0.2.1\n LABEL io.airbyte.name=airbyte/destination-meilisearch"
  },
  {
    "sha": "cb554622e2c4bfe7227ca62bf57f00bfd62aea5e",
    "filename": "airbyte-integrations/connectors/destination-meilisearch/src/main/java/io/airbyte/integrations/destination/meilisearch/MeiliSearchDestination.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-meilisearch/src/main/java/io/airbyte/integrations/destination/meilisearch/MeiliSearchDestination.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-meilisearch/src/main/java/io/airbyte/integrations/destination/meilisearch/MeiliSearchDestination.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-meilisearch/src/main/java/io/airbyte/integrations/destination/meilisearch/MeiliSearchDestination.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -44,7 +44,7 @@\n import io.airbyte.protocol.models.CatalogHelpers;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n import io.airbyte.protocol.models.ConfiguredAirbyteStream;\n-import io.airbyte.protocol.models.SyncMode;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import java.time.Instant;\n import java.util.Arrays;\n import java.util.HashMap;\n@@ -120,7 +120,7 @@ public AirbyteConnectionStatus check(JsonNode config) {\n     for (final ConfiguredAirbyteStream stream : catalog.getStreams()) {\n       final String indexName = getIndexName(stream);\n \n-      if (stream.getSyncMode() == SyncMode.FULL_REFRESH && indexExists(client, indexName)) {\n+      if (stream.getDestinationSyncMode() == DestinationSyncMode.OVERWRITE && indexExists(client, indexName)) {\n         client.deleteIndex(indexName);\n       }\n "
  },
  {
    "sha": "4abd92fb1d7a0e4d44068542862f47921c346b0e",
    "filename": "airbyte-integrations/connectors/destination-postgres/Dockerfile",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-postgres/Dockerfile",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-postgres/Dockerfile",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-postgres/Dockerfile?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -8,5 +8,5 @@ COPY build/distributions/${APPLICATION}*.tar ${APPLICATION}.tar\n \n RUN tar xf ${APPLICATION}.tar --strip-components=1\n \n-LABEL io.airbyte.version=0.2.0\n+LABEL io.airbyte.version=0.2.1\n LABEL io.airbyte.name=airbyte/destination-postgres"
  },
  {
    "sha": "9bfcaa78a8dbd2e0cfa3dbf5aab7f5b404c45ae4",
    "filename": "airbyte-integrations/connectors/destination-postgres/src/test/java/io/airbyte/integrations/destination/postgres/PostgresDestinationTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-postgres/src/test/java/io/airbyte/integrations/destination/postgres/PostgresDestinationTest.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-postgres/src/test/java/io/airbyte/integrations/destination/postgres/PostgresDestinationTest.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-postgres/src/test/java/io/airbyte/integrations/destination/postgres/PostgresDestinationTest.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -52,6 +52,7 @@\n import io.airbyte.protocol.models.CatalogHelpers;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n import io.airbyte.protocol.models.ConfiguredAirbyteStream;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import io.airbyte.protocol.models.ConnectorSpecification;\n import io.airbyte.protocol.models.Field;\n import io.airbyte.protocol.models.Field.JsonSchemaPrimitive;\n@@ -186,7 +187,10 @@ void testWriteSuccess() throws Exception {\n   @Test\n   void testWriteIncremental() throws Exception {\n     final ConfiguredAirbyteCatalog catalog = Jsons.clone(CATALOG);\n-    catalog.getStreams().forEach(stream -> stream.withSyncMode(SyncMode.INCREMENTAL));\n+    catalog.getStreams().forEach(stream -> {\n+      stream.withSyncMode(SyncMode.INCREMENTAL);\n+      stream.withDestinationSyncMode(DestinationSyncMode.APPEND);\n+    });\n \n     final PostgresDestination destination = new PostgresDestination();\n     final DestinationConsumer<AirbyteMessage> consumer = destination.write(config, catalog);"
  },
  {
    "sha": "3781ad274a3dd4fa8d8b39948e59f79c74edc714",
    "filename": "airbyte-integrations/connectors/destination-redshift/Dockerfile",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-redshift/Dockerfile",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-redshift/Dockerfile",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-redshift/Dockerfile?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -8,5 +8,5 @@ COPY build/distributions/${APPLICATION}*.tar ${APPLICATION}.tar\n \n RUN tar xf ${APPLICATION}.tar --strip-components=1\n \n-LABEL io.airbyte.version=0.2.0\n+LABEL io.airbyte.version=0.2.1\n LABEL io.airbyte.name=airbyte/destination-redshift"
  },
  {
    "sha": "dafd214142beb7d194ceb1d021c67abedfd23459",
    "filename": "airbyte-integrations/connectors/destination-snowflake/Dockerfile",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-snowflake/Dockerfile",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/destination-snowflake/Dockerfile",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/destination-snowflake/Dockerfile?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -8,5 +8,5 @@ COPY build/distributions/${APPLICATION}*.tar ${APPLICATION}.tar\n \n RUN tar xf ${APPLICATION}.tar --strip-components=1\n \n-LABEL io.airbyte.version=0.2.0\n+LABEL io.airbyte.version=0.2.1\n LABEL io.airbyte.name=airbyte/destination-snowflake"
  },
  {
    "sha": "87e234821aa4859dd3e240a679625c9b108b3949",
    "filename": "airbyte-integrations/connectors/source-jdbc/src/testFixtures/java/io/airbyte/integrations/source/jdbc/test/JdbcSourceStandardTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/source-jdbc/src/testFixtures/java/io/airbyte/integrations/source/jdbc/test/JdbcSourceStandardTest.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/source-jdbc/src/testFixtures/java/io/airbyte/integrations/source/jdbc/test/JdbcSourceStandardTest.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/source-jdbc/src/testFixtures/java/io/airbyte/integrations/source/jdbc/test/JdbcSourceStandardTest.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -56,6 +56,7 @@\n import io.airbyte.protocol.models.CatalogHelpers;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n import io.airbyte.protocol.models.ConfiguredAirbyteStream;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import io.airbyte.protocol.models.ConnectorSpecification;\n import io.airbyte.protocol.models.Field;\n import io.airbyte.protocol.models.Field.JsonSchemaPrimitive;\n@@ -437,6 +438,7 @@ void testReadOneTableIncrementallyTwice() throws Exception {\n     configuredCatalog.getStreams().forEach(airbyteStream -> {\n       airbyteStream.setSyncMode(SyncMode.INCREMENTAL);\n       airbyteStream.setCursorField(Lists.newArrayList(\"id\"));\n+      airbyteStream.setDestinationSyncMode(DestinationSyncMode.APPEND);\n     });\n \n     final JdbcState state = new JdbcState().withStreams(Lists.newArrayList(new JdbcStreamState().withStreamName(streamName)));\n@@ -492,6 +494,7 @@ void testReadMultipleTablesIncrementally() throws Exception {\n     configuredCatalog.getStreams().forEach(airbyteStream -> {\n       airbyteStream.setSyncMode(SyncMode.INCREMENTAL);\n       airbyteStream.setCursorField(Lists.newArrayList(\"id\"));\n+      airbyteStream.setDestinationSyncMode(DestinationSyncMode.APPEND);\n     });\n \n     final JdbcState state = new JdbcState().withStreams(Lists.newArrayList(new JdbcStreamState().withStreamName(streamName)));\n@@ -576,6 +579,7 @@ private void incrementalCursorCheck(\n       throws Exception {\n     airbyteStream.setSyncMode(SyncMode.INCREMENTAL);\n     airbyteStream.setCursorField(Lists.newArrayList(cursorField));\n+    airbyteStream.setDestinationSyncMode(DestinationSyncMode.APPEND);\n \n     final JdbcState state = new JdbcState()\n         .withStreams(Lists.newArrayList(new JdbcStreamState()"
  },
  {
    "sha": "94970a91a9ae76a536b29973b34bfcaccb2cd01d",
    "filename": "airbyte-integrations/connectors/source-jdbc/src/testFixtures/java/io/airbyte/integrations/source/jdbc/test/JdbcStressTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/source-jdbc/src/testFixtures/java/io/airbyte/integrations/source/jdbc/test/JdbcStressTest.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/source-jdbc/src/testFixtures/java/io/airbyte/integrations/source/jdbc/test/JdbcStressTest.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/source-jdbc/src/testFixtures/java/io/airbyte/integrations/source/jdbc/test/JdbcStressTest.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -42,6 +42,7 @@\n import io.airbyte.protocol.models.CatalogHelpers;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n import io.airbyte.protocol.models.ConfiguredAirbyteStream;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import io.airbyte.protocol.models.Field;\n import io.airbyte.protocol.models.Field.JsonSchemaPrimitive;\n import io.airbyte.protocol.models.SyncMode;\n@@ -199,7 +200,8 @@ private static ConfiguredAirbyteCatalog getConfiguredCatalogIncremental() {\n     return new ConfiguredAirbyteCatalog()\n         .withStreams(Collections.singletonList(new ConfiguredAirbyteStream().withStream(getCatalog().getStreams().get(0))\n             .withCursorField(Collections.singletonList(\"id\"))\n-            .withSyncMode(SyncMode.INCREMENTAL)));\n+            .withSyncMode(SyncMode.INCREMENTAL)\n+            .withDestinationSyncMode(DestinationSyncMode.APPEND)));\n   }\n \n   private static AirbyteCatalog getCatalog() {"
  },
  {
    "sha": "803b12b15ce79c70eaa4ddd798880cc4ebab941e",
    "filename": "airbyte-integrations/connectors/source-mysql/src/test-integration/java/io/airbyte/integrations/source/mysql/MySqlStandardTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/source-mysql/src/test-integration/java/io/airbyte/integrations/source/mysql/MySqlStandardTest.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/source-mysql/src/test-integration/java/io/airbyte/integrations/source/mysql/MySqlStandardTest.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/source-mysql/src/test-integration/java/io/airbyte/integrations/source/mysql/MySqlStandardTest.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -35,6 +35,7 @@\n import io.airbyte.protocol.models.CatalogHelpers;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n import io.airbyte.protocol.models.ConfiguredAirbyteStream;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import io.airbyte.protocol.models.ConnectorSpecification;\n import io.airbyte.protocol.models.Field;\n import io.airbyte.protocol.models.Field.JsonSchemaPrimitive;\n@@ -113,6 +114,7 @@ protected ConfiguredAirbyteCatalog getConfiguredCatalog() {\n         new ConfiguredAirbyteStream()\n             .withSyncMode(SyncMode.INCREMENTAL)\n             .withCursorField(Lists.newArrayList(\"id\"))\n+            .withDestinationSyncMode(DestinationSyncMode.APPEND)\n             .withStream(CatalogHelpers.createAirbyteStream(\n                 String.format(\"%s.%s\", config.get(\"database\").asText(), STREAM_NAME),\n                 Field.of(\"id\", JsonSchemaPrimitive.NUMBER),\n@@ -121,6 +123,7 @@ protected ConfiguredAirbyteCatalog getConfiguredCatalog() {\n         new ConfiguredAirbyteStream()\n             .withSyncMode(SyncMode.INCREMENTAL)\n             .withCursorField(Lists.newArrayList(\"id\"))\n+            .withDestinationSyncMode(DestinationSyncMode.APPEND)\n             .withStream(CatalogHelpers.createAirbyteStream(\n                 String.format(\"%s.%s\", config.get(\"database\").asText(), STREAM_NAME2),\n                 Field.of(\"id\", JsonSchemaPrimitive.NUMBER),"
  },
  {
    "sha": "568ce9baa9593444f7f0a7ccf918445ab58f0073",
    "filename": "airbyte-integrations/connectors/source-postgres/src/test-integration/java/io/airbyte/integrations/io/airbyte/integration_tests/sources/PostgresSourceStandardTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/airbytehq/airbyte/blob/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/source-postgres/src/test-integration/java/io/airbyte/integrations/io/airbyte/integration_tests/sources/PostgresSourceStandardTest.java",
    "raw_url": "https://github.com/airbytehq/airbyte/raw/35fcdd63b297398aaf594c4457327ed986f066ff/airbyte-integrations/connectors/source-postgres/src/test-integration/java/io/airbyte/integrations/io/airbyte/integration_tests/sources/PostgresSourceStandardTest.java",
    "contents_url": "https://api.github.com/repos/airbytehq/airbyte/contents/airbyte-integrations/connectors/source-postgres/src/test-integration/java/io/airbyte/integrations/io/airbyte/integration_tests/sources/PostgresSourceStandardTest.java?ref=35fcdd63b297398aaf594c4457327ed986f066ff",
    "patch": "@@ -35,6 +35,7 @@\n import io.airbyte.protocol.models.CatalogHelpers;\n import io.airbyte.protocol.models.ConfiguredAirbyteCatalog;\n import io.airbyte.protocol.models.ConfiguredAirbyteStream;\n+import io.airbyte.protocol.models.ConfiguredAirbyteStream.DestinationSyncMode;\n import io.airbyte.protocol.models.ConnectorSpecification;\n import io.airbyte.protocol.models.Field;\n import io.airbyte.protocol.models.Field.JsonSchemaPrimitive;\n@@ -113,6 +114,7 @@ protected ConfiguredAirbyteCatalog getConfiguredCatalog() {\n         new ConfiguredAirbyteStream()\n             .withSyncMode(SyncMode.INCREMENTAL)\n             .withCursorField(Lists.newArrayList(\"id\"))\n+            .withDestinationSyncMode(DestinationSyncMode.APPEND)\n             .withStream(CatalogHelpers.createAirbyteStream(\n                 STREAM_NAME,\n                 Field.of(\"id\", JsonSchemaPrimitive.NUMBER),\n@@ -121,6 +123,7 @@ protected ConfiguredAirbyteCatalog getConfiguredCatalog() {\n         new ConfiguredAirbyteStream()\n             .withSyncMode(SyncMode.INCREMENTAL)\n             .withCursorField(Lists.newArrayList(\"id\"))\n+            .withDestinationSyncMode(DestinationSyncMode.APPEND)\n             .withStream(CatalogHelpers.createAirbyteStream(\n                 STREAM_NAME2,\n                 Field.of(\"id\", JsonSchemaPrimitive.NUMBER),"
  }
]
