[
  {
    "sha": "e3ec8f9d956468880148ddd17e09f6e51f667250",
    "filename": ".github/workflows/Bilibili.yml",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/.github/workflows/Bilibili.yml",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/.github/workflows/Bilibili.yml",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/.github/workflows/Bilibili.yml?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -38,5 +38,8 @@ jobs:\n         SCKEY: ${{ secrets.SCKEY }}\n         DINGTALK: ${{secrets.DINGTALK}}\n         PUSHPLUSTK: ${{secrets.PUSHPLUSTK}}\n+        SENDKEY: ${{ secrets.SENDKEY }}\n+        TELEGRAM_BOT_TOKEN: ${{secrets.TELEGRAM_BOT_TOKEN}}\n+        TELEGRAM_CHAT_ID: ${{secrets.TELEGRAM_CHAT_ID}}\n       run:\n         sh gradlew runMain"
  },
  {
    "sha": "2a6c036ffed2ce28af6584c3440410e5200cb05e",
    "filename": ".github/workflows/avoid.yml",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/.github/workflows/avoid.yml",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/.github/workflows/avoid.yml",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/.github/workflows/avoid.yml?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -0,0 +1,32 @@\n+name: 'Avoid workflow being suspended'\n+\n+on:\n+  workflow_dispatch:\n+  schedule:\n+    - cron: '0 0 1 * *'\n+\n+jobs:\n+  avoid_workflow_suspended:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: 'Checkout codes'\n+        uses: actions/checkout@v2\n+      \n+      - name: 'Avoid Github Workflow being suspended'\n+        run: echo $(cat /proc/sys/kernel/random/uuid) > UUID.txt\n+      \n+      - name: 'Commit Files'\n+        id: commit\n+        run: |\n+          git config --local user.email \"action@github.com\"\n+          git config --local user.name \"GitHub Action\"\n+          git add .\n+          git diff --quiet && git diff --staged --quiet || git commit -am 'avoid being suspended'\n+          echo ::set-output name=status::success\n+           \n+      - name: 'GitHub Push'\n+        if: steps.commit.output.status != 'success'\n+        uses: ad-m/github-push-action@v0.6.0\n+        with:\n+          github_token: ${{ secrets.GITHUB_TOKEN }}\n+          branch: ${{ github.ref }}"
  },
  {
    "sha": "0cdfec762beae6d4ee54b733e15a7f49ea720cc8",
    "filename": ".idea/inspectionProfiles/Project_Default.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/.idea/inspectionProfiles/Project_Default.xml",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/.idea/inspectionProfiles/Project_Default.xml",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/.idea/inspectionProfiles/Project_Default.xml?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -30,7 +30,7 @@\n       <option name=\"IGNORE_JAVADOC_PERIOD\" value=\"true\" />\n       <option name=\"IGNORE_DUPLICATED_THROWS\" value=\"false\" />\n       <option name=\"IGNORE_POINT_TO_ITSELF\" value=\"false\" />\n-      <option name=\"myAdditionalJavadocTags\" value=\"Time,date\" />\n+      <option name=\"myAdditionalJavadocTags\" value=\"Time,date,base\" />\n     </inspection_tool>\n   </profile>\n </component>\n\\ No newline at end of file"
  },
  {
    "sha": "18448d955074f652a35e7a7d8644823858980509",
    "filename": "Dockerfile",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/Dockerfile",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/Dockerfile",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/Dockerfile?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -0,0 +1,13 @@\n+FROM anapsix/alpine-java:8u201b09_jdk_unlimited\n+\n+WORKDIR /app\n+COPY . /app\n+\n+RUN crontab -l | { cat; echo \"1 8 * * * java -jar /app/BilibiliTask-1.0.9-all.jar >> /var/log/bilibili_task.log 2>&1\"; } | crontab -\n+RUN touch /var/log/bilibili_task.log\n+\n+RUN sh gradlew clean build\n+RUN cp /app/build/libs/*.jar /app/\n+RUN sh gradlew clean\n+\n+CMD crond && tail -f /var/log/bilibili_task.log"
  },
  {
    "sha": "0c6f553221eeaecef91e65707dd70e0e2fab3178",
    "filename": "README.md",
    "status": "modified",
    "additions": 105,
    "deletions": 17,
    "changes": 122,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/README.md",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/README.md",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/README.md?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -1,10 +1,12 @@\n-<div align=\"center\"> \n+<div align=\"center\">\n <h1 align=\"center\">Bilibili助手</h1>\n <img src=\"https://img.shields.io/github/issues/srcrs/BilibiliTask?color=green\">\n <img src=\"https://img.shields.io/github/stars/srcrs/BilibiliTask?color=yellow\">\n <img src=\"https://img.shields.io/github/forks/srcrs/BilibiliTask?color=orange\">\n <img src=\"https://img.shields.io/github/license/srcrs/BilibiliTask?color=ff69b4\">\n <img src=\"https://img.shields.io/github/search/srcrs/BilibiliTask/main?color=blue\">\n+<img src=\"https://img.shields.io/github/v/release/srcrs/BilibiliTask?color=blueviolet\">\n+<img src=\"https://img.shields.io/github/languages/code-size/srcrs/BilibiliTask?color=critical\">\n </div>\n \n # 简介\n@@ -16,37 +18,41 @@\n \n 开源不易，如果本项目对你有帮助，那么就请给个`star`吧。😄\n \n+重要提示，如果收到了`b`站的账号安全通知，可以考虑将`Actions`禁用一段时间，观望一段时间再进行使用，具体禁用步骤，请参考此[Issues](https://github.com/srcrs/BilibiliTask/issues/78)。\n+\n # 功能\n \n-* [x] 自动获取经验(投币、点赞、分享视频) \n-* [x] 直播辅助(直播签到，自动送出即将过期的礼物) \n-* [x] 自动兑换银瓜子为硬币 \n-* [x] 自动领取年度大会员每月权益(每月`1`号领取`B`币劵、权益礼包) \n+* [x] 自动获取经验(投币、点赞、分享视频)\n+* [x] 直播辅助(直播签到，自动送出即将过期的礼物)\n+* [x] 自动兑换银瓜子为硬币\n+* [x] 自动领取年度大会员每月权益(每月`1`号领取`B`币劵、权益礼包)\n * [x] 月底自动用B币卷给自己充电(每月`28`号)\n * [x] 月底自动用B币卷兑换金瓜子(每月`28`号)\n-* [x] 漫画辅助脚本(漫画`APP`签到) \n+* [x] 漫画辅助脚本(漫画`APP`签到)\n * [x] 支持功能自定义(自定义投币数量，银瓜子兑换硬币开关等)\n * [x] 账户失效提醒(发送到你的微信或者钉钉提醒、邮箱提醒)\n * [x] 支持多种方式推送运行结果(钉钉、微信)\n+* [x] 支持Docker自己部署\n \n # 目录\n \n - [简介](#简介)\n - [功能](#功能)\n - [目录](#目录)\n-- [使用方法](#使用方法)\n+- [Github Actions部署方法](#github-actions-部署方法)\n   - [1.fork本项目](#1fork本项目)\n   - [2.准备需要的参数](#2准备需要的参数)\n   - [3.将获取到参数填到Secrets](#3将获取到参数填到secrets)\n   - [4.开启actions](#4开启actions)\n   - [5.进行一次push操作](#5进行一次push操作)\n+- [Docker部署方法](#Docker部署方法)\n - [进阶使用](#进阶使用)\n   - [1.配置文件说明](#1配置文件说明)\n   - [2.推送运行结果到微信](#2推送运行结果到微信)\n   - [3.推送运行结果到钉钉](#3推送运行结果到钉钉)\n+  - [4.使用`Telegram bot`推送运行结果到`Telgram`群组](#4使用telegram-bot推送运行结果到telgram群组)\n+  - [5.自定义程序运行时间](#5自定义程序运行时间)\n - [如何拉取最新代码](#如何拉取最新代码)\n-  - [方法一](#方法一)\n-  - [方法二](#方法二)\n - [更新日志](#更新日志)\n - [参考项目](#参考项目)\n \n@@ -57,7 +63,7 @@\n ✔ | 本次程序运行，成功的执行了代码，并完成了任务(例如，分享视频，今日未分享过，那么程序就应该请求分享视频的接口，协助完成分享视频的任务)。\n ❌ | 可能两种操作会出现这个符号。1.程序成功的执行了，尝试去完成任务，但是中途遇到了未知的失败。2.程序成功的执行了，检测到此类任务已经完成(例如，分享视频，今日已经分享过，那么程序不应该请求分享视频的接口，无需协助完成分享视频的任务)，就无需再去完成。可以理解为跳过或遇到错误。\n \n-# 使用方法\n+# Github Actions 部署方法\n \n ## 1.fork本项目\n \n@@ -126,6 +132,7 @@ platform | 用户设备的标识[android,ios]\n upList | up 主列表,优先给这些 up 主投币[uid]\n manga | 是否自动进行漫画签到 [true,false]\n upLive | 即将过期礼物给此up的直播间,填写其 uid\n+selectLike | 对于进行投币的视频选择是否点赞 , 默认不点赞 [0,1]\n \n ```yml\n #每天需要投币的数量 [0,5]。\n@@ -138,21 +145,35 @@ s2c: true\n autoBiCoin: 1\n #用户设备的标识 [android,ios]\n platform: android\n-# 自定义优先给这些 up 的视频投币 , 以yml数组的形式 , 填写其 uid (mid)\n+#自定义优先给这些 up 的视频投币 , 以yml数组的形式 , 填写其 uid (mid)\n upList:\n   - 477137547\n   - 14602398\n #进行漫画签到任务 [true,false]\n manga: true\n #优先送出即将过期礼物给此up的直播间,填写其 uid\n upLive: 477137547\n-``` \n+#对于进行投币的视频选择是否点赞 , 默认不点赞 [0,1]\n+selectLike: 0\n+```\n \n 如实在没有想给他投币的up主，可以考虑把我填上哦 `477137547` 😄\n \n+# Docker部署方法\n+\n+* 使用如下命令请自行替换所需的环境变量\n+* **每天00:01分运行程序**\n+```(shell script)\n+docker run -d \\\n+  --env BILI_JCT=自行填写 \\\n+  --env DEDEUSERID=自行填写 \\\n+  --env SESSDATA=自行填写 \\\n+  timmyovo/bilibilitask\n+```\n+\n ## 2.推送运行结果到微信\n \n-### 使用`server`酱将程序运行结果推送到微信。\n+### 使用`server`酱将程序运行结果推送到微信\n \n `server`酱官网：`http://sc.ftqq.com`\n \n@@ -170,6 +191,18 @@ SCKEY | xxxxx\n \n ![](img/server酱推送的结果.jpg)\n \n+### 使用`server`酱测试号版推送运行结果到微信\n+\n+`server`酱测试号版官网：`https://sct.ftqq.com/`\n+\n++ 按照`server`酱测试号版官网使用教程，用微信扫码登录。\n+\n++ 获得`SENDKEY`并将其填入到`Secrets`中。\n+\n+Name | Value\n+-|-\n+SENDKEY | xxxxx\n+\n ### 使用`push+`推送运行结果到微信\n \n `push+`官网：`https://pushplus.hxtrip.com`\n@@ -190,21 +223,50 @@ PUSHPLUSTK | xxxxx\n \n 2.获取钉钉自定义机器人的`Webhook`，将其填写到`Secrets`中\n \n-键值对如下格式: \n+键值对如下格式:\n \n Name | Value\n -|-\n-DINGTALK | https://oapi.dingtalk.com/robot/send?access_token=064559acaa666c43d5ba197656594f288f3acef9a64f4f43218beddd1c7b7050\n+DINGTALK | <https://oapi.dingtalk.com/robot/send?access_token=064559acaa666c43d5ba197656594f288f3acef9a64f4f43218beddd1c7b7050>\n \n ![](img/获取钉钉Webhook.gif)\n \n+## 4.使用`Telegram bot`推送运行结果到`Telgram`群组\n+\n+1. 首先需要创建 telegram bot 并获取 telegram bot token，可以参考[文档](https://docs.microsoft.com/en-us/azure/bot-service/bot-service-channel-connect-telegram)；\n+2. 将机器人加入群组中，并获取群组ID，查看[Stackoverflow问答](https://stackoverflow.com/a/32572159)；\n+3. 将 telegram bot token 和群组ID添加到`Secrets`中即可。\n+\n+在`Secrets`中的`Name`和`Value`格式如下：\n+\n+Name               | Value\n+-------------------|------\n+TELEGRAM_BOT_TOKEN | xxxxx\n+TELEGRAM_CHAT_ID   | xxxxx\n+\n+![](img/TgBot运行结果.jpg)\n+\n+## 5.自定义程序运行时间\n+\n+在`.github/workflows/Bilibili.yml`修改`cron`表达式，需要注意的是，`cron`表达式是国际时间，\n+需要换算到国内时间，往后推8个小时，例如国际时间是12点钟，则在国内是20点钟。\n+\n+![](img/自定义程序运行时间.png)\n+\n+# Docker\n+\n+* **每天00:01分运行程序**\n+```\n+docker run -d --env BILI_JCT=自行填写 --env DEDEUSERID=自行填写 --env SESSDATA=自行填写 timmyovo/bilibilitask\n+```\n+\n # 如何拉取最新代码\n \n ## 方法一\n \n 在`github`安装`pull`，会自动帮你检测上游仓库，并帮助你更新代码\n \n-地址在这: https://github.com/apps/pull\n+地址在这: <https://github.com/apps/pull>\n \n 由于添加有配置文件`config.yml`，有可能会覆盖你自定义的`config.yml`，需要注意。\n \n@@ -237,13 +299,39 @@ git pull upstream main\n 4、将更新后的代码推送到你的仓库\n \n ```sh\n-git push origin main \n+git push origin main\n ```\n \n 由于添加有配置文件`config.yml`，有可能会覆盖你自定义的`config.yml`，需要注意。\n \n # 更新日志\n \n+## 2020-02-06\n+\n++ 避免投币给单一`up`主\n+\n++ 更新`b`币卷充电接口\n+\n++ 修复投币计算(投币数为负数)\n+\n++ 修复近30天未投币出现的bug\n+\n+## 2020-12-17\n+\n++ 增加`server`酱测试号版推送，感谢[sh4wnzec](https://github.com/sh4wnzec)\n+\n++ 增加`Telegram bot`推送，感谢[qiwihui](https://github.com/qiwihui)\n+\n+## 2020-12-07\n+\n++ 发布1.0.8版本\n+\n++ 修复用户无动态获取视频信息错误\n+\n++ 修复从动态列表中获取到自己投稿视频的错误\n+\n++ 增加一些自定义配置点赞\n+\n ## 2020-11-28\n \n + 去除UA(貌似是没有影响的)"
  },
  {
    "sha": "f86eb23df9f58bf8c2c3d9f6e310dc1d9fc0df02",
    "filename": "UUID.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/UUID.txt",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/UUID.txt",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/UUID.txt?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -0,0 +1 @@\n+b4dbbeec-03a1-4b2d-a5eb-49895bbfeacd"
  },
  {
    "sha": "274f0b4780ab6fecb84e5320af16d8c20a468aae",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 12,
    "deletions": 1,
    "changes": 13,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/build.gradle",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/build.gradle",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/build.gradle?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -1,10 +1,11 @@\n plugins {\n     id 'java'\n     id \"io.freefair.lombok\" version '5.3.0'\n+    id 'com.github.johnrengelman.shadow' version '6.1.0'\n }\n \n group = 'top.srcrs'\n-version = '1.0.7'\n+version = '1.0.9'\n sourceCompatibility = JavaVersion.VERSION_1_8\n \n configurations {\n@@ -41,6 +42,16 @@ dependencies {\n     testImplementation junit\n }\n \n+jar {\n+    manifest {\n+        attributes(\"Main-Class\": \"top.srcrs.BiliStart\")\n+    }\n+}\n+\n+artifacts {\n+    archives shadowJar\n+}\n+\n test {\n     useJUnitPlatform()\n }"
  },
  {
    "sha": "1526f75e3c5c2cf9c1841c5e738271f4647b796d",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/gradle/wrapper/gradle-wrapper.properties?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -1,5 +1,5 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-6.7.1-bin.zip\n+distributionUrl=https\\://downloads.gradle-dn.com/distributions/gradle-6.7.1-bin.zip\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n\\ No newline at end of file"
  },
  {
    "sha": "fe859d174f6d0df25d3d482deddde7c98458c922",
    "filename": "img/TgBot运行结果.jpg",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/TgBot%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.jpg",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/TgBot%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.jpg",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/img/TgBot%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.jpg?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5"
  },
  {
    "sha": "51442837f1ccc7310d594b164914b8f42fd2ddfb",
    "filename": "img/server酱推送的结果.jpg",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/server%E9%85%B1%E6%8E%A8%E9%80%81%E7%9A%84%E7%BB%93%E6%9E%9C.jpg",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/server%E9%85%B1%E6%8E%A8%E9%80%81%E7%9A%84%E7%BB%93%E6%9E%9C.jpg",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/img/server%E9%85%B1%E6%8E%A8%E9%80%81%E7%9A%84%E7%BB%93%E6%9E%9C.jpg?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5"
  },
  {
    "sha": "b80be89ac2b179697682ebe3ca7eee86f5b8da12",
    "filename": "img/开启actions.gif",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E5%BC%80%E5%90%AFactions.gif",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E5%BC%80%E5%90%AFactions.gif",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/img/%E5%BC%80%E5%90%AFactions.gif?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5"
  },
  {
    "sha": "e5af20a70260605f1df630dfb185bc0c1b8527af",
    "filename": "img/添加Secrets.png",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E6%B7%BB%E5%8A%A0Secrets.png",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E6%B7%BB%E5%8A%A0Secrets.png",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/img/%E6%B7%BB%E5%8A%A0Secrets.png?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5"
  },
  {
    "sha": "edba2c4d8f743279e16a2a31b0ceaf5265777bf4",
    "filename": "img/自定义程序运行时间.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4.png",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4.png",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/img/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4.png?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5"
  },
  {
    "sha": "c416cd5bd4c7b5d10e28014a0776e4f468a419ef",
    "filename": "img/获取Cookie.png",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%8E%B7%E5%8F%96Cookie.png",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%8E%B7%E5%8F%96Cookie.png",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/img/%E8%8E%B7%E5%8F%96Cookie.png?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5"
  },
  {
    "sha": "e43074f2c43d4cc129e5c2bc8ebf994a0a51f9bd",
    "filename": "img/获取Json.jpg",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%8E%B7%E5%8F%96Json.jpg",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%8E%B7%E5%8F%96Json.jpg",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/img/%E8%8E%B7%E5%8F%96Json.jpg?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5"
  },
  {
    "sha": "63c4916adad69fc9e35dca5b2a36ddd29a4e654d",
    "filename": "img/获取钉钉Webhook.gif",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%8E%B7%E5%8F%96%E9%92%89%E9%92%89Webhook.gif",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%8E%B7%E5%8F%96%E9%92%89%E9%92%89Webhook.gif",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/img/%E8%8E%B7%E5%8F%96%E9%92%89%E9%92%89Webhook.gif?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5"
  },
  {
    "sha": "4b609cf44e46e8c6fe37971ab828fcd4aa59d6dd",
    "filename": "img/运行结果.gif",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.gif",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.gif",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/img/%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C.gif?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5"
  },
  {
    "sha": "e8f995288ec35c3da61ee88c50777eaddd8c6848",
    "filename": "img/进行一次push操作.gif",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%BF%9B%E8%A1%8C%E4%B8%80%E6%AC%A1push%E6%93%8D%E4%BD%9C.gif",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/img/%E8%BF%9B%E8%A1%8C%E4%B8%80%E6%AC%A1push%E6%93%8D%E4%BD%9C.gif",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/img/%E8%BF%9B%E8%A1%8C%E4%B8%80%E6%AC%A1push%E6%93%8D%E4%BD%9C.gif?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5"
  },
  {
    "sha": "5d6c2fbc57f7327f40f343e38f87477d1c98b62e",
    "filename": "src/main/java/top/srcrs/BiliStart.java",
    "status": "modified",
    "additions": 23,
    "deletions": 12,
    "changes": 35,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/BiliStart.java",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/BiliStart.java",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/main/java/top/srcrs/BiliStart.java?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -9,6 +9,8 @@\n import java.lang.reflect.Constructor;\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Comparator;\n import java.util.List;\n \n /**\n@@ -38,7 +40,6 @@ public static void main(String ...args) {\n             log.info(\"【用户名】: {}\",StringUtil.hideString(USER_DATA.getUname(),1,1,'*'));\n             log.info(\"【硬币】: {}\", USER_DATA.getMoney());\n             log.info(\"【经验】: {}\", USER_DATA.getCurrentExp());\n-            log.info(\"【等级】: {}\",USER_DATA.getCurrentLevel());\n             /* 动态执行task包下的所有java代码 */\n             scanTask();\n             /* 当用户等级为Lv6时，升级到下一级 next_exp 值为 -- 代表无穷大 */\n@@ -58,6 +59,10 @@ public static void main(String ...args) {\n         if(StringUtil.isNotBlank(System.getenv(\"SCKEY\"))){\n             SendServer.send(System.getenv(\"SCKEY\"));\n         }\n+        // Server酱 测试号版\n+        if(StringUtil.isNotBlank(System.getenv(\"SENDKEY\"))){\n+            SendServerChan.send(System.getenv(\"SENDKEY\"));\n+        }\n         // PUSHPLUSTK\n         if(StringUtil.isNotBlank(System.getenv(\"PUSHPLUSTK\"))){\n             SendPushPlus.send(System.getenv(\"PUSHPLUSTK\"));\n@@ -66,6 +71,11 @@ public static void main(String ...args) {\n         if(StringUtil.isNotBlank(System.getenv(\"DINGTALK\"))){\n             SendDingTalk.send(System.getenv(\"DINGTALK\"));\n         }\n+        /* Telegram Bot推送 */\n+        if(StringUtil.isNotBlank(System.getenv(\"TELEGRAM_BOT_TOKEN\"))\n+                && StringUtil.isNotBlank(System.getenv(\"TELEGRAM_CHAT_ID\"))){\n+            SendTelegram.send(System.getenv(\"TELEGRAM_BOT_TOKEN\"), System.getenv(\"TELEGRAM_CHAT_ID\"));\n+        }\n     }\n \n     /**\n@@ -75,22 +85,26 @@ public static void main(String ...args) {\n      * 因为部分任务是需要有顺序的去执行\n      */\n     private static void scanTask() {\n-        List<String> classNameList = new ArrayList<>();\n-        PackageScanner pack = new PackageScanner() {\n+        List<Class<?>> clazzList = new ArrayList<>();\n+        TaskRegistry pack = new TaskRegistry() {\n             @Override\n             public void dealClass(String className) {\n                 try{\n-                    classNameList.add(className);\n+                    Class<?> clazz = Class.forName(className);\n+                    // 判断类是否实现了接口Task\n+                    if (Arrays.stream(clazz.getInterfaces()).parallel().anyMatch(taskI -> taskI.equals(Task.class))) {\n+                        clazzList.add(clazz);\n+                    }\n                 } catch (Exception e){\n                     log.error(\"💔反射获取对象错误 : \", e);\n                 }\n             }\n         };\n-        pack.scannerPackage(\"top.srcrs.task\");\n+        pack.runTasks();\n \n-        classNameList.stream().sorted().forEach(className -> {\n-            try{\n-                Constructor<?> constructor = Class.forName(className).getConstructor();\n+        clazzList.stream().sorted(Comparator.comparing(Class::getName)).forEach(clazz -> {\n+            try {\n+                Constructor<?> constructor = clazz.getConstructor();\n                 Object object = constructor.newInstance();\n                 Method method = object.getClass().getMethod(\"run\");\n                 method.invoke(object);\n@@ -101,13 +115,10 @@ public void dealClass(String className) {\n     }\n \n     public static boolean checkEnv() {\n-\n         String BILI_JCT = System.getenv(\"BILI_JCT\");\n         String SESSDATA = System.getenv(\"SESSDATA\");\n         String DEDEUSERID = System.getenv(\"DEDEUSERID\");\n-        USER_DATA.setCookie(System.getenv(\"BILI_JCT\"),\n-                System.getenv(\"SESSDATA\"),\n-                System.getenv(\"DEDEUSERID\"));\n+        USER_DATA.setCookie(BILI_JCT, SESSDATA, DEDEUSERID);\n         return StringUtil.isAnyBlank(BILI_JCT, SESSDATA, DEDEUSERID);\n     }\n "
  },
  {
    "sha": "bf971f0dd40e18b3168beb1c8c76b46daaf40c9f",
    "filename": "src/main/java/top/srcrs/domain/Config.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/domain/Config.java",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/domain/Config.java",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/main/java/top/srcrs/domain/Config.java?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -31,6 +31,16 @@ private Config(){}\n     private static boolean manga;\n     /** 送出即将过期礼物给此 up 的直播间 */\n     private static String upLive;\n+    /** 对于进行投币的视频选择是否点赞 */\n+    private static String selectLike;\n+\n+    public String getSelectLike() {\n+        return selectLike;\n+    }\n+\n+    public void setSelectLike(String selectLike) {\n+        Config.selectLike = selectLike;\n+    }\n \n     public String getUpLive() {\n         return upLive;"
  },
  {
    "sha": "252a30e38e56f1022045027bf4ff685775e09792",
    "filename": "src/main/java/top/srcrs/task/bigvip/BiCoinApply.java",
    "status": "modified",
    "additions": 9,
    "deletions": 7,
    "changes": 16,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/task/bigvip/BiCoinApply.java",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/task/bigvip/BiCoinApply.java",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/main/java/top/srcrs/task/bigvip/BiCoinApply.java?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -50,6 +50,7 @@ public void run() {\n                     doMelonSeed(couponBalance);\n                     break;\n                 default:\n+                    log.info(\"【使用B币卷】: \" + \"自定义配置不使用\");\n                     break;\n             }\n         } catch (Exception e){\n@@ -67,35 +68,36 @@ public void doCharge(int couponBalance) {\n          * 判断条件 是月底&&b币券余额大于2&&配置项允许自动充电\n          */\n         if(couponBalance < 2){\n-            log.warn(\"【用B币卷给自己充电】: {}<2 ,无法给自己充电❌\", couponBalance);\n+            log.warn(\"【使用B币卷】: B币卷不足 2 个 ,无法给自己充电❌\");\n             return ;\n         }\n         /* 被充电用户的userID */\n         String userId = userData.getMid();\n         JSONObject pJson = new JSONObject();\n-        pJson.put(\"elec_num\", couponBalance * 10);\n+        pJson.put(\"bp_num\", couponBalance);\n+        pJson.put(\"is_bp_remains_prior\",\"true\");\n         pJson.put(\"up_mid\", userId);\n         pJson.put(\"otype\", \"up\");\n         pJson.put(\"oid\", userId);\n         pJson.put(\"csrf\", userData.getBiliJct());\n \n-        JSONObject jsonObject = Request.post(\"https://api.bilibili.com/x/ugcpay/trade/elec/pay/quick\", pJson);\n+        JSONObject jsonObject = Request.post(\"https://api.bilibili.com/x/ugcpay/web/v2/trade/elec/pay/quick\", pJson);\n \n         Integer resultCode = jsonObject.getInteger(\"code\");\n         if (resultCode == 0) {\n             JSONObject dataJson = jsonObject.getJSONObject(\"data\");\n             log.debug(dataJson.toString());\n             Integer statusCode = dataJson.getInteger(\"status\");\n             if (statusCode == 4) {\n-                log.info(\"【用B币卷给自己充电】: 本次给自己充值了: {}个电池✔\", couponBalance * 10);\n+                log.info(\"【使用B币卷】: 本次给自己充值了: {}个电池✔\", couponBalance * 10);\n                 /* 获取充电留言token */\n                 String orderNo = dataJson.getString(\"order_no\");\n                 chargeComments(orderNo);\n             } else {\n-                log.warn(\"【用B币卷给自己充电】: \" + \"失败, 原因为: {}❌\", jsonObject);\n+                log.warn(\"【使用B币卷】: \" + \"充电失败, 原因为: {}❌\", jsonObject);\n             }\n         } else {\n-            log.warn(\"【用B币卷给自己充电】: \" + \"失败, 原因为: {}❌\", jsonObject);\n+            log.warn(\"【使用B币卷】: \" + \"充电失败, 原因为: {}❌\", jsonObject);\n         }\n     }\n \n@@ -137,7 +139,7 @@ public void doMelonSeed(int couponBalance){\n         } else{\n             msg = post.getString(\"message\") + \"❌\";\n         }\n-        log.info(\"【B币卷兑换金瓜子】: {}\", msg);\n+        log.info(\"【使用B币卷】: {}\", msg);\n     }\n \n }"
  },
  {
    "sha": "373da51bebe593b82efdcafc76234b73637b78ed",
    "filename": "src/main/java/top/srcrs/task/daily/ThrowCoinTask.java",
    "status": "modified",
    "additions": 66,
    "deletions": 9,
    "changes": 75,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/task/daily/ThrowCoinTask.java",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/task/daily/ThrowCoinTask.java",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/main/java/top/srcrs/task/daily/ThrowCoinTask.java?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -11,6 +11,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Random;\n+import java.util.stream.Collectors;\n \n /**\n  * 进行视频投币\n@@ -28,6 +29,8 @@ public void run() {\n         try {\n             /* 今天投币获得了多少经验 */\n             int reward = getReward();\n+            /* 更新每天登录后所能领取的登录硬币奖励 */\n+            updateMoney();\n             /* 还剩多少个硬币 */\n             int num2 = USER_DATA.getMoney().intValue();\n             /* 配置类中设置投币数 */\n@@ -36,13 +39,12 @@ public void run() {\n                当今日已经投过 num3 个硬币将不再进行投币\n                否则则应该投 (num3-num1) 个硬币\n             */\n-            int num1 = (num3*10 - reward) / 10;\n+            int num1 = Math.max((num3*10 - reward) / 10,0);\n             /* 避免设置投币数为负数异常 */\n             num3 = Math.max(num3,0);\n             /* 实际需要投 num个硬币 */\n             int num = Math.min(num3,Math.min(num1,num2));\n-            log.info(\"【投币计算】: 当前硬币数: \" + num2\n-                    + \" ,自定义投币数: \" + num3\n+            log.info(\"【投币计算】: 自定义投币数: \" + num3\n                     + \" ,今日已投币: \" + reward/10\n                     + \" ,还需投币: \"+num1\n                     + \" ,实际投币: \"+num);\n@@ -58,9 +60,9 @@ public void run() {\n             /* 获取自定义配置中 up 主投稿的30条最新视频 */\n             if(config.getUpList() == null && num > 0){\n                 log.info(\"【优先投币up】: 未配置优先投币up主\");\n-            } else{\n+            } else {\n                 if(num - videoAid.size() > 0){\n-                    for(String up : config.getUpList()){\n+                    for(String up : getTodayUpList(num)) {\n                         videoAid.addAll(spaceSearch(up,num - videoAid.size()));\n                         log.info(\"【优先投币up {} 】: 成功获取到: {} 个视频\", up, videoAid.size());\n                     }\n@@ -76,13 +78,14 @@ public void run() {\n                 videoAid.addAll(getRegions(\"6\", \"1\",num - videoAid.size()));\n                 log.info(\"【分区热门视频】: 成功获取到: {} 个视频\", videoAid.size());\n             }\n-            /* 给每个视频投 1 个币,点 1 个赞 */\n+            /* 给每个视频投 1 个币 */\n+            /* 在配置文件中读取是否为投币视频点赞 */\n             for (int i = 0; i < num; i++) {\n                 /* 视频的aid */\n                 String aid = videoAid.get(i);\n-                JSONObject json = throwCoin(aid, \"1\", \"1\");\n+                JSONObject json = throwCoin(aid, \"1\", config.getSelectLike());\n                 /* 输出的日志消息 */\n-                String msg ;\n+                String msg;\n                 if (\"0\".equals(json.getString(\"code\"))) {\n                     msg = \"硬币-1✔\";\n                 } else {\n@@ -97,6 +100,16 @@ public void run() {\n         }\n     }\n \n+    /**\n+     * 更新每天登录后所能领取的登录硬币奖励\n+     * @author Arriv9l\n+     * @Time 2021-01-24\n+     */\n+    public void updateMoney() {\n+        JSONObject jsonObject = Request.get(\"https://api.bilibili.com/x/web-interface/nav\");\n+        USER_DATA.setMoney(jsonObject.getJSONObject(\"data\").getBigDecimal(\"money\"));\n+    }\n+\n     /**\n      * 给视频投币\n      * @param aid         视频 aid 号\n@@ -179,7 +192,7 @@ public Integer getReward() {\n             for(Object object : cards){\n                 JSONObject card = (JSONObject) object;\n                 String aid = card.getJSONObject(\"desc\").getString(\"rid\");\n-                String mid = card.getJSONObject(\"desc\").getString(\"rid\");\n+                String mid = card.getJSONObject(\"desc\").getString(\"uid\");\n                 if (isThrowCoins(aid, mid)) {\n                     videoAid.add(aid);\n                 }\n@@ -211,6 +224,50 @@ private boolean isThrowCoins(String aid, String mid){\n         return multiply == 0;\n     }\n \n+    /**\n+     * 获取用户30天内投过硬币的视频\n+     * @return JSONArray 用户30天内投过硬币的视频\n+     * @author Arriv9l\n+     * @base https://github.com/SocialSisterYi/bilibili-API-collect/blob/master/user/space.md#获取用户最近投币的视频明细\n+     * @Time 2021-01-24\n+     */\n+    private JSONArray getThrowCoinVideoList() {\n+        JSONObject pJson = new JSONObject();\n+        pJson.put(\"vmid\", System.getenv(\"DEDEUSERID\"));\n+        JSONObject object = Request.get(\"http://api.bilibili.com/x/space/coin/video\", pJson);\n+        return object.getJSONArray(\"data\");\n+    }\n+\n+    /**\n+     * 获取今天可投币的自定义配置 up 主\n+     * @param num 需要投币的数量\n+     * @return List<String> 今天可投币的自定义配置 up 主\n+     * @author Arriv9l\n+     * @base https://juejin.cn/post/6844903833726894093\n+     * @Time 2021-01-24\n+     */\n+    private List<String> getTodayUpList(int num) {\n+        JSONArray vList = getThrowCoinVideoList();\n+        List<String> configUpList = config.getUpList();\n+        List<String> upList = new ArrayList<>();\n+        // 近30天未投币直接跳过\n+        if(vList==null){\n+            return new ArrayList<>(configUpList);\n+        }\n+        for (Object object : vList) {\n+            JSONObject data = (JSONObject) object;\n+            String mid = data.getJSONObject(\"owner\").getString(\"mid\");\n+            if (configUpList.contains(mid) && !upList.contains(mid)) {\n+                upList.add(mid);\n+                if (upList.size() + num == configUpList.size()) {\n+                    break;\n+                }\n+            }\n+        }\n+        /* 求 configUpList 与 upList 的差集 */\n+        return configUpList.stream().filter(item -> !upList.contains(item)).collect(Collectors.toList());\n+    }\n+\n     /**\n      * 获取 up 主的最新30条视频投稿信息\n      * 从中挑选从未投币的视频进行投币"
  },
  {
    "sha": "20592d30b4424beb42abbbabf3f248f00ab93c09",
    "filename": "src/main/java/top/srcrs/util/PackageScanner.java",
    "status": "removed",
    "additions": 0,
    "deletions": 74,
    "changes": 74,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6efa9b298c8728b044128487e5141608cdb039f2/src/main/java/top/srcrs/util/PackageScanner.java",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6efa9b298c8728b044128487e5141608cdb039f2/src/main/java/top/srcrs/util/PackageScanner.java",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/main/java/top/srcrs/util/PackageScanner.java?ref=6efa9b298c8728b044128487e5141608cdb039f2",
    "patch": "@@ -1,74 +0,0 @@\n-package top.srcrs.util;\n-\n-import lombok.extern.slf4j.Slf4j;\n-\n-import java.io.File;\n-import java.net.URL;\n-import java.util.Enumeration;\n-\n-/**\n- * 扫描task包下的所有的class文件\n- * @author srcrs\n- * @Time 2020-10-13\n- */\n-@Slf4j\n-public abstract class PackageScanner {\n-\n-    /**\n-     * 将 . 路径换为 / 路径\n-     * @param packageName 包名\n-     * @author srcrs\n-     * @Time 2020-10-13\n-     */\n-    public void scannerPackage(String packageName) {\n-        String packagePath = packageName.replace('.', '/');\n-        /* 真正的路径中是以 / 或 \\ 相隔，此路径以 \\ 相隔 */\n-        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n-        try {\n-            Enumeration<URL> resources = classLoader.getResources(packagePath);\n-            /* 得到绝对路径 */\n-            while (resources.hasMoreElements()) {\n-                URL url = resources.nextElement();\n-                File root = new File(url.toURI());\n-                /* 将url转化成uri，以此创建File对象，后面解析就变成了对File的处理 */\n-                scannerDirectory(root, packageName);\n-            }\n-        } catch (Exception e) {\n-            log.error(\"💔扫包错误 : \", e);\n-        }\n-    }\n-\n-    /**\n-     * 递归搜索target路径下所有的class文件\n-     * @param currentFile java文件生成的class文件路径\n-     * @param packageName 包名\n-     * @author srcrs\n-     * @Time 2020-10-13\n-     */\n-    private void scannerDirectory(File currentFile, String packageName) {\n-        if (!currentFile.isDirectory()) {\n-            return;\n-        }\n-        File[] files = currentFile.listFiles();\n-        /* 得到File对象类型的【完整路径】的数组 */\n-        for (File file : files != null ? files : new File[0]) {\n-            if (file.isFile() && file.getName().endsWith(\".class\")) {\n-                String fileName = file.getName().replace(\".class\", \"\");\n-                /* 去除掉后缀 .class */\n-                String className = packageName + \".\" + fileName;\n-                /* 得到带包名的类，为取得元类对象做准备 */\n-                dealClass(className);\n-                /* 将得到的元类对象通过抽象方法参数传递给用户，以便用户后续操作。 */\n-            } else if (file.isDirectory()) {\n-                scannerDirectory(file, packageName + \".\" + file.getName());\n-                /* 此处采用递归，只要是目录就继续往下一层遍历，直到file.isFile()为true,且以.class结尾 */\n-            }\n-        }\n-    }\n-\n-    /**\n-     * 获得真实的className\n-     * @param className className\n-     */\n-    public abstract void dealClass(String className);\n-}"
  },
  {
    "sha": "ad27950af4be28ecfbfc0bb42cc0d7e5db45399c",
    "filename": "src/main/java/top/srcrs/util/SendServerChan.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/util/SendServerChan.java",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/util/SendServerChan.java",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/main/java/top/srcrs/util/SendServerChan.java?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -0,0 +1,61 @@\n+package top.srcrs.util;\n+\n+import com.alibaba.fastjson.JSONObject;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClients;\n+import org.apache.http.util.EntityUtils;\n+\n+import java.nio.charset.StandardCharsets;\n+\n+/**\n+ * 将日志消息发送到用户的 server 酱接口测试版 （微信）\n+ *\n+ * @author sh4wnzec\n+ * @Time 2020-12-25\n+ */\n+@Slf4j\n+public class SendServerChan {\n+\n+    private SendServerChan(){}\n+\n+    /**\n+     * 发送消息给用户，如果绑定了微信，会发送到微信上。\n+     * https://sct.ftqq.com/sendkey\n+     *\n+     * @param sendkey 需要从server酱的官网注册获取\n+     * @author sh4wnzec\n+     * @Time 2020-12-25\n+     */\n+    public static void send(String sendkey) {\n+        /* 将要推送的数据 */\n+        JSONObject pJson = new JSONObject();\n+        pJson.put(\"title\", \"BilibiliTask 运行结果\");\n+        pJson.put(\"desp\", ReadLog.getMarkDownString(\"logs/logback.log\"));\n+\n+        HttpUriRequest httpPost = RequestBuilder.post()\n+                                                .addHeader(\"Content-Type\", \"application/x-www-form-urlencoded\")\n+                                                .setUri(\"https://sctapi.ftqq.com/\" + sendkey + \".send\")\n+                                                .addParameters(Request.getPairList(pJson))\n+                                                .build();\n+\n+        try (CloseableHttpClient client = HttpClients.createDefault()) {\n+            HttpResponse resp = client.execute(httpPost);\n+            HttpEntity entity = resp.getEntity();\n+            String respContent = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n+            if (resp.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {\n+                log.info(\"【Server酱推送】: 正常✔\");\n+            } else {\n+                log.info(\"【Server酱推送】: 失败, 原因为: {}❌\", respContent);\n+            }\n+        } catch (Exception e) {\n+            log.error(\"💔Server酱发送错误 : \", e);\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "2ecae836ecbfc3c6dd8ebdb1c5a5952166a40a3e",
    "filename": "src/main/java/top/srcrs/util/SendTelegram.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/util/SendTelegram.java",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/util/SendTelegram.java",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/main/java/top/srcrs/util/SendTelegram.java?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -0,0 +1,59 @@\n+package top.srcrs.util;\n+\n+import com.alibaba.fastjson.JSONObject;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.http.HttpEntity;\n+import org.apache.http.HttpResponse;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.client.methods.RequestBuilder;\n+import org.apache.http.entity.StringEntity;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClients;\n+import org.apache.http.util.EntityUtils;\n+\n+import java.nio.charset.StandardCharsets;\n+\n+/**\n+ * 给 Telegram 群组机器人推送消息\n+ * @author qiwihui\n+ * @Time 2020-12-16\n+ */\n+@Slf4j\n+public class SendTelegram {\n+\n+    private SendTelegram(){}\n+\n+    /**\n+     * 发送消息给群组\n+     * @param telegramBotToken 机器人 Token\n+     * @param telegramChatID 群组 ID\n+     * @author qiwihui\n+     * @Time 2020-12-16\n+     */\n+    public static void send(String telegramBotToken, String telegramChatID){\n+        /* 将要推送的数据 */\n+        String desp = ReadLog.getMarkDownString(\"logs/logback.log\");\n+        JSONObject bodyJson = new JSONObject();\n+        bodyJson.put(\"chat_id\", telegramChatID);\n+        bodyJson.put(\"text\", \"BilibiliTask运行结果:\\n\" + desp);\n+        HttpUriRequest httpPost = RequestBuilder.post()\n+                .addHeader(\"Content-Type\", \"application/json;charset=utf-8\")\n+                .setUri(\"https://api.telegram.org/bot\"+telegramBotToken+\"/sendMessage\")\n+                .setEntity(new StringEntity(bodyJson.toString(),\"UTF-8\"))\n+                .build();\n+        try(CloseableHttpClient client = HttpClients.createDefault()){\n+            HttpResponse resp = client.execute(httpPost);\n+            HttpEntity entity = resp.getEntity();\n+            String respContent = EntityUtils.toString(entity, StandardCharsets.UTF_8);\n+            if(resp.getStatusLine().getStatusCode() == HttpStatus.SC_OK){\n+                log.info(\"【Telegram推送】: 正常✔\");\n+            } else{\n+                log.info(\"【Telegram推送】: 失败, 原因为: {}❌\", respContent);\n+            }\n+            System.out.println(respContent);\n+        } catch (Exception e){\n+            log.error(\"💔Telegram通知错误 : \", e);\n+        }\n+    }\n+}"
  },
  {
    "sha": "43d59befee7e828c8f3449152061f3ebe7414bea",
    "filename": "src/main/java/top/srcrs/util/TaskRegistry.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/util/TaskRegistry.java",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/java/top/srcrs/util/TaskRegistry.java",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/main/java/top/srcrs/util/TaskRegistry.java?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -0,0 +1,50 @@\n+package top.srcrs.util;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import top.srcrs.Task;\n+import top.srcrs.task.bigvip.BiCoinApply;\n+import top.srcrs.task.bigvip.CollectVipGift;\n+import top.srcrs.task.daily.DailyTask;\n+import top.srcrs.task.daily.ThrowCoinTask;\n+import top.srcrs.task.live.BiLiveTask;\n+import top.srcrs.task.live.GiveGiftTask;\n+import top.srcrs.task.live.Silver2CoinTask;\n+import top.srcrs.task.manga.MangaTask;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/**\n+ * 运行所有已注册的Task\n+ *\n+ * @author srcrs\n+ * @Time 2020-10-13\n+ */\n+@Slf4j\n+public abstract class TaskRegistry {\n+\n+    private static final List<Class<? extends Task>> REGISTERED_TASKS = Arrays.asList(\n+            BiCoinApply.class,\n+            CollectVipGift.class,\n+            DailyTask.class,\n+            ThrowCoinTask.class,\n+            BiLiveTask.class,\n+            GiveGiftTask.class,\n+            Silver2CoinTask.class,\n+            MangaTask.class\n+    );\n+\n+    /**\n+     * 运行所有已注册任务\n+     */\n+    public void runTasks() {\n+        REGISTERED_TASKS.stream().map(Class::getName).forEach(this::dealClass);\n+    }\n+\n+    /**\n+     * 获得真实的className\n+     *\n+     * @param className className\n+     */\n+    public abstract void dealClass(String className);\n+}"
  },
  {
    "sha": "c6f98d34d4be1eeca728bcf2592e9891cd0db833",
    "filename": "src/main/resources/api.json",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/resources/api.json",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/resources/api.json",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/main/resources/api.json?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -532,6 +532,15 @@\n         },\n         \"comment\": \"用户追番列表\"\n       },\n+      \"videos\": {\n+        \"url\": \"http://api.bilibili.com/x/space/coin/video\",\n+        \"method\": \"GET\",\n+        \"verify\": false,\n+        \"params\": {\n+          \"vmid\": \"uid\"\n+        },\n+        \"comment\": \"30天内投过硬币的视频\"\n+      },\n       \"followings\": {\n         \"url\": \"https://api.bilibili.com/x/relation/followings\",\n         \"method\": \"GET\","
  },
  {
    "sha": "a05b8da2af9c0389ab756e9dbc7a0e27ff08ef72",
    "filename": "src/main/resources/config.yml",
    "status": "modified",
    "additions": 5,
    "deletions": 2,
    "changes": 7,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/resources/config.yml",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/main/resources/config.yml",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/main/resources/config.yml?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -1,5 +1,5 @@\n #每天需要投币的数量 [0,5]。\n-coin: 5\n+coin: 0\n #送出即将过期礼物 [true,false]\n gift: true\n #银瓜子兑换为硬币 [true,false]\n@@ -8,9 +8,12 @@ s2c: true\n autoBiCoin: 1\n #用户设备的标识 [android,ios]\n platform: android\n-# 自定义优先给这些 up 的视频投币 , 以yml数组的形式 , 填写其 uid (mid)\n+#自定义优先给这些 up 的视频投币 , 以yml数组的形式 , 填写其 uid (mid)\n upList:\n+  - 8730238\n #进行漫画签到任务 [true,false]\n manga: true\n #优先送出即将过期礼物给此up的直播间,填写其 uid\n upLive:\n+#对于进行投币的视频选择是否点赞 , 默认不点赞 [0,1]\n+selectLike: 0"
  },
  {
    "sha": "d92a0362ea1b4dcda2da2e36c6ac8a936d0d4027",
    "filename": "src/test/java/top/srcrs/util/SendTest.java",
    "status": "modified",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/test/java/top/srcrs/util/SendTest.java",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/test/java/top/srcrs/util/SendTest.java",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/test/java/top/srcrs/util/SendTest.java?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -17,11 +17,25 @@ void SendServerTest() {\n         }\n     }\n \n+    @Test\n+    void SendServerChanTest() {\n+        if(StringUtil.isNotBlank(System.getenv(\"SENDKEY\"))){\n+            SendServerChan.send(System.getenv(\"SENDKEY\"));\n+        }\n+    }\n+\n     @Test\n     void SendPushPlusTest() {\n         if(StringUtil.isNotBlank(System.getenv(\"PUSHPLUSTK\"))){\n             SendPushPlus.send(System.getenv(\"PUSHPLUSTK\"));\n         }\n     }\n \n+    @Test\n+    void SendTgBotTest() {\n+        if(StringUtil.isNotBlank(System.getenv(\"TGBOT\"))){\n+            SendTelegram.send(System.getenv(\"TELEGRAM_BOT_TOKEN\"),System.getenv(\"TELEGRAM_CHAT_ID\"));\n+        }\n+    }\n+\n }"
  },
  {
    "sha": "b19bbe6a3bd9e5729afb523db449f32575e36138",
    "filename": "src/test/java/top/srcrs/util/TaskRegistryTest.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/justincnn/BilibiliTask/blob/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/test/java/top/srcrs/util/TaskRegistryTest.java",
    "raw_url": "https://github.com/justincnn/BilibiliTask/raw/6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5/src/test/java/top/srcrs/util/TaskRegistryTest.java",
    "contents_url": "https://api.github.com/repos/justincnn/BilibiliTask/contents/src/test/java/top/srcrs/util/TaskRegistryTest.java?ref=6c36ded06fcdc7fe3524e5e3afd007d9b301e9d5",
    "patch": "@@ -0,0 +1,35 @@\n+package top.srcrs.util;\n+\n+import org.junit.jupiter.api.Test;\n+import top.srcrs.Task;\n+\n+import java.util.Arrays;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+/**\n+ * 测试扫描\n+ *\n+ * @author : Ali\n+ * @date : 2020/12/5\n+ */\n+class TaskRegistryTest {\n+\n+    @Test\n+    void taskTest() {\n+        TaskRegistry pack = new TaskRegistry() {\n+            @Override\n+            public void dealClass(String className) {\n+                try{\n+                    Class<?> clazz = Class.forName(className);\n+                    // 判断是否实现了接口Task\n+                    assertTrue(Arrays.stream(clazz.getInterfaces()).parallel().anyMatch(taskI -> taskI.equals(Task.class)));\n+                } catch (Exception e){\n+                    e.printStackTrace();\n+                }\n+            }\n+        };\n+        pack.runTasks();\n+    }\n+\n+}"
  }
]
