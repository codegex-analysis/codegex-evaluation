[
  {
    "sha": "df40b4013efc96b6079b305b9fbb06c5d7b7e7c1",
    "filename": "api/src/main/java/org/pmiops/workbench/cdr/CdrDbConfig.java",
    "status": "modified",
    "additions": 18,
    "deletions": 7,
    "changes": 25,
    "blob_url": "https://github.com/all-of-us/workbench/blob/f11ef6892625083d0f6dac518daae3f581907a5c/api/src/main/java/org/pmiops/workbench/cdr/CdrDbConfig.java",
    "raw_url": "https://github.com/all-of-us/workbench/raw/f11ef6892625083d0f6dac518daae3f581907a5c/api/src/main/java/org/pmiops/workbench/cdr/CdrDbConfig.java",
    "contents_url": "https://api.github.com/repos/all-of-us/workbench/contents/api/src/main/java/org/pmiops/workbench/cdr/CdrDbConfig.java?ref=f11ef6892625083d0f6dac518daae3f581907a5c",
    "patch": "@@ -50,7 +50,16 @@\n \n     private boolean finishedInitialization = false;\n \n-    private final Long defaultCdrVersionId;\n+    // Each access tier has a default version, but we don't know which tier is desired.\n+    //\n+    // This is because the default CDR Version is only returned when we have no knowledge about\n+    // which CDR version is desired, and therefore also the access tier.  We have to choose one,\n+    // and the Registered Tier is the safer choice.\n+    //\n+    // See also https://precisionmedicineinitiative.atlassian.net/browse/RW-6432\n+\n+    private final Long defaultRTCdrVersionId;\n+    private static final String REGISTERED_TIER_SHORT_NAME = \"registered\";\n \n     @Autowired\n     public CdrDataSource(\n@@ -108,21 +117,23 @@ public CdrDataSource(\n               \"not using Tomcat pool or initializing pool configuration; \"\n                   + \"this should only happen within tests\");\n         }\n+\n         cdrVersionDataSourceMap.put(cdrVersion.getCdrVersionId(), dataSource);\n-        if (cdrVersion.getIsDefault()) {\n+        if (cdrVersion.getAccessTier().getShortName().equals(REGISTERED_TIER_SHORT_NAME)\n+            && cdrVersion.getIsDefault()) {\n           if (defaultId != null) {\n             throw new ServerErrorException(\n                 String.format(\n-                    \"Multiple CDR versions are marked as the default: %d, %d\",\n+                    \"Multiple Registered Tier CDR versions are marked as the default: %d, %d\",\n                     defaultId, cdrVersion.getCdrVersionId()));\n           }\n           defaultId = cdrVersion.getCdrVersionId();\n         }\n       }\n       if (defaultId == null) {\n-        throw new ServerErrorException(\"Default CDR version not found!\");\n+        throw new ServerErrorException(\"Default Registered Tier CDR version not found!\");\n       }\n-      this.defaultCdrVersionId = defaultId;\n+      this.defaultRTCdrVersionId = defaultId;\n       setTargetDataSources(cdrVersionDataSourceMap);\n       afterPropertiesSet();\n     }\n@@ -141,10 +152,10 @@ protected Object determineCurrentLookupKey() {\n         }\n         // While Spring beans are being initialized, this method can be called\n         // in the course of attempting to determine metadata about the data source.\n-        // Return the the default CDR version for configuring metadata.\n+        // Return the the default Registered Tier CDR version for configuring metadata.\n         // After Spring beans are finished being initialized, init() will\n         // be called and we will start requiring clients to specify a CDR version.\n-        return defaultCdrVersionId;\n+        return defaultRTCdrVersionId;\n       }\n       return cdrVersion.getCdrVersionId();\n     }"
  }
]
