[
  {
    "sha": "26d33521af10bcc7fd8cea344038eaaeb78d0ef5",
    "filename": ".idea/.gitignore",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/ZhuravlevDmitry/Home-work/blob/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/.gitignore",
    "raw_url": "https://github.com/ZhuravlevDmitry/Home-work/raw/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/.gitignore",
    "contents_url": "https://api.github.com/repos/ZhuravlevDmitry/Home-work/contents/.idea/.gitignore?ref=dcf48f07cc472304cae7262ba239ff65f0b0c254",
    "patch": "@@ -0,0 +1,3 @@\n+# Default ignored files\n+/shelf/\n+/workspace.xml"
  },
  {
    "sha": "991bcc3aabe0c8b96d5584d40cbec13f5bef312f",
    "filename": ".idea/Home-work.iml",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/ZhuravlevDmitry/Home-work/blob/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/Home-work.iml",
    "raw_url": "https://github.com/ZhuravlevDmitry/Home-work/raw/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/Home-work.iml",
    "contents_url": "https://api.github.com/repos/ZhuravlevDmitry/Home-work/contents/.idea/Home-work.iml?ref=dcf48f07cc472304cae7262ba239ff65f0b0c254",
    "patch": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_15\">\n+    <output url=\"file://$MODULE_DIR$/target/classes\" />\n+    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\n+    <content url=\"file://$MODULE_DIR$\">\n+      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\n+      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" type=\"java-resource\" />\n+      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\n+      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\n+    </content>\n+    <orderEntry type=\"inheritedJdk\" />\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+  </component>\n+</module>\n\\ No newline at end of file"
  },
  {
    "sha": "bfe5ea0982d67a8af3f743e06666f1cd1452b871",
    "filename": ".idea/compiler.xml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/ZhuravlevDmitry/Home-work/blob/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/compiler.xml",
    "raw_url": "https://github.com/ZhuravlevDmitry/Home-work/raw/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/ZhuravlevDmitry/Home-work/contents/.idea/compiler.xml?ref=dcf48f07cc472304cae7262ba239ff65f0b0c254",
    "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"CompilerConfiguration\">\n+    <annotationProcessing>\n+      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n+        <sourceOutputDir name=\"target/generated-sources/annotations\" />\n+        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n+        <outputRelativeToContentRoot value=\"true\" />\n+        <module name=\"Home-work\" />\n+      </profile>\n+    </annotationProcessing>\n+    <bytecodeTargetLevel>\n+      <module name=\"Home-work\" target=\"15\" />\n+    </bytecodeTargetLevel>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "712ab9d985c20018a0c97b93d2148ac1ffe588a5",
    "filename": ".idea/jarRepositories.xml",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/ZhuravlevDmitry/Home-work/blob/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/jarRepositories.xml",
    "raw_url": "https://github.com/ZhuravlevDmitry/Home-work/raw/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/jarRepositories.xml",
    "contents_url": "https://api.github.com/repos/ZhuravlevDmitry/Home-work/contents/.idea/jarRepositories.xml?ref=dcf48f07cc472304cae7262ba239ff65f0b0c254",
    "patch": "@@ -0,0 +1,20 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"RemoteRepositoriesConfiguration\">\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Central Repository\" />\n+      <option name=\"url\" value=\"https://repo.maven.apache.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Maven Central repository\" />\n+      <option name=\"url\" value=\"https://repo1.maven.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"jboss.community\" />\n+      <option name=\"name\" value=\"JBoss Community repository\" />\n+      <option name=\"url\" value=\"https://repository.jboss.org/nexus/content/repositories/public/\" />\n+    </remote-repository>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "64f85a01752895b878d66e091b106df07cb652dd",
    "filename": ".idea/misc.xml",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/ZhuravlevDmitry/Home-work/blob/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/misc.xml",
    "raw_url": "https://github.com/ZhuravlevDmitry/Home-work/raw/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/ZhuravlevDmitry/Home-work/contents/.idea/misc.xml?ref=dcf48f07cc472304cae7262ba239ff65f0b0c254",
    "patch": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"MavenProjectsManager\">\n+    <option name=\"originalFiles\">\n+      <list>\n+        <option value=\"$PROJECT_DIR$/pom.xml\" />\n+      </list>\n+    </option>\n+  </component>\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_15\" project-jdk-name=\"openjdk-15\" project-jdk-type=\"JavaSDK\">\n+    <output url=\"file://$PROJECT_DIR$/out\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "5759ba5b4dcc4b19afdb69a92db5f401a9988214",
    "filename": ".idea/modules.xml",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/ZhuravlevDmitry/Home-work/blob/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/modules.xml",
    "raw_url": "https://github.com/ZhuravlevDmitry/Home-work/raw/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/modules.xml",
    "contents_url": "https://api.github.com/repos/ZhuravlevDmitry/Home-work/contents/.idea/modules.xml?ref=dcf48f07cc472304cae7262ba239ff65f0b0c254",
    "patch": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectModuleManager\">\n+    <modules>\n+      <module fileurl=\"file://$PROJECT_DIR$/.idea/Home-work.iml\" filepath=\"$PROJECT_DIR$/.idea/Home-work.iml\" />\n+    </modules>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "36b87dcad3df78dedeb19acd75db8840202c20bd",
    "filename": ".idea/runConfigurations/hw2a.xml",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/ZhuravlevDmitry/Home-work/blob/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/runConfigurations/hw2a.xml",
    "raw_url": "https://github.com/ZhuravlevDmitry/Home-work/raw/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/runConfigurations/hw2a.xml",
    "contents_url": "https://api.github.com/repos/ZhuravlevDmitry/Home-work/contents/.idea/runConfigurations/hw2a.xml?ref=dcf48f07cc472304cae7262ba239ff65f0b0c254",
    "patch": "@@ -0,0 +1,11 @@\n+<component name=\"ProjectRunConfigurationManager\">\n+  <configuration default=\"false\" name=\"hw2a\" type=\"Application\" factoryName=\"Application\" activateToolWindowBeforeRun=\"false\">\n+    <option name=\"ALTERNATIVE_JRE_PATH\" value=\"openjdk-15 (3)\" />\n+    <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\n+    <option name=\"MAIN_CLASS_NAME\" value=\"hw2a\" />\n+    <module name=\"Home-work\" />\n+    <method v=\"2\">\n+      <option name=\"Make\" enabled=\"true\" />\n+    </method>\n+  </configuration>\n+</component>\n\\ No newline at end of file"
  },
  {
    "sha": "35eb1ddfbbc029bcab630581847471d7f238ec53",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/ZhuravlevDmitry/Home-work/blob/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/vcs.xml",
    "raw_url": "https://github.com/ZhuravlevDmitry/Home-work/raw/dcf48f07cc472304cae7262ba239ff65f0b0c254/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/ZhuravlevDmitry/Home-work/contents/.idea/vcs.xml?ref=dcf48f07cc472304cae7262ba239ff65f0b0c254",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "ac540907b8165a160a7f939a9417b1c8417f3a2d",
    "filename": "src/main/java/hw1.java",
    "status": "added",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/ZhuravlevDmitry/Home-work/blob/dcf48f07cc472304cae7262ba239ff65f0b0c254/src/main/java/hw1.java",
    "raw_url": "https://github.com/ZhuravlevDmitry/Home-work/raw/dcf48f07cc472304cae7262ba239ff65f0b0c254/src/main/java/hw1.java",
    "contents_url": "https://api.github.com/repos/ZhuravlevDmitry/Home-work/contents/src/main/java/hw1.java?ref=dcf48f07cc472304cae7262ba239ff65f0b0c254",
    "patch": "@@ -0,0 +1,87 @@\n+/*\n+ *\tЖуравлев Дмитрий\n+ *\tД/З № 1\n+ */\n+\n+public class hw1 {\n+\n+\n+    public static void main(String[] args) {\n+        task1();\n+        System.out.println(\"a * (b + (c / d)) = \" + task2(3.4f,2.2f,3.1f,6.3f));\n+        System.out.println(task3(7, 18));\n+        task4(0);\n+        System.out.println(\"Значение: a - \" + task5(-11));\n+        task6(\"Друг\");\n+        task7(1764);\n+    }\n+\n+    // Создать переменные всех пройденных типов данных, и инициализировать их значения\n+\n+    static void task1() {\n+        System.out.println(\"\\nЗадание 2.\");\n+        // числа (целые и дробные), символы, строки\n+        byte byteValue = 15; // 1b 256 -> [-128; 127]\n+        System.out.println(\"byte = \" + byteValue);\n+        short shortValue = 10000; // 2b 2 ^ 16 [-2^15; 2^15 - 1]\n+        System.out.println(\"short = \" + shortValue);\n+        int intValue = 2_000_000_000; // 4b 2 ^ 32\n+        System.out.println(\"int = \" + intValue);\n+        long longValue = 1_000_000_000_000L; // 8b 2 ^ 64 -> 10 ^ 19\n+        System.out.println(\"long = \" + longValue);\n+\n+        // 1124251 * 10 ^ 5 5 25\n+        float floatValue = 0.5f; // 4b 2 ^ 25 * 10 ^ (2 ^ 5) 8 digits\n+        System.out.println(\"float = \" + floatValue);\n+        double doubleValue = 0.5; // 8b 16 digits\n+        System.out.println(\"double = \" + doubleValue);\n+        boolean booleanValue = true; // false\n+        System.out.println(\"boolean = \" + booleanValue);\n+        char charValue = '\\'';\n+        System.out.println(\"char = \" + charValue);\n+        String hello = \"Hello \";\n+        String world = \"world!\";\n+        System.out.println(hello + world);\n+\n+    }\n+    // Написать метод вычисляющий выражение a * (b + (c / d)) и возвращающий результат,\n+    // где a, b, c, d – аргументы этого метода, имеющие тип float\n+    static float task2(float a, float b, float c, float d) {\n+        System.out.println(\"\\nЗадание 3.\");\n+        return a * (b + (c / d));\n+    }\n+    // Написать метод, принимающий на вход два целых числа и проверяющий,\n+    // что их сумма лежит в пределах от 10 до 20 (включительно), если да – вернуть true, в противном случае – false.\n+    static boolean task3(int a, int b) {\n+        System.out.println(\"\\nЗадание 4.\");\n+        int sum = a + b;\n+        return sum > 10 && sum < 20;\n+    }\n+    // Написать метод, которому в качестве параметра передается целое число, метод должен напечатать в консоль,\n+    // положительное ли число передали или отрицательное. Замечание: ноль считаем положительным числом.\n+    static void task4(int a) {\n+        System.out.println(\"\\nЗадание 5.\");\n+        if (a >= 0) System.out.println(\"Число:\" + a + \" - Положительное\");\n+        else System.out.println(\"Число \" + a + \" - Отрицательное\");\n+    }\n+    // Написать метод, которому в качестве параметра передается целое число. Метод должен вернуть true,\n+    // если число отрицательное, и вернуть false если положительное.\n+    static boolean task5(int a) {\n+        System.out.println(\"\\nЗадание 6.\");\n+        return a < 0;\n+    }\n+    // Написать метод, которому в качестве параметра передается строка, обозначающая имя.\n+    // Метод должен вывести в консоль сообщение «Привет, указанное_имя!»\n+    static void task6(String name) {\n+        System.out.println(\"\\nЗадание 7.\");\n+        System.out.println(\"\\nПривет, \"+ name + \"!\");\n+    }\n+    //  * Написать метод, который определяет, является ли год високосным, и выводит сообщение в консоль.\n+    //  Каждый 4-й год является високосным, кроме каждого 100-го, при этом каждый 400-й – високосный\n+    static void task7(int a) {\n+        System.out.println(\"\\nЗадание 8.\");\n+        if ((a % 4 == 0) || (a % 100 == 0) && (a % 400 == 0)) System.out.println(a + \" - год является високосным\");\n+        else System.out.println(a + \" - год невисокосный\");\n+\n+    }\n+}"
  },
  {
    "sha": "2d7acdafbea304edf48526b1058e5d27b8d367c8",
    "filename": "src/main/java/hw2.java",
    "status": "added",
    "additions": 183,
    "deletions": 0,
    "changes": 183,
    "blob_url": "https://github.com/ZhuravlevDmitry/Home-work/blob/dcf48f07cc472304cae7262ba239ff65f0b0c254/src/main/java/hw2.java",
    "raw_url": "https://github.com/ZhuravlevDmitry/Home-work/raw/dcf48f07cc472304cae7262ba239ff65f0b0c254/src/main/java/hw2.java",
    "contents_url": "https://api.github.com/repos/ZhuravlevDmitry/Home-work/contents/src/main/java/hw2.java?ref=dcf48f07cc472304cae7262ba239ff65f0b0c254",
    "patch": "@@ -0,0 +1,183 @@\n+/*\n+ *\tЖуравлев Дмитрий\n+ *\tД/З № 2\n+ */\n+\n+import java.util.Arrays;\n+\n+public class hw2 {\n+\n+    //Функция, генерирует случайное число из интервала from-to\n+    static int getRandom(int from, int to) {\n+        return (int) (from + Math.random() * (to - from));\n+    }\n+\n+    static int getRandom(int limit) {\n+        return (int) (Math.random() * limit);\n+    }\n+\n+    static boolean nnn(int[] args){\n+        boolean result=false;\n+        // сразу находим сумму всех элементов в массиве\n+        int summ = 0;\n+        for (int i = 0; i <args.length; i++)\n+        {\n+            summ += args[i];\n+        }\n+        int left = 0;\n+        for (int i = 0; i <args.length-1; i++) {\n+            left += args[i];\n+            if (left==summ-left){\n+                result=true;\n+            }\n+        }\n+        return result;}\n+\n+\n+\n+    public static void main(String[] args) {\n+        task1();\n+        task2();\n+        task3();\n+        task4();\n+        task5();\n+        task6();\n+    }\n+    //Задать целочисленный массив, состоящий из элементов 0 и 1.\n+    // Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ]. С помощью цикла и условия заменить 0 на 1, 1 на 0\n+\n+    static void task1() {\n+        int[] a = {1, 1, 0, 0, 1, 0, 1, 1, 0, 0};\n+        System.out.print(\"\\nЗадание 1.\\n\");\n+        System.out.print(\"Заданн массив\\n\");\n+        System.out.println(Arrays.toString(a));\n+        System.out.print(\"Получен массив\\n\");\n+        for (int i = 0; i < a.length; i++) {\n+            if (a[i] == 0) {\n+                a[i] = 1;\n+            } else\n+                a[i] = 0;\n+        }\n+        System.out.println(Arrays.toString(a));\n+    }\n+\n+    //Задать пустой целочисленный массив размером 8.\n+    // С помощью цикла заполнить его значениями 0 3 6 9 12 15 18 21;\n+\n+    static void task2() {\n+        int[] a = new int[8];\n+        System.out.print(\"\\nЗадание 2.\\n\");\n+        System.out.print(\"Получен массив\\n\");\n+        for (int i = 1; i < a.length; i++) {\n+            a[i] = i * 3;\n+\n+        }\n+        System.out.println(Arrays.toString(a));\n+    }\n+\n+\n+    //Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ]\n+    // пройти по нему циклом, и числа меньшие 6 умножить на 2;\n+\n+    static void task3() {\n+        int[] a = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};\n+\n+        System.out.print(\"\\nЗадание 3.\\n\");\n+        System.out.print(\"Задан массив\\n\");\n+        System.out.println(Arrays.toString(a));\n+        System.out.print(\"Получен массив\\n\");\n+        for (int i = 0; i < a.length; i++) {\n+            if (a[i] < 6) {\n+                a[i] *= 2;\n+            }\n+\n+        }\n+        System.out.println(Arrays.toString(a));\n+    }\n+    //Создать квадратный двумерный целочисленный массив\n+    // (количество строк и столбцов одинаковое), и с помощью цикла(-ов)\n+    // заполнить его диагональные элементы единицами (можно только одну\n+    // из диагоналей, если обе сложно). Определить элементы одной из\n+    // диагоналей можно по следующему принципу: индексы таких элементов\n+    // равны, то есть [0][0], [1][1], [2][2], …, [n][n];\n+\n+    static void task4() {\n+        int[][] a = new int[8][8];\n+        System.out.print(\"\\nЗадание 4.\\n\");\n+        System.out.print(\"Получен массив\\n\");\n+        for (int i = 0; i < 8; i++) {\n+            for (int j = 0; j < 8; j++) {\n+                a[i][j] = getRandom(10, 100);\n+                if (i==j) {\n+                    a[i][j] = 1;}\n+                if (i + j ==7) {\n+                    a[i][j] = 1;\n+                }\n+                    System.out.printf(\"%3d\", a[i][j]);\n+            }\n+            System.out.println();\n+        }\n+\n+            }\n+    // Задать одномерный массив и найти в нем минимальный и максимальный элементы\n+    // (без помощи интернета);\n+\n+    static void task5() {\n+        int[] a = new int[8];\n+        int amin;\n+        int amax;\n+        System.out.print(\"\\nЗадание 5.\\n\");\n+        System.out.print(\"Получен массив\\n\");\n+        for (int i = 0; i < a.length; i++) {\n+            a[i] = getRandom(10, 100);\n+        }\n+        System.out.println(Arrays.toString(a));\n+        amax = a[0];\n+        for (int i = 0; i < a.length; i++) {\n+            if (a[i] > amax){\n+                amax = a[i];\n+            }\n+        }\n+        System.out.print(\"Макс = \" + amax);\n+\n+        amin = a[0];\n+        for (int i = 0; i < a.length; i++) {\n+            if (amin > a[i]){\n+                amin = a[i];\n+            }\n+        }\n+        System.out.print(\"\\nМин = \" + amin);\n+        }\n+    /* Написать метод, в который передается ,\n+    метод должен вернуть true, если в массиве есть место, в котором сумма левой и\n+    правой части массива равны. Примеры:\n+    checkBalance([2, 2, 2, 1, 2, 2, ||| 10, 1]) → true,\n+    т.е. 2 + 2 + 2 + 1 + 2 + 2 = 10 + 1\n+    checkBalance([1, 1, 1, ||| 2, 1]) → true, т.е. 1 + 1 + 1 = 2 + 1*/\n+\n+    static void task6() {\n+        int[] a = new int[5];\n+\n+        System.out.print(\"\\nЗадание 6.\\n\");\n+        System.out.print(\"Получен массив\\n\");\n+        for (int i = 0; i < a.length; i++) {\n+            a[i] = getRandom(1, 5);\n+        }\n+        System.out.println(Arrays.toString(a));\n+\n+\n+        System.out.print(\"Получено\\n\" + nnn(a));\n+    }\n+\n+}\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+"
  },
  {
    "sha": "66ccb0835b228e6f4b4810e3b716102df5c99b29",
    "filename": "target/classes/hw2.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ZhuravlevDmitry/Home-work/blob/dcf48f07cc472304cae7262ba239ff65f0b0c254/target/classes/hw2.class",
    "raw_url": "https://github.com/ZhuravlevDmitry/Home-work/raw/dcf48f07cc472304cae7262ba239ff65f0b0c254/target/classes/hw2.class",
    "contents_url": "https://api.github.com/repos/ZhuravlevDmitry/Home-work/contents/target/classes/hw2.class?ref=dcf48f07cc472304cae7262ba239ff65f0b0c254"
  }
]
