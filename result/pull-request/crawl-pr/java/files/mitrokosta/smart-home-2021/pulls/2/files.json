[
  {
    "sha": "3ea981115d226f3f59c4aa745c35412c2d74e5ca",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 19,
    "deletions": 6,
    "changes": 25,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/pom.xml",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/pom.xml",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/pom.xml?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -15,22 +15,35 @@\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-compiler-plugin</artifactId>\n-                <version>3.1</version>\n+                <version>3.8.0</version>\n                 <configuration>\n-                    <source>1.8</source>\n-                    <target>1.8</target>\n+                    <release>11</release>\n                 </configuration>\n             </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+                <version>2.22.0</version>\n+            </plugin>\n         </plugins>\n     </build>\n \n     <dependencies>\n         <dependency>\n-            <groupId>junit</groupId>\n-            <artifactId>junit</artifactId>\n-            <version>4.8.2</version>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <version>5.4.2</version>\n             <scope>test</scope>\n         </dependency>\n+\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-engine</artifactId>\n+            <version>5.4.2</version>\n+            <scope>test</scope>\n+        </dependency>\n+\n         <dependency>\n             <groupId>com.google.code.gson</groupId>\n             <artifactId>gson</artifactId>"
  },
  {
    "sha": "dd2d51c02ea897b340e0bb7893fc0c73a421d0c4",
    "filename": "src/main/java/ru/sbt/mipt/oop/home/Action.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/Action.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/Action.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/home/Action.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -0,0 +1,6 @@\n+package ru.sbt.mipt.oop.home;\r\n+\r\n+import java.util.function.Consumer;\r\n+\r\n+public interface Action extends Consumer<Actionable> {\r\n+}\r"
  },
  {
    "sha": "ec9ebe2c842a5622d866ab6929e524997af63596",
    "filename": "src/main/java/ru/sbt/mipt/oop/home/Actionable.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/Actionable.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/Actionable.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/home/Actionable.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop.home;\r\n+\r\n+public interface Actionable {\r\n+    void execute(Action action);\r\n+}\r"
  },
  {
    "sha": "3ba2dd1bf45175ca432aa6c4f687886d37aa56b5",
    "filename": "src/main/java/ru/sbt/mipt/oop/home/Door.java",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/Door.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/Door.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/home/Door.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -1,6 +1,6 @@\n package ru.sbt.mipt.oop.home;\n \n-public class Door {\n+public class Door implements Actionable {\n     private final String id;\n     private boolean isOpen;\n \n@@ -16,4 +16,13 @@ public String getId() {\n     public void setOpen(boolean open) {\n         isOpen = open;\n     }\n+\n+    public boolean isOpen() {\n+        return isOpen;\n+    }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.accept(this);\n+    }\n }"
  },
  {
    "sha": "60c5a408779c2d9469ae40ad2e1047d4f1b79231",
    "filename": "src/main/java/ru/sbt/mipt/oop/home/Light.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/Light.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/Light.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/home/Light.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -1,6 +1,6 @@\n package ru.sbt.mipt.oop.home;\n \n-public class Light {\n+public class Light implements Actionable {\n     private boolean isOn;\n     private final String id;\n \n@@ -20,4 +20,9 @@ public String getId() {\n     public void setOn(boolean on) {\n         isOn = on;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.accept(this);\n+    }\n }"
  },
  {
    "sha": "3ee70b9cd1a8cfd27dea5167162da77cafab53ea",
    "filename": "src/main/java/ru/sbt/mipt/oop/home/Room.java",
    "status": "modified",
    "additions": 13,
    "deletions": 8,
    "changes": 21,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/Room.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/Room.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/home/Room.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -2,7 +2,7 @@\n \n import java.util.Collection;\n \n-public class Room {\n+public class Room implements Actionable {\n     private final Collection<Light> lights;\n     private final Collection<Door> doors;\n     private final String name;\n@@ -13,15 +13,20 @@ public Room(Collection<Light> lights, Collection<Door> doors, String name) {\n         this.name = name;\n     }\n \n-    public Collection<Light> getLights() {\n-        return lights;\n+    public String getName() {\n+        return name;\n     }\n \n-    public Collection<Door> getDoors() {\n-        return doors;\n-    }\n+    @Override\n+    public void execute(Action action) {\n+        for (Actionable component : lights) {\n+            component.execute(action);\n+        }\n \n-    public String getName() {\n-        return name;\n+        for (Actionable component : doors) {\n+            component.execute(action);\n+        }\n+\n+        action.accept(this);\n     }\n }"
  },
  {
    "sha": "1f0eece3165bd1315d537b7813b1120ad2a5727a",
    "filename": "src/main/java/ru/sbt/mipt/oop/home/SmartHome.java",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/SmartHome.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/home/SmartHome.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/home/SmartHome.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -3,7 +3,7 @@\n import java.util.ArrayList;\n import java.util.Collection;\n \n-public class SmartHome {\n+public class SmartHome implements Actionable {\n     private Collection<Room> rooms;\n \n     public SmartHome() {\n@@ -14,11 +14,12 @@ public SmartHome(Collection<Room> rooms) {\n         this.rooms = rooms;\n     }\n \n-    public void addRoom(Room room) {\n-        rooms.add(room);\n-    }\n+    @Override\n+    public void execute(Action action) {\n+        for (Actionable component : rooms) {\n+            component.execute(action);\n+        }\n \n-    public Collection<Room> getRooms() {\n-        return rooms;\n+        action.accept(this);\n     }\n }"
  },
  {
    "sha": "35d7027e0ff42dfadbc73448ba2934389c103a5e",
    "filename": "src/main/java/ru/sbt/mipt/oop/home/util/DoorSearchQuery.java",
    "status": "removed",
    "additions": 0,
    "deletions": 22,
    "changes": 22,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/ed1b9391a7a4e355ccb2083d70c2b68598a86394/src/main/java/ru/sbt/mipt/oop/home/util/DoorSearchQuery.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/ed1b9391a7a4e355ccb2083d70c2b68598a86394/src/main/java/ru/sbt/mipt/oop/home/util/DoorSearchQuery.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/home/util/DoorSearchQuery.java?ref=ed1b9391a7a4e355ccb2083d70c2b68598a86394",
    "patch": "@@ -1,22 +0,0 @@\n-package ru.sbt.mipt.oop.home.util;\r\n-\r\n-import ru.sbt.mipt.oop.home.Door;\r\n-import ru.sbt.mipt.oop.home.Room;\r\n-\r\n-public class DoorSearchQuery {\r\n-    private final Door door;\r\n-    private final Room room;\r\n-\r\n-    public DoorSearchQuery(Door door, Room room) {\r\n-        this.door = door;\r\n-        this.room = room;\r\n-    }\r\n-\r\n-    public Door getDoor() {\r\n-        return door;\r\n-    }\r\n-\r\n-    public Room getRoom() {\r\n-        return room;\r\n-    }\r\n-}\r"
  },
  {
    "sha": "ec0083a34bd83fe30afc0edc384c7168dc1671f5",
    "filename": "src/main/java/ru/sbt/mipt/oop/home/util/LightSearchQuery.java",
    "status": "removed",
    "additions": 0,
    "deletions": 22,
    "changes": 22,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/ed1b9391a7a4e355ccb2083d70c2b68598a86394/src/main/java/ru/sbt/mipt/oop/home/util/LightSearchQuery.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/ed1b9391a7a4e355ccb2083d70c2b68598a86394/src/main/java/ru/sbt/mipt/oop/home/util/LightSearchQuery.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/home/util/LightSearchQuery.java?ref=ed1b9391a7a4e355ccb2083d70c2b68598a86394",
    "patch": "@@ -1,22 +0,0 @@\n-package ru.sbt.mipt.oop.home.util;\r\n-\r\n-import ru.sbt.mipt.oop.home.Light;\r\n-import ru.sbt.mipt.oop.home.Room;\r\n-\r\n-public class LightSearchQuery {\r\n-    private final Light light;\r\n-    private final Room room;\r\n-\r\n-    public LightSearchQuery(Light light, Room room) {\r\n-        this.light = light;\r\n-        this.room = room;\r\n-    }\r\n-\r\n-    public Light getLight() {\r\n-        return light;\r\n-    }\r\n-\r\n-    public Room getRoom() {\r\n-        return room;\r\n-    }\r\n-}\r"
  },
  {
    "sha": "2cbc1ab6c4709ddb4f88df4e5fd3012b7e731bb7",
    "filename": "src/main/java/ru/sbt/mipt/oop/home/util/SmartHomeUtils.java",
    "status": "removed",
    "additions": 0,
    "deletions": 30,
    "changes": 30,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/ed1b9391a7a4e355ccb2083d70c2b68598a86394/src/main/java/ru/sbt/mipt/oop/home/util/SmartHomeUtils.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/ed1b9391a7a4e355ccb2083d70c2b68598a86394/src/main/java/ru/sbt/mipt/oop/home/util/SmartHomeUtils.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/home/util/SmartHomeUtils.java?ref=ed1b9391a7a4e355ccb2083d70c2b68598a86394",
    "patch": "@@ -1,30 +0,0 @@\n-package ru.sbt.mipt.oop.home.util;\r\n-\r\n-import ru.sbt.mipt.oop.home.Door;\r\n-import ru.sbt.mipt.oop.home.Light;\r\n-import ru.sbt.mipt.oop.home.Room;\r\n-import ru.sbt.mipt.oop.home.SmartHome;\r\n-\r\n-public abstract class SmartHomeUtils {\r\n-    public static LightSearchQuery findLight(SmartHome smartHome, String lightId) {\r\n-        for (Room room : smartHome.getRooms()) {\r\n-            for (Light light : room.getLights()) {\r\n-                if (light.getId().equals(lightId)) {\r\n-                    return new LightSearchQuery(light, room);\r\n-                }\r\n-            }\r\n-        }\r\n-        return null;\r\n-    }\r\n-\r\n-    public static DoorSearchQuery findDoor(SmartHome smartHome, String doorId) {\r\n-        for (Room room : smartHome.getRooms()) {\r\n-            for (Door door : room.getDoors()) {\r\n-                if (door.getId().equals(doorId)) {\r\n-                    return new DoorSearchQuery(door, room);\r\n-                }\r\n-            }\r\n-        }\r\n-        return null;\r\n-    }\r\n-}\r"
  },
  {
    "sha": "5fba4ac2ce4b73a99f98884cb3f5fb95671eff44",
    "filename": "src/main/java/ru/sbt/mipt/oop/sensor/HandlingSensorEventProcessor.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/HandlingSensorEventProcessor.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/HandlingSensorEventProcessor.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/sensor/HandlingSensorEventProcessor.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -11,7 +11,6 @@ public HandlingSensorEventProcessor(List<SensorEventHandler> eventHandlers) {\n \r\n     @Override\r\n     public void processEvent(SensorEvent event) {\r\n-        System.out.println(\"Got event: \" + event);\r\n         for (SensorEventHandler eventHandler : eventHandlers) {\r\n             eventHandler.handle(event);\r\n         }\r"
  },
  {
    "sha": "bae62aa3a1744db0db0477f56e83b1222028dc07",
    "filename": "src/main/java/ru/sbt/mipt/oop/sensor/handler/DoorClosedSensorEventHandler.java",
    "status": "modified",
    "additions": 10,
    "deletions": 11,
    "changes": 21,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/handler/DoorClosedSensorEventHandler.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/handler/DoorClosedSensorEventHandler.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/sensor/handler/DoorClosedSensorEventHandler.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -1,10 +1,8 @@\n package ru.sbt.mipt.oop.sensor.handler;\r\n \r\n+import ru.sbt.mipt.oop.home.Actionable;\r\n import ru.sbt.mipt.oop.home.Door;\r\n-import ru.sbt.mipt.oop.home.Room;\r\n import ru.sbt.mipt.oop.home.SmartHome;\r\n-import ru.sbt.mipt.oop.home.util.DoorSearchQuery;\r\n-import ru.sbt.mipt.oop.home.util.SmartHomeUtils;\r\n import ru.sbt.mipt.oop.sensor.SensorEvent;\r\n import ru.sbt.mipt.oop.sensor.SensorEventHandler;\r\n import ru.sbt.mipt.oop.sensor.SensorEventType;\r\n@@ -22,13 +20,14 @@ public void handle(SensorEvent event) {\n             return;\r\n         }\r\n \r\n-        DoorSearchQuery searchQuery = SmartHomeUtils.findDoor(smartHome, event.getObjectId());\r\n-        if (searchQuery != null) {\r\n-            Door door = searchQuery.getDoor();\r\n-            Room room = searchQuery.getRoom();\r\n-\r\n-            door.setOpen(false);\r\n-            System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was closed.\");\r\n-        }\r\n+        String targetId = event.getObjectId();\r\n+        smartHome.execute((Actionable doorObject) -> {\r\n+            if (doorObject instanceof Door) {\r\n+                Door door = (Door) doorObject;\r\n+                if (door.getId().equals(targetId)) {\r\n+                    door.setOpen(false);\r\n+                }\r\n+            }\r\n+        });\r\n     }\r\n }\r"
  },
  {
    "sha": "a335733dd54ebead1b9992e454b18f71b7639a80",
    "filename": "src/main/java/ru/sbt/mipt/oop/sensor/handler/DoorOpenedSensorEventHandler.java",
    "status": "modified",
    "additions": 10,
    "deletions": 11,
    "changes": 21,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/handler/DoorOpenedSensorEventHandler.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/handler/DoorOpenedSensorEventHandler.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/sensor/handler/DoorOpenedSensorEventHandler.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -1,10 +1,8 @@\n package ru.sbt.mipt.oop.sensor.handler;\r\n \r\n+import ru.sbt.mipt.oop.home.Actionable;\r\n import ru.sbt.mipt.oop.home.Door;\r\n-import ru.sbt.mipt.oop.home.Room;\r\n import ru.sbt.mipt.oop.home.SmartHome;\r\n-import ru.sbt.mipt.oop.home.util.DoorSearchQuery;\r\n-import ru.sbt.mipt.oop.home.util.SmartHomeUtils;\r\n import ru.sbt.mipt.oop.sensor.SensorEvent;\r\n import ru.sbt.mipt.oop.sensor.SensorEventHandler;\r\n import ru.sbt.mipt.oop.sensor.SensorEventType;\r\n@@ -22,13 +20,14 @@ public void handle(SensorEvent event) {\n             return;\r\n         }\r\n \r\n-        DoorSearchQuery searchQuery = SmartHomeUtils.findDoor(smartHome, event.getObjectId());\r\n-        if (searchQuery != null) {\r\n-            Door door = searchQuery.getDoor();\r\n-            Room room = searchQuery.getRoom();\r\n-\r\n-            door.setOpen(true);\r\n-            System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was opened.\");\r\n-        }\r\n+        String targetId = event.getObjectId();\r\n+        smartHome.execute((Actionable doorObject) -> {\r\n+            if (doorObject instanceof Door) {\r\n+                Door door = (Door) doorObject;\r\n+                if (door.getId().equals(targetId)) {\r\n+                    door.setOpen(true);\r\n+                }\r\n+            }\r\n+        });\r\n     }\r\n }\r"
  },
  {
    "sha": "7696726bb2f75be818cdd8a17381ca80491d8faa",
    "filename": "src/main/java/ru/sbt/mipt/oop/sensor/handler/HallDoorClosedSensorEventHandler.java",
    "status": "modified",
    "additions": 25,
    "deletions": 18,
    "changes": 43,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/handler/HallDoorClosedSensorEventHandler.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/handler/HallDoorClosedSensorEventHandler.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/sensor/handler/HallDoorClosedSensorEventHandler.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -3,11 +3,7 @@\n import ru.sbt.mipt.oop.command.CommandSender;\r\n import ru.sbt.mipt.oop.command.CommandType;\r\n import ru.sbt.mipt.oop.command.SensorCommand;\r\n-import ru.sbt.mipt.oop.home.Light;\r\n-import ru.sbt.mipt.oop.home.Room;\r\n-import ru.sbt.mipt.oop.home.SmartHome;\r\n-import ru.sbt.mipt.oop.home.util.DoorSearchQuery;\r\n-import ru.sbt.mipt.oop.home.util.SmartHomeUtils;\r\n+import ru.sbt.mipt.oop.home.*;\r\n import ru.sbt.mipt.oop.sensor.SensorEvent;\r\n import ru.sbt.mipt.oop.sensor.SensorEventHandler;\r\n import ru.sbt.mipt.oop.sensor.SensorEventType;\r\n@@ -27,20 +23,31 @@ public void handle(SensorEvent event) {\n             return;\r\n         }\r\n \r\n-        DoorSearchQuery searchQuery = SmartHomeUtils.findDoor(smartHome, event.getObjectId());\r\n-        if (searchQuery != null) {\r\n-            Room room = searchQuery.getRoom();\r\n-            // если мы получили событие о закрытие двери в холле - это значит, что была закрыта входная дверь.\r\n-            // в этом случае мы хотим автоматически выключить свет во всем доме (это же умный дом!)\r\n-            if (room.getName().equals(\"hall\")) {\r\n-                for (Room homeRoom : smartHome.getRooms()) {\r\n-                    for (Light light : homeRoom.getLights()) {\r\n-                        light.setOn(false);\r\n-                        SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF, light.getId());\r\n-                        commandSender.sendCommand(command);\r\n-                    }\r\n+        Action turnEveryLightOff = (Actionable lightObject) -> {\r\n+            if (lightObject instanceof Light) {\r\n+                Light light = (Light) lightObject;\r\n+                light.setOn(false);\r\n+                SensorCommand command = new SensorCommand(CommandType.LIGHT_OFF, light.getId());\r\n+                commandSender.sendCommand(command);\r\n+            }\r\n+        };\r\n+\r\n+        String targetId = event.getObjectId();\r\n+\r\n+        Action checkHallDoor = (Actionable doorObject) -> {\r\n+            if (doorObject instanceof Door && ((Door) doorObject).getId().equals(targetId)) {\r\n+                smartHome.execute(turnEveryLightOff);\r\n+            }\r\n+        };\r\n+\r\n+        smartHome.execute((Actionable roomObject) -> {\r\n+            if (roomObject instanceof Room) {\r\n+                Room room = (Room) roomObject;\r\n+                // если мы холл и нашу дверь закрыли, то...\r\n+                if (\"hall\".equals(room.getName())) {\r\n+                    room.execute(checkHallDoor);\r\n                 }\r\n             }\r\n-        }\r\n+        });\r\n     }\r\n }\r"
  },
  {
    "sha": "ce4803b6910d077545f8844ed8327d82677ab60d",
    "filename": "src/main/java/ru/sbt/mipt/oop/sensor/handler/LightOffSensorEventHandler.java",
    "status": "modified",
    "additions": 10,
    "deletions": 13,
    "changes": 23,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/handler/LightOffSensorEventHandler.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/handler/LightOffSensorEventHandler.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/sensor/handler/LightOffSensorEventHandler.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -1,10 +1,6 @@\n package ru.sbt.mipt.oop.sensor.handler;\r\n \r\n-import ru.sbt.mipt.oop.home.Light;\r\n-import ru.sbt.mipt.oop.home.Room;\r\n-import ru.sbt.mipt.oop.home.SmartHome;\r\n-import ru.sbt.mipt.oop.home.util.LightSearchQuery;\r\n-import ru.sbt.mipt.oop.home.util.SmartHomeUtils;\r\n+import ru.sbt.mipt.oop.home.*;\r\n import ru.sbt.mipt.oop.sensor.SensorEvent;\r\n import ru.sbt.mipt.oop.sensor.SensorEventHandler;\r\n import ru.sbt.mipt.oop.sensor.SensorEventType;\r\n@@ -22,13 +18,14 @@ public void handle(SensorEvent event) {\n             return;\r\n         }\r\n \r\n-        LightSearchQuery searchQuery = SmartHomeUtils.findLight(smartHome, event.getObjectId());\r\n-        if (searchQuery != null) {\r\n-            Light light = searchQuery.getLight();\r\n-            Room room = searchQuery.getRoom();\r\n-\r\n-            light.setOn(false);\r\n-            System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned off.\");\r\n-        }\r\n+        String targetId = event.getObjectId();\r\n+        smartHome.execute((Actionable lightObject) -> {\r\n+            if (lightObject instanceof Light) {\r\n+                Light light = (Light) lightObject;\r\n+                if (light.getId().equals(targetId)) {\r\n+                    light.setOn(false);\r\n+                }\r\n+            }\r\n+        });\r\n     }\r\n }\r"
  },
  {
    "sha": "bff079cdef18be77cb773d6d73a1b39b239fdf75",
    "filename": "src/main/java/ru/sbt/mipt/oop/sensor/handler/LightOnSensorEventHandler.java",
    "status": "modified",
    "additions": 10,
    "deletions": 11,
    "changes": 21,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/handler/LightOnSensorEventHandler.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/main/java/ru/sbt/mipt/oop/sensor/handler/LightOnSensorEventHandler.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/sensor/handler/LightOnSensorEventHandler.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -1,10 +1,8 @@\n package ru.sbt.mipt.oop.sensor.handler;\r\n \r\n+import ru.sbt.mipt.oop.home.Actionable;\r\n import ru.sbt.mipt.oop.home.Light;\r\n-import ru.sbt.mipt.oop.home.Room;\r\n import ru.sbt.mipt.oop.home.SmartHome;\r\n-import ru.sbt.mipt.oop.home.util.LightSearchQuery;\r\n-import ru.sbt.mipt.oop.home.util.SmartHomeUtils;\r\n import ru.sbt.mipt.oop.sensor.SensorEvent;\r\n import ru.sbt.mipt.oop.sensor.SensorEventHandler;\r\n import ru.sbt.mipt.oop.sensor.SensorEventType;\r\n@@ -22,13 +20,14 @@ public void handle(SensorEvent event) {\n             return;\r\n         }\r\n \r\n-        LightSearchQuery searchQuery = SmartHomeUtils.findLight(smartHome, event.getObjectId());\r\n-        if (searchQuery != null) {\r\n-            Light light = searchQuery.getLight();\r\n-            Room room = searchQuery.getRoom();\r\n-\r\n-            light.setOn(true);\r\n-            System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned on.\");\r\n-        }\r\n+        String targetId = event.getObjectId();\r\n+        smartHome.execute((Actionable lightObject) -> {\r\n+            if (lightObject instanceof Light) {\r\n+                Light light = (Light) lightObject;\r\n+                if (light.getId().equals(targetId)) {\r\n+                    light.setOn(true);\r\n+                }\r\n+            }\r\n+        });\r\n     }\r\n }\r"
  },
  {
    "sha": "6e02c9dd6df86ca93880b09c6e73b3188390332f",
    "filename": "src/test/java/ru/sbt/mipt/oop/SmartHomeTest.java",
    "status": "added",
    "additions": 172,
    "deletions": 0,
    "changes": 172,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/test/java/ru/sbt/mipt/oop/SmartHomeTest.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/test/java/ru/sbt/mipt/oop/SmartHomeTest.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/test/java/ru/sbt/mipt/oop/SmartHomeTest.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -0,0 +1,172 @@\n+package ru.sbt.mipt.oop;\r\n+\r\n+import org.junit.jupiter.api.BeforeEach;\r\n+import org.junit.jupiter.api.Test;\r\n+import static org.junit.jupiter.api.Assertions.*;\r\n+\r\n+import ru.sbt.mipt.oop.command.DummyCommandSender;\r\n+import ru.sbt.mipt.oop.home.*;\r\n+import ru.sbt.mipt.oop.sensor.*;\r\n+import ru.sbt.mipt.oop.sensor.handler.*;\r\n+\r\n+import java.util.ArrayDeque;\r\n+import java.util.Arrays;\r\n+import java.util.List;\r\n+\r\n+class SmartHomeTest {\r\n+    SmartHome testHome;\r\n+\r\n+    @BeforeEach\r\n+    void setUp() {\r\n+        Room kitchen = new Room(Arrays.asList(new Light(\"1\", false), new Light(\"2\", true)),\r\n+                Arrays.asList(new Door(false, \"1\")),\r\n+                \"kitchen\");\r\n+        Room bathroom = new Room(Arrays.asList(new Light(\"3\", true)),\r\n+                Arrays.asList(new Door(false, \"2\")),\r\n+                \"bathroom\");\r\n+        Room bedroom = new Room(Arrays.asList(new Light(\"4\", false), new Light(\"5\", false), new Light(\"6\", false)),\r\n+                Arrays.asList(new Door(true, \"3\")),\r\n+                \"bedroom\");\r\n+        Room hall = new Room(Arrays.asList(new Light(\"7\", false), new Light(\"8\", false), new Light(\"9\", false)),\r\n+                Arrays.asList(new Door(true, \"4\")),\r\n+                \"hall\");\r\n+        testHome = new SmartHome(Arrays.asList(kitchen, bathroom, bedroom, hall));\r\n+    }\r\n+\r\n+    @Test\r\n+    void testLightOnHandler() {\r\n+        Light light = getLightById(\"1\");\r\n+\r\n+        assertFalse(light.isOn());\r\n+\r\n+        processEvents(List.of(\r\n+                new SensorEvent(SensorEventType.LIGHT_ON, \"1\")\r\n+        ), List.of(\r\n+                new LightOnSensorEventHandler(testHome)\r\n+        ));\r\n+\r\n+        assertTrue(light.isOn());\r\n+    }\r\n+\r\n+    @Test\r\n+    void testLightOffHandler() {\r\n+        Light light = getLightById(\"2\");\r\n+\r\n+        assertTrue(light.isOn());\r\n+\r\n+        processEvents(List.of(\r\n+                new SensorEvent(SensorEventType.LIGHT_OFF, \"2\")\r\n+        ), List.of(\r\n+                new LightOffSensorEventHandler(testHome)\r\n+        ));\r\n+\r\n+        assertFalse(light.isOn());\r\n+    }\r\n+\r\n+    @Test\r\n+    void testDoorOpenedHandler() {\r\n+        Door door = getDoorById(\"1\");\r\n+\r\n+        assertFalse(door.isOpen());\r\n+\r\n+        processEvents(List.of(\r\n+                new SensorEvent(SensorEventType.DOOR_OPEN, \"1\")\r\n+        ), List.of(\r\n+                new DoorOpenedSensorEventHandler(testHome)\r\n+        ));\r\n+\r\n+        assertTrue(door.isOpen());\r\n+    }\r\n+\r\n+    @Test\r\n+    void testDoorClosedHandler() {\r\n+        Door door = getDoorById(\"3\");\r\n+\r\n+        assertTrue(door.isOpen());\r\n+\r\n+        processEvents(List.of(\r\n+                new SensorEvent(SensorEventType.DOOR_CLOSED, \"3\")\r\n+        ), List.of(\r\n+                new DoorClosedSensorEventHandler(testHome)\r\n+        ));\r\n+\r\n+        assertFalse(door.isOpen());\r\n+    }\r\n+\r\n+    @Test\r\n+    void testHallDoorClosedHandler() {\r\n+        Door door = getDoorById(\"4\");\r\n+\r\n+        assertTrue(door.isOpen());\r\n+\r\n+        Light light = getLightById(\"2\");\r\n+\r\n+        assertTrue(light.isOn());\r\n+\r\n+        processEvents(List.of(\r\n+                new SensorEvent(SensorEventType.DOOR_CLOSED, \"4\")\r\n+        ), List.of(\r\n+                new DoorClosedSensorEventHandler(testHome),\r\n+                new HallDoorClosedSensorEventHandler(testHome, new DummyCommandSender())\r\n+        ));\r\n+\r\n+        assertFalse(door.isOpen());\r\n+\r\n+        assertFalse(light.isOn());\r\n+    }\r\n+\r\n+    @Test\r\n+    void testActionableCount() {\r\n+        var ref = new Object() {\r\n+            int objCount = 0;\r\n+        };\r\n+\r\n+        testHome.execute((Actionable obj) -> {\r\n+            ref.objCount++;\r\n+        });\r\n+\r\n+        assertEquals(18, ref.objCount);\r\n+    }\r\n+\r\n+    void processEvents(List<SensorEvent> events, List<SensorEventHandler> handlers) {\r\n+        SensorEventProcessor sensorEventProcessor = new HandlingSensorEventProcessor(handlers);\r\n+        SensorEventQueue eventQueue = new PredefinedSensorEventQueue(new ArrayDeque<>(events));\r\n+\r\n+        SensorEventLoop eventLoop = new SensorEventLoop(eventQueue, sensorEventProcessor);\r\n+        eventLoop.start();\r\n+    }\r\n+\r\n+    Light getLightById(String id) {\r\n+        var ref = new Object() {\r\n+            Light light = null;\r\n+        };\r\n+\r\n+        testHome.execute((Actionable lightObject) -> {\r\n+            if (lightObject instanceof Light) {\r\n+                Light temp = (Light) lightObject;\r\n+                if (temp.getId().equals(id)) {\r\n+                    ref.light = temp;\r\n+                }\r\n+            }\r\n+        });\r\n+\r\n+        return ref.light;\r\n+    }\r\n+\r\n+    Door getDoorById(String id) {\r\n+        var ref = new Object() {\r\n+            Door door = null;\r\n+        };\r\n+\r\n+        testHome.execute((Actionable doorObject) -> {\r\n+            if (doorObject instanceof Door) {\r\n+                Door temp = (Door) doorObject;\r\n+                if (temp.getId().equals(id)) {\r\n+                    ref.door = temp;\r\n+                }\r\n+            }\r\n+        });\r\n+\r\n+        return ref.door;\r\n+    }\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b0102da67a3f93af98a38b9cf58c5b1f22ff29f0",
    "filename": "src/test/java/ru/sbt/mipt/oop/sensor/PredefinedSensorEventQueue.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/mitrokosta/smart-home-2021/blob/eb10de811cd5caad2a801a60b647199b5343bffb/src/test/java/ru/sbt/mipt/oop/sensor/PredefinedSensorEventQueue.java",
    "raw_url": "https://github.com/mitrokosta/smart-home-2021/raw/eb10de811cd5caad2a801a60b647199b5343bffb/src/test/java/ru/sbt/mipt/oop/sensor/PredefinedSensorEventQueue.java",
    "contents_url": "https://api.github.com/repos/mitrokosta/smart-home-2021/contents/src/test/java/ru/sbt/mipt/oop/sensor/PredefinedSensorEventQueue.java?ref=eb10de811cd5caad2a801a60b647199b5343bffb",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.sbt.mipt.oop.sensor;\r\n+\r\n+import java.util.Queue;\r\n+\r\n+public class PredefinedSensorEventQueue implements SensorEventQueue {\r\n+    private final Queue<SensorEvent> queue;\r\n+\r\n+    public PredefinedSensorEventQueue(Queue<SensorEvent> queue) {\r\n+        this.queue = queue;\r\n+    }\r\n+\r\n+    @Override\r\n+    public SensorEvent getNextSensorEvent() {\r\n+        if (queue.isEmpty()) {\r\n+            return null;\r\n+        }\r\n+\r\n+        return queue.remove();\r\n+    }\r\n+}\r"
  }
]
