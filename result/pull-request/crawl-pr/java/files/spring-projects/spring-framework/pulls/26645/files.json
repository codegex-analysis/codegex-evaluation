[
  {
    "sha": "e37fac2c30746b6042747e8606d71dc1107c1eb1",
    "filename": "spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/spring-projects/spring-framework/blob/6346908d97872abb885e9f9447ea58aff8a110d2/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java",
    "raw_url": "https://github.com/spring-projects/spring-framework/raw/6346908d97872abb885e9f9447ea58aff8a110d2/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java",
    "contents_url": "https://api.github.com/repos/spring-projects/spring-framework/contents/spring-test/src/main/java/org/springframework/test/context/BootstrapUtils.java?ref=6346908d97872abb885e9f9447ea58aff8a110d2",
    "patch": "@@ -167,8 +167,8 @@ static TestContextBootstrapper resolveTestContextBootstrapper(BootstrapContext b\n \t\t\treturn annotations.iterator().next().value();\n \t\t}\n \n-\t\t// Allow directly-present annotation to override annotations that are meta-present.\n-\t\tBootstrapWith bootstrapWith = testClass.getDeclaredAnnotation(BootstrapWith.class);\n+\t\t// Allow annotation to override annotations that are meta-present.\n+\t\tBootstrapWith bootstrapWith = testClass.getAnnotation(BootstrapWith.class);\n \t\tif (bootstrapWith != null) {\n \t\t\treturn bootstrapWith.value();\n \t\t}"
  },
  {
    "sha": "c8bd6f0a0bf88a6d00522ab36e0553deda350b5e",
    "filename": "spring-test/src/test/java/org/springframework/test/context/BootstrapUtilsTests.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/spring-projects/spring-framework/blob/6346908d97872abb885e9f9447ea58aff8a110d2/spring-test/src/test/java/org/springframework/test/context/BootstrapUtilsTests.java",
    "raw_url": "https://github.com/spring-projects/spring-framework/raw/6346908d97872abb885e9f9447ea58aff8a110d2/spring-test/src/test/java/org/springframework/test/context/BootstrapUtilsTests.java",
    "contents_url": "https://api.github.com/repos/spring-projects/spring-framework/contents/spring-test/src/test/java/org/springframework/test/context/BootstrapUtilsTests.java?ref=6346908d97872abb885e9f9447ea58aff8a110d2",
    "patch": "@@ -140,6 +140,14 @@ void resolveTestContextBootstrapperWithLocalDeclarationThatOverridesMetaBootstra\n \t\tassertBootstrapper(LocalDeclarationAndMetaAnnotatedBootstrapWithAnnotationClass.class, EnigmaBootstrapper.class);\n \t}\n \n+\t/**\n+\t * @since XXX\n+\t */\n+\t@Test\n+\tvoid resolveTestContextBootstrapperWithInheritedLocalDeclarationThatOverridesMetaBootstrapWithAnnotations() {\n+\t\tassertBootstrapper(InheritedLocalDeclarationAndMetaAnnotatedBootstrapWithAnnotationClass.class, EnigmaBootstrapper.class);\n+\t}\n+\n \tprivate void assertBootstrapper(Class<?> testClass, Class<?> expectedBootstrapper) {\n \t\tBootstrapContext bootstrapContext = BootstrapTestUtils.buildBootstrapContext(testClass, delegate);\n \t\tTestContextBootstrapper bootstrapper = resolveTestContextBootstrapper(bootstrapContext);\n@@ -195,6 +203,9 @@ private void assertBootstrapper(Class<?> testClass, Class<?> expectedBootstrappe\n \t@BootstrapWith(EnigmaBootstrapper.class)\n \tstatic class LocalDeclarationAndMetaAnnotatedBootstrapWithAnnotationClass {}\n \n+\tstatic class InheritedLocalDeclarationAndMetaAnnotatedBootstrapWithAnnotationClass\n+\t\t\textends LocalDeclarationAndMetaAnnotatedBootstrapWithAnnotationClass {}\n+\n \t@org.springframework.test.context.web.WebAppConfiguration\n \tstatic class WebAppConfigClass {\n "
  }
]
