[
  {
    "sha": "db0d203d131eb5cd077ecc46a8a913c3ed7f0bdd",
    "filename": "functions/concepts/retry-pubsub/pom.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-pubsub/pom.xml",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-pubsub/pom.xml",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/concepts/retry-pubsub/pom.xml?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -51,6 +51,14 @@\n       <scope>provided</scope>\n     </dependency>\n \n+    <!-- Required for Google Cloud-specific POJOs -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloudevent-types</artifactId>\n+      <version>0.1.5</version>\n+    </dependency>\n+\n+\n     <!-- The following dependencies are only required for testing -->\n     <dependency>\n       <groupId>junit</groupId>"
  },
  {
    "sha": "e6673838256690d0d3cf64405513025a0f67bc68",
    "filename": "functions/concepts/retry-pubsub/src/main/java/functions/RetryPubSub.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-pubsub/src/main/java/functions/RetryPubSub.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-pubsub/src/main/java/functions/RetryPubSub.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/concepts/retry-pubsub/src/main/java/functions/RetryPubSub.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -20,22 +20,22 @@\n \n import com.google.cloud.functions.BackgroundFunction;\n import com.google.cloud.functions.Context;\n+import com.google.events.cloud.pubsub.v1.Message;\n import com.google.gson.Gson;\n import com.google.gson.JsonElement;\n import com.google.gson.JsonObject;\n-import functions.eventpojos.PubSubMessage;\n import java.nio.charset.StandardCharsets;\n import java.util.Base64;\n import java.util.logging.Logger;\n \n-public class RetryPubSub implements BackgroundFunction<PubSubMessage> {\n+public class RetryPubSub implements BackgroundFunction<Message> {\n   private static final Logger logger = Logger.getLogger(RetryPubSub.class.getName());\n \n   // Use Gson (https://github.com/google/gson) to parse JSON content.\n   private static final Gson gson = new Gson();\n \n   @Override\n-  public void accept(PubSubMessage message, Context context) {\n+  public void accept(Message message, Context context) {\n     String bodyJson = new String(\n         Base64.getDecoder().decode(message.getData()), StandardCharsets.UTF_8);\n     JsonElement bodyElement = gson.fromJson(bodyJson, JsonElement.class);"
  },
  {
    "sha": "346bb3d07fea719d14de007f41d42f3da7a8e65e",
    "filename": "functions/concepts/retry-pubsub/src/main/java/functions/eventpojos/PubSubMessage.java",
    "status": "removed",
    "additions": 0,
    "deletions": 63,
    "changes": 63,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/concepts/retry-pubsub/src/main/java/functions/eventpojos/PubSubMessage.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/concepts/retry-pubsub/src/main/java/functions/eventpojos/PubSubMessage.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/concepts/retry-pubsub/src/main/java/functions/eventpojos/PubSubMessage.java?ref=a964f1657fde3ce6304e79b976960696dcaf5c78",
    "patch": "@@ -1,63 +0,0 @@\n-/*\n- * Copyright 2020 Google LLC\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package functions.eventpojos;\n-\n-// [START functions_helloworld_pubsub_message]\n-import java.util.Map;\n-\n-public class PubSubMessage {\n-  // Cloud Functions uses GSON to populate this object.\n-  // Field types/names are specified by Cloud Functions\n-  // Changing them may break your code!\n-  private String data;\n-  private Map<String, String> attributes;\n-  private String messageId;\n-  private String publishTime;\n-\n-  public String getData() {\n-    return data;\n-  }\n-\n-  public void setData(String data) {\n-    this.data = data;\n-  }\n-\n-  public Map<String, String> getAttributes() {\n-    return attributes;\n-  }\n-\n-  public void setAttributes(Map<String, String> attributes) {\n-    this.attributes = attributes;\n-  }\n-\n-  public String getMessageId() {\n-    return messageId;\n-  }\n-\n-  public void setMessageId(String messageId) {\n-    this.messageId = messageId;\n-  }\n-\n-  public String getPublishTime() {\n-    return publishTime;\n-  }\n-\n-  public void setPublishTime(String publishTime) {\n-    this.publishTime = publishTime;\n-  }\n-}\n-// [END functions_helloworld_pubsub_message]"
  },
  {
    "sha": "8643f6203b3e1ac9f0ba9cdf9fb40007a6331bb2",
    "filename": "functions/concepts/retry-pubsub/src/test/java/functions/RetryPubSubTest.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-pubsub/src/test/java/functions/RetryPubSubTest.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-pubsub/src/test/java/functions/RetryPubSubTest.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/concepts/retry-pubsub/src/test/java/functions/RetryPubSubTest.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -20,7 +20,7 @@\n \n import com.google.common.testing.TestLogHandler;\n import com.google.gson.Gson;\n-import functions.eventpojos.PubSubMessage;\n+import com.google.events.cloud.pubsub.v1.Message;\n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n import java.util.Base64;\n@@ -58,10 +58,10 @@ public void retryPubsub_handlesRetryMsg() throws IOException {\n     String encodedData = new String(\n         Base64.getEncoder().encode(data.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);\n \n-    PubSubMessage pubsubMessage = new PubSubMessage();\n-    pubsubMessage.setData(encodedData);\n+    Message message = new Message();\n+    message.setData(encodedData);\n \n-    new RetryPubSub().accept(pubsubMessage, null);\n+    new RetryPubSub().accept(message, null);\n   }\n \n   @Test\n@@ -70,7 +70,7 @@ public void retryPubsub_handlesStopMsg() throws IOException {\n     String encodedData = new String(\n         Base64.getEncoder().encode(data.getBytes(StandardCharsets.UTF_8)), StandardCharsets.UTF_8);\n \n-    PubSubMessage pubsubMessage = new PubSubMessage();\n+    Message pubsubMessage = new Message();\n     pubsubMessage.setData(encodedData);\n \n     new RetryPubSub().accept(pubsubMessage, null);\n@@ -81,10 +81,10 @@ public void retryPubsub_handlesStopMsg() throws IOException {\n \n   @Test\n   public void retryPubsub_handlesEmptyMsg() throws IOException {\n-    PubSubMessage pubsubMessage = new PubSubMessage();\n-    pubsubMessage.setData(\"\");\n+    Message message = new Message();\n+    message.setData(\"\");\n \n-    new RetryPubSub().accept(pubsubMessage, null);\n+    new RetryPubSub().accept(message, null);\n \n     String logMessage = LOG_HANDLER.getStoredLogRecords().get(0).getMessage();\n     assertThat(\"Not retrying...\").isEqualTo(logMessage);"
  },
  {
    "sha": "33d9a8e7099b4eb60c8c230bf62c444ff450aeb1",
    "filename": "functions/concepts/retry-timeout/pom.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-timeout/pom.xml",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-timeout/pom.xml",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/concepts/retry-timeout/pom.xml?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -51,6 +51,13 @@\n       <scope>provided</scope>\n     </dependency>\n \n+    <!-- Required for Google Cloud-specific POJOs -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloudevent-types</artifactId>\n+      <version>0.1.5</version>\n+    </dependency>\n+\n     <!-- The following dependencies are only required for testing -->\n     <dependency>\n       <groupId>junit</groupId>"
  },
  {
    "sha": "51c4ec1f2b334ed32fb060b28359d9f113b5c0a6",
    "filename": "functions/concepts/retry-timeout/src/main/java/functions/RetryTimeout.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-timeout/src/main/java/functions/RetryTimeout.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-timeout/src/main/java/functions/RetryTimeout.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/concepts/retry-timeout/src/main/java/functions/RetryTimeout.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -20,14 +20,14 @@\n \n import com.google.cloud.functions.BackgroundFunction;\n import com.google.cloud.functions.Context;\n+import com.google.events.cloud.pubsub.v1.Message;\n import com.google.gson.Gson;\n-import functions.eventpojos.PubSubMessage;\n import java.time.Duration;\n import java.time.ZoneOffset;\n import java.time.ZonedDateTime;\n import java.util.logging.Logger;\n \n-public class RetryTimeout implements BackgroundFunction<PubSubMessage> {\n+public class RetryTimeout implements BackgroundFunction<Message> {\n   private static final Logger logger = Logger.getLogger(RetryTimeout.class.getName());\n   private static final long MAX_EVENT_AGE = 10_000;\n \n@@ -39,7 +39,7 @@\n    * a certain time period after the triggering event\n    */\n   @Override\n-  public void accept(PubSubMessage message, Context context) {\n+  public void accept(Message message, Context context) {\n     ZonedDateTime utcNow = ZonedDateTime.now(ZoneOffset.UTC);\n     ZonedDateTime timestamp = ZonedDateTime.parse(context.timestamp());\n "
  },
  {
    "sha": "346bb3d07fea719d14de007f41d42f3da7a8e65e",
    "filename": "functions/concepts/retry-timeout/src/main/java/functions/eventpojos/PubSubMessage.java",
    "status": "removed",
    "additions": 0,
    "deletions": 63,
    "changes": 63,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/concepts/retry-timeout/src/main/java/functions/eventpojos/PubSubMessage.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/concepts/retry-timeout/src/main/java/functions/eventpojos/PubSubMessage.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/concepts/retry-timeout/src/main/java/functions/eventpojos/PubSubMessage.java?ref=a964f1657fde3ce6304e79b976960696dcaf5c78",
    "patch": "@@ -1,63 +0,0 @@\n-/*\n- * Copyright 2020 Google LLC\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package functions.eventpojos;\n-\n-// [START functions_helloworld_pubsub_message]\n-import java.util.Map;\n-\n-public class PubSubMessage {\n-  // Cloud Functions uses GSON to populate this object.\n-  // Field types/names are specified by Cloud Functions\n-  // Changing them may break your code!\n-  private String data;\n-  private Map<String, String> attributes;\n-  private String messageId;\n-  private String publishTime;\n-\n-  public String getData() {\n-    return data;\n-  }\n-\n-  public void setData(String data) {\n-    this.data = data;\n-  }\n-\n-  public Map<String, String> getAttributes() {\n-    return attributes;\n-  }\n-\n-  public void setAttributes(Map<String, String> attributes) {\n-    this.attributes = attributes;\n-  }\n-\n-  public String getMessageId() {\n-    return messageId;\n-  }\n-\n-  public void setMessageId(String messageId) {\n-    this.messageId = messageId;\n-  }\n-\n-  public String getPublishTime() {\n-    return publishTime;\n-  }\n-\n-  public void setPublishTime(String publishTime) {\n-    this.publishTime = publishTime;\n-  }\n-}\n-// [END functions_helloworld_pubsub_message]"
  },
  {
    "sha": "336f2669cdc1138633251734c07059d543189d66",
    "filename": "functions/concepts/retry-timeout/src/test/java/functions/RetryTimeoutTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-timeout/src/test/java/functions/RetryTimeoutTest.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/concepts/retry-timeout/src/test/java/functions/RetryTimeoutTest.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/concepts/retry-timeout/src/test/java/functions/RetryTimeoutTest.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -22,8 +22,8 @@\n \n import com.google.cloud.functions.Context;\n import com.google.common.testing.TestLogHandler;\n+import com.google.events.cloud.pubsub.v1.Message;\n import com.google.gson.Gson;\n-import functions.eventpojos.PubSubMessage;\n import java.time.Instant;\n import java.time.ZoneOffset;\n import java.time.ZonedDateTime;\n@@ -68,9 +68,9 @@ public void retryTimeout_handlesRetryMsg() {\n     Context mockContext = mock(Context.class);\n     when(mockContext.timestamp()).thenReturn(timestamp.toString());\n \n-    PubSubMessage pubsubMessage = new PubSubMessage();\n+    Message message = new Message();\n \n-    new RetryTimeout().accept(pubsubMessage, mockContext);\n+    new RetryTimeout().accept(message, mockContext);\n \n     String logMessage = LOG_HANDLER.getStoredLogRecords().get(0).getMessage();\n     assertThat(logMessage).contains(\"Processing event with timestamp \" + timestamp);\n@@ -82,9 +82,9 @@ public void retryTimeout_handlesStopMsg() {\n     Context mockContext = mock(Context.class);\n     when(mockContext.timestamp()).thenReturn(timestamp.toString());\n \n-    PubSubMessage pubsubMessage = new PubSubMessage();\n+    Message message = new Message();\n \n-    new RetryTimeout().accept(pubsubMessage, mockContext);\n+    new RetryTimeout().accept(message, mockContext);\n \n     String logMessage = LOG_HANDLER.getStoredLogRecords().get(0).getMessage();\n     assertThat(logMessage).contains(\"Dropping event with timestamp \" + timestamp);"
  },
  {
    "sha": "c827bf077737792d0414d2f40e594fc94d83cd03",
    "filename": "functions/helloworld/groovy-hello-pubsub/pom.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/groovy-hello-pubsub/pom.xml",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/groovy-hello-pubsub/pom.xml",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/groovy-hello-pubsub/pom.xml?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -46,6 +46,13 @@\n       <version>1.0.4</version>\n     </dependency>\n \n+    <!-- Required for Google Cloud-specific POJOs -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloudevent-types</artifactId>\n+      <version>0.1.5</version>\n+    </dependency>\n+\n     <!-- Required for groovy samples -->\n     <dependency>\n       <groupId>org.codehaus.groovy</groupId>"
  },
  {
    "sha": "f7cdfb04f8bdd30f01da07e2ae8ba24914c301e2",
    "filename": "functions/helloworld/groovy-hello-pubsub/src/main/groovy/functions/GroovyHelloPubSub.groovy",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/groovy-hello-pubsub/src/main/groovy/functions/GroovyHelloPubSub.groovy",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/groovy-hello-pubsub/src/main/groovy/functions/GroovyHelloPubSub.groovy",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/groovy-hello-pubsub/src/main/groovy/functions/GroovyHelloPubSub.groovy?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -3,15 +3,15 @@ package functions\n // [START functions_helloworld_pubsub]\n import com.google.cloud.functions.BackgroundFunction\n import com.google.cloud.functions.Context\n-import functions.eventpojos.PubSubMessage\n+import com.google.events.cloud.pubsub.v1.Message;\n import java.nio.charset.StandardCharsets\n import java.util.logging.Logger\n \n-class GroovyHelloPubSub implements BackgroundFunction<PubSubMessage> {\n+class GroovyHelloPubSub implements BackgroundFunction<Message> {\n     private static final Logger LOGGER = Logger.getLogger(GroovyHelloPubSub.class.name)\n \n     @Override\n-    void accept(PubSubMessage message, Context context) {\n+    void accept(Message message, Context context) {\n         // name's default value is \"world\"\n         String name = \"world\"\n "
  },
  {
    "sha": "14f2fe8dcf0e7de293c7e4c0fe6d81ec150a934b",
    "filename": "functions/helloworld/groovy-hello-pubsub/src/main/groovy/functions/eventpojos/PubSubMessage.groovy",
    "status": "removed",
    "additions": 0,
    "deletions": 66,
    "changes": 66,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/helloworld/groovy-hello-pubsub/src/main/groovy/functions/eventpojos/PubSubMessage.groovy",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/helloworld/groovy-hello-pubsub/src/main/groovy/functions/eventpojos/PubSubMessage.groovy",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/groovy-hello-pubsub/src/main/groovy/functions/eventpojos/PubSubMessage.groovy?ref=a964f1657fde3ce6304e79b976960696dcaf5c78",
    "patch": "@@ -1,66 +0,0 @@\n-/*\n- * Copyright 2020 Google LLC\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package functions.eventpojos\n-\n-// [START functions_helloworld_pubsub_message]\n-class PubSubMessage {\n-    // Cloud Functions uses GSON to populate this object.\n-    // Field types/names are specified by Cloud Functions\n-    // Changing them may break your code!\n-    private String data;\n-    private Map<String, String> attributes;\n-    private String messageId;\n-    private String publishTime;\n-    // [END functions_helloworld_pubsub_message]\n-\n-    // Manually-defined getters and setters are required for\n-    // inter-operation with Java files, but are not necessary\n-    // for pure-Groovy codebases\n-    String getData() {\n-        return data;\n-    }\n-\n-    void setData(String data) {\n-        this.data = data;\n-    }\n-\n-    Map<String, String> getAttributes() {\n-        return attributes;\n-    }\n-\n-    void setAttributes(Map<String, String> attributes) {\n-        this.attributes = attributes;\n-    }\n-\n-    String getMessageId() {\n-        return messageId;\n-    }\n-\n-    void setMessageId(String messageId) {\n-        this.messageId = messageId;\n-    }\n-\n-    String getPublishTime() {\n-        return publishTime;\n-    }\n-\n-    def setPublishTime = { String publishTime ->\n-        this.publishTime = publishTime;\n-    }\n-    // [START functions_helloworld_pubsub_message]\n-}\n-// [END functions_helloworld_pubsub_message]\n\\ No newline at end of file"
  },
  {
    "sha": "9858687ca25d85584208fd48cf23d0a38c263ff6",
    "filename": "functions/helloworld/groovy-hello-pubsub/src/test/java/functions/GroovyHelloPubSubTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/groovy-hello-pubsub/src/test/java/functions/GroovyHelloPubSubTest.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/groovy-hello-pubsub/src/test/java/functions/GroovyHelloPubSubTest.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/groovy-hello-pubsub/src/test/java/functions/GroovyHelloPubSubTest.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -19,8 +19,7 @@\n import static com.google.common.truth.Truth.assertThat;\n \n import com.google.common.testing.TestLogHandler;\n-import functions.eventpojos.MockContext;\n-import functions.eventpojos.PubSubMessage;\n+import com.google.events.cloud.pubsub.v1.Message;\n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n import java.util.Base64;\n@@ -32,6 +31,8 @@\n import org.junit.runner.RunWith;\n import org.junit.runners.JUnit4;\n \n+import functions.eventpojos.MockContext;\n+\n @RunWith(JUnit4.class)\n public class GroovyHelloPubSubTest {\n   private static final Logger logger = Logger.getLogger(\n@@ -56,7 +57,7 @@ public void afterTest() {\n \n   @Test\n   public void functionsHelloworldPubsubGroovy_shouldPrintName() throws Exception {\n-    PubSubMessage message = new PubSubMessage();\n+    Message message = new Message();\n     message.setData(Base64.getEncoder().encodeToString(\n         \"John\".getBytes(StandardCharsets.UTF_8)));\n \n@@ -68,7 +69,7 @@ public void functionsHelloworldPubsubGroovy_shouldPrintName() throws Exception {\n \n   @Test\n   public void functionsHelloworldPubsubGroovy_shouldPrintHelloWorld() throws Exception {\n-    new GroovyHelloPubSub().accept(new PubSubMessage(), new MockContext());\n+    new GroovyHelloPubSub().accept(new Message(), new MockContext());\n \n     assertThat(\"Hello world!\").isEqualTo(\n         LOG_HANDLER.getStoredLogRecords().get(0).getMessage());"
  },
  {
    "sha": "e5022513986c70f42322cf7d7243c17fc8517292",
    "filename": "functions/helloworld/hello-gcs/pom.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/hello-gcs/pom.xml",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/hello-gcs/pom.xml",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/hello-gcs/pom.xml?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -58,6 +58,13 @@\n       <scope>provided</scope>\n     </dependency>\n \n+    <!-- Required for Google Cloud-specific POJOs -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloudevent-types</artifactId>\n+      <version>0.1.5</version>\n+    </dependency>\n+\n     <!-- The following dependencies are only required for testing -->\n     <dependency>\n       <groupId>com.google.truth</groupId>"
  },
  {
    "sha": "e459b0bc2bdca5e14e871104a3afdc90eccc3f3e",
    "filename": "functions/helloworld/hello-gcs/src/test/java/functions/HelloGcsTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/hello-gcs/src/test/java/functions/HelloGcsTest.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/hello-gcs/src/test/java/functions/HelloGcsTest.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/hello-gcs/src/test/java/functions/HelloGcsTest.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -17,16 +17,18 @@\n package functions;\n \n // [START functions_storage_unit_test]\n+\n import static com.google.common.truth.Truth.assertThat;\n \n import com.google.common.testing.TestLogHandler;\n-import functions.eventpojos.GcsEvent;\n-import functions.eventpojos.MockContext;\n import java.util.logging.Logger;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n \n+import functions.eventpojos.GcsEvent;\n+import functions.eventpojos.MockContext;\n+\n /**\n  * Unit tests for main.java.com.example.functions.helloworld.HelloGcs.\n  */"
  },
  {
    "sha": "c5ff3966a3d4010e05ce2716fcc3304b832ecde9",
    "filename": "functions/helloworld/hello-pubsub/pom.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/hello-pubsub/pom.xml",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/hello-pubsub/pom.xml",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/hello-pubsub/pom.xml?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -58,6 +58,13 @@\n       <scope>provided</scope>\n     </dependency>\n \n+    <!-- Required for Google Cloud-specific POJOs -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloudevent-types</artifactId>\n+      <version>0.1.5</version>\n+    </dependency>\n+\n     <!-- The following dependencies are only required for testing -->\n     <dependency>\n       <groupId>com.google.truth</groupId>"
  },
  {
    "sha": "306cc86bc40ee238909d796bcb24dab05389709d",
    "filename": "functions/helloworld/hello-pubsub/src/main/java/functions/HelloPubSub.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/hello-pubsub/src/main/java/functions/HelloPubSub.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/hello-pubsub/src/main/java/functions/HelloPubSub.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/hello-pubsub/src/main/java/functions/HelloPubSub.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -20,17 +20,17 @@\n \n import com.google.cloud.functions.BackgroundFunction;\n import com.google.cloud.functions.Context;\n-import functions.eventpojos.PubSubMessage;\n+import com.google.events.cloud.pubsub.v1.Message;\n import java.nio.charset.StandardCharsets;\n import java.util.Base64;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n \n-public class HelloPubSub implements BackgroundFunction<PubSubMessage> {\n+public class HelloPubSub implements BackgroundFunction<Message> {\n   private static final Logger logger = Logger.getLogger(HelloPubSub.class.getName());\n \n   @Override\n-  public void accept(PubSubMessage message, Context context) {\n+  public void accept(Message message, Context context) {\n     String name = \"world\";\n     if (message != null && message.getData() != null) {\n       name = new String("
  },
  {
    "sha": "346bb3d07fea719d14de007f41d42f3da7a8e65e",
    "filename": "functions/helloworld/hello-pubsub/src/main/java/functions/eventpojos/PubSubMessage.java",
    "status": "removed",
    "additions": 0,
    "deletions": 63,
    "changes": 63,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/helloworld/hello-pubsub/src/main/java/functions/eventpojos/PubSubMessage.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/helloworld/hello-pubsub/src/main/java/functions/eventpojos/PubSubMessage.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/hello-pubsub/src/main/java/functions/eventpojos/PubSubMessage.java?ref=a964f1657fde3ce6304e79b976960696dcaf5c78",
    "patch": "@@ -1,63 +0,0 @@\n-/*\n- * Copyright 2020 Google LLC\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package functions.eventpojos;\n-\n-// [START functions_helloworld_pubsub_message]\n-import java.util.Map;\n-\n-public class PubSubMessage {\n-  // Cloud Functions uses GSON to populate this object.\n-  // Field types/names are specified by Cloud Functions\n-  // Changing them may break your code!\n-  private String data;\n-  private Map<String, String> attributes;\n-  private String messageId;\n-  private String publishTime;\n-\n-  public String getData() {\n-    return data;\n-  }\n-\n-  public void setData(String data) {\n-    this.data = data;\n-  }\n-\n-  public Map<String, String> getAttributes() {\n-    return attributes;\n-  }\n-\n-  public void setAttributes(Map<String, String> attributes) {\n-    this.attributes = attributes;\n-  }\n-\n-  public String getMessageId() {\n-    return messageId;\n-  }\n-\n-  public void setMessageId(String messageId) {\n-    this.messageId = messageId;\n-  }\n-\n-  public String getPublishTime() {\n-    return publishTime;\n-  }\n-\n-  public void setPublishTime(String publishTime) {\n-    this.publishTime = publishTime;\n-  }\n-}\n-// [END functions_helloworld_pubsub_message]"
  },
  {
    "sha": "f718fe559b7f99220ad6e019a48e2f1f90c7d030",
    "filename": "functions/helloworld/hello-pubsub/src/test/java/functions/HelloPubSubTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/hello-pubsub/src/test/java/functions/HelloPubSubTest.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/hello-pubsub/src/test/java/functions/HelloPubSubTest.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/hello-pubsub/src/test/java/functions/HelloPubSubTest.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -21,7 +21,7 @@\n import static com.google.common.truth.Truth.assertThat;\n \n import com.google.common.testing.TestLogHandler;\n-import functions.eventpojos.PubSubMessage;\n+import com.google.events.cloud.pubsub.v1.Message;\n import java.nio.charset.StandardCharsets;\n import java.util.Base64;\n import java.util.logging.Logger;\n@@ -50,19 +50,19 @@ public void setUp() {\n \n   @Test\n   public void helloPubSub_shouldPrintName() {\n-    PubSubMessage pubSubMessage = new PubSubMessage();\n-    pubSubMessage.setData(Base64.getEncoder().encodeToString(\n+    Message message = new Message();\n+    message.setData(Base64.getEncoder().encodeToString(\n         \"John\".getBytes(StandardCharsets.UTF_8)));\n-    sampleUnderTest.accept(pubSubMessage, null);\n+    sampleUnderTest.accept(message, null);\n \n     String logMessage = LOG_HANDLER.getStoredLogRecords().get(0).getMessage();\n     assertThat(\"Hello John!\").isEqualTo(logMessage);\n   }\n \n   @Test\n   public void helloPubSub_shouldPrintHelloWorld() {\n-    PubSubMessage pubSubMessage = new PubSubMessage();\n-    sampleUnderTest.accept(pubSubMessage, null);\n+    Message message = new Message();\n+    sampleUnderTest.accept(message, null);\n \n     String logMessage = LOG_HANDLER.getStoredLogRecords().get(0).getMessage();\n     assertThat(\"Hello world!\").isEqualTo(logMessage);"
  },
  {
    "sha": "c4641be9b947d74082065444fab880dd70e849e5",
    "filename": "functions/helloworld/kotlin-hello-pubsub/pom.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/kotlin-hello-pubsub/pom.xml",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/kotlin-hello-pubsub/pom.xml",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/kotlin-hello-pubsub/pom.xml?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -46,6 +46,13 @@\n       <scope>provided</scope>\n     </dependency>\n \n+    <!-- Required for Google Cloud-specific POJOs -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloudevent-types</artifactId>\n+      <version>0.1.5</version>\n+    </dependency>\n+\n     <dependency>\n       <groupId>org.jetbrains.kotlin</groupId>\n       <artifactId>kotlin-stdlib-jdk8</artifactId>"
  },
  {
    "sha": "9f1483afda6cc32b0203041261d31641eecaea59",
    "filename": "functions/helloworld/kotlin-hello-pubsub/src/main/kotlin/functions/KotlinHelloBackground.kt",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/kotlin-hello-pubsub/src/main/kotlin/functions/KotlinHelloBackground.kt",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/kotlin-hello-pubsub/src/main/kotlin/functions/KotlinHelloBackground.kt",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/kotlin-hello-pubsub/src/main/kotlin/functions/KotlinHelloBackground.kt?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -18,14 +18,14 @@ package functions\n // [START functions_helloworld_pubsub]\n import com.google.cloud.functions.BackgroundFunction\n import com.google.cloud.functions.Context\n-import functions.eventpojos.PubSubMessage\n+import com.google.events.cloud.pubsub.v1.Message;\n import java.nio.charset.StandardCharsets\n import java.util.Base64\n import java.util.logging.Logger\n \n \n-class KotlinHelloPubSub : BackgroundFunction<PubSubMessage> {\n-    override fun accept(message: PubSubMessage, context: Context) {\n+class KotlinHelloPubSub : BackgroundFunction<Message> {\n+    override fun accept(message: Message, context: Context) {\n         // name's default value is \"world\"\n         var name = \"world\"\n         if (message?.data != null) {"
  },
  {
    "sha": "e3d007a71b29b0bded9aeb82f64dcb87cf921e6a",
    "filename": "functions/helloworld/kotlin-hello-pubsub/src/main/kotlin/functions/eventpojos/PubSubMessage.kt",
    "status": "removed",
    "additions": 0,
    "deletions": 29,
    "changes": 29,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/helloworld/kotlin-hello-pubsub/src/main/kotlin/functions/eventpojos/PubSubMessage.kt",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/helloworld/kotlin-hello-pubsub/src/main/kotlin/functions/eventpojos/PubSubMessage.kt",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/kotlin-hello-pubsub/src/main/kotlin/functions/eventpojos/PubSubMessage.kt?ref=a964f1657fde3ce6304e79b976960696dcaf5c78",
    "patch": "@@ -1,29 +0,0 @@\n-/*\n- * Copyright 2020 Google LLC\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package functions.eventpojos\n-\n-// [START functions_helloworld_pubsub_message]\n-class PubSubMessage {\n-    // Cloud Functions uses GSON to populate this object.\n-    // Field types/names are specified by Cloud Functions\n-    // Changing them may break your code!\n-    var data: String? = null\n-    var attributes: Map<String, String>? = null\n-    var messageId: String? = null\n-    var publishTime: String? = null\n-}\n-// [END functions_helloworld_pubsub_message]\n\\ No newline at end of file"
  },
  {
    "sha": "efb7da162a553a838f20958e7c711a671f4470d8",
    "filename": "functions/helloworld/kotlin-hello-pubsub/src/test/java/functions/KotlinHelloPubSubTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/kotlin-hello-pubsub/src/test/java/functions/KotlinHelloPubSubTest.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/kotlin-hello-pubsub/src/test/java/functions/KotlinHelloPubSubTest.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/kotlin-hello-pubsub/src/test/java/functions/KotlinHelloPubSubTest.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -19,8 +19,8 @@\n import static com.google.common.truth.Truth.assertThat;\n \n import com.google.common.testing.TestLogHandler;\n+import com.google.events.cloud.pubsub.v1.Message;\n import functions.eventpojos.MockContext;\n-import functions.eventpojos.PubSubMessage;\n import java.nio.charset.StandardCharsets;\n import java.util.Base64;\n import java.util.logging.Logger;\n@@ -48,7 +48,7 @@ public void afterTest() {\n \n   @Test\n   public void functionsHelloworldPubSubKotlin_shouldPrintName() throws Exception {\n-    PubSubMessage pubSubMessage = new PubSubMessage();\n+    Message pubSubMessage = new Message();\n     pubSubMessage.setData(Base64.getEncoder().encodeToString(\n         \"John\".getBytes(StandardCharsets.UTF_8)));\n \n@@ -60,7 +60,7 @@ public void functionsHelloworldPubSubKotlin_shouldPrintName() throws Exception {\n \n   @Test\n   public void functionsHelloworldPubSubKotlin_shouldPrintHelloWorld() throws Exception {\n-    new KotlinHelloPubSub().accept(new PubSubMessage(), new MockContext());\n+    new KotlinHelloPubSub().accept(new Message(), new MockContext());\n \n     String message = LOG_HANDLER.getStoredLogRecords().get(0).getMessage();\n     assertThat(\"Hello world!\").isEqualTo(message);"
  },
  {
    "sha": "9228b2a6028d141b58c3fddcf9d0992e0c47637a",
    "filename": "functions/helloworld/scala-hello-pubsub/pom.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/scala-hello-pubsub/pom.xml",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/scala-hello-pubsub/pom.xml",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/scala-hello-pubsub/pom.xml?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -52,6 +52,13 @@\n       <scope>provided</scope>\n     </dependency>\n \n+    <!-- Required for Google Cloud-specific POJOs -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloudevent-types</artifactId>\n+      <version>0.1.5</version>\n+    </dependency>\n+\n     <!-- The following dependencies are only required for testing -->\n     <dependency>\n       <groupId>junit</groupId>"
  },
  {
    "sha": "3b109f98e4731d046d2b685cd037e31c9122cbca",
    "filename": "functions/helloworld/scala-hello-pubsub/src/main/scala/functions/ScalaHelloPubSub.scala",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/scala-hello-pubsub/src/main/scala/functions/ScalaHelloPubSub.scala",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/scala-hello-pubsub/src/main/scala/functions/ScalaHelloPubSub.scala",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/scala-hello-pubsub/src/main/scala/functions/ScalaHelloPubSub.scala?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -22,13 +22,13 @@ import java.util.Base64\n import java.util.logging.Logger\n \n import com.google.cloud.functions.{BackgroundFunction, Context}\n-import functions.eventpojos.PubSubMessage\n+import com.google.events.cloud.pubsub.v1.Message\n \n-class ScalaHelloPubSub extends BackgroundFunction[PubSubMessage] {\n+class ScalaHelloPubSub extends BackgroundFunction[Message] {\n \n   val LOGGER = Logger.getLogger(this.getClass.getName)\n \n-  override def accept(message: PubSubMessage, context: Context): Unit = {\n+  override def accept(message: Message, context: Context): Unit = {\n     // name's default value is \"world\"\n     var name = \"world\"\n     if (message != null && message.getData != null) {"
  },
  {
    "sha": "8a1f3d6f935beb4c0a75975794e5744416df2926",
    "filename": "functions/helloworld/scala-hello-pubsub/src/main/scala/functions/eventpojos/PubSubMessage.scala",
    "status": "removed",
    "additions": 0,
    "deletions": 39,
    "changes": 39,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/helloworld/scala-hello-pubsub/src/main/scala/functions/eventpojos/PubSubMessage.scala",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/a964f1657fde3ce6304e79b976960696dcaf5c78/functions/helloworld/scala-hello-pubsub/src/main/scala/functions/eventpojos/PubSubMessage.scala",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/scala-hello-pubsub/src/main/scala/functions/eventpojos/PubSubMessage.scala?ref=a964f1657fde3ce6304e79b976960696dcaf5c78",
    "patch": "@@ -1,39 +0,0 @@\n-/*\n- * Copyright 2020 Google LLC\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\n- * you may not use this file except in compliance with the License.\n- * You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package functions.eventpojos\n-\n-// [START functions_helloworld_pubsub_message]\n-class PubSubMessage { // Cloud Functions uses GSON to populate this object.\n-  // Field types/names are specified by Cloud Functions\n-  // Changing them may break your code!\n-  private var data : String = null\n-  private var attributes : Map[String, String] = null\n-  private var messageId : String = null\n-  private var publishTime : String = null\n-  // [END functions_helloworld_pubsub_message]\n-\n-  // Manually-defined getters and setters are required for\n-  // inter-operation with Java files, but are not necessary\n-  // for pure-Scala codebases\n-  def getData = data\n-\n-  def setData(data: String): Unit = {\n-    this.data = data : String;\n-  }\n-  // [START functions_helloworld_pubsub_message]\n-}\n-// [END functions_helloworld_pubsub_message]\n\\ No newline at end of file"
  },
  {
    "sha": "425459698814f379097490469a900536dee343fd",
    "filename": "functions/helloworld/scala-hello-pubsub/src/test/java/functions/ScalaHelloPubSubTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 3,
    "changes": 7,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/scala-hello-pubsub/src/test/java/functions/ScalaHelloPubSubTest.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/helloworld/scala-hello-pubsub/src/test/java/functions/ScalaHelloPubSubTest.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/helloworld/scala-hello-pubsub/src/test/java/functions/ScalaHelloPubSubTest.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -19,8 +19,9 @@\n import static com.google.common.truth.Truth.assertThat;\n \n import com.google.common.testing.TestLogHandler;\n+import com.google.events.cloud.pubsub.v1.Message;\n+\n import functions.eventpojos.MockContext;\n-import functions.eventpojos.PubSubMessage;\n import java.io.IOException;\n import java.nio.charset.StandardCharsets;\n import java.util.Base64;\n@@ -54,7 +55,7 @@ public void afterTest() {\n \n   @Test\n   public void scalaHelloPubSub_printsName() throws Exception {\n-    PubSubMessage message = new PubSubMessage();\n+    Message message = new Message();\n     message.setData(Base64.getEncoder().encodeToString(\n         \"John\".getBytes(StandardCharsets.UTF_8)));\n \n@@ -67,7 +68,7 @@ public void scalaHelloPubSub_printsName() throws Exception {\n \n   @Test\n   public void scalaHelloPubSub_printsHelloWorld() throws Exception {\n-    new ScalaHelloPubSub().accept(new PubSubMessage(), new MockContext());\n+    new ScalaHelloPubSub().accept(new Message(), new MockContext());\n \n     assertThat(\"Hello world!\").isEqualTo(\n         LOG_HANDLER.getStoredLogRecords().get(0).getMessage()"
  },
  {
    "sha": "b290a47378184369b4f4a5203e5d0e317c588404",
    "filename": "functions/imagemagick/pom.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/imagemagick/pom.xml",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/imagemagick/pom.xml",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/imagemagick/pom.xml?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -58,6 +58,13 @@\n       <artifactId>google-cloud-vision</artifactId>\n     </dependency>\n \n+    <!-- Required for Google Cloud-specific POJOs -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloudevent-types</artifactId>\n+      <version>0.1.5</version>\n+    </dependency>\n+\n     <!-- Required for Function primitives -->\n     <dependency>\n       <groupId>com.google.cloud.functions</groupId>"
  },
  {
    "sha": "7413bbda0f763946b3ef19fd5dce08e4d116ece7",
    "filename": "functions/imagemagick/src/main/java/functions/ImageMagick.java",
    "status": "modified",
    "additions": 12,
    "deletions": 9,
    "changes": 21,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/imagemagick/src/main/java/functions/ImageMagick.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/imagemagick/src/main/java/functions/ImageMagick.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/imagemagick/src/main/java/functions/ImageMagick.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -18,6 +18,7 @@\n \n // [START functions_imagemagick_setup]\n \n+\n import com.google.cloud.functions.BackgroundFunction;\n import com.google.cloud.functions.Context;\n import com.google.cloud.storage.Blob;\n@@ -34,16 +35,18 @@\n import com.google.cloud.vision.v1.ImageAnnotatorClient;\n import com.google.cloud.vision.v1.ImageSource;\n import com.google.cloud.vision.v1.SafeSearchAnnotation;\n-import functions.eventpojos.GcsEvent;\n import java.io.IOException;\n import java.nio.file.Files;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n-import java.util.ArrayList;\n import java.util.List;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n \n+import functions.eventpojos.GcsEvent;\n+\n+;\n+\n public class ImageMagick implements BackgroundFunction<GcsEvent> {\n \n   private static Storage storage = StorageOptions.getDefaultInstance().getService();\n@@ -54,18 +57,18 @@\n   // [START functions_imagemagick_analyze]\n   @Override\n   // Blurs uploaded images that are flagged as Adult or Violence.\n-  public void accept(GcsEvent gcsEvent, Context context) {\n+  public void accept(GcsEvent event, Context context) {\n     // Validate parameters\n-    if (gcsEvent.getBucket() == null || gcsEvent.getName() == null) {\n+    if (event.getBucket() == null || event.getName() == null) {\n       logger.severe(\"Error: Malformed GCS event.\");\n       return;\n     }\n \n-    BlobInfo blobInfo = BlobInfo.newBuilder(gcsEvent.getBucket(), gcsEvent.getName()).build();\n+    BlobInfo blobInfo = BlobInfo.newBuilder(event.getBucket(), event.getName()).build();\n \n     // Construct URI to GCS bucket and file.\n-    String gcsPath = String.format(\"gs://%s/%s\", gcsEvent.getBucket(), gcsEvent.getName());\n-    logger.info(String.format(\"Analyzing %s\", gcsEvent.getName()));\n+    String gcsPath = String.format(\"gs://%s/%s\", event.getBucket(), event.getName());\n+    logger.info(String.format(\"Analyzing %s\", event.getName()));\n \n     // Construct request.\n     ImageSource imgSource = ImageSource.newBuilder().setImageUri(gcsPath).build();\n@@ -87,10 +90,10 @@ public void accept(GcsEvent gcsEvent, Context context) {\n         // Get Safe Search Annotations\n         SafeSearchAnnotation annotation = res.getSafeSearchAnnotation();\n         if (annotation.getAdultValue() == 5 || annotation.getViolenceValue() == 5) {\n-          logger.info(String.format(\"Detected %s as inappropriate.\", gcsEvent.getName()));\n+          logger.info(String.format(\"Detected %s as inappropriate.\", event.getName()));\n           blur(blobInfo);\n         } else {\n-          logger.info(String.format(\"Detected %s as OK.\", gcsEvent.getName()));\n+          logger.info(String.format(\"Detected %s as OK.\", event.getName()));\n         }\n       }\n     } catch (IOException e) {"
  },
  {
    "sha": "e79cc3c04e2ed920713de1940dbd6b2567fac116",
    "filename": "functions/logging/stackdriver-logging/pom.xml",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/logging/stackdriver-logging/pom.xml",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/logging/stackdriver-logging/pom.xml",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/logging/stackdriver-logging/pom.xml?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -51,6 +51,13 @@\n       <scope>provided</scope>\n     </dependency>\n \n+    <!-- Required for Google Cloud-specific POJOs -->\n+    <dependency>\n+      <groupId>com.google.cloud</groupId>\n+      <artifactId>google-cloudevent-types</artifactId>\n+      <version>0.1.5</version>\n+    </dependency>\n+\n     <!-- The following dependencies are only required for testing -->\n     <dependency>\n       <groupId>org.junit.jupiter</groupId>"
  },
  {
    "sha": "395c54c3d3484af2ac8bbe4f6cd8dc649c056a4f",
    "filename": "functions/logging/stackdriver-logging/src/main/java/functions/StackdriverLogging.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/blob/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/logging/stackdriver-logging/src/main/java/functions/StackdriverLogging.java",
    "raw_url": "https://github.com/GoogleCloudPlatform/java-docs-samples/raw/f815551e8c9d02b4ca87cd47509ace21484d5a4b/functions/logging/stackdriver-logging/src/main/java/functions/StackdriverLogging.java",
    "contents_url": "https://api.github.com/repos/GoogleCloudPlatform/java-docs-samples/contents/functions/logging/stackdriver-logging/src/main/java/functions/StackdriverLogging.java?ref=f815551e8c9d02b4ca87cd47509ace21484d5a4b",
    "patch": "@@ -20,16 +20,16 @@\n \n import com.google.cloud.functions.BackgroundFunction;\n import com.google.cloud.functions.Context;\n-import functions.eventpojos.PubSubMessage;\n+import com.google.events.cloud.pubsub.v1.Message;\n import java.nio.charset.StandardCharsets;\n import java.util.Base64;\n import java.util.logging.Logger;\n \n-public class StackdriverLogging implements BackgroundFunction<PubSubMessage> {\n+public class StackdriverLogging implements BackgroundFunction<Message> {\n   private static final Logger logger = Logger.getLogger(StackdriverLogging.class.getName());\n \n   @Override\n-  public void accept(PubSubMessage message, Context context) {\n+  public void accept(Message message, Context context) {\n     String name = \"World\";\n \n     if (!message.getData().isEmpty()) {"
  }
]
