[
  {
    "sha": "f1bd438554d4ee4a93e288d11ba8f32a5c2ca9e5",
    "filename": ".idea/compiler.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/.idea/compiler.xml",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/.idea/compiler.xml?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -6,8 +6,9 @@\n         <sourceOutputDir name=\"target/generated-sources/annotations\" />\n         <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n         <outputRelativeToContentRoot value=\"true\" />\n-        <module name=\"first-web-app\" />\n         <module name=\"remote-client\" />\n+        <module name=\"product-service-api\" />\n+        <module name=\"first-web-app\" />\n         <module name=\"first-jsf-app\" />\n       </profile>\n     </annotationProcessing>"
  },
  {
    "sha": "b5e8a65034ee241aa4e4fe620a817772c97e41a9",
    "filename": "first-jsf-app/mysql-module.cli",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/mysql-module.cli",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/mysql-module.cli",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/first-jsf-app/mysql-module.cli?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -6,7 +6,7 @@ module add \\\n   --resources=\"D:\\\\Java EE\\\\mysql-connector-java-8.0.23\\\\mysql-connector-java-8.0.23.jar\"\n \n # 2. creating driver section in standalone.xml config\n-/subsystem=datasources/jdbc-driver=mysql:add(driver-name=mysql,driver-module-name=com.mysql.driver, driver-class-name=com.mysql.jdbc.Driver )\n+/subsystem=datasources/jdbc-driver=mysql:add( driver-name=mysql, driver-module-name=com.mysql.driver, driver-class-name=com.mysql.jdbc.Driver )\n \n-# 3. restartinen g Wildfly server\n-:reload\n+# 3. restarting Wildfly server\n+:reload\n\\ No newline at end of file"
  },
  {
    "sha": "a1ad02113823dc295347a7127233f7f444a47a12",
    "filename": "first-jsf-app/pom.xml",
    "status": "modified",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/pom.xml",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/pom.xml",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/first-jsf-app/pom.xml?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -87,6 +87,27 @@\n             <scope>provided</scope>\n         </dependency>\n \n+\n+        <dependency>\n+            <groupId>javax.jms</groupId>\n+            <artifactId>javax.jms-api</artifactId>\n+            <version>2.0.1</version>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>javax.ws.rs</groupId>\n+            <artifactId>javax.ws.rs-api</artifactId>\n+            <version>2.0</version>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>ru.geekbrains</groupId>\n+            <artifactId>product-service-api</artifactId>\n+            <version>1.0-SNAPSHOT</version>\n+        </dependency>\n+\n     </dependencies>\n \n     <build>"
  },
  {
    "sha": "caa507db25d0cb9a360b3e61dad930d85c83d521",
    "filename": "first-jsf-app/requests.http",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/requests.http",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/requests.http",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/first-jsf-app/requests.http?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -0,0 +1,36 @@\n+GET http://localhost:8080/first-jsf-app/api/v1/product/\n+\n+###\n+\n+GET http://localhost:8080/first-jsf-app/api/v1/product/2\n+\n+\n+###\n+GET http://localhost:8080/first-jsf-app/api/v1/product/Product7\n+\n+###\n+\n+POST http://localhost:8080/first-jsf-app/api/v1/product/\n+Content-Type: application/json\n+\n+{\n+  \"categoryId\": 2,\n+  \"categoryName\": \"Category 2\",\n+  \"description\": \"Product from REST\",\n+  \"name\": \"Product7\",\n+  \"price\": 100.00\n+}\n+\n+###\n+\n+PUT http://localhost:8080/first-jsf-app/api/v1/product/\n+Content-Type: application/json\n+\n+{\n+  \"id\": 6,\n+  \"categoryId\": 1,\n+  \"categoryName\": \"Category 1\",\n+  \"description\": \"Product from REST 1\",\n+  \"name\": \"Product from REST 1\",\n+  \"price\": 150.00\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "e84e8f897938401ed1e790e4dc9ed84ab14859a8",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/jms/JmsProductReceiver.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/jms/JmsProductReceiver.java",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/jms/JmsProductReceiver.java",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/jms/JmsProductReceiver.java?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -0,0 +1,42 @@\n+package ru.geekbrains.jms;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import ru.geekbrains.service.ProductRepr;\n+import ru.geekbrains.service.ProductService;\n+\n+import javax.ejb.ActivationConfigProperty;\n+import javax.ejb.EJB;\n+import javax.ejb.MessageDriven;\n+import javax.jms.JMSException;\n+import javax.jms.Message;\n+import javax.jms.MessageListener;\n+import javax.jms.ObjectMessage;\n+\n+@MessageDriven(\n+        activationConfig = {\n+                @ActivationConfigProperty(propertyName = \"destinationType\", propertyValue = \"javax.jms.Queue\"),\n+                @ActivationConfigProperty(propertyName = \"destination\", propertyValue = \"java:jboss/exported/jms/productQueue\")\n+        }\n+)\n+public class JmsProductReceiver implements MessageListener {\n+\n+    private final Logger logger = LoggerFactory.getLogger(JmsProductReceiver.class);\n+\n+    @EJB\n+    private ProductService productService;\n+\n+    @Override\n+    public void onMessage(Message message) {\n+        logger.info(\"New JMS message\");\n+\n+        if (message instanceof ObjectMessage) {\n+            ObjectMessage om = (ObjectMessage) message;\n+            try {\n+                productService.saveOrUpdate((ProductRepr) om.getObject());\n+            } catch (JMSException e) {\n+                logger.error(\"\", e);\n+            }\n+        }\n+    }\n+}"
  },
  {
    "sha": "af0697cd52e4858dd5339bb1568c34586a77c181",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/persist/ProductRepository.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/persist/ProductRepository.java",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/persist/ProductRepository.java",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/persist/ProductRepository.java?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -20,6 +20,7 @@\n import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.atomic.AtomicLong;\n+import java.util.stream.Collectors;\n \n @Stateless\n public class ProductRepository {\n@@ -34,6 +35,10 @@\n                 .getResultList();\n     }\n \n+    public List<Product> findByName(String name) {\n+        return findAll().stream().filter(p -> p.getName().equals(name)).collect(Collectors.toList());\n+    }\n+\n     public Product findById(Long id) {\n         return em.find(Product.class, id);\n     }"
  },
  {
    "sha": "9d9441fd4ed3d7bc468eeed263acf4b98ed6ab5e",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/rest/CategoryServiceRest.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/rest/CategoryServiceRest.java",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/rest/CategoryServiceRest.java",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/rest/CategoryServiceRest.java?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -0,0 +1,40 @@\n+package ru.geekbrains.rest;\n+\n+import ru.geekbrains.service.CategoryRepr;\n+import ru.geekbrains.service.ProductRepr;\n+\n+import javax.ejb.Local;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.MediaType;\n+import java.util.List;\n+\n+@Local\n+@Path(\"/v1/product\")\n+public interface CategoryServiceRest {\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    List<CategoryRepr> findAll();\n+\n+    @GET\n+    @Path(\"/{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    CategoryRepr findById(@PathParam(\"id\") Long id);\n+\n+    @GET\n+    @Path(\"/count\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    Long countAll();\n+\n+    @POST\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    void insert(CategoryRepr category);\n+\n+    @PUT\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    void update(CategoryRepr category);\n+\n+    @DELETE\n+    @Path(\"/{id}\")\n+    void deleteById(Long id);\n+}"
  },
  {
    "sha": "48983f64487e1c5593cab7cd990241d83b7b3a94",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/rest/JaxRsApplication.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/rest/JaxRsApplication.java",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/rest/JaxRsApplication.java",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/rest/JaxRsApplication.java?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -0,0 +1,8 @@\n+package ru.geekbrains.rest;\n+\n+import javax.ws.rs.ApplicationPath;\n+import javax.ws.rs.core.Application;\n+\n+@ApplicationPath(\"/api\")\n+public class JaxRsApplication extends Application {\n+}"
  },
  {
    "sha": "77862cfc89b617e4cff7d5cacd2574c27c23412a",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/rest/ProductServiceRest.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/rest/ProductServiceRest.java",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/rest/ProductServiceRest.java",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/rest/ProductServiceRest.java?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -0,0 +1,49 @@\n+package ru.geekbrains.rest;\n+\n+import ru.geekbrains.service.ProductRepr;\n+\n+import javax.ejb.Local;\n+import javax.ws.rs.*;\n+import javax.ws.rs.core.MediaType;\n+import java.util.List;\n+\n+@Local\n+@Path(\"/v1/product\")\n+public interface ProductServiceRest {\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    List<ProductRepr> findAll();\n+\n+    @GET\n+    @Path(\"/{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    ProductRepr findById(@PathParam(\"id\") Long id);\n+\n+    @GET\n+    @Path(\"/{name}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    List<ProductRepr> findByName(@PathParam(\"name\") String name);\n+\n+\n+    @GET\n+    @Path(\"/count\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    Long countAll();\n+\n+    @POST\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    void insert(ProductRepr product);\n+\n+    @PUT\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    void update(ProductRepr product);\n+\n+    @GET\n+    @Path(\"/{id}/{categoryId}\")\n+    void addCategoryById(@PathParam(\"id\") Long id, @PathParam(\"categoryId\") Long id2);\n+\n+    @DELETE\n+    @Path(\"/{id}\")\n+    void deleteById(Long id);\n+}"
  },
  {
    "sha": "bdf16147cec7827d4c1cb0c29f3064199eb61111",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/service/CartServiceImpl.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/service/CartServiceImpl.java",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/service/CartServiceImpl.java",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/service/CartServiceImpl.java?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -1,6 +1,8 @@\n package ru.geekbrains.service;\n \n \n+import ru.geekbrains.rest.CategoryServiceRest;\n+\n import javax.ejb.Stateful;\n import java.util.ArrayList;\n import java.util.HashMap;"
  },
  {
    "sha": "69f05c3a53d51575b3bbf94e0cb58095e1a95e6d",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/service/CategoryServiceImpl.java",
    "status": "modified",
    "additions": 18,
    "deletions": 1,
    "changes": 19,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/service/CategoryServiceImpl.java",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/service/CategoryServiceImpl.java",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/service/CategoryServiceImpl.java?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -4,6 +4,7 @@\n import org.slf4j.LoggerFactory;\n import ru.geekbrains.persist.Category;\n import ru.geekbrains.persist.CategoryRepository;\n+import ru.geekbrains.rest.CategoryServiceRest;\n \n import javax.ejb.EJB;\n import javax.ejb.Stateless;\n@@ -12,7 +13,7 @@\n import java.util.stream.Collectors;\n \n @Stateless\n-public class CategoryServiceImpl implements CategoryService {\n+public class CategoryServiceImpl implements CategoryService, CategoryServiceRest {\n \n     private static final Logger logger = LoggerFactory.getLogger(CategoryServiceImpl.class);\n \n@@ -41,6 +42,22 @@ public Long countAll() {\n         return categoryRepository.countAll();\n     }\n \n+    @Override\n+    public void insert(CategoryRepr category) {\n+        if (category.getId() != null) {\n+            throw new IllegalArgumentException();\n+        }\n+        saveOrUpdate(category);\n+    }\n+\n+    @Override\n+    public void update(CategoryRepr category) {\n+        if (category.getId() == null) {\n+            throw new IllegalArgumentException();\n+        }\n+        saveOrUpdate(category);\n+    }\n+\n     @TransactionAttribute\n     @Override\n     public void saveOrUpdate(CategoryRepr category) {"
  },
  {
    "sha": "70dd9f0852983ea42f600eb5e264e8f0e87cf34f",
    "filename": "first-jsf-app/src/main/java/ru/geekbrains/service/ProductServiceImpl.java",
    "status": "modified",
    "additions": 57,
    "deletions": 23,
    "changes": 80,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/service/ProductServiceImpl.java",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/first-jsf-app/src/main/java/ru/geekbrains/service/ProductServiceImpl.java",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/first-jsf-app/src/main/java/ru/geekbrains/service/ProductServiceImpl.java?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -6,15 +6,18 @@\n import ru.geekbrains.persist.CategoryRepository;\n import ru.geekbrains.persist.Product;\n import ru.geekbrains.persist.ProductRepository;\n+import ru.geekbrains.rest.ProductServiceRest;\n \n import javax.ejb.EJB;\n+import javax.ejb.Remote;\n import javax.ejb.Stateless;\n import javax.ejb.TransactionAttribute;\n import java.util.List;\n import java.util.stream.Collectors;\n \n @Stateless\n-public class ProductServiceImpl implements ProductService, ProductServiceRemote {\n+@Remote(ProductServiceRemote.class)\n+public class ProductServiceImpl implements ProductService, ProductServiceRemote, ProductServiceRest {\n \n     private static final Logger logger = LoggerFactory.getLogger(ProductServiceImpl.class);\n \n@@ -27,44 +30,75 @@\n     @Override\n     public List<ProductRepr> findAll() {\n         return productRepository.findAll().stream()\n-                .map(product -> {\n-                    ProductRepr repr = new ProductRepr();\n-                    repr.setId(product.getId());\n-                    repr.setDescription(product.getDescription());\n-                    repr.setName(product.getName());\n-                    repr.setPrice(product.getPrice());\n-                    if (product.getCategory() != null) {\n-                        repr.setCategoryId(product.getCategory().getId());\n-                        repr.setCategoryName(product.getCategory().getName());\n-                    }\n-                    return repr;\n-                })\n+                .map(this::buildProductRepr)\n                 .collect(Collectors.toList());\n     }\n \n+    private ProductRepr buildProductRepr(Product product) {\n+        ProductRepr repr = new ProductRepr();\n+\n+        repr.setId(product.getId());\n+        repr.setName(product.getName());\n+        repr.setDescription(product.getDescription());\n+        repr.setPrice(product.getPrice());\n+        Category category = product.getCategory();\n+        repr.setCategoryId(category != null ? category.getId() : null);\n+        repr.setCategoryName(category != null ? category.getName() : null);\n+\n+        return repr;\n+    }\n+\n     @Override\n     public ProductRepr findById(Long id) {\n         Product product = productRepository.findById(id);\n         if (product != null) {\n-            ProductRepr repr = new ProductRepr();\n-            repr.setId(product.getId());\n-            repr.setDescription(product.getDescription());\n-            repr.setName(product.getName());\n-            repr.setPrice(product.getPrice());\n-            if (product.getCategory() != null) {\n-                repr.setCategoryId(product.getCategory().getId());\n-                repr.setCategoryName(product.getCategory().getName());\n-            }\n-            return repr;\n+            return buildProductRepr(product);\n         }\n         return null;\n     }\n \n+    @Override\n+    public List<ProductRepr> findByName(String name) {\n+        List<Product> productList = productRepository.findByName(name);\n+        if (productList == null || productList.isEmpty()) {\n+            return null;\n+        } else {\n+            return productList.stream().map(this::buildProductRepr).collect(Collectors.toList());\n+        }\n+    }\n+\n     @Override\n     public Long countAll() {\n         return productRepository.countAll();\n     }\n \n+    @Override\n+    public void insert(ProductRepr product) {\n+        if (product.getId() != null) {\n+            throw new IllegalArgumentException();\n+        }\n+        saveOrUpdate(product);\n+    }\n+\n+    @Override\n+    public void update(ProductRepr product) {\n+        if (product.getId() == null) {\n+            throw new IllegalArgumentException();\n+        }\n+        saveOrUpdate(product);\n+    }\n+\n+    @Override\n+    public void addCategoryById(Long id, Long id2) {\n+        if (productRepository.findById(id) == null || categoryRepository.findById(id2) == null) {\n+            throw new IllegalArgumentException();\n+        }\n+        Product pr = productRepository.findById(id);\n+        pr.setCategory(categoryRepository.findById(id2));\n+        productRepository.saveOrUpdate(pr);\n+    }\n+\n+\n     @TransactionAttribute\n     @Override\n     public void saveOrUpdate(ProductRepr product) {"
  },
  {
    "sha": "351cf8b0ef1d2d792773774d6fa34b4e19153ef3",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/pom.xml",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/pom.xml",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/pom.xml?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -15,10 +15,10 @@\n     </properties>\n \n     <modules>\n+        <module>product-service-api</module>\n         <module>first-web-app</module>\n         <module>first-jsf-app</module>\n         <module>remote-client</module>\n-        <module>product-remote</module>\n     </modules>\n \n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "6b1fd3308abaf54ee6d53226b44f2456909008f8",
    "filename": "product-service-api/pom.xml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/product-service-api/pom.xml",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/product-service-api/pom.xml",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/product-service-api/pom.xml?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -0,0 +1,19 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>geek-java-ee-01-27</artifactId>\n+        <groupId>ru.geekbrains</groupId>\n+        <version>1.0-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>product-service-api</artifactId>\n+\n+    <properties>\n+        <maven.compiler.source>15</maven.compiler.source>\n+        <maven.compiler.target>15</maven.compiler.target>\n+    </properties>\n+\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "c82da3c3fa6ddb15854cce4a6f09629b274c4de9",
    "filename": "product-service-api/src/main/java/ru/geekbrains/service/ProductRepr.java",
    "status": "renamed",
    "additions": 8,
    "deletions": 9,
    "changes": 17,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/product-service-api/src/main/java/ru/geekbrains/service/ProductRepr.java",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/product-service-api/src/main/java/ru/geekbrains/service/ProductRepr.java",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/product-service-api/src/main/java/ru/geekbrains/service/ProductRepr.java?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -21,15 +21,14 @@\n     public ProductRepr() {\n     }\n \n-/*    public ProductRepr(Product product) {\n-        id = product.getId();\n-        name = product.getName();\n-        description = product.getDescription();\n-        price = product.getPrice();\n-        Category category = product.getCategory();\n-        categoryId = category != null ? category.getId() : null;\n-        categoryName = category != null ? category.getName() : null;\n-    }*/\n+    public ProductRepr(Long id, String name, String description, BigDecimal price, Long categoryId, String categoryName) {\n+        this.id = id;\n+        this.name = name;\n+        this.description = description;\n+        this.price = price;\n+        this.categoryId = categoryId;\n+        this.categoryName = categoryName;\n+    }\n \n     public Long getId() {\n         return id;",
    "previous_filename": "first-jsf-app/src/main/java/ru/geekbrains/service/ProductRepr.java"
  },
  {
    "sha": "4612aca63bcd6f5e104d794c1aaf0b04e1972c61",
    "filename": "product-service-api/src/main/java/ru/geekbrains/service/ProductServiceRemote.java",
    "status": "renamed",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/product-service-api/src/main/java/ru/geekbrains/service/ProductServiceRemote.java",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/product-service-api/src/main/java/ru/geekbrains/service/ProductServiceRemote.java",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/product-service-api/src/main/java/ru/geekbrains/service/ProductServiceRemote.java?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -1,9 +1,7 @@\n package ru.geekbrains.service;\n \n-import javax.ejb.Remote;\n import java.util.List;\n \n-@Remote\n public interface ProductServiceRemote {\n \n     List<ProductRepr> findAll();",
    "previous_filename": "first-jsf-app/src/main/java/ru/geekbrains/service/ProductServiceRemote.java"
  },
  {
    "sha": "723262044526c220467d16eb2ec9a8292bfe9775",
    "filename": "remote-client/pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/remote-client/pom.xml",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/remote-client/pom.xml",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/remote-client/pom.xml?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -28,9 +28,8 @@\n \n         <dependency>\n             <groupId>ru.geekbrains</groupId>\n-            <artifactId>product-remote</artifactId>\n+            <artifactId>product-service-api</artifactId>\n             <version>1.0-SNAPSHOT</version>\n-            <classifier>classes</classifier>\n         </dependency>\n     </dependencies>\n "
  },
  {
    "sha": "f7b3426fe29afbb0fb0b6d84a54975b756cee786",
    "filename": "remote-client/src/main/java/ru/geekbrains/EjbClient.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/AiRrRock/java-ee/blob/cf5134c1ff3c9465ba49844f1329685dbc712ff9/remote-client/src/main/java/ru/geekbrains/EjbClient.java",
    "raw_url": "https://github.com/AiRrRock/java-ee/raw/cf5134c1ff3c9465ba49844f1329685dbc712ff9/remote-client/src/main/java/ru/geekbrains/EjbClient.java",
    "contents_url": "https://api.github.com/repos/AiRrRock/java-ee/contents/remote-client/src/main/java/ru/geekbrains/EjbClient.java?ref=cf5134c1ff3c9465ba49844f1329685dbc712ff9",
    "patch": "@@ -1,6 +1,5 @@\n package ru.geekbrains;\n \n-import ru.geekbrains.service.ProductService;\n import ru.geekbrains.service.ProductServiceRemote;\n \n import javax.naming.Context;"
  }
]
