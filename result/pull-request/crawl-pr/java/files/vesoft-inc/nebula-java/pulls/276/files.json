[
  {
    "sha": "7b79f18185dc44ee0e89ba2bf4712c900dc3c445",
    "filename": "client/src/main/java/com/vesoft/nebula/client/graph/data/ResultSet.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/vesoft-inc/nebula-java/blob/f82c55fa7d6772b1a49b90e6582592d8f420c827/client/src/main/java/com/vesoft/nebula/client/graph/data/ResultSet.java",
    "raw_url": "https://github.com/vesoft-inc/nebula-java/raw/f82c55fa7d6772b1a49b90e6582592d8f420c827/client/src/main/java/com/vesoft/nebula/client/graph/data/ResultSet.java",
    "contents_url": "https://api.github.com/repos/vesoft-inc/nebula-java/contents/client/src/main/java/com/vesoft/nebula/client/graph/data/ResultSet.java?ref=f82c55fa7d6772b1a49b90e6582592d8f420c827",
    "patch": "@@ -298,6 +298,7 @@ public String toString() {\n                 valueStrs.add(value.toString());\n             }\n             rowStrs.add(String.join(\",\", valueStrs));\n+            i++;\n         }\n         return String.format(\"ColumnName: %s, Rows: %s\",\n             columnNames.toString(), rowStrs.toString());"
  },
  {
    "sha": "4ad9b7c35df9d301785853574630136896f47bb5",
    "filename": "client/src/test/java/com/vesoft/nebula/client/graph/data/TestData.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/vesoft-inc/nebula-java/blob/f82c55fa7d6772b1a49b90e6582592d8f420c827/client/src/test/java/com/vesoft/nebula/client/graph/data/TestData.java",
    "raw_url": "https://github.com/vesoft-inc/nebula-java/raw/f82c55fa7d6772b1a49b90e6582592d8f420c827/client/src/test/java/com/vesoft/nebula/client/graph/data/TestData.java",
    "contents_url": "https://api.github.com/repos/vesoft-inc/nebula-java/contents/client/src/test/java/com/vesoft/nebula/client/graph/data/TestData.java?ref=f82c55fa7d6772b1a49b90e6582592d8f420c827",
    "patch": "@@ -343,6 +343,7 @@ public void testResult() {\n             assert record.get(14).isPath();\n             assert Objects.equals(record.get(14).asPath(),\n                 new PathWrapper(getPath(\"Tom\", 3)));\n+            assert resultSet.toString().length() > 100;\n         } catch (Exception e) {\n             e.printStackTrace();\n             assert (false);"
  },
  {
    "sha": "89c890277a669e9bab8daab00a05357ba043c8b7",
    "filename": "client/src/test/java/com/vesoft/nebula/client/graph/data/TestDataFromServer.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/vesoft-inc/nebula-java/blob/f82c55fa7d6772b1a49b90e6582592d8f420c827/client/src/test/java/com/vesoft/nebula/client/graph/data/TestDataFromServer.java",
    "raw_url": "https://github.com/vesoft-inc/nebula-java/raw/f82c55fa7d6772b1a49b90e6582592d8f420c827/client/src/test/java/com/vesoft/nebula/client/graph/data/TestDataFromServer.java",
    "contents_url": "https://api.github.com/repos/vesoft-inc/nebula-java/contents/client/src/test/java/com/vesoft/nebula/client/graph/data/TestDataFromServer.java?ref=f82c55fa7d6772b1a49b90e6582592d8f420c827",
    "patch": "@@ -207,6 +207,10 @@ public void testSet() {\n \n             Assert.assertEquals(names.stream().sorted().collect(Collectors.toList()),\n                     setVal.stream().sorted().collect(Collectors.toList()));\n+\n+            Assert.assertEquals(result.toString(),\n+                \"ColumnName: [{\\\"name\\\",\\\"name\\\",\\\"age\\\",\\\"birthday\\\"}], \"\n+                + \"Rows: [[\\\"birthday\\\", \\\"name\\\", \\\"age\\\"]]\");\n         } catch (IOErrorException | UnsupportedEncodingException e) {\n             e.printStackTrace();\n             assert false;"
  }
]
