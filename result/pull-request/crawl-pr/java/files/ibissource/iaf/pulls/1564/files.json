[
  {
    "sha": "af93c36b9e05c2ddb99e6534c2e1d4557d484466",
    "filename": "core/src/main/java/nl/nn/adapterframework/doc/AttributeTypeStrategy.java",
    "status": "added",
    "additions": 163,
    "deletions": 0,
    "changes": 163,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/AttributeTypeStrategy.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/AttributeTypeStrategy.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/doc/AttributeTypeStrategy.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -0,0 +1,163 @@\n+/* \n+Copyright 2021 WeAreFrank! \n+\n+Licensed under the Apache License, Version 2.0 (the \"License\"); \n+you may not use this file except in compliance with the License. \n+You may obtain a copy of the License at \n+\n+    http://www.apache.org/licenses/LICENSE-2.0 \n+\n+Unless required by applicable law or agreed to in writing, software \n+distributed under the License is distributed on an \"AS IS\" BASIS, \n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n+See the License for the specific language governing permissions and \n+limitations under the License. \n+*/\n+\n+package nl.nn.adapterframework.doc;\n+\n+import static nl.nn.adapterframework.doc.DocWriterNew.ATTRIBUTE_VALUES_TYPE;\n+import static nl.nn.adapterframework.doc.DocWriterNew.VARIABLE_REFERENCE;\n+import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.XML_SCHEMA_URI;\n+import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addAttributeWithType;\n+import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addSimpleType;\n+import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addUnion;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.apache.logging.log4j.Logger;\n+\n+import nl.nn.adapterframework.doc.model.AttributeType;\n+import nl.nn.adapterframework.doc.model.AttributeValues;\n+import nl.nn.adapterframework.doc.model.FrankAttribute;\n+import nl.nn.adapterframework.util.LogUtil;\n+import nl.nn.adapterframework.util.XmlBuilder;\n+\n+public enum AttributeTypeStrategy {\n+\tALLOW_PROPERTY_REF(new DelegateAllowPropertyRef()),\n+\tVALUES_ONLY(new DelegateValuesOnly());\n+\n+\tprivate static Logger log = LogUtil.getLogger(AttributeTypeStrategy.class);\n+\n+\tprivate static final String PATTERN_REF = \"\\\\$\\\\{[^\\\\}]+\\\\}\";\n+\tprivate static final String FRANK_BOOLEAN = \"frankBoolean\";\n+\tprivate static final String FRANK_INT = \"frankInt\";\n+\tprivate static final String PATTERN_FRANK_BOOLEAN = String.format(\"(true|false)|(%s)\", PATTERN_REF);\n+\tprivate static final String PATTERN_FRANK_INT = String.format(\"((\\\\+|-)?[0-9]+)|(%s)\", PATTERN_REF);\n+\n+\tprivate final Delegate delegate;\n+\n+\tprivate AttributeTypeStrategy(final Delegate delegate) {\n+\t\tthis.delegate = delegate;\n+\t}\n+\n+\tXmlBuilder addAttribute(XmlBuilder context, String name, AttributeType modelAttributeType) {\n+\t\treturn delegate.addAttribute(context, name, modelAttributeType);\n+\t}\n+\n+\tXmlBuilder addRestrictedAttribute(XmlBuilder context, FrankAttribute attribute) {\n+\t\treturn delegate.addRestrictedAttribute(context, attribute);\n+\t}\n+\n+\tList<XmlBuilder> createHelperTypes() {\n+\t\treturn delegate.createHelperTypes();\n+\t}\n+\n+\tprivate static abstract class Delegate {\n+\t\tabstract XmlBuilder addAttribute(XmlBuilder context, String name, AttributeType modelAttributeType);\n+\t\tabstract XmlBuilder addRestrictedAttribute(XmlBuilder context, FrankAttribute attribute);\n+\t\tabstract List<XmlBuilder> createHelperTypes();\n+\n+\t\tfinal XmlBuilder addAttribute(XmlBuilder context, String name, AttributeType modelAttributeType, String boolType, String intType) {\n+\t\t\tXmlBuilder attribute = new XmlBuilder(\"attribute\", \"xs\", XML_SCHEMA_URI);\n+\t\t\tattribute.addAttribute(\"name\", name);\n+\t\t\tString typeName = null;\n+\t\t\tswitch(modelAttributeType) {\n+\t\t\tcase BOOL:\n+\t\t\t\ttypeName = boolType;\n+\t\t\t\tbreak;\n+\t\t\tcase INT:\n+\t\t\t\ttypeName = intType;\n+\t\t\t\tbreak;\n+\t\t\tcase STRING:\n+\t\t\t\ttypeName = \"xs:string\";\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t\tattribute.addAttribute(\"type\", typeName);\n+\t\t\tcontext.addSubElement(attribute);\n+\t\t\treturn attribute;\t\t\t\t\t\t\n+\t\t}\n+\t}\n+\n+\tprivate static class DelegateAllowPropertyRef extends Delegate {\n+\t\t// This method ensures that references are still allowed for integer and boolean attributes.\n+\t\t// For example, an integer attribute can still be set like \"${someIdentifier}\".\n+\t\t// This method expects that methods DocWriterNewXmlUtils.createTypeFrankBoolean() and\n+\t\t// DocWriterNewXmlUtils.createTypeFrankInteger() are used to define the referenced XSD types.\n+\t\t@Override\n+\t\tXmlBuilder addAttribute(XmlBuilder context, String name, AttributeType modelAttributeType) {\n+\t\t\treturn addAttribute(context, name, modelAttributeType, FRANK_BOOLEAN, FRANK_INT);\n+\t\t}\n+\n+\t\t@Override\n+\t\tXmlBuilder addRestrictedAttribute(XmlBuilder context, FrankAttribute attribute) {\n+\t\t\tAttributeValues attributeValues = attribute.getAttributeValues();\n+\t\t\tXmlBuilder attributeBuilder = addAttributeWithType(context, attribute.getName());\n+\t\t\tXmlBuilder simpleType = addSimpleType(attributeBuilder);\n+\t\t\treturn addUnion(simpleType, attributeValues.getUniqueName(ATTRIBUTE_VALUES_TYPE), VARIABLE_REFERENCE);\n+\t\t}\n+\n+\t\t@Override\n+\t\tList<XmlBuilder> createHelperTypes() {\n+\t\t\tlog.trace(\"Adding helper types for boolean and integer attributes, allowing ${...} references\");\n+\t\t\tList<XmlBuilder> result = new ArrayList<>();\n+\t\t\tresult.add(createTypeFrankBoolean());\n+\t\t\tresult.add(createTypeFrankInteger());\n+\t\t\t// Helper type for allowing a variable reference instead of an enum value\n+\t\t\tresult.add(createTypeVariableReference(VARIABLE_REFERENCE));\n+\t\t\treturn result;\n+\t\t}\n+\n+\t\tprivate static XmlBuilder createTypeFrankBoolean() {\n+\t\t\treturn createStringRestriction(FRANK_BOOLEAN, PATTERN_FRANK_BOOLEAN);\n+\t\t}\n+\n+\t\tprivate static XmlBuilder createTypeFrankInteger() {\n+\t\t\treturn createStringRestriction(FRANK_INT, PATTERN_FRANK_INT);\n+\t\t}\n+\n+\t\tprivate static XmlBuilder createTypeVariableReference(String name) {\n+\t\t\treturn createStringRestriction(name, PATTERN_REF);\n+\t\t}\n+\n+\t\tprivate static XmlBuilder createStringRestriction(String name, String pattern) {\n+\t\t\tXmlBuilder simpleType = new XmlBuilder(\"simpleType\", \"xs\", XML_SCHEMA_URI);\n+\t\t\tsimpleType.addAttribute(\"name\", name);\n+\t\t\tXmlBuilder restriction = new XmlBuilder(\"restriction\", \"xs\", XML_SCHEMA_URI);\n+\t\t\tsimpleType.addSubElement(restriction);\n+\t\t\trestriction.addAttribute(\"base\", \"xs:string\");\n+\t\t\tXmlBuilder patternElement = new XmlBuilder(\"pattern\", \"xs\", XML_SCHEMA_URI);\n+\t\t\trestriction.addSubElement(patternElement);\n+\t\t\tpatternElement.addAttribute(\"value\", pattern);\n+\t\t\treturn simpleType;\n+\t\t}\n+\t}\n+\n+\tprivate static class DelegateValuesOnly extends Delegate {\n+\t\t@Override\n+\t\tXmlBuilder addAttribute(XmlBuilder context, String name, AttributeType modelAttributeType) {\n+\t\t\treturn addAttribute(context, name, modelAttributeType, \"xs:boolean\", \"xs:integer\");\n+\t\t}\n+\n+\t\t@Override\n+\t\tXmlBuilder addRestrictedAttribute(XmlBuilder context, FrankAttribute attribute) {\n+\t\t\treturn DocWriterNewXmlUtils.addAttribute(context, attribute.getName(), attribute.getAttributeValues().getUniqueName(ATTRIBUTE_VALUES_TYPE));\n+\t\t}\n+\n+\t\t@Override\n+\t\tList<XmlBuilder> createHelperTypes() {\n+\t\t\treturn new ArrayList<>();\n+\t\t}\n+\t}\n+}"
  },
  {
    "sha": "7484235a547b14cc6317de90802c036307968c5c",
    "filename": "core/src/main/java/nl/nn/adapterframework/doc/DocWriterNew.java",
    "status": "modified",
    "additions": 15,
    "deletions": 6,
    "changes": 21,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/DocWriterNew.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/DocWriterNew.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/doc/DocWriterNew.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -16,8 +16,6 @@\n \n package nl.nn.adapterframework.doc;\n \n-import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addEnumeration;\n-import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addRestriction;\n import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addAnyAttribute;\n import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addAttribute;\n import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addChoice;\n@@ -26,7 +24,9 @@\n import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addDocumentation;\n import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addElementRef;\n import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addElementWithType;\n+import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addEnumeration;\n import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addExtension;\n+import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addRestriction;\n import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addSequence;\n import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.createAttributeGroup;\n import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.createComplexType;\n@@ -290,6 +290,11 @@\n  *     <td><code>ElementGroupBase</code></td>\n  *     <td>Lists all choices that are allowed for a child tag, excluding the generic element option.</td>\n  *   </tr>\n+ *   <tr>\n+ *     <td><code>xs:simpleType</code></td>\n+ *     <td><code>AttributeValuesType</code></td>\n+ *     <td>For attributes constrained by a Java enum, list all allowed values</td>\n+ *   </tr>\n  * </table>\n  *\n  * @author martijn\n@@ -307,7 +312,8 @@\n \tprivate static final String CONFIGURATION = \"nl.nn.adapterframework.configuration.Configuration\";\n \tprivate static final String ELEMENT_ROLE = \"elementRole\";\n \tprivate static final String ELEMENT_GROUP_BASE = \"ElementGroupBase\";\n-\tprivate static final String ATTRIBUTE_VALUES_TYPE = \"AttributeValuesType\";\n+\tstatic final String ATTRIBUTE_VALUES_TYPE = \"AttributeValuesType\";\n+\tstatic final String VARIABLE_REFERENCE = \"variableRef\";\n \n \tprivate FrankDocModel model;\n \tprivate String startClassName;\n@@ -318,9 +324,11 @@\n \tprivate Set<ElementRole.Key> idsCreatedElementGroups = new HashSet<>();\n \tprivate ElementGroupManager elementGroupManager;\n \tprivate Set<String> definedAttributeValuesInstances = new HashSet<>();\n+\tprivate AttributeTypeStrategy attributeTypeStrategy;\n \n-\tpublic DocWriterNew(FrankDocModel model) {\n+\tpublic DocWriterNew(FrankDocModel model, AttributeTypeStrategy attributeTypeStrategy) {\n \t\tthis.model = model;\n+\t\tthis.attributeTypeStrategy = attributeTypeStrategy;\n \t}\n \n \tpublic void init(XsdVersion versionTag) {\n@@ -349,6 +357,7 @@ public String getSchema() {\n \t\t// element options that do not correspond to a ConfigChildSet, then\n \t\t// they are finished by this call.\n \t\tfinishLeftoverGenericOptionsAttributes();\n+\t\txsdComplexItems.addAll(attributeTypeStrategy.createHelperTypes());\n \t\tlog.trace(\"Have the XmlBuilder objects. Going to add them in the right order to the schema root builder\");\n \t\txsdElements.forEach(xsdRoot::addSubElement);\n \t\txsdComplexItems.forEach(xsdRoot::addSubElement);\n@@ -934,7 +943,7 @@ private void addAttributeList(XmlBuilder context, List<FrankAttribute> frankAttr\n \t\t\t\t// The default value in the model is a *description* of the default value.\n \t\t\t\t// Therefore, it should be added to the description in the xs:attribute.\n \t\t\t\t// The \"default\" attribute of the xs:attribute should not be set.\n-\t\t\t\tattribute = addAttribute(context, frankAttribute.getName(), DEFAULT, null, OPTIONAL);\n+\t\t\t\tattribute = attributeTypeStrategy.addAttribute(context, frankAttribute.getName(), frankAttribute.getAttributeType());\n \t\t\t} else {\n \t\t\t\tattribute = addRestrictedAttribute(context, frankAttribute);\n \t\t\t}\n@@ -946,8 +955,8 @@ private void addAttributeList(XmlBuilder context, List<FrankAttribute> frankAttr\n \t}\n \n \tprivate XmlBuilder addRestrictedAttribute(XmlBuilder context, FrankAttribute attribute) {\n+\t\tXmlBuilder result = attributeTypeStrategy.addRestrictedAttribute(context, attribute);\n \t\tAttributeValues attributeValues = attribute.getAttributeValues();\n-\t\tXmlBuilder result = addAttribute(context, attribute.getName(), attributeValues.getUniqueName(ATTRIBUTE_VALUES_TYPE));\n \t\tif(! definedAttributeValuesInstances.contains(attributeValues.getFullName())) {\n \t\t\tdefinedAttributeValuesInstances.add(attributeValues.getFullName());\n \t\t\taddAttributeValuesType(attributeValues);"
  },
  {
    "sha": "2c903f42f8d56382ce15844c5945eb9b128ea7c2",
    "filename": "core/src/main/java/nl/nn/adapterframework/doc/DocWriterNewXmlUtils.java",
    "status": "modified",
    "additions": 26,
    "deletions": 1,
    "changes": 27,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/DocWriterNewXmlUtils.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/DocWriterNewXmlUtils.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/doc/DocWriterNewXmlUtils.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -16,6 +16,9 @@\n \n package nl.nn.adapterframework.doc;\n \n+import java.util.Arrays;\n+import java.util.stream.Collectors;\n+\n import org.apache.logging.log4j.Logger;\n \n import lombok.Getter;\n@@ -25,7 +28,7 @@\n class DocWriterNewXmlUtils {\n \tprivate static Logger log = LogUtil.getLogger(DocWriterNewXmlUtils.class);\n \n-\tprivate static final String XML_SCHEMA_URI = \"http://www.w3.org/2001/XMLSchema\";\n+\tstatic final String XML_SCHEMA_URI = \"http://www.w3.org/2001/XMLSchema\";\n \n \tprivate DocWriterNewXmlUtils() {\n \t}\n@@ -104,6 +107,13 @@ static XmlBuilder createComplexType(String name) {\n \t\treturn complexType;\t\t\n \t}\n \n+\tstatic XmlBuilder addSimpleType(XmlBuilder schema) {\n+\t\tXmlBuilder complexType;\n+\t\tcomplexType = new XmlBuilder(\"simpleType\", \"xs\", XML_SCHEMA_URI);\n+\t\tschema.addSubElement(complexType);\n+\t\treturn complexType;\n+\t}\n+\n \tstatic XmlBuilder createSimpleType(String name) {\n \t\tXmlBuilder simpleType = new XmlBuilder(\"simpleType\", \"xs\", XML_SCHEMA_URI);\n \t\tsimpleType.addAttribute(\"name\", name);\n@@ -221,6 +231,13 @@ static XmlBuilder addAnyAttribute(XmlBuilder context) {\n \t\treturn attribute;\n \t}\n \n+\tstatic XmlBuilder addAttributeWithType(XmlBuilder context, String name) {\n+\t\tXmlBuilder attribute = new XmlBuilder(\"attribute\", \"xs\", XML_SCHEMA_URI);\n+\t\tattribute.addAttribute(\"name\", name);\n+\t\tcontext.addSubElement(attribute);\n+\t\treturn attribute;\n+\t}\n+\n \tstatic void addDocumentation(XmlBuilder context, String description) {\n \t\tXmlBuilder annotation = new XmlBuilder(\"annotation\", \"xs\", XML_SCHEMA_URI);\n \t\tcontext.addSubElement(annotation);\n@@ -304,4 +321,12 @@ static XmlBuilder addEnumeration(XmlBuilder context, String item) {\n \t\tenumeration.addAttribute(\"value\", item);\n \t\treturn enumeration;\n \t}\n+\n+\tstatic XmlBuilder addUnion(XmlBuilder context, String ...combinedTypes) {\n+\t\tXmlBuilder union = new XmlBuilder(\"union\", \"xs\", XML_SCHEMA_URI);\n+\t\tcontext.addSubElement(union);\n+\t\tString memberTypes = Arrays.asList(combinedTypes).stream().collect(Collectors.joining(\" \"));\n+\t\tunion.addAttribute(\"memberTypes\", memberTypes);\n+\t\treturn union;\n+\t}\n }"
  },
  {
    "sha": "7cbd4c803b52c93d2ab3746ed350474b19d4d219",
    "filename": "core/src/main/java/nl/nn/adapterframework/doc/FrankDocJsonFactory.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/FrankDocJsonFactory.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/FrankDocJsonFactory.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/doc/FrankDocJsonFactory.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -133,6 +133,7 @@ private JsonObject getAttribute(FrankAttribute frankAttribute) throws JsonExcept\n \t\tresult.add(\"describer\", frankAttribute.getDescribingElement().getFullName());\n \t\taddIfNotNull(result, \"description\", frankAttribute.getDescription());\n \t\taddIfNotNull(result, \"default\", frankAttribute.getDefaultValue());\n+\t\tresult.add(\"type\", frankAttribute.getAttributeType().name().toLowerCase());\n \t\tif(frankAttribute.getAttributeValues() != null) {\n \t\t\tresult.add(\"values\", getValues(frankAttribute.getAttributeValues()));\n \t\t}"
  },
  {
    "sha": "1ed8cdb8358cf5623c61bde4d7426fc9ba268f37",
    "filename": "core/src/main/java/nl/nn/adapterframework/doc/InfoBuilderSource.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/InfoBuilderSource.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/InfoBuilderSource.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/doc/InfoBuilderSource.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -70,7 +70,14 @@\n \n \tprivate static final Set<String> JAVA_BOXED = new HashSet<String>(Arrays.asList(new String[] {\n \t\t\tJAVA_STRING, JAVA_INTEGER, JAVA_BOOLEAN, JAVA_LONG, JAVA_BYTE, JAVA_SHORT}));\n-\t\n+\n+\t// All types that are accepted by method isGetterOrSetter() \n+\tstatic final Set<String> ALLOWED_SETTER_TYPES = new HashSet<>();\n+\tstatic {\n+\t\tALLOWED_SETTER_TYPES.addAll(primitiveToBoxed.keySet());\n+\t\tALLOWED_SETTER_TYPES.addAll(JAVA_BOXED);\n+\t}\n+\n \tprivate static Logger log = LogUtil.getLogger(InfoBuilderSource.class);\n \n \tstatic Map<String, String> ignores = new HashMap<String, String>();"
  },
  {
    "sha": "b9432c737a9b71653ab184bf6c9732ce9f6db8c7",
    "filename": "core/src/main/java/nl/nn/adapterframework/doc/Utils.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/Utils.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/Utils.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/doc/Utils.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -23,7 +23,17 @@\n \n import nl.nn.adapterframework.doc.objects.SpringBean;\n \n+/**\n+ * Utility methods for the Frank!Doc. Many of these delegate to {@link nl.nn.adapterframework.doc.InfoBuilderSource}.\n+ * Eventually, the implementations should be moved from {@link nl.nn.adapterframework.doc.InfoBuilderSource} to\n+ * this class. This cannot be done now because the Frank!Doc is being updated. We still have to support the old\n+ * Frank!Doc, which includes code from {@link nl.nn.adapterframework.doc.InfoBuilderSource}.\n+ * @author martijn\n+ *\n+ */\n public final class Utils {\n+\tpublic static final Set<String> ALLOWED_SETTER_TYPES = InfoBuilderSource.ALLOWED_SETTER_TYPES;\n+\n \tprivate Utils() {\n \t}\n "
  },
  {
    "sha": "9a55a37bb55b1b76e81014f33483b2c1d059d936",
    "filename": "core/src/main/java/nl/nn/adapterframework/doc/model/AttributeType.java",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/model/AttributeType.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/model/AttributeType.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/doc/model/AttributeType.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -0,0 +1,53 @@\n+/* \n+Copyright 2021 WeAreFrank! \n+\n+Licensed under the Apache License, Version 2.0 (the \"License\"); \n+you may not use this file except in compliance with the License. \n+You may obtain a copy of the License at \n+\n+    http://www.apache.org/licenses/LICENSE-2.0 \n+\n+Unless required by applicable law or agreed to in writing, software \n+distributed under the License is distributed on an \"AS IS\" BASIS, \n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n+See the License for the specific language governing permissions and \n+limitations under the License. \n+*/\n+\n+package nl.nn.adapterframework.doc.model;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+public enum AttributeType {\n+\tSTRING, BOOL, INT;\n+\n+\tprivate static final Map<String, AttributeType> JAVA_TO_TYPE = new HashMap<>();\n+\tstatic {\n+\t\tJAVA_TO_TYPE.put(\"int\", INT);\n+\t\tJAVA_TO_TYPE.put(\"boolean\", BOOL);\n+\t\tJAVA_TO_TYPE.put(\"long\", INT);\n+\t\tJAVA_TO_TYPE.put(\"byte\", INT);\n+\t\tJAVA_TO_TYPE.put(\"short\", INT);\n+\t\tJAVA_TO_TYPE.put(\"java.lang.String\", STRING);\n+\t\tJAVA_TO_TYPE.put(\"java.lang.Integer\", INT);\n+\t\tJAVA_TO_TYPE.put(\"java.lang.Boolean\", BOOL);\n+\t\tJAVA_TO_TYPE.put(\"java.lang.Long\", INT);\n+\t\tJAVA_TO_TYPE.put(\"java.lang.Byte\", INT);\n+\t\tJAVA_TO_TYPE.put(\"java.lang.Short\", INT);\n+\t}\n+\n+\t/**\n+\t * @throws IllegalArgumentException when the provided Java type is not String, boolean or int or its boxed equivalent.\n+\t */\n+\tstatic AttributeType fromJavaType(String javaType) {\n+\t\tAttributeType result = JAVA_TO_TYPE.get(javaType);\n+\t\tif(result == null) {\n+\t\t\tthrow new IllegalArgumentException(String.format(\"Java type is not one of %s: %s\",\n+\t\t\t\t\tArrays.asList(AttributeType.values()).stream().map(Enum::name).collect(Collectors.joining(\", \")), javaType));\n+\t\t}\n+\t\treturn result;\n+\t}\n+}"
  },
  {
    "sha": "fbe4b2acd8707e06228832c1688862848c7a321c",
    "filename": "core/src/main/java/nl/nn/adapterframework/doc/model/FrankAttribute.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/model/FrankAttribute.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/model/FrankAttribute.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/doc/model/FrankAttribute.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -39,8 +39,11 @@ public String toString() {\n \n \tprivate @Getter String name;\n \tprivate @Getter @Setter FrankElement describingElement;\n+\n+\tprivate @Getter @Setter AttributeType attributeType;\n+\n \t/**\n-\t * Null if there is no restriction to the allowed attribute values.\n+\t * Null if there is no restriction to the allowed attribute values. Should only be set if attributeType == {@link AttributeType#STRING}.\n \t */\n \tprivate @Getter @Setter AttributeValues attributeValues;\n "
  },
  {
    "sha": "6fb6d24157bdf46e130708eed651f0fb853a365b",
    "filename": "core/src/main/java/nl/nn/adapterframework/doc/model/FrankDocModel.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/model/FrankDocModel.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/model/FrankDocModel.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/doc/model/FrankDocModel.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -198,6 +198,7 @@ public FrankElement findFrankElement(String fullName) {\n \t\t\t\tcheckForTypeConflict(method, getterAttributes.get(attributeName), attributeOwner);\n \t\t\t}\n \t\t\tFrankAttribute attribute = new FrankAttribute(attributeName, attributeOwner);\n+\t\t\tattribute.setAttributeType(AttributeType.fromJavaType(method.getParameterTypes()[0].getName()));\n \t\t\tdocumentAttribute(attribute, method, attributeOwner);\n \t\t\tif(enumGettersByAttributeName.containsKey(attributeName)) {\n \t\t\t\t@SuppressWarnings(\"unchecked\")"
  },
  {
    "sha": "e6f1ec507eee5c136f493cad8dff8004aff5dd37",
    "filename": "core/src/main/java/nl/nn/adapterframework/doc/model/package-info.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/model/package-info.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/main/java/nl/nn/adapterframework/doc/model/package-info.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/doc/model/package-info.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -61,7 +61,8 @@\n  * the parent tag and the {@link nl.nn.adapterframework.doc.model.ElementRole} for a set of allowed child tags.\n  * <p>\n  * Tags in Frank configs can have attributes, which are modeled by class {@link nl.nn.adapterframework.doc.model.FrankAttribute}.\n- * Attributes can have their values restricted by a Java enum type. In that case, the list of allowed values is stored in a\n+ * Attributes have a type that is modeled by {@link nl.nn.adapterframework.doc.model.AttributeType} (not in diagram).\n+ * String attributes can have their values restricted by a Java enum type. In that case, the list of allowed values is stored in a\n  * {@link nl.nn.adapterframework.doc.model.AttributeValues}, which can be shared by multiple {@link nl.nn.adapterframework.doc.model.FrankAttribute}. \n  * The tag in which the attribute occurs is modeled by its {@link nl.nn.adapterframework.doc.model.FrankElement}, see relation\n  * \"attribute of\". The documentation of an attribute may appear in a Java class that differs"
  },
  {
    "sha": "1b803654984c7b30bf61de869d92a7bf7d8defb4",
    "filename": "core/src/test/java/nl/nn/adapterframework/doc/AttributeTypeStrategyTest.java",
    "status": "added",
    "additions": 105,
    "deletions": 0,
    "changes": 105,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/AttributeTypeStrategyTest.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/AttributeTypeStrategyTest.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/java/nl/nn/adapterframework/doc/AttributeTypeStrategyTest.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -0,0 +1,105 @@\n+package nl.nn.adapterframework.doc;\n+\n+import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addComplexType;\n+import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.addElementWithType;\n+import static nl.nn.adapterframework.doc.DocWriterNewXmlUtils.getXmlSchema;\n+\n+import java.io.StringReader;\n+\n+import javax.xml.XMLConstants;\n+import javax.xml.transform.sax.SAXSource;\n+import javax.xml.validation.Schema;\n+import javax.xml.validation.SchemaFactory;\n+import javax.xml.validation.Validator;\n+\n+import org.junit.Test;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+import nl.nn.adapterframework.doc.model.AttributeType;\n+import nl.nn.adapterframework.util.XmlBuilder;\n+\n+public class AttributeTypeStrategyTest {\n+\tprivate String schemaString = getXsd();\n+\n+\t@Test\n+\tpublic void whenNormalIntegerSuppliedThenAccepted() throws Exception {\n+\t\tvalidate(getIntTestXml(\"1\"));\n+\t}\n+\n+\t@Test\n+\tpublic void whenIntegerWithPlusSuppliedThenAccepted() throws Exception {\n+\t\tvalidate(getIntTestXml(\"+1\"));\n+\t}\n+\n+\t@Test\n+\tpublic void whenNegativeIntegerSuppliedThenAccepted() throws Exception {\n+\t\tvalidate(getIntTestXml(\"-12\"));\n+\t}\n+\n+\t@Test\n+\tpublic void whenRefSuppliedAsIntegerThenAccepted() throws Exception {\n+\t\tvalidate(getIntTestXml(\"${myVariable}\"));\n+\t}\n+\n+\t@Test(expected = SAXException.class)\n+\tpublic void whenNonIntegerSuppliedThenRejected() throws Exception {\n+\t\tvalidate(getIntTestXml(\"aString\"));\n+\t}\n+\n+\t@Test(expected = SAXException.class)\n+\tpublic void whenInvalidRefSuppliedAsIntegerThenRejected() throws Exception {\n+\t\tvalidate(getIntTestXml(\"${myVariable\"));\n+\t}\n+\n+\t@Test\n+\tpublic void whenTrueSuppliedAsBooleanThenAccepted() throws Exception {\n+\t\tvalidate(getBoolTestXml(\"true\"));\n+\t}\n+\n+\t@Test\n+\tpublic void whenFalseSuppliedAsBooleanThenAccepted() throws Exception {\n+\t\tvalidate(getBoolTestXml(\"false\"));\n+\t}\n+\n+\t@Test\n+\tpublic void whenRefSuppliedAsBooleanThenAccepted() throws Exception {\n+\t\tvalidate(getBoolTestXml(\"${myVariable}\"));\n+\t}\n+\n+\t@Test(expected = SAXException.class)\n+\tpublic void whenStringSuppliedAsBooleanThenRejected() throws Exception {\n+\t\tvalidate(getBoolTestXml(\"aString\"));\n+\t}\n+\n+\t@Test(expected = SAXException.class)\n+\tpublic void whenInvalidRefSuppliedAsBooleanThenRejected() throws Exception {\n+\t\tvalidate(getBoolTestXml(\"${myVariable\"));\n+\t}\n+\n+\tprivate static String getXsd() {\n+\t\tXmlBuilder schema = getXmlSchema();\n+\t\tXmlBuilder element = addElementWithType(schema, \"myElement\");\n+\t\tXmlBuilder complexType = addComplexType(element);\n+\t\tAttributeTypeStrategy.ALLOW_PROPERTY_REF.addAttribute(complexType, \"boolAttr\", AttributeType.BOOL);\n+\t\tAttributeTypeStrategy.ALLOW_PROPERTY_REF.addAttribute(complexType, \"intAttr\", AttributeType.INT);\n+\t\tAttributeTypeStrategy.ALLOW_PROPERTY_REF.createHelperTypes().forEach(h -> schema.addSubElement(h));\n+\t\treturn schema.toXML(true);\n+\t}\n+\n+\tprivate static String getBoolTestXml(String value) {\n+\t\treturn String.format(\"<myElement boolAttr=\\\"%s\\\"/>\", value);\n+\t}\n+\n+\tprivate static String getIntTestXml(String value) {\n+\t\treturn String.format(\"<myElement intAttr=\\\"%s\\\"/>\", value);\n+\t}\n+\n+\tprivate void validate(String testXml) throws Exception {\n+\t\tSchemaFactory schemaFactory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\n+\t\tSchema schema = schemaFactory.newSchema(new SAXSource(new InputSource(new StringReader(schemaString))));\n+\t\tValidator validator = schema.newValidator();\n+\t\tSAXSource source = new SAXSource(new InputSource(new StringReader(testXml)));\n+\t\tvalidator.validate(source);\n+\t}\n+}"
  },
  {
    "sha": "af41a1b24e91ee9e4aa028b1546dd3c98318251c",
    "filename": "core/src/test/java/nl/nn/adapterframework/doc/DocWriterNewAndJsonGenerationExamplesTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/DocWriterNewAndJsonGenerationExamplesTest.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/DocWriterNewAndJsonGenerationExamplesTest.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/java/nl/nn/adapterframework/doc/DocWriterNewAndJsonGenerationExamplesTest.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -57,7 +57,7 @@\n \t@Test\n \tpublic void testXsd() throws Exception {\n \t\tFrankDocModel model = createModel();\n-\t\tDocWriterNew docWriter = new DocWriterNew(model);\n+\t\tDocWriterNew docWriter = new DocWriterNew(model, AttributeTypeStrategy.ALLOW_PROPERTY_REF);\n \t\tdocWriter.init(startClassName, XsdVersion.STRICT);\n \t\tString actualXsd = docWriter.getSchema();\n \t\tSystem.out.println(actualXsd);"
  },
  {
    "sha": "b84afdcc4c7cd858a7bbae5a7f09c741dde3d0e1",
    "filename": "core/src/test/java/nl/nn/adapterframework/doc/DocWriterNewIntegrationTest.java",
    "status": "modified",
    "additions": 8,
    "deletions": 7,
    "changes": 15,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/DocWriterNewIntegrationTest.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/DocWriterNewIntegrationTest.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/java/nl/nn/adapterframework/doc/DocWriterNewIntegrationTest.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -49,20 +49,20 @@\n \t@Test\n \tpublic void testStrict() throws Exception {\n \t\tassumeTrue(TestAssertions.isTestRunningOnCI());\n-\t\tString schemaFileName = generateXsd(XsdVersion.STRICT);\n+\t\tString schemaFileName = generateXsd(XsdVersion.STRICT, AttributeTypeStrategy.ALLOW_PROPERTY_REF);\n \t\tvalidate(schemaFileName, TEST_CONFIGURATION_FILE);\n \t}\n \n \t@Test\n \tpublic void testCompatibility() throws Exception {\n \t\tassumeTrue(TestAssertions.isTestRunningOnCI());\n-\t\tString schemaFileName = generateXsd(XsdVersion.COMPATIBILITY);\n+\t\tString schemaFileName = generateXsd(XsdVersion.COMPATIBILITY, AttributeTypeStrategy.VALUES_ONLY);\n \t\tvalidate(schemaFileName, TEST_CONFIGURATION_FILE);\n \t}\n \n-\tString generateXsd(XsdVersion version) throws IOException {\n+\tString generateXsd(XsdVersion version, AttributeTypeStrategy attributeTypeStrategy) throws IOException {\n \t\tFrankDocModel model = FrankDocModel.populate();\n-\t\tDocWriterNew docWriter = new DocWriterNew(model);\n+\t\tDocWriterNew docWriter = new DocWriterNew(model, attributeTypeStrategy);\n \t\tdocWriter.init(version);\n \t\tString xsdString = docWriter.getSchema();\n \t\tFile output = new File(\"FrankConfig-\" + docWriter.getOutputFileName());\n@@ -90,13 +90,14 @@ private void validate(String schemaFileName, String testConfigurationFileName) t\n \t@Test\n \tpublic void testExotic() throws Exception {\n \t\tString outputFileName = generateXsd(\n-\t\t\t\tXsdVersion.STRICT, \"/doc/exotic-digester-rules.xml\", \"nl.nn.adapterframework.doc.testtarget.exotic.Master\", \"exotic.xsd\");\n+\t\t\t\tXsdVersion.STRICT, \"/doc/exotic-digester-rules.xml\", \"nl.nn.adapterframework.doc.testtarget.exotic.Master\", \"exotic.xsd\", AttributeTypeStrategy.ALLOW_PROPERTY_REF);\n \t\tvalidate(outputFileName, \"testExotic.xml\");\n \t}\n \n-\tprivate String generateXsd(XsdVersion version, final String digesterRulesFileName, final String rootClassName, String outputSchemaFileName) throws IOException {\n+\tprivate String generateXsd(\n+\t\t\tXsdVersion version, final String digesterRulesFileName, final String rootClassName, String outputSchemaFileName, AttributeTypeStrategy attributeTypeStrategy) throws IOException {\n \t\tFrankDocModel model = FrankDocModel.populate(digesterRulesFileName, rootClassName);\n-\t\tDocWriterNew docWriter = new DocWriterNew(model);\n+\t\tDocWriterNew docWriter = new DocWriterNew(model, attributeTypeStrategy);\n \t\tdocWriter.init(rootClassName, version);\n \t\tString xsdString = docWriter.getSchema();\n \t\tFile output = new File(outputSchemaFileName);"
  },
  {
    "sha": "6d3d01eb8794992ddaeb33bfbab78b1e03eee572",
    "filename": "core/src/test/java/nl/nn/adapterframework/doc/model/AttributeTypeTest.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/model/AttributeTypeTest.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/model/AttributeTypeTest.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/java/nl/nn/adapterframework/doc/model/AttributeTypeTest.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -0,0 +1,27 @@\n+package nl.nn.adapterframework.doc.model;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.junit.Test;\n+\n+import nl.nn.adapterframework.doc.Utils;\n+\n+public class AttributeTypeTest {\n+\t@Test\n+\tpublic void everyPrimitiveTypeOrBoxedHasAnAttributeType() {\n+\t\tUtils.ALLOWED_SETTER_TYPES.forEach(t -> AttributeType.fromJavaType(t));\n+\t}\n+\n+\t@Test\n+\tpublic void everyAttributeTypeHasJavaType() {\n+\t\tfinal Set<AttributeType> usedAttributeTypes = new HashSet<>();\n+\t\tUtils.ALLOWED_SETTER_TYPES.forEach(t -> usedAttributeTypes.add(AttributeType.fromJavaType(t)));\n+\t\tSet<AttributeType> unusedAttributeTypes = new HashSet<>(Arrays.asList(AttributeType.values()));\n+\t\tunusedAttributeTypes.removeAll(usedAttributeTypes);\n+\t\tassertTrue(unusedAttributeTypes.isEmpty());\n+\t}\n+}"
  },
  {
    "sha": "2d2e4083324ad87217c2c521ff8fff72fdd484ea",
    "filename": "core/src/test/java/nl/nn/adapterframework/doc/model/FrankDocModelAttributeTypeTest.java",
    "status": "renamed",
    "additions": 10,
    "deletions": 4,
    "changes": 14,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/model/FrankDocModelAttributeTypeTest.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/model/FrankDocModelAttributeTypeTest.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/java/nl/nn/adapterframework/doc/model/FrankDocModelAttributeTypeTest.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -12,15 +12,15 @@\n \n import nl.nn.adapterframework.doc.Utils;\n \n-public class FrankDocModelEnumAttributeTest {\n+public class FrankDocModelAttributeTypeTest {\n \tprivate static final String CHILD = \"nl.nn.adapterframework.doc.testtarget.enumattr.Child\";\n \tprivate static final String MY_ENUM = \"nl.nn.adapterframework.doc.testtarget.enumattr.MyEnum\";\n \n \t@Test\n \tpublic void testGetEnumGettersByAttributeName() {\n \t\tMap<String, Method> actual = FrankDocModel.getEnumGettersByAttributeName(Utils.getClass(CHILD));\n \t\tassertTrue(actual.containsKey(\"parentAttribute\"));\n-\t\tassertTrue(actual.containsKey(\"childAttribute\"));\n+\t\tassertTrue(actual.containsKey(\"childStringAttribute\"));\n \t\tassertEquals(2, actual.size());\n \t}\n \n@@ -29,11 +29,17 @@ public void testPopulate() {\n \t\tFrankDocModel model = FrankDocModel.populate(\"doc/empty-digester-rules.xml\", CHILD);\n \t\tFrankElement child = model.findFrankElement(CHILD);\n \t\tassertNotNull(child);\n+\t\t// Test the attribute with a value list, which is of type STRING.\n \t\tAttributeValues myEnum = model.findAttributeValues(MY_ENUM);\n \t\tassertEquals(MY_ENUM, myEnum.getFullName());\n \t\tassertArrayEquals(new String[] {\"ONE\", \"TWO\", \"THREE\"}, myEnum.getValues().toArray());\n-\t\tFrankAttribute childAttribute = child.getAttributes(ElementChild.ALL).get(0);\n-\t\tassertEquals(\"childAttribute\", childAttribute.getName());\n+\t\t// By fixing the list index like this, we test that the attributes are sorted correctly.\n+\t\tFrankAttribute childAttribute = child.getAttributes(ElementChild.ALL).get(1);\n+\t\tassertEquals(\"childStringAttribute\", childAttribute.getName());\n \t\tassertEquals(myEnum, childAttribute.getAttributeValues());\n+\t\tassertEquals(AttributeType.STRING, childAttribute.getAttributeType());\n+\t\t// Test the int attribute\n+\t\tchildAttribute = child.getAttributes(ElementChild.ALL).get(0);\n+\t\tassertEquals(AttributeType.INT, childAttribute.getAttributeType());\n \t}\n }",
    "previous_filename": "core/src/test/java/nl/nn/adapterframework/doc/model/FrankDocModelEnumAttributeTest.java"
  },
  {
    "sha": "64bfe80a756978bff5717396754ca3745e82f0cc",
    "filename": "core/src/test/java/nl/nn/adapterframework/doc/testtarget/enumattr/Child.java",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/testtarget/enumattr/Child.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/testtarget/enumattr/Child.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/java/nl/nn/adapterframework/doc/testtarget/enumattr/Child.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -1,13 +1,17 @@\n package nl.nn.adapterframework.doc.testtarget.enumattr;\n \n public class Child extends Parent {\n-\tpublic void setChildAttribute(String value) {\n+\tpublic void setChildStringAttribute(String value) {\n \t}\n \n-\tpublic MyEnum getChildAttributeEnum() {\n+\tpublic MyEnum getChildStringAttributeEnum() {\n \t\treturn MyEnum.TWO;\n \t}\n \n+\t// Attributes are sorted alphabetically by name. This one should be included before attribute childString\n+\tpublic void setChildIntAttribute(int value) {\n+\t}\n+\n \tpublic String getNotForAttributeBecauseNoEnumReturnedEnum() {\n \t\treturn null;\n \t}"
  },
  {
    "sha": "e1e18cd61ad5678c75f85528cae6481deb36fde5",
    "filename": "core/src/test/java/nl/nn/adapterframework/doc/testtarget/examples/simple/NotDescribedPossibleIChild.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/testtarget/examples/simple/NotDescribedPossibleIChild.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/java/nl/nn/adapterframework/doc/testtarget/examples/simple/NotDescribedPossibleIChild.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/java/nl/nn/adapterframework/doc/testtarget/examples/simple/NotDescribedPossibleIChild.java?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -10,4 +10,7 @@ public void setFirstAttribute(String value) {\n \tpublic MyEnum getFirstAttributeEnum() {\n \t\treturn MyEnum.ONE;\n \t}\n+\n+\tpublic void setThirdAttribute(int value) {\n+\t}\n }"
  },
  {
    "sha": "113bed3631c4089719a7aaa0418f0039eeafc3b4",
    "filename": "core/src/test/resources/doc/examplesExpected/sequence.json",
    "status": "modified",
    "additions": 8,
    "deletions": 4,
    "changes": 12,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/resources/doc/examplesExpected/sequence.json",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/resources/doc/examplesExpected/sequence.json",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/resources/doc/examplesExpected/sequence.json?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -33,25 +33,29 @@\n           \"name\": \"clemens\",\n           \"deprecated\": false,\n           \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.sequence.Master\",\n-          \"description\": \"\"\n+          \"description\": \"\",\n+          \"type\": \"string\"\n         },\n         {\n           \"name\": \"arnold\",\n           \"deprecated\": false,\n           \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.sequence.Master\",\n-          \"description\": \"\"\n+          \"description\": \"\",\n+          \"type\": \"string\"\n         },\n         {\n           \"name\": \"dennis\",\n           \"deprecated\": false,\n           \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.sequence.Master\",\n-          \"description\": \"\"\n+          \"description\": \"\",\n+          \"type\": \"string\"\n         },\n         {\n           \"name\": \"bernhard\",\n           \"deprecated\": false,\n           \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.sequence.Master\",\n-          \"description\": \"\"\n+          \"description\": \"\",\n+          \"type\": \"string\"\n         }\n       ],\n       \"children\": ["
  },
  {
    "sha": "41a5fa687a9852a1a3312e41123bcdec74239efe",
    "filename": "core/src/test/resources/doc/examplesExpected/sequence.xsd",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/resources/doc/examplesExpected/sequence.xsd",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/resources/doc/examplesExpected/sequence.xsd",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/resources/doc/examplesExpected/sequence.xsd?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -76,4 +76,19 @@\n   <xs:group name=\"RoleDeltaElementGroupBase\">\n     <xs:choice />\n   </xs:group>\n+  <xs:simpleType name=\"frankBoolean\">\n+    <xs:restriction base=\"xs:string\">\n+      <xs:pattern value=\"(true|false)|(\\$\\{[^\\}]+\\})\" />\n+    </xs:restriction>\n+  </xs:simpleType>\n+  <xs:simpleType name=\"frankInt\">\n+    <xs:restriction base=\"xs:string\">\n+      <xs:pattern value=\"((\\+|-)?[0-9]+)|(\\$\\{[^\\}]+\\})\" />\n+    </xs:restriction>\n+  </xs:simpleType>\n+  <xs:simpleType name=\"variableRef\">\n+    <xs:restriction base=\"xs:string\">\n+      <xs:pattern value=\"\\$\\{[^\\}]+\\}\" />\n+    </xs:restriction>\n+  </xs:simpleType>\n </xs:schema>"
  },
  {
    "sha": "dc111caee68c2da59ec8d1dba415cec4bcac8161",
    "filename": "core/src/test/resources/doc/examplesExpected/simple.json",
    "status": "modified",
    "additions": 17,
    "deletions": 5,
    "changes": 22,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/resources/doc/examplesExpected/simple.json",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/resources/doc/examplesExpected/simple.json",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/resources/doc/examplesExpected/simple.json?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -24,7 +24,8 @@\n       \"attributes\": [{\n         \"name\": \"abstractParentOfStartAttribute\",\n         \"deprecated\": false,\n-        \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.simple.AbstractParentOfStart\"\n+        \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.simple.AbstractParentOfStart\",\n+        \"type\": \"string\"\n       }],\n       \"children\": []\n     },\n@@ -40,13 +41,15 @@\n           \"deprecated\": false,\n           \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.simple.DescribedPossibleIChild\",\n           \"description\": \"First attribute of DescribedPossibleIChild.\",\n-          \"default\": \"this default value\"\n+          \"default\": \"this default value\",\n+          \"type\": \"string\"\n         },\n         {\n           \"name\": \"secondAttribute\",\n           \"deprecated\": false,\n           \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.simple.DescribedPossibleIChild\",\n-          \"description\": \"Second attribute of DescribedPossibleIChild\"\n+          \"description\": \"Second attribute of DescribedPossibleIChild\",\n+          \"type\": \"string\"\n         }\n       ],\n       \"children\": []\n@@ -62,6 +65,7 @@\n           \"name\": \"firstAttribute\",\n           \"deprecated\": false,\n           \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.simple.NotDescribedPossibleIChild\",\n+          \"type\": \"string\",\n           \"values\": [\n             \"ONE\",\n             \"TWO\"\n@@ -70,7 +74,14 @@\n         {\n           \"name\": \"secondAttribute\",\n           \"deprecated\": false,\n-          \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.simple.NotDescribedPossibleIChild\"\n+          \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.simple.NotDescribedPossibleIChild\",\n+          \"type\": \"string\"\n+        },\n+        {\n+          \"name\": \"thirdAttribute\",\n+          \"deprecated\": false,\n+          \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.simple.NotDescribedPossibleIChild\",\n+          \"type\": \"int\"\n         }\n       ],\n       \"children\": []\n@@ -94,7 +105,8 @@\n       \"attributes\": [{\n         \"name\": \"attribute\",\n         \"deprecated\": false,\n-        \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.simple.Start\"\n+        \"describer\": \"nl.nn.adapterframework.doc.testtarget.examples.simple.Start\",\n+        \"type\": \"string\"\n       }],\n       \"children\": [\n         {"
  },
  {
    "sha": "37dcfcf6369e0f3f516383d9c8cd98c3b85c407f",
    "filename": "core/src/test/resources/doc/examplesExpected/simple.xsd",
    "status": "modified",
    "additions": 21,
    "deletions": 1,
    "changes": 22,
    "blob_url": "https://github.com/ibissource/iaf/blob/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/resources/doc/examplesExpected/simple.xsd",
    "raw_url": "https://github.com/ibissource/iaf/raw/18069ebb3f6cb0ca8a620227d2178f262d251ea6/core/src/test/resources/doc/examplesExpected/simple.xsd",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/resources/doc/examplesExpected/simple.xsd?ref=18069ebb3f6cb0ca8a620227d2178f262d251ea6",
    "patch": "@@ -76,13 +76,33 @@\n     <xs:attributeGroup ref=\"NotDescribedPossibleIChildDeclaredAttributeGroup\" />\n   </xs:complexType>\n   <xs:attributeGroup name=\"NotDescribedPossibleIChildDeclaredAttributeGroup\">\n-    <xs:attribute name=\"firstAttribute\" type=\"MyEnumAttributeValuesType\" />\n+    <xs:attribute name=\"firstAttribute\">\n+      <xs:simpleType>\n+        <xs:union memberTypes=\"MyEnumAttributeValuesType variableRef\" />\n+      </xs:simpleType>\n+    </xs:attribute>\n     <xs:attribute name=\"secondAttribute\" type=\"xs:string\" />\n+    <xs:attribute name=\"thirdAttribute\" type=\"frankInt\" />\n   </xs:attributeGroup>\n   <xs:simpleType name=\"MyEnumAttributeValuesType\">\n     <xs:restriction base=\"xs:string\">\n       <xs:enumeration value=\"ONE\" />\n       <xs:enumeration value=\"TWO\" />\n     </xs:restriction>\n   </xs:simpleType>\n+  <xs:simpleType name=\"frankBoolean\">\n+    <xs:restriction base=\"xs:string\">\n+      <xs:pattern value=\"(true|false)|(\\$\\{[^\\}]+\\})\" />\n+    </xs:restriction>\n+  </xs:simpleType>\n+  <xs:simpleType name=\"frankInt\">\n+    <xs:restriction base=\"xs:string\">\n+      <xs:pattern value=\"((\\+|-)?[0-9]+)|(\\$\\{[^\\}]+\\})\" />\n+    </xs:restriction>\n+  </xs:simpleType>\n+  <xs:simpleType name=\"variableRef\">\n+    <xs:restriction base=\"xs:string\">\n+      <xs:pattern value=\"\\$\\{[^\\}]+\\}\" />\n+    </xs:restriction>\n+  </xs:simpleType>\n </xs:schema>"
  }
]
