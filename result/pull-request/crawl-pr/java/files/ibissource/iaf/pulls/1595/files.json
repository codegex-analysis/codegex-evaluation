[
  {
    "sha": "c4f848681e7440b7f698a0c9a9a8b618089468af",
    "filename": "core/src/main/java/nl/nn/adapterframework/pipes/ForEachChildElementPipe.java",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/pipes/ForEachChildElementPipe.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/pipes/ForEachChildElementPipe.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/pipes/ForEachChildElementPipe.java?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -30,6 +30,8 @@\n import org.xml.sax.InputSource;\n import org.xml.sax.SAXException;\n \n+import lombok.Getter;\n+import lombok.Setter;\n import nl.nn.adapterframework.configuration.ConfigurationException;\n import nl.nn.adapterframework.configuration.ConfigurationWarning;\n import nl.nn.adapterframework.configuration.ConfigurationWarnings;\n@@ -46,12 +48,14 @@\n import nl.nn.adapterframework.stream.StreamingException;\n import nl.nn.adapterframework.stream.ThreadLifeCycleEventListener;\n import nl.nn.adapterframework.util.AppConstants;\n+import nl.nn.adapterframework.util.Misc;\n import nl.nn.adapterframework.util.StreamUtil;\n import nl.nn.adapterframework.util.TransformerErrorListener;\n import nl.nn.adapterframework.util.TransformerPool;\n import nl.nn.adapterframework.util.XmlUtils;\n import nl.nn.adapterframework.xml.ExceptionCatchingFilter;\n import nl.nn.adapterframework.xml.FullXmlFilter;\n+import nl.nn.adapterframework.xml.IXmlDebugger;\n import nl.nn.adapterframework.xml.NamespaceRemovingFilter;\n import nl.nn.adapterframework.xml.NodeSetFilter;\n import nl.nn.adapterframework.xml.SaxException;\n@@ -80,6 +84,7 @@\n \n \tprivate TransformerPool extractElementsTp=null;\n \tprivate ThreadLifeCycleEventListener<Object> threadLifeCycleEventListener;\n+\tprivate @Getter @Setter IXmlDebugger xmlDebugger;\n \n \t{ \n \t\tsetNamespaceAware(true);\n@@ -294,6 +299,14 @@ protected void createHandler(HandlerRecord result, IPipeLineSession session, Ite\n \t\tItemCallbackCallingHandler itemHandler = new ItemCallbackCallingHandler(callback);\n \t\tresult.inputHandler=itemHandler;\n \t\t\n+\t\tif (getXmlDebugger()!=null && (StringUtils.isNotEmpty(getContainerElement()) || StringUtils.isNotEmpty(getTargetElement()) || getExtractElementsTp()!=null)) {\n+\t\t\tString containerElementString = StringUtils.isNotEmpty(getContainerElement()) ? \"filter to containerElement '\"+getContainerElement()+\"'\" : null;\n+\t\t\tString targetElementString = StringUtils.isNotEmpty(getTargetElement()) ? \"filter to targetElement '\"+getTargetElement()+\"'\" :null;\n+\t\t\tString xpathString = getExtractElementsTp()!=null ? \"filter XPath '\"+getElementXPathExpression()+\"'\": null;\n+\t\t\tString label = \"XML after preprocessing: \" + Misc.concat(\", \",containerElementString, targetElementString, xpathString);\n+\t\t\tresult.inputHandler=getXmlDebugger().inspectXml(session, label, result.inputHandler);\n+\t\t}\n+\t\t\n \t\tif (isRemoveNamespaces()) {\n \t\t\tresult.inputHandler = new NamespaceRemovingFilter(result.inputHandler);\n \t\t}"
  },
  {
    "sha": "01c30d9bd5cd1fceaf49cea8a32f9cd1211efa6e",
    "filename": "core/src/main/java/nl/nn/adapterframework/senders/JsonXsltSender.java",
    "status": "modified",
    "additions": 14,
    "deletions": 4,
    "changes": 18,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/senders/JsonXsltSender.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/senders/JsonXsltSender.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/senders/JsonXsltSender.java?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -1,5 +1,5 @@\n /*\n-   Copyright 2019, 2020 WeAreFrank!\n+   Copyright 2019-2021 WeAreFrank!\n \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n@@ -22,6 +22,8 @@\n import org.xml.sax.SAXException;\n import org.xml.sax.XMLReader;\n \n+import lombok.Getter;\n+import lombok.Setter;\n import nl.nn.adapterframework.configuration.ConfigurationException;\n import nl.nn.adapterframework.core.IForwardTarget;\n import nl.nn.adapterframework.core.IPipeLineSession;\n@@ -31,6 +33,7 @@\n import nl.nn.adapterframework.stream.StreamingException;\n import nl.nn.adapterframework.util.JsonXmlReader;\n import nl.nn.adapterframework.util.XmlJsonWriter;\n+import nl.nn.adapterframework.xml.IXmlDebugger;\n \n /**\n  * Perform an XSLT transformation with a specified stylesheet on a JSON input, yielding JSON, yielding JSON, XML or text.\n@@ -49,6 +52,7 @@\n public class JsonXsltSender extends XsltSender {\n \n \tprivate boolean jsonResult=true;\n+\tprivate @Getter @Setter IXmlDebugger xmlDebugger;\n \n \t@Override\n \tpublic void configure() throws ConfigurationException {\n@@ -70,16 +74,22 @@ protected ContentHandler createHandler(Message input, IPipeLineSession session,\n \t\t}\n \t\tXmlJsonWriter xjw = new XmlJsonWriter(target.asWriter());\n \t\tMessageOutputStream prev = new MessageOutputStream(this,xjw,target,threadLifeCycleEventListener,session);\n-\t\treturn super.createHandler(input, session, prev);\n+\t\tContentHandler handler = super.createHandler(input, session, prev);\n+\t\tif (getXmlDebugger()!=null) {\n+\t\t\thandler = getXmlDebugger().inspectXml(session, \"XML to be converted to JSON\", handler);\n+\t\t}\n+\t\treturn handler;\n \t}\n \n \n \t@Override\n-\tprotected XMLReader getXmlReader(ContentHandler handler) throws ParserConfigurationException, SAXException {\n+\tprotected XMLReader getXmlReader(IPipeLineSession session, ContentHandler handler) throws ParserConfigurationException, SAXException {\n+\t\tif (getXmlDebugger()!=null) {\n+\t\t\thandler = getXmlDebugger().inspectXml(session, \"JSON converted to XML\", handler);\n+\t\t}\n \t\treturn new JsonXmlReader(handler);\n \t}\n \n-\n \t@IbisDoc({\"1\", \"When <code>true</code>, the xml result of the transformation is converted back to json\", \"true\"})\n \tpublic void setJsonResult(boolean jsonResult) {\n \t\tthis.jsonResult = jsonResult;"
  },
  {
    "sha": "7d8b743932d949ba441db2189d53f975f0518114",
    "filename": "core/src/main/java/nl/nn/adapterframework/senders/XsltSender.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/senders/XsltSender.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/senders/XsltSender.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/senders/XsltSender.java?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -267,7 +267,7 @@ protected ContentHandler createHandler(Message input, IPipeLineSession session,\n \t}\n \t\n \n-\tprotected XMLReader getXmlReader(ContentHandler handler) throws ParserConfigurationException, SAXException {\n+\tprotected XMLReader getXmlReader(IPipeLineSession session, ContentHandler handler) throws ParserConfigurationException, SAXException {\n \t\treturn XmlUtils.getXMLReader(handler);\n \t}\n \t\n@@ -292,7 +292,7 @@ public void endDocument() throws SAXException {\n \t\t\t\t\t\t}\n \t\t\t\t\t};\n \t\t\t\t}\n-\t\t\t\tXMLReader reader = getXmlReader(handler);\n+\t\t\t\tXMLReader reader = getXmlReader(session, handler);\n \t\t\t\tInputSource source = message.asInputSource();\n \t\t\t\treader.parse(source);\n \t\t\t\treturn target.getPipeRunResult();"
  },
  {
    "sha": "f9f5fdb16326aae3f8b929cd623bf7b1e4d32bc5",
    "filename": "core/src/main/java/nl/nn/adapterframework/util/Misc.java",
    "status": "modified",
    "additions": 16,
    "deletions": 5,
    "changes": 21,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/util/Misc.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/util/Misc.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/util/Misc.java?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -513,13 +513,24 @@ public static String replace (String source, String from, String to) {\n \t * @return the concatenated string\n \t */\n \tpublic static String concatStrings(String part1, String separator, String part2) {\n-\t\tif (StringUtils.isEmpty(part1)) {\n-\t\t\treturn part2;\n+\t\treturn concat(separator, part1, part2);\n+\t}\n+\n+\tpublic static String concat(String separator, String... parts) {\n+\t\tint i=0;\n+\t\twhile(i<parts.length && StringUtils.isEmpty(parts[i])) {\n+\t\t\ti++;\n+\t\t}\n+\t\tif (i>=parts.length) {\n+\t\t\treturn null;\n \t\t}\n-\t\tif (StringUtils.isEmpty(part2)) {\n-\t\t\treturn part1;\n+\t\tString result=parts[i];\n+\t\twhile(++i<parts.length) {\n+\t\t\tif (StringUtils.isNotEmpty(parts[i])) {\n+\t\t\t\tresult += separator + parts[i];\n+\t\t\t}\n \t\t}\n-\t\treturn part1+separator+part2;\n+\t\treturn result;\n \t}\n \n \t/**"
  },
  {
    "sha": "646506b6472ef49760c0e76d23a1ba42868bf84b",
    "filename": "core/src/main/java/nl/nn/adapterframework/xml/IXmlDebugger.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/xml/IXmlDebugger.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/xml/IXmlDebugger.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/xml/IXmlDebugger.java?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -0,0 +1,34 @@\n+/*\n+   Copyright 2021 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.xml;\n+\n+import org.xml.sax.ContentHandler;\n+\n+import nl.nn.adapterframework.core.IPipeLineSession;\n+\n+/**\n+ * Utility interface to allow the debugger to inspect XML in the middle of a streaming execution.\n+ * \n+ * @author Gerrit van Brakel\n+ *\n+ */\n+public interface IXmlDebugger {\n+\n+\t/**\n+\t * Allow the debugger to see the XML stream.\n+\t */\n+\tpublic ContentHandler inspectXml(IPipeLineSession session, String label, ContentHandler contentHandler);\n+}"
  },
  {
    "sha": "77935234a8927e3bbb74c5eac2696ce5fce06fd8",
    "filename": "core/src/main/java/nl/nn/adapterframework/xml/TransformerFilter.java",
    "status": "modified",
    "additions": 9,
    "deletions": 3,
    "changes": 12,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/xml/TransformerFilter.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/java/nl/nn/adapterframework/xml/TransformerFilter.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/java/nl/nn/adapterframework/xml/TransformerFilter.java?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -67,7 +67,9 @@ public void error(TransformerException paramTransformerException) throws Transfo\n \t\t\t\t\t\t}\n \t\t\t\t\t} catch (TransformerException e) {\n \t\t\t\t\t\texceptionInsertingFilter.insertException(new SaxException(e));\n-\t\t\t\t\t\tthrow e;\n+\t\t\t\t\t\t// this throw is necessary, although it causes log messages like 'Exception in thread \"main/Thread-0\"'\n+\t\t\t\t\t\t// If absent, Xslt tests fail.\n+\t\t\t\t\t\tthrow e; \n \t\t\t\t\t}\n \t\t\t\t}\n \n@@ -79,7 +81,9 @@ public void fatalError(TransformerException paramTransformerException) throws Tr\n \t\t\t\t\t\t}\n \t\t\t\t\t} catch (TransformerException e) {\n \t\t\t\t\t\texceptionInsertingFilter.insertException(new SaxException(e));\n-\t\t\t\t\t\tthrow e;\n+\t\t\t\t\t\t// this throw is necessary, although it causes log messages like 'Exception in thread \"main/Thread-0\"'\n+\t\t\t\t\t\t// If absent, Xslt tests fail.\n+\t\t\t\t\t\tthrow e; \n \t\t\t\t\t}\n \t\t\t\t\t\n \t\t\t\t}\n@@ -92,7 +96,9 @@ public void warning(TransformerException paramTransformerException) throws Trans\n \t\t\t\t\t\t}\n \t\t\t\t\t} catch (TransformerException e) {\n \t\t\t\t\t\texceptionInsertingFilter.insertException(new SaxException(e));\n-\t\t\t\t\t\tthrow e;\n+\t\t\t\t\t\t// this throw is necessary, although it causes log messages like 'Exception in thread \"main/Thread-0\"'\n+\t\t\t\t\t\t// If absent, Xslt tests fail.\n+\t\t\t\t\t\tthrow e; \n \t\t\t\t\t}\n \t\t\t\t\t\n \t\t\t\t}"
  },
  {
    "sha": "7d33b3df753c8ddf751576aedb67059cf03becc3",
    "filename": "core/src/main/resources/AppConstants.properties",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/resources/AppConstants.properties",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/main/resources/AppConstants.properties",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/main/resources/AppConstants.properties?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -170,9 +170,9 @@ loadDatabaseSchedules.interval=60000\n \n xml.namespaceAware.default=false\n # set xslt.streaming.default=true to use streaming Xslt. \n-# N.B. 2019-11-25 this appears to cause NullPointerExceptions in Xalans TransformerHandlerImpl, therefor we disabled this setting\n+# N.B. 2019-11-25 this appeared to cause NullPointerExceptions in Xalans TransformerHandlerImpl, therefor we then disabled this setting\n # (also because it is using more memory than expected, e.g. ForEachChildElementPipe with elementXPathExpression still goes out of memory on large files)\n-xslt.streaming.default=false\n+xslt.streaming.default=true\n xslt.auto.reload=false\n xslt.bufsize=4096\n \n@@ -192,7 +192,7 @@ xmlValidator.maxInitialised=-1\n validate.configuration=false\n \n # When true, pipe execution is automatically optimized using output streaming by default\n-streaming.auto=false\n+streaming.auto=true\n \n jms.connectionsArePooled=true\n jms.sessionsArePooled=true"
  },
  {
    "sha": "22793053751dc30e0876bcbf7dcf43a0fac0e629",
    "filename": "core/src/test/java/nl/nn/adapterframework/util/MiscTest.java",
    "status": "modified",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/test/java/nl/nn/adapterframework/util/MiscTest.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/core/src/test/java/nl/nn/adapterframework/util/MiscTest.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/core/src/test/java/nl/nn/adapterframework/util/MiscTest.java?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -305,6 +305,32 @@ public void testConcatStrings() throws Exception {\n \t\tassertEquals(\"LeBron//James\", res);\n \t}\n \n+\t@Test\n+\tpublic void testConcatStringsFirstEmpty() throws Exception {\n+\t\tString a = \"\";\n+\t\tString b = \"James\";\n+\t\tString seperator = \"//\";\n+\t\tString res = Misc.concatStrings(a, seperator, b);\n+\t\tassertEquals(\"James\", res);\n+\t}\n+\n+\t@Test\n+\tpublic void testConcatStringsSecondEmpty() throws Exception {\n+\t\tString a = \"LeBron\";\n+\t\tString b = \"\";\n+\t\tString seperator = \"//\";\n+\t\tString res = Misc.concatStrings(a, seperator, b);\n+\t\tassertEquals(\"LeBron\", res);\n+\t}\n+\t\n+\t@Test\n+\tpublic void testConcat() throws Exception {\n+\t\tString seperator = \"|\";\n+\t\tString res = Misc.concat(seperator, null, \"a\", \"b\", null, \"c\", null);\n+\t\tassertEquals(\"a|b|c\", res);\n+\t}\n+\t\n+\t\n \t/**\n \t * Method: hide(String string)\n \t */"
  },
  {
    "sha": "d330ae814a20225df19fecde2d5dc719e976000d",
    "filename": "ladybug/src/main/java/nl/nn/ibistesttool/Debugger.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/ladybug/src/main/java/nl/nn/ibistesttool/Debugger.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/ladybug/src/main/java/nl/nn/ibistesttool/Debugger.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/ladybug/src/main/java/nl/nn/ibistesttool/Debugger.java?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -207,6 +207,12 @@ public Object storeInSessionKey(String correlationId, String sessionKey, Object\n \t\treturn testTool.outputpoint(correlationId, null, \"SessionKey \" + sessionKey, result);\n \t}\n \n+\t@Override\n+\tpublic <T> T showValue(String correlationId, String label, T value) {\n+\t\treturn testTool.outputpoint(correlationId, null, label, value);\n+\t}\n+\n+\t\n \t@Override\n \tpublic Message preserveInput(String correlationId, Message input) {\n \t\treturn testTool.outputpoint(correlationId, null, \"PreserveInput\", input);"
  },
  {
    "sha": "1ea86ae791efa29ae8e980c59dc6b9eebe1c5b51",
    "filename": "ladybug/src/main/java/nl/nn/ibistesttool/IbisDebugger.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/ladybug/src/main/java/nl/nn/ibistesttool/IbisDebugger.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/ladybug/src/main/java/nl/nn/ibistesttool/IbisDebugger.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/ladybug/src/main/java/nl/nn/ibistesttool/IbisDebugger.java?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -1,5 +1,5 @@\n /*\n-   Copyright 2018 Nationale-Nederlanden\n+   Copyright 2018 Nationale-Nederlanden, 2021 WeAreFrank!\n \n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n@@ -60,6 +60,7 @@\n \tpublic Message preserveInput(String correlationId, Message input);\n \n \tpublic Object parameterResolvedTo(Parameter parameter, String correlationId, Object value);\n+\tpublic <T> T showValue(String correlationId, String label, T value);\n \n \tpublic boolean stubSender(ISender sender, String correlationId);\n "
  },
  {
    "sha": "8f173eb3544e257f702c05357ca48968bfea34e2",
    "filename": "ladybug/src/main/java/nl/nn/ibistesttool/IbisDebuggerAdvice.java",
    "status": "modified",
    "additions": 20,
    "deletions": 1,
    "changes": 21,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/ladybug/src/main/java/nl/nn/ibistesttool/IbisDebuggerAdvice.java",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/ladybug/src/main/java/nl/nn/ibistesttool/IbisDebuggerAdvice.java",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/ladybug/src/main/java/nl/nn/ibistesttool/IbisDebuggerAdvice.java?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -25,6 +25,7 @@\n import org.apache.logging.log4j.Logger;\n import org.aspectj.lang.ProceedingJoinPoint;\n import org.springframework.context.ApplicationListener;\n+import org.xml.sax.ContentHandler;\n \n import nl.nn.adapterframework.core.IBlockEnabledSender;\n import nl.nn.adapterframework.core.ICorrelatedPullingListener;\n@@ -60,12 +61,17 @@\n import nl.nn.adapterframework.stream.ThreadLifeCycleEventListener;\n import nl.nn.adapterframework.util.AppConstants;\n import nl.nn.adapterframework.util.LogUtil;\n+import nl.nn.adapterframework.util.StreamUtil;\n import nl.nn.adapterframework.webcontrol.api.DebuggerStatusChangedEvent;\n+import nl.nn.adapterframework.xml.IXmlDebugger;\n+import nl.nn.adapterframework.xml.PrettyPrintFilter;\n+import nl.nn.adapterframework.xml.XmlTee;\n+import nl.nn.adapterframework.xml.XmlWriter;\n \n /**\n  * @author  Jaco de Groot (jaco@dynasol.nl)\n  */\n-public class IbisDebuggerAdvice implements ThreadLifeCycleEventListener<Object>, ApplicationListener<DebuggerStatusChangedEvent> {\n+public class IbisDebuggerAdvice implements ThreadLifeCycleEventListener<Object>, ApplicationListener<DebuggerStatusChangedEvent>, IXmlDebugger {\n \tprotected Logger log = LogUtil.getLogger(this);\n \n \t// Contract for testtool state:\n@@ -276,6 +282,19 @@ private String handleMessageOutputStream(WriterPlaceHolder writerPlaceHolder, Me\n \t\treturn resultStream!=null ? \"<-- outputstream provided\" : \"<-- no outputstream could be provided\";\n \t}\n \t\n+\t@Override\n+\tpublic ContentHandler inspectXml(IPipeLineSession session, String label, ContentHandler contentHandler) {\n+\t\tString correlationId = session == null ? null : session.getMessageId();\n+\t\tWriterPlaceHolder writerPlaceHolder = ibisDebugger.showValue(correlationId, label, new WriterPlaceHolder());\n+\t\tif (writerPlaceHolder!=null && writerPlaceHolder.getWriter()!=null) {\n+\t\t\tWriter writer = session.scheduleCloseOnSessionExit(writerPlaceHolder.getWriter());\n+\t\t\tXmlWriter xmlWriter = new XmlWriter(StreamUtil.limitSize(writer, writerPlaceHolder.getSizeLimit()));\n+\t\t\tcontentHandler = new XmlTee(contentHandler, new PrettyPrintFilter(xmlWriter));\n+\t\t} \n+\t\treturn contentHandler;\n+\t}\n+\t\n+\t\n \t/**\n \t * Provides advice for {@link CacheSenderWrapperProcessor#sendMessage(SenderWrapperBase senderWrapperBase, Message message, IPipeLineSession session)}\n \t */"
  },
  {
    "sha": "3e7f229f642482e88365946114e667c93f0b9857",
    "filename": "ladybug/src/main/resources/springIbisDebuggerAdvice.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ibissource/iaf/blob/1834950bda9e45a9c97a2c4d9ded5bba567302bb/ladybug/src/main/resources/springIbisDebuggerAdvice.xml",
    "raw_url": "https://github.com/ibissource/iaf/raw/1834950bda9e45a9c97a2c4d9ded5bba567302bb/ladybug/src/main/resources/springIbisDebuggerAdvice.xml",
    "contents_url": "https://api.github.com/repos/ibissource/iaf/contents/ladybug/src/main/resources/springIbisDebuggerAdvice.xml?ref=1834950bda9e45a9c97a2c4d9ded5bba567302bb",
    "patch": "@@ -11,7 +11,7 @@\n \t>\n \n \t<bean\n-\t\tname=\"ibisDebuggerAdvice,threadLifeCycleEventListener\"\n+\t\tname=\"ibisDebuggerAdvice,threadLifeCycleEventListener,xmlDebugger\"\n \t\tclass=\"nl.nn.ibistesttool.IbisDebuggerAdvice\"\n \t\tautowire=\"byName\"\n \t/>"
  }
]
