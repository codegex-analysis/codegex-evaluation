[
  {
    "sha": "7a09fbc628c8ff2005243580e45747fdb81aa27f",
    "filename": "src/app.log",
    "status": "modified",
    "additions": 5622,
    "deletions": 72,
    "changes": 5694,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/app.log",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/app.log",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/app.log?ref=3a877a19391eb5399e4cb2973e5271d4e648552b"
  },
  {
    "sha": "8f6c1a0f75f833a2fbd82b4c21a125bf8f39a88c",
    "filename": "src/main/java/DirectoryEncryptor/ASyncDirectoryEncryptor.java",
    "status": "added",
    "additions": 100,
    "deletions": 0,
    "changes": 100,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/DirectoryEncryptor/ASyncDirectoryEncryptor.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/DirectoryEncryptor/ASyncDirectoryEncryptor.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/DirectoryEncryptor/ASyncDirectoryEncryptor.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -0,0 +1,100 @@\n+package DirectoryEncryptor;\n+\n+import EncryptionAlgorithms.EncryptionAlgorithm;\n+\n+import EventsLogger.Events;\n+import Exceptions.InvalidKeyException;\n+import Keys.Key;\n+import Utils.FileOperations;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class ASyncDirectoryEncryptor extends DirectoryProcessor {\n+    private String pathToDir;\n+    private FileOperations directoryOperations;\n+\n+    private FileOperations keyFile;\n+    private EncryptionAlgorithm encryptionAlgorithm;\n+    private List<Thread> encryptThreadList = new ArrayList<>();\n+    private List<Thread> decryptThreadList = new ArrayList<>();\n+\n+    private FileOperations encryptedDir;\n+    private FileOperations decryptedDir;\n+\n+    public ASyncDirectoryEncryptor(String pathToDir, FileOperations keyFile,\n+                                   EncryptionAlgorithm encryptionAlgorithm) throws IOException, InvalidKeyException {\n+        this.pathToDir = pathToDir;\n+        this.directoryOperations = new FileOperations(pathToDir);\n+        this.keyFile = keyFile;\n+        this.encryptionAlgorithm = encryptionAlgorithm;\n+\n+        this.encryptedDir = new FileOperations(pathToDir, encryptionAlgorithm.getNameOfEncryption() + \"EncryptedASynchronized\", true);\n+        this.decryptedDir = new FileOperations(pathToDir, encryptionAlgorithm.getNameOfEncryption() + \"DecryptedASynchronized\", true);\n+        generateKey();\n+    }\n+\n+    public void generateKey() throws IOException, InvalidKeyException {\n+        Key key = new Key();\n+        try {\n+            int k = (int)key.getKey();\n+        } catch (ClassCastException e){\n+            setEvent(\"Error in casting key\", Events.Error, encryptionAlgorithm);\n+            throw new InvalidKeyException(\"Invalid key, not an int\");\n+        }\n+        this.keyFile.writeToFile(Integer.toString(key.getKey()));\n+    }\n+\n+\n+\n+    public String[] getFileNames() {\n+        String[] filesToEncrypt = directoryOperations.getFilesFromDirectoryTxt();\n+        List<String> filesToEncryptList = new ArrayList<>(Arrays.asList(filesToEncrypt));\n+        filesToEncryptList.removeIf(file -> file.contains(\"Key\"));\n+        filesToEncrypt = filesToEncryptList.toArray(new String[0]);\n+        return filesToEncrypt;\n+    }\n+\n+\n+    @Override\n+    public void encryptDirectory() {\n+        setEvent(pathToDir, encryptedDir.getPathToFile() , Events.EncryptionStarted, encryptionAlgorithm);\n+        for (String file : getFileNames()) {\n+            Thread t = new ASyncDirectoryProcessor(pathToDir + File.separator + file, encryptionAlgorithm, keyFile, encryptedDir, decryptedDir, true);\n+            encryptThreadList.add(t);\n+            t.start();\n+        }\n+\n+        for (Thread t : encryptThreadList){\n+            try {\n+                t.join();\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        setEvent(pathToDir, encryptedDir.getPathToFile() , Events.EncryptionEnded, encryptionAlgorithm);\n+    }\n+\n+    @Override\n+    public void decryptDirectory() throws IOException {\n+        setEvent(pathToDir, encryptedDir.getPathToFile() , Events.DecryptionStarted, encryptionAlgorithm);\n+        for (String file : getFileNames()) {\n+            Thread t = new ASyncDirectoryProcessor(pathToDir + File.separator + file, encryptionAlgorithm, keyFile, encryptedDir, decryptedDir, false);\n+            decryptThreadList.add(t);\n+            t.start();\n+        }\n+\n+        for (Thread t : decryptThreadList){\n+            try {\n+                t.join();\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+        setEvent(pathToDir, encryptedDir.getPathToFile() , Events.DecryptionEnded, encryptionAlgorithm);\n+\n+    }\n+}"
  },
  {
    "sha": "1b7f867c97322f796e41a44c9f673021699f98c8",
    "filename": "src/main/java/DirectoryEncryptor/ASyncDirectoryProcessor.java",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/DirectoryEncryptor/ASyncDirectoryProcessor.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/DirectoryEncryptor/ASyncDirectoryProcessor.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/DirectoryEncryptor/ASyncDirectoryProcessor.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -0,0 +1,88 @@\n+package DirectoryEncryptor;\n+\n+import EncryptionAlgorithms.EncryptionAlgorithm;\n+import EventsLogger.EncryptionLog4JLogger;\n+import EventsLogger.EncryptionLogger;\n+import Exceptions.InvalidKeyException;\n+import FileEncryptor.FileEncryptor;\n+import Utils.FileOperations;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+public class ASyncDirectoryProcessor extends Thread implements IDirectoryProcessor {\n+    private final EncryptionLog4JLogger log4JLogger = new EncryptionLog4JLogger();\n+\n+    private Boolean TrueIfEncrypt;\n+    private String pathToFile;\n+    private String fileName;\n+    private EncryptionAlgorithm encryptionAlgorithm;\n+    private FileOperations keyFile;\n+\n+    private FileOperations fileToEncrypt;\n+    private FileOperations encryptedFile;\n+    private FileOperations decryptedFile;\n+    private FileOperations encryptDir;\n+    private FileOperations decryptDir;\n+\n+    private FileEncryptor fileEncryptor;\n+\n+\n+\n+    public ASyncDirectoryProcessor(String pathToFile, EncryptionAlgorithm encryptionAlgorithm, FileOperations keyFile,\n+                                   FileOperations encryptDir, FileOperations decryptDir, Boolean TrueIfEncrypt) {\n+\n+       this.pathToFile = pathToFile;\n+       this.encryptionAlgorithm = encryptionAlgorithm;\n+       this.keyFile = keyFile;\n+       this.TrueIfEncrypt = TrueIfEncrypt;\n+       this.fileToEncrypt = new FileOperations(pathToFile);\n+       this.encryptDir = encryptDir;\n+       this.decryptDir = decryptDir;\n+       this.fileName = fileToEncrypt.getFileName();\n+    }\n+\n+\n+    public void createFiles() throws IOException {\n+\n+        if (TrueIfEncrypt) {\n+            this.encryptedFile = new FileOperations(encryptDir.getPathToFile(), getClearName(fileName));\n+        } else {\n+            this.encryptedFile = new FileOperations(encryptDir.getPathToFile() + File.separator + fileName);\n+            this.decryptedFile = new FileOperations(decryptDir.getPathToFile(), getClearName(fileName));\n+        }\n+    }\n+\n+    public String getClearName(String name){\n+        return name.replaceFirst(\"[.][^.]+$\", \"\");\n+    }\n+\n+\n+    @Override\n+    public void encryptDirectory() throws InvalidKeyException, IOException {\n+        fileEncryptor.encryptFile(true);\n+    }\n+\n+    @Override\n+    public void decryptDirectory() throws IOException {\n+        fileEncryptor.decryptFile();\n+    }\n+\n+    @Override\n+    public void run() {\n+        try {\n+            createFiles();\n+            fileEncryptor = new FileEncryptor(encryptionAlgorithm, fileToEncrypt, encryptedFile, decryptedFile, keyFile);\n+            fileEncryptor.addObserver(new EncryptionLogger(this.fileEncryptor));\n+            if (TrueIfEncrypt){\n+                encryptDirectory();\n+            } else {\n+                decryptDirectory();\n+            }\n+        } catch (IOException | InvalidKeyException e) {\n+            e.printStackTrace();\n+        }\n+\n+\n+    }\n+}"
  },
  {
    "sha": "0a790a587fbd3d6856c06cf57330cbdb9cd98691",
    "filename": "src/main/java/DirectoryEncryptor/DirectoryProcessor.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/DirectoryEncryptor/DirectoryProcessor.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/DirectoryEncryptor/DirectoryProcessor.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/DirectoryEncryptor/DirectoryProcessor.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -0,0 +1,26 @@\n+package DirectoryEncryptor;\n+\n+import EncryptionAlgorithms.EncryptionAlgorithm;\n+import EventsLogger.EncryptionLogEventsArgs;\n+import EventsLogger.Events;\n+import org.apache.logging.log4j.Level;\n+\n+import java.util.Observable;\n+\n+public abstract class DirectoryProcessor extends Observable implements IDirectoryProcessor {\n+\n+    public void setEvent(String massage, Events event, EncryptionAlgorithm algorithm){\n+        long time = System.currentTimeMillis();\n+        EncryptionLogEventsArgs eventsArgs = new EncryptionLogEventsArgs(massage, event, time, algorithm);\n+        setChanged();\n+        notifyObservers(eventsArgs);\n+    }\n+\n+    public void setEvent(String originalPath, String outputFile, Events event, EncryptionAlgorithm algorithm) {\n+        long time = System.currentTimeMillis();\n+        EncryptionLogEventsArgs eventsArgs = new EncryptionLogEventsArgs(algorithm, originalPath, outputFile, time, event, \"Directory\");\n+        setChanged();\n+        notifyObservers(eventsArgs);\n+    }\n+\n+}"
  },
  {
    "sha": "f2f282a5c53ab3be8b743c9dfc37f4cb65b2a9c7",
    "filename": "src/main/java/DirectoryEncryptor/IDirectoryProcessor.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/DirectoryEncryptor/IDirectoryProcessor.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/DirectoryEncryptor/IDirectoryProcessor.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/DirectoryEncryptor/IDirectoryProcessor.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -0,0 +1,10 @@\n+package DirectoryEncryptor;\n+\n+import Exceptions.InvalidKeyException;\n+\n+import java.io.IOException;\n+\n+public interface IDirectoryProcessor {\n+    void encryptDirectory() throws InvalidKeyException, IOException;\n+    void decryptDirectory() throws IOException;\n+}"
  },
  {
    "sha": "c2cc822e37ba1ee2a37c8e28209c371eb0ccb712",
    "filename": "src/main/java/DirectoryEncryptor/SyncDirectoryProcessor.java",
    "status": "added",
    "additions": 95,
    "deletions": 0,
    "changes": 95,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/DirectoryEncryptor/SyncDirectoryProcessor.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/DirectoryEncryptor/SyncDirectoryProcessor.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/DirectoryEncryptor/SyncDirectoryProcessor.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -0,0 +1,95 @@\n+package DirectoryEncryptor;\n+\n+import EncryptionAlgorithms.EncryptionAlgorithm;\n+import EventsLogger.EncryptionLog4JLogger;\n+import EventsLogger.EncryptionLogEventsArgs;\n+import EventsLogger.EncryptionLogger;\n+import EventsLogger.Events;\n+import Exceptions.InvalidKeyException;\n+import FileEncryptor.FileEncryptor;\n+import Keys.Key;\n+import Utils.FileOperations;\n+import org.apache.logging.log4j.Level;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Observable;\n+\n+public class SyncDirectoryProcessor extends DirectoryProcessor{\n+    private final EncryptionLog4JLogger log4JLogger = new EncryptionLog4JLogger();\n+\n+    private String pathToDir;\n+    private FileOperations directoryOperations;\n+    private FileOperations encryptedDirectoryOperations;\n+    private FileOperations decryptedDirectoryOperations;\n+    private FileOperations keyFile;\n+    private EncryptionAlgorithm encryptionAlgorithm;\n+    private List<FileEncryptor> fileEncryptorList = new LinkedList<>();\n+\n+    public SyncDirectoryProcessor(String pathToFile, EncryptionAlgorithm encryptionAlgorithm) throws IOException, InvalidKeyException {\n+        this.pathToDir = pathToFile;\n+        this.keyFile = new FileOperations(pathToFile, \"DirectoryKey\" + encryptionAlgorithm.getNameOfEncryption());\n+        this.encryptionAlgorithm = encryptionAlgorithm;\n+        this.directoryOperations = new FileOperations(pathToFile);\n+        generateKey();\n+        createFiles();\n+        setObserversForFiles();\n+    }\n+\n+    public String getClearName(String name){\n+        return name.replaceFirst(\"[.][^.]+$\", \"\");\n+    }\n+\n+    public void generateKey() throws IOException, InvalidKeyException {\n+        Key key = new Key();\n+        try {\n+            int k = (int)key.getKey();\n+        } catch (ClassCastException e){\n+            setEvent(\"Error in casting key\", Events.Error, encryptionAlgorithm);\n+            throw new InvalidKeyException(\"Invalid key, not an int\");\n+        }\n+        this.keyFile.writeToFile(Integer.toString(key.getKey()));\n+    }\n+\n+    public void createFiles() throws IOException {\n+        this.encryptedDirectoryOperations = new FileOperations(pathToDir, encryptionAlgorithm.getNameOfEncryption() + \"encrypted\", true);\n+        this.decryptedDirectoryOperations = new FileOperations(pathToDir, encryptionAlgorithm.getNameOfEncryption() + \"decrypted\", true);\n+        String[] filesToEncrypt = directoryOperations.getFilesFromDirectoryTxt();\n+        for (String file : filesToEncrypt) {\n+            if (!file.contains(\"Key\")) {\n+                FileOperations fileToEncrypt = new FileOperations(encryptedDirectoryOperations.getParentPathToFile() + File.separator + file);\n+                FileOperations encryptedFile = new FileOperations(encryptedDirectoryOperations.getPathToFile(), getClearName(file));\n+                FileOperations decryptedFile = new FileOperations(decryptedDirectoryOperations.getPathToFile(), getClearName(file));\n+                FileEncryptor fileEncryptor = new FileEncryptor(encryptionAlgorithm, fileToEncrypt, encryptedFile, decryptedFile, keyFile);\n+                fileEncryptorList.add(fileEncryptor);\n+            }\n+        }\n+    }\n+\n+    public void setObserversForFiles(){\n+        for (FileEncryptor fileEncryptor : fileEncryptorList){\n+            fileEncryptor.addObserver(new EncryptionLogger(fileEncryptor));\n+        }\n+    }\n+\n+    @Override\n+    public void encryptDirectory() throws InvalidKeyException, IOException {\n+        setEvent(directoryOperations.getPathToFile(), encryptedDirectoryOperations.getPathToFile(), Events.EncryptionStarted, encryptionAlgorithm);\n+        for (FileEncryptor fileEncryptor : fileEncryptorList){\n+            fileEncryptor.encryptFile(true);\n+        }\n+        setEvent(directoryOperations.getPathToFile(), encryptedDirectoryOperations.getPathToFile(), Events.EncryptionEnded, encryptionAlgorithm);\n+    }\n+\n+    @Override\n+    public void decryptDirectory() throws IOException {\n+        setEvent(encryptedDirectoryOperations.getPathToFile(), decryptedDirectoryOperations.getPathToFile(), Events.DecryptionStarted, encryptionAlgorithm);\n+        for (FileEncryptor fileEncryptor : fileEncryptorList){\n+            fileEncryptor.decryptFile();\n+        }\n+        setEvent(encryptedDirectoryOperations.getPathToFile(), decryptedDirectoryOperations.getPathToFile(), Events.DecryptionEnded, encryptionAlgorithm);\n+    }\n+\n+}"
  },
  {
    "sha": "301554b6dd4351f9c048ab1fe28e22b03da57a7b",
    "filename": "src/main/java/EncryptionAlgorithms/DoubleEncryption.java",
    "status": "modified",
    "additions": 10,
    "deletions": 6,
    "changes": 16,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/DoubleEncryption.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/DoubleEncryption.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/EncryptionAlgorithms/DoubleEncryption.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -1,5 +1,6 @@\n package EncryptionAlgorithms;\n \n+import EventsLogger.Events;\n import Keys.Key;\n \n import java.io.IOException;\n@@ -19,15 +20,18 @@ public DoubleEncryption(EncryptionAlgorithm firstAlgorithm, EncryptionAlgorithm\n     }\n \n     @Override\n-    public String encryptFile(String stringToEncrypt, int encryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n-        String middleEncryption = algorithm1.encryptFile(stringToEncrypt, encryptionKey);\n-        return algorithm2.encryptFile(middleEncryption, secondKey);\n+    public String encryptString(String stringToEncrypt, int encryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+        setEvent(\"Starting to encrypt string\", Events.Debug);\n+        String middleEncryption = algorithm1.encryptString(stringToEncrypt, encryptionKey);\n+        setEvent(\"finished to encrypt string\", Events.Debug);\n+        return algorithm2.encryptString(middleEncryption, secondKey);\n     }\n \n     @Override\n-    public String decryptFile(String stringToDecrypt, int decryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n-        String middleDecryption = algorithm2.decryptFile(stringToDecrypt, secondKey);\n-        return algorithm1.decryptFile(middleDecryption, decryptionKey);\n+    public String decryptString(String stringToDecrypt, int decryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+        setEvent(\"Starting to decrypt string\", Events.Debug);\n+        String middleDecryption = algorithm2.decryptString(stringToDecrypt, secondKey);\n+        return algorithm1.decryptString(middleDecryption, decryptionKey);\n     }\n \n     @Override"
  },
  {
    "sha": "1deaddd78b150bf0948b8883e4e1d0d09d840e06",
    "filename": "src/main/java/EncryptionAlgorithms/EncryptionAlgorithm.java",
    "status": "modified",
    "additions": 10,
    "deletions": 8,
    "changes": 18,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/EncryptionAlgorithm.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/EncryptionAlgorithm.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/EncryptionAlgorithms/EncryptionAlgorithm.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -1,8 +1,12 @@\n package EncryptionAlgorithms;\n \n+import EventsLogger.EncryptionLogEventsArgs;\n+import EventsLogger.Events;\n+\n import java.io.IOException;\n+import java.util.Observable;\n \n-public abstract class EncryptionAlgorithm implements IEncryptionAlgorithm{\n+public abstract class EncryptionAlgorithm extends Observable implements IEncryptionAlgorithm{\n     private String nameOfEncryption;\n \n     public EncryptionAlgorithm(String nameOfEncryption) {\n@@ -18,13 +22,11 @@ public int getKeyStrength(int encryptionKey) throws IOException {\n         return (int) (Math.log10(encryptionKey)+1);\n     }\n \n-\n-    public boolean checkIfAlphabet(char charToCheck, boolean capitalOrNot){\n-        if (capitalOrNot){\n-            return (charToCheck >= 'A') && (charToCheck <= 'Z');\n-        } else {\n-            return (charToCheck >= 'a') && (charToCheck <= 'z');\n-        }\n+    public void setEvent(String massage, Events event){\n+        long time = System.currentTimeMillis();\n+        EncryptionLogEventsArgs eventsArgs = new EncryptionLogEventsArgs(massage, event, time, this);\n+        setChanged();\n+        notifyObservers(eventsArgs);\n     }\n \n }"
  },
  {
    "sha": "e315492eaa59a26b705687b44586060f53f4b9ff",
    "filename": "src/main/java/EncryptionAlgorithms/IEncryptionAlgorithm.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/IEncryptionAlgorithm.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/IEncryptionAlgorithm.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/EncryptionAlgorithms/IEncryptionAlgorithm.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -3,8 +3,8 @@\n import java.io.IOException;\n \n public interface IEncryptionAlgorithm {\n-     String encryptFile(String stringToEncrypt, int encryptionKey) throws IOException;\n-     String decryptFile(String stringToEncrypt, int decryptionKey) throws IOException;\n+     String encryptString(String stringToEncrypt, int encryptionKey) throws IOException;\n+     String decryptString(String stringToEncrypt, int decryptionKey) throws IOException;\n      String getName();\n      int getKeyStrength(int encryptionKey) throws IOException;\n }"
  },
  {
    "sha": "058b17dce409a61579529da95e7649e3599f2112",
    "filename": "src/main/java/EncryptionAlgorithms/RepeatEncryption.java",
    "status": "modified",
    "additions": 9,
    "deletions": 4,
    "changes": 13,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/RepeatEncryption.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/RepeatEncryption.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/EncryptionAlgorithms/RepeatEncryption.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -1,5 +1,7 @@\n package EncryptionAlgorithms;\n \n+import EventsLogger.Events;\n+\n import java.io.IOException;\n import java.util.NoSuchElementException;\n \n@@ -14,17 +16,20 @@ public RepeatEncryption(EncryptionAlgorithm algorithm, int numberOfTimesToEncryp\n     }\n \n     @Override\n-    public String encryptFile(String stringToEncrypt, int encryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+    public String encryptString(String stringToEncrypt, int encryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+        setEvent(\"Starting to encrypt string\", Events.Debug);\n         for (int i = 0 ; i < numberOfTimesToEncrypt ; i++){\n-            stringToEncrypt = algorithm.encryptFile(stringToEncrypt, encryptionKey);\n+            stringToEncrypt = algorithm.encryptString(stringToEncrypt, encryptionKey);\n         }\n+        setEvent(\"finished to encrypt string\", Events.Debug);\n         return stringToEncrypt;\n     }\n \n     @Override\n-    public String decryptFile(String stringToDecrypt, int decryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+    public String decryptString(String stringToDecrypt, int decryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+        setEvent(\"Starting to decrypt string\", Events.Debug);\n         for (int i = 0 ; i < numberOfTimesToEncrypt ; i++){\n-            stringToDecrypt = algorithm.decryptFile(stringToDecrypt, decryptionKey);\n+            stringToDecrypt = algorithm.decryptString(stringToDecrypt, decryptionKey);\n         }\n         return stringToDecrypt;\n     }"
  },
  {
    "sha": "8881b4f720bc3f0df2cda572b2afb4a22fb2a00a",
    "filename": "src/main/java/EncryptionAlgorithms/ShiftMultiplyEncryption.java",
    "status": "modified",
    "additions": 18,
    "deletions": 11,
    "changes": 29,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/ShiftMultiplyEncryption.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/ShiftMultiplyEncryption.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/EncryptionAlgorithms/ShiftMultiplyEncryption.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -1,5 +1,7 @@\n package EncryptionAlgorithms;\n \n+import EventsLogger.Events;\n+\n import java.io.IOException;\n import java.util.NoSuchElementException;\n \n@@ -10,30 +12,35 @@ public ShiftMultiplyEncryption() {\n     }\n \n     @Override\n-    public String encryptFile(String stringToEncrypt, int encryptionKey) throws IOException, NoSuchElementException, ClassCastException{\n+    public String encryptString(String stringToEncrypt, int encryptionKey) throws IOException, NoSuchElementException, ClassCastException{\n+        setEvent(\"Starting to encrypt string\", Events.Debug);\n         StringBuffer encryptedData = new StringBuffer();\n         for (int i = 0 ; i < stringToEncrypt.length(); i ++){\n-            if (checkIfAlphabet(stringToEncrypt.charAt(i), false)){\n-                int dataToEncrypt = stringToEncrypt.charAt(i) - 'a';\n-                dataToEncrypt = (dataToEncrypt * encryptionKey) % MODULO;\n-                encryptedData.append((char) (dataToEncrypt + 'a'));\n-            } else if (checkIfAlphabet(stringToEncrypt.charAt(i), true)){\n-                int dataToEncrypt = stringToEncrypt.charAt(i) - 'A';\n+            if (Character.isAlphabetic(stringToEncrypt.charAt(i))) {\n+                char upperLower = 0;\n+                if (Character.isUpperCase(stringToEncrypt.charAt(i))) {\n+                    upperLower = 'A';\n+                } else {\n+                    upperLower = 'a';\n+                }\n+                int dataToEncrypt = stringToEncrypt.charAt(i) - upperLower;\n                 dataToEncrypt = (dataToEncrypt * encryptionKey) % MODULO;\n-                encryptedData.append((char) (dataToEncrypt + 'A'));\n+                encryptedData.append((char) (dataToEncrypt + upperLower));\n             } else {\n                 encryptedData.append(stringToEncrypt.charAt(i));\n-\n             }\n+\n         }\n+        setEvent(\"finished to encrypt string\", Events.Debug);\n         return encryptedData.toString();\n \n     }\n \n     @Override\n-    public String decryptFile(String stringToDecrypt, int decryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+    public String decryptString(String stringToDecrypt, int decryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+        setEvent(\"Starting to decrypt string\", Events.Debug);\n         int decryptionKeyModuloInverse = getReverseModulo(decryptionKey);\n-        return encryptFile(stringToDecrypt , decryptionKeyModuloInverse);\n+        return encryptString(stringToDecrypt , decryptionKeyModuloInverse);\n     }\n \n     @Override"
  },
  {
    "sha": "c69fcc29e3974c8861ee498122191c5cafddb1a8",
    "filename": "src/main/java/EncryptionAlgorithms/ShiftUpEncryption.java",
    "status": "modified",
    "additions": 18,
    "deletions": 11,
    "changes": 29,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/ShiftUpEncryption.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/ShiftUpEncryption.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/EncryptionAlgorithms/ShiftUpEncryption.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -1,5 +1,7 @@\n package EncryptionAlgorithms;\n \n+import EventsLogger.Events;\n+\n import java.io.IOException;\n import java.util.NoSuchElementException;\n \n@@ -10,30 +12,35 @@ public ShiftUpEncryption() {\n     }\n \n     @Override\n-    public String encryptFile(String stringToEncrypt, int encryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+    public String encryptString(String stringToEncrypt, int encryptionKey) throws NoSuchElementException, ClassCastException {\n         StringBuffer encryptedData = new StringBuffer();\n+        setEvent(\"Starting to encrypt string\", Events.Debug);\n         for (int i = 0 ; i < stringToEncrypt.length() ; i ++){\n-            if (checkIfAlphabet(stringToEncrypt.charAt(i), false)){\n-                int dataToEncrypt = stringToEncrypt.charAt(i) - 'a';\n-                dataToEncrypt = (dataToEncrypt + encryptionKey) % 26;\n-                encryptedData.append((char) (dataToEncrypt + 'a'));\n-            } else if (checkIfAlphabet(stringToEncrypt.charAt(i), true)){\n-                int dataToEncrypt = stringToEncrypt.charAt(i) - 'A';\n+            if (Character.isAlphabetic(stringToEncrypt.charAt(i))) {\n+                char upperLower = 0;\n+                if (Character.isUpperCase(stringToEncrypt.charAt(i))) {\n+                    upperLower = 'A';\n+                } else {\n+                    upperLower = 'a';\n+                }\n+                int dataToEncrypt = stringToEncrypt.charAt(i) - upperLower;\n                 dataToEncrypt = (dataToEncrypt + encryptionKey) % 26;\n-                encryptedData.append((char) (dataToEncrypt + 'A'));\n+                encryptedData.append((char) (dataToEncrypt + upperLower));\n             } else {\n                 encryptedData.append(stringToEncrypt.charAt(i));\n-\n             }\n         }\n+        setEvent(\"finished to encrypt string\", Events.Debug);\n         return encryptedData.toString();\n \n     }\n \n     @Override\n-    public String decryptFile(String stringToEncrypt, int decryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+    public String decryptString(String stringToEncrypt, int decryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+        setEvent(\"Starting to decrypt string\", Events.Debug);\n         int decryptionKeyInner = 26 - decryptionKey;\n-        return encryptFile(stringToEncrypt, decryptionKeyInner);\n+        return encryptString(stringToEncrypt, decryptionKeyInner);\n+\n     }\n \n     @Override"
  },
  {
    "sha": "c448e90ec4de2b52dd421cd32bfeb80c6960e81d",
    "filename": "src/main/java/EncryptionAlgorithms/XorEncryption.java",
    "status": "modified",
    "additions": 8,
    "deletions": 3,
    "changes": 11,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/XorEncryption.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EncryptionAlgorithms/XorEncryption.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/EncryptionAlgorithms/XorEncryption.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -1,5 +1,7 @@\n package EncryptionAlgorithms;\n \n+import EventsLogger.Events;\n+\n import java.io.IOException;\n import java.util.NoSuchElementException;\n \n@@ -10,7 +12,8 @@ public XorEncryption(){\n     }\n \n     @Override\n-    public String encryptFile(String stringToEncrypt, int encryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+    public String encryptString(String stringToEncrypt, int encryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+        setEvent(\"Starting to encrypt string\", Events.Debug);\n         StringBuffer encryptedData = new StringBuffer();\n         for (int i = 0 ; i < stringToEncrypt.length() ; i ++){\n             if (!String.valueOf(stringToEncrypt.charAt(i)).equals(\"\\r\\n\\r\")){\n@@ -20,12 +23,14 @@ public String encryptFile(String stringToEncrypt, int encryptionKey) throws IOEx\n             }\n \n         }\n+        setEvent(\"finished to encrypt string\", Events.Debug);\n         return encryptedData.toString();\n     }\n \n     @Override\n-    public String decryptFile(String stringToDecrypt, int decryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n-        return encryptFile(stringToDecrypt , decryptionKey);\n+    public String decryptString(String stringToDecrypt, int decryptionKey) throws IOException, NoSuchElementException, ClassCastException {\n+        setEvent(\"Starting to decrypt string\", Events.Debug);\n+        return encryptString(stringToDecrypt , decryptionKey);\n \n     }\n "
  },
  {
    "sha": "c973be33d880457fd1daae52db0051dd2541b7d8",
    "filename": "src/main/java/EventsLogger/EncryptionLogEventsArgs.java",
    "status": "modified",
    "additions": 43,
    "deletions": 10,
    "changes": 53,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EventsLogger/EncryptionLogEventsArgs.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EventsLogger/EncryptionLogEventsArgs.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/EventsLogger/EncryptionLogEventsArgs.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -9,26 +9,59 @@\n     private String originalFilePath;\n     private String outputFilePath;\n     private long time;\n-    private final Events event;\n+    private Events event;\n+    private String fileOrDir;\n \n-    public EncryptionLogEventsArgs(EncryptionAlgorithm algorithm, String originalFilePath, String outputFilePath, long time, Events events) {\n+    private String msg;\n+\n+    public EncryptionLogEventsArgs(EncryptionAlgorithm algorithm, String originalFilePath, String outputFilePath,\n+                                   long time, Events events, String fileOrDir) {\n         this.algorithm = algorithm;\n         this.originalFilePath = originalFilePath;\n         this.outputFilePath = outputFilePath;\n         this.time = time;\n         this.event = events;\n+        this.fileOrDir = fileOrDir;\n     }\n \n-    public String getLoggerMassage(EncryptionLogEventsArgs startingEvent) {\n+    public EncryptionLogEventsArgs(String msg, Events events, long time, EncryptionAlgorithm algorithm){\n+        this.event = events;\n+        this.msg = msg;\n+        this.time = time;\n+        this.algorithm = algorithm;\n+    }\n+\n+    public String getLoggerMassage(EncryptionLogEventsArgs startingEvent, String state) {\n         String EncryptionOrDecryption = null;\n-        if (event == Events.EncryptionEnded) {\n-            EncryptionOrDecryption = \"encryption\" ;\n-        } else if (event == Events.DecryptionEnded) {\n-            EncryptionOrDecryption = \"decryption\" ;\n+        if (event == Events.EncryptionEnded || event == Events.EncryptionStarted) {\n+            EncryptionOrDecryption = \"encryption\";\n+        } else if (event == Events.DecryptionEnded || event == Events.DecryptionStarted) {\n+            EncryptionOrDecryption = \"decryption\";\n+        }\n+        if (state.equals(\"Ended\")) {\n+            return \"The \" + EncryptionOrDecryption + \" of \" + fileOrDir + \" \" + originalFilePath + \" with algorithm \" +\n+                    algorithm.getName() + \" took \" + (time - startingEvent.time) + \" ms. The output file is located in \" +\n+                    outputFilePath + \" \" + event;\n         }\n-        return \"The \" + EncryptionOrDecryption + \" of file \" + originalFilePath + \" with algorithm \" +\n-                algorithm.getName() + \" took \" + (time - startingEvent.time) + \" ms. The output file is located in \" +\n-                outputFilePath + \" \" + event;\n+        else{\n+            return \"The \" + EncryptionOrDecryption + \" of \" + fileOrDir + \" \" + originalFilePath + \" with algorithm \" +\n+                    algorithm.getName() + \" is starting\";\n+        }\n+\n+    }\n+\n+    public String getLoggerMassage(EncryptionLogEventsArgs eventsArgs){\n+        String event = eventsArgs.getEvent().toString();\n+        if (event.equals(\"Error\")){\n+            return \"An ERROR occurred at time: \" + time + \"while trying to run, when processing \" + originalFilePath +\n+                    \"destination: \" + outputFilePath + \" in algorithm: \" + algorithm;\n+        } else{\n+            return msg + \" while in \" + algorithm;\n+        }\n+    }\n+\n+    public Events getEvent() {\n+        return event;\n     }\n \n     @Override"
  },
  {
    "sha": "2a147674626bcbb418fc96a4309743d4d4e01335",
    "filename": "src/main/java/EventsLogger/EncryptionLogger.java",
    "status": "modified",
    "additions": 23,
    "deletions": 15,
    "changes": 38,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EventsLogger/EncryptionLogger.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EventsLogger/EncryptionLogger.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/EventsLogger/EncryptionLogger.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -2,14 +2,11 @@\n \n import org.apache.logging.log4j.Level;\n \n-import java.util.HashSet;\n-import java.util.Observable;\n-import java.util.Observer;\n-import java.util.Set;\n+import java.util.*;\n \n public class EncryptionLogger implements Observer {\n     private Observable observableEncryptor;\n-    private static Set<EncryptionLogEventsArgs> allEventsUntilNow = new HashSet<>();\n+    private static Map<EncryptionLogEventsArgs, EncryptionLogEventsArgs> allEventsUntilNow = new HashMap<>();\n     private final EncryptionLog4JLogger log4JLogger;\n \n     public EncryptionLogger(Observable observableEncryptor, EncryptionLog4JLogger log4JLogger) {\n@@ -26,19 +23,30 @@ public EncryptionLogger(Observable observableEncryptor) {\n     @Override\n     public void update(Observable o, Object arg) {\n         EncryptionLogEventsArgs eventsArgs = (EncryptionLogEventsArgs) arg;\n-        if (allEventsUntilNow.contains(eventsArgs)){\n-            for (EncryptionLogEventsArgs previousEvent : allEventsUntilNow){\n-                if (eventsArgs.equals(previousEvent)){\n-                    String loggerMsg = eventsArgs.getLoggerMassage(previousEvent);\n-                    if (o.equals(observableEncryptor)){\n-                        log4JLogger.writeToLogger(loggerMsg, Level.INFO);\n+        if (eventsArgs.getEvent().toString().contains(\"cryption\")) {\n+            if (allEventsUntilNow.containsKey(eventsArgs)) {\n+                EncryptionLogEventsArgs previousEvent = allEventsUntilNow.get(eventsArgs);\n+                    if (eventsArgs.equals(previousEvent)) {\n+                        String loggerMsg = eventsArgs.getLoggerMassage(previousEvent, \"Ended\");\n+                        if (o.equals(observableEncryptor)) {\n+                            log4JLogger.writeToLogger(loggerMsg, Level.INFO);\n+                        }\n                     }\n-                }\n+                allEventsUntilNow.remove(eventsArgs);\n+            } else {\n+                String loggerMsg = eventsArgs.getLoggerMassage(eventsArgs, \"Started\");\n+                log4JLogger.writeToLogger(loggerMsg, Level.INFO);\n+                allEventsUntilNow.put(eventsArgs, eventsArgs);\n+            }\n+        } else{\n+            String loggerMsg = eventsArgs.getLoggerMassage(eventsArgs);\n+            if (eventsArgs.getEvent().toString().equals(\"Error\")) {\n+                log4JLogger.writeToLogger(loggerMsg, Level.ERROR);\n+            } else {\n+                log4JLogger.writeToLogger(loggerMsg, Level.DEBUG);\n             }\n-            allEventsUntilNow.remove(eventsArgs);\n-        } else {\n-            allEventsUntilNow.add(eventsArgs);\n         }\n \n     }\n+\n }"
  },
  {
    "sha": "6227996bb9f1d717d7b50275cb1c576cfded3c9f",
    "filename": "src/main/java/EventsLogger/Events.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EventsLogger/Events.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/EventsLogger/Events.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/EventsLogger/Events.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -4,5 +4,7 @@\n     EncryptionStarted,\n     EncryptionEnded,\n     DecryptionStarted,\n-    DecryptionEnded\n+    DecryptionEnded,\n+    Error,\n+    Debug\n }"
  },
  {
    "sha": "1af665496279cc5215a81f04293cf290967619c3",
    "filename": "src/main/java/Exceptions/InvalidKeyException.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/Exceptions/InvalidKeyException.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/Exceptions/InvalidKeyException.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/Exceptions/InvalidKeyException.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -2,7 +2,7 @@\n \n public class InvalidKeyException extends Exception{\n \n-    public InvalidKeyException(String message, Throwable cause) {\n-        super(message, cause);\n+    public InvalidKeyException(String message) {\n+        super(message);\n     }\n }"
  },
  {
    "sha": "193da82df0187d63013a086d25a592831ab68145",
    "filename": "src/main/java/FileEncryptor/FileEncryptor.java",
    "status": "modified",
    "additions": 63,
    "deletions": 38,
    "changes": 101,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/FileEncryptor/FileEncryptor.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/FileEncryptor/FileEncryptor.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/FileEncryptor/FileEncryptor.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -1,93 +1,118 @@\n package FileEncryptor;\n \n import EncryptionAlgorithms.EncryptionAlgorithm;\n+import EventsLogger.EncryptionLog4JLogger;\n import EventsLogger.EncryptionLogEventsArgs;\n+import EventsLogger.EncryptionLogger;\n import EventsLogger.Events;\n import Keys.Key;\n import Utils.FileOperations;\n import Exceptions.InvalidKeyException;\n+import org.apache.logging.log4j.Level;\n \n-import java.io.File;\n import java.io.IOException;\n-import java.util.Comparator;\n import java.util.Observable;\n \n-public class FileEncryptor extends Observable {\n+public class FileEncryptor extends Observable implements Comparable<FileEncryptor> {\n \n     private String nameOfAlgorithm;\n     private EncryptionAlgorithm algorithm;\n     private FileOperations fileToEncrypt;\n     private FileOperations encryptedFile;\n     private FileOperations decryptedFile;\n     private FileOperations keyFile;\n-    private FileOperations keyFileForDouble = null;\n-    private Boolean isInDirectory = false;\n+    private final EncryptionLog4JLogger log4JLogger = new EncryptionLog4JLogger();\n+\n \n     public FileEncryptor(EncryptionAlgorithm algorithm, String pathToFile) throws IOException, NullPointerException {\n         this.algorithm = algorithm;\n         this.nameOfAlgorithm = algorithm.getNameOfEncryption();\n+        log4JLogger.writeToLogger(\"Creating FileEncryptor Instance for \" + nameOfAlgorithm, Level.DEBUG);\n         this.fileToEncrypt = new FileOperations(pathToFile);\n         this.encryptedFile = new FileOperations(fileToEncrypt.getParentPathToFile(), \"Encrypted\"+ nameOfAlgorithm);\n         this.decryptedFile = new FileOperations(fileToEncrypt.getParentPathToFile(), \"Decrypted\"+ nameOfAlgorithm);\n         this.keyFile = new FileOperations(fileToEncrypt.getParentPathToFile(), \"Key\" + nameOfAlgorithm);\n-        if (nameOfAlgorithm == \"DoubleEncryption\"){\n-            this.keyFileForDouble = new FileOperations(fileToEncrypt.getParentPathToFile(), \"SecondKey\" + nameOfAlgorithm);\n-        }\n+        addAlgorithmObserver();\n     }\n \n-    public FileEncryptor(EncryptionAlgorithm algorithm, String pathToFile, Boolean isInDirectory) throws IOException {\n-        this(algorithm, pathToFile);\n-        this.isInDirectory = true;\n+    public FileEncryptor(EncryptionAlgorithm algorithm, FileOperations fileToEncrypt, FileOperations encryptedFile,\n+                         FileOperations decryptedFile, FileOperations keyFile){\n+        this.algorithm = algorithm;\n+        this.nameOfAlgorithm = algorithm.getNameOfEncryption();\n+        this.fileToEncrypt = fileToEncrypt;\n+        this.encryptedFile = encryptedFile;\n+        this.decryptedFile = decryptedFile;\n+        this.keyFile = keyFile;\n+        addAlgorithmObserver();\n+    }\n \n+    public void addAlgorithmObserver(){\n+        algorithm.addObserver(new EncryptionLogger(algorithm));\n     }\n \n-    public void encryptFile() throws IOException, NullPointerException, InvalidKeyException {\n-        setEvent(fileToEncrypt.getPathToFile(), encryptedFile.getPathToFile(), Events.EncryptionStarted);\n-        String textToEncrypt = fileToEncrypt.readFromFile();\n-        Key key = new Key();\n-        try {\n-            int k = (int)key.getKey();\n-        } catch (ClassCastException e){\n-            throw new InvalidKeyException(\"Invalid key, not an int\", e);\n+    public int generateKey(FileOperations keyFile, boolean isDir) throws InvalidKeyException, IOException {\n+        int k;\n+        if (!isDir){\n+            Key key = new Key();\n+            try {\n+                k = (int) key.getKey();\n+            } catch (ClassCastException e){\n+                setEvent(\"Error in casting key\", Events.Error);\n+                throw new InvalidKeyException(\"Invalid key, not an int\");\n+            }\n+            keyFile.writeToFile(Integer.toString(key.getKey()));\n+        } else {\n+            k = Integer.parseInt(keyFile.readFromFile().strip());\n         }\n-        String encryptedData = algorithm.encryptFile(textToEncrypt, key.getKey());\n-        encryptedFile.writeToFile(encryptedData);\n-        keyFile.writeToFile(Integer.toString(key.getKey()));\n+        return k;\n+    }\n+\n+\n+    public void encryptFile(Boolean isDir) throws IOException, InvalidKeyException {\n+        String textToEncrypt = fileToEncrypt.readFromFile();\n+        setEvent(fileToEncrypt.getPathToFile(), encryptedFile.getPathToFile(), Events.EncryptionStarted);\n+        String encryptedData = algorithm.encryptString(textToEncrypt, generateKey(keyFile, isDir));\n         setEvent(fileToEncrypt.getPathToFile(), encryptedFile.getPathToFile(), Events.EncryptionEnded);\n+        encryptedFile.writeToFile(encryptedData);\n+        setEvent(\"Saving encryption results to file and key to key file for algorithm: \" + nameOfAlgorithm, Events.Debug);\n     }\n \n     public void decryptFile() throws IOException, NullPointerException {\n-        setEvent(encryptedFile.getPathToFile(), decryptedFile.getPathToFile(), Events.DecryptionStarted);\n         int key = Integer.parseInt(keyFile.readFromFile().strip());\n         String dataToDecrypt = encryptedFile.readFromFile();\n-        String decryptedData = algorithm.decryptFile(dataToDecrypt, key);\n-        decryptedFile.writeToFile(decryptedData);\n+        setEvent(encryptedFile.getPathToFile(), decryptedFile.getPathToFile(), Events.DecryptionStarted);\n+        String decryptedData = algorithm.decryptString(dataToDecrypt, key);\n         setEvent(encryptedFile.getPathToFile(), decryptedFile.getPathToFile(), Events.DecryptionEnded);\n+        decryptedFile.writeToFile(decryptedData);\n     }\n \n     public String getPathToDecryptedFile(){\n         return this.decryptedFile.getPathToFile();\n     }\n \n-    public static class Compare implements Comparator<FileEncryptor> {\n-        @Override\n-        public int compare(FileEncryptor o1, FileEncryptor o2) {\n-            try {\n-                return o1.algorithm.getKeyStrength(Integer.parseInt(o1.keyFile.readFromFile().strip())) -\n-                        o2.algorithm.getKeyStrength(Integer.parseInt(o2.keyFile.readFromFile().strip()));\n-            } catch (IOException e) {\n-                e.printStackTrace();\n-                return 0;\n-            }\n-        }\n-    }\n \n     public void setEvent(String originalPath, String outputFile, Events event){\n         long time = System.currentTimeMillis();\n-        EncryptionLogEventsArgs eventsArgs = new EncryptionLogEventsArgs(algorithm, originalPath, outputFile, time, event);\n+        EncryptionLogEventsArgs eventsArgs = new EncryptionLogEventsArgs(this.algorithm, originalPath, outputFile, time, event, \"file\");\n         setChanged();\n         notifyObservers(eventsArgs);\n     }\n \n+    public void setEvent(String massage, Events event){\n+        long time = System.currentTimeMillis();\n+        EncryptionLogEventsArgs eventsArgs = new EncryptionLogEventsArgs(massage, event, time, this.algorithm);\n+        setChanged();\n+        notifyObservers(eventsArgs);\n+    }\n \n+    @Override\n+    public int compareTo(FileEncryptor o) {\n+        try {\n+            return this.algorithm.getKeyStrength(Integer.parseInt(this.keyFile.readFromFile().strip())) -\n+                    o.algorithm.getKeyStrength(Integer.parseInt(o.keyFile.readFromFile().strip()));\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+            return 0;\n+        }\n+    }\n }"
  },
  {
    "sha": "630fd1208c4cb2b1f8c516bb6ec0f9033516955d",
    "filename": "src/main/java/Keys/Key.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/Keys/Key.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/Keys/Key.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/Keys/Key.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -1,15 +1,20 @@\n package Keys;\n \n+import EventsLogger.EncryptionLog4JLogger;\n+import org.apache.logging.log4j.Level;\n+\n import java.security.SecureRandom;\n \n public class Key {\n+    private final EncryptionLog4JLogger log4JLogger = new EncryptionLog4JLogger();\n     private int key;\n \n     public Key() {\n+        log4JLogger.writeToLogger(\"Generating a new key\", Level.DEBUG);\n         SecureRandom secureRandomNumber = new SecureRandom();\n         while (true) {\n             int number = secureRandomNumber.nextInt(26);\n-            if (coPrime(number, 26)) {\n+            if (coPrime(number, 26) && number !=7) {\n                 this.key = number;\n                 break;\n             }"
  },
  {
    "sha": "7e6055827d09674dbb159b722929b72b748155ff",
    "filename": "src/main/java/Main.java",
    "status": "modified",
    "additions": 36,
    "deletions": 12,
    "changes": 48,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/Main.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/Main.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/Main.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -1,25 +1,49 @@\n+import DirectoryEncryptor.ASyncDirectoryEncryptor;\n+import DirectoryEncryptor.ASyncDirectoryProcessor;\n+import DirectoryEncryptor.SyncDirectoryProcessor;\n import EncryptionAlgorithms.*;\n+import EventsLogger.EncryptionLogger;\n import Exceptions.InvalidKeyException;\n import FileEncryptor.FileEncryptor;\n+import Utils.FileOperations;\n \n import java.io.IOException;\n import java.util.ArrayList;\n \n public class Main {\n     public static void main(String[] args) throws IOException, InvalidKeyException {\n-        String pathToFile = \"C:\\\\Users\\\\ofeko\\\\IdeaProjects\\\\EncryptionProject\\\\src\\\\main\\\\resources\\\\Hi.txt\";\n-        ArrayList<FileEncryptor> fileEncryptors = new ArrayList<>();\n-\n-        fileEncryptors.add(new FileEncryptor(new ShiftUpEncryption(), pathToFile));\n-        fileEncryptors.add(new FileEncryptor(new ShiftMultiplyEncryption(), pathToFile));\n-        fileEncryptors.add(new FileEncryptor(new RepeatEncryption(new ShiftUpEncryption(), 2), pathToFile));\n-        fileEncryptors.add(new FileEncryptor(new XorEncryption(), pathToFile));\n-        fileEncryptors.add(new FileEncryptor(new DoubleEncryption(new ShiftUpEncryption(), new ShiftMultiplyEncryption()), pathToFile));\n-\n-        for (FileEncryptor fileEncryptor : fileEncryptors) {\n-            fileEncryptor.encryptFile();\n-            fileEncryptor.decryptFile();\n+        try {\n+            String pathToFile = \"C:\\\\Users\\\\ofeko\\\\IdeaProjects\\\\EncryptionProject\\\\src\\\\main\\\\resources\";\n+            FileOperations keyFile = new FileOperations(\"C:\\\\Users\\\\ofeko\\\\IdeaProjects\\\\EncryptionProject\\\\src\\\\main\\\\resources\\\\SyncDirectoryKeyShiftUp.txt\");\n+            SyncDirectoryProcessor directoryProcessor = new SyncDirectoryProcessor(pathToFile, new ShiftUpEncryption());\n+\n+            directoryProcessor.addObserver(new EncryptionLogger(directoryProcessor));\n+\n+            directoryProcessor.encryptDirectory();\n+            directoryProcessor.decryptDirectory();\n+\n+            ASyncDirectoryEncryptor directoryProcessor1 = new ASyncDirectoryEncryptor(pathToFile, keyFile, new ShiftUpEncryption());\n+\n+            directoryProcessor1.addObserver(new EncryptionLogger(directoryProcessor1));\n+\n+            directoryProcessor1.encryptDirectory();\n+            directoryProcessor1.decryptDirectory();\n+        } catch (Exception e){\n+            e.printStackTrace();\n         }\n \n+//        ArrayList<FileEncryptor> fileEncryptors = new ArrayList<>();\n+//\n+//        fileEncryptors.add(new FileEncryptor(new ShiftUpEncryption(), pathToFile));\n+//        fileEncryptors.add(new FileEncryptor(new ShiftMultiplyEncryption(), pathToFile));\n+//        fileEncryptors.add(new FileEncryptor(new RepeatEncryption(new ShiftUpEncryption(), 2), pathToFile));\n+//        fileEncryptors.add(new FileEncryptor(new XorEncryption(), pathToFile));\n+//        fileEncryptors.add(new FileEncryptor(new DoubleEncryption(new ShiftUpEncryption(), new ShiftMultiplyEncryption()), pathToFile));\n+//\n+//        for (FileEncryptor fileEncryptor : fileEncryptors) {\n+//            fileEncryptor.encryptFile(false);\n+//            fileEncryptor.decryptFile();\n+//        }\n+\n     }\n }"
  },
  {
    "sha": "52d73094861b4b28166cc4bfe030b588cd1858ac",
    "filename": "src/main/java/Utils/FileOperations.java",
    "status": "modified",
    "additions": 34,
    "deletions": 7,
    "changes": 41,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/Utils/FileOperations.java",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/java/Utils/FileOperations.java",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/java/Utils/FileOperations.java?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "patch": "@@ -1,9 +1,6 @@\n package Utils;\n \n-import java.io.File;\n-import java.io.FileNotFoundException;\n-import java.io.FileWriter;\n-import java.io.IOException;\n+import java.io.*;\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Paths;\n@@ -14,17 +11,31 @@\n     private File myFile;\n     private String pathToFile;\n     private String parentPathToFile;\n+    private String fileName;\n \n     public FileOperations(String pathToFile, String nameOfFile) throws IOException, NullPointerException{\n         myFile = createFile(pathToFile, nameOfFile);\n         this.pathToFile = myFile.getPath();\n         this.parentPathToFile = myFile.getAbsoluteFile().getParent();\n+        this.fileName = myFile.getName();\n+    }\n+\n+    public FileOperations(String pathToDir, String nameOfDir, Boolean isDir){\n+        myFile = createDirectory(pathToDir, nameOfDir);\n+        this.pathToFile = myFile.getPath();\n+        this.parentPathToFile = myFile.getAbsoluteFile().getParent();\n+        this.fileName = myFile.getName();\n     }\n \n     public FileOperations(String pathToFile){\n         this.myFile = new File(pathToFile);\n         this.pathToFile = myFile.getPath();\n         this.parentPathToFile = myFile.getAbsoluteFile().getParent();\n+        this.fileName = myFile.getName();\n+    }\n+\n+    public String getFileName() {\n+        return fileName;\n     }\n \n     public String getPathToFile() {\n@@ -38,9 +49,9 @@ public String getParentPathToFile() {\n     public File createFile(String pathToFile, String nameOfFile) throws IOException, NullPointerException {\n         File newFile = new File(pathToFile + File.separator + nameOfFile + \".txt\");\n         if (newFile.createNewFile()){\n-            System.out.println(\"New file created : \" + newFile.getName());\n+//            System.out.println(\"New file created : \" + newFile.getName());\n         } else {\n-            System.out.println(\"File already exist, overriding the file\");\n+//            System.out.println(\"File already exist, overriding the file\");\n         }\n         return newFile;\n     }\n@@ -64,7 +75,7 @@ public String readFromFile() throws FileNotFoundException, NullPointerException\n         return stringBuffer.toString();\n     }\n \n-    public boolean compareFiles(String pathToFileOne, String pathToFileTwo) throws IOException, NullPointerException {\n+    public boolean compareFilesByString(String pathToFileOne, String pathToFileTwo) throws IOException, NullPointerException {\n         byte[] file1Bytes = Files.readAllBytes(Paths.get(pathToFileOne));\n         byte[] file2Bytes = Files.readAllBytes(Paths.get(pathToFileTwo));\n \n@@ -74,4 +85,20 @@ public boolean compareFiles(String pathToFileOne, String pathToFileTwo) throws I\n         return file1.equals(file2);\n     }\n \n+    public File createDirectory(String pathToDirectory, String nameOfDirectory){\n+        File newDir = new File(pathToDirectory + File.separator + nameOfDirectory);\n+        if (newDir.mkdir()){\n+//            System.out.println(\"New directory Created: \" + newDir.getName());\n+        } else {\n+//            System.out.println(\"Directory already exist, overriding it\");\n+        }\n+        return newDir;\n+    }\n+\n+\n+    public String[] getFilesFromDirectoryTxt(){\n+        FilenameFilter filter = (dir, name) -> (name.endsWith(\".txt\"));\n+        return this.myFile.list(filter);\n+    }\n+\n }"
  },
  {
    "sha": "31dc17310a91668942ebff063b91d0eca7bded03",
    "filename": "src/main/resources/DecryptedShiftMultiply.txt",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/DecryptedShiftMultiply.txt",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/DecryptedShiftMultiply.txt",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/resources/DecryptedShiftMultiply.txt?ref=343a2c812d6b478ee105a44cb913de91e12c42b4",
    "patch": "@@ -1,6 +0,0 @@\n-Hi!\n-whats up?\n-\n-how are you doing?\n-\n-this is an example\n\\ No newline at end of file"
  },
  {
    "sha": "31dc17310a91668942ebff063b91d0eca7bded03",
    "filename": "src/main/resources/DecryptedShiftUp.txt",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/DecryptedShiftUp.txt",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/DecryptedShiftUp.txt",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/resources/DecryptedShiftUp.txt?ref=343a2c812d6b478ee105a44cb913de91e12c42b4",
    "patch": "@@ -1,6 +0,0 @@\n-Hi!\n-whats up?\n-\n-how are you doing?\n-\n-this is an example\n\\ No newline at end of file"
  },
  {
    "sha": "31dc17310a91668942ebff063b91d0eca7bded03",
    "filename": "src/main/resources/DecryptedXorEncryption.txt",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/DecryptedXorEncryption.txt",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/DecryptedXorEncryption.txt",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/resources/DecryptedXorEncryption.txt?ref=343a2c812d6b478ee105a44cb913de91e12c42b4",
    "patch": "@@ -1,6 +0,0 @@\n-Hi!\n-whats up?\n-\n-how are you doing?\n-\n-this is an example\n\\ No newline at end of file"
  },
  {
    "sha": "f11c82a4cb6cc2e8f3bdf52b5cdeaad4d5bb214e",
    "filename": "src/main/resources/DirectoryKeyShiftUp.txt",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/resources/DirectoryKeyShiftUp.txt",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/3a877a19391eb5399e4cb2973e5271d4e648552b/src/main/resources/DirectoryKeyShiftUp.txt",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/resources/DirectoryKeyShiftUp.txt?ref=3a877a19391eb5399e4cb2973e5271d4e648552b",
    "previous_filename": "src/main/resources/KeyXorEncryption.txt"
  },
  {
    "sha": "3d8a1ec9a4c757256adc77a4c420574d6a98553f",
    "filename": "src/main/resources/EncryptedDoubleEncryption.txt",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/EncryptedDoubleEncryption.txt",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/EncryptedDoubleEncryption.txt",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/resources/EncryptedDoubleEncryption.txt?ref=343a2c812d6b478ee105a44cb913de91e12c42b4",
    "patch": "@@ -1,6 +0,0 @@\n-Kh!\n-rkfad xm?\n-\n-kpr fgt lpx wphsn?\n-\n-akhd hd fs tofvmyt\n\\ No newline at end of file"
  },
  {
    "sha": "32be86f23fd2e05514758e083747ff9041cef998",
    "filename": "src/main/resources/EncryptedRepeatEncryption.txt",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/EncryptedRepeatEncryption.txt",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/EncryptedRepeatEncryption.txt",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/resources/EncryptedRepeatEncryption.txt?ref=343a2c812d6b478ee105a44cb913de91e12c42b4",
    "patch": "@@ -1,6 +0,0 @@\n-Ts!\n-etahi gl?\n-\n-tme ajw cmg xmsnu?\n-\n-htsi si an wdaolpw\n\\ No newline at end of file"
  },
  {
    "sha": "a941f44298713633395eafe491ede56d363e2ff4",
    "filename": "src/main/resources/EncryptedShiftMultiply.txt",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/EncryptedShiftMultiply.txt",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/EncryptedShiftMultiply.txt",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/resources/EncryptedShiftMultiply.txt?ref=343a2c812d6b478ee105a44cb913de91e12c42b4",
    "patch": "@@ -1,6 +0,0 @@\n-Pg!\n-kpalu cv?\n-\n-pek adq sec zegny?\n-\n-lpgu gu an qbawvfq\n\\ No newline at end of file"
  },
  {
    "sha": "9b5753a6990e78fd17f4f0450d8f27805fb30091",
    "filename": "src/main/resources/EncryptedShiftUp.txt",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/EncryptedShiftUp.txt",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/EncryptedShiftUp.txt",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/resources/EncryptedShiftUp.txt?ref=343a2c812d6b478ee105a44cb913de91e12c42b4",
    "patch": "@@ -1,6 +0,0 @@\n-Gh!\n-vgzsr to?\n-\n-gnv zqd xnt cnhmf?\n-\n-sghr hr zm dwzlokd\n\\ No newline at end of file"
  },
  {
    "sha": "9e4ecd858fab56724660efc3d724f616e7402297",
    "filename": "src/main/resources/EncryptedXorEncryption.txt",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/OfekPoraz/EncryptionProject/blob/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/EncryptedXorEncryption.txt",
    "raw_url": "https://github.com/OfekPoraz/EncryptionProject/raw/343a2c812d6b478ee105a44cb913de91e12c42b4/src/main/resources/EncryptedXorEncryption.txt",
    "contents_url": "https://api.github.com/repos/OfekPoraz/EncryptionProject/contents/src/main/resources/EncryptedXorEncryption.txt?ref=343a2c812d6b478ee105a44cb913de91e12c42b4",
    "patch": "@@ -1 +0,0 @@\n-A`(\u0004\u0003~ah}z)|y6\u0004\u0003\u0004\u0003af~)h{l)pf|)mf`gn6\u0004\u0003\u0004\u0003}a`z)`z)hg)lqhdyel\n\\ No newline at end of file"
  }
]
