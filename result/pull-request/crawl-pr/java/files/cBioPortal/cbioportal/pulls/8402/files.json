[
  {
    "sha": "d857b0051dbecdd695a9736c4aca9178c73e06a1",
    "filename": "web/src/main/java/org/cbioportal/web/ClinicalAttributeController.java",
    "status": "modified",
    "additions": 0,
    "deletions": 29,
    "changes": 29,
    "blob_url": "https://github.com/cBioPortal/cbioportal/blob/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/ClinicalAttributeController.java",
    "raw_url": "https://github.com/cBioPortal/cbioportal/raw/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/ClinicalAttributeController.java",
    "contents_url": "https://api.github.com/repos/cBioPortal/cbioportal/contents/web/src/main/java/org/cbioportal/web/ClinicalAttributeController.java?ref=cbd40f2ed28811c1943da271f75afe542ddf7d67",
    "patch": "@@ -148,33 +148,4 @@\n         }\n     }\n \n-    @PreAuthorize(\"hasPermission(#involvedCancerStudies, 'Collection<CancerStudyId>', 'read')\")\n-    @RequestMapping(value = \"/clinical-attributes/counts/fetch\", method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE,\n-                    produces = MediaType.APPLICATION_JSON_VALUE)\n-    @ApiOperation(\"Get counts for clinical attributes according to their data availability for selected samples/patients\")\n-    public ResponseEntity<List<ClinicalAttributeCount>> getClinicalAttributeCounts(\n-        @ApiIgnore // prevent reference to this attribute in the swagger-ui interface\n-        @RequestAttribute(required = false, value = \"involvedCancerStudies\") Collection<String> involvedCancerStudies,\n-        @ApiIgnore // prevent reference to this attribute in the swagger-ui interface. this attribute is needed for the @PreAuthorize tag above.\n-        @Valid @RequestAttribute(required = false, value = \"interceptedClinicalAttributeCountFilter\") ClinicalAttributeCountFilter interceptedClinicalAttributeCountFilter,\n-            @ApiParam(required = true, value = \"List of SampleIdentifiers or Sample List ID\")\n-            @Valid @RequestBody(required = false) ClinicalAttributeCountFilter clinicalAttributeCountFilter) {\n-\n-        List<ClinicalAttributeCount> clinicalAttributeCountList;\n-        if (interceptedClinicalAttributeCountFilter.getSampleListId() != null) {\n-            clinicalAttributeCountList = clinicalAttributeService.getClinicalAttributeCountsBySampleListId(\n-                interceptedClinicalAttributeCountFilter.getSampleListId());\n-        } else {\n-            List<SampleIdentifier> sampleIdentifiers = interceptedClinicalAttributeCountFilter.getSampleIdentifiers();\n-            List<String> studyIds = new ArrayList<>();\n-            List<String> sampleIds = new ArrayList<>();\n-            for (SampleIdentifier sampleIdentifier : sampleIdentifiers) {\n-                studyIds.add(sampleIdentifier.getStudyId());\n-                sampleIds.add(sampleIdentifier.getSampleId());\n-            }\n-            clinicalAttributeCountList = clinicalAttributeService.getClinicalAttributeCountsBySampleIds(studyIds, sampleIds);\n-        }\n-\n-        return new ResponseEntity<>(clinicalAttributeCountList, HttpStatus.OK);\n-    }\n }"
  },
  {
    "sha": "af52b16b7f1b70f794178646ba17d9910ac65a85",
    "filename": "web/src/main/java/org/cbioportal/web/ClinicalAttributeCountController.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/cBioPortal/cbioportal/blob/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/ClinicalAttributeCountController.java",
    "raw_url": "https://github.com/cBioPortal/cbioportal/raw/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/ClinicalAttributeCountController.java",
    "contents_url": "https://api.github.com/repos/cBioPortal/cbioportal/contents/web/src/main/java/org/cbioportal/web/ClinicalAttributeCountController.java?ref=cbd40f2ed28811c1943da271f75afe542ddf7d67",
    "patch": "@@ -0,0 +1,78 @@\n+package org.cbioportal.web;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import java.util.*;\n+import javax.validation.constraints.Max;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.Size;\n+import javax.validation.Valid;\n+import org.cbioportal.model.ClinicalAttribute;\n+import org.cbioportal.model.ClinicalAttributeCount;\n+import org.cbioportal.service.ClinicalAttributeService;\n+import org.cbioportal.service.exception.ClinicalAttributeNotFoundException;\n+import org.cbioportal.service.exception.StudyNotFoundException;\n+import org.cbioportal.web.config.annotation.InternalApi;\n+import org.cbioportal.web.parameter.ClinicalAttributeCountFilter;\n+import org.cbioportal.web.parameter.Direction;\n+import org.cbioportal.web.parameter.HeaderKeyConstants;\n+import org.cbioportal.web.parameter.PagingConstants;\n+import org.cbioportal.web.parameter.Projection;\n+import org.cbioportal.web.parameter.SampleIdentifier;\n+import org.cbioportal.web.parameter.sort.ClinicalAttributeSortBy;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.validation.annotation.Validated;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestAttribute;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+import springfox.documentation.annotations.ApiIgnore;\n+\n+@InternalApi\n+@RestController\n+@Validated\n+@Api(tags = \"Clinical Attributes Count\", description = \" \")\n+public class ClinicalAttributeCountController {\n+\n+    @Autowired\n+    private ClinicalAttributeService clinicalAttributeService;\n+ \n+    @PreAuthorize(\"hasPermission(#involvedCancerStudies, 'Collection<CancerStudyId>', 'read')\")\n+    @RequestMapping(value = \"/clinical-attributes/counts/fetch\", method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE,\n+                    produces = MediaType.APPLICATION_JSON_VALUE)\n+    @ApiOperation(\"Get counts for clinical attributes according to their data availability for selected samples/patients\")\n+    public ResponseEntity<List<ClinicalAttributeCount>> getClinicalAttributeCounts(\n+        @ApiIgnore // prevent reference to this attribute in the swagger-ui interface\n+        @RequestAttribute(required = false, value = \"involvedCancerStudies\") Collection<String> involvedCancerStudies,\n+        @ApiIgnore // prevent reference to this attribute in the swagger-ui interface. this attribute is needed for the @PreAuthorize tag above.\n+        @Valid @RequestAttribute(required = false, value = \"interceptedClinicalAttributeCountFilter\") ClinicalAttributeCountFilter interceptedClinicalAttributeCountFilter,\n+            @ApiParam(required = true, value = \"List of SampleIdentifiers or Sample List ID\")\n+            @Valid @RequestBody(required = false) ClinicalAttributeCountFilter clinicalAttributeCountFilter) {\n+\n+        List<ClinicalAttributeCount> clinicalAttributeCountList;\n+        if (interceptedClinicalAttributeCountFilter.getSampleListId() != null) {\n+            clinicalAttributeCountList = clinicalAttributeService.getClinicalAttributeCountsBySampleListId(\n+                interceptedClinicalAttributeCountFilter.getSampleListId());\n+        } else {\n+            List<SampleIdentifier> sampleIdentifiers = interceptedClinicalAttributeCountFilter.getSampleIdentifiers();\n+            List<String> studyIds = new ArrayList<>();\n+            List<String> sampleIds = new ArrayList<>();\n+            for (SampleIdentifier sampleIdentifier : sampleIdentifiers) {\n+                studyIds.add(sampleIdentifier.getStudyId());\n+                sampleIds.add(sampleIdentifier.getSampleId());\n+            }\n+            clinicalAttributeCountList = clinicalAttributeService.getClinicalAttributeCountsBySampleIds(studyIds, sampleIds);\n+        }\n+\n+        return new ResponseEntity<>(clinicalAttributeCountList, HttpStatus.OK);\n+    }\n+}"
  },
  {
    "sha": "3b46f99504bb000086bdd6837693831013017983",
    "filename": "web/src/main/java/org/cbioportal/web/ClinicalEventController.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/cBioPortal/cbioportal/blob/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/ClinicalEventController.java",
    "raw_url": "https://github.com/cBioPortal/cbioportal/raw/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/ClinicalEventController.java",
    "contents_url": "https://api.github.com/repos/cBioPortal/cbioportal/contents/web/src/main/java/org/cbioportal/web/ClinicalEventController.java?ref=cbd40f2ed28811c1943da271f75afe542ddf7d67",
    "patch": "@@ -7,8 +7,7 @@\n import org.cbioportal.service.ClinicalEventService;\n import org.cbioportal.service.exception.PatientNotFoundException;\n import org.cbioportal.service.exception.StudyNotFoundException;\n-import org.cbioportal.web.config.PublicApiTags;\n-import org.cbioportal.web.config.annotation.PublicApi;\n+import org.cbioportal.web.config.annotation.InternalApi;\n import org.cbioportal.web.parameter.Direction;\n import org.cbioportal.web.parameter.HeaderKeyConstants;\n import org.cbioportal.web.parameter.PagingConstants;\n@@ -31,10 +30,10 @@\n import javax.validation.constraints.Min;\n import java.util.List;\n \n-@PublicApi\n+@InternalApi\n @RestController\n @Validated\n-@Api(tags = PublicApiTags.CLINICAL_EVENTS, description = \" \")\n+@Api(tags = \"Clinical Events\", description = \" \")\n public class ClinicalEventController {\n \n     @Autowired"
  },
  {
    "sha": "53b2e5bc9d876dc4c5e2aba5be4eb65f331d4e06",
    "filename": "web/src/main/java/org/cbioportal/web/DiscreteCopyNumberController.java",
    "status": "modified",
    "additions": 0,
    "deletions": 27,
    "changes": 27,
    "blob_url": "https://github.com/cBioPortal/cbioportal/blob/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/DiscreteCopyNumberController.java",
    "raw_url": "https://github.com/cBioPortal/cbioportal/raw/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/DiscreteCopyNumberController.java",
    "contents_url": "https://api.github.com/repos/cBioPortal/cbioportal/contents/web/src/main/java/org/cbioportal/web/DiscreteCopyNumberController.java?ref=cbd40f2ed28811c1943da271f75afe542ddf7d67",
    "patch": "@@ -40,8 +40,6 @@\n @Api(tags = PublicApiTags.DISCRETE_COPY_NUMBER_ALTERATIONS, description = \" \")\n public class DiscreteCopyNumberController {\n \n-    private static final int COPY_NUMBER_COUNT_MAX_PAGE_SIZE = 50000;\n-\n     @Autowired\n     private DiscreteCopyNumberService discreteCopyNumberService;\n \n@@ -122,29 +120,4 @@\n         }\n     }\n \n-    @PreAuthorize(\"hasPermission(#molecularProfileId, 'MolecularProfileId', 'read')\")\n-    @RequestMapping(value = \"/molecular-profiles/{molecularProfileId}/discrete-copy-number-counts/fetch\",\n-        method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE,\n-        produces = MediaType.APPLICATION_JSON_VALUE)\n-    @ApiOperation(\"Get counts of specific genes and alterations within a CNA molecular profile\")\n-    public ResponseEntity<List<CopyNumberCount>> fetchCopyNumberCounts(\n-        @ApiParam(required = true, value = \"Molecular Profile ID e.g. acc_tcga_gistic\")\n-        @PathVariable String molecularProfileId,\n-        @ApiParam(required = true, value = \"List of copy number count identifiers\")\n-        @Size(min = 1, max = COPY_NUMBER_COUNT_MAX_PAGE_SIZE)\n-        @RequestBody List<CopyNumberCountIdentifier> copyNumberCountIdentifiers)\n-        throws MolecularProfileNotFoundException {\n-\n-        List<Integer> entrezGeneIds = new ArrayList<>();\n-        List<Integer> alterations = new ArrayList<>();\n-\n-        for (CopyNumberCountIdentifier copyNumberCountIdentifier : copyNumberCountIdentifiers) {\n-\n-            entrezGeneIds.add(copyNumberCountIdentifier.getEntrezGeneId());\n-            alterations.add(copyNumberCountIdentifier.getAlteration());\n-        }\n-\n-        return new ResponseEntity<>(discreteCopyNumberService.fetchCopyNumberCounts(molecularProfileId, entrezGeneIds,\n-            alterations), HttpStatus.OK);\n-    }\n }"
  },
  {
    "sha": "e4ee228dc793dfa49b22b38e2825c1cb01a72fbe",
    "filename": "web/src/main/java/org/cbioportal/web/DiscreteCopyNumberCountController.java",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/cBioPortal/cbioportal/blob/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/DiscreteCopyNumberCountController.java",
    "raw_url": "https://github.com/cBioPortal/cbioportal/raw/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/DiscreteCopyNumberCountController.java",
    "contents_url": "https://api.github.com/repos/cBioPortal/cbioportal/contents/web/src/main/java/org/cbioportal/web/DiscreteCopyNumberCountController.java?ref=cbd40f2ed28811c1943da271f75afe542ddf7d67",
    "patch": "@@ -0,0 +1,73 @@\n+package org.cbioportal.web;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import org.cbioportal.model.CopyNumberCount;\n+import org.cbioportal.model.DiscreteCopyNumberData;\n+import org.cbioportal.model.meta.BaseMeta;\n+import org.cbioportal.service.DiscreteCopyNumberService;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.web.config.PublicApiTags;\n+import org.cbioportal.web.config.annotation.InternalApi;\n+import org.cbioportal.web.parameter.CopyNumberCountIdentifier;\n+import org.cbioportal.web.parameter.DiscreteCopyNumberEventType;\n+import org.cbioportal.web.parameter.DiscreteCopyNumberFilter;\n+import org.cbioportal.web.parameter.HeaderKeyConstants;\n+import org.cbioportal.web.parameter.Projection;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.validation.annotation.Validated;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+\n+import javax.validation.Valid;\n+import javax.validation.constraints.Size;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@InternalApi\n+@RestController\n+@Validated\n+@Api(tags = \"Discrete Copy Number Alteration Counts\", description = \" \")\n+public class DiscreteCopyNumberCountController {\n+    \n+    private static final int COPY_NUMBER_COUNT_MAX_PAGE_SIZE = 50000;\n+    \n+    @Autowired\n+    private DiscreteCopyNumberService discreteCopyNumberService;\n+\n+    @PreAuthorize(\"hasPermission(#molecularProfileId, 'MolecularProfileId', 'read')\")\n+    @RequestMapping(value = \"/molecular-profiles/{molecularProfileId}/discrete-copy-number-counts/fetch\",\n+        method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_VALUE,\n+        produces = MediaType.APPLICATION_JSON_VALUE)\n+    @ApiOperation(\"Get counts of specific genes and alterations within a CNA molecular profile\")\n+    public ResponseEntity<List<CopyNumberCount>> fetchCopyNumberCounts(\n+        @ApiParam(required = true, value = \"Molecular Profile ID e.g. acc_tcga_gistic\")\n+        @PathVariable String molecularProfileId,\n+        @ApiParam(required = true, value = \"List of copy number count identifiers\")\n+        @Size(min = 1, max = COPY_NUMBER_COUNT_MAX_PAGE_SIZE)\n+        @RequestBody List<CopyNumberCountIdentifier> copyNumberCountIdentifiers)\n+        throws MolecularProfileNotFoundException {\n+\n+        List<Integer> entrezGeneIds = new ArrayList<>();\n+        List<Integer> alterations = new ArrayList<>();\n+\n+        for (CopyNumberCountIdentifier copyNumberCountIdentifier : copyNumberCountIdentifiers) {\n+\n+            entrezGeneIds.add(copyNumberCountIdentifier.getEntrezGeneId());\n+            alterations.add(copyNumberCountIdentifier.getAlteration());\n+        }\n+\n+        return new ResponseEntity<>(discreteCopyNumberService.fetchCopyNumberCounts(molecularProfileId, entrezGeneIds,\n+            alterations), HttpStatus.OK);\n+    }\n+}"
  },
  {
    "sha": "01a3c0a90af912d02f613d3a96188aa4f3d9b7c4",
    "filename": "web/src/main/java/org/cbioportal/web/MutationController.java",
    "status": "modified",
    "additions": 0,
    "deletions": 22,
    "changes": 22,
    "blob_url": "https://github.com/cBioPortal/cbioportal/blob/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/MutationController.java",
    "raw_url": "https://github.com/cBioPortal/cbioportal/raw/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/MutationController.java",
    "contents_url": "https://api.github.com/repos/cBioPortal/cbioportal/contents/web/src/main/java/org/cbioportal/web/MutationController.java?ref=cbd40f2ed28811c1943da271f75afe542ddf7d67",
    "patch": "@@ -215,28 +215,6 @@\n         }\n     }\n \n-    @RequestMapping(value = \"/mutation-counts-by-position/fetch\", method = RequestMethod.POST,\n-        consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)\n-    @ApiOperation(\"Fetch mutation counts in all studies by gene and position\")\n-    public ResponseEntity<List<MutationCountByPosition>> fetchMutationCountsByPosition(\n-        @ApiParam(required = true, value = \"List of gene and positions\")\n-        @Size(min = 1, max = MUTATION_MAX_PAGE_SIZE)\n-        @RequestBody List<MutationPositionIdentifier> mutationPositionIdentifiers) {\n-\n-        List<Integer> entrezGeneIds = new ArrayList<>();\n-        List<Integer> proteinPosStarts = new ArrayList<>();\n-        List<Integer> proteinPosEnds = new ArrayList<>();\n-        for (MutationPositionIdentifier mutationPositionIdentifier : mutationPositionIdentifiers) {\n-\n-            entrezGeneIds.add(mutationPositionIdentifier.getEntrezGeneId());\n-            proteinPosStarts.add(mutationPositionIdentifier.getProteinPosStart());\n-            proteinPosEnds.add(mutationPositionIdentifier.getProteinPosEnd());\n-        }\n-\n-        return new ResponseEntity<>(mutationService.fetchMutationCountsByPosition(entrezGeneIds, proteinPosStarts,\n-            proteinPosEnds), HttpStatus.OK);\n-    }\n-\n     private void extractMolecularProfileAndSampleIds(MutationMultipleStudyFilter mutationMultipleStudyFilter,\n                                                      List<String> molecularProfileIds, List<String> sampleIds) {\n "
  },
  {
    "sha": "8afcfcffc351bc986c65df5f96df1feb52433326",
    "filename": "web/src/main/java/org/cbioportal/web/MutationCountController.java",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/cBioPortal/cbioportal/blob/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/MutationCountController.java",
    "raw_url": "https://github.com/cBioPortal/cbioportal/raw/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/MutationCountController.java",
    "contents_url": "https://api.github.com/repos/cBioPortal/cbioportal/contents/web/src/main/java/org/cbioportal/web/MutationCountController.java?ref=cbd40f2ed28811c1943da271f75afe542ddf7d67",
    "patch": "@@ -0,0 +1,79 @@\n+package org.cbioportal.web;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import org.cbioportal.model.meta.MutationMeta;\n+import org.cbioportal.model.Mutation;\n+import org.cbioportal.model.MutationCountByPosition;\n+import org.cbioportal.service.exception.MolecularProfileNotFoundException;\n+import org.cbioportal.service.MolecularProfileService;\n+import org.cbioportal.service.MutationService;\n+import org.cbioportal.web.config.PublicApiTags;\n+import org.cbioportal.web.config.annotation.InternalApi;\n+import org.cbioportal.web.parameter.Direction;\n+import org.cbioportal.web.parameter.HeaderKeyConstants;\n+import org.cbioportal.web.parameter.MutationFilter;\n+import org.cbioportal.web.parameter.MutationMultipleStudyFilter;\n+import org.cbioportal.web.parameter.MutationPositionIdentifier;\n+import org.cbioportal.web.parameter.PagingConstants;\n+import org.cbioportal.web.parameter.Projection;\n+import org.cbioportal.web.parameter.SampleMolecularIdentifier;\n+import org.cbioportal.web.parameter.sort.MutationSortBy;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.validation.annotation.Validated;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestAttribute;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestMethod;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+import springfox.documentation.annotations.ApiIgnore;\n+\n+import javax.validation.constraints.Max;\n+import javax.validation.constraints.Min;\n+import javax.validation.constraints.Size;\n+import javax.validation.Valid;\n+import java.util.*;\n+\n+@InternalApi\n+@RestController\n+@Validated\n+@Api(tags = PublicApiTags.MUTATIONS, description = \" \")\n+public class MutationCountController {\n+    \n+    public static final int MUTATION_MAX_PAGE_SIZE = 10000000;\n+\n+    @Autowired\n+    private MutationService mutationService;\n+\n+    @RequestMapping(value = \"/mutation-counts-by-position/fetch\", method = RequestMethod.POST,\n+        consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)\n+    @ApiOperation(\"Fetch mutation counts in all studies by gene and position\")\n+    public ResponseEntity<List<MutationCountByPosition>> fetchMutationCountsByPosition(\n+        @ApiParam(required = true, value = \"List of gene and positions\")\n+        @Size(min = 1, max = MUTATION_MAX_PAGE_SIZE)\n+        @RequestBody List<MutationPositionIdentifier> mutationPositionIdentifiers) {\n+\n+        List<Integer> entrezGeneIds = new ArrayList<>();\n+        List<Integer> proteinPosStarts = new ArrayList<>();\n+        List<Integer> proteinPosEnds = new ArrayList<>();\n+        for (MutationPositionIdentifier mutationPositionIdentifier : mutationPositionIdentifiers) {\n+\n+            entrezGeneIds.add(mutationPositionIdentifier.getEntrezGeneId());\n+            proteinPosStarts.add(mutationPositionIdentifier.getProteinPosStart());\n+            proteinPosEnds.add(mutationPositionIdentifier.getProteinPosEnd());\n+        }\n+\n+        return new ResponseEntity<>(mutationService.fetchMutationCountsByPosition(entrezGeneIds, proteinPosStarts,\n+            proteinPosEnds), HttpStatus.OK);\n+    }\n+\n+\n+}"
  },
  {
    "sha": "65652ba0254ecd2111bfe15bfa406cacbe118a59",
    "filename": "web/src/main/java/org/cbioportal/web/config/PublicApiTags.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/cBioPortal/cbioportal/blob/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/config/PublicApiTags.java",
    "raw_url": "https://github.com/cBioPortal/cbioportal/raw/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/config/PublicApiTags.java",
    "contents_url": "https://api.github.com/repos/cBioPortal/cbioportal/contents/web/src/main/java/org/cbioportal/web/config/PublicApiTags.java?ref=cbd40f2ed28811c1943da271f75afe542ddf7d67",
    "patch": "@@ -8,7 +8,6 @@\n     public static final String SAMPLE_LISTS = \"Sample Lists\";\n     public static final String CLINICAL_ATTRIBUTES = \"Clinical Attributes\";\n     public static final String CLINICAL_DATA = \"Clinical Data\";\n-    public static final String CLINICAL_EVENTS = \"Clinical Events\";\n     public static final String MOLECULAR_DATA = \"Molecular Data\";\n     public static final String MOLECULAR_PROFILES = \"Molecular Profiles\";\n     public static final String MUTATIONS = \"Mutations\";"
  },
  {
    "sha": "4c4271ba0ef68c0ae9f71b9f263e25e66ced5abf",
    "filename": "web/src/main/java/org/cbioportal/web/config/SwaggerConfig.java",
    "status": "modified",
    "additions": 30,
    "deletions": 18,
    "changes": 48,
    "blob_url": "https://github.com/cBioPortal/cbioportal/blob/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/config/SwaggerConfig.java",
    "raw_url": "https://github.com/cBioPortal/cbioportal/raw/cbd40f2ed28811c1943da271f75afe542ddf7d67/web/src/main/java/org/cbioportal/web/config/SwaggerConfig.java",
    "contents_url": "https://api.github.com/repos/cBioPortal/cbioportal/contents/web/src/main/java/org/cbioportal/web/config/SwaggerConfig.java?ref=cbd40f2ed28811c1943da271f75afe542ddf7d67",
    "patch": "@@ -29,7 +29,7 @@ public Docket publicApi() {\n             .apis(RequestHandlerSelectors.withClassAnnotation(PublicApi.class))\n             .build()\n             .useDefaultResponseMessages(false)\n-            .apiInfo(apiInfo());\n+            .apiInfo(publicApiInfo());\n \n         d.tags(\n             new Tag(PublicApiTags.CANCER_TYPES, \"\", 0),\n@@ -39,19 +39,18 @@ public Docket publicApi() {\n             new Tag(PublicApiTags.SAMPLE_LISTS, \"\", 4),\n             new Tag(PublicApiTags.CLINICAL_ATTRIBUTES, \"\", 5),\n             new Tag(PublicApiTags.CLINICAL_DATA, \"\", 6),\n-            new Tag(PublicApiTags.CLINICAL_EVENTS, \"\", 7),\n-            new Tag(PublicApiTags.MOLECULAR_DATA, \"\", 8),\n-            new Tag(PublicApiTags.MOLECULAR_PROFILES, \"\", 9),\n-            new Tag(PublicApiTags.MUTATIONS, \"\", 10),\n-            new Tag(PublicApiTags.DISCRETE_COPY_NUMBER_ALTERATIONS, \"\", 11),\n-            new Tag(PublicApiTags.COPY_NUMBER_SEGMENTS, \"\", 12),\n-            new Tag(PublicApiTags.GENES, \"\", 13),\n-            new Tag(PublicApiTags.GENE_PANELS, \"\", 14),\n-            new Tag(PublicApiTags.GENERIC_ASSAYS, \"\", 15),\n-            new Tag(PublicApiTags.STRUCTURAL_VARIANTS, \"\", 16),\n-            new Tag(PublicApiTags.REFERENCE_GENOME_GENES, \"\", 17),\n-            new Tag(PublicApiTags.RESOURCE_DEFINITIONS, \"\", 18),\n-            new Tag(PublicApiTags.RESOURCE_DATA, \"\", 19)\n+            new Tag(PublicApiTags.MOLECULAR_DATA, \"\", 7),\n+            new Tag(PublicApiTags.MOLECULAR_PROFILES, \"\", 8),\n+            new Tag(PublicApiTags.MUTATIONS, \"\", 9),\n+            new Tag(PublicApiTags.DISCRETE_COPY_NUMBER_ALTERATIONS, \"\", 10),\n+            new Tag(PublicApiTags.COPY_NUMBER_SEGMENTS, \"\", 11),\n+            new Tag(PublicApiTags.GENES, \"\", 12),\n+            new Tag(PublicApiTags.GENE_PANELS, \"\", 13),\n+            new Tag(PublicApiTags.GENERIC_ASSAYS, \"\", 14),\n+            new Tag(PublicApiTags.STRUCTURAL_VARIANTS, \"\", 15),\n+            new Tag(PublicApiTags.REFERENCE_GENOME_GENES, \"\", 16),\n+            new Tag(PublicApiTags.RESOURCE_DEFINITIONS, \"\", 17),\n+            new Tag(PublicApiTags.RESOURCE_DATA, \"\", 18)\n         );\n \n         return d;\n@@ -64,7 +63,7 @@ public Docket internalApi() {\n             .apis(RequestHandlerSelectors.withClassAnnotation(InternalApi.class))\n             .build()\n             .useDefaultResponseMessages(false)\n-            .apiInfo(apiInfo());\n+            .apiInfo(internalApiInfo());\n     }\n \n     @Bean\n@@ -75,12 +74,25 @@ UiConfiguration uiConfig() {\n             .build();\n     }\n \n-    private ApiInfo apiInfo() {\n+    private ApiInfo publicApiInfo() {\n         ApiInfo apiInfo = new ApiInfo(\n-            \"cBioPortal web API [Beta]\",\n+            \"cBioPortal web Public API [Beta]\",\n             \"A web service for supplying JSON formatted data to cBioPortal clients. \" +\n                 \"Please note that this API is currently in beta and subject to change.\",\n-            \"1.0 (beta)\",\n+            \"1.0 (beta). Backwards compatibility will be maintained (after 1.0 release)\",\n+            null,\n+            new Contact(\"cBioPortal\", \"https://www.cbioportal.org\", \"cbioportal@googlegroups.com\"),\n+            \"License\",\n+            \"https://github.com/cBioPortal/cbioportal/blob/master/LICENSE\", Collections.emptyList());\n+        return apiInfo;\n+    }\n+\n+    private ApiInfo internalApiInfo() {\n+        ApiInfo apiInfo = new ApiInfo(\n+            \"cBioPortal web Internal API [Beta]\",\n+            \"A web service for supplying JSON formatted data to cBioPortal clients. \" +\n+                \"Please note that interal API is currently in beta and subject to change.\",\n+            \"1.0 (beta). Internal API are prone to change.\",\n             null,\n             new Contact(\"cBioPortal\", \"https://www.cbioportal.org\", \"cbioportal@googlegroups.com\"),\n             \"License\","
  }
]
