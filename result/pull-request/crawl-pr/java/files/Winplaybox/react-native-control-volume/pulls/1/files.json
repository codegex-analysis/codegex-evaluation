[
  {
    "sha": "6fec56812779d711fb7c79c925262b729a4b3ed8",
    "filename": ".gitignore",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/.gitignore",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/.gitignore",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/.gitignore?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,76 @@\n+**/.DS_Store\n+\n+# JS\n+node_modules\n+npm-debug.log\n+\n+# Xcode\n+#\n+# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore\n+\n+# Android\n+#\n+.gradle\n+.idea\n+local.properties\n+*.iml\n+*.keystore\n+\n+## Build generated\n+build/\n+DerivedData/\n+\n+## Various settings\n+*.pbxuser\n+!default.pbxuser\n+*.mode1v3\n+!default.mode1v3\n+*.mode2v3\n+!default.mode2v3\n+*.perspectivev3\n+!default.perspectivev3\n+xcuserdata/\n+\n+## Other\n+*.moved-aside\n+*.xcuserstate\n+*.xcworkspacedata\n+.watchmanconfig\n+\n+## Obj-C/Swift specific\n+*.hmap\n+*.ipa\n+*.dSYM.zip\n+*.dSYM\n+\n+# CocoaPods\n+#\n+# We recommend against adding the Pods directory to your .gitignore. However\n+# you should judge for yourself, the pros and cons are mentioned at:\n+# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control\n+#\n+# Pods/\n+\n+# Carthage\n+#\n+# Add this line if you want to avoid checking in source code from Carthage dependencies.\n+# Carthage/Checkouts\n+\n+Carthage/Build\n+\n+# fastlane\n+#\n+# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the \n+# screenshots whenever they are needed.\n+# For more information about the recommended setup visit:\n+# https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Gitignore.md\n+\n+fastlane/report.xml\n+fastlane/screenshots\n+\n+# Code Injection\n+#\n+# After new code Injection tools there's a generated folder /iOSInjectionProject\n+# https://github.com/johnno1962/injectionforxcode\n+\n+iOSInjectionProject/"
  },
  {
    "sha": "25da80f9c5f00882d52dc87144b50b1285c7c121",
    "filename": "LICENSE",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/LICENSE",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/LICENSE",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/LICENSE?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,21 @@\n+The MIT License (MIT)\n+\n+Copyright (c) 2020 winplaybox\n+\n+Permission is hereby granted, free of charge, to any person obtaining a copy\n+of this software and associated documentation files (the \"Software\"), to deal\n+in the Software without restriction, including without limitation the rights\n+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+copies of the Software, and to permit persons to whom the Software is\n+furnished to do so, subject to the following conditions:\n+\n+The above copyright notice and this permission notice shall be included in all\n+copies or substantial portions of the Software.\n+\n+THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+SOFTWARE.\n\\ No newline at end of file"
  },
  {
    "sha": "478d64dd3a41fdf25e7c1ef992af9e19a1b5d26a",
    "filename": "README.md",
    "status": "modified",
    "additions": 94,
    "deletions": 1,
    "changes": 95,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/README.md",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/README.md",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/README.md?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -1 +1,94 @@\n-# react-native-control-volume\n\\ No newline at end of file\n+# react-native-control-volume\n+\n+Control device volume for iOS and Android.\n+\n+## First installation step (applied for both iOS & Android)\n+\n+`$ npm install react-native-control-volume --save`\n+\n+#### 2. Automatic installation\n+\n+`$ react-native link react-native-control-volume`\n+\n+#### 3. Manual installation\n+\n+1. In XCode, in the project navigator, right click `Libraries` ➜ `Add Files to [your project's name]`\n+2. Go to `node_modules` ➜ `react-native-control-volume` => `ios`\n+   - add `ReactNativeControlVolume.xcodeproj` to the Libraries folder in your XCode project\n+3. In XCode, in the project navigator, select your project. Add `libReactNativeControlVolume.a` to your project's `Build Phases` ➜ `Link Binary With Libraries`\n+4. Run your project (`Cmd+R`)\n+\n+### Android\n+\n+#### Manual installation\n+\n+1. In Android Studio open `Module Settings` and add a Gradle Project.\n+2. Look for `react-native-control-volume` android folder and link with a Gradle.\n+3. Open MyApplication.java from main app and put the ReactNativeControlVolumePackage\n+\n+```java\n+ @Override\n+    protected List<ReactPackage> getPackages() {\n+      return Arrays.<ReactPackage>asList(\n+          new MainReactPackage(),\n+          new RNControlVolumePackage()\n+      );\n+    }\n+```\n+\n+## Usage\n+\n+This component only exposes an api to update device volume and listens for `VolumeChanged` events via hardware buttons. There is no UI component included.\n+\n+```javascript\n+// Other imports\n+...\n+\n+import ControlVolume, {\n+  ControlVolumeEvents\n+} from \"react-native-control-volume\";\n+import Slider from '@react-native-community/slider';\n+\n+class App extends React.Component {\n+  state = {\n+    volume: 0\n+  }\n+\n+  async componentDidMount() {\n+    this.setState({\n+      volume: await ControlVolume.getVolume()\n+    });\n+\n+    // Add and store event listener\n+    this.volEvent = ControlVolumeEvents.addListener(\n+      \"VolumeChanged\",\n+      this.volumeEvent\n+    );\n+  }\n+\n+  // Updates Slider UI when hardware buttons change volume\n+  volumeEvent = event => {\n+    this.setState({ volume: event.volume });\n+  };\n+\n+  // Updates device volume\n+  sliderChange(value) {\n+    ControlVolume.change(value);\n+  }\n+\n+  componentWillUnmount() {\n+    // remove event listener\n+    this.volEvent.remove();\n+  }\n+\n+  render() {\n+    return (\n+      <Slider\n+        value={this.state.volume}\n+        onValueChange={this.sliderChange}\n+        // Other props\n+      />\n+    )\n+  }\n+}\n+```"
  },
  {
    "sha": "cc3f047266a18dc266754523c9fbd85e0d11feab",
    "filename": "RNControlVolume.podspec",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/RNControlVolume.podspec",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/RNControlVolume.podspec",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/RNControlVolume.podspec?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,21 @@\n+require 'json'\n+\n+package = JSON.parse(File.read(File.join(__dir__, 'package.json')))\n+\n+Pod::Spec.new do |s|\n+  s.name                = \"RNControlVolume\"\n+  s.version             = package['version']\n+  s.summary             = package['description']\n+  s.homepage            = \"https://github.com/Winplaybox/react-native-control-volume\"\n+  s.license             = package['license']\n+  s.author              = package['author']\n+  s.source              = { :git => package['repository']['url'], :tag => \"v#{s.version}\" }\n+  s.default_subspec     = 'Master'\n+  s.requires_arc        = true\n+  s.platform            = :ios, \"7.0\"\n+  s.preserve_paths      = \"**/*.js\"\n+\n+  s.subspec 'Master' do |ss|\n+    ss.source_files     = \"ios/RNControlVolume.{h,m}\"\n+  end\n+end"
  },
  {
    "sha": "72c39ac07e23c7cf86bbd5867c0b6ee73925cf94",
    "filename": "android/build.gradle",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/build.gradle",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/build.gradle",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/android/build.gradle?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,47 @@\n+buildscript {\n+    repositories {\n+        mavenLocal()\n+        mavenCentral()\n+        google()\n+\n+    }\n+\n+    dependencies {\n+        classpath 'com.android.tools.build:gradle:3.2.1'\n+    }\n+}\n+\n+apply plugin: 'com.android.library'\n+\n+def safeExtGet(prop, fallback) {\n+    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback\n+}\n+\n+android {\n+    compileSdkVersion safeExtGet('compileSdkVersion', 23)\n+\n+    defaultConfig {\n+        minSdkVersion safeExtGet('minSdkVersion', 16)\n+        targetSdkVersion safeExtGet('targetSdkVersion', 22)\n+        versionCode 1\n+        versionName \"1.0\"\n+    }\n+    lintOptions {\n+        abortOnError false\n+    }\n+    compileOptions {\n+        sourceCompatibility JavaVersion.VERSION_1_8\n+        targetCompatibility JavaVersion.VERSION_1_8\n+    }\n+\n+}\n+\n+repositories {\n+    mavenLocal()\n+    mavenCentral()\n+    google()\n+}\n+\n+dependencies {\n+    implementation 'com.facebook.react:react-native:+'\n+}"
  },
  {
    "sha": "9a4163a4f5ee222ba10e7c7c2f4de529dc0b52a1",
    "filename": "android/gradle/wrapper/gradle-wrapper.properties",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/android/gradle/wrapper/gradle-wrapper.properties?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,5 @@\n+distributionBase=GRADLE_USER_HOME\n+distributionPath=wrapper/dists\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-4.6-all.zip\n+zipStoreBase=GRADLE_USER_HOME\n+zipStorePath=wrapper/dists"
  },
  {
    "sha": "cccdd3d517fc5249beaefa600691cf150f2fa3e6",
    "filename": "android/gradlew",
    "status": "added",
    "additions": 172,
    "deletions": 0,
    "changes": 172,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/gradlew",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/gradlew",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/android/gradlew?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,172 @@\n+#!/usr/bin/env sh\n+\n+##############################################################################\n+##\n+##  Gradle start up script for UN*X\n+##\n+##############################################################################\n+\n+# Attempt to set APP_HOME\n+# Resolve links: $0 may be a link\n+PRG=\"$0\"\n+# Need this for relative symlinks.\n+while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+        PRG=\"$link\"\n+    else\n+        PRG=`dirname \"$PRG\"`\"/$link\"\n+    fi\n+done\n+SAVED=\"`pwd`\"\n+cd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\n+APP_HOME=\"`pwd -P`\"\n+cd \"$SAVED\" >/dev/null\n+\n+APP_NAME=\"Gradle\"\n+APP_BASE_NAME=`basename \"$0\"`\n+\n+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+DEFAULT_JVM_OPTS=\"\"\n+\n+# Use the maximum available, or set MAX_FD != -1 to use that value.\n+MAX_FD=\"maximum\"\n+\n+warn () {\n+    echo \"$*\"\n+}\n+\n+die () {\n+    echo\n+    echo \"$*\"\n+    echo\n+    exit 1\n+}\n+\n+# OS specific support (must be 'true' or 'false').\n+cygwin=false\n+msys=false\n+darwin=false\n+nonstop=false\n+case \"`uname`\" in\n+  CYGWIN* )\n+    cygwin=true\n+    ;;\n+  Darwin* )\n+    darwin=true\n+    ;;\n+  MINGW* )\n+    msys=true\n+    ;;\n+  NONSTOP* )\n+    nonstop=true\n+    ;;\n+esac\n+\n+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n+\n+# Determine the Java command to use to start the JVM.\n+if [ -n \"$JAVA_HOME\" ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+        # IBM's JDK on AIX uses strange locations for the executables\n+        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+        JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+    if [ ! -x \"$JAVACMD\" ] ; then\n+        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+    fi\n+else\n+    JAVACMD=\"java\"\n+    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+\n+Please set the JAVA_HOME variable in your environment to match the\n+location of your Java installation.\"\n+fi\n+\n+# Increase the maximum file descriptors if we can.\n+if [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n+    MAX_FD_LIMIT=`ulimit -H -n`\n+    if [ $? -eq 0 ] ; then\n+        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n+            MAX_FD=\"$MAX_FD_LIMIT\"\n+        fi\n+        ulimit -n $MAX_FD\n+        if [ $? -ne 0 ] ; then\n+            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n+        fi\n+    else\n+        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n+    fi\n+fi\n+\n+# For Darwin, add options to specify how the application appears in the dock\n+if $darwin; then\n+    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n+fi\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin ; then\n+    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n+    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n+\n+    # We build the pattern for arguments to be converted via cygpath\n+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n+    SEP=\"\"\n+    for dir in $ROOTDIRSRAW ; do\n+        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n+        SEP=\"|\"\n+    done\n+    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n+    # Add a user-defined pattern to the cygpath arguments\n+    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n+        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n+    fi\n+    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n+    i=0\n+    for arg in \"$@\" ; do\n+        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n+        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n+\n+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n+            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n+        else\n+            eval `echo args$i`=\"\\\"$arg\\\"\"\n+        fi\n+        i=$((i+1))\n+    done\n+    case $i in\n+        (0) set -- ;;\n+        (1) set -- \"$args0\" ;;\n+        (2) set -- \"$args0\" \"$args1\" ;;\n+        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+    esac\n+fi\n+\n+# Escape application args\n+save () {\n+    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n+    echo \" \"\n+}\n+APP_ARGS=$(save \"$@\")\n+\n+# Collect all arguments for the java command, following the shell quoting and substitution rules\n+eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n+\n+# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\n+if [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n+  cd \"$(dirname \"$0\")\"\n+fi\n+\n+exec \"$JAVACMD\" \"$@\""
  },
  {
    "sha": "f9553162f122c71b34635112e717c3e733b5b212",
    "filename": "android/gradlew.bat",
    "status": "added",
    "additions": 84,
    "deletions": 0,
    "changes": 84,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/gradlew.bat",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/gradlew.bat",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/android/gradlew.bat?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,84 @@\n+@if \"%DEBUG%\" == \"\" @echo off\n+@rem ##########################################################################\n+@rem\n+@rem  Gradle startup script for Windows\n+@rem\n+@rem ##########################################################################\n+\n+@rem Set local scope for the variables with windows NT shell\n+if \"%OS%\"==\"Windows_NT\" setlocal\n+\n+set DIRNAME=%~dp0\n+if \"%DIRNAME%\" == \"\" set DIRNAME=.\n+set APP_BASE_NAME=%~n0\n+set APP_HOME=%DIRNAME%\n+\n+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n+set DEFAULT_JVM_OPTS=\n+\n+@rem Find java.exe\n+if defined JAVA_HOME goto findJavaFromJavaHome\n+\n+set JAVA_EXE=java.exe\n+%JAVA_EXE% -version >NUL 2>&1\n+if \"%ERRORLEVEL%\" == \"0\" goto init\n+\n+echo.\n+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n+echo.\n+echo Please set the JAVA_HOME variable in your environment to match the\n+echo location of your Java installation.\n+\n+goto fail\n+\n+:findJavaFromJavaHome\n+set JAVA_HOME=%JAVA_HOME:\"=%\n+set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n+\n+if exist \"%JAVA_EXE%\" goto init\n+\n+echo.\n+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\n+echo.\n+echo Please set the JAVA_HOME variable in your environment to match the\n+echo location of your Java installation.\n+\n+goto fail\n+\n+:init\n+@rem Get command-line arguments, handling Windows variants\n+\n+if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n+\n+:win9xME_args\n+@rem Slurp the command line arguments.\n+set CMD_LINE_ARGS=\n+set _SKIP=2\n+\n+:win9xME_args_slurp\n+if \"x%~1\" == \"x\" goto execute\n+\n+set CMD_LINE_ARGS=%*\n+\n+:execute\n+@rem Setup the command line\n+\n+set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n+\n+@rem Execute Gradle\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n+\n+:end\n+@rem End local scope for the variables with windows NT shell\n+if \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n+\n+:fail\n+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\n+rem the _cmd.exe /c_ return code!\n+if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\n+exit /b 1\n+\n+:mainEnd\n+if \"%OS%\"==\"Windows_NT\" endlocal\n+\n+:omega"
  },
  {
    "sha": "a8d28ecbc6b7a4328a9965eb8b558a46a891ddcc",
    "filename": "android/src/main/AndroidManifest.xml",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/android/src/main/AndroidManifest.xml?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,4 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.winplaybox.ControlVolume\" >\n+</manifest>"
  },
  {
    "sha": "5c1d09cfe94c412452ce4f2a5f3c0cfe4603e66e",
    "filename": "android/src/main/java/com/winplaybox/controlvolume/RNControlVolumeModule.java",
    "status": "added",
    "additions": 143,
    "deletions": 0,
    "changes": 143,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/src/main/java/com/winplaybox/controlvolume/RNControlVolumeModule.java",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/src/main/java/com/winplaybox/controlvolume/RNControlVolumeModule.java",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/android/src/main/java/com/winplaybox/controlvolume/RNControlVolumeModule.java?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,143 @@\n+package com.winplaybox.ControlVolume;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.content.BroadcastReceiver;\n+import android.content.IntentFilter;\n+import android.media.AudioManager;\n+\n+import android.support.annotation.Nullable;\n+import android.util.Log;\n+\n+import com.facebook.react.bridge.ActivityEventListener;\n+import com.facebook.react.bridge.Arguments;\n+import com.facebook.react.bridge.LifecycleEventListener;\n+import com.facebook.react.bridge.ReactApplicationContext;\n+import com.facebook.react.bridge.ReactContext;\n+import com.facebook.react.bridge.ReactContextBaseJavaModule;\n+import com.facebook.react.bridge.ReactMethod;\n+import com.facebook.react.bridge.WritableMap;\n+import com.facebook.react.bridge.Promise;\n+import com.facebook.react.modules.core.DeviceEventManagerModule;\n+\n+public class RNControlVolumeModule extends ReactContextBaseJavaModule\n+    implements ActivityEventListener, LifecycleEventListener {\n+\n+  private String TAG = RNControlVolumeModule.class.getSimpleName();\n+  private ReactApplicationContext rContext;\n+  private float max_volume = (float) 0.0;\n+  private AudioManager am;\n+  private VolumeBroadcastReceiver volumeBR;\n+\n+  public RNControlVolumeModule(ReactApplicationContext reactContext) {\n+    super(reactContext);\n+    this.rContext = reactContext;\n+  }\n+\n+  @Override\n+  public String getName() {\n+    return \"ControlVolume\";\n+  }\n+\n+  @Override\n+  public void onNewIntent(Intent intent) {\n+  }\n+\n+  @Override\n+  public void onActivityResult(Activity activity, int requestCode, int resultCode, Intent data) {\n+  }\n+\n+  @Override\n+  public void onHostResume() {\n+    registerVolumeReceiver();\n+  }\n+\n+  @Override\n+  public void onHostPause() {\n+    unregisterVolumeReceiver();\n+  }\n+\n+  @Override\n+  public void onHostDestroy() {\n+  }\n+\n+  @Override\n+  public void initialize() {\n+    super.initialize();\n+\n+    try {\n+      am = (AudioManager) this.rContext.getSystemService(Context.AUDIO_SERVICE);\n+      max_volume = am.getStreamMaxVolume(AudioManager.STREAM_MUSIC);\n+      volumeBR = new VolumeBroadcastReceiver();\n+      registerVolumeReceiver();\n+    } catch (Exception e) {\n+      Log.e(TAG, \"Initialize Error\", e);\n+    }\n+  }\n+\n+  private void registerVolumeReceiver() {\n+    if (!volumeBR.isRegistered()) {\n+      IntentFilter filter = new IntentFilter(\"android.media.VOLUME_CHANGED_ACTION\");\n+      this.rContext.registerReceiver(volumeBR, filter);\n+      volumeBR.setRegistered(true);\n+    }\n+  }\n+\n+  private void unregisterVolumeReceiver() {\n+    if (volumeBR.isRegistered()) {\n+      this.rContext.unregisterReceiver(volumeBR);\n+      volumeBR.setRegistered(false);\n+    }\n+  }\n+\n+  public void sendEvent(ReactContext reactContext, String eventName, @Nullable WritableMap params) {\n+    this.rContext.getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class).emit(eventName, params);\n+  }\n+\n+  @ReactMethod\n+  public void getVolume(Promise promise) {\n+    promise.resolve(getNormalizedVolume());\n+  }\n+\n+  @ReactMethod\n+  public void change(float volume) {\n+    try {\n+      am.setStreamVolume(AudioManager.STREAM_MUSIC, (int) (volume * max_volume), 0);\n+    } catch (Exception e) {\n+      Log.e(TAG, \"Error Setting Volume\", e);\n+    }\n+  }\n+\n+  private float getNormalizedVolume() {\n+    return am.getStreamVolume(AudioManager.STREAM_MUSIC) * 1.0f / max_volume;\n+  }\n+\n+  public class VolumeBroadcastReceiver extends BroadcastReceiver {\n+\n+    private boolean isRegistered = false;\n+\n+    public void setRegistered(boolean registered) {\n+      isRegistered = registered;\n+    }\n+\n+    public boolean isRegistered() {\n+      return isRegistered;\n+    }\n+\n+    @Override\n+    public void onReceive(Context context, Intent intent) {\n+      if (intent.getAction().equals(\"android.media.VOLUME_CHANGED_ACTION\")) {\n+        float volume = getNormalizedVolume();\n+        WritableMap params = Arguments.createMap();\n+        params.putDouble(\"volume\", volume);\n+        try {\n+          sendEvent(rContext, \"VolumeChanged\", params);\n+        } catch (RuntimeException e) {\n+          // Possible to interact with volume before JS bundle execution is finished.\n+          // This is here to avoid app crashing.\n+        }\n+      }\n+    }\n+  }\n+}"
  },
  {
    "sha": "c12f362d1bc5b96599e944fafc6dea8cc4709e17",
    "filename": "android/src/main/java/com/winplaybox/controlvolume/RNControlVolumePackage.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/src/main/java/com/winplaybox/controlvolume/RNControlVolumePackage.java",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/android/src/main/java/com/winplaybox/controlvolume/RNControlVolumePackage.java",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/android/src/main/java/com/winplaybox/controlvolume/RNControlVolumePackage.java?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,37 @@\n+package com.winplaybox.ControlVolume;\n+\n+import com.facebook.react.ReactPackage;\n+import com.facebook.react.bridge.NativeModule;\n+import com.facebook.react.bridge.ReactApplicationContext;\n+import com.facebook.react.uimanager.ViewManager;\n+import com.facebook.react.bridge.JavaScriptModule;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+public class RNControlVolumePackage implements ReactPackage {\n+\n+  private RNControlVolumeModule ControlVolumeModule;\n+\n+  public List<Class<? extends JavaScriptModule>> createJSModules() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public List<ViewManager> createViewManagers(ReactApplicationContext reactContext) {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public List<NativeModule> createNativeModules(ReactApplicationContext reactContext) {\n+    List<NativeModule> modules = new ArrayList<>();\n+\n+    ControlVolumeModule = new RNControlVolumeModule(reactContext);\n+\n+    modules.add(ControlVolumeModule);\n+\n+    return modules;\n+  }\n+\n+}"
  },
  {
    "sha": "dcdfff060b34371d099b17458cb56e5dd737cab1",
    "filename": "index.d.ts",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/index.d.ts",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/index.d.ts",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/index.d.ts?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,15 @@\n+import { NativeEventEmitter } from \"react-native\";\n+\n+export = RNControlVolume;\n+export as namespace RNControlVolume;\n+\n+declare namespace RNControlVolume {\n+  export function change(value: number): void;\n+  export function getVolume(): number;\n+\n+  export type VolumeEventType = {\n+    volume: number;\n+  };\n+\n+  export class ControlVolumeEvents extends NativeEventEmitter {}\n+}"
  },
  {
    "sha": "5211ae4195d9917b6f71351b0108ad28d3b5125a",
    "filename": "index.js",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/index.js",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/index.js",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/index.js?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,8 @@\n+import { NativeModules, NativeEventEmitter } from \"react-native\";\n+\n+const ControlVolume = NativeModules.ControlVolume;\n+export const ControlVolumeEvents = new NativeEventEmitter(\n+  NativeModules.ControlVolume\n+);\n+\n+export default ControlVolume;"
  },
  {
    "sha": "49582c8b31e45423f2568a41e39fdd0d741a398a",
    "filename": "ios/RNControlVolume.xcodeproj/project.pbxproj",
    "status": "added",
    "additions": 269,
    "deletions": 0,
    "changes": 269,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/ios/RNControlVolume.xcodeproj/project.pbxproj",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/ios/RNControlVolume.xcodeproj/project.pbxproj",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/ios/RNControlVolume.xcodeproj/project.pbxproj?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,269 @@\n+// !$*UTF8*$!\n+{\n+\tarchiveVersion = 1;\n+\tclasses = {\n+\t};\n+\tobjectVersion = 46;\n+\tobjects = {\n+\n+/* Begin PBXBuildFile section */\n+\t\tA1DF0B7C1E90288A00B9A176 /* RNControlVolume.m in Sources */ = {isa = PBXBuildFile; fileRef = A1DF0B7B1E90288A00B9A176 /* RNControlVolume.m */; };\n+\t\tA1DF0B7D1E90288A00B9A176 /* RNControlVolume.h in CopyFiles */ = {isa = PBXBuildFile; fileRef = A1DF0B7A1E90288A00B9A176 /* RNControlVolume.h */; };\n+/* End PBXBuildFile section */\n+\n+/* Begin PBXCopyFilesBuildPhase section */\n+\t\tA1DF0B751E90288A00B9A176 /* CopyFiles */ = {\n+\t\t\tisa = PBXCopyFilesBuildPhase;\n+\t\t\tbuildActionMask = 2147483647;\n+\t\t\tdstPath = \"include/$(PRODUCT_NAME)\";\n+\t\t\tdstSubfolderSpec = 16;\n+\t\t\tfiles = (\n+\t\t\t\tA1DF0B7D1E90288A00B9A176 /* RNControlVolume.h in CopyFiles */,\n+\t\t\t);\n+\t\t\trunOnlyForDeploymentPostprocessing = 0;\n+\t\t};\n+/* End PBXCopyFilesBuildPhase section */\n+\n+/* Begin PBXFileReference section */\n+\t\tA1DF0B771E90288A00B9A176 /* libRNControlVolume.a */ = {isa = PBXFileReference; explicitFileType = archive.ar; includeInIndex = 0; path = libRNControlVolume.a; sourceTree = BUILT_PRODUCTS_DIR; };\n+\t\tA1DF0B7A1E90288A00B9A176 /* RNControlVolume.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = RNControlVolume.h; sourceTree = \"<group>\"; };\n+\t\tA1DF0B7B1E90288A00B9A176 /* RNControlVolume.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = RNControlVolume.m; sourceTree = \"<group>\"; };\n+/* End PBXFileReference section */\n+\n+/* Begin PBXFrameworksBuildPhase section */\n+\t\tA1DF0B741E90288A00B9A176 /* Frameworks */ = {\n+\t\t\tisa = PBXFrameworksBuildPhase;\n+\t\t\tbuildActionMask = 2147483647;\n+\t\t\tfiles = (\n+\t\t\t);\n+\t\t\trunOnlyForDeploymentPostprocessing = 0;\n+\t\t};\n+/* End PBXFrameworksBuildPhase section */\n+\n+/* Begin PBXGroup section */\n+\t\tA1DF0B6E1E90288A00B9A176 = {\n+\t\t\tisa = PBXGroup;\n+\t\t\tchildren = (\n+\t\t\t\tA1DF0B791E90288A00B9A176 /* RNControlVolume */,\n+\t\t\t\tA1DF0B781E90288A00B9A176 /* Products */,\n+\t\t\t);\n+\t\t\tsourceTree = \"<group>\";\n+\t\t};\n+\t\tA1DF0B781E90288A00B9A176 /* Products */ = {\n+\t\t\tisa = PBXGroup;\n+\t\t\tchildren = (\n+\t\t\t\tA1DF0B771E90288A00B9A176 /* libRNControlVolume.a */,\n+\t\t\t);\n+\t\t\tname = Products;\n+\t\t\tsourceTree = \"<group>\";\n+\t\t};\n+\t\tA1DF0B791E90288A00B9A176 /* RNControlVolume */ = {\n+\t\t\tisa = PBXGroup;\n+\t\t\tchildren = (\n+\t\t\t\tA1DF0B7A1E90288A00B9A176 /* RNControlVolume.h */,\n+\t\t\t\tA1DF0B7B1E90288A00B9A176 /* RNControlVolume.m */,\n+\t\t\t);\n+\t\t\tpath = RNControlVolume;\n+\t\t\tsourceTree = \"<group>\";\n+\t\t};\n+/* End PBXGroup section */\n+\n+/* Begin PBXNativeTarget section */\n+\t\tA1DF0B761E90288A00B9A176 /* RNControlVolume */ = {\n+\t\t\tisa = PBXNativeTarget;\n+\t\t\tbuildConfigurationList = A1DF0B801E90288A00B9A176 /* Build configuration list for PBXNativeTarget \"RNControlVolume\" */;\n+\t\t\tbuildPhases = (\n+\t\t\t\tA1DF0B731E90288A00B9A176 /* Sources */,\n+\t\t\t\tA1DF0B741E90288A00B9A176 /* Frameworks */,\n+\t\t\t\tA1DF0B751E90288A00B9A176 /* CopyFiles */,\n+\t\t\t);\n+\t\t\tbuildRules = (\n+\t\t\t);\n+\t\t\tdependencies = (\n+\t\t\t);\n+\t\t\tname = RNControlVolume;\n+\t\t\tproductName = ReactNativeControlVolume;\n+\t\t\tproductReference = A1DF0B771E90288A00B9A176 /* libRNControlVolume.a */;\n+\t\t\tproductType = \"com.apple.product-type.library.static\";\n+\t\t};\n+/* End PBXNativeTarget section */\n+\n+/* Begin PBXProject section */\n+\t\tA1DF0B6F1E90288A00B9A176 /* Project object */ = {\n+\t\t\tisa = PBXProject;\n+\t\t\tattributes = {\n+\t\t\t\tLastUpgradeCheck = 0830;\n+\t\t\t\tORGANIZATIONNAME = Tavernari;\n+\t\t\t\tTargetAttributes = {\n+\t\t\t\t\tA1DF0B761E90288A00B9A176 = {\n+\t\t\t\t\t\tCreatedOnToolsVersion = 8.3;\n+\t\t\t\t\t\tDevelopmentTeam = 4REX2KBMNV;\n+\t\t\t\t\t\tProvisioningStyle = Automatic;\n+\t\t\t\t\t};\n+\t\t\t\t};\n+\t\t\t};\n+\t\t\tbuildConfigurationList = A1DF0B721E90288A00B9A176 /* Build configuration list for PBXProject \"RNControlVolume\" */;\n+\t\t\tcompatibilityVersion = \"Xcode 3.2\";\n+\t\t\tdevelopmentRegion = English;\n+\t\t\thasScannedForEncodings = 0;\n+\t\t\tknownRegions = (\n+\t\t\t\tEnglish,\n+\t\t\t\ten,\n+\t\t\t);\n+\t\t\tmainGroup = A1DF0B6E1E90288A00B9A176;\n+\t\t\tproductRefGroup = A1DF0B781E90288A00B9A176 /* Products */;\n+\t\t\tprojectDirPath = \"\";\n+\t\t\tprojectRoot = \"\";\n+\t\t\ttargets = (\n+\t\t\t\tA1DF0B761E90288A00B9A176 /* RNControlVolume */,\n+\t\t\t);\n+\t\t};\n+/* End PBXProject section */\n+\n+/* Begin PBXSourcesBuildPhase section */\n+\t\tA1DF0B731E90288A00B9A176 /* Sources */ = {\n+\t\t\tisa = PBXSourcesBuildPhase;\n+\t\t\tbuildActionMask = 2147483647;\n+\t\t\tfiles = (\n+\t\t\t\tA1DF0B7C1E90288A00B9A176 /* RNControlVolume.m in Sources */,\n+\t\t\t);\n+\t\t\trunOnlyForDeploymentPostprocessing = 0;\n+\t\t};\n+/* End PBXSourcesBuildPhase section */\n+\n+/* Begin XCBuildConfiguration section */\n+\t\tA1DF0B7E1E90288A00B9A176 /* Debug */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n+\t\t\t\tCLANG_ANALYZER_NONNULL = YES;\n+\t\t\t\tCLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"gnu++0x\";\n+\t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n+\t\t\t\tCLANG_ENABLE_MODULES = YES;\n+\t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n+\t\t\t\tCLANG_WARN_BOOL_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_CONSTANT_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;\n+\t\t\t\tCLANG_WARN_DOCUMENTATION_COMMENTS = YES;\n+\t\t\t\tCLANG_WARN_EMPTY_BODY = YES;\n+\t\t\t\tCLANG_WARN_ENUM_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_INFINITE_RECURSION = YES;\n+\t\t\t\tCLANG_WARN_INT_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;\n+\t\t\t\tCLANG_WARN_SUSPICIOUS_MOVE = YES;\n+\t\t\t\tCLANG_WARN_UNREACHABLE_CODE = YES;\n+\t\t\t\tCLANG_WARN__DUPLICATE_METHOD_MATCH = YES;\n+\t\t\t\t\"CODE_SIGN_IDENTITY[sdk=iphoneos*]\" = \"iPhone Developer\";\n+\t\t\t\tCOPY_PHASE_STRIP = NO;\n+\t\t\t\tDEBUG_INFORMATION_FORMAT = dwarf;\n+\t\t\t\tENABLE_STRICT_OBJC_MSGSEND = YES;\n+\t\t\t\tENABLE_TESTABILITY = YES;\n+\t\t\t\tGCC_C_LANGUAGE_STANDARD = gnu99;\n+\t\t\t\tGCC_DYNAMIC_NO_PIC = NO;\n+\t\t\t\tGCC_NO_COMMON_BLOCKS = YES;\n+\t\t\t\tGCC_OPTIMIZATION_LEVEL = 0;\n+\t\t\t\tGCC_PREPROCESSOR_DEFINITIONS = (\n+\t\t\t\t\t\"DEBUG=1\",\n+\t\t\t\t\t\"$(inherited)\",\n+\t\t\t\t);\n+\t\t\t\tGCC_WARN_64_TO_32_BIT_CONVERSION = YES;\n+\t\t\t\tGCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;\n+\t\t\t\tGCC_WARN_UNDECLARED_SELECTOR = YES;\n+\t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n+\t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n+\t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 10.3;\n+\t\t\t\tMTL_ENABLE_DEBUG_INFO = YES;\n+\t\t\t\tONLY_ACTIVE_ARCH = YES;\n+\t\t\t\tSDKROOT = iphoneos;\n+\t\t\t};\n+\t\t\tname = Debug;\n+\t\t};\n+\t\tA1DF0B7F1E90288A00B9A176 /* Release */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t\tALWAYS_SEARCH_USER_PATHS = NO;\n+\t\t\t\tCLANG_ANALYZER_NONNULL = YES;\n+\t\t\t\tCLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;\n+\t\t\t\tCLANG_CXX_LANGUAGE_STANDARD = \"gnu++0x\";\n+\t\t\t\tCLANG_CXX_LIBRARY = \"libc++\";\n+\t\t\t\tCLANG_ENABLE_MODULES = YES;\n+\t\t\t\tCLANG_ENABLE_OBJC_ARC = YES;\n+\t\t\t\tCLANG_WARN_BOOL_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_CONSTANT_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;\n+\t\t\t\tCLANG_WARN_DOCUMENTATION_COMMENTS = YES;\n+\t\t\t\tCLANG_WARN_EMPTY_BODY = YES;\n+\t\t\t\tCLANG_WARN_ENUM_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_INFINITE_RECURSION = YES;\n+\t\t\t\tCLANG_WARN_INT_CONVERSION = YES;\n+\t\t\t\tCLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;\n+\t\t\t\tCLANG_WARN_SUSPICIOUS_MOVE = YES;\n+\t\t\t\tCLANG_WARN_UNREACHABLE_CODE = YES;\n+\t\t\t\tCLANG_WARN__DUPLICATE_METHOD_MATCH = YES;\n+\t\t\t\t\"CODE_SIGN_IDENTITY[sdk=iphoneos*]\" = \"iPhone Developer\";\n+\t\t\t\tCOPY_PHASE_STRIP = NO;\n+\t\t\t\tDEBUG_INFORMATION_FORMAT = \"dwarf-with-dsym\";\n+\t\t\t\tENABLE_NS_ASSERTIONS = NO;\n+\t\t\t\tENABLE_STRICT_OBJC_MSGSEND = YES;\n+\t\t\t\tGCC_C_LANGUAGE_STANDARD = gnu99;\n+\t\t\t\tGCC_NO_COMMON_BLOCKS = YES;\n+\t\t\t\tGCC_WARN_64_TO_32_BIT_CONVERSION = YES;\n+\t\t\t\tGCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;\n+\t\t\t\tGCC_WARN_UNDECLARED_SELECTOR = YES;\n+\t\t\t\tGCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;\n+\t\t\t\tGCC_WARN_UNUSED_FUNCTION = YES;\n+\t\t\t\tGCC_WARN_UNUSED_VARIABLE = YES;\n+\t\t\t\tIPHONEOS_DEPLOYMENT_TARGET = 10.3;\n+\t\t\t\tMTL_ENABLE_DEBUG_INFO = NO;\n+\t\t\t\tSDKROOT = iphoneos;\n+\t\t\t\tVALIDATE_PRODUCT = YES;\n+\t\t\t};\n+\t\t\tname = Release;\n+\t\t};\n+\t\tA1DF0B811E90288A00B9A176 /* Debug */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t\tOTHER_LDFLAGS = \"-ObjC\";\n+\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n+\t\t\t\tSKIP_INSTALL = YES;\n+\t\t\t\tUSER_HEADER_SEARCH_PATHS = \"$(inheritede)\";\n+\t\t\t};\n+\t\t\tname = Debug;\n+\t\t};\n+\t\tA1DF0B821E90288A00B9A176 /* Release */ = {\n+\t\t\tisa = XCBuildConfiguration;\n+\t\t\tbuildSettings = {\n+\t\t\t\tOTHER_LDFLAGS = \"-ObjC\";\n+\t\t\t\tPRODUCT_NAME = \"$(TARGET_NAME)\";\n+\t\t\t\tSKIP_INSTALL = YES;\n+\t\t\t\tUSER_HEADER_SEARCH_PATHS = \"$(inheritede)\";\n+\t\t\t};\n+\t\t\tname = Release;\n+\t\t};\n+/* End XCBuildConfiguration section */\n+\n+/* Begin XCConfigurationList section */\n+\t\tA1DF0B721E90288A00B9A176 /* Build configuration list for PBXProject \"RNControlVolume\" */ = {\n+\t\t\tisa = XCConfigurationList;\n+\t\t\tbuildConfigurations = (\n+\t\t\t\tA1DF0B7E1E90288A00B9A176 /* Debug */,\n+\t\t\t\tA1DF0B7F1E90288A00B9A176 /* Release */,\n+\t\t\t);\n+\t\t\tdefaultConfigurationIsVisible = 0;\n+\t\t\tdefaultConfigurationName = Release;\n+\t\t};\n+\t\tA1DF0B801E90288A00B9A176 /* Build configuration list for PBXNativeTarget \"RNControlVolume\" */ = {\n+\t\t\tisa = XCConfigurationList;\n+\t\t\tbuildConfigurations = (\n+\t\t\t\tA1DF0B811E90288A00B9A176 /* Debug */,\n+\t\t\t\tA1DF0B821E90288A00B9A176 /* Release */,\n+\t\t\t);\n+\t\t\tdefaultConfigurationIsVisible = 0;\n+\t\t\tdefaultConfigurationName = Release;\n+\t\t};\n+/* End XCConfigurationList section */\n+\t};\n+\trootObject = A1DF0B6F1E90288A00B9A176 /* Project object */;\n+}"
  },
  {
    "sha": "18d981003d68d0546c4804ac2ff47dd97c6e7921",
    "filename": "ios/RNControlVolume.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/ios/RNControlVolume.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/ios/RNControlVolume.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/ios/RNControlVolume.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n+<plist version=\"1.0\">\n+<dict>\n+\t<key>IDEDidComputeMac32BitWarning</key>\n+\t<true/>\n+</dict>\n+</plist>"
  },
  {
    "sha": "a289278d3920ce83b8fd036ecac1d7734a60e0db",
    "filename": "ios/RNControlVolume/RNControlVolume.h",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/ios/RNControlVolume/RNControlVolume.h",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/ios/RNControlVolume/RNControlVolume.h",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/ios/RNControlVolume/RNControlVolume.h?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,14 @@\n+//  ReactNativeControlVolume\n+//\n+//  Created by winplaybox on 03/03/2021\n+//  Copyright © 2021. All rights reserved.\n+//\n+\n+#import <React/RCTBridgeModule.h>\n+#import <React/RCTEventEmitter.h>\n+\n+@interface RNControlVolume : RCTEventEmitter <RCTBridgeModule>\n+\n+- (void)initVolumeView;\n+- (void)setVolume:(float)volumeValue;\n+@end"
  },
  {
    "sha": "e35ff020d6efdc77965ecbed6c3838ec22cde6ef",
    "filename": "ios/RNControlVolume/RNControlVolume.m",
    "status": "added",
    "additions": 96,
    "deletions": 0,
    "changes": 96,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/ios/RNControlVolume/RNControlVolume.m",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/ios/RNControlVolume/RNControlVolume.m",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/ios/RNControlVolume/RNControlVolume.m?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,96 @@\n+//\n+//  ReactNativeControlVolume.m\n+//  ReactNativeControlVolume\n+//\n+//  Created by winplaybox on 03/03/2021.\n+//  Copyright © 2021. All rights reserved.\n+//\n+\n+#import \"RNControlVolume.h\"\n+\n+#import <AVFoundation/AVFoundation.h>\n+#import <MediaPlayer/MediaPlayer.h>\n+\n+@implementation RNControlVolume {\n+    MPVolumeView *volumeView;\n+    UISlider *volumeViewSlider;\n+    AVAudioSession *audioSession;\n+    bool hasListeners;\n+}\n+\n+RCT_EXPORT_MODULE(ControlVolume)\n+\n+- (NSArray<NSString *> *)supportedEvents\n+{\n+    return @[@\"VolumeChanged\"];\n+}\n+\n+- (instancetype)init{\n+    self = [super init];\n+    [self initVolumeView];\n+    [self initAudioSessionObserver];\n+    return self;\n+}\n+\n+- (void)startObserving {\n+    hasListeners = YES;\n+}\n+\n+- (void)stopObserving {\n+    hasListeners = NO;\n+}\n+\n++ (BOOL) requiresMainQueueSetup {\n+    return YES;\n+}\n+\n+- (void)initAudioSessionObserver{\n+    audioSession = [AVAudioSession sharedInstance];\n+    [audioSession addObserver:self forKeyPath:@\"outputVolume\" options:0 context:nil];\n+}\n+\n+\n+- (void)initVolumeView{\n+    volumeView = [[MPVolumeView alloc] init];\n+    volumeView.showsRouteButton = NO;\n+    volumeView.showsVolumeSlider = NO;\n+    \n+    for (UIView *view in volumeView.subviews) {\n+        if ([view isKindOfClass:[UISlider class]]) {\n+            volumeViewSlider = (UISlider *)view;\n+            break;\n+        }\n+    }\n+}\n+\n+- (void)setVolume:(float)volumeValue {\n+    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.01 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{\n+        volumeViewSlider.value = volumeValue;\n+    });\n+}\n+\n+- (void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary *)change context:(void *)context{\n+    if ([keyPath isEqual:@\"outputVolume\"] && hasListeners) {\n+            float newVolume = [[AVAudioSession sharedInstance] outputVolume];\n+            [self sendEventWithName:@\"VolumeChanged\" body:@{@\"volume\": [NSNumber numberWithFloat: newVolume]}];\n+    }\n+}\n+\n+- (void)dealloc {\n+    [audioSession removeObserver:self forKeyPath:@\"outputVolume\"];\n+}\n+\n+\n+\n+RCT_EXPORT_METHOD(change:(float)value)\n+{\n+    [self setVolume:value];\n+}\n+\n+RCT_EXPORT_METHOD(getVolume:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject){\n+    dispatch_sync(dispatch_get_main_queue(), ^{\n+        resolve([NSNumber numberWithFloat:[volumeViewSlider value]]);\n+    });\n+}\n+\n+@end"
  },
  {
    "sha": "e6e71b1c452ff7b481707b527aa44880f471e952",
    "filename": "package.json",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/package.json",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/package.json",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/package.json?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61",
    "patch": "@@ -0,0 +1,34 @@\n+{\n+  \"name\": \"react-native-control-volume\",\n+  \"version\": \"0.1.0\",\n+  \"description\": \"Control device volume for iOS and Android\",\n+  \"main\": \"index.js\",\n+  \"scripts\": {\n+    \"test\": \"echo \\\"No tests\\\"\"\n+  },\n+  \"repository\": {\n+    \"type\": \"git\",\n+    \"url\": \"git+https://github.com/Winplaybox/react-native-control-volume.git\"\n+  },\n+  \"keywords\": [\n+    \"volume\",\n+    \"control\",\n+    \"sound\",\n+    \"react-native\"\n+  ],\n+  \"author\": \"winplaybox <winplaybox@gmail.com>\",\n+  \"license\": \"ISC\",\n+  \"bugs\": {\n+    \"url\": \"https://github.com/Winplaybox/react-native-control-volume/issues\"\n+  },\n+  \"homepage\": \"https://github.com/Winplaybox/react-native-control-volume#readme\",\n+  \"peerDependencies\": {\n+    \"react-native\": \">=0.31.0\"\n+  },\n+  \"devDependencies\": {\n+    \"react-native\": \">=0.31.0\"\n+  },\n+  \"dependencies\": {\n+    \"prop-types\": \"^15.6.0\"\n+  }\n+}"
  },
  {
    "sha": "9d92c4e11104c5119a2ad63540d36e88919f1e68",
    "filename": "yarn.lock",
    "status": "added",
    "additions": 3611,
    "deletions": 0,
    "changes": 3611,
    "blob_url": "https://github.com/Winplaybox/react-native-control-volume/blob/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/yarn.lock",
    "raw_url": "https://github.com/Winplaybox/react-native-control-volume/raw/4bdaec0d81a9b8ef39805b60f3010f29f0dadb61/yarn.lock",
    "contents_url": "https://api.github.com/repos/Winplaybox/react-native-control-volume/contents/yarn.lock?ref=4bdaec0d81a9b8ef39805b60f3010f29f0dadb61"
  }
]
