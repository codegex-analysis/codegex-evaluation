[
  {
    "sha": "6bedc98c1f495576035e53eff5f8f46ea9b2b462",
    "filename": "vitals/BatteryTest.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/blob/efa5f124e7ae9ed8191a637399ac73d44a599701/vitals/BatteryTest.java",
    "raw_url": "https://github.com/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/raw/efa5f124e7ae9ed8191a637399ac73d44a599701/vitals/BatteryTest.java",
    "contents_url": "https://api.github.com/repos/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/contents/vitals/BatteryTest.java?ref=efa5f124e7ae9ed8191a637399ac73d44a599701",
    "patch": "@@ -0,0 +1,16 @@\n+package extensions;\r\n+\r\n+public class BatteryTest\r\n+{\r\n+\tpublic static void main(String[] args) {\r\n+\t\t\r\n+\t\t  assert(checkBattery.batteryIsOk(28, 70, 0.7f) == true);\r\n+\t\t  assert(checkBattery.batteryIsOk(50, 85, 0.0f) == false);\r\n+\t\t  assert(checkBattery.batteryIsOk(-1, 85, 0.0f) == false);\r\n+\t\t  assert(checkBattery.batteryIsOk(123, 85, 0.0f) == false);\r\n+\t\t  assert(checkBattery.batteryIsOk(25, 15, 0.0f) == false);\r\n+\t\t  assert(checkBattery.batteryIsOk(25, 25, 0.9f) == false);\r\n+\t\t \r\n+        System.out.println(\"Some more tests needed\");\r\n+    }\r\n+}\r"
  },
  {
    "sha": "5ce27763b82954664060942c44172b6d995c0340",
    "filename": "vitals/Main.java",
    "status": "modified",
    "additions": 24,
    "deletions": 23,
    "changes": 47,
    "blob_url": "https://github.com/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/blob/efa5f124e7ae9ed8191a637399ac73d44a599701/vitals/Main.java",
    "raw_url": "https://github.com/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/raw/efa5f124e7ae9ed8191a637399ac73d44a599701/vitals/Main.java",
    "contents_url": "https://api.github.com/repos/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/contents/vitals/Main.java?ref=efa5f124e7ae9ed8191a637399ac73d44a599701",
    "patch": "@@ -1,23 +1,24 @@\n-package vitals;\n-\n-public class Main {\n-    static boolean batteryIsOk(float temperature, float soc, float chargeRate) {\n-        if(temperature < 0 || temperature > 45) {\n-            System.out.println(\"Temperature is out of range!\");\n-            return false;\n-        } else if(soc < 20 || soc > 80) {\n-            System.out.println(\"State of Charge is out of range!\");\n-            return false;\n-        } else if(chargeRate > 0.8) {\n-            System.out.println(\"Charge Rate is out of range!\");\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    public static void main(String[] args) {\n-        assert(batteryIsOk(25, 70, 0.7f) == true);\n-        assert(batteryIsOk(50, 85, 0.0f) == false);\n-        System.out.println(\"Some more tests needed\");\n-    }\n-}\n+  \r\n+package vitals;\r\n+\r\n+public class Main {\r\n+    static boolean batteryIsOk(float temperature, float soc, float chargeRate) {\r\n+        if(temperature < 0 || temperature > 45) {\r\n+            System.out.println(\"Temperature is out of range!\");\r\n+            return false;\r\n+        } else if(soc < 20 || soc > 80) {\r\n+            System.out.println(\"State of Charge is out of range!\");\r\n+            return false;\r\n+        } else if(chargeRate > 0.8) {\r\n+            System.out.println(\"Charge Rate is out of range!\");\r\n+            return false;\r\n+        }\r\n+        return true;\r\n+    }\r\n+\r\n+    public static void main(String[] args) {\r\n+        assert(batteryIsOk(25, 70, 0.7f) == true);\r\n+        assert(batteryIsOk(50, 85, 0.0f) == false);\r\n+        System.out.println(\"Some more tests needed\");\r\n+    }\r\n+}\r"
  },
  {
    "sha": "8d550011676a3fdc019839ec988305e692c0b755",
    "filename": "vitals/chargeRate.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/blob/efa5f124e7ae9ed8191a637399ac73d44a599701/vitals/chargeRate.java",
    "raw_url": "https://github.com/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/raw/efa5f124e7ae9ed8191a637399ac73d44a599701/vitals/chargeRate.java",
    "contents_url": "https://api.github.com/repos/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/contents/vitals/chargeRate.java?ref=efa5f124e7ae9ed8191a637399ac73d44a599701",
    "patch": "@@ -0,0 +1,33 @@\n+package extensions;\r\n+\r\n+public class chargeRate {\r\n+\r\n+\tfloat maxValue;\r\n+\tboolean flag_chargeRate = false;\r\n+\t\r\n+\tpublic chargeRate(float maxValue) \r\n+\t{\r\n+\t\tthis.maxValue = maxValue;\r\n+\t}\r\n+\t\r\n+\tpublic boolean checkChargeRate(float chargeRate) \r\n+\t{\r\n+\t\tif(!isChargeRateOK(chargeRate))\r\n+\t\t{\r\n+\t\t\tthis.flag_chargeRate = true;\r\n+\t\t}\r\n+\t\treturn flag_chargeRate;\r\n+\t\t\r\n+\t}\r\n+\t\r\n+\tboolean isChargeRateOK(float chargeRate)\r\n+\t{\r\n+\t\tif(chargeRate > maxValue)\r\n+\t\t{\r\n+\t\t\treturn true;\r\n+\t\t}\r\n+\t\treturn false;\r\n+\r\n+\t}\r\n+\t\r\n+}\r"
  },
  {
    "sha": "3af2450c0ff68124290b96c7067bd457d6425ef7",
    "filename": "vitals/checkBattery.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/blob/efa5f124e7ae9ed8191a637399ac73d44a599701/vitals/checkBattery.java",
    "raw_url": "https://github.com/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/raw/efa5f124e7ae9ed8191a637399ac73d44a599701/vitals/checkBattery.java",
    "contents_url": "https://api.github.com/repos/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/contents/vitals/checkBattery.java?ref=efa5f124e7ae9ed8191a637399ac73d44a599701",
    "patch": "@@ -0,0 +1,43 @@\n+package extensions;\r\n+\r\n+public class checkBattery {\r\n+\t\r\n+\tprivate static int Min_Temperature = 0;\r\n+\tprivate static int Max_Temperature = 45;\r\n+\r\n+\tprivate static int Min_SOC = 20;\r\n+\tprivate static int Max_SOC = 80;\r\n+\r\n+\tprivate static float Max_Charge_Rate = 0.8f;\r\n+\r\n+\tpublic static boolean batteryIsOk(int temperature, int soc, float chargeRate) \r\n+\t{\r\n+\t\tboolean isTemperature_OK = checkTemperature(temperature);\r\n+\t\tboolean isSOC_OK = checkSOC(soc);\r\n+\t\tboolean isChargeRate_OK = checkChargeRate(chargeRate);\r\n+\t\t\r\n+\t\tSystem.out.println((!isTemperature_OK) ? \"Temperature Out of Range\" : \"Temperature Is In Range\");\r\n+\t\tSystem.out.println((!isSOC_OK) ? \"SOC Out of Range\" : \"SOC Is In Range\");\r\n+\t\tSystem.out.println((!isChargeRate_OK) ? \"ChargeRate Out of Range\" : \"ChargeRate Is In Range\");\r\n+\t\t\r\n+\t\treturn (isTemperature_OK && isSOC_OK && isChargeRate_OK);\r\n+\t}\r\n+\r\n+\tprivate static boolean checkTemperature(int temperature) {\r\n+\t\t\r\n+\t\treturn new validateRange(Min_Temperature,Max_Temperature)\r\n+\t\t\t\t.checkTemperatureRange(temperature);\r\n+\t}\r\n+\r\n+\tprivate static boolean checkSOC(int soc) {\r\n+\t\treturn new validateRange(Min_SOC,Max_SOC)\r\n+\t\t\t\t.checkSOCRange(soc);\r\n+\t}\r\n+\t\r\n+\tprivate static boolean checkChargeRate(float chargeRate) {\r\n+\t\treturn new chargeRate(Max_Charge_Rate)\r\n+\t\t\t\t.checkChargeRate(chargeRate);\r\n+\t\t\r\n+\t}\r\n+\t\r\n+}\r"
  },
  {
    "sha": "1e832189c75ade148f1ed63dfdfff6e71ba1a674",
    "filename": "vitals/validateRange.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/blob/efa5f124e7ae9ed8191a637399ac73d44a599701/vitals/validateRange.java",
    "raw_url": "https://github.com/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/raw/efa5f124e7ae9ed8191a637399ac73d44a599701/vitals/validateRange.java",
    "contents_url": "https://api.github.com/repos/clean-code-craft-tcq-1/functional-java-PavithraMuralidharan/contents/vitals/validateRange.java?ref=efa5f124e7ae9ed8191a637399ac73d44a599701",
    "patch": "@@ -0,0 +1,43 @@\n+package extensions;\r\n+\r\n+import java.time.temporal.ValueRange;\r\n+\r\n+public class validateRange {\r\n+\tint minValue;\r\n+\tint maxValue;\r\n+\t\r\n+\tboolean flag_temperature = false;\r\n+\tboolean flag_SOC = false;\r\n+\t\r\n+\t\r\n+\t\r\n+\tpublic validateRange(int minValue,\tint maxValue) \r\n+\t{\r\n+\t\tthis.minValue = minValue;\r\n+\t\tthis.maxValue = maxValue;\r\n+\t\t\r\n+\t}\r\n+\tpublic boolean checkTemperatureRange(int temperature) \r\n+\t{\r\n+\t\tif(isValueInRange(minValue, maxValue, temperature))\r\n+\t\t{\r\n+\t\t\tthis.flag_temperature = true;\r\n+\t\t}\r\n+\t\treturn this.flag_temperature;\r\n+\t}\r\n+\t\r\n+\tpublic boolean checkSOCRange(int soc) \r\n+\t{\r\n+\t\tif(isValueInRange(minValue, maxValue, soc))\r\n+\t\t{\r\n+\t\t\tthis.flag_SOC = true;\r\n+\t\t}\r\n+\t\treturn this.flag_SOC;\r\n+\t}\r\n+\t\r\n+\tboolean isValueInRange(int minValue,int maxValue,long value)\r\n+\t{\r\n+\t\treturn ValueRange.of(minValue, maxValue).isValidValue(value);\r\n+\t}\r\n+\t\r\n+}\r"
  }
]
