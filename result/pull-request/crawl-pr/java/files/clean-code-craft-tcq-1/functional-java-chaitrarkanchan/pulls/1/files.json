[
  {
    "sha": "77dec791560c711de34d13fa1847f247dff8914c",
    "filename": ".github/workflows/main-workflow.yml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/blob/1eee20404f604e1c8acbe4b7e24230aab6c415ec/.github/workflows/main-workflow.yml",
    "raw_url": "https://github.com/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/raw/1eee20404f604e1c8acbe4b7e24230aab6c415ec/.github/workflows/main-workflow.yml",
    "contents_url": "https://api.github.com/repos/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/contents/.github/workflows/main-workflow.yml?ref=1eee20404f604e1c8acbe4b7e24230aab6c415ec",
    "patch": "@@ -17,6 +17,6 @@ jobs:\n       with:\n         java-version: 1.8\n     - name: Build\n-      run: javac vitals/Main.java\n+      run: javac vitals/BMS.java\n     - name: Verify\n-      run: java -ea -classpath . vitals.Main\n+      run: java -ea -classpath . vitals.BMS"
  },
  {
    "sha": "fe44483ead1f6fca5bbd3e13c83cf21f6b015152",
    "filename": "vitals/BMS.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/blob/1eee20404f604e1c8acbe4b7e24230aab6c415ec/vitals/BMS.java",
    "raw_url": "https://github.com/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/raw/1eee20404f604e1c8acbe4b7e24230aab6c415ec/vitals/BMS.java",
    "contents_url": "https://api.github.com/repos/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/contents/vitals/BMS.java?ref=1eee20404f604e1c8acbe4b7e24230aab6c415ec",
    "patch": "@@ -0,0 +1,21 @@\n+package vitals;\n+\n+public class BMS {\n+\tstatic boolean batteryIsOk(float temperature, float soc, float chargeRate) {       \n+        StateEstimator state_estimator = new StateEstimator(temperature, soc, chargeRate);\n+        return state_estimator.isBatteryOk();\n+    }\n+\t\n+    public static void main(String[] args) {\n+    \t\n+    \tStateEstimator state_estimator = new StateEstimator();\n+        assert(batteryIsOk(25, 70, 0.7f) == true);\n+        assert(batteryIsOk(30, 85, 0.0f) == false);\n+        assert(batteryIsOk(-1, -20, 0.7f)==false);\n+        assert(batteryIsOk(60, 90, 0.9f)==false);\n+        assert(state_estimator.isTemperatureWithinRange(25)==true);\n+        assert(state_estimator.isTemperatureWithinRange(50)==false);\n+        assert(state_estimator.isSocWithinRange(-20)==false);\n+        assert(state_estimator.isChargeWithinRange(0.9f)==false);\n+    }\n+}"
  },
  {
    "sha": "7833f94d0a1d6cbaa29822e4add4f5317834c3a8",
    "filename": "vitals/Main.java",
    "status": "removed",
    "additions": 0,
    "deletions": 23,
    "changes": 23,
    "blob_url": "https://github.com/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/blob/6c44ed8a6a88c8f9b1782d7b347f401586d7130e/vitals/Main.java",
    "raw_url": "https://github.com/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/raw/6c44ed8a6a88c8f9b1782d7b347f401586d7130e/vitals/Main.java",
    "contents_url": "https://api.github.com/repos/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/contents/vitals/Main.java?ref=6c44ed8a6a88c8f9b1782d7b347f401586d7130e",
    "patch": "@@ -1,23 +0,0 @@\n-package vitals;\n-\n-public class Main {\n-    static boolean batteryIsOk(float temperature, float soc, float chargeRate) {\n-        if(temperature < 0 || temperature > 45) {\n-            System.out.println(\"Temperature is out of range!\");\n-            return false;\n-        } else if(soc < 20 || soc > 80) {\n-            System.out.println(\"State of Charge is out of range!\");\n-            return false;\n-        } else if(chargeRate > 0.8) {\n-            System.out.println(\"Charge Rate is out of range!\");\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    public static void main(String[] args) {\n-        assert(batteryIsOk(25, 70, 0.7f) == true);\n-        assert(batteryIsOk(50, 85, 0.0f) == false);\n-        System.out.println(\"Some more tests needed\");\n-    }\n-}"
  },
  {
    "sha": "32aebba9cdeaacf981dc56364ae2069bd75b0d69",
    "filename": "vitals/StateEstimator.java",
    "status": "added",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/blob/1eee20404f604e1c8acbe4b7e24230aab6c415ec/vitals/StateEstimator.java",
    "raw_url": "https://github.com/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/raw/1eee20404f604e1c8acbe4b7e24230aab6c415ec/vitals/StateEstimator.java",
    "contents_url": "https://api.github.com/repos/clean-code-craft-tcq-1/functional-java-chaitrarkanchan/contents/vitals/StateEstimator.java?ref=1eee20404f604e1c8acbe4b7e24230aab6c415ec",
    "patch": "@@ -0,0 +1,63 @@\n+package vitals;\n+\n+public class StateEstimator {\n+\t\n+\tfinal float MAX_TEMPERATURE = 45;\n+\tfinal float MIN_TEMPERATURE = 0;\n+\tfinal float MAX_SOC= 80;\n+\tfinal float MIN_SOC= 20;\n+\tfinal float MAX_CHARGE_RATE= 0.8f;\n+\t\n+\tfloat temperature;\n+\tfloat stateofcharge;\n+\tfloat chargeRate;\n+\t\n+\tpublic StateEstimator() {\n+\t\t\n+\t}\n+\tpublic StateEstimator(float temperature, float soc, float chargeRate) {\n+\t\tthis.temperature = temperature;\n+\t\tthis.stateofcharge = soc;\n+\t\tthis.chargeRate = chargeRate;\n+\t}\n+\tpublic boolean isBatteryOk() {\n+\t\tboolean status_of_temp=isTemperatureWithinRange(this.temperature);\n+\t\tboolean status_of_soc=isSocWithinRange(this.stateofcharge);\n+\t\tboolean status_of_charge=isChargeWithinRange(this.chargeRate);\n+\t\treturn ((status_of_temp && status_of_soc) && status_of_charge);\n+\t}\n+\t\n+\t\n+\tprivate String isVitalParamStatus(float max_val, float vital_param) {\n+\t\t  return (vital_param>max_val) ? \"high\" : \"low\"; \n+\t\t }\n+\t\n+\t\n+\tprivate boolean isVitalParamWithinRange(float min_val, float max_val, float vital_param) { \n+\t\t\t return (vital_param < min_val || vital_param > max_val); }\n+\t \n+\t\n+\tpublic boolean isTemperatureWithinRange(float temperature) {\t\t\n+\t\tif(isVitalParamWithinRange(MIN_TEMPERATURE,MAX_TEMPERATURE, temperature)){\n+\t\t\tSystem.out.println(\"Temperature is out of range and is \" + isVitalParamStatus(MAX_TEMPERATURE , temperature) + \"!\");\n+\t\t\treturn false;\n+\t\t}\t\n+\t\treturn true;\n+\t}\n+\tpublic boolean isSocWithinRange(float stateofcharge) {\n+\t\tif(isVitalParamWithinRange(MIN_SOC,MAX_SOC, stateofcharge)){\n+\t\t\tSystem.out.println(\"Temperature is out of range and is \" + isVitalParamStatus(MAX_SOC , temperature) + \"!\");\n+\t\t\treturn false;\n+\t\t}\t\n+\t\treturn true;\n+\t}\n+\tpublic boolean isChargeWithinRange(float chargeRate) {\n+\t\tif(isVitalParamStatus(MAX_CHARGE_RATE, chargeRate).equals(\"high\"))\n+\t\t{\n+\t\t\tSystem.out.println(\"Charge Rate is out of range!\");\n+            return false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+}"
  }
]
