[
  {
    "sha": "2d5dbb63b971f8da33b64e0b9a32c3c64cfff656",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/.gitignore",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/.gitignore",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/.gitignore?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -25,4 +25,6 @@ target/\n */.classpath\n __pycache__\n *.pem\n-*.DS_Store\n\\ No newline at end of file\n+*.DS_Store\n+.vscode/*\n+.project"
  },
  {
    "sha": "db11c9d8f10e5a9ad439ad1554f00fc3fd158192",
    "filename": "README.md",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/README.md",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/README.md",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/README.md?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -1 +1,4 @@\n-# gaffer-experimental\n\\ No newline at end of file\n+# gaffer-experimental\n+\n+### gaas-rest\n+-When running ensure that namespace in application properties is set to your environment namespace. Default is \"Default\". Will not run unless set correctly.\n\\ No newline at end of file"
  },
  {
    "sha": "e11923b2d238d90115c7b00893538d653083fe9f",
    "filename": "code-style/checkstyle-suppressions.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/code-style/checkstyle-suppressions.xml",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/code-style/checkstyle-suppressions.xml",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/code-style/checkstyle-suppressions.xml?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -26,4 +26,6 @@\n   <suppress files=\"[\\\\/]src[\\\\/]test[\\\\/].*\" id=\"methodLengthMax\"/>\n   <suppress files=\"[\\\\/]src[\\\\/]test[\\\\/].*\" id=\"parameterNumber\"/>\n   <suppress files=\"GafferController.java\" id=\"hideUtilityClassConstructor\"/>\n+  <suppress files=\"GaaSWebApplication.java\" id=\"hideUtilityClassConstructor\"/>\n+  <suppress files=\"CrdExceptionHandler.java\" id=\"hideUtilityClassConstructor\"/>\n </suppressions>\n\\ No newline at end of file"
  },
  {
    "sha": "ba2eabd4752f75497c8d769fbdde5ece7754587b",
    "filename": "gaas-rest/Dockerfile",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/Dockerfile",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/Dockerfile",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/Dockerfile?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,32 @@\n+ARG BUILDER_IMAGE_NAME=maven\n+ARG BUILDER_IMAGE_TAG=3.6.3-openjdk-8\n+\n+ARG BASE_IMAGE_NAME=debian\n+ARG BASE_IMAGE_TAG=stretch-20201117-slim\n+\n+FROM ${BUILDER_IMAGE_NAME}:${BUILDER_IMAGE_TAG} as builder\n+WORKDIR /workspace\n+\n+COPY ./target ./gaffer-experimental/target\n+\n+RUN if [ ! -f ./gaffer-experimental/target/gaas-rest-0.0.1-SNAPSHOT-exec.jar ]; then \\\n+        rm -rf ./gaffer-experimental && \\\n+        git clone https://github.com/gchq/gaffer-experimental.git && \\\n+        cd gaffer-experimental && \\\n+        mvn clean install -Pquick -pl :gaas-rest -am; \\\n+    fi\n+\n+FROM ${BASE_IMAGE_NAME}:${BASE_IMAGE_TAG}\n+ARG USER=spring\n+ARG GROUP=spring\n+\n+RUN groupadd ${GROUP} && useradd --home-dir /spring --gid ${GROUP} --no-create-home --shell /bin/bash ${USER}\n+\n+RUN mkdir -p /usr/share/man/man1 && \\\n+    apt -qq update &&  \\\n+    apt -qq install -y openjdk-8-jre-headless\n+\n+USER ${USER}\n+WORKDIR /spring\n+COPY --from=builder /workspace/gaffer-experimental/target/gaas-rest-0.0.1-SNAPSHOT-exec.jar ./gaas-rest.jar\n+ENTRYPOINT [ \"java\", \"-jar\", \"./gaas-rest.jar\"]"
  },
  {
    "sha": "35da39433e702832be415d3690ec7ec65d0a83e4",
    "filename": "gaas-rest/README.md",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/README.md",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/README.md",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/README.md?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,67 @@\n+GaaS REST\n+=======================\n+\n+The Gaffer-as-a-Service REST API services requests to create, get and delete graphs.\n+\n+\n+## Swagger UI\n+\n+Run the Spring Boot app locally and access the Swagger dashboard at \n+http://localhost:8080/swagger-ui/\n+\n+\n+## OpenShift Deployment\n+\n+#### Deployment Prerequisites\n+\n+* OpenShift cluster\n+* OpenShift namespace\n+* Openshift CLI (oc client)\n+\n+\n+#### Steps\n+\n+1. Ensure prerequisites are met \n+2. Login to the oc client using the `oc login` command via terminal \n+2. Add the available OpenShift namespace name to /application.properties for the value `namespace`\n+3. Run `mvn clean install -pl :gaas-rest -Popenshift-deploy`\n+\n+## REST Endpoints\n+\n+#### Create A Graph\n+POST `/graph`\n+\n+Request Body:\n+```json\n+{\n+  \"graphId\": \"Example ID\", \n+  \"description\": \"Some description\"\n+}\n+```\n+\n+#### Get All Graphs\n+GET `/graph`\n+\n+#### Delete A Graph\n+\n+DELETE `/graph/{graphId}`\n+\n+\n+## Authentication\n+\n+#### Dev Mode:\n+When running the API in dev mode, use the 'dev' login details to access the graph endpoints.\n+\n+Username: javainuse\n+\n+Password: password\n+\n+\n+## Integration Tests\n+\n+Steps to run both OpenShift integration and end-to-end tests (only). This command uses the failsafe plugin and will run \n+all test classes whose name starts or ends with <i>IT</i>.\n+\n+1. `oc login` to an OpenShift cluster\n+2. Set the correct namespace in application.properties\n+3. Run `mvn verify -pl :gaas-rest -Pintegration-test`"
  },
  {
    "sha": "10755b414122b34327369fd25400d9b07770537d",
    "filename": "gaas-rest/findbugs-exclude.xml",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/findbugs-exclude.xml",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/findbugs-exclude.xml",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/findbugs-exclude.xml?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,21 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Copyright 2016-2017 Crown Copyright\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+<FindBugsFilter>\n+    <Match>\n+        <Source name=\"~.*\\.scala\" />\n+    </Match>\n+</FindBugsFilter>"
  },
  {
    "sha": "d0259fa5acfddb67984d625b354631ab658e5589",
    "filename": "gaas-rest/pom.xml",
    "status": "added",
    "additions": 260,
    "deletions": 0,
    "changes": 260,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/pom.xml",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/pom.xml",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/pom.xml?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,260 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>uk.gov.gchq.gaffer</groupId>\n+        <artifactId>gaffer-experimental</artifactId>\n+        <version>1.13.0</version>\n+    </parent>\n+    <artifactId>gaas-rest</artifactId>\n+    <version>0.0.1-SNAPSHOT</version>\n+    <name>gaas-rest</name>\n+    <description>Gaffer as a Service REST API</description>\n+    <properties>\n+        <junit.version>5.7.0</junit.version>\n+    </properties>\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <!-- Import dependency management from Spring Boot -->\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-dependencies</artifactId>\n+                <version>2.4.2</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+            <dependency>\n+                <groupId>io.springfox</groupId>\n+                <artifactId>springfox-boot-starter</artifactId>\n+                <version>3.0.0</version>\n+            </dependency>\n+            <dependency>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-starter-parent</artifactId>\n+                <version>2.4.0</version>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.springfox</groupId>\n+            <artifactId>springfox-boot-starter</artifactId>\n+            <version>3.0.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.springfox</groupId>\n+            <artifactId>springfox-swagger-ui</artifactId>\n+            <version>3.0.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>uk.gov.gchq.gaffer</groupId>\n+            <artifactId>graph</artifactId>\n+            <version>${gaffer.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.google.code.gson</groupId>\n+            <artifactId>gson</artifactId>\n+            <version>2.8.5</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.kubernetes</groupId>\n+            <artifactId>client-java</artifactId>\n+            <version>11.0.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.kubernetes</groupId>\n+            <artifactId>client-java-extended</artifactId>\n+            <version>11.0.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-security</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.jsonwebtoken</groupId>\n+            <artifactId>jjwt</artifactId>\n+            <version>0.9.1</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>javax.xml.bind</groupId>\n+            <artifactId>jaxb-api</artifactId>\n+            <version>2.3.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.fasterxml.jackson.dataformat</groupId>\n+            <artifactId>jackson-dataformat-yaml</artifactId>\n+            <version>2.11.2</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-validation</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-test</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <version>${junit.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.vintage</groupId>\n+            <artifactId>junit-vintage-engine</artifactId>\n+            <version>${junit.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+    <profiles>\n+\n+        <profile>\n+            <id>test</id>\n+            <activation>\n+                <activeByDefault>true</activeByDefault>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.springframework.boot</groupId>\n+                        <artifactId>spring-boot-maven-plugin</artifactId>\n+                        <configuration>\n+                            <mainClass>uk.gov.gchq.gaffer.gaas.GaaSWebApplication</mainClass>\n+                            <layout>ZIP</layout>\n+                            <executable>true</executable>\n+                            <classifier>exec</classifier>\n+                        </configuration>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>repackage</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-surefire-plugin</artifactId>\n+                        <version>2.22.2</version>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <version>3.0.0-M5</version>\n+                        <configuration>\n+                            <skipTests>true</skipTests>\n+                            <rerunFailingTestsCount>3</rerunFailingTestsCount>\n+                            <includes>\n+                                <include>**/*IT.java</include>\n+                            </includes>\n+                        </configuration>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+        <profile>\n+            <id>openshift-deploy</id>\n+            <activation>\n+                <activeByDefault>false</activeByDefault>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.springframework.boot</groupId>\n+                        <artifactId>spring-boot-maven-plugin</artifactId>\n+                        <configuration>\n+                            <mainClass>uk.gov.gchq.gaffer.gaas.GaaSWebApplication</mainClass>\n+                            <layout>ZIP</layout>\n+                            <executable>true</executable>\n+                            <classifier>exec</classifier>\n+                        </configuration>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>repackage</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-surefire-plugin</artifactId>\n+                        <version>2.22.2</version>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.eclipse.jkube</groupId>\n+                        <artifactId>openshift-maven-plugin</artifactId>\n+                        <version>1.1.0</version>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>resource</goal>\n+                                    <goal>build</goal>\n+                                    <goal>apply</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <version>3.0.0-M5</version>\n+                        <configuration>\n+                            <skipTests>true</skipTests>\n+                            <rerunFailingTestsCount>3</rerunFailingTestsCount>\n+                            <includes>\n+                                <include>**/*IT.java</include>\n+                            </includes>\n+                        </configuration>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+        <profile>\n+            <id>integration-tests</id>\n+            <activation>\n+                <activeByDefault>false</activeByDefault>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>integration-test</id>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <includes>\n+                                        <include>**/*IT.java</include>\n+                                    </includes>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "a0bfe7c0bc2d6ad5cbec69a929497f56b7ac224e",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/AppConfig.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/AppConfig.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/AppConfig.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/AppConfig.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas;\n+\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.apis.CustomObjectsApi;\n+import io.kubernetes.client.util.ClientBuilder;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import java.io.IOException;\n+\n+@Configuration\n+public class AppConfig {\n+\n+    @Bean\n+    public ApiClient apiClient() throws IOException {\n+        return ClientBuilder.defaultClient();\n+    }\n+\n+    @Bean\n+    public CustomObjectsApi customObjectsApi() throws IOException {\n+        return new CustomObjectsApi(apiClient());\n+    }\n+\n+    @Bean\n+    public CoreV1Api coreV1Api() throws IOException {\n+        return new CoreV1Api(apiClient());\n+    }\n+\n+}"
  },
  {
    "sha": "706db0d324cfe44bd93156dca3eb7ecfa7c23031",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/GaaSWebApplication.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/GaaSWebApplication.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/GaaSWebApplication.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/GaaSWebApplication.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+\n+@SpringBootApplication\n+public class GaaSWebApplication {\n+\n+    public static void main(final String[] args) {\n+        SpringApplication.run(GaaSWebApplication.class, args);\n+    }\n+\n+}\n+"
  },
  {
    "sha": "cfca00e964326ffa5ac5df1713980fc12b8bcc81",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/SpringFoxConfig.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/SpringFoxConfig.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/SpringFoxConfig.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/SpringFoxConfig.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.gaas;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spring.web.plugins.Docket;\n+\n+@Configuration\n+public class SpringFoxConfig {\n+    @Bean\n+    public Docket api() {\n+        return new Docket(DocumentationType.SWAGGER_2)\n+                .select()\n+                .apis(RequestHandlerSelectors.any())\n+                .paths(PathSelectors.any())\n+                .build();\n+    }\n+\n+    public void addResourceHandlers(final ResourceHandlerRegistry registry) {\n+        registry.addResourceHandler(\"/swagger-ui.html**\")\n+                .addResourceLocations(\"classpath:/resources/swagger-ui.html\");\n+        registry.addResourceHandler(\"/webjars/**\")\n+                .addResourceLocations(\"classpath:/resources/webjars/\");\n+    }\n+}"
  },
  {
    "sha": "76f29fc2f2475011119654f72de754d4c4d4fbb5",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtAuthenticationEntryPoint.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtAuthenticationEntryPoint.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtAuthenticationEntryPoint.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtAuthenticationEntryPoint.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,37 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas.auth;\n+\n+import org.springframework.security.core.AuthenticationException;\n+import org.springframework.security.web.AuthenticationEntryPoint;\n+import org.springframework.stereotype.Component;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.Serializable;\n+\n+@Component\n+public class JwtAuthenticationEntryPoint implements AuthenticationEntryPoint, Serializable {\n+\n+    private static final long serialVersionUID = -7858869558953243875L;\n+\n+    @Override\n+    public void commence(final HttpServletRequest request, final HttpServletResponse response,\n+                         final AuthenticationException authException) {\n+\n+        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n+    }\n+}"
  },
  {
    "sha": "bba70a4ce6964cbad5be70be6d4014b4bc7dcd89",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtRequest.java",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtRequest.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtRequest.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtRequest.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.gaas.auth;\n+\n+import java.io.Serializable;\n+\n+public class JwtRequest implements Serializable {\n+\n+    private static final long serialVersionUID = 5926468583005150707L;\n+\n+    private String username;\n+    private String password;\n+\n+    //need default constructor for JSON Parsing\n+    public JwtRequest() {\n+\n+    }\n+\n+    public JwtRequest(final String username, final String password) {\n+        this.setUsername(username);\n+        this.setPassword(password);\n+    }\n+\n+    public String getUsername() {\n+        return this.username;\n+    }\n+\n+    public void setUsername(final String username) {\n+        this.username = username;\n+    }\n+\n+    public String getPassword() {\n+        return this.password;\n+    }\n+\n+    public void setPassword(final String password) {\n+        this.password = password;\n+    }\n+}"
  },
  {
    "sha": "d48e86173fa31a1d5315b6de868356d6ab0a536e",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtRequestFilter.java",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtRequestFilter.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtRequestFilter.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtRequestFilter.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.gaas.auth;\n+\n+import io.jsonwebtoken.ExpiredJwtException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.filter.OncePerRequestFilter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+@Component\n+public class JwtRequestFilter extends OncePerRequestFilter {\n+\n+    @Autowired\n+    private JwtUserDetailsService jwtUserDetailsService;\n+\n+    @Autowired\n+    private JwtTokenUtil jwtTokenUtil;\n+\n+    @Override\n+    protected void doFilterInternal(final HttpServletRequest request, final HttpServletResponse response, final FilterChain chain)\n+            throws ServletException, IOException {\n+\n+        final String requestTokenHeader = request.getHeader(\"Authorization\");\n+\n+        String username = null;\n+        String jwtToken = null;\n+        // JWT Token is in the form \"Bearer token\". Remove Bearer word and get\n+        // only the Token\n+        if (requestTokenHeader != null && requestTokenHeader.startsWith(\"Bearer \")) {\n+            jwtToken = requestTokenHeader.substring(7);\n+            try {\n+                username = jwtTokenUtil.getUsernameFromToken(jwtToken);\n+            } catch (IllegalArgumentException e) {\n+                logger.warn(\"Unable to get JWT Token\");\n+            } catch (ExpiredJwtException e) {\n+                logger.warn(\"JWT Token has expired\");\n+            }\n+        } else {\n+            logger.warn(\"JWT Token does not begin with Bearer String\");\n+        }\n+\n+        // Once we get the token validate it.\n+        if (username != null && SecurityContextHolder.getContext().getAuthentication() == null) {\n+\n+            UserDetails userDetails = this.jwtUserDetailsService.loadUserByUsername(username);\n+\n+            // if token is valid configure Spring Security to manually set\n+            // authentication\n+            if (jwtTokenUtil.validateToken(jwtToken, userDetails)) {\n+\n+                UsernamePasswordAuthenticationToken usernamePasswordAuthenticationToken = new UsernamePasswordAuthenticationToken(\n+                        userDetails, null, userDetails.getAuthorities());\n+                usernamePasswordAuthenticationToken\n+                        .setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n+                // After setting the Authentication in the context, we specify\n+                // that the current user is authenticated. So it passes the\n+                // Spring Security Configurations successfully.\n+                SecurityContextHolder.getContext().setAuthentication(usernamePasswordAuthenticationToken);\n+            }\n+        }\n+        chain.doFilter(request, response);\n+    }\n+\n+}"
  },
  {
    "sha": "1ca85aece81ed92423e53bb857b8a0a5048b07b8",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtResponse.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtResponse.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtResponse.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtResponse.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas.auth;\n+\n+import java.io.Serializable;\n+\n+public class JwtResponse implements Serializable {\n+\n+    private static final long serialVersionUID = -8091879091924046844L;\n+    private final String jwttoken;\n+\n+    public JwtResponse(final String jwttoken) {\n+        this.jwttoken = jwttoken;\n+    }\n+\n+    public String getToken() {\n+        return this.jwttoken;\n+    }\n+}"
  },
  {
    "sha": "5d00b73d44104e674ce846769baf1b5e3d72b4b3",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtTokenUtil.java",
    "status": "added",
    "additions": 89,
    "deletions": 0,
    "changes": 89,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtTokenUtil.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtTokenUtil.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtTokenUtil.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas.auth;\n+\n+import io.jsonwebtoken.Claims;\n+import io.jsonwebtoken.Jwts;\n+import io.jsonwebtoken.SignatureAlgorithm;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.stereotype.Component;\n+import java.io.Serializable;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+@Component\n+public class JwtTokenUtil implements Serializable {\n+\n+    private static final long serialVersionUID = -2550185165626007488L;\n+\n+    public static final long JWT_TOKEN_VALIDITY = 5 * 60 * 60;\n+\n+    @Value(\"${jwt.secret}\")\n+    private String secret;\n+\n+    //retrieve username from jwt token\n+    public String getUsernameFromToken(final String token) {\n+        return getClaimFromToken(token, Claims::getSubject);\n+    }\n+\n+    //retrieve expiration date from jwt token\n+    public Date getExpirationDateFromToken(final String token) {\n+        return getClaimFromToken(token, Claims::getExpiration);\n+    }\n+\n+    public <T> T getClaimFromToken(final String token, final Function<Claims, T> claimsResolver) {\n+        final Claims claims = getAllClaimsFromToken(token);\n+        return claimsResolver.apply(claims);\n+    }\n+    //for retrieving any information from token we will need the secret key\n+    private Claims getAllClaimsFromToken(final String token) {\n+        return Jwts.parser().setSigningKey(secret).parseClaimsJws(token).getBody();\n+    }\n+\n+    //check if the token has expired\n+    private Boolean isTokenExpired(final String token) {\n+        final Date expiration = getExpirationDateFromToken(token);\n+        return expiration.before(new Date());\n+    }\n+\n+    //generate token for user\n+    public String generateToken(final UserDetails userDetails) {\n+        Map<String, Object> claims = new HashMap<>();\n+        return doGenerateToken(claims, userDetails.getUsername());\n+    }\n+\n+    //while creating the token -\n+    //1. Define  claims of the token, like Issuer, Expiration, Subject, and the ID\n+    //2. Sign the JWT using the HS512 algorithm and secret key.\n+    //3. According to JWS Compact Serialization(https://tools.ietf.org/html/draft-ietf-jose-json-web-signature-41#section-3.1)\n+    //   compaction of the JWT to a URL-safe string\n+    private String doGenerateToken(final Map<String, Object> claims, final String subject) {\n+\n+        return Jwts.builder().setClaims(claims).setSubject(subject).setIssuedAt(new Date(System.currentTimeMillis()))\n+                .setExpiration(new Date(System.currentTimeMillis() + JWT_TOKEN_VALIDITY * 1000))\n+                .signWith(SignatureAlgorithm.HS512, secret).compact();\n+    }\n+\n+    //validate token\n+    public Boolean validateToken(final String token, final UserDetails userDetails) {\n+        final String username = getUsernameFromToken(token);\n+        return (username.equals(userDetails.getUsername()) && !isTokenExpired(token));\n+    }\n+}"
  },
  {
    "sha": "0615e399919849184d0afb6b23d9c52de5b702b1",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtUserDetailsService.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtUserDetailsService.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtUserDetailsService.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/JwtUserDetailsService.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.gaas.auth;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.security.core.userdetails.User;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.security.core.userdetails.UserDetailsService;\n+import org.springframework.security.core.userdetails.UsernameNotFoundException;\n+import org.springframework.stereotype.Service;\n+import java.util.ArrayList;\n+\n+@Service\n+public class JwtUserDetailsService implements UserDetailsService {\n+\n+    @Value(\"${admin.username}\")\n+    private String adminUsername;\n+    @Value(\"${admin.password}\")\n+    private String adminPassword;\n+\n+    @Override\n+    public UserDetails loadUserByUsername(final String username) throws UsernameNotFoundException {\n+        if (adminUsername.equals(username)) {\n+            return new User(adminUsername, adminPassword,\n+                    new ArrayList<>());\n+        } else {\n+            throw new UsernameNotFoundException(\"User not found with username: \" + username);\n+        }\n+    }\n+}"
  },
  {
    "sha": "d2a4e039af4fb4ff0103a1c6bd91ad846714b3ed",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/WebSecurityConfig.java",
    "status": "added",
    "additions": 91,
    "deletions": 0,
    "changes": 91,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/WebSecurityConfig.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/WebSecurityConfig.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/auth/WebSecurityConfig.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.gaas.auth;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.security.authentication.AuthenticationManager;\n+import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.config.http.SessionCreationPolicy;\n+import org.springframework.security.core.userdetails.UserDetailsService;\n+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n+import org.springframework.security.crypto.password.PasswordEncoder;\n+import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n+\n+@Configuration\n+@EnableWebSecurity\n+@EnableGlobalMethodSecurity(prePostEnabled = true)\n+public class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n+\n+    @Autowired\n+    private JwtAuthenticationEntryPoint jwtAuthenticationEntryPoint;\n+\n+    @Autowired\n+    private UserDetailsService jwtUserDetailsService;\n+\n+    @Autowired\n+    private JwtRequestFilter jwtRequestFilter;\n+\n+    @Autowired\n+    public void configureGlobal(final AuthenticationManagerBuilder auth) throws Exception {\n+        // configure AuthenticationManager so that it knows from where to load\n+        // user for matching credentials\n+        // Use BCryptPasswordEncoder\n+        auth.userDetailsService(jwtUserDetailsService).passwordEncoder(passwordEncoder());\n+    }\n+\n+    @Bean\n+    public PasswordEncoder passwordEncoder() {\n+        return new BCryptPasswordEncoder();\n+    }\n+\n+    @Bean\n+    @Override\n+    public AuthenticationManager authenticationManagerBean() throws Exception {\n+        return super.authenticationManagerBean();\n+    }\n+\n+    @Override\n+    protected void configure(final HttpSecurity httpSecurity) throws Exception {\n+        // We don't need CSRF for this example\n+        httpSecurity.csrf().disable()\n+                // dont authenticate this particular request\n+                .authorizeRequests()\n+                .antMatchers(\"/auth\", \"/v2/api-docs\", \"/swagger-ui.html\", \"/swagger-ui/\", \"/swagger-ui/**\", \"/swagger-resources\",\n+                        \"/swagger-resources/**\", \"/webjars/**\")\n+                .permitAll()\n+                // all other requests need to be authenticated\n+                .anyRequest()\n+                .authenticated()\n+                .and()\n+                // make sure we use stateless session; session won't be used to\n+                // store user's state.\n+                .exceptionHandling()\n+                .authenticationEntryPoint(jwtAuthenticationEntryPoint)\n+                .and()\n+                .sessionManagement()\n+                .sessionCreationPolicy(SessionCreationPolicy.STATELESS);\n+\n+        // Add a filter to validate the tokens with every request\n+        httpSecurity.addFilterBefore(jwtRequestFilter, UsernamePasswordAuthenticationFilter.class);\n+        httpSecurity.cors();\n+    }\n+}"
  },
  {
    "sha": "d9c3dc845c6789548fa402cf4baabbbf78a56f76",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/client/CRDClient.java",
    "status": "added",
    "additions": 141,
    "deletions": 0,
    "changes": 141,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/client/CRDClient.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/client/CRDClient.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/client/CRDClient.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright 2021 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas.client;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import io.kubernetes.client.common.KubernetesObject;\n+import io.kubernetes.client.openapi.ApiException;\n+import io.kubernetes.client.openapi.apis.CoreV1Api;\n+import io.kubernetes.client.openapi.apis.CustomObjectsApi;\n+import io.kubernetes.client.openapi.models.V1NamespaceList;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.stereotype.Service;\n+import uk.gov.gchq.gaffer.gaas.exception.GaaSRestApiException;\n+import uk.gov.gchq.gaffer.graph.GraphConfig;\n+import uk.gov.gchq.gaffer.store.library.FileGraphLibrary;\n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import static uk.gov.gchq.gaffer.gaas.converters.GaaSRestExceptionFactory.from;\n+\n+@Service\n+public class CRDClient {\n+\n+  @Value(\"${group}\")\n+  private String group;\n+  @Value(\"${version}\")\n+  private String version;\n+  @Value(\"${namespace}\")\n+  private String namespace;\n+  private static final String PLURAL = \"gaffers\";\n+  private static final String PRETTY = null;\n+  private static final String DRY_RUN = null;\n+  private static final String FIELD_MANAGER = null;\n+\n+  @Autowired\n+  private CustomObjectsApi customObjectsApi;\n+\n+  @Autowired\n+  private CoreV1Api coreV1Api;\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(CRDClient.class);\n+\n+  public void createCRD(final KubernetesObject requestBody) throws GaaSRestApiException {\n+    try {\n+      customObjectsApi.createNamespacedCustomObject(this.group, this.version, this.namespace, this.PLURAL, requestBody, this.PRETTY, this.DRY_RUN, this.FIELD_MANAGER);\n+    } catch (ApiException e) {\n+      if (requestBody == null || requestBody.getMetadata() == null) {\n+        LOGGER.debug(\"Failed to create CRD \\\"\\\". Kubernetes CustomObjectsApi returned Status Code: \" + e.getCode(), e);\n+      } else {\n+        LOGGER.debug(\"Failed to create CRD with name \\\"\" + requestBody.getMetadata().getName() + \"\\\". Kubernetes CustomObjectsApi returned Status Code: \" + e.getCode(), e);\n+\n+      }\n+      throw from(e);\n+    }\n+  }\n+\n+    public List<GraphConfig> listAllCRDs() throws GaaSRestApiException {\n+        try {\n+            final Object customObject = customObjectsApi.listNamespacedCustomObject(this.group, this.version, this.namespace, this.PLURAL, this.PRETTY, null, null, null, null, null, null, null);\n+            return convertJsonToGraphs(customObject);\n+        } catch (ApiException e) {\n+            LOGGER.debug(\"Failed to list all CRDs. Kubernetes CustomObjectsApi returned Status Code: \" + e.getCode(), e);\n+            throw from(e);\n+        }\n+    }\n+\n+    public void deleteCRD(final String crdName) throws GaaSRestApiException {\n+        try {\n+            customObjectsApi.deleteNamespacedCustomObject(group, version, namespace, PLURAL, crdName, null, null, null, this.DRY_RUN, null);\n+        } catch (ApiException e) {\n+            LOGGER.debug(\"Failed to delete CRD. Kubernetes CustomObjectsApi returned Status Code: \" + e.getCode(), e);\n+            throw from(e);\n+        }\n+    }\n+\n+    public List<String> getAllNameSpaces() throws GaaSRestApiException {\n+        try {\n+            final V1NamespaceList v1NamespaceList =\n+                    coreV1Api.listNamespace(\n+                            \"true\", null, null, null, null, 0, null, null, Integer.MAX_VALUE, Boolean.FALSE);\n+            return namespacesAsList(v1NamespaceList);\n+        } catch (ApiException e) {\n+            LOGGER.debug(\"Failed to list all namespaces. Kubernetes CoreV1Api returned Status Code: \" + e.getCode(), e);\n+            throw from(e);\n+        }\n+    }\n+\n+    private List<String> namespacesAsList(final V1NamespaceList v1NamespaceList) {\n+        final List<String> list =\n+                v1NamespaceList.getItems().stream()\n+                        .map(v1Namespace -> v1Namespace.getMetadata().getName())\n+                        .collect(Collectors.toList());\n+        return list;\n+    }\n+\n+  private List<GraphConfig> convertJsonToGraphs(final Object response) {\n+    final Gson gson = new Gson();\n+    final JsonArray items = new JsonParser().parse(gson.toJson(response)).getAsJsonObject().get(\"items\").getAsJsonArray();\n+\n+    final List<GraphConfig> list = new ArrayList();\n+    final Iterator<JsonElement> iterator = items.iterator();\n+    while (iterator.hasNext()) {\n+      final JsonElement key = iterator.next();\n+      final JsonObject graph = key.getAsJsonObject()\n+              .get(\"spec\").getAsJsonObject()\n+              .get(\"graph\").getAsJsonObject()\n+              .get(\"config\").getAsJsonObject();\n+\n+      final String graphId = gson.fromJson(graph.get(\"graphId\"), String.class);\n+      final String graphDescription = gson.fromJson(graph.get(\"description\"), String.class);\n+\n+      list.add(new GraphConfig.Builder()\n+              .graphId(graphId)\n+              .description(graphDescription)\n+              .library(new FileGraphLibrary()).build());\n+    }\n+    return list;\n+  }\n+}"
  },
  {
    "sha": "91459baf489fdc92ecef2e3c618f15d42da11e49",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/controller/GraphController.java",
    "status": "added",
    "additions": 89,
    "deletions": 0,
    "changes": 89,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/controller/GraphController.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/controller/GraphController.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/controller/GraphController.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,89 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.gaas.controller;\n+\n+import io.kubernetes.client.openapi.ApiClient;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.bind.annotation.CrossOrigin;\n+import org.springframework.web.bind.annotation.DeleteMapping;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import uk.gov.gchq.gaffer.gaas.auth.JwtRequest;\n+import uk.gov.gchq.gaffer.gaas.exception.GaaSRestApiException;\n+import uk.gov.gchq.gaffer.gaas.model.GaaSCreateRequestBody;\n+import uk.gov.gchq.gaffer.gaas.services.AuthService;\n+import uk.gov.gchq.gaffer.gaas.services.CreateGraphService;\n+import uk.gov.gchq.gaffer.gaas.services.DeleteGraphService;\n+import uk.gov.gchq.gaffer.gaas.services.GetGafferService;\n+import uk.gov.gchq.gaffer.gaas.services.GetNamespacesService;\n+import uk.gov.gchq.gaffer.graph.GraphConfig;\n+import javax.validation.Valid;\n+import java.util.List;\n+\n+@Component\n+@CrossOrigin\n+@RestController\n+public class GraphController {\n+\n+    @Autowired\n+    private GetGafferService gafferService;\n+    @Autowired\n+    private CreateGraphService createGraphService;\n+    @Autowired\n+    private AuthService authService;\n+    @Autowired\n+    private DeleteGraphService deleteGraphService;\n+    @Autowired\n+    private ApiClient apiClient;\n+    @Autowired\n+    private GetNamespacesService getNamespacesService;\n+\n+    @PostMapping(\"/auth\")\n+    public ResponseEntity<String> createAuthenticationToken(@RequestBody final JwtRequest authenticationRequest) throws Exception {\n+        final String token = authService.getToken(authenticationRequest);\n+        return ResponseEntity.ok(token);\n+    }\n+\n+    @PostMapping(path = \"/graphs\", consumes = \"application/json\", produces = \"application/json\")\n+    public ResponseEntity<?> addGraph(@Valid @RequestBody final GaaSCreateRequestBody gaaSCreateRequestBody) throws GaaSRestApiException {\n+        createGraphService.createGraph(gaaSCreateRequestBody);\n+        return new ResponseEntity(HttpStatus.CREATED);\n+    }\n+\n+    @GetMapping(path = \"/graphs\", produces = \"application/json\")\n+    public ResponseEntity<List<GraphConfig>> getAllGraphs() throws GaaSRestApiException {\n+        final List<GraphConfig> list = gafferService.getAllGraphs();\n+        return new ResponseEntity(list, HttpStatus.OK);\n+    }\n+\n+    @DeleteMapping(path = \"/graphs/{graphId}\", produces = \"application/json\")\n+    public ResponseEntity<?> deleteGraph(@PathVariable final String graphId) throws GaaSRestApiException {\n+        deleteGraphService.deleteGraph(graphId);\n+        return new ResponseEntity(HttpStatus.NO_CONTENT);\n+    }\n+\n+    @GetMapping(path = \"/namespaces\", produces = \"application/json\")\n+    public ResponseEntity<?> getNamespaces() throws GaaSRestApiException {\n+        final List<String> namespaces = getNamespacesService.getNamespaces();\n+        return new ResponseEntity(namespaces, HttpStatus.OK);\n+    }\n+}"
  },
  {
    "sha": "2e31d729a23d04078e1407803ccbb5b87c32c1f5",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/converters/GaaSRestExceptionFactory.java",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/converters/GaaSRestExceptionFactory.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/converters/GaaSRestExceptionFactory.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/converters/GaaSRestExceptionFactory.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas.converters;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonParser;\n+import com.google.gson.JsonSyntaxException;\n+import io.kubernetes.client.openapi.ApiException;\n+import uk.gov.gchq.gaffer.gaas.exception.GaaSRestApiException;\n+import uk.gov.gchq.gaffer.gaas.model.CrdErrorResponseBody;\n+\n+public final class GaaSRestExceptionFactory {\n+\n+    private static final String MESSAGE_PREFIX = \"Kubernetes Cluster Error: \";\n+\n+    public static GaaSRestApiException from(final ApiException e) {\n+\n+        if (e.getCode() == 401 && isEmpty(e.getMessage())) {\n+            return new GaaSRestApiException(MESSAGE_PREFIX + \"Invalid authentication credentials for Kubernetes cluster\", e.getCode(), e);\n+        }\n+\n+        if (e.getResponseBody() != null && isValidJson(e.getResponseBody())) {\n+            final Gson gson = new Gson();\n+            final JsonObject asJsonObject = new JsonParser().parse(e.getResponseBody()).getAsJsonObject();\n+            final CrdErrorResponseBody response = gson.fromJson(asJsonObject, CrdErrorResponseBody.class);\n+            return new GaaSRestApiException(MESSAGE_PREFIX + \"(\" + response.getReason() + \") \" + response.getMessage(), e.getCode(), e);\n+\n+        } else {\n+            final String message = MESSAGE_PREFIX + e.getMessage();\n+            if (e.getResponseBody() != null) {\n+                message.concat(\" \" + e.getResponseBody());\n+            }\n+            return new GaaSRestApiException(message, e.getCode(), e);\n+        }\n+    }\n+\n+    private static boolean isEmpty(final String string) {\n+        return string == null || string.isEmpty();\n+    }\n+\n+    private static boolean isValidJson(final String possibleJson) {\n+        try {\n+            return new JsonParser().parse(possibleJson).isJsonObject();\n+        } catch (JsonSyntaxException e) {\n+            return false;\n+        }\n+    }\n+\n+    private GaaSRestExceptionFactory() {\n+        // prevents calls from subclass\n+        throw new UnsupportedOperationException();\n+    }\n+}"
  },
  {
    "sha": "a3ee058c42920f53a8a4528ec83253de8bac1417",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/CustomizedResponseEntityExceptionHandler.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/CustomizedResponseEntityExceptionHandler.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/CustomizedResponseEntityExceptionHandler.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/CustomizedResponseEntityExceptionHandler.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas.exception;\n+\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.validation.BindingResult;\n+import org.springframework.validation.ObjectError;\n+import org.springframework.web.bind.MethodArgumentNotValidException;\n+import org.springframework.web.bind.annotation.ControllerAdvice;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+import org.springframework.web.context.request.WebRequest;\n+import org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler;\n+import java.util.List;\n+\n+@ControllerAdvice\n+public class CustomizedResponseEntityExceptionHandler extends ResponseEntityExceptionHandler {\n+\n+    @ExceptionHandler(GaaSRestApiException.class)\n+    public final ResponseEntity<Object> handleAllException(final GaaSRestApiException ex, final WebRequest request) {\n+        String title = \"\";\n+        if (ex.getCause() == null) {\n+            title = ex.getTitle();\n+        } else {\n+            title = ex.getCause().getMessage();\n+        }\n+        final ExceptionResponse exceptionResponse = new ExceptionResponse(title, ex.getMessage());\n+\n+        return new ResponseEntity(exceptionResponse, HttpStatus.valueOf(ex.getStatusCode()));\n+    }\n+\n+    @Override\n+    protected ResponseEntity<Object> handleMethodArgumentNotValid(\n+            final MethodArgumentNotValidException ex, final HttpHeaders headers,\n+            final HttpStatus status, final WebRequest request) {\n+        BindingResult bindingResult = ex.getBindingResult();\n+        List<ObjectError> allErrors = bindingResult.getAllErrors();\n+        String objectError = allErrors.get(0).getDefaultMessage();\n+        ExceptionResponse exceptionResponse = new ExceptionResponse(\"Validation failed\", objectError);\n+        return new ResponseEntity<>(exceptionResponse, HttpStatus.BAD_REQUEST);\n+    }\n+}"
  },
  {
    "sha": "e408f737c942865c8df2226fde3e448c74485342",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/ExceptionResponse.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/ExceptionResponse.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/ExceptionResponse.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/ExceptionResponse.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas.exception;\n+\n+public class ExceptionResponse {\n+    private String title;\n+    private String detail;\n+\n+    public ExceptionResponse(final String title, final String detail) {\n+        this.title = title;\n+        this.detail = detail;\n+    }\n+\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    public String getDetail() {\n+        return detail;\n+    }\n+}"
  },
  {
    "sha": "2140775f83a47a66c49f69f3fe36d13f46963a97",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/GaaSRestApiException.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/GaaSRestApiException.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/GaaSRestApiException.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/exception/GaaSRestApiException.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas.exception;\n+\n+public class GaaSRestApiException extends Exception {\n+\n+    private String title;\n+    private int code;\n+\n+    public GaaSRestApiException(final String title, final String message, final int code) {\n+        super(message);\n+        this.title = title;\n+        this.code = code;\n+    }\n+\n+    public GaaSRestApiException(final String message, final int code, final Throwable cause) {\n+        super(message, cause);\n+        this.title = cause.getMessage();\n+        this.code = code;\n+    }\n+\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    public int getStatusCode() {\n+        return code;\n+    }\n+}"
  },
  {
    "sha": "68a8e4b07e3e38625a6e1b0a313f040ee4faba52",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/CRDCreateRequestBody.java",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/CRDCreateRequestBody.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/CRDCreateRequestBody.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/CRDCreateRequestBody.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas.model;\n+\n+import com.google.gson.annotations.SerializedName;\n+import io.kubernetes.client.common.KubernetesObject;\n+import io.kubernetes.client.openapi.models.V1ObjectMeta;\n+\n+/**\n+ * Gaas Rest Create Gaffer CRD Request Body\n+ */\n+public class CRDCreateRequestBody implements KubernetesObject {\n+\n+    public static final String SERIALISED_NAME_API_VERSION = \"apiVersion\";\n+    public static final String SERIALISED_NAME_KIND = \"kind\";\n+    public static final String SERIALISED_NAME_METADATA = \"metadata\";\n+    public static final String SERIALISED_NAME_SPEC = \"spec\";\n+\n+    @SerializedName(SERIALISED_NAME_API_VERSION)\n+    private String apiVersion;\n+\n+    @SerializedName(SERIALISED_NAME_KIND)\n+    private String kind;\n+\n+    @SerializedName(SERIALISED_NAME_METADATA)\n+    private V1ObjectMeta metadata;\n+\n+    @SerializedName(SERIALISED_NAME_SPEC)\n+    private GraphSpec spec;\n+\n+    public CRDCreateRequestBody apiVersion(final String apiVersion) {\n+        this.apiVersion = apiVersion;\n+        return this;\n+    }\n+\n+    public CRDCreateRequestBody kind(final String kind) {\n+        this.kind = kind;\n+        return this;\n+    }\n+\n+    public CRDCreateRequestBody metaData(final V1ObjectMeta metadata) {\n+        this.metadata = metadata;\n+        return this;\n+    }\n+\n+    public CRDCreateRequestBody spec(final GraphSpec spec) {\n+        this.spec = spec;\n+        return this;\n+    }\n+\n+    @Override\n+    public V1ObjectMeta getMetadata() {\n+        return metadata;\n+    }\n+\n+    @Override\n+    public String getApiVersion() {\n+        return apiVersion;\n+    }\n+\n+    @Override\n+    public String getKind() {\n+        return kind;\n+    }\n+\n+    public GraphSpec getSpec() {\n+        return spec;\n+    }\n+}"
  },
  {
    "sha": "f50345a81b256d264959ba061873f304ef310c5d",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/CrdErrorResponseBody.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/CrdErrorResponseBody.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/CrdErrorResponseBody.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/CrdErrorResponseBody.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.gaas.model;\n+\n+public class CrdErrorResponseBody {\n+\n+    private String message;\n+    private String reason;\n+\n+    public String getMessage() {\n+        return message;\n+    }\n+\n+    public String getReason() {\n+        return reason;\n+    }\n+\n+}"
  },
  {
    "sha": "4d32c738a94c0b46ab0020709df9557c56b4f0b5",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/GaaSCreateRequestBody.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/GaaSCreateRequestBody.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/GaaSCreateRequestBody.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/GaaSCreateRequestBody.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas.model;\n+\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Pattern;\n+\n+/**\n+ * <b>GaaS: Create Gaffer Request Body</b>\n+ */\n+public class GaaSCreateRequestBody {\n+\n+    @NotNull(message = \"Graph id should not be null\")\n+    @NotBlank(message = \"Graph id should not be null\")\n+    @Pattern(regexp = \"^[a-z0-9_-]*$\", message = \"Graph can contain only digits, lowercase letters or the special characters _ and -\")\n+    private String graphId;\n+    @NotBlank(message = \"Description should not be empty\")\n+    private String description;\n+\n+    public GaaSCreateRequestBody() {\n+    }\n+\n+    public GaaSCreateRequestBody(final String graphId, final String description) {\n+        this.graphId = graphId;\n+        this.description = description;\n+    }\n+\n+    public String getGraphId() {\n+        return graphId;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+}"
  },
  {
    "sha": "f3aaa4985045742701d5c6874bb2d13225d15ea5",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/GraphSpec.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/GraphSpec.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/GraphSpec.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/GraphSpec.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.gaas.model;\n+\n+public class GraphSpec {\n+\n+    private NewGraph graph;\n+\n+    public GraphSpec graph(final NewGraph graph) {\n+        this.graph = graph;\n+        return this;\n+    }\n+\n+    public NewGraph getGraph() {\n+        return graph;\n+    }\n+}"
  },
  {
    "sha": "472dd752a8d2cd08cd0339f7c628ef17c599fc3d",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/NewGraph.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/NewGraph.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/NewGraph.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/model/NewGraph.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.gaas.model;\n+\n+import uk.gov.gchq.gaffer.graph.GraphConfig;\n+\n+public class NewGraph {\n+\n+    private GraphConfig config;\n+\n+    public NewGraph config(final GraphConfig config) {\n+        this.config = config;\n+        return this;\n+    }\n+\n+    public GraphConfig getConfig() {\n+        return config;\n+    }\n+}"
  },
  {
    "sha": "685b3627b00365f2532dd6859a2661b4b5ab107f",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/services/AuthService.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/services/AuthService.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/services/AuthService.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/services/AuthService.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2021 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.gaas.services;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.authentication.AuthenticationManager;\n+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n+import org.springframework.security.core.AuthenticationException;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.stereotype.Service;\n+import uk.gov.gchq.gaffer.gaas.auth.JwtRequest;\n+import uk.gov.gchq.gaffer.gaas.auth.JwtTokenUtil;\n+import uk.gov.gchq.gaffer.gaas.auth.JwtUserDetailsService;\n+import uk.gov.gchq.gaffer.gaas.exception.GaaSRestApiException;\n+\n+@Service\n+public class AuthService {\n+\n+    @Autowired\n+    private AuthenticationManager authenticationManager;\n+    @Autowired\n+    private JwtTokenUtil jwtTokenUtil;\n+    @Autowired\n+    private JwtUserDetailsService userDetailsService;\n+\n+    public String getToken(final JwtRequest authenticationRequest) throws GaaSRestApiException {\n+        try {\n+            authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(authenticationRequest.getUsername(), authenticationRequest.getPassword()));\n+        } catch (AuthenticationException e) {\n+            throw new GaaSRestApiException(e.getClass().getSimpleName(), e.getMessage(), 401);\n+        }\n+\n+        final UserDetails userDetails = userDetailsService\n+                .loadUserByUsername(authenticationRequest.getUsername());\n+        return jwtTokenUtil.generateToken(userDetails);\n+    }\n+}"
  },
  {
    "sha": "2b5c215c8bccc930a6668fd4b7f473c5248f3d7e",
    "filename": "gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/services/CreateGraphService.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/macenturalxl1/gaffer-experimental/blob/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/services/CreateGraphService.java",
    "raw_url": "https://github.com/macenturalxl1/gaffer-experimental/raw/159913a8da011bbf5cf1aaf3082234bd245ea35f/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/services/CreateGraphService.java",
    "contents_url": "https://api.github.com/repos/macenturalxl1/gaffer-experimental/contents/gaas-rest/src/main/java/uk/gov/gchq/gaffer/gaas/services/CreateGraphService.java?ref=159913a8da011bbf5cf1aaf3082234bd245ea35f",
    "patch": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2021 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.gaas.services;\n+\n+import io.kubernetes.client.openapi.ApiClient;\n+import io.kubernetes.client.openapi.models.V1ObjectMeta;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.stereotype.Service;\n+import uk.gov.gchq.gaffer.gaas.client.CRDClient;\n+import uk.gov.gchq.gaffer.gaas.exception.GaaSRestApiException;\n+import uk.gov.gchq.gaffer.gaas.model.CRDCreateRequestBody;\n+import uk.gov.gchq.gaffer.gaas.model.GaaSCreateRequestBody;\n+import uk.gov.gchq.gaffer.gaas.model.GraphSpec;\n+import uk.gov.gchq.gaffer.gaas.model.NewGraph;\n+import uk.gov.gchq.gaffer.graph.GraphConfig;\n+\n+@Service\n+public class CreateGraphService {\n+\n+    @Autowired\n+    private ApiClient apiClient;\n+\n+    @Autowired\n+    private CRDClient crdClient;\n+    @Value(\"${group}\")\n+    private String group;\n+    @Value(\"${version}\")\n+    private String version;\n+    @Value(\"${kind}\")\n+    private String kind;\n+\n+    public void createGraph(final GaaSCreateRequestBody gaaSCreateRequestBodyInput) throws GaaSRestApiException {\n+        crdClient.createCRD(buildCreateCRDRequestBody(gaaSCreateRequestBodyInput));\n+    }\n+\n+    private CRDCreateRequestBody buildCreateCRDRequestBody(final GaaSCreateRequestBody graph) {\n+        final V1ObjectMeta metadata = new V1ObjectMeta().name(graph.getGraphId());\n+\n+        return new CRDCreateRequestBody()\n+                .apiVersion(group + \"/\" + version)\n+                .kind(kind)\n+                .metaData(metadata)\n+                .spec(new GraphSpec()\n+                        .graph(new NewGraph()\n+                                .config(new GraphConfig.Builder()\n+                                        .graphId(graph.getGraphId())\n+                                        .description(graph.getDescription())\n+                                        .library(null)\n+                                        .build())));\n+    }\n+}"
  }
]
