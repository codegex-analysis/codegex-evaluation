[
  {
    "sha": "4552313ae638467dfd0b29d9593bcf476fbdd463",
    "filename": "app/build.gradle",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/build.gradle",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/build.gradle",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/build.gradle?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,15 +1,15 @@\n apply plugin: 'com.android.application'\n \n android {\n-    compileSdkVersion 25\n-    buildToolsVersion '27.0.3'\n+    compileSdkVersion 29\n+    buildToolsVersion '29.0.3'\n     defaultConfig {\n         applicationId \"com.microntek.threecats.autovolume\"\n         minSdkVersion 21\n-        targetSdkVersion 22\n+        targetSdkVersion 29\n         versionCode 4\n         versionName \"1.2.1\"\n-        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n+        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'\n     }\n     buildTypes {\n         release {\n@@ -21,9 +21,9 @@ android {\n \n dependencies {\n     implementation fileTree(dir: 'libs', include: ['*.jar'])\n-    implementation 'com.android.support.constraint:constraint-layout:1.1.0'\n+    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\n     testImplementation 'junit:junit:4.12'\n-    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {\n+    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {\n         exclude group: 'com.android.support', module: 'support-annotations'\n     })\n }"
  },
  {
    "sha": "f2e1dbc5744b03471b1eb77e5e1ae32e48cf678e",
    "filename": "app/src/androidTest/java/com/microntek/threecats/autovolume/ExampleInstrumentedTest.java",
    "status": "removed",
    "additions": 0,
    "deletions": 26,
    "changes": 26,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/b7501beb208aba8d1f832cf86e4fe8bd14fae1e1/app/src/androidTest/java/com/microntek/threecats/autovolume/ExampleInstrumentedTest.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/b7501beb208aba8d1f832cf86e4fe8bd14fae1e1/app/src/androidTest/java/com/microntek/threecats/autovolume/ExampleInstrumentedTest.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/androidTest/java/com/microntek/threecats/autovolume/ExampleInstrumentedTest.java?ref=b7501beb208aba8d1f832cf86e4fe8bd14fae1e1",
    "patch": "@@ -1,26 +0,0 @@\n-package com.microntek.threecats.autovolume;\n-\n-import android.content.Context;\n-import android.support.test.InstrumentationRegistry;\n-import android.support.test.runner.AndroidJUnit4;\n-\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-\n-import static org.junit.Assert.*;\n-\n-/**\n- * Instrumented test, which will execute on an Android device.\n- *\n- * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n- */\n-@RunWith(AndroidJUnit4.class)\n-public class ExampleInstrumentedTest {\n-    @Test\n-    public void useAppContext() throws Exception {\n-        // Context of the app under test.\n-        Context appContext = InstrumentationRegistry.getTargetContext();\n-\n-        assertEquals(\"com.microntek.threecats.autovolume\", appContext.getPackageName());\n-    }\n-}"
  },
  {
    "sha": "ba87ab6b0fcf6dbd9fd26cede24a651a9a5585b3",
    "filename": "app/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 3,
    "deletions": 19,
    "changes": 22,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/AndroidManifest.xml?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -4,6 +4,7 @@\n \n     <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n     <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\" />\n+    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" />\n \n     <application\n         android:allowBackup=\"true\"\n@@ -25,28 +26,11 @@\n         <receiver android:name=\"com.microntek.threecats.autovolume.AutoVolumeBooter\">\n             <intent-filter>\n                 <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n+                <action android:name=\"android.intent.action.SCREEN_ON\" />\n             </intent-filter>\n         </receiver>\n-        <!--activity\n-            android:name=\".TestVolActivity\"\n-            android:label=\"AutoTestVol\">\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-        </activity-->\n-        <!--activity\n-            android:name=\".MainActivity\"\n-            android:label=\"AutoVolume\">\n-            <intent-filter>\n-                <action android:name=\"android.intent.action.MAIN\" />\n-\n-                <category android:name=\"android.intent.category.LAUNCHER\" />\n-            </intent-filter>\n-        </activity-->\n \n-        <service android:name=\"com.microntek.threecats.autovolume.VolumeService\" android:exported=\"false\" />\n+        <service android:name=\"com.microntek.threecats.autovolume.VolumeService\" />\n     </application>\n \n </manifest>\n\\ No newline at end of file"
  },
  {
    "sha": "992b9f5ccc1613a4850ac4fc3cc55330bc291fed",
    "filename": "app/src/main/java/com/microntek/CarManageCallback.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 3,
    "changes": 5,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/CarManageCallback.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/CarManageCallback.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/CarManageCallback.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,10 +1,9 @@\n-package android.microntek;\n+package com.microntek;\n \n-import android.microntek.ICarManageCallback.Stub;\n import android.os.Bundle;\n import android.os.RemoteException;\n \n-public class CarManageCallback extends Stub {\n+public class CarManageCallback extends ICarManageCallback.Stub {\n     public void onStatusChanged(String type, Bundle bundle) throws RemoteException {\n     }\n }",
    "previous_filename": "app/src/main/java/android/microntek/CarManageCallback.java"
  },
  {
    "sha": "83db4cf67ac219bde1f6a2cbc452802f536df977",
    "filename": "app/src/main/java/com/microntek/CarManager.java",
    "status": "renamed",
    "additions": 6,
    "deletions": 4,
    "changes": 10,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/CarManager.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/CarManager.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/CarManager.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,6 +1,8 @@\n-package android.microntek;\n+package com.microntek;\n \n-import android.microntek.ICarService.Stub;\n+import com.microntek.ICarService.Stub;\n+\n+import android.annotation.SuppressLint;\n import android.os.Bundle;\n import android.os.Handler;\n import android.os.IBinder;\n@@ -43,7 +45,7 @@ public CarManager() {\n \n     private static IBinder getCarService() {\n         try {\n-            Class localClass = Class.forName(\"android.os.ServiceManager\");\n+            @SuppressLint(\"PrivateApi\") Class localClass = Class.forName(\"android.os.ServiceManager\");\n             Method getService = localClass.getMethod(\"getService\", new Class[] {String.class});\n \n             if(getService != null) {\n@@ -203,4 +205,4 @@ public void putDataChanage(String type, String state) {\n         } catch (Exception e) {\n         }\n     }\n-}\n+}\n\\ No newline at end of file",
    "previous_filename": "app/src/main/java/android/microntek/CarManager.java"
  },
  {
    "sha": "a2f1113fb6a169a91085973820131d05f5c881d1",
    "filename": "app/src/main/java/com/microntek/ICarManageCallback.java",
    "status": "renamed",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/ICarManageCallback.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/ICarManageCallback.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/ICarManageCallback.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,4 +1,4 @@\n-package android.microntek;\n+package com.microntek;\n \n import android.os.Binder;\n import android.os.Bundle;\n@@ -92,4 +92,4 @@ public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws\n     }\n \n     void onStatusChanged(String str, Bundle bundle) throws RemoteException;\n-}\n+}\n\\ No newline at end of file",
    "previous_filename": "app/src/main/java/android/microntek/ICarManageCallback.java"
  },
  {
    "sha": "b91bdb61a28c74aeae3f4cacff9bcdc2e5ed83f0",
    "filename": "app/src/main/java/com/microntek/ICarService.java",
    "status": "renamed",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/ICarService.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/ICarService.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/ICarService.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,4 +1,4 @@\n-package android.microntek;\n+package com.microntek;\n \n import android.os.Binder;\n import android.os.IBinder;\n@@ -456,12 +456,12 @@ public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws\n                     return true;\n                 case TRANSACTION_registerCallback /*15*/:\n                     data.enforceInterface(DESCRIPTOR);\n-                    registerCallback(android.microntek.ICarManageCallback.Stub.asInterface(data.readStrongBinder()));\n+                    registerCallback(ICarManageCallback.Stub.asInterface(data.readStrongBinder()));\n                     reply.writeNoException();\n                     return true;\n                 case TRANSACTION_unregisterCallback /*16*/:\n                     data.enforceInterface(DESCRIPTOR);\n-                    unregisterCallback(android.microntek.ICarManageCallback.Stub.asInterface(data.readStrongBinder()));\n+                    unregisterCallback(ICarManageCallback.Stub.asInterface(data.readStrongBinder()));\n                     reply.writeNoException();\n                     return true;\n                 case TRANSACTION_setParameters /*17*/:\n@@ -527,4 +527,4 @@ public boolean onTransact(int code, Parcel data, Parcel reply, int flags) throws\n     int setParameters(String str) throws RemoteException;\n \n     void unregisterCallback(ICarManageCallback iCarManageCallback) throws RemoteException;\n-}\n+}\n\\ No newline at end of file",
    "previous_filename": "app/src/main/java/android/microntek/ICarService.java"
  },
  {
    "sha": "b454d0ba2e60e6d83358455cbc5f01ca5cb66248",
    "filename": "app/src/main/java/com/microntek/IRTable.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/IRTable.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/IRTable.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/IRTable.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,4 +1,4 @@\n-package android.microntek;\n+package com.microntek;\n \n public class IRTable {\n     public static final int IR_AB = 363;",
    "previous_filename": "app/src/main/java/android/microntek/IRTable.java"
  },
  {
    "sha": "6deb78e419d3098003f7343f4c47508b6d21301c",
    "filename": "app/src/main/java/com/microntek/MTCData.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/MTCData.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/MTCData.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/MTCData.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,4 +1,4 @@\n-package android.microntek;\n+package com.microntek;\n \n public class MTCData {\n     public static final int MAX_BALANCE = 28;",
    "previous_filename": "app/src/main/java/android/microntek/MTCData.java"
  },
  {
    "sha": "aa7f799a08c90fdade3591340f9483ef1d7a30c5",
    "filename": "app/src/main/java/com/microntek/threecats/autovolume/AutoVolumeBooter.java",
    "status": "modified",
    "additions": 37,
    "deletions": 2,
    "changes": 39,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/AutoVolumeBooter.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/AutoVolumeBooter.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/threecats/autovolume/AutoVolumeBooter.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,13 +1,48 @@\n package com.microntek.threecats.autovolume;\n \n+import android.app.ActivityManager;\n import android.content.BroadcastReceiver;\n import android.content.Context;\n import android.content.Intent;\n+import android.os.Build;\n+\n+import java.util.Objects;\n \n public class AutoVolumeBooter extends BroadcastReceiver {\n     @Override\n     public void onReceive(Context context, Intent intent) {\n-        Intent i = new Intent(context, VolumeService.class);\n-        context.startService(i);\n+        if (Objects.equals(intent.getAction(), Intent.ACTION_BOOT_COMPLETED) ||\n+                Objects.equals(intent.getAction(), Intent.ACTION_SCREEN_ON)) {\n+\n+            Intent intentVolumeService = new Intent(context, VolumeService.class);\n+            intentVolumeService.addFlags(Intent.FLAG_INCLUDE_STOPPED_PACKAGES);\n+\n+            if (isMyServiceRunning(context)) {\n+                context.stopService(intentVolumeService);\n+            }\n+\n+            startService(context, intentVolumeService);\n+        }\n+    }\n+\n+    private boolean isMyServiceRunning(Context context) {\n+        ActivityManager manager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);\n+\n+        if (manager != null) {\n+            for (ActivityManager.RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {\n+                if (VolumeService.class.getName().equals(service.service.getClassName())) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private void startService(Context context, Intent intent) {\n+        if (Build.VERSION.SDK_INT < 26) {\n+            context.startService(intent);\n+        } else {\n+            context.startForegroundService(intent);\n+        }\n     }\n }"
  },
  {
    "sha": "fa27aa8d891080bc416297cae1b2bd51b60bdf2d",
    "filename": "app/src/main/java/com/microntek/threecats/autovolume/CanBusDriver.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/CanBusDriver.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/CanBusDriver.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/threecats/autovolume/CanBusDriver.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,9 +1,10 @@\n package com.microntek.threecats.autovolume;\n \n-import android.microntek.CarManager;\n import android.os.Handler;\n import android.util.Log;\n \n+import com.microntek.CarManager;\n+\n public class CanBusDriver {\n     private static final String TAG = CanBusDriver.class.getSimpleName();\n "
  },
  {
    "sha": "b3b018fa20c550624c81b84289c78a9ba3ca4465",
    "filename": "app/src/main/java/com/microntek/threecats/autovolume/MainActivity.java",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/MainActivity.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/MainActivity.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/threecats/autovolume/MainActivity.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -216,6 +216,8 @@ public void onStopTrackingTouch(SeekBar seekBar) {\n         staticVolumeView.setText(\"Static Volume: \" + staticVolume);\n \n         debugVolView = (TextView) findViewById(R.id.debugVolView);\n+\n+        this.startService(new Intent(this, VolumeService.class));\n     }\n \n     private void switchSend(boolean on) {"
  },
  {
    "sha": "d9ba1758473068f2f12fa49af4ff9a198bc6a4fe",
    "filename": "app/src/main/java/com/microntek/threecats/autovolume/TestVolActivity.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/TestVolActivity.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/TestVolActivity.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/threecats/autovolume/TestVolActivity.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -2,13 +2,14 @@\n \n import android.app.Activity;\n import android.content.Intent;\n-import android.microntek.CarManager;\n import android.os.Bundle;\n import android.util.Log;\n import android.view.View;\n import android.widget.EditText;\n import android.widget.TextView;\n \n+import com.microntek.CarManager;\n+\n public class TestVolActivity extends Activity {\n     private static final String TAG = TestVolActivity.class.getName();\n "
  },
  {
    "sha": "4fa7f26e30b589c8ad29ad66b3091f2ec4076712",
    "filename": "app/src/main/java/com/microntek/threecats/autovolume/VolumeService.java",
    "status": "modified",
    "additions": 56,
    "deletions": 4,
    "changes": 60,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/VolumeService.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/VolumeService.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/threecats/autovolume/VolumeService.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,13 +1,16 @@\n package com.microntek.threecats.autovolume;\n \n+import android.app.Notification;\n+import android.app.NotificationChannel;\n+import android.app.NotificationManager;\n import android.app.Service;\n import android.content.BroadcastReceiver;\n import android.content.Context;\n import android.content.Intent;\n import android.content.IntentFilter;\n import android.graphics.PixelFormat;\n-import android.microntek.CarManager;\n import android.os.Binder;\n+import android.os.Build;\n import android.os.Bundle;\n import android.os.Handler;\n import android.os.IBinder;\n@@ -20,6 +23,10 @@\n import android.widget.ImageView;\n import android.widget.TextView;\n \n+import com.microntek.CarManager;\n+\n+import java.util.Objects;\n+\n public class VolumeService extends Service implements CanBusReceiver.Callback {\n     private static final int MAX_REV = 5000; // RPM\n     private static final int MAX_SPEED = 200; // km/h\n@@ -45,6 +52,8 @@\n     private int speed;\n     private boolean revBarChanging;\n     private boolean speedBarChanging;\n+    private boolean mServiceInitialized;\n+    private boolean mForceRestart;\n \n     public int getEffect() {\n         return effect;\n@@ -163,13 +172,24 @@ VolumeService getService() {\n         }\n     }\n \n-    private final IBinder mBinder = new VolumeBinder();\n+    private final VolumeBinder mBinder = new VolumeBinder();\n \n     @Override\n     public int onStartCommand(Intent intent, int flags, int startId) {\n+        super.onStartCommand(intent, flags, startId);\n+\n         if (effect == 0) {\n-            stopSelf();\n+            //stopSelf();\n         }\n+\n+        if (mServiceInitialized) {\n+            return START_STICKY;\n+        }\n+\n+        startForeground(1556, createNotification());\n+        mServiceInitialized = true;\n+        mForceRestart = true;\n+\n         return START_STICKY;\n     }\n \n@@ -184,6 +204,9 @@ public void onCreate() {\n \n         Log.d(TAG, \"Service is UP!\");\n \n+        mServiceInitialized = false;\n+        mForceRestart = false;\n+\n         effect = getSharedPreferences(\"main\", 0).getInt(\"effect\", 0);\n         monitor = getSharedPreferences(\"main\", 0).getBoolean(\"monitor\", false);\n \n@@ -209,11 +232,38 @@ public void onReceive(Context context, Intent intent) {\n         initOVerlay();\n     }\n \n+    private Notification createNotification() {\n+        Notification.Builder notification;\n+\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n+            String channelId = \"VolumeService\";\n+\n+            NotificationChannel channel = new NotificationChannel(channelId, getString(R.string.PersistentNotificationChannel), NotificationManager.IMPORTANCE_NONE);\n+            NotificationManager notificationManager = getSystemService(NotificationManager.class);\n+            Objects.requireNonNull(notificationManager).createNotificationChannel(channel);\n+\n+            notification = new Notification.Builder(this, channelId);\n+        } else {\n+            notification = new Notification.Builder(this);\n+        }\n+\n+        return notification.setContentTitle(getString(R.string.app_name))\n+                .setContentText(getString(R.string.VolumeServiceDescription))\n+                .setOngoing(true)\n+                .build();\n+    }\n+\n     @Override\n     public void onDestroy() {\n         super.onDestroy();\n \n-        Log.d(TAG, \"Service is DOWN!\");\n+        if (mForceRestart) {\n+            VolumeServiceWatchdog.scheduleServiceRestart(this);\n+        }\n+\n+        if (mServiceInitialized) {\n+            mServiceInitialized = false;\n+        }\n \n         unregisterReceiver(volumeReceiver);\n \n@@ -222,6 +272,8 @@ public void onDestroy() {\n         canBusDriver.stop();\n \n         h.removeCallbacks(r);\n+\n+        Log.d(TAG, \"Service is DOWN!\");\n     }\n \n     interface UICallback {"
  },
  {
    "sha": "43fdd6a12919168b0a931aecdb786970ef616314",
    "filename": "app/src/main/java/com/microntek/threecats/autovolume/VolumeServiceWatchdog.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/VolumeServiceWatchdog.java",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/java/com/microntek/threecats/autovolume/VolumeServiceWatchdog.java",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/java/com/microntek/threecats/autovolume/VolumeServiceWatchdog.java?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -0,0 +1,22 @@\n+package com.microntek.threecats.autovolume;\n+\n+import android.app.AlarmManager;\n+import android.app.PendingIntent;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.SystemClock;\n+\n+class VolumeServiceWatchdog {\n+    public static void scheduleServiceRestart(Context context) {\n+        // WORKAROUND: Do not know why MTCD Android does not respect START_STICKY\n+\n+        Intent restartServiceIntent = new Intent(context, VolumeService.class);\n+        restartServiceIntent.setPackage(context.getPackageName());\n+\n+        PendingIntent restartServicePendingIntent = PendingIntent.getService(context, 1556, restartServiceIntent, PendingIntent.FLAG_ONE_SHOT);\n+        AlarmManager alarmManager = (AlarmManager)context.getSystemService(Context.ALARM_SERVICE);\n+        alarmManager.set(AlarmManager.ELAPSED_REALTIME, SystemClock.elapsedRealtime() + SERVICE_RESTART_DELAY_MS, restartServicePendingIntent);\n+    }\n+\n+    private static final int SERVICE_RESTART_DELAY_MS = 100;\n+}"
  },
  {
    "sha": "bab3c87877f51e6be1786cf5dc77609967667a52",
    "filename": "app/src/main/res/layout-nodpi/activity_test_vol.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/res/layout-nodpi/activity_test_vol.xml",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/res/layout-nodpi/activity_test_vol.xml",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/res/layout-nodpi/activity_test_vol.xml?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<android.support.constraint.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n     xmlns:tools=\"http://schemas.android.com/tools\"\n     android:layout_width=\"match_parent\"\n@@ -119,4 +119,4 @@\n         app:layout_constraintStart_toEndOf=\"@+id/button\"\n         app:layout_constraintTop_toBottomOf=\"@+id/button4\" />\n \n-</android.support.constraint.ConstraintLayout>\n+</androidx.constraintlayout.widget.ConstraintLayout>"
  },
  {
    "sha": "c1f2d254833b73fa06fdf1bb0685e5a2dd654b9c",
    "filename": "app/src/main/res/values/strings.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/res/values/strings.xml",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/app/src/main/res/values/strings.xml",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/app/src/main/res/values/strings.xml?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,3 +1,5 @@\n <resources>\n     <string name=\"app_name\">AutoVolume</string>\n+    <string name=\"VolumeServiceDescription\">Service is now active.</string>\n+    <string name=\"PersistentNotificationChannel\">Persistent notification</string>\n </resources>"
  },
  {
    "sha": "2deb66dd259bea3dec8b1ba7b9af6f917a5c6857",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/build.gradle",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/build.gradle",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/build.gradle?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -7,7 +7,7 @@ buildscript {\n         jcenter()\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:3.1.1'\n+        classpath 'com.android.tools.build:gradle:4.0.1'\n         \n \n         // NOTE: Do not place your application dependencies here; they belong"
  },
  {
    "sha": "9e6fce102d11ffba5aae545fe7b688386407e699",
    "filename": "gradle.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/gradle.properties",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/gradle.properties",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/gradle.properties?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -9,6 +9,8 @@\n \n # Specifies the JVM arguments used for the daemon process.\n # The setting is particularly useful for tweaking memory settings.\n+android.enableJetifier=true\n+android.useAndroidX=true\n org.gradle.jvmargs=-Xmx1536m\n \n # When configured, Gradle will run in incubating parallel mode."
  },
  {
    "sha": "82ecb25cbe35e6a2d39a3f74cd0f111cc1d0fcdc",
    "filename": "gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/rumburake/AutoVolume/blob/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/rumburake/AutoVolume/raw/352380c79c29355aa7dc2f7e5c3dc0c76f82b058/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/rumburake/AutoVolume/contents/gradle/wrapper/gradle-wrapper.properties?ref=352380c79c29355aa7dc2f7e5c3dc0c76f82b058",
    "patch": "@@ -1,6 +1,6 @@\n-#Sun Apr 15 13:48:15 BST 2018\n+#Sun Sep 13 11:09:39 CEST 2020\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-4.4-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.1.1-all.zip"
  }
]
