[
  {
    "sha": "cebc9df352d9ad1f21f45dc21f500029b7461f23",
    "filename": "android-exoplayer/build.gradle",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/react-native-video/react-native-video/blob/e9322360552b993117bc10f182a7c908381348cf/android-exoplayer/build.gradle",
    "raw_url": "https://github.com/react-native-video/react-native-video/raw/e9322360552b993117bc10f182a7c908381348cf/android-exoplayer/build.gradle",
    "contents_url": "https://api.github.com/repos/react-native-video/react-native-video/contents/android-exoplayer/build.gradle?ref=e9322360552b993117bc10f182a7c908381348cf",
    "patch": "@@ -28,7 +28,7 @@ android {\n \n dependencies {\n     implementation \"com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}\"\n-    implementation('com.google.android.exoplayer:exoplayer:2.11.4') {\n+    implementation('com.google.android.exoplayer:exoplayer:2.13.2') {\n         exclude group: 'com.android.support'\n     }\n \n@@ -37,7 +37,7 @@ dependencies {\n     implementation \"androidx.core:core:1.1.0\"\n     implementation \"androidx.media:media:1.1.0\"\n \n-    implementation('com.google.android.exoplayer:extension-okhttp:2.11.4') {\n+    implementation('com.google.android.exoplayer:extension-okhttp:2.13.2') {\n         exclude group: 'com.squareup.okhttp3', module: 'okhttp'\n     }\n     implementation 'com.squareup.okhttp3:okhttp:3.14.3'"
  },
  {
    "sha": "99446bde5e7c141d15804c9827a978c44691d61d",
    "filename": "android-exoplayer/src/main/java/com/brentvatne/exoplayer/ExoPlayerView.java",
    "status": "modified",
    "additions": 8,
    "deletions": 7,
    "changes": 15,
    "blob_url": "https://github.com/react-native-video/react-native-video/blob/e9322360552b993117bc10f182a7c908381348cf/android-exoplayer/src/main/java/com/brentvatne/exoplayer/ExoPlayerView.java",
    "raw_url": "https://github.com/react-native-video/react-native-video/raw/e9322360552b993117bc10f182a7c908381348cf/android-exoplayer/src/main/java/com/brentvatne/exoplayer/ExoPlayerView.java",
    "contents_url": "https://api.github.com/repos/react-native-video/react-native-video/contents/android-exoplayer/src/main/java/com/brentvatne/exoplayer/ExoPlayerView.java?ref=e9322360552b993117bc10f182a7c908381348cf",
    "patch": "@@ -17,6 +17,7 @@\n import com.google.android.exoplayer2.ExoPlayer;\n import com.google.android.exoplayer2.PlaybackParameters;\n import com.google.android.exoplayer2.SimpleExoPlayer;\n+import com.google.android.exoplayer2.video.VideoListener;\n import com.google.android.exoplayer2.Timeline;\n import com.google.android.exoplayer2.source.TrackGroupArray;\n import com.google.android.exoplayer2.text.Cue;\n@@ -113,8 +114,8 @@ private void updateShutterViewVisibility() {\n     }\n \n     /**\n-     * Set the {@link SimpleExoPlayer} to use. The {@link SimpleExoPlayer#setTextOutput} and\n-     * {@link SimpleExoPlayer#setVideoListener} method of the player will be called and previous\n+     * Set the {@link SimpleExoPlayer} to use. The {@link SimpleExoPlayer#addTextOutput} and\n+     * {@link SimpleExoPlayer#addVideoListener} method of the player will be called and previous\n      * assignments are overridden.\n      *\n      * @param player The {@link SimpleExoPlayer} to use.\n@@ -124,18 +125,18 @@ public void setPlayer(SimpleExoPlayer player) {\n             return;\n         }\n         if (this.player != null) {\n-            this.player.setTextOutput(null);\n-            this.player.setVideoListener(null);\n+            this.player.addTextOutput(null);\n+            this.player.removeVideoListener(componentListener);\n             this.player.removeListener(componentListener);\n             this.player.setVideoSurface(null);\n         }\n         this.player = player;\n         shutterView.setVisibility(VISIBLE);\n         if (player != null) {\n             setVideoView();\n-            player.setVideoListener(componentListener);\n+            player.addVideoListener(componentListener);\n             player.addListener(componentListener);\n-            player.setTextOutput(componentListener);\n+            player.addTextOutput(componentListener);\n         }\n     }\n \n@@ -205,7 +206,7 @@ public void invalidateAspectRatio() {\n         layout.invalidateAspectRatio();\n     }\n \n-    private final class ComponentListener implements SimpleExoPlayer.VideoListener,\n+    private final class ComponentListener implements VideoListener,\n             TextOutput, ExoPlayer.EventListener {\n \n         // TextRenderer.Output implementation"
  },
  {
    "sha": "ad350fc12f86235fe2dbec88b3ac6f3fdea69740",
    "filename": "android-exoplayer/src/main/java/com/brentvatne/exoplayer/ReactExoplayerView.java",
    "status": "modified",
    "additions": 40,
    "deletions": 32,
    "changes": 72,
    "blob_url": "https://github.com/react-native-video/react-native-video/blob/e9322360552b993117bc10f182a7c908381348cf/android-exoplayer/src/main/java/com/brentvatne/exoplayer/ReactExoplayerView.java",
    "raw_url": "https://github.com/react-native-video/react-native-video/raw/e9322360552b993117bc10f182a7c908381348cf/android-exoplayer/src/main/java/com/brentvatne/exoplayer/ReactExoplayerView.java",
    "contents_url": "https://api.github.com/repos/react-native-video/react-native-video/contents/android-exoplayer/src/main/java/com/brentvatne/exoplayer/ReactExoplayerView.java?ref=e9322360552b993117bc10f182a7c908381348cf",
    "patch": "@@ -37,7 +37,7 @@\n import com.google.android.exoplayer2.SimpleExoPlayer;\n import com.google.android.exoplayer2.Timeline;\n import com.google.android.exoplayer2.drm.DefaultDrmSessionManager;\n-import com.google.android.exoplayer2.drm.DefaultDrmSessionEventListener;\n+import com.google.android.exoplayer2.drm.DrmSessionEventListener;\n import com.google.android.exoplayer2.drm.DrmSessionManager;\n import com.google.android.exoplayer2.drm.FrameworkMediaCrypto;\n import com.google.android.exoplayer2.drm.FrameworkMediaDrm;\n@@ -62,7 +62,7 @@\n import com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;\n import com.google.android.exoplayer2.trackselection.DefaultTrackSelector;\n import com.google.android.exoplayer2.trackselection.MappingTrackSelector;\n-import com.google.android.exoplayer2.trackselection.TrackSelection;\n+import com.google.android.exoplayer2.trackselection.ExoTrackSelection;\n import com.google.android.exoplayer2.trackselection.TrackSelectionArray;\n import com.google.android.exoplayer2.ui.PlayerControlView;\n import com.google.android.exoplayer2.upstream.BandwidthMeter;\n@@ -88,7 +88,7 @@\n         BecomingNoisyListener,\n         AudioManager.OnAudioFocusChangeListener,\n         MetadataOutput,\n-        DefaultDrmSessionEventListener {\n+        DrmSessionEventListener {\n \n     private static final String TAG = \"ReactExoplayerView\";\n \n@@ -394,7 +394,7 @@ private void initializePlayer() {\n             @Override\n             public void run() {\n                 if (player == null) {\n-                    TrackSelection.Factory videoTrackSelectionFactory = new AdaptiveTrackSelection.Factory();\n+                    ExoTrackSelection.Factory videoTrackSelectionFactory = new AdaptiveTrackSelection.Factory();\n                     trackSelector = new DefaultTrackSelector(videoTrackSelectionFactory);\n                     trackSelector.setParameters(trackSelector.buildUponParameters()\n                             .setMaxVideoBitrate(maxBitRate == 0 ? Integer.MAX_VALUE : maxBitRate));\n@@ -409,8 +409,27 @@ public void run() {\n                     DefaultRenderersFactory renderersFactory =\n                             new DefaultRenderersFactory(getContext())\n                                     .setExtensionRendererMode(DefaultRenderersFactory.EXTENSION_RENDERER_MODE_OFF);\n+                    player = new SimpleExoPlayer.Builder(getContext(), renderersFactory)\n+                                .setTrackSelectorâ€‹(trackSelector)\n+                                .setBandwidthMeter(bandwidthMeter)\n+                                .setLoadControl(defaultLoadControl)\n+                                .build();\n+                    player.addListener(self);\n+                    player.addMetadataOutput(self);\n+                    exoPlayerView.setPlayer(player);\n+                    audioBecomingNoisyReceiver.setListener(self);\n+                    bandwidthMeter.addEventListener(new Handler(), self);\n+                    setPlayWhenReady(!isPaused);\n+                    playerNeedsSource = true;\n+\n+                    PlaybackParameters params = new PlaybackParameters(rate, 1f);\n+                    player.setPlaybackParameters(params);\n+                }\n+                if (playerNeedsSource && srcUri != null) {\n+                    exoPlayerView.invalidateAspectRatio();\n+\n                     // DRM\n-                    DrmSessionManager<FrameworkMediaCrypto> drmSessionManager = null;\n+                    DrmSessionManager drmSessionManager = null;\n                     if (self.drmUUID != null) {\n                         try {\n                             drmSessionManager = buildDrmSessionManager(self.drmUUID, self.drmLicenseUrl,\n@@ -424,24 +443,9 @@ public void run() {\n                         }\n                     }\n                     // End DRM\n-                    player = ExoPlayerFactory.newSimpleInstance(getContext(), renderersFactory,\n-                            trackSelector, defaultLoadControl, drmSessionManager, bandwidthMeter);\n-                    player.addListener(self);\n-                    player.addMetadataOutput(self);\n-                    exoPlayerView.setPlayer(player);\n-                    audioBecomingNoisyReceiver.setListener(self);\n-                    bandwidthMeter.addEventListener(new Handler(), self);\n-                    setPlayWhenReady(!isPaused);\n-                    playerNeedsSource = true;\n-\n-                    PlaybackParameters params = new PlaybackParameters(rate, 1f);\n-                    player.setPlaybackParameters(params);\n-                }\n-                if (playerNeedsSource && srcUri != null) {\n-                    exoPlayerView.invalidateAspectRatio();\n \n                     ArrayList<MediaSource> mediaSourceList = buildTextSources();\n-                    MediaSource videoSource = buildMediaSource(srcUri, extension);\n+                    MediaSource videoSource = buildMediaSource(srcUri, extension, drmSessionManager);\n                     MediaSource mediaSource;\n                     if (mediaSourceList.size() == 0) {\n                         mediaSource = videoSource;\n@@ -472,7 +476,7 @@ public void run() {\n         }, 1);\n     }\n \n-    private DrmSessionManager<FrameworkMediaCrypto> buildDrmSessionManager(UUID uuid,\n+    private DrmSessionManager buildDrmSessionManager(UUID uuid,\n                                                                            String licenseUrl, String[] keyRequestPropertiesArray) throws UnsupportedDrmException {\n         if (Util.SDK_INT < 18) {\n             return null;\n@@ -485,38 +489,42 @@ public void run() {\n                         keyRequestPropertiesArray[i + 1]);\n             }\n         }\n-        return new DefaultDrmSessionManager<>(uuid,\n+        return new DefaultDrmSessionManager(uuid,\n                 FrameworkMediaDrm.newInstance(uuid), drmCallback, null, false, 3);\n     }\n \n-    private MediaSource buildMediaSource(Uri uri, String overrideExtension) {\n+    private MediaSource buildMediaSource(Uri uri, String overrideExtension, DrmSessionManager drmSessionManager) {\n         int type = Util.inferContentType(!TextUtils.isEmpty(overrideExtension) ? \".\" + overrideExtension\n                 : uri.getLastPathSegment());\n         switch (type) {\n             case C.TYPE_SS:\n                 return new SsMediaSource.Factory(\n                         new DefaultSsChunkSource.Factory(mediaDataSourceFactory),\n                         buildDataSourceFactory(false)\n-                ).setLoadErrorHandlingPolicy(\n+                ).setDrmSessionManager(drmSessionManager)\n+                 .setLoadErrorHandlingPolicy(\n                         config.buildLoadErrorHandlingPolicy(minLoadRetryCount)\n                 ).createMediaSource(uri);\n             case C.TYPE_DASH:\n                 return new DashMediaSource.Factory(\n                         new DefaultDashChunkSource.Factory(mediaDataSourceFactory),\n                         buildDataSourceFactory(false)\n-                ).setLoadErrorHandlingPolicy(\n+                ).setDrmSessionManager(drmSessionManager)\n+                 .setLoadErrorHandlingPolicy(\n                         config.buildLoadErrorHandlingPolicy(minLoadRetryCount)\n                 ).createMediaSource(uri);\n             case C.TYPE_HLS:\n                 return new HlsMediaSource.Factory(\n                         mediaDataSourceFactory\n-                ).setLoadErrorHandlingPolicy(\n+                ).setDrmSessionManager(drmSessionManager)\n+                 .setLoadErrorHandlingPolicy(\n                         config.buildLoadErrorHandlingPolicy(minLoadRetryCount)\n                 ).createMediaSource(uri);\n             case C.TYPE_OTHER:\n                 return new ProgressiveMediaSource.Factory(\n                         mediaDataSourceFactory\n-                ).setLoadErrorHandlingPolicy(\n+                ).setDrmSessionManager(drmSessionManager)\n+                 .setLoadErrorHandlingPolicy(\n                         config.buildLoadErrorHandlingPolicy(minLoadRetryCount)\n                 ).createMediaSource(uri);\n             default: {\n@@ -1336,23 +1344,23 @@ public void setDrmLicenseHeader(String[] header){\n \n \n     @Override\n-    public void onDrmKeysLoaded() {\n+    public void onDrmKeysLoaded(int windowIndex, MediaSource.MediaPeriodId mediaPeriodId) {\n         Log.d(\"DRM Info\", \"onDrmKeysLoaded\");\n     }\n \n     @Override\n-    public void onDrmSessionManagerError(Exception e) {\n+    public void onDrmSessionManagerError(int windowIndex, MediaSource.MediaPeriodId mediaPeriodId, Exception e) {\n         Log.d(\"DRM Info\", \"onDrmSessionManagerError\");\n         eventEmitter.error(\"onDrmSessionManagerError\", e);\n     }\n \n     @Override\n-    public void onDrmKeysRestored() {\n+    public void onDrmKeysRestored(int windowIndex, MediaSource.MediaPeriodId mediaPeriodId) {\n         Log.d(\"DRM Info\", \"onDrmKeysRestored\");\n     }\n \n     @Override\n-    public void onDrmKeysRemoved() {\n+    public void onDrmKeysRemoved(int windowIndex, MediaSource.MediaPeriodId mediaPeriodId) {\n         Log.d(\"DRM Info\", \"onDrmKeysRemoved\");\n     }\n "
  }
]
