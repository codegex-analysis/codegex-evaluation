[
  {
    "sha": "9027be406cd39f36e69963eb8055c47e26301328",
    "filename": "jib-core/src/main/java/com/google/cloud/tools/jib/frontend/CredentialRetrieverFactory.java",
    "status": "modified",
    "additions": 18,
    "deletions": 8,
    "changes": 26,
    "blob_url": "https://github.com/GoogleContainerTools/jib/blob/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-core/src/main/java/com/google/cloud/tools/jib/frontend/CredentialRetrieverFactory.java",
    "raw_url": "https://github.com/GoogleContainerTools/jib/raw/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-core/src/main/java/com/google/cloud/tools/jib/frontend/CredentialRetrieverFactory.java",
    "contents_url": "https://api.github.com/repos/GoogleContainerTools/jib/contents/jib-core/src/main/java/com/google/cloud/tools/jib/frontend/CredentialRetrieverFactory.java?ref=59070dfb13df61fd4ac0cc2b37294b997b04c4e0",
    "patch": "@@ -32,10 +32,7 @@\n import java.io.IOException;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n+import java.util.*;\n import java.util.function.Consumer;\n \n /** Static factories for various {@link CredentialRetriever}s. */\n@@ -45,7 +42,7 @@\n   @VisibleForTesting\n   @FunctionalInterface\n   interface DockerCredentialHelperFactory {\n-    DockerCredentialHelper create(String registry, Path credentialHelper);\n+    DockerCredentialHelper create(String registry, Path credentialHelper, Map<String, String> environment);\n   }\n \n   /** Used for passing in mock {@link GoogleCredentials} for testing. */\n@@ -81,24 +78,37 @@ public static CredentialRetrieverFactory forImage(\n         imageReference,\n         logger,\n         DockerCredentialHelper::new,\n-        GoogleCredentials::getApplicationDefault);\n+        GoogleCredentials::getApplicationDefault,\n+        new HashMap<>());\n+  }\n+\n+  public static CredentialRetrieverFactory forImage(\n+          ImageReference imageReference, Consumer<LogEvent> logger, Map<String, String> environment) {\n+    return new CredentialRetrieverFactory(\n+            imageReference,\n+            logger,\n+            DockerCredentialHelper::new,\n+            GoogleCredentials::getApplicationDefault, environment);\n   }\n \n   private final ImageReference imageReference;\n   private final Consumer<LogEvent> logger;\n   private final DockerCredentialHelperFactory dockerCredentialHelperFactory;\n   private final GoogleCredentialsProvider googleCredentialsProvider;\n+  private final Map<String, String> environment;\n \n   @VisibleForTesting\n   CredentialRetrieverFactory(\n       ImageReference imageReference,\n       Consumer<LogEvent> logger,\n       DockerCredentialHelperFactory dockerCredentialHelperFactory,\n-      GoogleCredentialsProvider googleCredentialsProvider) {\n+      GoogleCredentialsProvider googleCredentialsProvider,\n+      Map<String, String> environment) {\n     this.imageReference = imageReference;\n     this.logger = logger;\n     this.dockerCredentialHelperFactory = dockerCredentialHelperFactory;\n     this.googleCredentialsProvider = googleCredentialsProvider;\n+    this.environment = environment;\n   }\n \n   /**\n@@ -292,7 +302,7 @@ private Credential retrieveFromDockerCredentialHelper(Path credentialHelper)\n           IOException {\n     Credential credentials =\n         dockerCredentialHelperFactory\n-            .create(imageReference.getRegistry(), credentialHelper)\n+            .create(imageReference.getRegistry(), credentialHelper, environment)\n             .retrieve();\n     logGotCredentialsFrom(\"credential helper \" + credentialHelper.getFileName().toString());\n     return credentials;"
  },
  {
    "sha": "cd77b452738de5add9cae72228290f4fa4e30527",
    "filename": "jib-core/src/main/java/com/google/cloud/tools/jib/registry/credentials/DockerCredentialHelper.java",
    "status": "modified",
    "additions": 12,
    "deletions": 6,
    "changes": 18,
    "blob_url": "https://github.com/GoogleContainerTools/jib/blob/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-core/src/main/java/com/google/cloud/tools/jib/registry/credentials/DockerCredentialHelper.java",
    "raw_url": "https://github.com/GoogleContainerTools/jib/raw/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-core/src/main/java/com/google/cloud/tools/jib/registry/credentials/DockerCredentialHelper.java",
    "contents_url": "https://api.github.com/repos/GoogleContainerTools/jib/contents/jib-core/src/main/java/com/google/cloud/tools/jib/registry/credentials/DockerCredentialHelper.java?ref=59070dfb13df61fd4ac0cc2b37294b997b04c4e0",
    "patch": "@@ -30,10 +30,7 @@\n import java.io.OutputStream;\n import java.nio.charset.StandardCharsets;\n import java.nio.file.Path;\n-import java.util.Arrays;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Properties;\n+import java.util.*;\n import java.util.function.Function;\n import javax.annotation.Nullable;\n \n@@ -49,6 +46,7 @@\n   private final Path credentialHelper;\n   private final Properties systemProperties;\n   private Function<List<String>, ProcessBuilder> processBuilderFactory;\n+  private Map<String, String> environment;\n \n   /** Template for a Docker credential helper output. */\n   @VisibleForTesting\n@@ -72,18 +70,24 @@\n    * @param serverUrl the server URL to pass into the credential helper\n    * @param credentialHelper the path to the credential helper executable\n    */\n+  public DockerCredentialHelper(String serverUrl, Path credentialHelper, Map<String, String> environment) {\n+    this(serverUrl, credentialHelper, environment, System.getProperties(), ProcessBuilder::new);\n+  }\n+\n   public DockerCredentialHelper(String serverUrl, Path credentialHelper) {\n-    this(serverUrl, credentialHelper, System.getProperties(), ProcessBuilder::new);\n+    this(serverUrl, credentialHelper, new HashMap<>(), System.getProperties(), ProcessBuilder::new);\n   }\n \n   @VisibleForTesting\n   DockerCredentialHelper(\n       String serverUrl,\n       Path credentialHelper,\n+      Map<String, String> environment,\n       Properties systemProperties,\n       Function<List<String>, ProcessBuilder> processBuilderFactory) {\n     this.serverUrl = serverUrl;\n     this.credentialHelper = credentialHelper;\n+    this.environment = environment;\n     this.systemProperties = systemProperties;\n     this.processBuilderFactory = processBuilderFactory;\n   }\n@@ -131,7 +135,9 @@ private Credential retrieve(List<String> credentialHelperCommand)\n       throws IOException, CredentialHelperUnhandledServerUrlException,\n           CredentialHelperNotFoundException {\n     try {\n-      Process process = processBuilderFactory.apply(credentialHelperCommand).start();\n+      ProcessBuilder processBuilder = processBuilderFactory.apply(credentialHelperCommand);\n+      processBuilder.environment().putAll(environment);\n+      Process process = processBuilder.start();\n \n       try (OutputStream processStdin = process.getOutputStream()) {\n         processStdin.write(serverUrl.getBytes(StandardCharsets.UTF_8));"
  },
  {
    "sha": "c93c503c929abf31581ead1a6c29441aee16e3ab",
    "filename": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/GoogleContainerTools/jib/blob/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java",
    "raw_url": "https://github.com/GoogleContainerTools/jib/raw/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java",
    "contents_url": "https://api.github.com/repos/GoogleContainerTools/jib/contents/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/BaseImageParameters.java?ref=59070dfb13df61fd4ac0cc2b37294b997b04c4e0",
    "patch": "@@ -28,12 +28,16 @@\n import org.gradle.api.tasks.Nested;\n import org.gradle.api.tasks.Optional;\n \n+import java.util.HashMap;\n+import java.util.Map;\n+\n /** Object in {@link JibExtension} that configures the base image. */\n public class BaseImageParameters {\n \n   private final AuthParameters auth;\n   private Property<String> image;\n   @Nullable private String credHelper;\n+  @Nullable private Map<String, String> environment;\n   private final PlatformParametersSpec platformParametersSpec;\n   private final ListProperty<PlatformParameters> platforms;\n \n@@ -48,6 +52,7 @@ public BaseImageParameters(ObjectFactory objectFactory) {\n     amd64Linux.setArchitecture(\"amd64\");\n     amd64Linux.setOs(\"linux\");\n     platforms.add(amd64Linux);\n+    environment = new HashMap<>();\n   }\n \n   @Nested\n@@ -93,6 +98,17 @@ public void setCredHelper(String credHelper) {\n     this.credHelper = credHelper;\n   }\n \n+  @Input\n+  @Nullable\n+  @Optional\n+  public Map<String, String> getEnvironment() {\n+    return environment;\n+  }\n+\n+  public void setEnvironment(Map<String, String> environment) {\n+    this.environment = environment;\n+  }\n+\n   @Nested\n   @Optional\n   public AuthParameters getAuth() {"
  },
  {
    "sha": "8f78a0785e677a1eb9ab2cc40435931a7045d953",
    "filename": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/GradleRawConfiguration.java",
    "status": "modified",
    "additions": 19,
    "deletions": 5,
    "changes": 24,
    "blob_url": "https://github.com/GoogleContainerTools/jib/blob/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/GradleRawConfiguration.java",
    "raw_url": "https://github.com/GoogleContainerTools/jib/raw/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/GradleRawConfiguration.java",
    "contents_url": "https://api.github.com/repos/GoogleContainerTools/jib/contents/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/GradleRawConfiguration.java?ref=59070dfb13df61fd4ac0cc2b37294b997b04c4e0",
    "patch": "@@ -23,11 +23,7 @@\n import com.google.cloud.tools.jib.plugins.common.RawConfiguration;\n import java.nio.file.Path;\n import java.nio.file.Paths;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n-import java.util.Set;\n+import java.util.*;\n \n /** Gradle-specific adapter for providing raw configuration parameter values. */\n public class GradleRawConfiguration implements RawConfiguration {\n@@ -225,4 +221,22 @@ public Path getImageJsonOutputPath() {\n   public List<? extends PlatformConfiguration> getPlatforms() {\n     return jibExtension.getFrom().getPlatforms().get();\n   }\n+\n+  @Override\n+  public Map<String, String> getFromEnvironment() {\n+    Map<String, String> environment = jibExtension.getFrom().getEnvironment();\n+    if (environment == null) {\n+      return new HashMap<>();\n+    }\n+    return environment;\n+  }\n+\n+  @Override\n+  public Map<String, String> getToEnvironment() {\n+    Map<String, String> environment = jibExtension.getTo().getEnvironment();\n+    if (environment == null) {\n+      return new HashMap<>();\n+    }\n+    return environment;\n+  }\n }"
  },
  {
    "sha": "f8df37deac274bce352b7475bd283a1efca3dd66",
    "filename": "jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/GoogleContainerTools/jib/blob/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java",
    "raw_url": "https://github.com/GoogleContainerTools/jib/raw/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java",
    "contents_url": "https://api.github.com/repos/GoogleContainerTools/jib/contents/jib-gradle-plugin/src/main/java/com/google/cloud/tools/jib/gradle/TargetImageParameters.java?ref=59070dfb13df61fd4ac0cc2b37294b997b04c4e0",
    "patch": "@@ -19,7 +19,10 @@\n import com.google.cloud.tools.jib.plugins.common.ConfigurationPropertyValidator;\n import com.google.cloud.tools.jib.plugins.common.PropertyNames;\n import com.google.common.collect.ImmutableSet;\n+\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import javax.annotation.Nullable;\n import javax.inject.Inject;\n@@ -40,12 +43,14 @@\n   private Property<String> image;\n   private SetProperty<String> tags;\n   @Nullable private String credHelper;\n+  @Nullable private Map<String, String> environment;\n \n   @Inject\n   public TargetImageParameters(ObjectFactory objectFactory) {\n     auth = objectFactory.newInstance(AuthParameters.class, \"to.auth\");\n     image = objectFactory.property(String.class);\n     tags = objectFactory.setProperty(String.class).empty();\n+    environment = new HashMap<>();\n   }\n \n   @Input\n@@ -112,6 +117,17 @@ public void setCredHelper(String credHelper) {\n     this.credHelper = credHelper;\n   }\n \n+  @Input\n+  @Nullable\n+  @Optional\n+  public Map<String, String> getEnvironment() {\n+    return environment;\n+  }\n+\n+  public void setEnvironment(Map<String, String> environment) {\n+    this.environment = environment;\n+  }\n+\n   @Nested\n   @Optional\n   public AuthParameters getAuth() {"
  },
  {
    "sha": "adfe66fc3cd60d18092877117aaa9e3e804c05eb",
    "filename": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java",
    "status": "modified",
    "additions": 7,
    "deletions": 4,
    "changes": 11,
    "blob_url": "https://github.com/GoogleContainerTools/jib/blob/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java",
    "raw_url": "https://github.com/GoogleContainerTools/jib/raw/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java",
    "contents_url": "https://api.github.com/repos/GoogleContainerTools/jib/contents/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/PluginConfigurationProcessor.java?ref=59070dfb13df61fd4ac0cc2b37294b997b04c4e0",
    "patch": "@@ -275,7 +275,8 @@ public static JibBuildRunner createJibBuildRunnerForRegistryImage(\n         PropertyNames.TO_AUTH_PASSWORD,\n         rawConfiguration.getToAuth(),\n         inferredAuthProvider,\n-        rawConfiguration.getToCredHelper().orElse(null));\n+        rawConfiguration.getToCredHelper().orElse(null),\n+        rawConfiguration.getToEnvironment());\n \n     boolean alwaysCacheBaseImage =\n         Boolean.parseBoolean(\n@@ -528,7 +529,8 @@ static JavaContainerBuilder getJavaContainerBuilderWithBaseImage(\n         PropertyNames.FROM_AUTH_PASSWORD,\n         rawConfiguration.getFromAuth(),\n         inferredAuthProvider,\n-        rawConfiguration.getFromCredHelper().orElse(null));\n+        rawConfiguration.getFromCredHelper().orElse(null),\n+            rawConfiguration.getFromEnvironment());\n     return JavaContainerBuilder.from(baseImage);\n   }\n \n@@ -858,11 +860,12 @@ private static void configureCredentialRetrievers(\n       String passwordPropertyName,\n       AuthProperty rawAuthConfiguration,\n       InferredAuthProvider inferredAuthProvider,\n-      @Nullable String credHelper)\n+      @Nullable String credHelper,\n+      Map<String, String> environment)\n       throws FileNotFoundException {\n     DefaultCredentialRetrievers defaultCredentialRetrievers =\n         DefaultCredentialRetrievers.init(\n-            CredentialRetrieverFactory.forImage(imageReference, projectProperties::log));\n+            CredentialRetrieverFactory.forImage(imageReference, projectProperties::log, environment));\n     Optional<Credential> optionalCredential =\n         ConfigurationPropertyValidator.getImageCredential(\n             projectProperties::log,"
  },
  {
    "sha": "4aa508fb04dbc91958d7d0c9d77058c20b6b7534",
    "filename": "jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/RawConfiguration.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/GoogleContainerTools/jib/blob/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/RawConfiguration.java",
    "raw_url": "https://github.com/GoogleContainerTools/jib/raw/59070dfb13df61fd4ac0cc2b37294b997b04c4e0/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/RawConfiguration.java",
    "contents_url": "https://api.github.com/repos/GoogleContainerTools/jib/contents/jib-plugins-common/src/main/java/com/google/cloud/tools/jib/plugins/common/RawConfiguration.java?ref=59070dfb13df61fd4ac0cc2b37294b997b04c4e0",
    "patch": "@@ -118,4 +118,8 @@\n   Path getImageJsonOutputPath();\n \n   List<? extends ExtensionConfiguration> getPluginExtensions();\n+\n+  Map<String, String> getFromEnvironment();\n+\n+  Map<String, String> getToEnvironment();\n }"
  }
]
