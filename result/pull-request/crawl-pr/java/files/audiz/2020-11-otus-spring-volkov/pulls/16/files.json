[
  {
    "sha": "549e00a2a96fa9d7c5dbc9859664a78d980158c2",
    "filename": "work26/.gitignore",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/.gitignore",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/.gitignore",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/.gitignore?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,33 @@\n+HELP.md\n+target/\n+!.mvn/wrapper/maven-wrapper.jar\n+!**/src/main/**/target/\n+!**/src/test/**/target/\n+\n+### STS ###\n+.apt_generated\n+.classpath\n+.factorypath\n+.project\n+.settings\n+.springBeans\n+.sts4-cache\n+\n+### IntelliJ IDEA ###\n+.idea\n+*.iws\n+*.iml\n+*.ipr\n+\n+### NetBeans ###\n+/nbproject/private/\n+/nbbuild/\n+/dist/\n+/nbdist/\n+/.nb-gradle/\n+build/\n+!**/src/main/**/build/\n+!**/src/test/**/build/\n+\n+### VS Code ###\n+.vscode/"
  },
  {
    "sha": "b4f03f59442882c96dae4a56a722c955ac3a6632",
    "filename": "work26/export.md",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/export.md",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/export.md",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/export.md?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,8 @@\n+\n+### Export data\n+\n+```mongoexport -h localhost:27017 -d library -c GENRES -o GENRES.json\n+mongoexport -h localhost:27017 -d library -c AUTHORS -o AUTHORS.json\n+mongoexport -h localhost:27017 -d library -c BOOKS -o BOOKS.json\n+mongoexport -h localhost:27017 -d library -c COMMENTS -o COMMENTS.json\n+mongoexport -h localhost:27017 -d library -c db_sequence -o db_sequence.json```\n\\ No newline at end of file"
  },
  {
    "sha": "9af8380b71e6365855e6181a8a586fc897e5846a",
    "filename": "work26/pom.xml",
    "status": "added",
    "additions": 151,
    "deletions": 0,
    "changes": 151,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/pom.xml",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/pom.xml",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/pom.xml?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,151 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<parent>\n+\t\t<groupId>org.springframework.boot</groupId>\n+\t\t<artifactId>spring-boot-starter-parent</artifactId>\n+\t\t<version>2.4.0</version>\n+\t\t<relativePath/> <!-- lookup parent from repository -->\n+\t</parent>\n+\t<groupId>ru.otus</groupId>\n+\t<artifactId>work26</artifactId>\n+\t<version>0.0.1-SNAPSHOT</version>\n+\t<name>work26</name>\n+\t<description>Home work for Spring Boot</description>\n+\n+\t<properties>\n+\t\t<java.version>13</java.version>\n+\t\t<maven.compiler.source>11</maven.compiler.source>\n+\t\t<maven.compiler.target>11</maven.compiler.target>\n+\t\t<spring.shell.version>2.0.1.RELEASE</spring.shell.version>\n+\t\t<mongock.version>4.1.17</mongock.version>\n+\t</properties>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>de.vandermeer</groupId>\n+\t\t\t<artifactId>asciitable</artifactId>\n+\t\t\t<version>0.3.2</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter</artifactId>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.projectlombok</groupId>\n+\t\t\t<artifactId>lombok</artifactId>\n+\t\t\t<optional>true</optional>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.shell</groupId>\n+\t\t\t<artifactId>spring-shell-starter</artifactId>\n+\t\t\t<version>${spring.shell.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-data-mongodb</artifactId>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.mongodb</groupId>\n+\t\t\t<artifactId>mongo-java-driver</artifactId>\n+\t\t\t<version>3.12.7</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>commons-io</groupId>\n+\t\t\t<artifactId>commons-io</artifactId>\n+\t\t\t<version>2.8.0</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>de.flapdoodle.embed</groupId>\n+\t\t\t<artifactId>de.flapdoodle.embed.mongo</artifactId>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.cloudyrock.mongock</groupId>\n+\t\t\t<artifactId>mongock-spring-v5</artifactId>\n+\t\t\t<version>${mongock.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>com.github.cloudyrock.mongock</groupId>\n+\t\t\t<artifactId>mongodb-springdata-v3-driver</artifactId>\n+\t\t\t<version>${mongock.version}</version>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t\t<exclusions>\n+\t\t\t\t<exclusion>\n+\t\t\t\t\t<groupId>org.junit.vintage</groupId>\n+\t\t\t\t\t<artifactId>junit-vintage-engine</artifactId>\n+\t\t\t\t</exclusion>\n+\t\t\t\t<exclusion>\n+\t\t\t\t\t<groupId>junit</groupId>\n+\t\t\t\t\t<artifactId>junit</artifactId>\n+\t\t\t\t</exclusion>\n+\t\t\t</exclusions>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-api</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<version>${junit-jupiter.version}</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-batch</artifactId>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>com.h2database</groupId>\n+\t\t\t<artifactId>h2</artifactId>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n+\t\t\t<scope>test</scope>\n+        </dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.batch</groupId>\n+\t\t\t<artifactId>spring-batch-test</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\n+\t</dependencies>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\n+</project>"
  },
  {
    "sha": "6f647db2abb6fa18f5fb9c3df073775fc794e1e4",
    "filename": "work26/readme.md",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/readme.md",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/readme.md",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/readme.md?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,9 @@\n+Домашнее задание\n+На основе Spring Batch разработать процедуру миграции данных из реляционного хранилища в NoSQL или наоборот\n+Цель: Цель: мигрировать данные с помощью Spring Batch\n+Результат: приложение для пакетных обработок данных на Spring Batch\n+1. Задание может быть выполнено в отдельном репозитории, с сущностями из ДЗ JPA и MongoDB.\n+2. Вы можете выбрать другую доменную модель\n+3. Не обязательно добавлять процесс миграции в веб-приложение. Приложение может быть оформлено в виде отдельной утилиты.\n+3. Используя Spring Batch, следите, чтобы связи сущностей сохранились.\n+4. Опционально: Сделать restart задачи с помощью Spring Shell."
  },
  {
    "sha": "4b06aef79cc1745cb92ebcbef958134caeebd60d",
    "filename": "work26/src/main/java/ru/otus/work26/Work26Application.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/Work26Application.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/Work26Application.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/Work26Application.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.otus.work26;\n+\n+import com.github.cloudyrock.spring.v5.EnableMongock;\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;\n+\n+@EnableMongock\n+@EnableMongoRepositories\n+@SpringBootApplication\n+public class Work26Application {\n+\n+\tpublic static void main(String[] args) throws Exception {\n+\t\tSpringApplication.run(Work26Application.class);\n+\t}\n+}"
  },
  {
    "sha": "f4849a4f86f9d9638c043d842df6262d9ee3f0f6",
    "filename": "work26/src/main/java/ru/otus/work26/batch/AuthorRepository.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/batch/AuthorRepository.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/batch/AuthorRepository.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/batch/AuthorRepository.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.otus.work26.batch;\n+\n+import org.springframework.data.mongodb.repository.MongoRepository;\n+import ru.otus.work26.domain.Author;\n+\n+public interface AuthorRepository extends MongoRepository<Author, Long> {\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f42b35d1528f0e9aee2efc232fb8db0c0b0e6d72",
    "filename": "work26/src/main/java/ru/otus/work26/batch/BookRepository.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/batch/BookRepository.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/batch/BookRepository.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/batch/BookRepository.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.work26.batch;\n+\n+import org.springframework.data.mongodb.repository.ExistsQuery;\n+import org.springframework.data.mongodb.repository.MongoRepository;\n+import org.springframework.data.repository.query.Param;\n+import ru.otus.work26.domain.Book;\n+\n+public interface BookRepository extends MongoRepository<Book, Long> {\n+    @ExistsQuery(value=\"{ 'genre._id' : :#{#genreId} }\")\n+    boolean isExistsByGenreId(@Param(\"genreId\")  long genreId);\n+    @ExistsQuery(value=\"{ 'author._id' : :#{#authorId} }\")\n+    boolean isExistsByAuthorId(@Param(\"authorId\")  long authorId);\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "8d330b18d2611f84be77323f174cd9ea75b01d48",
    "filename": "work26/src/main/java/ru/otus/work26/batch/CommentRepository.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/batch/CommentRepository.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/batch/CommentRepository.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/batch/CommentRepository.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.otus.work26.batch;\n+\n+import org.springframework.data.mongodb.repository.DeleteQuery;\n+import org.springframework.data.mongodb.repository.MongoRepository;\n+import org.springframework.data.repository.query.Param;\n+import ru.otus.work26.domain.Comment;\n+\n+public interface CommentRepository extends MongoRepository<Comment, Long> {\n+    @DeleteQuery(value=\"{ 'book.$id' : :#{#bookId} }\")\n+    void deleteAllByBookId(@Param(\"bookId\") long bookId);\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "5d32a9a147653b66c874d2af18eb1831cad86988",
    "filename": "work26/src/main/java/ru/otus/work26/batch/GenreRepository.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/batch/GenreRepository.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/batch/GenreRepository.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/batch/GenreRepository.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.otus.work26.batch;\n+\n+import org.springframework.data.mongodb.repository.MongoRepository;\n+import ru.otus.work26.domain.Genre;\n+\n+public interface GenreRepository extends MongoRepository<Genre, Long> {\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "1a8c823bedbc73ffecde62474a9472c0e90768a9",
    "filename": "work26/src/main/java/ru/otus/work26/changelog/DatabaseChangelog.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/changelog/DatabaseChangelog.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/changelog/DatabaseChangelog.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/changelog/DatabaseChangelog.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,47 @@\n+package ru.otus.work26.changelog;\n+\n+import com.github.cloudyrock.mongock.ChangeLog;\n+import com.github.cloudyrock.mongock.ChangeSet;\n+import com.mongodb.client.MongoCollection;\n+import com.mongodb.client.MongoDatabase;\n+\n+import org.apache.commons.io.IOUtils;\n+import org.bson.Document;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+@ChangeLog(order = \"001\")\n+public class DatabaseChangelog {\n+\n+    @ChangeSet(order = \"001\", id = \"dropDb\", author = \"a.volkov\", runAlways = true)\n+    public void dropDb(MongoDatabase db) {\n+        db.drop();\n+    }\n+\n+    @ChangeSet(order = \"002\", id = \"dataInsert\", author = \"a.volkov\", runAlways = true)\n+    public void insertData(MongoDatabase db) {\n+        importCollection(db, \"GENRES\");\n+        importCollection(db, \"AUTHORS\");\n+        importCollection(db, \"BOOKS\");\n+        importCollection(db, \"COMMENTS\");\n+        importCollection(db, \"db_sequence\");\n+    }\n+\n+    private void importCollection(MongoDatabase db, String collection) {\n+        MongoCollection<Document> mongoCollection = db.getCollection(collection);\n+        InputStream inputStream = getClass().getResourceAsStream(\"/data/\" + collection + \".json\");\n+        try {\n+            List<String> jsons = IOUtils.readLines(inputStream, \"UTF-8\");\n+            inputStream.close();\n+            mongoCollection.insertMany(\n+                    jsons.stream().map(Document::parse).collect(Collectors.toList())\n+            );\n+\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}"
  },
  {
    "sha": "b7314776f76e70bd08523dc3b30a899312a1e128",
    "filename": "work26/src/main/java/ru/otus/work26/config/AppProps.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/AppProps.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/AppProps.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/config/AppProps.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.otus.work26.config;\n+\n+import lombok.Data;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.stereotype.Component;\n+\n+@Data\n+@Component\n+@ConfigurationProperties(\"app\")\n+public class AppProps {\n+    private String inputFile;\n+    private String outputAuthorFile;\n+    private String outputGenreFile;\n+    private String outputBookFile;\n+    private String outputCommentFile;\n+}"
  },
  {
    "sha": "be133daa766505f973e93e986f2e1525a53638a3",
    "filename": "work26/src/main/java/ru/otus/work26/config/BatchConfig.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/BatchConfig.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/BatchConfig.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/config/BatchConfig.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.otus.work26.config;\n+\n+import org.springframework.batch.core.configuration.JobRegistry;\n+import org.springframework.batch.core.configuration.annotation.EnableBatchProcessing;\n+import org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+@EnableBatchProcessing\n+@Configuration\n+public class BatchConfig {\n+    @Bean\n+    public JobRegistryBeanPostProcessor postProcessor(JobRegistry jobRegistry) {\n+        var processor = new JobRegistryBeanPostProcessor();\n+        processor.setJobRegistry(jobRegistry);\n+        return processor;\n+    }\n+\n+}"
  },
  {
    "sha": "c3d4b6287ff76bc00b1cfbf07d290e79fff2db0e",
    "filename": "work26/src/main/java/ru/otus/work26/config/JobConfig.java",
    "status": "added",
    "additions": 97,
    "deletions": 0,
    "changes": 97,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/JobConfig.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/JobConfig.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/config/JobConfig.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,97 @@\n+package ru.otus.work26.config;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.batch.core.Job;\n+import org.springframework.batch.core.Step;\n+import org.springframework.batch.core.configuration.annotation.JobBuilderFactory;\n+import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;\n+import org.springframework.batch.core.configuration.annotation.StepScope;\n+import org.springframework.batch.core.launch.support.RunIdIncrementer;\n+import org.springframework.batch.core.step.tasklet.Tasklet;\n+import org.springframework.batch.item.ItemProcessor;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import ru.otus.work26.domain.*;\n+import ru.otus.work26.service.TableOpsTasklet;\n+import ru.otus.work26.service.TransformService;\n+\n+import javax.sql.DataSource;\n+\n+@Configuration\n+public class JobConfig {\n+\n+    private final Logger logger = LoggerFactory.getLogger(\"Batch\");\n+\n+    public static final String OUTPUT_FOLDER = \"./output\";\n+    public static final String LAUNCH_TIME = \"launchTime\";\n+    public static final String OUTPUT_AUTHOR_FILE_NAME = \"outputAuthorFileName\";\n+    public static final String OUTPUT_GENRE_FILE_NAME = \"outputGenreFileName\";\n+    public static final String OUTPUT_BOOK_FILE_NAME = \"outputBookFileName\";\n+    public static final String OUTPUT_COMMENTS_FILE_NAME = \"outputCommentsFileName\";\n+\n+    public static final String IMPORT_LIBRARY_JOB_NAME = \"importLibraryJob\";\n+\n+    @Autowired\n+    private JobBuilderFactory jobBuilderFactory;\n+\n+    @Autowired\n+    private StepBuilderFactory stepBuilderFactory;\n+\n+    @Autowired\n+    private DataSource dataSource;\n+\n+    @Bean\n+    public Job importLibraryJob(Step stepMigrateAuthor, Step stepMigrateGenre, Step stepMigrateBook, Step stepMigrateComment, Step cleanFolderTasklet) {\n+        return jobBuilderFactory.get(IMPORT_LIBRARY_JOB_NAME)\n+                .incrementer(new RunIdIncrementer())\n+                .start(databaseOpsTasklet(\"DELETE FROM comments\"))\n+                .next(databaseOpsTasklet(\"DELETE FROM books\"))\n+                .next(databaseOpsTasklet(\"DELETE FROM authors\"))\n+                .next(databaseOpsTasklet(\"DELETE FROM genres\"))\n+                .next(cleanFolderTasklet)\n+                .next(stepMigrateAuthor)\n+                .next(stepMigrateGenre)\n+                .next(stepMigrateBook)\n+                .next(stepMigrateComment)\n+                .build();\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public ItemProcessor<Author, AuthorMigrate> processorAuthor(TransformService transformService) {\n+        return transformService::transformAuthor;\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public ItemProcessor<Genre, GenreMigrate> processorGenre(TransformService transformService) {\n+        return transformService::transformGenre;\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public ItemProcessor<Book, BookMigrate> processorBook(TransformService transformService) {\n+        return transformService::transformBook;\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public ItemProcessor<Comment, CommentMigrate> processorComment(TransformService transformService) {\n+        return transformService::transformComment;\n+    }\n+\n+    public Step databaseOpsTasklet(String sql) {\n+        return stepBuilderFactory.get(\"loadIntoProcessingTable\")\n+                .tasklet(tasklet(sql))\n+                .allowStartIfComplete(true)\n+                .build();\n+    }\n+\n+    public Tasklet tasklet(String sql) {\n+        return new TableOpsTasklet(sql, dataSource);\n+    }\n+\n+\n+}"
  },
  {
    "sha": "ac17b16c4a581bbdecd87f37b170dce05f583c96",
    "filename": "work26/src/main/java/ru/otus/work26/config/ReaderConfig.java",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/ReaderConfig.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/ReaderConfig.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/config/ReaderConfig.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,68 @@\n+package ru.otus.work26.config;\n+\n+import org.springframework.batch.core.configuration.annotation.StepScope;\n+import org.springframework.batch.item.data.MongoItemReader;\n+import org.springframework.batch.item.data.builder.MongoItemReaderBuilder;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.data.mongodb.core.MongoTemplate;\n+import ru.otus.work26.domain.Author;\n+import ru.otus.work26.domain.Book;\n+import ru.otus.work26.domain.Comment;\n+import ru.otus.work26.domain.Genre;\n+\n+import java.util.HashMap;\n+\n+@Configuration\n+public class ReaderConfig {\n+\n+    @StepScope\n+    @Bean\n+    public MongoItemReader<Author> authorReader(MongoTemplate template) {\n+        return new MongoItemReaderBuilder<Author>()\n+                .name(\"authorItemReader\")\n+                .template(template)\n+                .jsonQuery(\"{}\")\n+                .targetType(Author.class)\n+                .sorts(new HashMap<>())\n+                .build();\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public MongoItemReader<Genre> genreReader(MongoTemplate template) {\n+        return new MongoItemReaderBuilder<Genre>()\n+                .name(\"genreItemReader\")\n+                .template(template)\n+                .jsonQuery(\"{}\")\n+                .targetType(Genre.class)\n+                .sorts(new HashMap<>())\n+                .build();\n+    }\n+\n+\n+    @StepScope\n+    @Bean\n+    public MongoItemReader<Book> bookReader(MongoTemplate template) {\n+        return new MongoItemReaderBuilder<Book>()\n+                .name(\"bookItemReader\")\n+                .template(template)\n+                .jsonQuery(\"{}\")\n+                .targetType(Book.class)\n+                .sorts(new HashMap<>())\n+                .build();\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public MongoItemReader<Comment> commentReader(MongoTemplate template) {\n+        return new MongoItemReaderBuilder<Comment>()\n+                .name(\"commentItemReader\")\n+                .template(template)\n+                .jsonQuery(\"{}\")\n+                .targetType(Comment.class)\n+                .sorts(new HashMap<>())\n+                .build();\n+    }\n+\n+}"
  },
  {
    "sha": "d43fb031d3e5e5eeb07e1866ca2c2aea15d4241d",
    "filename": "work26/src/main/java/ru/otus/work26/config/StepConfig.java",
    "status": "added",
    "additions": 77,
    "deletions": 0,
    "changes": 77,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/StepConfig.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/StepConfig.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/config/StepConfig.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,77 @@\n+package ru.otus.work26.config;\n+\n+import org.springframework.batch.core.Step;\n+import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;\n+import org.springframework.batch.item.ItemProcessor;\n+import org.springframework.batch.item.ItemReader;\n+import org.springframework.batch.item.support.CompositeItemWriter;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import ru.otus.work26.domain.*;\n+import ru.otus.work26.service.FileDeletingTasklet;\n+\n+import static ru.otus.work26.config.JobConfig.OUTPUT_FOLDER;\n+\n+@Configuration\n+public class StepConfig {\n+    private static final int CHUNK_SIZE = 5;\n+\n+    @Autowired\n+    private StepBuilderFactory stepBuilderFactory;\n+\n+    @Bean\n+    public Step cleanFolderTasklet() {\n+        FileDeletingTasklet task = new FileDeletingTasklet();\n+        task.setPath(OUTPUT_FOLDER);\n+        return stepBuilderFactory.get(\"cleanFolderTasklet\")\n+                .tasklet(task)\n+                .build();\n+    }\n+\n+\n+    @Bean\n+    public Step stepMigrateAuthor(CompositeItemWriter<AuthorMigrate> writer, ItemReader<Author> reader, ItemProcessor<Author, AuthorMigrate> itemProcessor) {\n+        return stepBuilderFactory.get(\"stepMigrateAuthor\")\n+                .<Author, AuthorMigrate> chunk(CHUNK_SIZE)\n+                .reader(reader)\n+                .processor(itemProcessor)\n+                .writer(writer)\n+                .allowStartIfComplete(true)\n+                .build();\n+    }\n+\n+    @Bean\n+    public Step stepMigrateGenre(CompositeItemWriter<GenreMigrate> writer, ItemReader<Genre> reader, ItemProcessor<Genre, GenreMigrate> itemProcessor) {\n+        return stepBuilderFactory.get(\"stepMigrateGenre\")\n+                .<Genre, GenreMigrate> chunk(CHUNK_SIZE)\n+                .reader(reader)\n+                .processor(itemProcessor)\n+                .writer(writer)\n+                .allowStartIfComplete(true)\n+                .build();\n+    }\n+\n+    @Bean\n+    public Step stepMigrateBook(CompositeItemWriter<BookMigrate> writer, ItemReader<Book> reader, ItemProcessor<Book, BookMigrate> itemProcessor) {\n+        return stepBuilderFactory.get(\"stepMigrateBook\")\n+                .<Book, BookMigrate> chunk(CHUNK_SIZE)\n+                .reader(reader)\n+                .processor(itemProcessor)\n+                .writer(writer)\n+                .allowStartIfComplete(true)\n+                .build();\n+    }\n+\n+    @Bean\n+    public Step stepMigrateComment(CompositeItemWriter<CommentMigrate> writer, ItemReader<Comment> reader,  ItemProcessor<Comment, CommentMigrate> itemProcessor) {\n+        return stepBuilderFactory.get(\"stepMigrateComment\")\n+                .<Comment, CommentMigrate> chunk(CHUNK_SIZE)\n+                .reader(reader)\n+                .processor(itemProcessor)\n+                .writer(writer)\n+                .allowStartIfComplete(true)\n+                .build();\n+    }\n+\n+}"
  },
  {
    "sha": "1352de3eb4cb463b731f0f9f7496fdf73ef94c5d",
    "filename": "work26/src/main/java/ru/otus/work26/config/WriterConfig.java",
    "status": "added",
    "additions": 213,
    "deletions": 0,
    "changes": 213,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/WriterConfig.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/config/WriterConfig.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/config/WriterConfig.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,213 @@\n+package ru.otus.work26.config;\n+\n+import org.springframework.batch.core.configuration.annotation.StepScope;\n+import org.springframework.batch.item.database.JdbcBatchItemWriter;\n+import org.springframework.batch.item.file.FlatFileItemWriter;\n+import org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor;\n+import org.springframework.batch.item.file.transform.DelimitedLineAggregator;\n+import org.springframework.batch.item.support.CompositeItemWriter;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.core.io.FileSystemResource;\n+import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;\n+import ru.otus.work26.domain.AuthorMigrate;\n+import ru.otus.work26.domain.BookMigrate;\n+import ru.otus.work26.domain.CommentMigrate;\n+import ru.otus.work26.domain.GenreMigrate;\n+\n+import javax.sql.DataSource;\n+import java.util.Arrays;\n+\n+import static ru.otus.work26.config.JobConfig.LAUNCH_TIME;\n+import static ru.otus.work26.config.JobConfig.OUTPUT_FOLDER;\n+import static ru.otus.work26.config.JobConfig.OUTPUT_AUTHOR_FILE_NAME;\n+import static ru.otus.work26.config.JobConfig.OUTPUT_GENRE_FILE_NAME;\n+import static ru.otus.work26.config.JobConfig.OUTPUT_BOOK_FILE_NAME;\n+import static ru.otus.work26.config.JobConfig.OUTPUT_COMMENTS_FILE_NAME;\n+\n+\n+@Configuration\n+public class WriterConfig {\n+\n+    @Bean\n+    public JdbcBatchItemWriter<AuthorMigrate> authorWriter(final DataSource dataSource) {\n+        final JdbcBatchItemWriter<AuthorMigrate> writer = new JdbcBatchItemWriter<>();\n+        writer.setDataSource(dataSource);\n+        writer.setSql(\"INSERT INTO authors (id, name) VALUES (:id, :name)\");\n+        writer.setItemSqlParameterSourceProvider(item -> {\n+            final MapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();\n+            sqlParameterSource.addValue(\"id\", item.getId());\n+            sqlParameterSource.addValue(\"name\", item.getName());\n+            return sqlParameterSource;\n+        });\n+        writer.afterPropertiesSet();\n+        return writer;\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public FlatFileItemWriter<AuthorMigrate> authorCsvWriter(@Value(\"#{jobParameters['\" + OUTPUT_AUTHOR_FILE_NAME + \"']}\") String outputFileName)\n+    {\n+        FlatFileItemWriter<AuthorMigrate> writer = new FlatFileItemWriter<>();\n+        writer.setResource(new FileSystemResource(OUTPUT_FOLDER + \"/\" + outputFileName));\n+        writer.setAppendAllowed(true);\n+        writer.setLineAggregator(new DelimitedLineAggregator<>() {\n+            {\n+                setDelimiter(\",\");\n+                setFieldExtractor(new BeanWrapperFieldExtractor<>() {\n+                    {\n+                        setNames(new String[] { \"id\", \"name\" });\n+                    }\n+                });\n+            }\n+        });\n+        return writer;\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public CompositeItemWriter<AuthorMigrate> compositeAuthorWriter(final DataSource dataSource, @Value(\"#{jobParameters['\" + OUTPUT_AUTHOR_FILE_NAME + \"']}\") String outputFileName,\n+                                                                    @Value(\"#{jobParameters['\" + LAUNCH_TIME + \"']}\") String launchTime) {\n+        CompositeItemWriter<AuthorMigrate> compositeItemWriter = new CompositeItemWriter<>();\n+        compositeItemWriter.setDelegates(Arrays.asList(authorWriter(dataSource), authorCsvWriter(outputFileName)));\n+        return compositeItemWriter;\n+    }\n+\n+    @Bean\n+    public JdbcBatchItemWriter<GenreMigrate> genreWriter(final DataSource dataSource) {\n+        final JdbcBatchItemWriter<GenreMigrate> writer = new JdbcBatchItemWriter<>();\n+        writer.setDataSource(dataSource);\n+        writer.setSql(\"INSERT INTO genres (id, name) VALUES (:id, :name)\");\n+        writer.setItemSqlParameterSourceProvider(item -> {\n+            final MapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();\n+            sqlParameterSource.addValue(\"id\", item.getId());\n+            sqlParameterSource.addValue(\"name\", item.getName());\n+            return sqlParameterSource;\n+        });\n+        writer.afterPropertiesSet();\n+        return writer;\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public FlatFileItemWriter<GenreMigrate> genreCsvWriter(@Value(\"#{jobParameters['\" + OUTPUT_GENRE_FILE_NAME + \"']}\") String outputFileName)\n+    {\n+        FlatFileItemWriter<GenreMigrate> writer = new FlatFileItemWriter<>();\n+        writer.setResource(new FileSystemResource(OUTPUT_FOLDER + \"/\" + outputFileName));\n+        writer.setAppendAllowed(true);\n+        writer.setLineAggregator(new DelimitedLineAggregator<>() {\n+            {\n+                setDelimiter(\",\");\n+                setFieldExtractor(new BeanWrapperFieldExtractor<>() {\n+                    {\n+                        setNames(new String[] { \"id\", \"name\"});\n+                    }\n+                });\n+            }\n+        });\n+        return writer;\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public CompositeItemWriter<GenreMigrate> compositeGenreWriter(final DataSource dataSource, @Value(\"#{jobParameters['\" + OUTPUT_GENRE_FILE_NAME + \"']}\") String outputFileName,\n+                                                                  @Value(\"#{jobParameters['\" + LAUNCH_TIME + \"']}\") String launchTime) {\n+        CompositeItemWriter<GenreMigrate> compositeItemWriter = new CompositeItemWriter<>();\n+        compositeItemWriter.setDelegates(Arrays.asList(genreWriter(dataSource), genreCsvWriter(outputFileName)));\n+        return compositeItemWriter;\n+    }\n+\n+\n+    @Bean\n+    public JdbcBatchItemWriter<BookMigrate> bookWriter(final DataSource dataSource) {\n+        final JdbcBatchItemWriter<BookMigrate> writer = new JdbcBatchItemWriter<>();\n+        writer.setDataSource(dataSource);\n+        writer.setSql(\"INSERT INTO books (id, title, genre, author) VALUES (:id, :title, :genre, :author)\");\n+        writer.setItemSqlParameterSourceProvider(item -> {\n+            final MapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();\n+            sqlParameterSource.addValue(\"id\", item.getId());\n+            sqlParameterSource.addValue(\"title\", item.getTitle());\n+            sqlParameterSource.addValue(\"genre\", item.getGenreId());\n+            sqlParameterSource.addValue(\"author\", item.getAuthorId());\n+            return sqlParameterSource;\n+        });\n+        writer.afterPropertiesSet();\n+        return writer;\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public FlatFileItemWriter<BookMigrate> bookCsvWriter(@Value(\"#{jobParameters['\" + OUTPUT_BOOK_FILE_NAME + \"']}\") String outputFileName)\n+    {\n+        FlatFileItemWriter<BookMigrate> writer = new FlatFileItemWriter<>();\n+        writer.setResource(new FileSystemResource(OUTPUT_FOLDER + \"/\" + outputFileName));\n+        writer.setAppendAllowed(true);\n+        writer.setLineAggregator(new DelimitedLineAggregator<>() {\n+            {\n+                setDelimiter(\",\");\n+                setFieldExtractor(new BeanWrapperFieldExtractor<>() {\n+                    {\n+                        setNames(new String[] { \"id\", \"title\", \"genreId\", \"authorId\"});\n+                    }\n+                });\n+            }\n+        });\n+        return writer;\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public CompositeItemWriter<BookMigrate> compositeBookWriter(final DataSource dataSource, @Value(\"#{jobParameters['\" + OUTPUT_BOOK_FILE_NAME + \"']}\") String outputFileName,\n+                                                                @Value(\"#{jobParameters['\" + LAUNCH_TIME + \"']}\") String launchTime) {\n+        CompositeItemWriter<BookMigrate> compositeItemWriter = new CompositeItemWriter<>();\n+        compositeItemWriter.setDelegates(Arrays.asList(bookWriter(dataSource), bookCsvWriter(outputFileName)));\n+        return compositeItemWriter;\n+    }\n+\n+    @Bean\n+    public JdbcBatchItemWriter<CommentMigrate> commentWriter(final DataSource dataSource) {\n+        final JdbcBatchItemWriter<CommentMigrate> writer = new JdbcBatchItemWriter<>();\n+        writer.setDataSource(dataSource);\n+        writer.setSql(\"INSERT INTO comments (id, comment, book_id) VALUES (:id, :comment, :book_id)\");\n+        writer.setItemSqlParameterSourceProvider(item -> {\n+            final MapSqlParameterSource sqlParameterSource = new MapSqlParameterSource();\n+            sqlParameterSource.addValue(\"id\", item.getId());\n+            sqlParameterSource.addValue(\"comment\", item.getComment());\n+            sqlParameterSource.addValue(\"book_id\", item.getBookId());\n+            return sqlParameterSource;\n+        });\n+        writer.afterPropertiesSet();\n+        return writer;\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public FlatFileItemWriter<CommentMigrate> commentCsvWriter(@Value(\"#{jobParameters['\" + OUTPUT_COMMENTS_FILE_NAME + \"']}\") String outputFileName)\n+    {\n+        FlatFileItemWriter<CommentMigrate> writer = new FlatFileItemWriter<>();\n+        writer.setResource(new FileSystemResource(OUTPUT_FOLDER + \"/\" + outputFileName));\n+        writer.setAppendAllowed(true);\n+        writer.setLineAggregator(new DelimitedLineAggregator<>() {\n+            {\n+                setDelimiter(\",\");\n+                setFieldExtractor(new BeanWrapperFieldExtractor<>() {\n+                    {\n+                        setNames(new String[] { \"id\", \"comment\", \"bookId\"});\n+                    }\n+                });\n+            }\n+        });\n+        return writer;\n+    }\n+\n+    @StepScope\n+    @Bean\n+    public CompositeItemWriter<CommentMigrate> compositeCommentWriter(final DataSource dataSource, @Value(\"#{jobParameters['\" + OUTPUT_COMMENTS_FILE_NAME + \"']}\") String outputFileName,\n+                                                                      @Value(\"#{jobParameters['\" + LAUNCH_TIME + \"']}\") String launchTime) {\n+        CompositeItemWriter<CommentMigrate> compositeItemWriter = new CompositeItemWriter<>();\n+        compositeItemWriter.setDelegates(Arrays.asList(commentWriter(dataSource), commentCsvWriter(outputFileName)));\n+        return compositeItemWriter;\n+    }\n+\n+}"
  },
  {
    "sha": "ae389e61c7042078cdc7e5b8e33c9127305d43c4",
    "filename": "work26/src/main/java/ru/otus/work26/domain/Author.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/Author.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/Author.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/domain/Author.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,23 @@\n+package ru.otus.work26.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.annotation.Transient;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@Document(collection = \"AUTHORS\")\n+public class Author {\n+    @Transient\n+    public static final String SEQUENCE_NAME = \"author\";\n+\n+    @Id\n+    private long id;\n+\n+    private String name;\n+}"
  },
  {
    "sha": "117b7e53a561ce9f32371b12e52ad5b54e7067ef",
    "filename": "work26/src/main/java/ru/otus/work26/domain/AuthorMigrate.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/AuthorMigrate.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/AuthorMigrate.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/domain/AuthorMigrate.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.otus.work26.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class AuthorMigrate {\n+    private String id;\n+\n+    private String name;\n+}"
  },
  {
    "sha": "9f10020db56d660ca29b3e39807999d68cb1ecae",
    "filename": "work26/src/main/java/ru/otus/work26/domain/Book.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/Book.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/Book.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/domain/Book.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,36 @@\n+package ru.otus.work26.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import lombok.ToString;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.annotation.Transient;\n+import org.springframework.data.mongodb.core.mapping.DBRef;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@Document(collection = \"BOOKS\")\n+public class Book {\n+    @Transient\n+    public static final String SEQUENCE_NAME = \"book\";\n+\n+    @Id\n+    private long id;\n+\n+    private String title;\n+\n+    private Genre genre;\n+\n+    private Author author;\n+\n+    @ToString.Exclude\n+    @DBRef(lazy = true)\n+    private List<Comment> comments = new ArrayList<>();\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "c78be42ef2f12d8bef946d58cd23d239b52638ec",
    "filename": "work26/src/main/java/ru/otus/work26/domain/BookMigrate.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/BookMigrate.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/BookMigrate.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/domain/BookMigrate.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.otus.work26.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class BookMigrate {\n+    private String id;\n+\n+    private String title;\n+\n+    private String genreId;\n+\n+    private String authorId;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "189e411894b8317f5425564d00f55e2dfe416741",
    "filename": "work26/src/main/java/ru/otus/work26/domain/Comment.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/Comment.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/Comment.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/domain/Comment.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,28 @@\n+package ru.otus.work26.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import lombok.ToString;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.annotation.Transient;\n+import org.springframework.data.mongodb.core.mapping.DBRef;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@Document(collection = \"COMMENTS\")\n+public class Comment {\n+    @Transient\n+    public static final String SEQUENCE_NAME = \"comment\";\n+\n+    @Id\n+    private long id;\n+\n+    private String comment;\n+\n+    @ToString.Exclude\n+    @DBRef\n+    private Book book;\n+}"
  },
  {
    "sha": "b4815509d7c6d0391d71c186e818a4b5f039704b",
    "filename": "work26/src/main/java/ru/otus/work26/domain/CommentMigrate.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/CommentMigrate.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/CommentMigrate.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/domain/CommentMigrate.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.otus.work26.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class CommentMigrate {\n+    private String id;\n+\n+    private String comment;\n+\n+    private String bookId;\n+}"
  },
  {
    "sha": "9c865191e18f011aaaf79ddf4ec0d22f4f4c2015",
    "filename": "work26/src/main/java/ru/otus/work26/domain/DbSequence.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/DbSequence.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/DbSequence.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/domain/DbSequence.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,17 @@\n+package ru.otus.work26.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+@Document(collection = \"db_sequence\")\n+@Data\n+@AllArgsConstructor\n+@NoArgsConstructor\n+public class DbSequence {\n+    @Id\n+    private String  id;\n+    private int seq;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a55c1fb6350fe09b7777c321dca5e547d11bd70f",
    "filename": "work26/src/main/java/ru/otus/work26/domain/Genre.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/Genre.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/Genre.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/domain/Genre.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,22 @@\n+package ru.otus.work26.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.annotation.Transient;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@Document(collection = \"GENRES\")\n+public class Genre {\n+    @Transient\n+    public static final String SEQUENCE_NAME = \"genre\";\n+\n+    @Id\n+    private long id;\n+\n+    private String name;\n+}"
  },
  {
    "sha": "4501673066e7d4780022e2a61d20bf9c203f7118",
    "filename": "work26/src/main/java/ru/otus/work26/domain/GenreMigrate.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/GenreMigrate.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/domain/GenreMigrate.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/domain/GenreMigrate.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.otus.work26.domain;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@Data\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class GenreMigrate {\n+\n+    private String id;\n+\n+    private String name;\n+}"
  },
  {
    "sha": "be309d391051a28479eca4261e9251612e3be258",
    "filename": "work26/src/main/java/ru/otus/work26/service/FileDeletingTasklet.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/service/FileDeletingTasklet.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/service/FileDeletingTasklet.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/service/FileDeletingTasklet.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,31 @@\n+package ru.otus.work26.service;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.springframework.batch.core.StepContribution;\n+import org.springframework.batch.core.scope.context.ChunkContext;\n+import org.springframework.batch.core.step.tasklet.Tasklet;\n+import org.springframework.batch.repeat.RepeatStatus;\n+import org.springframework.beans.factory.InitializingBean;\n+import org.springframework.util.Assert;\n+\n+import java.io.File;\n+\n+public class FileDeletingTasklet implements Tasklet, InitializingBean {\n+\n+    private String path;\n+\n+    public RepeatStatus execute(StepContribution contribution, ChunkContext chunkContext) throws Exception {\n+\n+        FileUtils.forceMkdir(new File(path));\n+        FileUtils.cleanDirectory(new File(path));\n+        return RepeatStatus.FINISHED;\n+    }\n+\n+    public void setPath(String path) {\n+        this.path = path;\n+    }\n+\n+    public void afterPropertiesSet() throws Exception {\n+        Assert.notNull(path, \"directory must be set\");\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0d30d5a5688d816019d33b069e9024e959879fb5",
    "filename": "work26/src/main/java/ru/otus/work26/service/TableOpsTasklet.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/service/TableOpsTasklet.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/service/TableOpsTasklet.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/service/TableOpsTasklet.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,28 @@\n+package ru.otus.work26.service;\n+\n+import org.springframework.batch.core.StepContribution;\n+import org.springframework.batch.core.scope.context.ChunkContext;\n+import org.springframework.batch.core.step.tasklet.Tasklet;\n+import org.springframework.batch.repeat.RepeatStatus;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+\n+import javax.sql.DataSource;\n+\n+public class TableOpsTasklet implements Tasklet {\n+\n+    private DataSource dataSource;\n+\n+    private String sql;\n+\n+    public TableOpsTasklet (String sql, DataSource dataSource) {\n+        this.sql = sql;\n+        this.dataSource = dataSource;\n+    }\n+\n+    @Override\n+    public RepeatStatus execute(StepContribution contribution, ChunkContext chunkContext) throws Exception {\n+        new JdbcTemplate(dataSource).execute(sql);\n+        return RepeatStatus.FINISHED;\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "fda730e448165425972d80457210f34a8090e474",
    "filename": "work26/src/main/java/ru/otus/work26/service/TransformService.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/service/TransformService.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/service/TransformService.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/service/TransformService.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,40 @@\n+package ru.otus.work26.service;\n+\n+import org.springframework.stereotype.Service;\n+import ru.otus.work26.domain.*;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.UUID;\n+\n+@Service\n+public class TransformService {\n+\n+    private Map<Long, String> authorUuidMap = new HashMap<>();\n+    private Map<Long, String> genreUuidMap = new HashMap<>();\n+    private Map<Long, String> bookUuidMap = new HashMap<>();\n+\n+    public AuthorMigrate transformAuthor(Author author) {\n+        String uuid = UUID.randomUUID().toString();\n+        authorUuidMap.put(author.getId(), uuid);\n+        return new AuthorMigrate(uuid, author.getName());\n+    }\n+\n+    public GenreMigrate transformGenre(Genre genre) {\n+        String uuid = UUID.randomUUID().toString();\n+        genreUuidMap.put(genre.getId(), uuid);\n+        return new GenreMigrate(uuid, genre.getName());\n+    }\n+\n+    public BookMigrate transformBook(Book book) {\n+        String uuid = UUID.randomUUID().toString();\n+        bookUuidMap.put(book.getId(), uuid);\n+        return new BookMigrate(uuid, book.getTitle(), genreUuidMap.get(book.getGenre().getId()), authorUuidMap.get(book.getAuthor().getId()));\n+    }\n+\n+    public CommentMigrate transformComment(Comment comment) {\n+        String uuid = UUID.randomUUID().toString();\n+        authorUuidMap.put(comment.getId(), uuid);\n+        return new CommentMigrate(uuid, comment.getComment(), bookUuidMap.get(comment.getBook().getId()));\n+    }\n+}"
  },
  {
    "sha": "edec60548198e3db9ed3a8c9235047d4842130c7",
    "filename": "work26/src/main/java/ru/otus/work26/shell/ApplicationEventsCommands.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/shell/ApplicationEventsCommands.java",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/java/ru/otus/work26/shell/ApplicationEventsCommands.java",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/java/ru/otus/work26/shell/ApplicationEventsCommands.java?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,37 @@\n+package ru.otus.work26.shell;\n+\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.batch.core.explore.JobExplorer;\n+import org.springframework.batch.core.launch.JobOperator;\n+import org.springframework.shell.standard.ShellComponent;\n+import org.springframework.shell.standard.ShellMethod;\n+import ru.otus.work26.config.AppProps;\n+\n+import static ru.otus.work26.config.JobConfig.*;\n+\n+@ShellComponent\n+@RequiredArgsConstructor\n+public class ApplicationEventsCommands {\n+\n+    private final AppProps appProps;\n+    private final JobOperator jobOperator;\n+    private final JobExplorer jobExplorer;\n+\n+    @ShellMethod(value = \"runJob\", key = \"rj\")\n+    public void startMigrationJobWithJobOperator() throws Exception {\n+        Long executionId = jobOperator.start(IMPORT_LIBRARY_JOB_NAME,\n+                OUTPUT_AUTHOR_FILE_NAME + \"=\" + appProps.getOutputAuthorFile() + \"\\n\" +\n+                          OUTPUT_GENRE_FILE_NAME + \"=\" + appProps.getOutputGenreFile() + \"\\n\" +\n+                          OUTPUT_BOOK_FILE_NAME + \"=\" + appProps.getOutputBookFile() + \"\\n\" +\n+                          OUTPUT_COMMENTS_FILE_NAME + \"=\" + appProps.getOutputCommentFile() + \"\\n\" +\n+                          LAUNCH_TIME + \"=\" + System.currentTimeMillis());\n+        System.out.println(jobOperator.getSummary(executionId));\n+    }\n+\n+    @ShellMethod(value = \"showInfo\", key = \"i\")\n+    public void showInfo() {\n+        System.out.println(jobExplorer.getJobNames());\n+        System.out.println(jobExplorer.getLastJobInstance(IMPORT_LIBRARY_JOB_NAME));\n+    }\n+\n+}"
  },
  {
    "sha": "28fe2c2699c14be66ac99e942be2662334c191b4",
    "filename": "work26/src/main/resources/application.yml",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/audiz/2020-11-otus-spring-volkov/blob/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/resources/application.yml",
    "raw_url": "https://github.com/audiz/2020-11-otus-spring-volkov/raw/22ade92908960291eebdb6e9eba1a7a5e0efe97e/work26/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/audiz/2020-11-otus-spring-volkov/contents/work26/src/main/resources/application.yml?ref=22ade92908960291eebdb6e9eba1a7a5e0efe97e",
    "patch": "@@ -0,0 +1,31 @@\n+spring:\n+  datasource:\n+    url: jdbc:h2:mem:testdb\n+    initialization-mode: always\n+\n+  h2:\n+    console:\n+      enabled: true\n+      path: /h2-console\n+\n+  batch:\n+    job:\n+      enabled: false\n+\n+  data:\n+    mongodb:\n+      port: 0\n+      database: library\n+      #uri: mongodb://localhost:27017/db\n+\n+mongock:\n+  #runner-type: \"ApplicationRunner\" # default\n+  runner-type: \"InitializingBean\"\n+  change-logs-scan-package:\n+    - ru.otus.work26.changelog\n+app:\n+  input-file: entries.csv\n+  output-author-file: authors.csv\n+  output-genre-file: genres.csv\n+  output-book-file: books.csv\n+  output-comment-file: comments.csv\n\\ No newline at end of file"
  }
]
