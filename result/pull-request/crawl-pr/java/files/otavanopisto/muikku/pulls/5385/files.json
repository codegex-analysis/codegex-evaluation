[
  {
    "sha": "d012bda2ec870c1fc457980735bbb597a6e8d41f",
    "filename": "muikku-core-plugins/src/main/java/fi/otavanopisto/muikku/plugins/organizationmanagement/rest/OrganizationUserManagementRESTService.java",
    "status": "modified",
    "additions": 19,
    "deletions": 2,
    "changes": 21,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/java/fi/otavanopisto/muikku/plugins/organizationmanagement/rest/OrganizationUserManagementRESTService.java",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/java/fi/otavanopisto/muikku/plugins/organizationmanagement/rest/OrganizationUserManagementRESTService.java",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/java/fi/otavanopisto/muikku/plugins/organizationmanagement/rest/OrganizationUserManagementRESTService.java?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -4,8 +4,10 @@\n import java.util.Arrays;\n import java.util.Date;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.logging.Logger;\n \n import javax.ejb.Stateful;\n@@ -20,6 +22,7 @@\n import javax.ws.rs.core.Response;\n import javax.ws.rs.core.Response.Status;\n \n+import org.apache.commons.collections.CollectionUtils;\n import org.apache.commons.lang3.StringUtils;\n \n import fi.otavanopisto.muikku.model.users.EnvironmentRoleArchetype;\n@@ -75,6 +78,7 @@\n   public Response searchStaffMembers(\n       @QueryParam(\"q\") String searchString,\n       @QueryParam(\"properties\") String properties,\n+      @QueryParam(\"userGroupIds\") List<Long> userGroupIds,\n       @QueryParam(\"firstResult\") @DefaultValue(\"0\") Integer firstResult,\n       @QueryParam(\"maxResults\") @DefaultValue(\"10\") Integer maxResults) {\n     \n@@ -104,14 +108,20 @@ public Response searchStaffMembers(\n     roleArchetypes.add(EnvironmentRoleArchetype.STUDY_GUIDER);\n     roleArchetypes.add(EnvironmentRoleArchetype.TEACHER);\n \n+    Set<Long> userGroupFilters = null;\n+    if (!CollectionUtils.isEmpty(userGroupIds)) {\n+      userGroupFilters = new HashSet<Long>();\n+      userGroupFilters.addAll(userGroupIds);\n+    }\n+\n     String[] fields = new String[] { \"firstName\", \"lastName\", \"email\" };\n     \n     SearchResult result = searchProvider.searchUsers(\n         Arrays.asList(organizationEntity),\n         searchString, \n         fields, \n         roleArchetypes, \n-        null,              // userGroupFilters \n+        userGroupFilters, \n         null,              // workspaceFilters \n         null,              // userFilters\n         false,             // includeInactiveStudents\n@@ -166,6 +176,7 @@ public Response searchStaffMembers(\n   @RESTPermit(OrganizationManagementPermissions.ORGANIZATION_SEARCH_STUDENTS)\n   public Response searchStudents(\n       @QueryParam(\"q\") String searchString,\n+      @QueryParam(\"userGroupIds\") List<Long> userGroupIds,\n       @QueryParam(\"firstResult\") @DefaultValue(\"0\") Integer firstResult,\n       @QueryParam(\"maxResults\") @DefaultValue(\"10\") Integer maxResults) {\n     \n@@ -177,6 +188,12 @@ public Response searchStudents(\n     if (searchProvider == null) {\n       return Response.status(Status.INTERNAL_SERVER_ERROR).build();\n     }\n+    \n+    Set<Long> userGroupFilters = null;\n+    if (!CollectionUtils.isEmpty(userGroupIds)) {\n+      userGroupFilters = new HashSet<Long>();\n+      userGroupFilters.addAll(userGroupIds);\n+    }\n \n     List<fi.otavanopisto.muikku.rest.model.Student> students = new ArrayList<>();\n \n@@ -191,7 +208,7 @@ public Response searchStudents(\n         searchString,\n         fields,\n         Arrays.asList(EnvironmentRoleArchetype.STUDENT),\n-        null,                                                 // userGroupFilters\n+        userGroupFilters,\n         null,                                                 // workspaceFilters\n         null,                                                 // userIdentifiers\n         false,                                                // includeInactiveStudents"
  },
  {
    "sha": "51874806cb06524d38755ba1803171b5a5013d46",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/index.ts",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/index.ts",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/index.ts",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/index.ts?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -28,7 +28,11 @@ import { UPDATE_UNREAD_MESSAGE_THREADS_COUNT, UPDATE_MESSAGE_THREADS } from './m\n \n // Do not delete this, organization stuff\n \n-import { UPDATE_STUDENT_USERS, UPDATE_STAFF_USERS, UPDATE_STUDENT_SELECTOR, UPDATE_STAFF_SELECTOR, UPDATE_GROUP_SELECTOR, CLEAR_USER_SELECTOR, UPDATE_USERS_STATE, UPDATE_STUDYPROGRAMME_TYPES, UPDATE_STUDYPROGRAMME_STATUS_TYPE } from './main-function/users';\n+import {\n+  UPDATE_STUDENT_USERS, UPDATE_STAFF_USERS, UPDATE_USER_GROUPS, UPDATE_STUDENT_SELECTOR,\n+  UPDATE_STAFF_SELECTOR, UPDATE_GROUP_SELECTOR, CLEAR_USER_SELECTOR, UPDATE_USERS_STATE, UPDATE_STUDYPROGRAMME_TYPES,\n+  UPDATE_STUDYPROGRAMME_STATUS_TYPE, UPDATE_CURRENT_USER_GROUP, UPDATE_USER_GROUPS_STATE, UPDATE_HAS_MORE_USERGROUPS, SET_CURRENT_PAYLOAD, LOAD_MORE_USER_GROUPS\n+} from './main-function/users';\n import {\n   UPDATE_ANNOUNCEMENTS, UPDATE_ANNOUNCEMENTS_STATE, UPDATE_ANNOUNCEMENTS_ALL_PROPERTIES, UPDATE_SELECTED_ANNOUNCEMENTS,\n   ADD_TO_ANNOUNCEMENTS_SELECTED, REMOVE_FROM_ANNOUNCEMENTS_SELECTED,\n@@ -112,7 +116,7 @@ export type ActionType = SET_CURRENT_MESSAGE_THREAD | UPDATE_MESSAGES_STATE |\n   UPDATE_STUDIES_YO_ELIGIBILITY_STATUS | UPDATE_STUDIES_YO_ELIGIBILITY | UPDATE_STUDIES_SUBJECT_ELIGIBILITY | UPDATE_STUDIES_SUBJECT_ELIGIBILITY_STATUS | UPDATE_HOPS_ELIGIBILITY |\n   SET_DISCUSSION_WORKSPACE_ID | UPDATE_HOPS | UPDATE_HOPS_STATUS | UPDATE_ERROR | SET_PROFILE_USER_PROPERTY | SET_PROFILE_USERNAME | SET_PROFILE_ADDRESSES | SET_PROFILE_STUDENT |\n   LOAD_CREDENTIALS | CREDENTIALS_STATE | UPDATE_WORKSPACES_AVAILABLE_FILTERS_ORGANIZATIONS |\n-  UPDATE_STUDENT_USERS | UPDATE_STAFF_USERS | UPDATE_STUDENT_SELECTOR | UPDATE_STAFF_SELECTOR | UPDATE_GROUP_SELECTOR | CLEAR_USER_SELECTOR | UPDATE_STUDYPROGRAMME_TYPES | UPDATE_STUDYPROGRAMME_STATUS_TYPE | UPDATE_USERS_STATE | SET_CURRENT_WORKSPACE | UPDATE_WORKSPACE_ASSESSMENT_STATE | UPDATE_WORKSPACE | UPDATE_WORKSPACES_SET_CURRENT_MATERIALS |\n+  UPDATE_STUDENT_USERS | UPDATE_CURRENT_USER_GROUP | UPDATE_USER_GROUPS_STATE | UPDATE_HAS_MORE_USERGROUPS | LOAD_MORE_USER_GROUPS | SET_CURRENT_PAYLOAD | UPDATE_STAFF_USERS | UPDATE_USER_GROUPS | UPDATE_STUDENT_SELECTOR | UPDATE_STAFF_SELECTOR | UPDATE_GROUP_SELECTOR | CLEAR_USER_SELECTOR | UPDATE_STUDYPROGRAMME_TYPES | UPDATE_STUDYPROGRAMME_STATUS_TYPE | UPDATE_USERS_STATE | SET_CURRENT_WORKSPACE | UPDATE_WORKSPACE_ASSESSMENT_STATE | UPDATE_WORKSPACE | UPDATE_WORKSPACES_SET_CURRENT_MATERIALS |\n   UPDATE_WORKSPACES_SET_CURRENT_MATERIALS_ACTIVE_NODE_ID | UPDATE_WORKSPACES_SET_CURRENT_MATERIALS_REPLIES |\n   UPDATE_CURRENT_COMPOSITE_REPLIES_UPDATE_OR_CREATE_COMPOSITE_REPLY_STATE_VIA_ID_NO_ANSWER | UPDATE_MATERIAL_CONTENT_NODE | DELETE_MATERIAL_CONTENT_NODE |\n   INSERT_MATERIAL_CONTENT_NODE | UPDATE_PATH_FROM_MATERIAL_CONTENT_NODES | UPDATE_WORKSPACES_EDIT_MODE_STATE | UPDATE_WORKSPACES_SET_CURRENT_HELP | SET_PROFILE_CHAT_SETTINGS"
  },
  {
    "sha": "91057201239e0100f37c270a9738d359958d7d23",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/main-function/guider/index.ts",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/main-function/guider/index.ts",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/main-function/guider/index.ts",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/main-function/guider/index.ts?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -3,7 +3,7 @@ import {AnyActionType, SpecificActionType} from '~/actions';\n import {GuiderActiveFiltersType, GuiderPatchType, GuiderStudentsStateType, GuiderStudentType, GuiderStudentUserProfileLabelType, GuiderNotificationStudentsDataType, GuiderStudentUserProfileType, GuiderCurrentStudentStateType, GuiderType} from '~/reducers/main-function/guider';\n import {loadStudentsHelper} from './helpers';\n import promisify from '~/util/promisify';\n-import {UserGroupListType, UserFileType, StudentUserProfilePhoneType, StudentUserProfileEmailType, StudentUserAddressType} from 'reducers/user-index';\n+import {UserFileType, StudentUserProfilePhoneType, StudentUserProfileEmailType, StudentUserAddressType, UserGroupType} from 'reducers/user-index';\n import notificationActions from '~/actions/base/notifications';\n import {GuiderUserLabelType, GuiderUserLabelListType, GuiderWorkspaceListType} from '~/reducers/main-function/guider';\n import {WorkspaceListType, WorkspaceStudentActivityType, WorkspaceForumStatisticsType, ActivityLogType} from '~/reducers/workspaces';\n@@ -200,7 +200,7 @@ let loadStudent:LoadStudentTriggerType = function loadStudent(id){\n             dispatch({type: \"SET_CURRENT_GUIDER_STUDENT_PROP\", payload: {property: \"basic\", value: basic}})\n           }),\n         promisify(mApi().usergroup.groups.read({userIdentifier: id}), 'callback')()\n-          .then((usergroups:UserGroupListType)=>{\n+          .then((usergroups:UserGroupType[])=>{\n             dispatch({type: \"SET_CURRENT_GUIDER_STUDENT_PROP\", payload: {property: \"usergroups\", value: usergroups}})\n           }),\n         promisify(mApi().user.students.flags.read(id, {"
  },
  {
    "sha": "ad112f97aecd933bcd0782c3607bd889d637fd8c",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/main-function/users/index.ts",
    "status": "modified",
    "additions": 320,
    "deletions": 68,
    "changes": 388,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/main-function/users/index.ts",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/main-function/users/index.ts",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/actions/main-function/users/index.ts?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -1,13 +1,22 @@\n import mApi, { MApiError } from '~/lib/mApi';\n import { AnyActionType, SpecificActionType } from '~/actions';\n import promisify from '~/util/promisify';\n-import { UsersListType, UserPanelUsersType, OrganizationUsersListType, UsersSelectType, UserStatusType, StudyprogrammeListType, StudyprogrammeTypeStatusType } from 'reducers/main-function/users';\n-import { UserGroupType, UpdateUserType, CreateUserType, UserGroupListType } from 'reducers/user-index';\n+import {\n+  UsersListType, UpdateUserGroupStateType, CreateUserGroupType, ModifyUserGroupUsersType,\n+  CurrentUserGroupType, UserPanelUsersType, OrganizationUsersListType, UsersSelectType, UserStatusType,\n+  StudyprogrammeListType, UpdateUserGroupType, UserGroupsStateType, StudyprogrammeTypeStatusType, UserPayloadType\n+} from 'reducers/main-function/users';\n+import { UserGroupType, UpdateUserType, CreateUserType } from 'reducers/user-index';\n import notificationActions from '~/actions/base/notifications';\n import { StateType } from '~/reducers';\n-import { type } from 'os';\n+export type SET_CURRENT_PAYLOAD = SpecificActionType<\"SET_CURRENT_PAYLOAD\", UserPayloadType>\n+export type UPDATE_USER_GROUPS_STATE = SpecificActionType<\"UPDATE_USER_GROUPS_STATE\", UserGroupsStateType>\n+export type UPDATE_HAS_MORE_USERGROUPS = SpecificActionType<\"UPDATE_HAS_MORE_USERGROUPS\", boolean>\n export type UPDATE_STUDENT_USERS = SpecificActionType<\"UPDATE_STUDENT_USERS\", UserPanelUsersType>\n export type UPDATE_STAFF_USERS = SpecificActionType<\"UPDATE_STAFF_USERS\", UserPanelUsersType>\n+export type LOAD_MORE_USER_GROUPS = SpecificActionType<\"LOAD_MORE_USER_GROUPS\", Array<UserGroupType>>\n+export type UPDATE_USER_GROUPS = SpecificActionType<\"UPDATE_USER_GROUPS\", Array<UserGroupType>>\n+export type UPDATE_CURRENT_USER_GROUP = SpecificActionType<\"UPDATE_CURRENT_USER_GROUP\", CurrentUserGroupType>\n export type UPDATE_STUDENT_SELECTOR = SpecificActionType<\"UPDATE_STUDENT_SELECTOR\", UsersListType>\n export type UPDATE_STAFF_SELECTOR = SpecificActionType<\"UPDATE_STAFF_SELECTOR\", UsersListType>\n export type UPDATE_GROUP_SELECTOR = SpecificActionType<\"UPDATE_GROUP_SELECTOR\", Array<UserGroupType>>\n@@ -48,12 +57,47 @@ export interface UpdateStaffmemberTriggerType {\n   }): AnyActionType\n }\n \n+export interface UpdateUsergroupTriggerType {\n+  (data: {\n+    update: UpdateUserGroupType,\n+    addUsers?: ModifyUserGroupUsersType,\n+    removeUsers?: ModifyUserGroupUsersType,\n+    progress?: (state: UpdateUserGroupStateType) => any,\n+    success?: () => any,\n+    fail?: () => any\n+  }): AnyActionType\n+}\n+\n+export interface CreateUsergroupTriggerType {\n+  (data: {\n+    payload: CreateUserGroupType,\n+    addUsers?: string[],\n+    progress?: (state: UpdateUserGroupStateType) => any,\n+    success?: () => any,\n+    fail?: () => any\n+  }): AnyActionType\n+}\n+\n export interface LoadStudyprogrammesTriggerType {\n   (): AnyActionType\n }\n \n export interface LoadUsersTriggerType {\n-  (q: string | null, first?: number, last?: number): AnyActionType\n+  (data: {\n+    payload: UserPayloadType,\n+    success?: (result: OrganizationUsersListType) => any,\n+    fail?: () => any,\n+  }\n+\n+  ): AnyActionType\n+}\n+\n+export interface LoadMoreUserTriggerType {\n+  (): AnyActionType\n+}\n+\n+export interface SetCurrentUserGroupTriggerType {\n+  (id: number): AnyActionType\n }\n \n function delay(ms: number) {\n@@ -173,6 +217,59 @@ let updateStaffmember: UpdateStaffmemberTriggerType = function updateStaffmember\n   }\n }\n \n+let updateUsergroup: UpdateUsergroupTriggerType = function updateUsergroup(data) {\n+  return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n+    try {\n+      if (data.update) {\n+        await promisify(mApi().usergroup.groups.update(data.update), 'callback')();\n+        data.progress && data.progress(\"update-group\");\n+      }\n+      if (data.addUsers) {\n+        await promisify(mApi().usergroup.addusers.update(data.addUsers), 'callback')();\n+        data.progress && data.progress(\"add-users\");\n+      }\n+      if (data.removeUsers) {\n+        await promisify(mApi().usergroup.removeusers.update(data.removeUsers), 'callback')();\n+        data.progress && data.progress(\"remove-users\");\n+      }\n+      data.progress && data.progress(\"done\");\n+      data.success && data.success();\n+      dispatch(notificationActions.displayNotification(getState().i18n.text.get(\"plugin.organization.update.usergroup.success\"), 'success'));\n+    } catch (err) {\n+      dispatch(notificationActions.displayNotification(getState().i18n.text.get(\"plugin.organization.update.usergroup.error\"), 'error'));\n+      data.fail && data.fail();\n+    }\n+  }\n+}\n+\n+let createUsergroup: CreateUsergroupTriggerType = function createUsergroup(data) {\n+  return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n+    try {\n+\n+      let userGroup: UserGroupType = await promisify(mApi().usergroup.groups.create(data.payload), 'callback')() as UserGroupType;\n+\n+      data.progress && data.progress(\"update-group\");\n+\n+      let userPayload: ModifyUserGroupUsersType = {\n+        groupIdentifier: userGroup.identifier,\n+        userIdentifiers: data.addUsers\n+      }\n+\n+      if (data.addUsers && data.addUsers.length > 0) {\n+        await promisify(mApi().usergroup.addusers.update(userPayload), 'callback')();\n+        data.progress && data.progress(\"add-users\");\n+      }\n+\n+      data.progress && data.progress(\"done\");\n+      data.success && data.success();\n+      dispatch(notificationActions.displayNotification(getState().i18n.text.get(\"plugin.organization.create.usergroup.success\"), 'success'));\n+    } catch (err) {\n+      dispatch(notificationActions.displayNotification(getState().i18n.text.get(\"plugin.organization.create.usergroup.error\"), 'error'));\n+      data.fail && data.fail();\n+    }\n+  }\n+}\n+\n let loadStudyprogrammes: LoadStudyprogrammesTriggerType = function loadStudyprogrammes() {\n   return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n     try {\n@@ -197,35 +294,17 @@ let loadStudyprogrammes: LoadStudyprogrammesTriggerType = function loadStudyprog\n   }\n }\n \n-type UserDataType = {\n-  q: string,\n-  firstResult?: number,\n-  lastResult?: number\n-}\n-\n-let loadStudents: LoadUsersTriggerType = function loadStudents(q: string | null, first: number | null, last: number | null) {\n-\n-  let data: UserDataType = {\n-    q: !q ? null : q,\n-  };\n-\n-  if (first) {\n-    data.firstResult = first;\n-  }\n-\n-  if (last) {\n-    data.lastResult = last;\n-  }\n \n+let loadStudents: LoadUsersTriggerType = function loadStudents(data) {\n   return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n     try {\n       dispatch({\n         type: \"LOCK_TOOLBAR\",\n         payload: null\n       });\n \n-      await promisify(mApi().organizationUserManagement.students.read(data), 'callback')().then((users: UserPanelUsersType) => {\n-        let payload = { ...users, searchString: data.q };\n+      await promisify(mApi().organizationUserManagement.students.read(data.payload), 'callback')().then((users: UserPanelUsersType) => {\n+        let payload = { ...users, searchString: data.payload.q };\n         dispatch({\n           type: \"UPDATE_STUDENT_USERS\",\n           payload: payload\n@@ -255,47 +334,142 @@ let loadStudents: LoadUsersTriggerType = function loadStudents(q: string | null,\n   }\n }\n \n-let loadStaff: LoadUsersTriggerType = function loadStaff(q: string | null, first: number | null, last: number | null) {\n-\n-  let data: UserDataType = {\n-    q: !q ? null : q,\n-  };\n+let loadStaff: LoadUsersTriggerType = function loadStaff(data) {\n+  return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n+    try {\n+      dispatch({\n+        type: \"LOCK_TOOLBAR\",\n+        payload: null\n+      });\n+      await promisify(mApi().organizationUserManagement.staffMembers.read(data.payload), 'callback')().then((users: UserPanelUsersType) => {\n+        let payload = { ...users, searchString: data.payload.q };\n \n-  if (first) {\n-    data.firstResult = first;\n+        dispatch({\n+          type: \"UPDATE_STAFF_USERS\",\n+          payload: payload\n+        });\n+      });\n+      dispatch({\n+        type: \"UNLOCK_TOOLBAR\",\n+        payload: null\n+      });\n+    } catch (err) {\n+      if (!(err instanceof MApiError)) {\n+        throw err;\n+      }\n+      dispatch(notificationActions.displayNotification(getState().i18n.text.get(\"plugin.guider.errormessage.user\"), 'error'));\n+      dispatch({\n+        type: \"UPDATE_USERS_STATE\",\n+        payload: <UserStatusType>\"ERROR\"\n+      });\n+      dispatch({\n+        type: \"UNLOCK_TOOLBAR\",\n+        payload: null\n+      });\n+    }\n   }\n+}\n+\n+let loadUserGroups: LoadUsersTriggerType = function loadUserGroups(data) {\n+  let maxResults = data.payload.maxResults ? data.payload.maxResults + 1 : 26;\n \n-  if (last) {\n-    data.lastResult = last;\n+  data.payload.maxResults = maxResults;\n+\n+  if (!data.payload.firstResult) {\n+    data.payload.firstResult = 0;\n   }\n \n   return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n     try {\n+\n       dispatch({\n-        type: \"LOCK_TOOLBAR\",\n-        payload: null\n+        type: \"UPDATE_HAS_MORE_USERGROUPS\",\n+        payload: false,\n       });\n \n-      await promisify(mApi().organizationUserManagement.staffMembers.read(data), 'callback')().then((users: UserPanelUsersType) => {\n-        let payload = { ...users, searchString: data.q };\n+      let userGroups: UserGroupType[] = await promisify(mApi().usergroup.groups.read(data.payload), 'callback')() as UserGroupType[];\n+\n+      dispatch({\n+        type: \"SET_CURRENT_PAYLOAD\",\n+        payload: data.payload\n+      });\n \n+      dispatch({\n+        type: \"UPDATE_USER_GROUPS\",\n+        payload: userGroups\n+      });\n+\n+      if (userGroups.length > maxResults - 1) {\n         dispatch({\n-          type: \"UPDATE_STAFF_USERS\",\n-          payload: payload\n+          type: \"UPDATE_HAS_MORE_USERGROUPS\",\n+          payload: true,\n         });\n-      });\n+        userGroups.pop();\n+      } else {\n+        dispatch({\n+          type: \"UPDATE_HAS_MORE_USERGROUPS\",\n+          payload: false,\n+        });\n+      }\n \n+      dispatch({\n+        type: \"UPDATE_USER_GROUPS_STATE\",\n+        payload: \"READY\"\n+      });\n+    } catch (err) {\n+      if (!(err instanceof MApiError)) {\n+        throw err;\n+      }\n+      dispatch(notificationActions.displayNotification(getState().i18n.text.get(\"Load failed\"), 'error'));\n+      dispatch({\n+        type: \"UPDATE_USERS_STATE\",\n+        payload: <UserStatusType>\"ERROR\"\n+      });\n       dispatch({\n         type: \"UNLOCK_TOOLBAR\",\n         payload: null\n       });\n+    }\n+  }\n+}\n+\n+let loadMoreUserGroups: LoadUsersTriggerType = function loadMoreUserGroups() {\n+\n+  return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n+    try {\n+\n+      let currentState = getState().userGroups;\n+      let payload = currentState.currentPayload;\n+      payload.firstResult = payload.firstResult + payload.maxResults - 1;\n+      let userGroups: UserGroupType[] = await promisify(mApi().usergroup.groups.read(payload), 'callback')() as UserGroupType[];\n+\n+      dispatch({\n+        type: \"LOAD_MORE_USER_GROUPS\",\n+        payload: userGroups\n+      });\n+\n+      if (userGroups.length > payload.maxResults - 1) {\n+        dispatch({\n+          type: \"UPDATE_HAS_MORE_USERGROUPS\",\n+          payload: true,\n+        });\n+        userGroups.pop();\n+      } else {\n+        dispatch({\n+          type: \"UPDATE_HAS_MORE_USERGROUPS\",\n+          payload: false,\n+        });\n+      }\n \n+      dispatch({\n+        type: \"UPDATE_USER_GROUPS_STATE\",\n+        payload: \"READY\"\n+      });\n     } catch (err) {\n       if (!(err instanceof MApiError)) {\n         throw err;\n       }\n-      dispatch(notificationActions.displayNotification(getState().i18n.text.get(\"plugin.guider.errormessage.user\"), 'error'));\n-\n+      dispatch(notificationActions.displayNotification(getState().i18n.text.get(\"Loadmore failed\"), 'error'));\n       dispatch({\n         type: \"UPDATE_USERS_STATE\",\n         payload: <UserStatusType>\"ERROR\"\n@@ -308,22 +482,104 @@ let loadStaff: LoadUsersTriggerType = function loadStaff(q: string | null, first\n   }\n }\n \n-let loadUsers: LoadUsersTriggerType = function loadUsers(q: string | null, first: number | null, last: number | null) {\n \n-  let data: UserDataType = {\n-    q: !q ? null : q,\n-  };\n \n-  if (first) {\n-    data.firstResult = first;\n+let setCurrentUserGroup: SetCurrentUserGroupTriggerType = function loadCurrentUserGroup(id: number) {\n+  return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n+\n+    let current: CurrentUserGroupType = getState().userGroups.currentUserGroup ? getState().userGroups.currentUserGroup : null;\n+\n+    let payload: CurrentUserGroupType = {\n+      id: id,\n+      students: current ? current.students : null,\n+      staff: current ? current.staff : null,\n+    };\n+\n+    try {\n+      dispatch({\n+        type: \"UPDATE_CURRENT_USER_GROUP\",\n+        payload: payload\n+      });\n+\n+    } catch (err) {\n+      if (!(err instanceof MApiError)) {\n+        throw err;\n+      }\n+      dispatch(notificationActions.displayNotification(getState().i18n.text.get(\"TODO\"), 'error'));\n+    }\n   }\n+}\n+\n+let loadAllCurrentUserGroupStaff: LoadUsersTriggerType = function loadAllCurrentUserGroupUsers(data) {\n+  return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n+\n+    let test = getState().userGroups.currentUserGroup ? getState().userGroups.currentUserGroup : null;\n+\n+    let current = getState().userGroups.currentUserGroup ? getState().userGroups.currentUserGroup : null;\n+\n+    let payload: CurrentUserGroupType = {\n+      id: current ? current.id : null,\n+      students: current ? current.students : null,\n+      staff: null,\n+    };\n+\n+    try {\n+      await promisify(mApi().organizationUserManagement.staffMembers.read(data.payload), 'callback')().then((result: OrganizationUsersListType) => {\n+        payload.staff = result;\n+      }),\n+\n+        dispatch({\n+          type: \"UPDATE_CURRENT_USER_GROUP\",\n+          payload: payload\n+        });\n+\n+      data.success && data.success(payload.staff);\n \n-  if (last) {\n-    data.lastResult = last;\n+    } catch (err) {\n+      if (!(err instanceof MApiError)) {\n+        throw err;\n+      }\n+      dispatch(notificationActions.displayNotification(getState().i18n.text.get(\"plugin.guider.errormessage.user\"), 'error'));\n+    }\n   }\n+}\n+\n+let loadAllCurrentUserGroupStudents: LoadUsersTriggerType = function loadAllCurrentUserGroupUsers(data) {\n+  return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n+\n+    let current = getState().userGroups.currentUserGroup ? getState().userGroups.currentUserGroup : null;\n+\n+    let payload: CurrentUserGroupType = {\n+      id: current ? current.id : null,\n+      students: null,\n+      staff: current ? current.staff : null,\n+    };\n+\n+    try {\n+      await promisify(mApi().organizationUserManagement.students.read(data.payload), 'callback')().then((result: OrganizationUsersListType) => {\n+        payload.students = result;\n+      }),\n+\n+        dispatch({\n+          type: \"UPDATE_CURRENT_USER_GROUP\",\n+          payload: payload\n+        });\n \n-  let getStudents = promisify(mApi().organizationUserManagement.students.read(data), 'callback')();\n-  let getStaffmembers = promisify(mApi().organizationUserManagement.staffMembers.read(data), 'callback')();\n+      data.success && data.success(payload.students);\n+\n+    } catch (err) {\n+      if (!(err instanceof MApiError)) {\n+        throw err;\n+      }\n+      dispatch(notificationActions.displayNotification(getState().i18n.text.get(\"plugin.guider.errormessage.user\"), 'error'));\n+    }\n+  }\n+}\n+\n+let loadUsers: LoadUsersTriggerType = function loadUsers(data) {\n+\n+  let getStudents = promisify(mApi().organizationUserManagement.students.read(data.payload), 'callback')();\n+  let getStaffmembers = promisify(mApi().organizationUserManagement.staffMembers.read(data.payload), 'callback')();\n \n   return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n     try {\n@@ -334,15 +590,15 @@ let loadUsers: LoadUsersTriggerType = function loadUsers(q: string | null, first\n \n       await Promise.all([\n         getStudents.then((users: UserPanelUsersType) => {\n-          let payload = { ...users, searchString: data.q };\n+          let payload = { ...users, searchString: data.payload.q };\n \n           dispatch({\n             type: \"UPDATE_STUDENT_USERS\",\n             payload: payload\n           });\n         }),\n         getStaffmembers.then((users: UserPanelUsersType) => {\n-          let payload = { ...users, searchString: data.q };\n+          let payload = { ...users, searchString: data.payload.q };\n \n           dispatch({\n             type: \"UPDATE_STAFF_USERS\",\n@@ -376,10 +632,9 @@ let loadUsers: LoadUsersTriggerType = function loadUsers(q: string | null, first\n   }\n }\n \n-let loadSelectorStudents: LoadUsersTriggerType = function loadSelectorStudents(q?: string) {\n+let loadSelectorStudents: LoadUsersTriggerType = function loadSelectorStudents(data) {\n \n-  let data = { q: q };\n-  let getStudents = q ? mApi().organizationUserManagement.students.read(data) : null;\n+  let getStudents = data.payload.q ? mApi().organizationUserManagement.students.read(data.payload) : null;\n \n   return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n     try {\n@@ -425,10 +680,9 @@ let loadSelectorStudents: LoadUsersTriggerType = function loadSelectorStudents(q\n   }\n }\n \n-let loadSelectorStaff: LoadUsersTriggerType = function loadSelectorStaff(q?: string) {\n+let loadSelectorStaff: LoadUsersTriggerType = function loadSelectorStaff(data) {\n \n-  let data = { q: q };\n-  let getStaff = q ? mApi().organizationUserManagement.staffMembers.read(data) : null;\n+  let getStaff = data.payload.q ? mApi().organizationUserManagement.staffMembers.read(data.payload) : null;\n \n   return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n     try {\n@@ -473,10 +727,8 @@ let loadSelectorStaff: LoadUsersTriggerType = function loadSelectorStaff(q?: str\n   }\n }\n \n-let loadSelectorUserGroups: LoadUsersTriggerType = function loadSelectorUserGroups(q?: string) {\n-\n-  let data = { q: q };\n-  let getUserGroups = q ? mApi().usergroup.groups.read(data) : null;\n+let loadSelectorUserGroups: LoadUsersTriggerType = function loadSelectorUserGroups(data) {\n+  let getUserGroups = data.payload.q ? mApi().usergroup.groups.read(data.payload) : null;\n \n   return async (dispatch: (arg: AnyActionType) => any, getState: () => StateType) => {\n     try {\n@@ -485,14 +737,14 @@ let loadSelectorUserGroups: LoadUsersTriggerType = function loadSelectorUserGrou\n         payload: null\n       });\n       if (getUserGroups !== null) {\n-        await promisify(getUserGroups, 'callback')().then((usergGroups: UserGroupListType) => {\n+        await promisify(getUserGroups, 'callback')().then((usergGroups: UserGroupType[]) => {\n           dispatch({\n             type: \"UPDATE_GROUP_SELECTOR\",\n             payload: usergGroups\n           });\n         });\n       } else {\n-        let payload: Partial<UsersSelectType> = { userGroups: [] };\n+        let payload: Partial<UsersSelectType> = { usergroups: [] };\n         dispatch({\n           type: \"CLEAR_USER_SELECTOR\",\n           payload\n@@ -521,4 +773,4 @@ let loadSelectorUserGroups: LoadUsersTriggerType = function loadSelectorUserGrou\n   }\n }\n \n-export { loadUsers, loadStaff, loadStudents, loadSelectorStaff, loadSelectorStudents, loadSelectorUserGroups, loadStudyprogrammes, updateStaffmember, updateStudent, createStaffmember, createStudent };\n+export { loadUsers, loadAllCurrentUserGroupStaff, loadAllCurrentUserGroupStudents, updateUsergroup, setCurrentUserGroup, createUsergroup, loadStaff, loadUserGroups, loadMoreUserGroups, loadStudents, loadSelectorStaff, loadSelectorStudents, loadSelectorUserGroups, loadStudyprogrammes, updateStaffmember, updateStudent, createStaffmember, createStudent };"
  },
  {
    "sha": "b8cf895ffee4b0ea6e36e2125e09e2c5158277cd",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/base/input-select-autofill.tsx",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/base/input-select-autofill.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/base/input-select-autofill.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/base/input-select-autofill.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -97,7 +97,7 @@ export default class AutofillSelector extends React.Component<AutofillSelectorPr\n   }\n \n   render() {\n-    let selectedItems = this.props.selectedItems.map((item) => {\n+    let selectedItems = this.props.selectedItems && this.props.selectedItems.map((item) => {\n       return {\n         node: <span className=\"autocomplete__selected-item\">\n           {item.icon ?"
  },
  {
    "sha": "67bd7ab3b602904f63989392924291cccb547520",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/application-list.tsx",
    "status": "modified",
    "additions": 7,
    "deletions": 5,
    "changes": 12,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/application-list.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/application-list.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/application-list.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -1,11 +1,10 @@\n import * as React from \"react\";\n-\n import '~/sass/elements/application-list.scss';\n-import primary from \"../records/body/application/primary\";\n+\n \n interface ApplicationListProps {\n   modifiers?: string | Array<string>,\n-  className?: string\n+  className?: string,\n   sortKey?: string,\n   sortData?: any\n }\n@@ -25,17 +24,20 @@ export default class ApplicationList extends React.Component<ApplicationListProp\n \n interface ApplicationListItemProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n   modifiers?: string | Array<string>\n+  classState?: string,\n }\n \n interface ApplicationListItemState {\n+\n }\n \n export class ApplicationListItem extends React.Component<ApplicationListItemProps, ApplicationListItemState> {\n   render() {\n     let newProps: ApplicationListItemProps = Object.assign({}, this.props);\n     let modifiers = this.props.modifiers && this.props.modifiers instanceof Array ? this.props.modifiers : [this.props.modifiers];\n     delete newProps[\"modifiers\"];\n-    return <div tabIndex={0} {...newProps} className={`application-list__item ${this.props.className ? this.props.className : \"\"} ${this.props.modifiers ? modifiers.map(m => `application-list__item--${m}`).join(\" \") : \"\"}`}>\n+    delete newProps[\"classState\"];\n+    return <div tabIndex={0} {...newProps} className={`application-list__item ${this.props.className ? this.props.className : \"\"} ${this.props.modifiers ? modifiers.map(m => `application-list__item--${m}`).join(\" \") : \"\"} ${this.props.classState? \"state-\" + this.props.classState.toUpperCase() : \"\"}`}>\n       {this.props.children}\n     </div>\n   }\n@@ -163,7 +165,7 @@ interface ApplicationListItemContentWrapperProps extends React.DetailedHTMLProps\n   asideModifiers?: string | Array<string>,\n   mainModifiers?: string | Array<string>,\n   actions?: React.ReactElement<any>,\n-  aside: React.ReactElement<any>\n+  aside?: React.ReactElement<any>\n }\n \n interface ApplicationListItemContentWrapperState {"
  },
  {
    "sha": "44d406644bbf85c6faf1cf263bf52f773f9be6a0",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/application-panel/components/application-panel-body.tsx",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/application-panel/components/application-panel-body.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/application-panel/components/application-panel-body.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/application-panel/components/application-panel-body.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -156,7 +156,6 @@ export default class ApplicationPanelBody extends React.Component<ApplicationPan\n   }\n \n   onScroll(e: Event){\n-    let test = this.state.sticky;\n     let top = (document.documentElement.scrollTop || document.body.scrollTop);\n     let diff = this.offsetStickyElementTop - top;\n     let isSticky = (diff < this.offsetElementAgainstTop);"
  },
  {
    "sha": "a4425dc5edcb594aafebbcbdccc363419ff3ea85",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/body-scroll-loader.tsx",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/body-scroll-loader.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/body-scroll-loader.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/body-scroll-loader.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -6,6 +6,7 @@ export default class BodyScrollLoader<T, S> extends React.Component<T, S> {\n   public hasMorePropertyLocation:string;\n   public hasMore:()=>boolean;\n   public loadMoreTriggerFunctionLocation:string;\n+  public loadMoreTriggerFunctionParameters:any;\n   public loadMoreTriggerFunction: any;\n   public cancellingLoadingPropertyLocation: string;\n   private lastTimeCalledLoadMore: number;"
  },
  {
    "sha": "b02d8f0fb664a8ad33b6de56dc23c07ff3e9b174",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/dialog.tsx",
    "status": "modified",
    "additions": 185,
    "deletions": 2,
    "changes": 187,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/dialog.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/dialog.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/dialog.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -1,10 +1,14 @@\n import Portal from './portal';\n import * as React from 'react';\n-import Button from '~/components/general/button';\n-import { i18nType } from '~/reducers/base/i18n';\n import '~/sass/elements/loaders.scss';\n import '~/sass/elements/dialog.scss';\n import '~/sass/elements/form-elements.scss';\n+import {SearchFormElement } from '~/components/general/form-element';\n+import ApplicationList, { ApplicationListItemContentWrapper, ApplicationListItem, ApplicationListItemHeader } from '~/components/general/application-list';\n+import { UserType } from '../../reducers/user-index';\n+import Tabs  from \"~/components/general/tabs\";\n+import { UiSelectItem } from '../base/input-select-autofill';\n+import Pager from '~/components/general/pager';\n \n interface DialogProps {\n   children?: React.ReactElement<any>,\n@@ -86,6 +90,7 @@ export default class Dialog extends React.Component<DialogProps, DialogState> {\n           let modifiers:Array<string> = typeof this.props.modifier === \"string\" ? [this.props.modifier] : this.props.modifier;\n         return <div className={`dialog ${(modifiers || []).map(s=>`dialog--${s}`).join(\" \")} ${this.state.visible ? \"dialog--visible\" : \"\"}`}\n             onClick={closeOnOverlayClick ? this.onOverlayClick.bind(this, closePortal) : null}>\n+            {/* Execution container is missing from here */}\n             <section role=\"dialog\" aria-labelledby={`dialog-title--${modifiers[0]}`} aria-modal=\"true\" className={`dialog__window ${(modifiers || []).map(s=>`dialog__window--${s}`).join(\" \")}`}>\n             <header className={`dialog__header ${(modifiers || []).map(s => `dialog__header--${s}`).join(\" \")}`}>\n               <div className=\"dialog__title\" id={`dialog-title--${modifiers[0]}`}>\n@@ -165,3 +170,181 @@ export class DialogRowContent extends React.Component<DialogRowContentProps, Dia\n   }\n }\n \n+interface DialogRemoveUsersProps {\n+  users: UserType[],\n+  removeUsers: UiSelectItem[],\n+  pages: number,\n+  placeholder: string,\n+  identifier: string,\n+  allTabTitle: string,\n+  removeTabTitle: string,\n+  onEmptyTitle: string,\n+  searchValue: string,\n+  maxUsersPerPage?: number,\n+  searchUsers: (q:string) => any,\n+  changePage: (n: number) => any,\n+  setRemoved: (u:UiSelectItem) => any,\n+}\n+\n+interface DialogRemoveUsersState {\n+  activeTab: string,\n+  removeUsersPage: UiSelectItem[],\n+  currentAllPage: number,\n+  currentRemovePage: number,\n+}\n+\n+export class DialogRemoveUsers extends React.Component<DialogRemoveUsersProps, DialogRemoveUsersState> {\n+  private maxUsersPerPage: number;\n+  private maxRemoveUsersPerPage: number;\n+\n+  constructor(props: DialogRemoveUsersProps) {\n+    super(props);\n+    this.maxUsersPerPage = this.props.maxUsersPerPage ? this.props.maxUsersPerPage : 5;\n+    this.maxRemoveUsersPerPage = 6;\n+    this.state = {\n+      removeUsersPage: [],\n+      activeTab: this.props.identifier + \"-ALL\",\n+      currentAllPage: 1,\n+      currentRemovePage: 1,\n+    }\n+\n+    this.onTabChange = this.onTabChange.bind(this);\n+    this.goToAllUsersPage = this.goToAllUsersPage.bind(this);\n+    this.goToRemovePage = this.goToRemovePage.bind(this);\n+    this.turnUserToUiSelectItem = this.turnUserToUiSelectItem.bind(this);\n+    this.toggleUserRemoved = this.toggleUserRemoved.bind(this);\n+    this.refreshRemoveUserpage = this.refreshRemoveUserpage.bind(this);\n+    this.checkUserInRemoveList = this.checkUserInRemoveList.bind(this);\n+  }\n+\n+  onTabChange(identifier: string) {\n+    this.setState({\n+      activeTab: identifier\n+    });\n+  }\n+\n+  goToAllUsersPage(n: number){\n+    this.setState({ currentAllPage: n});\n+    this.props.changePage(n);\n+  }\n+\n+  goToRemovePage(n: number){\n+    this.setState({currentRemovePage: n});\n+   this.refreshRemoveUserpage(n, this.props.removeUsers);\n+  }\n+\n+  turnUserToUiSelectItem (user: UserType){\n+    return {\n+      label: user.firstName + \" \" + user.lastName,\n+      id: user.id,\n+      icon: \"user\",\n+    } as UiSelectItem;\n+  }\n+\n+  refreshRemoveUserpage(page: number, removeUsers: UiSelectItem[]) {\n+    let pageStart: number = (page - 1) * this.maxRemoveUsersPerPage;\n+    let pageEnd: number = pageStart + this.maxRemoveUsersPerPage;\n+    let newRemoveUsers: UiSelectItem[] = [];\n+\n+    for(let i = pageStart; i < pageEnd; i ++ ) {\n+      if(removeUsers[i]) {\n+       newRemoveUsers = newRemoveUsers.concat(removeUsers[i]);\n+      }\n+    }\n+    this.setState({removeUsersPage: newRemoveUsers});\n+    if(newRemoveUsers.length === 0 && this.state.currentRemovePage !== 1) {\n+      this.goToRemovePage(this.state.currentRemovePage -1);\n+    }\n+\n+  }\n+\n+  toggleUserRemoved(user: UserType) {\n+    this.props.setRemoved(this.turnUserToUiSelectItem(user));\n+  }\n+\n+  UNSAFE_componentWillReceiveProps(nextProps:DialogRemoveUsersProps, nextState:DialogRemoveUsersState ) {\n+    if(this.props.removeUsers.length !== nextProps.removeUsers.length ) {\n+      this.refreshRemoveUserpage(this.state.currentRemovePage, nextProps.removeUsers);\n+    }\n+  }\n+\n+  checkUserInRemoveList(user: UserType, removedListUsers: UiSelectItem[]) {\n+    for(let i = 0; i < removedListUsers.length; i++) {\n+      if(user.id === removedListUsers[i].id) {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n+\n+  componentDidMount() {\n+    this.refreshRemoveUserpage(this.state.currentRemovePage, this.props.removeUsers);\n+    this.goToAllUsersPage(this.state.currentAllPage);\n+  }\n+\n+  render(){\n+    return(\n+    <Tabs onTabChange={this.onTabChange} renderAllComponents activeTab={this.state.activeTab} tabs={[\n+      {\n+        id: this.props.identifier + \"-ALL\",\n+        name: this.props.allTabTitle,\n+        component: ()=>{\n+          return <DialogRow modifiers=\"user-search\">\n+            <DialogRow>\n+              <SearchFormElement name=\"search-user-group-users\" placeholder={this.props.placeholder} value={this.props.searchValue} id=\"searchUserGroupUsers\"  updateField={this.props.searchUsers} />\n+            </DialogRow>\n+            <DialogRow>\n+              <ApplicationList modifiers=\"dialog-users\">\n+                {this.props.users.length > 0 ?\n+                  this.props.users.map((user: UserType) => {\n+                    return <ApplicationListItem className=\"course\" classState={this.checkUserInRemoveList(user, this.props.removeUsers) ? \"disabled\" : \"\"} key={\"all-\" + user.id}>\n+                      <ApplicationListItemContentWrapper>\n+                        <ApplicationListItemHeader onClick={this.toggleUserRemoved.bind(this, user)} modifiers=\"course\">\n+                          <span className=\"application-list__header-primary\">{user.firstName + \" \" + user.lastName}</span>\n+                          <span className=\"application-list__header-secondary\"></span>\n+                        </ApplicationListItemHeader>\n+                      </ApplicationListItemContentWrapper>\n+                    </ApplicationListItem>\n+                  })\n+                  : <div className=\"empty\">{this.props.onEmptyTitle}</div>}\n+              </ApplicationList>\n+            </DialogRow>\n+            <DialogRow>\n+            <Pager identifier={this.props.identifier + \"All\"} current={this.state.currentAllPage} onClick={this.goToAllUsersPage} pages={this.props.pages}></Pager>\n+            </DialogRow>\n+          </DialogRow>\n+        }\n+      },\n+      {\n+        id: this.props.identifier + \"-REMOVE\",\n+        name: this.props.removeTabTitle,\n+        component: ()=>{\n+          let removePages = Math.ceil(this.props.removeUsers.length / this.maxRemoveUsersPerPage);\n+          return <DialogRow>\n+            <DialogRow>\n+              <ApplicationList modifiers=\"dialog-remove-users\">\n+                {this.state.removeUsersPage.length > 0 ?\n+                  this.state.removeUsersPage.map((user: UiSelectItem) => {\n+                    return <ApplicationListItem className=\"course\" key={\"remove-\" + user.id}>\n+                      <ApplicationListItemContentWrapper>\n+                        <ApplicationListItemHeader onClick={this.toggleUserRemoved.bind(this, user)} modifiers=\"course\">\n+                          <span className=\"application-list__header-primary\">{user.label}</span>\n+                          <span className=\"application-list__header-secondary\"></span>\n+                        </ApplicationListItemHeader>\n+                      </ApplicationListItemContentWrapper>\n+                    </ApplicationListItem>\n+                  })\n+                  : <div className=\"empty\">{this.props.onEmptyTitle}</div>}\n+              </ApplicationList>\n+            </DialogRow>\n+            <DialogRow>\n+              {this.props.removeUsers.length > 0 ?\n+              <Pager identifier={this.props.identifier + \"Remove\"} current={this.state.currentRemovePage} onClick={this.goToRemovePage} pages={removePages}></Pager> : null }\n+            </DialogRow>\n+          </DialogRow>\n+        }\n+      }\n+    ]} />\n+    )\n+  }\n+}"
  },
  {
    "sha": "33f566aef14fbab9f21e7f78b62ece539a2a2c62",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/form-element.tsx",
    "status": "modified",
    "additions": 10,
    "deletions": 6,
    "changes": 16,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/form-element.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/form-element.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/form-element.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -223,9 +223,10 @@ export class SearchFormElement extends React.Component<SearchFormElementProps, S\n interface InputFormElementProps {\n   label: string,\n   name: string,\n+  updateField: (value: string | boolean, valid: boolean, name: string) => any,\n   id: string,\n-  updateField: (value: string, valid: boolean, Name: string) => any,\n   value?: string,\n+  checked?: boolean,\n   type?: string,\n   mandatory?: boolean,\n   valid?: number,\n@@ -246,7 +247,6 @@ export class InputFormElement extends React.Component<InputFormElementProps, Inp\n     // 0 = invalid, 1 = valid, 2 = neutral\n \n     this.state = {\n-      // value: this.props.value ? this.props.value : \"\",\n       valid: this.props.valid != null ? this.props.valid : 2\n     }\n   }\n@@ -255,7 +255,6 @@ export class InputFormElement extends React.Component<InputFormElementProps, Inp\n     let value = e.target.value;\n     let name = e.target.name;\n     let valid = false;\n-    // this.setState({ value: value });\n     if (this.props.mandatory != null && this.props.mandatory == true) {\n       if (value.trim().length == 0) {\n         this.setState({ valid: 0 });\n@@ -265,7 +264,13 @@ export class InputFormElement extends React.Component<InputFormElementProps, Inp\n         valid = true;\n       }\n     }\n-    this.props.updateField(value, valid, name);\n+    switch(this.props.type) {\n+      case \"checkbox\":\n+        this.props.updateField(e.target.checked, valid, name);\n+        break;\n+      default:\n+        this.props.updateField(value, valid, name);\n+    }\n   }\n \n   componentDidUpdate(prevProps: any) {\n@@ -276,11 +281,10 @@ export class InputFormElement extends React.Component<InputFormElementProps, Inp\n \n   render() {\n     const modifiers = this.props.modifiers && this.props.modifiers instanceof Array ? this.props.modifiers : [this.props.modifiers];\n-\n     return (\n       <div className={`form-element ${this.props.modifiers ? modifiers.map(m => `form-element--${m}`).join(\" \") : \"\"}`}>\n         <label htmlFor={this.props.id} className=\"form-element__label\">{this.props.label}</label>\n-        <input id={this.props.id} value={this.props.value} name={this.props.name} type={this.props.type ? this.props.type : \"text\"} className={`form-element__input ${this.props.modifiers ? modifiers.map(m => `form-element__input--${m}`).join(\" \") : \"\"} ${this.state.valid !== 2 ? this.state.valid == 1 ? \"VALID\" : \"INVALID\" : \"\"}`} onChange={this.updateInputField} />\n+        <input id={this.props.id} value={this.props.value} name={this.props.name} type={this.props.type ? this.props.type : \"text\"} className={`form-element__input ${this.props.modifiers ? modifiers.map(m => `form-element__input--${m}`).join(\" \") : \"\"} ${this.state.valid !== 2 ? this.state.valid == 1 ? \"VALID\" : \"INVALID\" : \"\"}`} onChange={this.updateInputField} checked={this.props.checked} />\n       </div>\n     );\n   }"
  },
  {
    "sha": "ec340a064790d658b88beb4fe382d879dd9b7bf3",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/pager.tsx",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/pager.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/pager.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/pager.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -62,7 +62,7 @@ class Pager extends React.Component<PagerProps, PagerState>{\n           <div tabIndex={0} className=\"pager__item pager__item--first\" onClick={this.props.onClick.bind(null, 1)} aria-label={this.props.i18n.text.get(\"plugin.wcag.pager.goToPage.label\")}>1</div>,\n           <div role=\"none\" className=\"pager__item pager__item--gap\">...</div>] : null}\n         {Array.from(new Array(rightPage - leftPage + 1),(x,i)=> leftPage+i).map((page)=>{\n-          return <div tabIndex={0} key={page} className={`pager__item ${page === this.props.current ? \"pager__item--current\" : \"\"}`}\n+          return <div tabIndex={0} key={this.props.identifier ? this.props.identifier + page: page} className={`pager__item ${page === this.props.current ? \"pager__item--current\" : \"\"}`}\n             onClick={this.props.onClick.bind(null, page)} arial-label={page === this.props.current ? this.props.i18n.text.get(\"plugin.wcag.pager.current.label\") : this.props.i18n.text.get(\"plugin.wcag.pager.goToPage.label\")}>{page}</div>\n         })}\n         {isPagerMoreVisible ? [<div role=\"none\" className=\"pager__item pager__item--gap\">...</div>,"
  },
  {
    "sha": "c127290fe77ddc2ae32111a4736df8f6fe936729",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/tag-input.tsx",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/tag-input.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/tag-input.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/tag-input.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -90,7 +90,7 @@ export default class TagInput extends React.Component<TagInputProps, TagInputSta\n           onChange={this.props.onInputDataChange} onKeyDown={this.onKeyDown} />\n \n         <div ref=\"selected\" className=\"tag-input__selected-items\">\n-          {this.props.tags.map((tag, index) => {\n+          {this.props.tags && this.props.tags.map((tag, index) => {\n             return <span key={index} className={`tag-input__selected-item ${tag.disabled ? \"state-DISABLED\" : \"\"}`}>\n               <span className=\"tag-input__selected-item-label\">{tag.node}</span>\n               <span className=\"tag-input__selected-item-action icon-cross\" onClick={this.onDeleteTag.bind(this, tag)}></span>"
  },
  {
    "sha": "0e3eddb24fc9ac39197e2365f992ccd06311b748",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/user-panel.tsx",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/user-panel.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/user-panel.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/general/user-panel.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -7,7 +7,7 @@ import { getName } from \"~/util/modifiers\";\n import ApplicationSubPanel from \"~/components/general/application-sub-panel\";\n import ApplicationList, { ApplicationListItem, ApplicationListItemContentWrapper, ApplicationListItemContentData } from \"~/components/general/application-list\";\n import '~/sass/elements/application-list.scss';\n-import { UserPanelUsersType } from '~/reducers/main-function/users';\n+import { UserPanelUsersType, UsersListType } from '~/reducers/main-function/users';\n import Pager from '~/components/general/pager';\n \n interface UserPanelProps {\n@@ -57,12 +57,12 @@ export default class UserPanel extends React.Component<UserPanelProps, UserPanel\n   }\n \n   render() {\n-\n+    let results = this.props.users.results as UsersListType;\n     return (\n       <ApplicationSubPanel i18n={this.props.i18n} modifier=\"organization-users\" bodyModifier=\"organization-users\" title={this.props.i18n.text.get(this.props.title)}>\n         {this.props.users.results.length > 0 ?\n           <ApplicationList >\n-            {this.props.users && this.props.users.results.map((user) => {\n+            {this.props.users && results.map((user) => {\n               let aside = <Avatar id={user.userEntityId} hasImage={user.hasImage} firstName={user.firstName} />;\n               let data = {\n                 firstName: user.firstName,"
  },
  {
    "sha": "41b14caa6f9a4032dea31bb1cc96fbfccf28b2a9",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application.tsx",
    "status": "modified",
    "additions": 34,
    "deletions": 12,
    "changes": 46,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -1,40 +1,42 @@\n import * as React from 'react';\n import { connect, Dispatch } from 'react-redux';\n import { bindActionCreators } from 'redux';\n-import Link from '~/components/general/link';\n import { StateType } from '~/reducers';\n import ApplicationPanel, { ApplicationPanelToolbar, ApplicationPanelToolbarActionsMain } from '~/components/general/application-panel/application-panel';\n import { SearchFormElement } from '~/components/general/form-element';\n import ApplicationPanelBody from '~/components/general/application-panel/components/application-panel-body';\n-import Tabs from '~/components/general/tabs';\n import Summary from './application/summary';\n import Users from './application/users';\n+import Usergroups from './application/usergroups';\n import OrganizationWorkspaces from './application/workspaces';\n import WorkspacesAside from './application/workspaces/aside';\n import Reports from './application/reports';\n import { i18nType } from '~/reducers/base/i18n';\n import { ButtonPill } from '~/components/general/button';\n import WorkspaceDialog from '../dialogs/new-workspace';\n+import UserGroupDialog from '../dialogs/new-usergroup';\n import UserDialog from '../dialogs/new-user';\n import '~/sass/elements/link.scss';\n import '~/sass/elements/application-panel.scss';\n import '~/sass/elements/loaders.scss';\n-import { LoadUsersTriggerType, loadUsers } from '~/actions/main-function/users';\n+import { LoadUsersTriggerType, loadUsers, loadUserGroups } from '~/actions/main-function/users';\n import { WorkspacesActiveFiltersType } from '~/reducers/workspaces';\n import { loadWorkspacesFromServer, LoadWorkspacesFromServerTriggerType } from '~/actions/workspaces';\n \n interface OrganizationManagementApplicationProps {\n   aside: React.ReactElement<any>,\n   loadUsers: LoadUsersTriggerType,\n+  loadUserGroups: LoadUsersTriggerType,\n   loadWorkspaces: LoadWorkspacesFromServerTriggerType,\n   activeFilters: WorkspacesActiveFiltersType\n   i18n: i18nType\n }\n \n interface OrganizationManagementApplicationState {\n-  activeTab: \"SUMMARY\" | \"USERS\" | \"COURSES\" | \"REPORTS\",\n+  activeTab: \"SUMMARY\" | \"USERS\" | \"USERGROUPS\" | \"COURSES\" | \"REPORTS\",\n   workspaceSearchFieldValue: string,\n   userSearchFieldValue: string,\n+  userGroupSearchFieldValue: string,\n }\n \n class OrganizationManagementApplication extends React.Component<OrganizationManagementApplicationProps, OrganizationManagementApplicationState>{\n@@ -44,21 +46,28 @@ class OrganizationManagementApplication extends React.Component<OrganizationMana\n       activeTab: \"SUMMARY\",\n       workspaceSearchFieldValue: \"\",\n       userSearchFieldValue: \"\",\n+      userGroupSearchFieldValue: \"\",\n     }\n     this.onTabChange = this.onTabChange.bind(this);\n     this.doUserSearch = this.doUserSearch.bind(this);\n     this.doWorkspaceSearch = this.doWorkspaceSearch.bind(this);\n+    this.doUserGroupSearch = this.doUserGroupSearch.bind(this);\n   }\n \n-  onTabChange(id: \"SUMMARY\" | \"USERS\" | \"COURSES\" | \"REPORTS\") {\n+  onTabChange(id: \"SUMMARY\" | \"USERS\" | \"USERGROUPS\" | \"COURSES\" | \"REPORTS\") {\n     this.setState({\n       activeTab: id\n     });\n   }\n \n-  doUserSearch(value: string) {\n-    this.props.loadUsers(value);\n-    this.setState({userSearchFieldValue: value});\n+  doUserSearch(q: string) {\n+    this.props.loadUsers({ payload: { q } });\n+    this.setState({ userSearchFieldValue: q });\n+  }\n+\n+  doUserGroupSearch(q: string) {\n+    this.props.loadUserGroups({ payload: { q } });\n+    this.setState({ userGroupSearchFieldValue: q });\n   }\n \n   doWorkspaceSearch(value: string) {\n@@ -74,22 +83,29 @@ class OrganizationManagementApplication extends React.Component<OrganizationMana\n     }\n \n     this.props.loadWorkspaces(filters, true, false);\n-    this.setState({workspaceSearchFieldValue: value});\n+    this.setState({ workspaceSearchFieldValue: value });\n   }\n \n   render() {\n     let title = <h2 className=\"application-panel__header-title\">{this.props.i18n.text.get('plugin.organization.pageTitle')}</h2>;\n     let usersPrimaryAction = <UserDialog><ButtonPill buttonModifiers=\"organization\" icon=\"plus\" /></UserDialog>;\n+    let userGroupsPrimaryAction = <UserGroupDialog><ButtonPill buttonModifiers=\"organization\" icon=\"plus\" /></UserGroupDialog>;\n     let coursesPrimaryAction = <WorkspaceDialog activeFilters={this.props.activeFilters}><ButtonPill buttonModifiers=\"organization\" icon=\"plus\" /></WorkspaceDialog>;\n     let coursesToolbar = <ApplicationPanelToolbar>\n       <ApplicationPanelToolbarActionsMain>\n-        <SearchFormElement value={this.state.workspaceSearchFieldValue} id=\"OrganizationWorkpaceSearch\" placeholder={this.props.i18n.text.get('plugin.organization.workspaces.search.placeholder')} name=\"organization-workspace-search\" updateField={this.doWorkspaceSearch} ></SearchFormElement>\n+        <SearchFormElement value={this.state.workspaceSearchFieldValue} id=\"organizationWorkpaceSearch\" placeholder={this.props.i18n.text.get('plugin.organization.workspaces.search.placeholder')} name=\"organization-workspace-search\" updateField={this.doWorkspaceSearch} ></SearchFormElement>\n       </ApplicationPanelToolbarActionsMain>\n     </ApplicationPanelToolbar>;\n \n     let usersToolbar = <ApplicationPanelToolbar>\n       <ApplicationPanelToolbarActionsMain>\n-        <SearchFormElement value={this.state.userSearchFieldValue} id=\"OrganizationUserSearch\" placeholder={this.props.i18n.text.get('plugin.organization.users.search.placeholder')} name=\"organization-user-search\" updateField={this.doUserSearch} ></SearchFormElement>\n+        <SearchFormElement value={this.state.userSearchFieldValue} id=\"organizationUserSearch\" placeholder={this.props.i18n.text.get('plugin.organization.userGroups.search.placeholder')} name=\"organization-user-search\" updateField={this.doUserSearch} ></SearchFormElement>\n+      </ApplicationPanelToolbarActionsMain>\n+    </ApplicationPanelToolbar>;\n+\n+    let userGroupsToolbar = <ApplicationPanelToolbar>\n+      <ApplicationPanelToolbarActionsMain>\n+        <SearchFormElement value={this.state.userGroupSearchFieldValue} id=\"oganizationUserGroupSearch\" placeholder={this.props.i18n.text.get('plugin.organization.userGroups.search.placeholder')} name=\"organization-user-group-search\" updateField={this.doUserGroupSearch} ></SearchFormElement>\n       </ApplicationPanelToolbarActionsMain>\n     </ApplicationPanelToolbar>;\n \n@@ -105,6 +121,12 @@ class OrganizationManagementApplication extends React.Component<OrganizationMana\n           name: this.props.i18n.text.get('plugin.organization.tab.title.users'),\n           component: () => { return <ApplicationPanelBody primaryOption={usersPrimaryAction} toolbar={usersToolbar} modifier=\"tabs\" children={<Users />} /> }\n         },\n+        {\n+          id: \"USERSGROUPS\",\n+          name: this.props.i18n.text.get('plugin.organization.tab.title.userGroups'),\n+          component: () => { return <ApplicationPanelBody primaryOption={userGroupsPrimaryAction} toolbar={userGroupsToolbar} modifier=\"tabs\" children={<Usergroups />} /> }\n+\n+        },\n         {\n           id: \"COURSES\",\n           name: this.props.i18n.text.get('plugin.organization.tab.title.courses'),\n@@ -128,7 +150,7 @@ function mapStateToProps(state: StateType) {\n };\n \n const mapDispatchToProps = (dispatch: Dispatch<any>) => {\n-  return bindActionCreators({ loadUsers, loadWorkspaces: loadWorkspacesFromServer }, dispatch);\n+  return bindActionCreators({ loadUsers, loadWorkspaces: loadWorkspacesFromServer, loadUserGroups }, dispatch);\n };\n \n export default connect("
  },
  {
    "sha": "cd24f4a52b39ddb56950c632d1db3bb4a850af41",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/usergroups.tsx",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/usergroups.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/usergroups.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/usergroups.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -0,0 +1,78 @@\n+import * as React from 'react';\n+import { StateType } from '~/reducers';\n+import { connect, Dispatch } from 'react-redux';\n+import { i18nType } from \"~/reducers/base/i18n\";\n+import ApplicationList, { ApplicationListItem } from '~/components/general/application-list';\n+import { bindActionCreators } from 'redux';\n+import BodyScrollLoader from '~/components/general/body-scroll-loader';\n+import Usergroup from './usergroups/usergroup';\n+import { WorkspacesStateType } from '~/reducers/workspaces';\n+import { LoadUsersTriggerType, LoadMoreUserTriggerType, loadUserGroups, loadMoreUserGroups } from '~/actions/main-function/users';\n+import { UserGroupType } from '~/reducers/user-index';\n+\n+interface OrganizationUserGroupsProps {\n+  i18n: i18nType,\n+  userGroups: Array<UserGroupType>,\n+  userGroupsState: WorkspacesStateType,\n+  userGroupsHasMore: boolean,\n+  loadUserGroups: LoadUsersTriggerType,\n+  loadMoreUserGroups: LoadMoreUserTriggerType,\n+}\n+\n+interface OrganizationUserGroupsState {\n+}\n+\n+class OrganizationUserGroups extends BodyScrollLoader<OrganizationUserGroupsProps, OrganizationUserGroupsState> {\n+  constructor(props: OrganizationUserGroupsProps) {\n+    super(props);\n+    //once this is in state READY only then a loading more event can be triggered\n+    this.statePropertyLocation = \"userGroupsState\";\n+    //it will only call the function if this is true\n+    this.hasMorePropertyLocation = \"userGroupsHasMore\";\n+    //this is the function that will be called\n+    this.loadMoreTriggerFunctionLocation = \"loadMoreUserGroups\";\n+    this.userGroupSearch = this.userGroupSearch.bind(this);\n+  }\n+\n+  userGroupSearch(q: string) {\n+    this.props.loadUserGroups({ payload: { q } });\n+  }\n+\n+  render() {\n+    if (this.props.userGroupsState === \"LOADING\") {\n+      return null;\n+    } else if (this.props.userGroupsState === \"ERROR\") {\n+      //TODO: put a translation here please! this happens when messages fail to load, a notification shows with the error\n+      //message but here we got to put something\n+      return <div className=\"empty\"><span>{\"ERROR\"}</span></div>\n+    } else if (this.props.userGroups.length === 0) {\n+      return <div className=\"empty\"><span>{this.props.i18n.text.get(\"plugin.coursepicker.searchResult.empty\")}</span></div>\n+    }\n+    return (<div>\n+      <ApplicationList>\n+        {this.props.userGroups && this.props.userGroups.map((userGroup: UserGroupType) => {\n+          return <Usergroup key={userGroup.id} usergroup={userGroup} />\n+        })}\n+        {this.props.userGroupsState === \"LOADING_MORE\" ? <ApplicationListItem className=\"loader-empty\" /> : null}\n+      </ApplicationList>\n+    </div>)\n+  }\n+}\n+\n+function mapStateToProps(state: StateType) {\n+  return {\n+    i18n: state.i18n,\n+    userGroups: state.userGroups.list,\n+    userGroupsState: state.userGroups.state,\n+    userGroupsHasMore: state.userGroups.hasMore,\n+  }\n+};\n+\n+function mapDispatchToProps(dispatch: Dispatch<any>) {\n+  return bindActionCreators({ loadUserGroups, loadMoreUserGroups }, dispatch);\n+};\n+\n+export default connect(\n+  mapStateToProps,\n+  mapDispatchToProps\n+)(OrganizationUserGroups);"
  },
  {
    "sha": "8255597c0843a28f8163c48f2e52b58e36f5e1ac",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/usergroups/usergroup.tsx",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/usergroups/usergroup.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/usergroups/usergroup.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/usergroups/usergroup.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -0,0 +1,57 @@\n+import * as React from 'react';\n+import { connect, Dispatch } from 'react-redux';\n+import { i18nType } from '~/reducers/base/i18n';\n+import '~/sass/elements/course.scss';\n+import '~/sass/elements/rich-text.scss';\n+import '~/sass/elements/application-list.scss';\n+import { StatusType } from '~/reducers/base/status';\n+import { StateType } from '~/reducers';\n+import UserGroupDialog from '~/components/organization/dialogs/edit-usergroup';\n+import { ApplicationListItem, ApplicationListItemHeader, ApplicationListItemBody, ApplicationListItemFooter } from '~/components/general/application-list';\n+import { UserGroupType } from '~/reducers/user-index';\n+\n+interface CourseProps {\n+  i18n: i18nType,\n+  status: StatusType,\n+  usergroup: UserGroupType,\n+}\n+\n+interface CourseState {\n+}\n+\n+class Workspace extends React.Component<CourseProps, CourseState>{\n+  constructor(props: CourseProps) {\n+    super(props);\n+\n+    this.state = {\n+      expanded: false\n+    }\n+  }\n+\n+  render() {\n+    let actions = <div><UserGroupDialog usergroup={this.props.usergroup} ><span className=\"icon-pencil\"></span></UserGroupDialog></div>;\n+    return <ApplicationListItem className=\"course\" >\n+      <ApplicationListItemHeader className=\"application-list__item-header--course\">\n+        <span className={`application-list__header-icon icon-books`}></span>\n+        <span className=\"application-list__header-primary\">{this.props.usergroup.name}</span>\n+        <span className=\"application-list__header-secondary\">{actions}</span>\n+      </ApplicationListItemHeader>\n+    </ApplicationListItem>\n+  }\n+}\n+\n+function mapStateToProps(state: StateType) {\n+  return {\n+    i18n: state.i18n,\n+    status: state.status,\n+  }\n+};\n+\n+function mapDispatchToProps(dispatch: Dispatch<any>) {\n+  return {};\n+};\n+\n+export default connect(\n+  mapStateToProps,\n+  mapDispatchToProps\n+)(Workspace);"
  },
  {
    "sha": "fd3fd5e3118f262cd2c30a84babd3c6e02fb5d2d",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/users.tsx",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/users.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/users.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/body/application/users.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -4,7 +4,7 @@ import { connect, Dispatch } from 'react-redux';\n import { i18nType } from \"~/reducers/base/i18n\";\n import UserPanel from '~/components/general/user-panel';\n import { bindActionCreators } from 'redux';\n-import users, { UsersType } from '~/reducers/main-function/users';\n+import { UsersType } from '~/reducers/main-function/users';\n import { LoadUsersTriggerType, loadStudents, loadStaff } from '~/actions/main-function/users';\n interface OrganizationUsersProps {\n   i18n: i18nType,\n@@ -24,11 +24,11 @@ class OrganizationUsers extends React.Component<OrganizationUsersProps, Organiza\n   }\n \n   staffPanelPageChange(q: string, first: number, last: number) {\n-    this.props.loadStaff(q, first, last);\n+    this.props.loadStaff({payload:{q, firstResult: first, lastResult: last}});\n   }\n \n   studentPanelPageChange(q: string, first: number, last: number) {\n-    this.props.loadStudents(q, first, last);\n+    this.props.loadStudents({payload:{q, firstResult: first, lastResult: last}});\n   }\n \n   render() {"
  },
  {
    "sha": "44b850f509b1fc307512f896e5836866d8e454ea",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/edit-usergroup.tsx",
    "status": "added",
    "additions": 539,
    "deletions": 0,
    "changes": 539,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/edit-usergroup.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/edit-usergroup.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/edit-usergroup.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -0,0 +1,539 @@\n+import * as React from 'react';\n+import { connect, Dispatch } from 'react-redux';\n+import Dialog, { DialogRow, DialogRowHeader, DialogRowContent, DialogRemoveUsers } from '~/components/general/dialog';\n+import { FormWizardActions, InputFormElement } from '~/components/general/form-element';\n+import {\n+  loadSelectorStudents, loadSelectorStaff, LoadUsersTriggerType, setCurrentUserGroup, SetCurrentUserGroupTriggerType,\n+  loadAllCurrentUserGroupStudents, loadAllCurrentUserGroupStaff, loadUserGroups, updateUsergroup, UpdateUsergroupTriggerType\n+} from '~/actions/main-function/users';\n+import { i18nType } from '~/reducers/base/i18n';\n+import { StateType } from '~/reducers';\n+import { bindActionCreators } from 'redux';\n+import AutofillSelector, { UiSelectItem } from '~/components/base/input-select-autofill';\n+import { SelectItem } from '~/actions/workspaces/index';\n+import { UsersSelectType, UpdateUserGroupType, OrganizationUsersListType, ModifyUserGroupUsersType, UpdateUserGroupStateType, CurrentUserGroupType, } from '~/reducers/main-function/users';\n+import { UserGroupType } from '~/reducers/user-index';\n+\n+interface ValidationType {\n+  nameValid: number\n+}\n+\n+type UserCategoriesType = \"students\" | \"staff\";\n+\n+interface OrganizationEditUsergroupProps {\n+  children?: React.ReactElement<any>,\n+  usergroup: UserGroupType,\n+  i18n: i18nType,\n+  users: UsersSelectType,\n+  currentUserGroup: CurrentUserGroupType,\n+  setCurrentUserGroup: SetCurrentUserGroupTriggerType,\n+  updateOrganizationUsergroup: UpdateUsergroupTriggerType,\n+  loadAllCurrentUserGroupStaff: LoadUsersTriggerType,\n+  loadAllCurrentUserGroupStudents: LoadUsersTriggerType,\n+  loadStudents: LoadUsersTriggerType,\n+  loadStaff: LoadUsersTriggerType,\n+  loadUserGroups: LoadUsersTriggerType\n+}\n+\n+interface OrganizationEditUsergroupState {\n+  pages: {\n+    [key: string]: number,\n+  },\n+  searchValues: {\n+    [key: string]: string,\n+  },\n+  locked: boolean,\n+  currentStep: number,\n+  addStudents: UiSelectItem[],\n+  addStaff: UiSelectItem[],\n+  removeStudents: UiSelectItem[],\n+  removeStaff: UiSelectItem[],\n+  selectedStudents: UiSelectItem[],\n+  selectedStaff: UiSelectItem[],\n+  userGroupName: string,\n+  isGuidanceGroup: boolean,\n+  studentsLoaded: boolean,\n+  executing: boolean,\n+  validation: ValidationType,\n+  userGroupUpdated: boolean,\n+  studentsAdded: boolean,\n+  studentsRemoved: boolean,\n+  staffAdded: boolean,\n+  staffRemoved: boolean,\n+}\n+\n+class OrganizationEditUsergroup extends React.Component<OrganizationEditUsergroupProps, OrganizationEditUsergroupState> {\n+\n+  private totalSteps: number = 6;\n+  private usersPerPage: number = 5;\n+  private searchTimer: NodeJS.Timer;\n+\n+  constructor(props: OrganizationEditUsergroupProps) {\n+    super(props);\n+    this.state = {\n+      pages: null,\n+      searchValues: null,\n+      userGroupName: this.props.usergroup.name,\n+      isGuidanceGroup: this.props.usergroup.isGuidanceGroup,\n+      selectedStudents: [],\n+      selectedStaff: [],\n+      addStudents: [],\n+      addStaff: [],\n+      removeStudents: [],\n+      removeStaff: [],\n+      studentsLoaded: false,\n+      locked: false,\n+      currentStep: 1,\n+      executing: false,\n+      validation: {\n+        nameValid: 2\n+      },\n+\n+      userGroupUpdated: false,\n+      studentsAdded: false,\n+      studentsRemoved: false,\n+      staffAdded: false,\n+      staffRemoved: false,\n+    }\n+\n+    this.goToPage = this.goToPage.bind(this);\n+    this.goToStudentPage = this.goToStudentPage.bind(this);\n+    this.goToStaffPage = this.goToStaffPage.bind(this);\n+    this.doStaffSearch = this.doStaffSearch.bind(this);\n+    this.selectStaff = this.selectStaff.bind(this);\n+    this.deleteStaff = this.deleteStaff.bind(this);\n+    this.doStudentSearch = this.doStudentSearch.bind(this);\n+    this.selectStudent = this.selectStudent.bind(this);\n+    this.deleteStudent = this.deleteStudent.bind(this);\n+    this.doUserGroupStudentSearch = this.doUserGroupStudentSearch.bind(this);\n+    this.doUserGroupStaffSearch = this.doUserGroupStaffSearch.bind(this);\n+    this.doUserGroupUsersSearch = this.doUserGroupUsersSearch.bind(this);\n+    this.setUserGroupName = this.setUserGroupName.bind(this);\n+    this.saveUsergroup = this.saveUsergroup.bind(this);\n+    this.clearComponentState = this.clearComponentState.bind(this);\n+    this.toggleStudentRemove = this.toggleStudentRemove.bind(this);\n+    this.toggleStaffRemove = this.toggleStaffRemove.bind(this);\n+    this.setGuidanceGroup = this.setGuidanceGroup.bind(this);\n+  }\n+\n+  doStudentSearch(q: string) {\n+    this.props.loadStudents({ payload: { q } });\n+  }\n+\n+  goToPage(n: number, loader: LoadUsersTriggerType, query: string) {\n+    let pageStart: number = (n - 1) * this.usersPerPage;\n+    loader({ payload: { q: query, firstResult: pageStart, maxResults: this.usersPerPage, userGroupIds: [this.props.usergroup.id] } });\n+  }\n+\n+  goToStudentPage(n: number) {\n+    let query: string = this.state.searchValues && this.state.searchValues.staff ? this.state.searchValues.staff : null;\n+    this.goToPage(n, this.props.loadAllCurrentUserGroupStudents, query);\n+  }\n+\n+  goToStaffPage(n: number) {\n+    let query: string = this.state.searchValues && this.state.searchValues.staff ? this.state.searchValues.staff : null;\n+    this.goToPage(n, this.props.loadAllCurrentUserGroupStaff, query);\n+  }\n+\n+  doUserGroupUsersSearch(loader: LoadUsersTriggerType, q: string, type: UserCategoriesType) {\n+    loader({\n+      payload: {\n+        q,\n+        userGroupIds: [this.props.usergroup.id],\n+        firstResult: 0,\n+        maxResults: 5,\n+      },\n+      success: (users: OrganizationUsersListType) => {\n+        this.setState({\n+          pages: { ...this.state.pages, [type]: Math.ceil(users.totalHitCount / this.usersPerPage) }\n+        });\n+      }\n+    })\n+  }\n+\n+  doUserGroupStudentSearch(q: string) {\n+    this.setState({ searchValues: { ...this.state.searchValues, [\"students\"]: q } })\n+    clearTimeout(this.searchTimer);\n+    this.searchTimer = setTimeout(this.doUserGroupUsersSearch.bind(null, this.props.loadAllCurrentUserGroupStudents, q, \"students\") as any, 400);\n+  }\n+\n+  doUserGroupStaffSearch(q: string) {\n+    this.setState({ searchValues: { ...this.state.searchValues, [\"staff\"]: q } })\n+    clearTimeout(this.searchTimer);\n+    this.searchTimer = setTimeout(this.doUserGroupUsersSearch.bind(null, this.props.loadAllCurrentUserGroupStaff, q, \"staff\") as any, 400);\n+  }\n+\n+  toggleStudentRemove(usr: UiSelectItem) {\n+    let newRemoveState = this.state.removeStudents.some(rStudent => rStudent.id === usr.id) ? this.state.removeStudents.filter(rStudent => rStudent.id !== usr.id) : this.state.removeStudents.concat(usr);\n+    this.setState({\n+      removeStudents: newRemoveState\n+    });\n+  }\n+\n+  toggleStaffRemove(usr: UiSelectItem) {\n+    let newRemoveState = this.state.removeStaff.some(rStaff => rStaff.id === usr.id) ? this.state.removeStaff.filter(rStaff => rStaff.id !== usr.id) : this.state.removeStaff.concat(usr);\n+    this.setState({\n+      removeStaff: newRemoveState\n+    });\n+  }\n+\n+  selectStudent(student: SelectItem) {\n+    let studentIsDeleted = this.state.removeStudents.some(rStudent => rStudent.id === student.id);\n+    let newSelectedState = this.state.selectedStudents.concat(student);\n+    let newAddState = studentIsDeleted ? this.state.addStudents : this.state.addStudents.concat(student);\n+    this.setState({ selectedStudents: newSelectedState, addStudents: newAddState });\n+  }\n+\n+  deleteStudent(student: SelectItem) {\n+    let studentIsAdded = this.state.addStudents.some(aStudent => aStudent.id === student.id);\n+    let newSelectedState = this.state.selectedStudents.filter(selectedItem => selectedItem.id !== student.id);\n+    let newAddState = studentIsAdded ? this.state.addStudents.filter(aStudent => aStudent.id !== student.id) : this.state.addStudents;\n+    this.setState({ selectedStudents: newSelectedState, addStudents: newAddState });\n+  }\n+\n+  doStaffSearch(q: string) {\n+    this.props.loadStaff({ payload: { q } });\n+  }\n+\n+  selectStaff(staff: SelectItem) {\n+    let staffIsDeleted = this.state.removeStaff.some(rStaff => rStaff.id === staff.id);\n+    let newSelectedState = this.state.selectedStaff.concat(staff);\n+    let newAddState = staffIsDeleted ? this.state.addStaff : this.state.addStaff.concat(staff);\n+    this.setState({ addStaff: newAddState, selectedStaff: newSelectedState });\n+  }\n+\n+  deleteStaff(staff: SelectItem) {\n+    let staffIsAdded = this.state.addStaff.some(aStaff => aStaff.id === staff.id);\n+    let newSelectedState = this.state.selectedStaff.filter(selectedItem => selectedItem.id !== staff.id);\n+    let newAddState = staffIsAdded ? this.state.addStaff.filter(aStaff => aStaff.id !== staff.id) : this.state.addStaff;\n+    this.setState({ selectedStaff: newSelectedState, addStaff: newAddState });\n+  }\n+\n+  setGuidanceGroup(value: boolean) {\n+    this.setState({ isGuidanceGroup: value });\n+  }\n+\n+  setUserGroupName(value: string) {\n+    this.setState({ locked: false, userGroupName: value });\n+  }\n+\n+  clearComponentState() {\n+    this.setState({\n+      locked: false,\n+      studentsLoaded: false,\n+      executing: false,\n+      currentStep: 1,\n+      addStudents: [],\n+      selectedStudents: [],\n+      removeStudents: [],\n+      addStaff: [],\n+      selectedStaff: [],\n+      removeStaff: [],\n+      userGroupUpdated: false,\n+      studentsAdded: false,\n+      studentsRemoved: false,\n+      staffAdded: false,\n+      staffRemoved: false,\n+    });\n+  }\n+\n+  cancelDialog(closeDialog: () => any) {\n+    closeDialog();\n+  }\n+\n+  nextStep() {\n+    if (this.state.currentStep === 2) {\n+       this.doUserGroupStudentSearch(\"\");\n+    }\n+    if (this.state.currentStep === 4) {\n+      this.doUserGroupStaffSearch(\"\");\n+    }\n+    if (this.state.userGroupName === \"\") {\n+      let validation: ValidationType = Object.assign(this.state.validation, { nameValid: 0 });\n+      this.setState({ locked: true, validation });\n+    } else {\n+      let nextStep = this.state.currentStep + 1;\n+      this.setState({ locked: false, currentStep: nextStep });\n+    }\n+  }\n+\n+  lastStep() {\n+    let lastStep = this.state.currentStep - 1;\n+    this.setState({ currentStep: lastStep });\n+  }\n+\n+  saveUsergroup(closeDialog: () => any) {\n+    this.setState({\n+      locked: true,\n+      executing: true\n+    })\n+\n+    let update: UpdateUserGroupType;\n+    let addUsers: ModifyUserGroupUsersType;\n+    let removeUsers: ModifyUserGroupUsersType;\n+    let groupIdentifier: string = this.props.usergroup.id.toString();\n+\n+    if (this.props.usergroup.name !== this.state.userGroupName || this.state.isGuidanceGroup !== this.props.usergroup.isGuidanceGroup) {\n+      update = {\n+        name: this.state.userGroupName,\n+        // We get a number, but need it to be a string\n+        identifier: groupIdentifier,\n+        isGuidanceGroup: this.state.isGuidanceGroup,\n+      }\n+    }\n+\n+    if (this.state.addStudents.length !== 0) {\n+      addUsers = {\n+        groupIdentifier: groupIdentifier,\n+        userIdentifiers: this.state.addStudents.map(student => student.id as string),\n+      }\n+    }\n+\n+    if (this.state.removeStudents.length !== 0) {\n+      removeUsers = {\n+        groupIdentifier: groupIdentifier,\n+        userIdentifiers: this.state.removeStudents.map(student => student.id as string),\n+      }\n+    }\n+\n+    if (this.state.addStaff.length !== 0) {\n+      if (!addUsers) {\n+        addUsers = {\n+          groupIdentifier: groupIdentifier,\n+          userIdentifiers: this.state.addStaff.map(staff => staff.id as string),\n+        }\n+      } else {\n+        addUsers.userIdentifiers = addUsers.userIdentifiers.concat(this.state.addStaff.map(staff => staff.id as string));\n+      }\n+    }\n+\n+    if (this.state.removeStaff.length !== 0) {\n+      if (!removeUsers) {\n+        removeUsers = {\n+          groupIdentifier: groupIdentifier,\n+          userIdentifiers: this.state.removeStaff.map(staff => staff.id as string),\n+        }\n+      } else {\n+        removeUsers.userIdentifiers = removeUsers.userIdentifiers.concat(this.state.removeStaff.map(staff => staff.id as string));\n+      }\n+    }\n+\n+    this.props.updateOrganizationUsergroup({\n+      update: update,\n+      addUsers: addUsers,\n+      removeUsers: removeUsers,\n+      progress: (state: UpdateUserGroupStateType) => {\n+        if (state === \"update-group\") {\n+          this.setState({\n+            userGroupUpdated: true,\n+          });\n+        }\n+        if (state === \"add-users\") {\n+          this.setState({\n+            studentsAdded: true,\n+          });\n+        }\n+        if (state === \"remove-users\") {\n+          this.setState({\n+            studentsRemoved: true,\n+          });\n+        }\n+        if (state === \"done\") {\n+          setTimeout(() => this.props.loadUserGroups({ payload: { q: \"\" } }), 2000);\n+        }\n+      },\n+\n+      success: () => {\n+        closeDialog();\n+      },\n+\n+      fail: () => {\n+        closeDialog();\n+      }\n+    });\n+  }\n+\n+  wizardSteps(page: number) {\n+    switch (page) {\n+      case 1:\n+        return <div>\n+          <DialogRow modifiers=\"edit-workspace\">\n+            <InputFormElement id=\"userGroupName\" modifiers=\"user-group-name\" mandatory={true} updateField={this.setUserGroupName} valid={this.state.validation.nameValid} name=\"userGroupName\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.name.label')} value={this.state.userGroupName}></InputFormElement>\n+          </DialogRow>\n+          <DialogRow modifiers=\"edit-workspace\">\n+            <InputFormElement id=\"isGuidanceGroup\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.guidanceSelect.label')} name=\"is-guidance-group\" value={this.props.usergroup.name} checked={this.state.isGuidanceGroup} type=\"checkbox\" updateField={this.setGuidanceGroup}></InputFormElement>\n+          </DialogRow>\n+        </div >;\n+      case 2:\n+        let students = this.props.users.students.map(student => {\n+          return { id: student.id, label: student.firstName + \" \" + student.lastName, icon: \"user\", type: \"student\" }\n+        });\n+        return <DialogRow modifiers=\"edit-workspace\">\n+          <AutofillSelector modifier=\"add-students\"\n+            loader={this.doStudentSearch}\n+            placeholder={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.search.students.placeholder')}\n+            selectedItems={this.state.selectedStudents} searchItems={students} onDelete={this.deleteStudent} onSelect={this.selectStudent} />\n+        </DialogRow>;\n+      case 3:\n+        let studentGroupStudents = this.props.currentUserGroup && this.props.currentUserGroup.students ? this.props.currentUserGroup.students.results : [];\n+        return <DialogRemoveUsers\n+          users={studentGroupStudents}\n+          placeholder={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.search.groupStudents.placeholder')}\n+          removeUsers={this.state.removeStudents}\n+          pages={this.state.pages && this.state.pages.students ? this.state.pages.students : 0}\n+          identifier={\"userGroup\" + this.props.usergroup.id + \"Students\"}\n+          allTabTitle={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.users.tab.groupStudents.title')}\n+          removeTabTitle={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.users.tab.removeStudents.title')}\n+          onEmptyTitle={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.users.empty')}\n+          searchValue={this.state.searchValues && this.state.searchValues.students ? this.state.searchValues.students : \"\"}\n+          searchUsers={this.doUserGroupStudentSearch}\n+          changePage={this.goToStudentPage}\n+          setRemoved={this.toggleStudentRemove} />\n+\n+      case 4:\n+        let staffSearchItems = this.props.users.staff.map(staff => {\n+          return { id: staff.id, label: staff.firstName + \" \" + staff.lastName, icon: \"user\" }\n+        });\n+        return <DialogRow modifiers=\"edit-workspace\">\n+          <AutofillSelector modifier=\"add-teachers\"\n+            loader={this.doStaffSearch}\n+            placeholder={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.search.staff.placeholder')}\n+            selectedItems={this.state.selectedStaff} searchItems={staffSearchItems} onDelete={this.deleteStaff} onSelect={this.selectStaff} />\n+        </DialogRow>;\n+      case 5:\n+        let studentGroupStaff = this.props.currentUserGroup && this.props.currentUserGroup.staff ? this.props.currentUserGroup.staff.results : [];\n+        return <DialogRemoveUsers\n+          users={studentGroupStaff}\n+          placeholder={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.search.groupStaff.placeholder')}\n+          removeUsers={this.state.removeStaff}\n+          pages={this.state.pages && this.state.pages.staff ? this.state.pages.staff : 0}\n+          identifier={\"userGroup\" + this.props.usergroup.id + \"Staff\"}\n+          allTabTitle={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.users.tab.groupStaff.title')}\n+          removeTabTitle={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.users.tab.removeStaff.title')}\n+          onEmptyTitle={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.users.empty')}\n+          searchValue={this.state.searchValues && this.state.searchValues.staff ? this.state.searchValues.staff : \"\"}\n+          searchUsers={this.doUserGroupStaffSearch}\n+          changePage={this.goToStaffPage}\n+          setRemoved={this.toggleStaffRemove}\n+        />\n+      case 6:\n+        return <DialogRow modifiers=\"edit-workspace-summary\">\n+          <DialogRow>\n+            <DialogRowHeader modifiers=\"new-workspace\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.label.userGroupName')} />\n+            <DialogRowContent modifiers=\"new-workspace\">\n+              <span>{this.state.userGroupName}</span>\n+              <span>{this.state.isGuidanceGroup ? \" (\" + this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.label.isGuidanceGroup') + \")\" : \"\"}</span>\n+            </DialogRowContent>\n+          </DialogRow>\n+          <DialogRow>\n+            <DialogRowHeader modifiers=\"new-workspace\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.label.addStudents')} />\n+            <DialogRowContent modifiers=\"new-workspace\">\n+              {this.state.addStudents.length > 0 ?\n+                this.state.addStudents.map((student) => {\n+                  return <span key={student.id} className=\"tag-input__selected-item\">\n+                    {student.icon ?\n+                      <span className={`glyph glyph--selected-recipient icon-${student.icon}`} />\n+                      : null}\n+                    {student.label}\n+                  </span>\n+                }) : <div>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.empty.students')}</div>}\n+            </DialogRowContent>\n+          </DialogRow>\n+          <DialogRow>\n+            <DialogRowHeader modifiers=\"new-workspace\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.label.addStaff')} />\n+            <DialogRowContent modifiers=\"new-workspace\">\n+              {this.state.addStaff.length > 0 ?\n+                this.state.addStaff.map((staff) => {\n+                  return <span key={staff.id} className=\"tag-input__selected-item\">\n+                    {staff.icon ?\n+                      <span className={`glyph glyph--selected-recipient icon-${staff.icon}`} />\n+                      : null}\n+                    {staff.label}\n+                  </span>\n+                }) : <div>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.empty.staff')}</div>}\n+            </DialogRowContent>\n+          </DialogRow>\n+          <DialogRow>\n+            <DialogRowHeader modifiers=\"new-workspace\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.label.removeStudents')} />\n+            <DialogRowContent modifiers=\"new-workspace\">\n+              {this.state.removeStudents.length > 0 ?\n+                this.state.removeStudents.map((student) => {\n+                  return <span key={student.id} className=\"tag-input__selected-item\">\n+                    {student.icon ?\n+                      <span className={`glyph glyph--selected-recipient icon-${student.icon}`} />\n+                      : null}\n+                    {student.label}\n+                  </span>\n+                }) : <div>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.empty.students')}</div>}\n+            </DialogRowContent>\n+          </DialogRow>\n+          <DialogRow>\n+            <DialogRowHeader modifiers=\"new-workspace\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.label.removeStaff')} />\n+            <DialogRowContent modifiers=\"new-workspace\">\n+              {this.state.removeStaff.length > 0 ?\n+                this.state.removeStaff.map((staff) => {\n+                  return <span key={staff.id} className=\"tag-input__selected-item\">\n+                    {staff.icon ?\n+                      <span className={`glyph glyph--selected-recipient icon-${staff.icon}`} />\n+                      : null}\n+                    {staff.label}</span>\n+                }) : <div>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.empty.staff')}</div>}\n+            </DialogRowContent>\n+          </DialogRow>\n+        </DialogRow>;\n+      default: return <div>EMPTY</div>\n+    }\n+  }\n+\n+  render() {\n+    let content = (closePortal: () => any) => this.wizardSteps(this.state.currentStep);\n+    let executeContent = <div><div className={`dialog__executer ${this.state.userGroupUpdated === true ? \"dialog__executer state-DONE\" : \"\"}`}>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.execute.updateUserGroup')}</div>\n+      <div className={`dialog__executer ${this.state.studentsAdded === true ? \"dialog__executer state-DONE\" : \"\"}`}>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.execute.addStudents')}</div>\n+      <div className={`dialog__executer ${this.state.studentsRemoved === true ? \"dialog__executer state-DONE\" : \"\"}`}>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.execute.removeStudents')}</div>\n+      <div className={`dialog__executer ${this.state.staffAdded === true ? \"dialog__executer state-DONE\" : \"\"}`}>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.execute.addStaff')}</div>\n+      <div className={`dialog__executer ${this.state.staffRemoved === true ? \"dialog__executer state-DONE\" : \"\"}`}>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.execute.removeStaff')}</div></div>;\n+\n+    let footer = (closePortal: () => any) => <FormWizardActions locked={this.state.locked}\n+      currentStep={this.state.currentStep} totalSteps={this.totalSteps}\n+      executeLabel={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.edit.execute.label')}\n+      nextLabel={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.next.label')}\n+      lastLabel={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.last.label')}\n+      cancelLabel={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.cancel.label')}\n+      executeClick={this.saveUsergroup.bind(this, closePortal)}\n+      nextClick={this.nextStep.bind(this)}\n+      lastClick={this.lastStep.bind(this)}\n+      cancelClick={this.cancelDialog.bind(this, closePortal)} />;\n+\n+    return (<Dialog executing={this.state.executing} onClose={this.clearComponentState} executeContent={executeContent} footer={footer} modifier=\"edit-user-group\"\n+      title={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.edit.title', this.props.usergroup.name)}\n+      content={content}>\n+      {this.props.children}\n+    </Dialog>\n+    )\n+  }\n+}\n+\n+function mapStateToProps(state: StateType) {\n+  return {\n+    i18n: state.i18n,\n+    users: state.userSelect,\n+    currentUserGroup: state.userGroups.currentUserGroup\n+  }\n+};\n+\n+function mapDispatchToProps(dispatch: Dispatch<any>) {\n+  return bindActionCreators({\n+    loadStudents: loadSelectorStudents,\n+    loadStaff: loadSelectorStaff,\n+    loadUserGroups,\n+    updateOrganizationUsergroup: updateUsergroup,\n+    loadAllCurrentUserGroupStaff,\n+    loadAllCurrentUserGroupStudents,\n+    setCurrentUserGroup,\n+  }, dispatch);\n+};\n+\n+export default connect(\n+  mapStateToProps,\n+  mapDispatchToProps\n+)(OrganizationEditUsergroup);"
  },
  {
    "sha": "8b30a3ea3d4e87f39416815b149526e7911b44f9",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/edit-workspace.tsx",
    "status": "modified",
    "additions": 16,
    "deletions": 21,
    "changes": 37,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/edit-workspace.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/edit-workspace.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/edit-workspace.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -105,7 +105,6 @@ class OrganizationEditWorkspace extends React.Component<OrganizationEditWorkspac\n     this.doStudentSearch = this.doStudentSearch.bind(this);\n     this.selectStudent = this.selectStudent.bind(this);\n     this.deleteStudent = this.deleteStudent.bind(this);\n-    this.setSelectedStudents = this.setSelectedStudents.bind(this);\n     this.setWorkspaceName = this.setWorkspaceName.bind(this);\n     this.setWorkspaceNameExtension = this.setWorkspaceNameExtension.bind(this);\n     this.saveWorkspace = this.saveWorkspace.bind(this);\n@@ -114,13 +113,9 @@ class OrganizationEditWorkspace extends React.Component<OrganizationEditWorkspac\n     this.getLocaledDate = this.getLocaledDate.bind(this);\n \n   }\n-  doStudentSearch(value: string) {\n-    this.props.loadStudents(value);\n-    this.props.loadUserGroups(value);\n-  }\n-\n-  doStaffSearch(value: string) {\n-    this.props.loadStaff(value);\n+  doStudentSearch(q: string) {\n+    this.props.loadStudents({payload:{q}});\n+    this.props.loadUserGroups({payload:{q}});\n   }\n \n   selectStudent(student: SelectItem) {\n@@ -131,6 +126,18 @@ class OrganizationEditWorkspace extends React.Component<OrganizationEditWorkspac\n     this.setState({ selectedStudents: newSelectedState, addStudents: newAddState, removeStudents: newRemoveState });\n   }\n \n+  deleteStudent(student: SelectItem) {\n+    let studentIsAdded = this.state.addStudents.some(aStudent => aStudent.id === student.id);\n+    let newSelectedState = this.state.selectedStudents.filter(selectedItem => selectedItem.id !== student.id);\n+    let newRemoveState = studentIsAdded ? this.state.removeStudents : this.state.removeStudents.concat(student);\n+    let newAddState = studentIsAdded ? this.state.addStudents.filter(aStudent => aStudent.id !== student.id) : this.state.addStudents;\n+    this.setState({ selectedStudents: newSelectedState, removeStudents: newRemoveState, addStudents: newAddState });\n+  }\n+\n+  doStaffSearch(q: string) {\n+    this.props.loadStaff({payload:{q}});\n+  }\n+\n   selectStaff(staff: SelectItem) {\n     let staffIsDeleted = this.state.removeStaff.some(rStaff => rStaff.id === staff.id);\n     let newSelectedState = this.state.selectedStaff.concat(staff);\n@@ -147,14 +154,6 @@ class OrganizationEditWorkspace extends React.Component<OrganizationEditWorkspac\n     this.setState({ selectedStaff: newSelectedState, removeStaff: newRemoveState, addStaff: newAddState });\n   }\n \n-  deleteStudent(student: SelectItem) {\n-    let studentIsAdded = this.state.addStudents.some(aStudent => aStudent.id === student.id);\n-    let newSelectedState = this.state.selectedStudents.filter(selectedItem => selectedItem.id !== student.id);\n-    let newRemoveState = studentIsAdded ? this.state.removeStudents : this.state.removeStudents.concat(student);\n-    let newAddState = studentIsAdded ? this.state.addStudents.filter(aStudent => aStudent.id !== student.id) : this.state.addStudents;\n-    this.setState({ selectedStudents: newSelectedState, removeStudents: newRemoveState, addStudents: newAddState });\n-  }\n-\n   setSelectedWorkspace() {\n     this.props.setCurrentOrganizationWorkspace({\n       workspaceId: this.props.workspace.id,\n@@ -169,10 +168,6 @@ class OrganizationEditWorkspace extends React.Component<OrganizationEditWorkspac\n     });\n   }\n \n-  setSelectedStudents(addStudents: Array<SelectItem>) {\n-    this.setState({ addStudents });\n-  }\n-\n   setWorkspaceName(value: string) {\n     this.setState({ locked: false, workspaceName: value });\n   }\n@@ -379,7 +374,7 @@ class OrganizationEditWorkspace extends React.Component<OrganizationEditWorkspac\n           return { id: student.id, label: student.firstName + \" \" + student.lastName, icon: \"user\", type: \"student\" }\n         });\n \n-        let groups = this.props.users.userGroups.map(group => {\n+        let groups = this.props.users.usergroups.map(group => {\n           return { id: group.id, label: group.name, icon: \"users\", type: \"student-group\" }\n         });\n "
  },
  {
    "sha": "2bef6cd31d49f4573790b74c85e6194f673acc18",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/new-usergroup.tsx",
    "status": "added",
    "additions": 359,
    "deletions": 0,
    "changes": 359,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/new-usergroup.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/new-usergroup.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/new-usergroup.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -0,0 +1,359 @@\n+import * as React from 'react';\n+import { connect, Dispatch } from 'react-redux';\n+import Dialog, { DialogRow, DialogRowHeader, DialogRowContent } from '~/components/general/dialog';\n+import { FormWizardActions, InputFormElement } from '~/components/general/form-element';\n+import { loadSelectorStudents, loadSelectorStaff, LoadUsersTriggerType, loadUserGroups, createUsergroup, CreateUsergroupTriggerType } from '~/actions/main-function/users';\n+import { i18nType } from '~/reducers/base/i18n';\n+import { StateType } from '~/reducers';\n+import { bindActionCreators } from 'redux';\n+import AutofillSelector, { UiSelectItem } from '~/components/base/input-select-autofill';\n+import { SelectItem } from '~/actions/workspaces/index';\n+import { CreateUserGroupType, UpdateUserGroupStateType, UsersSelectType } from '~/reducers/main-function/users';\n+\n+interface ValidationType {\n+  nameValid: number\n+}\n+\n+interface OrganizationNewUserGroupProps {\n+  children?: React.ReactElement<any>,\n+  i18n: i18nType,\n+  users: UsersSelectType,\n+  createOrganizationUsergroup: CreateUsergroupTriggerType,\n+  loadStudents: LoadUsersTriggerType,\n+  loadStaff: LoadUsersTriggerType,\n+  loadUserGroups: LoadUsersTriggerType\n+}\n+\n+interface OrganizationNewUserGroupState {\n+  usergroupName: string,\n+  isGuidanceGroup: boolean;\n+  locked: boolean,\n+  currentStep: number,\n+  addStudents: UiSelectItem[],\n+  addStaff: UiSelectItem[],\n+  removeStudents: UiSelectItem[],\n+  removeStaff: UiSelectItem[],\n+  selectedStudents: SelectItem[],\n+  selectedStaff: SelectItem[],\n+  studentsLoaded: boolean,\n+  executing: boolean,\n+  validation: ValidationType,\n+  usergroupUpdated: boolean,\n+  studentsAdded: boolean,\n+  studentsRemoved: boolean,\n+  staffAdded: boolean,\n+  staffRemoved: boolean,\n+}\n+\n+class OrganizationNewUserGroup extends React.Component<OrganizationNewUserGroupProps, OrganizationNewUserGroupState> {\n+\n+  private totalSteps: number;\n+\n+  constructor(props: OrganizationNewUserGroupProps) {\n+    super(props);\n+    this.totalSteps = 4;\n+    this.state = {\n+      usergroupName: null,\n+      isGuidanceGroup: false,\n+      selectedStudents: [],\n+      selectedStaff: [],\n+      addStudents: [],\n+      addStaff: [],\n+      removeStudents: [],\n+      removeStaff: [],\n+      studentsLoaded: false,\n+      locked: true,\n+      currentStep: 1,\n+      executing: false,\n+      validation: {\n+        nameValid: 2\n+      },\n+\n+      usergroupUpdated: false,\n+      studentsAdded: false,\n+      studentsRemoved: false,\n+      staffAdded: false,\n+      staffRemoved: false,\n+    };\n+\n+    this.doStaffSearch = this.doStaffSearch.bind(this);\n+    this.selectStaff = this.selectStaff.bind(this);\n+    this.deleteStaff = this.deleteStaff.bind(this);\n+    this.doStudentSearch = this.doStudentSearch.bind(this);\n+    this.selectStudent = this.selectStudent.bind(this);\n+    this.deleteStudent = this.deleteStudent.bind(this);\n+    this.setUsergroupName = this.setUsergroupName.bind(this);\n+    this.setGuidanceGroup = this.setGuidanceGroup.bind(this);\n+    this.saveUsergroup = this.saveUsergroup.bind(this);\n+    this.clearComponentState = this.clearComponentState.bind(this);\n+  }\n+  doStudentSearch(q: string) {\n+    this.props.loadStudents({ payload: { q } });\n+  }\n+\n+  selectStudent(student: SelectItem) {\n+    let studentIsDeleted = this.state.removeStudents.some(rStudent => rStudent.id === student.id);\n+    let newSelectedState = this.state.selectedStudents.concat(student);\n+    let newAddState = studentIsDeleted ? this.state.addStudents : this.state.addStudents.concat(student);\n+    let newRemoveState = studentIsDeleted ? this.state.removeStudents.filter(rStudent => rStudent.id !== student.id) : this.state.removeStudents;\n+    this.setState({ selectedStudents: newSelectedState, addStudents: newAddState, removeStudents: newRemoveState });\n+  }\n+\n+  deleteStudent(student: SelectItem) {\n+    let studentIsAdded = this.state.addStudents.some(aStudent => aStudent.id === student.id);\n+    let newSelectedState = this.state.selectedStudents.filter(selectedItem => selectedItem.id !== student.id);\n+    let newRemoveState = studentIsAdded ? this.state.removeStudents : this.state.removeStudents.concat(student);\n+    let newAddState = studentIsAdded ? this.state.addStudents.filter(aStudent => aStudent.id !== student.id) : this.state.addStudents;\n+    this.setState({ selectedStudents: newSelectedState, removeStudents: newRemoveState, addStudents: newAddState });\n+  }\n+\n+  doStaffSearch(q: string) {\n+    this.props.loadStaff({ payload: { q } });\n+  }\n+\n+  selectStaff(staff: SelectItem) {\n+    let staffIsDeleted = this.state.removeStaff.some(rStaff => rStaff.id === staff.id);\n+    let newSelectedState = this.state.selectedStaff.concat(staff);\n+    let newAddState = staffIsDeleted ? this.state.addStaff : this.state.addStaff.concat(staff);\n+    let newRemoveState = staffIsDeleted ? this.state.removeStaff.filter(rStaff => rStaff.id !== staff.id) : this.state.removeStaff;\n+    this.setState({ addStaff: newAddState, selectedStaff: newSelectedState, removeStaff: newRemoveState });\n+  }\n+\n+  deleteStaff(staff: SelectItem) {\n+    let staffIsAdded = this.state.addStaff.some(aStaff => aStaff.id === staff.id);\n+    let newSelectedState = this.state.selectedStaff.filter(selectedItem => selectedItem.id !== staff.id);\n+    let newRemoveState = staffIsAdded ? this.state.removeStudents : this.state.removeStaff.concat(staff);\n+    let newAddState = staffIsAdded ? this.state.addStaff.filter(aStaff => aStaff.id !== staff.id) : this.state.addStaff;\n+    this.setState({ selectedStaff: newSelectedState, removeStaff: newRemoveState, addStaff: newAddState });\n+  }\n+\n+  setGuidanceGroup(value: boolean) {\n+    this.setState({ isGuidanceGroup: value });\n+  }\n+\n+  setUsergroupName(value: string) {\n+    this.setState({ locked: false, usergroupName: value });\n+  }\n+\n+  clearComponentState() {\n+    this.setState({\n+      locked: true,\n+      usergroupName: null,\n+      studentsLoaded: false,\n+      executing: false,\n+      currentStep: 1,\n+      addStudents: [],\n+      selectedStudents: [],\n+      removeStudents: [],\n+      addStaff: [],\n+      selectedStaff: [],\n+      removeStaff: [],\n+      usergroupUpdated: false,\n+      studentsAdded: false,\n+      studentsRemoved: false,\n+      staffAdded: false,\n+      staffRemoved: false,\n+    });\n+  }\n+\n+  cancelDialog(closeDialog: () => any) {\n+    closeDialog();\n+  }\n+\n+  nextStep() {\n+    if (this.state.usergroupName === \"\") {\n+      let validation: ValidationType = Object.assign(this.state.validation, { nameValid: 0 });\n+      this.setState({ locked: true, validation });\n+    } else {\n+      let nextStep = this.state.currentStep + 1;\n+      this.setState({ locked: false, currentStep: nextStep });\n+    }\n+  }\n+\n+  lastStep() {\n+    let lastStep = this.state.currentStep - 1;\n+    this.setState({ currentStep: lastStep });\n+  }\n+\n+  saveUsergroup(closeDialog: () => any) {\n+    this.setState({\n+      locked: true,\n+      executing: true\n+    })\n+\n+    let payload: CreateUserGroupType;\n+    let userIdentifiers: string[];\n+\n+    payload = {\n+      name: this.state.usergroupName,\n+      isGuidanceGroup: this.state.isGuidanceGroup\n+    }\n+\n+    if (this.state.addStudents.length !== 0) {\n+      userIdentifiers = this.state.addStudents.map(student => student.id as string)\n+    }\n+\n+    if (this.state.addStaff.length !== 0) {\n+      if (!userIdentifiers) {\n+        userIdentifiers = this.state.addStaff.map(staff => staff.id as string)\n+      } else {\n+        userIdentifiers = userIdentifiers.concat(this.state.addStaff.map(staff => staff.id as string));\n+      }\n+    }\n+\n+    this.props.createOrganizationUsergroup({\n+      payload: payload,\n+      addUsers: userIdentifiers,\n+      progress: (state: UpdateUserGroupStateType) => {\n+        if (state === \"update-group\") {\n+          this.setState({\n+            usergroupUpdated: true,\n+          });\n+        }\n+        if (state === \"add-users\") {\n+          this.setState({\n+            studentsAdded: true,\n+          });\n+        }\n+        if (state === \"remove-users\") {\n+          this.setState({\n+            studentsRemoved: true,\n+          });\n+        }\n+        if (state === \"done\") {\n+          setTimeout(() => this.props.loadUserGroups({ payload: { q: \"\" } }), 2000);\n+        }\n+      },\n+\n+      success: () => {\n+        closeDialog();\n+      },\n+\n+      fail: () => {\n+        closeDialog();\n+      }\n+    });\n+  }\n+\n+  wizardSteps(page: number) {\n+\n+    switch (page) {\n+      case 1:\n+        return <DialogRow>\n+          <DialogRow modifiers=\"edit-workspace\">\n+            <InputFormElement id=\"userGroupName\" modifiers=\"user-group-name\" mandatory={true} updateField={this.setUsergroupName} valid={this.state.validation.nameValid} name=\"usergroupName\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.name.label')} value={this.state.usergroupName}></InputFormElement>\n+          </DialogRow>\n+          <DialogRow modifiers=\"edit-workspace\">\n+            <InputFormElement id=\"isGuidanceGroup\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.guidanceSelect.label')} name=\"is-guidance-group\" type=\"checkbox\" updateField={this.setGuidanceGroup}></InputFormElement>\n+          </DialogRow>\n+        </DialogRow>;\n+      case 2:\n+        let students = this.props.users.students.map(student => {\n+          return { id: student.id, label: student.firstName + \" \" + student.lastName, icon: \"user\", type: \"student\" }\n+        });\n+        return <DialogRow modifiers=\"edit-workspace\">\n+          <AutofillSelector modifier=\"add-students\"\n+            loader={this.doStudentSearch}\n+            placeholder={this.props.i18n.text.get('plugin.organization.workspaces.editWorkspace.search.students.placeholder')}\n+            selectedItems={this.state.selectedStudents} searchItems={students} onDelete={this.deleteStudent} onSelect={this.selectStudent} />\n+        </DialogRow>;\n+      case 3:\n+        let staffSearchItems = this.props.users.staff.map(staff => {\n+          return { id: staff.id, label: staff.firstName + \" \" + staff.lastName, icon: \"user\" }\n+        });\n+        return <DialogRow modifiers=\"edit-workspace\">\n+          <AutofillSelector modifier=\"add-teachers\"\n+            loader={this.doStaffSearch}\n+            placeholder={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.search.groupStaff.placeholder')}\n+            selectedItems={this.state.selectedStaff} searchItems={staffSearchItems} onDelete={this.deleteStaff} onSelect={this.selectStaff} />\n+        </DialogRow>;\n+      case 4:\n+        return <DialogRow modifiers=\"edit-workspace-summary\">\n+          <DialogRow>\n+            <DialogRowHeader modifiers=\"new-workspace\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.label.userGroupName')} />\n+            <DialogRowContent modifiers=\"new-workspace\">\n+              <span>{this.state.usergroupName}</span>\n+              <span>{this.state.isGuidanceGroup ? \" (\" + this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.label.isGuidanceGroup') + \")\" : \"\"}</span>\n+            </DialogRowContent>\n+          </DialogRow>\n+          <DialogRow>\n+            <DialogRowHeader modifiers=\"new-workspace\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.label.addStudents')} />\n+            <DialogRowContent modifiers=\"new-workspace\">\n+              {this.state.addStudents.length > 0 ?\n+                this.state.addStudents.map((student) => {\n+                  return <span key={student.id} className=\"tag-input__selected-item\">\n+                    {student.icon ?\n+                      <span className={`glyph glyph--selected-recipient icon-${student.icon}`} />\n+                      : null}\n+                    {student.label}\n+                  </span>\n+                }) : <div>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.empty.students')}</div>}\n+            </DialogRowContent>\n+          </DialogRow>\n+          <DialogRow>\n+            <DialogRowHeader modifiers=\"new-workspace\" label={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.label.addStaff')} />\n+            <DialogRowContent modifiers=\"new-workspace\">\n+              {this.state.addStaff.length > 0 ?\n+                this.state.addStaff.map((staff) => {\n+                  return <span key={staff.id} className=\"tag-input__selected-item\">\n+                    {staff.icon ?\n+                      <span className={`glyph glyph--selected-recipient icon-${staff.icon}`} />\n+                      : null}\n+                    {staff.label}\n+                  </span>\n+                }) : <div>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.empty.staff')}</div>}\n+            </DialogRowContent>\n+          </DialogRow>\n+        </DialogRow>;\n+      default: return <div>EMPTY</div>\n+    }\n+  }\n+\n+  render() {\n+    let content = (closePortal: () => any) => this.wizardSteps(this.state.currentStep);\n+    let executeContent = <div><div className={`dialog__executer ${this.state.usergroupUpdated === true ? \"dialog__executer state-DONE\" : \"\"}`}>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.execute.createUserGroup ')}</div>\n+      <div className={`dialog__executer ${this.state.studentsAdded === true ? \"dialog__executer state-DONE\" : \"\"}`}>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.execute.addStudents')}</div>\n+      <div className={`dialog__executer ${this.state.studentsRemoved === true ? \"dialog__executer state-DONE\" : \"\"}`}>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.execute.removeStudents')}</div>\n+      <div className={`dialog__executer ${this.state.staffAdded === true ? \"dialog__executer state-DONE\" : \"\"}`}>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.execute.addStaff')}</div>\n+      <div className={`dialog__executer ${this.state.staffRemoved === true ? \"dialog__executer state-DONE\" : \"\"}`}>{this.props.i18n.text.get('plugin.organization.userGroups.dialogs.summary.execute.removeStaff')}</div></div>;\n+    let footer = (closePortal: () => any) => <FormWizardActions locked={this.state.locked}\n+      currentStep={this.state.currentStep} totalSteps={this.totalSteps}\n+      executeLabel={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.create.execute.label')}\n+      nextLabel={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.next.label')}\n+      lastLabel={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.last.label')}\n+      cancelLabel={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.cancel.label')}\n+      executeClick={this.saveUsergroup.bind(this, closePortal)}\n+      nextClick={this.nextStep.bind(this)}\n+      lastClick={this.lastStep.bind(this)}\n+      cancelClick={this.cancelDialog.bind(this, closePortal)} />;\n+\n+    return (<Dialog executing={this.state.executing} onClose={this.clearComponentState} executeContent={executeContent} footer={footer} modifier=\"new-user\"\n+      title={this.props.i18n.text.get('plugin.organization.userGroups.dialogs.create.title')}\n+      content={content}>\n+      {this.props.children}\n+    </Dialog>\n+    )\n+  }\n+}\n+\n+function mapStateToProps(state: StateType) {\n+  return {\n+    i18n: state.i18n,\n+    users: state.userSelect,\n+  }\n+};\n+\n+function mapDispatchToProps(dispatch: Dispatch<any>) {\n+  return bindActionCreators({\n+    loadStudents: loadSelectorStudents,\n+    loadStaff: loadSelectorStaff,\n+    loadUserGroups,\n+    createOrganizationUsergroup: createUsergroup,\n+\n+  }, dispatch);\n+};\n+\n+export default connect(\n+  mapStateToProps,\n+  mapDispatchToProps\n+)(OrganizationNewUserGroup);"
  },
  {
    "sha": "accd90a88615e4a97d17e96464fdc32957ebf00b",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/new-workspace.tsx",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/new-workspace.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/new-workspace.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/components/organization/dialogs/new-workspace.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -117,9 +117,9 @@ class OrganizationNewWorkspace extends React.Component<OrganizationNewWorkspaceP\n     this.setState({ validation, locked: false, template: { id: parseInt(e.target.value), label: e.target.name }, workspaceName: e.target.name });\n   }\n \n-  doStudentSearch(value: string) {\n-    this.props.loadStudents(value);\n-    this.props.loadUserGroups(value);\n+  doStudentSearch(q: string) {\n+    this.props.loadStudents({payload:{q}});\n+    this.props.loadUserGroups({payload:{q}});\n   }\n \n   selectStudent(student: SelectItem) {\n@@ -132,8 +132,8 @@ class OrganizationNewWorkspace extends React.Component<OrganizationNewWorkspaceP\n     this.setState({ selectedStudents: newState });\n   }\n \n-  doStaffSearch(value: string) {\n-    this.props.loadStaff(value);\n+  doStaffSearch(q: string) {\n+    this.props.loadStaff({payload:{q}});\n   }\n \n   selectStaff(staff: SelectItem) {\n@@ -323,7 +323,7 @@ class OrganizationNewWorkspace extends React.Component<OrganizationNewWorkspaceP\n           return { id: student.id, label: student.firstName + \" \" + student.lastName, icon: \"user\", type: \"student\" }\n         });\n \n-        let groups: UiSelectItem[] = this.props.users.userGroups.map(group => {\n+        let groups: UiSelectItem[] = this.props.users.usergroups.map(group => {\n           return { id: group.id, label: group.name, icon: \"users\", type: \"student-group\" }\n         });\n "
  },
  {
    "sha": "a648c151f4ac3fc3bf8eed0433592d9316f94c7d",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/containers/main-function.tsx",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/containers/main-function.tsx",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/containers/main-function.tsx",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/containers/main-function.tsx?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -16,7 +16,7 @@ import { loadLoggedUser } from '~/actions/user-index';\n import { UserType } from '~/reducers/user-index';\n import { loadWorkspacesFromServer, loadUserWorkspaceCurriculumFiltersFromServer, setWorkspaceStateFilters, loadUserWorkspaceEducationFiltersFromServer, loadUserWorkspaceOrganizationFiltersFromServer } from '~/actions/workspaces';\n import { loadLastWorkspaceFromServer, loadUserWorkspacesFromServer } from '~/actions/workspaces';\n-import { loadUsers, loadStudyprogrammes } from '~/actions/main-function/users';\n+import { loadUsers, loadUserGroups, loadStudyprogrammes } from '~/actions/main-function/users';\n import { WorkspacesActiveFiltersType } from '~/reducers/workspaces';\n import OrganizationAdministrationBody from '../components/organization/body';\n import CommunicatorBody from '../components/communicator/body';\n@@ -347,7 +347,8 @@ export default class MainFunction extends React.Component<MainFunctionProps, {}>\n         this.loadCoursePickerData(currentLocationData, true, false);\n       }\n \n-      this.props.store.dispatch(loadUsers(null, 0, 10) as Action);\n+      this.props.store.dispatch(loadUsers({ payload: { q: \"\", firstResult: 0, lastResult: 10 } }) as Action);\n+      this.props.store.dispatch(loadUserGroups({ payload: { q: \"\", firstResult: 0, maxResults: 25 } }) as Action);\n       this.props.store.dispatch(loadStudyprogrammes() as Action);\n       this.props.store.dispatch(loadProfileChatSettings() as Action);\n     }"
  },
  {
    "sha": "7be47a68a25f13058b4302e8c4e85a3fba01266a",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/index.ts",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/index.ts",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/index.ts",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/index.ts?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -9,7 +9,7 @@ import { HOPSType } from './main-function/hops';\n import { VOPSType } from './main-function/vops';\n import { MessagesType } from './main-function/messages';\n import { WorkspacesType } from './workspaces';\n-import { UsersType, UsersSelectType, StudyprogrammeTypes } from './main-function/users';\n+import { UsersType, UserGroupsType, UsersSelectType, StudyprogrammeTypes } from './main-function/users';\n import { UserIndexType } from './user-index';\n import { DiscussionType } from './discussion';\n import { GuiderType } from './main-function/guider';\n@@ -37,6 +37,7 @@ export interface StateType {\n   messages?: MessagesType,\n   userIndex?: UserIndexType,\n   userSelect?: UsersSelectType,\n+  userGroups?: UserGroupsType\n   workspaces?: WorkspacesType,\n   organizationWorkspaces?: WorkspacesType,\n   organizationUsers?: UsersType,"
  },
  {
    "sha": "9dd8d742d7f0115f0ec7772cb5b3e4bbefa62d16",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function.ts",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function.ts",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function.ts",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function.ts?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -8,7 +8,7 @@ import messages from './main-function/messages';\n import workspaces, { organizationWorkspaces } from './workspaces';\n import announcements from './announcements';\n import userIndex from './user-index';\n-import organizationUsers, { studyprogrammes, userSelect } from './main-function/users';\n+import organizationUsers, { studyprogrammes, userSelect, userGroups } from './main-function/users';\n import discussion from '~/reducers/discussion';\n import guider from './main-function/guider';\n import profile from './main-function/profile';\n@@ -38,6 +38,7 @@ export default combineReducers({\n   messages,\n   studyprogrammes,\n   userSelect,\n+  userGroups,\n   organizationWorkspaces,\n   organizationUsers,\n   discussion,"
  },
  {
    "sha": "9bb869241bba4926d4a786fe7e6eca9ba10bc56e",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/guider/index.ts",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/guider/index.ts",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/guider/index.ts",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/guider/index.ts?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -1,5 +1,5 @@\n import { ActionType } from '~/actions';\n-import { UserWithSchoolDataType, UserGroupListType, UserFileType, StudentUserProfileEmailType, StudentUserProfilePhoneType, StudentUserAddressType } from '~/reducers/user-index';\n+import { UserWithSchoolDataType, UserFileType, StudentUserProfileEmailType, StudentUserProfilePhoneType, StudentUserAddressType, UserGroupType } from '~/reducers/user-index';\n import { WorkspaceType, WorkspaceListType, ActivityLogType } from \"~/reducers/workspaces\";\n import { VOPSDataType } from '~/reducers/main-function/vops';\n import { HOPSDataType } from '~/reducers/main-function/hops';\n@@ -51,7 +51,7 @@ export interface GuiderStudentUserProfileType {\n   phoneNumbers: Array<StudentUserProfilePhoneType>,\n   addresses: Array<StudentUserAddressType>,\n   files: Array<UserFileType>,\n-  usergroups: UserGroupListType,\n+  usergroups: Array<UserGroupType>,\n   // Disabled until it really works\n   //  vops: VOPSDataType,\n   hops: HOPSDataType,"
  },
  {
    "sha": "57c9697f27953dc27e177fd2efc4edc6dce4dcbf",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/messages.ts",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/messages.ts",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/messages.ts",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/messages.ts?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -1,7 +1,8 @@\n import {ActionType} from \"~/actions\";\r\n import {i18nType} from '~/reducers/base/i18n';\r\n \r\n-import { UserType, UserGroupListType } from '~/reducers/user-index';\r\n+import { UserGroupType, UserType } from '~/reducers/user-index';\r\n+\r\n \r\n export type MessagesStateType = \"LOADING\" | \"LOADING_MORE\" | \"ERROR\" | \"READY\";\r\n export type MessagesSearchResultFolderType = \"INBOX\" | \"TRASH\" | \"SENT\";\r\n@@ -31,7 +32,7 @@ export interface MessageSearchResult {\n   senderId: number,\r\n   tags: any,\r\n   recipients?: Array<MessageRecepientType>,\r\n-  userGroupRecipients?: UserGroupListType,\r\n+  userGroupRecipients?: Array<UserGroupType>,\r\n   workspaceRecipients?: Array<MessageWorkspaceRecipientType>,\r\n }\r\n export interface MessageThreadLabelType {\r\n@@ -67,7 +68,7 @@ export interface MessageThreadType {\n   tags: any,\r\n   threadLatestMessageDate: string,\r\n   unreadMessagesInThread: boolean,\r\n-  userGroupRecipients?: UserGroupListType,\r\n+  userGroupRecipients?: Array<UserGroupType>,\r\n   workspaceRecipients?: Array<{\r\n     archetype: string,\r\n     workspaceEntityId: number,\r\n@@ -106,7 +107,7 @@ export interface MessageType {\n   sender: UserType,\r\n   senderId: number,\r\n   tags: any,\r\n-  userGroupRecipients: UserGroupListType,\r\n+  userGroupRecipients: Array<UserGroupType>,\r\n   workspaceRecipients: Array<MessageWorkspaceRecipientType>\r\n }\r\n export interface MessageRecepientType {\r"
  },
  {
    "sha": "9e21993c6a1a0eba9bedacf192dbda11ccaa15d0",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/users/index.ts",
    "status": "modified",
    "additions": 91,
    "deletions": 7,
    "changes": 98,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/users/index.ts",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/users/index.ts",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/main-function/users/index.ts?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -1,16 +1,29 @@\n import { ActionType } from \"~/actions\";\n-import students from \"~/components/guider/body/application/students\";\n-import { UserWithSchoolDataType, UserGroupType, UserType } from '~/reducers/user-index';\n+import { UserGroupType, UserType } from '~/reducers/user-index';\n export type UserStatusType = \"WAIT\" | \"LOADING\" | \"READY\" | \"ERROR\";\n export type StudyprogrammeTypeStatusType = \"WAIT\" | \"LOADING\" | \"READY\" | \"ERROR\";\n export type UsersListType = Array<UserType>;\n export type StudyprogrammeListType = Array<StudyprogrammeType>;\n \n+export type UserGroupsStateType = \"LOADING\" | \"LOADING_MORE\" | \"ERROR\" | \"READY\";\n+\n+export interface UserPayloadType {\n+  q: string | null,\n+  firstResult?: number | null,\n+  lastResult?: number | null,\n+  maxResults?: number | null,\n+  userGroupIds?: number[],\n+}\n+\n export interface OrganizationUsersListType {\n   firstResult: number,\n   lastResult: number,\n   results: UsersListType,\n-  totalHitCount: number\n+  totalHitCount: number,\n+}\n+\n+export interface UserGroupListType {\n+  list: UserGroupType[],\n }\n \n export interface StudyprogrammeTypes {\n@@ -30,16 +43,49 @@ export interface UserPanelUsersType {\n }\n \n export interface UsersType {\n-  students: UserPanelUsersType,\n-  staff: UserPanelUsersType,\n+  students?: UserPanelUsersType,\n+  staff?: UserPanelUsersType,\n }\n \n export interface UsersSelectType {\n   students: UsersListType,\n   staff: UsersListType,\n-  userGroups: Array<UserGroupType>,\n+  usergroups: Array<UserGroupType>,\n+}\n+\n+export interface CurrentUserGroupType {\n+  id: number | null,\n+  students: OrganizationUsersListType,\n+  staff: OrganizationUsersListType,\n+}\n+\n+export interface UserGroupsType {\n+  list: UserGroupType[],\n+  currentUserGroup?: CurrentUserGroupType,\n+  state: UserGroupsStateType,\n+  hasMore: boolean,\n+  searchString: string,\n+  currentPayload: UserPayloadType,\n }\n \n+export type CurrentUserGroupUpdateType = Partial<CurrentUserGroupType>\n+\n+export interface CreateUserGroupType {\n+  name: string,\n+  isGuidanceGroup: boolean,\n+}\n+\n+export interface UpdateUserGroupType extends CreateUserGroupType {\n+  identifier: string,\n+}\n+\n+export interface ModifyUserGroupUsersType {\n+  groupIdentifier?: string,\n+  userIdentifiers: string[],\n+}\n+\n+export type UpdateUserGroupStateType = \"update-group\" | \"add-users\" | \"remove-users\" | \"done\";\n+\n // Do not delete, this is for organization\n \n export default function users(state: UsersType = {\n@@ -64,10 +110,48 @@ export default function users(state: UsersType = {\n   return state;\n }\n \n+export function userGroups(state: UserGroupsType = {\n+  list: [],\n+  currentUserGroup: null,\n+  state: \"LOADING\",\n+  hasMore: false,\n+  searchString: \"\",\n+  currentPayload: null,\n+}, action: ActionType): UserGroupsType {\n+  if (action.type === \"UPDATE_USER_GROUPS\") {\n+    return Object.assign({}, state, {\n+      list: action.payload\n+    });\n+  } else if (action.type === \"LOAD_MORE_USER_GROUPS\") {\n+    return Object.assign({}, state, {\n+      list: state.list.concat(action.payload)\n+    });\n+  } else if (action.type === \"UPDATE_CURRENT_USER_GROUP\") {\n+    return Object.assign({}, state, {\n+      currentUserGroup: action.payload\n+    });\n+  }\n+  else if (action.type === \"UPDATE_USER_GROUPS_STATE\") {\n+    return Object.assign({}, state, {\n+      state: action.payload\n+    });\n+  } else if (action.type === \"UPDATE_HAS_MORE_USERGROUPS\") {\n+    return Object.assign({}, state, {\n+      hasMore: action.payload\n+    });\n+  } else if (action.type === \"SET_CURRENT_PAYLOAD\") {\n+    return Object.assign({}, state, {\n+      currentPayload: action.payload\n+    });\n+\n+  }\n+  return state;\n+}\n+\n export function userSelect(state: UsersSelectType = {\n   students: [],\n   staff: [],\n-  userGroups: [],\n+  usergroups: [],\n }, action: ActionType): UsersSelectType {\n   if (action.type === \"UPDATE_STUDENT_SELECTOR\") {\n     return Object.assign({}, state, {"
  },
  {
    "sha": "108c7789d8b9a6ebdfb5b277a9bc9f174e3d0e63",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/user-index.ts",
    "status": "modified",
    "additions": 8,
    "deletions": 7,
    "changes": 15,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/user-index.ts",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/user-index.ts",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/reducers/user-index.ts?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -82,12 +82,6 @@ export interface OrganizationType {\n   name: string\n }\n \n-export interface UserGroupType {\n-  id: number,\n-  name: string,\n-  userCount: number,\n-  organization?: OrganizationType\n-}\n \n export interface UserStaffType {\n   id: string,\n@@ -111,7 +105,14 @@ export interface ShortWorkspaceUserWithActiveStatusType {\n   hasImage: boolean\n }\n \n-export type UserGroupListType = Array<UserGroupType>;\n+export interface UserGroupType {\n+  id: number,\n+  identifier?: string,\n+  name: string,\n+  userCount: number,\n+  organization?: OrganizationType,\n+  isGuidanceGroup?: boolean,\n+}\n \n export interface UserBaseIndexType {\n   [index: number]: UserType"
  },
  {
    "sha": "37ab8990092225a7b922296d012997bfe0440c79",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/sass/base/colors/main-function.scss",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/sass/base/colors/main-function.scss",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/sass/base/colors/main-function.scss",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/sass/base/colors/main-function.scss?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -26,12 +26,14 @@ $color-main-function-button-pill-next-page-background: $color-tertiary;\n $color-main-function-button-pill-next-page-text: $color-tertiary-contrast;\n $color-main-function-button-pill-toolbar-edit-label-background: transparent;\n $color-main-function-button-pill-toolbar-edit-label-text: rgba(0, 0, 0, 0.5);\n-$color-main-function-button-pill-toolbar-edit-label-text-hover:  rgba(0, 0, 0, 1);\n+$color-main-function-button-pill-toolbar-edit-label-text-hover: rgba(0, 0, 0, 1);\n $color-main-function-button-pill-toolbar-edit-label-text-active: rgba(0, 0, 0, 1);\n $color-main-function-button-pill-navigation-edit-label-background: transparent;\n $color-main-function-button-pill-navigation-edit-label-text: rgba(0, 0, 0, 0.5);\n $color-main-function-button-pill-navigation-edit-label-text-hover: rgba(0, 0, 0, 1);\n $color-main-function-button-pill-navigation-edit-label-text-active: rgba(0, 0, 0, 1);\n+$color-main-function-application-list-item-disabled-text: #b9b7b7;\n+$color-main-function-application-list-item-disabled-background: #fbfbfb;\n $color-main-function-application-list-item-open-border: #f0f0f0;\n $color-main-function-application-panel-actions-border: $color-default-separator-border;\n $color-main-function-application-list-item-checkbox-border: #c7c7c7;"
  },
  {
    "sha": "f2455cfa6fd0d2ce06db09baa452fdaa587bc538",
    "filename": "muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/sass/elements/application-list.scss",
    "status": "modified",
    "additions": 16,
    "deletions": 2,
    "changes": 18,
    "blob_url": "https://github.com/otavanopisto/muikku/blob/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/sass/elements/application-list.scss",
    "raw_url": "https://github.com/otavanopisto/muikku/raw/57a1eb14c112646407e3abcd4ad2e907a3f1e009/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/sass/elements/application-list.scss",
    "contents_url": "https://api.github.com/repos/otavanopisto/muikku/contents/muikku-core-plugins/src/main/resources/META-INF/resources/scripts/src/sass/elements/application-list.scss?ref=57a1eb14c112646407e3abcd4ad2e907a3f1e009",
    "patch": "@@ -15,6 +15,14 @@\n   }\n }\n \n+.application-list--dialog-users {\n+  height: 234px;\n+}\n+\n+.application-list--dialog-remove-users {\n+  height: 285px;\n+ }\n+\n .application-list__header-container {\n   align-items: flex-start;\n   display: flex;\n@@ -68,7 +76,7 @@\n }\n \n .application-list--workspace-templates {\n-  min-height: 260px;\n+  min-height: 208px;\n   overflow: hidden;\n }\n \n@@ -362,9 +370,15 @@\n       }\n     }\n   }\n+  // scss-lint:disable SelectorFormat\n+  &.state-DISABLED {\n+    background-color: $color-main-function-application-list-item-disabled-background;\n+    color: $color-main-function-application-list-item-disabled-text;\n+  }\n+    // scss-lint:enable SelectorFormat\n }\n \n-.application-list__item--notification {\n+.application-list__item-- .application-list__item--notification {\n   border-top: 3px solid $color-message-border;\n   margin: 0 0 1px;\n   padding: 10px 10px 10px 0;"
  }
]
