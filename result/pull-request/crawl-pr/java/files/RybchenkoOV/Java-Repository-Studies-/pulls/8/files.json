[
  {
    "sha": "26d33521af10bcc7fd8cea344038eaaeb78d0ef5",
    "filename": ".idea/.gitignore",
    "status": "removed",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/.idea/.gitignore",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/.idea/.gitignore",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/.idea/.gitignore?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,3 +0,0 @@\n-# Default ignored files\n-/shelf/\n-/workspace.xml"
  },
  {
    "sha": "40674af8d699c0ff4e92f9e8639ff4904ce4bdea",
    "filename": ".idea/misc.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/.idea/misc.xml",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/.idea/misc.xml?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,6 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_15\" project-jdk-name=\"15\" project-jdk-type=\"JavaSDK\">\n-    <output url=\"file://$PROJECT_DIR$/out\" />\n-  </component>\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "3bc429ba674d56c82175153c2173eaa74b04ac43",
    "filename": ".idea/modules.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/.idea/modules.xml",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/.idea/modules.xml",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/.idea/modules.xml?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"ProjectModuleManager\">\n-    <modules>\n-      <module fileurl=\"file://$PROJECT_DIR$/Java-Repository.iml\" filepath=\"$PROJECT_DIR$/Java-Repository.iml\" />\n-    </modules>\n-  </component>\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "35eb1ddfbbc029bcab630581847471d7f238ec53",
    "filename": ".idea/vcs.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/.idea/vcs.xml",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/.idea/vcs.xml?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,6 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"VcsDirectoryMappings\">\n-    <mapping directory=\"\" vcs=\"Git\" />\n-  </component>\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "b107a2dd81165eaaf682ad3da030668b937fbb6c",
    "filename": "Java-Repository.iml",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/Java-Repository.iml",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/Java-Repository.iml",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/Java-Repository.iml?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,11 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output />\n-    <content url=\"file://$MODULE_DIR$\">\n-      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\n-    </content>\n-    <orderEntry type=\"inheritedJdk\" />\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n-  </component>\n-</module>\n\\ No newline at end of file"
  },
  {
    "sha": "611630d0f13d591231a122f45d971f303483da56",
    "filename": "LEVEL1/lesson8/CORE.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c/LEVEL1/lesson8/CORE.java",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c/LEVEL1/lesson8/CORE.java",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/LEVEL1/lesson8/CORE.java?ref=9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c",
    "patch": "@@ -0,0 +1,7 @@\n+package LEVEL1.lesson8;\n+\n+public class CORE {\n+    public static void main(String[] args) {\n+        new MainMenu();\n+    }\n+}"
  },
  {
    "sha": "293c6066c2e135e041f8ed5dc65325c2572ab11d",
    "filename": "LEVEL1/lesson8/MainMenu.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c/LEVEL1/lesson8/MainMenu.java",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c/LEVEL1/lesson8/MainMenu.java",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/LEVEL1/lesson8/MainMenu.java?ref=9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c",
    "patch": "@@ -0,0 +1,64 @@\n+package LEVEL1.lesson8;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class MainMenu extends JFrame {\n+\n+    private Settings settings;\n+    private Playground playground;\n+    private static final int SET_X_MAP = 300;\n+    private static final int SET_Y_MAP = 300;\n+    /** Заберем текущие значения экрана для мультиэкранного режима */\n+    GraphicsDevice dimensionCaster = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();\n+    int WWW = dimensionCaster.getDisplayMode().getWidth()/2-SET_X_MAP/2; // Центруем по X\n+    int HHH = dimensionCaster.getDisplayMode().getHeight()/2-SET_Y_MAP/2; // Центруем по Y\n+\n+    MainMenu() {\n+        settings = new Settings(this);\n+        playground = new Playground();\n+        setTitle(\"Tic-Tac-Toe Game\");\n+        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        setSize(SET_X_MAP,SET_Y_MAP);\n+        setLocation(WWW, HHH);\n+        JButton newGame = new JButton(\"NEW GAME\");\n+        JButton exit = new JButton(\"EXIT\");\n+        JPanel main_Panel = new JPanel();\n+        main_Panel.setLayout(new GridLayout(1,2));\n+        main_Panel.add(newGame);\n+        main_Panel.add(exit);\n+        add(main_Panel, BorderLayout.SOUTH);\n+        add(playground);\n+\n+        setResizable(false);\n+\n+        newGame.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                settings.setVisible(true);\n+            }\n+\n+        });\n+\n+        exit.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+            System.exit(0);\n+            }\n+        });\n+\n+\n+\n+\n+        setVisible(true);\n+    }\n+\n+    void getSetToStart(int gMode, int X_SIZE, int Y_SIZE, int TO_WIN_SEQ){\n+        playground.startNewGameSet(gMode, X_SIZE, Y_SIZE, TO_WIN_SEQ);\n+    }\n+\n+\n+\n+}"
  },
  {
    "sha": "61f96e342fc20cac5d36ba8f8f241bc391325d4c",
    "filename": "LEVEL1/lesson8/Playground.java",
    "status": "added",
    "additions": 276,
    "deletions": 0,
    "changes": 276,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c/LEVEL1/lesson8/Playground.java",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c/LEVEL1/lesson8/Playground.java",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/LEVEL1/lesson8/Playground.java?ref=9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c",
    "patch": "@@ -0,0 +1,276 @@\n+package LEVEL1.lesson8;\n+\n+import javax.swing.*;\n+import java.awt.*;\n+import java.awt.event.MouseAdapter;\n+import java.awt.event.MouseEvent;\n+import java.util.Random;\n+\n+public class Playground extends JPanel {\n+\n+    public static final int GAME_M_HVH = 1;\n+    public static final int GAME_M_HVC = 0;\n+\n+    private static final Random RND = new Random();\n+\n+    private int[][] map;\n+    private int X_SIZE;\n+    private int Y_SIZE;\n+    private int TO_WIN_SEQ;\n+    private int gMode;\n+    private int cellW;\n+    private int cellH;\n+\n+    private static final int humanChar = 1;\n+    private static final int aiChar = 2;\n+    private static final int emptyChar = 0;\n+\n+    private boolean gameOver;\n+    private String winEvent;\n+    private boolean mapInit;\n+\n+    Playground() {\n+        setBackground(new Color(110,90,200));\n+        addMouseListener(new MouseAdapter() {\n+            @Override\n+            public void mouseReleased(MouseEvent e) {\n+                super.mouseReleased(e);\n+                update(e);\n+            }\n+        });\n+        mapInit = false;\n+    }\n+\n+    void startNewGameSet(int gMode, int X_SIZE, int Y_SIZE, int TO_WIN_SEQ) {\n+        System.out.println(\"Starting new game with field: \"+X_SIZE+\"x\"+Y_SIZE+\". Win sequence: \"+TO_WIN_SEQ+\". Game mode: \"+gMode);\n+        this.X_SIZE = X_SIZE;\n+        this.Y_SIZE = Y_SIZE;\n+        this.gMode = gMode;\n+        this.TO_WIN_SEQ = TO_WIN_SEQ;\n+        this.map = new int[Y_SIZE][X_SIZE];\n+        gameOver=false;\n+        mapInit=true;\n+        repaint();\n+\n+    }\n+\n+    @Override\n+    protected void paintComponent(Graphics g) {\n+        super.paintComponent(g);\n+        render(g);\n+    }\n+\n+    private void render (Graphics g) {\n+        if (!mapInit) return;\n+\n+        int height = getHeight();\n+        int width = getWidth();\n+        cellW = width/X_SIZE;\n+        cellH = height/Y_SIZE;\n+        g.setColor(Color.white);\n+\n+\n+        for (int i = 0; i < X_SIZE; i++) {\n+            int x = i*cellW;\n+            g.drawLine(x,0,x,height);\n+        }\n+\n+        for (int i = 0; i < Y_SIZE; i++) {\n+            int y = i*cellH;\n+            g.drawLine(0,y,width,y);\n+        }\n+\n+\n+\n+        for (int y = 0; y < Y_SIZE; y++) {\n+            for (int x = 0; x < X_SIZE; x++) {\n+\n+                if (isEmpty(x, y)) {\n+                    continue;\n+                }\n+                if (map[y][x] == humanChar) {\n+                    g.setColor(new Color(255, 0, 0));\n+//                    g.drawLine(x,y,(x*cellW),(y*cellH));\n+//                    g.drawLine(x*cellW,y,(x),(y*cellH));\n+                    g.fillOval(x * cellW + 5, y * cellH + 5, cellW - 5 * 2, cellH - 5 * 2);\n+                } else if (map[y][x] == aiChar) {\n+                    g.setColor(new Color(38, 255, 0));\n+                    g.fillOval(x * cellW + 5, y * cellH + 5, cellW - 5 * 2, cellH - 5 * 2);\n+                } else {\n+                    throw new RuntimeException(\"Invalid render at coorditates: x = \" + x + \" y = \" + y);\n+                }\n+            }\n+        }\n+        if (gameOver) {\n+            endEvent(g);\n+        }\n+    }\n+\n+    private void endEvent(Graphics g) {\n+        g.setColor(Color.DARK_GRAY);\n+        g.fillRect(0, 200, getWidth(), 70);\n+        g.setColor(Color.ORANGE);\n+        g.setFont(new Font(\"Times New Roman\", Font.BOLD, 40));\n+        switch (winEvent) {\n+            case \"DRAW!!!\":\n+                g.drawString(\"DRAW!!!\", 180, getHeight() / 2);\n+                break;\n+            case \"PLAYER WIN!!!\":\n+                g.drawString(\"PLAYER WIN!!!\", 150, getHeight() / 2);\n+                break;\n+            case \"COMPUTER WIN!!!\":\n+                g.drawString(\"COMPUTER WIN!!!\", 180, getHeight() / 2);\n+                break;\n+            default:\n+                throw new RuntimeException(\"Invalid winEvent \" + winEvent);\n+        }\n+    }\n+\n+    private void gameOverEvent(String valueEvent) {\n+        gameOver = true;\n+        winEvent = valueEvent;\n+        repaint();\n+    }\n+\n+    private void update(MouseEvent e){\n+        if (!mapInit) return;\n+        if (gameOver) return;\n+\n+\n+        int cellX = e.getX() / cellW;\n+        int cellY = e.getY() / cellH;\n+\n+        if (!isValidTurn(cellX, cellY) || !isEmpty(cellX, cellY)) {\n+            return;\n+        }\n+\n+        map[cellY][cellX] = humanChar;\n+\n+        if (isWinner(humanChar)) {\n+            gameOverEvent(\"PLAYER WIN!!!\");\n+            return;\n+        }\n+\n+        if (checkDraw()) {\n+            gameOverEvent(\"DRAW!!!\");\n+            return;\n+        }\n+\n+        compTurn();\n+        repaint();\n+\n+        if (isWinner(aiChar)) {\n+            gameOverEvent(\"COMPUTER WIN!!!\");\n+            return;\n+        }\n+\n+        if (checkDraw()) {\n+            gameOverEvent(\"DRAW!!!\");\n+            return;\n+        }\n+\n+    }\n+\n+    public void compTurn(){\n+        int x;\n+        int y;\n+        if (checkCompWin()){\n+            return;\n+        }\n+        if (checkHumanWinNext()){\n+            return;\n+        }\n+        do {\n+        x = RND.nextInt(X_SIZE);\n+        y = RND.nextInt(Y_SIZE);\n+        } while (!isEmpty(x,y));\n+        map[y][x] = aiChar;\n+    }\n+\n+    public boolean isValidTurn(int x, int y) {\n+        return x >= 0 && x < X_SIZE && y >= 0 && y < Y_SIZE;\n+    }\n+\n+    public boolean isEmpty(int x, int y) {\n+        return map[y][x] == emptyChar;\n+    }\n+\n+    private boolean checkCompWin(){\n+        for (int i = 0; i < X_SIZE; i++) {\n+            for (int j = 0; j < Y_SIZE; j++) {\n+                if (isEmpty(j,i)){\n+                    map[i][j] = aiChar;\n+                    if (isWinner(aiChar)) {\n+                        return true;\n+                    }\n+                    map[i][j] = emptyChar;\n+\n+                }\n+\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private boolean checkHumanWinNext(){\n+        for (int i = 0; i < X_SIZE; i++) {\n+            for (int j = 0; j < Y_SIZE; j++) {\n+                if (isEmpty(j,i)){\n+                    map[i][j] = humanChar;\n+                    if (isWinner(humanChar)) {\n+                        map[i][j] = aiChar;\n+                        return true;\n+                    }\n+                    map[i][j] = emptyChar;\n+\n+                }\n+\n+            }\n+        }\n+        return false;\n+    }\n+\n+    private boolean isWinner(int player) {\n+        for (int i = 0; i < X_SIZE; i++) {\n+            for (int j = 0; j < Y_SIZE; j++) {\n+                if (checkLine(i, j, 1, 0, TO_WIN_SEQ, player)) {\n+                    return true;\n+                }\n+                if (checkLine(i, j, 1, 1, TO_WIN_SEQ, player)) {\n+                    return true;\n+                }\n+                if (checkLine(i, j, 0, 1, TO_WIN_SEQ, player)) {\n+                    return true;\n+                }\n+                if (checkLine(i, j, 1, -1, TO_WIN_SEQ, player)) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+    private boolean checkLine(int x, int y, int xVector, int yVector, int len, int player) {\n+    final int finalX = x + (len - 1) * xVector;\n+    final int finalY = y + (len - 1) * yVector;\n+    if (!isValidTurn(finalX, finalY)) {\n+        return false;\n+    }\n+    for (int i = 0; i < len; i++) {\n+        if (map[y + i * yVector][x + i * xVector] != player) {\n+            return false;\n+        }\n+    }\n+    return true;\n+}\n+    public boolean checkDraw() {\n+        for (int i = 0; i < Y_SIZE; i++) {\n+            for (int j = 0; j < X_SIZE; j++) {\n+                if (map[i][j] == emptyChar) {\n+                    return false;\n+                }\n+            }\n+        }\n+        return true;\n+    }\n+\n+}"
  },
  {
    "sha": "2421159409739042c995ededbeff5c2451b7c9aa",
    "filename": "LEVEL1/lesson8/Settings.java",
    "status": "added",
    "additions": 128,
    "deletions": 0,
    "changes": 128,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c/LEVEL1/lesson8/Settings.java",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c/LEVEL1/lesson8/Settings.java",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/LEVEL1/lesson8/Settings.java?ref=9fcfe9d4b8354bc1c6a3e37c47200dc489aeb45c",
    "patch": "@@ -0,0 +1,128 @@\n+package LEVEL1.lesson8;\n+\n+import javax.swing.*;\n+import javax.swing.event.ChangeEvent;\n+import javax.swing.event.ChangeListener;\n+import java.awt.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+\n+public class Settings extends JFrame{\n+    private Playground playground;\n+    private MainMenu mainMenu;\n+    private JRadioButton HvH;\n+    private JRadioButton HvC;\n+    private JSlider pgSize;\n+    private JSlider winSeqLength;\n+    private final int minWinSeq = 3;\n+    private final int minPgSize = 3;\n+    private final int maxPgSize = 10;\n+    private JButton starterBtn;\n+\n+    private static final int SET_X_SET = 600;\n+    private static final int SET_Y_SET = 400;\n+    /** Заберем текущие значения экрана для мультиэкранного режима */\n+    GraphicsDevice dimensionCaster = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();\n+    int WWW = dimensionCaster.getDisplayMode().getWidth()/2-SET_X_SET/2; // Центруем по X\n+    int HHH = dimensionCaster.getDisplayMode().getHeight()/2-SET_Y_SET/2; // Центруем по Y\n+\n+    Settings(MainMenu mainMenu) {\n+        this.mainMenu = mainMenu;\n+        setTitle(\"Settings\");\n+        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n+        setSize(SET_X_SET, SET_Y_SET);\n+        setLocation(WWW, HHH);\n+        getContentPane().setBackground(Color.gray);\n+\n+        setModeMethod();\n+        setPlaygroundMethod();\n+        endSetGotoStart();\n+\n+        setResizable(false);\n+        setVisible(false);\n+\n+    }\n+\n+    private void startNewGame(){\n+        int selectedMode;\n+        int finPgSize = pgSize.getValue();\n+        int finWinSeq = winSeqLength.getValue();\n+        if (HvH.isSelected()){\n+            selectedMode = Playground.GAME_M_HVH;\n+        } else if (HvC.isSelected()) {\n+            selectedMode = Playground.GAME_M_HVC;\n+        } else {\n+            throw new RuntimeException(\"Unknown Game mode\");\n+        }\n+        mainMenu.getSetToStart(selectedMode,finPgSize,finPgSize, finWinSeq);\n+        setVisible(false);\n+    }\n+    private void setModeMethod(){\n+        /** Game options menu */\n+        JPanel mode = new JPanel();\n+        JLabel gameOptions = new JLabel(\"Game Options:\");\n+        HvH = new JRadioButton(\"Human versus Human mode\");\n+        HvC = new JRadioButton(\"Human versus Computer mode\", true);\n+\n+        ButtonGroup gameModeGroup = new ButtonGroup();\n+        gameModeGroup.add(HvH);\n+        gameModeGroup.add(HvC);\n+\n+        mode.setLayout(new GridLayout(10, 1));\n+        add(mode, BorderLayout.WEST);\n+        mode.add(gameOptions);\n+        mode.add(HvH);\n+        mode.add(HvC);\n+\n+\n+    }\n+    private void setPlaygroundMethod(){\n+        JPanel dimensions = new JPanel();\n+        JLabel dimName = new JLabel(\"Field settings: \");\n+        JLabel SIZE_LABEL = new JLabel(\"Playground size: \"+minPgSize);\n+        JLabel WIN_SEQ_LABEL = new JLabel(\"Winner sequence: \"+minWinSeq);\n+\n+        pgSize = new JSlider(minPgSize,maxPgSize,minPgSize);\n+        pgSize.addChangeListener(new ChangeListener() {\n+            @Override\n+            public void stateChanged(ChangeEvent e) {\n+            int curPos = pgSize.getValue();\n+            SIZE_LABEL.setText(\"Playground size: \"+curPos);\n+            winSeqLength.setMaximum(curPos);\n+            }\n+        });\n+        winSeqLength = new JSlider(minWinSeq, minPgSize, minPgSize);\n+        winSeqLength.addChangeListener(new ChangeListener() {\n+            @Override\n+            public void stateChanged(ChangeEvent e) {\n+                WIN_SEQ_LABEL.setText(\"Winner sequence: \" + winSeqLength.getValue());\n+            }\n+        });\n+\n+        dimensions.setLayout(new GridLayout(10,1));\n+        add(dimensions, BorderLayout.EAST);\n+        dimensions.add(dimName);\n+        dimensions.add(new JLabel(\"Choose your playground size:\"));\n+        dimensions.add(SIZE_LABEL);\n+        dimensions.add(pgSize);\n+        dimensions.add(WIN_SEQ_LABEL);\n+        dimensions.add(winSeqLength);\n+\n+\n+    }\n+    private void endSetGotoStart() {\n+        JPanel start = new JPanel();\n+        starterBtn = new JButton(\"START GAME\");\n+        start.setLayout(new GridLayout(1, 1));\n+        add(start, BorderLayout.CENTER);\n+\n+\n+        starterBtn.addActionListener(new ActionListener() {\n+            @Override\n+            public void actionPerformed(ActionEvent e) {\n+                startNewGame();\n+            }\n+        });\n+        start.add(starterBtn);\n+    }\n+}"
  },
  {
    "sha": "85198a6bf3dc2ddbd669ec7aa0ced14ca2c84932",
    "filename": "lesson1/HomeWork.java",
    "status": "removed",
    "additions": 0,
    "deletions": 146,
    "changes": 146,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/lesson1/HomeWork.java",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/lesson1/HomeWork.java",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/lesson1/HomeWork.java?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,146 +0,0 @@\n-package lesson1;\n-\n-/**\n- * HOMEWORK LESSON 1\n- */\n-\n-import java.util.Scanner;\n-\n-/** Задание 1. Написать метод вычисляющий выражение a * (b + (c / d)) и возвращающий результат с плавающей точкой, где a, b, c, d – целочисленные входные параметры этого метода */\n-//\n-//public class FirstClass {\n-//    public static void main(String[] args) {\n-//\n-//        // Создаем переменные, вводим в них данные для передачи потом в мат.метод.\n-//        Scanner in = new Scanner(System.in);\n-//        System.out.print(\"Введите число a = \");\n-//        int a = in.nextInt();\n-//        System.out.print(\"Введите число b = \");\n-//        int b = in.nextInt();\n-//        System.out.print(\"Введите число c = \");\n-//        int c = in.nextInt();\n-//        System.out.print(\"Введите число d = \");\n-//        int d = in.nextInt();\n-//\n-//        // Запускаем метод, передавая в него переменные a, b, c, d\n-//        System.out.print(\"Рассчет по формуле: a * (b + (c / d)) = \");\n-//        float result = mathMethod(a, b, c, d);\n-//        System.out.print(result);\n-//    }\n-//\n-//    // Создаем мат.метод\n-//    public static float mathMethod(int argA, int argB, int argC, int argD) {\n-//        return argA * (argB + (argC / argD));\n-//    }\n-//}\n-\n-/** Задание 2. Написать метод, принимающий на вход два целых числа, и проверяющий что их сумма лежит в пределах от 10 до 20(включительно), если да – вернуть true, в противном случае – false */\n-//public class FirstClass {\n-//    public static void main(String[] args) {\n-//\n-//        // Создаем переменные, вводим в них данные для передачи потом в метод.\n-//        Scanner in = new Scanner(System.in);\n-//        System.out.print(\"Введите число 1 = \");\n-//        int numA = in.nextInt();\n-//        System.out.print(\"Введите число 2 = \");\n-//        int numB = in.nextInt();\n-//\n-//        // Запускаем метод, передавая в него переменные numA, numB\n-//        System.out.print(\"Сумма чисел в пределах (10, 20] = \");\n-//        boolean result = checkNumbers(numA, numB);\n-//        System.out.print(result);\n-//    }\n-//\n-//    // Создаем метод\n-//    public static boolean checkNumbers(int argA, int argB) {\n-//        int sum = argA + argB;\n-//        if (sum > 10 && sum <= 20) {\n-//            return true;\n-//        }\n-//        else {\n-//            return false;\n-//        }\n-//    }\n-//}\n-\n-/** Задание 3. Написать метод, которому в качестве параметра передается целое число, метод должен проверить положительное ли число передали, или отрицательное.\n- *  Замечание: ноль считаем положительным числом. Результат работы метода вывести в консоль */\n-//public class FirstClass {\n-//    public static void main(String[] args) {\n-//\n-//        // Создаем переменную, вводим в нее данные для передачи потом в метод.\n-//        Scanner in = new Scanner(System.in);\n-//        System.out.print(\"Введите число = \");\n-//        int numA = in.nextInt();\n-//\n-//        // Запускаем метод, передавая в него чило из переменной\n-//        System.out.print(\"Ваше число: \");\n-//        String result = posOrNeg(numA);\n-//        System.out.print(result);\n-//    }\n-//\n-//    // Создаем метод\n-//    public static String posOrNeg(int argA) {\n-//        if (argA >= 0) {\n-//            return \"положительное\";\n-//        }\n-//        else {\n-//            return \"отрицательное\";\n-//        }\n-//    }\n-//}\n-\n-/** Задание 4. Написать метод, которому в качестве параметра передается строка, обозначающая имя, метод должен вернуть приветственное сообщение «Привет, переданное_имя!»; Вывести приветствие в консоль. */\n-//public class FirstClass {\n-//    public static void main(String[] args) {\n-//\n-//        // Создаем переменную, вводим в нее данные для передачи потом в метод.\n-//        Scanner in = new Scanner(System.in);\n-//        System.out.print(\"Введите имя = \");\n-//        String name = in.next();\n-//\n-//        // Запускаем метод, передавая в него переменные a, b, c, d\n-//        System.out.print(\"Привет, \");\n-//        String result = namer(name+\"!\");\n-//        System.out.print(result);\n-//    }\n-//\n-//    // Создаем метод\n-//    public static String namer(String argA) {\n-//        return argA;\n-//        }\n-//}\n-\n-/** Задание 5. Написать метод, который определяет является ли год високосным. Каждый 4-й год является високосным, кроме каждого 100-го, при этом каждый 400-й – високосный.\n- * Для проверки работы вывести результаты работы метода в консоль */\n-//public class FirstClass {\n-//    public static void main(String[] args) {\n-//\n-//        // Создаем переменную, вводим в нее данные для передачи потом в метод.\n-//        Scanner in = new Scanner(System.in);\n-//        System.out.print(\"Введите год = \");\n-//        int year = in.nextInt();\n-//\n-//        // Запускаем метод, передавая в него введенный в переменную год\n-//        System.out.print(\"Год \" + year + \": \");\n-//\n-//        String result = checkYears(year);\n-//        System.out.print(result);\n-//    }\n-//\n-//    // Создаем метод\n-//    public static String checkYears(int argA) {\n-//        if (argA % 4 == 0) {\n-//            if (argA % 100 == 0) {\n-//                if (argA % 400 == 0) {\n-//                    return \"високосный\";\n-//                }\n-//                return \"обычный\";\n-//            }\n-//            return \"високосный\";\n-//        }\n-//        else {\n-//            return \"обычный\";\n-//        }\n-//    }\n-//}\n\\ No newline at end of file"
  },
  {
    "sha": "ef2fc53c2fbf1e8467f891c090987c778817fa36",
    "filename": "lesson1/java/io/annotations.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/lesson1/java/io/annotations.xml",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/lesson1/java/io/annotations.xml",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/lesson1/java/io/annotations.xml?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1 +0,0 @@\n-<root></root>\n\\ No newline at end of file"
  },
  {
    "sha": "49e0e9de90a242b873fb6d32c98e2053257d8e20",
    "filename": "lesson4/Employee.java",
    "status": "removed",
    "additions": 0,
    "deletions": 81,
    "changes": 81,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/lesson4/Employee.java",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/lesson4/Employee.java",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/lesson4/Employee.java?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,81 +0,0 @@\n-package lesson4;\n-\n-/** 1 Создать класс \"Сотрудник\" с полями: ФИО, должность, телефон, зарплата, возраст;\n- 2 Конструктор класса должен заполнять эти поля при создании объекта;\n- 3 Внутри класса «Сотрудник» написать методы, которые возвращают значение каждого поля;\n- 4 Вывести при помощи методов из пункта 3 ФИО и должность.\n- 5 Создать массив из 5 сотрудников. С помощью цикла вывести информацию только о сотрудниках старше 40 лет;\n- 6* Создать метод, повышающий зарплату всем сотрудникам старше 35 лет на 10000;\n- 7** При создании экземпляра класса Сотрудник присваивать ему уникальный порядковый номер. */\n-\n-public class Employee {\n-    /** Переменные класса */\n-    static int id = 0; // вводим переменную для счетчика\n-    String surname;\n-    String name;\n-    String secName;\n-    String position;\n-    String telephone;\n-    int salary;\n-    int age;\n-\n-    /** Задание 2. Employee конструктор */\n-    Employee(int id, String surname,String name,String secName,String position,String telephone,int salary,int age) {\n-        this.id = id;\n-        this.surname = surname;\n-        this.name = name;\n-        this.secName = secName;\n-        this.position = position;\n-        this.telephone = telephone;\n-        this.salary = salary;\n-        this.age = age;\n-    }\n-\n-    /** Задание 3. Get методы */\n-    public int getEmpId() {return createId();} // возвращаем метод уникального ID\n-\n-    public String getSurname() {\n-        return surname;\n-    }\n-\n-    public String getName() {\n-        return name;\n-    }\n-\n-    public String getSecName() {\n-        return secName;\n-    }\n-\n-    public String getPosition() {\n-        return position;\n-    }\n-\n-    public String getTelephone() {\n-        return telephone;\n-    }\n-\n-    public int getSalary() {\n-        return salary;\n-    }\n-\n-    public int getAge() {\n-        return age;\n-    }\n-\n-    /** Задание 6. Метод повышения зарплаты */\n-    public static int increaseSalary (int oldSalary, int compareAge) {\n-        if (compareAge > 35) {\n-            oldSalary += 10000;\n-        }\n-        return oldSalary;\n-    }\n-\n-    /** Задание 7. Метод уникального id */\n-    public static int createId () {\n-        return id++; // увеличиваем счетчик переменной id на 1\n-    }\n-\n-    public static void main(String[] args) {\n-\n-    }\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "98f2bc96ec884b6c5771d504770ca713f28bde77",
    "filename": "lesson4/Homework4.java",
    "status": "removed",
    "additions": 0,
    "deletions": 39,
    "changes": 39,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/lesson4/Homework4.java",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/lesson4/Homework4.java",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/lesson4/Homework4.java?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,39 +0,0 @@\n-package lesson4;\n-\n-public class Homework4 {\n-\n-    /** Точка входа */\n-    public static void main(String[] args) {\n-        /** Создаем сотрудников */\n-        Employee employee1 = new Employee(Employee.id, \"Boltzmann\", \"Brain\", \"Universovich\", \"Director\", \"8916-568-8974\", 320000, 54);\n-        Employee employee2 = new Employee(Employee.id, \"Eremeeva\", \"Galina\", \"Stepanovna\", \"Bookeeper\", \"8905-123-7424\", 150000, 56);\n-        Employee employee3 = new Employee(Employee.id, \"Maksimov\", \"Alexey\", \"Grigorievich\", \"Project Manager\", \"8910-253-1269\", 100000, 35);\n-        Employee employee4 = new Employee(Employee.id, \"Polyakova\", \"Anna\", \"Valentinovna\", \"Developer\", \"8963-133-4389\", 200000, 38);\n-        Employee employee5 = new Employee(Employee.id, \"Rybchenko\", \"Oleg\", \"Vitalievich\", \"QA Lead\", \"8495-777-7777\", 200000, 36);\n-\n-        /** Задание 4. Выводим ФИО и должность сотрудника */\n-        System.out.println(\"Задание 4:\");\n-        System.out.println(\"ID: \" + employee1.getEmpId() + \"\\nSurname: \" + employee1.getSurname() + \"\\nName: \" + employee1.getName() + \"\\nSecond Name: \" + employee1.getSecName() + \"\\nPostition: \" + employee1.getPosition() + \"\\nTelephone: \" +employee1.getTelephone() + \"\\nSalary: \" +employee1.getSalary() + \"\\nAge: \" +employee1.getAge() + \"\\n\");\n-        System.out.println(\"ID: \" + employee2.getEmpId() + \"\\nSurname: \" + employee2.getSurname() + \"\\nName: \" + employee2.getName() + \"\\nSecond Name: \" + employee2.getSecName() + \"\\nPostition: \" + employee2.getPosition() + \"\\nTelephone: \" +employee2.getTelephone() + \"\\nSalary: \" +employee2.getSalary() + \"\\nAge: \" +employee2.getAge() + \"\\n\");\n-\n-        /** Задание 5. Создаем массив и цикл */\n-        System.out.println(\"Задание 5:\");\n-        Employee[] empArray = new Employee[5];\n-        empArray[0] = employee1;\n-        empArray[1] = employee2;\n-        empArray[2] = employee3;\n-        empArray[3] = employee4;\n-        empArray[4] = employee5;\n-        for (int i = 0; i < empArray.length; i++) {\n-            if (empArray[i].age > 40) {\n-                System.out.println(\"ID: \" + empArray[i].getEmpId() + \"\\nSurname: \" + empArray[i].getSurname() + \"\\nName: \" + empArray[i].getName() + \"\\nSecond Name: \" + empArray[i].getSecName() + \"\\nPostition: \" + empArray[i].getPosition() + \"\\nTelephone: \" +empArray[i].getTelephone() + \"\\nSalary: \" +empArray[i].getSalary() + \"\\nAge: \" +empArray[i].getAge() + \"\\n\");\n-            }\n-        }\n-\n-        /** Задание 6. Реализация метода */\n-        System.out.println(\"Задание 6:\");\n-        for (int i = 0; i < empArray.length; i++) {\n-            System.out.println(\"ID: \" + empArray[i].getEmpId() + \"\\nSurname: \" + empArray[i].getSurname() + \"\\nName: \" + empArray[i].getName() + \"\\nSecond Name: \" + empArray[i].getSecName() + \"\\nPostition: \" + empArray[i].getPosition() + \"\\nTelephone: \" +empArray[i].getTelephone() + \"\\nSalary: \" +Employee.increaseSalary(empArray[i].salary, empArray[i].age) + \"\\nAge: \" +empArray[i].getAge() + \"\\n\");\n-        }\n-    }\n-}"
  },
  {
    "sha": "26d33521af10bcc7fd8cea344038eaaeb78d0ef5",
    "filename": "out/production/Java-Repository/.idea/.gitignore",
    "status": "removed",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/.idea/.gitignore",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/.idea/.gitignore",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/out/production/Java-Repository/.idea/.gitignore?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,3 +0,0 @@\n-# Default ignored files\n-/shelf/\n-/workspace.xml"
  },
  {
    "sha": "40674af8d699c0ff4e92f9e8639ff4904ce4bdea",
    "filename": "out/production/Java-Repository/.idea/misc.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/.idea/misc.xml",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/out/production/Java-Repository/.idea/misc.xml?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,6 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_15\" project-jdk-name=\"15\" project-jdk-type=\"JavaSDK\">\n-    <output url=\"file://$PROJECT_DIR$/out\" />\n-  </component>\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "3bc429ba674d56c82175153c2173eaa74b04ac43",
    "filename": "out/production/Java-Repository/.idea/modules.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/.idea/modules.xml",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/.idea/modules.xml",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/out/production/Java-Repository/.idea/modules.xml?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"ProjectModuleManager\">\n-    <modules>\n-      <module fileurl=\"file://$PROJECT_DIR$/Java-Repository.iml\" filepath=\"$PROJECT_DIR$/Java-Repository.iml\" />\n-    </modules>\n-  </component>\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "35eb1ddfbbc029bcab630581847471d7f238ec53",
    "filename": "out/production/Java-Repository/.idea/vcs.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/.idea/vcs.xml",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/out/production/Java-Repository/.idea/vcs.xml?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,6 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project version=\"4\">\n-  <component name=\"VcsDirectoryMappings\">\n-    <mapping directory=\"\" vcs=\"Git\" />\n-  </component>\n-</project>\n\\ No newline at end of file"
  },
  {
    "sha": "b107a2dd81165eaaf682ad3da030668b937fbb6c",
    "filename": "out/production/Java-Repository/Java-Repository.iml",
    "status": "removed",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/Java-Repository.iml",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/Java-Repository.iml",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/out/production/Java-Repository/Java-Repository.iml?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1,11 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<module type=\"JAVA_MODULE\" version=\"4\">\n-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n-    <exclude-output />\n-    <content url=\"file://$MODULE_DIR$\">\n-      <sourceFolder url=\"file://$MODULE_DIR$\" isTestSource=\"false\" />\n-    </content>\n-    <orderEntry type=\"inheritedJdk\" />\n-    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n-  </component>\n-</module>\n\\ No newline at end of file"
  },
  {
    "sha": "4833fcda458de9d8b03c4048bba6d2b1c1d192ce",
    "filename": "out/production/Java-Repository/README.md",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/README.md",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/README.md",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/out/production/Java-Repository/README.md?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1 +0,0 @@\n-Java-Repository"
  },
  {
    "sha": "ef2fc53c2fbf1e8467f891c090987c778817fa36",
    "filename": "out/production/Java-Repository/lesson1/java/io/annotations.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/lesson1/java/io/annotations.xml",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/lesson1/java/io/annotations.xml",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/out/production/Java-Repository/lesson1/java/io/annotations.xml?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd",
    "patch": "@@ -1 +0,0 @@\n-<root></root>\n\\ No newline at end of file"
  },
  {
    "sha": "7b0eb7d8b06aa986f199a229404e814f543825ef",
    "filename": "out/production/Java-Repository/lesson4/Employee.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/lesson4/Employee.class",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/lesson4/Employee.class",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/out/production/Java-Repository/lesson4/Employee.class?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd"
  },
  {
    "sha": "9de3d8717c1c613932f47d0b42abeb71c80f035a",
    "filename": "out/production/Java-Repository/lesson4/Homework4.class",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/blob/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/lesson4/Homework4.class",
    "raw_url": "https://github.com/RybchenkoOV/Java-Repository-Studies-/raw/4e2382fc3125405f78fdd38ab236758ea5d875dd/out/production/Java-Repository/lesson4/Homework4.class",
    "contents_url": "https://api.github.com/repos/RybchenkoOV/Java-Repository-Studies-/contents/out/production/Java-Repository/lesson4/Homework4.class?ref=4e2382fc3125405f78fdd38ab236758ea5d875dd"
  }
]
