[
  {
    "sha": "f53dabc3180ca26b2512102d1a2cd929e1c29e40",
    "filename": ".gitignore",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/AlexeyBaranau/Andersen_Trainee/blob/2f39ac2ea1e177adfbedb087fc8c0cbd1b3b8817/.gitignore",
    "raw_url": "https://github.com/AlexeyBaranau/Andersen_Trainee/raw/2f39ac2ea1e177adfbedb087fc8c0cbd1b3b8817/.gitignore",
    "contents_url": "https://api.github.com/repos/AlexeyBaranau/Andersen_Trainee/contents/.gitignore?ref=2f39ac2ea1e177adfbedb087fc8c0cbd1b3b8817",
    "patch": "@@ -2,3 +2,5 @@\n target\n *.iml\n out/\n+lib/\n+src/main/resources/"
  },
  {
    "sha": "f54cedcda8f040c942edb893bad0a5a6f9dd34b4",
    "filename": "src/main/java/FAT12321_streamAPI/StreamApiDemo.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/AlexeyBaranau/Andersen_Trainee/blob/2f39ac2ea1e177adfbedb087fc8c0cbd1b3b8817/src/main/java/FAT12321_streamAPI/StreamApiDemo.java",
    "raw_url": "https://github.com/AlexeyBaranau/Andersen_Trainee/raw/2f39ac2ea1e177adfbedb087fc8c0cbd1b3b8817/src/main/java/FAT12321_streamAPI/StreamApiDemo.java",
    "contents_url": "https://api.github.com/repos/AlexeyBaranau/Andersen_Trainee/contents/src/main/java/FAT12321_streamAPI/StreamApiDemo.java?ref=2f39ac2ea1e177adfbedb087fc8c0cbd1b3b8817",
    "patch": "@@ -0,0 +1,43 @@\n+package FAT12321_streamAPI;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+public class StreamApiDemo {\n+  private static final int VALUE = 15;\n+\n+  public static void main(String[] args) {\n+    List<Integer> list = Arrays.asList(25, 36, 1, 54, 37, 3, 9, 8);\n+\n+    list.stream().sorted().filter(i -> i % 2 == 0).map(i -> i + VALUE).forEach(System.out::println);\n+    System.out.println(\"=====================================================\");\n+    list.stream().sorted().parallel().map(i -> i + VALUE).forEach(System.out::println);\n+    System.out.println(\"=====================================================\");\n+    list.stream().sorted().parallel().map(i -> i + VALUE).forEachOrdered(System.out::println);\n+    System.out.println(\"=====================================================\");\n+\n+    List<Integer> nums = Arrays.asList(1, 2, 3);\n+    Stream<Integer> resultStream = nums.stream();\n+    resultStream = addElement(resultStream, 4);\n+    resultStream = addElement(resultStream, 5);\n+    resultStream = addElement(resultStream, 6);\n+    resultStream.forEach(System.out::println);\n+    System.out.println(\"=====================================================\");\n+\n+    List<Integer> nums1 = new ArrayList<>();\n+    nums1.add(1);\n+    nums1.add(2);\n+    nums1.add(3);\n+    Stream stream = nums1.stream();\n+    nums1.add(4);\n+    nums1.add(5);\n+    nums1.add(6);\n+    stream.forEach(System.out::println);\n+  }\n+\n+  public static <T> Stream<T> addElement(Stream<T> stream, T element) {\n+    return Stream.concat(stream, Stream.of(element));\n+  }\n+}"
  }
]
