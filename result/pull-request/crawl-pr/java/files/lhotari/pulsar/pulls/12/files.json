[
  {
    "sha": "2d1f61367ac2f0309914c4e1c4ade6e8ebc46ed1",
    "filename": ".github/actions/clean-disk/action.yml",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/lhotari/pulsar/blob/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/actions/clean-disk/action.yml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/actions/clean-disk/action.yml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/actions/clean-disk/action.yml?ref=c2cd7105bb6dc5c46940ae4743e0525c8aa12c68",
    "patch": "@@ -0,0 +1,65 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+name: clean disk\n+description: makes some more space available on the disk by removing files\n+inputs:\n+  mode:\n+    description: \"Use 'full' to check as much as possible\"\n+    required: false\n+runs:\n+  using: composite\n+  steps:\n+    - run: |\n+        if [[ \"$OSTYPE\" == \"linux-gnu\"* ]]; then\n+          directories=(/usr/local/lib/android /opt/ghc)\n+          if [[ \"${{ inputs.mode }}\" == \"full\" ]]; then\n+            # purge unnecessary packages\n+            dpkg-query -Wf '${Package}\\n' | grep -E 'llvm-[[:digit:]]+-dev|lldb-[[:digit:]]+|ghc|dotnet|aspnet' | xargs sudo eatmydata dpkg --purge\n+            sudo eatmydata dpkg --purge google-cloud-sdk azure-cli hhvm powershell google-chrome-stable firefox\n+\n+            # remove these directories only when mode is 'full'\n+            directories+=(/usr/share/dotnet /opt/hostedtoolcache /opt/az)\n+          fi\n+          emptydir=/tmp/empty$$/\n+          mkdir $emptydir\n+          echo \"::group::Available diskspace\"\n+          time df -BM / /mnt\n+          echo \"::endgroup::\"\n+          for directory in \"${directories[@]}\"; do\n+            echo \"::group::Removing $directory\"\n+            # fast way to delete a lot of files on linux\n+            time sudo eatmydata rsync -a --delete $emptydir ${directory}/\n+            time sudo eatmydata rm -rf ${directory}\n+            time df -BM / /mnt\n+            echo \"::endgroup::\"\n+          done\n+          echo \"::group::Cleaning apt state\"\n+          time sudo bash -c \"apt-get clean; apt-get autoclean; apt-get -y --purge autoremove\"\n+          time df -BM / /mnt\n+          echo \"::endgroup::\"\n+          echo \"::group::Removing unused docker images\"\n+          time docker system prune -a -f\n+          time df -BM / /mnt\n+          echo \"::endgroup::\"\n+        fi\n+        echo \"::group::Available diskspace\"\n+        time df -BM / /mnt\n+        echo \"::endgroup::\"\n+      shell: bash"
  },
  {
    "sha": "959d28b38ca1141aaa796134f49e6502a1af5106",
    "filename": ".github/actions/copy-test-reports/action.yml",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/lhotari/pulsar/blob/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/actions/copy-test-reports/action.yml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/actions/copy-test-reports/action.yml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/actions/copy-test-reports/action.yml?ref=c2cd7105bb6dc5c46940ae4743e0525c8aa12c68",
    "patch": "@@ -0,0 +1,27 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+name: Copy test reports\n+description: Aggregates all test reports to ./test-reports and ./surefire-reports directories\n+runs:\n+  using: composite\n+  steps:\n+    - run: |\n+        ./build/ci_build_functions.sh ci_move_test_reports\n+      shell: bash"
  },
  {
    "sha": "cd9d9551a4fe31376686d5b4620a6b06a6e9b2a2",
    "filename": ".github/actions/log-runner-vm-state/action.yml",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/lhotari/pulsar/blob/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/actions/log-runner-vm-state/action.yml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/actions/log-runner-vm-state/action.yml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/actions/log-runner-vm-state/action.yml?ref=c2cd7105bb6dc5c46940ae4743e0525c8aa12c68",
    "patch": "@@ -0,0 +1,35 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+name: Log Runner VM state\n+description: Logs available disk space, memory, etc.\n+runs:\n+  using: composite\n+  steps:\n+    - run: |\n+        if [[ \"$OSTYPE\" == \"linux-gnu\"* ]]; then\n+          echo \"::group::Available diskspace\"\n+          df -BM / /mnt /tmp\n+          sudo du -ms /tmp/* | sort -rn || true\n+          echo \"::endgroup::\"\n+          echo \"::group::Available memory\"\n+          free -m\n+          echo \"::endgroup::\"\n+        fi\n+      shell: bash"
  },
  {
    "sha": "154e834383c4554409c01e6a2502717e30671bba",
    "filename": ".github/actions/merge-test-reports/action.yml",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/lhotari/pulsar/blob/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/actions/merge-test-reports/action.yml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/actions/merge-test-reports/action.yml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/actions/merge-test-reports/action.yml?ref=c2cd7105bb6dc5c46940ae4743e0525c8aa12c68",
    "patch": "@@ -0,0 +1,44 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+name: Merge test reports to a single file\n+description: Merges junit test reports to a single file\n+inputs:\n+  summary_title:\n+    description: 'The title for the summary'\n+    required: false\n+runs:\n+  using: composite\n+  steps:\n+    - run: |\n+        if ls test-reports/*.xml 2>/dev/null; then\n+          echo '::group::Installing tooling...'\n+          # this requires \"runs-on: ubuntu-20.04\" since junitparser package is not available in previous Ubuntu version\n+          sudo apt-get -y install xmlstarlet junitparser >/dev/null\n+          echo '::endgroup::'\n+          echo '::group::Parsing and merging test reports...'\n+          junitparser merge test-reports/*.xml merged-test-report.xml || true\n+          echo '::endgroup::'\n+          if [[ -f merged-test-report.xml && -n \"${{ inputs.summary_title }}\" ]]; then\n+            xmlstarlet sel -T -t -m /testsuites -o \"::warning::${{ inputs.summary_title }} \" -v '@tests' -o ' tests, ' -v '@failures' -o ' failures, ' -v '@errors' -o ' errors, ' -v '@skipped' -o ' skipped, duration ' -v 'number(@time)' -o 's'  merged-test-report.xml\n+          fi\n+        else\n+          echo 'No test-reports/*.xml files found.'\n+        fi\n+      shell: bash"
  },
  {
    "sha": "880193a6eb95e9fdf0dc70464f5c44fd42160b94",
    "filename": ".github/actions/tune-runner-vm/action.yml",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/lhotari/pulsar/blob/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/actions/tune-runner-vm/action.yml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/actions/tune-runner-vm/action.yml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/actions/tune-runner-vm/action.yml?ref=c2cd7105bb6dc5c46940ae4743e0525c8aa12c68",
    "patch": "@@ -0,0 +1,73 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+#\n+\n+name: Tune Runner VM performance\n+description: tunes the operation system performance related parameters for maximum performance of the Runner VM\n+inputs:\n+  no_tmpfs:\n+    description: \"Set to true to skip configuring tmpfs for /tmp\"\n+    required: false\n+runs:\n+  using: composite\n+  steps:\n+    - run: |\n+        if [[ \"$OSTYPE\" == \"linux-gnu\"* ]]; then\n+          set -x\n+          sudo bash -c \"while ! systemctl is-system-running; do echo 'Waiting for systemctl to complete startup'; sleep 1; done\"\n+          # disable discard/trim at device level since remount with nodiscard doesn't seem to be effective\n+          # https://www.spinics.net/lists/linux-ide/msg52562.html\n+          for i in /sys/block/sd*/queue/discard_max_bytes; do\n+            echo 0|sudo tee $i\n+          done\n+          sudo mount -o remount,nodiscard,commit=999999,barrier=0 /\n+          sudo mount -o remount,nodiscard,commit=999999,barrier=0 /mnt\n+          echo 1 | sudo tee /proc/sys/vm/swappiness\n+          echo madvise | sudo tee /sys/kernel/mm/transparent_hugepage/enabled\n+          # disable any background jobs that run SSD discard/trim\n+          sudo systemctl disable fstrim.timer || true\n+          sudo systemctl stop fstrim.timer || true\n+          sudo systemctl disable fstrim.service || true\n+          sudo systemctl stop fstrim.service || true\n+\n+          # enable docker experimental mode which is\n+          # required for using \"docker build --squash\" / \"-Ddockerfile.build.squash=true\"\n+          daemon_json=\"$(sudo cat /etc/docker/daemon.json  | jq '.experimental = true')\"\n+          echo \"$daemon_json\" | sudo tee /etc/docker/daemon.json\n+          # use pure go resolver for Docker\n+          sudo mkdir /etc/systemd/system/docker.service.d\n+          echo -e '[Service]\\nEnvironment=\"GODEBUG=netdns=go\"' | sudo tee /etc/systemd/system/docker.service.d/netdns.conf\n+          sudo systemctl daemon-reload\n+          # restart docker daemon\n+          sudo systemctl restart docker\n+\n+          # configure retries for apt since downloads fail occasionally\n+          echo 'APT::Acquire::Retries \"3\";' | sudo tee /etc/apt/apt.conf.d/80-retries\n+          # update apt package listing with retries so that installation doesn't require \"apt-get update\"\n+          sudo bash -c \"apt-get update || (sleep 5; apt-get update) || (sleep 5; apt-get update)\" > /dev/null\n+          # install eatmydata package\n+          sudo apt-get -y install eatmydata\n+\n+          if [[ \"${{ inputs.no_tmpfs }}\" != \"true\" ]]; then\n+              # add another swapfile so that tmpfs can overflow to swap\n+              sudo bash -c 'sudo fallocate -l 4G /mnt/swapfile2; chmod 0600 /mnt/swapfile2; mkswap /mnt/swapfile2; swapon /mnt/swapfile2'\n+              # enable /tmp on tmpfs with 2000M maxsize\n+              sudo bash -c 'cp /usr/share/systemd/tmp.mount /etc/systemd/system/;systemctl enable tmp.mount;systemctl start tmp.mount;mount -o remount,size=2000M /tmp'\n+          fi\n+        fi\n+      shell: bash"
  },
  {
    "sha": "c9ae03f57deea13cf6ff61f7d8337609e3fa53ef",
    "filename": ".github/workflows/ci-build-macos.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 63,
    "changes": 63,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-build-macos.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-build-macos.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-build-macos.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,63 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Build - MacOS\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-    paths-ignore: ['site2/**', 'deployment/**']\n-  push:\n-    branches:\n-      - branch-*\n-    paths-ignore: ['site2/**', 'deployment/**']\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  build:\n-    name:\n-    runs-on: macos-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache Maven dependencies\n-        uses: actions/cache@v2\n-        with:\n-          path: |\n-            ~/.m2/repository\n-            !~/.m2/repository/org/apache/pulsar\n-            !~/.m2/.gradle-enterprise\n-          key: ${{ runner.os }}-maven-dependencies-${{ hashFiles('**/pom.xml') }}\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        with:\n-          java-version: 1.8\n-\n-      - name: build package\n-        run: mvn -B clean install -DskipTests"
  },
  {
    "sha": "4a77e373034e204659dd31aaf151ef8608596e8f",
    "filename": ".github/workflows/ci-cancel-duplicate-workflows.yaml",
    "status": "modified",
    "additions": 3,
    "deletions": 153,
    "changes": 156,
    "blob_url": "https://github.com/lhotari/pulsar/blob/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/workflows/ci-cancel-duplicate-workflows.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/workflows/ci-cancel-duplicate-workflows.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-cancel-duplicate-workflows.yaml?ref=c2cd7105bb6dc5c46940ae4743e0525c8aa12c68",
    "patch": "@@ -21,7 +21,7 @@ name: CI - Cancel duplicate workflows\n on:\n   workflow_run:\n     # this could be any workflow that is always executed by PUSH/PR operation\n-    workflows: [\"CI - Unit\"]\n+    workflows: [\"Pulsar CI\"]\n     types: ['requested']\n \n jobs:\n@@ -31,159 +31,9 @@ jobs:\n     steps:\n       # the potiuk/cancel-workflow-run action has been allow-listed by\n       # the Apache Infrastructure\n-      - name: cancel duplicate ci-build-macos.yaml\n+      - name: cancel duplicate pulsar-ci.yaml\n         uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n         with:\n           token: ${{ secrets.GITHUB_TOKEN }}\n           cancelMode: allDuplicates\n-          workflowFileName: ci-build-macos.yaml\n-      - name: cancel duplicate ci-go-functions-style.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-go-functions-style.yaml\n-      - name: cancel duplicate ci-go-functions-test.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-go-functions-test.yaml\n-      - name: cancel duplicate ci-integration-backwards-compatibility.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-backwards-compatibility.yaml\n-      - name: cancel duplicate ci-integration-cli.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-cli.yaml\n-      - name: cancel duplicate ci-integration-function-state.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-function-state.yaml\n-      - name: cancel duplicate ci-integration-messaging.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName:  ci-integration-messaging.yaml\n-      - name: cancel duplicate ci-integration-process.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-process.yaml\n-      - name: cancel duplicate ci-integration-schema.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-schema.yaml\n-      - name: cancel duplicate ci-integration-sql.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-sql.yaml\n-      - name: cancel duplicate ci-integration-standalone.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-standalone.yaml\n-      - name: cancel duplicate ci-integration-thread.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-thread.yaml\n-      - name: cancel duplicate\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-tiered-filesystem.yaml\n-      - name: cancel duplicate\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-tiered-filesystem.yaml\n-      - name: cancel duplicate ci-license.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-license.yaml\n-      - name: cancel duplicate ci-integration-tiered-jcloud.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-tiered-jcloud.yaml\n-      - name: cancel duplicate ci-integration-transaction.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-integration-transaction.yaml\n-      - name: cancel duplicate ci-pulsar-website-build.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-pulsar-website-build.yaml\n-      - name: cancel duplicate ci-shade-test.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-shade-test.yaml\n-      - name: cancel duplicate ci-unit.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-unit.yaml\n-      - name: cancel duplicate ci-unit-broker-broker-gp1.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-unit-broker-broker-gp1.yaml\n-      - name: cancel duplicate ci-unit-broker-broker-gp2.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-unit-broker-broker-gp2.yaml\n-      - name: cancel duplicate ci-unit-broker-client-api.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-unit-broker-client-api.yaml\n-      - name: cancel duplicate ci-unit-broker-client-impl.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-unit-broker-client-impl.yaml\n-      - name: cancel duplicate ci-unit-broker-other.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-unit-broker-other.yaml\n-      - name: cancel duplicate ci-unit-proxy.yaml\n-        uses: potiuk/cancel-workflow-runs@953e057dc81d3458935a18d1184c386b0f6b5738\n-        with:\n-          token: ${{ secrets.GITHUB_TOKEN }}\n-          cancelMode: allDuplicates\n-          workflowFileName: ci-unit-proxy.yaml\n+          workflowFileName: pulsar-ci.yaml\n\\ No newline at end of file"
  },
  {
    "sha": "0e267f58a8a04b2844b0dfed7d7a87a24c6d6afb",
    "filename": ".github/workflows/ci-cpp.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 89,
    "changes": 89,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-cpp.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-cpp.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-cpp.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,89 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - CPP, Python Tests\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  cpp-tests:\n-    name:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Cache local Maven repository\n-        if: steps.docs.outputs.changed_only == 'no'\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -f /swapfile\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: build package\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -ntp -q install -Pcore-modules -DskipTests\n-\n-      - name: build cpp artifacts\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          echo \"Build C++ client library\"\n-          export CMAKE_ARGS=\"-DCMAKE_BUILD_TYPE=Debug -DBUILD_DYNAMIC_LIB=OFF -DPYTHON_INCLUDE_DIR=/usr/include/python2.7 -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython2.7.so\"\n-          pulsar-client-cpp/docker-build.sh\n-\n-      - name: run c++ tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: pulsar-client-cpp/docker-tests.sh"
  },
  {
    "sha": "122c83534ed045539c1fe3d9552ca0e05e928766",
    "filename": ".github/workflows/ci-go-functions-style.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 84,
    "changes": 84,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-go-functions-style.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-go-functions-style.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-go-functions-style.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,84 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Go Functions style check\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-    paths:\n-      - '.github/workflows/**'\n-      - 'pulsar-function-go/**'\n-  push:\n-    branches:\n-      - branch-*\n-    paths:\n-      - '.github/workflows/**'\n-      - 'pulsar-function-go/**'\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-  check-style:\n-\n-    name: Go ${{ matrix.go-version }} Functions style check\n-    runs-on: ubuntu-latest\n-    strategy:\n-      matrix:\n-        go-version: [1.11, 1.12, 1.13, 1.14]\n-\n-    steps:\n-      - name: Check out code into the Go module directory\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up Go\n-        uses: actions/setup-go@v2\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          go-version: ${{ matrix.go-version }}\n-        id: go\n-\n-      - name: InstallTool\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          cd pulsar-function-go\n-          wget -O - -q https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s v1.18.0\n-          ./bin/golangci-lint --version\n-\n-      - name: Build\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          cd pulsar-function-go\n-          go build ./...\n-\n-      - name: CheckStyle\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          cd pulsar-function-go\n-          ./bin/golangci-lint run -c ./golangci.yml ./pf"
  },
  {
    "sha": "dd90d8658db8b8afd86fd37e6b60ef0fa0abfe8e",
    "filename": ".github/workflows/ci-go-functions-test.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 73,
    "changes": 73,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-go-functions-test.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-go-functions-test.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-go-functions-test.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,73 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Go Functions Tests\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-    paths:\n-      - '.github/workflows/**'\n-      - 'pulsar-function-go/**'\n-  push:\n-    branches:\n-      - branch-*\n-    paths:\n-      - '.github/workflows/**'\n-      - 'pulsar-function-go/**'\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  go-functions-tests:\n-    name: Run Go Tests\n-    strategy:\n-      matrix:\n-        go-version: [1.11.x, 1.12.x, 1.13.x, 1.14.x]\n-        platform: [ubuntu-latest]\n-    runs-on: ${{ matrix.platform }}\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: Check out code into the Go module directory\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up Go\n-        uses: actions/setup-go@v2\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          go-version: ${{ matrix.go-version }}\n-        id: go\n-\n-      - name: Run tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          cd pulsar-function-go\n-          go test -v $(go list ./... | grep -v examples)"
  },
  {
    "sha": "f9fe802a6313d9ac7bacb0c5dac4bbe3ae00a82d",
    "filename": ".github/workflows/ci-integration-backwards-compatibility.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 93,
    "changes": 93,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-backwards-compatibility.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-backwards-compatibility.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-backwards-compatibility.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,93 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Backwards Compatibility\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  backwards-compatibility:\n-    name:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        if: steps.docs.outputs.changed_only == 'no'\n-        uses: actions/setup-java@v1\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build artifacts and docker image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run integration tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh BACKWARDS_COMPAT"
  },
  {
    "sha": "3500956ecfe531863cdba0ba841402b176dd9b0f",
    "filename": ".github/workflows/ci-integration-cli.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 94,
    "changes": 94,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-cli.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-cli.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-cli.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,94 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Cli\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  cli:\n-    name:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build artifacts and docker image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run integration tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh CLI\n-"
  },
  {
    "sha": "6595f10ab36b8d7b51c4779062783d7483769986",
    "filename": ".github/workflows/ci-integration-function-state.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 93,
    "changes": 93,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-function-state.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-function-state.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-function-state.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,93 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Function State\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  function-state:\n-    name:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build artifacts and docker image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run integration tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh FUNCTION_STATE\n\\ No newline at end of file"
  },
  {
    "sha": "1decf8b8ca04a17036d4c94b5f093b13d2b0033b",
    "filename": ".github/workflows/ci-integration-messaging.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 93,
    "changes": 93,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-messaging.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-messaging.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-messaging.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,93 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Messaging\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  messaging:\n-    name:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build artifacts and docker image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: run integration tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh MESSAGING\n\\ No newline at end of file"
  },
  {
    "sha": "25b023b49c83e0608f90e5b90d57848c17ca4c64",
    "filename": ".github/workflows/ci-integration-process.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 92,
    "changes": 92,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-process.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-process.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-process.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,92 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Process\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  process:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build artifacts and docker image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run integration tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh PULSAR_CONNECTORS_PROCESS\n\\ No newline at end of file"
  },
  {
    "sha": "85d099b6904a6683ced3589817d18648e8d6617d",
    "filename": ".github/workflows/ci-integration-schema.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 89,
    "changes": 89,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-schema.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-schema.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-schema.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,89 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Schema\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  schema:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-      - name: build artifacts and docker image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run integration tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh SCHEMA\n\\ No newline at end of file"
  },
  {
    "sha": "159b70de2cec6c09e73fdcaf0e065b0e328576ea",
    "filename": ".github/workflows/ci-integration-sql.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 92,
    "changes": 92,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-sql.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-sql.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-sql.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,92 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Sql\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  sql:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build artifacts and docker pulsar latest test image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run integration tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh SQL"
  },
  {
    "sha": "5d6c0e12ac7ce83e47a1828682b8d899081c803b",
    "filename": ".github/workflows/ci-integration-standalone.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 92,
    "changes": 92,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-standalone.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-standalone.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-standalone.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,92 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Standalone\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  standalone:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build artifacts and docker image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run integration tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh STANDALONE"
  },
  {
    "sha": "70c4823f4a76b830cb05eca9f2694ae945aeb98b",
    "filename": ".github/workflows/ci-integration-thread.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 92,
    "changes": 92,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-thread.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-thread.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-thread.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,92 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Thread\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  thread:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build artifacts and docker image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run integration function\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh PULSAR_CONNECTORS_THREAD\n\\ No newline at end of file"
  },
  {
    "sha": "6c3a6c19bdf7bf0441ca58d651ef0977bd59de8a",
    "filename": ".github/workflows/ci-integration-tiered-filesystem.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 92,
    "changes": 92,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-tiered-filesystem.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-tiered-filesystem.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-tiered-filesystem.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,92 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Tiered FileSystem\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  tiered-filesystem:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build artifacts and docker image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run integration tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh TIERED_FILESYSTEM"
  },
  {
    "sha": "91f9e1be47b0eea28e609caca06cd5238d405aea",
    "filename": ".github/workflows/ci-integration-tiered-jcloud.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 92,
    "changes": 92,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-tiered-jcloud.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-tiered-jcloud.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-tiered-jcloud.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,92 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Tiered JCloud\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  tiered-jcloud:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build artifacts and docker image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run integration tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh TIERED_JCLOUD"
  },
  {
    "sha": "10df2fb1f4ef58197ba083eda606caf0932a43ff",
    "filename": ".github/workflows/ci-integration-transaction.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 89,
    "changes": 89,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-transaction.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-integration-transaction.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-integration-transaction.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,89 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Integration - Transaction\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  transaction:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-      - name: build artifacts and docker image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run integration tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh TRANSACTION"
  },
  {
    "sha": "afc647b93f015b56afcdd9b8d1491acf54c12ca4",
    "filename": ".github/workflows/ci-license.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 80,
    "changes": 80,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-license.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-license.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-license.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,80 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Misc\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  license-check:\n-    name: License check\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 60\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Cache local Maven repository\n-        if: steps.docs.outputs.changed_only == 'no'\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Set up JDK 1.8\n-        if: steps.docs.outputs.changed_only == 'no'\n-        uses: actions/setup-java@v1\n-        with:\n-          java-version: 1.8\n-\n-      # license check fails with 3.6.2 so we have to downgrade\n-      - name: Set up Maven\n-        if: steps.docs.outputs.changed_only == 'no'\n-        uses: apache/pulsar-test-infra/setup-maven@master\n-        with:\n-          maven-version: 3.6.1\n-\n-      - name: build and check license\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp -DskipTests apache-rat:check initialize license:check install\n-\n-      - name: license check\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: src/check-binary-license ./distribution/server/target/apache-pulsar-*-bin.tar.gz"
  },
  {
    "sha": "b437066a9923fb8c15eefd092499fff0631d4ec5",
    "filename": ".github/workflows/ci-pulsar-website-build.yaml",
    "status": "modified",
    "additions": 16,
    "deletions": 11,
    "changes": 27,
    "blob_url": "https://github.com/lhotari/pulsar/blob/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/workflows/ci-pulsar-website-build.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/workflows/ci-pulsar-website-build.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-pulsar-website-build.yaml?ref=c2cd7105bb6dc5c46940ae4743e0525c8aa12c68",
    "patch": "@@ -23,28 +23,29 @@ on:\n     - cron: '0 */6 * * *'\n \n env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n+  MAVEN_OPTS: -Xmx1024m -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3\n \n jobs:\n   build-website:\n     name: Build and publish pulsar website\n-    runs-on: ubuntu-latest\n+    runs-on: ubuntu-20.04\n     timeout-minutes: 120\n     steps:\n-      - name: checkout\n+      - name: Checkout\n         uses: actions/checkout@v2\n \n+      - name: Tune Runner VM\n+        uses: ./.github/actions/tune-runner-vm\n+\n+      - name: Clean Disk\n+        uses: ./.github/actions/clean-disk\n+\n+      - name: Log Runner VM state\n+        uses: ./.github/actions/log-runner-vm-state\n+\n       - name: build\n         run: mvn -B clean package -DskipTests -Pswagger\n \n-      - name: clean disk\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n       - name: publish\n         env:\n           GH_TOKEN: ${{ secrets.PULSARBOT_TOKEN }}\n@@ -60,3 +61,7 @@ jobs:\n           site2/tools/docker-build-site.sh\n           # Script was initially made for travis\n           bash -e site2/tools/publish-website.sh\n+\n+      - name: Log Runner VM state\n+        if: always()\n+        uses: ./.github/actions/log-runner-vm-state\n\\ No newline at end of file"
  },
  {
    "sha": "b3c7b54b66c308e321ccd42cf61f97e897ad7378",
    "filename": ".github/workflows/ci-pulsarbot.yaml",
    "status": "modified",
    "additions": 6,
    "deletions": 10,
    "changes": 16,
    "blob_url": "https://github.com/lhotari/pulsar/blob/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/workflows/ci-pulsarbot.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/c2cd7105bb6dc5c46940ae4743e0525c8aa12c68/.github/workflows/ci-pulsarbot.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-pulsarbot.yaml?ref=c2cd7105bb6dc5c46940ae4743e0525c8aa12c68",
    "patch": "@@ -24,26 +24,22 @@ on:\n   pull_request:\n     types: [closed]\n \n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n jobs:\n \n   action-runner:\n     name:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n+    if: ${{ github.event_name != 'issue_comment' || github.event.issue.pull_request }}\n+    runs-on: ubuntu-20.04\n+    timeout-minutes: 10\n \n     steps:\n       - name: checkout\n         uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n+        if: github.event_name != 'issue_comment' || startsWith(github.event.comment.body, '/pulsarbot')\n \n       - name: Execute pulsarbot command\n         id:   pulsarbot\n-        if: github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/pulsarbot')\n+        if: github.event_name != 'issue_comment' || startsWith(github.event.comment.body, '/pulsarbot')\n         env:\n           GITHUB_TOKEN: ${{ secrets.PULSARBOT_TOKEN }}\n-        uses: apache/pulsar-test-infra/pulsarbot@master\n+        uses: apache/pulsar-test-infra/pulsarbot@master\n\\ No newline at end of file"
  },
  {
    "sha": "3d5d69f8188af034bacad867edbcfdd1c60f645e",
    "filename": ".github/workflows/ci-shade-test.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 93,
    "changes": 93,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-shade-test.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-shade-test.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-shade-test.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,93 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Shade - Test\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  shade-check:\n-    name:\n-    runs-on: ubuntu-latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Set up JDK 1.8\n-        uses: actions/setup-java@v1\n-        if: steps.docs.outputs.changed_only == 'no'\n-        with:\n-          java-version: 1.8\n-\n-      - name: clean disk\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: |\n-          sudo swapoff -a\n-          sudo rm -rf /swapfile /usr/share/dotnet /usr/local/lib/android /opt/ghc\n-          sudo apt clean\n-          docker rmi $(docker images -q) -f\n-          df -h\n-\n-      - name: run install by skip tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -q -B -ntp clean install -DskipTests\n-\n-      - name: build pulsar image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build pulsar-all image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f docker/pulsar-all/pom.xml install -am -Pdocker -DskipTests -Ddocker.nocache=true\n-\n-      - name: build artifacts and docker pulsar latest test image\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -f tests/docker-images/pom.xml install -am -Pdocker -DskipTests\n-\n-      - name: run shade tests\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_integration_group.sh SHADE"
  },
  {
    "sha": "f3d662be13b708bfa336c658c03399ae9d625e88",
    "filename": ".github/workflows/ci-unit-broker-broker-gp1.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 84,
    "changes": 84,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-unit-broker-broker-gp1.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-unit-broker-broker-gp1.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-unit-broker-broker-gp1.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,84 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Unit - Brokers - Broker Group 1\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  unit-tests:\n-    name:\n-    runs-on: ubuntu-latest\n-    container:\n-      image: apachepulsar/pulsar-build:latest\n-    timeout-minutes: 45\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Cache local Maven repository\n-        if: steps.docs.outputs.changed_only == 'no'\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: build modules\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -ntp -q clean install -Pcore-modules -DskipTests\n-\n-      - name: run unit test 'BROKER_GROUP_1'\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_unit_group.sh BROKER_GROUP_1\n-\n-      - name: package surefire artifacts\n-        if: failure()\n-        run: |\n-          rm -rf artifacts\n-          mkdir artifacts\n-          find . -type d -name \"*surefire*\" -exec cp --parents -R {} artifacts/ \\;\n-          zip -r artifacts.zip artifacts\n-\n-      - uses: actions/upload-artifact@master\n-        name: upload surefire-artifacts\n-        if: failure()\n-        with:\n-          name: surefire-artifacts\n-          path: artifacts.zip"
  },
  {
    "sha": "2a87774435443021d667f9f80b8c1ea1d0043582",
    "filename": ".github/workflows/ci-unit-broker-broker-gp2.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 83,
    "changes": 83,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-unit-broker-broker-gp2.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-unit-broker-broker-gp2.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-unit-broker-broker-gp2.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,83 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Unit - Brokers - Broker Group 2\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  unit-tests:\n-    name:\n-    runs-on: ubuntu-latest\n-    container:\n-      image: apachepulsar/pulsar-build:latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Cache local Maven repository\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: build modules\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -ntp -q clean install -Pcore-modules -DskipTests\n-\n-      - name: run unit test 'BROKER_GROUP_2'\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_unit_group.sh BROKER_GROUP_2\n-\n-      - name: package surefire artifacts\n-        if: failure()\n-        run: |\n-          rm -rf artifacts\n-          mkdir artifacts\n-          find . -type d -name \"*surefire*\" -exec cp --parents -R {} artifacts/ \\;\n-          zip -r artifacts.zip artifacts\n-\n-      - uses: actions/upload-artifact@master\n-        name: upload surefire-artifacts\n-        if: failure()\n-        with:\n-          name: surefire-artifacts\n-          path: artifacts.zip"
  },
  {
    "sha": "470b2614b68b2d5c1c1e3304b87503ee479ccae0",
    "filename": ".github/workflows/ci-unit-broker-client-api.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 84,
    "changes": 84,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-unit-broker-client-api.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-unit-broker-client-api.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-unit-broker-client-api.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,84 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Unit - Brokers - Client Api\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  unit-tests:\n-    name:\n-    runs-on: ubuntu-latest\n-    container:\n-      image: apachepulsar/pulsar-build:latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Cache local Maven repository\n-        if: steps.docs.outputs.changed_only == 'no'\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: build modules\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -ntp -q install -Pcore-modules -DskipTests\n-\n-      - name: run unit test 'BROKER_CLIENT_API'\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_unit_group.sh BROKER_CLIENT_API\n-\n-      - name: package surefire artifacts\n-        if: failure()\n-        run: |\n-          rm -rf artifacts\n-          mkdir artifacts\n-          find . -type d -name \"*surefire*\" -exec cp --parents -R {} artifacts/ \\;\n-          zip -r artifacts.zip artifacts\n-\n-      - uses: actions/upload-artifact@master\n-        name: upload surefire-artifacts\n-        if: failure()\n-        with:\n-          name: surefire-artifacts\n-          path: artifacts.zip"
  },
  {
    "sha": "193e138be118f7037007ad7b4a60073bbd8ceafe",
    "filename": ".github/workflows/ci-unit-broker-client-impl.yaml",
    "status": "removed",
    "additions": 0,
    "deletions": 84,
    "changes": 84,
    "blob_url": "https://github.com/lhotari/pulsar/blob/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-unit-broker-client-impl.yaml",
    "raw_url": "https://github.com/lhotari/pulsar/raw/96c1402db3221b54ae260152d65e3474b1387f4e/.github/workflows/ci-unit-broker-client-impl.yaml",
    "contents_url": "https://api.github.com/repos/lhotari/pulsar/contents/.github/workflows/ci-unit-broker-client-impl.yaml?ref=96c1402db3221b54ae260152d65e3474b1387f4e",
    "patch": "@@ -1,84 +0,0 @@\n-#\n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-#\n-#   http://www.apache.org/licenses/LICENSE-2.0\n-#\n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-#\n-\n-name: CI - Unit - Brokers - Client Impl\n-on:\n-  pull_request:\n-    branches:\n-      - master\n-  push:\n-    branches:\n-      - branch-*\n-\n-env:\n-  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3\n-\n-jobs:\n-\n-  unit-tests:\n-    name:\n-    runs-on: ubuntu-latest\n-    container:\n-      image: apachepulsar/pulsar-build:latest\n-    timeout-minutes: 120\n-\n-    steps:\n-      - name: checkout\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 100\n-          ref: ${{ github.event.pull_request.head.sha }}\n-\n-      - name: Check if this pull request only changes documentation\n-        id:   docs\n-        uses: apache/pulsar-test-infra/diff-only@master\n-        with:\n-          args: site2 deployment .asf.yaml .ci ct.yaml\n-\n-      - name: Cache local Maven repository\n-        if: steps.docs.outputs.changed_only == 'no'\n-        uses: actions/cache@v2\n-        with:\n-          path: ~/.m2/repository\n-          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}\n-          restore-keys: |\n-            ${{ runner.os }}-maven-\n-\n-      - name: build modules\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: mvn -B -ntp -q install -Pcore-modules -DskipTests\n-\n-      - name: run unit test 'BROKER_CLIENT_IMPL'\n-        if: steps.docs.outputs.changed_only == 'no'\n-        run: ./build/run_unit_group.sh BROKER_CLIENT_IMPL\n-\n-      - name: package surefire artifacts\n-        if: failure()\n-        run: |\n-          rm -rf artifacts\n-          mkdir artifacts\n-          find . -type d -name \"*surefire*\" -exec cp --parents -R {} artifacts/ \\;\n-          zip -r artifacts.zip artifacts\n-\n-      - uses: actions/upload-artifact@master\n-        name: upload surefire-artifacts\n-        if: failure()\n-        with:\n-          name: surefire-artifacts\n-          path: artifacts.zip"
  }
]
