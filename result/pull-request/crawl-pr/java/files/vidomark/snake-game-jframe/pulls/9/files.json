[
  {
    "sha": "79e6b87cc9e84234dcb13c793b39e4461302a036",
    "filename": "src/components/Snake.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/vidomark/snake-game-jframe/blob/867e558febccbc99c9dbbfb78ed7ac9edcacdd2b/src/components/Snake.java",
    "raw_url": "https://github.com/vidomark/snake-game-jframe/raw/867e558febccbc99c9dbbfb78ed7ac9edcacdd2b/src/components/Snake.java",
    "contents_url": "https://api.github.com/repos/vidomark/snake-game-jframe/contents/src/components/Snake.java?ref=867e558febccbc99c9dbbfb78ed7ac9edcacdd2b",
    "patch": "@@ -35,6 +35,24 @@ public void grow(Food food) {\n         yCoordinates[foodEaten + 1] = y; // + 1 to not overwrite the head\n     }\n \n+    public boolean selfCollision() {\n+        int headX = xCoordinates[0];\n+        int headY = yCoordinates[0];\n+\n+        for (int i = 2; i <= foodEaten; i++) {\n+            if (headX == xCoordinates[i] && headY == yCoordinates[i]) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public void shrink() {\n+        xCoordinates[foodEaten] = 0;\n+        yCoordinates[foodEaten] = 0;\n+        foodEaten--;\n+    }\n+\n     public void move() {\n         switch (direction) {\n             case UP:"
  },
  {
    "sha": "145b552355bdcdf55095cfbad0b3c9a4fe30ad74",
    "filename": "src/gui/GamePanel.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/vidomark/snake-game-jframe/blob/867e558febccbc99c9dbbfb78ed7ac9edcacdd2b/src/gui/GamePanel.java",
    "raw_url": "https://github.com/vidomark/snake-game-jframe/raw/867e558febccbc99c9dbbfb78ed7ac9edcacdd2b/src/gui/GamePanel.java",
    "contents_url": "https://api.github.com/repos/vidomark/snake-game-jframe/contents/src/gui/GamePanel.java?ref=867e558febccbc99c9dbbfb78ed7ac9edcacdd2b",
    "patch": "@@ -70,6 +70,11 @@ public void handleCollision() {\n             snake.grow(food);\n         }\n \n+        if (snake.selfCollision()) {\n+            System.out.println(\"COLLIDE\");\n+            snake.shrink();\n+        }\n+\n         snake.atBorder();\n     }\n "
  }
]
