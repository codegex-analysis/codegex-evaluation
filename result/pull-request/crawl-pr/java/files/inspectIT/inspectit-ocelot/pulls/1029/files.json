[
  {
    "sha": "42f6d445cbf8273e969f48e30bb99616410197b7",
    "filename": "components/inspectit-ocelot-eum-server/src/main/java/rocks/inspectit/oce/eum/server/beacon/processor/BmrBeaconProcessor.java",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/d9670d44ed3f48564e6e774e92bbc155318bac11/components/inspectit-ocelot-eum-server/src/main/java/rocks/inspectit/oce/eum/server/beacon/processor/BmrBeaconProcessor.java",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/d9670d44ed3f48564e6e774e92bbc155318bac11/components/inspectit-ocelot-eum-server/src/main/java/rocks/inspectit/oce/eum/server/beacon/processor/BmrBeaconProcessor.java",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/components/inspectit-ocelot-eum-server/src/main/java/rocks/inspectit/oce/eum/server/beacon/processor/BmrBeaconProcessor.java?ref=d9670d44ed3f48564e6e774e92bbc155318bac11",
    "patch": "@@ -0,0 +1,69 @@\n+package rocks.inspectit.oce.eum.server.beacon.processor;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.math.NumberUtils;\n+import org.springframework.stereotype.Component;\n+import rocks.inspectit.oce.eum.server.beacon.Beacon;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+\n+/**\n+ * Processor to expand comma separated values. The expanded values will be available at a new attribute\n+ * indexed key in the beacon.\n+ * <p>\n+ * Example: The attribute <code>rt.bmr=37,5</code> will result in <code>rt.bmr.startTime: 37</code>, <code>rt.bmr.responseEnd: 5</code>\n+ */\n+@Slf4j\n+@Component\n+public class BmrBeaconProcessor implements BeaconProcessor {\n+\n+    /**\n+     * The target key of the attribute to expand.\n+     */\n+    @VisibleForTesting\n+    static final String ATTRIBUTE_KEY = \"rt.bmr\";\n+\n+    /**\n+     * The regex (character) used to separate individual value groups.\n+     */\n+    private static final String GROUP_SEPARATOR = \",\";\n+\n+    /**\n+     * List of names for all possible values.\n+     */\n+    @VisibleForTesting\n+    static final String[] VALUE_NAMES = {\"startTime\", \"responseEnd\", \"responseStart\", \"requestStart\", \"connectEnd\", \"secureConnectionStart\", \"connectStart\", \"domainLookupEnd\", \"domainLookupStart\", \"redirectEnd\", \"redirectStart\"};\n+\n+    @Override\n+    public Beacon process(Beacon beacon) {\n+        String targetAttribute = beacon.get(ATTRIBUTE_KEY);\n+        HashMap<String, String> bmrAttributes = new HashMap<>();\n+\n+        if (StringUtils.isNoneBlank(targetAttribute)) {\n+            String[] attributes = targetAttribute.split(GROUP_SEPARATOR);\n+\n+            for (int i = 0; i < VALUE_NAMES.length; i++) {\n+                String resultKey = ATTRIBUTE_KEY + \".\" + VALUE_NAMES[i];\n+\n+                String value;\n+                if (i >= attributes.length || StringUtils.isBlank(attributes[i])) {\n+                    value = \"0\";\n+                } else {\n+                    value = attributes[i];\n+                }\n+\n+                if (NumberUtils.isCreatable(value)) {\n+                    bmrAttributes.put(resultKey, value);\n+                } else {\n+                    log.trace(\"Error parsing the value <'{}'>: invalid number.\", attributes[i]);\n+                }\n+            }\n+            beacon = beacon.merge(bmrAttributes);\n+        }\n+        return beacon;\n+    }\n+}"
  },
  {
    "sha": "88b04b86634db2b20bac8476518c315063bbbc11",
    "filename": "components/inspectit-ocelot-eum-server/src/main/java/rocks/inspectit/oce/eum/server/beacon/processor/CsvExpanderBeaconProcessor.java",
    "status": "removed",
    "additions": 0,
    "deletions": 59,
    "changes": 59,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/components/inspectit-ocelot-eum-server/src/main/java/rocks/inspectit/oce/eum/server/beacon/processor/CsvExpanderBeaconProcessor.java",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/components/inspectit-ocelot-eum-server/src/main/java/rocks/inspectit/oce/eum/server/beacon/processor/CsvExpanderBeaconProcessor.java",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/components/inspectit-ocelot-eum-server/src/main/java/rocks/inspectit/oce/eum/server/beacon/processor/CsvExpanderBeaconProcessor.java?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,59 +0,0 @@\n-package rocks.inspectit.oce.eum.server.beacon.processor;\n-\n-import lombok.extern.slf4j.Slf4j;\n-import org.apache.commons.lang3.StringUtils;\n-import org.springframework.stereotype.Component;\n-import rocks.inspectit.oce.eum.server.beacon.Beacon;\n-\n-import java.util.Collections;\n-\n-/**\n- * Processor to expand comma separated values. The expanded values will be available at a new attribute\n- * indexed key in the beacon.\n- * <p>\n- * Example: The attribute <code>rt.bmr=37,5</code> will result in <code>rt.bmr.0: 37</code>, <code>rt.bmr.1: 5</code>\n- * and <code>rt.bmr.sum: 42</code>\n- */\n-@Slf4j\n-@Component\n-public class CsvExpanderBeaconProcessor implements BeaconProcessor {\n-\n-    /**\n-     * The target key of the attribute to expand.\n-     */\n-    private static final String ATTRIBUTE_KEY = \"rt.bmr\";\n-\n-    /**\n-     * The regex (character) used to separate individual value groups.\n-     */\n-    private static final String GROUP_SEPARATOR = \",\";\n-\n-    @Override\n-    public Beacon process(Beacon beacon) {\n-        String targetAttribute = beacon.get(ATTRIBUTE_KEY);\n-\n-        if (StringUtils.isNoneBlank(targetAttribute)) {\n-            int sum = 0;\n-            boolean isSum = false;\n-            String[] attributes = targetAttribute.split(GROUP_SEPARATOR);\n-\n-            for (int i = 0; i < attributes.length; i++) {\n-                String resultKey = ATTRIBUTE_KEY + \".\" + i;\n-\n-                if (!StringUtils.isBlank(attributes[i])) {\n-                    try {\n-                        sum += Integer.parseInt(attributes[i]);\n-                        isSum = true;\n-                        beacon = beacon.merge(Collections.singletonMap(resultKey, attributes[i]));\n-                    } catch (Exception e) {\n-                        log.trace(\"Error parsing the value <'{}'>: invalid number.\", attributes[i]);\n-                    }\n-                }\n-            }\n-            if (isSum) {\n-                beacon = beacon.merge(Collections.singletonMap(ATTRIBUTE_KEY + \".sum\", String.valueOf(sum)));\n-            }\n-        }\n-        return beacon;\n-    }\n-}"
  },
  {
    "sha": "bd549609cac36dd76c9f2ef8972bb4dc24c2b1d6",
    "filename": "components/inspectit-ocelot-eum-server/src/test/java/rocks/inspectit/oce/eum/server/beacon/processor/BmrBeaconProcessorTest.java",
    "status": "added",
    "additions": 147,
    "deletions": 0,
    "changes": 147,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/d9670d44ed3f48564e6e774e92bbc155318bac11/components/inspectit-ocelot-eum-server/src/test/java/rocks/inspectit/oce/eum/server/beacon/processor/BmrBeaconProcessorTest.java",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/d9670d44ed3f48564e6e774e92bbc155318bac11/components/inspectit-ocelot-eum-server/src/test/java/rocks/inspectit/oce/eum/server/beacon/processor/BmrBeaconProcessorTest.java",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/components/inspectit-ocelot-eum-server/src/test/java/rocks/inspectit/oce/eum/server/beacon/processor/BmrBeaconProcessorTest.java?ref=d9670d44ed3f48564e6e774e92bbc155318bac11",
    "patch": "@@ -0,0 +1,147 @@\n+package rocks.inspectit.oce.eum.server.beacon.processor;\n+\n+import org.junit.jupiter.api.Nested;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import rocks.inspectit.oce.eum.server.beacon.Beacon;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+\n+import static org.assertj.core.api.Assertions.*;\n+\n+@ExtendWith(MockitoExtension.class)\n+class BmrBeaconProcessorTest {\n+\n+    @InjectMocks\n+    private BmrBeaconProcessor processor;\n+\n+    @Nested\n+    public class Process {\n+\n+        private final String[] keyNames = Arrays.stream(BmrBeaconProcessor.VALUE_NAMES)\n+                .map(valueName -> BmrBeaconProcessor.ATTRIBUTE_KEY + \".\" + valueName)\n+                .toArray(String[]::new);\n+\n+        private final int maxExpectedSize = keyNames.length + 1;\n+\n+        @Test\n+        public void noRtBmrAttribute() {\n+            Beacon beacon = Beacon.of(Collections.singletonMap(\"key\", \"\"));\n+\n+            Beacon result = processor.process(beacon);\n+\n+            assertThat(result.toMap()).containsOnly(entry(\"key\", \"\"));\n+        }\n+\n+        @Test\n+        public void rtBmrWithoutValues() {\n+            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"\"));\n+\n+            Beacon result = processor.process(beacon);\n+\n+            assertThat(result.toMap()).containsOnly(entry(\"rt.bmr\", \"\"));\n+        }\n+\n+        @Test\n+        public void rtBmrWithOneValue() {\n+            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"123\"));\n+\n+            Beacon result = processor.process(beacon);\n+\n+            assertThat(result.toMap()).containsKeys(keyNames)\n+                    .hasSize(maxExpectedSize)\n+                    .containsOnly(entry(\"rt.bmr\", \"123\"), entry(\"rt.bmr.startTime\", \"123\"), entry(\"rt.bmr.responseEnd\", \"0\"), entry(\"rt.bmr.responseStart\", \"0\"), entry(\"rt.bmr.requestStart\", \"0\"), entry(\"rt.bmr.connectEnd\", \"0\"), entry(\"rt.bmr.secureConnectionStart\", \"0\"), entry(\"rt.bmr.connectStart\", \"0\"), entry(\"rt.bmr.domainLookupEnd\", \"0\"), entry(\"rt.bmr.domainLookupStart\", \"0\"), entry(\"rt.bmr.redirectEnd\", \"0\"), entry(\"rt.bmr.redirectStart\", \"0\"));\n+        }\n+\n+        @Test\n+        public void rtBmrWithInvalidValue() {\n+            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"foo\"));\n+\n+            Beacon result = processor.process(beacon);\n+\n+            assertThat(result.toMap()).doesNotContainKey(\"rt.bmr.startTime\")\n+                    .hasSize(maxExpectedSize - 1)\n+                    .contains(entry(\"rt.bmr\", \"foo\"));\n+        }\n+\n+        @Test\n+        public void rtBmrWithZeroValue() {\n+            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"0\"));\n+\n+            Beacon result = processor.process(beacon);\n+\n+            assertThat(result.toMap()).containsKeys(keyNames)\n+                    .hasSize(maxExpectedSize)\n+                    .contains(entry(\"rt.bmr\", \"0\"), entry(\"rt.bmr.startTime\", \"0\"));\n+        }\n+\n+        @Test\n+        public void rtBmrWithZeroSum() {\n+            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"0,0\"));\n+\n+            Beacon result = processor.process(beacon);\n+\n+            assertThat(result.toMap()).containsKeys(keyNames)\n+                    .hasSize(maxExpectedSize)\n+                    .contains(entry(\"rt.bmr\", \"0,0\"), entry(\"rt.bmr.startTime\", \"0\"), entry(\"rt.bmr.responseEnd\", \"0\"));\n+        }\n+\n+        @Test\n+        public void rtBmrWithMultipleValues() {\n+            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"123,321\"));\n+\n+            Beacon result = processor.process(beacon);\n+\n+            assertThat(result.toMap()).containsKeys(keyNames)\n+                    .hasSize(maxExpectedSize)\n+                    .contains(entry(\"rt.bmr\", \"123,321\"), entry(\"rt.bmr.startTime\", \"123\"), entry(\"rt.bmr.responseEnd\", \"321\"));\n+        }\n+\n+        @Test\n+        public void rtBmrMultipleValuesWithOneEmptyValue() {\n+            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"123,,321\"));\n+\n+            Beacon result = processor.process(beacon);\n+\n+            assertThat(result.toMap()).containsKeys(keyNames)\n+                    .hasSize(maxExpectedSize)\n+                    .contains(entry(\"rt.bmr\", \"123,,321\"), entry(\"rt.bmr.startTime\", \"123\"), entry(\"rt.bmr.responseEnd\", \"0\"), entry(\"rt.bmr.responseStart\", \"321\"));\n+        }\n+\n+        @Test\n+        public void rtBmrMultipleValuesWithOneInvalidValue() {\n+            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"123,bar,321\"));\n+\n+            Beacon result = processor.process(beacon);\n+\n+            assertThat(result.toMap()).doesNotContainKey(\"rt.bmr.responseEnd\")\n+                    .hasSize(maxExpectedSize - 1)\n+                    .contains(entry(\"rt.bmr\", \"123,bar,321\"), entry(\"rt.bmr.startTime\", \"123\"), entry(\"rt.bmr.responseStart\", \"321\"));\n+        }\n+\n+        @Test\n+        public void rtBmrMultipleValuesWithTwoInvalidValues() {\n+            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"123,bar,321,foo\"));\n+\n+            Beacon result = processor.process(beacon);\n+\n+            assertThat(result.toMap()).doesNotContainKeys(\"rt.bmr.responseEnd\", \"rt.bmr.requestStart\")\n+                    .hasSize(maxExpectedSize - 2)\n+                    .contains(entry(\"rt.bmr\", \"123,bar,321,foo\"), entry(\"rt.bmr.startTime\", \"123\"), entry(\"rt.bmr.responseStart\", \"321\"));\n+        }\n+\n+        @Test\n+        public void rtBmrAllValues() {\n+            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"123,120,,,,1,,,7,,,\"));\n+\n+            Beacon result = processor.process(beacon);\n+\n+            assertThat(result.toMap()).containsKeys(keyNames)\n+                    .hasSize(maxExpectedSize)\n+                    .contains(entry(\"rt.bmr\", \"123,120,,,,1,,,7,,,\"), entry(\"rt.bmr.startTime\", \"123\"), entry(\"rt.bmr.responseEnd\", \"120\"), entry(\"rt.bmr.secureConnectionStart\", \"1\"), entry(\"rt.bmr.domainLookupStart\", \"7\"));\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "5c48fe4d77b0082d41bd44c1a1a8d8d91c4bba68",
    "filename": "components/inspectit-ocelot-eum-server/src/test/java/rocks/inspectit/oce/eum/server/beacon/processor/CsvExpanderBeaconProcessorTest.java",
    "status": "removed",
    "additions": 0,
    "deletions": 114,
    "changes": 114,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/components/inspectit-ocelot-eum-server/src/test/java/rocks/inspectit/oce/eum/server/beacon/processor/CsvExpanderBeaconProcessorTest.java",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/components/inspectit-ocelot-eum-server/src/test/java/rocks/inspectit/oce/eum/server/beacon/processor/CsvExpanderBeaconProcessorTest.java",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/components/inspectit-ocelot-eum-server/src/test/java/rocks/inspectit/oce/eum/server/beacon/processor/CsvExpanderBeaconProcessorTest.java?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,114 +0,0 @@\n-package rocks.inspectit.oce.eum.server.beacon.processor;\n-\n-import org.junit.jupiter.api.Nested;\n-import org.junit.jupiter.api.Test;\n-import org.junit.jupiter.api.extension.ExtendWith;\n-import org.mockito.InjectMocks;\n-import org.mockito.junit.jupiter.MockitoExtension;\n-import rocks.inspectit.oce.eum.server.beacon.Beacon;\n-\n-import java.util.Collections;\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-import static org.assertj.core.api.Assertions.entry;\n-\n-@ExtendWith(MockitoExtension.class)\n-class CsvExpanderBeaconProcessorTest {\n-\n-    @InjectMocks\n-    private CsvExpanderBeaconProcessor processor;\n-\n-    @Nested\n-    public class Process {\n-\n-        @Test\n-        public void noRtBmrAttribute() {\n-            Beacon beacon = Beacon.of(Collections.singletonMap(\"key\", \"\"));\n-\n-            Beacon result = processor.process(beacon);\n-\n-            assertThat(result.toMap()).containsOnly(entry(\"key\", \"\"));\n-        }\n-\n-        @Test\n-        public void rtBmrWithoutValues() {\n-            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"\"));\n-\n-            Beacon result = processor.process(beacon);\n-\n-            assertThat(result.toMap()).containsOnly(entry(\"rt.bmr\", \"\"));\n-        }\n-\n-        @Test\n-        public void rtBmrWithValue() {\n-            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"123\"));\n-\n-            Beacon result = processor.process(beacon);\n-\n-            assertThat(result.toMap()).containsOnly(entry(\"rt.bmr\", \"123\"), entry(\"rt.bmr.0\", \"123\"), entry(\"rt.bmr.sum\", \"123\"));\n-        }\n-\n-        @Test\n-        public void rtBmrWithInvalidValue() {\n-            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"foo\"));\n-\n-            Beacon result = processor.process(beacon);\n-\n-            assertThat(result.toMap()).containsOnly(entry(\"rt.bmr\", \"foo\"));\n-        }\n-\n-        @Test\n-        public void rtBmrWithZeroValue() {\n-            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"0\"));\n-\n-            Beacon result = processor.process(beacon);\n-\n-            assertThat(result.toMap()).containsOnly(entry(\"rt.bmr\", \"0\"), entry(\"rt.bmr.0\", \"0\"), entry(\"rt.bmr.sum\", \"0\"));\n-        }\n-\n-        @Test\n-        public void rtBmrWithZeroSum() {\n-            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"0,0\"));\n-\n-            Beacon result = processor.process(beacon);\n-\n-            assertThat(result.toMap()).containsOnly(entry(\"rt.bmr\", \"0,0\"), entry(\"rt.bmr.0\", \"0\"), entry(\"rt.bmr.1\", \"0\"), entry(\"rt.bmr.sum\", \"0\"));\n-        }\n-\n-        @Test\n-        public void rtBmrWithMultipleValues() {\n-            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"123,321\"));\n-\n-            Beacon result = processor.process(beacon);\n-\n-            assertThat(result.toMap()).containsOnly(entry(\"rt.bmr\", \"123,321\"), entry(\"rt.bmr.0\", \"123\"), entry(\"rt.bmr.1\", \"321\"), entry(\"rt.bmr.sum\", \"444\"));\n-        }\n-\n-        @Test\n-        public void rtBmrMultipleValuesWithOneEmptyValue() {\n-            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"123,,321\"));\n-\n-            Beacon result = processor.process(beacon);\n-\n-            assertThat(result.toMap()).containsOnly(entry(\"rt.bmr\", \"123,,321\"), entry(\"rt.bmr.0\", \"123\"), entry(\"rt.bmr.2\", \"321\"), entry(\"rt.bmr.sum\", \"444\"));\n-        }\n-\n-        @Test\n-        public void rtBmrMultipleValuesWithOneInvalidValue() {\n-            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"123,bar,321\"));\n-\n-            Beacon result = processor.process(beacon);\n-\n-            assertThat(result.toMap()).containsOnly(entry(\"rt.bmr\", \"123,bar,321\"), entry(\"rt.bmr.0\", \"123\"), entry(\"rt.bmr.2\", \"321\"), entry(\"rt.bmr.sum\", \"444\"));\n-        }\n-\n-        @Test\n-        public void rtBmrMultipleValuesWithTwoInvalidValues() {\n-            Beacon beacon = Beacon.of(Collections.singletonMap(\"rt.bmr\", \"123,bar,321,foo\"));\n-\n-            Beacon result = processor.process(beacon);\n-\n-            assertThat(result.toMap()).containsOnly(entry(\"rt.bmr\", \"123,bar,321,foo\"), entry(\"rt.bmr.0\", \"123\"), entry(\"rt.bmr.2\", \"321\"), entry(\"rt.bmr.sum\", \"444\"));\n-        }\n-    }\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "6b2e5297ac46f51ef0421f9826d312c7ddced390",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/0.4.md",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/0.4.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/0.4.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/0.4.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,6 +0,0 @@\n----\n-id: 0-4\n-title: Breaking changes in 0.4\n----\n-\n-There are no breaking changes for version 0.4.\n\\ No newline at end of file"
  },
  {
    "sha": "1aa890b3d2e4cea25f97b9873a34566c2d718558",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/0.5.md",
    "status": "removed",
    "additions": 0,
    "deletions": 14,
    "changes": 14,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/0.5.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/0.5.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/0.5.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,14 +0,0 @@\n----\n-id: 0-5\n-title: Breaking changes in 0.5\n----\n-\n-This section discusses the changes that you need to be aware of when migrating your inspectIT Ocelot components to version 0.5.\n-\n-## Change of the configuration server's configuration prefix\n-\n-Until now, all components used the configuration prefix `inspectit` for the inspectIT Ocelot specific configuration settings.\n-This often led to confusion because, especially in examples, it was not clear to which component a particular setting belonged.\n-To avoid confusion between the configurations of different components the configuration prefix of the configuration server has been changed to `inspectit-config-server`.\n-\n-The configuration server will not load the configuration if it is still located under the `inspectit` prefix.\n\\ No newline at end of file"
  },
  {
    "sha": "fee3cc833e0e92b6128bd75937db0e29bd5fdb8d",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/0.6.md",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/0.6.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/0.6.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/0.6.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,6 +0,0 @@\n----\n-id: 0-6\n-title: Breaking changes in 0.6\n----\n-\n-There are no breaking changes for version 0.6.\n\\ No newline at end of file"
  },
  {
    "sha": "96fc683033443cbe3d23f912d3c1c0bc51fb4f6d",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/1.0.md",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.0.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.0.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/1.0.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,6 +0,0 @@\n----\n-id: 1-0\n-title: Breaking changes in 1.0\n----\n-\n-There are no breaking changes for version 1.0.\n\\ No newline at end of file"
  },
  {
    "sha": "4ccc4624db74f99a3e4219c2121eb2802abae2b3",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/1.1.md",
    "status": "removed",
    "additions": 0,
    "deletions": 106,
    "changes": 106,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.1.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.1.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/1.1.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,106 +0,0 @@\n----\n-id: 1-1\n-title: Breaking changes in 1.1\n----\n-\n-## Changed default data-propagation behaviour\n-\n-In previous versions data collected in [instrumentation rules](instrumentation/rules.md) could already be used without\n-explicitly defining it's propagation behaviour under `inspectit.instrumentation.data`. However, in this case the data\n-would be automatically down-propagated and used as a tag, which comes with a performance penalty.\n-\n-To avoid unnecessary propagation and usage as tag for e.g. temporary local data, the behaviour had to be explicitly defined:\n-\n-```yaml\n-inspectit:\n-  instrumentation:\n-    data:\n-      temp_variable: {down-propagation: NONE, is-tag: false}\n-```\n-\n-As these definitions could be easily forgotten, we changed the default behaviour of data:\n-It now does *not* propagate and is *not* used as a tag automatically. The exception hereby\n-is (a) if the data is a [common tag](metrics/common-tags.md) or (b) the data is used as a tag in any\n-[metric definition](metrics/custom-metrics.md). Common Tags default to JVM_LOCAL down propagation and being a tag.\n-When a data_key is also used as a tag in a metric definition, it defaults to being a tag but the propagation is not affected.\n-You can still freely override the behaviour by configuring the settings for your data under `inspectit.instrumentation.data`.\n-For details see the corresponding [documentation section](instrumentation/rules.md#defining-the-behaviour).\n-\n-This is a breaking change because your configurations might not work as expected anymore.\n-You now have to make sure that for each data, where you expect down-propagation to take place, you add a behaviour definition:\n-\n-```yaml\n-inspectit:\n-  instrumentation:\n-    data:\n-      down_propagated_var: {down-propagation: JVM_LOCAL}\n-```\n-\n-The change of the `is-tag` setting usually should not affect you, as it automatically picks up tags from the metrics definitions.\n-\n-## Changed metric collection configuration\n-\n-In previous versions Ocelot allowed the short notation in the configuration when defining the metrics collection.\n-\n-```yaml\n-#inspectit.instrumentation.rules is omitted here\n-example_rule:\n-  #...\n-  exit:\n-    method_duration:\n-      #action invocation here....\n-\n-  metrics:\n-    '[method/duration]' : method_duration\n-```\n-\n-This notation is now deprecated and has to be migrated to the explicit notation:\n-\n-```yaml\n-#inspectit.instrumentation.rules is omitted here\n-example_rule:\n-  #...\n-  exit:\n-    method_duration:\n-      #action invocation here....\n-    method_name:\n-      #action invocation here....\n-\n-  metrics:\n-    '[method/duration]': \n-      value: method_duration\n-      constant-tags:\n-        action: checkout\n-      data-tags:\n-        method_name: method_name\n-```\n-\n-This is a breaking change because your configurations might not work as expected anymore.\n-In previous versions tags were automatically picked up from the tag context at the moment of the metric recording.\n-The new notation allows explicit and flexible definition of constant and data tags to be collected with their associated values.\n-Staying with the short notation means that metric recording will only include addition of the common tags and values, thus most likely breaking the expected behavior.\n-\n-More information about the new notation can be found in the [collecting metrics](instrumentation/rules.md#collecting-metrics) section.\n-\n-## Changed EUM server tag configuration\n-\n-In previous versions of the EUM Server, tags derived from beacon values were specified as follows:\n-\n-```yaml\n-inspectit-eum-server:\n-  tags:\n-    beacon:\n-      URL: u\n-```\n-\n-This has been extended with the possibility to perform regex replacements, therefore the equivalent configuration now looks as follows:\n-\n-```yaml\n-inspectit-eum-server:\n-  tags:\n-    beacon:\n-      URL: \n-        input: u\n-```\n-\n-For the details on how to perform regex replacements see the [EUM server documentation](enduser-monitoring/enduser-monitoring-server.md#tags-definition)."
  },
  {
    "sha": "1dd2aa4c8a5ea6ff507866379c2999777c062679",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/1.2.md",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.2.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.2.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/1.2.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,6 +0,0 @@\n----\n-id: 1-2\n-title: Breaking changes in 1.2\n----\n-\n-There are no breaking changes for version 1.2.\n\\ No newline at end of file"
  },
  {
    "sha": "2d66fd0f9869c5acd7ec3d8b2f5e154cad14eb32",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/1.3.md",
    "status": "removed",
    "additions": 0,
    "deletions": 34,
    "changes": 34,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.3.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.3.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/1.3.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,34 +0,0 @@\n----\n-id: 1-3\n-title: Breaking changes in 1.3\n----\n-\n-## Changed Trace Attributes Behaviour\n-\n-In previous version it was possible to write [trace attributes](instrumentation/rules.md#adding-attributes)\n-without actually starting a span in the same method. In this case, attributes would be written to a parent method which was traced.\n-This could sometimes lead to a surprising behaviour and therefore has been removed.\n-\n-This behaviour can still be realized if desired via [data propagation](instrumentation/rules.md#data-propagation).\n-\n-## Reworked Default Agent Configuration\n-\n-The default configuration of the agent has completely been reworked.\n-\n-This means that in case your custom instrumentation is based on existing scopes, actions or rules it might stop working.\n-In order to fix this it is required to adapt your instrumentation to the new default configuration.\n-\n-## Changed Default Behaviour of the InfluxDB exporter\n-\n-The InfluxDB metrics exporter has been extended with an optimized handling of counter and sum metrics, which is now the default behaviour.\n-This new behaviour changes how data is written to InfluxDB, so your existing queries have to be adapted or reworked.\n-\n-It is still possible to use the previous handling of counters using the exporter's `counters-as-differences` option and setting it to `false`:\n-\n-    inspectit:\n-      exporters:\n-        metrics:\n-          influx:\n-            counters-as-differences: false\n-\n-For more details have a look at the [InfluxDB exporter documentation](metrics/metric-exporters.md#influxdb-exporter)."
  },
  {
    "sha": "e336bd26b9af011d9f0079f37770855c3a85e6be",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/1.4.md",
    "status": "removed",
    "additions": 0,
    "deletions": 15,
    "changes": 15,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.4.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.4.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/1.4.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,15 +0,0 @@\n----\n-id: 1-4\n-title: Breaking changes in 1.4\n----\n-\n-## Using Access Permissions in the Web UI\n-\n-The web interface of the configuration server now respects the access rights of the individual users.\n-Previously, every user who could log in had all rights and could therefore do everything.\n-However, this may cause problems for users who remain logged in during the upgrade.\n-\n-If the configuration server was recently upgraded to version 1.4 and active users exist,\n-it can happen that they are no longer able to access the web UI after the upgrade.\n-In this case the browser cache and cookies must be deleted.\n-Users should then be able to log on to and use the Web UI as usual.\n\\ No newline at end of file"
  },
  {
    "sha": "5002fa1f17b97ac114bf9291492cb349103982c5",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/1.5.md",
    "status": "removed",
    "additions": 0,
    "deletions": 42,
    "changes": 42,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.5.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.5.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/1.5.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,42 +0,0 @@\n----\n-id: 1-5\n-title: Breaking changes in 1.5\n----\n-\n-## Regex Replacement in the EUM-Server\n-\n-In the previous versions, it was possible to specify derived tags in the EUM-Server based\n-on a single regular expression extraction:\n-\n-```YAML\n-inspectit-eum-server:\n-  tags:\n-    beacon:\n-      URL_USER_ERASED: \n-        input: u\n-        regex: \"\\\\/user\\\\/\\d+\"\n-        replacement: \"\\\\/user\\\\/{id}\"\n-        keep-no-match: true\n-```\n-\n-This configuration uses of the tag value `u`, replaces all user-IDs and stores the result in the tag `URL_USER_ERASED`.\n-While for backwards compatibility reasons this approach still is functional, it has been deprecated in favor of the new syntax:\n-\n-```YAML\n-inspectit-eum-server:\n-  tags:\n-    beacon:\n-      URL_USER_ERASED: \n-        input: u\n-        replacements:\n-         -  regex: \"\\\\/user\\\\/\\d+\"\n-            replacement: \"\\\\/user\\\\/{id}\"\n-            keep-no-match: true\n-```\n-\n-This new syntax allows to specify a list of regular expressions to apply instead of a single one.\n-The EUM-Server will process all regular expressions in their order and will replace all matches within the input tag.\n-The `keep-no-match` property defines how to behave in case no match is found in the source tag for a given regex.\n-If `keep-no-match` is `false`, no tag value will be output in this case. If it is `true`, \n-the previous value will be used without performing any replacements.\n-Hereby the default value of `keep-no-match` has changed: it is now `true` instead of `false`.\n\\ No newline at end of file"
  },
  {
    "sha": "ef8ae3125bba47f91784fe01c28c5d76bc6afb0d",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/1.6.md",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.6.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.6.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/1.6.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,6 +0,0 @@\n----\n-id: 1-6\n-title: Breaking changes in 1.6\n----\n-\n-There are no breaking changes for version 1.6.\n\\ No newline at end of file"
  },
  {
    "sha": "995e89686a894bf2b6ec55cd39f546933947496d",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/1.7.md",
    "status": "removed",
    "additions": 0,
    "deletions": 6,
    "changes": 6,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.7.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.7.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/1.7.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,6 +0,0 @@\n----\n-id: 1-7\n-title: Breaking changes in 1.7\n----\n-\n-There are no breaking changes for version 1.7.\n\\ No newline at end of file"
  },
  {
    "sha": "520c5895f8cb0151763cef6b2a27c0013061bdde",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/1.8.md",
    "status": "removed",
    "additions": 0,
    "deletions": 9,
    "changes": 9,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.8.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/6ecefd2ae5254cd86a56195d416e359cb79175ca/inspectit-ocelot-documentation/docs/breaking-changes/1.8.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/1.8.md?ref=6ecefd2ae5254cd86a56195d416e359cb79175ca",
    "patch": "@@ -1,9 +0,0 @@\n----\n-id: 1-8\n-title: Breaking changes in 1.8\n----\n-\n-## Changing Capitalization of Self-Monitoring Metric Names\n-\n-In the current release, the capitalization of the name of the EUM server's self-monitoring metric for counting incoming beacons has been changed.\n-It was changed from `inspectit-eum_self_beacons_received_COUNT` to `inspectit_eum_self_beacons_received_count`, thus, it consists only of lowercase characters, now.\n\\ No newline at end of file"
  },
  {
    "sha": "ab40190892e49a15502ffb8efa8b67fcd33650c2",
    "filename": "inspectit-ocelot-documentation/docs/breaking-changes/breaking-changes.md",
    "status": "added",
    "additions": 286,
    "deletions": 0,
    "changes": 286,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/d9670d44ed3f48564e6e774e92bbc155318bac11/inspectit-ocelot-documentation/docs/breaking-changes/breaking-changes.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/d9670d44ed3f48564e6e774e92bbc155318bac11/inspectit-ocelot-documentation/docs/breaking-changes/breaking-changes.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/breaking-changes/breaking-changes.md?ref=d9670d44ed3f48564e6e774e92bbc155318bac11",
    "patch": "@@ -0,0 +1,286 @@\n+---\n+id: Breaking Changes\n+title: Breaking Changes\n+---\n+\n+## Breaking changes in 1.9\n+\n+### Naming changes of the rt.bmr beacon\n+\n+In the current release, the rt.bmr beacon list is parsed into new key-value pairs with the naming `rt.bmr.index`, index being the position in the list. These indices are changed to qualified names:\n+\n+- rt.bmr.0 -> rt.bmr.startTime\n+- rt.bmr.1 -> rt.bmr.responseEnd\n+- rt.bmr.2 -> rt.bmr.responseStart\n+- rt.bmr.3 -> rt.bmr.requestStart\n+- rt.bmr.4 -> rt.bmr.connectEnd\n+- rt.bmr.5 -> rt.bmr.secureConnectionStart\n+- rt.bmr.6 -> rt.bmr.connectStart\n+- rt.bmr.7 -> rt.bmr.domainLookupEnd\n+- rt.bmr.8 -> rt.bmr.domainLookupStart\n+- rt.bmr.9 -> rt.bmr.redirectEnd\n+- rt.bmr.10 -> rt.bmr.redirectStart\n+\n+\n+## Breaking changes in 1.8.1\n+\n+There are no breaking changes for version 1.8.1.\n+\n+\n+## Breaking changes in 1.8\n+\n+### Changing Capitalization of Self-Monitoring Metric Names\n+\n+In the current release, the capitalization of the name of the EUM server's self-monitoring metric for counting incoming beacons has been changed.\n+It was changed from `inspectit-eum_self_beacons_received_COUNT` to `inspectit_eum_self_beacons_received_count`, thus, it consists only of lowercase characters, now.\n+\n+\n+## Breaking changes in 1.7\n+\n+There are no breaking changes for version 1.7.\n+\n+\n+## Breaking changes in 1.6.1\n+\n+There are no breaking changes for version 1.6.1.\n+\n+\n+## Breaking changes in 1.6\n+\n+There are no breaking changes for version 1.6.\n+\n+\n+## Breaking changes in 1.5\n+\n+### Regex Replacement in the EUM-Server\n+\n+In the previous versions, it was possible to specify derived tags in the EUM-Server based\n+on a single regular expression extraction:\n+\n+```YAML\n+inspectit-eum-server:\n+  tags:\n+    beacon:\n+      URL_USER_ERASED: \n+        input: u\n+        regex: \"\\\\/user\\\\/\\d+\"\n+        replacement: \"\\\\/user\\\\/{id}\"\n+        keep-no-match: true\n+```\n+\n+This configuration uses of the tag value `u`, replaces all user-IDs and stores the result in the tag `URL_USER_ERASED`.\n+While for backwards compatibility reasons this approach still is functional, it has been deprecated in favor of the new syntax:\n+\n+```YAML\n+inspectit-eum-server:\n+  tags:\n+    beacon:\n+      URL_USER_ERASED: \n+        input: u\n+        replacements:\n+         -  regex: \"\\\\/user\\\\/\\d+\"\n+            replacement: \"\\\\/user\\\\/{id}\"\n+            keep-no-match: true\n+```\n+\n+This new syntax allows to specify a list of regular expressions to apply instead of a single one.\n+The EUM-Server will process all regular expressions in their order and will replace all matches within the input tag.\n+The `keep-no-match` property defines how to behave in case no match is found in the source tag for a given regex.\n+If `keep-no-match` is `false`, no tag value will be output in this case. If it is `true`, \n+the previous value will be used without performing any replacements.\n+Hereby the default value of `keep-no-match` has changed: it is now `true` instead of `false`.\n+\n+\n+## Breaking changes in 1.4\n+\n+### Using Access Permissions in the Web UI\n+\n+The web interface of the configuration server now respects the access rights of the individual users.\n+Previously, every user who could log in had all rights and could therefore do everything.\n+However, this may cause problems for users who remain logged in during the upgrade.\n+\n+If the configuration server was recently upgraded to version 1.4 and active users exist,\n+it can happen that they are no longer able to access the web UI after the upgrade.\n+In this case the browser cache and cookies must be deleted.\n+Users should then be able to log on to and use the Web UI as usual.\n+\n+\n+## Breaking changes in 1.3.1\n+\n+There are no breaking changes for version 1.3.1.\n+\n+\n+## Breaking changes in 1.3\n+\n+### Changed Trace Attributes Behaviour\n+\n+In previous version it was possible to write [trace attributes](instrumentation/rules.md#adding-attributes)\n+without actually starting a span in the same method. In this case, attributes would be written to a parent method which was traced.\n+This could sometimes lead to a surprising behaviour and therefore has been removed.\n+\n+This behaviour can still be realized if desired via [data propagation](instrumentation/rules.md#data-propagation).\n+\n+### Reworked Default Agent Configuration\n+\n+The default configuration of the agent has completely been reworked.\n+\n+This means that in case your custom instrumentation is based on existing scopes, actions or rules it might stop working.\n+In order to fix this it is required to adapt your instrumentation to the new default configuration.\n+\n+### Changed Default Behaviour of the InfluxDB exporter\n+\n+The InfluxDB metrics exporter has been extended with an optimized handling of counter and sum metrics, which is now the default behaviour.\n+This new behaviour changes how data is written to InfluxDB, so your existing queries have to be adapted or reworked.\n+\n+It is still possible to use the previous handling of counters using the exporter's `counters-as-differences` option and setting it to `false`:\n+\n+    inspectit:\n+      exporters:\n+        metrics:\n+          influx:\n+            counters-as-differences: false\n+\n+For more details have a look at the [InfluxDB exporter documentation](metrics/metric-exporters.md#influxdb-exporter).\n+\n+\n+## Breaking changes in 1.2.1\n+\n+There are no breaking changes for version 1.2.1.\n+\n+\n+## Breaking changes in 1.2\n+\n+There are no breaking changes for version 1.2.\n+\n+\n+## Breaking changes in 1.1\n+\n+### Changed default data-propagation behaviour\n+\n+In previous versions data collected in [instrumentation rules](instrumentation/rules.md) could already be used without\n+explicitly defining it's propagation behaviour under `inspectit.instrumentation.data`. However, in this case the data\n+would be automatically down-propagated and used as a tag, which comes with a performance penalty.\n+\n+To avoid unnecessary propagation and usage as tag for e.g. temporary local data, the behaviour had to be explicitly defined:\n+\n+```yaml\n+inspectit:\n+  instrumentation:\n+    data:\n+      temp_variable: {down-propagation: NONE, is-tag: false}\n+```\n+\n+As these definitions could be easily forgotten, we changed the default behaviour of data:\n+It now does *not* propagate and is *not* used as a tag automatically. The exception hereby\n+is (a) if the data is a [common tag](metrics/common-tags.md) or (b) the data is used as a tag in any\n+[metric definition](metrics/custom-metrics.md). Common Tags default to JVM_LOCAL down propagation and being a tag.\n+When a data_key is also used as a tag in a metric definition, it defaults to being a tag but the propagation is not affected.\n+You can still freely override the behaviour by configuring the settings for your data under `inspectit.instrumentation.data`.\n+For details see the corresponding [documentation section](instrumentation/rules.md#defining-the-behaviour).\n+\n+This is a breaking change because your configurations might not work as expected anymore.\n+You now have to make sure that for each data, where you expect down-propagation to take place, you add a behaviour definition:\n+\n+```yaml\n+inspectit:\n+  instrumentation:\n+    data:\n+      down_propagated_var: {down-propagation: JVM_LOCAL}\n+```\n+\n+The change of the `is-tag` setting usually should not affect you, as it automatically picks up tags from the metrics definitions.\n+\n+### Changed metric collection configuration\n+\n+In previous versions Ocelot allowed the short notation in the configuration when defining the metrics collection.\n+\n+```yaml\n+#inspectit.instrumentation.rules is omitted here\n+example_rule:\n+  #...\n+  exit:\n+    method_duration:\n+      #action invocation here....\n+\n+  metrics:\n+    '[method/duration]' : method_duration\n+```\n+\n+This notation is now deprecated and has to be migrated to the explicit notation:\n+\n+```yaml\n+#inspectit.instrumentation.rules is omitted here\n+example_rule:\n+  #...\n+  exit:\n+    method_duration:\n+      #action invocation here....\n+    method_name:\n+      #action invocation here....\n+\n+  metrics:\n+    '[method/duration]': \n+      value: method_duration\n+      constant-tags:\n+        action: checkout\n+      data-tags:\n+        method_name: method_name\n+```\n+\n+This is a breaking change because your configurations might not work as expected anymore.\n+In previous versions tags were automatically picked up from the tag context at the moment of the metric recording.\n+The new notation allows explicit and flexible definition of constant and data tags to be collected with their associated values.\n+Staying with the short notation means that metric recording will only include addition of the common tags and values, thus most likely breaking the expected behavior.\n+\n+More information about the new notation can be found in the [collecting metrics](instrumentation/rules.md#collecting-metrics) section.\n+\n+### Changed EUM server tag configuration\n+\n+In previous versions of the EUM Server, tags derived from beacon values were specified as follows:\n+\n+```yaml\n+inspectit-eum-server:\n+  tags:\n+    beacon:\n+      URL: u\n+```\n+\n+This has been extended with the possibility to perform regex replacements, therefore the equivalent configuration now looks as follows:\n+\n+```yaml\n+inspectit-eum-server:\n+  tags:\n+    beacon:\n+      URL: \n+        input: u\n+```\n+\n+For the details on how to perform regex replacements see the [EUM server documentation](enduser-monitoring/enduser-monitoring-server.md#tags-definition).\n+\n+\n+## Breaking changes in 1.0\n+\n+There are no breaking changes for version 1.0.\n+\n+\n+## Breaking changes in 0.6\n+\n+There are no breaking changes for version 0.6.\n+\n+\n+## Breaking changes in 0.5\n+\n+This section discusses the changes that you need to be aware of when migrating your inspectIT Ocelot components to version 0.5.\n+\n+### Change of the configuration server's configuration prefix\n+\n+Until now, all components used the configuration prefix `inspectit` for the inspectIT Ocelot specific configuration settings.\n+This often led to confusion because, especially in examples, it was not clear to which component a particular setting belonged.\n+To avoid confusion between the configurations of different components the configuration prefix of the configuration server has been changed to `inspectit-config-server`.\n+\n+The configuration server will not load the configuration if it is still located under the `inspectit` prefix.\n+\n+\n+## Breaking changes in 0.4\n+\n+There are no breaking changes for version 0.4.\n\\ No newline at end of file"
  },
  {
    "sha": "a083705bc545809a8cd8ea5b3e0c4607350cd2fc",
    "filename": "inspectit-ocelot-documentation/docs/enduser-monitoring/eum-server-configuration.md",
    "status": "modified",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/d9670d44ed3f48564e6e774e92bbc155318bac11/inspectit-ocelot-documentation/docs/enduser-monitoring/eum-server-configuration.md",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/d9670d44ed3f48564e6e774e92bbc155318bac11/inspectit-ocelot-documentation/docs/enduser-monitoring/eum-server-configuration.md",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/docs/enduser-monitoring/eum-server-configuration.md?ref=d9670d44ed3f48564e6e774e92bbc155318bac11",
    "patch": "@@ -242,6 +242,27 @@ A `t_other` field containing `t_domloaded|437,boomr_fb|252` will produce the fol\n * `t_other.t_domloaded` = `437`\n * `t_other.boomr_fb` = `252`\n \n+#### RT.BMR.*\n+\n+The `rt.bmr.*` fields are resolved based on the content of the beacon's `rt.bmr` field. See the [Boomerang's documentation](https://developer.akamai.com/tools/boomerang/docs/BOOMR.plugins.RT.html) for more information.\n+\n+The `rt.bmr` field contains the following resource timing information for boomerang itself:\n+\n+`[startTime, responseEnd, responseStart, requestStart, connectEnd, secureConnectionStart, connectStart, domainLookupEnd, domainLookupStart, redirectEnd, redirectStart]`\n+\n+##### Example\n+\n+A `rt.bmr` field containing `123,477,,1` will produce the following results:\n+\n+* `rt.bmr.startTime` = `123`\n+* `rt.bmr.responseEnd` = `477`\n+* `rt.bmr.responseStart` = `0`\n+* `rt.bmr.requestStart` = `1`\n+\n+All non-existing values will be produced with zero:\n+\n+* `rt.bmr.*`= `0`\n+\n ## Tags Definition\n \n We distinguish between to different types of tags:"
  },
  {
    "sha": "84c03a4920d6b9e166b7953178a81b2592aaff74",
    "filename": "inspectit-ocelot-documentation/website/sidebars.json",
    "status": "modified",
    "additions": 1,
    "deletions": 12,
    "changes": 13,
    "blob_url": "https://github.com/inspectIT/inspectit-ocelot/blob/d9670d44ed3f48564e6e774e92bbc155318bac11/inspectit-ocelot-documentation/website/sidebars.json",
    "raw_url": "https://github.com/inspectIT/inspectit-ocelot/raw/d9670d44ed3f48564e6e774e92bbc155318bac11/inspectit-ocelot-documentation/website/sidebars.json",
    "contents_url": "https://api.github.com/repos/inspectIT/inspectit-ocelot/contents/inspectit-ocelot-documentation/website/sidebars.json?ref=d9670d44ed3f48564e6e774e92bbc155318bac11",
    "patch": "@@ -49,18 +49,7 @@\n       \"config-server/log-config\"\n     ],\n     \"Breaking Changes\": [\n-      \"breaking-changes/1-8\",\n-      \"breaking-changes/1-7\",\n-      \"breaking-changes/1-6\",\n-      \"breaking-changes/1-5\",\n-      \"breaking-changes/1-4\",\n-      \"breaking-changes/1-3\",\n-      \"breaking-changes/1-2\",\n-      \"breaking-changes/1-1\",\n-      \"breaking-changes/1-0\",\n-      \"breaking-changes/0-6\",\n-      \"breaking-changes/0-5\",\n-      \"breaking-changes/0-4\"\n+      \"breaking-changes/Breaking Changes\"\n     ]\n   }\n }\n\\ No newline at end of file"
  }
]
