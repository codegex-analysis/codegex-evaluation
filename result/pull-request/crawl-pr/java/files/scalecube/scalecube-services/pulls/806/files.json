[
  {
    "sha": "f96316a524bfa4b55ba93e37f0ec4cafd2d5b5d8",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/scalecube/scalecube-services/blob/9debadb43aa948250116325522dcee73d8bbc904/pom.xml",
    "raw_url": "https://github.com/scalecube/scalecube-services/raw/9debadb43aa948250116325522dcee73d8bbc904/pom.xml",
    "contents_url": "https://api.github.com/repos/scalecube/scalecube-services/contents/pom.xml?ref=9debadb43aa948250116325522dcee73d8bbc904",
    "patch": "@@ -62,7 +62,7 @@\n     <reactor.version>Dysprosium-SR9</reactor.version>\n \n     <jackson.version>2.11.0</jackson.version>\n-    <rsocket.version>1.0.1</rsocket.version>\n+    <rsocket.version>1.1.0</rsocket.version>\n     <protostuff.version>1.6.0</protostuff.version>\n     <slf4j.version>1.7.30</slf4j.version>\n     <log4j.version>2.13.2</log4j.version>"
  },
  {
    "sha": "59c22d11a72cda6af369cdbadb3faeca608b4b91",
    "filename": "services-transport-parent/services-transport-rsocket/src/main/java/io/scalecube/services/transport/rsocket/DelegatedLoopResources.java",
    "status": "modified",
    "additions": 1,
    "deletions": 30,
    "changes": 31,
    "blob_url": "https://github.com/scalecube/scalecube-services/blob/9debadb43aa948250116325522dcee73d8bbc904/services-transport-parent/services-transport-rsocket/src/main/java/io/scalecube/services/transport/rsocket/DelegatedLoopResources.java",
    "raw_url": "https://github.com/scalecube/scalecube-services/raw/9debadb43aa948250116325522dcee73d8bbc904/services-transport-parent/services-transport-rsocket/src/main/java/io/scalecube/services/transport/rsocket/DelegatedLoopResources.java",
    "contents_url": "https://api.github.com/repos/scalecube/scalecube-services/contents/services-transport-parent/services-transport-rsocket/src/main/java/io/scalecube/services/transport/rsocket/DelegatedLoopResources.java?ref=9debadb43aa948250116325522dcee73d8bbc904",
    "patch": "@@ -1,21 +1,12 @@\n package io.scalecube.services.transport.rsocket;\n \n-import io.netty.channel.Channel;\n+import java.util.concurrent.atomic.AtomicBoolean;\n import io.netty.channel.EventLoopGroup;\n-import io.netty.channel.ServerChannel;\n import io.netty.channel.epoll.Epoll;\n-import io.netty.channel.epoll.EpollDatagramChannel;\n import io.netty.channel.epoll.EpollEventLoopGroup;\n-import io.netty.channel.epoll.EpollServerSocketChannel;\n-import io.netty.channel.epoll.EpollSocketChannel;\n import io.netty.channel.nio.NioEventLoopGroup;\n-import io.netty.channel.socket.DatagramChannel;\n-import io.netty.channel.socket.nio.NioDatagramChannel;\n-import io.netty.channel.socket.nio.NioServerSocketChannel;\n-import io.netty.channel.socket.nio.NioSocketChannel;\n import io.netty.util.concurrent.DefaultThreadFactory;\n import io.netty.util.concurrent.Future;\n-import java.util.concurrent.atomic.AtomicBoolean;\n import reactor.core.publisher.Mono;\n import reactor.netty.FutureMono;\n import reactor.netty.resources.LoopResources;\n@@ -79,26 +70,6 @@ public EventLoopGroup onServerSelect(boolean useNative) {\n     return bossGroup;\n   }\n \n-  @Override\n-  public Class<? extends Channel> onChannel(EventLoopGroup group) {\n-    return Epoll.isAvailable() ? EpollSocketChannel.class : NioSocketChannel.class;\n-  }\n-\n-  @Override\n-  public Class<? extends DatagramChannel> onDatagramChannel(EventLoopGroup group) {\n-    return Epoll.isAvailable() ? EpollDatagramChannel.class : NioDatagramChannel.class;\n-  }\n-\n-  @Override\n-  public Class<? extends ServerChannel> onServerChannel(EventLoopGroup group) {\n-    return Epoll.isAvailable() ? EpollServerSocketChannel.class : NioServerSocketChannel.class;\n-  }\n-\n-  @Override\n-  public boolean preferNative() {\n-    return Epoll.isAvailable();\n-  }\n-\n   @Override\n   public boolean daemon() {\n     return true;"
  }
]
