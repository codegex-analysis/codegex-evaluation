[
  {
    "sha": "2e32722378c9a8ef79fda945d401e0286adb9b5c",
    "filename": "src/main/java/com/avp/homework4_conditionOperators/task3_colorDetector/LightColorDetector.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/avp02/myHomeWorkJis5-2021/blob/2adf309022ea3ce8abade51b572b0179b5d2dc8a/src/main/java/com/avp/homework4_conditionOperators/task3_colorDetector/LightColorDetector.java",
    "raw_url": "https://github.com/avp02/myHomeWorkJis5-2021/raw/2adf309022ea3ce8abade51b572b0179b5d2dc8a/src/main/java/com/avp/homework4_conditionOperators/task3_colorDetector/LightColorDetector.java",
    "contents_url": "https://api.github.com/repos/avp02/myHomeWorkJis5-2021/contents/src/main/java/com/avp/homework4_conditionOperators/task3_colorDetector/LightColorDetector.java?ref=2adf309022ea3ce8abade51b572b0179b5d2dc8a",
    "patch": "@@ -0,0 +1,22 @@\n+package com.avp.homework4_conditionOperators.task3_colorDetector;\n+\n+public class LightColorDetector {\n+\n+    public String detect(int wavelength) {\n+        if (wavelength >= 380 && wavelength <= 449) {\n+            return \"Violet\";\n+        } else if (wavelength >= 450 && wavelength <= 494) {\n+            return \"Blue\";\n+        } else if (wavelength >= 495 && wavelength <= 569) {\n+            return \"Green\";\n+        } else if (wavelength >= 570 && wavelength <= 589) {\n+            return \"Yellow\";\n+        } else if (wavelength >= 590 && wavelength <= 619) {\n+            return \"Orange\";\n+        } else if (wavelength >= 620 && wavelength <= 750) {\n+            return \"Red\";\n+        } else {\n+            return \"Invisible Light\";\n+        }\n+    }\n+}"
  },
  {
    "sha": "a959c278ec2c15cef06a03b9b7ffd190efaaeb0a",
    "filename": "src/test/java/com/avp/homework4_conditionOperators/task3_colorDetector/LightColorDetectorTest.java",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/avp02/myHomeWorkJis5-2021/blob/2adf309022ea3ce8abade51b572b0179b5d2dc8a/src/test/java/com/avp/homework4_conditionOperators/task3_colorDetector/LightColorDetectorTest.java",
    "raw_url": "https://github.com/avp02/myHomeWorkJis5-2021/raw/2adf309022ea3ce8abade51b572b0179b5d2dc8a/src/test/java/com/avp/homework4_conditionOperators/task3_colorDetector/LightColorDetectorTest.java",
    "contents_url": "https://api.github.com/repos/avp02/myHomeWorkJis5-2021/contents/src/test/java/com/avp/homework4_conditionOperators/task3_colorDetector/LightColorDetectorTest.java?ref=2adf309022ea3ce8abade51b572b0179b5d2dc8a",
    "patch": "@@ -0,0 +1,67 @@\n+package com.avp.homework4_conditionOperators.task3_colorDetector;\n+\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class LightColorDetectorTest {\n+\n+    private static final Logger log = LoggerFactory.getLogger(LightColorDetectorTest.class);\n+    private static final LightColorDetector test = new LightColorDetector();\n+\n+    @Test\n+    public void detectTheColorOfTheSpectrumViolet() {\n+        String expected = \"Violet\";\n+        String actual = test.detect(449);\n+        log.info(\"Color for wavelength {} will be {}\", 449, test.detect(449));\n+        assertEquals(expected, actual);\n+    }\n+    @Test\n+    public void detectTheColorOfTheSpectrumBlue() {\n+        String expected = \"Blue\";\n+        String actual = test.detect(494);\n+        log.info(\"Color for wavelength {} will be {}\", 494, test.detect(494));\n+        assertEquals(expected, actual);\n+    }\n+\n+    @Test\n+    public void detectTheColorOfTheSpectrumGreen() {\n+        String expected = \"Green\";\n+        String actual = test.detect(569);\n+        log.info(\"Color for wavelength {} will be {}\", 569, test.detect(569));\n+        assertEquals(expected, actual);\n+    }\n+\n+    @Test\n+    public void detectTheColorOfTheSpectrumYellow() {\n+        String expected = \"Yellow\";\n+        String actual = test.detect(575);\n+        log.info(\"Color for wavelength {} will be {}\", 575, test.detect(575));\n+        assertEquals(expected, actual);\n+    }\n+\n+    @Test\n+    public void detectTheColorOfTheSpectrumOrange() {\n+        String expected = \"Orange\";\n+        String actual = test.detect(595);\n+        log.info(\"Color for wavelength {} will be {}\", 595, test.detect(595));\n+        assertEquals(expected, actual);\n+    }\n+\n+    @Test\n+    public void detectTheColorOfTheSpectrumRed() {\n+        String expected = \"Red\";\n+        String actual = test.detect(745);\n+        log.info(\"Color for wavelength {} will be {}\", 745, test.detect(745));\n+        assertEquals(expected, actual);\n+    }\n+    @Test\n+    public void detectTheColorOfTheSpectrumInvisibleLight() {\n+        String expected = \"Invisible Light\";\n+        String actual = test.detect(760);\n+        log.info(\"Color for wavelength {} will be {}\", 760, test.detect(760));\n+        assertEquals(expected, actual);\n+    }\n+}\n\\ No newline at end of file"
  }
]
