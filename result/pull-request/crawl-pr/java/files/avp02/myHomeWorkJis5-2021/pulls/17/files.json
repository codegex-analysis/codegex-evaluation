[
  {
    "sha": "640b9f178185e2bb7b4989f5681e9ff0f2bee28c",
    "filename": "src/main/java/com/avp/homework4_conditionOperators/task2_phraseAnaliser/PhraseAnalyser.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/avp02/myHomeWorkJis5-2021/blob/bc3654bbe634db77ede709aee2e415df77bbeab0/src/main/java/com/avp/homework4_conditionOperators/task2_phraseAnaliser/PhraseAnalyser.java",
    "raw_url": "https://github.com/avp02/myHomeWorkJis5-2021/raw/bc3654bbe634db77ede709aee2e415df77bbeab0/src/main/java/com/avp/homework4_conditionOperators/task2_phraseAnaliser/PhraseAnalyser.java",
    "contents_url": "https://api.github.com/repos/avp02/myHomeWorkJis5-2021/contents/src/main/java/com/avp/homework4_conditionOperators/task2_phraseAnaliser/PhraseAnalyser.java?ref=bc3654bbe634db77ede709aee2e415df77bbeab0",
    "patch": "@@ -0,0 +1,12 @@\n+package com.avp.homework4_conditionOperators.task2_phraseAnaliser;\n+\n+public class PhraseAnalyser {\n+    public String analyse(String text) {\n+        if (text.startsWith(\"Make\") && text.endsWith(\"great again\")) {\n+            return \"It stands no chance\";\n+        } if (text.startsWith(\"Make\") || text.endsWith(\"great again\")) {\n+            return \"It could be worse\";\n+        }\n+        return \"It is fine, really\";\n+    }\n+}"
  },
  {
    "sha": "8bfae1f8b47705d1c83451de8be831f24c0a1f37",
    "filename": "src/test/java/com/avp/homework4_conditionOperators/task2_phraseAnaliser/PhraseAnalyserTest.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/avp02/myHomeWorkJis5-2021/blob/bc3654bbe634db77ede709aee2e415df77bbeab0/src/test/java/com/avp/homework4_conditionOperators/task2_phraseAnaliser/PhraseAnalyserTest.java",
    "raw_url": "https://github.com/avp02/myHomeWorkJis5-2021/raw/bc3654bbe634db77ede709aee2e415df77bbeab0/src/test/java/com/avp/homework4_conditionOperators/task2_phraseAnaliser/PhraseAnalyserTest.java",
    "contents_url": "https://api.github.com/repos/avp02/myHomeWorkJis5-2021/contents/src/test/java/com/avp/homework4_conditionOperators/task2_phraseAnaliser/PhraseAnalyserTest.java?ref=bc3654bbe634db77ede709aee2e415df77bbeab0",
    "patch": "@@ -0,0 +1,37 @@\n+package com.avp.homework4_conditionOperators.task2_phraseAnaliser;\n+\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class PhraseAnalyserTest {\n+\n+    private static final Logger log = LoggerFactory.getLogger(PhraseAnalyserTest.class);\n+    private static final PhraseAnalyser test = new PhraseAnalyser();\n+    private static final String expected1 = \"It stands no chance\";\n+    private static final String expected2 = \"It could be worse\";\n+    private static final String expected3 = \"It is fine, really\";\n+\n+    @Test\n+    void analyse1() {\n+        log.info(\"If text will begin with \\\"Make\\\" and finish \\\"great again\\\" method return {}\",\n+                test.analyse(\"Make my bot great again\"));\n+        assertEquals(expected1, test.analyse(\"Make my bot great again\"));\n+    }\n+\n+    @Test\n+    void analyse2() {\n+        log.info(\"If text will begin with \\\"Make\\\" or finish \\\"great again\\\" method return {}\",\n+                test.analyse(\"Make my bot great again\"));\n+        assertEquals(expected2, test.analyse(\"Make my bot great\"));\n+    }\n+\n+    @Test\n+    void analyse3() {\n+        log.info(\"If text won't begin with \\\"Make\\\" and finish \\\"great again\\\" method return {}\",\n+                test.analyse(\"Make my bot great again\"));\n+        assertEquals(expected3, test.analyse(\"My bot is perfect\"));\n+    }\n+}\n\\ No newline at end of file"
  }
]
