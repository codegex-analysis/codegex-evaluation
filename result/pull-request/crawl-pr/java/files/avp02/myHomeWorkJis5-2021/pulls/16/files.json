[
  {
    "sha": "b5591c9edcd78752ccffdd4d6bded704a6588995",
    "filename": "src/main/java/com/avp/homework4_conditionalOperators/task1_signComparator/SignComparator.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/avp02/myHomeWorkJis5-2021/blob/d6ce1fcb43b8fbdc17a1541a6796f98ee527de51/src/main/java/com/avp/homework4_conditionalOperators/task1_signComparator/SignComparator.java",
    "raw_url": "https://github.com/avp02/myHomeWorkJis5-2021/raw/d6ce1fcb43b8fbdc17a1541a6796f98ee527de51/src/main/java/com/avp/homework4_conditionalOperators/task1_signComparator/SignComparator.java",
    "contents_url": "https://api.github.com/repos/avp02/myHomeWorkJis5-2021/contents/src/main/java/com/avp/homework4_conditionalOperators/task1_signComparator/SignComparator.java?ref=d6ce1fcb43b8fbdc17a1541a6796f98ee527de51",
    "patch": "@@ -0,0 +1,13 @@\n+package com.avp.homework4_conditionalOperators.task1_signComparator;\n+\n+public class SignComparator {\n+\n+    public String compare(int number) {\n+        if (number > 0) {\n+            return \"Number is positive\";\n+        } if (number < 0) {\n+            return \"Number is negative\";\n+        }\n+        return \"Number is equal to zero\";\n+    }\n+}"
  },
  {
    "sha": "e0c768e3df746d1740e0e0304b0f17ce02512970",
    "filename": "src/test/java/com/avp/homework4_conditionalOperators/task1_signComparator/SignComparatorTest.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/avp02/myHomeWorkJis5-2021/blob/d6ce1fcb43b8fbdc17a1541a6796f98ee527de51/src/test/java/com/avp/homework4_conditionalOperators/task1_signComparator/SignComparatorTest.java",
    "raw_url": "https://github.com/avp02/myHomeWorkJis5-2021/raw/d6ce1fcb43b8fbdc17a1541a6796f98ee527de51/src/test/java/com/avp/homework4_conditionalOperators/task1_signComparator/SignComparatorTest.java",
    "contents_url": "https://api.github.com/repos/avp02/myHomeWorkJis5-2021/contents/src/test/java/com/avp/homework4_conditionalOperators/task1_signComparator/SignComparatorTest.java?ref=d6ce1fcb43b8fbdc17a1541a6796f98ee527de51",
    "patch": "@@ -0,0 +1,43 @@\n+package com.avp.homework4_conditionalOperators.task1_signComparator;\n+\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+class SignComparatorTest {\n+\n+    private static final Logger log = LoggerFactory.getLogger(SignComparatorTest.class);\n+    private static SignComparator signComparator;\n+    private static String expected1;\n+    private static String expected2;\n+    private static String expected3;\n+\n+    @BeforeAll\n+    static void beforeAll() {\n+        signComparator = new SignComparator();\n+        expected1 = \"Number is positive\";\n+        expected2 = \"Number is negative\";\n+        expected3 = \"Number is equal to zero\";\n+    }\n+\n+    @Test\n+    void compare1() {\n+        log.info(\"If number positive {} compare return {}\", 3, signComparator.compare(3));\n+        assertEquals(expected1, signComparator.compare(3));\n+    }\n+\n+    @Test\n+    void compare2() {\n+        log.info(\"If number negative {} compare return {}\", -9, signComparator.compare(-9));\n+        assertEquals(expected2, signComparator.compare(-9));\n+    }\n+\n+    @Test\n+    void compare3() {\n+        log.info(\"If number equals zero {} compare return {}\", 0, signComparator.compare(0));\n+        assertEquals(expected3, signComparator.compare(0));\n+    }\n+}\n\\ No newline at end of file"
  }
]
