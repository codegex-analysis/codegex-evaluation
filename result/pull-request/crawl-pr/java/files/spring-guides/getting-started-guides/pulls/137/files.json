[
  {
    "sha": "e4ebca8914e5d7e806c55246a5cec328f889277e",
    "filename": "README.adoc",
    "status": "modified",
    "additions": 135,
    "deletions": 134,
    "changes": 269,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/README.adoc",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/README.adoc",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/README.adoc?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -7,12 +7,20 @@\n :toc:\n :icons: font\n :source-highlighter: prettify\n-:project_id: gs-spring-cloud-circuitbreaker\n-This guide walks you through the process of applying circuit breakers to potentially-failing method calls using Spring Cloud Circuit Breaker.\n+:project_id: gs-kotlin-coroutines-hateoas\n+\n+This guide walks you through the process of creating a “Hello, World” Hypermedia-driven REST web service with Spring and https://kotlinlang.org/docs/coroutines-overview.html[Kotlin Coroutines].\n+\n+Hypermedia is an important aspect of REST. It lets you build services that decouple client and server to a large extent and let them evolve independently. The representations returned for REST resources contain not only data but also links to related resources. Thus, the design of the representations is crucial to the design of the overall service.\n+\n+\n+See also : https://spring.io/blog/2019/04/12/going-reactive-with-spring-coroutines-and-kotlin-flow\n \n == What you'll build\n \n-You'll build a microservice application that uses the http://martinfowler.com/bliki/CircuitBreaker.html[Circuit Breaker pattern] to gracefully degrade functionality when a method call fails. Use of the Circuit Breaker pattern can allow a microservice to continue operating when a related service fails, preventing the failure from cascading and giving the failing service time to recover.\n+//TODO\n+\n+\n \n \n == What you'll need\n@@ -22,206 +30,199 @@ include::https://raw.githubusercontent.com/spring-guides/getting-started-macros/\n \n include::https://raw.githubusercontent.com/spring-guides/getting-started-macros/master/how_to_complete_this_guide.adoc[]\n \n-\n-[[reveal-gradle]]\n-[.reveal-gradle]\n-== Build with Gradle\n-\n [[scratch]]\n-[.use-gradle]\n-== Build with Gradle\n+== Starting with Spring Initializr\n \n-include::https://raw.githubusercontent.com/spring-guides/getting-started-macros/master/build_system_intro.adoc[]\n+image::spring-initializr.jpg[spring-initializr]\n \n-include::https://raw.githubusercontent.com/spring-guides/getting-started-macros/master/create_directory_structure_hello.adoc[]\n \n-include::https://raw.githubusercontent.com/spring-guides/getting-started-macros/master/create_both_builds.adoc[]\n+If you use Maven, visit the https://start.spring.io/#!type=maven-project&language=kotlin&platformVersion=2.4.3.RELEASE&packaging=jar&jvmVersion=1.8&groupId=com.example&artifactId=kotlin-coroutines-hateoas&name=kotlin-coroutines-hateoas&description=Demo%20project%20for%20Spring%20Boot&packageName=com.example.demo&dependencies=hateoas,webflux[Spring Initializr] to generate a new project with the required dependency (Spring WebFlux and HATOAS).\n \n-`bookstore/build.gradle`\n-// AsciiDoc source formatting doesn't support groovy, so using java instead\n-[source,java]\n-----\n-include::https://raw.githubusercontent.com/spring-guides/{project_id}/master/initial/bookstore/build.gradle[]\n-----\n+The following listing shows the `pom.xml` file created when you choose Maven:\n \n-`reading/build.gradle`\n-// AsciiDoc source formatting doesn't support groovy, so using java instead\n-[source,java]\n+.Maven\n+[caption=\"pom.xml | \"]\n+====\n+[source,xml]\n ----\n-include::https://raw.githubusercontent.com/spring-guides/{project_id}/master/initial/reading/build.gradle[]\n+include::initial/pom.xml[]\n ----\n+====\n \n-include::https://raw.githubusercontent.com/spring-guides/getting-started-macros/master/spring-boot-gradle-plugin.adoc[]\n-\n-[[reveal-maven]]\n-[.reveal-maven]\n-== Build with Maven\n+If you use Gradle, visit the https://start.spring.io/#!type=gradle-project&language=kotlin&platformVersion=2.4.3.RELEASE&packaging=jar&jvmVersion=1.8&groupId=com.example&artifactId=kotlin-coroutines-hateoas&name=kotlin-coroutines-hateoas&description=Demo%20project%20for%20Spring%20Boot&packageName=com.example.demo&dependencies=hateoas,webflux[Spring Initializr] to generate a new project with the required dependency (Spring Web and HATEOAS).\n \n-[[use-maven]]\n-[.use-maven]\n-== Build with Maven\n+The following listing shows the `build.gradle.kts` file created when you choose Gradle:\n \n-include::https://raw.githubusercontent.com/spring-guides/getting-started-macros/master/build_system_intro_maven.adoc[]\n+.Gradle\n+[caption=\"build.gradle.kts | \"]\n+====\n+[source,gradle]\n+----\n+include::initial/build.gradle.kts[]\n+----\n+====\n \n-include::https://raw.githubusercontent.com/spring-guides/getting-started-macros/master/create_directory_structure_hello.adoc[]\n+== Run the Application\n+To run the application, run the following command in a terminal window (in the initial) directory:\n \n-`bookstore/pom.xml`\n-[source,xml]\n+.Gradle\n+[source,bash]\n ----\n-include::https://raw.githubusercontent.com/spring-guides/{project_id}/master/initial/bookstore/pom.xml[]\n+./gradlew bootRun | grep Tomcat\n ----\n \n-`reading/pom.xml`\n-[source,xml]\n+If you use Maven, run the following command in a terminal window (in the initial) directory:\n+\n+.Maven\n+[source,bash]\n ----\n-include::https://raw.githubusercontent.com/spring-guides/{project_id}/master/initial/reading/pom.xml[]\n+./mvnw spring-boot:run | grep Tomcat\n ----\n \n-include::https://raw.githubusercontent.com/spring-guides/getting-started-macros/master/spring-boot-maven-plugin.adoc[]\n-\n-include::https://raw.githubusercontent.com/spring-guides/getting-started-macros/master/hide-show-sts.adoc[]\n+You will see the application will start with a `Tomcat` server. This is because the `spring-boot-starter-hateoas` dependency have a transitive dependency to `spring-boot-starter-web`. To run the `Reactive` stack with `Netty` and `HATEOAS` we have to exclude this transitive dependency.\n \n+[source,bash]\n+----\n+2021-03-16 07:14:59.026  INFO 76906 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)\n+2021-03-16 07:14:59.033  INFO 76906 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n+2021-03-16 07:14:59.033  INFO 76906 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.43]\n+2021-03-16 07:14:59.084  INFO 76906 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n+2021-03-16 07:14:59.431  INFO 76906 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''\n+----\n \n \n-[[initial]]\n-== Set up a server microservice application\n \n-The Bookstore service will have a single endpoint. It will be accessible at `/recommended`, and will (for simplicity) return a `Mono` of `String` recommended reading list.\n+== Exclude transitive dependencies\n \n-Edit our main class, in `BookstoreApplication.java`. It should look like this:\n+The `spring-boot-starter-hateoas` dependency have a transitive dependency to `spring-boot-starter-web` who will provide a `Tomcat Server`. In case to use a `Netty Server` from the `spring-boot-starter-webflux` dependencies we have to exclude the transitive dependency from the `spring-boot-starter-hateoas`.\n \n-`bookstore/src/main/java/hello/BookstoreApplication.java`\n-[source,java,tabsize=2]\n+.Gradle\n+[source,groovy]\n+.build.gradle.kts\n ----\n-include::complete/bookstore/src/main/java/hello/BookstoreApplication.java[]\n+include::complete/build.gradle.kts[tags=exclude-web]\n ----\n \n-The `@RestController` annotation marks `BookstoreApplication` as a controller class, like `@Controller` does, and also ensures that `@RequestMapping` methods in this class will behave as though annotated with `@ResponseBody`. That is, the return values of `@RequestMapping` methods in this class will be automatically converted appropriately from their original types and will be written directly to the response body.\n+If you use `Maven` modifies the `pom.xml` file like beloved.\n \n-We're going to run this application locally alongside a client service application, so in `src/main/resources/application.properties`, set `server.port` so that the Bookstore service won't conflict with the client when we get that running.\n-\n-`bookstore/src/main/resources/application.properties`\n-[source,properties]\n+.Maven\n+[source,xml]\n+.pom.xml\n ----\n-include::complete/bookstore/src/main/resources/application.properties[]\n+include::complete/pom.xml[tags=exclude-web]\n ----\n \n-== Set up a client microservice application\n-\n-The Reading application will be our front-end (as it were) to the Bookstore application. We'll be able to view our reading list there at `/to-read`, and that reading list will be retrieved from the Bookstore service application.\n+Let's check if now the `Netty` server is taken.\n+Run the following command in a terminal window again :\n \n-`reading/src/main/java/hello/ReadingApplication.java`\n-[source,java,tabsize=2]\n+.Gradle\n+[source,bash]\n+----\n+./gradlew bootRun | grep Netty\n ----\n-package hello;\n-\n-import reactor.core.publisher.Mono;\n-\n-import org.springframework.boot.SpringApplication;\n-import org.springframework.boot.autoconfigure.SpringBootApplication;\n-import org.springframework.web.bind.annotation.RestController;\n-import org.springframework.web.bind.annotation.RequestMapping;\n-import org.springframework.web.reactive.function.client.WebClient;\n-\n-@RestController\n-@SpringBootApplication\n-public class ReadingApplication {\n \n-\t@RequestMapping(\"/to-read\")\n-    public Mono<String> toRead() {\n-      return WebClient.builder().build()\n-      .get().uri(\"http://localhost:8090/recommended\").retrieve()\n-      .bodyToMono(String.class);\n-  }\n+If you use Maven, run the following command:\n \n-  public static void main(String[] args) {\n-    SpringApplication.run(ReadingApplication.class, args);\n-  }\n-}\n+.Maven\n+[source,bash]\n+----\n+./mvnw spring-boot:run | grep Netty\n ----\n \n-To get the list from Bookstore, we're using Spring's `WebClient` class. `WebClient` makes an HTTP GET request to the Bookstore service's URL as we provide it and then returns the result as a `Mono` of `String`. (For more information on using Spring to consume a RESTful service using `WebClient`, see the https://spring.io/guides/gs/reactive-rest-service/[Building a Reactive RESTful Web Service] guide.)\n-\n-Add the `server.port` property to `src/main/resources/application.properties`:\n+You will see the application will start up time will be faster, and we will get the following output.\n \n-`reading/src/main/resources/application.properties`\n-[source,properties]\n+[source,bash]\n ----\n-include::complete/reading/src/main/resources/application.properties[]\n+2021-03-16 07:29:55.186  INFO 78288 --- [           main] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port 8080\n ----\n \n-We now can access, in a browser, the `/to-read` endpoint on our Reading application, and see our reading list. Yet since we rely on the Bookstore application, if anything happens to it, or if Reading is simply unable to access Bookstore, we'll have no list and our users will get a nasty HTTP `500` error message.\n-\n-== Apply The Circuit Breaker Pattern\n-Spring Cloud's Circuit Breaker library provides an implementation of the Circuit Breaker pattern:\n-when we wrap a method call in a circuit breaker, Spring Cloud Circuit Breaker watches for failing\n-calls to that method, and if failures build up to a threshold, Spring Cloud Circuit Breaker opens\n-the circuit so that subsequent calls automatically fail. While the circuit is open, Spring Cloud\n-Circuit Breaker redirects calls to the method, and they’re passed on to our specified fallback\n-method.\n \n-Spring Cloud Circuit Breaker supports many different circuit breaker implementations including,\n-Resilience4J, Hystrix, Sentinal, and Spring Retry.  In this guide we will use the Resilience4J\n-implementation.  To use this implementation we just need to add `spring-cloud-starter-circuitbreaker-reactor-resilience4j`\n-to our application's classpath.\n \n-`reading/pom.xml`\n-[source,xml]\n+== Enable HATEOAS\n+To enable the https://docs.spring.io/spring-hateoas/docs/current/reference/html/#reference[`HATEOAS`] we have defined the `WebStack.WEBFLUX`, and the type of `HypermediaType.HAL` this can be done with the following annotation.\n+[source,kotlin]\n+.DemoApplication.kt\n ----\n-include::complete/reading/pom.xml[]\n+include::complete/src/main/kotlin/com/example/demo/DemoApplication.kt[tags=enableHATEOAS]\n ----\n \n-`reading/build.gradle`\n-[source,groovy]\n-----\n-include::complete/reading/build.gradle[]\n-----\n \n-Spring Cloud Circuit Breaker provides an interface called `ReactiveCircuitBreakerFactory` which\n-we can use to create new circuit breakers for our application.  An implementation of this interface\n-will be auto-configured based on the starter that is on your application's classpath.  Lets create\n-a new service that uses this interface to make API calls to the Bookstore application\n+== Index (Root) Resource\n+=== WebFlux\n+Let's create a `HATEOAS` index controller with https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html[`Reactive Stack`].\n \n-`reading/src/main/java/hello/BookService.java`\n-[source,java]\n+[source,kotlin]\n+.IndexResourceWf.kt\n ----\n-include::complete/reading/src/main/java/hello/BookService.java[]\n+include::complete/src/main/kotlin/com/example/demo/index/IndexResourceWebFlux.kt[tags=indexResourceWebFlux]\n ----\n \n-The `ReactiveCircuitBreakerFactory` has a single method called `create` we can use to create new circuit\n-breakers.  Once we have our circuit breaker all we have\n-to do is call `run`.  Run takes a `Mono` or `Flux` and an optional\n-`Function`.  The optional `Function` parameter acts as our fallback if anything goes wrong.  In our\n-sample here the fallback will just return a `Mono` containing the `String` `Cloud Native Java (O'Reilly)`.\n+=== Coroutines\n+Kotlin Coroutines allow writing asynchronous or non-blocking programming without dealing with the futures or reactive streams.\n+As highlighted by Venkat Subramaniam in his Exploring Coroutines in Kotlin talk, coroutines allow writing concurrent code structured similarly to traditional imperative sequential code.\n \n-With our new service in place, we can update the code in `ReadingApplication` to use this new service.\n+So let' change our https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html[`Spring WebFlux`] function in a https://kotlinlang.org/docs/coroutines-overview.html[Kotlin Coroutines] with adding the `suspend` keyword and let's turn the `HATEOAS Reactive` `WebFluxLink` _self_ link out of the `Mono` publisher to work with.\n \n-`reading/src/main/java/hello/ReadingApplication.java`\n-[source,java]\n+NOTE: Each Resource Object SHOULD contain a _self_ link that corresponds with the IANA registered 'self' relation (as defined by [RFC5988]) whose target is the resource's URI.\n+\n+\n+[source,kotlin]\n+.IndexResourceCo.kt\n ----\n-include::complete/reading/src/main/java/hello/ReadingApplication.java[]\n+include::complete/src/main/kotlin/com/example/demo/index/IndexResourceCo.kt[tags=indexResourceCo]\n ----\n+<1> Create from the `WebFluxLink`  a `Mono<Link>`\n+<2> Use the `awaitSingle()` suspending extension function to get the from the `Mono` publisher  without blocking a thread\n \n \n-== Try it out\n \n-Run both the Bookstore service and the Reading service, and then open a browser to the Reading service, at `localhost:8080/to-read`. You should see the complete recommended reading list:\n+== Try it out\n \n+.WebFlux\n+[source, bash]\n ----\n-Spring in Action (Manning), Cloud Native Java (O'Reilly), Learning Spring Boot (Packt)\n+$ http :8080/webflux\n+\n+HTTP/1.1 200 OK\n+Content-Length: 109\n+Content-Type: application/hal+json\n+\n+{\n+    \"_links\": {\n+        \"self\": {\n+            \"href\": \"http://localhost:8080/webflux\"\n+        },\n+        \"start-spring\": {\n+            \"href\": \"http://start.spring.io\"\n+        }\n+    }\n+}\n ----\n \n-Now shut down the Bookstore application. Our list source is gone, but thanks to Hystrix and Spring Cloud Netflix, we have a reliable abbreviated list to stand in the gap; you should see:\n \n+.Coroutines\n+[source, bash]\n ----\n-Cloud Native Java (O'Reilly)\n+$ http :8080/\n+HTTP/1.1 200 OK\n+Content-Length: 102\n+Content-Type: application/hal+json\n+\n+{\n+    \"_links\": {\n+        \"self\": {\n+            \"href\": \"http://localhost:8080/\"\n+        },\n+        \"start-spring\": {\n+            \"href\": \"http://start.spring.io\"\n+        }\n+    }\n+}\n ----\n \n == Summary\n \n-Congratulations! You've just developed a Spring application that uses the Circuit Breaker pattern to protect against cascading failures and to provide fallback behavior for potentially failing calls.\n-\n-\n+//TODO\n \n \n "
  },
  {
    "sha": "549e00a2a96fa9d7c5dbc9859664a78d980158c2",
    "filename": "complete/.gitignore",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/.gitignore",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/.gitignore",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/.gitignore?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -0,0 +1,33 @@\n+HELP.md\n+target/\n+!.mvn/wrapper/maven-wrapper.jar\n+!**/src/main/**/target/\n+!**/src/test/**/target/\n+\n+### STS ###\n+.apt_generated\n+.classpath\n+.factorypath\n+.project\n+.settings\n+.springBeans\n+.sts4-cache\n+\n+### IntelliJ IDEA ###\n+.idea\n+*.iws\n+*.iml\n+*.ipr\n+\n+### NetBeans ###\n+/nbproject/private/\n+/nbbuild/\n+/dist/\n+/nbdist/\n+/.nb-gradle/\n+build/\n+!**/src/main/**/build/\n+!**/src/test/**/build/\n+\n+### VS Code ###\n+.vscode/"
  },
  {
    "sha": "e76d1f3241d38db9b28f05133823bbed1ad289ff",
    "filename": "complete/.mvn/wrapper/MavenWrapperDownloader.java",
    "status": "added",
    "additions": 117,
    "deletions": 0,
    "changes": 117,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/.mvn/wrapper/MavenWrapperDownloader.java",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/.mvn/wrapper/MavenWrapperDownloader.java",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/.mvn/wrapper/MavenWrapperDownloader.java?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2007-present the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import java.net.*;\n+import java.io.*;\n+import java.nio.channels.*;\n+import java.util.Properties;\n+\n+public class MavenWrapperDownloader {\n+\n+    private static final String WRAPPER_VERSION = \"0.5.6\";\n+    /**\n+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.\n+     */\n+    private static final String DEFAULT_DOWNLOAD_URL = \"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/\"\n+        + WRAPPER_VERSION + \"/maven-wrapper-\" + WRAPPER_VERSION + \".jar\";\n+\n+    /**\n+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to\n+     * use instead of the default one.\n+     */\n+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =\n+            \".mvn/wrapper/maven-wrapper.properties\";\n+\n+    /**\n+     * Path where the maven-wrapper.jar will be saved to.\n+     */\n+    private static final String MAVEN_WRAPPER_JAR_PATH =\n+            \".mvn/wrapper/maven-wrapper.jar\";\n+\n+    /**\n+     * Name of the property which should be used to override the default download url for the wrapper.\n+     */\n+    private static final String PROPERTY_NAME_WRAPPER_URL = \"wrapperUrl\";\n+\n+    public static void main(String args[]) {\n+        System.out.println(\"- Downloader started\");\n+        File baseDirectory = new File(args[0]);\n+        System.out.println(\"- Using base directory: \" + baseDirectory.getAbsolutePath());\n+\n+        // If the maven-wrapper.properties exists, read it and check if it contains a custom\n+        // wrapperUrl parameter.\n+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);\n+        String url = DEFAULT_DOWNLOAD_URL;\n+        if(mavenWrapperPropertyFile.exists()) {\n+            FileInputStream mavenWrapperPropertyFileInputStream = null;\n+            try {\n+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);\n+                Properties mavenWrapperProperties = new Properties();\n+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);\n+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);\n+            } catch (IOException e) {\n+                System.out.println(\"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\");\n+            } finally {\n+                try {\n+                    if(mavenWrapperPropertyFileInputStream != null) {\n+                        mavenWrapperPropertyFileInputStream.close();\n+                    }\n+                } catch (IOException e) {\n+                    // Ignore ...\n+                }\n+            }\n+        }\n+        System.out.println(\"- Downloading from: \" + url);\n+\n+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);\n+        if(!outputFile.getParentFile().exists()) {\n+            if(!outputFile.getParentFile().mkdirs()) {\n+                System.out.println(\n+                        \"- ERROR creating output directory '\" + outputFile.getParentFile().getAbsolutePath() + \"'\");\n+            }\n+        }\n+        System.out.println(\"- Downloading to: \" + outputFile.getAbsolutePath());\n+        try {\n+            downloadFileFromURL(url, outputFile);\n+            System.out.println(\"Done\");\n+            System.exit(0);\n+        } catch (Throwable e) {\n+            System.out.println(\"- Error downloading\");\n+            e.printStackTrace();\n+            System.exit(1);\n+        }\n+    }\n+\n+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {\n+        if (System.getenv(\"MVNW_USERNAME\") != null && System.getenv(\"MVNW_PASSWORD\") != null) {\n+            String username = System.getenv(\"MVNW_USERNAME\");\n+            char[] password = System.getenv(\"MVNW_PASSWORD\").toCharArray();\n+            Authenticator.setDefault(new Authenticator() {\n+                @Override\n+                protected PasswordAuthentication getPasswordAuthentication() {\n+                    return new PasswordAuthentication(username, password);\n+                }\n+            });\n+        }\n+        URL website = new URL(urlString);\n+        ReadableByteChannel rbc;\n+        rbc = Channels.newChannel(website.openStream());\n+        FileOutputStream fos = new FileOutputStream(destination);\n+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);\n+        fos.close();\n+        rbc.close();\n+    }\n+\n+}"
  },
  {
    "sha": "2cc7d4a55c0cd0092912bf49ae38b3a9e3fd0054",
    "filename": "complete/.mvn/wrapper/maven-wrapper.jar",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/.mvn/wrapper/maven-wrapper.jar",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/.mvn/wrapper/maven-wrapper.jar",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/.mvn/wrapper/maven-wrapper.jar?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41"
  },
  {
    "sha": "642d572ce90e5085986bdd9c9204b9404f028084",
    "filename": "complete/.mvn/wrapper/maven-wrapper.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/.mvn/wrapper/maven-wrapper.properties",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/.mvn/wrapper/maven-wrapper.properties",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/.mvn/wrapper/maven-wrapper.properties?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -1 +1,2 @@\n-distributionUrl=https://repo1.maven.org/maven2/org/apache/maven/apache-maven/3.3.9/apache-maven-3.3.9-bin.zip\n+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip\n+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
  },
  {
    "sha": "cefd9a6d722dea783899c05bcfe1b199a7d0acea",
    "filename": "complete/HELP.md",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/HELP.md",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/HELP.md",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/HELP.md?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -0,0 +1,16 @@\n+# Getting Started\n+\n+### Reference Documentation\n+For further reference, please consider the following sections:\n+\n+* [Official Apache Maven documentation](https://maven.apache.org/guides/index.html)\n+* [Spring Boot Maven Plugin Reference Guide](https://docs.spring.io/spring-boot/docs/2.4.3/maven-plugin/reference/html/)\n+* [Create an OCI image](https://docs.spring.io/spring-boot/docs/2.4.3/maven-plugin/reference/html/#build-image)\n+* [Coroutines section of the Spring Framework Documentation](https://docs.spring.io/spring/docs/5.3.4/spring-framework-reference/languages.html#coroutines)\n+* [Spring HATEOAS](https://docs.spring.io/spring-boot/docs/2.4.3/reference/htmlsingle/#boot-features-spring-hateoas)\n+\n+### Guides\n+The following guides illustrate how to use some features concretely:\n+\n+* [Building a Hypermedia-Driven RESTful Web Service](https://spring.io/guides/gs/rest-hateoas/)\n+"
  },
  {
    "sha": "5fd4d5023f1463b5ba3970e33c460c1eb26d748d",
    "filename": "complete/bookstore/.mvn/wrapper/maven-wrapper.jar",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/.mvn/wrapper/maven-wrapper.jar",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/.mvn/wrapper/maven-wrapper.jar",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/bookstore/.mvn/wrapper/maven-wrapper.jar?ref=faa59a570d44575a13d167e5421fd922120309b4"
  },
  {
    "sha": "eb91947648c859bf8ab9101dbe58bafb82db371a",
    "filename": "complete/bookstore/.mvn/wrapper/maven-wrapper.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/.mvn/wrapper/maven-wrapper.properties",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/.mvn/wrapper/maven-wrapper.properties",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/bookstore/.mvn/wrapper/maven-wrapper.properties?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1 +0,0 @@\n-distributionUrl=https://repo1.maven.org/maven2/org/apache/maven/apache-maven/3.3.3/apache-maven-3.3.3-bin.zip\n\\ No newline at end of file"
  },
  {
    "sha": "11efa36677b2926884619c7f5fab15485dea81cb",
    "filename": "complete/bookstore/build.gradle",
    "status": "removed",
    "additions": 0,
    "deletions": 45,
    "changes": 45,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/build.gradle",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/build.gradle",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/bookstore/build.gradle?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1,45 +0,0 @@\n-buildscript {\n-\text {\n-\t\tspringBootVersion = '2.2.2.RELEASET'\n-\t}\n-\trepositories {\n-\t\tmavenCentral()\n-\t\tmaven { url 'https://repo.spring.io/milestone' }\n-\t\tmaven { url 'https://repo.spring.io/snapshot' }\n-\t}\n-\tdependencies {\n-\t\tclasspath(\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\")\n-\t}\n-}\n-\n-apply plugin: 'java'\n-apply plugin: 'eclipse'\n-apply plugin: 'idea'\n-apply plugin: 'org.springframework.boot' \n-apply plugin: 'io.spring.dependency-management' \n-\n-bootJar {\n-\tbaseName = 'bookstore'\n-\tversion = '0.0.1-SNAPSHOT'\n-}\n-sourceCompatibility = 1.8\n-targetCompatibility = 1.8\n-\n-repositories {\n-\tmavenCentral()\n-}\n-\n-\n-dependencies {\n-\tcompile('org.springframework.boot:spring-boot-starter-webflux')\n-\ttestCompile('org.springframework.boot:spring-boot-starter-test') \n-}\n-\n-\n-eclipse {\n-\tclasspath {\n-\t\t containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')\n-\t\t containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'\n-\t}\n-}\n-"
  },
  {
    "sha": "2f0a39cef953c84ac40ec16da5cc266e10293c0f",
    "filename": "complete/bookstore/pom.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 72,
    "changes": 72,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/pom.xml",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/pom.xml",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/bookstore/pom.xml?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1,72 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-  <modelVersion>4.0.0</modelVersion>\n-\n-  <groupId>hello</groupId>\n-  <artifactId>bookstore</artifactId>\n-  <version>0.0.1-SNAPSHOT</version>\n-  <packaging>jar</packaging>\n-\n-  <parent>\n-    <groupId>org.springframework.boot</groupId>\n-    <artifactId>spring-boot-starter-parent</artifactId>\n-    <version>2.2.2.RELEASE</version>\n-    <relativePath/> <!-- lookup parent from repository -->\n-  </parent>\n-\n-  <properties>\n-    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n-    <java.version>1.8</java.version>\n-  </properties>\n-\n-  <dependencies>\n-    <dependency>\n-      <groupId>org.springframework.boot</groupId>\n-      <artifactId>spring-boot-starter-webflux</artifactId>\n-    </dependency>\n-    \n-    <dependency>\n-      <groupId>org.springframework.boot</groupId>\n-      <artifactId>spring-boot-starter-test</artifactId>\n-      <scope>test</scope>\n-    </dependency>\n-  </dependencies>\n-  \n-  <build>\n-    <plugins>\n-      <plugin>\n-        <groupId>org.springframework.boot</groupId>\n-        <artifactId>spring-boot-maven-plugin</artifactId>\n-      </plugin>\n-    </plugins>\n-  </build>\n-\n-  <repositories>\n-    <repository>\n-      <id>spring-snapshots</id>\n-      <name>Spring Snapshots</name>\n-      <url>https://repo.spring.io/libs-snapshot-local</url>\n-      <snapshots>\n-        <enabled>true</enabled>\n-      </snapshots>\n-    </repository>\n-    <repository>\n-      <id>spring-milestones</id>\n-      <name>Spring Milestones</name>\n-      <url>https://repo.spring.io/libs-milestone-local</url>\n-      <snapshots>\n-        <enabled>false</enabled>\n-      </snapshots>\n-    </repository>\n-    <repository>\n-      <id>spring-releases</id>\n-      <name>Spring Releases</name>\n-      <url>https://repo.spring.io/release</url>\n-      <snapshots>\n-        <enabled>false</enabled>\n-      </snapshots>\n-    </repository>\n-  </repositories>\n-\n-</project>"
  },
  {
    "sha": "6dfa00a9f52c364625b09fa1878a80f94c10eb35",
    "filename": "complete/bookstore/src/main/java/hello/BookstoreApplication.java",
    "status": "removed",
    "additions": 0,
    "deletions": 22,
    "changes": 22,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/src/main/java/hello/BookstoreApplication.java",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/src/main/java/hello/BookstoreApplication.java",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/bookstore/src/main/java/hello/BookstoreApplication.java?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1,22 +0,0 @@\n-package hello;\n-\n-import reactor.core.publisher.Mono;\n-\n-import org.springframework.boot.SpringApplication;\n-import org.springframework.boot.autoconfigure.SpringBootApplication;\n-import org.springframework.web.bind.annotation.RestController;\n-import org.springframework.web.bind.annotation.RequestMapping;\n-\n-@RestController\n-@SpringBootApplication\n-public class BookstoreApplication {\n-\n-  @RequestMapping(value = \"/recommended\")\n-  public Mono<String> readingList(){\n-    return Mono.just(\"Spring in Action (Manning), Cloud Native Java (O'Reilly), Learning Spring Boot (Packt)\");\n-  }\n-\n-  public static void main(String[] args) {\n-    SpringApplication.run(BookstoreApplication.class, args);\n-  }\n-}"
  },
  {
    "sha": "f620381b549eeb0c0e3db230b6b144edb4deef06",
    "filename": "complete/bookstore/src/main/resources/application.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/src/main/resources/application.properties",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/bookstore/src/main/resources/application.properties?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1 +0,0 @@\n-server.port=8090"
  },
  {
    "sha": "1c77fd24a0f32578d77a9e8194d6ed76cf7520cc",
    "filename": "complete/bookstore/src/test/java/hello/BookstoreApplicationTests.java",
    "status": "removed",
    "additions": 0,
    "deletions": 26,
    "changes": 26,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/src/test/java/hello/BookstoreApplicationTests.java",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/bookstore/src/test/java/hello/BookstoreApplicationTests.java",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/bookstore/src/test/java/hello/BookstoreApplicationTests.java?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1,26 +0,0 @@\n-package hello;\n-\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.boot.test.context.SpringBootTest;\n-import org.springframework.boot.test.web.client.TestRestTemplate;\n-import org.springframework.test.context.junit4.SpringRunner;\n-import org.springframework.test.web.reactive.server.WebTestClient;\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-\n-@RunWith(SpringRunner.class)\n-@SpringBootTest(webEnvironment= SpringBootTest.WebEnvironment.RANDOM_PORT)\n-public class BookstoreApplicationTests {\n-\n-    @Autowired\n-    private WebTestClient webTestClient;\n-\n-    @Test\n-    public void recommendedTest() {\n-        webTestClient.get().uri(\"/recommended\").exchange()\n-                .expectStatus().isOk()\n-                .expectBody(String.class).value(m -> m.equals(\"Spring in Action (Manning), Cloud Native Java (O'Reilly), Learning Spring Boot (Packt)\"));\n-    }\n-}"
  },
  {
    "sha": "d55d623bc8da35a71b670ea9c9b13e17dfcc4a15",
    "filename": "complete/build.gradle",
    "status": "removed",
    "additions": 0,
    "deletions": 32,
    "changes": 32,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/build.gradle",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/build.gradle",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/build.gradle?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1,32 +0,0 @@\n-buildscript {\n-    repositories {\n-        mavenCentral()\n-    }\n-    dependencies {\n-        classpath(\"org.springframework.boot:spring-boot-gradle-plugin:2.2.2.RELEASE\")\n-    }\n-}\n-\n-apply plugin: 'java'\n-apply plugin: 'eclipse'\n-apply plugin: 'idea'\n-apply plugin: 'org.springframework.boot'\n-apply plugin: 'io.spring.dependency-management'\n-\n-bootJar {\n-    baseName = 'draft-gs-template'\n-    version =  '0.1.0'\n-}\n-\n-repositories {\n-    mavenCentral()\n-}\n-\n-sourceCompatibility = 1.8\n-targetCompatibility = 1.8\n-\n-dependencies {\n-    compile(\"org.springframework.boot:spring-boot-starter-web\")\n-    testCompile(\"org.springframework.boot:spring-boot-starter-test\")\n-}\n-"
  },
  {
    "sha": "6142142a06bc3d8138cf85425c46dd1baaf06580",
    "filename": "complete/build.gradle.kts",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/build.gradle.kts",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/build.gradle.kts",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/build.gradle.kts?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -0,0 +1,44 @@\n+import org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n+\n+plugins {\n+\tid(\"org.springframework.boot\") version \"2.4.3\"\n+\tid(\"io.spring.dependency-management\") version \"1.0.11.RELEASE\"\n+\tkotlin(\"jvm\") version \"1.4.30\"\n+\tkotlin(\"plugin.spring\") version \"1.4.30\"\n+}\n+\n+group = \"com.example\"\n+version = \"0.0.1-SNAPSHOT\"\n+java.sourceCompatibility = JavaVersion.VERSION_11\n+\n+repositories {\n+\tmavenCentral()\n+}\n+\n+dependencies {\n+\t// tag::exclude-web[]\n+\timplementation(\"org.springframework.boot:spring-boot-starter-hateoas\") {\n+\t\texclude(group =\"org.springframework.boot\", module = \"spring-boot-starter-web\")\n+\t}\n+\t// end::exclude-web[]\n+\n+\timplementation(\"org.springframework.boot:spring-boot-starter-webflux\")\n+\timplementation(\"com.fasterxml.jackson.module:jackson-module-kotlin\")\n+\timplementation(\"io.projectreactor.kotlin:reactor-kotlin-extensions\")\n+\timplementation(\"org.jetbrains.kotlin:kotlin-reflect\")\n+\timplementation(\"org.jetbrains.kotlin:kotlin-stdlib-jdk8\")\n+\timplementation(\"org.jetbrains.kotlinx:kotlinx-coroutines-reactor\")\n+\ttestImplementation(\"org.springframework.boot:spring-boot-starter-test\")\n+\ttestImplementation(\"io.projectreactor:reactor-test\")\n+}\n+\n+tasks.withType<KotlinCompile> {\n+\tkotlinOptions {\n+\t\tfreeCompilerArgs = listOf(\"-Xjsr305=strict\")\n+\t\tjvmTarget = \"1.8\"\n+\t}\n+}\n+\n+tasks.withType<Test> {\n+\tuseJUnitPlatform()\n+}"
  },
  {
    "sha": "e708b1c023ec8b20f512888fe07c5bd3ff77bb8f",
    "filename": "complete/gradle/wrapper/gradle-wrapper.jar",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/gradle/wrapper/gradle-wrapper.jar",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/gradle/wrapper/gradle-wrapper.jar",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/gradle/wrapper/gradle-wrapper.jar?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41"
  },
  {
    "sha": "442d9132ea32808ad980df4bd233b359f76341a7",
    "filename": "complete/gradle/wrapper/gradle-wrapper.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/gradle/wrapper/gradle-wrapper.properties",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/gradle/wrapper/gradle-wrapper.properties",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/gradle/wrapper/gradle-wrapper.properties?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -1,5 +1,5 @@\n distributionBase=GRADLE_USER_HOME\n distributionPath=wrapper/dists\n-distributionUrl=https\\://services.gradle.org/distributions/gradle-4.10.3-all.zip\n+distributionUrl=https\\://services.gradle.org/distributions/gradle-6.8.3-bin.zip\n zipStoreBase=GRADLE_USER_HOME\n zipStorePath=wrapper/dists"
  },
  {
    "sha": "4f906e0c811fc9e230eb44819f509cd0627f2600",
    "filename": "complete/gradlew",
    "status": "modified",
    "additions": 33,
    "deletions": 20,
    "changes": 53,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/gradlew",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/gradlew",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/gradlew?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -1,5 +1,21 @@\n #!/usr/bin/env sh\n \n+#\n+# Copyright 2015 the original author or authors.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#      https://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n ##############################################################################\n ##\n ##  Gradle start up script for UN*X\n@@ -28,7 +44,7 @@ APP_NAME=\"Gradle\"\n APP_BASE_NAME=`basename \"$0\"`\n \n # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-DEFAULT_JVM_OPTS=\"\"\n+DEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n \n # Use the maximum available, or set MAX_FD != -1 to use that value.\n MAX_FD=\"maximum\"\n@@ -66,6 +82,7 @@ esac\n \n CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n \n+\n # Determine the Java command to use to start the JVM.\n if [ -n \"$JAVA_HOME\" ] ; then\n     if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n@@ -109,10 +126,11 @@ if $darwin; then\n     GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\n fi\n \n-# For Cygwin, switch paths to Windows format before running java\n-if $cygwin ; then\n+# For Cygwin or MSYS, switch paths to Windows format before running java\n+if [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n     APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n     CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n+\n     JAVACMD=`cygpath --unix \"$JAVACMD\"`\n \n     # We build the pattern for arguments to be converted via cygpath\n@@ -138,19 +156,19 @@ if $cygwin ; then\n         else\n             eval `echo args$i`=\"\\\"$arg\\\"\"\n         fi\n-        i=$((i+1))\n+        i=`expr $i + 1`\n     done\n     case $i in\n-        (0) set -- ;;\n-        (1) set -- \"$args0\" ;;\n-        (2) set -- \"$args0\" \"$args1\" ;;\n-        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n-        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n-        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n-        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n-        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n-        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n-        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n+        0) set -- ;;\n+        1) set -- \"$args0\" ;;\n+        2) set -- \"$args0\" \"$args1\" ;;\n+        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n+        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n+        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n+        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n+        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n+        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n+        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n     esac\n fi\n \n@@ -159,14 +177,9 @@ save () {\n     for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n     echo \" \"\n }\n-APP_ARGS=$(save \"$@\")\n+APP_ARGS=`save \"$@\"`\n \n # Collect all arguments for the java command, following the shell quoting and substitution rules\n eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n \n-# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\n-if [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n-  cd \"$(dirname \"$0\")\"\n-fi\n-\n exec \"$JAVACMD\" \"$@\""
  },
  {
    "sha": "107acd32c4e687021ef32db511e8a206129b88ec",
    "filename": "complete/gradlew.bat",
    "status": "modified",
    "additions": 24,
    "deletions": 19,
    "changes": 43,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/gradlew.bat",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/gradlew.bat",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/gradlew.bat?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -1,3 +1,19 @@\n+@rem\n+@rem Copyright 2015 the original author or authors.\n+@rem\n+@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n+@rem you may not use this file except in compliance with the License.\n+@rem You may obtain a copy of the License at\n+@rem\n+@rem      https://www.apache.org/licenses/LICENSE-2.0\n+@rem\n+@rem Unless required by applicable law or agreed to in writing, software\n+@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+@rem See the License for the specific language governing permissions and\n+@rem limitations under the License.\n+@rem\n+\n @if \"%DEBUG%\" == \"\" @echo off\n @rem ##########################################################################\n @rem\n@@ -13,15 +29,18 @@ if \"%DIRNAME%\" == \"\" set DIRNAME=.\n set APP_BASE_NAME=%~n0\n set APP_HOME=%DIRNAME%\n \n+@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\n+for %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n+\n @rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\n-set DEFAULT_JVM_OPTS=\n+set DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n \n @rem Find java.exe\n if defined JAVA_HOME goto findJavaFromJavaHome\n \n set JAVA_EXE=java.exe\n %JAVA_EXE% -version >NUL 2>&1\n-if \"%ERRORLEVEL%\" == \"0\" goto init\n+if \"%ERRORLEVEL%\" == \"0\" goto execute\n \n echo.\n echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n@@ -35,7 +54,7 @@ goto fail\n set JAVA_HOME=%JAVA_HOME:\"=%\n set JAVA_EXE=%JAVA_HOME%/bin/java.exe\n \n-if exist \"%JAVA_EXE%\" goto init\n+if exist \"%JAVA_EXE%\" goto execute\n \n echo.\n echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\n@@ -45,28 +64,14 @@ echo location of your Java installation.\n \n goto fail\n \n-:init\n-@rem Get command-line arguments, handling Windows variants\n-\n-if not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n-\n-:win9xME_args\n-@rem Slurp the command line arguments.\n-set CMD_LINE_ARGS=\n-set _SKIP=2\n-\n-:win9xME_args_slurp\n-if \"x%~1\" == \"x\" goto execute\n-\n-set CMD_LINE_ARGS=%*\n-\n :execute\n @rem Setup the command line\n \n set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n \n+\n @rem Execute Gradle\n-\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n+\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n \n :end\n @rem End local scope for the variables with windows NT shell"
  },
  {
    "sha": "a16b5431b4c3cab50323a3f558003fd0abd87dad",
    "filename": "complete/mvnw",
    "status": "modified",
    "additions": 127,
    "deletions": 50,
    "changes": 177,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/mvnw",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/mvnw",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/mvnw?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -19,7 +19,7 @@\n # ----------------------------------------------------------------------------\n \n # ----------------------------------------------------------------------------\n-# Maven2 Start Up Batch script\n+# Maven Start Up Batch script\n #\n # Required ENV vars:\n # ------------------\n@@ -54,38 +54,16 @@ case \"`uname`\" in\n   CYGWIN*) cygwin=true ;;\n   MINGW*) mingw=true;;\n   Darwin*) darwin=true\n-           #\n-           # Look for the Apple JDKs first to preserve the existing behaviour, and then look\n-           # for the new JDKs provided by Oracle.\n-           #\n-           if [ -z \"$JAVA_HOME\" ] && [ -L /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK ] ; then\n-             #\n-             # Apple JDKs\n-             #\n-             export JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home\n-           fi\n-\n-           if [ -z \"$JAVA_HOME\" ] && [ -L /System/Library/Java/JavaVirtualMachines/CurrentJDK ] ; then\n-             #\n-             # Apple JDKs\n-             #\n-             export JAVA_HOME=/System/Library/Java/JavaVirtualMachines/CurrentJDK/Contents/Home\n-           fi\n-\n-           if [ -z \"$JAVA_HOME\" ] && [ -L \"/Library/Java/JavaVirtualMachines/CurrentJDK\" ] ; then\n-             #\n-             # Oracle JDKs\n-             #\n-             export JAVA_HOME=/Library/Java/JavaVirtualMachines/CurrentJDK/Contents/Home\n-           fi\n-\n-           if [ -z \"$JAVA_HOME\" ] && [ -x \"/usr/libexec/java_home\" ]; then\n-             #\n-             # Apple JDKs\n-             #\n-             export JAVA_HOME=`/usr/libexec/java_home`\n-           fi\n-           ;;\n+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n+    if [ -z \"$JAVA_HOME\" ]; then\n+      if [ -x \"/usr/libexec/java_home\" ]; then\n+        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n+      else\n+        export JAVA_HOME=\"/Library/Java/Home\"\n+      fi\n+    fi\n+    ;;\n esac\n \n if [ -z \"$JAVA_HOME\" ] ; then\n@@ -130,13 +108,12 @@ if $cygwin ; then\n     CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\n fi\n \n-# For Migwn, ensure paths are in UNIX format before anything is touched\n+# For Mingw, ensure paths are in UNIX format before anything is touched\n if $mingw ; then\n   [ -n \"$M2_HOME\" ] &&\n     M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n   [ -n \"$JAVA_HOME\" ] &&\n     JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n-  # TODO classpath?\n fi\n \n if [ -z \"$JAVA_HOME\" ]; then\n@@ -184,27 +161,28 @@ fi\n \n CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n \n-# For Cygwin, switch paths to Windows format before running java\n-if $cygwin; then\n-  [ -n \"$M2_HOME\" ] &&\n-    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n-  [ -n \"$JAVA_HOME\" ] &&\n-    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n-  [ -n \"$CLASSPATH\" ] &&\n-    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n-fi\n-\n # traverses directory structure from process work directory to filesystem root\n # first directory with .mvn subdirectory is considered project base directory\n find_maven_basedir() {\n-  local basedir=$(pwd)\n-  local wdir=$(pwd)\n+\n+  if [ -z \"$1\" ]\n+  then\n+    echo \"Path not specified to find_maven_basedir\"\n+    return 1\n+  fi\n+\n+  basedir=\"$1\"\n+  wdir=\"$1\"\n   while [ \"$wdir\" != '/' ] ; do\n     if [ -d \"$wdir\"/.mvn ] ; then\n       basedir=$wdir\n       break\n     fi\n-    wdir=$(cd \"$wdir/..\"; pwd)\n+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n+    if [ -d \"${wdir}\" ]; then\n+      wdir=`cd \"$wdir/..\"; pwd`\n+    fi\n+    # end of workaround\n   done\n   echo \"${basedir}\"\n }\n@@ -216,9 +194,108 @@ concat_lines() {\n   fi\n }\n \n-export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-$(find_maven_basedir)}\n+BASE_DIR=`find_maven_basedir \"$(pwd)\"`\n+if [ -z \"$BASE_DIR\" ]; then\n+  exit 1;\n+fi\n+\n+##########################################################################################\n+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+# This allows using the maven wrapper in projects that prohibit checking in binary data.\n+##########################################################################################\n+if [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n+    fi\n+else\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n+    fi\n+    if [ -n \"$MVNW_REPOURL\" ]; then\n+      jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    else\n+      jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    fi\n+    while IFS=\"=\" read key value; do\n+      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n+      esac\n+    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Downloading from: $jarUrl\"\n+    fi\n+    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n+    if $cygwin; then\n+      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n+    fi\n+\n+    if command -v wget > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found wget ... using wget\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            wget \"$jarUrl\" -O \"$wrapperJarPath\"\n+        else\n+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n+        fi\n+    elif command -v curl > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found curl ... using curl\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        else\n+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        fi\n+\n+    else\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Falling back to using Java to download\"\n+        fi\n+        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n+        # For Cygwin, switch paths to Windows format before running javac\n+        if $cygwin; then\n+          javaClass=`cygpath --path --windows \"$javaClass\"`\n+        fi\n+        if [ -e \"$javaClass\" ]; then\n+            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n+                fi\n+                # Compiling the Java class\n+                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n+            fi\n+            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                # Running the downloader\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Running MavenWrapperDownloader.java ...\"\n+                fi\n+                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n+            fi\n+        fi\n+    fi\n+fi\n+##########################################################################################\n+# End of extension\n+##########################################################################################\n+\n+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\n+if [ \"$MVNW_VERBOSE\" = true ]; then\n+  echo $MAVEN_PROJECTBASEDIR\n+fi\n MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n \n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n+  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\n+fi\n+\n # Provide a \"standardized\" way to retrieve the CLI args that will\n # work with both Windows and non-Windows executions.\n MAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\n@@ -230,4 +307,4 @@ exec \"$JAVACMD\" \\\n   $MAVEN_OPTS \\\n   -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n   \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n-  ${WRAPPER_LAUNCHER} \"$@\"\n+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\""
  },
  {
    "sha": "c8d43372c986d97911cdc21bd87e0cbe3d83bdda",
    "filename": "complete/mvnw.cmd",
    "status": "modified",
    "additions": 46,
    "deletions": 9,
    "changes": 55,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/mvnw.cmd",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/mvnw.cmd",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/mvnw.cmd?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -18,15 +18,15 @@\n @REM ----------------------------------------------------------------------------\n \n @REM ----------------------------------------------------------------------------\n-@REM Maven2 Start Up Batch script\n+@REM Maven Start Up Batch script\n @REM\n @REM Required ENV vars:\n @REM JAVA_HOME - location of a JDK home dir\n @REM\n @REM Optional ENV vars\n @REM M2_HOME - location of maven2's installed home dir\n @REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n-@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending\n+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n @REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n @REM     e.g. to debug Maven itself, use\n @REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@@ -35,7 +35,9 @@\n \n @REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n @echo off\n-@REM enable echoing my setting MAVEN_BATCH_ECHO to 'on'\n+@REM set title of command window\n+title %0\n+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n @if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n \n @REM set %HOME% to equivalent of $HOME\n@@ -80,8 +82,6 @@ goto error\n \n :init\n \n-set MAVEN_CMD_LINE_ARGS=%*\n-\n @REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n @REM Fallback to current working directory if not found.\n \n@@ -117,11 +117,48 @@ for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do s\n :endReadAdditionalConfig\n \n SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n-\n-set WRAPPER_JAR=\"\".\\.mvn\\wrapper\\maven-wrapper.jar\"\"\n+set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n \n-%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CMD_LINE_ARGS%\n+set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+\n+FOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n+    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n+)\n+\n+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n+if exist %WRAPPER_JAR% (\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Found %WRAPPER_JAR%\n+    )\n+) else (\n+    if not \"%MVNW_REPOURL%\" == \"\" (\n+        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    )\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n+        echo Downloading from: %DOWNLOAD_URL%\n+    )\n+\n+    powershell -Command \"&{\"^\n+\t\t\"$webclient = new-object System.Net.WebClient;\"^\n+\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n+\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n+\t\t\"}\"^\n+\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n+\t\t\"}\"\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Finished downloading %WRAPPER_JAR%\n+    )\n+)\n+@REM End of extension\n+\n+@REM Provide a \"standardized\" way to retrieve the CLI args that will\n+@REM work with both Windows and non-Windows executions.\n+set MAVEN_CMD_LINE_ARGS=%*\n+\n+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\n if ERRORLEVEL 1 goto error\n goto end\n \n@@ -142,4 +179,4 @@ if \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n \n if \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n \n-exit /B %ERROR_CODE%\n\\ No newline at end of file\n+exit /B %ERROR_CODE%"
  },
  {
    "sha": "41370cd762958901d261a743f1593249153d0859",
    "filename": "complete/pom.xml",
    "status": "modified",
    "additions": 94,
    "deletions": 35,
    "changes": 129,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/pom.xml",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/74e8b3df2b70d727ae8f35667aacbca28864ce41/complete/pom.xml",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/pom.xml?ref=74e8b3df2b70d727ae8f35667aacbca28864ce41",
    "patch": "@@ -1,41 +1,100 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-    <modelVersion>4.0.0</modelVersion>\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<parent>\n+\t\t<groupId>org.springframework.boot</groupId>\n+\t\t<artifactId>spring-boot-starter-parent</artifactId>\n+\t\t<version>2.4.3</version>\n+\t\t<relativePath/> <!-- lookup parent from repository -->\n+\t</parent>\n+\t<groupId>com.example</groupId>\n+\t<artifactId>gs-kotlin-coroutines-hateoas-complete</artifactId>\n+\t<version>0.0.1-SNAPSHOT</version>\n+\t<name>gs-kotlin-coroutines-hateoas-complete</name>\n+\t<description>Demo project for Spring Boot</description>\n+\t<properties>\n+\t\t<java.version>1.8</java.version>\n+\t\t<kotlin.version>1.4.30</kotlin.version>\n+\t</properties>\n+\t<dependencies>\n+\t\t<!-- tag::exclude-web[] -->\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-hateoas</artifactId>\n+\t\t\t<exclusions>\n+\t\t\t\t<exclusion>\n+\t\t\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t\t\t<artifactId>spring-boot-starter-web</artifactId>\n+\t\t\t\t</exclusion>\n+\t\t\t</exclusions>\n+\t\t</dependency>\n+\t\t<!-- end::exclude-web[] -->\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-webflux</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.fasterxml.jackson.module</groupId>\n+\t\t\t<artifactId>jackson-module-kotlin</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>io.projectreactor.kotlin</groupId>\n+\t\t\t<artifactId>reactor-kotlin-extensions</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n+\t\t\t<artifactId>kotlin-reflect</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n+\t\t\t<artifactId>kotlin-stdlib-jdk8</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.jetbrains.kotlinx</groupId>\n+\t\t\t<artifactId>kotlinx-coroutines-reactor</artifactId>\n+\t\t</dependency>\n \n-    <groupId>org.springframework</groupId>\n-    <artifactId>draft-gs-template</artifactId>\n-    <version>0.1.0</version>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>io.projectreactor</groupId>\n+\t\t\t<artifactId>reactor-test</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t</dependencies>\n \n-    <parent>\n-        <groupId>org.springframework.boot</groupId>\n-        <artifactId>spring-boot-starter-parent</artifactId>\n-        <version>2.2.2.RELEASE</version>\n-    </parent>\n-\n-    <dependencies>\n-        <dependency>\n-            <groupId>org.springframework.boot</groupId>\n-            <artifactId>spring-boot-starter-web</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.springframework.boot</groupId>\n-            <artifactId>spring-boot-starter-test</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n-    </dependencies>\n-\n-    <properties>\n-        <java.version>1.8</java.version>\n-    </properties>\n-\n-    <build>\n-        <plugins>\n-            <plugin>\n-                <groupId>org.springframework.boot</groupId>\n-                <artifactId>spring-boot-maven-plugin</artifactId>\n-            </plugin>\n-        </plugins>\n-    </build>\n+\t<build>\n+\t\t<sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>\n+\t\t<testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n+\t\t\t</plugin>\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n+\t\t\t\t<artifactId>kotlin-maven-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<args>\n+\t\t\t\t\t\t<arg>-Xjsr305=strict</arg>\n+\t\t\t\t\t</args>\n+\t\t\t\t\t<compilerPlugins>\n+\t\t\t\t\t\t<plugin>spring</plugin>\n+\t\t\t\t\t</compilerPlugins>\n+\t\t\t\t</configuration>\n+\t\t\t\t<dependencies>\n+\t\t\t\t\t<dependency>\n+\t\t\t\t\t\t<groupId>org.jetbrains.kotlin</groupId>\n+\t\t\t\t\t\t<artifactId>kotlin-maven-allopen</artifactId>\n+\t\t\t\t\t\t<version>${kotlin.version}</version>\n+\t\t\t\t\t</dependency>\n+\t\t\t\t</dependencies>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n \n </project>"
  },
  {
    "sha": "5fd4d5023f1463b5ba3970e33c460c1eb26d748d",
    "filename": "complete/reading/.mvn/wrapper/maven-wrapper.jar",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/.mvn/wrapper/maven-wrapper.jar",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/.mvn/wrapper/maven-wrapper.jar",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/reading/.mvn/wrapper/maven-wrapper.jar?ref=faa59a570d44575a13d167e5421fd922120309b4"
  },
  {
    "sha": "eb91947648c859bf8ab9101dbe58bafb82db371a",
    "filename": "complete/reading/.mvn/wrapper/maven-wrapper.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/.mvn/wrapper/maven-wrapper.properties",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/.mvn/wrapper/maven-wrapper.properties",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/reading/.mvn/wrapper/maven-wrapper.properties?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1 +0,0 @@\n-distributionUrl=https://repo1.maven.org/maven2/org/apache/maven/apache-maven/3.3.3/apache-maven-3.3.3-bin.zip\n\\ No newline at end of file"
  },
  {
    "sha": "a5b8f38bedc515aa868aa93b1f7c786e1a5d29e8",
    "filename": "complete/reading/build.gradle",
    "status": "removed",
    "additions": 0,
    "deletions": 51,
    "changes": 51,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/build.gradle",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/build.gradle",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/reading/build.gradle?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1,51 +0,0 @@\n-buildscript {\n-\text {\n-\t\tspringBootVersion = '2.2.2.RELEASE'\n-\t}\n-\trepositories {\n-\t\tmavenCentral()\n-\t\tmaven { url 'https://repo.spring.io/milestone' }\n-\t\tmaven { url 'https://repo.spring.io/snapshot' }\n-\t}\n-\tdependencies {\n-\t\tclasspath(\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\")\n-\t}\n-}\n-\n-apply plugin: 'java'\n-apply plugin: 'eclipse'\n-apply plugin: 'idea'\n-apply plugin: 'org.springframework.boot' \n-apply plugin: 'io.spring.dependency-management' \n-\n-bootJar {\n-\tbaseName = 'reading'\n-\tversion = '0.0.1-SNAPSHOT'\n-}\n-sourceCompatibility = 1.8\n-targetCompatibility = 1.8\n-\n-repositories {\n-\tmavenCentral()\n-}\n-\n-\n-dependencies {\n-\tcompile('org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j')\n-\tcompile('org.springframework.boot:spring-boot-starter-webflux')\n-\ttestCompile('org.springframework.boot:spring-boot-starter-test') \n-}\n-\n-dependencyManagement {\n-\timports { \n-\t\tmavenBom \"org.springframework.cloud:spring-cloud-dependencies:Hoxton.SR1\"\n-\t}\n-}\n-\n-eclipse {\n-\tclasspath {\n-\t\t containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')\n-\t\t containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'\n-\t}\n-}\n-"
  },
  {
    "sha": "8a21fbe448fb0fbf113d3aa5b79b3ec643e47d9c",
    "filename": "complete/reading/pom.xml",
    "status": "removed",
    "additions": 0,
    "deletions": 88,
    "changes": 88,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/pom.xml",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/pom.xml",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/reading/pom.xml?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1,88 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n-\t<modelVersion>4.0.0</modelVersion>\n-\n-\t<groupId>hello</groupId>\n-\t<artifactId>reading</artifactId>\n-\t<version>0.0.1-SNAPSHOT</version>\n-\t<packaging>jar</packaging>\n-\n-\t<parent>\n-\t\t<groupId>org.springframework.boot</groupId>\n-\t\t<artifactId>spring-boot-starter-parent</artifactId>\n-\t\t<version>2.2.2.RELEASE</version>\n-\t\t<relativePath/> <!-- lookup parent from repository -->\n-\t</parent>\n-\n-\t<properties>\n-\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n-\t\t<java.version>1.8</java.version>\n-\t</properties>\n-\n-\t<dependencies>\n-\t\t<dependency>\n-\t\t\t<groupId>org.springframework.cloud</groupId>\n-\t\t\t<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>\n-\t\t</dependency>\n-\t\t<dependency>\n-\t\t\t<groupId>org.springframework.boot</groupId>\n-\t\t\t<artifactId>spring-boot-starter-webflux</artifactId>\n-\t\t</dependency>\n-\t\t\n-\t\t<dependency>\n-\t\t\t<groupId>org.springframework.boot</groupId>\n-\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n-\t\t\t<scope>test</scope>\n-\t\t</dependency>\n-\t</dependencies>\n-\t\n-\t<dependencyManagement>\n-\t\t<dependencies>\n-\t\t\t<dependency>\n-\t\t\t\t<groupId>org.springframework.cloud</groupId>\n-\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\n-\t\t\t\t<version>Hoxton.SR1</version>\n-\t\t\t\t<type>pom</type>\n-\t\t\t\t<scope>import</scope>\n-\t\t\t</dependency>\n-\t\t</dependencies>\n-\t</dependencyManagement>\n-\t\n-\t<build>\n-\t\t<plugins>\n-\t\t\t<plugin>\n-\t\t\t\t<groupId>org.springframework.boot</groupId>\n-\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n-\t\t\t</plugin>\n-\t\t</plugins>\n-\t</build>\n-\n-\t<repositories>\n-\t\t<repository>\n-\t\t\t<id>spring-snapshots</id>\n-\t\t\t<name>Spring Snapshots</name>\n-\t\t\t<url>https://repo.spring.io/libs-snapshot-local</url>\n-\t\t\t<snapshots>\n-\t\t\t\t<enabled>true</enabled>\n-\t\t\t</snapshots>\n-\t\t</repository>\n-\t\t<repository>\n-\t\t\t<id>spring-milestones</id>\n-\t\t\t<name>Spring Milestones</name>\n-\t\t\t<url>https://repo.spring.io/libs-milestone-local</url>\n-\t\t\t<snapshots>\n-\t\t\t\t<enabled>false</enabled>\n-\t\t\t</snapshots>\n-\t\t</repository>\n-\t\t<repository>\n-\t\t\t<id>spring-releases</id>\n-\t\t\t<name>Spring Releases</name>\n-\t\t\t<url>https://repo.spring.io/release</url>\n-\t\t\t<snapshots>\n-\t\t\t\t<enabled>false</enabled>\n-\t\t\t</snapshots>\n-\t\t</repository>\n-\t</repositories>\n-\n-</project>"
  },
  {
    "sha": "67f0b0a456a61ca7b72303ce7815dbf7b3529d07",
    "filename": "complete/reading/src/main/java/hello/BookService.java",
    "status": "removed",
    "additions": 0,
    "deletions": 32,
    "changes": 32,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/src/main/java/hello/BookService.java",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/src/main/java/hello/BookService.java",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/reading/src/main/java/hello/BookService.java?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1,32 +0,0 @@\n-package hello;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import reactor.core.publisher.Mono;\n-\n-import org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreaker;\n-import org.springframework.cloud.client.circuitbreaker.ReactiveCircuitBreakerFactory;\n-import org.springframework.stereotype.Service;\n-import org.springframework.web.reactive.function.client.WebClient;\n-\n-@Service\n-public class BookService {\n-\n-  private static final Logger LOG = LoggerFactory.getLogger(BookService.class);\n-\n-\n-  private final WebClient webClient;\n-  private final ReactiveCircuitBreaker readingListCircuitBreaker;\n-\n-  public BookService(ReactiveCircuitBreakerFactory circuitBreakerFactory) {\n-    this.webClient = WebClient.builder().baseUrl(\"http://localhost:8090\").build();\n-    this.readingListCircuitBreaker = circuitBreakerFactory.create(\"recommended\");\n-  }\n-\n-  public Mono<String> readingList() {\n-    return readingListCircuitBreaker.run(webClient.get().uri(\"/recommended\").retrieve().bodyToMono(String.class), throwable -> {\n-      LOG.warn(\"Error making request to book service\", throwable);\n-      return Mono.just(\"Cloud Native Java (O'Reilly)\");\n-    });\n-  }\n-}"
  },
  {
    "sha": "a7fd88eb8abfd81d8a46c3541a64e92ffd2d67a9",
    "filename": "complete/reading/src/main/java/hello/ReadingApplication.java",
    "status": "removed",
    "additions": 0,
    "deletions": 27,
    "changes": 27,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/src/main/java/hello/ReadingApplication.java",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/src/main/java/hello/ReadingApplication.java",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/reading/src/main/java/hello/ReadingApplication.java?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1,27 +0,0 @@\n-package hello;\n-\n-import reactor.core.publisher.Mono;\n-\n-import org.springframework.boot.SpringApplication;\n-import org.springframework.boot.autoconfigure.SpringBootApplication;\n-import org.springframework.web.bind.annotation.RestController;\n-import org.springframework.web.bind.annotation.RequestMapping;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.web.reactive.function.client.WebClient;\n-\n-@RestController\n-@SpringBootApplication\n-public class ReadingApplication {\n-\n-  @Autowired\n-  private BookService bookService;\n-\n-  @RequestMapping(\"/to-read\")\n-  public Mono<String> toRead() {\n-    return bookService.readingList();\n-  }\n-\n-  public static void main(String[] args) {\n-    SpringApplication.run(ReadingApplication.class, args);\n-  }\n-}"
  },
  {
    "sha": "4c00e40debf74912d9b7c8da72b78461cde4dd86",
    "filename": "complete/reading/src/main/resources/application.properties",
    "status": "removed",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/src/main/resources/application.properties",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/reading/src/main/resources/application.properties?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1 +0,0 @@\n-server.port=8080"
  },
  {
    "sha": "61127b9bc7654ea4236647dd924d88e1097a2364",
    "filename": "complete/reading/src/test/java/hello/BookServiceTests.java",
    "status": "removed",
    "additions": 0,
    "deletions": 32,
    "changes": 32,
    "blob_url": "https://github.com/spring-guides/getting-started-guides/blob/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/src/test/java/hello/BookServiceTests.java",
    "raw_url": "https://github.com/spring-guides/getting-started-guides/raw/faa59a570d44575a13d167e5421fd922120309b4/complete/reading/src/test/java/hello/BookServiceTests.java",
    "contents_url": "https://api.github.com/repos/spring-guides/getting-started-guides/contents/complete/reading/src/test/java/hello/BookServiceTests.java?ref=faa59a570d44575a13d167e5421fd922120309b4",
    "patch": "@@ -1,32 +0,0 @@\n-package hello;\n-\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.boot.test.autoconfigure.web.client.RestClientTest;\n-import org.springframework.http.MediaType;\n-import org.springframework.test.context.junit4.SpringRunner;\n-import org.springframework.test.web.client.MockRestServiceServer;\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-import static org.springframework.test.web.client.match.MockRestRequestMatchers.requestTo;\n-import static org.springframework.test.web.client.response.MockRestResponseCreators.withSuccess;\n-\n-\n-@RunWith(SpringRunner.class)\n-@RestClientTest(BookService.class)\n-public class BookServiceTests {\n-\n-    @Autowired\n-    private BookService bookService;\n-\n-    @Autowired\n-    private MockRestServiceServer server;\n-\n-    @Test\n-    public void readingListTest() {\n-        this.server.expect(requestTo(\"http://localhost:8090/recommended\"))\n-                .andRespond(withSuccess(\"books\", MediaType.TEXT_PLAIN));\n-        assertThat(bookService.readingList()).isEqualTo(\"books\");\n-    }\n-}"
  }
]
