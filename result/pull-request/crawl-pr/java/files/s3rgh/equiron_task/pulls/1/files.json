[
  {
    "sha": "698cb99ec2ce2f6c895d526165ddde3049546236",
    "filename": "README.md",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/s3rgh/equiron_task/blob/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/README.md",
    "raw_url": "https://github.com/s3rgh/equiron_task/raw/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/README.md",
    "contents_url": "https://api.github.com/repos/s3rgh/equiron_task/contents/README.md?ref=7588b75cf85e16c7b9bd37ca8d08a00fb7654142",
    "patch": "@@ -0,0 +1,46 @@\n+# Тестовое задание\n+\n+### Создать проект автотестов ui на java на гитхабе или гитлабе\n+\n+В качестве примера реализовать следующий тест:\n+\n+- перейти на сайт https://www.luxoft-training.ru;\n+\n+- перейти в пункт меню \"каталог курсов\";\n+\n+- скачать каталог курсов в формате pdf;\n+\n+- проверить наличие курса ARC-004 Шаблоны проектирования приложений масштаба предприятия в сохраненном документе.\n+\n+Для проверки выполнения задания предоставить доступ к репозиторию.\n+\n+###Провести код ревью проекта в ветке dev, замечания и предложения оформить в виде документа Microsoft Word.\n+\n+\n+\n+### Замечания\n+\n+1. Замечания отмечены в первом коммите в ветке dev в виде комментариев TODO и продублируем тут:\n+* Добавить README\n+* Добавить два класса для страниц start page и catalog page\n+* Добавить использование шаблона Chain of Responsibility\n+* Убрать вызов метода isPageInitialized()\n+* Добавить в метод openMenuPoint() атрибут String menuPoint, в котором передавать название пункта меню в заголовке страницы\n+* Переделать метод loadCatalog(): убрать Actions, добавить атрибут String buttonName\n+* В методе initialize() убрать опции веб-драйвера и сделать скачивание файла через input/output stream, чтобы не привязываться к типу браузера\n+* Добавить возможность использовать браузер многократно, не перезапуская перед каждым тестом\n+* Строку-адрес сайта перенести в константы\n+* Вынести работу с pdf в отдельный класс, вызывать необходимый метод данного класса\n+\n+### Предложения:\n+2. Сделать фреймворк в BDD стиле (Cucumber)\n+3. Добавить allure report\n+\n+### Установка и запуск\n+* `cd <необходимый каталог для проекта>`\n+* `git clone https://github.com/s3rgh/equiron_task.git`\n+* `mvn clean install`\n+\n+Браузер стартует в headless режиме\n+\n+Файл каталога после парсинга удаляется\n\\ No newline at end of file"
  },
  {
    "sha": "9cb3270fce5cf235355101021d202ea5a32c8315",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 15,
    "deletions": 3,
    "changes": 18,
    "blob_url": "https://github.com/s3rgh/equiron_task/blob/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/pom.xml",
    "raw_url": "https://github.com/s3rgh/equiron_task/raw/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/pom.xml",
    "contents_url": "https://api.github.com/repos/s3rgh/equiron_task/contents/pom.xml?ref=7588b75cf85e16c7b9bd37ca8d08a00fb7654142",
    "patch": "@@ -11,8 +11,12 @@\n     <properties>\n         <maven.compiler.source>11</maven.compiler.source>\n         <maven.compiler.target>11</maven.compiler.target>\n+        <aspectj.version>1.9.6</aspectj.version>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n+        <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>\n+        <maven.compile.encoding>UTF-8</maven.compile.encoding>\n     </properties>\n-\n     <dependencies>\n         <dependency>\n             <groupId>org.junit.jupiter</groupId>\n@@ -38,8 +42,16 @@\n         <dependency>\n             <groupId>org.apache.pdfbox</groupId>\n             <artifactId>pdfbox</artifactId>\n-            <version>2.0.20</version>\n-            <scope>test</scope>\n+            <version>2.0.22</version>\n         </dependency>\n     </dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+                <version>2.22.2</version>\n+            </plugin>\n+        </plugins>\n+    </build>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "3ee1aaa9e11484094ba6c4d6480038c9aa87f864",
    "filename": "src/main/java/constants/Constants.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/s3rgh/equiron_task/blob/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/main/java/constants/Constants.java",
    "raw_url": "https://github.com/s3rgh/equiron_task/raw/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/main/java/constants/Constants.java",
    "contents_url": "https://api.github.com/repos/s3rgh/equiron_task/contents/src/main/java/constants/Constants.java?ref=7588b75cf85e16c7b9bd37ca8d08a00fb7654142",
    "patch": "@@ -0,0 +1,15 @@\n+package constants;\n+\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+\n+public class Constants {\n+\n+    public static final String BASE_URL = \"https://www.luxoft-training.ru\";\n+    public static final String FILENAME = \"luxoft_training_catalog.pdf\";\n+    public static final String MENU_CATALOG = \"Каталог\";\n+    public static final String DOWNLOAD_CATALOG = \"Скачать каталог\";\n+    public static final String CHECKED_COURSE_NAME = \"Шаблоны проектирования приложений масштаба предприятия\";\n+    public static final String CHECKED_COURSE_CODE = \"ARC-004\";\n+    public static final Path SOURCE_DIRECTORY = Paths.get(\"\").toAbsolutePath();\n+}"
  },
  {
    "sha": "f15864fd4b2de35a78e76b75d9a87f24b2650a21",
    "filename": "src/main/java/helpers/CatalogDownloadHelper.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/s3rgh/equiron_task/blob/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/main/java/helpers/CatalogDownloadHelper.java",
    "raw_url": "https://github.com/s3rgh/equiron_task/raw/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/main/java/helpers/CatalogDownloadHelper.java",
    "contents_url": "https://api.github.com/repos/s3rgh/equiron_task/contents/src/main/java/helpers/CatalogDownloadHelper.java?ref=7588b75cf85e16c7b9bd37ca8d08a00fb7654142",
    "patch": "@@ -0,0 +1,33 @@\n+package helpers;\n+\n+import java.io.BufferedInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.net.URL;\n+import java.nio.file.Paths;\n+\n+import static constants.Constants.FILENAME;\n+\n+public class CatalogDownloadHelper {\n+\n+    public static void downloadFile(String url) {\n+        String fileName = Paths.get(\"\").toAbsolutePath() + \"\\\\\" + FILENAME;\n+\n+        FileOutputStream fileOutputStream;\n+        BufferedInputStream bufferedInputStream;\n+\n+        try {\n+            bufferedInputStream = new BufferedInputStream(new URL(url).openStream());\n+            fileOutputStream = new FileOutputStream(fileName);\n+            final byte[] data = new byte[1024];\n+            int count;\n+            while ((count = bufferedInputStream.read(data, 0, 1024)) != -1) {\n+                fileOutputStream.write(data, 0, count);\n+            }\n+            fileOutputStream.close();\n+            bufferedInputStream.close();\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "c52f733b8594e9e02efdca2421129bab5f3c6661",
    "filename": "src/main/java/helpers/PDFHelper.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/s3rgh/equiron_task/blob/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/main/java/helpers/PDFHelper.java",
    "raw_url": "https://github.com/s3rgh/equiron_task/raw/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/main/java/helpers/PDFHelper.java",
    "contents_url": "https://api.github.com/repos/s3rgh/equiron_task/contents/src/main/java/helpers/PDFHelper.java?ref=7588b75cf85e16c7b9bd37ca8d08a00fb7654142",
    "patch": "@@ -0,0 +1,31 @@\n+package helpers;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import org.apache.pdfbox.pdmodel.PDDocument;\n+import org.apache.pdfbox.text.PDFTextStripper;\n+\n+import static constants.Constants.*;\n+\n+public class PDFHelper {\n+\n+    public static boolean checkRequiredTextInPdf(Path path) {\n+        File pdfFile = new File(path + \"\\\\\" + FILENAME);\n+        String text = \"\";\n+        try {\n+            PDDocument pdDocument = PDDocument.load(pdfFile);\n+            PDFTextStripper pdfTextStripper = new PDFTextStripper();\n+            text = pdfTextStripper.getText(pdDocument);\n+            //System.out.println(text);\n+            pdDocument.close();\n+            Files.delete(pdfFile.toPath());\n+        } catch (\n+                IOException e) {\n+            e.printStackTrace();\n+        }\n+        return text.contains(CHECKED_COURSE_NAME) && text.contains(CHECKED_COURSE_CODE);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "39c982544b41a8ffffaaf4ee7dbada80442eec7d",
    "filename": "src/main/java/pages/LuxoftCatalogPage.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/s3rgh/equiron_task/blob/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/main/java/pages/LuxoftCatalogPage.java",
    "raw_url": "https://github.com/s3rgh/equiron_task/raw/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/main/java/pages/LuxoftCatalogPage.java",
    "contents_url": "https://api.github.com/repos/s3rgh/equiron_task/contents/src/main/java/pages/LuxoftCatalogPage.java?ref=7588b75cf85e16c7b9bd37ca8d08a00fb7654142",
    "patch": "@@ -0,0 +1,20 @@\n+package pages;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebDriver;\n+import org.openqa.selenium.support.ui.WebDriverWait;\n+\n+public class LuxoftCatalogPage {\n+\n+    protected WebDriver driver;\n+    protected WebDriverWait wait;\n+\n+    public LuxoftCatalogPage(WebDriver driver) {\n+        this.driver = driver;\n+        wait = new WebDriverWait(this.driver, 5);\n+    }\n+\n+    public String loadCatalog(String buttonName) {\n+        return driver.findElement(By.xpath(\"//*[contains(text(), '\" + buttonName + \"')]\")).getAttribute(\"href\");\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "075b7f8eca560a68ad3d36b595fafa89950e0120",
    "filename": "src/main/java/pages/LuxoftPage.java",
    "status": "removed",
    "additions": 0,
    "deletions": 40,
    "changes": 40,
    "blob_url": "https://github.com/s3rgh/equiron_task/blob/385a290fc89cf52143fd383be93fd80e24176cf6/src/main/java/pages/LuxoftPage.java",
    "raw_url": "https://github.com/s3rgh/equiron_task/raw/385a290fc89cf52143fd383be93fd80e24176cf6/src/main/java/pages/LuxoftPage.java",
    "contents_url": "https://api.github.com/repos/s3rgh/equiron_task/contents/src/main/java/pages/LuxoftPage.java?ref=385a290fc89cf52143fd383be93fd80e24176cf6",
    "patch": "@@ -1,40 +0,0 @@\n-package pages;\n-\n-import org.openqa.selenium.By;\n-import org.openqa.selenium.JavascriptExecutor;\n-import org.openqa.selenium.WebDriver;\n-import org.openqa.selenium.WebElement;\n-import org.openqa.selenium.interactions.Actions;\n-import org.openqa.selenium.support.ui.WebDriverWait;\n-\n-import static org.assertj.core.api.Assertions.assertThat;\n-\n-public class LuxoftPage {\n-\n-    protected WebDriver driver;\n-    protected WebDriverWait wait;\n-\n-    public LuxoftPage(WebDriver driver) {\n-        this.driver = driver;\n-        wait = new WebDriverWait(this.driver, 5);\n-    }\n-\n-    public void openUrl(String url) {\n-        driver.get(url);\n-    }\n-\n-    public void isPageInitialized() {\n-        JavascriptExecutor input = (JavascriptExecutor) driver;\n-        assertThat(input.executeScript(\"return document.readyState\").equals(\"complete\")).isEqualTo(true);\n-    }\n-\n-    public void openMenuPoint() {\n-        driver.findElement(By.xpath(\"//div[@class='header__box _main']/.//*[text()='Каталог']\")).click();\n-    }\n-\n-    public void loadCatalog() {\n-        WebElement element = driver.findElement(By.xpath(\"//*[@href='/files/luxoft_training_catalog.pdf']\"));\n-        Actions builder = new Actions(driver);\n-        builder.moveToElement(element).click().perform();\n-    }\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "e8c95da8ed84fa9090304cf0de6ead79e45fe37b",
    "filename": "src/main/java/pages/LuxoftStartPage.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/s3rgh/equiron_task/blob/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/main/java/pages/LuxoftStartPage.java",
    "raw_url": "https://github.com/s3rgh/equiron_task/raw/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/main/java/pages/LuxoftStartPage.java",
    "contents_url": "https://api.github.com/repos/s3rgh/equiron_task/contents/src/main/java/pages/LuxoftStartPage.java?ref=7588b75cf85e16c7b9bd37ca8d08a00fb7654142",
    "patch": "@@ -0,0 +1,28 @@\n+package pages;\n+\n+import org.openqa.selenium.By;\n+import org.openqa.selenium.WebDriver;\n+import org.openqa.selenium.support.ui.WebDriverWait;\n+\n+//TODO: добавить использование шаблона Chain of Responsibility\n+\n+public class LuxoftStartPage {\n+\n+    protected WebDriver driver;\n+    protected WebDriverWait wait;\n+\n+    public LuxoftStartPage(WebDriver driver) {\n+        this.driver = driver;\n+        wait = new WebDriverWait(this.driver, 5);\n+    }\n+\n+    public LuxoftStartPage openUrl(String url) {\n+        driver.get(url);\n+        return this;\n+    }\n+\n+    public LuxoftCatalogPage openMenuPoint(String menuPoint) {\n+        driver.findElement(By.xpath(\"//div[@class='header__box _main']/.//*[text()='\" + menuPoint + \"']\")).click();\n+        return new LuxoftCatalogPage(driver);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2c8744d1d6cc0f8b0e95b0431a6acee04356aabd",
    "filename": "src/test/java/LuxoftTest.java",
    "status": "modified",
    "additions": 16,
    "deletions": 24,
    "changes": 40,
    "blob_url": "https://github.com/s3rgh/equiron_task/blob/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/test/java/LuxoftTest.java",
    "raw_url": "https://github.com/s3rgh/equiron_task/raw/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/test/java/LuxoftTest.java",
    "contents_url": "https://api.github.com/repos/s3rgh/equiron_task/contents/src/test/java/LuxoftTest.java?ref=7588b75cf85e16c7b9bd37ca8d08a00fb7654142",
    "patch": "@@ -1,22 +1,23 @@\n-import org.apache.pdfbox.pdmodel.PDDocument;\n-import org.apache.pdfbox.text.PDFTextStripper;\n+import helpers.CatalogDownloadHelper;\n+import helpers.PDFHelper;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n-import pages.LuxoftPage;\n-\n-import java.io.File;\n-import java.io.IOException;\n+import pages.LuxoftCatalogPage;\n+import pages.LuxoftStartPage;\n \n+import static constants.Constants.*;\n import static org.assertj.core.api.Assertions.assertThat;\n \n public class LuxoftTest extends TestBase {\n \n-    LuxoftPage luxoftPage;\n+    LuxoftStartPage luxoftStartPage;\n+    LuxoftCatalogPage luxoftCatalogPage;\n \n     @BeforeEach\n     public void start() {\n         initialize();\n+        luxoftStartPage = new LuxoftStartPage(webDriver);\n     }\n \n     @AfterEach\n@@ -26,22 +27,13 @@ public void stop() {\n \n     @Test\n     public void checkRequiredCourseExists() throws InterruptedException {\n-        luxoftPage = new LuxoftPage(webDriver);\n-        luxoftPage.openUrl(\"https://www.luxoft-training.ru\");\n-        luxoftPage.isPageInitialized();\n-        luxoftPage.openMenuPoint();\n-        luxoftPage.loadCatalog();\n-        Thread.sleep(5000);\n-        String text = \"\";\n-        File pdfFile = new File(getCurrentWorkingDirectory() + \"\\\\luxoft_training_catalog.pdf\");\n-        try {\n-            PDDocument pdDocument = PDDocument.load(pdfFile);\n-            PDFTextStripper pdfTextStripper = new PDFTextStripper();\n-            text = pdfTextStripper.getText(pdDocument);\n-            pdfFile.delete();\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        }\n-        assertThat(text.contains(\"Шаблоны проектирования приложений масштаба предприятия\")).isEqualTo(true);\n+\n+        luxoftCatalogPage = luxoftStartPage\n+                .openUrl(BASE_URL)\n+                .openMenuPoint(MENU_CATALOG);\n+\n+        CatalogDownloadHelper.downloadFile(luxoftCatalogPage.loadCatalog(DOWNLOAD_CATALOG));\n+        Thread.sleep(1000);\n+        assertThat(PDFHelper.checkRequiredTextInPdf(SOURCE_DIRECTORY)).isEqualTo(true);\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "97849762b3188e95fb47bd7459faedf4eac2ebc0",
    "filename": "src/test/java/TestBase.java",
    "status": "modified",
    "additions": 15,
    "deletions": 16,
    "changes": 31,
    "blob_url": "https://github.com/s3rgh/equiron_task/blob/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/test/java/TestBase.java",
    "raw_url": "https://github.com/s3rgh/equiron_task/raw/7588b75cf85e16c7b9bd37ca8d08a00fb7654142/src/test/java/TestBase.java",
    "contents_url": "https://api.github.com/repos/s3rgh/equiron_task/contents/src/test/java/TestBase.java?ref=7588b75cf85e16c7b9bd37ca8d08a00fb7654142",
    "patch": "@@ -2,35 +2,34 @@\n import org.openqa.selenium.WebDriver;\n import org.openqa.selenium.chrome.ChromeDriver;\n import org.openqa.selenium.chrome.ChromeOptions;\n-import java.nio.file.Path;\n-import java.nio.file.Paths;\n-import java.util.HashMap;\n+\n import java.util.concurrent.TimeUnit;\n \n public class TestBase {\n \n     protected static WebDriver webDriver;\n \n-    Path getCurrentWorkingDirectory() {\n-        return Paths.get(\"\").toAbsolutePath();\n-    }\n-\n     public void initialize() {\n-        HashMap<String,Object> chromePrefs = new HashMap<>();\n+\n+        if (webDriver != null) {\n+            return;\n+        }\n+\n         ChromeOptions options = new ChromeOptions();\n-        WebDriverManager.chromedriver().setup();\n-        chromePrefs.put(\"plugins.always_open_pdf_externally\", true);\n-        chromePrefs.put(\"download.default_directory\", getCurrentWorkingDirectory().toString());\n-        chromePrefs.put(\"download.prompt_for_download\", false);\n-        chromePrefs.put(\"download.directory_upgrade\", true);\n-        options.addArguments(\"--test-type\");\n         options.addArguments(\"--disable-extensions\");\n-        options.setExperimentalOption(\"prefs\", chromePrefs);\n+        options.addArguments(\"--disable-gpu\");\n+        options.addArguments(\"--no-sandbox\");\n+        options.addArguments(\"--headless\");\n+        options.addArguments(\"--window-size=1366x768\");\n+        WebDriverManager.chromedriver().setup();\n         webDriver = new ChromeDriver(options);\n         webDriver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);\n+        Runtime.getRuntime().addShutdownHook(\n+                new Thread(() -> webDriver.quit())\n+        );\n     }\n \n     public void tearDown() {\n-        webDriver.quit();\n+        //webDriver.quit();\n     }\n }\n\\ No newline at end of file"
  }
]
