[
  {
    "sha": "ae54b29c020706bd2d684ed4c68fe4f1bb5890b1",
    "filename": "src/main/java/com/visenze/productsearch/ProductSearchResponse.java",
    "status": "modified",
    "additions": 48,
    "deletions": 3,
    "changes": 51,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/ProductSearchResponse.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/ProductSearchResponse.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/main/java/com/visenze/productsearch/ProductSearchResponse.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -6,6 +6,7 @@\n import com.visenze.common.util.ViJsonMapper;\n import com.visenze.productsearch.response.ErrorMsg;\n import com.visenze.productsearch.response.GroupProductResult;\n+import com.visenze.productsearch.response.ObjectProductResult;\n import com.visenze.productsearch.response.Product;\n import com.visenze.visearch.ProductType;\n import com.visenze.visearch.Facet;\n@@ -118,9 +119,6 @@\n     private List<Product> result;\n \n \n-    @JsonProperty(\"group_results\")\n-    private List<GroupProductResult> groupProductResults;\n-\n     /**\n      * A map of Key-to-Value pairs. The keys in  it represent ViSenze's keys\n      * (our field names) and the values associated with it is the Client's keys\n@@ -137,6 +135,22 @@\n     @JsonProperty(\"facets\")\n     private List<Facet> facets;\n \n+    //@JsonProperty(\"product_info\")\n+\n+    @JsonProperty(\"objects\")\n+    private List<ObjectProductResult> objects;\n+\n+    @JsonProperty(\"group_results\")\n+    private List<GroupProductResult> groupProductResults;\n+\n+    @JsonProperty(\"group_by_key\")\n+    private String groupByKey;\n+\n+    @JsonProperty(\"query_sys_meta\")\n+    private Map<String, String> querySysMeta;\n+\n+    //private Map<String, String> querySysMeta;\n+\n     /**\n      * Delegated construction with a ViHttpResponse will automatically parse the\n      * response into data members.\n@@ -255,6 +269,37 @@ public void setGroupProductResults(List<GroupProductResult> groupProductResults)\n         this.groupProductResults = groupProductResults;\n     }\n \n+    /**\n+     * Get Facets if any was designated in the parameter when requesting API\n+     *\n+     * @return List of Facets used\n+     * @see Facet\n+     */\n+    public List<Facet> getFacets() { return facets; }\n+\n+    /**\n+     * Get Products detected in Object grouping/category\n+     *\n+     * @return List of Products categorized by \"Object\" type\n+     * @see ObjectProductResult\n+     */\n+    public List<ObjectProductResult> getObjects() { return objects; }\n+\n+    /**\n+     * Get Key that was used when using group_by functionality\n+     *\n+     * @return Grouping key\n+     */\n+    public String getGroupByKey() { return groupByKey; }\n+\n+    /**\n+     * Get System query metadata\n+     *\n+     * @return Metadata\n+     */\n+    public Map<String, String> getQuerySysMeta() { return querySysMeta; }\n+\n+\n     /**\n      * Json requires JsonCreator or default ctors, but since we clash with\n      * ViSearch's ProductTypes deserialization methods, we custom ours here."
  },
  {
    "sha": "9b82a2e3d577dc2b75b49fb29f7478f844b255c2",
    "filename": "src/main/java/com/visenze/productsearch/README.md",
    "status": "modified",
    "additions": 11,
    "deletions": 3,
    "changes": 14,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/README.md",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/README.md",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/main/java/com/visenze/productsearch/README.md?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -284,7 +284,7 @@ Here are some common and perhaps confusing ones to take note of:\n     <td>Description</td>\n   </tr>\n   <tr>\n-    <td rowspan=\"6\">BaseProductSearchParam</td>\n+    <td rowspan=\"8\">BaseProductSearchParam</td>\n     <td>returnFieldsMapping</td>\n     <td>Set to true to get catalog_fields_mapping from API</td>\n   </tr>\n@@ -293,18 +293,26 @@ Here are some common and perhaps confusing ones to take note of:\n   <tr> <td>attrsToGet</td> </tr>\n   <tr> <td>sortBy</td> </tr>\n   <tr> <td>groupBy</td> </tr>\n+  <tr> <td>colorRelWeight</td> <td>Wrapper to vs_color_rel_weight parameter. To disable color relevance, set to 0\n+If not set, will set to system default which means support color relevance for SBI fashion app type (sbi_fashion, vsr_fashion)</td> </tr>\n+  <tr> <td>returnQuerySysMeta</td> <td>Default to false, if set to true will return system metadata for query image or product which include S3 URL copy, detect, keyword</td> </tr>\n   <tr>\n-    <td rowspan=\"3\">SearchByImageParam</td>\n+    <td rowspan=\"4\">SearchByImageParam</td>\n     <td>imUrl</td>\n     <td rowspan=\"3\">One of these must be valid, use one of the newFromImage...() static method to construct this class </td>\n   </tr>\n   <tr> <td>imId</td> </tr>\n   <tr> <td>image</td> </tr>\n+  <tr> <td>searchAllObjects</td> <td>Default to false. If set to true, query response will return all objects (same as ViSearch /discoversearch) </td>  </tr>\n   <tr>\n-    <td>SearchByIdParam</td>\n+    <td rowspan=\"2\">SearchByIdParam</td>\n     <td>productId</td>\n     <td>Must be a valid Product ID, it will be used to append to the GET request path </td>\n   </tr>\n+  <tr>\n+    <td> returnProductInfo </td>  \n+    <td> If set to true, query response will return the query product's metadata </td> \n+  </tr>\n </table>\n \n ## 5. Advanced Search Parameters"
  },
  {
    "sha": "293959f9094da879194f424e548e6456a8d80c8c",
    "filename": "src/main/java/com/visenze/productsearch/param/BaseProductSearchParam.java",
    "status": "modified",
    "additions": 96,
    "deletions": 18,
    "changes": 114,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/param/BaseProductSearchParam.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/param/BaseProductSearchParam.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/main/java/com/visenze/productsearch/param/BaseProductSearchParam.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -2,6 +2,7 @@\n \n import com.google.common.base.Optional;\n import com.google.common.collect.*;\n+import com.sun.org.apache.xpath.internal.operations.Bool;\n \n import static com.visenze.common.util.MultimapUtil.putIfPresent;\n import static com.visenze.common.util.MultimapUtil.putList;\n@@ -71,16 +72,26 @@\n \n     protected Optional<Float> scoreMax = Optional.absent();\n \n+    protected Optional<Float> colorRelWeight = Optional.absent();\n+\n     /**\n      * Default to false, if set to true, will return catalog fields mappings\n      */\n     protected Optional<Boolean> returnFieldsMapping = Optional.absent();\n \n+    protected Optional<Boolean> returnQuerySysMeta = Optional.absent();\n+\n+    protected Optional<Boolean> dedup = Optional.absent();\n+\n+    protected Optional<Float> dedupThreshold = Optional.absent();\n+\n     /**\n      * Return S3 URL (the copy) of the main product image\n      */\n     protected Optional<Boolean> returnImageS3Url = Optional.absent();\n \n+    protected Optional<Boolean> debug = Optional.absent();\n+\n     /**\n      * Which SDK e.g. Javascript, Swift, Android, Java (for server side)\n      */\n@@ -135,8 +146,13 @@\n         putIfPresent(multimap, score, SCORE);\n         putIfPresent(multimap, scoreMin, SCORE_MIN);\n         putIfPresent(multimap, scoreMax, SCORE_MAX);\n+        putIfPresent(multimap, colorRelWeight, COLOR_REL_WEIGHT);\n         putIfPresent(multimap, returnFieldsMapping, RETURN_FIELDS_MAPPING);\n+        putIfPresent(multimap, returnQuerySysMeta, RETURN_QUERY_SYS_META);\n+        putIfPresent(multimap, dedup, DEDUP);\n+        putIfPresent(multimap, dedupThreshold, DEDUP_SCORE_THRESHOLD);\n         putIfPresent(multimap, returnImageS3Url, RETURN_IMAGE_S3_URL);\n+        putIfPresent(multimap, debug, DEBUG);\n \n         setAnalyticsParams(multimap);\n \n@@ -185,7 +201,7 @@ private void setAnalyticsParams(Multimap<String, String> multimap) {\n      * @param page page number to use\n      */\n     public void setPage(int page) {\n-        this.page = Optional.of(page < 1 ? 1 : page);\n+        this.page = Optional.of(Math.max(page, 1));\n     }\n \n     /**\n@@ -500,9 +516,21 @@ public Float getScoreMax() {\n      *\n      * @param scoreMax maximum score\n      */\n-    public void setScoreMax(Float scoreMax) {\n-        this.scoreMax = Optional.fromNullable(scoreMax);\n-    }\n+    public void setScoreMax(Float scoreMax) { this.scoreMax = Optional.fromNullable(scoreMax); }\n+\n+    /**\n+     * Get colorRelWeight\n+     *\n+     * @return colorRelWeight\n+     */\n+    public Float getColorRelWeight() { return colorRelWeight.orNull(); }\n+\n+    /**\n+     * Set the coloRelWeight\n+     *\n+     * @param weight 0 to disable color relevance\n+     */\n+    public void setColorRelWeight(Float weight) { this.colorRelWeight = Optional.fromNullable(weight); }\n \n     /**\n      * Get if returns fields mapping\n@@ -543,41 +571,93 @@ public void setReturnImageS3Url(Boolean returnImageS3Url) {\n         this.returnImageS3Url = Optional.fromNullable(returnImageS3Url);\n     }\n \n+    /**\n+     * Get if result should return system metadata for query images\n+     *\n+     * @return Boolean\n+     */\n+    public Boolean getReturnQuerySysMeta() {\n+        return returnQuerySysMeta.orNull();\n+    }\n+\n+    /**\n+     * Set if result should return system metadata for query images\n+     *\n+     * @param returnQuerySysMeta if set to true, system will return metadata\n+     */\n+    public void setReturnQuerySysMeta(Boolean returnQuerySysMeta) {\n+        this.returnQuerySysMeta = Optional.fromNullable(returnQuerySysMeta);\n+    }\n+\n+    /**\n+     * Get dedup\n+     *\n+     * @return dedup\n+     */\n+    public Boolean getDedup() { return dedup.orNull(); }\n+\n+    /**\n+     * Set dedup\n+     *\n+     * @param b If dedup should be used\n+     */\n+    public void setDedup(Boolean b) { this.dedup = Optional.fromNullable(b); }\n+\n+    /**\n+     * Get dedupThreshold\n+     *\n+     * @return dedupThreshold\n+     */\n+    public Float getDedupThreshold() { return dedupThreshold.orNull(); }\n+\n+    /**\n+     * Set dedupThreshold\n+     *\n+     * @param thresh dedup threshold value\n+     */\n+    public void setDedupThreshold(Float thresh) { this.dedupThreshold = Optional.fromNullable(thresh); }\n+\n+    /**\n+     * Get debug\n+     *\n+     * @return Boolean\n+     */\n+    public Boolean getDebug() { return debug.orNull(); }\n+\n+    /**\n+     * Set debug\n+     *\n+     * @param debug Set true to see debug information\n+     */\n+    public void setDebug(Boolean debug) { this.debug = Optional.fromNullable(debug); }\n+\n     /**\n      * Get sdk using the api\n      *\n      * @return which sdk is this\n      */\n-    public String getVaSdk() {\n-        return vaSdk.orNull();\n-    }\n+    public String getVaSdk() { return vaSdk.orNull(); }\n \n     /**\n      * Set sdk using the api\n      *\n      * @param vaSdk which sdk is this\n      */\n-    public void setVaSdk(String vaSdk) {\n-        this.vaSdk = Optional.fromNullable(vaSdk);\n-    }\n+    public void setVaSdk(String vaSdk) { this.vaSdk = Optional.fromNullable(vaSdk); }\n \n     /**\n      * Get sdk version\n      *\n      * @return sdk version\n      */\n-    public String getVaSdkVersion() {\n-        return vaSdkVersion.orNull();\n-    }\n+    public String getVaSdkVersion() { return vaSdkVersion.orNull(); }\n \n     /**\n      * Set sdk version\n      *\n      * @param vaSdkVersion sdk version\n      */\n-    public void setVaSdkVersion(String vaSdkVersion) {\n-        this.vaSdkVersion = Optional.fromNullable(vaSdkVersion);\n-    }\n+    public void setVaSdkVersion(String vaSdkVersion) { this.vaSdkVersion = Optional.fromNullable(vaSdkVersion); }\n \n     public Map<String, String> getCustomParams() {\n         return customParams.orNull();\n@@ -591,15 +671,13 @@ public void setCustomParams(Map<String, String> customParams) {\n         if (map == null || map.isEmpty()) {\n             return Optional.absent();\n         }\n-\n         return Optional.of(map);\n     }\n \n     private Optional<List<String>> getOptionalList(List<String> list){\n         if (list == null || list.isEmpty()) {\n             return Optional.absent();\n         }\n-\n         return Optional.of(list);\n     }\n }"
  },
  {
    "sha": "78b524ef14c78898b449c32cefad3c713fd25a57",
    "filename": "src/main/java/com/visenze/productsearch/param/SearchByIdParam.java",
    "status": "modified",
    "additions": 28,
    "deletions": 1,
    "changes": 29,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/param/SearchByIdParam.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/param/SearchByIdParam.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/main/java/com/visenze/productsearch/param/SearchByIdParam.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -1,7 +1,11 @@\n package com.visenze.productsearch.param;\n \n+import com.google.common.base.Optional;\n import com.google.common.collect.Multimap;\n \n+import static com.visenze.visearch.internal.constant.ViSearchHttpConstants.*;\n+import static com.visenze.common.util.MultimapUtil.putIfPresent;\n+\n /**\n  *\n  * <h1> Search by ID Parameters </h1>\n@@ -20,6 +24,11 @@\n      */\n     protected String productId;\n \n+    /**\n+     * If set to true, API will return the query product's metadata\n+     */\n+    protected Optional<Boolean> returnProductInfo = Optional.absent();\n+\n     /**\n      * Constructor with the necessary parameters\n      *\n@@ -37,7 +46,12 @@ public SearchByIdParam(String product_id) {\n      */\n     @Override\n     public Multimap<String, String> toMultimap() {\n-        return super.toMultimap();\n+\n+        Multimap<String, String> multimap = super.toMultimap();\n+\n+        putIfPresent(multimap, returnProductInfo, RETURN_PRODUCT_INFO);\n+\n+        return multimap;\n     }\n \n     /**\n@@ -59,4 +73,17 @@ public void setProductId(String productId) {\n         this.productId = productId;\n     }\n \n+    /**\n+     * Get returnProductInfo\n+     *\n+     * @return returnProductInfo\n+     */\n+    public Boolean getReturnProductInfo() { return returnProductInfo.orNull(); }\n+\n+    /**\n+     * Set returnProductInfo\n+     *\n+     * @param b If query should return product metadata\n+     */\n+    public void setReturnProductInfo(Boolean b) { this.returnProductInfo = Optional.fromNullable(b); }\n }"
  },
  {
    "sha": "969942504f3f8a3d46d81e8d3675d4580e9fe9fb",
    "filename": "src/main/java/com/visenze/productsearch/param/SearchByImageParam.java",
    "status": "modified",
    "additions": 35,
    "deletions": 5,
    "changes": 40,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/param/SearchByImageParam.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/param/SearchByImageParam.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/main/java/com/visenze/productsearch/param/SearchByImageParam.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -10,6 +10,7 @@\n import java.io.File;\n \n import static com.visenze.visearch.internal.constant.ViSearchHttpConstants.*;\n+import static com.visenze.common.util.MultimapUtil.putIfPresent;\n \n /**\n  * <h1> SBI Parameters </h1>\n@@ -62,6 +63,15 @@\n      */\n     protected Optional<String> detectionSensitivity = Optional.absent();\n \n+    /**\n+     * Defaulted to false, if this is set to true, API will return all objects\n+     */\n+    protected Optional<Boolean> searchAllObjects = Optional.absent();\n+\n+\n+    // protected Optional<> point = Optional.absent();\n+\n+\n     /**\n      * Hide default constructor\n      */\n@@ -77,8 +87,9 @@ private SearchByImageParam() {\n      */\n     public static SearchByImageParam newFromImageUrl(String imageUrl) {\n         SearchByImageParam param = new SearchByImageParam();\n-        if (imageUrl == null || imageUrl.isEmpty())\n+        if (imageUrl == null || imageUrl.isEmpty()) {\n             throw new InternalViSearchException(ResponseMessages.MISSING_IMAGE_URL);\n+        }\n         param.setImageUrl(imageUrl);\n         return param;\n     }\n@@ -91,8 +102,9 @@ public static SearchByImageParam newFromImageUrl(String imageUrl) {\n      */\n     public static SearchByImageParam newFromImageId(String imageId) {\n         SearchByImageParam param = new SearchByImageParam();\n-        if (imageId == null || imageId.isEmpty())\n+        if (imageId == null || imageId.isEmpty()) {\n             throw new InternalViSearchException(ResponseMessages.MISSING_IMAGE_ID);\n+        }\n         param.setImageId(imageId);\n         return param;\n     }\n@@ -105,8 +117,9 @@ public static SearchByImageParam newFromImageId(String imageId) {\n      */\n     public static SearchByImageParam newFromImageFile(File imageFile) {\n         SearchByImageParam param = new SearchByImageParam();\n-        if (imageFile == null)\n+        if (imageFile == null) {\n             throw new InternalViSearchException(ResponseMessages.MISSING_IMAGE_FILE);\n+        }\n         param.setImage(imageFile);\n         return param;\n     }\n@@ -137,6 +150,8 @@ public static SearchByImageParam newFromImageFile(File imageFile) {\n \n         setDetectionParams(multimap);\n \n+        putIfPresent(multimap, searchAllObjects, SEARCH_ALL_OBJECTS);\n+\n         return multimap;\n     }\n \n@@ -262,20 +277,35 @@ public void setDetectionLimit(Integer detectionLimit) {\n         this.detectionLimit = Optional.fromNullable(detectionLimit);\n     }\n \n-    /** Get detection sensitivity, default is low.\n+    /**\n+     * Get detection sensitivity, default is low.\n      *\n      * @return detectionSensitivity\n      */\n     public String getDetectionSensitivity() {\n         return detectionSensitivity.orNull();\n     }\n \n-    /** Sett detection sensitivity, default is low.\n+    /**\n+     * Set detection sensitivity, default is low.\n      *\n      * @param detectionSensitivity sensitivity of detection\n      */\n     public void setDetectionSensitivity(String detectionSensitivity) {\n         this.detectionSensitivity = Optional.fromNullable(detectionSensitivity);\n     }\n \n+    /**\n+     * Get searchAllObject\n+     *\n+     * @return If searchAllObject is turned on\n+     */\n+    public Boolean getSearchAllObjects() { return searchAllObjects.orNull(); }\n+\n+    /**\n+     * Set searchAllObject\n+     *\n+     * @param b If searchAllObject should be used\n+     */\n+    public void setSearchAllObjects(Boolean b) { this.searchAllObjects = Optional.fromNullable(b); }\n }"
  },
  {
    "sha": "1f126c075cb178060c6dbd703ae500aa794ed313",
    "filename": "src/main/java/com/visenze/productsearch/response/GroupProductResult.java",
    "status": "modified",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/response/GroupProductResult.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/response/GroupProductResult.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/main/java/com/visenze/productsearch/response/GroupProductResult.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -18,15 +18,7 @@ public String getGroupByValue() {\n         return groupByValue;\n     }\n \n-    public void setGroupByValue(String groupByValue) {\n-        this.groupByValue = groupByValue;\n-    }\n-\n     public List<Product> getProducts() {\n         return products;\n     }\n-\n-    public void setProducts(List<Product> products) {\n-        this.products = products;\n-    }\n }"
  },
  {
    "sha": "a1bf86ac26d33d5b28e059c0fdea0e04978cbf26",
    "filename": "src/main/java/com/visenze/productsearch/response/ObjectProductResult.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/response/ObjectProductResult.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/productsearch/response/ObjectProductResult.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/main/java/com/visenze/productsearch/response/ObjectProductResult.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -0,0 +1,49 @@\n+package com.visenze.productsearch.response;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.visenze.visearch.Box;\n+\n+/**\n+ * <h1> Product Result related by Object </h1>\n+ * This class represents a detected Object and all the products found associated\n+ * with it.\n+ *\n+ * @author Shannon Tan\n+ * @version 1.0\n+ * @since 17 Mar 2021\n+ */\n+public class ObjectProductResult {\n+\n+    @JsonProperty(\"type\")\n+    private String type;\n+\n+    @JsonProperty(\"score\")\n+    private Float score;\n+\n+    @JsonProperty(\"box\")\n+    private List<Integer> box;\n+\n+    @JsonProperty(\"attributes\")\n+    public Map<String, String> attributes;\n+\n+    @JsonProperty(\"total\")\n+    private Integer total;\n+\n+    @JsonProperty(\"result\")\n+    private List<Product> result;\n+\n+    public String getType() { return type; }\n+\n+    public Float getScore() { return score; }\n+\n+    public List<Integer> getBox() { return box; }\n+\n+    public Map<String,String> getAttributes() { return attributes; }\n+\n+    public Integer getTotal() { return total; }\n+\n+    public List<Product> getResult() { return result; }\n+}"
  },
  {
    "sha": "789bbc2b11c7249ba2230a332daea179518e88b7",
    "filename": "src/main/java/com/visenze/visearch/internal/constant/ViSearchHttpConstants.java",
    "status": "modified",
    "additions": 9,
    "deletions": 2,
    "changes": 11,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/visearch/internal/constant/ViSearchHttpConstants.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/main/java/com/visenze/visearch/internal/constant/ViSearchHttpConstants.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/main/java/com/visenze/visearch/internal/constant/ViSearchHttpConstants.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -35,8 +35,6 @@\n     public static final String VS_FL = \"vs_fl\";\n     public static final String FL = \"fl\";\n     public static final String GET_ALL_FL = \"get_all_fl\";\n-    public static final String DEDUP = \"dedup\";\n-    public static final String DEDUP_SCORE_THRESHOLD = \"dedup_score_threshold\";\n \n \n     public static final String DIVERSITY = \"diversity\";\n@@ -67,6 +65,9 @@\n     public static final String DETECTION_SENSITIVITY = \"detection_sensitivity\";\n     public static final String VS_CONFIG = \"vs_config\";\n \n+    public static final String DEDUP = \"dedup\";\n+    public static final String DEDUP_SCORE_THRESHOLD = \"dedup_score_threshold\";\n+\n     // product search\n \n     public static final String VA_UID = \"va_uid\";\n@@ -75,11 +76,17 @@\n     public static final String TEXT_FILTERS = \"text_filters\";\n     public static final String ATTRS_TO_GET = \"attrs_to_get\";\n     public static final String RETURN_FIELDS_MAPPING = \"return_fields_mapping\";\n+    public static final String RETURN_QUERY_SYS_META = \"return_query_sys_meta\";\n     public static final String RETURN_IMAGE_S3_URL = \"return_image_s3_url\";\n+    public static final String DEBUG = \"debug\";\n     public static final String VA_SDK = \"va_sdk\";\n     public static final String VA_SDK_VERSION = \"va_sdk_version\";\n     public static final String PLACEMENT_ID = \"placement_id\";\n     public static final String APP_KEY = \"app_key\";\n+    public static final String COLOR_REL_WEIGHT = \"color_rel_weight\";\n+\n+    public static final String SEARCH_ALL_OBJECTS = \"search_all_objects\";\n+    public static final String RETURN_PRODUCT_INFO = \"return_product_info\";\n \n     // analytics\n     public static final String VA_OS = \"va_os\";"
  },
  {
    "sha": "2a28ad43508eeb6e2679f757cfa179ecc8f89cf9",
    "filename": "src/test/java/com/visenze/productsearch/ProductSearchTest.java",
    "status": "modified",
    "additions": 79,
    "deletions": 13,
    "changes": 92,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/test/java/com/visenze/productsearch/ProductSearchTest.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/test/java/com/visenze/productsearch/ProductSearchTest.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/test/java/com/visenze/productsearch/ProductSearchTest.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -20,16 +20,18 @@\n  */\n public class ProductSearchTest {\n     final String END_POINT = \"https://search-dev.visenze.com\";\n-    final String APP_KEY = \"\";\n-    final Integer PLACEMENT_ID = 1000;\n+    final String SBI_KEY = \"\";\n+    final String VSR_KEY = \"\";\n+    final Integer SBI_PLACEMENT = 1000;\n+    final Integer VSR_PLACEMENT = 1002;\n     final String IMG_URL = \"https://img.ltwebstatic.com/images2_pi/2019/09/09/15679978193855617200_thumbnail_900x1199.jpg\";\n     final String IMG_FILEPATH = \"\";\n \n     /**\n      * Retrieve a ProductSearch object with hardcoded keys for testing\n      */\n-    public ProductSearch getProductSearch() {\n-        return new ProductSearch.Builder(APP_KEY, PLACEMENT_ID)\n+    public ProductSearch getProductSearch(String key, Integer placement) {\n+        return new ProductSearch.Builder(key, placement)\n                 .setApiEndPoint(END_POINT)\n                 .build();\n     }\n@@ -48,7 +50,7 @@ public ProductSearchResponse imageSearchByUrl(String url) {\n         param.setReturnFieldsMapping(true);\n \n         // execute search and return response\n-        ProductSearch sdk = getProductSearch();\n+        ProductSearch sdk = getProductSearch(SBI_KEY, SBI_PLACEMENT);\n         return sdk.imageSearch(param);\n     }\n \n@@ -66,7 +68,7 @@ public ProductSearchResponse imageSearchByFile(String filepath) {\n         param.setReturnFieldsMapping(true);\n \n         // execute search and return response\n-        ProductSearch sdk = getProductSearch();\n+        ProductSearch sdk = getProductSearch(SBI_KEY, SBI_PLACEMENT);\n         return sdk.imageSearch(param);\n     }\n \n@@ -84,7 +86,7 @@ public ProductSearchResponse imageSearchByID(String imageID) {\n         param.setReturnFieldsMapping(true);\n \n         // execute search and return response\n-        ProductSearch sdk = getProductSearch();\n+        ProductSearch sdk = getProductSearch(SBI_KEY, SBI_PLACEMENT);\n         return sdk.imageSearch(param);\n     }\n \n@@ -103,14 +105,14 @@ public ProductSearchResponse visualSimilarSearch(String product_id) {\n         param.setReturnFieldsMapping(true);\n \n         // execute search and return response\n-        ProductSearch sdk = getProductSearch();\n+        ProductSearch sdk = getProductSearch(VSR_KEY, VSR_PLACEMENT);\n         return sdk.visualSimilarSearch(param);\n     }\n \n     @Test\n     public void byUrl() {\n         // cannot test without testing key\n-        if (APP_KEY.isEmpty())\n+        if (VSR_KEY.isEmpty() || SBI_KEY.isEmpty())\n             return;\n         ProductSearchResponse responseUrl;\n         try {\n@@ -124,7 +126,7 @@ public void byUrl() {\n     @Test\n     public void byFile() {\n         // cannot test without testing key\n-        if (APP_KEY.isEmpty())\n+        if (VSR_KEY.isEmpty() || SBI_KEY.isEmpty())\n             return;\n         ProductSearchResponse responseFile;\n         try {\n@@ -138,7 +140,7 @@ public void byFile() {\n     @Test\n     public void byCatalogueFieldMappings() {\n         // cannot test without testing key\n-        if (APP_KEY.isEmpty())\n+        if (VSR_KEY.isEmpty() || SBI_KEY.isEmpty())\n             return;\n         ProductSearchResponse response;\n         try {\n@@ -170,7 +172,7 @@ public void byCatalogueFieldMappings() {\n             filters.put(fieldsMap.get(\"brand\"), \"Pomelo\");\n             param.setFilters(filters);\n             // execute search and return response\n-            ProductSearch sdk = getProductSearch();\n+            ProductSearch sdk = getProductSearch(SBI_KEY, SBI_PLACEMENT);\n             sdk.imageSearch(param);\n         } catch (InternalViSearchException e) {\n             fail(e.getMessage());\n@@ -184,7 +186,7 @@ public void byCatalogueFieldMappings() {\n     // @Test\n     public void casesWithDependencies() {\n         // cannot test without testing key\n-        if (APP_KEY.isEmpty())\n+        if (VSR_KEY.isEmpty() || SBI_KEY.isEmpty())\n             return;\n         try {\n             ProductSearchResponse responseUrl = imageSearchByUrl(IMG_URL);\n@@ -207,4 +209,68 @@ public void casesWithDependencies() {\n             fail(e.getMessage());\n         }\n     }\n+\n+    // can see field mappings for certain valid facets\n+    @Test\n+    public void withFacets() {\n+        if (VSR_KEY.isEmpty() || SBI_KEY.isEmpty())\n+            return;\n+        try {\n+            SearchByImageParam param = SearchByImageParam.newFromImageUrl(IMG_URL);\n+            param.setFacetsShowCount(true);\n+            param.setFacetsLimit(10);\n+            param.setFacets(Arrays.asList(\"brand_name\", \"merchant_category\"));\n+\n+            ProductSearch sdk = getProductSearch(SBI_KEY, SBI_PLACEMENT);\n+            ProductSearchResponse response = sdk.imageSearch(param);\n+\n+            assertEquals(response.getFacets().isEmpty(), false);\n+\n+        } catch (InternalViSearchException e) {\n+            fail(e.getMessage());\n+        }\n+    }\n+\n+    // tests group_result\n+    @Test\n+    public void withGroup() {\n+        if (VSR_KEY.isEmpty() || SBI_KEY.isEmpty())\n+            return;\n+        try {\n+            SearchByImageParam param = SearchByImageParam.newFromImageUrl(IMG_URL);\n+            param.setGroupBy(\"brand_name\");\n+            param.setGroupLimit(10);\n+\n+            ProductSearch sdk = getProductSearch(SBI_KEY, SBI_PLACEMENT);\n+            ProductSearchResponse response = sdk.imageSearch(param);\n+\n+            assertEquals(response.getGroupByKey().isEmpty(), false);\n+            assertEquals(response.getGroupProductResults().isEmpty(), false);\n+\n+        } catch (InternalViSearchException e) {\n+            fail(e.getMessage());\n+        }\n+    }\n+\n+    // tests objects\n+    @Test\n+    public void withSearchAll() {\n+        if (VSR_KEY.isEmpty() || SBI_KEY.isEmpty())\n+            return;\n+        try {\n+            SearchByImageParam param = SearchByImageParam.newFromImageUrl(IMG_URL);\n+\n+            param.setSearchAllObjects(true);\n+            param.setDetectionLimit(10);\n+            param.setDetection(\"all\");\n+\n+            ProductSearch sdk = getProductSearch(SBI_KEY, SBI_PLACEMENT);\n+            ProductSearchResponse response = sdk.imageSearch(param);\n+\n+            assertEquals(response.getObjects().isEmpty(), false);\n+\n+        } catch (InternalViSearchException e) {\n+            fail(e.getMessage());\n+        }\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "69356fd265ac848ad0b5b87f3a11a91a02fb198d",
    "filename": "src/test/java/com/visenze/productsearch/param/SearchByIdParamTest.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/test/java/com/visenze/productsearch/param/SearchByIdParamTest.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/test/java/com/visenze/productsearch/param/SearchByIdParamTest.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/test/java/com/visenze/productsearch/param/SearchByIdParamTest.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -0,0 +1,46 @@\n+package com.visenze.productsearch.param;\n+\n+import com.google.common.collect.Multimap;\n+import com.visenze.visearch.internal.http.ViSearchHttpClientImpl;\n+import org.apache.http.NameValuePair;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.junit.Test;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.List;\n+\n+import static org.junit.Assert.*;\n+/**\n+ * <h1> Search by image ID Test </h1>\n+ *\n+ * @author Shannon Tan\n+ * @version 1.0\n+ * @since 18 Mar 2021\n+ */\n+public class SearchByIdParamTest {\n+\n+    final String PARAM_OUTPUT = \"return_product_info=true\";\n+    final String PRODUCT_ID_1 = \"12345\";\n+    final String PRODUCT_ID_2 = \"67890\";\n+\n+    @Test\n+    public void toMap() {\n+        SearchByIdParam param = new SearchByIdParam(PRODUCT_ID_1);\n+        assertEquals(PRODUCT_ID_1, param.getProductId());\n+\n+        param.setReturnProductInfo(true);\n+        assertEquals(true, param.getReturnProductInfo());\n+\n+        param.setProductId(PRODUCT_ID_2);\n+        assertEquals(PRODUCT_ID_2, param.getProductId());\n+\n+        List<NameValuePair> paramUrl = ViSearchHttpClientImpl.mapToNameValuePair(param.toMultimap());\n+        try{\n+            URI uri = new URIBuilder(\"www.example.com\").addParameters(paramUrl).build();\n+            assertEquals(PARAM_OUTPUT, uri.getQuery());\n+        } catch (URISyntaxException e) {\n+            fail(\"Failed to create proper query\");\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "74903d7d07a3f4b3710df1154e8662be4c714914",
    "filename": "src/test/java/com/visenze/productsearch/param/SearchByImageParamTest.java",
    "status": "modified",
    "additions": 38,
    "deletions": 2,
    "changes": 40,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/test/java/com/visenze/productsearch/param/SearchByImageParamTest.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/test/java/com/visenze/productsearch/param/SearchByImageParamTest.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/test/java/com/visenze/productsearch/param/SearchByImageParamTest.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -21,20 +21,56 @@\n  * @since 21 Jan 2021\n  */\n public class SearchByImageParamTest {\n-    final String PARAM_DESIRED = \"box=1,1,5,5&im_url=SOME_URL\";\n+    final String PARAM_URL = \"box=1,1,5,5&im_url=SOME_URL\";\n+    final String PARAM_ID = \"box=2,3,4,5&im_id=SOME_ID\";\n+\n+    @Test\n+    public void setterGetter() {\n+        SearchByImageParam param = SearchByImageParam.newFromImageId(\"IMAGE_ID\");\n+        assertEquals(\"IMAGE_ID\", param.getImageId());\n+\n+        param.setImageId(\"IMAGE_ID_2\");\n+        assertEquals(\"IMAGE_ID_2\", param.getImageId());\n+\n+        param.setImageUrl(\"IMAGE_URL\");\n+        assertEquals(\"IMAGE_URL\", param.getImageUrl());\n+\n+        param.setDetection(\"all\");\n+        assertEquals(\"all\", param.getDetection());\n+\n+        Integer limit = 15;\n+        param.setDetectionLimit(limit);\n+        assertEquals(limit, param.getDetectionLimit());\n+\n+        param.setDetectionSensitivity(\"high\");\n+        assertEquals(\"high\", param.getDetectionSensitivity());\n+\n+        param.setSearchAllObjects(true);\n+        assertEquals(true, param.getSearchAllObjects());\n+    }\n \n     @Test\n     public void toMultimap() {\n         SearchByImageParam param = SearchByImageParam.newFromImageUrl(\"SOME_URL\");\n         param.setBox(new Box(1,1,5,5));\n+\n         List<NameValuePair> paramUrl = sort(ViSearchHttpClientImpl.mapToNameValuePair(param.toMultimap()));\n         try{\n             URI uri = new URIBuilder(\"www.example.com\").addParameters(paramUrl).build();\n-            assertEquals(PARAM_DESIRED, uri.getQuery());\n+            assertEquals(PARAM_URL, uri.getQuery());\n         } catch (URISyntaxException e) {\n             fail(\"Failed to create proper query\");\n         }\n \n+        param = SearchByImageParam.newFromImageId(\"SOME_ID\");\n+        param.setBox(new Box(2,3,4,5));\n+        paramUrl = sort(ViSearchHttpClientImpl.mapToNameValuePair(param.toMultimap()));\n+        try{\n+            URI uri = new URIBuilder(\"www.example.com\").addParameters(paramUrl).build();\n+            assertEquals(PARAM_ID, uri.getQuery());\n+        } catch (URISyntaxException e) {\n+            fail(\"Failed to create proper query\");\n+        }\n     }\n \n     /**"
  },
  {
    "sha": "15fba656c3dee08a9657c3486458640061008fff",
    "filename": "src/test/java/com/visenze/productsearch/response/GroupProductResultTest.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/test/java/com/visenze/productsearch/response/GroupProductResultTest.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/test/java/com/visenze/productsearch/response/GroupProductResultTest.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/test/java/com/visenze/productsearch/response/GroupProductResultTest.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -0,0 +1,76 @@\n+package com.visenze.productsearch.response;\n+\n+import com.visenze.common.util.ViJsonAny;\n+import com.visenze.common.util.ViJsonMapper;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n+\n+public class GroupProductResultTest extends ViJsonMapper {\n+\n+    final String RESPONSE = \"{\\n\" +\n+            \"   \\\"group_by_value\\\": \\\"Wakingbee\\\",\\n\" +\n+            \"   \\\"result\\\": [\\n\" +\n+            \"   {\\n\" +\n+            \"       \\\"product_id\\\": \\\"POMELO2-AF-SG_c22feb13f6956d09ce07a236c587e29fca2638cb\\\",\\n\" +\n+            \"       \\\"main_image_url\\\": \\\"http://d3vhkxmeglg6u9.cloudfront.net/img/p/2/2/3/3/7/4/223374.jpg\\\",\\n\" +\n+            \"       \\\"data\\\": {\\n\" +\n+            \"           \\\"link\\\": \\\"https://iprice.sg/r/p/?_id=c22feb13f6956d09ce07a236c587e29fca2638cb\\\",\\n\" +\n+            \"           \\\"product_name\\\": \\\"P.E. Shorts Pink\\\",\\n\" +\n+            \"           \\\"sale_price\\\": {\\n\" +\n+            \"               \\\"currency\\\": \\\"SGD\\\",\\n\" +\n+            \"               \\\"value\\\": \\\"69.0\\\"\\n\" +\n+            \"           }\\n\" +\n+            \"       }\\n\" +\n+            \"   },\\n\" +\n+            \"   {\\n\" +\n+            \"       \\\"product_id\\\": \\\"POMELO2-AF-SG_dec40b1909a774f125bae9b7707884414199aaa3\\\",\\n\" +\n+            \"       \\\"main_image_url\\\": \\\"http://d3vhkxmeglg6u9.cloudfront.net/img/p/2/1/7/3/6/4/217364.jpg\\\",\\n\" +\n+            \"       \\\"data\\\": {\\n\" +\n+            \"           \\\"link\\\": \\\"https://iprice.sg/r/p/?_id=dec40b1909a774f125bae9b7707884414199aaa3\\\",\\n\" +\n+            \"           \\\"product_name\\\": \\\"Waking Bee Sports Bra Aqua Blue\\\",\\n\" +\n+            \"           \\\"sale_price\\\": {\\n\" +\n+            \"               \\\"currency\\\": \\\"SGD\\\",\\n\" +\n+            \"               \\\"value\\\": \\\"59.0\\\"\\n\" +\n+            \"           }\\n\" +\n+            \"       }\\n\" +\n+            \"   }\\n\" +\n+            \"   ]\\n\" +\n+            \"}\";\n+\n+    @Test\n+    public void testParse() {\n+\n+        try {\n+            GroupProductResult groupResult = mapper.readValue(RESPONSE, GroupProductResult.class);\n+\n+            assertEquals(\"Wakingbee\",groupResult.getGroupByValue());\n+\n+            List<Product> results = groupResult.getProducts();\n+            assertEquals(2, results.size());\n+\n+            assertEquals(\"POMELO2-AF-SG_dec40b1909a774f125bae9b7707884414199aaa3\", results.get(1).getProductId());\n+\n+            assertEquals(\"http://d3vhkxmeglg6u9.cloudfront.net/img/p/2/1/7/3/6/4/217364.jpg\", results.get(1).getMainImageUrl());\n+\n+            Map<String, ViJsonAny> data = results.get(1).getData();\n+            assertEquals(\"https://iprice.sg/r/p/?_id=dec40b1909a774f125bae9b7707884414199aaa3\", data.get(\"link\").asString());\n+\n+            assertEquals(\"Waking Bee Sports Bra Aqua Blue\", data.get(\"product_name\").asString());\n+\n+            Map<String,String> price = data.get(\"sale_price\").asStringStringMap();\n+            assertEquals(\"SGD\", price.get(\"currency\"));\n+            assertEquals(\"59.0\", price.get(\"value\"));\n+\n+        } catch (IOException e) {\n+            fail(e.getMessage());\n+        }\n+\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "eb113f5a6525495ef83705e622682343506dcc56",
    "filename": "src/test/java/com/visenze/productsearch/response/ObjectProductResultTest.java",
    "status": "added",
    "additions": 113,
    "deletions": 0,
    "changes": 113,
    "blob_url": "https://github.com/visenze/visearch-sdk-java/blob/da1604f04856b34170c7adfc6eb40f83e888c99a/src/test/java/com/visenze/productsearch/response/ObjectProductResultTest.java",
    "raw_url": "https://github.com/visenze/visearch-sdk-java/raw/da1604f04856b34170c7adfc6eb40f83e888c99a/src/test/java/com/visenze/productsearch/response/ObjectProductResultTest.java",
    "contents_url": "https://api.github.com/repos/visenze/visearch-sdk-java/contents/src/test/java/com/visenze/productsearch/response/ObjectProductResultTest.java?ref=da1604f04856b34170c7adfc6eb40f83e888c99a",
    "patch": "@@ -0,0 +1,113 @@\n+package com.visenze.productsearch.response;\n+\n+import com.visenze.common.util.ViJsonAny;\n+import com.visenze.common.util.ViJsonMapper;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * <h1> Object Product Result test </h1>\n+ * Test parsing of a sample response text into the class using deserialization\n+ *\n+ * @author Shannon Tan\n+ * @version 1.0\n+ * @since 18 Mar 2021\n+ */\n+public class ObjectProductResultTest extends ViJsonMapper {\n+    final String RESPONSE = \"{\\n\" +\n+            \"   \\\"type\\\": \\\"top\\\",\\n\" +\n+            \"   \\\"score\\\": 0.683,\\n\" +\n+            \"   \\\"box\\\": [\\n\" +\n+            \"       32,\\n\" +\n+            \"       183,\\n\" +\n+            \"       862,\\n\" +\n+            \"       1062\\n\" +\n+            \"   ],\\n\" +\n+            \"   \\\"attributes\\\": {},\\n\" +\n+            \"    \\\"total\\\": 985,\\n\" +\n+            \"   \\\"result\\\": [\\n\" +\n+            \"   {\\n\" +\n+            \"       \\\"product_id\\\": \\\"POMELO2-AF-SG_b28d580ccf5dfd999d1006f15f773bb371542559\\\",\\n\" +\n+            \"       \\\"main_image_url\\\": \\\"http://d3vhkxmeglg6u9.cloudfront.net/img/p/2/2/1/8/0/6/221806.jpg\\\",\\n\" +\n+            \"       \\\"data\\\": {\\n\" +\n+            \"           \\\"link\\\": \\\"https://iprice.sg/r/p/?_id=b28d580ccf5dfd999d1006f15f773bb371542559\\\",\\n\" +\n+            \"           \\\"product_name\\\": \\\"Skrrrrt Cropped Graphic Hoodie Light Grey\\\",\\n\" +\n+            \"           \\\"sale_price\\\": {\\n\" +\n+            \"               \\\"currency\\\": \\\"SGD\\\",\\n\" +\n+            \"               \\\"value\\\": \\\"44.0\\\"\\n\" +\n+            \"           }\\n\" +\n+            \"       }\\n\" +\n+            \"   },\\n\" +\n+            \"   {\\n\" +\n+            \"       \\\"product_id\\\": \\\"POMELO2-AF-SG_43d7a0fb6e12d1f1079e6efb38b9d392fa135cdd\\\",\\n\" +\n+            \"       \\\"main_image_url\\\": \\\"http://d3vhkxmeglg6u9.cloudfront.net/img/p/1/6/2/3/2/1/162321.jpg\\\",\\n\" +\n+            \"       \\\"data\\\": {\\n\" +\n+            \"           \\\"link\\\": \\\"https://iprice.sg/r/p/?_id=43d7a0fb6e12d1f1079e6efb38b9d392fa135cdd\\\",\\n\" +\n+            \"           \\\"product_name\\\": \\\"Premium Twisted Cold Shoulder Top Pink\\\",\\n\" +\n+            \"           \\\"sale_price\\\": {\\n\" +\n+            \"               \\\"currency\\\": \\\"SGD\\\",\\n\" +\n+            \"               \\\"value\\\": \\\"54.0\\\"\\n\" +\n+            \"           }\\n\" +\n+            \"       }\\n\" +\n+            \"   }\\n\" +\n+            \"   ]\\n\" +\n+            \"}\";\n+\n+    @Test\n+    public void testParse() {\n+        try {\n+            ObjectProductResult result = mapper.readValue(RESPONSE, ObjectProductResult.class);\n+\n+            assertEquals(\"top\", result.getType());\n+\n+            Float score = 0.683f;\n+            assertEquals(score, result.getScore());\n+\n+            assertEquals(true, result.getBox().equals(Arrays.asList(32,183,862,1062)));\n+\n+            assertEquals(true, result.getAttributes().isEmpty());\n+\n+            Integer total = 985;\n+            assertEquals(total, result.getTotal());\n+\n+            List<Product> products = result.getResult();\n+            assertEquals(2, products.size());\n+\n+            assertEquals(\"POMELO2-AF-SG_b28d580ccf5dfd999d1006f15f773bb371542559\", products.get(0).getProductId());\n+\n+            assertEquals(\"http://d3vhkxmeglg6u9.cloudfront.net/img/p/2/2/1/8/0/6/221806.jpg\", products.get(0).getMainImageUrl());\n+\n+            Map<String, ViJsonAny> data = products.get(0).getData();\n+            assertEquals(\"https://iprice.sg/r/p/?_id=b28d580ccf5dfd999d1006f15f773bb371542559\", data.get(\"link\").asString());\n+\n+            assertEquals(\"Skrrrrt Cropped Graphic Hoodie Light Grey\", data.get(\"product_name\").asString());\n+\n+            Map<String,String> price = data.get(\"sale_price\").asStringStringMap();\n+            assertEquals(\"SGD\", price.get(\"currency\"));\n+            assertEquals(\"44.0\", price.get(\"value\"));\n+\n+            assertEquals(\"POMELO2-AF-SG_43d7a0fb6e12d1f1079e6efb38b9d392fa135cdd\", products.get(1).getProductId());\n+\n+            assertEquals(\"http://d3vhkxmeglg6u9.cloudfront.net/img/p/1/6/2/3/2/1/162321.jpg\", products.get(1).getMainImageUrl());\n+\n+            data = products.get(1).getData();\n+            assertEquals(\"https://iprice.sg/r/p/?_id=43d7a0fb6e12d1f1079e6efb38b9d392fa135cdd\", data.get(\"link\").asString());\n+\n+            assertEquals(\"Premium Twisted Cold Shoulder Top Pink\", data.get(\"product_name\").asString());\n+\n+            price = data.get(\"sale_price\").asStringStringMap();\n+            assertEquals(\"SGD\", price.get(\"currency\"));\n+            assertEquals(\"54.0\", price.get(\"value\"));\n+\n+        } catch (IOException e) {\n+            fail(e.getMessage());\n+        }\n+    }\n+}\n\\ No newline at end of file"
  }
]
