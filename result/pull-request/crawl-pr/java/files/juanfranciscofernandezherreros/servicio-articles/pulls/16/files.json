[
  {
    "sha": "0b7b997d7e08ae27bb2a7f88d0081e661baaa129",
    "filename": ".mvn/wrapper/MavenWrapperDownloader.java",
    "status": "modified",
    "additions": 43,
    "deletions": 46,
    "changes": 89,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/.mvn/wrapper/MavenWrapperDownloader.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/.mvn/wrapper/MavenWrapperDownloader.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/.mvn/wrapper/MavenWrapperDownloader.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -14,9 +14,6 @@\n  * limitations under the License.\n  */\n \n-import java.net.*;\n-import java.io.*;\n-import java.nio.channels.*;\n import java.util.Properties;\n \n public class MavenWrapperDownloader {\n@@ -46,73 +43,73 @@\n      */\n     private static final String PROPERTY_NAME_WRAPPER_URL = \"wrapperUrl\";\n \n-    public static void main(String args[]) {\n-        System.out.println(\"- Downloader started\");\n-        File baseDirectory = new File(args[0]);\n-        System.out.println(\"- Using base directory: \" + baseDirectory.getAbsolutePath());\n+    public static void main ( String args[] ) {\n+        System.out.println ( \"- Downloader started\" );\n+        File baseDirectory = new File ( args[ 0 ] );\n+        System.out.println ( \"- Using base directory: \" + baseDirectory.getAbsolutePath ( ) );\n \n         // If the maven-wrapper.properties exists, read it and check if it contains a custom\n         // wrapperUrl parameter.\n-        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);\n+        File mavenWrapperPropertyFile = new File ( baseDirectory , MAVEN_WRAPPER_PROPERTIES_PATH );\n         String url = DEFAULT_DOWNLOAD_URL;\n-        if (mavenWrapperPropertyFile.exists()) {\n+        if ( mavenWrapperPropertyFile.exists ( ) ) {\n             FileInputStream mavenWrapperPropertyFileInputStream = null;\n             try {\n-                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);\n-                Properties mavenWrapperProperties = new Properties();\n-                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);\n-                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);\n-            } catch (IOException e) {\n-                System.out.println(\"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\");\n+                mavenWrapperPropertyFileInputStream = new FileInputStream ( mavenWrapperPropertyFile );\n+                Properties mavenWrapperProperties = new Properties ( );\n+                mavenWrapperProperties.load ( mavenWrapperPropertyFileInputStream );\n+                url = mavenWrapperProperties.getProperty ( PROPERTY_NAME_WRAPPER_URL , url );\n+            } catch ( IOException e ) {\n+                System.out.println ( \"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\" );\n             } finally {\n                 try {\n-                    if (mavenWrapperPropertyFileInputStream != null) {\n-                        mavenWrapperPropertyFileInputStream.close();\n+                    if ( mavenWrapperPropertyFileInputStream != null ) {\n+                        mavenWrapperPropertyFileInputStream.close ( );\n                     }\n-                } catch (IOException e) {\n+                } catch ( IOException e ) {\n                     // Ignore ...\n                 }\n             }\n         }\n-        System.out.println(\"- Downloading from: \" + url);\n+        System.out.println ( \"- Downloading from: \" + url );\n \n-        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);\n-        if (!outputFile.getParentFile().exists()) {\n-            if (!outputFile.getParentFile().mkdirs()) {\n-                System.out.println(\n-                        \"- ERROR creating output directory '\" + outputFile.getParentFile().getAbsolutePath() + \"'\");\n+        File outputFile = new File ( baseDirectory.getAbsolutePath ( ) , MAVEN_WRAPPER_JAR_PATH );\n+        if ( ! outputFile.getParentFile ( ).exists ( ) ) {\n+            if ( ! outputFile.getParentFile ( ).mkdirs ( ) ) {\n+                System.out.println (\n+                        \"- ERROR creating output directory '\" + outputFile.getParentFile ( ).getAbsolutePath ( ) + \"'\" );\n             }\n         }\n-        System.out.println(\"- Downloading to: \" + outputFile.getAbsolutePath());\n+        System.out.println ( \"- Downloading to: \" + outputFile.getAbsolutePath ( ) );\n         try {\n-            downloadFileFromURL(url, outputFile);\n-            System.out.println(\"Done\");\n-            System.exit(0);\n-        } catch (Throwable e) {\n-            System.out.println(\"- Error downloading\");\n-            e.printStackTrace();\n-            System.exit(1);\n+            downloadFileFromURL ( url , outputFile );\n+            System.out.println ( \"Done\" );\n+            System.exit ( 0 );\n+        } catch ( Throwable e ) {\n+            System.out.println ( \"- Error downloading\" );\n+            e.printStackTrace ( );\n+            System.exit ( 1 );\n         }\n     }\n \n-    private static void downloadFileFromURL(String urlString, File destination) throws Exception {\n-        if (System.getenv(\"MVNW_USERNAME\") != null && System.getenv(\"MVNW_PASSWORD\") != null) {\n-            String username = System.getenv(\"MVNW_USERNAME\");\n-            char[] password = System.getenv(\"MVNW_PASSWORD\").toCharArray();\n-            Authenticator.setDefault(new Authenticator() {\n+    private static void downloadFileFromURL ( String urlString , File destination ) throws Exception {\n+        if ( System.getenv ( \"MVNW_USERNAME\" ) != null && System.getenv ( \"MVNW_PASSWORD\" ) != null ) {\n+            String username = System.getenv ( \"MVNW_USERNAME\" );\n+            char[] password = System.getenv ( \"MVNW_PASSWORD\" ).toCharArray ( );\n+            Authenticator.setDefault ( new Authenticator ( ) {\n                 @Override\n-                protected PasswordAuthentication getPasswordAuthentication() {\n-                    return new PasswordAuthentication(username, password);\n+                protected PasswordAuthentication getPasswordAuthentication ( ) {\n+                    return new PasswordAuthentication ( username , password );\n                 }\n-            });\n+            } );\n         }\n-        URL website = new URL(urlString);\n+        URL website = new URL ( urlString );\n         ReadableByteChannel rbc;\n-        rbc = Channels.newChannel(website.openStream());\n-        FileOutputStream fos = new FileOutputStream(destination);\n-        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);\n-        fos.close();\n-        rbc.close();\n+        rbc = Channels.newChannel ( website.openStream ( ) );\n+        FileOutputStream fos = new FileOutputStream ( destination );\n+        fos.getChannel ( ).transferFrom ( rbc , 0 , Long.MAX_VALUE );\n+        fos.close ( );\n+        rbc.close ( );\n     }\n \n }"
  },
  {
    "sha": "95d19c0b61e59af8224ad0ac144b0c0bd1659430",
    "filename": "README.md",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/README.md",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/README.md",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/README.md?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -0,0 +1,3 @@\n+https://stackoverflow.com/questions/39504205/spring-validate-list-of-strings-for-non-empty-elements/39504420\n+\n+https://www.techiedelight.com/check-string-empty-or-null-java/\n\\ No newline at end of file"
  },
  {
    "sha": "7c6b62586f6983a52f5d4f6aa57425d31971f64c",
    "filename": "README1.md",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/README1.md",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/README1.md",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/README1.md?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -0,0 +1,2 @@\n+# servicio-articles\n+articles"
  },
  {
    "sha": "e46f709a54711e11f7d87bab39df045d7a35f70c",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 8,
    "deletions": 20,
    "changes": 28,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/pom.xml",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/pom.xml",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/pom.xml?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -1,5 +1,5 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n          xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n     <modelVersion>4.0.0</modelVersion>\n     <parent>\n@@ -69,34 +69,22 @@\n             <artifactId>springdoc-openapi-ui</artifactId>\n             <version>1.5.2</version>\n         </dependency>\n-        <!--AOP-->\n-        <dependency>\n-            <groupId>org.springframework.boot</groupId>\n-            <artifactId>spring-boot-starter-aop</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.jetbrains</groupId>\n-            <artifactId>annotations</artifactId>\n-            <version>RELEASE</version>\n-            <scope>compile</scope>\n-        </dependency>\n         <dependency>\n             <groupId>org.jetbrains</groupId>\n             <artifactId>annotations</artifactId>\n             <version>RELEASE</version>\n             <scope>compile</scope>\n         </dependency>\n+        <!--SpringBoot Starter Validation-->\n         <dependency>\n-            <groupId>org.jetbrains</groupId>\n-            <artifactId>annotations</artifactId>\n-            <version>RELEASE</version>\n-            <scope>compile</scope>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-validation</artifactId>\n+            <scope>test</scope>\n         </dependency>\n+        <!--MySQL-->\n         <dependency>\n-            <groupId>org.jetbrains</groupId>\n-            <artifactId>annotations</artifactId>\n-            <version>RELEASE</version>\n-            <scope>compile</scope>\n+            <groupId>mysql</groupId>\n+            <artifactId>mysql-connector-java</artifactId>\n         </dependency>\n     </dependencies>\n "
  },
  {
    "sha": "51e30290c84d0928f11918264cb9f6d663666121",
    "filename": "src/main/java/com/fernandez/api/articles/ArticlesApplication.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/ArticlesApplication.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/ArticlesApplication.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/ArticlesApplication.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -6,7 +6,7 @@\n @SpringBootApplication\n public class  ArticlesApplication {\n \n-    public static void main(String[] args) {\n+    public static void main(final String[] args) {\n         SpringApplication.run(ArticlesApplication.class, args);\n     }\n "
  },
  {
    "sha": "327c4aba210b1dab3d9223d559d615571778afc7",
    "filename": "src/main/java/com/fernandez/api/articles/common/Messages.java",
    "status": "modified",
    "additions": 2,
    "deletions": 10,
    "changes": 12,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/common/Messages.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/common/Messages.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/common/Messages.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -1,8 +1,6 @@\n package com.fernandez.api.articles.common;\n \n import org.jetbrains.annotations.NotNull;\n-import org.slf4j.Logger;\n-import org.springframework.context.MessageSource;\n import org.springframework.context.support.MessageSourceAccessor;\n import org.springframework.stereotype.Service;\n \n@@ -12,17 +10,11 @@\n @Transactional\n public class Messages {\n \n-    private static final Logger log = org.slf4j.LoggerFactory.getLogger(Messages.class);\n-    private final MessageSource messageSource;\n-\n     private MessageSourceAccessor accessor;\n \n-    public Messages(MessageSource messageSource) {\n-        this.messageSource = messageSource;\n-    }\n+    public @NotNull String get ( final @NotNull String code ) {\n \n-    public @NotNull String get(final @NotNull String code) {\n-        return accessor.getMessage(code);\n+        return accessor.getMessage ( code );\n     }\n \n }"
  },
  {
    "sha": "42cbda60fc792df86a75e8ba08f201a2f1019a13",
    "filename": "src/main/java/com/fernandez/api/articles/constants/PropertiesConstant.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/constants/PropertiesConstant.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/constants/PropertiesConstant.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/constants/PropertiesConstant.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -6,4 +6,5 @@\n     public static final String ARTICLE_NOT_FOUND = \"article.not.found\";\n     public static final String ONE_CATEGORY = \"minimum.category\";\n     public static final String TAG_NOT_FOUND = \"tag.not.found\";\n+    public static final String COMMENT_NOT_FOUND = \"comment.not.found\" ;\n }"
  },
  {
    "sha": "634c834434e2ad1b815d36c93960cc82981d4e1c",
    "filename": "src/main/java/com/fernandez/api/articles/constants/UrlMapping.java",
    "status": "modified",
    "additions": 7,
    "deletions": 2,
    "changes": 9,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/constants/UrlMapping.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/constants/UrlMapping.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/constants/UrlMapping.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -2,12 +2,17 @@\n \n public final class UrlMapping {\n     public static final String ROOT = \"/api\";\n+    public static final String V1 = \"/v1\";\n     public static final String PROTECTED = \"/protected\";\n     public static final String PUBLIC = \"/public\";\n     public static final String ARTICLES = \"/articles\";\n+    public static final String ARTICLE = \"/article\";\n     public static final String CATEGORIES = \"/categories\";\n-    public static final String TAGS = \"/tags\";\n+    public static final String CATEGORY = \"/category\";\n+    public static final String TAGS= \"/tags\";\n+    public static final String TAG = \"/tag\";\n     public static final String COMMENTS = \"/comments\";\n+    public static final String COMMENT = \"/comment\";\n     public static final String RANDOM = \"/random\";\n-\n+    public static final String ARCHIVES =\"/archives\";\n }"
  },
  {
    "sha": "3e3cb7c6e72f1aa60777559847f5865f6f146bfc",
    "filename": "src/main/java/com/fernandez/api/articles/controller/ArticleController.java",
    "status": "modified",
    "additions": 26,
    "deletions": 18,
    "changes": 44,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/controller/ArticleController.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/controller/ArticleController.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/controller/ArticleController.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -3,15 +3,15 @@\n import com.fernandez.api.articles.constants.UrlMapping;\n import com.fernandez.api.articles.dto.ArticleDTO;\n import com.fernandez.api.articles.service.ArticleService;\n+import com.fernandez.api.articles.wrapper.ArticleWrapper;\n import lombok.RequiredArgsConstructor;\n import lombok.extern.slf4j.Slf4j;\n import org.springframework.data.domain.Page;\n import org.springframework.data.domain.Pageable;\n import org.springframework.data.web.PageableDefault;\n-import org.springframework.validation.annotation.Validated;\n import org.springframework.web.bind.annotation.*;\n \n-import java.util.List;\n+import javax.validation.Valid;\n \n import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n \n@@ -23,35 +23,43 @@\n \n     private final ArticleService articleService;\n \n-    @PostMapping(value = UrlMapping.PROTECTED + UrlMapping.ARTICLES)\n-    public ArticleDTO save(@Validated @RequestBody ArticleDTO articleDTO) {\n-        log.info(\"[ArticleController][Create] articleDTO={}\", articleDTO);\n+    @PostMapping(value = UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.ARTICLE)\n+    public ArticleDTO save(final @Valid @RequestBody ArticleDTO articleDTO) {\n+        log.info(\"[ArticleController][save] articleDTO={}\", articleDTO);\n         return articleService.save(articleDTO);\n     }\n \n-    @PutMapping(value = UrlMapping.PROTECTED + UrlMapping.ARTICLES)\n-    public ArticleDTO update(@RequestBody ArticleDTO articleDTO) {\n+    @PutMapping(value = UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.ARTICLE)\n+    public ArticleDTO update(final @RequestBody ArticleDTO articleDTO) {\n         log.info(\"[ArticleController][update] articleDTO={}\", articleDTO);\n-        return articleService.update(articleDTO);\n+        return articleService.save(articleDTO);\n+    }\n+\n+    @GetMapping(value = UrlMapping.PUBLIC + UrlMapping.V1 + UrlMapping.ARTICLES)\n+    public Page<ArticleDTO> findAll(@RequestHeader(\"Accept-Language\") final String acceptLanguage,\n+                                    final ArticleWrapper articleWrapper,\n+                                    @PageableDefault(size = 1) final Pageable pageable) {\n+        log.info(\"[ArticleController][findAll] acceptLanguage={} articleWrapper={} pageable={}\", acceptLanguage , articleWrapper,pageable );\n+        return articleService.findAllArticles(acceptLanguage, articleWrapper, pageable);\n     }\n \n-    @GetMapping(value = UrlMapping.PUBLIC + UrlMapping.ARTICLES)\n-    public Page<ArticleDTO> findAll(@RequestHeader(\"accept-language\") final String acceptLanguage,\n-                                    @RequestParam(required = false) final String name,\n-                                    @RequestParam(required = false) final List<String> tags,\n-                                    @RequestParam(required = false) final List<String> categories,\n-                                    @PageableDefault(page = 0, size = 5) Pageable pageable) {\n-        return articleService.findAllArticles(acceptLanguage, name, tags, categories, pageable);\n+    @GetMapping(value = UrlMapping.PUBLIC + UrlMapping.V1 + UrlMapping.ARTICLES + UrlMapping.RANDOM)\n+    public Page<ArticleDTO> findAllArticlesRandom(@RequestHeader(\"Accept-Language\") final String acceptLanguage,\n+                                    @PageableDefault(size = 18) final Pageable pageable) {\n+        log.info(\"[ArticleController][findAll] acceptLanguage={} , pageable={}\", acceptLanguage ,pageable );\n+        return articleService.findAllArticlesRandom(acceptLanguage, pageable);\n     }\n \n-    @GetMapping(value = UrlMapping.PUBLIC)\n+    @GetMapping(value = UrlMapping.PUBLIC + UrlMapping.V1 + UrlMapping.ARTICLE)\n     public ArticleDTO findArticleBySlugOrId(@RequestParam(required = false) final Long articleId,\n                                             @RequestParam(required = false) final String slug) {\n+        log.info(\"[ArticleController][findArticleBySlugOrId] articleId={} slug={}\", articleId , slug);\n         return articleService.findArticleBySlugOrId(slug,articleId);\n     }\n \n-    @DeleteMapping(value = UrlMapping.PROTECTED + UrlMapping.ARTICLES)\n-    public void deleteById(@RequestParam final Long id) {\n+    @DeleteMapping(value = UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.ARTICLE)\n+    public void deleteArticleById(@RequestParam final Long id) {\n+        log.info(\"[ArticleController][deleteArticleById] id={}\", id);\n         articleService.deleteArticleById(id);\n     }\n }"
  },
  {
    "sha": "02e248d653085b580908169ece883c6d50dc7cf0",
    "filename": "src/main/java/com/fernandez/api/articles/controller/CategoryController.java",
    "status": "modified",
    "additions": 16,
    "deletions": 17,
    "changes": 33,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/controller/CategoryController.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/controller/CategoryController.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/controller/CategoryController.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -10,7 +10,6 @@\n import org.springframework.data.web.PageableDefault;\n import org.springframework.validation.annotation.Validated;\n import org.springframework.web.bind.annotation.*;\n-\n import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n \n @Slf4j\n@@ -19,37 +18,37 @@\n @RequestMapping(value = UrlMapping.ROOT, produces = {APPLICATION_JSON_VALUE})\n public class CategoryController {\n \n-    private final CategoryService categoryService;\n+    private final CategoryService service;\n \n-    @GetMapping(value = UrlMapping.PUBLIC + UrlMapping.CATEGORIES)\n-    public Page<CategoryDTO> findAll(@RequestHeader(\"accept-language\") final String acceptLanguage,\n-                                     @PageableDefault(page = 0, size = 5) Pageable pageable) {\n-        Page<CategoryDTO> categoryDtoPage = categoryService.findAll(acceptLanguage,pageable);\n-        return categoryDtoPage;\n+    @GetMapping(value = UrlMapping.PUBLIC + UrlMapping.V1 + UrlMapping.CATEGORIES)\n+    public Page<CategoryDTO> findAll(@RequestHeader(\"Accept-Language\") final String acceptLanguage,\n+                                     @PageableDefault(size = 5) final Pageable pageable) {\n+        log.info(\"[CategoryController][findAll] acceptLanguage={} pageable={}\", acceptLanguage,pageable);\n+        return service.findAll(acceptLanguage,pageable);\n     }\n \n-    @PostMapping(value = UrlMapping.PROTECTED + UrlMapping.CATEGORIES)\n-    public CategoryDTO save(@Validated @RequestBody CategoryDTO categoryDTO) {\n+    @PostMapping(value = UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.CATEGORY)\n+    public CategoryDTO save(final @Validated @RequestBody CategoryDTO categoryDTO) {\n         log.info(\"[CategoryController][save] categoryDTO={}\", categoryDTO);\n-        return categoryService.save(categoryDTO);\n+        return service.save(categoryDTO);\n     }\n \n-    @PutMapping(value = UrlMapping.PROTECTED + UrlMapping.CATEGORIES)\n-    public CategoryDTO update(@Validated @RequestBody CategoryDTO categoryDTO) {\n+    @PutMapping(value = UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.CATEGORY)\n+    public CategoryDTO update(final @Validated @RequestBody CategoryDTO categoryDTO) {\n         log.info(\"[CategoryController][update] categoryDTO={}\", categoryDTO);\n-        return categoryService.save(categoryDTO);\n+        return service.save(categoryDTO);\n     }\n \n-    @GetMapping(value = UrlMapping.PROTECTED + UrlMapping.CATEGORIES)\n+    @GetMapping(value = UrlMapping.PUBLIC + UrlMapping.V1 + UrlMapping.CATEGORY)\n     public CategoryDTO findById(@RequestParam final Long categoryId) {\n         log.info(\"[CategoryController][findById] categoryId={}\", categoryId);\n-        return categoryService.findCategoryDtoById(categoryId);\n+        return service.findCategoryDtoById(categoryId);\n     }\n \n-    @DeleteMapping(value = UrlMapping.PROTECTED + UrlMapping.CATEGORIES)\n+    @DeleteMapping(value = UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.CATEGORY)\n     public void deleteCategoryById(@RequestParam final Long categoryId) {\n         log.info(\"[CategoryController][deleteById] categoryId={}\", categoryId);\n-        categoryService.deleteById(categoryId);\n+        service.deleteCategoryById(categoryId);\n     }\n \n }"
  },
  {
    "sha": "a87d9b0c97d5f160fce350ff55ebe2309f2c58b4",
    "filename": "src/main/java/com/fernandez/api/articles/controller/ComentariosController.java",
    "status": "modified",
    "additions": 23,
    "deletions": 6,
    "changes": 29,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/controller/ComentariosController.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/controller/ComentariosController.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/controller/ComentariosController.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -21,17 +21,34 @@\n \n     private final ComentarioService comentarioService;\n \n-    @GetMapping(value = UrlMapping.PUBLIC + UrlMapping.COMMENTS)\n-    public List<ComentariosDTO> findAllCommentsFromArticle(@RequestParam(required = true) final Long articleId) {\n+    @GetMapping(UrlMapping.PUBLIC + UrlMapping.V1 + UrlMapping.COMMENTS)\n+    public List<ComentariosDTO> findAllCommentsFromArticle(@RequestParam() final Long articleId) {\n         log.info(\"[ComentariosController][findAllCommentsFromArticle] comentariosDTO={}\", articleId);\n-        List<ComentariosDTO> tmpList = new ArrayList<ComentariosDTO>();\n-        return comentarioService.findAllComentariosByBlogTranslationId(0, 0, articleId,tmpList);\n+        return comentarioService.findAllComentariosByBlogTranslationId(0, 0, articleId,new ArrayList<>());\n     }\n \n-    @PostMapping(value = UrlMapping.PROTECTED + UrlMapping.COMMENTS)\n-    public ComentariosDTO save(@Validated @RequestBody ComentariosDTO comentariosDTO) {\n+    @GetMapping(UrlMapping.PUBLIC + UrlMapping.V1 + UrlMapping.COMMENT)\n+    public ComentariosDTO findCommentById(@RequestParam() final Long commentId) {\n+        log.info(\"[ComentariosController][findCommentById] commentId={}\", commentId);\n+        return comentarioService.findCommentById(commentId);\n+    }\n+\n+    @PostMapping(UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.COMMENT)\n+    public ComentariosDTO save(final @Validated @RequestBody ComentariosDTO comentariosDTO) {\n         log.info(\"[ComentariosController][save] comentariosDTO={}\", comentariosDTO);\n         return comentarioService.save(comentariosDTO);\n     }\n \n+    @PutMapping(UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.COMMENT)\n+    public ComentariosDTO update(final @Validated @RequestBody ComentariosDTO comentariosDTO) {\n+        log.info(\"[ComentariosController][update] comentariosDTO={}\", comentariosDTO);\n+        return comentarioService.save(comentariosDTO);\n+    }\n+\n+    @DeleteMapping(UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.COMMENT)\n+    public void deleteCommentById(final @RequestParam(required = false) Long commentId) {\n+        log.info(\"[ComentariosController][deleteCommentById] commentId={}\", commentId);\n+        comentarioService.deleteById(commentId);\n+    }\n+\n }"
  },
  {
    "sha": "0f75aed2728807403ea9a876de11534a966dbb1d",
    "filename": "src/main/java/com/fernandez/api/articles/controller/TagsController.java",
    "status": "modified",
    "additions": 16,
    "deletions": 15,
    "changes": 31,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/controller/TagsController.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/controller/TagsController.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/controller/TagsController.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -21,39 +21,40 @@\n \n     private final TagService tagService;\n \n-    @GetMapping(value = UrlMapping.PUBLIC + UrlMapping.TAGS)\n-    public Page<TagDTO> findAll(@RequestHeader(\"accept-language\") final String acceptLanguage,\n-                                     @PageableDefault(page = 0, size = 5) Pageable pageable) {\n+    @PostMapping(UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.TAG)\n+    public TagDTO save(@Validated @RequestBody final TagDTO tagDTO) {\n+        log.info(\"[TagsController][save] tagDTO={}\", tagDTO);\n+        return tagService.save(tagDTO);\n+    }\n+\n+    @GetMapping(UrlMapping.PUBLIC + UrlMapping.V1 + UrlMapping.TAGS)\n+    public Page<TagDTO> findAll(@RequestHeader(\"Accept-Language\") final String acceptLanguage,\n+                                     @PageableDefault(size = 5) final Pageable pageable) {\n         log.info(\"[TagsController][findAll] acceptLanguage={} tagId={}\", acceptLanguage , pageable);\n         return tagService.findAll(acceptLanguage,pageable);\n     }\n \n-    @GetMapping(value = UrlMapping.PUBLIC + UrlMapping.TAGS + UrlMapping.RANDOM)\n-    public Page<TagDTO> findAllTagsRandom(@RequestHeader(\"accept-language\") final String acceptLanguage,\n-                                @PageableDefault(page = 0, size = 5) Pageable pageable) {\n+    @GetMapping(UrlMapping.PUBLIC + UrlMapping.V1 + UrlMapping.TAGS + UrlMapping.RANDOM)\n+    public Page<TagDTO> findAllTagsRandom(@RequestHeader(\"Accept-Language\") final String acceptLanguage,\n+                                @PageableDefault(size = 5) final Pageable pageable) {\n         log.info(\"[TagsController][findAll] acceptLanguage={} tagId={}\", acceptLanguage , pageable);\n         return tagService.findAllTagsRandom(acceptLanguage,pageable);\n     }\n \n-    @GetMapping(value = UrlMapping.PROTECTED + UrlMapping.TAGS)\n+    @GetMapping(UrlMapping.PUBLIC + UrlMapping.V1 + UrlMapping.TAG)\n     public TagDTO findById(@RequestParam final Long tagId) {\n         log.info(\"[CategoryController][findById] tagId={}\", tagId);\n         return tagService.findTagDtoById(tagId);\n     }\n \n-    @PostMapping(value = UrlMapping.PROTECTED + UrlMapping.TAGS)\n-    public TagDTO save(@Validated @RequestBody TagDTO tagDTO) {\n-        log.info(\"[TagsController][save] tagDTO={}\", tagDTO);\n-        return tagService.save(tagDTO);\n-    }\n \n-    @PutMapping(value = UrlMapping.PROTECTED + UrlMapping.TAGS)\n-    public TagDTO update(@Validated @RequestBody TagDTO tagDTO) {\n+    @PutMapping(UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.TAG)\n+    public TagDTO update(@Validated @RequestBody final TagDTO tagDTO) {\n         log.info(\"[TagsController][update] tagDTO={}\", tagDTO);\n         return tagService.save(tagDTO);\n     }\n \n-    @DeleteMapping(value = UrlMapping.PROTECTED + UrlMapping.TAGS)\n+    @DeleteMapping(UrlMapping.PROTECTED + UrlMapping.V1 + UrlMapping.TAG)\n     public void deleteTagById(@RequestParam final Long tagId) {\n         log.info(\"[TagsController][deleteById] tagId={}\", tagId);\n         tagService.deleteById(tagId);"
  },
  {
    "sha": "8dd3e3fefeb4a28982681b77f66ec28facdae441",
    "filename": "src/main/java/com/fernandez/api/articles/cors/XClacksOverhead.java",
    "status": "modified",
    "additions": 3,
    "deletions": 9,
    "changes": 12,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/cors/XClacksOverhead.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/cors/XClacksOverhead.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/cors/XClacksOverhead.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -10,8 +10,9 @@\n public class XClacksOverhead implements Filter {\n \n     @Override\n-    public void doFilter(ServletRequest req, ServletResponse res,\n-                         FilterChain chain) throws IOException, ServletException {\n+    public void doFilter(final ServletRequest req,\n+                         final ServletResponse res,\n+                         final FilterChain chain) throws IOException, ServletException {\n \n         HttpServletResponse response = (HttpServletResponse) res;\n         response.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n@@ -21,11 +22,4 @@ public void doFilter(ServletRequest req, ServletResponse res,\n         response.setHeader(\"Access-Control-Max-Age\", \"86400\");\n         chain.doFilter(req, res);\n     }\n-\n-    @Override\n-    public void destroy() {}\n-\n-    @Override\n-    public void init(FilterConfig arg0) throws ServletException {}\n-\n }"
  },
  {
    "sha": "eee8feac27f12d968e24f1284b9a520149f0a2e8",
    "filename": "src/main/java/com/fernandez/api/articles/dto/ArticleDTO.java",
    "status": "modified",
    "additions": 17,
    "deletions": 4,
    "changes": 21,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/dto/ArticleDTO.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/dto/ArticleDTO.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/dto/ArticleDTO.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -5,6 +5,9 @@\n import lombok.experimental.FieldDefaults;\n import org.springframework.lang.NonNull;\n \n+import javax.validation.Valid;\n+import javax.validation.constraints.NotEmpty;\n+import javax.validation.constraints.Size;\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -18,34 +21,44 @@\n     Long id;\n \n     @NonNull\n+    @NotEmpty\n     String title;\n \n     @NonNull\n+    @NotEmpty\n     String slug;\n \n     @NonNull\n+    @NotEmpty\n     String description;\n \n     @NonNull\n+    @NotEmpty\n     String content;\n \n     @NonNull\n+    @NotEmpty\n     String mainImage;\n \n     @NonNull\n+    @NotEmpty\n     String language;\n+    @NonNull\n \n+    @Valid\n     UserDTO user;\n \n     @JsonProperty(access = JsonProperty.Access.READ_ONLY)\n     String createdDate;\n \n-    Long totalComments;\n-\n-    AuditDTO auditDTO;\n-\n+    @Size(max=3)\n     List<TagDTO> tags = new ArrayList<>();\n \n+    @Size(min=1 , max=3)\n     List<CategoryDTO> categories = new ArrayList<>();\n \n+    Long totalComments;\n+\n+    AuditDTO auditDTO;\n+\n }"
  },
  {
    "sha": "7d2dd8eaab536c020cc8f702ca75c845f72a212c",
    "filename": "src/main/java/com/fernandez/api/articles/dto/CategoryDTO.java",
    "status": "modified",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/dto/CategoryDTO.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/dto/CategoryDTO.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/dto/CategoryDTO.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -4,15 +4,31 @@\n import lombok.Data;\n import lombok.NoArgsConstructor;\n import lombok.ToString;\n+import org.springframework.lang.NonNull;\n+\n+import javax.validation.constraints.NotEmpty;\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Size;\n \n @Data\n @NoArgsConstructor\n @AllArgsConstructor\n @ToString\n public class CategoryDTO {\n+\n     private Long id;\n+\n+    @NonNull\n+    @NotEmpty\n     private String name;\n+\n+    @NonNull\n+    @NotEmpty\n     private String language;\n+\n+    @NonNull\n+    @NotEmpty\n     private String slug;\n+\n     private Long totalArticles;\n }"
  },
  {
    "sha": "b4d9ab8a7d088f0fed4797c5870cc30a85fafb47",
    "filename": "src/main/java/com/fernandez/api/articles/dto/ComentariosDTO.java",
    "status": "modified",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/dto/ComentariosDTO.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/dto/ComentariosDTO.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/dto/ComentariosDTO.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -4,6 +4,10 @@\n import lombok.Data;\n import lombok.NoArgsConstructor;\n import lombok.ToString;\n+import org.springframework.lang.NonNull;\n+\n+import javax.validation.Valid;\n+import javax.validation.constraints.NotEmpty;\n \n @Data\n @NoArgsConstructor\n@@ -12,13 +16,27 @@\n public class ComentariosDTO {\n \n     private Long id;\n+\n+    @NonNull\n+    @NotEmpty\n     private String contenido;\n+\n+    @Valid\n     private UserDTO authorComment;\n+\n+    @NonNull\n     private Long  articleId;\n+\n+    @NonNull\n     private Long parentId;\n+\n     private AuditDTO auditDTO;\n+\n     private ComentariosUserNotRegisteredDTO comentarioUserNotRegistered;\n+\n     private boolean isanswer;\n+\n+    @NonNull\n     private Long level;\n \n }"
  },
  {
    "sha": "ae745904a55228dc300b4da5b21e1c306124aed1",
    "filename": "src/main/java/com/fernandez/api/articles/dto/TagDTO.java",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/dto/TagDTO.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/dto/TagDTO.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/dto/TagDTO.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -3,13 +3,25 @@\n import lombok.AllArgsConstructor;\n import lombok.Data;\n import lombok.NoArgsConstructor;\n+import org.springframework.lang.NonNull;\n+\n+import javax.validation.constraints.NotEmpty;\n \n @Data\n @NoArgsConstructor\n @AllArgsConstructor\n public class TagDTO {\n     private Long id;\n+\n+    @NonNull\n+    @NotEmpty\n     private String name;\n+\n+    @NonNull\n+    @NotEmpty\n     private String language;\n+\n+    @NonNull\n+    @NotEmpty\n     private String slug;\n }"
  },
  {
    "sha": "4c889aaa4ed090337a1d803da1af06f3ce630181",
    "filename": "src/main/java/com/fernandez/api/articles/dto/UserDTO.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/dto/UserDTO.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/dto/UserDTO.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/dto/UserDTO.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -3,16 +3,23 @@\n import lombok.AllArgsConstructor;\n import lombok.Data;\n import lombok.NoArgsConstructor;\n+import org.springframework.lang.NonNull;\n+\n+import javax.validation.constraints.NotEmpty;\n \n @Data\n @NoArgsConstructor\n @AllArgsConstructor\n public class UserDTO {\n \n     private Long id;\n+\n+    @NonNull\n+    @NotEmpty\n     private String username;\n+\n     private String name;\n-    private String fistName;\n+    private String firstName;\n     private String email;\n     private String imageProfile;\n     private String password;"
  },
  {
    "sha": "56d7ebd4038edd88f755fbacb06579473079799d",
    "filename": "src/main/java/com/fernandez/api/articles/exceptions/ArticlesException.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/exceptions/ArticlesException.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/exceptions/ArticlesException.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/exceptions/ArticlesException.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -1,11 +1,11 @@\n package com.fernandez.api.articles.exceptions;\n \n-public class ArticlesException extends RuntimeException  {\n+public class ArticlesException extends RuntimeException {\n \n     private static final long serialVersionUID = 1L;\n \n-    public ArticlesException(final String message) {\n-        super(message);\n+    public ArticlesException ( final String message ) {\n+        super ( message );\n     }\n \n }"
  },
  {
    "sha": "f9ad988079c4d43d48f19d8561625de29c92df38",
    "filename": "src/main/java/com/fernandez/api/articles/exceptions/ArticlesLogicException.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/exceptions/ArticlesLogicException.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/exceptions/ArticlesLogicException.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/exceptions/ArticlesLogicException.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -10,8 +10,8 @@\n     @Getter\n     private final HttpStatus httpStatus;\n \n-    public ArticlesLogicException(final HttpStatus httpStatus, final String message) {\n-        super(message);\n+    public ArticlesLogicException ( final HttpStatus httpStatus , final String message ) {\n+        super ( message );\n         this.httpStatus = httpStatus;\n     }\n "
  },
  {
    "sha": "f4ac149392ced49715fc67bb82ce2ae2f9adab7c",
    "filename": "src/main/java/com/fernandez/api/articles/exceptions/ErrorHandlingController.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/exceptions/ErrorHandlingController.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/exceptions/ErrorHandlingController.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/exceptions/ErrorHandlingController.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -1,6 +1,5 @@\n package com.fernandez.api.articles.exceptions;\n \n-import java.util.Objects;\n import lombok.AllArgsConstructor;\n import lombok.extern.slf4j.Slf4j;\n import org.jetbrains.annotations.NotNull;\n@@ -9,7 +8,8 @@\n import org.springframework.http.ResponseEntity;\n import org.springframework.web.bind.annotation.ExceptionHandler;\n import org.springframework.web.bind.annotation.RestControllerAdvice;\n-import org.springframework.web.context.request.WebRequest;\n+\n+import java.util.Objects;\n \n \n @Slf4j\n@@ -18,15 +18,13 @@\n public class ErrorHandlingController {\n \n     @ExceptionHandler(ArticlesLogicException.class)\n-    public @NotNull ResponseEntity<ErrorMessage> logicException(final @NotNull ArticlesLogicException exception,\n-                                                                final WebRequest request) {\n+    public @NotNull ResponseEntity<ErrorMessage> logicException(final @NotNull ArticlesLogicException exception) {\n         return buildResponseEntityException(new ErrorMessage(exception.getHttpStatus(),\n                 exception.getMessage(), Objects.toString(exception.getMessage())));\n     }\n \n     @ExceptionHandler(DataIntegrityViolationException.class)\n-    public @NotNull ResponseEntity<ErrorMessage> dataIntegrationViolation(final @NotNull DataIntegrityViolationException exception,\n-                                                                          final WebRequest request) {\n+    public @NotNull ResponseEntity<ErrorMessage> dataIntegrationViolation(final @NotNull DataIntegrityViolationException exception) {\n         return buildResponseEntityException(new ErrorMessage(HttpStatus.BAD_REQUEST, exception.getMessage(), Objects.toString(exception.getMessage())));\n     }\n "
  },
  {
    "sha": "3659875599f6886feadee7cf3375bd702d379aff",
    "filename": "src/main/java/com/fernandez/api/articles/exceptions/ErrorMessage.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/exceptions/ErrorMessage.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/exceptions/ErrorMessage.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/exceptions/ErrorMessage.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -10,7 +10,7 @@\n     private final String message;\n     private final String description;\n \n-    public ErrorMessage(final HttpStatus statusCode, final String message, final String description) {\n+    public ErrorMessage ( final HttpStatus statusCode , final String message , final String description ) {\n         this.statusCode = statusCode;\n         this.message = message;\n         this.description = description;"
  },
  {
    "sha": "da9e60a7126d45423e85e8a43d54d47711e5e7c5",
    "filename": "src/main/java/com/fernandez/api/articles/model/Article.java",
    "status": "modified",
    "additions": 2,
    "deletions": 4,
    "changes": 6,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/Article.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/Article.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/model/Article.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -2,10 +2,7 @@\n \n import com.fasterxml.jackson.annotation.JsonManagedReference;\n import com.fernandez.api.articles.model.auditable.Audit;\n-import lombok.AllArgsConstructor;\n-import lombok.Getter;\n-import lombok.NoArgsConstructor;\n-import lombok.Setter;\n+import lombok.*;\n import lombok.experimental.Accessors;\n \n import javax.persistence.*;\n@@ -18,6 +15,7 @@\n @NoArgsConstructor\n @AllArgsConstructor\n @Entity\n+@ToString\n @Table(name = \"articles\")\n public class Article {\n "
  },
  {
    "sha": "c1bf7c423d0996cd9a0d8656914943046b8f26c8",
    "filename": "src/main/java/com/fernandez/api/articles/model/Category.java",
    "status": "modified",
    "additions": 18,
    "deletions": 10,
    "changes": 28,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/Category.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/Category.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/model/Category.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -7,35 +7,43 @@\n import lombok.Setter;\n import lombok.experimental.Accessors;\n \n-import javax.persistence.*;\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToMany;\n+import javax.persistence.Table;\n import java.util.HashSet;\n import java.util.Set;\n \n @Getter\n @Setter\n-@Accessors(chain = true)\n+@Accessors ( chain = true )\n @NoArgsConstructor\n @AllArgsConstructor\n @Entity\n-@Table(name = \"category\")\n+@Table ( name = \"category\" )\n public class Category {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    @Column(name = \"id\")\n+    @GeneratedValue ( strategy = GenerationType.IDENTITY )\n+    @Column ( name = \"id\" )\n     private Long id;\n \n-    @Column(name = \"name\", nullable = false, unique = true)\n+    @Column ( name = \"name\", nullable = false, unique = true )\n     private String name;\n \n-    @Column(name = \"language\", nullable = false)\n+    @Column ( name = \"language\", nullable = false )\n     private String language;\n \n-    @Column(name = \"slug\", nullable = false)\n+    @Column ( name = \"slug\", nullable = false )\n     private String slug;\n \n-    @ManyToMany(fetch = FetchType.LAZY, cascade = {CascadeType.PERSIST, CascadeType.MERGE}, mappedBy = \"categories\")\n+    @ManyToMany ( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST , CascadeType.MERGE }, mappedBy = \"categories\" )\n     @JsonBackReference\n-    private Set<Article> categories = new HashSet<>();\n+    private Set < Article > categories = new HashSet <> ( );\n \n }"
  },
  {
    "sha": "6f53753d6e6aca43c438b2db9303917173e88282",
    "filename": "src/main/java/com/fernandez/api/articles/model/Comentarios.java",
    "status": "modified",
    "additions": 1,
    "deletions": 4,
    "changes": 5,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/Comentarios.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/Comentarios.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/model/Comentarios.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -6,9 +6,7 @@\n import lombok.NoArgsConstructor;\n import lombok.Setter;\n import lombok.experimental.Accessors;\n-\n import javax.persistence.*;\n-import java.io.Serializable;\n \n @Getter\n @Setter\n@@ -17,8 +15,7 @@\n @AllArgsConstructor\n @Entity\n @Table(name = \"comentarios\")\n-public class Comentarios implements Serializable {\n-\n+public class Comentarios {\n \n     @Id\n     @GeneratedValue(strategy = GenerationType.IDENTITY)"
  },
  {
    "sha": "ce8ac1e626f4bba3d07a5a0dc86653de94472acb",
    "filename": "src/main/java/com/fernandez/api/articles/model/ComentariosUserNotRegistered.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/ComentariosUserNotRegistered.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/ComentariosUserNotRegistered.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/model/ComentariosUserNotRegistered.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -6,9 +6,7 @@\n import lombok.NoArgsConstructor;\n import lombok.Setter;\n import lombok.experimental.Accessors;\n-\n import javax.persistence.*;\n-import java.io.Serializable;\n \n @Getter\n @Setter\n@@ -17,7 +15,7 @@\n @AllArgsConstructor\n @Entity\n @Table(name = \"comentarios_usernotregistered\")\n-public class ComentariosUserNotRegistered implements Serializable {\n+public class ComentariosUserNotRegistered {\n \n     @Id\n     @GeneratedValue(strategy = GenerationType.IDENTITY)"
  },
  {
    "sha": "0937ba1ff855928bb034aa197a151d3232e70c9e",
    "filename": "src/main/java/com/fernandez/api/articles/model/Tag.java",
    "status": "modified",
    "additions": 18,
    "deletions": 10,
    "changes": 28,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/Tag.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/Tag.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/model/Tag.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -7,35 +7,43 @@\n import lombok.Setter;\n import lombok.experimental.Accessors;\n \n-import javax.persistence.*;\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToMany;\n+import javax.persistence.Table;\n import java.util.HashSet;\n import java.util.Set;\n \n @Getter\n @Setter\n-@Accessors(chain = true)\n+@Accessors ( chain = true )\n @NoArgsConstructor\n @AllArgsConstructor\n @Entity\n-@Table(name = \"tag\")\n+@Table ( name = \"tag\" )\n public class Tag {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    @Column(name = \"id\")\n+    @GeneratedValue ( strategy = GenerationType.IDENTITY )\n+    @Column ( name = \"id\" )\n     private Long id;\n \n-    @Column(name = \"name\", nullable = false, unique = true)\n+    @Column ( name = \"name\", nullable = false, unique = true )\n     private String name;\n \n-    @Column(name = \"language\", nullable = false)\n+    @Column ( name = \"language\", nullable = false )\n     private String language;\n \n-    @Column(name = \"slug\", nullable = false)\n+    @Column ( name = \"slug\", nullable = false )\n     private String slug;\n \n-    @ManyToMany(fetch = FetchType.LAZY, cascade = {CascadeType.PERSIST, CascadeType.MERGE}, mappedBy = \"tags\")\n+    @ManyToMany ( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST , CascadeType.MERGE }, mappedBy = \"tags\" )\n     @JsonBackReference\n-    private Set<Article> tags = new HashSet<>();\n+    private Set < Article > tags = new HashSet <> ( );\n \n }"
  },
  {
    "sha": "458cbe2b81860df423f75d2a15d88fe65fe3e003",
    "filename": "src/main/java/com/fernandez/api/articles/model/User.java",
    "status": "modified",
    "additions": 15,
    "deletions": 15,
    "changes": 30,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/User.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/User.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/model/User.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -6,47 +6,47 @@\n import lombok.Setter;\n import lombok.experimental.Accessors;\n \n-import javax.persistence.Table;\n+import javax.persistence.Column;\n import javax.persistence.Entity;\n-import javax.persistence.Id;\n import javax.persistence.GeneratedValue;\n import javax.persistence.GenerationType;\n-import javax.persistence.Column;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n \n \n @Getter\n @Setter\n-@Accessors(chain = true)\n+@Accessors ( chain = true )\n @NoArgsConstructor\n @AllArgsConstructor\n @Entity\n-@Table(name = \"user\")\n+@Table ( name = \"user\" )\n public class User {\n \n     @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    @Column(name = \"id\")\n+    @GeneratedValue ( strategy = GenerationType.IDENTITY )\n+    @Column ( name = \"id\" )\n     private Long id;\n \n-    @Column(unique = true, name = \"username\", length = 20, nullable = false)\n+    @Column ( unique = true, name = \"username\", length = 20, nullable = false )\n     private String username;\n \n-    @Column(name = \"name\", nullable = false)\n+    @Column ( name = \"name\", nullable = false )\n     private String name;\n \n-    @Column(name = \"first_name\")\n-    private String fistName;\n+    @Column ( name = \"first_name\" )\n+    private String firstName;\n \n-    @Column(name = \"second_surname\")\n+    @Column ( name = \"second_surname\" )\n     private String lastName;\n \n-    @Column(name = \"email\", unique = true, length = 100, nullable = false)\n+    @Column ( name = \"email\", unique = true, length = 100, nullable = false )\n     private String email;\n \n-    @Column(name = \"image_profile\", length = 500000)\n+    @Column ( name = \"image_profile\", length = 500000 )\n     private String imageProfile;\n \n-    @Column(name = \"password\", length = 60, nullable = false)\n+    @Column ( name = \"password\", length = 60, nullable = false )\n     private String password;\n \n }"
  },
  {
    "sha": "7221f0bfef5db6cd68f67827683c9f49cb7b9e2e",
    "filename": "src/main/java/com/fernandez/api/articles/model/auditable/Audit.java",
    "status": "modified",
    "additions": 8,
    "deletions": 6,
    "changes": 14,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/auditable/Audit.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/model/auditable/Audit.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/model/auditable/Audit.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -1,6 +1,7 @@\n package com.fernandez.api.articles.model.auditable;\n \n import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n import lombok.Setter;\n \n import javax.persistence.Column;\n@@ -12,22 +13,23 @@\n @Getter\n @Setter\n @Embeddable\n+@RequiredArgsConstructor\n public class Audit {\n \n-    @Column(name = \"created_on\")\n+    @Column ( name = \"created_on\" )\n     private Date createdOn;\n \n-    @Column(name = \"updated_on\")\n+    @Column ( name = \"updated_on\" )\n     private Date updatedOn;\n \n     @PrePersist\n-    public void prePersist() {\n-        createdOn = new Date();\n+    public void prePersist ( ) {\n+        createdOn = new Date ( );\n     }\n \n     @PreUpdate\n-    public void preUpdate() {\n-        updatedOn = new Date();\n+    public void preUpdate ( ) {\n+        updatedOn = new Date ( );\n     }\n \n }"
  },
  {
    "sha": "efe27f498795fbe918038d8bbad4cff7a00795e7",
    "filename": "src/main/java/com/fernandez/api/articles/repository/ArticleRepository.java",
    "status": "modified",
    "additions": 7,
    "deletions": 8,
    "changes": 15,
    "blob_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/blob/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/repository/ArticleRepository.java",
    "raw_url": "https://github.com/juanfranciscofernandezherreros/servicio-articles/raw/7dd8607e562029104378eb2fb180cc8b6c9aa854/src/main/java/com/fernandez/api/articles/repository/ArticleRepository.java",
    "contents_url": "https://api.github.com/repos/juanfranciscofernandezherreros/servicio-articles/contents/src/main/java/com/fernandez/api/articles/repository/ArticleRepository.java?ref=7dd8607e562029104378eb2fb180cc8b6c9aa854",
    "patch": "@@ -8,21 +8,20 @@\n import org.springframework.data.jpa.repository.JpaRepository;\n import org.springframework.stereotype.Repository;\n \n+import java.nio.channels.FileChannel;\n import java.util.List;\n import java.util.Optional;\n \n @Repository\n-public interface ArticleRepository extends JpaRepository<Article, Long> {\n+public interface ArticleRepository extends JpaRepository < Article, Long > {\n \n-    Optional<Article> findArticleBySlug(String slug);\n+    Optional < Article > findArticleBySlug ( String slug );\n \n-    Page<Article> findByTagsIn(List<Tag> tags, Pageable pageable);\n+    Page < Article > findByTagsIn ( List < Tag > tags , Pageable pageable );\n \n-    Page<Article> findByCategoriesIn(List<Category> categories, Pageable pageable);\n-\n-    Page<Article> findArticleByLanguageAndTitle(String acceptLanguage, String name, Pageable pageable);\n-\n-    Page<Article> findAllByLanguage(String acceptLanguage, Pageable pageable);\n+    Page < Article > findByCategoriesIn ( List < Category > categories , Pageable pageable );\n \n+    Page < Article > findArticleByLanguageAndTitleContaining( String acceptLanguage , String name , Pageable pageable );\n \n+    Page <Article> findAllByLanguage(String acceptLanguage, Pageable pageable);\n }"
  }
]
