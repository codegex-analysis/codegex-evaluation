[
  {
    "sha": "add1c28b640d5bb6ba1fae071d4f0144f5bb7de0",
    "filename": ".idea/misc.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/.idea/misc.xml",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/.idea/misc.xml?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project version=\"4\">\n-  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11.0.6\" project-jdk-type=\"JavaSDK\">\n     <output url=\"file://$PROJECT_DIR$/out\" />\n   </component>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "e96534fb27b68192f27f985d3879e173ec77adb8",
    "filename": ".idea/uiDesigner.xml",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/.idea/uiDesigner.xml",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/.idea/uiDesigner.xml",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/.idea/uiDesigner.xml?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -0,0 +1,124 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"Palette2\">\n+    <group name=\"Swing\">\n+      <item class=\"com.intellij.uiDesigner.HSpacer\" tooltip-text=\"Horizontal Spacer\" icon=\"/com/intellij/uiDesigner/icons/hspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"com.intellij.uiDesigner.VSpacer\" tooltip-text=\"Vertical Spacer\" icon=\"/com/intellij/uiDesigner/icons/vspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+      <item class=\"javax.swing.JPanel\" icon=\"/com/intellij/uiDesigner/icons/panel.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollPane\" icon=\"/com/intellij/uiDesigner/icons/scrollPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JButton\" icon=\"/com/intellij/uiDesigner/icons/button.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Button\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JRadioButton\" icon=\"/com/intellij/uiDesigner/icons/radioButton.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"RadioButton\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JCheckBox\" icon=\"/com/intellij/uiDesigner/icons/checkBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"CheckBox\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JLabel\" icon=\"/com/intellij/uiDesigner/icons/label.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Label\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JTextField\" icon=\"/com/intellij/uiDesigner/icons/textField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JPasswordField\" icon=\"/com/intellij/uiDesigner/icons/passwordField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JFormattedTextField\" icon=\"/com/intellij/uiDesigner/icons/formattedTextField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextArea\" icon=\"/com/intellij/uiDesigner/icons/textArea.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextPane\" icon=\"/com/intellij/uiDesigner/icons/textPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JEditorPane\" icon=\"/com/intellij/uiDesigner/icons/editorPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JComboBox\" icon=\"/com/intellij/uiDesigner/icons/comboBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JTable\" icon=\"/com/intellij/uiDesigner/icons/table.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JList\" icon=\"/com/intellij/uiDesigner/icons/list.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"2\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTree\" icon=\"/com/intellij/uiDesigner/icons/tree.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTabbedPane\" icon=\"/com/intellij/uiDesigner/icons/tabbedPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSplitPane\" icon=\"/com/intellij/uiDesigner/icons/splitPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSpinner\" icon=\"/com/intellij/uiDesigner/icons/spinner.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSlider\" icon=\"/com/intellij/uiDesigner/icons/slider.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSeparator\" icon=\"/com/intellij/uiDesigner/icons/separator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JProgressBar\" icon=\"/com/intellij/uiDesigner/icons/progressbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JToolBar\" icon=\"/com/intellij/uiDesigner/icons/toolbar.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\">\n+          <preferred-size width=\"-1\" height=\"20\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JToolBar$Separator\" icon=\"/com/intellij/uiDesigner/icons/toolbarSeparator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollBar\" icon=\"/com/intellij/uiDesigner/icons/scrollbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"0\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+    </group>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "94a25f7f4cb416c083d265558da75d457237d671",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/.idea/vcs.xml",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/.idea/vcs.xml?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "e04ce15a41336767c369c5ec980bae946ef93304",
    "filename": "out/production/geekbrains_java_dev_lvl_3/Lesson_1/Apple.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Apple.class",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Apple.class",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Apple.class?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7"
  },
  {
    "sha": "a1c66fa5f2fcb14c26b53e38150bb3e70122ac73",
    "filename": "out/production/geekbrains_java_dev_lvl_3/Lesson_1/Box.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Box.class",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Box.class",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Box.class?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7"
  },
  {
    "sha": "b261f26e931f40f67aae2c39038201603d516ec8",
    "filename": "out/production/geekbrains_java_dev_lvl_3/Lesson_1/Fruit.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Fruit.class",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Fruit.class",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Fruit.class?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7"
  },
  {
    "sha": "1531fdc61885d63c7322eb086098291f4abfc945",
    "filename": "out/production/geekbrains_java_dev_lvl_3/Lesson_1/Orange.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Orange.class",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Orange.class",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Orange.class?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7"
  },
  {
    "sha": "3959e07747127123b7ba7d05847bd080265f09ea",
    "filename": "out/production/geekbrains_java_dev_lvl_3/Lesson_1/Task1_and_2.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Task1_and_2.class",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Task1_and_2.class",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Task1_and_2.class?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7"
  },
  {
    "sha": "1467ef610e203a623eee19ebea5b170d01c03282",
    "filename": "out/production/geekbrains_java_dev_lvl_3/Lesson_1/Task_3.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Task_3.class",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Task_3.class",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/out/production/geekbrains_java_dev_lvl_3/Lesson_1/Task_3.class?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7"
  },
  {
    "sha": "edbf213adccb6428850c9a5b92096d27306c41a4",
    "filename": "out/production/geekbrains_java_dev_lvl_3/Lesson_4/Task_1$1WorkClass.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_4/Task_1$1WorkClass.class",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_4/Task_1$1WorkClass.class",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/out/production/geekbrains_java_dev_lvl_3/Lesson_4/Task_1$1WorkClass.class?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7"
  },
  {
    "sha": "eadc8bc45ff094475e7f2561d4c8fcaec595ee49",
    "filename": "out/production/geekbrains_java_dev_lvl_3/Lesson_4/Task_1.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_4/Task_1.class",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/Lesson_4/Task_1.class",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/out/production/geekbrains_java_dev_lvl_3/Lesson_4/Task_1.class?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7"
  },
  {
    "sha": "a49347afef10a9b5f95305e1058ba36adec7d6dd",
    "filename": "out/production/geekbrains_java_dev_lvl_3/META-INF/geekbrains_java_dev_lvl_3.kotlin_module",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/META-INF/geekbrains_java_dev_lvl_3.kotlin_module",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/out/production/geekbrains_java_dev_lvl_3/META-INF/geekbrains_java_dev_lvl_3.kotlin_module",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/out/production/geekbrains_java_dev_lvl_3/META-INF/geekbrains_java_dev_lvl_3.kotlin_module?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7"
  },
  {
    "sha": "89a20638dee5b890481eda068e25a11396864a04",
    "filename": "src/Lesson_1/Main.java",
    "status": "removed",
    "additions": 0,
    "deletions": 7,
    "changes": 7,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/156329d34d9af17c0029c3c67c3bdd137a26dd36/src/Lesson_1/Main.java",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/156329d34d9af17c0029c3c67c3bdd137a26dd36/src/Lesson_1/Main.java",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/src/Lesson_1/Main.java?ref=156329d34d9af17c0029c3c67c3bdd137a26dd36",
    "patch": "@@ -1,7 +0,0 @@\n-package Lesson_1;\n-\n-public class Main {\n-    public static void main(String[] args) {\n-        System.out.println();\n-    }\n-}"
  },
  {
    "sha": "d53883c26e59e2f614da09460bf6cef24dc3050e",
    "filename": "src/Lesson_1/Task1_and_2.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_1/Task1_and_2.java",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_1/Task1_and_2.java",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/src/Lesson_1/Task1_and_2.java?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -0,0 +1,31 @@\n+package Lesson_1;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class Task1_and_2 {\n+    public static void main(String[] args) {\n+        Integer[] arr = {1, 2, 3, 4, 5, 6, 7, 8};\n+        exchange_task_1(arr, 2, 7);\n+\n+        List<?> listOk = toArrayList_task_2(arr);\n+\n+        for (Object o : listOk) {\n+            System.out.print(o + \" \");\n+        }\n+    }\n+\n+    public static <T> void exchange_task_1 (T[] arr, int in_1, int in_2) {\n+        T temp = arr[in_1];\n+        arr[in_1] = arr[in_2];\n+        arr[in_2] = temp;\n+    }\n+\n+    public static <T> List<T> toArrayList_task_2(T[] arr) {\n+        List<T> list = new ArrayList<>();\n+        for (int i = 0; i < arr.length; i++) {\n+            list.add(arr[i]);\n+        }\n+        return list;\n+    }\n+}"
  },
  {
    "sha": "7583d9448e616df4967e008c9866bc4a01ff0408",
    "filename": "src/Lesson_1/Task_3.java",
    "status": "added",
    "additions": 92,
    "deletions": 0,
    "changes": 92,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_1/Task_3.java",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_1/Task_3.java",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/src/Lesson_1/Task_3.java?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -0,0 +1,92 @@\n+package Lesson_1;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class Task_3 {\n+    public static void main(String[] args) {\n+        Box<Apple> appleBox = new Box<>();\n+        Box<Orange> orangeBox = new Box<>();\n+\n+        appleBox.put(new Apple(1.0));\n+        appleBox.put(new Apple(1.3));\n+        appleBox.put(new Apple(2));\n+\n+        orangeBox.put(new Orange(2.3));\n+        orangeBox.put(new Orange(2));\n+\n+        appleBox.getWeight();\n+\n+        System.out.println(appleBox.compare(orangeBox));\n+\n+        appleBox.clear();\n+//        appleBox.putAll(orangeBox);\n+    }\n+}\n+\n+abstract class Fruit {\n+    private double WEIGHT;\n+\n+    public double getWeight(){\n+        return WEIGHT;\n+    }\n+\n+    public void setWeight(double weight) {\n+        this.WEIGHT = weight;\n+    }\n+}\n+\n+\n+\n+class Apple extends Fruit {\n+    public Apple(double appleWeight) {\n+        setWeight(appleWeight);\n+    }\n+}\n+\n+\n+\n+class Orange extends Fruit {\n+    public Orange(double orangeWeight) {\n+        setWeight(orangeWeight);\n+    }\n+}\n+\n+\n+\n+class Box<T extends Fruit> {\n+    private List<T> fruitsInside;\n+\n+    public Box() {\n+        fruitsInside = new ArrayList<>();\n+    }\n+\n+    public double getWeight() {\n+        double boxWeight = 0;\n+        for (Fruit fruit : this.fruitsInside) {\n+            boxWeight += fruit.getWeight();\n+        }\n+        return boxWeight;\n+    }\n+\n+    public boolean compare(Box<?> box) {\n+        return this.getWeight() == box.getWeight();\n+    }\n+\n+    public void putAll(Box<T> box){\n+        fruitsInside.addAll(box.getFruits());\n+        box.clear();\n+    }\n+\n+    public void put(T fruit) {\n+        fruitsInside.add(fruit);\n+    }\n+\n+    public List<T> getFruits() {\n+        return fruitsInside;\n+    }\n+\n+    public void clear() {\n+        fruitsInside.clear();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "ff8051a2c8d591e0c3a354011df795f0f66820ba",
    "filename": "src/Lesson_4/Task_1.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_4/Task_1.java",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_4/Task_1.java",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/src/Lesson_4/Task_1.java?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -0,0 +1,43 @@\n+package Lesson_4;\n+\n+import java.sql.SQLOutput;\n+\n+public class Task_1 {\n+    static String a = \"A\";\n+\n+    public static void main(String[] args) {\n+        Object lock = new Object();\n+        class WorkClass implements Runnable {\n+            private String b;\n+            private String nextB;\n+\n+            public WorkClass(String b, String nextB) {\n+                this.b = b;\n+                this.nextB = nextB;\n+            }\n+\n+            @Override\n+            public void run() {\n+                for (int i = 0; i < 5; i++) {\n+                    synchronized (lock) {\n+                        try {\n+                           while (!a.equals(b))\n+                                lock.wait();\n+                            System.out.print(b);\n+                            a = nextB;\n+                            Thread.sleep(1);\n+                            lock.notifyAll();\n+                        } catch (InterruptedException e) {\n+                            e.printStackTrace();\n+                        }\n+                    }\n+                }\n+            }\n+        }\n+        new Thread (new WorkClass(\"A\", \"B\")).start();\n+        new Thread (new WorkClass(\"B\", \"C\")).start();\n+        new Thread (new WorkClass(\"C\", \"D\")).start();\n+        new Thread (new WorkClass(\"D\", \"E\")).start();\n+        new Thread (new WorkClass(\"E\", \"A\")).start();\n+    }\n+}"
  },
  {
    "sha": "b30e7fa9869368fe152197138eb37b264fd60ab0",
    "filename": "src/Lesson_5/Car.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Car.java",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Car.java",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/src/Lesson_5/Car.java?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -0,0 +1,60 @@\n+package Lesson_5;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+public class Car implements Runnable {\n+    private static int CARS_COUNT;\n+\n+    static {\n+        CARS_COUNT = 0;\n+    }\n+\n+    private final Race race;\n+    private final int speed;\n+    private final String name;\n+    private final CountDownLatch cdlReady;\n+    private final CountDownLatch cdlFinish;\n+    private long startTime;\n+    private static final CountDownLatch countDownLatch = new CountDownLatch(Task_1.CARS_COUNT);\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public int getSpeed() {\n+        return speed;\n+    }\n+\n+    public Car(Race race, int speed, CountDownLatch cdlReady, CountDownLatch cdlFinish) {\n+        this.race = race;\n+        this.speed = speed;\n+        this.cdlReady = cdlReady;\n+        this.cdlFinish = cdlFinish;\n+        CARS_COUNT++;\n+        this.name = \"Speeder #\" + CARS_COUNT;\n+    }\n+\n+    @Override\n+    public void run() {\n+        try {\n+            System.out.println(this.name + \" is preparing\");\n+            Thread.sleep(500 + (int) (Math.random() * 800));\n+            System.out.println(this.name + \" is ready\");\n+            countDownLatch.countDown();\n+            cdlReady.countDown();\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+        try {\n+            countDownLatch.await();\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+\n+        startTime = System.currentTimeMillis();\n+        for (int i = 0; i < race.getStages().size(); i++) {\n+            race.getStages().get(i).go(this, i + 1, race.getStages().size(), startTime);\n+        }\n+        cdlFinish.countDown();\n+    }\n+}"
  },
  {
    "sha": "6792ddb7236e84bc75d13303b9d28d2e66e9cba1",
    "filename": "src/Lesson_5/Race.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Race.java",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Race.java",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/src/Lesson_5/Race.java?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -0,0 +1,18 @@\n+package Lesson_5;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+public class Race {\n+    private ArrayList<Stage> stages;\n+\n+    public ArrayList<Stage> getStages() {\n+        return stages;\n+    }\n+    public Race() {\n+\n+    }\n+    public Race(Stage... stages) {\n+        this.stages = new ArrayList<>(Arrays.asList(stages));\n+    }\n+}"
  },
  {
    "sha": "5575aea2adb3e307c2a54964af2467e9eba87bb0",
    "filename": "src/Lesson_5/Road.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Road.java",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Road.java",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/src/Lesson_5/Road.java?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -0,0 +1,28 @@\n+package Lesson_5;\n+\n+\n+public class Road extends Stage {\n+    private long finishTime;\n+\n+    public Road(int length) {\n+        this.length = length;\n+        this.description = \"Road \" + length + \" m\";\n+    }\n+\n+\n+    @Override\n+    public void go(Car c, int stagePos, int stageCount, long startTime) {\n+        try {\n+            System.out.println(c.getName() + \" started: \" + description);\n+            Thread.sleep(length / c.getSpeed() * 1000);\n+            finishTime = System.currentTimeMillis() - startTime;\n+            System.out.println(c.getName() + \" has done: \" + description + \", time from begin = \" + ((float) (finishTime) / 1000));\n+            if (stagePos == stageCount && Task_1.firstFinish) {\n+                Task_1.firstFinish = false;\n+                System.out.println(c.getName() + \" Win!\");\n+            }\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}"
  },
  {
    "sha": "dc045ddb7ff1409981c28ad609d2cd74701ae268",
    "filename": "src/Lesson_5/Stage.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Stage.java",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Stage.java",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/src/Lesson_5/Stage.java?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -0,0 +1,11 @@\n+package Lesson_5;\n+\n+public abstract class Stage {\n+    protected int length;\n+    protected String description;\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+    public abstract void go(Car c, int stagePos, int stageCount, long startTime);\n+}"
  },
  {
    "sha": "17a958d91c4b524c3bb08880b568fc6b76936f00",
    "filename": "src/Lesson_5/Task_1.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Task_1.java",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Task_1.java",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/src/Lesson_5/Task_1.java?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -0,0 +1,44 @@\n+package Lesson_5;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+public class Task_1 {\n+    public static final int CARS_COUNT = 10;\n+    public static volatile boolean firstFinish = true;\n+\n+    public static void main(String[] args) {\n+        System.out.println(\"READY\");\n+        Race race = new Race(\n+                new Road(60),\n+                new Tunnel(50)\n+        );\n+        Car[] cars = new Car[CARS_COUNT];\n+        CountDownLatch countDownLatchReady = new CountDownLatch(CARS_COUNT);\n+        CountDownLatch countDownLatchFinish = new CountDownLatch(CARS_COUNT);\n+        long time;\n+\n+        for (int i = 0; i < cars.length; i++) {\n+            cars[i] = new Car(race, 20 + (int) (Math.random() *  10), countDownLatchReady, countDownLatchFinish);\n+        }\n+\n+        for (int i = 0; i < cars.length; i++) {\n+            new Thread(cars[i]).start();\n+        }\n+\n+        try {\n+            countDownLatchReady.await();\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+\n+        System.out.println(\"GO!\");\n+        time = System.currentTimeMillis();\n+\n+        try {\n+            countDownLatchFinish.await();\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+        System.out.println(\"Race is done! Time = \" + ((float) (System.currentTimeMillis() - time) / 1000));\n+    }\n+}"
  },
  {
    "sha": "fe41f1a0612743f7ec17ca0dd465c37afc87c742",
    "filename": "src/Lesson_5/Tunnel.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/blob/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Tunnel.java",
    "raw_url": "https://github.com/thesamebox/geekbrains_java_dev_lvl_3/raw/2d1a234cd9b762295b652bc08e7939e85282c0d7/src/Lesson_5/Tunnel.java",
    "contents_url": "https://api.github.com/repos/thesamebox/geekbrains_java_dev_lvl_3/contents/src/Lesson_5/Tunnel.java?ref=2d1a234cd9b762295b652bc08e7939e85282c0d7",
    "patch": "@@ -0,0 +1,37 @@\n+package Lesson_5;\n+\n+import java.util.concurrent.Semaphore;\n+\n+public class Tunnel extends Stage {\n+    private static final Semaphore semaphore = new Semaphore(Task_1.CARS_COUNT / 2);\n+    private long finishTima;\n+\n+    public Tunnel(int length) {\n+        this.length = length;\n+        this.description = \"Tunnel \" + length + \" m\";\n+    }\n+\n+    @Override\n+    public void go(Car c, int stagePos, int stageCount, long startTime) {\n+        try {\n+            try {\n+                System.out.println(c.getName() + \" waiting for: \" + description);\n+                semaphore.acquire();\n+                System.out.println(c.getName() + \" started: \" + description);\n+                Thread.sleep(length / c.getSpeed() * 1000);\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            } finally {\n+                finishTima = System.currentTimeMillis() - startTime;\n+                System.out.println(c.getName() + \" has done: \" + description + \", teme from begin = \" + ((float) (finishTima) / 1000));\n+                semaphore.release();\n+                if (stagePos == stageCount && Task_1.firstFinish) {\n+                    Task_1.firstFinish = false;\n+                    System.out.println(c.getName() + \" Win!\");\n+                }\n+            }\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+    }\n+}"
  }
]
