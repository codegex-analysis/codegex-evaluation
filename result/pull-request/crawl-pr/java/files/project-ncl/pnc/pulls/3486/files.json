[
  {
    "sha": "f95fe1bf70c35c1ee128ce1a57a363a3adcf38f4",
    "filename": "bpm/src/test/java/org/jboss/pnc/bpm/test/RestConnectorRequestSerializationTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/bpm/src/test/java/org/jboss/pnc/bpm/test/RestConnectorRequestSerializationTest.java",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/bpm/src/test/java/org/jboss/pnc/bpm/test/RestConnectorRequestSerializationTest.java",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/bpm/src/test/java/org/jboss/pnc/bpm/test/RestConnectorRequestSerializationTest.java?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -116,7 +116,7 @@ private AnalyzeDeliverablesTask mockAnalyzeDeliverablesTask() {\n         urls.add(url2);\n         String config = \"config\";\n         AnalyzeDeliverablesBpmRequest request = new AnalyzeDeliverablesBpmRequest(urls, config);\n-        Set<Request.Header> headers = new HashSet<>();\n+        List<Request.Header> headers = new ArrayList<>();\n         headers.add(new Request.Header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON));\n \n         Request callback = new Request(Request.Method.POST, URI.create(\"http://mock.com/\"), headers);"
  },
  {
    "sha": "702ea17495a145eeeb7e132dfa84513045377de0",
    "filename": "facade/src/main/java/org/jboss/pnc/facade/impl/DeliverablesAnalyzerInvokerImpl.java",
    "status": "modified",
    "additions": 6,
    "deletions": 7,
    "changes": 13,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/facade/src/main/java/org/jboss/pnc/facade/impl/DeliverablesAnalyzerInvokerImpl.java",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/facade/src/main/java/org/jboss/pnc/facade/impl/DeliverablesAnalyzerInvokerImpl.java",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/facade/src/main/java/org/jboss/pnc/facade/impl/DeliverablesAnalyzerInvokerImpl.java?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -20,7 +20,6 @@\n import org.jboss.pnc.api.constants.HttpHeaders;\n import org.jboss.pnc.api.constants.MDCHeaderKeys;\n import org.jboss.pnc.api.dto.Request;\n-import org.jboss.pnc.bpm.BpmManager;\n import org.jboss.pnc.bpm.RestConnector;\n import org.jboss.pnc.bpm.model.AnalyzeDeliverablesBpmRequest;\n import org.jboss.pnc.bpm.task.AnalyzeDeliverablesTask;\n@@ -38,8 +37,8 @@\n import javax.inject.Inject;\n import javax.ws.rs.core.MediaType;\n import java.net.URI;\n-import java.util.HashSet;\n-import java.util.Set;\n+import java.util.ArrayList;\n+import java.util.List;\n \n @ApplicationScoped\n public class DeliverablesAnalyzerInvokerImpl implements DeliverablesAnalyzerInvoker {\n@@ -72,7 +71,7 @@ public void startAnalysis(String milestoneId, DeliverablesAnalysisRequest reques\n         String actualEndpoint = String.format(callbackUrlTemplate, globalConfig.getPncUrl(), milestoneId);\n         URI callbackURI = URI.create(actualEndpoint);\n \n-        Set<Request.Header> headers = new HashSet<>();\n+        List<Request.Header> headers = new ArrayList<>();\n         addCommonHeaders(headers, accessToken);\n         addMDCHeaders(headers);\n \n@@ -94,19 +93,19 @@ public void startAnalysis(String milestoneId, DeliverablesAnalysisRequest reques\n         }\n     }\n \n-    private void addMDCHeaders(Set<Request.Header> headers) {\n+    private void addMDCHeaders(List<Request.Header> headers) {\n         headersFromMdc(headers, MDCHeaderKeys.REQUEST_CONTEXT);\n         headersFromMdc(headers, MDCHeaderKeys.PROCESS_CONTEXT);\n     }\n \n-    private void addCommonHeaders(Set<Request.Header> headers, String accessToken) {\n+    private void addCommonHeaders(List<Request.Header> headers, String accessToken) {\n         headers.add(new Request.Header(HttpHeaders.CONTENT_TYPE_STRING, MediaType.APPLICATION_JSON));\n         if (accessToken != null) {\n             headers.add(new Request.Header(HttpHeaders.AUTHORIZATION_STRING, \"Bearer \" + accessToken));\n         }\n     }\n \n-    private void headersFromMdc(Set<Request.Header> headers, MDCHeaderKeys headerKey) {\n+    private void headersFromMdc(List<Request.Header> headers, MDCHeaderKeys headerKey) {\n         String mdcValue = MDC.get(headerKey.getMdcKey());\n         if (mdcValue != null && mdcValue.isEmpty()) {\n             headers.add(new Request.Header(headerKey.getHeaderName(), mdcValue.trim()));"
  },
  {
    "sha": "bf693145dce139895af265ba12fc2bab0f1f30fb",
    "filename": "indy-repository-manager/pom.xml",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/indy-repository-manager/pom.xml",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/indy-repository-manager/pom.xml",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/indy-repository-manager/pom.xml?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -46,6 +46,12 @@\n     <dependency>\n       <groupId>org.jboss.pnc</groupId>\n       <artifactId>spi</artifactId>\n+      <exclusions>\n+      \t<exclusion>\n+      \t\t<groupId>javax.ws.rs</groupId>\n+      \t\t<artifactId>javax.ws.rs-api</artifactId>\n+      \t</exclusion>\n+      </exclusions>\n     </dependency>\n     <dependency>\n       <groupId>org.jboss.pnc</groupId>\n@@ -228,6 +234,12 @@\n         <version>${version.indy-resteasy}</version>\n         <scope>test</scope>\n       </dependency>\n+      <dependency>\n+        <groupId>org.jboss.resteasy</groupId>\n+        <artifactId>resteasy-jaxb-provider</artifactId>\n+        <version>${version.indy-resteasy}</version>\n+        <scope>test</scope>\n+      </dependency>\n       <dependency>\n         <groupId>org.jboss.resteasy</groupId>\n         <artifactId>resteasy-client</artifactId>"
  },
  {
    "sha": "c684c66dc14ef24da71bcbcfba275c9858781fa9",
    "filename": "integration-test/src/test/java/org/jboss/pnc/integration/BuildExecutionTest.java",
    "status": "modified",
    "additions": 12,
    "deletions": 15,
    "changes": 27,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/integration-test/src/test/java/org/jboss/pnc/integration/BuildExecutionTest.java",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/integration-test/src/test/java/org/jboss/pnc/integration/BuildExecutionTest.java",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/integration-test/src/test/java/org/jboss/pnc/integration/BuildExecutionTest.java?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -21,6 +21,7 @@\n import io.undertow.util.Headers;\n import org.jboss.arquillian.container.test.api.Deployment;\n import org.jboss.arquillian.junit.Arquillian;\n+import org.jboss.pnc.api.dto.Request;\n import org.jboss.pnc.buildagent.api.Status;\n import org.jboss.pnc.buildagent.api.TaskStatusUpdateEvent;\n import org.jboss.pnc.buildagent.common.http.HttpClient;\n@@ -42,11 +43,11 @@\n import javax.inject.Inject;\n import javax.ws.rs.core.MediaType;\n import java.io.IOException;\n+import java.net.URI;\n import java.net.URISyntaxException;\n-import java.net.URL;\n import java.security.NoSuchAlgorithmException;\n-import java.util.HashMap;\n-import java.util.Map;\n+import java.util.ArrayList;\n+import java.util.List;\n import java.util.UUID;\n import java.util.concurrent.ArrayBlockingQueue;\n import java.util.concurrent.BlockingQueue;\n@@ -86,10 +87,10 @@ public void shouldReceiveBuildResultViaHttpCallback() throws IOException, NoSuch\n                 .newStatus(Status.COMPLETED)\n                 .outputChecksum(Md5.digest(\"black\"));\n         Credentials user = Credentials.USER;\n-        Map<String, String> headers = new HashMap<>();\n-        headers.put(Headers.CONTENT_TYPE_STRING, MediaType.APPLICATION_JSON);\n+        List<Request.Header> headers = new ArrayList<>();\n+        headers.add(new Request.Header(Headers.CONTENT_TYPE_STRING, MediaType.APPLICATION_JSON));\n         user.createAuthHeader((k, v) -> {\n-            headers.put(k, v);\n+            headers.add(new Request.Header(k, v));\n             return null;\n         });\n         String data = objectMapper.writeValueAsString(updateEventBuilder.build());\n@@ -103,17 +104,13 @@ public void shouldReceiveBuildResultViaHttpCallback() throws IOException, NoSuch\n         // when\n         long executionId = 11L;\n         ((BuildExecutorMock) buildExecutor).addRunningExecution(executionId, session);\n-        CompletableFuture<HttpClient.Response> responseFuture = new CompletableFuture<>();\n         HttpClient httpClient = new HttpClient();\n \n-        httpClient.invoke(\n-                new URL(\"http://localhost:8080/pnc-rest/v2/build-execution/\" + executionId + \"/completed\").toURI(),\n-                \"POST\",\n-                headers,\n-                data,\n-                responseFuture,\n-                0,\n-                0L);\n+        Request request = new Request(\n+                Request.Method.POST,\n+                URI.create(\"http://localhost:8080/pnc-rest/v2/build-execution/\" + executionId + \"/completed\"),\n+                headers);\n+        CompletableFuture<HttpClient.Response> responseFuture = httpClient.invoke(request, data);\n \n         // then\n         TaskStatusUpdateEvent event = events.take();// event received"
  },
  {
    "sha": "d9d4309dc18a05b6595552fc57c8c18c68507121",
    "filename": "integration-test/src/test/java/org/jboss/pnc/integration/EAPModulesAccessTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/integration-test/src/test/java/org/jboss/pnc/integration/EAPModulesAccessTest.java",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/integration-test/src/test/java/org/jboss/pnc/integration/EAPModulesAccessTest.java",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/integration-test/src/test/java/org/jboss/pnc/integration/EAPModulesAccessTest.java?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -22,6 +22,7 @@\n import org.jboss.pnc.buildagent.client.BuildAgentClient;\n import org.jboss.pnc.buildagent.client.BuildAgentClientException;\n import org.jboss.pnc.buildagent.client.BuildAgentHttpClient;\n+import org.jboss.pnc.buildagent.client.HttpClientConfiguration;\n import org.jboss.pnc.integration.setup.Deployments;\n import org.jboss.pnc.test.category.ContainerTest;\n import org.jboss.shrinkwrap.api.spec.EnterpriseArchive;\n@@ -52,7 +53,11 @@ public static EnterpriseArchive deploy() {\n      */\n     @Test\n     public void shouldBeAbleToCreteBuildAgentClient() throws BuildAgentClientException {\n-        BuildAgentClient client = new BuildAgentHttpClient(\"http://localhost/\", null, \"POST\");\n+        HttpClientConfiguration configuration = HttpClientConfiguration.newBuilder()\n+                .termBaseUrl(\"http://localhost/\")\n+                .livenessResponseTimeout(30000L)\n+                .build();\n+        BuildAgentClient client = new BuildAgentHttpClient(configuration);\n         Assert.assertNotNull(client);\n     }\n "
  },
  {
    "sha": "1eb2b217f12f3bcbd0a30e553f025dd007589c65",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/pom.xml",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/pom.xml",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/pom.xml?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -103,7 +103,7 @@\n     <!--<version.org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec>1.0.2.Final-redhat-1</version.org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec>-->\n     <version.org.jboss.spec.javax.jms.jboss-jms-api_1.1_spec>1.0.1.Final</version.org.jboss.spec.javax.jms.jboss-jms-api_1.1_spec>\n     <atlasVersion>1.1.0</atlasVersion>\n-    <indyVersion>2.5.3</indyVersion>\n+    <indyVersion>2.5.4</indyVersion>\n     <version.assertj-core>3.18.1</version.assertj-core>\n     <version.mockito>3.8.0</version.mockito>\n     <version.catch-exception>1.2.0</version.catch-exception>"
  },
  {
    "sha": "448f35026c7247dd036c666ac19f77c8230908d1",
    "filename": "termd-build-driver/pom.xml",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/pom.xml",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/pom.xml",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/termd-build-driver/pom.xml?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -63,6 +63,11 @@\n       <artifactId>commons-io</artifactId>\n       <scope>provided</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.jboss.pnc</groupId>\n+      <artifactId>pnc-api</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n \n     <!-- Remote dependencies -->\n "
  },
  {
    "sha": "918a18da14a8bf8cb12274e1ea49a59a4ef2b54c",
    "filename": "termd-build-driver/src/main/java/org/jboss/pnc/termdbuilddriver/DefaultClientFactory.java",
    "status": "modified",
    "additions": 12,
    "deletions": 3,
    "changes": 15,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/src/main/java/org/jboss/pnc/termdbuilddriver/DefaultClientFactory.java",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/src/main/java/org/jboss/pnc/termdbuilddriver/DefaultClientFactory.java",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/termd-build-driver/src/main/java/org/jboss/pnc/termdbuilddriver/DefaultClientFactory.java?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -19,7 +19,7 @@\n \n import org.jboss.pnc.buildagent.api.ResponseMode;\n import org.jboss.pnc.buildagent.api.TaskStatusUpdateEvent;\n-import org.jboss.pnc.buildagent.api.httpinvoke.Request;\n+import org.jboss.pnc.api.dto.Request;\n import org.jboss.pnc.buildagent.api.httpinvoke.RetryConfig;\n import org.jboss.pnc.buildagent.client.BuildAgentClient;\n import org.jboss.pnc.buildagent.client.BuildAgentClientException;\n@@ -40,11 +40,15 @@\n import javax.inject.Inject;\n import java.io.IOException;\n import java.net.MalformedURLException;\n+import java.net.URISyntaxException;\n import java.net.URL;\n+import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.Set;\n import java.util.concurrent.TimeoutException;\n import java.util.function.Consumer;\n+import java.util.stream.Collectors;\n \n /**\n  * @author <a href=\"mailto:matejonnet@gmail.com\">Matej Lazar</a>\n@@ -104,18 +108,23 @@ public BuildAgentClient createHttpBuildAgentClient(\n             String executionId,\n             Map<String, String> callbackHeaders) throws BuildAgentClientException {\n \n+        List<Request.Header> headers = callbackHeaders.entrySet()\n+                .stream()\n+                .map(e -> new Request.Header(e.getKey(), e.getValue()))\n+                .collect(Collectors.toList());\n+\n         HttpClientConfiguration configuration = null;\n         try {\n             URL callbackUrl = new URL(\n                     StringUtils.stripEndingSlash(pncBaseUrl) + \"/build-execution/\" + executionId + \"/completed\");\n-            Request callback = new Request(\"POST\", callbackUrl, callbackHeaders);\n+            Request callback = new Request(Request.Method.POST, callbackUrl.toURI(), headers);\n             configuration = HttpClientConfiguration.newBuilder()\n                     .termBaseUrl(terminalUrl)\n                     .callback(callback)\n                     .livenessResponseTimeout(30000L)\n                     .retryConfig(retryConfig)\n                     .build();\n-        } catch (MalformedURLException e) {\n+        } catch (MalformedURLException | URISyntaxException e) {\n             new BuildAgentClientException(\"Invalid callback URL.\", e);\n         }\n         return new BuildAgentHttpClient(httpClient, configuration);"
  },
  {
    "sha": "69c1b6a438b14ddd010863da178d07ee204b26c2",
    "filename": "termd-build-driver/src/main/java/org/jboss/pnc/termdbuilddriver/transfer/ClientFileTransfer.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/src/main/java/org/jboss/pnc/termdbuilddriver/transfer/ClientFileTransfer.java",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/src/main/java/org/jboss/pnc/termdbuilddriver/transfer/ClientFileTransfer.java",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/termd-build-driver/src/main/java/org/jboss/pnc/termdbuilddriver/transfer/ClientFileTransfer.java?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -55,8 +55,8 @@ public StringBuffer downloadFileToStringBuilder(StringBuffer logsAggregate, Stri\n         try {\n             logger.debug(\"Downloading file to String Buffer from {}\", path);\n \n-            CompletableFuture<HttpClient.Response> responseFuture = new CompletableFuture<>();\n-            buildAgentClient.downloadFile(Paths.get(path), responseFuture, maxDownloadSize);\n+            CompletableFuture<HttpClient.Response> responseFuture = buildAgentClient\n+                    .downloadFile(Paths.get(path), maxDownloadSize);\n \n             HttpClient.Response response = responseFuture.get(readTimeout, TimeUnit.MILLISECONDS);\n \n@@ -86,9 +86,8 @@ public boolean isFullyDownloaded() {\n     @Override\n     public void uploadScript(String script, Path remoteFilePath) throws TransferException {\n         logger.debug(\"Uploading build script to remote path {}, build script {}\", remoteFilePath, script);\n-        CompletableFuture<HttpClient.Response> responseFuture = new CompletableFuture<>();\n-        buildAgentClient\n-                .uploadFile(ByteBuffer.wrap(script.getBytes(StandardCharsets.UTF_8)), remoteFilePath, responseFuture);\n+        CompletableFuture<HttpClient.Response> responseFuture = buildAgentClient\n+                .uploadFile(ByteBuffer.wrap(script.getBytes(StandardCharsets.UTF_8)), remoteFilePath);\n         try {\n             HttpClient.Response response = responseFuture.get(readTimeout, TimeUnit.MILLISECONDS);\n             if (response.getCode() != 200) {"
  },
  {
    "sha": "8762677e6c062f62b0665e824d48cbcb90be0422",
    "filename": "termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/ClientMockFactory.java",
    "status": "modified",
    "additions": 23,
    "deletions": 13,
    "changes": 36,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/ClientMockFactory.java",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/ClientMockFactory.java",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/ClientMockFactory.java?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -29,6 +29,7 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n import java.util.concurrent.CompletableFuture;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.TimeoutException;\n@@ -83,41 +84,50 @@ public void execute(Object command) throws BuildAgentClientException {\n             executedCommands.add(command);\n         }\n \n+        @Override\n+        public CompletableFuture<HttpClient.Response> uploadFile(ByteBuffer buffer, Path remoteFilePath) {\n+            return CompletableFuture.completedFuture(new HttpClient.Response(200, new StringResult(true, \"\")));\n+        }\n+\n         @Override\n         public void execute(Object command, long responseTimeout, TimeUnit unit) throws BuildAgentClientException {\n             executedCommands.add(command);\n         }\n \n-        @Override\n-        public void uploadFile(\n-                ByteBuffer buffer,\n-                Path remoteFilePath,\n-                CompletableFuture<HttpClient.Response> responseFuture) {\n-            responseFuture.complete(new HttpClient.Response(200, new StringResult(true, \"\")));\n+        public CompletableFuture<String> executeAsync(Object command) {\n+            executedCommands.add(command);\n+            return CompletableFuture.completedFuture(Integer.toString(executedCommands.size()));\n         }\n \n         @Override\n-        public void downloadFile(Path remoteFilePath, CompletableFuture<HttpClient.Response> responseFuture) {\n-            responseFuture.complete(new HttpClient.Response(200, new StringResult(true, \"Mock log.\")));\n+        public CompletableFuture<HttpClient.Response> downloadFile(Path remoteFilePath) {\n+            return CompletableFuture.completedFuture(new HttpClient.Response(200, new StringResult(true, \"Mock log.\")));\n         }\n \n         @Override\n-        public void downloadFile(\n-                Path remoteFilePath,\n-                CompletableFuture<HttpClient.Response> responseFuture,\n-                long maxDownloadSize) {\n-            responseFuture.complete(new HttpClient.Response(200, new StringResult(true, \"Mock log.\")));\n+        public CompletableFuture<HttpClient.Response> downloadFile(Path remoteFilePath, long maxDownloadSize) {\n+            return CompletableFuture.completedFuture(new HttpClient.Response(200, new StringResult(true, \"Mock log.\")));\n         }\n \n         @Override\n         public void cancel() throws BuildAgentClientException {\n         }\n \n+        @Override\n+        public CompletableFuture<HttpClient.Response> cancel(String s) {\n+            return null;\n+        }\n+\n         @Override\n         public String getSessionId() {\n             return null;\n         }\n \n+        @Override\n+        public CompletableFuture<Set<String>> getRunningProcesses() {\n+            return null;\n+        }\n+\n         @Override\n         public boolean isServerAlive() {\n             return serverAlive;"
  },
  {
    "sha": "d8a04647b3a508f15271c6ab23e4892535bef203",
    "filename": "termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/LivenessProbeTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 5,
    "changes": 6,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/LivenessProbeTest.java",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/LivenessProbeTest.java",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/LivenessProbeTest.java?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -17,8 +17,6 @@\n  */\n package org.jboss.pnc.termdbuilddriver;\n \n-import org.jboss.pnc.buildagent.client.BuildAgentClientException;\n-import org.jboss.pnc.buildagent.server.BuildAgentException;\n import org.jboss.pnc.common.json.moduleconfig.SystemConfig;\n import org.jboss.pnc.common.json.moduleconfig.TermdBuildDriverModuleConfig;\n import org.jboss.pnc.spi.builddriver.CompletedBuild;\n@@ -33,7 +31,6 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.io.IOException;\n import java.nio.file.Paths;\n import java.util.concurrent.ArrayBlockingQueue;\n import java.util.concurrent.BlockingQueue;\n@@ -55,8 +52,7 @@\n     SystemConfig systemConfig = mock(SystemConfig.class);\n \n     @Test\n-    public void shouldFailTheBuildWhenAgentIsNotResponding() throws IOException, BuildAgentException,\n-            InterruptedException, BuildAgentClientException, BuildDriverException {\n+    public void shouldFailTheBuildWhenAgentIsNotResponding() throws InterruptedException, BuildDriverException {\n \n         TermdBuildDriverModuleConfig buildDriverModuleConfig = mock(TermdBuildDriverModuleConfig.class);\n         doReturn(200L).when(buildDriverModuleConfig).getLivenessProbeFrequencyMillis();"
  },
  {
    "sha": "29268f93c3c865bd83c3061f44e7cd9e65e1c704",
    "filename": "termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/TermdServer.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/project-ncl/pnc/blob/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/TermdServer.java",
    "raw_url": "https://github.com/project-ncl/pnc/raw/db77913b32f54b3baa78b130122f684ff05a49fd/termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/TermdServer.java",
    "contents_url": "https://api.github.com/repos/project-ncl/pnc/contents/termd-build-driver/src/test/java/org/jboss/pnc/termdbuilddriver/TermdServer.java?ref=db77913b32f54b3baa78b130122f684ff05a49fd",
    "patch": "@@ -19,7 +19,7 @@\n package org.jboss.pnc.termdbuilddriver;\n \n import org.jboss.pnc.buildagent.common.RandomUtils;\n-import org.jboss.pnc.buildagent.server.BuildAgentException;\n+import org.jboss.pnc.buildagent.common.BuildAgentException;\n import org.jboss.pnc.buildagent.server.BuildAgentServer;\n import org.jboss.pnc.buildagent.server.IoLoggerName;\n import org.jboss.pnc.buildagent.server.Options;"
  }
]
