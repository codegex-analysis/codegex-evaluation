[
  {
    "sha": "2243ab4f8ef69cef0f9612d28bddd1f8b8b08b7f",
    "filename": "manipulation/src/functTest/resources/elasticsearch/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy",
    "status": "modified",
    "additions": 0,
    "deletions": 23,
    "changes": 23,
    "blob_url": "https://github.com/project-ncl/gradle-manipulator/blob/e6819bbbe35b6563891b93b7abdc61558c676d4a/manipulation/src/functTest/resources/elasticsearch/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy",
    "raw_url": "https://github.com/project-ncl/gradle-manipulator/raw/e6819bbbe35b6563891b93b7abdc61558c676d4a/manipulation/src/functTest/resources/elasticsearch/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy",
    "contents_url": "https://api.github.com/repos/project-ncl/gradle-manipulator/contents/manipulation/src/functTest/resources/elasticsearch/buildSrc/src/main/groovy/org/elasticsearch/gradle/BuildPlugin.groovy?ref=e6819bbbe35b6563891b93b7abdc61558c676d4a",
    "patch": "@@ -249,13 +249,6 @@ class BuildPlugin implements Plugin<Project> {\n             if (System.getProperty(\"idea.executable\") != null || System.getProperty(\"eclipse.launcher\") != null) {\n                 // IntelliJ does not set JAVA_HOME, so we use the JDK that Gradle was run with\n                 return Jvm.current().javaHome\n-            } else {\n-                throw new GradleException(\n-                        \" \" + System.getProperties().toString() + \" \" +\n-                        \"JAVA_HOME must be set to build Elasticsearch. \" +\n-                                \"Note that if the variable was just set you might have to run `./gradlew --stop` for \" +\n-                                \"it to be picked up. See https://github.com/elastic/elasticsearch/issues/31399 details.\"\n-                )\n             }\n         }\n         return compilerJavaHome\n@@ -747,22 +740,6 @@ class BuildPlugin implements Plugin<Project> {\n                     jarTask.manifest.getAttributes().clear()\n                 }\n             }\n-            // add license/notice files\n-            project.afterEvaluate {\n-                if (project.licenseFile == null || project.noticeFile == null) {\n-                    throw new GradleException(\"Must specify license and notice file for project ${project.path}\")\n-                }\n-                jarTask.metaInf {\n-                    from(project.licenseFile.parent) {\n-                        include project.licenseFile.name\n-                        rename { 'LICENSE.txt' }\n-                    }\n-                    from(project.noticeFile.parent) {\n-                        include project.noticeFile.name\n-                        rename { 'NOTICE.txt' }\n-                    }\n-                }\n-            }\n         }\n         project.plugins.withType(ShadowPlugin).whenPluginAdded {\n             /*"
  }
]
