[
  {
    "sha": "1416f9fd2c36d497822ec742b6ecd70925edd137",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/pom.xml",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/pom.xml",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/pom.xml?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -36,5 +36,11 @@\n             <artifactId>gson</artifactId>\n             <version>2.6.2</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter</artifactId>\n+            <version>RELEASE</version>\n+            <scope>test</scope>\n+        </dependency>\n     </dependencies>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "c7c04b0e3d972b596d354fafef10ebef2b465114",
    "filename": "src/main/java/ru/sbt/mipt/oop/Application.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/Application.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/Application.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Application.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -19,9 +19,9 @@ public static void main(String... args) throws IOException {\n         EventGenerator generator = new RandomEventGenerator();\n \n         Collection<EventHandler> eventHandlers = new ArrayList<>();\n-        eventHandlers.add(new DoorEventHandler(smartHome, logger));\n+        eventHandlers.add(new DoorEventHandler(smartHome));\n         eventHandlers.add(new HallDoorEventHandler(smartHome, sender));\n-        eventHandlers.add(new LightEventHandler(smartHome, logger));\n+        eventHandlers.add(new LightEventHandler(smartHome));\n \n         EventLoop loop = new EventLoop(generator, eventHandlers);\n         loop.runLoop();"
  },
  {
    "sha": "b6ef64bacc372db82de5ba90e6b92d7944b0d51a",
    "filename": "src/main/java/ru/sbt/mipt/oop/ConsoleCommandSender.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/ConsoleCommandSender.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/ConsoleCommandSender.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/ConsoleCommandSender.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -4,6 +4,6 @@\n \n     @Override\n     public void sendCommand(SensorCommand command) {\n-        System.out.println(\"Pretent we're sending command \" + command);\n+        System.out.println(\"Pretend we're sending command \" + command);\n     }\n }"
  },
  {
    "sha": "3c2a40b7a3bba5062193858cc343bf6019137133",
    "filename": "src/main/java/ru/sbt/mipt/oop/EventLoop.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/EventLoop.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/EventLoop.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/EventLoop.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -3,7 +3,6 @@\n import ru.sbt.mipt.oop.events.Event;\n import ru.sbt.mipt.oop.handlers.EventHandler;\n \n-import java.io.IOException;\n import java.util.Collection;\n \n public class EventLoop {\n@@ -15,14 +14,14 @@ public EventLoop(EventGenerator generator, Collection<EventHandler> handlers) {\n         this.generator = generator;\n     }\n \n-    public void runLoop() throws IOException {\n-        Event event = this.generator.generate();\n+    public void runLoop() {\n+        Event event = generator.generate();\n \n         while (event != null) {\n             for (EventHandler handler : handlers) {\n                 handler.handleEvent(event);\n             }\n-            event = this.generator.generate();\n+            event = generator.generate();\n         }\n     }\n }"
  },
  {
    "sha": "23c65c870b3152933b53dcbe0c1c4bc4920b92c8",
    "filename": "src/main/java/ru/sbt/mipt/oop/FixedEventGenerator.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/FixedEventGenerator.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/FixedEventGenerator.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/FixedEventGenerator.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -0,0 +1,24 @@\n+package ru.sbt.mipt.oop;\n+\n+import ru.sbt.mipt.oop.events.Event;\n+\n+import java.util.Collection;\n+import java.util.Iterator;\n+\n+public class FixedEventGenerator implements EventGenerator {\n+    private final Iterator<Event> iter;\n+    private final Collection<Event> events;\n+\n+    public FixedEventGenerator(Collection<Event> events) {\n+        this.events = events;\n+        this.iter = this.events.iterator();\n+    }\n+\n+    @Override\n+    public Event generate() {\n+        if (iter.hasNext()) {\n+            return iter.next();\n+        }\n+        return null;\n+    }\n+}"
  },
  {
    "sha": "41eee059cd5200b4a111ea97236310a5d764f36d",
    "filename": "src/main/java/ru/sbt/mipt/oop/Logger.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/Logger.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/Logger.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Logger.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -1,7 +1,5 @@\n package ru.sbt.mipt.oop;\n \n-import java.io.IOException;\n-\n public interface Logger {\n-    void log(String msg) throws IOException;\n+    void log(String msg);\n }"
  },
  {
    "sha": "1e02887e9464282eaff845cf3aebeb070eee934a",
    "filename": "src/main/java/ru/sbt/mipt/oop/RewriteFileLogger.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/RewriteFileLogger.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/RewriteFileLogger.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/RewriteFileLogger.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -14,9 +14,11 @@ public RewriteFileLogger(String filename) {\n     }\n \n     @Override\n-    public void log(String msg) throws IOException {\n+    public void log(String msg) {\n         try (BufferedWriter writer = Files.newBufferedWriter(path)) {\n             writer.write(msg);\n+        } catch (IOException e) {\n+            System.err.println(e.toString());;\n         }\n     }\n }"
  },
  {
    "sha": "85b15aff238c67e7d6d1c6a3c4adc9051b837634",
    "filename": "src/main/java/ru/sbt/mipt/oop/SmartHome.java",
    "status": "modified",
    "additions": 13,
    "deletions": 2,
    "changes": 15,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/SmartHome.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/SmartHome.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/SmartHome.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -3,9 +3,11 @@\n import java.util.ArrayList;\n import java.util.Collection;\n \n+import ru.sbt.mipt.oop.action.Action;\n+import ru.sbt.mipt.oop.action.Actionable;\n import ru.sbt.mipt.oop.equipment.*;\n \n-public class SmartHome {\n+public class SmartHome implements Actionable {\n     Collection<Room> rooms;\n \n     public SmartHome() {\n@@ -23,4 +25,13 @@ public void addRoom(Room room) {\n     public Collection<Room> getRooms() {\n         return rooms;\n     }\n-}\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.run(this);\n+\n+        for (Room room : rooms) {\n+            room.execute(action);\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "6731ac27adfa702f97405700cc95ab0825d38a0b",
    "filename": "src/main/java/ru/sbt/mipt/oop/action/Action.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/action/Action.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/action/Action.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/action/Action.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop.action;\n+\n+public interface Action {\n+    void run(Object object);\n+}"
  },
  {
    "sha": "ecd6e7ac818ac7f1db75b99daa65edeb4f7e3531",
    "filename": "src/main/java/ru/sbt/mipt/oop/action/Actionable.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/action/Actionable.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/action/Actionable.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/action/Actionable.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.sbt.mipt.oop.action;\n+\n+public interface Actionable {\n+    void execute(Action action);\n+}"
  },
  {
    "sha": "55d7ac867432e38689d1255d00ac7db369484c46",
    "filename": "src/main/java/ru/sbt/mipt/oop/equipment/Door.java",
    "status": "modified",
    "additions": 13,
    "deletions": 1,
    "changes": 14,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/equipment/Door.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/equipment/Door.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/equipment/Door.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -1,6 +1,9 @@\n package ru.sbt.mipt.oop.equipment;\n \n-public class Door {\n+import ru.sbt.mipt.oop.action.Action;\n+import ru.sbt.mipt.oop.action.Actionable;\n+\n+public class Door implements Actionable {\n     private final String id;\n     private boolean isOpen;\n \n@@ -16,4 +19,13 @@ public String getId() {\n     public void setOpen(boolean open) {\n         isOpen = open;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.run(this);\n+    }\n+\n+    public boolean isOpen() {\n+        return isOpen;\n+    }\n }"
  },
  {
    "sha": "4b9a1c77249f222e5356d730628e8a9829b6c2d8",
    "filename": "src/main/java/ru/sbt/mipt/oop/equipment/Light.java",
    "status": "modified",
    "additions": 9,
    "deletions": 1,
    "changes": 10,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/equipment/Light.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/equipment/Light.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/equipment/Light.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -1,6 +1,9 @@\n package ru.sbt.mipt.oop.equipment;\n \n-public class Light {\n+import ru.sbt.mipt.oop.action.Action;\n+import ru.sbt.mipt.oop.action.Actionable;\n+\n+public class Light implements Actionable {\n     private boolean isOn;\n     private final String id;\n \n@@ -20,4 +23,9 @@ public String getId() {\n     public void setOn(boolean on) {\n         isOn = on;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.run(this);\n+    }\n }"
  },
  {
    "sha": "5759cb8ef45113978b38787380bdabdf3b0892e1",
    "filename": "src/main/java/ru/sbt/mipt/oop/equipment/Room.java",
    "status": "modified",
    "additions": 38,
    "deletions": 1,
    "changes": 39,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/equipment/Room.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/equipment/Room.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/equipment/Room.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -1,8 +1,11 @@\n package ru.sbt.mipt.oop.equipment;\n \n+import ru.sbt.mipt.oop.action.Action;\n+import ru.sbt.mipt.oop.action.Actionable;\n+\n import java.util.Collection;\n \n-public class Room {\n+public class Room implements Actionable {\n     private final Collection<Light> lights;\n     private final Collection<Door> doors;\n     private final String name;\n@@ -24,4 +27,38 @@ public Room(Collection<Light> lights, Collection<Door> doors, String name) {\n     public String getName() {\n         return name;\n     }\n+\n+    public void execute(Action action) {\n+        action.run(this);\n+\n+        for (Light light : lights) {\n+            light.execute(action);\n+        }\n+\n+        for (Door door : doors) {\n+            door.execute(action);\n+        }\n+    }\n+\n+    public boolean hasDoorWithId(String id) {\n+        return getDoorWithId(id) != null;\n+    }\n+\n+    public Door getDoorWithId(String id) {\n+        for (Door door : doors) {\n+            if (door.getId().equals(id)) {\n+                return door;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    public Light getLightWithId(String id) {\n+        for (Light light : lights) {\n+            if (light.getId().equals(id)) {\n+                return light;\n+            }\n+        }\n+        return null;\n+    }\n }"
  },
  {
    "sha": "d525af5baff34bb4e4421727508821a5a6a6c13b",
    "filename": "src/main/java/ru/sbt/mipt/oop/handlers/DoorEventHandler.java",
    "status": "modified",
    "additions": 11,
    "deletions": 31,
    "changes": 42,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/handlers/DoorEventHandler.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/handlers/DoorEventHandler.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/handlers/DoorEventHandler.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -1,49 +1,29 @@\n package ru.sbt.mipt.oop.handlers;\n \n import ru.sbt.mipt.oop.*;\n+import ru.sbt.mipt.oop.action.Action;\n import ru.sbt.mipt.oop.equipment.Door;\n-import ru.sbt.mipt.oop.equipment.Room;\n import ru.sbt.mipt.oop.events.Event;\n \n-import java.io.IOException;\n-\n public class DoorEventHandler implements EventHandler {\n     private final SmartHome smartHome;\n-    private final Logger logger;\n \n-    public DoorEventHandler(SmartHome smartHome, Logger logger) {\n+    public DoorEventHandler(SmartHome smartHome) {\n         this.smartHome = smartHome;\n-        this.logger = logger;\n     }\n \n     @Override\n     public void handleEvent(Event event) {\n-        if (event.getEventType() == SensorEventType.DOOR_OPEN) {\n-            for (Room room : smartHome.getRooms()) {\n-                for (Door door : room.getDoors()) {\n-                    if (door.getId().equals(event.getObjectId())) {\n-                        door.setOpen(true);\n-                        try {\n-                            logger.log(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was opened.\");\n-                        } catch (IOException e) {\n-                            System.err.println(e.toString());\n-                        }\n-                    }\n-                }\n-            }\n-        } else if (event.getEventType() == SensorEventType.DOOR_CLOSED) {\n-            for (Room room : smartHome.getRooms()) {\n-                for (Door door : room.getDoors()) {\n-                    if (door.getId().equals(event.getObjectId())) {\n-                        door.setOpen(false);\n-                        try {\n-                            logger.log(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was closed.\");\n-                        } catch (IOException e) {\n-                            System.err.println(e.toString());\n-                        }\n-                    }\n+        if (event.getEventType() == SensorEventType.DOOR_OPEN || event.getEventType() == SensorEventType.DOOR_CLOSED) {\n+            boolean isDoorOpen = event.getEventType() == SensorEventType.DOOR_OPEN;\n+            String objId = event.getObjectId();\n+\n+            Action updateDoorState = (object) -> {\n+                if (object instanceof Door && ((Door) object).getId().equals(objId)) {\n+                    ((Door)object).setOpen(isDoorOpen);\n                 }\n-            }\n+            };\n+            smartHome.execute(updateDoorState);\n         }\n     }\n }"
  },
  {
    "sha": "1b068577d62afdd59cf1b5efd81137a88c26c49f",
    "filename": "src/main/java/ru/sbt/mipt/oop/handlers/HallDoorEventHandler.java",
    "status": "modified",
    "additions": 15,
    "deletions": 16,
    "changes": 31,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/handlers/HallDoorEventHandler.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/handlers/HallDoorEventHandler.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/handlers/HallDoorEventHandler.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -1,7 +1,7 @@\n package ru.sbt.mipt.oop.handlers;\n \n import ru.sbt.mipt.oop.*;\n-import ru.sbt.mipt.oop.equipment.Door;\n+import ru.sbt.mipt.oop.action.Action;\n import ru.sbt.mipt.oop.equipment.Light;\n import ru.sbt.mipt.oop.equipment.Room;\n import ru.sbt.mipt.oop.events.Event;\n@@ -18,23 +18,22 @@ public HallDoorEventHandler(SmartHome smartHome, CommandSender sender) {\n     @Override\n     public void handleEvent(Event event) {\n         if (event.getEventType() == SensorEventType.DOOR_CLOSED) {\n-            for (Room room : smartHome.getRooms()) {\n-                for (Door door : room.getDoors()) {\n-                    if (door.getId().equals(event.getObjectId())) {\n-                        // если мы получили событие о закрытие двери в холле - это значит, что была закрыта входная дверь.\n-                        // в этом случае мы хотим автоматически выключить свет во всем доме (это же умный дом!)\n-                        if (room.getName().equals(\"hall\")) {\n-                            for (Room homeRoom : smartHome.getRooms()) {\n-                                for (Light light : homeRoom.getLights()) {\n-                                    light.setOn(false);\n-                                    SensorCommand command = new LightOffCommand(light.getId());\n-                                    sender.sendCommand(command);\n-                                }\n-                            }\n-                        }\n+            Action turnOffAllLight = (object) -> {\n+                if (object instanceof Light) {\n+                    ((Light)object).setOn(false);\n+                    SensorCommand command = new LightOffCommand(((Light)object).getId());\n+                    sender.sendCommand(command);\n+                }\n+            };\n+            Action checkIfHallDoor = (object) -> {\n+                if (object instanceof Room && ((Room)object).getName().equals(\"hall\")) {\n+                    if (((Room)object).hasDoorWithId(event.getObjectId())) {\n+                        smartHome.execute(turnOffAllLight);\n                     }\n                 }\n-            }\n+            };\n+\n+            smartHome.execute(checkIfHallDoor);\n         }\n     }\n }"
  },
  {
    "sha": "2b5976a87205840df39b8be03aff618e411c9a8b",
    "filename": "src/main/java/ru/sbt/mipt/oop/handlers/LightEventHandler.java",
    "status": "modified",
    "additions": 10,
    "deletions": 32,
    "changes": 42,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/handlers/LightEventHandler.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/main/java/ru/sbt/mipt/oop/handlers/LightEventHandler.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/handlers/LightEventHandler.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -1,52 +1,30 @@\n package ru.sbt.mipt.oop.handlers;\n \n-import ru.sbt.mipt.oop.Logger;\n import ru.sbt.mipt.oop.SensorEventType;\n import ru.sbt.mipt.oop.SmartHome;\n+import ru.sbt.mipt.oop.action.Action;\n import ru.sbt.mipt.oop.equipment.Light;\n-import ru.sbt.mipt.oop.equipment.Room;\n import ru.sbt.mipt.oop.events.Event;\n \n-import java.io.IOException;\n-\n public class LightEventHandler implements EventHandler {\n     private final SmartHome smartHome;\n-    private final Logger logger;\n \n-    public LightEventHandler(SmartHome smartHome, Logger logger) {\n+    public LightEventHandler(SmartHome smartHome) {\n         this.smartHome = smartHome;\n-        this.logger = logger;\n     }\n \n     @Override\n     public void handleEvent(Event event) {\n-        if (event.getEventType() == SensorEventType.LIGHT_ON) {\n-            for (Room room : smartHome.getRooms()) {\n-                for (Light light : room.getLights()) {\n-                    if (light.getId().equals(event.getObjectId())) {\n-                        light.setOn(true);\n-                        try {\n-                            logger.log(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned on.\");\n-                        } catch (IOException e) {\n-                            System.err.println(e.toString());\n-                        }\n-                    }\n-                }\n-            }\n-        } else if (event.getEventType() == SensorEventType.LIGHT_OFF) {\n-            for (Room room : smartHome.getRooms()) {\n-                for (Light light : room.getLights()) {\n-                    if (light.getId().equals(event.getObjectId())) {\n-                        light.setOn(false);\n-                        try {\n-                            logger.log(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned off.\");\n-                        } catch (IOException e) {\n-                            System.err.println(e.toString());\n-                        }\n+        if (event.getEventType() == SensorEventType.LIGHT_OFF || event.getEventType() == SensorEventType.LIGHT_ON) {\n+            boolean isLightOn = event.getEventType() == SensorEventType.LIGHT_ON;\n+            String objId = event.getObjectId();\n \n-                    }\n+            Action updateLightState = (object) -> {\n+                if (object instanceof Light && ((Light) object).getId().equals(objId)) {\n+                    ((Light)object).setOn(isLightOn);\n                 }\n-            }\n+            };\n+            smartHome.execute(updateLightState);\n         }\n     }\n }"
  },
  {
    "sha": "f62793abce53e5a8bd2c73304b69b45b7ee1ada2",
    "filename": "src/test/java/EventHandlingTest.java",
    "status": "added",
    "additions": 148,
    "deletions": 0,
    "changes": 148,
    "blob_url": "https://github.com/yaskev/smart-home-2021/blob/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/test/java/EventHandlingTest.java",
    "raw_url": "https://github.com/yaskev/smart-home-2021/raw/c3b2a2829e0e54b8427f03f1c60b11942f76945e/src/test/java/EventHandlingTest.java",
    "contents_url": "https://api.github.com/repos/yaskev/smart-home-2021/contents/src/test/java/EventHandlingTest.java?ref=c3b2a2829e0e54b8427f03f1c60b11942f76945e",
    "patch": "@@ -0,0 +1,148 @@\n+import org.junit.jupiter.api.Test;\n+import ru.sbt.mipt.oop.*;\n+import ru.sbt.mipt.oop.equipment.Door;\n+import ru.sbt.mipt.oop.equipment.Light;\n+import ru.sbt.mipt.oop.equipment.Room;\n+import ru.sbt.mipt.oop.events.DoorClosedEvent;\n+import ru.sbt.mipt.oop.events.DoorOpenedEvent;\n+import ru.sbt.mipt.oop.events.LightOffEvent;\n+import ru.sbt.mipt.oop.events.LightOnEvent;\n+import ru.sbt.mipt.oop.handlers.*;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+\n+\n+public class EventHandlingTest {\n+    private final SmartHome smartHome = new JsonHomeReader(\"smart-home-1.js\").read();\n+    private final CommandSender sender = new ConsoleCommandSender();\n+    Collection<EventHandler> eventHandlers = new ArrayList<>();\n+\n+    void addHandlers() {\n+        eventHandlers.add(new DoorEventHandler(smartHome));\n+        eventHandlers.add(new HallDoorEventHandler(smartHome, sender));\n+        eventHandlers.add(new LightEventHandler(smartHome));\n+    }\n+\n+    @Test\n+    void testLightOn() {\n+        EventGenerator generator = new FixedEventGenerator(Arrays.asList(new LightOnEvent(\"1\"),\n+                                                                        new LightOnEvent(\"3\")));\n+        addHandlers();\n+\n+        EventLoop loop = new EventLoop(generator, eventHandlers);\n+        loop.runLoop();\n+        for (Room room : smartHome.getRooms()) {\n+            Light light = room.getLightWithId(\"1\");\n+            if (light != null) {\n+                assertTrue(light.isOn());\n+            }\n+            light = room.getLightWithId(\"3\");\n+            if (light != null) {\n+                assertTrue(light.isOn());\n+            }\n+        }\n+    }\n+\n+    @Test\n+    void testLightOff() {\n+        EventGenerator generator = new FixedEventGenerator(Arrays.asList(new LightOffEvent(\"4\"),\n+                                                                        new LightOffEvent(\"2\")));\n+        addHandlers();\n+\n+        EventLoop loop = new EventLoop(generator, eventHandlers);\n+        loop.runLoop();\n+        for (Room room : smartHome.getRooms()) {\n+            Light light = room.getLightWithId(\"2\");\n+            if (light != null) {\n+                assertFalse(light.isOn());\n+            }\n+            light = room.getLightWithId(\"4\");\n+            if (light != null) {\n+                assertFalse(light.isOn());\n+            }\n+        }\n+    }\n+\n+    @Test\n+    void testDoorOpened() {\n+        EventGenerator generator = new FixedEventGenerator(Arrays.asList(new DoorOpenedEvent(\"1\"),\n+                                                                        new DoorOpenedEvent(\"3\")));\n+        addHandlers();\n+\n+        EventLoop loop = new EventLoop(generator, eventHandlers);\n+        loop.runLoop();\n+        for (Room room : smartHome.getRooms()) {\n+            Door door = room.getDoorWithId(\"1\");\n+            if (door != null) {\n+                assertTrue(door.isOpen());\n+            }\n+            door = room.getDoorWithId(\"3\");\n+            if (door != null) {\n+                assertTrue(door.isOpen());\n+            }\n+        }\n+    }\n+\n+    @Test\n+    void testDoorClosed() {\n+        EventGenerator generator = new FixedEventGenerator(Arrays.asList(new DoorClosedEvent(\"1\"),\n+                                                                        new DoorClosedEvent(\"3\")));\n+        addHandlers();\n+\n+        EventLoop loop = new EventLoop(generator, eventHandlers);\n+        loop.runLoop();\n+        for (Room room : smartHome.getRooms()) {\n+            Door door = room.getDoorWithId(\"1\");\n+            if (door != null) {\n+                assertFalse(door.isOpen());\n+            }\n+            door = room.getDoorWithId(\"3\");\n+            if (door != null) {\n+                assertFalse(door.isOpen());\n+            }\n+        }\n+    }\n+\n+    @Test\n+    void testHallDoorClosed() {\n+        EventGenerator generator = new FixedEventGenerator(Collections.singletonList(new DoorClosedEvent(\"4\")));\n+        addHandlers();\n+\n+        EventLoop loop = new EventLoop(generator, eventHandlers);\n+        loop.runLoop();\n+        for (Room room : smartHome.getRooms()) {\n+            Door door = room.getDoorWithId(\"4\");\n+            if (door != null) {\n+                assertFalse(door.isOpen());\n+            }\n+            for (Light light : room.getLights()) {\n+                assertFalse(light.isOn());\n+            }\n+        }\n+    }\n+\n+    @Test\n+    void testNotHallDoorClosed() {\n+        EventGenerator generator = new FixedEventGenerator(Arrays.asList(new LightOnEvent(\"1\"),\n+                                                                        new DoorClosedEvent(\"3\")));\n+        addHandlers();\n+\n+        EventLoop loop = new EventLoop(generator, eventHandlers);\n+        loop.runLoop();\n+        for (Room room : smartHome.getRooms()) {\n+            Door door = room.getDoorWithId(\"3\");\n+            if (door != null) {\n+                assertFalse(door.isOpen());\n+            }\n+            Light light = room.getLightWithId(\"1\");\n+            if (light != null) {\n+                assertTrue(light.isOn());\n+            }\n+        }\n+    }\n+}"
  }
]
