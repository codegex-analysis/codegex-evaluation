[
  {
    "sha": "01d0f1ab1ac3581c650b1d9cae868a54d9c2cea9",
    "filename": ".DS_Store",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/.DS_Store",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/.DS_Store",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/.DS_Store?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd"
  },
  {
    "sha": "b0ee955a78ee9adb171c4b758fd5d797971f55dd",
    "filename": "out/production/.DS_Store",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/out/production/.DS_Store",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/out/production/.DS_Store",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/out/production/.DS_Store?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd"
  },
  {
    "sha": "00d289b7d76b3f46e68a8c04776eb05954a9f914",
    "filename": "out/production/JankenGame/com/koike/InputOutput.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/out/production/JankenGame/com/koike/InputOutput.class",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/out/production/JankenGame/com/koike/InputOutput.class",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/out/production/JankenGame/com/koike/InputOutput.class?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd"
  },
  {
    "sha": "74978680f5569c228d516d3a2ec25f93a091acdb",
    "filename": "out/production/JankenGame/com/koike/JankenHands.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/out/production/JankenGame/com/koike/JankenHands.class",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/out/production/JankenGame/com/koike/JankenHands.class",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/out/production/JankenGame/com/koike/JankenHands.class?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd"
  },
  {
    "sha": "c05b2d750223d1e22d2d11d5842925050aa38e6a",
    "filename": "out/production/JankenGame/com/koike/Judge.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/out/production/JankenGame/com/koike/Judge.class",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/out/production/JankenGame/com/koike/Judge.class",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/out/production/JankenGame/com/koike/Judge.class?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd"
  },
  {
    "sha": "3780140e48a873d07592afdda19121973dd4fa9c",
    "filename": "out/production/JankenGame/com/koike/janken.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/out/production/JankenGame/com/koike/janken.class",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/out/production/JankenGame/com/koike/janken.class",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/out/production/JankenGame/com/koike/janken.class?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd"
  },
  {
    "sha": "9b558119caef7d7e63589420c9f8319a3db4fe79",
    "filename": "src/.DS_Store",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/.DS_Store",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/.DS_Store",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/src/.DS_Store?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd"
  },
  {
    "sha": "3c1e269d79d857e700966fe56f4daf6e85ceb2e0",
    "filename": "src/com/.DS_Store",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/com/.DS_Store",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/com/.DS_Store",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/src/com/.DS_Store?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd"
  },
  {
    "sha": "784b6d20c98fb631a7f0183013d302c3b885cb9c",
    "filename": "src/com/koike/InputOutput.java",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/com/koike/InputOutput.java",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/com/koike/InputOutput.java",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/src/com/koike/InputOutput.java?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd",
    "patch": "@@ -0,0 +1,73 @@\n+package com.koike;\n+\n+import java.util.Random;\n+import java.util.Scanner;\n+\n+public class InputOutput {\n+\n+\n+    //プレイヤーのジャンケン入力\n+    public JankenHands input() {\n+        int playerHand = -1;\n+\n+        Scanner sc = new Scanner(System.in);\n+\n+        //0-2以外の数値が入力されればnullを返す\n+        System.out.println(\"あなたは何を出す？(0:グー 1:チョキ 2:パー)\");\n+        JankenHands hands;\n+\n+\n+        //文字が入力されていたらエラー\n+        try {\n+            playerHand = sc.nextInt();\n+\n+        } catch (Exception e) {\n+            System.out.println(\"文字が入力されています。0~2で入力してください。\");\n+            hands = null;\n+            return hands;\n+        }\n+\n+\n+        //0~2以外はnullを返す\n+        if (playerHand != 0 && playerHand != 1 && playerHand != 2) {\n+            System.out.println(\"不正な値です。0~2で入力してください。\");\n+            hands = null;\n+            return hands;\n+        }\n+\n+        hands = JankenHands.getInstance(playerHand);\n+\n+        return hands;\n+    }\n+\n+\n+    public JankenHands cpInput() {\n+        Random rd = new Random();\n+        int cpHands = rd.nextInt(2);\n+        JankenHands hands = JankenHands.getInstance(cpHands);\n+        return hands;\n+    }\n+\n+\n+    //判定出力\n+    public void output(int judge, JankenHands p1, JankenHands p2) {\n+\n+        System.out.println(\"あなたが出した手は\" + p1);\n+        System.out.println(\"相手が出した手は\" + p2);\n+\n+        switch (judge) {\n+            case Judge.JUDGE_HUMAN:\n+                System.out.println(\"勝者はあなただぁ！\");\n+                break;\n+            case Judge.JUDGE_COMPUTER:\n+                System.out.println(\"勝者はコンピューターだぁ！\");\n+                break;\n+            case Judge.JUDGE_DRAW:\n+                System.out.println(\"今回は引き分けだっ\");\n+                break;\n+            default:\n+                break;\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "4264fe5a46e6a9720997cd9eaa789ba36b71fd10",
    "filename": "src/com/koike/JankenHands.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/com/koike/JankenHands.java",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/com/koike/JankenHands.java",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/src/com/koike/JankenHands.java?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd",
    "patch": "@@ -0,0 +1,26 @@\n+package com.koike;\n+\n+public enum JankenHands {\n+    グー(0),\n+    チョキ(1),\n+    パー(2);\n+\n+    private final int rawValue;\n+\n+    private JankenHands(int rawValue) {\n+        this.rawValue = rawValue;\n+    }\n+\n+    public static JankenHands getInstance(int value) {\n+        switch (value) {\n+            case 0:\n+                return グー;\n+            case 1:\n+                return チョキ;\n+            case 2:\n+                return パー;\n+            default:\n+                return null;\n+        }\n+    }\n+}"
  },
  {
    "sha": "e6018520b5485e535feae824f5072e2a15111cf7",
    "filename": "src/com/koike/Judge.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/com/koike/Judge.java",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/com/koike/Judge.java",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/src/com/koike/Judge.java?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd",
    "patch": "@@ -0,0 +1,31 @@\n+package com.koike;\n+\n+public class Judge {\n+\n+    public static final int JUDGE_HUMAN = 0;\n+    public static final int JUDGE_COMPUTER = 1;\n+    public static final int JUDGE_DRAW = 2;\n+\n+\n+    public int judge(JankenHands p1, JankenHands p2) {\n+        int i = 100;\n+\n+\n+        if (p1.ordinal() == 0 && p2.ordinal() == 1) {\n+            return JUDGE_HUMAN;\n+        } else if (p1.ordinal() == 1 && p2.ordinal() == 2) {\n+            return JUDGE_HUMAN;\n+        } else if (p1.ordinal() == 2 && p2.ordinal() == 0) {\n+            return JUDGE_HUMAN;\n+        } else if (p2.ordinal() == 0 && p1.ordinal() == 1) {\n+            return JUDGE_COMPUTER;\n+        } else if (p2.ordinal() == 1 && p1.ordinal() == 2) {\n+            return JUDGE_COMPUTER;\n+        } else if (p2.ordinal() == 2 && p1.ordinal() == 0) {\n+            return JUDGE_COMPUTER;\n+        } else if (p1 == p2) {\n+            return JUDGE_DRAW;\n+        }\n+        return i;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "45fe4ccfa827e2a5e0252e51e06f877fa11f5d9d",
    "filename": "src/com/koike/janken.java",
    "status": "modified",
    "additions": 21,
    "deletions": 86,
    "changes": 107,
    "blob_url": "https://github.com/shumpeipei/JankenGame/blob/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/com/koike/janken.java",
    "raw_url": "https://github.com/shumpeipei/JankenGame/raw/0741661fcc3ec3fd0349f9ed80e44781dd2beffd/src/com/koike/janken.java",
    "contents_url": "https://api.github.com/repos/shumpeipei/JankenGame/contents/src/com/koike/janken.java?ref=0741661fcc3ec3fd0349f9ed80e44781dd2beffd",
    "patch": "@@ -1,102 +1,37 @@\n package com.koike;\n \n-import java.util.*;\n+public class Janken {\n \n-public class janken{\n \n+    public static void main(String[] args) {\n \n-    //プレイヤーのジャンケン入力\n-    public static int input(){\n+        InputOutput inOut = new InputOutput();\n+        Judge ju = new Judge();\n \n-        Scanner sc = new Scanner(System.in);\n-        int i=0;\n+        JankenHands cpHands;\n+        JankenHands playerHands;\n \n-        //0-2以外の数値が入力されればエラーを吐く\n-        System.out.println(\"あなたは何を出す？(0:グー 1:チョキ 2:パー)\");\n+        int judge = -1;\n \n-        try {\n-            i = sc.nextInt();\n-        }catch (Exception e){\n-            System.out.println(\"文字が入力されています。0~2で入力してください。\");\n-            System.out.println(\"ゲームを終了します。\");\n-            System.exit(1);//プログラム強制終了\n-        }\n+        playerHands = inOut.input();//プレイヤー入力処理\n+        cpHands = inOut.cpInput();//CP入力処理\n \n-        if(i > 2){\n-            System.out.println(\"0~2で入力してください。\");\n+        if (playerHands == null) {\n             System.out.println(\"ゲームを終了します。\");\n-            System.exit(1);//プログラム強制終了\n-        }\n-        return i;\n-    }\n-\n-    //引き分け判定\n-    public static boolean  draw_judge(int num1, int num2){\n-\n-        boolean bool = true;\n-\n-        if(num1 == num2) {\n-            bool = false;\n+            System.exit(1);\n+            return;\n         }\n-        return bool;\n-    }\n-\n-\n-\n-    //判定処理\n-    public  static String judge(int num1,int num2){\n-        String win = null;\n-\n-        if(num1 == 0 && num2 == 1){\n-            win = \"あなた\";\n-        }else if(num1 ==1 && num2 ==2){\n-            win = \"あなた\";\n-        }else if (num1 ==2 && num2 ==0){\n-            win = \"あなた\";\n-        }else if(num2 == 0 && num1 == 1){\n-            win = \"コンピューター\";\n-        }else if(num2 ==1 && num1 ==2){\n-            win = \"コンピューター\";\n-        }else if (num2 ==2 && num1 ==0){\n-            win = \"コンピューター\";\n-        }\n-        return win;\n-    }\n \n-    public static void output(int p_num, int c_num,boolean bool, String win){\n-        String[] janken_hands = {\"グー\", \"チョキ\", \"パー\"};\n \n-        System.out.println(\"あなたが出した手は\" + janken_hands[p_num]);\n-        System.out.println(\"相手が出した手は\" + janken_hands[c_num]);\n-\n-        if(bool){\n-            System.out.println(\"勝者は\" + win + \"だぁ！\");\n-        }else{\n-            System.out.println(\"今回は引き分けだっ\");\n+        judge = ju.judge(playerHands, cpHands);//勝敗判定\n+        if (judge == 100) {\n+            System.out.println(\"不正な値です。ゲーム終了します\");\n+            System.exit(1);\n+            return;\n         }\n+        inOut.output(judge, playerHands, cpHands);//判定出力\n+        System.exit(0);//プログラム終了\n         return;\n-    }\n-\n-\n-    public static void main(String[] args) {\n-\n-        Scanner sc = new Scanner(System.in);\n-        Random rd = new Random();\n-\n-        int cp_hands = rd.nextInt(2); ;//cpのジャンケン\n-        int player_hands = 0;//自分のジャンケン\n-        String winner =null;\n-        boolean bool = true;\n-\n \n-        player_hands = input();//入力処理\n-\n-        bool = draw_judge(player_hands,cp_hands);//引き分け判定\n-\n-        winner = judge(player_hands,cp_hands);//勝敗判定\n-\n-        output(player_hands,cp_hands,bool,winner);//判定出力\n-\n-\n-        }\n-    }\n\\ No newline at end of file\n+    }\n+}\n\\ No newline at end of file"
  }
]
