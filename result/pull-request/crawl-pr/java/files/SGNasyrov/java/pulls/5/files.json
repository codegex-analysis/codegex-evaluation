[
  {
    "sha": "423df966d3ba198429847e3f9e79e51fc3d38d74",
    "filename": "Apple.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/SGNasyrov/java/blob/f053b70f1b63a7d097963a3b3500176e14d1dee8/Apple.java",
    "raw_url": "https://github.com/SGNasyrov/java/raw/f053b70f1b63a7d097963a3b3500176e14d1dee8/Apple.java",
    "contents_url": "https://api.github.com/repos/SGNasyrov/java/contents/Apple.java?ref=f053b70f1b63a7d097963a3b3500176e14d1dee8",
    "patch": "@@ -0,0 +1,12 @@\n+public class Apple extends Fruit{\n+    private float weight = 1.0f;\n+    private String name = \"Apple\";\n+\n+    public float getWeight() {\n+        return weight;\n+    }\n+\n+    public String getName(){\n+        return name;\n+    }\n+}"
  },
  {
    "sha": "5b175e41c9e3a7c17bd13b301405fe3449093ad6",
    "filename": "Box.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/SGNasyrov/java/blob/f053b70f1b63a7d097963a3b3500176e14d1dee8/Box.java",
    "raw_url": "https://github.com/SGNasyrov/java/raw/f053b70f1b63a7d097963a3b3500176e14d1dee8/Box.java",
    "contents_url": "https://api.github.com/repos/SGNasyrov/java/contents/Box.java?ref=f053b70f1b63a7d097963a3b3500176e14d1dee8",
    "patch": "@@ -0,0 +1,29 @@\n+import java.sql.Array;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class Box <T extends Fruit>{\n+    private ArrayList<T> listOf;\n+    public float weight;\n+\n+    public Box(T... fr){\n+        listOf = new ArrayList<T>(Arrays.asList(fr));\n+    }\n+\n+    public float getWeight(){\n+        return listOf.size()*listOf.get(0).getWeight();\n+    }\n+\n+    void add(T fr) {\n+        listOf.add(fr);\n+    }\n+\n+    public boolean comparator (Box toCompWith){\n+        return Math.abs(this.getWeight() - toCompWith.getWeight()) > 0;\n+    }\n+\n+\n+\n+}\n+"
  },
  {
    "sha": "ed4bcd6b9935e2cc17cd8ff2a6e54664fa54f9dc",
    "filename": "Fruit.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/SGNasyrov/java/blob/f053b70f1b63a7d097963a3b3500176e14d1dee8/Fruit.java",
    "raw_url": "https://github.com/SGNasyrov/java/raw/f053b70f1b63a7d097963a3b3500176e14d1dee8/Fruit.java",
    "contents_url": "https://api.github.com/repos/SGNasyrov/java/contents/Fruit.java?ref=f053b70f1b63a7d097963a3b3500176e14d1dee8",
    "patch": "@@ -0,0 +1,5 @@\n+public abstract class Fruit {\n+    public abstract float getWeight();\n+\n+\n+}"
  },
  {
    "sha": "b64d29e2f262322bc19a9a5eb3e4e0cb1b449fba",
    "filename": "Main.java",
    "status": "added",
    "additions": 70,
    "deletions": 0,
    "changes": 70,
    "blob_url": "https://github.com/SGNasyrov/java/blob/f053b70f1b63a7d097963a3b3500176e14d1dee8/Main.java",
    "raw_url": "https://github.com/SGNasyrov/java/raw/f053b70f1b63a7d097963a3b3500176e14d1dee8/Main.java",
    "contents_url": "https://api.github.com/repos/SGNasyrov/java/contents/Main.java?ref=f053b70f1b63a7d097963a3b3500176e14d1dee8",
    "patch": "@@ -0,0 +1,70 @@\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+public class Main {\n+    public static void main(String[] args) {\n+        String[] linkedTypeArray = new String[]{\"Japan\", \"Beatles\", \"April 12\", \"2021\"};\n+        List<String> arrList = new ArrayList<String>();\n+\n+        System.out.println(\"1. Написать метод, который меняет два элемента массива местами.(массив может быть любого ссылочного типа);\");\n+        System.out.println(\"Изначальный массив:\");\n+        System.out.println(Arrays.toString(linkedTypeArray));\n+        elementReplace(linkedTypeArray, 1, 3);\n+        System.out.println(\"Массив с перемещенными элементами:\");\n+        System.out.println(Arrays.toString(linkedTypeArray));\n+        System.out.println();\n+        System.out.println(\"2. Написать метод, который преобразует массив в ArrayList;\");\n+        Collections.addAll(arrList, linkedTypeArray);\n+        for (String aL : arrList)\n+            System.out.print(aL + \" \");\n+\n+        System.out.println(\"3. Большая задача:\\n\" +\n+                \"a. Есть классы Fruit -> Apple, Orange;(больше фруктов не надо)\\n\" +\n+                \"b. Класс Box в который можно складывать фрукты, коробки условно сортируются по типу фрукта, поэтому в одну коробку нельзя сложить и яблоки, и апельсины;\\n\" +\n+                \"c. Для хранения фруктов внутри коробки можете использовать ArrayList;\\n\" +\n+                \"d. Сделать метод getWeight() который высчитывает вес коробки, зная количество фруктов и вес одного фрукта(вес яблока - 1.0f, апельсина - 1.5f, не важно в каких это единицах);\\n\" +\n+                \"e. Внутри класса коробка сделать метод compare, который позволяет сравнить текущую коробку с той, которую подадут в compare в качестве параметра, true - если их веса равны, false в противном случае(коробки с яблоками мы можем сравнивать с коробками с апельсинами);\\n\" +\n+                \"f. Написать метод, который позволяет пересыпать фрукты из текущей коробки в другую коробку(помним про сортировку фруктов, нельзя яблоки высыпать в коробку с апельсинами), соответственно в текущей коробке фруктов не остается, а в другую перекидываются объекты, которые были в этой коробке;\\n\" +\n+                \"g. Не забываем про метод добавления фрукта в коробку.\");\n+\n+        Orange oranges = new Orange();\n+        Apple apples = new Apple();\n+        Box<Orange> orangeBox = new Box();\n+        Box<Apple> appleBox = new Box();\n+        float oBoxW;\n+        float aBoxW;\n+        for (int i = 0; i < 10; i++) {\n+            orangeBox.add(new Orange());\n+        }\n+\n+        for (int i = 0; i < 10; i++) {\n+            appleBox.add(new Apple());\n+\n+        }\n+\n+        oBoxW = orangeBox.getWeight();\n+        aBoxW = appleBox.getWeight();\n+\n+        System.out.println(\"Коробка апельсинов весит: \" + oBoxW + \" кг\");\n+        System.out.println(\"Коробка яблок весит: \" + aBoxW + \" кг\");\n+\n+        if (orangeBox.comparator(appleBox)) {\n+            System.out.println(\"Коробка апельсинов тяжелее коробки яблок\");\n+        }\n+        else {\n+            System.out.println(\"Коробка яблок тяжелее коробки апельсинов\");\n+        }\n+    }\n+\n+    private static <ER> void elementReplace (ER[] array, int fElement, int sElement){\n+        ER additional = array[fElement];\n+        array[fElement] = array[sElement];\n+        array[sElement] = additional;\n+\n+    }\n+\n+\n+\n+}"
  },
  {
    "sha": "0d1351be2821c45ffc85474f6e4751dee6240da2",
    "filename": "Orange.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/SGNasyrov/java/blob/f053b70f1b63a7d097963a3b3500176e14d1dee8/Orange.java",
    "raw_url": "https://github.com/SGNasyrov/java/raw/f053b70f1b63a7d097963a3b3500176e14d1dee8/Orange.java",
    "contents_url": "https://api.github.com/repos/SGNasyrov/java/contents/Orange.java?ref=f053b70f1b63a7d097963a3b3500176e14d1dee8",
    "patch": "@@ -0,0 +1,12 @@\n+public class Orange extends Fruit {\n+    private float weight = 1.5f;\n+    private String name = \"Orange\";\n+\n+    public float getWeight() {\n+        return weight;\n+    }\n+\n+    public String getName(){\n+        return name;\n+    }\n+}"
  }
]
