[
  {
    "sha": "1a6946087b64b877259cf20e8e853f16fd068cd4",
    "filename": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/BranchBasedBusRef.java",
    "status": "added",
    "additions": 77,
    "deletions": 0,
    "changes": 77,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/BranchBasedBusRef.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/BranchBasedBusRef.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/BranchBasedBusRef.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -0,0 +1,77 @@\n+/**\n+ * Copyright (c) 2021, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import java.util.Optional;\n+\n+/**\n+ * @author Yichen TANG <yichen.tang at rte-france.com>\n+ */\n+public class BranchBasedBusRef implements BusRef {\n+\n+    private final String branchId;\n+\n+    private final String side;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public BranchBasedBusRef(@JsonProperty(\"branchId\") String branchId, @JsonProperty(\"side\") String side) {\n+        this.branchId = branchId;\n+        this.side = side;\n+    }\n+\n+    @Override\n+    public Optional<Bus> resolve(Network network) {\n+        Branch branch = network.getBranch(branchId);\n+        Terminal terminal;\n+        switch (Branch.Side.valueOf(side)) {\n+            case ONE:\n+                terminal = branch.getTerminal1();\n+                break;\n+            case TWO:\n+                terminal = branch.getTerminal2();\n+                break;\n+            default:\n+                throw new AssertionError(\"Unexpected side: \" + side);\n+        }\n+        return Optional.ofNullable(terminal.getBusView().getBus());\n+    }\n+\n+    public String getBranchId() {\n+        return branchId;\n+    }\n+\n+    public String getSide() {\n+        return side;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof BranchBasedBusRef)) {\n+            return false;\n+        }\n+\n+        BranchBasedBusRef that = (BranchBasedBusRef) o;\n+\n+        if (!getBranchId().equals(that.getBranchId())) {\n+            return false;\n+        }\n+        return getSide().equals(that.getSide());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = getBranchId().hashCode();\n+        result = 31 * result + getSide().hashCode();\n+        return result;\n+    }\n+}"
  },
  {
    "sha": "7fc7ff5149c8f3f9a18fc3a395d6436f0120968b",
    "filename": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/BusRef.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/BusRef.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/BusRef.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/BusRef.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -0,0 +1,27 @@\n+/**\n+ * Copyright (c) 2021, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network;\n+\n+import com.fasterxml.jackson.annotation.JsonSubTypes;\n+import com.fasterxml.jackson.annotation.JsonTypeInfo;\n+\n+import java.util.Optional;\n+\n+@JsonSubTypes({\n+        @JsonSubTypes.Type(value = BranchBasedBusRef.class),\n+        @JsonSubTypes.Type(value = IdBasedBusRef.class),\n+        @JsonSubTypes.Type(value = NodeNumberBasedBusRef.class)\n+})\n+@JsonTypeInfo(use = JsonTypeInfo.Id.MINIMAL_CLASS)\n+public interface BusRef {\n+\n+    /**\n+     * @return an empty if not found\n+     * @throws com.powsybl.commons.PowsyblException if underlying implementation not supported\n+     */\n+    Optional<Bus> resolve(Network network);\n+}"
  },
  {
    "sha": "2d28ddbb30a881109962b290b44805b111e1a9e5",
    "filename": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/IdBasedBusRef.java",
    "status": "added",
    "additions": 70,
    "deletions": 0,
    "changes": 70,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/IdBasedBusRef.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/IdBasedBusRef.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/IdBasedBusRef.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -0,0 +1,70 @@\n+/**\n+ * Copyright (c) 2021, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.powsybl.commons.PowsyblException;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ * There would be two types of id:\n+ * 1. id of equipment:\n+ * 2. id of a configured bus itself:\n+ * @author Yichen TANG <yichen.tang at rte-france.com>\n+ */\n+public class IdBasedBusRef implements BusRef {\n+\n+    private final String id;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public IdBasedBusRef(@JsonProperty(\"id\") String id) {\n+        this.id = Objects.requireNonNull(id);\n+    }\n+\n+    @Override\n+    public Optional<Bus> resolve(Network network) {\n+        final Identifiable<?> identifiable = network.getIdentifiable(id);\n+        if (identifiable == null) {\n+            return Optional.empty();\n+        }\n+        if (identifiable instanceof Bus) {\n+            String busId = identifiable.getId();\n+            return Optional.of(network.getBusView().getBus(busId));\n+        } else if (identifiable instanceof Injection) {\n+            final Injection injection = (Injection) identifiable;\n+            return Optional.of(injection.getTerminal().getBusView().getBus());\n+        } else {\n+            throw new PowsyblException(id + \" is not a bus or injection.\");\n+        }\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof IdBasedBusRef)) {\n+            return false;\n+        }\n+\n+        IdBasedBusRef that = (IdBasedBusRef) o;\n+\n+        return getId().equals(that.getId());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return getId().hashCode();\n+    }\n+}"
  },
  {
    "sha": "a4e562ba5a14e585de39874f0078ada8ae10a182",
    "filename": "iidm/iidm-api/src/main/java/com/powsybl/iidm/network/NodeNumberBasedBusRef.java",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/NodeNumberBasedBusRef.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/NodeNumberBasedBusRef.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/iidm/iidm-api/src/main/java/com/powsybl/iidm/network/NodeNumberBasedBusRef.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -0,0 +1,79 @@\n+/**\n+ * Copyright (c) 2021, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.powsybl.commons.PowsyblException;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+/**\n+ * @author Yichen TANG <yichen.tang at rte-france.com>\n+ */\n+public class NodeNumberBasedBusRef implements BusRef {\n+\n+    private final String voltageLevelId;\n+    private final int node;\n+\n+    @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)\n+    public NodeNumberBasedBusRef(@JsonProperty(\"voltageLevelId\") String voltageLevelId, @JsonProperty(\"node\") int node) {\n+        this.voltageLevelId = Objects.requireNonNull(voltageLevelId);\n+        this.node = node;\n+    }\n+\n+    @Override\n+    public Optional<Bus> resolve(Network network) {\n+        final VoltageLevel voltageLevel = network.getVoltageLevel(voltageLevelId);\n+        if (voltageLevel == null) {\n+            return Optional.empty();\n+        }\n+        if (voltageLevel.getNodeBreakerView() != null) {\n+            final Terminal terminal = voltageLevel.getNodeBreakerView().getTerminal(node);\n+            if (terminal == null) {\n+                return Optional.empty();\n+            }\n+            return Optional.of(terminal.getBusView().getBus());\n+        } else {\n+            throw new PowsyblException(\"Underlying topology not supported.\");\n+        }\n+    }\n+\n+    public int getNode() {\n+        return node;\n+    }\n+\n+    public String getVoltageLevelId() {\n+        return voltageLevelId;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof NodeNumberBasedBusRef)) {\n+            return false;\n+        }\n+\n+        NodeNumberBasedBusRef that = (NodeNumberBasedBusRef) o;\n+\n+        if (!getVoltageLevelId().equals(that.getVoltageLevelId())) {\n+            return false;\n+        }\n+        return getNode() == that.getNode();\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = getVoltageLevelId().hashCode();\n+        result = 31 * result + getNode();\n+        return result;\n+    }\n+\n+}"
  },
  {
    "sha": "08cde9563302223be73d3efcd7b9f9c69ad5b862",
    "filename": "iidm/iidm-api/src/test/java/com/powsybl/iidm/network/BusRefTest.java",
    "status": "added",
    "additions": 108,
    "deletions": 0,
    "changes": 108,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/iidm/iidm-api/src/test/java/com/powsybl/iidm/network/BusRefTest.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/iidm/iidm-api/src/test/java/com/powsybl/iidm/network/BusRefTest.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/iidm/iidm-api/src/test/java/com/powsybl/iidm/network/BusRefTest.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -0,0 +1,108 @@\n+/**\n+ * Copyright (c) 2021, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.iidm.network;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * @author Yichen TANG <yichen.tang at rte-france.com>\n+ */\n+public class BusRefTest {\n+\n+    private final Bus bus = mock(Bus.class);\n+\n+    @Test\n+    public void testIdBasedBusRef() throws JsonProcessingException {\n+        Network network = mock(Network.class);\n+        Network.BusView bv = mock(Network.BusView.class);\n+        when(network.getBusView()).thenReturn(bv);\n+        when(bv.getBus(eq(\"busId\"))).thenReturn(bus);\n+\n+        final BusRef busRef = new IdBasedBusRef(\"busId\");\n+        when(network.getIdentifiable(eq(\"busId\"))).thenReturn((Identifiable) bus);\n+        when(bus.getId()).thenReturn(\"busId\");\n+        assertEquals(bus, busRef.resolve(network).orElseThrow(AssertionError::new));\n+        assertFalse(new IdBasedBusRef(\"another\").resolve(network).isPresent());\n+\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        final String json = objectMapper.writeValueAsString(busRef);\n+        assertEquals(\"{\\\"@c\\\":\\\".IdBasedBusRef\\\",\\\"id\\\":\\\"busId\\\"}\", json);\n+        final BusRef deserialized = objectMapper.readValue(json, BusRef.class);\n+        assertEquals(busRef, deserialized);\n+\n+        Identifiable busbarSection = mock(BusbarSection.class);\n+        when(network.getIdentifiable(eq(\"busbarId\"))).thenReturn(busbarSection);\n+        final BusbarSection bbs = (BusbarSection) busbarSection;\n+        Terminal terminal = mock(Terminal.class);\n+        when(bbs.getTerminal()).thenReturn(terminal);\n+        Terminal.BusView tbv = mock(Terminal.BusView.class);\n+        when(terminal.getBusView()).thenReturn(tbv);\n+        when(tbv.getBus()).thenReturn(bus);\n+        final IdBasedBusRef busbarRef = new IdBasedBusRef(\"busbarId\");\n+        assertEquals(bus, busbarRef.resolve(network).orElseThrow(AssertionError::new));\n+\n+        Identifiable branch = mock(Branch.class);\n+        when(network.getIdentifiable(eq(\"branchId\"))).thenReturn(branch);\n+        try {\n+            new IdBasedBusRef(\"branchId\").resolve(network);\n+            fail();\n+        } catch (Exception e) {\n+            assertEquals(\"branchId is not a bus or injection.\", e.getMessage());\n+        }\n+    }\n+\n+    @Test\n+    public void testBranchBased() throws JsonProcessingException {\n+        Network network = mock(Network.class);\n+        Branch branch = mock(Branch.class);\n+        when(network.getBranch(eq(\"branchId\"))).thenReturn(branch);\n+        Terminal terminal = mock(Terminal.class);\n+        Terminal.BusView bv = mock(Terminal.BusView.class);\n+        when(branch.getTerminal1()).thenReturn(terminal);\n+        when(terminal.getBusView()).thenReturn(bv);\n+        when(bv.getBus()).thenReturn(bus);\n+        final BusRef busRef = new BranchBasedBusRef(\"branchId\", \"ONE\");\n+        assertEquals(bus, busRef.resolve(network).orElseThrow(AssertionError::new));\n+\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        final String json = objectMapper.writeValueAsString(busRef);\n+        assertEquals(\"{\\\"@c\\\":\\\".BranchBasedBusRef\\\",\\\"branchId\\\":\\\"branchId\\\",\\\"side\\\":\\\"ONE\\\"}\", json);\n+        final BusRef deserialized = objectMapper.readValue(json, BusRef.class);\n+        assertEquals(busRef, deserialized);\n+    }\n+\n+    @Test\n+    public void testNodeNumberBased() throws JsonProcessingException {\n+        Network network = mock(Network.class);\n+        VoltageLevel vl = mock(VoltageLevel.class);\n+        when(network.getVoltageLevel(\"vl\")).thenReturn(vl);\n+        VoltageLevel.NodeBreakerView nbv = mock(VoltageLevel.NodeBreakerView.class);\n+        when(vl.getNodeBreakerView()).thenReturn(nbv);\n+        Terminal terminal = mock(Terminal.class);\n+        Terminal.BusView bv = mock(Terminal.BusView.class);\n+        when(terminal.getBusView()).thenReturn(bv);\n+        when(bv.getBus()).thenReturn(bus);\n+        when(nbv.getTerminal(eq(1))).thenReturn(terminal);\n+\n+        BusRef busRef = new NodeNumberBasedBusRef(\"vl\", 1);\n+        assertEquals(bus, busRef.resolve(network).orElseThrow(AssertionError::new));\n+        assertFalse(new NodeNumberBasedBusRef(\"vl\", 2).resolve(network).isPresent());\n+\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        final String json = objectMapper.writeValueAsString(busRef);\n+        assertEquals(\"{\\\"@c\\\":\\\".NodeNumberBasedBusRef\\\",\\\"voltageLevelId\\\":\\\"vl\\\",\\\"node\\\":1}\", json);\n+        assertEquals(busRef, objectMapper.readValue(json, NodeNumberBasedBusRef.class));\n+    }\n+\n+}"
  },
  {
    "sha": "637720adb5ade019cb38da8ca832de4122fbe48e",
    "filename": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityFunction.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityFunction.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityFunction.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/SensitivityFunction.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -10,6 +10,7 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.fasterxml.jackson.annotation.JsonTypeInfo;\n \n+import java.io.Serializable;\n import java.util.Objects;\n \n /**\n@@ -18,7 +19,7 @@\n  * @author Sebastien Murgey {@literal <sebastien.murgey at rte-france.com>}\n  */\n @JsonTypeInfo(use = JsonTypeInfo.Id.MINIMAL_CLASS)\n-public class SensitivityFunction {\n+public class SensitivityFunction implements Serializable {\n \n     @JsonProperty(\"id\")\n     private final String id;"
  },
  {
    "sha": "d37f180f5ed76e6cd056c553b28e0275bda2161e",
    "filename": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/BusVoltagePerTargetV.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/BusVoltagePerTargetV.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/BusVoltagePerTargetV.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/BusVoltagePerTargetV.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -0,0 +1,35 @@\n+/**\n+ * Copyright (c) 2021, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.sensitivity.factors;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.powsybl.sensitivity.SensitivityFactor;\n+import com.powsybl.sensitivity.factors.functions.BusVoltage;\n+import com.powsybl.sensitivity.factors.variables.TargetV;\n+\n+/**\n+ * Sensitivity factor for an impact of a targetV increase from a regulating equipment on a bus ref\n+ *\n+ * @author Anne Tilloy {@literal <anne.tilloy at rte-france.com>}\n+ * @see com.powsybl.sensitivity.factors.functions.BusVoltage\n+ * @see com.powsybl.sensitivity.factors.variables.TargetV\n+ */\n+public class BusVoltagePerTargetV extends SensitivityFactor<BusVoltage, TargetV> {\n+\n+    /**\n+     * Sensitivity factor standard implementation constructor.\n+     *\n+     * @param sensitivityFunction sensitivity function\n+     * @param sensitivityVariable sensitivity variable\n+     */\n+    @JsonCreator\n+    public BusVoltagePerTargetV(@JsonProperty(\"function\") BusVoltage sensitivityFunction,\n+                                @JsonProperty(\"variable\") TargetV sensitivityVariable) {\n+        super(sensitivityFunction, sensitivityVariable);\n+    }\n+}"
  },
  {
    "sha": "50e00d8588076937666c1f058a2f92e491dfc92e",
    "filename": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/functions/BusVoltage.java",
    "status": "added",
    "additions": 70,
    "deletions": 0,
    "changes": 70,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/functions/BusVoltage.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/functions/BusVoltage.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/functions/BusVoltage.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -0,0 +1,70 @@\n+/**\n+ * Copyright (c) 2021, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.sensitivity.factors.functions;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.powsybl.iidm.network.BusRef;\n+import com.powsybl.sensitivity.SensitivityFunction;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Sensitivity function on a network bus voltage\n+ * Only available in AC computation mode\n+ *\n+ * @author Anne Tilloy {@literal <anne.tilloy at rte-france.com>}\n+ */\n+public class BusVoltage extends SensitivityFunction {\n+\n+    @JsonProperty(\"busRef\")\n+    private final BusRef busRef;\n+\n+    /**\n+     * Constructor\n+     *\n+     * @param id       unique identifier of the function\n+     * @param name     readable name of the function\n+     * @param busRef   reference to the voltage bus is used as sensitivity function\n+     * @throws NullPointerException if busRef is null\n+     */\n+    @JsonCreator\n+    public BusVoltage(@JsonProperty(\"id\") String id,\n+                      @JsonProperty(\"name\") String name,\n+                      @JsonProperty(\"busRef\") BusRef busRef) {\n+        super(id, name);\n+        this.busRef = Objects.requireNonNull(busRef);\n+    }\n+\n+    /**\n+     * Get the reference to the bus composing the sensitivity function\n+     *\n+     * @return the bus ref\n+     */\n+    public BusRef getBusRef() {\n+        return busRef;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof BusVoltage)) {\n+            return false;\n+        }\n+\n+        BusVoltage that = (BusVoltage) o;\n+\n+        return getBusRef().equals(that.getBusRef());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return getBusRef().hashCode();\n+    }\n+}"
  },
  {
    "sha": "131e6e9c29af869b0293112f50db6511e7e3efb2",
    "filename": "sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/variables/TargetV.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/variables/TargetV.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/variables/TargetV.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/sensitivity-analysis-api/src/main/java/com/powsybl/sensitivity/factors/variables/TargetV.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -0,0 +1,50 @@\n+/**\n+ * Copyright (c) 2021, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.sensitivity.factors.variables;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.powsybl.sensitivity.SensitivityVariable;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Sensitivity variable on a voltage target increase\n+ *\n+ * @author Anne Tilloy {@literal <anne.tilloy at rte-france.com>}\n+ */\n+public class TargetV extends SensitivityVariable {\n+\n+    @JsonProperty(\"equipmentId\")\n+    private final String equipmentId;\n+\n+    /**\n+     * Constructor\n+     *\n+     * @param id unique identifier of the variable\n+     * @param name readable name of the variable\n+     * @param equipmentId id of the network equipment (generator, static var compensator, ratio tap changer,\n+     *                             shunt compensator, VSC, etc.) which targetV increase is used as sensitivity variable\n+     * @throws NullPointerException if equipmentId is null\n+     */\n+    @JsonCreator\n+    public TargetV(@JsonProperty(\"id\") String id,\n+                   @JsonProperty(\"name\") String name,\n+                   @JsonProperty(\"equipmentId\") String equipmentId) {\n+        super(id, name);\n+        this.equipmentId = Objects.requireNonNull(equipmentId);\n+    }\n+\n+    /**\n+     * Get the id of the equipment that is regulating voltage\n+     *\n+     * @return the id of the equipment\n+     */\n+    public String getEquipmentId() {\n+        return equipmentId;\n+    }\n+}"
  },
  {
    "sha": "90a1134474b82f251d3dabfeb917b3dc65b137a1",
    "filename": "sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/BusVoltagePerTargetVTest.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/BusVoltagePerTargetVTest.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/BusVoltagePerTargetVTest.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/BusVoltagePerTargetVTest.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -0,0 +1,54 @@\n+/**\n+ * Copyright (c) 2021, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.sensitivity.factors;\n+\n+import com.powsybl.sensitivity.factors.functions.BusVoltage;\n+import com.powsybl.sensitivity.factors.variables.TargetV;\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+import org.mockito.Mockito;\n+\n+/**\n+ * @author Anne Tilloy {@literal <anne.tilloy at rte-france.com>}\n+ */\n+public class BusVoltagePerTargetVTest {\n+\n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    @Test\n+    public void checkFailsWhenNullFunction() {\n+        TargetV targetV = Mockito.mock(TargetV.class);\n+        exception.expect(NullPointerException.class);\n+        new BusVoltagePerTargetV(null, targetV);\n+    }\n+\n+    @Test\n+    public void checkFailsWhenNullVariable() {\n+        BusVoltage busVoltage = Mockito.mock(BusVoltage.class);\n+        exception.expect(NullPointerException.class);\n+        new BusVoltagePerTargetV(busVoltage, null);\n+    }\n+\n+    @Test\n+    public void testGetFunction() {\n+        BusVoltage busVoltage = Mockito.mock(BusVoltage.class);\n+        TargetV targetV = Mockito.mock(TargetV.class);\n+        BusVoltagePerTargetV factor = new BusVoltagePerTargetV(busVoltage, targetV);\n+        Assert.assertEquals(busVoltage, factor.getFunction());\n+    }\n+\n+    @Test\n+    public void testGetVariable() {\n+        BusVoltage busVoltage = Mockito.mock(BusVoltage.class);\n+        TargetV targetV = Mockito.mock(TargetV.class);\n+        BusVoltagePerTargetV factor = new BusVoltagePerTargetV(busVoltage, targetV);\n+        Assert.assertEquals(targetV, factor.getVariable());\n+    }\n+}"
  },
  {
    "sha": "3e0558b833a4fa0565338d7502d5d8efce0c50de",
    "filename": "sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/functions/BusVoltageTest.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/functions/BusVoltageTest.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/functions/BusVoltageTest.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/functions/BusVoltageTest.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -0,0 +1,64 @@\n+/**\n+ * Copyright (c) 2018, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.sensitivity.factors.functions;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.powsybl.iidm.network.BranchBasedBusRef;\n+import com.powsybl.iidm.network.BusRef;\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.mock;\n+\n+/**\n+ * @author Anne Tilloy {@literal <anne.tilloy at rte-france.com>}\n+ */\n+public class BusVoltageTest {\n+\n+    private static final String FUNCTION_ID = \"Function ID\";\n+    private static final String FUNCTION_NAME = \"Function name\";\n+    private static final BusRef BUS_REF = mock(BusRef.class);\n+\n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    @Test\n+    public void testNullTerminalId() {\n+        exception.expect(NullPointerException.class);\n+        new BusVoltage(FUNCTION_ID, FUNCTION_NAME, null);\n+    }\n+\n+    @Test\n+    public void getName() {\n+        BusVoltage busVoltage = new BusVoltage(FUNCTION_ID, FUNCTION_NAME, BUS_REF);\n+        Assert.assertEquals(FUNCTION_NAME, busVoltage.getName());\n+    }\n+\n+    @Test\n+    public void getId() {\n+        BusVoltage busVoltage = new BusVoltage(FUNCTION_ID, FUNCTION_NAME, BUS_REF);\n+        Assert.assertEquals(FUNCTION_ID, busVoltage.getId());\n+    }\n+\n+    @Test\n+    public void getBranchId() throws JsonProcessingException {\n+        BranchBasedBusRef busRef = new BranchBasedBusRef(\"branchId\", \"ONE\");\n+        BusVoltage busVoltage = new BusVoltage(FUNCTION_ID, FUNCTION_NAME, busRef);\n+        assertEquals(busRef, busVoltage.getBusRef());\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        final String json = objectMapper.writeValueAsString(busVoltage);\n+        String expectedJson = \"{\\\"@c\\\":\\\".BusVoltage\\\",\\\"id\\\":\\\"Function ID\\\",\\\"name\\\":\\\"Function name\\\",\\\"busRef\\\":{\\\"@c\\\":\\\".BranchBasedBusRef\\\",\\\"branchId\\\":\\\"branchId\\\",\\\"side\\\":\\\"ONE\\\"}}\";\n+        assertEquals(expectedJson, json);\n+        final BusVoltage deserialized = objectMapper.readValue(expectedJson, BusVoltage.class);\n+        assertEquals(busVoltage, deserialized);\n+    }\n+\n+}"
  },
  {
    "sha": "18bcb0584f2c869c1ceb34727d6c246ac4e94884",
    "filename": "sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/variables/TargetVTest.java",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/powsybl/powsybl-core/blob/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/variables/TargetVTest.java",
    "raw_url": "https://github.com/powsybl/powsybl-core/raw/045ae974541098d0d6ee9c4fc926c1bd95a0f767/sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/variables/TargetVTest.java",
    "contents_url": "https://api.github.com/repos/powsybl/powsybl-core/contents/sensitivity-analysis-api/src/test/java/com/powsybl/sensitivity/factors/variables/TargetVTest.java?ref=045ae974541098d0d6ee9c4fc926c1bd95a0f767",
    "patch": "@@ -0,0 +1,51 @@\n+/**\n+ * Copyright (c) 2021, RTE (http://www.rte-france.com)\n+ * This Source Code Form is subject to the terms of the Mozilla Public\n+ * License, v. 2.0. If a copy of the MPL was not distributed with this\n+ * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n+ */\n+package com.powsybl.sensitivity.factors.variables;\n+\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.ExpectedException;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * @author Anne Tilloy {@literal <anne.tilloy at rte-france.com>}\n+ */\n+public class TargetVTest {\n+\n+    private static final String VARIABLE_ID = \"Variable ID\";\n+    private static final String VARIABLE_NAME = \"Variable name\";\n+    private static final String EQUIPMENT_ID = \"Regulating terminal ID\";\n+\n+    @Rule\n+    public ExpectedException exception = ExpectedException.none();\n+\n+    @Test\n+    public void checkFailsWhenNullInjection() {\n+        exception.expect(NullPointerException.class);\n+        new TargetV(VARIABLE_ID, VARIABLE_NAME, null);\n+    }\n+\n+    @Test\n+    public void getName() {\n+        TargetV targetV = new TargetV(VARIABLE_ID, VARIABLE_NAME, EQUIPMENT_ID);\n+        Assert.assertEquals(VARIABLE_NAME, targetV.getName());\n+    }\n+\n+    @Test\n+    public void getId() {\n+        TargetV targetV = new TargetV(VARIABLE_ID, VARIABLE_NAME, EQUIPMENT_ID);\n+        Assert.assertEquals(VARIABLE_ID, targetV.getId());\n+    }\n+\n+    @Test\n+    public void getLine() {\n+        TargetV targetV = new TargetV(VARIABLE_ID, VARIABLE_NAME, EQUIPMENT_ID);\n+        assertEquals(EQUIPMENT_ID, targetV.getEquipmentId());\n+    }\n+}"
  }
]
