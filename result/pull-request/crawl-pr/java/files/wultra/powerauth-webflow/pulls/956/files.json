[
  {
    "sha": "1debb31590a80abf0f7719fd2d53c6a0dda965ad",
    "filename": "docs/Next-Step-Server-REST-API-Reference.md",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/Next-Step-Server-REST-API-Reference.md",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/Next-Step-Server-REST-API-Reference.md",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/docs/Next-Step-Server-REST-API-Reference.md?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -2221,7 +2221,7 @@ Store result of an AFS action for an operation.\n     </tr>\n     <tr>\n         <td>Resource URI</td>\n-        <td><code>/operation/afs/action/create</code></td>\n+        <td><code>/operation/afs/action</code></td>\n     </tr>\n </table>\n "
  },
  {
    "sha": "4cf9c04600ccf1454742b348d81fa20f25b2eecc",
    "filename": "docs/sql/mysql/create_schema.sql",
    "status": "modified",
    "additions": 496,
    "deletions": 206,
    "changes": 702,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/mysql/create_schema.sql",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/mysql/create_schema.sql",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/docs/sql/mysql/create_schema.sql?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -2,288 +2,542 @@\n -- Every Web Flow client application should have a record in this table.\n -- See: https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/client/JdbcClientDetailsService.java\n CREATE TABLE oauth_client_details (\n-  client_id               VARCHAR(256) PRIMARY KEY,\n-  resource_ids            VARCHAR(256),\n-  client_secret           VARCHAR(256),\n-  scope                   VARCHAR(256),\n-  authorized_grant_types  VARCHAR(256),\n-  web_server_redirect_uri VARCHAR(256),\n-  authorities             VARCHAR(256),\n-  access_token_validity   INTEGER,\n-  refresh_token_validity  INTEGER,\n-  additional_information  VARCHAR(4096),\n-  autoapprove             VARCHAR(256)\n+  client_id               VARCHAR(256) PRIMARY KEY, -- OAuth 2.0 protocol client ID.\n+  resource_ids            VARCHAR(256),             -- Identifiers of the OAuth 2.0 resource servers.\n+  client_secret           VARCHAR(256),             -- OAuth 2.0 protocol client secret.\n+  scope                   VARCHAR(256),             -- OAuth 2.0 scopes, comma-separated values.\n+  authorized_grant_types  VARCHAR(256),             -- OAuth 2.0 authorization grant types, comma-separated values.\n+  web_server_redirect_uri VARCHAR(256),             -- OAuth 2.0 redirect URIs, comma-separated values.\n+  authorities             VARCHAR(256),             -- OAuth 2.0 resource grant authorities.\n+  access_token_validity   INTEGER,                  -- Validity of the OAuth 2.0 access tokens, in seconds.\n+  refresh_token_validity  INTEGER,                  -- Validity of the OAuth 2.0 refresh tokens, in seconds.\n+  additional_information  VARCHAR(4096),            -- Field reserved for additional information about the client.\n+  autoapprove             VARCHAR(256)              -- Flag indicating if scopes should be automatically approved.\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table oauth_client_token stores OAuth2 tokens for retrieval by client applications.\n -- See: https://docs.spring.io/spring-security/oauth/apidocs/org/springframework/security/oauth2/client/token/JdbcClientTokenServices.html\n CREATE TABLE oauth_client_token (\n-  authentication_id VARCHAR(256) PRIMARY KEY,\n-  token_id          VARCHAR(256),\n-  token             LONG VARBINARY,\n-  user_name         VARCHAR(256),\n-  client_id         VARCHAR(256)\n+  authentication_id VARCHAR(256) PRIMARY KEY,       -- Authentication ID related to client token.\n+  token_id          VARCHAR(256),                   -- Token ID.\n+  token             LONG VARBINARY,                 -- Token value.\n+  user_name         VARCHAR(256),                   -- Username, identification of the user.\n+  client_id         VARCHAR(256)                    -- OAuth 2.0 Client ID.\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table oauth_access_token stores OAuth2 access tokens.\n -- See: https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/token/store/JdbcTokenStore.java\n CREATE TABLE oauth_access_token (\n-  authentication_id VARCHAR(256) PRIMARY KEY,\n-  token_id          VARCHAR(256),\n-  token             LONG VARBINARY,\n-  user_name         VARCHAR(256),\n-  client_id         VARCHAR(256),\n-  authentication    LONG VARBINARY,\n-  refresh_token     VARCHAR(256)\n+  authentication_id VARCHAR(256) PRIMARY KEY,       -- Authentication ID related to access token.\n+  token_id          VARCHAR(256),                   -- Token ID.\n+  token             LONG VARBINARY,                 -- Token value.\n+  user_name         VARCHAR(256),                   -- Username, identification of the user.\n+  client_id         VARCHAR(256),                   -- OAuth 2.0 Client ID.\n+  authentication    LONG VARBINARY,                 -- Encoded authentication details.\n+  refresh_token     VARCHAR(256)                    -- Refresh token ID.\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table oauth_access_token stores OAuth2 refresh tokens.\n -- See: https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/token/store/JdbcTokenStore.java\n CREATE TABLE oauth_refresh_token (\n-  token_id       VARCHAR(256),\n-  token          LONG VARBINARY,\n-  authentication LONG VARBINARY\n+  token_id       VARCHAR(256),                      -- Refresh token ID.\n+  token          LONG VARBINARY,                    -- Token value.\n+  authentication LONG VARBINARY                     -- Encoded authentication details.\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table oauth_code stores data for the OAuth2 authorization code grant.\n -- See: https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/code/JdbcAuthorizationCodeServices.java\n CREATE TABLE oauth_code (\n-  code           VARCHAR(255),\n-  authentication LONG VARBINARY\n+  code           VARCHAR(256),                      -- OAuth 2.0 protocol \"codes\".\n+  authentication LONG VARBINARY                     -- Encoded authentication details.\n+) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n+\n+-- Table wf_operation_session maps operations to HTTP sessions.\n+-- Table is needed for handling of concurrent operations.\n+CREATE TABLE wf_operation_session (\n+  operation_id              VARCHAR(256) PRIMARY KEY NOT NULL,  -- Operation ID.\n+  http_session_id           VARCHAR(256) NOT NULL,              -- HTTP session ID related to given operation.\n+  operation_hash            VARCHAR(256),                       -- Hash of the operation ID.\n+  websocket_session_id      VARCHAR(32),                        -- WebSocket Session ID.\n+  client_ip_address         VARCHAR(32),                        -- Client IP address, if available.\n+  result                    VARCHAR(32) NOT NULL,               -- Result of the operation, stored in the session.\n+  timestamp_created         TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Timestamp of the record creation.\n+) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n+\n+-- Table wf_afs_config is used to configure anti-fraud system parameters.\n+CREATE TABLE wf_afs_config (\n+  config_id                 VARCHAR(256) PRIMARY KEY NOT NULL,  -- AFS config ID.\n+  js_snippet_url            VARCHAR(256) NOT NULL,              -- URL of the AFS JavaScript snippet (relative to application or absolute).\n+  parameters                TEXT                                -- Additional AFS snippet parameters.\n+) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n+\n+-- Table wf_certificate_verification is used for storing information about verified client TLS certificates.\n+CREATE TABLE wf_certificate_verification (\n+  operation_id               VARCHAR(256) NOT NULL,                        -- Operation ID associated with the certificate verification.\n+  auth_method                VARCHAR(32) NOT NULL,                         -- Authentication method in which the certificate authentication was used.\n+  client_certificate_issuer  VARCHAR(4096) NOT NULL,                       -- Certificate attribute representing the certificate issuer.\n+  client_certificate_subject VARCHAR(4096) NOT NULL,                       -- Certificate attribute representing the certificate subject.\n+  client_certificate_sn      VARCHAR(256) NOT NULL,                        -- Certificate attribute representing the certificate serial number.\n+  operation_data             TEXT NOT NULL,                                -- Operation data that were included in the certificate authentication request.\n+  timestamp_verified         TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, -- Timestamp of the certificate verification.\n+  PRIMARY KEY (operation_id, auth_method)\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table ns_auth_method stores configuration of authentication methods.\n -- Data in this table needs to be loaded before Web Flow is started.\n CREATE TABLE ns_auth_method (\n-  auth_method        VARCHAR(32) PRIMARY KEY NOT NULL,\n-  order_number       INTEGER NOT NULL,\n-  check_user_prefs   BOOLEAN NOT NULL,\n-  user_prefs_column  INTEGER,\n-  user_prefs_default BOOLEAN DEFAULT FALSE,\n-  check_auth_fails   BOOLEAN NOT NULL,\n-  max_auth_fails     INTEGER,\n-  has_user_interface BOOLEAN DEFAULT FALSE,\n-  has_mobile_token   BOOLEAN DEFAULT FALSE,\n-  display_name_key   VARCHAR(32)\n-) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n-\n--- Table ns_user_prefs stores user preferences.\n--- Status of authentication methods is stored in this table per user (methods can be enabled or disabled).\n-CREATE TABLE ns_user_prefs (\n-  user_id       VARCHAR(256) PRIMARY KEY NOT NULL,\n-  auth_method_1 BOOLEAN DEFAULT FALSE,\n-  auth_method_2 BOOLEAN DEFAULT FALSE,\n-  auth_method_3 BOOLEAN DEFAULT FALSE,\n-  auth_method_4 BOOLEAN DEFAULT FALSE,\n-  auth_method_5 BOOLEAN DEFAULT FALSE,\n-  auth_method_1_config VARCHAR(256),\n-  auth_method_2_config VARCHAR(256),\n-  auth_method_3_config VARCHAR(256),\n-  auth_method_4_config VARCHAR(256),\n-  auth_method_5_config VARCHAR(256)\n+  auth_method        VARCHAR(32) PRIMARY KEY NOT NULL, -- Name of the authentication method: APPROVAL_SCA, CONSENT, INIT, LOGIN_SCA, POWERAUTH_TOKEN, SHOW_OPERATION_DETAIL, SMS_KEY, USER_ID_ASSIGN, USERNAME_PASSWORD_AUTH\n+  order_number       INTEGER NOT NULL,                 -- Order of the authentication method, incrementing value, starts with 1.\n+  check_user_prefs   BOOLEAN NOT NULL,                 -- Indication if the authentication method requires checking the user preference first.\n+  user_prefs_column  INTEGER,                          -- In case the previous column is 'true', this is pointer to the user preferences configuration column index.\n+  user_prefs_default BOOLEAN DEFAULT FALSE,            -- Default value of the user preferences, in case the per-user preference is not found.\n+  check_auth_fails   BOOLEAN NOT NULL,                 -- Indication if the methods can fail, and hence the fail count must be checked.\n+  max_auth_fails     INTEGER,                          -- Maximum allowed number of authentication fails.\n+  has_user_interface BOOLEAN DEFAULT FALSE,            -- Indication of if the given method has any user interface in the web flow.\n+  has_mobile_token   BOOLEAN DEFAULT FALSE,            -- Indication of if the given authentication method has mobile token as a part of the flow.\n+  display_name_key   VARCHAR(32)                       -- Localization key to the display name of the authentication method.\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table ns_operation_config stores configuration of operations.\n -- Each operation type (defined by operation_name) has a related mobile token template and configuration.\n CREATE TABLE ns_operation_config (\n-  operation_name            VARCHAR(32) PRIMARY KEY NOT NULL,\n-  template_version          CHAR NOT NULL,\n-  template_id               INTEGER NOT NULL,\n-  mobile_token_enabled      BOOLEAN DEFAULT FALSE NOT NULL,\n-  mobile_token_mode         VARCHAR(256) NOT NULL,\n-  afs_enabled               BOOLEAN NOT NULL DEFAULT FALSE,\n-  afs_config_id             VARCHAR(256)\n+  operation_name            VARCHAR(32) PRIMARY KEY NOT NULL, -- Name of the operation, for example \"login\" or \"approve_payment\".\n+  template_version          CHAR NOT NULL,                    -- Version of the template, used for data signing base.\n+  template_id               INTEGER NOT NULL,                 -- ID of the template, used for data signing base.\n+  mobile_token_enabled      BOOLEAN DEFAULT FALSE NOT NULL,   -- Flag indicating if the mobile token is enabled for this operation type.\n+  mobile_token_mode         VARCHAR(256) NOT NULL,            -- Configuration of mobile token for this operation, for example, if 1FA or 2FA is supported, and which 2FA variants. The field contains a serialized JSON with configuration.\n+  afs_enabled               BOOLEAN NOT NULL DEFAULT FALSE,   -- Flag indicating if AFS system is enabled.\n+  afs_config_id             VARCHAR(256),                     -- Configuration of AFS system.\n+  FOREIGN KEY ns_operation_afs_fk (afs_config_id) REFERENCES wf_afs_config (config_id)\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table ns_organization stores definitions of organizations related to the operations.\n -- At least one default organization must be configured.\n -- Data in this table needs to be loaded before Web Flow is started.\n CREATE TABLE ns_organization (\n-  organization_id          VARCHAR(256) PRIMARY KEY NOT NULL,\n-  display_name_key         VARCHAR(256),\n-  is_default               BOOLEAN NOT NULL,\n-  order_number             INTEGER NOT NULL\n+  organization_id          VARCHAR(256) PRIMARY KEY NOT NULL, -- ID of organization.\n+  display_name_key         VARCHAR(256),                      -- Localization key for the organization display name.\n+  is_default               BOOLEAN NOT NULL,                  -- Flag indicating if this organization is the default.\n+  order_number             INTEGER NOT NULL,                  -- Ordering column for this organization, incrementing value, starts with 1.\n+  default_credential_name  VARCHAR(256),                      -- Default name of credential definition for authentication using Next Step.\n+  default_otp_name         VARCHAR(256)                       -- Default name of OTP definition for authentication using Next Step.\n+) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n+\n+-- Table ns_step_definition stores definitions of authentication/authorization steps.\n+-- Data in this table needs to be loaded before Web Flow is started.\n+CREATE TABLE ns_step_definition (\n+  step_definition_id       INTEGER PRIMARY KEY NOT NULL,      -- Step definition ID.\n+  operation_name           VARCHAR(32) NOT NULL,              -- Operation name for which this step definition is valid.\n+  operation_type           VARCHAR(32) NOT NULL,              -- Type of the operation change: CREATE or UPDATE\n+  request_auth_method      VARCHAR(32),                       -- Operation authentication method that was selected by the user or developer.\n+  request_auth_step_result VARCHAR(32),                       -- Result of the authentication method execution: CONFIRMED, CANCELED, AUTH_METHOD_FAILED, AUTH_FAILED, AUTH_METHOD_CHOSEN, AUTH_METHOD_DOWNGRADE\n+  response_priority        INTEGER NOT NULL,                  -- Response priority (ordering column).\n+  response_auth_method     VARCHAR(32),                       -- Response with the authentication method that should be applied next.\n+  response_result          VARCHAR(32) NOT NULL,              -- Result of the operation: CONTINUE, FAILED, or DONE\n+  FOREIGN KEY ns_request_auth_method_fk (request_auth_method) REFERENCES ns_auth_method (auth_method),\n+  FOREIGN KEY ns_response_auth_method_fk (response_auth_method) REFERENCES ns_auth_method (auth_method)\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n+-- Table ns_application stores Next Step applications.\n+CREATE TABLE ns_application (\n+  application_id         INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,  -- Next Step application ID (autogenerated).\n+  name                   VARCHAR(256) NOT NULL,                        -- Application name used for identification.\n+  description            VARCHAR(256),                                 -- Description of the application.\n+  status                 VARCHAR(32) NOT NULL,                         -- Application status: ACTIVE, REMOVED.\n+  organization_id        VARCHAR(256),                                 -- Organization this application belongs to.\n+  timestamp_created      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,          -- Timestamp when application was created.\n+  timestamp_last_updated TIMESTAMP,                                    -- Timestamp when application was last updated.\n+  CONSTRAINT ns_application_organization_fk FOREIGN KEY (organization_id) REFERENCES ns_organization (organization_id)\n+);\n+\n+-- Table ns_credential_policy stores credential policies.\n+CREATE TABLE ns_credential_policy (\n+  credential_policy_id       INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT,  -- Credential policy ID (autogenerated).\n+  name                       VARCHAR(256) NOT NULL,                        -- Credential policy name used for identification.\n+  description                VARCHAR(256),                                 -- Description of the credential policy.\n+  status                     VARCHAR(32) NOT NULL,                         -- Credential policy status: ACTIVE, REMOVED.\n+  username_length_min        INTEGER,                                      -- Minimum length of username.\n+  username_length_max        INTEGER,                                      -- Maximum length of username.\n+  username_allowed_pattern   VARCHAR(256),                                 -- Allowed pattern for username (regular expression).\n+  credential_length_min      INTEGER,                                      -- Minimum length of credential value.\n+  credential_length_max      INTEGER,                                      -- Maximum length of credential value.\n+  limit_soft                 INTEGER,                                      -- Soft limit of failed attempts.\n+  limit_hard                 INTEGER,                                      -- Hard limit of failed attempts.\n+  check_history_count        INTEGER DEFAULT 0 NOT NULL,                   -- Number of historical credential values to check.\n+  rotation_enabled           INTEGER DEFAULT 0 NOT NULL,                   -- Whether credential rotation is enabled.\n+  rotation_days              INTEGER,                                      -- Number of days for credential rotation.\n+  username_gen_algorithm     VARCHAR(256) DEFAULT 'DEFAULT' NOT NULL,      -- Algorithm used for generating the username.\n+  username_gen_param         VARCHAR(4096) NOT NULL,                       -- Parameters used when generating the username.\n+  credential_gen_algorithm   VARCHAR(256) DEFAULT 'DEFAULT' NOT NULL,      -- Algorithm used for generating the credential.\n+  credential_gen_param       VARCHAR(4096) NOT NULL,                       -- Parameters used when generating the credential.\n+  credential_val_param       VARCHAR(4096) NOT NULL,                       -- Parameters used when validating the credential.\n+  timestamp_created          TIMESTAMP DEFAULT CURRENT_TIMESTAMP,          -- Timestamp when policy was created.\n+  timestamp_last_updated     TIMESTAMP                                     -- Timestamp when policy was last updated.\n+);\n+\n+-- Table ns_credential_policy stores one time password policies.\n+CREATE TABLE ns_otp_policy (\n+  otp_policy_id          INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, -- One time password policy ID (autogenerated).\n+  name                   VARCHAR(256) NOT NULL,                       -- One time password policy name used for identification.\n+  description            VARCHAR(256),                                -- Description of the one time password policy.\n+  status                 VARCHAR(32) NOT NULL,                        -- One time password policy status: ACTIVE, REMOVED.\n+  length                 INTEGER NOT NULL,                            -- One time password length.\n+  attempt_limit          INTEGER,                                     -- Maximum number of authentication attempts.\n+  expiration_time        INTEGER,                                     -- One time password expiration time.\n+  gen_algorithm          VARCHAR(256) DEFAULT 'DEFAULT' NOT NULL,     -- Algorithm used for generating the one time password.\n+  gen_param              VARCHAR(4096) NOT NULL,                      -- Parameters used when generating the OTP.\n+  timestamp_created      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when policy was created.\n+  timestamp_last_updated TIMESTAMP                                    -- Timestamp when policy was last updated.\n+);\n+\n+-- Table ns_user_identity stores user identities.\n+CREATE TABLE ns_user_identity (\n+  user_id                VARCHAR(256) NOT NULL PRIMARY KEY,           -- User identity identifier (not autogenerated).\n+  status                 VARCHAR(32) NOT NULL,                        -- User identity status: ACTIVE, BLOCKED, REMOVED.\n+  extras                 VARCHAR(256),                                -- Extra attributes with data related to user identity.\n+  timestamp_created      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when user identity was created.\n+  timestamp_last_updated TIMESTAMP                                    -- Timestamp when user identity was last updated.\n+);\n+\n+-- Table ns_user_contact stores contact information for user identities.\n+CREATE TABLE ns_user_contact (\n+  user_contact_id        INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, -- User contact identifier (autogenerated).\n+  user_id                VARCHAR(256) NOT NULL,                       -- User identity identifier.\n+  name                   VARCHAR(256) NOT NULL,                       -- User contact name used for identification.\n+  type                   VARCHAR(32) NOT NULL,                        -- User contact type: PHONE, EMAIL, OTHER.\n+  value                  VARCHAR(256) NOT NULL,                       -- User contact value.\n+  is_primary             INTEGER DEFAULT 0 NOT NULL,                  -- Whether contact is primary.\n+  timestamp_created      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when contact was created.\n+  timestamp_last_updated TIMESTAMP,                                   -- Timestamp when contact was last updated.\n+  CONSTRAINT ns_user_contact_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id)\n+);\n+\n+-- Table ns_user_identity stores history for user identities.\n+CREATE TABLE ns_user_identity_history (\n+  user_identity_history_id INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, -- User identity history identifier (autogenerated).\n+  user_id                  VARCHAR(256) NOT NULL,                       -- User identity identifier.\n+  status                   VARCHAR(32) NOT NULL,                        -- User identity status: ACTIVE, BLOCKED, REMOVED.\n+  roles                    VARCHAR(256),                                -- Assigned user roles.\n+  extras                   VARCHAR(256),                                -- Extra attributes with data related to user identity.\n+  timestamp_created        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when user identity snapshot was created.\n+  CONSTRAINT ns_user_identity_history_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id)\n+);\n+\n+-- Table ns_role stores user role definitions.\n+CREATE TABLE ns_role (\n+  role_id                INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, -- Role identifier (autogenerated).\n+  name                   VARCHAR(256) NOT NULL,                       -- Role name used for identification.\n+  description            VARCHAR(256),                                -- Description of role.\n+  timestamp_created      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when role was created.\n+  timestamp_last_updated TIMESTAMP                                    -- Timestamp when role was last updated.\n+);\n+\n+-- Table ns_user_role stores assignment of roles to user identities.\n+CREATE TABLE ns_user_role (\n+  user_role_id             INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, -- User role identifier (autogenerated).\n+  user_id                  VARCHAR(256) NOT NULL,                       -- User identity identifier.\n+  role_id                  INTEGER NOT NULL,                            -- Role identifier.\n+  status                   VARCHAR(32) NOT NULL,                        -- User role status: ACTIVE, REMOVED.\n+  timestamp_created        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when user role was created.\n+  timestamp_last_updated   TIMESTAMP,                                   -- Timestamp when user role was last updated.\n+  CONSTRAINT ns_role_identity_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id),\n+  CONSTRAINT ns_user_role_fk FOREIGN KEY (role_id) REFERENCES ns_role (role_id)\n+);\n+\n+-- Table ns_user_alias stores user aliases.\n+CREATE TABLE ns_user_alias (\n+  user_alias_id            INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, -- User alias identifier (autogenerated).\n+  user_id                  VARCHAR(256) NOT NULL,                       -- User identity identifier.\n+  name                     VARCHAR(256) NOT NULL,                       -- User alias name used for identification.\n+  value                    VARCHAR(256) NOT NULL,                       -- User alias value.\n+  status                   VARCHAR(32) NOT NULL,                        -- User alias status: ACTIVE, REMOVED.\n+  extras                   VARCHAR(256),                                -- Extra attributes with data related to user alias.\n+  timestamp_created        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when user alias was created.\n+  timestamp_last_updated   TIMESTAMP,                                   -- Timestamp when user alias was last updated.\n+  CONSTRAINT ns_user_alias_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id)\n+);\n+\n+-- Table ns_hashing_config stores configuration of hashing algorithms.\n+CREATE TABLE ns_hashing_config (\n+  hashing_config_id        INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, -- Hashing configuration identifier (autogenerated).\n+  name                     VARCHAR(256) NOT NULL,                       -- Hashing configuration name used for identification.\n+  algorithm                VARCHAR(256) NOT NULL,                       -- Hashing algorithm name.\n+  status                   VARCHAR(32) NOT NULL,                        -- Hashing configuration status: ACTIVE, REMOVED.\n+  parameters               VARCHAR(256),                                -- Hashing algorithm parameters.\n+  timestamp_created        TIMESTAMP                                    -- Timestamp when hashing configuration was created.\n+);\n+\n+-- Table ns_credential_definition stores definitions of credentials with reference to credential policies and applications.\n+CREATE TABLE ns_credential_definition (\n+  credential_definition_id   INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, -- Credential definition identifier (autogenerated).\n+  name                       VARCHAR(256) NOT NULL,                       -- Credential definition name used for identification.\n+  description                VARCHAR(256),                                -- Description of the credential definition.\n+  application_id             INTEGER NOT NULL,                            -- Application identifier.\n+  credential_policy_id       INTEGER NOT NULL,                            -- Credential policy identifier.\n+  category                   VARCHAR(32) NOT NULL,                        -- Credential category: PASSWORD, PIN, OTHER.\n+  encryption_enabled         INTEGER DEFAULT 0 NOT NULL,                  -- Whether encryption of stored credentials is enabled.\n+  encryption_algorithm       VARCHAR(256),                                -- Algorithm used for stored credential encryption.\n+  hashing_enabled            INTEGER DEFAULT 0 NOT NULL,                  -- Whether credential hashing is enabled.\n+  hashing_config_id          INTEGER,                                     -- Algorithm used for credential hashing.\n+  e2e_encryption_enabled     INTEGER DEFAULT 0 NOT NULL,                  -- Whether end to end encryption of credential is enabled.\n+  data_adapter_proxy_enabled INTEGER DEFAULT 0 NOT NULL,                  -- Whether credential API calls should be proxied through Data Adapter.\n+  status                     VARCHAR(32) NOT NULL,                        -- Credential definition status: ACTIVE, REMOVED.\n+  timestamp_created          TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when credential definition was created.\n+  timestamp_last_updated     TIMESTAMP,                                   -- Timestamp when credential definition was last updated.\n+  CONSTRAINT ns_credential_application_fk FOREIGN KEY (application_id) REFERENCES ns_application (application_id),\n+  CONSTRAINT ns_credential_policy_fk FOREIGN KEY (credential_policy_id) REFERENCES ns_credential_policy (credential_policy_id),\n+  CONSTRAINT ns_credential_hash_fk FOREIGN KEY (hashing_config_id) REFERENCES ns_hashing_config (hashing_config_id)\n+);\n+\n+-- Table ns_otp_definition stores definitions of one time passwords with reference to credential policies and applications.\n+CREATE TABLE ns_otp_definition (\n+  otp_definition_id          INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, -- One time password definition identifier (autogenerated).\n+  name                       VARCHAR(256) NOT NULL,                       -- One time password definition name used for identification.\n+  description                VARCHAR(256),                                -- Description of the one time password definition.\n+  application_id             INTEGER NOT NULL,                            -- Application identifier.\n+  otp_policy_id              INTEGER NOT NULL,                            -- One time password policy identifier.\n+  encryption_enabled         INTEGER DEFAULT 0 NOT NULL,                  -- Whether encryption of stored one time passwords is enabled.\n+  encryption_algorithm       VARCHAR(256),                                -- Algorithm used for stored one time password encryption.\n+  data_adapter_proxy_enabled INTEGER DEFAULT 0 NOT NULL,                  -- Whether one time password API calls should be proxied through Data Adapter.\n+  status                     VARCHAR(32) NOT NULL,                        -- One time password definition status: ACTIVE, REMOVED.\n+  timestamp_created          TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when one time password definition was created.\n+  timestamp_last_updated     TIMESTAMP,                                   -- Timestamp when one time password definition was last updated.\n+  CONSTRAINT ns_otp_application_fk FOREIGN KEY (application_id) REFERENCES ns_application (application_id),\n+  CONSTRAINT ns_otp_policy_fk FOREIGN KEY (otp_policy_id) REFERENCES ns_otp_policy (otp_policy_id)\n+);\n+\n+-- Table ns_credential_storage stores credential values, counters and other data related to credentials.\n+CREATE TABLE ns_credential_storage (\n+  credential_id                    VARCHAR(256) NOT NULL PRIMARY KEY,   -- Credential identifier (generated by application as UUID).\n+  credential_definition_id         INTEGER NOT NULL,                    -- Credential definition identifier.\n+  user_id                          VARCHAR(256) NOT NULL,               -- User identity identifier.\n+  type                             VARCHAR(32) NOT NULL,                -- Credential type: PERMANENT, TEMPORARY.\n+  user_name                        VARCHAR(256),                        -- Username.\n+  value                            VARCHAR(256) NOT NULL,               -- Credential value.\n+  status                           VARCHAR(32) NOT NULL,                -- Credential status: ACTIVE, BLOCKED_TEMPORARY, BLOCKED_PERMANENT, REMOVED.\n+  attempt_counter                  INTEGER DEFAULT 0 NOT NULL,          -- Attempt counter for both successful and failed attempts.\n+  failed_attempt_counter_soft      INTEGER DEFAULT 0 NOT NULL,          -- Soft failed attempt counter.\n+  failed_attempt_counter_hard      INTEGER DEFAULT 0 NOT NULL,          -- Hard failed attempt counter.\n+  timestamp_created                TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Timestamp when credential was created.\n+  timestamp_expires                TIMESTAMP,                           -- Timestamp when credential expires.\n+  timestamp_blocked                TIMESTAMP,                           -- Timestamp when credential was blocked.\n+  timestamp_last_updated           TIMESTAMP,                           -- Timestamp when credential was last updated.\n+  timestamp_last_credential_change TIMESTAMP,                           -- Timestamp when credential value was last changed.\n+  CONSTRAINT ns_credential_definition_fk FOREIGN KEY (credential_definition_id) REFERENCES ns_credential_definition (credential_definition_id),\n+  CONSTRAINT ns_credential_user_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id)\n+);\n+\n+-- Table ns_credential_history stores historical values of credentials.\n+CREATE TABLE ns_credential_history (\n+  credential_history_id       INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, -- Credential history identifier (autogenerated).\n+  credential_definition_id    INTEGER NOT NULL,                            -- Credential identifier.\n+  user_id                     VARCHAR(256) NOT NULL,                       -- User identity identifier.\n+  user_name                   VARCHAR(256),                                -- Username.\n+  value                       VARCHAR(256) NOT NULL,                       -- Credential value.\n+  timestamp_created           TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when credential was created.\n+  CONSTRAINT ns_credential_history_definition_fk FOREIGN KEY (credential_definition_id) REFERENCES ns_credential_definition (credential_definition_id),\n+  CONSTRAINT ns_credential_history_user_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id)\n+);\n+\n+-- Table ns_otp_storage stores one time password values, counters and other data related to one time passwords.\n+CREATE TABLE ns_otp_storage (\n+  otp_id                      VARCHAR(256) NOT NULL PRIMARY KEY,   -- One time password identifier (generated by application as UUID).\n+  otp_definition_id           INTEGER NOT NULL,                    -- One time password definition identifier.\n+  user_id                     VARCHAR(256),                        -- User identifier.\n+  credential_definition_id    INTEGER,                             -- Credential definition identifier used when updating failed counter.\n+  operation_id                VARCHAR(256),                        -- Operation identifier.\n+  value                       VARCHAR(256),                        -- One time password value.\n+  salt                        VARBINARY(16),                       -- Cryptographic salt used when generating one time password.\n+  status                      VARCHAR(32) NOT NULL,                -- One time password status: ACTIVE, USED, BLOCKED, REMOVED.\n+  otp_data                    TEXT,                                -- Data used for generating one time password.\n+  attempt_counter             INTEGER DEFAULT 0 NOT NULL,          -- One time password attempt counter.\n+  failed_attempt_counter      INTEGER DEFAULT 0 NOT NULL,          -- One time password failed attempt counter.\n+  timestamp_created           TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Timestamp when one time password was created.\n+  timestamp_verified          TIMESTAMP,                           -- Timestamp when one time password was verified.\n+  timestamp_blocked           TIMESTAMP,                           -- Timestamp when one time password was verified.\n+  timestamp_expires           TIMESTAMP,                           -- Timestamp when one time password expires.\n+  CONSTRAINT ns_otp_definition_fk FOREIGN KEY (otp_definition_id) REFERENCES ns_otp_definition (otp_definition_id)\n+);\n+\n -- Table ns_operation stores details of Web Flow operations.\n -- Only the last status is stored in this table, changes of operations are stored in table ns_operation_history.\n CREATE TABLE ns_operation (\n-  operation_id                  VARCHAR(256) PRIMARY KEY NOT NULL,\n-  operation_name                VARCHAR(32) NOT NULL,\n-  operation_data                TEXT NOT NULL,\n-  operation_form_data           TEXT,\n-  application_id                VARCHAR(256),\n-  application_name              VARCHAR(256),\n-  application_description       VARCHAR(256),\n-  application_original_scopes   VARCHAR(256),\n-  application_extras            TEXT,\n-  user_id                       VARCHAR(256),\n-  organization_id               VARCHAR(256),\n-  user_account_status           VARCHAR(32),\n-  external_transaction_id       VARCHAR(256),\n-  result                        VARCHAR(32),\n-  timestamp_created             TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n-  timestamp_expires             TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n-  FOREIGN KEY organization_fk (organization_id) REFERENCES ns_organization (organization_id)\n+  operation_id                  VARCHAR(256) PRIMARY KEY NOT NULL,   -- ID of a specific operation instance, random value in the UUID format or any value that external system decides to set as the operation ID when creating the operation.\n+  operation_name                VARCHAR(32) NOT NULL,                -- Name of the operation, represents a type of the operation, for example, \"login\" or \"approve_payment\".\n+  operation_data                TEXT NOT NULL,                       -- Signing data of the operation.\n+  operation_form_data           TEXT,                                -- Structured data of the operation that are displayed to the end user.\n+  application_id                VARCHAR(256),                        -- ID of the application that initiated the operation, usually OAuth 2.0 client ID.\n+  application_name              VARCHAR(256),                        -- Displayable name of the application that initiated the operation.\n+  application_description       VARCHAR(256),                        -- Displayable description of the application that initiated the operation.\n+  application_original_scopes   VARCHAR(256),                        -- Original OAuth 2.0 scopes used by the application that initiated the operation.\n+  application_extras            TEXT,                                -- Any additional information related to the application that initiated the operation.\n+  user_id                       VARCHAR(256),                        -- Associated user ID.\n+  organization_id               VARCHAR(256),                        -- Associated organization ID.\n+  user_account_status           VARCHAR(32),                         -- Status of the user account while initiated the operation - ACTIVE, NOT_ACTIVE.\n+  external_operation_name       VARCHAR(32),                         -- External operation name, which can further specify the operation purpose.\n+  external_transaction_id       VARCHAR(256),                        -- External transaction ID, for example ID of a payment in a transaction system.\n+  result                        VARCHAR(32),                         -- Operation result - CONTINUE, FAILED, DONE.\n+  timestamp_created             TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Timestamp when this operation was created.\n+  timestamp_expires             TIMESTAMP,                           -- Timestamp of the expiration of the operation.\n+  FOREIGN KEY ns_operation_organization_fk (organization_id) REFERENCES ns_organization (organization_id),\n+  FOREIGN KEY ns_operation_config_fk (operation_name) REFERENCES ns_operation_config (operation_name)\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n+-- Table ns_authentication stores authentication attempts.\n+CREATE TABLE ns_authentication (\n+  authentication_id           VARCHAR(256) NOT NULL PRIMARY KEY,           -- Authentication identifier (autogenerated).\n+  user_id                     VARCHAR(256),                                -- User identity identifier.\n+  type                        VARCHAR(32) NOT NULL,                        -- Authentication type: CREDENTIAL, OTP, CREDENTIAL_OTP.\n+  credential_id               VARCHAR(256),                                -- Credential identifier.\n+  otp_id                      VARCHAR(256),                                -- One time password identifier.\n+  operation_id                VARCHAR(256),                                -- Operation identifier.\n+  result                      VARCHAR(32) NOT NULL,                        -- Overall authentication result.\n+  result_credential           VARCHAR(32),                                 -- Authentication result for credential authentication.\n+  result_otp                  VARCHAR(32),                                 -- Authentication result for one time password authentication.\n+  timestamp_created           TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp when authentication record was created.\n+  CONSTRAINT ns_auth_credential_fk FOREIGN KEY (credential_id) REFERENCES ns_credential_storage (credential_id),\n+  CONSTRAINT ns_auth_otp_fk FOREIGN KEY (otp_id) REFERENCES ns_otp_storage (otp_id),\n+  CONSTRAINT ns_auth_operation_fk FOREIGN KEY (operation_id) REFERENCES ns_operation (operation_id)\n+);\n+\n -- Table ns_operation_history stores all changes of operations.\n CREATE TABLE ns_operation_history (\n-  operation_id                VARCHAR(256) NOT NULL,\n-  result_id                   INTEGER NOT NULL,\n-  request_auth_method         VARCHAR(32) NOT NULL,\n-  request_auth_instruments    VARCHAR(256),\n-  request_auth_step_result    VARCHAR(32) NOT NULL,\n-  request_params              VARCHAR(4096),\n-  response_result             VARCHAR(32) NOT NULL,\n-  response_result_description VARCHAR(256),\n-  response_steps              VARCHAR(4096),\n-  response_timestamp_created  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n-  response_timestamp_expires  TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n-  chosen_auth_method          VARCHAR(32),\n-  mobile_token_active         BOOLEAN NOT NULL DEFAULT FALSE,\n+  operation_id                VARCHAR(256) NOT NULL,               -- Operation ID.\n+  result_id                   INTEGER NOT NULL,                    -- Result ordering index identifier, incrementing value, starts with 1.\n+  request_auth_method         VARCHAR(32) NOT NULL,                -- Authentication method used for the step.\n+  request_auth_instruments    VARCHAR(256),                        -- Which specific instruments were used for the step. Supported values are: PASSWORD, OTP_KEY, POWERAUTH_TOKEN, HW_TOKEN. There can be multiple supported instruments, they are stored encoded in JSON format.\n+  request_auth_step_result    VARCHAR(32) NOT NULL,                -- Authentication result: CANCELED, AUTH_METHOD_FAILED, AUTH_FAILED, CONFIRMED, AUTH_METHOD_CHOSEN, AUTH_METHOD_DOWNGRADE\n+  request_params              VARCHAR(4096),                       -- Additional request parameters.\n+  response_result             VARCHAR(32) NOT NULL,                -- Authentication step result: FAILED, CONTINUE, DONE.\n+  response_result_description VARCHAR(256),                        -- Additional information about the authentication step result.\n+  response_steps              VARCHAR(4096),                       -- Information about which methods are allowed in the next step.\n+  response_timestamp_created  TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Timestamp when the record was created.\n+  response_timestamp_expires  TIMESTAMP,                           -- Timestamp when the operation step should expire.\n+  chosen_auth_method          VARCHAR(32),                         -- Information about which authentication method was chosen, in case user can chose the authentication method.\n+  mobile_token_active         BOOLEAN NOT NULL DEFAULT FALSE,      -- Information about if mobile token is active during the particular authentication step, in order to show the mobile token operation at the right time.\n+  authentication_id           VARCHAR(256),                        -- Reference to the authentication record.\n   PRIMARY KEY (operation_id, result_id),\n-  FOREIGN KEY operation_fk (operation_id) REFERENCES ns_operation (operation_id),\n-  FOREIGN KEY auth_method_fk (request_auth_method) REFERENCES ns_auth_method (auth_method)\n+  FOREIGN KEY ns_history_operation_fk (operation_id) REFERENCES ns_operation (operation_id),\n+  FOREIGN KEY ns_history_auth_method_fk (request_auth_method) REFERENCES ns_auth_method (auth_method),\n+  FOREIGN KEY ns_history_chosen_method_fk (chosen_auth_method) REFERENCES ns_auth_method (auth_method),\n+  FOREIGN KEY ns_history_authentication_fk (authentication_id) REFERENCES ns_authentication (authentication_id)\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table ns_operation_afs stores AFS requests and responses.\n CREATE TABLE ns_operation_afs (\n-  afs_action_id               INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,\n-  operation_id                VARCHAR(256) NOT NULL,\n-  request_afs_action          VARCHAR(256) NOT NULL,\n-  request_step_index          INTEGER NOT NULL,\n-  request_afs_extras          VARCHAR(256),\n-  response_afs_apply          BOOLEAN NOT NULL DEFAULT FALSE,\n-  response_afs_label          VARCHAR(256),\n-  response_afs_extras         VARCHAR(256),\n-  timestamp_created           TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n-  FOREIGN KEY operation_afs_fk (operation_id) REFERENCES ns_operation (operation_id)\n-) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n-\n--- Table ns_step_definition stores definitions of authentication/authorization steps.\n--- Data in this table needs to be loaded before Web Flow is started.\n-CREATE TABLE ns_step_definition (\n-  step_definition_id       INTEGER PRIMARY KEY NOT NULL,\n-  operation_name           VARCHAR(32) NOT NULL,\n-  operation_type           VARCHAR(32) NOT NULL,\n-  request_auth_method      VARCHAR(32),\n-  request_auth_step_result VARCHAR(32),\n-  response_priority        INTEGER NOT NULL,\n-  response_auth_method     VARCHAR(32),\n-  response_result          VARCHAR(32) NOT NULL,\n-  FOREIGN KEY request_auth_method_fk (request_auth_method) REFERENCES ns_auth_method (auth_method),\n-  FOREIGN KEY response_auth_method_fk (response_auth_method) REFERENCES ns_auth_method (auth_method)\n-) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n+  afs_action_id               INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT, -- ID of the AFS action.\n+  operation_id                VARCHAR(256) NOT NULL,                       -- Operation ID.\n+  request_afs_action          VARCHAR(256) NOT NULL,                       -- Information about requested AFS action.\n+  request_step_index          INTEGER NOT NULL,                            -- Counter within the specific operation step that is associated with AFS action, e.g. to differentiate multiple authentication attempts. Incrementing value, starts with 1.\n+  request_afs_extras          VARCHAR(256),                                -- Additional information about AFS action, typically a cookie values used in AFS system.\n+  response_afs_apply          INTEGER DEFAULT 0 NOT NULL,                  -- Response information about if AFS was applied.\n+  response_afs_label          VARCHAR(256),                                -- Response AFS label (information about what should the application do).\n+  response_afs_extras         VARCHAR(256),                                -- Additional information sent in AFS response.\n+  timestamp_created           TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp this AFS action was created.\n+  CONSTRAINT operation_afs_fk FOREIGN KEY (operation_id) REFERENCES ns_operation (operation_id)\n+);\n \n--- Table wf_operation_session maps operations to HTTP sessions.\n--- Table is needed for handling of concurrent operations.\n-CREATE TABLE wf_operation_session (\n-  operation_id              VARCHAR(256) PRIMARY KEY NOT NULL,\n-  http_session_id           VARCHAR(256) NOT NULL,\n-  operation_hash            VARCHAR(256),\n-  websocket_session_id      VARCHAR(32),\n-  client_ip_address         VARCHAR(32),\n-  result                    VARCHAR(32) NOT NULL,\n-  timestamp_created         TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n-) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n-\n--- Table wf_afs_config is used to configure anti-fraud system parameters.\n-CREATE TABLE wf_afs_config (\n-  config_id                 VARCHAR(256) PRIMARY KEY NOT NULL,\n-  js_snippet_url            VARCHAR(256) NOT NULL,\n-  parameters                TEXT\n-) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n+-- Table ns_audit_log stores audit information.\n+CREATE TABLE ns_audit_log (\n+  audit_log_id           INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT, -- Audit log identifier.\n+  action                 VARCHAR(256) NOT NULL,                       -- Action which is being audited.\n+  data                   TEXT,                                        -- Data for the audit record.\n+  timestamp_created      TIMESTAMP                                    -- Timestamp when audit record was created.\n+);\n \n--- Table wf_certificate_verification is used for storing information about verified client TLS certificates.\n-CREATE TABLE wf_certificate_verification (\n-  operation_id               VARCHAR(256) NOT NULL,\n-  auth_method                VARCHAR(32) NOT NULL,\n-  client_certificate_issuer  VARCHAR(4000) NOT NULL,\n-  client_certificate_subject VARCHAR(4000) NOT NULL,\n-  client_certificate_sn      VARCHAR(256) NOT NULL,\n-  operation_data             TEXT NOT NULL,\n-  timestamp_verified         TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n-  PRIMARY KEY (operation_id, auth_method)\n+-- Table ns_user_prefs stores user preferences.\n+-- Status of authentication methods is stored in this table per user (methods can be enabled or disabled).\n+CREATE TABLE ns_user_prefs (\n+  user_id       VARCHAR(256) PRIMARY KEY NOT NULL, -- User ID.\n+  auth_method_1 BOOLEAN DEFAULT FALSE,             -- Flag indicating if \"authentication method 1\" is enabled.\n+  auth_method_2 BOOLEAN DEFAULT FALSE,             -- Flag indicating if \"authentication method 2\" is enabled.\n+  auth_method_3 BOOLEAN DEFAULT FALSE,             -- Flag indicating if \"authentication method 3\" is enabled.\n+  auth_method_4 BOOLEAN DEFAULT FALSE,             -- Flag indicating if \"authentication method 4\" is enabled.\n+  auth_method_5 BOOLEAN DEFAULT FALSE,             -- Flag indicating if \"authentication method 5\" is enabled.\n+  auth_method_1_config VARCHAR(256),               -- Configuration for \"authentication method 1\".\n+  auth_method_2_config VARCHAR(256),               -- Configuration for \"authentication method 2\".\n+  auth_method_3_config VARCHAR(256),               -- Configuration for \"authentication method 3\".\n+  auth_method_4_config VARCHAR(256),               -- Configuration for \"authentication method 4\".\n+  auth_method_5_config VARCHAR(256)                -- Configuration for \"authentication method 5\".\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table da_sms_authorization stores data for SMS OTP authorization.\n CREATE TABLE da_sms_authorization (\n-  message_id           VARCHAR(256) PRIMARY KEY NOT NULL,\n-  operation_id         VARCHAR(256) NOT NULL,\n-  user_id              VARCHAR(256) NOT NULL,\n-  organization_id      VARCHAR(256),\n-  operation_name       VARCHAR(32) NOT NULL,\n-  authorization_code   VARCHAR(32) NOT NULL,\n-  salt                 VARBINARY(16) NOT NULL,\n-  message_text         TEXT NOT NULL,\n-  verify_request_count INTEGER,\n-  verified             BOOLEAN DEFAULT FALSE,\n-  timestamp_created    TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n-  timestamp_verified   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n-  timestamp_expires    TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n+  message_id           VARCHAR(256) PRIMARY KEY NOT NULL,   -- SMS message ID, ID of SMS OTP.\n+  operation_id         VARCHAR(256) NOT NULL,               -- Operation ID.\n+  user_id              VARCHAR(256) NOT NULL,               -- User ID.\n+  organization_id      VARCHAR(256),                        -- Organization ID.\n+  operation_name       VARCHAR(32) NOT NULL,                -- Name of the operation that triggered the SMS (login, authorize_payment, ...).\n+  authorization_code   VARCHAR(32) NOT NULL,                -- Value of the authorization code sent in the SMS.\n+  salt                 VARBINARY(16) NOT NULL,              -- Salt used for authorization code calculation.\n+  message_text         TEXT NOT NULL,                       -- Full SMS message text.\n+  verify_request_count INTEGER,                             -- Number of verification attempts.\n+  verified             BOOLEAN DEFAULT FALSE,               -- Flag indicating if this SMS OTP was successfully verified.\n+  timestamp_created    TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- Timestamp when the SMS OTP was generated.\n+  timestamp_verified   TIMESTAMP,                           -- Timestamp when the SMS OTP was successfully validated.\n+  timestamp_expires    TIMESTAMP                            -- Timestamp when the SMS OTP expires.\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table da_user_credentials stores built-in users for the data adapter\n CREATE TABLE da_user_credentials (\n-  user_id               VARCHAR(128) PRIMARY KEY NOT NULL,\n-  username              VARCHAR(255) NOT NULL,\n-  password_hash         VARCHAR(255) NOT NULL,\n-  family_name           VARCHAR(255) NOT NULL,\n-  given_name            VARCHAR(255) NOT NULL,\n-  organization_id       VARCHAR(64)  NOT NULL,\n-  phone_number          VARCHAR(255) NOT NULL\n+  user_id               VARCHAR(128) PRIMARY KEY NOT NULL,  -- User ID. Technical identifier of the user.\n+  username              VARCHAR(256) NOT NULL,              -- Username, the displayable value that users use to sign in.\n+  password_hash         VARCHAR(256) NOT NULL,              -- Bcrypt hash of the password.\n+  family_name           VARCHAR(256) NOT NULL,              -- User family name.\n+  given_name            VARCHAR(256) NOT NULL,              -- User given name.\n+  organization_id       VARCHAR(64)  NOT NULL,              -- User organization ID.\n+  phone_number          VARCHAR(256) NOT NULL               -- Full phone number, should be stored in format that allows easy SMS message sending.\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table for the list of consent currently given by a user\n CREATE TABLE tpp_consent (\n-  consent_id            VARCHAR(64) PRIMARY KEY NOT NULL,\n-  consent_name          VARCHAR(128) NOT NULL,\n-  consent_text          TEXT NOT NULL,\n-  version               INT NOT NULL\n+  consent_id            VARCHAR(64) PRIMARY KEY NOT NULL,   -- Consent ID.\n+  consent_name          VARCHAR(128) NOT NULL,              -- Consent name, localization key or full displayable value.\n+  consent_text          TEXT NOT NULL,                      -- Consent text, localization key or full displayable value with optional placeholders.\n+  version               INT NOT NULL                        -- Consent version.\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n -- Table for the list of changes in consent history by given user\n CREATE TABLE tpp_user_consent (\n-  id                    INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,\n-  user_id               VARCHAR(256) NOT NULL,\n-  client_id             VARCHAR(256) NOT NULL,\n-  consent_id            VARCHAR(64) NOT NULL,\n-  external_id           VARCHAR(256),\n-  consent_parameters    TEXT NOT NULL,\n-  timestamp_created     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,\n-  timestamp_updated     TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n+  id                    INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT, -- User given consent ID.\n+  user_id               VARCHAR(256) NOT NULL,                       -- User ID.\n+  client_id             VARCHAR(256) NOT NULL,                       -- OAuth 2.0 client ID.\n+  consent_id            VARCHAR(64) NOT NULL,                        -- Consent ID.\n+  external_id           VARCHAR(256),                                -- External ID associated with the consent approval, usually the operation ID.\n+  consent_parameters    TEXT NOT NULL,                               -- Specific parameters that were filled in into the user consent template.\n+  timestamp_created     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,         -- Timestamp the consent with given ID was first created.\n+  timestamp_updated     TIMESTAMP                                    -- Timestamp the consent with given ID was given again before it was revoked (updated, prolonged).\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n CREATE TABLE tpp_user_consent_history (\n-  id                    INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,\n-  user_id               VARCHAR(256) NOT NULL,\n-  client_id             VARCHAR(256) NOT NULL,\n-  consent_id            VARCHAR(64) NOT NULL,\n-  consent_change        VARCHAR(16) NOT NULL,\n-  external_id           VARCHAR(256),\n-  consent_parameters    TEXT NOT NULL,\n-  timestamp_created     TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n+  id                    INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT, -- ID of the consent history record.\n+  user_id               VARCHAR(256) NOT NULL,                       -- User ID.\n+  client_id             VARCHAR(256) NOT NULL,                       -- Client ID.\n+  consent_id            VARCHAR(64) NOT NULL,                        -- Consent ID.\n+  consent_change        VARCHAR(16) NOT NULL,                        -- Type of the consent change: APPROVE, PROLONG, REJECT\n+  external_id           VARCHAR(256),                                -- External ID that was responsible for this specific consent change, usually the operation ID.\n+  consent_parameters    TEXT NOT NULL,                               -- Specific parameters that were filled in into the user consent template in this consent change.\n+  timestamp_created     TIMESTAMP DEFAULT CURRENT_TIMESTAMP          -- Timestamp of the consent change.\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n CREATE TABLE tpp_detail (\n-  tpp_id                INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,\n-  tpp_name              VARCHAR(256) NOT NULL,\n-  tpp_license           VARCHAR(256) NOT NULL,\n-  tpp_info              TEXT NULL,\n-  tpp_address           TEXT NULL,\n-  tpp_website           TEXT NULL,\n-  tpp_phone             VARCHAR(256) NULL,\n-  tpp_email             VARCHAR(256) NULL,\n-  tpp_logo              BLOB NULL\n+  tpp_id                INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT, -- ID of the TPP provider.\n+  tpp_name              VARCHAR(256) NOT NULL,                       -- Name of the TPP provider.\n+  tpp_license           VARCHAR(256) NOT NULL,                       -- Information about the TPP license.\n+  tpp_info              TEXT NULL,                                   -- Additional information about the TPP provider, if available.\n+  tpp_address           TEXT NULL,                                   -- TPP address, if available.\n+  tpp_website           TEXT NULL,                                   -- TPP website, if available.\n+  tpp_phone             VARCHAR(256) NULL,                           -- TPP phone number, if available.\n+  tpp_email             VARCHAR(256) NULL,                           -- TPP e-mail, if available.\n+  tpp_logo              BLOB NULL                                    -- TPP logo, if available.\n ) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n \n CREATE TABLE tpp_app_detail (\n-  tpp_id                INTEGER NOT NULL,\n-  app_client_id         VARCHAR(256) NOT NULL,\n-  app_name              VARCHAR(256) NOT NULL,\n-  app_info              TEXT NULL,\n-  app_type              VARCHAR(32) NULL,\n+  tpp_id                INTEGER NOT NULL,                            -- TPP ID.\n+  app_client_id         VARCHAR(256) NOT NULL,                       -- TPP app ID, represented as OAuth 2.0 client ID and connecting the application to OAuth 2.0 credentials.\n+  app_name              VARCHAR(256) NOT NULL,                       -- TPP app name.\n+  app_info              TEXT NULL,                                   -- An arbitrary additional info about TPP app, if available.\n+  app_type              VARCHAR(32) NULL,                            -- Application type, \"web\" or \"native\".\n   PRIMARY KEY (tpp_id, app_client_id),\n   FOREIGN KEY tpp_detail_fk (tpp_id) REFERENCES tpp_detail (tpp_id),\n   FOREIGN KEY tpp_client_secret_fk (app_client_id) REFERENCES oauth_client_details (client_id)\n@@ -293,4 +547,40 @@ CREATE INDEX wf_operation_hash ON wf_operation_session (operation_hash);\n CREATE INDEX wf_websocket_session ON wf_operation_session (websocket_session_id);\n CREATE INDEX ns_operation_pending ON ns_operation (user_id, result);\n CREATE UNIQUE INDEX ns_operation_afs_unique on ns_operation_afs (operation_id, request_afs_action, request_step_index);\n-CREATE INDEX wf_certificate_operation ON wf_certificate_verification (operation_id);\n\\ No newline at end of file\n+CREATE INDEX wf_certificate_operation ON wf_certificate_verification (operation_id);\n+CREATE UNIQUE INDEX ns_application_name ON ns_application (name);\n+CREATE UNIQUE INDEX ns_credential_policy_name ON ns_credential_policy (name);\n+CREATE UNIQUE INDEX ns_otp_policy_name ON ns_otp_policy (name);\n+CREATE INDEX ns_user_contact_user_id ON ns_user_contact (user_id);\n+CREATE INDEX ns_user_contact_query ON ns_user_contact (user_id, name, type);\n+CREATE INDEX ns_user_identity_status ON ns_user_identity (status);\n+CREATE INDEX ns_user_identity_created ON ns_user_identity (timestamp_created);\n+CREATE INDEX ns_user_identity_history_user ON ns_user_identity_history (user_id);\n+CREATE INDEX ns_user_identity_history_created ON ns_user_identity_history (timestamp_created);\n+CREATE UNIQUE INDEX ns_role_name ON ns_role (name);\n+CREATE INDEX ns_user_role_user_id ON ns_user_role (user_id);\n+CREATE INDEX ns_user_role_role_id ON ns_user_role (role_id);\n+CREATE INDEX ns_user_alias_user_id ON ns_user_alias (user_id);\n+CREATE UNIQUE INDEX ns_credential_definition_name ON ns_credential_definition (name);\n+CREATE UNIQUE INDEX ns_otp_definition_name ON ns_otp_definition (name);\n+CREATE INDEX ns_credential_storage_user_id ON ns_credential_storage (user_id);\n+CREATE INDEX ns_credential_storage_status ON ns_credential_storage (status);\n+CREATE UNIQUE INDEX ns_credential_storage_query1 ON ns_credential_storage (credential_definition_id, user_name);\n+CREATE UNIQUE INDEX ns_credential_storage_query2 ON ns_credential_storage (user_id, credential_definition_id);\n+CREATE INDEX ns_credential_storage_query3 ON ns_credential_storage (credential_definition_id, status);\n+CREATE INDEX ns_credential_history_user_id ON ns_credential_history (user_id);\n+CREATE INDEX ns_otp_storage_user_id ON ns_otp_storage (user_id);\n+CREATE INDEX ns_otp_storage_operation_id ON ns_otp_storage (operation_id);\n+CREATE INDEX ns_authentication_user_id ON ns_authentication (user_id);\n+CREATE INDEX ns_authentication_operation_id ON ns_authentication (operation_id);\n+CREATE INDEX ns_authentication_timestamp_created ON ns_authentication (timestamp_created);\n+CREATE INDEX ns_audit_log_created ON ns_audit_log (timestamp_created);\n+CREATE UNIQUE INDEX ns_hashing_config_name ON ns_hashing_config (name);\n+CREATE UNIQUE INDEX ns_user_alias_unique ON ns_user_alias (user_id, name);\n+CREATE UNIQUE INDEX ns_user_role_unique ON ns_user_role (user_id, role_id);\n+\n+-- Foreign keys for user identity, to be used only when all user identities are stored in Next Step\n+ALTER TABLE ns_user_prefs ADD FOREIGN KEY ns_user_prefs_fk (user_id) REFERENCES ns_user_identity (user_id);\n+ALTER TABLE ns_operation ADD FOREIGN KEY ns_operation_user_fk (user_id) REFERENCES ns_user_identity (user_id);\n+ALTER TABLE ns_otp_storage ADD FOREIGN KEY ns_otp_user_fk (user_id) REFERENCES ns_user_identity (user_id);\n+ALTER TABLE ns_authentication ADD FOREIGN KEY ns_auth_user_fk (user_id) REFERENCES ns_user_identity (user_id);"
  },
  {
    "sha": "bbefe0f7fa50df488a38465c2f46a619f70943a3",
    "filename": "docs/sql/mysql/drop_schema.sql",
    "status": "modified",
    "additions": 18,
    "deletions": 5,
    "changes": 23,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/mysql/drop_schema.sql",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/mysql/drop_schema.sql",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/docs/sql/mysql/drop_schema.sql?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -2,11 +2,24 @@ DROP TABLE IF EXISTS da_sms_authorization;\n DROP TABLE IF EXISTS da_user_credentials;\n DROP TABLE IF EXISTS wf_afs_config;\n DROP TABLE IF EXISTS wf_operation_session;\n-DROP TABLE IF EXISTS tpp_consent;\n-DROP TABLE IF EXISTS tpp_user_consent;\n-DROP TABLE IF EXISTS tpp_user_consent_history;\n-DROP TABLE IF EXISTS tpp_detail;\n-DROP TABLE IF EXISTS tpp_app_detail;\n+DROP TABLE IF EXISTS ns_audit_log;\n+DROP TABLE IF EXISTS ns_authentication;\n+DROP TABLE IF EXISTS ns_otp_definition;\n+DROP TABLE IF EXISTS ns_otp_storage;\n+DROP TABLE IF EXISTS ns_credential_history;\n+DROP TABLE IF EXISTS ns_credential_storage;\n+DROP TABLE IF EXISTS ns_hashing_config;\n+DROP TABLE IF EXISTS ns_credential_definition;\n+DROP TABLE IF EXISTS ns_hashing_config;\n+DROP TABLE IF EXISTS ns_user_alias;\n+DROP TABLE IF EXISTS ns_user_role;\n+DROP TABLE IF EXISTS ns_role;\n+DROP TABLE IF EXISTS ns_user_identity_history;\n+DROP TABLE IF EXISTS ns_user_contact;\n+DROP TABLE IF EXISTS ns_user_identity;\n+DROP TABLE IF EXISTS ns_otp_policy;\n+DROP TABLE IF EXISTS ns_credential_policy;\n+DROP TABLE IF EXISTS ns_application;\n DROP TABLE IF EXISTS ns_step_definition;\n DROP TABLE IF EXISTS ns_operation_afs;\n DROP TABLE IF EXISTS ns_operation_history;"
  },
  {
    "sha": "92eaa679e86d026a53b6401e1b8e38be5f6277c3",
    "filename": "docs/sql/mysql/initial_data.sql",
    "status": "modified",
    "additions": 18,
    "deletions": 2,
    "changes": 20,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/mysql/initial_data.sql",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/mysql/initial_data.sql",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/docs/sql/mysql/initial_data.sql?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -22,6 +22,8 @@ INSERT INTO ns_auth_method (auth_method, order_number, check_user_prefs, user_pr\n VALUES ('LOGIN_SCA', 8, FALSE, NULL, NULL, TRUE, 5, TRUE, TRUE, 'method.loginSca');\n INSERT INTO ns_auth_method (auth_method, order_number, check_user_prefs, user_prefs_column, user_prefs_default, check_auth_fails, max_auth_fails, has_user_interface, has_mobile_token, display_name_key)\n VALUES ('APPROVAL_SCA', 9, FALSE, NULL, NULL, TRUE, 5, TRUE, TRUE, 'method.approvalSca');\n+INSERT INTO ns_auth_method (auth_method, order_number, check_user_prefs, user_prefs_column, user_prefs_default, check_auth_fails, max_auth_fails, has_user_interface, has_mobile_token, display_name_key)\n+VALUES ('OTP_CODE', 10, FALSE, NULL, NULL, TRUE, 3, TRUE, FALSE, 'method.otpCode');\n \n -- operation configuration\n INSERT INTO ns_operation_config (operation_name, template_version, template_id, mobile_token_enabled, mobile_token_mode) VALUES ('login', 'A', 2, FALSE, '{\"type\":\"2FA\",\"variants\":[\"possession_knowledge\",\"possession_biometry\"]}');\n@@ -30,8 +32,22 @@ INSERT INTO ns_operation_config (operation_name, template_version, template_id,\n INSERT INTO ns_operation_config (operation_name, template_version, template_id, mobile_token_enabled, mobile_token_mode) VALUES ('authorize_payment_sca', 'A', 1, FALSE, '{\"type\":\"2FA\",\"variants\":[\"possession_knowledge\",\"possession_biometry\"]}');\n \n -- organization configuration\n-INSERT INTO ns_organization (organization_id, display_name_key, is_default, order_number) VALUES ('RETAIL', 'organization.retail', TRUE, 1);\n-INSERT INTO ns_organization (organization_id, display_name_key, is_default, order_number) VALUES ('SME', 'organization.sme', FALSE, 2);\n+INSERT INTO ns_organization (organization_id, display_name_key, is_default, order_number, default_credential_name, default_otp_name) VALUES ('RETAIL', 'organization.retail', TRUE, 1, 'RETAIL_CREDENTIAL', 'RETAIL_OTP');\n+INSERT INTO ns_organization (organization_id, display_name_key, is_default, order_number, default_credential_name, default_otp_name) VALUES ('SME', 'organization.sme', FALSE, 2, 'SME_CREDENTIAL', 'SME_OTP');\n+\n+-- Next Step application configuration\n+INSERT INTO ns_application (name, description, status, organization_id, timestamp_created) values ('RETAIL_APP', 'Sample retail application', 'ACTIVE', 'RETAIL', CURRENT_TIMESTAMP);\n+INSERT INTO ns_application (name, description, status, organization_id, timestamp_created) values ('SME_APP', 'Sample SME application', 'ACTIVE', 'SME', CURRENT_TIMESTAMP);\n+\n+-- credential and OTP policy configuration\n+INSERT INTO ns_credential_policy (name, description, status, username_length_min, username_length_max, username_allowed_pattern, credential_length_min, credential_length_max, limit_soft, limit_hard, check_history_count, rotation_enabled, username_gen_algorithm, username_gen_param, credential_gen_algorithm, credential_gen_param, credential_val_param, timestamp_created) values ('CREDENTIAL_POLICY', 'Sample credential policy', 'ACTIVE', 8, 20, '[0-9]+', 8, 40, 3, 5, 3, FALSE, 'RANDOM_DIGITS', '{\"length\": 8}', 'RANDOM_PASSWORD', '{\"length\": 12, \"includeSmallLetters\": true, \"smallLettersCount\": 5, \"includeCapitalLetters\": true, \"capitalLettersCount\": 5, \"includeDigits\": true, \"digitsCount\": 1, \"includeSpecialChars\": true, \"specialCharsCount\": 1}', '{\"includeWhitespaceRule\": true, \"includeUsernameRule\": true, \"includeAllowedCharacterRule\": false, \"allowedChars\": \"\", \"includeAllowedRegexRule\": false, \"allowedRegex\": \".*\", \"includeIllegalCharacterRule\": false, \"illegalChars\": \"\", \"includeIllegalRegexRule\": false, \"illegalRegex\": \"\", \"includeCharacterRule\": true, \"includeSmallLetters\": \"true\", \"smallLettersMin\": 1, \"includeCapitalLetters\": true, \"capitalLettersMin\": 1, \"includeAlphabeticalLetters\": true, \"alphabeticalLettersMin\": 2, \"includeDigits\": true, \"digitsMin\": 1, \"includeSpecialChars\": true, \"specialCharsMin\": 1}', CURRENT_TIMESTAMP);\n+INSERT INTO ns_otp_policy (name, description, status, length, attempt_limit, expiration_time, gen_algorithm, gen_param) values ('OTP_POLICY', 'Sample OTP policy', 'ACTIVE', 8, 3, 300, 'OTP_DATA_DIGEST', '{}');\n+\n+-- credential and OTP definition configuration\n+INSERT INTO ns_credential_definition (name, description, application_id, credential_policy_id, category, status, timestamp_created) values ('RETAIL_CREDENTIAL', 'Sample credential definition for retail', 1, 1, 'PASSWORD', 'ACTIVE', CURRENT_TIMESTAMP);\n+INSERT INTO ns_credential_definition (name, description, application_id, credential_policy_id, category, status, timestamp_created) values ('SME_CREDENTIAL', 'Sample credential definition for SME', 2, 1, 'PASSWORD', 'ACTIVE', CURRENT_TIMESTAMP);\n+INSERT INTO ns_otp_definition (name, description, application_id, otp_policy_id, status, timestamp_created) values ('RETAIL_OTP', 'Sample OTP definition for retail', 1, 1, 'ACTIVE', CURRENT_TIMESTAMP);\n+INSERT INTO ns_otp_definition (name, description, application_id, otp_policy_id, status, timestamp_created) values ('SME_OTP', 'Sample OTP definition for SME', 2, 1, 'ACTIVE', CURRENT_TIMESTAMP);\n \n -- login - init operation -> CONTINUE\n INSERT INTO ns_step_definition (step_definition_id, operation_name, operation_type, request_auth_method, request_auth_step_result, response_priority, response_auth_method, response_result)"
  },
  {
    "sha": "9e5604351d172d0276f63ad028998b41995fe411",
    "filename": "docs/sql/oracle/create_schema.sql",
    "status": "modified",
    "additions": 509,
    "deletions": 204,
    "changes": 713,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/oracle/create_schema.sql",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/oracle/create_schema.sql",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/docs/sql/oracle/create_schema.sql?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -5,294 +5,563 @@ CREATE SEQUENCE \"TPP_DETAIL_SEQ\" MINVALUE 1 MAXVALUE 999999999999999999999999999\n CREATE SEQUENCE \"TPP_USER_CONSENT_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n CREATE SEQUENCE \"TPP_USER_CONSENT_HISTORY_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n CREATE SEQUENCE \"NS_OPERATION_AFS_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_APPLICATION_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_CREDENTIAL_POLICY_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_OTP_POLICY_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_USER_CONTACT_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_USER_IDENTITY_HISTORY_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_ROLE_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_USER_ROLE_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_USER_ALIAS_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_HASHING_CONFIG_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_CREDENTIAL_DEFINITION_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_OTP_DEFINITION_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_CREDENTIAL_HISTORY_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n+CREATE SEQUENCE \"NS_AUDIT_LOG_SEQ\" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE;\n \n -- Table oauth_client_details stores details about OAuth2 client applications.\n -- Every Web Flow client application should have a record in this table.\n -- See: https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/client/JdbcClientDetailsService.java\n CREATE TABLE oauth_client_details (\n-  client_id               VARCHAR(256) PRIMARY KEY,     -- OAuth 2.0 protocol client ID.\n-  resource_ids            VARCHAR(256),                 -- Identifiers of the OAuth 2.0 resource servers.\n-  client_secret           VARCHAR(256),                 -- OAuth 2.0 protocol client secret.\n-  scope                   VARCHAR(256),                 -- OAuth 2.0 scopes, comma-separated values.\n-  authorized_grant_types  VARCHAR(256),                 -- OAuth 2.0 authorization grant types, comma-separated values.\n-  web_server_redirect_uri VARCHAR(256),                 -- OAuth 2.0 redirect URIs, comma-separated values.\n-  authorities             VARCHAR(256),                 -- OAuth 2.0 resource grant authorities.\n-  access_token_validity   INTEGER,                      -- Validity of the OAuth 2.0 access tokens, in seconds.\n-  refresh_token_validity  INTEGER,                      -- Validity of the OAuth 2.0 refresh tokens, in seconds.\n-  additional_information  VARCHAR(4000),                -- Field reserved for additional information about the client.\n-  autoapprove             VARCHAR(256)                  -- Flag indicating if scopes should be automatically approved.\n+  client_id               VARCHAR2(256 CHAR) PRIMARY KEY,     -- OAuth 2.0 protocol client ID.\n+  resource_ids            VARCHAR2(256 CHAR),                 -- Identifiers of the OAuth 2.0 resource servers.\n+  client_secret           VARCHAR2(256 CHAR),                 -- OAuth 2.0 protocol client secret.\n+  scope                   VARCHAR2(256 CHAR),                 -- OAuth 2.0 scopes, comma-separated values.\n+  authorized_grant_types  VARCHAR2(256 CHAR),                 -- OAuth 2.0 authorization grant types, comma-separated values.\n+  web_server_redirect_uri VARCHAR2(256 CHAR),                 -- OAuth 2.0 redirect URIs, comma-separated values.\n+  authorities             VARCHAR2(256 CHAR),                 -- OAuth 2.0 resource grant authorities.\n+  access_token_validity   INTEGER,                            -- Validity of the OAuth 2.0 access tokens, in seconds.\n+  refresh_token_validity  INTEGER,                            -- Validity of the OAuth 2.0 refresh tokens, in seconds.\n+  additional_information  VARCHAR2(4096 CHAR),                -- Field reserved for additional information about the client.\n+  autoapprove             VARCHAR2(256 CHAR)                  -- Flag indicating if scopes should be automatically approved.\n );\n \n -- Table oauth_client_token stores OAuth2 tokens for retrieval by client applications.\n -- See: https://docs.spring.io/spring-security/oauth/apidocs/org/springframework/security/oauth2/client/token/JdbcClientTokenServices.html\n CREATE TABLE oauth_client_token (\n-  authentication_id VARCHAR(256) PRIMARY KEY,           -- Authentication ID related to client token.\n-  token_id          VARCHAR(256),                       -- Token ID.\n-  token             BLOB,                               -- Token value.\n-  user_name         VARCHAR(256),                       -- Username, identification of the user.\n-  client_id         VARCHAR(256)                        -- OAuth 2.0 Client ID.\n+  authentication_id VARCHAR2(256 CHAR) PRIMARY KEY,           -- Authentication ID related to client token.\n+  token_id          VARCHAR2(256 CHAR),                       -- Token ID.\n+  token             BLOB,                                     -- Token value.\n+  user_name         VARCHAR2(256 CHAR),                       -- Username, identification of the user.\n+  client_id         VARCHAR2(256 CHAR)                        -- OAuth 2.0 Client ID.\n );\n \n -- Table oauth_access_token stores OAuth2 access tokens.\n -- See: https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/token/store/JdbcTokenStore.java\n CREATE TABLE oauth_access_token (\n-  authentication_id VARCHAR(256) PRIMARY KEY,           -- Authentication ID related to access token.\n-  token_id          VARCHAR(256),                       -- Token ID.\n-  token             BLOB,                               -- Token value.\n-  user_name         VARCHAR(256),                       -- Username, identification of the user.\n-  client_id         VARCHAR(256),                       -- OAuth 2.0 Client ID.\n-  authentication    BLOB,                               -- Encoded authentication details.\n-  refresh_token     VARCHAR(256)                        -- Refresh token ID.\n+  authentication_id VARCHAR2(256 CHAR) PRIMARY KEY,           -- Authentication ID related to access token.\n+  token_id          VARCHAR2(256 CHAR),                       -- Token ID.\n+  token             BLOB,                                     -- Token value.\n+  user_name         VARCHAR2(256 CHAR),                       -- Username, identification of the user.\n+  client_id         VARCHAR2(256 CHAR),                       -- OAuth 2.0 Client ID.\n+  authentication    BLOB,                                     -- Encoded authentication details.\n+  refresh_token     VARCHAR2(256 CHAR)                        -- Refresh token ID.\n );\n \n -- Table oauth_access_token stores OAuth2 refresh tokens.\n -- See: https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/token/store/JdbcTokenStore.java\n CREATE TABLE oauth_refresh_token (\n-  token_id       VARCHAR(256),                          -- Refresh token ID.\n-  token          BLOB,                                  -- Token value.\n-  authentication BLOB                                   -- Encoded authentication details.\n+  token_id       VARCHAR2(256 CHAR),                          -- Refresh token ID.\n+  token          BLOB,                                        -- Token value.\n+  authentication BLOB                                         -- Encoded authentication details.\n );\n \n -- Table oauth_code stores data for the OAuth2 authorization code grant.\n -- See: https://github.com/spring-projects/spring-security-oauth/blob/master/spring-security-oauth2/src/main/java/org/springframework/security/oauth2/provider/code/JdbcAuthorizationCodeServices.java\n CREATE TABLE oauth_code (\n-  code           VARCHAR(255),                          -- OAuth 2.0 protocol \"codes\".\n-  authentication BLOB                                   -- Encoded authentication details.\n+  code           VARCHAR2(256 CHAR),                          -- OAuth 2.0 protocol \"codes\".\n+  authentication BLOB                                         -- Encoded authentication details.\n+);\n+\n+-- Table wf_operation_session maps operations to HTTP sessions.\n+-- Table is needed for handling of concurrent operations.\n+CREATE TABLE wf_operation_session (\n+  operation_id              VARCHAR2(256 CHAR) PRIMARY KEY NOT NULL,      -- Operation ID.\n+  http_session_id           VARCHAR2(256 CHAR) NOT NULL,                  -- HTTP session ID related to given operation.\n+  operation_hash            VARCHAR2(256 CHAR),                           -- Hash of the operation ID.\n+  websocket_session_id      VARCHAR2(32 CHAR),                            -- WebSocket Session ID.\n+  client_ip_address         VARCHAR2(32 CHAR),                            -- Client IP address, if available.\n+  result                    VARCHAR2(32 CHAR) NOT NULL,                   -- Result of the operation, stored in the session.\n+  timestamp_created         TIMESTAMP                                     -- Timestamp of the record creation.\n+);\n+\n+-- Table wf_afs_config is used to configure anti-fraud system parameters.\n+CREATE TABLE wf_afs_config (\n+  config_id                 VARCHAR2(256 CHAR) PRIMARY KEY NOT NULL,      -- AFS config ID.\n+  js_snippet_url            VARCHAR2(256 CHAR) NOT NULL,                  -- URL of the AFS JavaScript snippet (relative to application or absolute).\n+  parameters                CLOB                                          -- Additional AFS snippet parameters.\n+);\n+\n+-- Table wf_certificate_verification is used for storing information about verified client TLS certificates.\n+CREATE TABLE wf_certificate_verification (\n+  operation_id               VARCHAR2(256 CHAR) NOT NULL,                 -- Operation ID associated with the certificate verification.\n+  auth_method                VARCHAR2(32 CHAR) NOT NULL,                  -- Authentication method in which the certificate authentication was used.\n+  client_certificate_issuer  VARCHAR2(4096 CHAR) NOT NULL,                -- Certificate attribute representing the certificate issuer.\n+  client_certificate_subject VARCHAR2(4096 CHAR) NOT NULL,                -- Certificate attribute representing the certificate subject.\n+  client_certificate_sn      VARCHAR2(256 CHAR) NOT NULL,                 -- Certificate attribute representing the certificate serial number.\n+  operation_data             CLOB NOT NULL,                               -- Operation data that were included in the certificate authentication request.\n+  timestamp_verified         TIMESTAMP NOT NULL,                          -- Timestamp of the certificate verification.\n+  CONSTRAINT wf_certificate_verification_pk PRIMARY KEY (operation_id, auth_method)\n );\n \n -- Table ns_auth_method stores configuration of authentication methods.\n -- Data in this table needs to be loaded before Web Flow is started.\n CREATE TABLE ns_auth_method (\n-  auth_method        VARCHAR(32) PRIMARY KEY NOT NULL,  -- Name of the authentication method: APPROVAL_SCA, CONSENT, INIT, LOGIN_SCA, POWERAUTH_TOKEN, SHOW_OPERATION_DETAIL, SMS_KEY, USER_ID_ASSIGN, USERNAME_PASSWORD_AUTH\n-  order_number       INTEGER NOT NULL,                  -- Order of the authentication method, incrementing value, starts with 1.\n-  check_user_prefs   NUMBER(1) DEFAULT 0 NOT NULL,      -- Indication if the authentication method requires checking the user preference first.\n-  user_prefs_column  INTEGER,                           -- In case the previous column is 'true', this is pointer to the user preferences configuration column index.\n-  user_prefs_default NUMBER(1) DEFAULT 0,               -- Default value of the user preferences, in case the per-user preference is not found.\n-  check_auth_fails   NUMBER(1) DEFAULT 0 NOT NULL,      -- Indication if the methods can fail, and hence the fail count must be checked.\n-  max_auth_fails     INTEGER,                           -- Maximum allowed number of authentication fails.\n-  has_user_interface NUMBER(1) DEFAULT 0,               -- Indication of if the given method has any user interface in the web flow.\n-  has_mobile_token   NUMBER(1) DEFAULT 0,               -- Indication of if the given authentication method has mobile token as a part of the flow.\n-  display_name_key   VARCHAR(32)                        -- Localization key to the display name of the authentication method.\n-);\n-\n--- Table ns_user_prefs stores user preferences.\n--- Status of authentication methods is stored in this table per user (methods can be enabled or disabled).\n-CREATE TABLE ns_user_prefs (\n-  user_id       VARCHAR(256) PRIMARY KEY NOT NULL,      -- User ID.\n-  auth_method_1 NUMBER(1) DEFAULT 0,                    -- Flag indicating if \"authentication method 1\" is enabled.\n-  auth_method_2 NUMBER(1) DEFAULT 0,                    -- Flag indicating if \"authentication method 2\" is enabled.\n-  auth_method_3 NUMBER(1) DEFAULT 0,                    -- Flag indicating if \"authentication method 3\" is enabled.\n-  auth_method_4 NUMBER(1) DEFAULT 0,                    -- Flag indicating if \"authentication method 4\" is enabled.\n-  auth_method_5 NUMBER(1) DEFAULT 0,                    -- Flag indicating if \"authentication method 5\" is enabled.\n-  auth_method_1_config VARCHAR(256),                    -- Configuration for \"authentication method 1\".\n-  auth_method_2_config VARCHAR(256),                    -- Configuration for \"authentication method 2\".\n-  auth_method_3_config VARCHAR(256),                    -- Configuration for \"authentication method 3\".\n-  auth_method_4_config VARCHAR(256),                    -- Configuration for \"authentication method 4\".\n-  auth_method_5_config VARCHAR(256)                     -- Configuration for \"authentication method 5\".\n+  auth_method        VARCHAR2(32 CHAR) PRIMARY KEY NOT NULL,  -- Name of the authentication method: APPROVAL_SCA, CONSENT, INIT, LOGIN_SCA, POWERAUTH_TOKEN, SHOW_OPERATION_DETAIL, SMS_KEY, USER_ID_ASSIGN, USERNAME_PASSWORD_AUTH\n+  order_number       INTEGER NOT NULL,                        -- Order of the authentication method, incrementing value, starts with 1.\n+  check_user_prefs   NUMBER(1) DEFAULT 0 NOT NULL,            -- Indication if the authentication method requires checking the user preference first.\n+  user_prefs_column  INTEGER,                                 -- In case the previous column is 'true', this is pointer to the user preferences configuration column index.\n+  user_prefs_default NUMBER(1) DEFAULT 0,                     -- Default value of the user preferences, in case the per-user preference is not found.\n+  check_auth_fails   NUMBER(1) DEFAULT 0 NOT NULL,            -- Indication if the methods can fail, and hence the fail count must be checked.\n+  max_auth_fails     INTEGER,                                 -- Maximum allowed number of authentication fails.\n+  has_user_interface NUMBER(1) DEFAULT 0,                     -- Indication of if the given method has any user interface in the web flow.\n+  has_mobile_token   NUMBER(1) DEFAULT 0,                     -- Indication of if the given authentication method has mobile token as a part of the flow.\n+  display_name_key   VARCHAR2(32 CHAR)                        -- Localization key to the display name of the authentication method.\n );\n \n -- Table ns_operation_config stores configuration of operations.\n -- Each operation type (defined by operation_name) has a related mobile token template and configuration of signatures.\n CREATE TABLE ns_operation_config (\n-  operation_name            VARCHAR(32) PRIMARY KEY NOT NULL,   -- Name of the operation, for example \"login\" or \"approve_payment\".\n-  template_version          VARCHAR(1) NOT NULL,                -- Version of the template, used for data signing base.\n-  template_id               INTEGER NOT NULL,                   -- ID of the template, used for data signing base.\n-  mobile_token_enabled      NUMBER(1) DEFAULT 0 NOT NULL,       -- Flag indicating if the mobile token is enabled for this operation type.\n-  mobile_token_mode         VARCHAR(256) NOT NULL,              -- Configuration of mobile token for this operation, for example, if 1FA or 2FA is supported, and which 2FA variants. The field contains a serialized JSON with configuration.\n-  afs_enabled               NUMBER(1) DEFAULT 0 NOT NULL,       -- Flag indicating if AFS system is enabled.\n-  afs_config_id             VARCHAR(256)                        -- Configuration of AFS system.\n+  operation_name            VARCHAR2(32 CHAR) PRIMARY KEY NOT NULL,   -- Name of the operation, for example \"login\" or \"approve_payment\".\n+  template_version          VARCHAR2(1 CHAR) NOT NULL,                -- Version of the template, used for data signing base.\n+  template_id               INTEGER NOT NULL,                         -- ID of the template, used for data signing base.\n+  mobile_token_enabled      NUMBER(1) DEFAULT 0 NOT NULL,             -- Flag indicating if the mobile token is enabled for this operation type.\n+  mobile_token_mode         VARCHAR2(256 CHAR) NOT NULL,              -- Configuration of mobile token for this operation, for example, if 1FA or 2FA is supported, and which 2FA variants. The field contains a serialized JSON with configuration.\n+  afs_enabled               NUMBER(1) DEFAULT 0 NOT NULL,             -- Flag indicating if AFS system is enabled.\n+  afs_config_id             VARCHAR2(256 CHAR),                       -- Configuration of AFS system.\n+  CONSTRAINT ns_operation_afs_fk FOREIGN KEY (afs_config_id) REFERENCES wf_afs_config (config_id)\n );\n \n -- Table ns_organization stores definitions of organizations related to the operations.\n -- At least one default organization must be configured.\n -- Data in this table needs to be loaded before Web Flow is started.\n CREATE TABLE ns_organization (\n-  organization_id          VARCHAR(256) PRIMARY KEY NOT NULL,   -- ID of organization.\n-  display_name_key         VARCHAR(256),                        -- Localization key for the organization display name.\n-  is_default               NUMBER(1) DEFAULT 0 NOT NULL,        -- Flag indicating if this organization is the default.\n-  order_number             INTEGER NOT NULL                     -- Ordering column for this organization, incrementing value, starts with 1.\n+  organization_id          VARCHAR2(256 CHAR) PRIMARY KEY NOT NULL,   -- ID of organization.\n+  display_name_key         VARCHAR2(256 CHAR),                        -- Localization key for the organization display name.\n+  is_default               NUMBER(1) DEFAULT 0 NOT NULL,              -- Flag indicating if this organization is the default.\n+  order_number             INTEGER NOT NULL,                          -- Ordering column for this organization, incrementing value, starts with 1.\n+  default_credential_name  VARCHAR2(256 CHAR),                        -- Default name of credential definition for authentication using Next Step.\n+  default_otp_name         VARCHAR2(256 CHAR)                         -- Default name of OTP definition for authentication using Next Step.\n+);\n+\n+-- Table ns_step_definition stores definitions of authentication/authorization steps.\n+-- Data in this table needs to be loaded before Web Flow is started.\n+CREATE TABLE ns_step_definition (\n+  step_definition_id       INTEGER PRIMARY KEY NOT NULL,                  -- Step definition ID.\n+  operation_name           VARCHAR2(32 CHAR) NOT NULL,                    -- Operation name for which this step definition is valid.\n+  operation_type           VARCHAR2(32 CHAR) NOT NULL,                    -- Type of the operation change: CREATE or UPDATE\n+  request_auth_method      VARCHAR2(32 CHAR),                             -- Operation authentication method that was selected by the user or developer.\n+  request_auth_step_result VARCHAR2(32 CHAR),                             -- Result of the authentication method execution: CONFIRMED, CANCELED, AUTH_METHOD_FAILED, AUTH_FAILED\n+  response_priority        INTEGER NOT NULL,                              -- Response priority (ordering column).\n+  response_auth_method     VARCHAR2(32 CHAR),                             -- Response with the authentication method that should be applied next.\n+  response_result          VARCHAR2(32 CHAR) NOT NULL,                    -- Result of the operation: CONTINUE, FAILED, or DONE\n+  CONSTRAINT ns_step_request_auth_method_fk FOREIGN KEY (request_auth_method) REFERENCES ns_auth_method (auth_method),\n+  CONSTRAINT ns_step_response_auth_method_fk FOREIGN KEY (response_auth_method) REFERENCES ns_auth_method (auth_method)\n+);\n+\n+-- Table ns_application stores Next Step applications.\n+CREATE TABLE ns_application (\n+  application_id         NUMBER(19,0) NOT NULL PRIMARY KEY,       -- Next Step application ID (autogenerated).\n+  name                   VARCHAR2(256 CHAR) NOT NULL,             -- Application name used for identification.\n+  description            VARCHAR2(256 CHAR),                      -- Description of the application.\n+  status                 VARCHAR2(32 CHAR) NOT NULL,              -- Application status: ACTIVE, REMOVED.\n+  organization_id        VARCHAR2(256 CHAR),                      -- Organization this application belongs to.\n+  timestamp_created      TIMESTAMP,                               -- Timestamp when application was created.\n+  timestamp_last_updated TIMESTAMP,                               -- Timestamp when application was last updated.\n+  CONSTRAINT ns_application_organization_fk FOREIGN KEY (organization_id) REFERENCES ns_organization (organization_id)\n+);\n+\n+-- Table ns_credential_policy stores credential policies.\n+CREATE TABLE ns_credential_policy (\n+  credential_policy_id       NUMBER(19,0) NOT NULL PRIMARY KEY,             -- Credential policy ID (autogenerated).\n+  name                       VARCHAR2(256 CHAR) NOT NULL,                   -- Credential policy name used for identification.\n+  description                VARCHAR2(256 CHAR),                            -- Description of the credential policy.\n+  status                     VARCHAR2(32 CHAR) NOT NULL,                    -- Credential policy status: ACTIVE, REMOVED.\n+  username_length_min        NUMBER(10,0),                                  -- Minimum length of username.\n+  username_length_max        NUMBER(10,0),                                  -- Maximum length of username.\n+  username_allowed_pattern   VARCHAR2(256 CHAR),                            -- Allowed pattern for username (regular expression).\n+  credential_length_min      NUMBER(10,0),                                  -- Minimum length of credential value.\n+  credential_length_max      NUMBER(10,0),                                  -- Maximum length of credential value.\n+  limit_soft                 NUMBER(10,0),                                  -- Soft limit of failed attempts.\n+  limit_hard                 NUMBER(10,0),                                  -- Hard limit of failed attempts.\n+  check_history_count        NUMBER(10,0) DEFAULT 0 NOT NULL,               -- Number of historical credential values to check.\n+  rotation_enabled           NUMBER(1) DEFAULT 0 NOT NULL,                  -- Whether credential rotation is enabled.\n+  rotation_days              NUMBER(10,0),                                  -- Number of days for credential rotation.\n+  username_gen_algorithm     VARCHAR2(256 CHAR) DEFAULT 'DEFAULT' NOT NULL, -- Algorithm used for generating the username.\n+  username_gen_param         VARCHAR2(4096 CHAR) NOT NULL,                  -- Parameters used when generating the username.\n+  credential_gen_algorithm   VARCHAR2(256 CHAR) DEFAULT 'DEFAULT' NOT NULL, -- Algorithm used for generating the credential.\n+  credential_gen_param       VARCHAR2(4096 CHAR) NOT NULL,                  -- Parameters used when generating the credential.\n+  credential_val_param       VARCHAR2(4096 CHAR) NOT NULL,                  -- Parameters used when validating the credential.\n+  timestamp_created          TIMESTAMP,                                     -- Timestamp when policy was created.\n+  timestamp_last_updated     TIMESTAMP                                      -- Timestamp when policy was last updated.\n+);\n+\n+-- Table ns_credential_policy stores one time password policies.\n+CREATE TABLE ns_otp_policy (\n+  otp_policy_id          NUMBER(19,0) NOT NULL PRIMARY KEY,                 -- One time password policy ID (autogenerated).\n+  name                   VARCHAR2(256 CHAR) NOT NULL,                       -- One time password policy name used for identification.\n+  description            VARCHAR2(256 CHAR),                                -- Description of the one time password policy.\n+  status                 VARCHAR2(32 CHAR) NOT NULL,                        -- One time password policy status: ACTIVE, REMOVED.\n+  length                 NUMBER(10,0) NOT NULL,                             -- One time password length.\n+  attempt_limit          NUMBER(10,0),                                      -- Maximum number of authentication attempts.\n+  expiration_time        NUMBER(10,0),                                      -- One time password expiration time.\n+  gen_algorithm          VARCHAR2(256 CHAR) DEFAULT 'DEFAULT' NOT NULL,     -- Algorithm used for generating the one time password.\n+  gen_param              VARCHAR2(4096 CHAR) NOT NULL,                      -- Parameters used when generating the OTP.\n+  timestamp_created      TIMESTAMP,                                         -- Timestamp when policy was created.\n+  timestamp_last_updated TIMESTAMP                                          -- Timestamp when policy was last updated.\n+);\n+\n+-- Table ns_user_identity stores user identities.\n+CREATE TABLE ns_user_identity (\n+  user_id                VARCHAR2(256 CHAR) NOT NULL PRIMARY KEY,           -- User identity identifier (not autogenerated).\n+  status                 VARCHAR2(32 CHAR) NOT NULL,                        -- User identity status: ACTIVE, BLOCKED, REMOVED.\n+  extras                 VARCHAR2(256 CHAR),                                -- Extra attributes with data related to user identity.\n+  timestamp_created      TIMESTAMP,                                         -- Timestamp when user identity was created.\n+  timestamp_last_updated TIMESTAMP                                          -- Timestamp when user identity was last updated.\n+);\n+\n+-- Table ns_user_contact stores contact information for user identities.\n+CREATE TABLE ns_user_contact (\n+  user_contact_id        NUMBER(19,0) NOT NULL PRIMARY KEY,                 -- User contact identifier (autogenerated).\n+  user_id                VARCHAR2(256 CHAR) NOT NULL,                       -- User identity identifier.\n+  name                   VARCHAR2(256 CHAR) NOT NULL,                       -- User contact name used for identification.\n+  type                   VARCHAR2(32 CHAR) NOT NULL,                        -- User contact type: PHONE, EMAIL, OTHER.\n+  value                  VARCHAR2(256 CHAR) NOT NULL,                       -- User contact value.\n+  is_primary             NUMBER(1) DEFAULT 0 NOT NULL,                      -- Whether contact is primary.\n+  timestamp_created      TIMESTAMP,                                         -- Timestamp when contact was created.\n+  timestamp_last_updated TIMESTAMP,                                         -- Timestamp when contact was last updated.\n+  CONSTRAINT ns_user_contact_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id)\n+);\n+\n+-- Table ns_user_identity stores history for user identities.\n+CREATE TABLE ns_user_identity_history (\n+  user_identity_history_id NUMBER(19,0) NOT NULL PRIMARY KEY,               -- User identity history identifier (autogenerated).\n+  user_id                  VARCHAR2(256 CHAR) NOT NULL,                     -- User identity identifier.\n+  status                   VARCHAR2(32 CHAR) NOT NULL,                      -- User identity status: ACTIVE, BLOCKED, REMOVED.\n+  roles                    VARCHAR2(256 CHAR),                              -- Assigned user roles.\n+  extras                   VARCHAR2(256 CHAR),                              -- Extra attributes with data related to user identity.\n+  timestamp_created        TIMESTAMP,                                       -- Timestamp when user identity snapshot was created.\n+  CONSTRAINT ns_user_identity_history_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id)\n+);\n+\n+-- Table ns_role stores user role definitions.\n+CREATE TABLE ns_role (\n+  role_id                NUMBER(19,0) NOT NULL PRIMARY KEY,                 -- Role identifier (autogenerated).\n+  name                   VARCHAR2(256 CHAR) NOT NULL,                       -- Role name used for identification.\n+  description            VARCHAR2(256 CHAR),                                -- Description of role.\n+  timestamp_created      TIMESTAMP,                                         -- Timestamp when role was created.\n+  timestamp_last_updated TIMESTAMP                                          -- Timestamp when role was last updated.\n+);\n+\n+-- Table ns_user_role stores assignment of roles to user identities.\n+CREATE TABLE ns_user_role (\n+  user_role_id             NUMBER(19,0) NOT NULL PRIMARY KEY,               -- User role identifier (autogenerated).\n+  user_id                  VARCHAR2(256 CHAR) NOT NULL,                     -- User identity identifier.\n+  role_id                  NUMBER(19,0) NOT NULL,                           -- Role identifier.\n+  status                   VARCHAR2(32 CHAR) NOT NULL,                      -- User role status: ACTIVE, REMOVED.\n+  timestamp_created        TIMESTAMP,                                       -- Timestamp when user role was created.\n+  timestamp_last_updated   TIMESTAMP,                                       -- Timestamp when user role was last updated.\n+  CONSTRAINT ns_role_identity_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id),\n+  CONSTRAINT ns_user_role_fk FOREIGN KEY (role_id) REFERENCES ns_role (role_id)\n+);\n+\n+-- Table ns_user_alias stores user aliases.\n+CREATE TABLE ns_user_alias (\n+  user_alias_id            NUMBER(19,0) NOT NULL PRIMARY KEY,               -- User alias identifier (autogenerated).\n+  user_id                  VARCHAR2(256 CHAR) NOT NULL,                     -- User identity identifier.\n+  name                     VARCHAR2(256 CHAR) NOT NULL,                     -- User alias name used for identification.\n+  value                    VARCHAR2(256 CHAR) NOT NULL,                     -- User alias value.\n+  status                   VARCHAR2(32 CHAR) NOT NULL,                      -- User alias status: ACTIVE, REMOVED.\n+  extras                   VARCHAR2(256 CHAR),                              -- Extra attributes with data related to user alias.\n+  timestamp_created        TIMESTAMP,                                       -- Timestamp when user alias was created.\n+  timestamp_last_updated   TIMESTAMP,                                       -- Timestamp when user alias was last updated.\n+  CONSTRAINT ns_user_alias_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id)\n+);\n+\n+-- Table ns_hashing_config stores configuration of hashing algorithms.\n+CREATE TABLE ns_hashing_config (\n+  hashing_config_id        NUMBER(19,0) NOT NULL PRIMARY KEY,               -- Hashing configuration identifier (autogenerated).\n+  name                     VARCHAR2(256 CHAR) NOT NULL,                     -- Hashing configuration name used for identification.\n+  algorithm                VARCHAR2(256 CHAR) NOT NULL,                     -- Hashing algorithm name.\n+  status                   VARCHAR2(32 CHAR) NOT NULL,                      -- Hashing configuration status: ACTIVE, REMOVED.\n+  parameters               VARCHAR2(256 CHAR),                              -- Hashing algorithm parameters.\n+  timestamp_created        TIMESTAMP                                        -- Timestamp when hashing configuration was created.\n+);\n+\n+-- Table ns_credential_definition stores definitions of credentials with reference to credential policies and applications.\n+CREATE TABLE ns_credential_definition (\n+  credential_definition_id   NUMBER(19,0) NOT NULL PRIMARY KEY,               -- Credential definition identifier (autogenerated).\n+  name                       VARCHAR2(256 CHAR) NOT NULL,                     -- Credential definition name used for identification.\n+  description                VARCHAR2(256 CHAR),                              -- Description of the credential definition.\n+  application_id             NUMBER(19,0) NOT NULL,                           -- Application identifier.\n+  credential_policy_id       NUMBER(19,0) NOT NULL,                           -- Credential policy identifier.\n+  category                   VARCHAR2(32 CHAR) NOT NULL,                      -- Credential category: PASSWORD, PIN, OTHER.\n+  encryption_enabled         NUMBER(1) DEFAULT 0 NOT NULL,                    -- Whether encryption of stored credentials is enabled.\n+  encryption_algorithm       VARCHAR2(256 CHAR),                              -- Algorithm used for stored credential encryption.\n+  hashing_enabled            NUMBER(1) DEFAULT 0 NOT NULL,                    -- Whether credential hashing is enabled.\n+  hashing_config_id          NUMBER(19,0),                                    -- Algorithm used for credential hashing.\n+  e2e_encryption_enabled     NUMBER(1) DEFAULT 0 NOT NULL,                    -- Whether end to end encryption of credential is enabled.\n+  data_adapter_proxy_enabled NUMBER(1) DEFAULT 0 NOT NULL,                    -- Whether credential API calls should be proxied through Data Adapter.\n+  status                     VARCHAR2(32 CHAR) NOT NULL,                      -- Credential definition status: ACTIVE, REMOVED.\n+  timestamp_created          TIMESTAMP,                                       -- Timestamp when credential definition was created.\n+  timestamp_last_updated     TIMESTAMP,                                       -- Timestamp when credential definition was last updated.\n+  CONSTRAINT ns_credential_application_fk FOREIGN KEY (application_id) REFERENCES ns_application (application_id),\n+  CONSTRAINT ns_credential_policy_fk FOREIGN KEY (credential_policy_id) REFERENCES ns_credential_policy (credential_policy_id),\n+  CONSTRAINT ns_credential_hash_fk FOREIGN KEY (hashing_config_id) REFERENCES ns_hashing_config (hashing_config_id)\n+);\n+\n+-- Table ns_otp_definition stores definitions of one time passwords with reference to credential policies and applications.\n+CREATE TABLE ns_otp_definition (\n+  otp_definition_id          NUMBER(19,0) NOT NULL PRIMARY KEY,               -- One time password definition identifier (autogenerated).\n+  name                       VARCHAR2(256 CHAR) NOT NULL,                     -- One time password definition name used for identification.\n+  description                VARCHAR2(256 CHAR),                              -- Description of the one time password definition.\n+  application_id             NUMBER(19,0) NOT NULL,                           -- Application identifier.\n+  otp_policy_id              NUMBER(19,0) NOT NULL,                           -- One time password policy identifier.\n+  encryption_enabled         NUMBER(1) DEFAULT 0 NOT NULL,                    -- Whether encryption of stored one time passwords is enabled.\n+  encryption_algorithm       VARCHAR2(256 CHAR),                              -- Algorithm used for stored one time password encryption.\n+  data_adapter_proxy_enabled NUMBER(1) DEFAULT 0 NOT NULL,                    -- Whether one time password API calls should be proxied through Data Adapter.\n+  status                     VARCHAR2(32 CHAR) NOT NULL,                      -- One time password definition status: ACTIVE, REMOVED.\n+  timestamp_created          TIMESTAMP,                                       -- Timestamp when one time password definition was created.\n+  timestamp_last_updated     TIMESTAMP,                                       -- Timestamp when one time password definition was last updated.\n+  CONSTRAINT ns_otp_application_fk FOREIGN KEY (application_id) REFERENCES ns_application (application_id),\n+  CONSTRAINT ns_otp_policy_fk FOREIGN KEY (otp_policy_id) REFERENCES ns_otp_policy (otp_policy_id)\n+);\n+\n+-- Table ns_credential_storage stores credential values, counters and other data related to credentials.\n+CREATE TABLE ns_credential_storage (\n+  credential_id                    VARCHAR2(256 CHAR) NOT NULL PRIMARY KEY, -- Credential identifier (generated by application as UUID).\n+  credential_definition_id         NUMBER(19,0) NOT NULL,                   -- Credential definition identifier.\n+  user_id                          VARCHAR2(256 CHAR) NOT NULL,             -- User identity identifier.\n+  type                             VARCHAR2(32 CHAR) NOT NULL,              -- Credential type: PERMANENT, TEMPORARY.\n+  user_name                        VARCHAR2(256 CHAR),                      -- Username.\n+  value                            VARCHAR2(256 CHAR) NOT NULL,             -- Credential value.\n+  status                           VARCHAR2(32 CHAR) NOT NULL,              -- Credential status: ACTIVE, BLOCKED_TEMPORARY, BLOCKED_PERMANENT, REMOVED.\n+  attempt_counter                  NUMBER(19,0) DEFAULT 0 NOT NULL,         -- Attempt counter for both successful and failed attempts.\n+  failed_attempt_counter_soft      NUMBER(19,0) DEFAULT 0 NOT NULL,         -- Soft failed attempt counter.\n+  failed_attempt_counter_hard      NUMBER(19,0) DEFAULT 0 NOT NULL,         -- Hard failed attempt counter.\n+  timestamp_created                TIMESTAMP,                               -- Timestamp when credential was created.\n+  timestamp_expires                TIMESTAMP,                               -- Timestamp when credential expires.\n+  timestamp_blocked                TIMESTAMP,                               -- Timestamp when credential was blocked.\n+  timestamp_last_updated           TIMESTAMP,                               -- Timestamp when credential was last updated.\n+  timestamp_last_credential_change TIMESTAMP,                               -- Timestamp when credential value was last changed.\n+  CONSTRAINT ns_credential_definition_fk FOREIGN KEY (credential_definition_id) REFERENCES ns_credential_definition (credential_definition_id),\n+  CONSTRAINT ns_credential_user_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id)\n+);\n+\n+-- Table ns_credential_history stores historical values of credentials.\n+CREATE TABLE ns_credential_history (\n+  credential_history_id       NUMBER(19,0) NOT NULL PRIMARY KEY,            -- Credential history identifier (autogenerated).\n+  credential_definition_id    NUMBER(19,0) NOT NULL,                        -- Credential identifier.\n+  user_id                     VARCHAR2(256 CHAR) NOT NULL,                  -- User identity identifier.\n+  user_name                   VARCHAR2(256 CHAR),                           -- Username.\n+  value                       VARCHAR2(256 CHAR) NOT NULL,                  -- Credential value.\n+  timestamp_created           TIMESTAMP,                                    -- Timestamp when credential was created.\n+  CONSTRAINT ns_credential_history_definition_fk FOREIGN KEY (credential_definition_id) REFERENCES ns_credential_definition (credential_definition_id),\n+  CONSTRAINT ns_credential_history_user_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id)\n+);\n+\n+-- Table ns_otp_storage stores one time password values, counters and other data related to one time passwords.\n+CREATE TABLE ns_otp_storage (\n+  otp_id                      VARCHAR2(256 CHAR) NOT NULL PRIMARY KEY,      -- One time password identifier (generated by application as UUID).\n+  otp_definition_id           NUMBER(19,0) NOT NULL,                        -- One time password definition identifier.\n+  user_id                     VARCHAR2(256 CHAR),                           -- User identifier.\n+  credential_definition_id    NUMBER(19,0),                                 -- Credential definition identifier used when updating failed counter.\n+  operation_id                VARCHAR2(256 CHAR),                           -- Operation identifier.\n+  value                       VARCHAR2(256 CHAR),                           -- One time password value.\n+  salt                        BLOB,                                         -- Cryptographic salt used when generating one time password.\n+  status                      VARCHAR2(32 CHAR) NOT NULL,                   -- One time password status: ACTIVE, USED, BLOCKED, REMOVED.\n+  otp_data                    CLOB,                                         -- Data used for generating one time password.\n+  attempt_counter             NUMBER(19,0) DEFAULT 0 NOT NULL,              -- One time password attempt counter.\n+  failed_attempt_counter      NUMBER(19,0) DEFAULT 0 NOT NULL,              -- One time password failed attempt counter.\n+  timestamp_created           TIMESTAMP,                                    -- Timestamp when one time password was created.\n+  timestamp_verified          TIMESTAMP,                                    -- Timestamp when one time password was verified.\n+  timestamp_blocked           TIMESTAMP,                                    -- Timestamp when one time password was blocked.\n+  timestamp_expires           TIMESTAMP,                                    -- Timestamp when one time password expires.\n+  CONSTRAINT ns_otp_definition_fk FOREIGN KEY (otp_definition_id) REFERENCES ns_otp_definition (otp_definition_id),\n+  CONSTRAINT ns_otp_user_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id)\n );\n \n -- Table ns_operation stores details of Web Flow operations.\n -- Only the last status is stored in this table, changes of operations are stored in table ns_operation_history.\n CREATE TABLE ns_operation (\n-  operation_id                  VARCHAR(256) PRIMARY KEY NOT NULL,  -- ID of a specific operation instance, random value in the UUID format or any value that external system decides to set as the operation ID when creating the operation.\n-  operation_name                VARCHAR(32) NOT NULL,               -- Name of the operation, represents a type of the operation, for example, \"login\" or \"approve_payment\".\n-  operation_data                CLOB NOT NULL,                      -- Signing data of the operation.\n-  operation_form_data           CLOB,                               -- Structured data of the operation that are displayed to the end user.\n-  application_id                VARCHAR(256),                       -- ID of the application that initiated the operation, usually OAuth 2.0 client ID.\n-  application_name              VARCHAR(256),                       -- Displayable name of the application that initiated the operation.\n-  application_description       VARCHAR(256),                       -- Displayable description of the application that initiated the operation.\n-  application_original_scopes   VARCHAR(256),                       -- Original OAuth 2.0 scopes used by the application that initiated the operation.\n-  application_extras            CLOB,                               -- Any additional information related to the application that initiated the operation.\n-  user_id                       VARCHAR(256),                       -- Associated user ID.\n-  organization_id               VARCHAR(256),                       -- Associated organization ID.\n-  user_account_status           VARCHAR(32),                        -- Status of the user account while initiated the operation - ACTIVE, NOT_ACTIVE.\n-  external_transaction_id       VARCHAR(256),                       -- External transaction ID, for example ID of a payment in a transaction system.\n-  result                        VARCHAR(32),                        -- Operation result - CONTINUE, FAILED, DONE.\n-  timestamp_created             TIMESTAMP,                          -- Timestamp when this operation was created.\n-  timestamp_expires             TIMESTAMP,                          -- Timestamp of the expiration of the operation.\n-  CONSTRAINT operation_organization_fk FOREIGN KEY (organization_id) REFERENCES ns_organization (organization_id)\n+  operation_id                  VARCHAR2(256 CHAR) PRIMARY KEY NOT NULL,  -- ID of a specific operation instance, random value in the UUID format or any value that external system decides to set as the operation ID when creating the operation.\n+  operation_name                VARCHAR2(32 CHAR) NOT NULL,               -- Name of the operation, represents a type of the operation, for example, \"login\" or \"approve_payment\".\n+  operation_data                CLOB NOT NULL,                            -- Signing data of the operation.\n+  operation_form_data           CLOB,                                     -- Structured data of the operation that are displayed to the end user.\n+  application_id                VARCHAR2(256 CHAR),                       -- ID of the application that initiated the operation, usually OAuth 2.0 client ID.\n+  application_name              VARCHAR2(256 CHAR),                       -- Displayable name of the application that initiated the operation.\n+  application_description       VARCHAR2(256 CHAR),                       -- Displayable description of the application that initiated the operation.\n+  application_original_scopes   VARCHAR2(256 CHAR),                       -- Original OAuth 2.0 scopes used by the application that initiated the operation.\n+  application_extras            CLOB,                                     -- Any additional information related to the application that initiated the operation.\n+  user_id                       VARCHAR2(256 CHAR),                       -- Associated user ID.\n+  organization_id               VARCHAR2(256 CHAR),                       -- Associated organization ID.\n+  user_account_status           VARCHAR2(32 CHAR),                        -- Status of the user account while initiated the operation - ACTIVE, NOT_ACTIVE.\n+  external_operation_name       VARCHAR2(32 CHAR),                        -- External operation name, which can further specify the operation purpose.\n+  external_transaction_id       VARCHAR2(256 CHAR),                       -- External transaction ID, for example ID of a payment in a transaction system.\n+  result                        VARCHAR2(32 CHAR),                        -- Operation result - CONTINUE, FAILED, DONE.\n+  timestamp_created             TIMESTAMP,                                -- Timestamp when this operation was created.\n+  timestamp_expires             TIMESTAMP,                                -- Timestamp of the expiration of the operation.\n+  CONSTRAINT ns_operation_organization_fk FOREIGN KEY (organization_id) REFERENCES ns_organization (organization_id),\n+  CONSTRAINT ns_operation_config_fk FOREIGN KEY (operation_name) REFERENCES ns_operation_config (operation_name)\n+);\n+\n+-- Table ns_authentication stores authentication attempts.\n+CREATE TABLE ns_authentication (\n+  authentication_id           VARCHAR2(256 CHAR) NOT NULL PRIMARY KEY,      -- Authentication identifier (autogenerated).\n+  user_id                     VARCHAR2(256 CHAR),                           -- User identity identifier.\n+  type                        VARCHAR2(32 CHAR) NOT NULL,                   -- Authentication type: CREDENTIAL, OTP, CREDENTIAL_OTP.\n+  credential_id               VARCHAR2(256 CHAR),                           -- Credential identifier.\n+  otp_id                      VARCHAR2(256 CHAR),                           -- One time password identifier.\n+  operation_id                VARCHAR2(256 CHAR),                           -- Operation identifier.\n+  result                      VARCHAR2(32 CHAR) NOT NULL,                   -- Overall authentication result.\n+  result_credential           VARCHAR2(32 CHAR),                            -- Authentication result for credential authentication.\n+  result_otp                  VARCHAR2(32 CHAR),                            -- Authentication result for one time password authentication.\n+  timestamp_created           TIMESTAMP,                                    -- Timestamp when authentication record was created.\n+  CONSTRAINT ns_auth_user_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id),\n+  CONSTRAINT ns_auth_credential_fk FOREIGN KEY (credential_id) REFERENCES ns_credential_storage (credential_id),\n+  CONSTRAINT ns_auth_otp_fk FOREIGN KEY (otp_id) REFERENCES ns_otp_storage (otp_id),\n+  CONSTRAINT ns_auth_operation_fk FOREIGN KEY (operation_id) REFERENCES ns_operation (operation_id)\n );\n \n -- Table ns_operation_history stores all changes of operations.\n CREATE TABLE ns_operation_history (\n-  operation_id                VARCHAR(256) NOT NULL,                -- Operation ID.\n-  result_id                   INTEGER NOT NULL,                     -- Result ordering index identifier, incrementing value, starts with 1.\n-  request_auth_method         VARCHAR(32) NOT NULL,                 -- Authentication method used for the step.\n-  request_auth_instruments    VARCHAR(256),                         -- Which specific instruments were used for the step. Supported values are: PASSWORD, SMS_KEY, POWERAUTH_TOKEN, HW_TOKEN. There can be multiple supported instruments, they are stored encoded in JSON format.\n-  request_auth_step_result    VARCHAR(32) NOT NULL,                 -- Authentication result: CANCELED, AUTH_METHOD_FAILED, AUTH_FAILED, CONFIRMED\n-  request_params              VARCHAR(4000),                        -- Additional request parameters.\n-  response_result             VARCHAR(32) NOT NULL,                 -- Authentication step result: FAILED, CONTINUE, DONE\n-  response_result_description VARCHAR(256),                         -- Additional information about the authentication step result.\n-  response_steps              VARCHAR(4000),                        -- Information about which methods are allowed in the next step.\n-  response_timestamp_created  TIMESTAMP,                            -- Timestamp when the record was created.\n-  response_timestamp_expires  TIMESTAMP,                            -- Timestamp when the operation step should expire.\n-  chosen_auth_method          VARCHAR(32),                          -- Information about which authentication method was chosen, in case user can chose the authentication method.\n-  mobile_token_active         NUMBER(1) DEFAULT 0 NOT NULL,         -- Information about if mobile token is active during the particular authentication step, in order to show the mobile token operation at the right time.\n-  CONSTRAINT history_pk PRIMARY KEY (operation_id, result_id),\n-  CONSTRAINT history_operation_fk FOREIGN KEY (operation_id) REFERENCES ns_operation (operation_id),\n-  CONSTRAINT history_auth_method_fk FOREIGN KEY (request_auth_method) REFERENCES ns_auth_method (auth_method)\n+  operation_id                VARCHAR2(256 CHAR) NOT NULL,                -- Operation ID.\n+  result_id                   INTEGER NOT NULL,                           -- Result ordering index identifier, incrementing value, starts with 1.\n+  request_auth_method         VARCHAR2(32 CHAR) NOT NULL,                 -- Authentication method used for the step.\n+  request_auth_instruments    VARCHAR2(256 CHAR),                         -- Which specific instruments were used for the step. Supported values are: PASSWORD, OTP_KEY, POWERAUTH_TOKEN, HW_TOKEN. There can be multiple supported instruments, they are stored encoded in JSON format.\n+  request_auth_step_result    VARCHAR2(32 CHAR) NOT NULL,                 -- Authentication result: CANCELED, AUTH_METHOD_FAILED, AUTH_FAILED, CONFIRMED\n+  request_params              VARCHAR2(4096 CHAR),                        -- Additional request parameters.\n+  response_result             VARCHAR2(32 CHAR) NOT NULL,                 -- Authentication step result: FAILED, CONTINUE, DONE.\n+  response_result_description VARCHAR2(256 CHAR),                         -- Additional information about the authentication step result.\n+  response_steps              VARCHAR2(4096 CHAR),                        -- Information about which methods are allowed in the next step.\n+  response_timestamp_created  TIMESTAMP,                                  -- Timestamp when the record was created.\n+  response_timestamp_expires  TIMESTAMP,                                  -- Timestamp when the operation step should expire.\n+  chosen_auth_method          VARCHAR2(32 CHAR),                          -- Information about which authentication method was chosen, in case user can chose the authentication method.\n+  mobile_token_active         NUMBER(1) DEFAULT 0 NOT NULL,               -- Information about if mobile token is active during the particular authentication step, in order to show the mobile token operation at the right time.\n+  authentication_id           NUMBER(19,0),                               -- Reference to the authentication record.\n+  CONSTRAINT ns_history_pk PRIMARY KEY (operation_id, result_id),\n+  CONSTRAINT ns_history_operation_fk FOREIGN KEY (operation_id) REFERENCES ns_operation (operation_id),\n+  CONSTRAINT ns_history_auth_method_fk FOREIGN KEY (request_auth_method) REFERENCES ns_auth_method (auth_method),\n+  CONSTRAINT ns_history_chosen_method_fk FOREIGN KEY (chosen_auth_method) REFERENCES ns_auth_method (auth_method),\n+  CONSTRAINT ns_history_authentication_fk FOREIGN KEY (authentication_id) REFERENCES ns_authentication (authentication_id)\n );\n \n -- Table ns_operation_afs stores AFS requests and responses.\n CREATE TABLE ns_operation_afs (\n-  afs_action_id               INTEGER PRIMARY KEY NOT NULL,         -- ID of the AFS action.\n-  operation_id                VARCHAR(256) NOT NULL,                -- Operation ID.\n-  request_afs_action          VARCHAR(256) NOT NULL,                -- Information about requested AFS action.\n-  request_step_index          INTEGER NOT NULL,                     -- Counter within the specific operation step that is associated with AFS action, e.g. to differentiate multiple authentication attempts. Incrementing value, starts with 1.\n-  request_afs_extras          VARCHAR(256),                         -- Additional information about AFS action, typically a cookie values used in AFS system.\n-  response_afs_apply          NUMBER(1) DEFAULT 0 NOT NULL,         -- Response information about if AFS was applied.\n-  response_afs_label          VARCHAR(256),                         -- Response AFS label (information about what should the application do).\n-  response_afs_extras         VARCHAR(256),                         -- Additional information sent in AFS response.\n-  timestamp_created           TIMESTAMP,                            -- Timestamp this AFS action was created.\n-  CONSTRAINT operation_afs_fk FOREIGN KEY (operation_id) REFERENCES ns_operation (operation_id)\n+  afs_action_id               INTEGER PRIMARY KEY NOT NULL,               -- ID of the AFS action.\n+  operation_id                VARCHAR2(256 CHAR) NOT NULL,                -- Operation ID.\n+  request_afs_action          VARCHAR2(256 CHAR) NOT NULL,                -- Information about requested AFS action.\n+  request_step_index          INTEGER NOT NULL,                           -- Counter within the specific operation step that is associated with AFS action, e.g. to differentiate multiple authentication attempts. Incrementing value, starts with 1.\n+  request_afs_extras          VARCHAR2(256 CHAR),                         -- Additional information about AFS action, typically a cookie values used in AFS system.\n+  response_afs_apply          NUMBER(1) DEFAULT 0 NOT NULL,               -- Response information about if AFS was applied.\n+  response_afs_label          VARCHAR2(256 CHAR),                         -- Response AFS label (information about what should the application do).\n+  response_afs_extras         VARCHAR2(256 CHAR),                         -- Additional information sent in AFS response.\n+  timestamp_created           TIMESTAMP,                                  -- Timestamp this AFS action was created.\n+  CONSTRAINT ns_operation_afs_fk FOREIGN KEY (operation_id) REFERENCES ns_operation (operation_id)\n );\n \n--- Table ns_step_definition stores definitions of authentication/authorization steps.\n--- Data in this table needs to be loaded before Web Flow is started.\n-CREATE TABLE ns_step_definition (\n-  step_definition_id       INTEGER PRIMARY KEY NOT NULL,            -- Step definition ID.\n-  operation_name           VARCHAR(32) NOT NULL,                    -- Operation name for which this step definition is valid.\n-  operation_type           VARCHAR(32) NOT NULL,                    -- Type of the operation change: CREATE or UPDATE\n-  request_auth_method      VARCHAR(32),                             -- Operation authentication method that was selected by the user or developer.\n-  request_auth_step_result VARCHAR(32),                             -- Result of the authentication method execution: CONFIRMED, CANCELED, AUTH_METHOD_FAILED, AUTH_FAILED\n-  response_priority        INTEGER NOT NULL,                        -- Response priority (ordering column).\n-  response_auth_method     VARCHAR(32),                             -- Response with the authentication method that should be applied next.\n-  response_result          VARCHAR(32) NOT NULL,                    -- Result of the operation: CONTINUE, FAILED, DONE\n-  CONSTRAINT step_request_auth_method_fk FOREIGN KEY (request_auth_method) REFERENCES ns_auth_method (auth_method),\n-  CONSTRAINT step_response_auth_method_fk FOREIGN KEY (response_auth_method) REFERENCES ns_auth_method (auth_method)\n-);\n-\n--- Table wf_operation_session maps operations to HTTP sessions.\n--- Table is needed for handling of concurrent operations.\n-CREATE TABLE wf_operation_session (\n-  operation_id              VARCHAR(256) PRIMARY KEY NOT NULL,      -- Operation ID.\n-  http_session_id           VARCHAR(256) NOT NULL,                  -- HTTP session ID related to given operation.\n-  operation_hash            VARCHAR(256),                           -- Hash of the operation ID.\n-  websocket_session_id      VARCHAR(32),                            -- WebSocket Session ID.\n-  client_ip_address         VARCHAR(32),                            -- Client IP address, if available.\n-  result                    VARCHAR(32) NOT NULL,                   -- Result of the operation, stored in the session.\n-  timestamp_created         TIMESTAMP                               -- Timestamp of the record creation.\n-);\n-\n--- Table wf_afs_config is used to configure anti-fraud system parameters.\n-CREATE TABLE wf_afs_config (\n-  config_id                 VARCHAR(256) PRIMARY KEY NOT NULL,      -- AFS config ID.\n-  js_snippet_url            VARCHAR(256) NOT NULL,                  -- URL of the AFS JavaScript snippet (relative to application or absolute).\n-  parameters                CLOB                                    -- Additional AFS snippet parameters.\n+-- Table ns_audit_log stores audit information.\n+CREATE TABLE ns_audit_log (\n+  audit_log_id           NUMBER(19,0) NOT NULL PRIMARY KEY,                 -- Audit log identifier.\n+  action                 VARCHAR2(256 CHAR) NOT NULL,                       -- Action which is being audited.\n+  data                   CLOB,                                              -- Data for the audit record.\n+  timestamp_created      TIMESTAMP                                          -- Timestamp when audit record was created.\n );\n \n--- Table wf_certificate_verification is used for storing information about verified client TLS certificates.\n-CREATE TABLE wf_certificate_verification (\n-  operation_id               VARCHAR(256) NOT NULL,                 -- Operation ID associated with the certificate verification.\n-  auth_method                VARCHAR(32) NOT NULL,                  -- Authentication method in which the certificate authentication was used (for example, during \"login\" or \"authorize_payment\").\n-  client_certificate_issuer  VARCHAR(4000) NOT NULL,                -- Certificate attribute representing the certificate issuer.\n-  client_certificate_subject VARCHAR(4000) NOT NULL,                -- Certificate attribute representing the certificate subject.\n-  client_certificate_sn      VARCHAR(256) NOT NULL,                 -- Certificate attribute representing the certificate serial number.\n-  operation_data             CLOB NOT NULL,                         -- Operation data that were included in the certificate authentication request.\n-  timestamp_verified         TIMESTAMP NOT NULL,                    -- Timestamp of the certificate verification.\n-  CONSTRAINT certificate_verification_pk PRIMARY KEY (operation_id, auth_method)\n+-- Table ns_user_prefs stores user preferences.\n+-- Status of authentication methods is stored in this table per user (methods can be enabled or disabled).\n+CREATE TABLE ns_user_prefs (\n+  user_id       VARCHAR2(256 CHAR) PRIMARY KEY NOT NULL,      -- User ID.\n+  auth_method_1 NUMBER(1) DEFAULT 0,                          -- Flag indicating if \"authentication method 1\" is enabled.\n+  auth_method_2 NUMBER(1) DEFAULT 0,                          -- Flag indicating if \"authentication method 2\" is enabled.\n+  auth_method_3 NUMBER(1) DEFAULT 0,                          -- Flag indicating if \"authentication method 3\" is enabled.\n+  auth_method_4 NUMBER(1) DEFAULT 0,                          -- Flag indicating if \"authentication method 4\" is enabled.\n+  auth_method_5 NUMBER(1) DEFAULT 0,                          -- Flag indicating if \"authentication method 5\" is enabled.\n+  auth_method_1_config VARCHAR2(256 CHAR),                    -- Configuration for \"authentication method 1\".\n+  auth_method_2_config VARCHAR2(256 CHAR),                    -- Configuration for \"authentication method 2\".\n+  auth_method_3_config VARCHAR2(256 CHAR),                    -- Configuration for \"authentication method 3\".\n+  auth_method_4_config VARCHAR2(256 CHAR),                    -- Configuration for \"authentication method 4\".\n+  auth_method_5_config VARCHAR2(256 CHAR)                     -- Configuration for \"authentication method 5\".\n );\n \n -- Table da_sms_authorization stores data for SMS OTP authorization.\n CREATE TABLE da_sms_authorization (\n-  message_id           VARCHAR(256) PRIMARY KEY NOT NULL,           -- SMS message ID, ID of SMS OTP.\n-  operation_id         VARCHAR(256) NOT NULL,                       -- Operation ID.\n-  user_id              VARCHAR(256) NOT NULL,                       -- User ID.\n-  organization_id      VARCHAR(256),                                -- Organization ID.\n-  operation_name       VARCHAR(32) NOT NULL,                        -- Name of the operation that triggerred the SMS (login, payment, ...).\n-  authorization_code   VARCHAR(32) NOT NULL,                        -- Value of the authorization code sent in the SMS.\n-  salt                 BLOB NOT NULL,                               -- Salt used for authorization code calculation.\n-  message_text         CLOB NOT NULL,                               -- Full SMS message text.\n-  verify_request_count INTEGER,                                     -- Number of verification attempts.\n-  verified             NUMBER(1) DEFAULT 0,                         -- Flag indicating if this SMS OTP was successfully verified.\n-  timestamp_created    TIMESTAMP,                                   -- Timestamp when the SMS OTP was generated.\n-  timestamp_verified   TIMESTAMP,                                   -- Timestamp when the SMS OTP was successfully validated.\n-  timestamp_expires    TIMESTAMP                                    -- Timestamp when the SMS OTP expires.\n+  message_id           VARCHAR2(256 CHAR) PRIMARY KEY NOT NULL,           -- SMS message ID, ID of SMS OTP.\n+  operation_id         VARCHAR2(256 CHAR) NOT NULL,                       -- Operation ID.\n+  user_id              VARCHAR2(256 CHAR) NOT NULL,                       -- User ID.\n+  organization_id      VARCHAR2(256 CHAR),                                -- Organization ID.\n+  operation_name       VARCHAR2(32 CHAR) NOT NULL,                        -- Name of the operation that triggered the SMS (login, authorize_payment, ...).\n+  authorization_code   VARCHAR2(32 CHAR) NOT NULL,                        -- Value of the authorization code sent in the SMS.\n+  salt                 BLOB NOT NULL,                                     -- Salt used for authorization code calculation.\n+  message_text         CLOB NOT NULL,                                     -- Full SMS message text.\n+  verify_request_count INTEGER,                                           -- Number of verification attempts.\n+  verified             NUMBER(1) DEFAULT 0,                               -- Flag indicating if this SMS OTP was successfully verified.\n+  timestamp_created    TIMESTAMP,                                         -- Timestamp when the SMS OTP was generated.\n+  timestamp_verified   TIMESTAMP,                                         -- Timestamp when the SMS OTP was successfully validated.\n+  timestamp_expires    TIMESTAMP                                          -- Timestamp when the SMS OTP expires.\n );\n \n -- Table da_user_credentials stores built-in users for the data adapter\n CREATE TABLE da_user_credentials (\n-  user_id               VARCHAR(128) PRIMARY KEY NOT NULL,          -- User ID. Technical identifier of the user.\n-  username              VARCHAR(255) NOT NULL,                      -- Username, the displayable value that users use to sign in.\n-  password_hash         VARCHAR(255) NOT NULL,                      -- Bcrypt hash of the password.\n-  family_name           VARCHAR(255) NOT NULL,                      -- User family name.\n-  given_name            VARCHAR(255) NOT NULL,                      -- User given name.\n-  organization_id       VARCHAR(64)  NOT NULL,                      -- User organization ID.\n-  phone_number          VARCHAR(255) NOT NULL                       -- Full phone number, should be stored in format that allows easy SMS message sending.\n+  user_id               VARCHAR2(128 CHAR) PRIMARY KEY NOT NULL,          -- User ID. Technical identifier of the user.\n+  username              VARCHAR2(256 CHAR) NOT NULL,                      -- Username, the displayable value that users use to sign in.\n+  password_hash         VARCHAR2(256 CHAR) NOT NULL,                      -- Bcrypt hash of the password.\n+  family_name           VARCHAR2(256 CHAR) NOT NULL,                      -- User family name.\n+  given_name            VARCHAR2(256 CHAR) NOT NULL,                      -- User given name.\n+  organization_id       VARCHAR2(64 CHAR)  NOT NULL,                      -- User organization ID.\n+  phone_number          VARCHAR2(256 CHAR) NOT NULL                       -- Full phone number, should be stored in format that allows easy SMS message sending.\n );\n \n -- Table for the list of consent templates\n CREATE TABLE tpp_consent (\n-  consent_id            VARCHAR(64) PRIMARY KEY NOT NULL,           -- Consent ID.\n-  consent_name          VARCHAR(128) NOT NULL,                      -- Consent name, localization key or full displayable value.\n-  consent_text          CLOB NOT NULL,                              -- Consent text, localization key or full displayable value with optional placeholders.\n-  version               INT NOT NULL                                -- Consent version.\n+  consent_id            VARCHAR2(64 CHAR) PRIMARY KEY NOT NULL,           -- Consent ID.\n+  consent_name          VARCHAR2(128 CHAR) NOT NULL,                      -- Consent name, localization key or full displayable value.\n+  consent_text          CLOB NOT NULL,                                    -- Consent text, localization key or full displayable value with optional placeholders.\n+  version               INT NOT NULL                                      -- Consent version.\n );\n \n -- Table for the list of consent currently given by a user\n CREATE TABLE tpp_user_consent (\n-    id                  INTEGER PRIMARY KEY NOT NULL,               -- User given consent ID.\n-    user_id             VARCHAR(256) NOT NULL,                      -- User ID.\n-    client_id           VARCHAR(256) NOT NULL,                      -- OAuth 2.0 client ID.\n-    consent_id          VARCHAR(64) NOT NULL,                       -- Consent ID.\n-    external_id         VARCHAR(256),                               -- External ID associated with the consent approval, usually the operation ID.\n-    consent_parameters  CLOB NOT NULL,                              -- Specific parameters that were filled in into the user consent template.\n-    timestamp_created   TIMESTAMP,                                  -- Timestamp the consent with given ID was first created.\n-    timestamp_updated   TIMESTAMP                                   -- Timestamp the consent with given ID was given again before it was revoked (updated, prolonged).\n+    id                  INTEGER PRIMARY KEY NOT NULL,                     -- User given consent ID.\n+    user_id             VARCHAR2(256 CHAR) NOT NULL,                      -- User ID.\n+    client_id           VARCHAR2(256 CHAR) NOT NULL,                      -- OAuth 2.0 client ID.\n+    consent_id          VARCHAR2(64 CHAR) NOT NULL,                       -- Consent ID.\n+    external_id         VARCHAR2(256 CHAR),                               -- External ID associated with the consent approval, usually the operation ID.\n+    consent_parameters  CLOB NOT NULL,                                    -- Specific parameters that were filled in into the user consent template.\n+    timestamp_created   TIMESTAMP,                                        -- Timestamp the consent with given ID was first created.\n+    timestamp_updated   TIMESTAMP                                         -- Timestamp the consent with given ID was given again before it was revoked (updated, prolonged).\n );\n \n -- Table for the list of changes in consent history by given user\n CREATE TABLE tpp_user_consent_history (\n-    id                  INTEGER PRIMARY KEY NOT NULL,               -- ID of the consent history record.\n-    user_id             VARCHAR(256) NOT NULL,                      -- User ID.\n-    client_id           VARCHAR(256) NOT NULL,                      -- Client ID.\n-    consent_id          VARCHAR(64) NOT NULL,                       -- Consent ID.\n-    consent_change      VARCHAR(16) NOT NULL,                       -- Type of the consent change: APPROVE, PROLONG, REJECT\n-    external_id         VARCHAR(256),                               -- External ID that was responsible for this specific consent change, usually the operation ID.\n-    consent_parameters  CLOB NOT NULL,                              -- Specific parameters that were filled in into the user consent template in this consent change.\n-    timestamp_created   TIMESTAMP                                   -- Timestamp of the consent change.\n+    id                  INTEGER PRIMARY KEY NOT NULL,                     -- ID of the consent history record.\n+    user_id             VARCHAR2(256 CHAR) NOT NULL,                      -- User ID.\n+    client_id           VARCHAR2(256 CHAR) NOT NULL,                      -- Client ID.\n+    consent_id          VARCHAR2(64 CHAR) NOT NULL,                       -- Consent ID.\n+    consent_change      VARCHAR2(16 CHAR) NOT NULL,                       -- Type of the consent change: APPROVE, PROLONG, REJECT\n+    external_id         VARCHAR2(256 CHAR),                               -- External ID that was responsible for this specific consent change, usually the operation ID.\n+    consent_parameters  CLOB NOT NULL,                                    -- Specific parameters that were filled in into the user consent template in this consent change.\n+    timestamp_created   TIMESTAMP                                         -- Timestamp of the consent change.\n );\n \n CREATE TABLE tpp_detail (\n-  tpp_id                INTEGER PRIMARY KEY NOT NULL,               -- ID of the TPP provider.\n-  tpp_name              VARCHAR(256) NOT NULL,                      -- Name of the TPP provider.\n-  tpp_license           VARCHAR(256) NOT NULL,                      -- Information about the TPP license.\n-  tpp_info              CLOB NULL,                                  -- Additional information about the TPP provider, if available.\n-  tpp_address           CLOB NULL,                                  -- TPP address, if available.\n-  tpp_website           CLOB NULL,                                  -- TPP website, if available.\n-  tpp_phone             VARCHAR(256) NULL,                          -- TPP phone number, if available.\n-  tpp_email             VARCHAR(256) NULL,                          -- TPP e-mail, if available.\n-  tpp_logo              BLOB NULL                                   -- TPP logo, if available.\n+  tpp_id                INTEGER PRIMARY KEY NOT NULL,                     -- ID of the TPP provider.\n+  tpp_name              VARCHAR2(256 CHAR) NOT NULL,                      -- Name of the TPP provider.\n+  tpp_license           VARCHAR2(256 CHAR) NOT NULL,                      -- Information about the TPP license.\n+  tpp_info              CLOB NULL,                                        -- Additional information about the TPP provider, if available.\n+  tpp_address           CLOB NULL,                                        -- TPP address, if available.\n+  tpp_website           CLOB NULL,                                        -- TPP website, if available.\n+  tpp_phone             VARCHAR2(256 CHAR) NULL,                          -- TPP phone number, if available.\n+  tpp_email             VARCHAR2(256 CHAR) NULL,                          -- TPP e-mail, if available.\n+  tpp_logo              BLOB NULL                                         -- TPP logo, if available.\n );\n \n CREATE TABLE tpp_app_detail (\n-  tpp_id                INTEGER NOT NULL,                           -- TPP ID.\n-  app_client_id         VARCHAR(256) NOT NULL,                      -- TPP app ID, represented as OAuth 2.0 client ID and connecting the application to OAuth 2.0 credentials.\n-  app_name              VARCHAR(256) NOT NULL,                      -- TPP app name.\n-  app_info              CLOB NULL,                                  -- An arbitrary additional info about TPP app, if available.\n-  app_type              VARCHAR(32) NULL,                           -- Application type, \"web\" or \"native\".\n+  tpp_id                INTEGER NOT NULL,                                 -- TPP ID.\n+  app_client_id         VARCHAR2(256 CHAR) NOT NULL,                      -- TPP app ID, represented as OAuth 2.0 client ID and connecting the application to OAuth 2.0 credentials.\n+  app_name              VARCHAR2(256 CHAR) NOT NULL,                      -- TPP app name.\n+  app_info              CLOB NULL,                                        -- An arbitrary additional info about TPP app, if available.\n+  app_type              VARCHAR2(32 CHAR) NULL,                           -- Application type, \"web\" or \"native\".\n   CONSTRAINT tpp_detail_pk PRIMARY KEY (tpp_id, app_client_id),\n   CONSTRAINT tpp_detail_fk FOREIGN KEY (tpp_id) REFERENCES tpp_detail (tpp_id),\n   CONSTRAINT tpp_client_secret_fk FOREIGN KEY (app_client_id) REFERENCES oauth_client_details (client_id)\n@@ -303,3 +572,39 @@ CREATE INDEX wf_websocket_session ON wf_operation_session (websocket_session_id)\n CREATE INDEX ns_operation_pending ON ns_operation (user_id, result);\n CREATE UNIQUE INDEX ns_operation_afs_unique on ns_operation_afs (operation_id, request_afs_action, request_step_index);\n CREATE INDEX wf_certificate_operation ON wf_certificate_verification (operation_id);\n+CREATE UNIQUE INDEX ns_application_name ON ns_application (name);\n+CREATE UNIQUE INDEX ns_credential_policy_name ON ns_credential_policy (name);\n+CREATE UNIQUE INDEX ns_otp_policy_name ON ns_otp_policy (name);\n+CREATE INDEX ns_user_contact_user_id ON ns_user_contact (user_id);\n+CREATE INDEX ns_user_contact_query ON ns_user_contact (user_id, name, type);\n+CREATE INDEX ns_user_identity_status ON ns_user_identity (status);\n+CREATE INDEX ns_user_identity_created ON ns_user_identity (timestamp_created);\n+CREATE INDEX ns_user_identity_history_user ON ns_user_identity_history (user_id);\n+CREATE INDEX ns_user_identity_history_created ON ns_user_identity_history (timestamp_created);\n+CREATE UNIQUE INDEX ns_role_name ON ns_role (name);\n+CREATE INDEX ns_user_role_user_id ON ns_user_role (user_id);\n+CREATE INDEX ns_user_role_role ON ns_user_role (role_id);\n+CREATE INDEX ns_user_alias_user_id ON ns_user_alias (user_id);\n+CREATE UNIQUE INDEX ns_credential_definition_name ON ns_credential_definition (name);\n+CREATE UNIQUE INDEX ns_otp_definition_name ON ns_otp_definition (name);\n+CREATE INDEX ns_credential_storage_user_id ON ns_credential_storage (user_id);\n+CREATE INDEX ns_credential_storage_status ON ns_credential_storage (status);\n+CREATE UNIQUE INDEX ns_credential_storage_query1 ON ns_credential_storage (credential_definition_id, user_name);\n+CREATE UNIQUE INDEX ns_credential_storage_query2 ON ns_credential_storage (user_id, credential_definition_id);\n+CREATE INDEX ns_credential_storage_query3 ON ns_credential_storage (credential_definition_id, status);\n+CREATE INDEX ns_credential_history_user_id ON ns_credential_history (user_id);\n+CREATE INDEX ns_otp_storage_user_id ON ns_otp_storage (user_id);\n+CREATE INDEX ns_otp_storage_operation_id ON ns_otp_storage (operation_id);\n+CREATE INDEX ns_authentication_user_id ON ns_authentication (user_id);\n+CREATE INDEX ns_authentication_operation_id ON ns_authentication (operation_id);\n+CREATE INDEX ns_authentication_timestamp_created ON ns_authentication (timestamp_created);\n+CREATE INDEX ns_audit_log_created ON ns_audit_log (timestamp_created);\n+CREATE UNIQUE INDEX ns_hashing_config_name ON ns_hashing_config (name);\n+CREATE UNIQUE INDEX ns_user_alias_unique ON ns_user_alias (user_id, name);\n+CREATE UNIQUE INDEX ns_user_role_unique ON ns_user_role (user_id, role_id);\n+\n+-- Foreign keys for user identity, to be used only when all user identities are stored in Next Step\n+ALTER TABLE ns_operation ADD CONSTRAINT ns_operation_user_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id);\n+ALTER TABLE ns_user_prefs ADD CONSTRAINT ns_user_prefs_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id);\n+ALTER TABLE ns_otp_storage ADD CONSTRAINT ns_otp_user_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id);\n+ALTER TABLE ns_authentication ADD CONSTRAINT ns_auth_user_fk FOREIGN KEY (user_id) REFERENCES ns_user_identity (user_id);\n\\ No newline at end of file"
  },
  {
    "sha": "b02bca396a100baa8279fbdfc36a4fd2e2dabaf8",
    "filename": "docs/sql/oracle/drop_schema.sql",
    "status": "modified",
    "additions": 228,
    "deletions": 18,
    "changes": 246,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/oracle/drop_schema.sql",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/oracle/drop_schema.sql",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/docs/sql/oracle/drop_schema.sql?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -1,63 +1,154 @@\n BEGIN\n-   EXECUTE IMMEDIATE 'DROP TABLE da_sms_authorization';\n+EXECUTE IMMEDIATE 'DROP TABLE da_sms_authorization';\n EXCEPTION\n    WHEN OTHERS THEN NULL;\n END;\n /\n \n BEGIN\n-EXECUTE IMMEDIATE 'DROP TABLE wf_afs_config';\n+EXECUTE IMMEDIATE 'DROP TABLE da_user_credentials';\n EXCEPTION\n-WHEN OTHERS THEN NULL;\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+   EXECUTE IMMEDIATE 'DROP TABLE wf_afs_config';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+   EXECUTE IMMEDIATE 'DROP TABLE wf_operation_session';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP TABLE ns_audit_log';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP TABLE ns_authentication';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP TABLE ns_otp_definition';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP TABLE ns_otp_storage';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n END;\n /\n \n BEGIN\n-EXECUTE IMMEDIATE 'DROP TABLE wf_operation_afs';\n+EXECUTE IMMEDIATE 'DROP TABLE ns_credential_history';\n EXCEPTION\n-WHEN OTHERS THEN NULL;\n+   WHEN OTHERS THEN NULL;\n END;\n /\n \n BEGIN\n-EXECUTE IMMEDIATE 'DROP TABLE wf_operation_session';\n+EXECUTE IMMEDIATE 'DROP TABLE ns_credential_storage';\n EXCEPTION\n-WHEN OTHERS THEN NULL;\n+   WHEN OTHERS THEN NULL;\n END;\n /\n \n BEGIN\n-EXECUTE IMMEDIATE 'DROP TABLE tpp_consent';\n+EXECUTE IMMEDIATE 'DROP TABLE ns_hashing_config';\n EXCEPTION\n-WHEN OTHERS THEN NULL;\n+   WHEN OTHERS THEN NULL;\n END;\n /\n \n BEGIN\n-EXECUTE IMMEDIATE 'DROP TABLE tpp_user_consent';\n+EXECUTE IMMEDIATE 'DROP TABLE ns_credential_definition';\n EXCEPTION\n-WHEN OTHERS THEN NULL;\n+   WHEN OTHERS THEN NULL;\n END;\n /\n \n BEGIN\n-EXECUTE IMMEDIATE 'DROP TABLE tpp_user_consent_history';\n+EXECUTE IMMEDIATE 'DROP TABLE ns_hashing_config';\n EXCEPTION\n-WHEN OTHERS THEN NULL;\n+   WHEN OTHERS THEN NULL;\n END;\n /\n \n BEGIN\n-EXECUTE IMMEDIATE 'DROP TABLE tpp_detail';\n+EXECUTE IMMEDIATE 'DROP TABLE ns_user_alias';\n EXCEPTION\n-WHEN OTHERS THEN NULL;\n+   WHEN OTHERS THEN NULL;\n END;\n /\n \n BEGIN\n-EXECUTE IMMEDIATE 'DROP TABLE tpp_app_detail';\n+EXECUTE IMMEDIATE 'DROP TABLE ns_user_role';\n EXCEPTION\n-WHEN OTHERS THEN NULL;\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP TABLE ns_role';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP TABLE ns_user_identity_history';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP TABLE ns_user_contact';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP TABLE ns_user_identity';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP TABLE ns_otp_policy';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP TABLE ns_credential_policy';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP TABLE ns_application';\n+EXCEPTION\n+   WHEN OTHERS THEN NULL;\n END;\n /\n \n@@ -178,4 +269,123 @@ BEGIN\n EXCEPTION\n     WHEN OTHERS THEN NULL;\n END;\n-/\n\\ No newline at end of file\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE TPP_DETAIL_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE TPP_USER_CONSENT_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE TPP_USER_CONSENT_HISTORY_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_OPERATION_AFS_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_APPLICATION_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_CREDENTIAL_POLICY_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_OTP_POLICY_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_USER_CONTACT_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_USER_IDENTITY_HISTORY_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_ROLE_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_USER_ROLE_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_USER_ALIAS_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_HASHING_CONFIG_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_CREDENTIAL_DEFINITION_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_OTP_DEFINITION_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_CREDENTIAL_HISTORY_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/\n+\n+BEGIN\n+EXECUTE IMMEDIATE 'DROP SEQUENCE NS_AUDIT_LOG_SEQ';\n+EXCEPTION\n+    WHEN OTHERS THEN NULL;\n+END;\n+/"
  },
  {
    "sha": "5276608a60c3b81ecf43d921f8ae51eca6adff09",
    "filename": "docs/sql/oracle/initial_data.sql",
    "status": "modified",
    "additions": 18,
    "deletions": 2,
    "changes": 20,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/oracle/initial_data.sql",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/oracle/initial_data.sql",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/docs/sql/oracle/initial_data.sql?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -22,6 +22,8 @@ INSERT INTO ns_auth_method (auth_method, order_number, check_user_prefs, user_pr\n VALUES ('LOGIN_SCA', 8, 0, NULL, NULL, 1, 5, 1, 1, 'method.loginSca');\n INSERT INTO ns_auth_method (auth_method, order_number, check_user_prefs, user_prefs_column, user_prefs_default, check_auth_fails, max_auth_fails, has_user_interface, has_mobile_token, display_name_key)\n VALUES ('APPROVAL_SCA', 9, 0, NULL, NULL, 1, 5, 1, 1, 'method.approvalSca');\n+INSERT INTO ns_auth_method (auth_method, order_number, check_user_prefs, user_prefs_column, user_prefs_default, check_auth_fails, max_auth_fails, has_user_interface, has_mobile_token, display_name_key)\n+VALUES ('OTP_CODE', 10, 0, NULL, NULL, 1, 3, 1, 0, 'method.otpCode');\n \n -- operation configuration\n INSERT INTO ns_operation_config (operation_name, template_version, template_id, mobile_token_enabled, mobile_token_mode) VALUES ('login', 'A', 2, 0, '{\"type\":\"2FA\",\"variants\":[\"possession_knowledge\",\"possession_biometry\"]}');\n@@ -30,8 +32,22 @@ INSERT INTO ns_operation_config (operation_name, template_version, template_id,\n INSERT INTO ns_operation_config (operation_name, template_version, template_id, mobile_token_enabled, mobile_token_mode) VALUES ('authorize_payment_sca', 'A', 1, 0, '{\"type\":\"2FA\",\"variants\":[\"possession_knowledge\",\"possession_biometry\"]}');\n \n -- organization configuration\n-INSERT INTO ns_organization (organization_id, display_name_key, is_default, order_number) VALUES ('RETAIL', 'organization.retail', 1, 1);\n-INSERT INTO ns_organization (organization_id, display_name_key, is_default, order_number) VALUES ('SME', 'organization.sme', 0, 2);\n+INSERT INTO ns_organization (organization_id, display_name_key, is_default, order_number, default_credential_name, default_otp_name) VALUES ('RETAIL', 'organization.retail', 1, 1, 'RETAIL_CREDENTIAL', 'RETAIL_OTP');\n+INSERT INTO ns_organization (organization_id, display_name_key, is_default, order_number, default_credential_name, default_otp_name) VALUES ('SME', 'organization.sme', 0, 2, 'SME_CREDENTIAL', 'SME_OTP');\n+\n+-- sample Next Step application configuration\n+INSERT INTO ns_application (name, description, status, organization_id, timestamp_created) values ('RETAIL_APP', 'Sample retail application', 'ACTIVE', 'RETAIL', CURRENT_TIMESTAMP);\n+INSERT INTO ns_application (name, description, status, organization_id, timestamp_created) values ('SME_APP', 'Sample SME application', 'ACTIVE', 'SME', CURRENT_TIMESTAMP);\n+\n+-- credential and OTP policy configuration\n+INSERT INTO ns_credential_policy (name, description, status, username_length_min, username_length_max, username_allowed_pattern, credential_length_min, credential_length_max, limit_soft, limit_hard, check_history_count, rotation_enabled, username_gen_algorithm, username_gen_param, credential_gen_algorithm, credential_gen_param, credential_val_param, timestamp_created) values ('CREDENTIAL_POLICY', 'Sample credential policy', 'ACTIVE', 8, 20, '[0-9]+', 8, 40, 3, 5, 3, 0, 'RANDOM_DIGITS', '{\"length\": 8}', 'RANDOM_PASSWORD', '{\"length\": 12, \"includeSmallLetters\": true, \"smallLettersCount\": 5, \"includeCapitalLetters\": true, \"capitalLettersCount\": 5, \"includeDigits\": true, \"digitsCount\": 1, \"includeSpecialChars\": true, \"specialCharsCount\": 1}', '{\"includeWhitespaceRule\": true, \"includeUsernameRule\": true, \"includeAllowedCharacterRule\": false, \"allowedChars\": \"\", \"includeAllowedRegexRule\": false, \"allowedRegex\": \".*\", \"includeIllegalCharacterRule\": false, \"illegalChars\": \"\", \"includeIllegalRegexRule\": false, \"illegalRegex\": \"\", \"includeCharacterRule\": true, \"includeSmallLetters\": \"true\", \"smallLettersMin\": 1, \"includeCapitalLetters\": true, \"capitalLettersMin\": 1, \"includeAlphabeticalLetters\": true, \"alphabeticalLettersMin\": 2, \"includeDigits\": true, \"digitsMin\": 1, \"includeSpecialChars\": true, \"specialCharsMin\": 1}', CURRENT_TIMESTAMP);\n+INSERT INTO ns_otp_policy (name, description, status, length, attempt_limit, expiration_time, gen_algorithm, gen_param) values ('OTP_POLICY', 'Sample OTP policy', 'ACTIVE', 8, 3, 300, 'OTP_DATA_DIGEST', '{}');\n+\n+-- credential and OTP definition configuration\n+INSERT INTO ns_credential_definition (name, description, application_id, credential_policy_id, category, status, timestamp_created) values ('RETAIL_CREDENTIAL', 'Sample credential definition for retail', 1, 1, 'PASSWORD', 'ACTIVE', CURRENT_TIMESTAMP);\n+INSERT INTO ns_credential_definition (name, description, application_id, credential_policy_id, category, status, timestamp_created) values ('SME_CREDENTIAL', 'Sample credential definition for SME', 2, 1, 'PASSWORD', 'ACTIVE', CURRENT_TIMESTAMP);\n+INSERT INTO ns_otp_definition (name, description, application_id, otp_policy_id, status, timestamp_created) values ('RETAIL_OTP', 'Sample OTP definition for retail', 1, 1, 'ACTIVE', CURRENT_TIMESTAMP);\n+INSERT INTO ns_otp_definition (name, description, application_id, otp_policy_id, status, timestamp_created) values ('SME_OTP', 'Sample OTP definition for SME', 2, 1, 'ACTIVE', CURRENT_TIMESTAMP);\n \n -- login - init operation -> CONTINUE\n INSERT INTO ns_step_definition (step_definition_id, operation_name, operation_type, request_auth_method, request_auth_step_result, response_priority, response_auth_method, response_result)"
  },
  {
    "sha": "3e67fc74b0aa0d71b5d1318e671189a86ad05d1e",
    "filename": "docs/sql/postgresql/create_schema.sql",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/postgresql/create_schema.sql",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/docs/sql/postgresql/create_schema.sql",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/docs/sql/postgresql/create_schema.sql?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -19,7 +19,7 @@ CREATE TABLE oauth_client_details (\n   authorities             VARCHAR(256),\n   access_token_validity   INTEGER,\n   refresh_token_validity  INTEGER,\n-  additional_information  VARCHAR(4000),\n+  additional_information  VARCHAR(4096),\n   autoapprove             VARCHAR(256)\n );\n \n@@ -142,10 +142,10 @@ CREATE TABLE ns_operation_history (\n   request_auth_method         VARCHAR(32) NOT NULL,\n   request_auth_instruments    VARCHAR(256),\n   request_auth_step_result    VARCHAR(32) NOT NULL,\n-  request_params              VARCHAR(4000),\n+  request_params              VARCHAR(4096),\n   response_result             VARCHAR(32) NOT NULL,\n   response_result_description VARCHAR(256),\n-  response_steps              VARCHAR(4000),\n+  response_steps              VARCHAR(4096),\n   response_timestamp_created  TIMESTAMP,\n   response_timestamp_expires  TIMESTAMP,\n   chosen_auth_method          VARCHAR(32),\n@@ -207,8 +207,8 @@ CREATE TABLE wf_afs_config (\n CREATE TABLE wf_certificate_verification (\n   operation_id               VARCHAR(256) NOT NULL,\n   auth_method                VARCHAR(32) NOT NULL,\n-  client_certificate_issuer  VARCHAR(4000) NOT NULL,\n-  client_certificate_subject VARCHAR(4000) NOT NULL,\n+  client_certificate_issuer  VARCHAR(4096) NOT NULL,\n+  client_certificate_subject VARCHAR(4096) NOT NULL,\n   client_certificate_sn      VARCHAR(256) NOT NULL,\n   operation_data             TEXT NOT NULL,\n   timestamp_created          TIMESTAMP NOT NULL,"
  },
  {
    "sha": "e22a9a18b3dedb93cbef0d58da7a3e3d40322984",
    "filename": "powerauth-data-adapter-client/pom.xml",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-client/pom.xml",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-client/pom.xml",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-client/pom.xml?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -43,6 +43,11 @@\n             <artifactId>powerauth-nextstep-model</artifactId>\n             <version>1.1.0-SNAPSHOT</version>\n         </dependency>\n+        <dependency>\n+            <groupId>io.getlime.core</groupId>\n+            <artifactId>rest-client-base</artifactId>\n+            <version>1.3.0-SNAPSHOT</version>\n+        </dependency>\n     </dependencies>\n \n "
  },
  {
    "sha": "aed5e08bde001880171e1f9a4a875f5ddc20cbc4",
    "filename": "powerauth-data-adapter-client/src/main/java/io/getlime/security/powerauth/lib/dataadapter/client/DataAdapterClient.java",
    "status": "modified",
    "additions": 138,
    "deletions": 311,
    "changes": 449,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-client/src/main/java/io/getlime/security/powerauth/lib/dataadapter/client/DataAdapterClient.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-client/src/main/java/io/getlime/security/powerauth/lib/dataadapter/client/DataAdapterClient.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-client/src/main/java/io/getlime/security/powerauth/lib/dataadapter/client/DataAdapterClient.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -16,98 +16,62 @@\n \n package io.getlime.security.powerauth.lib.dataadapter.client;\n \n-import com.fasterxml.jackson.core.type.TypeReference;\n-import com.fasterxml.jackson.databind.DeserializationFeature;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import com.fasterxml.jackson.databind.SerializationFeature;\n+import com.wultra.core.rest.client.base.DefaultRestClient;\n+import com.wultra.core.rest.client.base.RestClient;\n+import com.wultra.core.rest.client.base.RestClientConfiguration;\n+import com.wultra.core.rest.client.base.RestClientException;\n import io.getlime.core.rest.model.base.request.ObjectRequest;\n import io.getlime.core.rest.model.base.response.ObjectResponse;\n+import io.getlime.core.rest.model.base.response.Response;\n import io.getlime.security.powerauth.lib.dataadapter.model.entity.*;\n import io.getlime.security.powerauth.lib.dataadapter.model.enumeration.AccountStatus;\n import io.getlime.security.powerauth.lib.dataadapter.model.request.*;\n import io.getlime.security.powerauth.lib.dataadapter.model.response.*;\n import io.getlime.security.powerauth.lib.nextstep.model.enumeration.AuthMethod;\n-import org.springframework.core.ParameterizedTypeReference;\n-import org.springframework.http.HttpEntity;\n-import org.springframework.http.HttpMethod;\n-import org.springframework.http.HttpStatus;\n-import org.springframework.http.ResponseEntity;\n-import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\n-import org.springframework.http.converter.HttpMessageConverter;\n-import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;\n-import org.springframework.web.client.HttpStatusCodeException;\n-import org.springframework.web.client.ResourceAccessException;\n-import org.springframework.web.client.RestTemplate;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n-import java.io.IOException;\n-import java.util.ArrayList;\n import java.util.List;\n import java.util.Map;\n \n /**\n  * Data Adapter Client provides methods for communication with the Data Adapter.\n- * It uses the RestTemplate class to handle REST API calls. HTTP client is used instead of default client\n- * so that error responses contain full response bodies.\n+ * It uses the RestClient class to handle REST API calls.\n  *\n  * @author Roman Strobl, roman.strobl@wultra.com\n  */\n public class DataAdapterClient {\n \n-    private final String serviceUrl;\n-    private final ObjectMapper objectMapper;\n-    private final RestTemplate restTemplate;\n+    private static final Logger logger = LoggerFactory.getLogger(DataAdapterClient.class);\n \n-    /**\n-     * Create a new client with provided base URL.\n-     * @param serviceUrl Base URL.\n-     */\n-    public DataAdapterClient(String serviceUrl) {\n-        this(serviceUrl, null);\n-    }\n+    private final RestClient restClient;\n \n     /**\n-     * Create a new client with provided base URL and custom object mapper.\n-     * @param serviceUrl Base URL.\n-     * @param objectMapper Object mapper.\n+     * Create a new client with provided base URL.\n+     * @param serviceBaseUrl REST service base URL.\n+     * @throws DataAdapterClientErrorException Thrown when REST client initialization fails.\n      */\n-    public DataAdapterClient(String serviceUrl, ObjectMapper objectMapper) {\n-        this.serviceUrl = serviceUrl;\n-        if (objectMapper != null) {\n-            this.objectMapper = objectMapper;\n-        } else {\n-            this.objectMapper = objectMapper();\n+    public DataAdapterClient(String serviceBaseUrl) throws DataAdapterClientErrorException {\n+        try {\n+            restClient = new DefaultRestClient(serviceBaseUrl);\n+        } catch (RestClientException ex) {\n+            throw new DataAdapterClientErrorException(ex, new DataAdapterError(resolveErrorCode(ex), \"Rest client initialization failed.\"));\n         }\n-        restTemplate = new RestTemplate();\n-\n-        // Prepare message converters\n-        MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter(this.objectMapper);\n-        List<HttpMessageConverter<?>> converters = new ArrayList<>();\n-        converters.add(converter);\n-        restTemplate.setMessageConverters(converters);\n-\n-        restTemplate.setRequestFactory(new HttpComponentsClientHttpRequestFactory());\n-    }\n-\n-    /**\n-     * Construct object mapper with default configuration which allows sending empty objects and allows unknown properties.\n-     * @return Constructed object mapper.\n-     */\n-    private ObjectMapper objectMapper() {\n-        ObjectMapper mapper = new ObjectMapper();\n-        mapper.configure(SerializationFeature.FAIL_ON_EMPTY_BEANS, false);\n-        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n-        return mapper;\n     }\n \n     /**\n-     * Get default instance of REST client.\n-     * @return RestTemplate with default configuration.\n+     * Create a new client with provided base URL.\n+     * @param restClientConfiguration REST service client configuration.\n+     * @throws DataAdapterClientErrorException Thrown when REST client initialization fails.\n      */\n-    public RestTemplate getRestTemplate() {\n-        return restTemplate;\n+    public DataAdapterClient(RestClientConfiguration restClientConfiguration) throws DataAdapterClientErrorException {\n+        try {\n+            restClient = new DefaultRestClient(restClientConfiguration);\n+        } catch (RestClientException ex) {\n+            throw new DataAdapterClientErrorException(ex, new DataAdapterError(resolveErrorCode(ex), \"Rest client initialization failed.\"));\n+        }\n     }\n \n-\n     /**\n      * Lookup user account.\n      *\n@@ -119,18 +83,8 @@ public RestTemplate getRestTemplate() {\n      * @throws DataAdapterClientErrorException Thrown when client request fails or user does not exist.\n      */\n     public ObjectResponse<UserDetailResponse> lookupUser(String username, String organizationId, String clientCertificate, OperationContext operationContext) throws DataAdapterClientErrorException {\n-        try {\n-            // Exchange authentication request with data adapter.\n-            UserLookupRequest request = new UserLookupRequest(username, organizationId, clientCertificate, operationContext);\n-            HttpEntity<ObjectRequest<UserLookupRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<UserDetailResponse>> response = restTemplate.exchange(serviceUrl + \"/api/auth/user/lookup\", HttpMethod.POST, entity, new ParameterizedTypeReference<ObjectResponse<UserDetailResponse>>() {\n-            });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        UserLookupRequest request = new UserLookupRequest(username, organizationId, clientCertificate, operationContext);\n+        return postObjectImpl(\"/api/auth/user/lookup\", new ObjectRequest<>(request), UserDetailResponse.class);\n     }\n \n     /**\n@@ -145,18 +99,8 @@ public RestTemplate getRestTemplate() {\n      * @throws DataAdapterClientErrorException Thrown when client request fails or authentication fails.\n      */\n     public ObjectResponse<UserAuthenticationResponse> authenticateUser(String userId, String organizationId, String password, AuthenticationContext authenticationContext, OperationContext operationContext) throws DataAdapterClientErrorException {\n-        try {\n-            // Exchange authentication request with data adapter.\n-            UserAuthenticationRequest request = new UserAuthenticationRequest(userId, organizationId, password, authenticationContext, operationContext);\n-            HttpEntity<ObjectRequest<UserAuthenticationRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<UserAuthenticationResponse>> response = restTemplate.exchange(serviceUrl + \"/api/auth/user/authenticate\", HttpMethod.POST, entity, new ParameterizedTypeReference<ObjectResponse<UserAuthenticationResponse>>() {\n-            });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        UserAuthenticationRequest request = new UserAuthenticationRequest(userId, organizationId, password, authenticationContext, operationContext);\n+        return postObjectImpl(\"/api/auth/user/authenticate\", new ObjectRequest<>(request), UserAuthenticationResponse.class);\n     }\n \n     /**\n@@ -168,18 +112,8 @@ public RestTemplate getRestTemplate() {\n      * @throws DataAdapterClientErrorException Thrown when client request fails or user does not exist.\n      */\n     public ObjectResponse<UserDetailResponse> fetchUserDetail(String userId, String organizationId) throws DataAdapterClientErrorException {\n-        try {\n-            // Exchange user details with data adapter.\n-            UserDetailRequest request = new UserDetailRequest(userId, organizationId);\n-            HttpEntity<ObjectRequest<UserDetailRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<UserDetailResponse>> response = restTemplate.exchange(serviceUrl + \"/api/auth/user/info\", HttpMethod.POST, entity, new ParameterizedTypeReference<ObjectResponse<UserDetailResponse>>() {\n-            });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        UserDetailRequest request = new UserDetailRequest(userId, organizationId);\n+        return postObjectImpl(\"/api/auth/user/info\", new ObjectRequest<>(request), UserDetailResponse.class);\n     }\n \n     /**\n@@ -193,22 +127,12 @@ public RestTemplate getRestTemplate() {\n      * @throws DataAdapterClientErrorException Thrown when client request fails.\n      */\n     public ObjectResponse<InitAuthMethodResponse> initAuthMethod(String userId, String organizationId, AuthMethod authMethod, OperationContext operationContext) throws DataAdapterClientErrorException {\n-        try {\n-            // Exchange initialization request with data adapter.\n-            InitAuthMethodRequest request = new InitAuthMethodRequest(userId, organizationId, authMethod, operationContext);\n-            HttpEntity<ObjectRequest<InitAuthMethodRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<InitAuthMethodResponse>> response = restTemplate.exchange(serviceUrl + \"/api/auth/method/init\", HttpMethod.POST, entity, new ParameterizedTypeReference<ObjectResponse<InitAuthMethodResponse>>() {\n-            });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        InitAuthMethodRequest request = new InitAuthMethodRequest(userId, organizationId, authMethod, operationContext);\n+        return postObjectImpl(\"/api/auth/method/init\", new ObjectRequest<>(request), InitAuthMethodResponse.class);\n     }\n \n     /**\n-     * Create authorization SMS message with OTP authorization code.\n+     * Create authorization SMS message with new OTP authorization code.\n      *\n      * @param userId           User ID.\n      * @param organizationId   Organization ID.\n@@ -221,19 +145,28 @@ public RestTemplate getRestTemplate() {\n      * @throws DataAdapterClientErrorException Thrown when client request fails or SMS could not be delivered.\n      */\n     public ObjectResponse<CreateSmsAuthorizationResponse> createAuthorizationSms(String userId, String organizationId, AccountStatus accountStatus, AuthMethod authMethod, OperationContext operationContext, String lang, boolean resend) throws DataAdapterClientErrorException {\n-        try {\n-            CreateSmsAuthorizationRequest request = new CreateSmsAuthorizationRequest(userId, organizationId, accountStatus, lang, authMethod, operationContext, resend);\n-            HttpEntity<ObjectRequest<CreateSmsAuthorizationRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<CreateSmsAuthorizationResponse>> response = restTemplate.exchange(\n-                    serviceUrl + \"/api/auth/sms/create\", HttpMethod.POST, entity,\n-                    new ParameterizedTypeReference<ObjectResponse<CreateSmsAuthorizationResponse>>() {\n-                    });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        CreateSmsAuthorizationRequest request = new CreateSmsAuthorizationRequest(userId, organizationId, accountStatus, lang, authMethod, operationContext, resend);\n+        return postObjectImpl(\"/api/auth/sms/create\", new ObjectRequest<>(request), CreateSmsAuthorizationResponse.class);\n+    }\n+\n+    /**\n+     * Send authorization SMS message with existing OTP authorization code.\n+     *\n+     * @param userId            User ID.\n+     * @param organizationId    Organization ID.\n+     * @param accountStatus     User account status.\n+     * @param authMethod        Authentication method.\n+     * @param operationContext  Operation context.\n+     * @param messageId         Message ID.\n+     * @param authorizationCode SMS OTP authorization code.\n+     * @param lang              Language for i18n.\n+     * @param resend            Whether SMS is being resent.\n+     * @return Response with generated messageId.\n+     * @throws DataAdapterClientErrorException Thrown when client request fails or SMS could not be delivered.\n+     */\n+    public ObjectResponse<SendAuthorizationSmsResponse> sendAuthorizationSms(String userId, String organizationId, AccountStatus accountStatus, AuthMethod authMethod, OperationContext operationContext, String messageId, String authorizationCode, String lang, boolean resend) throws DataAdapterClientErrorException {\n+        SendAuthorizationSmsRequest request = new SendAuthorizationSmsRequest(userId, organizationId, accountStatus, authMethod, operationContext, messageId, authorizationCode, lang, resend);\n+        return postObjectImpl(\"/api/auth/sms/send\", new ObjectRequest<>(request), SendAuthorizationSmsResponse.class);\n     }\n \n     /**\n@@ -249,17 +182,8 @@ public RestTemplate getRestTemplate() {\n      * @throws DataAdapterClientErrorException Thrown when client request fails or SMS code authorization fails.\n      */\n     public ObjectResponse<VerifySmsAuthorizationResponse> verifyAuthorizationSms(String messageId, String authorizationCode, String userId, String organizationId, AccountStatus accountStatus, OperationContext operationContext) throws DataAdapterClientErrorException {\n-        try {\n-            VerifySmsAuthorizationRequest request = new VerifySmsAuthorizationRequest(messageId, authorizationCode, userId, organizationId, accountStatus, operationContext);\n-            HttpEntity<ObjectRequest<VerifySmsAuthorizationRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<VerifySmsAuthorizationResponse>> response = restTemplate.exchange(serviceUrl + \"/api/auth/sms/verify\", HttpMethod.POST, entity, new ParameterizedTypeReference<ObjectResponse<VerifySmsAuthorizationResponse>>() {\n-            });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        VerifySmsAuthorizationRequest request = new VerifySmsAuthorizationRequest(messageId, authorizationCode, userId, organizationId, accountStatus, operationContext);\n+        return postObjectImpl(\"/api/auth/sms/verify\", new ObjectRequest<>(request), VerifySmsAuthorizationResponse.class);\n     }\n \n     /**\n@@ -277,17 +201,8 @@ public RestTemplate getRestTemplate() {\n      * @throws DataAdapterClientErrorException Thrown when client request fails or authentication/authorization fails.\n      */\n     public ObjectResponse<VerifySmsAndPasswordResponse> verifyAuthorizationSmsAndPassword(String messageId, String authorizationCode, String userId, String organizationId, AccountStatus accountStatus, String password, AuthenticationContext authenticationContext, OperationContext operationContext) throws DataAdapterClientErrorException {\n-        try {\n-            VerifySmsAndPasswordRequest request = new VerifySmsAndPasswordRequest(messageId, authorizationCode, userId, organizationId, accountStatus, password, authenticationContext, operationContext);\n-            HttpEntity<ObjectRequest<VerifySmsAndPasswordRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<VerifySmsAndPasswordResponse>> response = restTemplate.exchange(serviceUrl + \"/api/auth/sms/password/verify\", HttpMethod.POST, entity, new ParameterizedTypeReference<ObjectResponse<VerifySmsAndPasswordResponse>>() {\n-            });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        VerifySmsAndPasswordRequest request = new VerifySmsAndPasswordRequest(messageId, authorizationCode, userId, organizationId, accountStatus, password, authenticationContext, operationContext);\n+        return postObjectImpl(\"/api/auth/sms/password/verify\", new ObjectRequest<>(request), VerifySmsAndPasswordResponse.class);\n     }\n \n     /**\n@@ -299,18 +214,8 @@ public RestTemplate getRestTemplate() {\n      * @throws DataAdapterClientErrorException Thrown when client request fails.\n      */\n     public ObjectResponse<CreateImplicitLoginOperationResponse> createImplicitLoginOperation(String clientId, String[] scopes) throws DataAdapterClientErrorException {\n-        try {\n-            // Exchange user details with data adapter.\n-            CreateImplicitLoginOperationRequest request = new CreateImplicitLoginOperationRequest(clientId, scopes);\n-            HttpEntity<ObjectRequest<CreateImplicitLoginOperationRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<CreateImplicitLoginOperationResponse>> response = restTemplate.exchange(serviceUrl + \"/api/operation/create\", HttpMethod.POST, entity, new ParameterizedTypeReference<ObjectResponse<CreateImplicitLoginOperationResponse>>() {\n-            });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        CreateImplicitLoginOperationRequest request = new CreateImplicitLoginOperationRequest(clientId, scopes);\n+        return postObjectImpl(\"/api/operation/create\", new ObjectRequest<>(request), CreateImplicitLoginOperationResponse.class);\n     }\n \n     /**\n@@ -326,17 +231,8 @@ public RestTemplate getRestTemplate() {\n      * @throws DataAdapterClientErrorException Thrown when client request fails or authentication/authorization fails.\n      */\n     public ObjectResponse<VerifyCertificateResponse> verifyClientCertificate(String userId, String organizationId, String clientCertificate, AuthMethod authMethod, AccountStatus accountStatus, OperationContext operationContext) throws DataAdapterClientErrorException {\n-        try {\n-            VerifyCertificateRequest request = new VerifyCertificateRequest(userId, organizationId, clientCertificate, authMethod, accountStatus, operationContext);\n-            HttpEntity<ObjectRequest<VerifyCertificateRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<VerifyCertificateResponse>> response = restTemplate.exchange(serviceUrl + \"/api/auth/certificate/verify\", HttpMethod.POST, entity, new ParameterizedTypeReference<ObjectResponse<VerifyCertificateResponse>>() {\n-            });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        VerifyCertificateRequest request = new VerifyCertificateRequest(userId, organizationId, clientCertificate, authMethod, accountStatus, operationContext);\n+        return postObjectImpl(\"/api/auth/certificate/verify\", new ObjectRequest<>(request), VerifyCertificateResponse.class);\n     }\n \n     /**\n@@ -350,18 +246,8 @@ public RestTemplate getRestTemplate() {\n      * @throws DataAdapterClientErrorException Thrown when client request fails.\n      */\n     public ObjectResponse<DecorateOperationFormDataResponse> decorateOperationFormData(String userId, String organizationId, AuthMethod authMethod, OperationContext operationContext) throws DataAdapterClientErrorException {\n-        try {\n-            // Exchange user details with data adapter.\n-            DecorateOperationFormDataRequest request = new DecorateOperationFormDataRequest(userId, organizationId, authMethod, operationContext);\n-            HttpEntity<ObjectRequest<DecorateOperationFormDataRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<DecorateOperationFormDataResponse>> response = restTemplate.exchange(serviceUrl + \"/api/operation/formdata/decorate\", HttpMethod.POST, entity, new ParameterizedTypeReference<ObjectResponse<DecorateOperationFormDataResponse>>() {\n-            });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        DecorateOperationFormDataRequest request = new DecorateOperationFormDataRequest(userId, organizationId, authMethod, operationContext);\n+        return postObjectImpl(\"/api/operation/formdata/decorate\", new ObjectRequest<>(request), DecorateOperationFormDataResponse.class);\n     }\n \n     /**\n@@ -374,23 +260,13 @@ public RestTemplate getRestTemplate() {\n      * @return Object response.\n      * @throws DataAdapterClientErrorException Thrown when client request fails.\n      */\n-    public ObjectResponse formDataChangedNotification(FormDataChange formDataChange, String userId, String organizationId, OperationContext operationContext) throws DataAdapterClientErrorException {\n-        try {\n-            // Exchange user details with data adapter.\n-            FormDataChangeNotificationRequest request = new FormDataChangeNotificationRequest();\n-            request.setUserId(userId);\n-            request.setOrganizationId(organizationId);\n-            request.setOperationContext(operationContext);\n-            request.setFormDataChange(formDataChange);\n-            HttpEntity<ObjectRequest<FormDataChangeNotificationRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse> response = restTemplate.exchange(serviceUrl + \"/api/operation/formdata/change\", HttpMethod.POST, entity, new ParameterizedTypeReference<ObjectResponse>() {\n-            });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+    public Response formDataChangedNotification(FormDataChange formDataChange, String userId, String organizationId, OperationContext operationContext) throws DataAdapterClientErrorException {\n+        FormDataChangeNotificationRequest request = new FormDataChangeNotificationRequest();\n+        request.setUserId(userId);\n+        request.setOrganizationId(organizationId);\n+        request.setOperationContext(operationContext);\n+        request.setFormDataChange(formDataChange);\n+        return postObjectImpl(\"/api/operation/formdata/change\", new ObjectRequest<>(request));\n     }\n \n     /**\n@@ -403,23 +279,13 @@ public ObjectResponse formDataChangedNotification(FormDataChange formDataChange,\n      * @param operationContext Operation context.\n      * @throws DataAdapterClientErrorException Thrown when client request fails.\n      */\n-    public ObjectResponse operationChangedNotification(OperationChange operationChange, String userId, String organizationId, OperationContext operationContext) throws DataAdapterClientErrorException {\n-        try {\n-            // Exchange user details with data adapter.\n-            OperationChangeNotificationRequest request = new OperationChangeNotificationRequest();\n-            request.setUserId(userId);\n-            request.setOrganizationId(organizationId);\n-            request.setOperationContext(operationContext);\n-            request.setOperationChange(operationChange);\n-            HttpEntity<ObjectRequest<OperationChangeNotificationRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse> response = restTemplate.exchange(serviceUrl + \"/api/operation/change\", HttpMethod.POST, entity, new ParameterizedTypeReference<ObjectResponse>() {\n-            });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+    public Response operationChangedNotification(OperationChange operationChange, String userId, String organizationId, OperationContext operationContext) throws DataAdapterClientErrorException {\n+        OperationChangeNotificationRequest request = new OperationChangeNotificationRequest();\n+        request.setUserId(userId);\n+        request.setOrganizationId(organizationId);\n+        request.setOperationContext(operationContext);\n+        request.setOperationChange(operationChange);\n+        return postObjectImpl(\"/api/operation/change\", new ObjectRequest<>(request));\n     }\n \n     /**\n@@ -431,19 +297,8 @@ public ObjectResponse operationChangedNotification(OperationChange operationChan\n      * @throws DataAdapterClientErrorException Thrown when client request fails.\n      */\n     public ObjectResponse<InitConsentFormResponse> initConsentForm(String userId, String organizationId, OperationContext operationContext) throws DataAdapterClientErrorException {\n-        try {\n-            InitConsentFormRequest request = new InitConsentFormRequest(userId, organizationId, operationContext);\n-            HttpEntity<ObjectRequest<InitConsentFormRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<InitConsentFormResponse>> response = restTemplate.exchange(\n-                    serviceUrl + \"/api/auth/consent/init\", HttpMethod.POST, entity,\n-                    new ParameterizedTypeReference<ObjectResponse<InitConsentFormResponse>>() {\n-                    });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        InitConsentFormRequest request = new InitConsentFormRequest(userId, organizationId, operationContext);\n+        return postObjectImpl(\"/api/auth/consent/init\", new ObjectRequest<>(request), InitConsentFormResponse.class);\n     }\n \n     /**\n@@ -456,19 +311,8 @@ public ObjectResponse operationChangedNotification(OperationChange operationChan\n      * @throws DataAdapterClientErrorException Thrown when client request fails.\n      */\n     public ObjectResponse<CreateConsentFormResponse> createConsentForm(String userId, String organizationId, OperationContext operationContext, String lang) throws DataAdapterClientErrorException {\n-        try {\n-            CreateConsentFormRequest request = new CreateConsentFormRequest(userId, organizationId, lang, operationContext);\n-            HttpEntity<ObjectRequest<CreateConsentFormRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<CreateConsentFormResponse>> response = restTemplate.exchange(\n-                    serviceUrl + \"/api/auth/consent/create\", HttpMethod.POST, entity,\n-                    new ParameterizedTypeReference<ObjectResponse<CreateConsentFormResponse>>() {\n-                    });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        CreateConsentFormRequest request = new CreateConsentFormRequest(userId, organizationId, lang, operationContext);\n+        return postObjectImpl(\"/api/auth/consent/create\", new ObjectRequest<>(request), CreateConsentFormResponse.class);\n     }\n \n     /**\n@@ -482,19 +326,8 @@ public ObjectResponse operationChangedNotification(OperationChange operationChan\n      * @throws DataAdapterClientErrorException Thrown when client request fails.\n      */\n     public ObjectResponse<ValidateConsentFormResponse> validateConsentForm(String userId, String organizationId, OperationContext operationContext, String lang, List<ConsentOption> options) throws DataAdapterClientErrorException {\n-        try {\n-            ValidateConsentFormRequest request = new ValidateConsentFormRequest(userId, organizationId, operationContext, lang, options);\n-            HttpEntity<ObjectRequest<ValidateConsentFormRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<ValidateConsentFormResponse>> response = restTemplate.exchange(\n-                    serviceUrl + \"/api/auth/consent/validate\", HttpMethod.POST, entity,\n-                    new ParameterizedTypeReference<ObjectResponse<ValidateConsentFormResponse>>() {\n-                    });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        ValidateConsentFormRequest request = new ValidateConsentFormRequest(userId, organizationId, operationContext, lang, options);\n+        return postObjectImpl(\"/api/auth/consent/validate\", new ObjectRequest<>(request), ValidateConsentFormResponse.class);\n     }\n \n     /**\n@@ -507,19 +340,8 @@ public ObjectResponse operationChangedNotification(OperationChange operationChan\n      * @throws DataAdapterClientErrorException Thrown when client request fails.\n      */\n     public ObjectResponse<SaveConsentFormResponse> saveConsentForm(String userId, String organizationId, OperationContext operationContext, List<ConsentOption> options) throws DataAdapterClientErrorException {\n-        try {\n-            SaveConsentFormRequest request = new SaveConsentFormRequest(userId, organizationId, operationContext, options);\n-            HttpEntity<ObjectRequest<SaveConsentFormRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<SaveConsentFormResponse>> response = restTemplate.exchange(\n-                    serviceUrl + \"/api/auth/consent/save\", HttpMethod.POST, entity,\n-                    new ParameterizedTypeReference<ObjectResponse<SaveConsentFormResponse>>() {\n-                    });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n-        }\n+        SaveConsentFormRequest request = new SaveConsentFormRequest(userId, organizationId, operationContext, options);\n+        return postObjectImpl(\"/api/auth/consent/save\", new ObjectRequest<>(request), SaveConsentFormResponse.class);\n     }\n \n     /**\n@@ -534,60 +356,65 @@ public ObjectResponse operationChangedNotification(OperationChange operationChan\n      * @throws DataAdapterClientErrorException Thrown when client request fails.\n      */\n     public ObjectResponse<AfsResponse> executeAfsAction(String userId, String organizationId, OperationContext operationContext, AfsRequestParameters afsRequestParameters, Map<String, Object> extras) throws DataAdapterClientErrorException {\n+        AfsRequest request = new AfsRequest(userId, organizationId, operationContext, afsRequestParameters, extras);\n+        return postObjectImpl(\"/api/afs/action/execute\", new ObjectRequest<>(request), AfsResponse.class);\n+    }\n+\n+    // Generic HTTP client methods\n+\n+    /**\n+     * Prepare POST object response. Uses default {@link Response} type reference for response.\n+     *\n+     * @param path Resource path.\n+     * @param request Request body.\n+     * @return Object obtained after processing the response JSON.\n+     * @throws DataAdapterClientErrorException In case of network, response / JSON processing, or other IO error.\n+     */\n+    private Response postObjectImpl(String path, ObjectRequest<?> request) throws DataAdapterClientErrorException {\n         try {\n-            AfsRequest request = new AfsRequest(userId, organizationId, operationContext, afsRequestParameters, extras);\n-            HttpEntity<ObjectRequest<AfsRequest>> entity = new HttpEntity<>(new ObjectRequest<>(request));\n-            ResponseEntity<ObjectResponse<AfsResponse>> response = restTemplate.exchange(\n-                    serviceUrl + \"/api/afs/action/execute\", HttpMethod.POST, entity,\n-                    new ParameterizedTypeReference<ObjectResponse<AfsResponse>>() {\n-                    });\n-            return new ObjectResponse<>(response.getBody().getResponseObject());\n-        } catch (HttpStatusCodeException ex) {\n-            throw httpStatusException(ex);\n-        } catch (ResourceAccessException ex) { // Data Adapter service is down\n-            throw resourceAccessException(ex);\n+            return restClient.postObject(path, request);\n+        } catch (RestClientException ex) {\n+            logger.warn(ex.getMessage(), ex);\n+            throw new DataAdapterClientErrorException(ex, new DataAdapterError(resolveErrorCode(ex), \"HTTP POST request failed.\"));\n         }\n     }\n \n     /**\n-     * Create new DataAdapterClientErrorException from ResourceAccessException.\n-     * @param ex Exception used when a resource access error occurs.\n-     * @return Data adapter client exception.\n+     * Prepare POST object response.\n+     *\n+     * @param path Resource path.\n+     * @param request Request body.\n+     * @param responseType Response type.\n+     * @return Object obtained after processing the response JSON.\n+     * @throws DataAdapterClientErrorException In case of network, response / JSON processing, or other IO error.\n      */\n-    private DataAdapterClientErrorException resourceAccessException(ResourceAccessException ex) {\n-        DataAdapterError error = new DataAdapterError(DataAdapterError.Code.COMMUNICATION_ERROR, ex.getMessage());\n-        return new DataAdapterClientErrorException(ex, error);\n+    private <T> ObjectResponse<T> postObjectImpl(String path, ObjectRequest<?> request, Class<T> responseType) throws DataAdapterClientErrorException {\n+        try {\n+            return restClient.postObject(path, request, responseType);\n+        } catch (RestClientException ex) {\n+            logger.warn(ex.getMessage(), ex);\n+            throw new DataAdapterClientErrorException(ex, new DataAdapterError(resolveErrorCode(ex), \"HTTP POST request failed.\"));\n+        }\n     }\n \n     /**\n-     * Create new DataAdapterClientErrorException from HttpStatusCodeException.\n-     * @param ex Exception used when an HTTP error occurs.\n-     * @return Data adapter client exception.\n+     * Resolve error code based on HTTP status code from REST client exception.\n      */\n-    private DataAdapterClientErrorException httpStatusException(HttpStatusCodeException ex) {\n-        try {\n-            TypeReference<ObjectResponse<DataAdapterError>> typeReference = new TypeReference<ObjectResponse<DataAdapterError>>() {\n-            };\n-            ObjectResponse<DataAdapterError> errorResponse = objectMapper.readValue(ex.getResponseBodyAsString(), typeReference);\n-            DataAdapterError error = errorResponse.getResponseObject();\n-            if (error == null) {\n-                error = new DataAdapterError();\n-            }\n-            if (error.getCode() == null) { // process malformed errors with undefined error code\n-                error.setCode(DataAdapterError.Code.ERROR_GENERIC);\n-                error.setMessage(ex.getMessage());\n-            }\n-            return new DataAdapterClientErrorException(ex, error);\n-        } catch (IOException ex2) {\n-            DataAdapterError error;\n-            if (ex.getStatusCode() != HttpStatus.OK) {\n-                error = new DataAdapterError(DataAdapterError.Code.COMMUNICATION_ERROR, \"HTTP error occurred: \" + ex.getMessage());\n-                return new DataAdapterClientErrorException(ex, error);\n-            } else {\n-                error = new DataAdapterError(DataAdapterError.Code.ERROR_GENERIC, \"IO error occurred: \" + ex2.getMessage());\n-                return new DataAdapterClientErrorException(ex2, error);\n-            }\n+    private String resolveErrorCode(RestClientException ex) {\n+        if (ex.getStatusCode() == null) {\n+            // REST client errors, response not received\n+            return DataAdapterError.Code.ERROR_GENERIC;\n+        }\n+        if (ex.getStatusCode().is4xxClientError()) {\n+            // Errors caused by invalid Next Step client requests\n+            return DataAdapterError.Code.DATA_ADAPTER_CLIENT_ERROR;\n+        }\n+        if (ex.getStatusCode().is5xxServerError()) {\n+            // Internal errors in Next Step server\n+            return DataAdapterError.Code.REMOTE_ERROR;\n         }\n+        // Other errors during communication\n+        return DataAdapterError.Code.COMMUNICATION_ERROR;\n     }\n \n }"
  },
  {
    "sha": "c654397b46288afc4a34c27297aa74230d93173f",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/AttributeConverter.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/AttributeConverter.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/AttributeConverter.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/AttributeConverter.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package io.getlime.security.powerauth.lib.webflow.authentication.model.converter;\n+package io.getlime.security.powerauth.lib.dataadapter.model.converter;\n \n import io.getlime.security.powerauth.lib.dataadapter.model.entity.attribute.*;\n import io.getlime.security.powerauth.lib.nextstep.model.entity.attribute.*;",
    "previous_filename": "powerauth-webflow-authentication/src/main/java/io/getlime/security/powerauth/lib/webflow/authentication/model/converter/AttributeConverter.java"
  },
  {
    "sha": "5fe17b96c59a9e62e67740748ddce33a2ca0e7cb",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/BankAccountListConverter.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/BankAccountListConverter.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/BankAccountListConverter.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/BankAccountListConverter.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package io.getlime.security.powerauth.lib.webflow.authentication.model.converter;\n+package io.getlime.security.powerauth.lib.dataadapter.model.converter;\n \n import io.getlime.security.powerauth.lib.dataadapter.model.entity.BankAccount;\n import io.getlime.security.powerauth.lib.nextstep.model.entity.BankAccountDetail;\n@@ -34,7 +34,7 @@\n      * @return BankAccount list.\n      */\n     public List<BankAccount> fromBankAccountDetailList(List<BankAccountDetail> bankAccounts) {\n-        List<BankAccount> result = new ArrayList<BankAccount>();\n+        List<BankAccount> result = new ArrayList<>();\n         for (BankAccountDetail bankAccountDetail: bankAccounts) {\n             BankAccount bankAccount = new BankAccount(bankAccountDetail.getNumber(), bankAccountDetail.getAccountId(),\n                     bankAccountDetail.getName(), bankAccountDetail.getBalance(), bankAccountDetail.getCurrency(),\n@@ -50,7 +50,7 @@\n      * @return BankAccountDetail list.\n      */\n     public List<BankAccountDetail> fromBankAccountList(List<BankAccount> bankAccounts) {\n-        List<BankAccountDetail> result = new ArrayList<BankAccountDetail>();\n+        List<BankAccountDetail> result = new ArrayList<>();\n         for (BankAccount bankAccount: bankAccounts) {\n             BankAccountDetail bankAccountDetail = new BankAccountDetail(bankAccount.getNumber(), bankAccount.getAccountId(),\n                     bankAccount.getName(), bankAccount.getBalance(), bankAccount.getCurrency(),",
    "previous_filename": "powerauth-webflow-authentication/src/main/java/io/getlime/security/powerauth/lib/webflow/authentication/model/converter/BankAccountListConverter.java"
  },
  {
    "sha": "81f72a00b008ab8d671944eddcb72d940be24589",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/BannerTypeConverter.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/BannerTypeConverter.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/BannerTypeConverter.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/BannerTypeConverter.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package io.getlime.security.powerauth.lib.webflow.authentication.model.converter;\n+package io.getlime.security.powerauth.lib.dataadapter.model.converter;\n \n import io.getlime.security.powerauth.lib.nextstep.model.entity.enumeration.BannerType;\n ",
    "previous_filename": "powerauth-webflow-authentication/src/main/java/io/getlime/security/powerauth/lib/webflow/authentication/model/converter/BannerTypeConverter.java"
  },
  {
    "sha": "dd18185c1c108b4a2b6338a040d8e105c365aae2",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/FormDataConverter.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/FormDataConverter.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/FormDataConverter.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/FormDataConverter.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package io.getlime.security.powerauth.lib.webflow.authentication.model.converter;\n+package io.getlime.security.powerauth.lib.dataadapter.model.converter;\n \n import io.getlime.security.powerauth.lib.dataadapter.model.entity.FormData;\n import io.getlime.security.powerauth.lib.dataadapter.model.entity.attribute.Attribute;",
    "previous_filename": "powerauth-webflow-authentication/src/main/java/io/getlime/security/powerauth/lib/webflow/authentication/model/converter/FormDataConverter.java"
  },
  {
    "sha": "69f0e245c3ec16c2b3f7b3432842ac2ac3f81ee8",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/PartyInfoConverter.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/PartyInfoConverter.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/PartyInfoConverter.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/PartyInfoConverter.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package io.getlime.security.powerauth.lib.webflow.authentication.model.converter;\n+package io.getlime.security.powerauth.lib.dataadapter.model.converter;\n \n import io.getlime.security.powerauth.lib.nextstep.model.entity.PartyInfo;\n ",
    "previous_filename": "powerauth-webflow-authentication/src/main/java/io/getlime/security/powerauth/lib/webflow/authentication/model/converter/PartyInfoConverter.java"
  },
  {
    "sha": "4ff6f613e1b5dd779d52a6dffaa5d41f70ee17ae",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/UserAccountStatusConverter.java",
    "status": "added",
    "additions": 119,
    "deletions": 0,
    "changes": 119,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/UserAccountStatusConverter.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/UserAccountStatusConverter.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/UserAccountStatusConverter.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -0,0 +1,119 @@\n+/*\n+ * Copyright 2019 Wultra s.r.o.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.getlime.security.powerauth.lib.dataadapter.model.converter;\n+\n+import io.getlime.security.powerauth.lib.dataadapter.model.enumeration.AccountStatus;\n+import io.getlime.security.powerauth.lib.nextstep.model.entity.enumeration.UserAccountStatus;\n+import io.getlime.security.powerauth.lib.nextstep.model.entity.enumeration.UserIdentityStatus;\n+\n+/**\n+ * Converter for user account status.\n+ *\n+ * @author Roman Strobl, roman.strobl@wultra.com\n+ */\n+public class UserAccountStatusConverter {\n+\n+    /**\n+     * Convert user identity status to account status.\n+     * @param userIdentityStatus User identity status.\n+     * @return Account status in Data Adapter.\n+     */\n+    public AccountStatus toAccountStatus(UserIdentityStatus userIdentityStatus) {\n+        if (userIdentityStatus == null) {\n+            return null;\n+        }\n+\n+        switch (userIdentityStatus) {\n+            case ACTIVE:\n+                return AccountStatus.ACTIVE;\n+\n+            case BLOCKED:\n+            case REMOVED:\n+                return AccountStatus.NOT_ACTIVE;\n+\n+            default:\n+                return null;\n+        }\n+    }\n+\n+    /**\n+     * Convert user identity status to user account status.\n+     * @param userIdentityStatus User identity status.\n+     * @return User account status in Next Step.\n+     */\n+    public UserAccountStatus toUserAccountStatus(UserIdentityStatus userIdentityStatus) {\n+        if (userIdentityStatus == null) {\n+            return null;\n+        }\n+\n+        switch (userIdentityStatus) {\n+            case ACTIVE:\n+                return UserAccountStatus.ACTIVE;\n+\n+            case BLOCKED:\n+            case REMOVED:\n+                return UserAccountStatus.NOT_ACTIVE;\n+\n+            default:\n+                return null;\n+        }\n+    }\n+\n+    /**\n+     * Convert user account status in Next Step to account status in Data Adapter.\n+     * @param accountStatus User account status.\n+     * @return Account status in Data Adapter.\n+     */\n+    public AccountStatus fromUserAccountStatus(UserAccountStatus accountStatus) {\n+        if (accountStatus == null) {\n+            return null;\n+        }\n+\n+        switch (accountStatus) {\n+            case ACTIVE:\n+                return AccountStatus.ACTIVE;\n+\n+            case NOT_ACTIVE:\n+                return AccountStatus.NOT_ACTIVE;\n+\n+            default:\n+                return null;\n+        }\n+    }\n+\n+    /**\n+     * Convert account status in Data Adapter to user account status in Next Step.\n+     * @param userAccountStatus User account status in Next Step.\n+     * @return User account status in Data Adapter.\n+     */\n+    public UserAccountStatus fromAccountStatus(AccountStatus userAccountStatus) {\n+        if (userAccountStatus == null) {\n+            return null;\n+        }\n+\n+        switch (userAccountStatus) {\n+            case ACTIVE:\n+                return UserAccountStatus.ACTIVE;\n+\n+            case NOT_ACTIVE:\n+                return UserAccountStatus.NOT_ACTIVE;\n+\n+            default:\n+                return null;\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "1cb7870104c9e1b29a6901d8abbe54d1fccd4f7d",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/ValueFormatTypeConverter.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/ValueFormatTypeConverter.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/ValueFormatTypeConverter.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/converter/ValueFormatTypeConverter.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package io.getlime.security.powerauth.lib.webflow.authentication.model.converter;\n+package io.getlime.security.powerauth.lib.dataadapter.model.converter;\n \n import io.getlime.security.powerauth.lib.nextstep.model.entity.enumeration.ValueFormatType;\n ",
    "previous_filename": "powerauth-webflow-authentication/src/main/java/io/getlime/security/powerauth/lib/webflow/authentication/model/converter/ValueFormatTypeConverter.java"
  },
  {
    "sha": "f13fa28866a03a1359a845be75edac8d9a74d3d7",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/entity/DataAdapterError.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/entity/DataAdapterError.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/entity/DataAdapterError.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/entity/DataAdapterError.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -39,6 +39,7 @@\n         public static final String INPUT_INVALID = \"INPUT_INVALID\";\n         public static final String OPERATION_CONTEXT_INVALID = \"OPERATION_CONTEXT_INVALID\";\n         public static final String CONSENT_DATA_INVALID = \"CONSENT_DATA_INVALID\";\n+        public static final String DATA_ADAPTER_CLIENT_ERROR = \"DATA_ADAPTER_CLIENT_ERROR\";\n         public static final String REMOTE_ERROR = \"REMOTE_ERROR\";\n         public static final String COMMUNICATION_ERROR = \"COMMUNICATION_ERROR\";\n     }"
  },
  {
    "sha": "263658ac456d50b2268fdc484c99270a374c6e48",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/entity/attribute/Attribute.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/entity/attribute/Attribute.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/entity/attribute/Attribute.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/entity/attribute/Attribute.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -28,7 +28,7 @@\n  *\n  * @author Petr Dvorak, petr@wultra.com\n  */\n-@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = \"type\")\n+@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = \"type\")\n @JsonSubTypes({\n         @JsonSubTypes.Type(value = AmountAttribute.class, name = \"AMOUNT\"),\n         @JsonSubTypes.Type(value = NoteAttribute.class, name = \"NOTE\"),"
  },
  {
    "sha": "49cf3648585744f76d417ffab90db84646cce5a0",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/enumeration/AfsAuthInstrument.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/enumeration/AfsAuthInstrument.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/enumeration/AfsAuthInstrument.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/enumeration/AfsAuthInstrument.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -23,9 +23,9 @@\n public enum AfsAuthInstrument {\n \n     /**\n-     * Password is used for step authentication / authorization.\n+     * Credential is used for step authentication / authorization.\n      */\n-    PASSWORD,\n+    CREDENTIAL,\n \n     /**\n      * OTP authorization code is used for step authentication / authorization."
  },
  {
    "sha": "a96227678c417be1091f41b6e8db0c141aacc5f8",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/request/AfsRequestParameters.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/request/AfsRequestParameters.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/request/AfsRequestParameters.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/request/AfsRequestParameters.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -16,8 +16,8 @@\n package io.getlime.security.powerauth.lib.dataadapter.model.request;\n \n import io.getlime.security.powerauth.lib.dataadapter.model.enumeration.AfsAction;\n-import io.getlime.security.powerauth.lib.dataadapter.model.enumeration.AfsType;\n import io.getlime.security.powerauth.lib.dataadapter.model.enumeration.AfsAuthInstrument;\n+import io.getlime.security.powerauth.lib.dataadapter.model.enumeration.AfsType;\n import io.getlime.security.powerauth.lib.dataadapter.model.enumeration.OperationTerminationReason;\n import io.getlime.security.powerauth.lib.nextstep.model.enumeration.AuthStepResult;\n "
  },
  {
    "sha": "347f12f2f2937104bb2fd20835322709f9c594e3",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/request/SendAuthorizationSmsRequest.java",
    "status": "added",
    "additions": 247,
    "deletions": 0,
    "changes": 247,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/request/SendAuthorizationSmsRequest.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/request/SendAuthorizationSmsRequest.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/request/SendAuthorizationSmsRequest.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -0,0 +1,247 @@\n+/*\n+ * Copyright 2017 Wultra s.r.o.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.getlime.security.powerauth.lib.dataadapter.model.request;\n+\n+import io.getlime.security.powerauth.lib.dataadapter.model.entity.OperationContext;\n+import io.getlime.security.powerauth.lib.dataadapter.model.enumeration.AccountStatus;\n+import io.getlime.security.powerauth.lib.nextstep.model.enumeration.AuthMethod;\n+\n+/**\n+ * Request for sending SMS OTP authorization message.\n+ *\n+ * @author Roman Strobl, roman.strobl@wultra.com\n+ */\n+public class SendAuthorizationSmsRequest {\n+\n+    /**\n+     * User ID for this authorization request.\n+     */\n+    private String userId;\n+\n+    /**\n+     * Organization ID for this authorization request.\n+     */\n+    private String organizationId;\n+\n+    /**\n+     * User account status.\n+     */\n+    private AccountStatus accountStatus;\n+\n+    /**\n+     * Authentication method.\n+     */\n+    private AuthMethod authMethod;\n+\n+    /**\n+     * Operation context.\n+     */\n+    private OperationContext operationContext;\n+\n+    /**\n+     * Message ID.\n+     */\n+    private String messageId;\n+\n+    /**\n+     * SMS OTP authorization code.\n+     */\n+    private String authorizationCode;\n+\n+    /**\n+     * Language used in the SMS OTP message.\n+     */\n+    private String lang;\n+\n+    /**\n+     * Whether SMS is being resent.\n+     */\n+    private boolean resend;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public SendAuthorizationSmsRequest() {\n+    }\n+\n+    /**\n+     * Constructor with user ID, language and operation context.\n+     * @param userId User ID.\n+     * @param organizationId Organization ID.\n+     * @param accountStatus User account status.\n+     * @param authMethod Authentication method.\n+     * @param operationContext Operation context.\n+     * @param messageId Message ID.\n+     * @param authorizationCode SMS OTP authorization code.\n+     * @param lang SMS language.\n+     * @param resend Whether SMS is being resent.\n+     */\n+    public SendAuthorizationSmsRequest(String userId, String organizationId, AccountStatus accountStatus, AuthMethod authMethod, OperationContext operationContext, String messageId, String authorizationCode, String lang, boolean resend) {\n+        this.userId = userId;\n+        this.organizationId = organizationId;\n+        this.accountStatus = accountStatus;\n+        this.authMethod = authMethod;\n+        this.operationContext = operationContext;\n+        this.messageId = messageId;\n+        this.authorizationCode = authorizationCode;\n+        this.lang = lang;\n+        this.resend = resend;\n+    }\n+\n+    /**\n+     * Get user ID.\n+     * @return User ID.\n+     */\n+    public String getUserId() {\n+        return userId;\n+    }\n+\n+    /**\n+     * Set user ID.\n+     * @param userId user ID.\n+     */\n+    public void setUserId(String userId) {\n+        this.userId = userId;\n+    }\n+\n+    /**\n+     * Get organization ID.\n+     * @return Organization ID.\n+     */\n+    public String getOrganizationId() {\n+        return organizationId;\n+    }\n+\n+    /**\n+     * Set organization ID.\n+     * @param organizationId Organization ID.\n+     */\n+    public void setOrganizationId(String organizationId) {\n+        this.organizationId = organizationId;\n+    }\n+\n+    /**\n+     * Get current user account status.\n+     * @return User account status.\n+     */\n+    public AccountStatus getAccountStatus() {\n+        return accountStatus;\n+    }\n+\n+    /**\n+     * Set current user account status.\n+     * @param accountStatus User account status.\n+     */\n+    public void setAccountStatus(AccountStatus accountStatus) {\n+        this.accountStatus = accountStatus;\n+    }\n+\n+    /**\n+     * Get message ID.\n+     * @return Message ID.\n+     */\n+    public String getMessageId() {\n+        return messageId;\n+    }\n+\n+    /**\n+     * Set message ID.\n+     * @param messageId Message ID.\n+     */\n+    public void setMessageId(String messageId) {\n+        this.messageId = messageId;\n+    }\n+\n+    /**\n+     * Get SMS OTP authorization code.\n+     * @return SMS OTP authorization code.\n+     */\n+    public String getAuthorizationCode() {\n+        return authorizationCode;\n+    }\n+\n+    /**\n+     * Set SMS OTP authorization code.\n+     * @param authorizationCode SMS OTP authorization code.\n+     */\n+    public void setAuthorizationCode(String authorizationCode) {\n+        this.authorizationCode = authorizationCode;\n+    }\n+\n+    /**\n+     * Get authentication method.\n+     * @return Authentication method.\n+     */\n+    public AuthMethod getAuthMethod() {\n+        return authMethod;\n+    }\n+\n+    /**\n+     * Set authentication method.\n+     * @param authMethod Authentication method.\n+     */\n+    public void setAuthMethod(AuthMethod authMethod) {\n+        this.authMethod = authMethod;\n+    }\n+\n+    /**\n+     * Get operation context.\n+     * @return Operation context.\n+     */\n+    public OperationContext getOperationContext() {\n+        return operationContext;\n+    }\n+\n+    /**\n+     * Set operation context.\n+     * @param operationContext Operation context.\n+     */\n+    public void setOperationContext(OperationContext operationContext) {\n+        this.operationContext = operationContext;\n+    }\n+\n+    /**\n+     * Get SMS language.\n+     * @return SMS language.\n+     */\n+    public String getLang() {\n+        return lang;\n+    }\n+\n+    /**\n+     * Set SMS language.\n+     * @param lang SMS language.\n+     */\n+    public void setLang(String lang) {\n+        this.lang = lang;\n+    }\n+\n+    /**\n+     * Get whether SMS is being resent.\n+     * @return Whether SMS is being resent.\n+     */\n+    public boolean isResend() {\n+        return resend;\n+    }\n+\n+    /**\n+     * Set whether SMS is being resent.\n+     * @param resend Whether SMS is being resent.\n+     */\n+    public void setResend(boolean resend) {\n+        this.resend = resend;\n+    }\n+}"
  },
  {
    "sha": "dd5c1afe44a67a4afa9c2fd4ec98a288b99d8b29",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/response/SendAuthorizationSmsResponse.java",
    "status": "added",
    "additions": 103,
    "deletions": 0,
    "changes": 103,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/response/SendAuthorizationSmsResponse.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/response/SendAuthorizationSmsResponse.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/response/SendAuthorizationSmsResponse.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -0,0 +1,103 @@\n+/*\n+ * Copyright 2017 Wultra s.r.o.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.getlime.security.powerauth.lib.dataadapter.model.response;\n+\n+import io.getlime.security.powerauth.lib.dataadapter.model.enumeration.SmsDeliveryResult;\n+\n+/**\n+ * Response after sending SMS OTP authorization message.\n+ *\n+ * @author Roman Strobl, roman.strobl@wultra.com\n+ */\n+public class SendAuthorizationSmsResponse {\n+\n+    /**\n+     * Message ID.\n+     */\n+    private String messageId;\n+\n+    /**\n+     * Result of SMS delivery.\n+     */\n+    private SmsDeliveryResult smsDeliveryResult;\n+\n+    /**\n+     * Error message key.\n+     */\n+    private String errorMessage;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public SendAuthorizationSmsResponse() {\n+    }\n+\n+    /**\n+     * Constructor with message ID.\n+     * @param messageId Message ID.\n+     */\n+    public SendAuthorizationSmsResponse(String messageId) {\n+        this.messageId = messageId;\n+    }\n+\n+    /**\n+     * Get message ID.\n+     * @return Message ID.\n+     */\n+    public String getMessageId() {\n+        return messageId;\n+    }\n+\n+    /**\n+     * Set message ID.\n+     * @param messageId Message ID.\n+     */\n+    public void setMessageId(String messageId) {\n+        this.messageId = messageId;\n+    }\n+\n+    /**\n+     * Get result of SMS message delivery.\n+     * @return Result of SMS message delivery.\n+     */\n+    public SmsDeliveryResult getSmsDeliveryResult() {\n+        return smsDeliveryResult;\n+    }\n+\n+    /**\n+     * Set result of SMS message delivery.\n+     * @param smsDeliveryResult Result of SMS message delivery.\n+     */\n+    public void setSmsDeliveryResult(SmsDeliveryResult smsDeliveryResult) {\n+        this.smsDeliveryResult = smsDeliveryResult;\n+    }\n+\n+    /**\n+     * Get error message key used in case SMS message could not be delivered.\n+     * @return Error message key.\n+     */\n+    public String getErrorMessage() {\n+        return errorMessage;\n+    }\n+\n+    /**\n+     * Set error message key used in case SMS message could not be delivered.\n+     * @param errorMessage Error message key.\n+     */\n+    public void setErrorMessage(String errorMessage) {\n+        this.errorMessage = errorMessage;\n+    }\n+}"
  },
  {
    "sha": "4b98ca4ed26d775dc94a6cbb55bc0b10736df28e",
    "filename": "powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/response/UserAuthenticationResponse.java",
    "status": "modified",
    "additions": 1,
    "deletions": 20,
    "changes": 21,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/response/UserAuthenticationResponse.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/response/UserAuthenticationResponse.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-data-adapter-model/src/main/java/io/getlime/security/powerauth/lib/dataadapter/model/response/UserAuthenticationResponse.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -27,7 +27,6 @@\n public class UserAuthenticationResponse {\n \n     private UserAuthenticationResult authenticationResult;\n-    private UserDetailResponse userDetail;\n     private String errorMessage;\n     private Integer remainingAttempts;\n     private boolean showRemainingAttempts;\n@@ -42,11 +41,9 @@ public UserAuthenticationResponse() {\n     /**\n      * Parameterized constructor.\n      * @param authenticationResult Result of user authentication.\n-     * @param userDetail User detail.\n      */\n-    public UserAuthenticationResponse(UserAuthenticationResult authenticationResult, UserDetailResponse userDetail) {\n+    public UserAuthenticationResponse(UserAuthenticationResult authenticationResult) {\n         this.authenticationResult = authenticationResult;\n-        this.userDetail = userDetail;\n     }\n \n     /**\n@@ -65,22 +62,6 @@ public void setAuthenticationResult(UserAuthenticationResult authenticationResul\n         this.authenticationResult = authenticationResult;\n     }\n \n-    /**\n-     * Get user detail.\n-     * @return User detail.\n-     */\n-    public UserDetailResponse getUserDetail() {\n-        return userDetail;\n-    }\n-\n-    /**\n-     * Set user detail.\n-     * @param userDetail User detail.\n-     */\n-    public void setUserDetail(UserDetailResponse userDetail) {\n-        this.userDetail = userDetail;\n-    }\n-\n     /**\n      * Get error message key used in case user authentication fails.\n      * @return Error message key."
  },
  {
    "sha": "79a9d678114221bd9b8b5e43c05893aa7634e344",
    "filename": "powerauth-nextstep-client/pom.xml",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-client/pom.xml",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-client/pom.xml",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-nextstep-client/pom.xml?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -39,6 +39,11 @@\n             <artifactId>powerauth-nextstep-model</artifactId>\n             <version>1.1.0-SNAPSHOT</version>\n         </dependency>\n+        <dependency>\n+            <groupId>io.getlime.core</groupId>\n+            <artifactId>rest-client-base</artifactId>\n+            <version>1.3.0-SNAPSHOT</version>\n+        </dependency>\n \n     </dependencies>\n "
  },
  {
    "sha": "53f8248f4697b1c076e5de8e3708930821588e2d",
    "filename": "powerauth-nextstep-client/src/main/java/io/getlime/security/powerauth/lib/nextstep/client/NextStepClient.java",
    "status": "modified",
    "additions": 1970,
    "deletions": 533,
    "changes": 2503,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-client/src/main/java/io/getlime/security/powerauth/lib/nextstep/client/NextStepClient.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-client/src/main/java/io/getlime/security/powerauth/lib/nextstep/client/NextStepClient.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-nextstep-client/src/main/java/io/getlime/security/powerauth/lib/nextstep/client/NextStepClient.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb"
  },
  {
    "sha": "b1247c6cb09eb3b39b33798b64c069de2d41eeec",
    "filename": "powerauth-nextstep-client/src/main/java/io/getlime/security/powerauth/lib/nextstep/client/NextStepClientException.java",
    "status": "added",
    "additions": 125,
    "deletions": 0,
    "changes": 125,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-client/src/main/java/io/getlime/security/powerauth/lib/nextstep/client/NextStepClientException.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-client/src/main/java/io/getlime/security/powerauth/lib/nextstep/client/NextStepClientException.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-nextstep-client/src/main/java/io/getlime/security/powerauth/lib/nextstep/client/NextStepClientException.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2017 Wultra s.r.o.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.getlime.security.powerauth.lib.nextstep.client;\n+\n+import com.wultra.core.rest.client.base.RestClientException;\n+import io.getlime.core.rest.model.base.entity.Error;\n+import io.getlime.security.powerauth.lib.nextstep.model.entity.error.NextStepError;\n+\n+/**\n+ * Class representing a Next Step client exception created when calling the Next Step REST API.\n+ *\n+ * @author Roman Strobl, roman.strobl@wultra.com\n+ */\n+public class NextStepClientException extends Exception {\n+\n+    private Error error;\n+\n+    /**\n+     * Default constructor.\n+     */\n+    public NextStepClientException() {\n+        super();\n+        this.error = new NextStepError();\n+    }\n+\n+    /**\n+     * Constructor with error.\n+     * @param error Error.\n+     */\n+    public NextStepClientException(Error error) {\n+        super(error != null ? error.getMessage() : null);\n+        this.error = error;\n+    }\n+\n+    /**\n+     * Constructor with message and error.\n+     * @param message Message.\n+     * @param error Error.\n+     */\n+    public NextStepClientException(String message, Error error) {\n+        super(message);\n+        this.error = error;\n+    }\n+\n+    /**\n+     * Constructor with message, cause and error.\n+     * @param message Message.\n+     * @param cause Cause.\n+     * @param error Error.\n+     */\n+    public NextStepClientException(String message, Throwable cause, Error error) {\n+        super(message, cause);\n+        this.error = error;\n+    }\n+\n+    /**\n+     * Constructor with cause and error.\n+     * @param cause Cause.\n+     * @param error Error.\n+     */\n+    public NextStepClientException(Throwable cause, Error error) {\n+        super(cause);\n+        this.error = error;\n+    }\n+\n+    /**\n+     * Constructor with all details.\n+     * @param message Message.\n+     * @param cause Cause.\n+     * @param enableSuppression Whether suppression is enabled.\n+     * @param writableStackTrace Writeable stacktrace.\n+     * @param error Error.\n+     */\n+    public NextStepClientException(String message, Throwable cause, boolean enableSuppression, boolean writableStackTrace, Error error) {\n+        super(message, cause, enableSuppression, writableStackTrace);\n+        this.error = error;\n+    }\n+\n+    /**\n+     * Set the error.\n+     * @param error Error.\n+     */\n+    public void setError(Error error) {\n+        this.error = error;\n+    }\n+\n+    /**\n+     * Get the error.\n+     * @return Error.\n+     */\n+    public Error getError() {\n+        return error;\n+    }\n+\n+    /**\n+     * Get the original Next Step error.\n+     * @return Original Next Step error.\n+     */\n+    public Error getNextStepError() {\n+        Throwable cause = getCause();\n+        if (!(cause instanceof RestClientException)) {\n+            return null;\n+        }\n+        RestClientException ex = (RestClientException) cause;\n+        if (ex.getErrorResponse() == null) {\n+            return null;\n+        }\n+        return ex.getErrorResponse().getResponseObject();\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "8cf22181510ede1a575fdd808d7c53c024b4c758",
    "filename": "powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/AfsActionDetail.java",
    "status": "modified",
    "additions": 17,
    "deletions": 49,
    "changes": 66,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/AfsActionDetail.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/AfsActionDetail.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/AfsActionDetail.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -15,67 +15,35 @@\n  */\n package io.getlime.security.powerauth.lib.nextstep.model.entity;\n \n+import lombok.Data;\n+\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Positive;\n+import javax.validation.constraints.Size;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n \n /**\n  * Class representing AFS action entities.\n  *\n  * @author Roman Strobl, roman.strobl@wultra.com\n  */\n+@Data\n public class AfsActionDetail {\n \n+    @NotBlank\n+    @Size(min = 2, max = 256)\n     private String action;\n+    @Positive\n     private int stepIndex;\n+    @Size(min = 2, max = 256)\n     private String afsLabel;\n+    @NotNull\n     private boolean afsResponseApplied;\n-    private Map<String, Object> requestExtras;\n-    private Map<String, Object> responseExtras;\n-\n-    public String getAction() {\n-        return action;\n-    }\n-\n-    public void setAction(String action) {\n-        this.action = action;\n-    }\n-\n-    public int getStepIndex() {\n-        return stepIndex;\n-    }\n-\n-    public void setStepIndex(int stepIndex) {\n-        this.stepIndex = stepIndex;\n-    }\n-\n-    public String getAfsLabel() {\n-        return afsLabel;\n-    }\n-\n-    public void setAfsLabel(String afsLabel) {\n-        this.afsLabel = afsLabel;\n-    }\n-\n-    public boolean isAfsResponseApplied() {\n-        return afsResponseApplied;\n-    }\n-\n-    public void setAfsResponseApplied(boolean afsResponseApplied) {\n-        this.afsResponseApplied = afsResponseApplied;\n-    }\n-\n-    public Map<String, Object> getRequestExtras() {\n-        return requestExtras;\n-    }\n-\n-    public void setRequestExtras(Map<String, Object> requestExtras) {\n-        this.requestExtras = requestExtras;\n-    }\n-\n-    public Map<String, Object> getResponseExtras() {\n-        return responseExtras;\n-    }\n+    @NotNull\n+    private final Map<String, Object> requestExtras = new LinkedHashMap<>();\n+    @NotNull\n+    private final Map<String, Object> responseExtras = new LinkedHashMap<>();\n \n-    public void setResponseExtras(Map<String, Object> responseExtras) {\n-        this.responseExtras = responseExtras;\n-    }\n }"
  },
  {
    "sha": "bd91b0c548e56ce668f418c3476c55a67d415e73",
    "filename": "powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/ApplicationContext.java",
    "status": "modified",
    "additions": 16,
    "deletions": 89,
    "changes": 105,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/ApplicationContext.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/ApplicationContext.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/ApplicationContext.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -15,8 +15,13 @@\n  */\n package io.getlime.security.powerauth.lib.nextstep.model.entity;\n \n+import lombok.Data;\n+\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Size;\n import java.util.ArrayList;\n-import java.util.HashMap;\n+import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n \n@@ -25,98 +30,20 @@\n  *\n  * @author Roman Strobl, roman.strobl@wultra.com\n  */\n+@Data\n public class ApplicationContext {\n \n+    @NotBlank\n+    @Size(min = 1, max = 256)\n     private String id;\n+    @NotBlank\n+    @Size(min = 2, max = 256)\n     private String name;\n+    @Size(min = 2, max = 256)\n     private String description;\n-    private final List<String> originalScopes;\n-    private final Map<String, Object> extras;\n-\n-    /**\n-     * Default constructor.\n-     */\n-    public ApplicationContext() {\n-        extras = new HashMap<>();\n-        originalScopes = new ArrayList<>();\n-    }\n-\n-    /**\n-     * Constructor with all details.\n-     * @param id Application identifier.\n-     * @param name Application name.\n-     * @param description Application description\n-     */\n-    public ApplicationContext(String id, String name, String description) {\n-        this.id = id;\n-        this.name = name;\n-        this.description = description;\n-        this.originalScopes = new ArrayList<>();\n-        this.extras = new HashMap<>();\n-    }\n-\n-    /**\n-     * Get application identifier.\n-     * @return Application identifier.\n-     */\n-    public String getId() {\n-        return id;\n-    }\n-\n-    /**\n-     * Set application identifier.\n-     * @param id Application identifier.\n-     */\n-    public void setId(String id) {\n-        this.id = id;\n-    }\n-\n-    /**\n-     * Get application name.\n-     * @return Application name.\n-     */\n-    public String getName() {\n-        return name;\n-    }\n-\n-    /**\n-     * Set application name.\n-     * @param name Application name.\n-     */\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n-\n-    /**\n-     * Get application description.\n-     * @return Application description.\n-     */\n-    public String getDescription() {\n-        return description;\n-    }\n-\n-    /**\n-     * Set application description.\n-     * @param description Application description.\n-     */\n-    public void setDescription(String description) {\n-        this.description = description;\n-    }\n-\n-    /**\n-     * Get the list with the original OAuth 2.0 scopes used when requesting the operation.\n-     * @return List of originally requested scopes.\n-     */\n-    public List<String> getOriginalScopes() {\n-        return originalScopes;\n-    }\n-\n-    /**\n-     * Get extra information for OAuth 2.0 consent screen.\n-     * @return Extra information for OAuth 2.0 consent screen.\n-     */\n-    public Map<String, Object> getExtras() {\n-        return extras;\n-    }\n+    @NotNull\n+    private final List<String> originalScopes = new ArrayList<>();\n+    @NotNull\n+    private final Map<String, Object> extras = new LinkedHashMap<>();\n \n }"
  },
  {
    "sha": "a9c58ae883f1ff4cd5408cac4d9b3826e814e793",
    "filename": "powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/ApplicationDetail.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/wultra/powerauth-webflow/blob/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/ApplicationDetail.java",
    "raw_url": "https://github.com/wultra/powerauth-webflow/raw/4f1143f9b730ff35cc40193de5db7954b389d9fb/powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/ApplicationDetail.java",
    "contents_url": "https://api.github.com/repos/wultra/powerauth-webflow/contents/powerauth-nextstep-model/src/main/java/io/getlime/security/powerauth/lib/nextstep/model/entity/ApplicationDetail.java?ref=4f1143f9b730ff35cc40193de5db7954b389d9fb",
    "patch": "@@ -19,7 +19,9 @@\n import lombok.Data;\n import lombok.EqualsAndHashCode;\n \n+import javax.validation.constraints.NotBlank;\n import javax.validation.constraints.NotNull;\n+import javax.validation.constraints.Size;\n import java.util.Date;\n \n /**\n@@ -31,11 +33,14 @@\n @EqualsAndHashCode(of = \"applicationName\")\n public class ApplicationDetail {\n \n-    @NotNull\n+    @NotBlank\n+    @Size(min = 2, max = 256)\n     private String applicationName;\n     @NotNull\n     private ApplicationStatus applicationStatus;\n+    @Size(min = 2, max = 256)\n     private String description;\n+    @Size(min = 2, max = 256)\n     private String organizationId;\n     @NotNull\n     private Date timestampCreated;"
  }
]
