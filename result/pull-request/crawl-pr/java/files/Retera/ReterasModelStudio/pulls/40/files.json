[
  {
    "sha": "3a93fe4b65d674cb9da900c5d0a159969e167440",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 87,
    "deletions": 81,
    "changes": 168,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/build.gradle",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/build.gradle",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/build.gradle?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,81 +1,87 @@\n-buildscript {\r\n-    repositories {\r\n-        mavenLocal()\r\n-\t\tflatDir {\r\n-\t\t\tdirs \"$rootProject.projectDir/jars\"\r\n-\t\t}\r\n-        mavenCentral()\r\n-        maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\r\n-        maven { url \"https://maven.nikr.net/\" }\r\n-        jcenter()\r\n-        maven { url 'https://jitpack.io' }\r\n-    }\r\n-}\r\n-\r\n-allprojects {\r\n-    apply plugin: \"eclipse\"\r\n-    apply plugin: \"idea\"\r\n-\r\n-    version = '1.0'\r\n-    ext {\r\n-        appName = \"retera-jwc3\"\r\n-        jtattooVersion = '1.6.11'\r\n-        miglayoutVersion = '4.2'\r\n-\t\tlwjglVersion = '2.9.3'\r\n-\t\timage4jVersion = '0.7'\r\n-\t\trsyntaxtextareaVersion = '3.0.2'\r\n-    }\r\n-\r\n-    repositories {\r\n-        mavenLocal()\r\n-        mavenCentral()\r\n-        maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\r\n-        maven { url \"https://maven.nikr.net/\" }\r\n-        maven { url \"https://oss.sonatype.org/content/repositories/releases/\" }\r\n-        maven { url 'https://jitpack.io' }\r\n-    }\r\n-}\r\n-\r\n-project(\":modelstudio\") {\r\n-    apply plugin: \"java\"\r\n-\r\n-\r\n-    dependencies {\r\n-        compile project(\":thirdparty\")\r\n-        compile \"com.fifesoft:rsyntaxtextarea:$rsyntaxtextareaVersion\"\r\n-        compile \"org.jclarion:image4j:$image4jVersion\"\r\n-\r\n-        compile \"com.github.inwc3:JMPQ3:1.7.14\"\r\n-        compile \"org.json:json:20200518\"\r\n-    }\r\n-}\r\n-\r\n-\r\n-project(\":thirdparty\") {\r\n-    apply plugin: \"java\"\r\n-\r\n-\r\n-    dependencies {\r\n-        compile \"com.jtattoo:JTattoo:$jtattooVersion\"\r\n-        compile \"com.miglayout:miglayout-swing:$miglayoutVersion\"\r\n-        compile \"org.lwjgl.lwjgl:lwjgl:${lwjglVersion}\"\r\n-        compile \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-windows\"\r\n-        compile \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-linux\"\r\n-        compile \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-osx\"\r\n-        compile \"org.lwjgl.lwjgl:lwjgl_util:${lwjglVersion}\"\r\n-        compile \"net.nikr:dds:1.0.0\"\r\n-//        compile \"com.github.ebourg:infonode:master\"\r\n-//        compile \"com.github.DrSuperGood:blp-iio-plugin:master\"\r\n-        compile files(fileTree(dir: '../jars', includes: ['*.jar']))\r\n-\r\n-        implementation \"org.lwjgl.lwjgl:lwjgl:${lwjglVersion}\"\r\n-        implementation \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-windows\"\r\n-        implementation \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-linux\"\r\n-        implementation \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-osx\"\r\n-        implementation \"org.lwjgl.lwjgl:lwjgl_util:${lwjglVersion}\"\r\n-    }\r\n-}\r\n-\r\n-tasks.eclipse.doLast {\r\n-    delete \".project\"\r\n-}\r\n+buildscript {\n+    repositories {\n+        mavenLocal()\n+\t\tflatDir {\n+\t\t\tdirs \"$rootProject.projectDir/jars\"\n+\t\t}\n+        mavenCentral()\n+        maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n+        maven { url \"https://maven.nikr.net/\" }\n+        maven { url \"https://mvnrepository.com/artifact/\" }\n+        maven { url \"https://mvnrepository.com/\" }\n+        jcenter()\n+        maven { url 'https://jitpack.io' }\n+    }\n+}\n+\n+allprojects {\n+    apply plugin: \"eclipse\"\n+    apply plugin: \"idea\"\n+\n+    version = '0.5'\n+    ext {\n+        appName = \"retera-jwc3\"\n+        jtattooVersion = '1.6.11'\n+        miglayoutVersion = '4.2'\n+\t\tlwjglVersion = '2.9.3'\n+\t\timage4jVersion = '0.7'\n+\t\trsyntaxtextareaVersion = '3.0.2'\n+        nashornVersion = '15.2'\n+    }\n+\n+    repositories {\n+        mavenLocal()\n+        mavenCentral()\n+        maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n+        maven { url \"https://maven.nikr.net/\" }\n+        maven { url \"https://mvnrepository.com/artifact/\" }\n+        maven { url \"https://mvnrepository.com/\" }\n+        maven { url \"https://oss.sonatype.org/content/repositories/releases/\" }\n+        maven { url 'https://jitpack.io' }\n+    }\n+}\n+\n+project(\":modelstudio\") {\n+    apply plugin: \"java\"\n+\n+\n+    dependencies {\n+        compile project(\":thirdparty\")\n+        compile \"com.fifesoft:rsyntaxtextarea:$rsyntaxtextareaVersion\"\n+        compile \"org.jclarion:image4j:$image4jVersion\"\n+\n+        compile \"com.github.inwc3:JMPQ3:1.7.14\"\n+        compile \"org.json:json:20200518\"\n+        compile \"org.openjdk.nashorn:nashorn-core:${nashornVersion}\"\n+    }\n+}\n+\n+\n+project(\":thirdparty\") {\n+    apply plugin: \"java\"\n+\n+\n+    dependencies {\n+        compile \"com.jtattoo:JTattoo:$jtattooVersion\"\n+        compile \"com.miglayout:miglayout-swing:$miglayoutVersion\"\n+        compile \"org.lwjgl.lwjgl:lwjgl:${lwjglVersion}\"\n+        compile \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-windows\"\n+        compile \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-linux\"\n+        compile \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-osx\"\n+        compile \"org.lwjgl.lwjgl:lwjgl_util:${lwjglVersion}\"\n+        compile \"net.nikr:dds:1.0.0\"\n+//        compile \"com.github.ebourg:infonode:master\"\n+//        compile \"com.github.DrSuperGood:blp-iio-plugin:master\"\n+        compile files(fileTree(dir: '../jars', includes: ['*.jar']))\n+\n+        implementation \"org.lwjgl.lwjgl:lwjgl:${lwjglVersion}\"\n+        implementation \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-windows\"\n+        implementation \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-linux\"\n+        implementation \"org.lwjgl.lwjgl:lwjgl-platform:${lwjglVersion}:natives-osx\"\n+        implementation \"org.lwjgl.lwjgl:lwjgl_util:${lwjglVersion}\"\n+    }\n+}\n+\n+tasks.eclipse.doLast {\n+    delete \".project\"\n+}"
  },
  {
    "sha": "8c54e91a5411ecb3590b3ea0f1b2ad4e4d1613f4",
    "filename": "modelstudio/build.gradle",
    "status": "modified",
    "additions": 31,
    "deletions": 4,
    "changes": 35,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/build.gradle",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/build.gradle",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/build.gradle?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,3 +1,5 @@\n+import java.text.SimpleDateFormat\n+\n apply plugin: \"java\"\n \n sourceCompatibility = 1.14\n@@ -12,21 +14,46 @@ task run(dependsOn: classes, type: JavaExec) {\n     main = project.mainClassName\n     classpath = sourceSets.main.runtimeClasspath\n     standardInput = System.in\n-    ignoreExitValue = true\n+    setIgnoreExitValue(true)\n }\n \n task dist(type: Jar) {\n+    // From http://cmoz.me/blog/2014/11/service-files-uber-jars-and-gradle/\n+    doFirst {\n+        def serviceDir = file(\"$buildDir/META-INF/services\")\n+        serviceDir.deleteDir()\n+        serviceDir.mkdirs()\n+\n+        // copy all service files from deps to buildDir\n+        for(file in configurations.runtime) {\n+            zipTree(file).matching{ include 'META-INF/services/*' }.each { f ->\n+                new File(serviceDir, f.name) << f.getText(\"UTF-8\") + \"\\n\"\n+            }\n+        }\n+    }\n+\n     from files(sourceSets.main.output.classesDirs)\n     from files(sourceSets.main.output.resourcesDir)\n-    from {configurations.compile.collect {zipTree(it)}}\n- \n+\n     manifest {\n         attributes 'Main-Class': project.mainClassName\n     }\n+\n+    from(configurations.runtime.collect{ it.isDirectory() ? it : zipTree(it) }) {\n+        exclude 'META-INF/**' // Don't let Gradle merge service files\n+    }\n+\n+    // Include service files from the buildDir.\n+    from fileTree(buildDir).matching{ include 'META-INF/services/*' }\n+}\n+\n+task setVersion(){\n+    new File(sourceSets.main.output.resourcesDir.path, \"version.txt\").text =\"\"\"${version}.${new SimpleDateFormat(\"yyyy.MM.dd\").format(new Date())}\"\"\"\n }\n \n dist.dependsOn classes\n+//dist.doLast {setVersion()}\n \n eclipse.project {\n     name = appName + \"-modelstudio\"\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "dc1dadf8e6f188b638bcdf61f1fd0dafc8665739",
    "filename": "modelstudio/src/com/hiveworkshop/rms/Main.java",
    "status": "modified",
    "additions": 130,
    "deletions": 154,
    "changes": 284,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/Main.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/Main.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/Main.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -50,176 +50,152 @@ public static void main(final String[] args) throws IOException {\n             }\n         }\n         final boolean dataPromptForced = hasArgs && args[0].equals(\"-forcedataprompt\");\n+        startRealRMS(startupModelPaths, dataPromptForced);\n+    }\n+\n+    private static void startRealRMS(List<String> startupModelPaths, boolean dataPromptForced) throws IOException {\n         try {\n             LwjglNativesLoader.load();\n \n             // Load the jassimp natives.\n-            try {\n-                final SharedLibraryLoader loader = new SharedLibraryLoader();\n-                loader.load(\"jassimp-natives\");\n-            } catch (final Exception e) {\n-                JOptionPane.showMessageDialog(null,\n-                        \"The C++ natives to parse FBX models failed to load. \" +\n-                                \"You will not be able to open FBX until you install the necessary software\" +\n-                                \"\\nand restart Retera Model Studio.\" +\n-                                \"\\n\\nMaybe you are missing some Visual Studio Runtime dependency?\" +\n-                                \"\\n\\nNext up I will show you the error message that says why \" +\n-                                \"these C++ jassimp natives failed to load,\" +\n-                                \"\\nin case you want to copy them and ask for help. \" +\n-                                \"Once you press OK on that error popup, you can probably still use\" +\n-                                \"\\nRetera Model Studio just fine for everything else.\",\n-                        \"Error\", JOptionPane.ERROR_MESSAGE);\n-                ExceptionPopup.display(e);\n-            }\n+            tryLoadJAssImp();\n \n             final ProgramPreferences preferences = SaveProfile.get().getPreferences();\n-            switch (preferences.getTheme()) {\n-                case DARK:\n-                    EditorDisplayManager.setupLookAndFeel();\n-                    break;\n-                case HIFI:\n-                    EditorDisplayManager.setupLookAndFeel(\"HiFi\");\n-                    break;\n-                case ACRYL:\n-                    EditorDisplayManager.setupLookAndFeel(\"Acryl\");\n-                    break;\n-                case ALUMINIUM:\n-                    EditorDisplayManager.setupLookAndFeel(\"Aluminium\");\n-                    break;\n-                case FOREST_GREEN:\n-                    try {\n-                        final InfoNodeLookAndFeelTheme theme = new InfoNodeLookAndFeelTheme(\"Retera Studio\",\n-                                new Color(44, 46, 20), new Color(116, 126, 36), new Color(44, 46, 20),\n-                                new Color(220, 202, 132), new Color(116, 126, 36), new Color(220, 202, 132));\n-                        theme.setShadingFactor(-0.8);\n-                        theme.setDesktopColor(new Color(60, 82, 44));\n-\n-                        UIManager.setLookAndFeel(new InfoNodeLookAndFeel(theme));\n-                    } catch (final UnsupportedLookAndFeelException e) {\n-                        e.printStackTrace();\n-                    }\n-                    break;\n-                case WINDOWS:\n-                    try {\n-                        UIManager.put(\"desktop\", new ColorUIResource(Color.WHITE));\n-                        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n-                        System.out.println(UIManager.getLookAndFeel());\n-                    } catch (final UnsupportedLookAndFeelException | IllegalAccessException | InstantiationException | ClassNotFoundException e) {\n-                        // handle exception\n-                    }\n-                    break;\n-                case WINDOWS_CLASSIC:\n-                    try {\n-                        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel\");\n-                    } catch (final Exception exc) {\n-                        setSystemLookAndFeel();\n-                    }\n-                    break;\n-                case JAVA_DEFAULT:\n-                    break;\n-                case SOFT_GRAY:\n-                    try {\n-                        final InfoNodeLookAndFeelTheme softGrayTheme = InfoNodeLookAndFeelThemes.getSoftGrayTheme();\n-                        UIManager.setLookAndFeel(new InfoNodeLookAndFeel(softGrayTheme));\n-                    } catch (final Exception exc) {\n-                        setSystemLookAndFeel();\n-                    }\n+            setTheme(preferences);\n+            SwingUtilities.invokeLater(() -> tryStartup(startupModelPaths, dataPromptForced));\n+        } catch (final Throwable th) {\n+            th.printStackTrace();\n+            SwingUtilities.invokeLater(() -> ExceptionPopup.display(th));\n+            if (!dataPromptForced) {\n+                startRealRMS(null, true);\n+//                main(new String[] {\"-forcedataprompt\"});\n+            } else {\n+                SwingUtilities.invokeLater(() -> startupFailDialog());\n+            }\n+        }\n+    }\n \n-                    break;\n-                case BLUE_ICE:\n-                    try {\n-                        final InfoNodeLookAndFeelTheme blueIceTheme = InfoNodeLookAndFeelThemes.getBlueIceTheme();\n-                        UIManager.setLookAndFeel(new InfoNodeLookAndFeel(blueIceTheme));\n-                    } catch (final Exception exc) {\n-                        setSystemLookAndFeel();\n-                    }\n+    private static void tryStartup(List<String> startupModelPaths, boolean dataPromptForced) {\n+        try {\n+            final List<DataSourceDescriptor> dataSources = SaveProfile.get().getDataSources();\n \n-                    break;\n-                case DARK_BLUE_GREEN:\n-                    try {\n-                        final InfoNodeLookAndFeelTheme darkBlueGreenTheme = InfoNodeLookAndFeelThemes\n-                                .getDarkBlueGreenTheme();\n-                        UIManager.setLookAndFeel(new InfoNodeLookAndFeel(darkBlueGreenTheme));\n-                    } catch (final Exception exc) {\n-                        setSystemLookAndFeel();\n-                    }\n+            if ((dataSources == null) || dataPromptForced) {\n+                if (!showDataSourceChooser(dataSources)) return;\n+            }\n \n-                    break;\n-                case GRAY:\n+//                    JPopupMenu.setDefaultLightWeightPopupEnabled(false);\n+            MainFrame.create(startupModelPaths);\n+        } catch (final Throwable th) {\n+            th.printStackTrace();\n+            ExceptionPopup.display(th);\n+            if (!dataPromptForced) {\n+                new Thread(() -> {\n                     try {\n-                        final InfoNodeLookAndFeelTheme grayTheme = InfoNodeLookAndFeelThemes.getGrayTheme();\n-                        UIManager.setLookAndFeel(new InfoNodeLookAndFeel(grayTheme));\n-                    } catch (final Exception exc) {\n-                        setSystemLookAndFeel();\n+                        startRealRMS(null, true);\n+//                        main(new String[]{\"-forcedataprompt\"});\n+                    } catch (final IOException e) {\n+                        // TODO Auto-generated catch block\n+                        e.printStackTrace();\n                     }\n+                }).start();\n+            } else {\n+                startupFailDialog();\n+            }\n+        }\n+    }\n \n-                    break;\n+    private static boolean showDataSourceChooser(List<DataSourceDescriptor> dataSources) {\n+        final DataSourceChooserPanel dataSourceChooserPanel = new DataSourceChooserPanel(dataSources);\n+\n+        int opt = JOptionPane.showConfirmDialog(null, dataSourceChooserPanel,\n+                \"Retera Model Studio: Setup\", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);\n+\n+        if (opt == JOptionPane.OK_OPTION) {\n+            SaveProfile.get().setDataSources(dataSourceChooserPanel.getDataSourceDescriptors());\n+            SaveProfile.save();\n+            GameDataFileSystem.refresh(SaveProfile.get().getDataSources());\n+\n+            // cache priority order...\n+            UnitOptionPanel.dropRaceCache();\n+            DataTable.dropCache();\n+            ModelOptionPanel.dropCache();\n+            WEString.dropCache();\n+            BLPHandler.get().dropCache();\n+            return true;\n+        } else {\n+            return false;\n+        }\n+    }\n+\n+    private static void tryLoadJAssImp() {\n+        try {\n+            final SharedLibraryLoader loader = new SharedLibraryLoader();\n+            loader.load(\"jassimp-natives\");\n+        } catch (final Exception e) {\n+            JOptionPane.showMessageDialog(null,\n+                    \"The C++ natives to parse FBX models failed to load. \" +\n+                            \"You will not be able to open FBX until you install the necessary software\" +\n+                            \"\\nand restart Retera Model Studio.\" +\n+                            \"\\n\\nMaybe you are missing some Visual Studio Runtime dependency?\" +\n+                            \"\\n\\nNext up I will show you the error message that says why \" +\n+                            \"these C++ jassimp natives failed to load,\" +\n+                            \"\\nin case you want to copy them and ask for help. \" +\n+                            \"Once you press OK on that error popup, you can probably still use\" +\n+                            \"\\nRetera Model Studio just fine for everything else.\",\n+                    \"Error\", JOptionPane.ERROR_MESSAGE);\n+            ExceptionPopup.display(e);\n+        }\n+    }\n+\n+    private static void setTheme(ProgramPreferences preferences) {\n+        switch (preferences.getTheme()) {\n+            case JAVA_DEFAULT -> {\n             }\n-            SwingUtilities.invokeLater(() -> {\n+            case SOFT_GRAY -> trySetTheme(InfoNodeLookAndFeelThemes.getSoftGrayTheme());\n+            case BLUE_ICE -> trySetTheme(InfoNodeLookAndFeelThemes.getBlueIceTheme());\n+            case DARK_BLUE_GREEN -> trySetTheme(InfoNodeLookAndFeelThemes.getDarkBlueGreenTheme());\n+            case GRAY -> trySetTheme(InfoNodeLookAndFeelThemes.getGrayTheme());\n+            case DARK -> EditorDisplayManager.setupLookAndFeel();\n+            case HIFI -> EditorDisplayManager.setupLookAndFeel(\"HiFi\");\n+            case ACRYL -> EditorDisplayManager.setupLookAndFeel(\"Acryl\");\n+            case ALUMINIUM -> EditorDisplayManager.setupLookAndFeel(\"Aluminium\");\n+            case FOREST_GREEN -> {\n                 try {\n-                    final List<DataSourceDescriptor> dataSources = SaveProfile.get().getDataSources();\n-                    if ((dataSources == null) || dataPromptForced) {\n-                        final DataSourceChooserPanel dataSourceChooserPanel = new DataSourceChooserPanel(\n-                                dataSources);\n-\n-                        final JFrame jFrame = new JFrame(\"Retera Model Studio: Setup\");\n-\n-                        jFrame.setUndecorated(true);\n-                        jFrame.pack();\n-                        jFrame.setSize(0, 0);\n-                        jFrame.setLocationRelativeTo(null);\n-                        jFrame.setIconImage(MainFrame.MAIN_PROGRAM_ICON);\n-                        jFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);\n-                        jFrame.setVisible(true);\n-                        try {\n-                            if (JOptionPane.showConfirmDialog(jFrame, dataSourceChooserPanel,\n-                                    \"Retera Model Studio: Setup\", JOptionPane.OK_CANCEL_OPTION,\n-                                    JOptionPane.PLAIN_MESSAGE) != JOptionPane.OK_OPTION) {\n-                                return;\n-                            }\n-                        } finally {\n-                            jFrame.setVisible(false);\n-                        }\n-                        SaveProfile.get().setDataSources(dataSourceChooserPanel.getDataSourceDescriptors());\n-                        SaveProfile.save();\n-                        GameDataFileSystem.refresh(SaveProfile.get().getDataSources());\n-                        // cache priority order...\n-                        UnitOptionPanel.dropRaceCache();\n-                        DataTable.dropCache();\n-                        ModelOptionPanel.dropCache();\n-                        WEString.dropCache();\n-                        BLPHandler.get().dropCache();\n-                    }\n-\n-                    JPopupMenu.setDefaultLightWeightPopupEnabled(false);\n-                    MainFrame.create(startupModelPaths);\n-                } catch (final Throwable th) {\n-                    th.printStackTrace();\n-                    ExceptionPopup.display(th);\n-                    if (!dataPromptForced) {\n-                        new Thread(() -> {\n-                            try {\n-                                main(new String[]{\"-forcedataprompt\"});\n-                            } catch (final IOException e) {\n-                                // TODO Auto-generated catch block\n-                                e.printStackTrace();\n-                            }\n-                        }).start();\n-                    } else {\n-                        startupFailDialog();\n-                    }\n+                    final InfoNodeLookAndFeelTheme theme = new InfoNodeLookAndFeelTheme(\"Retera Studio\",\n+                            new Color(44, 46, 20), new Color(116, 126, 36), new Color(44, 46, 20),\n+                            new Color(220, 202, 132), new Color(116, 126, 36), new Color(220, 202, 132));\n+                    theme.setShadingFactor(-0.8);\n+                    theme.setDesktopColor(new Color(60, 82, 44));\n+\n+                    UIManager.setLookAndFeel(new InfoNodeLookAndFeel(theme));\n+                } catch (final UnsupportedLookAndFeelException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+            case WINDOWS -> {\n+                try {\n+                    UIManager.put(\"desktop\", new ColorUIResource(Color.WHITE));\n+                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n+                    System.out.println(UIManager.getLookAndFeel());\n+                } catch (final UnsupportedLookAndFeelException | IllegalAccessException | InstantiationException | ClassNotFoundException e) {\n+                    // handle exception\n                 }\n-            });\n-        } catch (final Throwable th) {\n-            th.printStackTrace();\n-            SwingUtilities.invokeLater(() -> ExceptionPopup.display(th));\n-            if (!dataPromptForced) {\n-                main(new String[] {\"-forcedataprompt\"});\n-            } else {\n-                SwingUtilities.invokeLater(() -> {\n-                    startupFailDialog();\n-                });\n             }\n+            case WINDOWS_CLASSIC -> {\n+                try {\n+                    UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel\");\n+                } catch (final Exception exc) {\n+                    setSystemLookAndFeel();\n+                }\n+            }\n+        }\n+    }\n+\n+    private static void trySetTheme(InfoNodeLookAndFeelTheme theme) {\n+        try {\n+            UIManager.setLookAndFeel(new InfoNodeLookAndFeel(theme));\n+        } catch (final Exception exc) {\n+            setSystemLookAndFeel();\n         }\n     }\n "
  },
  {
    "sha": "f95b6232b90ceeae5b38e0be2775e65d7d7ca681",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/AnimatedNode.java",
    "status": "modified",
    "additions": 109,
    "deletions": 148,
    "changes": 257,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/AnimatedNode.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/AnimatedNode.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/AnimatedNode.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,5 +1,7 @@\n package com.hiveworkshop.rms.editor.model;\n \n+import com.hiveworkshop.rms.editor.model.animflag.QuatAnimFlag;\n+import com.hiveworkshop.rms.editor.model.animflag.Vec3AnimFlag;\n import com.hiveworkshop.rms.editor.render3d.RenderModel;\n import com.hiveworkshop.rms.editor.render3d.RenderNode;\n import com.hiveworkshop.rms.ui.application.edit.ModelStructureChangeListener;\n@@ -15,13 +17,8 @@\n import java.util.List;\n \n public abstract class AnimatedNode extends TimelineContainer {\n-\tprivate static final Vec4 translationHeap = new Vec4();\n-\tprivate static final Mat4 matrixHeap = new Mat4();\n-\tprivate static final Quat rotationHeap = new Quat();\n-\tprivate static final Quat rotationDeltaHeap = new Quat();\n-\tprivate static final Vec4 axisAngleHeap = new Vec4();\n \n-\tabstract public AnimatedNode getParent();\n+//\tabstract public AnimatedNode getParent();\n \n \tabstract public Vec3 getPivotPoint();\n \n@@ -41,29 +38,29 @@ public Vec3 getRenderScale(final AnimatedRenderEnvironment animatedRenderEnviron\n \t\treturn getInterpolatedVector(animatedRenderEnvironment, \"Scaling\", null);\n \t}\n \n-\tpublic AddKeyframeAction createTranslationKeyframe(final RenderModel renderModel, final AnimFlag translationFlag,\n-                                                       final ModelStructureChangeListener structureChangeListener) {\n+\tpublic AddKeyframeAction createTranslationKeyframe(final RenderModel renderModel, final Vec3AnimFlag translationFlag,\n+\t                                                   final ModelStructureChangeListener structureChangeListener) {\n \t\t// TODO global seqs, needs separate check on AnimRendEnv, and also we must make AnimFlag.find seek on globalSeqId\n \t\tint trackTime = getTrackTime(renderModel);\n \t\tfinal int floorIndex = translationFlag.floorIndex(trackTime);\n \t\tfinal RenderNode renderNode = renderModel.getRenderNode(this);\n \n-\t\tif ((floorIndex != -1) && (translationFlag.getTimes().size() > 0) && (translationFlag.getTimes().get(floorIndex) == trackTime)) {\n+\t\tif ((floorIndex != -1) && (translationFlag.getTimes().size() > 0) && (translationFlag.getTimes().get(floorIndex).equals(trackTime))) {\n \t\t\treturn null;\n \t\t} else {\n \t\t\tfinal Vec3 localLocation = renderNode.getLocalLocation();\n \t\t\treturn getAddKeyframeAction(translationFlag, structureChangeListener, trackTime, floorIndex, localLocation);\n \t\t}\n \t}\n \n-\tpublic AddKeyframeAction createRotationKeyframe(final RenderModel renderModel, final AnimFlag rotationTimeline,\n+\tpublic AddKeyframeAction createRotationKeyframe(final RenderModel renderModel, final QuatAnimFlag rotationTimeline,\n \t                                                final ModelStructureChangeListener structureChangeListener) {\n \t\t// TODO global seqs, needs separate check on AnimRendEnv, and also we must make AnimFlag.find seek on globalSeqId\n \t\tint trackTime = getTrackTime(renderModel);\n \t\tfinal int floorIndex = rotationTimeline.floorIndex(trackTime);\n \t\tfinal RenderNode renderNode = renderModel.getRenderNode(this);\n \n-\t\tif ((floorIndex != -1) && (rotationTimeline.getTimes().size() > 0) && (rotationTimeline.getTimes().get(floorIndex) == trackTime)) {\n+\t\tif ((floorIndex != -1) && (rotationTimeline.getTimes().size() > 0) && (rotationTimeline.getTimes().get(floorIndex).equals(trackTime))) {\n \t\t\treturn null;\n \t\t} else {\n \t\t\tfinal Quat localRotation = renderNode.getLocalRotation();\n@@ -89,14 +86,14 @@ public AddKeyframeAction createRotationKeyframe(final RenderModel renderModel, f\n \t\t}\n \t}\n \n-\tpublic AddKeyframeAction createScalingKeyframe(final RenderModel renderModel, final AnimFlag scalingTimeline,\n+\tpublic AddKeyframeAction createScalingKeyframe(final RenderModel renderModel, final Vec3AnimFlag scalingTimeline,\n \t                                               final ModelStructureChangeListener structureChangeListener) {\n \t\t// TODO global seqs, needs separate check on AnimRendEnv, and also we must make AnimFlag.find seek on globalSeqId\n \t\tint trackTime = getTrackTime(renderModel);\n \t\tfinal int floorIndex = scalingTimeline.floorIndex(trackTime);\n \t\tfinal RenderNode renderNode = renderModel.getRenderNode(this);\n \n-\t\tif ((floorIndex != -1) && (scalingTimeline.getTimes().size() > 0) && (scalingTimeline.getTimes().get(floorIndex) == trackTime)) {\n+\t\tif ((floorIndex != -1) && (scalingTimeline.getTimes().size() > 0) && (scalingTimeline.getTimes().get(floorIndex).equals(trackTime))) {\n \t\t\treturn null;\n \t\t} else {\n \t\t\tfinal Vec3 localScale = renderNode.getLocalScale();\n@@ -115,7 +112,7 @@ private int getTrackTime(RenderModel renderModel) {\n \t\treturn trackTime;\n \t}\n \n-\tprivate AddKeyframeAction getAddKeyframeAction(AnimFlag timeline, ModelStructureChangeListener structureChangeListener, int trackTime, int floorIndex, Vec3 vec3) {\n+\tprivate AddKeyframeAction getAddKeyframeAction(Vec3AnimFlag timeline, ModelStructureChangeListener structureChangeListener, int trackTime, int floorIndex, Vec3 vec3) {\n \t\tfinal int insertIndex = floorIndex + 1;\n \t\ttimeline.getTimes().add(insertIndex, trackTime);\n \n@@ -137,16 +134,17 @@ private AddKeyframeAction getAddKeyframeAction(AnimFlag timeline, ModelStructure\n \t\t}\n \t}\n \n-\tpublic void updateTranslationKeyframe(final RenderModel renderModel, final double newDeltaX, final double newDeltaY,\n-\t                                      final double newDeltaZ, final Vec3 savedLocalTranslation) {\n+\tpublic void updateTranslationKeyframe(final RenderModel renderModel,\n+\t                                      final double newDeltaX, final double newDeltaY, final double newDeltaZ,\n+\t                                      final Vec3 savedLocalTranslation) {\n \t\t// Note to future author: the reason for saved local translation is that\n \t\t// we would like to be able to undo the action of moving the animation data\n \n \t\t// TODO global seqs, needs separate check on AnimRendEnv, and also we must  make AnimFlag.find seek on globalSeqId\n \t\t// TODO fix cast, meta knowledge: NodeAnimationModelEditor will only be constructed from\n \t\t//  a TimeEnvironmentImpl render environment, and never from the anim previewer impl\n \t\tfinal TimeEnvironmentImpl timeEnvironmentImpl = (TimeEnvironmentImpl) renderModel.getAnimatedRenderEnvironment();\n-\t\tfinal AnimFlag translationFlag = find(\"Translation\", timeEnvironmentImpl.getGlobalSeq());\n+\t\tfinal Vec3AnimFlag translationFlag = (Vec3AnimFlag) find(\"Translation\", timeEnvironmentImpl.getGlobalSeq());\n \t\tif (translationFlag == null) {\n \t\t\treturn;\n \t\t}\n@@ -158,38 +156,37 @@ public void updateTranslationKeyframe(final RenderModel renderModel, final doubl\n \t\t}\n \t\tfinal int floorIndex = translationFlag.floorIndex(trackTime);\n \t\t//final RenderNode renderNode = renderModel.getRenderNode(this);\n-\t\tfinal AnimatedNode parent = getParent();\n+\t\tAnimatedNode parent = null;// = getParent();\n+\t\tif (this instanceof IdObject) {\n+\t\t\tparent = ((IdObject) this).getParent();\n+\t\t}\n+\n+\t\tVec4 translationHeap = new Vec4(0, 0, 0, 1);\n \t\tif (parent != null) {\n \t\t\tfinal RenderNode parentRenderNode = renderModel.getRenderNode(parent);\n-\t\t\tparentRenderNode.getWorldMatrix().invert(matrixHeap);\n-\n-\t\t\tsetXYZ(translationHeap, 0, 0, 0);\n-\t\t\ttranslationHeap.w = 1;\n-\n-\t\t\tparentRenderNode.getWorldMatrix().transform(translationHeap);\n \n-\t\t\tsetFloat(translationHeap.x + newDeltaX, translationHeap.y + newDeltaY, translationHeap.z + newDeltaZ);\n-\n-\t\t\tmatrixHeap.transform(translationHeap);\n+\t\t\ttranslationHeap.transform(parentRenderNode.getWorldMatrix());\n+\t\t\ttranslationHeap.add(new Vec4(newDeltaX, newDeltaY, newDeltaZ, 0));\n+\t\t\ttranslationHeap.transform(Mat4.getInverted(parentRenderNode.getWorldMatrix()));\n \t\t} else {\n-\t\t\tsetFloat(newDeltaX, newDeltaY, newDeltaZ);\n+\t\t\ttranslationHeap.set(newDeltaX, newDeltaY, newDeltaZ, 1);\n \t\t}\n \n-\t\tif ((floorIndex != -1) && (translationFlag.getTimes().size() > 0) && (translationFlag.getTimes().get(floorIndex) == trackTime)) {\n+\t\tif ((floorIndex != -1) && (translationFlag.getTimes().size() > 0) && (translationFlag.getTimes().get(floorIndex).equals(trackTime))) {\n \t\t\t// we must change it\n-\t\t\tfinal Vec3 oldTranslationValue = (Vec3) translationFlag.getValues().get(floorIndex);\n-\t\t\taddTo(oldTranslationValue, translationHeap.x, translationHeap.y, translationHeap.z);\n+\t\t\tfinal Vec3 oldTranslationValue = translationFlag.getValues().get(floorIndex);\n+\t\t\toldTranslationValue.add(translationHeap.getVec3());\n \n \t\t\tif (savedLocalTranslation != null) {\n-\t\t\t\taddTo(savedLocalTranslation, translationHeap.x, translationHeap.y, translationHeap.z);\n+\t\t\t\tsavedLocalTranslation.add(translationHeap.getVec3());\n \t\t\t}\n \n \t\t\tif (translationFlag.tans()) {\n-\t\t\t\tfinal Vec3 oldInTan = (Vec3) translationFlag.getInTans().get(floorIndex);\n-\t\t\t\taddTo(oldInTan, translationHeap.x, translationHeap.y, translationHeap.z);\n+\t\t\t\tfinal Vec3 oldInTan = translationFlag.getInTans().get(floorIndex);\n+\t\t\t\toldInTan.add(translationHeap.getVec3());\n \n-\t\t\t\tfinal Vec3 oldOutTan = (Vec3) translationFlag.getOutTans().get(floorIndex);\n-\t\t\t\taddTo(oldOutTan, translationHeap.x, translationHeap.y, translationHeap.z);\n+\t\t\t\tfinal Vec3 oldOutTan = translationFlag.getOutTans().get(floorIndex);\n+\t\t\t\toldOutTan.add(translationHeap.getVec3());\n \t\t\t}\n \t\t}\n \n@@ -205,9 +202,8 @@ public void updateRotationKeyframe(final RenderModel renderModel, final double c\n \t\t// TODO global seqs, needs separate check on AnimRendEnv, and also we must make AnimFlag.find seek on globalSeqId\n \t\t// TODO fix cast, meta knowledge: NodeAnimationModelEditor will only be  constructed from\n \t\t//  a TimeEnvironmentImpl render environment, and never from the anim previewer impl\n-\t\tfinal TimeEnvironmentImpl timeEnvironmentImpl = (TimeEnvironmentImpl) renderModel\n-\t\t\t\t.getAnimatedRenderEnvironment();\n-\t\tfinal AnimFlag rotationTimeline = find(\"Rotation\", timeEnvironmentImpl.getGlobalSeq());\n+\t\tfinal TimeEnvironmentImpl timeEnvironmentImpl = (TimeEnvironmentImpl) renderModel.getAnimatedRenderEnvironment();\n+\t\tfinal QuatAnimFlag rotationTimeline = (QuatAnimFlag) find(\"Rotation\", timeEnvironmentImpl.getGlobalSeq());\n \t\tif (rotationTimeline == null) {\n \t\t\treturn;\n \t\t}\n@@ -220,64 +216,68 @@ public void updateRotationKeyframe(final RenderModel renderModel, final double c\n \t\tfinal int floorIndex = rotationTimeline.floorIndex(trackTime);\n \t\t//final RenderNode renderNode = renderModel.getRenderNode(this);\n \t\tfinal byte unusedXYZ = CoordinateSystem.Util.getUnusedXYZ(firstXYZ, secondXYZ);\n-\t\tfinal AnimatedNode parent = getParent();\n+\t\tAnimatedNode parent = null;// = getParent();\n+\t\tif (this instanceof IdObject) {\n+\t\t\tparent = ((IdObject) this).getParent();\n+\t\t}\n+\n+\t\tVec4 axisAngleHeap = new Vec4(0, 0, 0, 1);\n+\n \t\tif (parent != null) {\n \t\t\tfinal RenderNode parentRenderNode = renderModel.getRenderNode(parent);\n-\t\t\tparentRenderNode.getWorldMatrix().invert(matrixHeap);\n-\n-\t\t\tsetXYZ(axisAngleHeap, 0, 0, 0);\n-\t\t\taxisAngleHeap.w = 1;\n \n-\t\t\tparentRenderNode.getWorldMatrix().transform(axisAngleHeap);\n+\t\t\taxisAngleHeap.transform(parentRenderNode.getWorldMatrix());\n \n \t\t\tswitch (unusedXYZ) {\n-\t\t\t\tcase 0 -> setXYZ(axisAngleHeap, (axisAngleHeap.x + 1), axisAngleHeap.y + 0, axisAngleHeap.z + 0);\n-\t\t\t\tcase 1 -> setXYZ(axisAngleHeap, (axisAngleHeap.x + 0), axisAngleHeap.y + -1, axisAngleHeap.z + 0);\n-\t\t\t\tcase 2 -> setXYZ(axisAngleHeap, (axisAngleHeap.x + 0), axisAngleHeap.y + 0, axisAngleHeap.z + -1);\n+\t\t\t\tcase 0 -> axisAngleHeap.set(axisAngleHeap.x + 1, axisAngleHeap.y + 0, axisAngleHeap.z + 0, radians);\n+\t\t\t\tcase 1 -> axisAngleHeap.set(axisAngleHeap.x + 0, axisAngleHeap.y + -1, axisAngleHeap.z + 0, radians);\n+\t\t\t\tcase 2 -> axisAngleHeap.set(axisAngleHeap.x + 0, axisAngleHeap.y + 0, axisAngleHeap.z + -1, radians);\n \t\t\t}\n-\t\t\taxisAngleHeap.w = 1;\n \n-\t\t\tmatrixHeap.transform(axisAngleHeap);\n+\t\t\taxisAngleHeap.transform(Mat4.getInverted(parentRenderNode.getWorldMatrix()));\n \t\t} else {\n \t\t\tswitch (unusedXYZ) {\n-\t\t\t\tcase 0 -> setXYZ(axisAngleHeap, 1, 0, 0);\n-\t\t\t\tcase 1 -> setXYZ(axisAngleHeap, 0, -1, 0);\n-\t\t\t\tcase 2 -> setXYZ(axisAngleHeap, 0, 0, -1);\n+\t\t\t\tcase 0 -> axisAngleHeap.set(1, 0, 0, radians);\n+\t\t\t\tcase 1 -> axisAngleHeap.set(0, -1, 0, radians);\n+\t\t\t\tcase 2 -> axisAngleHeap.set(0, 0, -1, radians);\n \t\t\t}\n \t\t}\n-\t\taxisAngleHeap.w = (float) radians;\n-\t\trotationDeltaHeap.setFromAxisAngle(axisAngleHeap);\n+\t\tQuat rotationDeltaHeap = new Quat().setFromAxisAngle(axisAngleHeap);\n \n-\t\tif ((floorIndex != -1) && (rotationTimeline.getTimes().size() > 0) && (rotationTimeline.getTimes().get(floorIndex) == trackTime)) {\n+\t\tif ((floorIndex != -1) && (rotationTimeline.getTimes().size() > 0) && (rotationTimeline.getTimes().get(floorIndex).equals(trackTime))) {\n \t\t\t// we must change it\n-\t\t\tfinal Quat oldTranslationValue = (Quat) rotationTimeline.getValues()\n-\t\t\t\t\t.get(floorIndex);\n-\t\t\tsetStuff(oldTranslationValue, rotationDeltaHeap);\n+\t\t\tfinal Quat oldTranslationValue = rotationTimeline.getValues().get(floorIndex);\n+\t\t\toldTranslationValue.mul(rotationDeltaHeap);\n \n \t\t\tif (savedLocalRotation != null) {\n \t\t\t\tsavedLocalRotation.mul(rotationDeltaHeap);\n \t\t\t}\n \n \t\t\tif (rotationTimeline.tans()) {\n-\t\t\t\tfinal Quat oldInTan = (Quat) rotationTimeline.getInTans().get(floorIndex);\n-\t\t\t\tsetStuff(oldInTan, rotationDeltaHeap);\n+\t\t\t\tfinal Quat oldInTan = rotationTimeline.getInTans().get(floorIndex);\n+\t\t\t\toldInTan.mul(rotationDeltaHeap);\n \n-\t\t\t\tfinal Quat oldOutTan = (Quat) rotationTimeline.getOutTans().get(floorIndex);\n-\t\t\t\tsetStuff(oldOutTan, rotationDeltaHeap);\n+\t\t\t\tfinal Quat oldOutTan = rotationTimeline.getOutTans().get(floorIndex);\n+\t\t\t\toldOutTan.mul(rotationDeltaHeap);\n \t\t\t}\n \t\t}\n \t}\n \n-\tpublic void updateScalingKeyframe(final RenderModel renderModel, final double scaleX, final double scaleY,\n-\t\t\tfinal double scaleZ, final Vec3 savedLocalScaling) {\n+\tpublic void updateScalingKeyframe(final RenderModel renderModel,\n+\t                                  final double scaleX, final double scaleY, final double scaleZ,\n+\t                                  final Vec3 savedLocalScaling) {\n+\t\tupdateScalingKeyframe(renderModel, new Vec3(scaleX, scaleY, scaleZ), savedLocalScaling);\n+\t}\n+\n+\tpublic void updateScalingKeyframe(final RenderModel renderModel, final Vec3 scale, final Vec3 savedLocalScaling) {\n \t\t// Note to future author: the reason for saved local scaling is that\n \t\t// we would like to be able to undo the action of moving the animation data\n \n \t\t// TODO global seqs, needs separate check on AnimRendEnv, and also we must make AnimFlag.find seek on globalSeqId\n \t\t// TODO fix cast, meta knowledge: NodeAnimationModelEditor will only be constructed from\n \t\t//  a TimeEnvironmentImpl render environment, and never from the anim previewer impl\n \t\tfinal TimeEnvironmentImpl timeEnvironmentImpl = (TimeEnvironmentImpl) renderModel.getAnimatedRenderEnvironment();\n-\t\tfinal AnimFlag translationFlag = find(\"Scaling\", timeEnvironmentImpl.getGlobalSeq());\n+\t\tfinal Vec3AnimFlag translationFlag = (Vec3AnimFlag) find(\"Scaling\", timeEnvironmentImpl.getGlobalSeq());\n \t\tif (translationFlag == null) {\n \t\t\treturn;\n \t\t}\n@@ -291,23 +291,23 @@ public void updateScalingKeyframe(final RenderModel renderModel, final double sc\n \t\t}\n \t\tfinal int floorIndex = translationFlag.floorIndex(trackTime);\n \n-\t\tsetXYZ(translationHeap, (float) scaleX, (float) scaleY, (float) scaleZ);\n+\t\tVec3 translationHeap = new Vec3(scale);\n \n-\t\tif ((floorIndex != -1) && (translationFlag.getTimes().size() > 0) && (translationFlag.getTimes().get(floorIndex) == trackTime)) {\n+\t\tif ((floorIndex != -1) && (translationFlag.getTimes().size() > 0) && (translationFlag.getTimes().get(floorIndex).equals(trackTime))) {\n \t\t\t// we must change it\n-\t\t\tfinal Vec3 oldTranslationValue = (Vec3) translationFlag.getValues().get(floorIndex);\n-\t\t\tscaleBy(oldTranslationValue, translationHeap.x, translationHeap.y, translationHeap.z);\n+\t\t\tfinal Vec3 oldTranslationValue = translationFlag.getValues().get(floorIndex);\n+\t\t\toldTranslationValue.multiply(translationHeap);\n \n \t\t\tif (savedLocalScaling != null) {\n-\t\t\t\tscaleBy(savedLocalScaling, translationHeap.x, translationHeap.y, translationHeap.z);\n+\t\t\t\tsavedLocalScaling.multiply(translationHeap);\n \t\t\t}\n \n \t\t\tif (translationFlag.tans()) {\n-\t\t\t\tfinal Vec3 oldInTan = (Vec3) translationFlag.getInTans().get(floorIndex);\n-\t\t\t\tscaleBy(oldInTan, translationHeap.x, translationHeap.y, translationHeap.z);\n+\t\t\t\tfinal Vec3 oldInTan = translationFlag.getInTans().get(floorIndex);\n+\t\t\t\toldInTan.multiply(translationHeap);\n \n-\t\t\t\tfinal Vec3 oldOutTan = (Vec3) translationFlag.getOutTans().get(floorIndex);\n-\t\t\t\tscaleBy(oldOutTan, translationHeap.x, translationHeap.y, translationHeap.z);\n+\t\t\t\tfinal Vec3 oldOutTan = translationFlag.getOutTans().get(floorIndex);\n+\t\t\t\toldOutTan.multiply(translationHeap);\n \t\t\t}\n \t\t}\n \t}\n@@ -317,23 +317,24 @@ public void updateLocalRotationKeyframe(final int trackTime, final Integer track\n \t\t// we would like to be able to undo the action of rotating the animation data\n \n \t\t// TODO global seqs, needs separate check on AnimRendEnv, and also we must make AnimFlag.find seek on globalSeqId\n-\t\tfinal AnimFlag rotationTimeline = find(\"Rotation\", trackGlobalSeq);\n+\t\tfinal QuatAnimFlag rotationTimeline = (QuatAnimFlag) find(\"Rotation\", trackGlobalSeq);\n+//\t\tfinal AnimFlag rotationTimeline = find(\"Rotation\", trackGlobalSeq);\n \t\tif (rotationTimeline == null) {\n \t\t\treturn;\n \t\t}\n \t\tfinal int floorIndex = rotationTimeline.floorIndex(trackTime);\n \n-\t\tif ((floorIndex != -1) && (rotationTimeline.getTimes().size() > 0) && (rotationTimeline.getTimes().get(floorIndex) == trackTime)) {\n+\t\tif ((floorIndex != -1) && (rotationTimeline.getTimes().size() > 0) && (rotationTimeline.getTimes().get(floorIndex).equals(trackTime))) {\n \t\t\t// we must change it\n-\t\t\tfinal Quat oldTranslationValue = (Quat) rotationTimeline.getValues().get(floorIndex);\n-\t\t\tsetStuff(oldTranslationValue, localRotation);\n+\t\t\tfinal Quat oldTranslationValue = rotationTimeline.getValues().get(floorIndex);\n+\t\t\toldTranslationValue.mul(localRotation);\n \n \t\t\tif (rotationTimeline.tans()) {\n-\t\t\t\tfinal Quat oldInTan = (Quat) rotationTimeline.getInTans().get(floorIndex);\n-\t\t\t\tsetStuff(oldInTan, localRotation);\n+\t\t\t\tfinal Quat oldInTan = rotationTimeline.getInTans().get(floorIndex);\n+\t\t\t\toldInTan.mul(localRotation);\n \n-\t\t\t\tfinal Quat oldOutTan = (Quat) rotationTimeline.getOutTans().get(floorIndex);\n-\t\t\t\tsetStuff(oldOutTan, localRotation);\n+\t\t\t\tfinal Quat oldOutTan = rotationTimeline.getOutTans().get(floorIndex);\n+\t\t\t\toldOutTan.mul(localRotation);\n \t\t\t}\n \t\t}\n \t}\n@@ -343,22 +344,22 @@ public void updateLocalRotationKeyframeInverse(final int trackTime, final Intege\n \t\t// we would like to be able to undo the action of rotating the animation data\n \n \t\t// TODO global seqs, needs separate check on AnimRendEnv, and also we must make AnimFlag.find seek on globalSeqId\n-\t\tfinal AnimFlag rotationTimeline = find(\"Rotation\", trackGlobalSeq);\n+\t\tfinal QuatAnimFlag rotationTimeline = (QuatAnimFlag) find(\"Rotation\", trackGlobalSeq);\n \t\tif (rotationTimeline == null) {\n \t\t\treturn;\n \t\t}\n \t\tfinal int floorIndex = rotationTimeline.floorIndex(trackTime);\n \n-\t\tif ((floorIndex != -1) && (rotationTimeline.getTimes().size() > 0) && (rotationTimeline.getTimes().get(floorIndex) == trackTime)) {\n+\t\tif ((floorIndex != -1) && (rotationTimeline.getTimes().size() > 0) && (rotationTimeline.getTimes().get(floorIndex).equals(trackTime))) {\n \t\t\t// we must change it\n-\t\t\tfinal Quat oldTranslationValue = (Quat) rotationTimeline.getValues().get(floorIndex);\n+\t\t\tfinal Quat oldTranslationValue = rotationTimeline.getValues().get(floorIndex);\n \t\t\trotateStuff(localRotation, oldTranslationValue);\n \n \t\t\tif (rotationTimeline.tans()) {\n-\t\t\t\tfinal Quat oldInTan = (Quat) rotationTimeline.getInTans().get(floorIndex);\n+\t\t\t\tfinal Quat oldInTan = rotationTimeline.getInTans().get(floorIndex);\n \t\t\t\trotateStuff(localRotation, oldInTan);\n \n-\t\t\t\tfinal Quat oldOutTan = (Quat) rotationTimeline.getOutTans().get(floorIndex);\n+\t\t\t\tfinal Quat oldOutTan = rotationTimeline.getOutTans().get(floorIndex);\n \t\t\t\trotateStuff(localRotation, oldOutTan);\n \t\t\t}\n \t\t}\n@@ -367,96 +368,56 @@ public void updateLocalRotationKeyframeInverse(final int trackTime, final Intege\n \tpublic void updateLocalTranslationKeyframe(final int trackTime, final Integer trackGlobalSeq,\n \t\t\tfinal double newDeltaX, final double newDeltaY, final double newDeltaZ) {\n \t\t// TODO global seqs, needs separate check on AnimRendEnv, and also we must make AnimFlag.find seek on globalSeqId\n-\t\tfinal AnimFlag translationFlag = find(\"Translation\", trackGlobalSeq);\n+\t\tfinal Vec3AnimFlag translationFlag = (Vec3AnimFlag) find(\"Translation\", trackGlobalSeq);\n \t\tif (translationFlag == null) {\n \t\t\treturn;\n \t\t}\n \t\tfinal int floorIndex = translationFlag.floorIndex(trackTime);\n \n-\t\tif ((floorIndex != -1) && (translationFlag.getTimes().size() > 0) && (translationFlag.getTimes().get(floorIndex) == trackTime)) {\n+\t\tif ((floorIndex != -1) && (translationFlag.getTimes().size() > 0) && (translationFlag.getTimes().get(floorIndex).equals(trackTime))) {\n \t\t\t// we must change it\n-\t\t\tfinal Vec3 oldTranslationValue = (Vec3) translationFlag.getValues().get(floorIndex);\n-\t\t\taddTo(oldTranslationValue, newDeltaX, newDeltaY, newDeltaZ);\n+\t\t\tfinal Vec3 oldTranslationValue = translationFlag.getValues().get(floorIndex);\n+\t\t\toldTranslationValue.add(new Vec3(newDeltaX, newDeltaY, newDeltaZ));\n \n \t\t\tif (translationFlag.tans()) {\n-\t\t\t\tfinal Vec3 oldInTan = (Vec3) translationFlag.getInTans().get(floorIndex);\n-\t\t\t\taddTo(oldInTan, newDeltaX, newDeltaY, newDeltaZ);\n+\t\t\t\tfinal Vec3 oldInTan = translationFlag.getInTans().get(floorIndex);\n+\t\t\t\toldInTan.add(new Vec3(newDeltaX, newDeltaY, newDeltaZ));\n \n-\t\t\t\tfinal Vec3 oldOutTan = (Vec3) translationFlag.getOutTans().get(floorIndex);\n-\t\t\t\taddTo(oldOutTan, newDeltaX, newDeltaY, newDeltaZ);\n+\t\t\t\tfinal Vec3 oldOutTan = translationFlag.getOutTans().get(floorIndex);\n+\t\t\t\toldOutTan.add(new Vec3(newDeltaX, newDeltaY, newDeltaZ));\n \t\t\t}\n \t\t}\n \n \t}\n \n-\tpublic void updateLocalScalingKeyframe(final int trackTime, final Integer trackGlobalSeq,\n-\t\t\tfinal Vec3 localScaling) {\n+\tpublic void updateLocalScalingKeyframe(final int trackTime, final Integer trackGlobalSeq, final Vec3 localScaling) {\n \t\t// TODO global seqs, needs separate check on AnimRendEnv, and also we must make AnimFlag.find seek on globalSeqId\n-\t\tfinal AnimFlag translationFlag = find(\"Scaling\", trackGlobalSeq);\n+\t\tfinal Vec3AnimFlag translationFlag = (Vec3AnimFlag) find(\"Scaling\", trackGlobalSeq);\n \t\tif (translationFlag == null) {\n \t\t\treturn;\n \t\t}\n \t\tfinal int floorIndex = translationFlag.floorIndex(trackTime);\n \n-\t\tif ((floorIndex != -1) && (translationFlag.getTimes().size() > 0) && (translationFlag.getTimes().get(floorIndex) == trackTime)) {\n+\t\tif ((floorIndex != -1) && (translationFlag.getTimes().size() > 0) && (translationFlag.getTimes().get(floorIndex).equals(trackTime))) {\n \t\t\t// we must change it\n-\t\t\tfinal Vec3 oldTranslationValue = (Vec3) translationFlag.getValues().get(floorIndex);\n-\t\t\tscaleBy(oldTranslationValue, localScaling.x, localScaling.y, localScaling.z);\n+\t\t\tfinal Vec3 oldTranslationValue = translationFlag.getValues().get(floorIndex);\n+\t\t\toldTranslationValue.multiply(localScaling);\n \n \t\t\tif (translationFlag.tans()) {\n-\t\t\t\tfinal Vec3 oldInTan = (Vec3) translationFlag.getInTans().get(floorIndex);\n-\t\t\t\tscaleBy(oldInTan, localScaling.x, localScaling.y, localScaling.z);\n+\t\t\t\tfinal Vec3 oldInTan = translationFlag.getInTans().get(floorIndex);\n+\t\t\t\toldInTan.multiply(localScaling);\n \n-\t\t\t\tfinal Vec3 oldOutTan = (Vec3) translationFlag.getOutTans().get(floorIndex);\n-\t\t\t\tscaleBy(oldOutTan, localScaling.x, localScaling.y, localScaling.z);\n+\t\t\t\tfinal Vec3 oldOutTan = translationFlag.getOutTans().get(floorIndex);\n+\t\t\t\toldOutTan.multiply(localScaling);\n \t\t\t}\n \t\t}\n \n \t}\n \n \n-\tprivate void setFloat(double newDeltaX, double newDeltaY, double newDeltaZ) {\n-\t\tsetXYZ(translationHeap, (float) (newDeltaX), (float) (newDeltaY), (float) (newDeltaZ));\n-\t\ttranslationHeap.w = 1;\n-\t}\n-\n-\tprivate void addTo(Vec3 vec3Value, double x, double y, double z) {\n-\t\tvec3Value.x += x;\n-\t\tvec3Value.y += y;\n-\t\tvec3Value.z += z;\n-\t}\n-\n-\tprivate void scaleBy(Vec3 vec3Value, float x, float y, float z) {\n-\t\tvec3Value.x *= x;\n-\t\tvec3Value.y *= y;\n-\t\tvec3Value.z *= z;\n-\t}\n-\n-\tprivate void setXYZ(Vec4 vecHeap, float x, float y, float z) {\n-\t\tvecHeap.x = x;\n-\t\tvecHeap.y = y;\n-\t\tvecHeap.z = z;\n-\t}\n-\n-\tprivate void setStuff(Quat oldTan, Quat rotation) {\n-\t\tsetXYZ(rotationHeap, oldTan.x, oldTan.y, oldTan.z);\n-\t\trotationHeap.w = oldTan.w;\n-\n-\t\trotation.mul(rotationHeap, rotationHeap);\n-\n-\t\tsetXYZ(oldTan, rotationHeap.x, rotationHeap.y, rotationHeap.z);\n-\t\toldTan.w = rotationHeap.w;\n-\t}\n-\n-\tprivate void rotateStuff(Quat localRotation, Quat oldInTan) {\n-\t\tsetXYZ(rotationHeap, oldInTan.x, oldInTan.y, oldInTan.z);\n-\t\trotationHeap.w = oldInTan.w;\n-\n-\t\trotationDeltaHeap.setIdentity();\n-\t\trotationDeltaHeap.mulInverse(localRotation);\n-\t\trotationDeltaHeap.mul(rotationHeap, rotationHeap);\n+\tprivate void rotateStuff(Quat localRotation, Quat heap) {\n+\t\tQuat rotationDeltaHeap = new Quat().setIdentity().mulInverse(localRotation);\n+\t\theap.mul(rotationDeltaHeap);\n \n-\t\tsetXYZ(oldInTan, rotationHeap.x, rotationHeap.y, rotationHeap.z);\n-\t\toldInTan.w = rotationHeap.w;\n \t}\n }"
  },
  {
    "sha": "d2d9ce0cac82ffe06cc8be4c4d67a2b4019666d1",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/Animation.java",
    "status": "modified",
    "additions": 48,
    "deletions": 28,
    "changes": 76,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Animation.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Animation.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/Animation.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,17 +1,19 @@\n package com.hiveworkshop.rms.editor.model;\n \n-import java.util.List;\n-\n+import com.hiveworkshop.rms.editor.model.animflag.AnimFlag;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxSequence;\n-import com.hiveworkshop.rms.ui.application.edit.animation.BasicTimeBoundProvider;\n+import com.hiveworkshop.rms.ui.application.edit.animation.TimeBoundChangeListener;\n+import com.hiveworkshop.rms.ui.application.edit.animation.TimeBoundProvider;\n import com.hiveworkshop.rms.util.Vec3;\n \n+import java.util.List;\n+\n /**\n  * A java object to represent MDL \"Sequences\" (\"Animations\").\n  *\n  * Eric Theller 11/5/2011\n  */\n-public class Animation implements BasicTimeBoundProvider {\n+public class Animation implements TimeBoundProvider {\n \tprivate String name = \"\";\n \tprivate int intervalStart = 0;\n \tprivate int intervalEnd = -1;\n@@ -148,25 +150,25 @@ public void setIntervalEnd(final int intervalEnd) {\n \t\tthis.intervalEnd = intervalEnd;\n \t}\n \n-\tpublic void copyToInterval(final int start, final int end, final List<AnimFlag> flags,\n-\t\t\tfinal List<EventObject> eventObjs, final List<AnimFlag> newFlags, final List<EventObject> newEventObjs) {\n-\t\tfor (final AnimFlag af : newFlags) {\n-\t\t\tif (!af.hasGlobalSeq) {\n-\t\t\t\taf.copyFrom(flags.get(newFlags.indexOf(af)), intervalStart, intervalEnd, start, end);\n+\tpublic void copyToInterval(final int newStart, final int newEnd,\n+\t                           final List<AnimFlag<?>> sourceFlags, final List<EventObject> sourceEventObjs,\n+\t                           final List<AnimFlag<?>> newFlags, final List<EventObject> newEventObjs) {\n+\t\tfor (final AnimFlag<?> af : newFlags) {\n+\t\t\tif (!af.hasGlobalSeq()) {\n+\t\t\t\taf.copyFrom(sourceFlags.get(newFlags.indexOf(af)), intervalStart, intervalEnd, newStart, newEnd);\n \t\t\t}\n \t\t}\n \t\tfor (final EventObject e : newEventObjs) {\n \t\t\tif (!e.hasGlobalSeq) {\n-\t\t\t\te.copyFrom(eventObjs.get(newEventObjs.indexOf(e)), intervalStart, intervalEnd, start, end);\n+\t\t\t\te.copyFrom(sourceEventObjs.get(newEventObjs.indexOf(e)), intervalStart, intervalEnd, newStart, newEnd);\n \t\t\t}\n \t\t}\n \t}\n \n-\tpublic void copyToInterval(final int start, final int end, final List<AnimFlag> flags,\n-\t\t\tfinal List<EventObject> eventObjs) {\n-\t\tfor (final AnimFlag af : flags) {\n-\t\t\tif (!af.hasGlobalSeq) {\n-\t\t\t\taf.copyFrom(new AnimFlag(af), intervalStart, intervalEnd, start, end);\n+\tpublic void copyToInterval(final int start, final int end, final List<AnimFlag<?>> flags, final List<EventObject> eventObjs) {\n+\t\tfor (final AnimFlag<?> af : flags) {\n+\t\t\tif (!af.hasGlobalSeq()) {\n+\t\t\t\taf.copyFrom(af, intervalStart, intervalEnd, start, end);\n \t\t\t}\n \t\t}\n \t\tfor (final EventObject e : eventObjs) {\n@@ -176,10 +178,24 @@ public void copyToInterval(final int start, final int end, final List<AnimFlag>\n \t\t}\n \t}\n \n-\tpublic void setInterval(final int start, final int end, final List<AnimFlag> flags,\n-\t\t\tfinal List<EventObject> eventObjs) {\n-\t\tfor (final AnimFlag af : flags) {\n-\t\t\tif (!af.hasGlobalSeq) {\n+//\tpublic <T> void copyToInterval(final int start, final int end, final List<AnimFlag<T>> flags,\n+//\t\t\tfinal List<EventObject> eventObjs) {\n+//\t\tfor (final AnimFlag<T> af : flags) {\n+//\t\t\tif (!af.hasGlobalSeq) {\n+//\t\t\t\taf.copyFrom(af, intervalStart, intervalEnd, start, end);\n+//\t\t\t}\n+//\t\t}\n+//\t\tfor (final EventObject e : eventObjs) {\n+//\t\t\tif (!e.hasGlobalSeq) {\n+//\t\t\t\te.copyFrom(e.copy(), intervalStart, intervalEnd, start, end);\n+//\t\t\t}\n+//\t\t}\n+//\t}\n+\n+\tpublic void setInterval(final int start, final int end, final List<AnimFlag<?>> flags,\n+\t                        final List<EventObject> eventObjs) {\n+\t\tfor (final AnimFlag<?> af : flags) {\n+\t\t\tif (!af.hasGlobalSeq()) {\n \t\t\t\taf.timeScale(intervalStart, intervalEnd, start, end);\n \t\t\t}\n \t\t}\n@@ -192,9 +208,9 @@ public void setInterval(final int start, final int end, final List<AnimFlag> fla\n \t\tintervalEnd = end;\n \t}\n \n-\tpublic void reverse(final List<AnimFlag> flags, final List<EventObject> eventObjs) {\n-\t\tfor (final AnimFlag af : flags) {\n-\t\t\tif (!af.hasGlobalSeq && ((af.getTypeId() == 1) || (af.getTypeId() == 2) || (af.getTypeId() == 3))) {\n+\tpublic void reverse(final List<AnimFlag<?>> flags, final List<EventObject> eventObjs) {\n+\t\tfor (final AnimFlag<?> af : flags) {\n+\t\t\tif (!af.hasGlobalSeq() && ((af.getTypeId() == 1) || (af.getTypeId() == 2) || (af.getTypeId() == 3))) {\n \t\t\t\taf.timeScale(intervalStart, intervalEnd, intervalEnd, intervalStart);\n \t\t\t}\n \t\t}\n@@ -215,12 +231,11 @@ public void reverse(final List<AnimFlag> flags, final List<EventObject> eventObj\n \t\t// }\n \t}\n \n-\tpublic void clearData(final List<AnimFlag> flags, final List<EventObject> eventObjs) {\n-\t\tfor (final AnimFlag af : flags) {\n+\tpublic void clearData(final List<AnimFlag<?>> flags, final List<EventObject> eventObjs) {\n+\t\tfor (final AnimFlag<?> af : flags) {\n \t\t\tif (((af.getTypeId() == 1) || (af.getTypeId() == 2) || (af.getTypeId() == 3))) {\n \t\t\t\t// !af.hasGlobalSeq && was above before\n-\t\t\t\taf.deleteAnim(this);// timeScale(m_intervalStart, m_intervalEnd,\n-\t\t\t\t\t\t\t\t\t// m_intervalEnd, m_intervalStart);\n+\t\t\t\taf.deleteAnim(this);\n \t\t\t}\n \t\t}\n \t\tfor (final EventObject e : eventObjs) {\n@@ -229,11 +244,16 @@ public void clearData(final List<AnimFlag> flags, final List<EventObject> eventO\n \t}\n \n \tpublic void setInterval(final int start, final int end, final EditableModel mdlr) {\n-\t\tfinal List<AnimFlag> aniFlags = mdlr.getAllAnimFlags();\n-\t\tfinal List<EventObject> eventObjs = mdlr.sortedIdObjects(EventObject.class);\n+\t\tfinal List<AnimFlag<?>> aniFlags = mdlr.getAllAnimFlags();\n+\t\tfinal List<EventObject> eventObjs = mdlr.getEvents();\n \t\tsetInterval(start, end, aniFlags, eventObjs);\n \t}\n \n+\t@Override\n+\tpublic void addChangeListener(TimeBoundChangeListener listener) {\n+\n+\t}\n+\n \t@Override\n \tpublic int getStart() {\n \t\treturn intervalStart;"
  },
  {
    "sha": "3a9f271b268a9d2590df2e9e26c8cb9cc186646f",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/Attachment.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Attachment.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Attachment.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/Attachment.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,8 +1,8 @@\n package com.hiveworkshop.rms.editor.model;\n \n+import com.hiveworkshop.rms.editor.model.visitor.IdObjectVisitor;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxAttachment;\n import com.hiveworkshop.rms.ui.application.edit.mesh.viewport.axes.CoordinateSystem;\n-import com.hiveworkshop.rms.editor.model.visitor.IdObjectVisitor;\n \n /**\n  * Write a description of class Attachment here.\n@@ -40,10 +40,10 @@ public Attachment(final MdlxAttachment attachment) {\n \t\tsetPath(attachment.path);\n \t}\n \n-\tpublic MdlxAttachment toMdlx() {\n+\tpublic MdlxAttachment toMdlx(EditableModel model) {\n \t\tfinal MdlxAttachment attachment = new MdlxAttachment();\n \n-\t\tobjectToMdlx(attachment);\n+\t\tobjectToMdlx(attachment, model);\n \n \t\tattachment.attachmentId = getAttachmentID();\n "
  },
  {
    "sha": "3a7d7995b9bce6ee5daf258823ed01a257f3c102",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/Bone.java",
    "status": "modified",
    "additions": 20,
    "deletions": 7,
    "changes": 27,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Bone.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Bone.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/Bone.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,5 +1,6 @@\n package com.hiveworkshop.rms.editor.model;\n \n+import com.hiveworkshop.rms.editor.model.animflag.AnimFlag;\n import com.hiveworkshop.rms.editor.model.visitor.IdObjectVisitor;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxBone;\n import com.hiveworkshop.rms.ui.application.edit.mesh.viewport.axes.CoordinateSystem;\n@@ -50,11 +51,11 @@ public Bone(final MdlxBone bone) {\n \t\tgeosetAnimId = bone.geosetAnimationId;\n \t}\n \n-\tpublic MdlxBone toMdlx() {\n+\tpublic MdlxBone toMdlx(EditableModel model) {\n \t\tfinal MdlxBone bone = new MdlxBone();\n \n-\t\tobjectToMdlx(bone);\n-\t\t\n+\t\tobjectToMdlx(bone, model);\n+\n \t\tbone.geosetId = geosetId;\n \t\tbone.geosetAnimationId = geosetAnimId;\n \n@@ -67,9 +68,9 @@ public Bone copy() {\n \t}\n \t\n \tpublic void copyMotionFrom(final Bone b) {\n-\t\tfor (final AnimFlag baf : b.animFlags.values()) {\n+\t\tfor (final AnimFlag<?> baf : b.animFlags.values()) {\n \t\t\tboolean foundMatch = false;\n-\t\t\tfor (final AnimFlag af : animFlags.values()) {\n+\t\t\tfor (final AnimFlag<?> af : animFlags.values()) {\n \t\t\t\tboolean sameSeq = false;\n \t\t\t\tif (baf.globalSeq == null && af.globalSeq == null) {\n \t\t\t\t\tsameSeq = true;\n@@ -89,7 +90,7 @@ public void copyMotionFrom(final Bone b) {\n \t}\n \n \tpublic void clearAnimation(final Animation a) {\n-\t\tfor (final AnimFlag af : animFlags.values()) {\n+\t\tfor (final AnimFlag<?> af : animFlags.values()) {\n \t\t\taf.deleteAnim(a);\n \t\t}\n \t}\n@@ -99,14 +100,26 @@ public void clearAnimation(final Animation a) {\n \t * the time track.\n \t */\n \tpublic boolean animates() {\n-\t\tfor (final AnimFlag af : animFlags.values()) {\n+\t\tfor (final AnimFlag<?> af : animFlags.values()) {\n \t\t\tif (af.size() > 1) {\n \t\t\t\treturn true;\n \t\t\t}\n \t\t}\n \t\treturn false;\n \t}\n \n+\tpublic boolean isMultiGeo() {\n+\t\treturn multiGeoId;\n+\t}\n+\n+\tpublic boolean controlsGeoset(Geoset geoset) {\n+\t\treturn this.geoset.equals(geoset);\n+\t}\n+\n+\tpublic boolean controlsGeoset2(Geoset geoset) {\n+\t\treturn this.geoset.equals(geoset) || multiGeoId;\n+\t}\n+\n \t@Override\n \tpublic void apply(final IdObjectVisitor visitor) {\n \t\tvisitor.bone(this);"
  },
  {
    "sha": "42fb394220d6d799ec9b21c8f056e812b1a43eb7",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/Camera.java",
    "status": "modified",
    "additions": 22,
    "deletions": 21,
    "changes": 43,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Camera.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Camera.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/Camera.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,16 +1,17 @@\n package com.hiveworkshop.rms.editor.model;\n \n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-\n+import com.hiveworkshop.rms.editor.model.animflag.AnimFlag;\n import com.hiveworkshop.rms.parsers.mdlx.AnimationMap;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxCamera;\n import com.hiveworkshop.rms.parsers.mdlx.timeline.MdlxTimeline;\n import com.hiveworkshop.rms.ui.application.viewer.AnimatedRenderEnvironment;\n import com.hiveworkshop.rms.util.Quat;\n import com.hiveworkshop.rms.util.Vec3;\n \n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n /**\n  * Camera class, these are the things most people would think of as a particle\n  * emitter, I think. Blizzard favored use of these over ParticleEmitters and I\n@@ -26,7 +27,7 @@\n \tdouble farClip;\n \tdouble nearClip;\n \tVec3 targetPosition;\n-\tList<AnimFlag> targetAnimFlags = new ArrayList<>();\n+\tList<AnimFlag<Vec3>> targetAnimFlags = new ArrayList<>();\n \tfinal SourceNode sourceNode = new SourceNode(this);\n \tfinal TargetNode targetNode = new TargetNode(this);\n \tfloat[] bindPose;\n@@ -41,9 +42,9 @@ public Camera(final MdlxCamera camera) {\n \n \t\tfor (final MdlxTimeline<?> timeline : camera.timelines) {\n \t\t\tif (timeline.name == AnimationMap.KTTR.getWar3id()) {\n-\t\t\t\ttargetNode.add(new AnimFlag(timeline));\n+\t\t\t\ttargetNode.add(AnimFlag.createFromTimeline(timeline));\n \t\t\t} else {\n-\t\t\t\tsourceNode.add(new AnimFlag(timeline));\n+\t\t\t\tsourceNode.add(AnimFlag.createFromTimeline(timeline));\n \t\t\t}\n \t\t}\n \t}\n@@ -123,18 +124,17 @@ public TargetNode getTargetNode() {\n \n \tpublic static final class SourceNode extends AnimatedNode {\n \t\tprivate static final Quat rotationHeap = new Quat(0, 0, 0, 1);\n-\t\t\n+\n \t\tprivate final Camera parent;\n-\t\tprivate final Vec3 axisHeap = new Vec3(0, 0, 0);\n \n \t\tprivate SourceNode(final Camera parent) {\n \t\t\tthis.parent = parent;\n \t\t}\n \n-\t\t@Override\n-\t\tpublic AnimatedNode getParent() {\n-\t\t\treturn null;\n-\t\t}\n+//\t\t@Override\n+//\t\tpublic AnimatedNode getParent() {\n+//\t\t\treturn null;\n+//\t\t}\n \n \t\t@Override\n \t\tpublic Vec3 getPivotPoint() {\n@@ -158,7 +158,7 @@ public float getRenderVisibility(final AnimatedRenderEnvironment animatedRenderE\n \n \t\t@Override\n \t\tpublic Quat getRenderRotation(final AnimatedRenderEnvironment animatedRenderEnvironment) {\n-\t\t\tfinal AnimFlag translationFlag = find(\"Rotation\");\n+\t\t\tfinal AnimFlag<?> translationFlag = find(\"Rotation\");\n \t\t\tif (translationFlag != null) {\n \t\t\t\tfinal Object interpolated = translationFlag.interpolateAt(animatedRenderEnvironment);\n \t\t\t\tif (interpolated instanceof Float) {\n@@ -167,9 +167,10 @@ public Quat getRenderRotation(final AnimatedRenderEnvironment animatedRenderEnvi\n \t\t\t\t\tfinal Vec3 targetPosition = parent.targetPosition;\n \t\t\t\t\tfinal Vec3 sourceTranslation = getRenderTranslation(animatedRenderEnvironment);\n \t\t\t\t\tfinal Vec3 sourcePosition = parent.position;\n-\t\t\t\t\taxisHeap.x = (targetPosition.x + targetTranslation.x) - (sourcePosition.x + sourceTranslation.x);\n-\t\t\t\t\taxisHeap.y = (targetPosition.y + targetTranslation.y) - (sourcePosition.y + sourceTranslation.y);\n-\t\t\t\t\taxisHeap.z = (targetPosition.z + targetTranslation.z) - (sourcePosition.z + sourceTranslation.z);\n+\t\t\t\t\tfinal Vec3 axisHeap = new Vec3(targetPosition).add(targetTranslation).sub(sourcePosition).sub(sourceTranslation);\n+//\t\t\t\t\taxisHeap.x = (targetPosition.x + targetTranslation.x) - (sourcePosition.x + sourceTranslation.x);\n+//\t\t\t\t\taxisHeap.y = (targetPosition.y + targetTranslation.y) - (sourcePosition.y + sourceTranslation.y);\n+//\t\t\t\t\taxisHeap.z = (targetPosition.z + targetTranslation.z) - (sourcePosition.z + sourceTranslation.z);\n \t\t\t\t\trotationHeap.setFromAxisAngle(axisHeap, angle);\n \t\t\t\t\treturn rotationHeap;\n \t\t\t\t} else {\n@@ -196,10 +197,10 @@ private TargetNode(final Camera parent) {\n \t\t\tthis.parent = parent;\n \t\t}\n \n-\t\t@Override\n-\t\tpublic AnimatedNode getParent() {\n-\t\t\treturn null;\n-\t\t}\n+//\t\t@Override\n+//\t\tpublic AnimatedNode getParent() {\n+//\t\t\treturn null;\n+//\t\t}\n \n \t\t@Override\n \t\tpublic Vec3 getPivotPoint() {"
  },
  {
    "sha": "1eeda147c6fb46528fae1492aa3204b35772a36e",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/CollisionShape.java",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/CollisionShape.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/CollisionShape.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/CollisionShape.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,15 +1,15 @@\n package com.hiveworkshop.rms.editor.model;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-\n import com.hiveworkshop.rms.editor.model.visitor.IdObjectVisitor;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxCollisionShape;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxCollisionShape.Type;\n import com.hiveworkshop.rms.ui.application.edit.mesh.viewport.axes.CoordinateSystem;\n import com.hiveworkshop.rms.ui.application.viewer.AnimatedRenderEnvironment;\n import com.hiveworkshop.rms.util.Vec3;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n /**\n  * A class for CollisionShapes, which handle unit selection and related matters\n  *\n@@ -55,10 +55,10 @@ public CollisionShape(final MdlxCollisionShape shape) {\n \t\t}\n \t}\n \n-\tpublic MdlxCollisionShape toMdlx() {\n+\tpublic MdlxCollisionShape toMdlx(EditableModel model) {\n \t\tfinal MdlxCollisionShape shape = new MdlxCollisionShape();\n-\t\t\n-\t\tobjectToMdlx(shape);\n+\n+\t\tobjectToMdlx(shape, model);\n \n \t\tshape.type = type;\n "
  },
  {
    "sha": "3e8175b74d808d273f4d1c63eee097eb16a0c6af",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/EditableModel.java",
    "status": "modified",
    "additions": 1501,
    "deletions": 1456,
    "changes": 2957,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/EditableModel.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/EditableModel.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/EditableModel.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2"
  },
  {
    "sha": "37639e57a5c4652ab9074509ae6ea7dc50d10b56",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/EventObject.java",
    "status": "modified",
    "additions": 860,
    "deletions": 2,
    "changes": 862,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/EventObject.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/EventObject.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/EventObject.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -57,10 +57,10 @@ public EventObject(final MdlxEventObject object) {\n \t\t}\n \t}\n \n-\tpublic MdlxEventObject toMdlx() {\n+\tpublic MdlxEventObject toMdlx(EditableModel model) {\n \t\tfinal MdlxEventObject object = new MdlxEventObject();\n \n-\t\tobjectToMdlx(object);\n+\t\tobjectToMdlx(object, model);\n \n \t\tif (isHasGlobalSeq()) {\n \t\t\tobject.globalSequenceId = getGlobalSeqId();\n@@ -256,4 +256,862 @@ public double getClickRadius(final CoordinateSystem coordinateSystem) {\n \tpublic float getRenderVisibility(final AnimatedRenderEnvironment animatedRenderEnvironment) {\n \t\treturn 1;\n \t}\n+\n+\tpublic static String getEventName(String code) {\n+\t\tString typeCode = code.substring(0, code.length() - 4);\n+\t\tString eventCode = code.substring(code.length() - 4);\n+\t\treturn switch (typeCode.toUpperCase()) {\n+\t\t\tcase \"SNDX\" -> \"Sound - \" + getSoundNameString(eventCode);\n+\t\t\tcase \"SPNX\" -> {\n+\t\t\t\tString objName = getSpawnObjectName(eventCode).replace(\".*\\\\\", \"\");\n+\t\t\t\tyield \"Spawned Object - \" + objName;\n+\t\t\t}\n+\t\t\tcase \"UBRX\" -> \"UberSplat - \" + getUberSplatName(eventCode);\n+\t\t\tcase \"SPLX\" -> \"Splat - \" + getSplatName(eventCode);\n+\t\t\tcase \"FTPX\" -> \"Footprint - \" + getSplatName(eventCode);\n+//\t\t\tcase \"SND\" -> \"Sound\";\n+//\t\t\tcase \"FTP\" -> \"Footprint\";\n+//\t\t\tcase \"SPN\" -> \"Spawned Object\";\n+//\t\t\tcase \"SPL\" -> \"Splat\";\n+//\t\t\tcase \"UBR\" -> \"UberSplat\";\n+\t\t\tdefault -> \"unknown\";\n+\t\t};\n+\t}\n+\n+\t// copied from khalvs mdl-exporter for blender, https://github.com/tw1lac/mdl-exporter/blob/2.8/export_mdl/sound_types.txt\n+\tpublic static String getSoundNameString(String code) {\n+\t\treturn switch (code) {\n+\t\t\tcase \"FBCL\" -> \"TestFootstep\";\n+\t\t\tcase \"FBCR\" -> \"TestFootstep\";\n+\t\t\tcase \"AAMS\" -> \"AntiMagicshell\";\n+\t\t\tcase \"AAST\" -> \"AncestralSpirit\";\n+\t\t\tcase \"AAVE\" -> \"ObsidianStatueMorph\";\n+\t\t\tcase \"ABLO\" -> \"Bloodlust\";\n+\t\t\tcase \"ABPD\" -> \"BothGlueScreenPopDown\";\n+\t\t\tcase \"ABPU\" -> \"BothGlueScreenPopUp\";\n+\t\t\tcase \"ABRW\" -> \"Burrow\";\n+\t\t\tcase \"ABSK\" -> \"BerserkerRage\";\n+\t\t\tcase \"ABTR\" -> \"BattleRoar\";\n+\t\t\tcase \"ACAN\" -> \"Cannibalize\";\n+\t\t\tcase \"ACBC\" -> \"BreathOfFire\";\n+\t\t\tcase \"ACBF\" -> \"BreathOfFrost\";\n+\t\t\tcase \"ACCV\" -> \"CrushingWave\";\n+\t\t\tcase \"ACWD\" -> \"CrushingWaveDamage\";\n+\t\t\tcase \"ACLB\" -> \"CinematicLightningBolt\";\n+\t\t\tcase \"ACRH\" -> \"CorrosiveBreathMissileHit\";\n+\t\t\tcase \"ACRI\" -> \"Cripple\";\n+\t\t\tcase \"ACRL\" -> \"CorrosiveBreathMissileLaunch\";\n+\t\t\tcase \"ACRS\" -> \"Curse\";\n+\t\t\tcase \"ACSI\" -> \"Silence\";\n+\t\t\tcase \"ACSL\" -> \"CreepSleep\";\n+\t\t\tcase \"ACYB\" -> \"CycloneBirth\";\n+\t\t\tcase \"ACYD\" -> \"CycloneDeath\";\n+\t\t\tcase \"ADEF\" -> \"Defend\";\n+\t\t\tcase \"FDFL\" -> \"DeepFootstep\";\n+\t\t\tcase \"FDFR\" -> \"DeepFootstep\";\n+\t\t\tcase \"FDSL\" -> \"FiendStep\";\n+\t\t\tcase \"FDSR\" -> \"FiendStep\";\n+\t\t\tcase \"FHCL\" -> \"HeroCinematicStep\";\n+\t\t\tcase \"FHCR\" -> \"HeroCinematicStep\";\n+\t\t\tcase \"ADCM\" -> \"DruidOfTheClawMorph\";\n+\t\t\tcase \"ADCA\" -> \"DruidOfTheClawMorphAlternate\";\n+\t\t\tcase \"ADEV\" -> \"Devour\";\n+\t\t\tcase \"ADHM\" -> \"DemonHunterMorph\";\n+\t\t\tcase \"ADIS\" -> \"DispelMagic\";\n+\t\t\tcase \"ADTM\" -> \"DruidOfTheTalonMorph\";\n+\t\t\tcase \"ADTA\" -> \"DruidOfTheTalonMorphAlternate\";\n+\t\t\tcase \"ADVP\" -> \"DevourPuke\";\n+\t\t\tcase \"AEAT\" -> \"EatTreeMunch\";\n+\t\t\tcase \"AEBA\" -> \"Barkskin\";\n+\t\t\tcase \"AEBD\" -> \"Earthbind\";\n+\t\t\tcase \"AEBL\" -> \"BlinkCaster\";\n+\t\t\tcase \"AEBT\" -> \"BlinkTarget\";\n+\t\t\tcase \"AHDR\" -> \"SiphonManaCaster\";\n+\t\t\tcase \"AHEA\" -> \"Heal\";\n+\t\t\tcase \"AHER\" -> \"LevelUp\";\n+\t\t\tcase \"AHFS\" -> \"FlameStrike\";\n+\t\t\tcase \"AHFT\" -> \"FlameStrikeTarget\";\n+\t\t\tcase \"AHHB\" -> \"HolyBolt\";\n+\t\t\tcase \"AHMC\" -> \"MarkOfChaos\";\n+\t\t\tcase \"AHMF\" -> \"ManaFlareMissile\";\n+\t\t\tcase \"AHMT\" -> \"MassTeleport\";\n+\t\t\tcase \"AHRE\" -> \"Resurrect\";\n+\t\t\tcase \"AHRV\" -> \"ReviveHuman\";\n+\t\t\tcase \"AHTB\" -> \"StormBolt\";\n+\t\t\tcase \"AHSL\" -> \"StormBoltLaunch\";\n+\t\t\tcase \"AHTC\" -> \"ThunderClap\";\n+\t\t\tcase \"AHWD\" -> \"HealingWardBirth\";\n+\t\t\tcase \"AICB\" -> \"OrbOfCorruptionLaunch\";\n+\t\t\tcase \"AICH\" -> \"OrbOfCorruptionHit\";\n+\t\t\tcase \"AIDC\" -> \"NeutralizationWandHit\";\n+\t\t\tcase \"AILL\" -> \"ItemIllusion\";\n+\t\t\tcase \"AIMA\" -> \"ManaPotion\";\n+\t\t\tcase \"AINB\" -> \"InfernalBirth\";\n+\t\t\tcase \"AINF\" -> \"InnerFire\";\n+\t\t\tcase \"AIRE\" -> \"RestorationPotion\";\n+\t\t\tcase \"AISO\" -> \"SoulGem\";\n+\t\t\tcase \"AITM\" -> \"Tome\";\n+\t\t\tcase \"AIVS\" -> \"Invisibility\";\n+\t\t\tcase \"AKDL\" -> \"KodoDrumLeft\";\n+\t\t\tcase \"AKDR\" -> \"KodoDrumRight\";\n+\t\t\tcase \"ALPD\" -> \"LeftGlueScreenPopDown\";\n+\t\t\tcase \"ALPU\" -> \"LeftGlueScreenPopUp\";\n+\t\t\tcase \"ALSD\" -> \"LightningShield\";\n+\t\t\tcase \"ANBA\" -> \"BlackArrowHit\";\n+\t\t\tcase \"ANDO\" -> \"DoomTarget\";\n+\t\t\tcase \"ANDT\" -> \"RevealMap\";\n+\t\t\tcase \"ANEU\" -> \"NeutralBuildingActivate\";\n+\t\t\tcase \"ANHT\" -> \"HowlOfTerror\";\n+\t\t\tcase \"ANMO\" -> \"MonsoonBolt\";\n+\t\t\tcase \"ANPA\" -> \"Parasite\";\n+\t\t\tcase \"ANSA\" -> \"SacrificeUnit\";\n+\t\t\tcase \"ANSD\" -> \"StrongDrink\";\n+\t\t\tcase \"ANSM\" -> \"StrongDrinkMissile\";\n+\t\t\tcase \"ANSS\" -> \"SpellShieldAmulet\";\n+\t\t\tcase \"AOAG\" -> \"WardBirth\";\n+\t\t\tcase \"AOCR\" -> \"CriticalStrike\";\n+\t\t\tcase \"AOHW\" -> \"HealingWaveTarget\";\n+\t\t\tcase \"AOLB\" -> \"LightningBolt\";\n+\t\t\tcase \"AOMI\" -> \"MirrorImageDeath\";\n+\t\t\tcase \"AOMC\" -> \"MirrorImage\";\n+\t\t\tcase \"AORE\" -> \"Reincarnation\";\n+\t\t\tcase \"AORV\" -> \"ReviveOrc\";\n+\t\t\tcase \"AOSD\" -> \"FeralSpiritDone\";\n+\t\t\tcase \"AOSF\" -> \"FeralSpiritTarget\";\n+\t\t\tcase \"AOSH\" -> \"ShockWave\";\n+\t\t\tcase \"AOVD\" -> \"VoodooBirth\";\n+\t\t\tcase \"AOWS\" -> \"Warstomp\";\n+\t\t\tcase \"AOWW\" -> \"Whirlwind\";\n+\t\t\tcase \"APHS\" -> \"PhaseShift\";\n+\t\t\tcase \"APHX\" -> \"PhoenixBirth\";\n+\t\t\tcase \"APLA\" -> \"PolymorphAir\";\n+\t\t\tcase \"APLD\" -> \"PolymorphDone\";\n+\t\t\tcase \"APOL\" -> \"Polymorph\";\n+\t\t\tcase \"APRG\" -> \"Purge\";\n+\t\t\tcase \"APSH\" -> \"PossessionMissileHit\";\n+\t\t\tcase \"APSL\" -> \"PossessionMissileLaunch\";\n+\t\t\tcase \"APXB\" -> \"PhoenixEggBirth\";\n+\t\t\tcase \"AREJ\" -> \"Rejuvenation\";\n+\t\t\tcase \"AREP\" -> \"Repair\";\n+\t\t\tcase \"AROO\" -> \"Root\";\n+\t\t\tcase \"ARPD\" -> \"RightGlueScreenPopDown\";\n+\t\t\tcase \"ARPU\" -> \"RightGlueScreenPopUp\";\n+\t\t\tcase \"ASHP\" -> \"ShadowPact\";\n+\t\t\tcase \"ASKA\" -> \"RaiseSkeletonArcher\";\n+\t\t\tcase \"ASKW\" -> \"RaiseSkeletonWarrior\";\n+\t\t\tcase \"ASLC\" -> \"SlowCaster\";\n+\t\t\tcase \"ASLO\" -> \"Slow\";\n+\t\t\tcase \"ASPL\" -> \"SpiritLink\";\n+\t\t\tcase \"ASPM\" -> \"SpellStealMissileLaunch\";\n+\t\t\tcase \"ASPS\" -> \"SpellStealTarget\";\n+\t\t\tcase \"ASTO\" -> \"StoneFormMorph1\";\n+\t\t\tcase \"AST2\" -> \"StoneFormMorph2\";\n+\t\t\tcase \"AST3\" -> \"StoneFormMorph3\";\n+\t\t\tcase \"ASTA\" -> \"StoneFormMorphAlternate\";\n+\t\t\tcase \"ASTB\" -> \"StasisTotemBirth\";\n+\t\t\tcase \"ASTH\" -> \"StampedeHit\";\n+\t\t\tcase \"ASTS\" -> \"StasisTotemDeath\";\n+\t\t\tcase \"ASWB\" -> \"SpiritWolfBirth\";\n+\t\t\tcase \"ASWE\" -> \"WaterElementalBirth\";\n+\t\t\tcase \"ATAU\" -> \"Taunt\";\n+\t\t\tcase \"ATRB\" -> \"TreeWallBirth\";\n+\t\t\tcase \"AUB1\" -> \"UndeadBuildingBirth1\";\n+\t\t\tcase \"AUB2\" -> \"UndeadBuildingBirth2\";\n+\t\t\tcase \"AUB3\" -> \"UndeadBuildingBirth3\";\n+\t\t\tcase \"AUB4\" -> \"UndeadBuildingBirth4\";\n+\t\t\tcase \"AUCB\" -> \"ScarabBirth\";\n+\t\t\tcase \"AUCD\" -> \"CarrionSwarmDamage\";\n+\t\t\tcase \"AUCH\" -> \"Charm\";\n+\t\t\tcase \"AUCO\" -> \"UnstableConcoction\";\n+\t\t\tcase \"AUCS\" -> \"CarrionSwarmLaunch\";\n+\t\t\tcase \"AUDA\" -> \"DarkRitual\";\n+\t\t\tcase \"AUDC\" -> \"DeathCoil\";\n+\t\t\tcase \"AUDM\" -> \"DarkSummoningMissileLaunch\";\n+\t\t\tcase \"AUDP\" -> \"DeathPactTarget\";\n+\t\t\tcase \"AUDS\" -> \"DarkSummoningTarget\";\n+\t\t\tcase \"AUDT\" -> \"DeathAndDecayTarget\";\n+\t\t\tcase \"AUFA\" -> \"FrostArmor\";\n+\t\t\tcase \"AUFN\" -> \"FrostNova\";\n+\t\t\tcase \"AUGS\" -> \"GatherShadowsMorph\";\n+\t\t\tcase \"AUGA\" -> \"GatherShadowsMorphAlternate\";\n+\t\t\tcase \"AUHF\" -> \"UnholyFrenzy\";\n+\t\t\tcase \"AUIH\" -> \"ImpaleLand\";\n+\t\t\tcase \"AUIM\" -> \"Impale\";\n+\t\t\tcase \"AUIT\" -> \"ImpaleHit\";\n+\t\t\tcase \"AUPR\" -> \"Uproot\";\n+\t\t\tcase \"AURV\" -> \"ReviveUndead\";\n+\t\t\tcase \"AWBS\" -> \"BigWaterStep\";\n+\t\t\tcase \"AWEB\" -> \"Web\";\n+\t\t\tcase \"AWRS\" -> \"Pulverize\";\n+\t\t\tcase \"AWST\" -> \"WaterStep\";\n+\t\t\tcase \"DABA\" -> \"AbominationAlternateDeath\";\n+\t\t\tcase \"DABO\" -> \"AbominationDeath\";\n+\t\t\tcase \"DACO\" -> \"AcolyteDeath\";\n+\t\t\tcase \"DADR\" -> \"DruidOfTheTalonDeath\";\n+\t\t\tcase \"DALB\" -> \"AlbatrossDeath\";\n+\t\t\tcase \"DAMG\" -> \"HeroArchMageDeath\";\n+\t\t\tcase \"DANG\" -> \"WardDeath\";\n+\t\t\tcase \"DANP\" -> \"TreantDeath\";\n+\t\t\tcase \"DARC\" -> \"ArachnathidDeath\";\n+\t\t\tcase \"DARG\" -> \"ArmorGolemDeath\";\n+\t\t\tcase \"DART\" -> \"ArtilleryExplodeDeath\";\n+\t\t\tcase \"DASS\" -> \"AssassinDeath\";\n+\t\t\tcase \"DWTC\" -> \"WatcherDeath\";\n+\t\t\tcase \"DBAL\" -> \"BallistaDeath\";\n+\t\t\tcase \"DBAN\" -> \"BansheeDeath\";\n+\t\t\tcase \"DBAT\" -> \"BatRiderDeath\";\n+\t\t\tcase \"DBES\" -> \"HeroBloodElfDeath\";\n+\t\t\tcase \"DBLA\" -> \"HeroBladeMasterDeath\";\n+\t\t\tcase \"DBNT\" -> \"BanditDeath\";\n+\t\t\tcase \"DBRG\" -> \"DeathBridge\";\n+\t\t\tcase \"DBRI\" -> \"BristleBackDeath\";\n+\t\t\tcase \"DBSF\" -> \"BlackStagFemaleDeath\";\n+\t\t\tcase \"DBSM\" -> \"BlackStagMaleDeath\";\n+\t\t\tcase \"DBSP\" -> \"BattleShipDeath\";\n+\t\t\tcase \"DBSX\" -> \"ObsidianAvengerDeath\";\n+\t\t\tcase \"DBTM\" -> \"BeastmasterDeath\";\n+\t\t\tcase \"DCAT\" -> \"CatapultDeath\";\n+\t\t\tcase \"DCBL\" -> \"DeathCityBuilding\";\n+\t\t\tcase \"DCEN\" -> \"CentaurDeath\";\n+\t\t\tcase \"DCNA\" -> \"CentaurArcherDeath\";\n+\t\t\tcase \"DCRL\" -> \"HeroCryptLordDeath\";\n+\t\t\tcase \"DDEM\" -> \"HeroDemonHunterDeath\";\n+\t\t\tcase \"DDHK\" -> \"DragonHawkDeath\";\n+\t\t\tcase \"DDKN\" -> \"HeroDeathKnightDeath\";\n+\t\t\tcase \"DDKR\" -> \"DarkRangerDeath\";\n+\t\t\tcase \"DDMA\" -> \"HeroDemonHunterDeathAlternate\";\n+\t\t\tcase \"DDMG\" -> \"DoomGuardDeath\";\n+\t\t\tcase \"DDOC\" -> \"DruidOfTheClawDeath\";\n+\t\t\tcase \"DDCA\" -> \"DruidOfTheClawDeathAlternate\";\n+\t\t\tcase \"DDMN\" -> \"DemonessDeath\";\n+\t\t\tcase \"DDNW\" -> \"DuneWormDeath\";\n+\t\t\tcase \"DDTA\" -> \"DruidOfTheTalonDeathAlternate\";\n+\t\t\tcase \"DDRA\" -> \"DragonDeath\";\n+\t\t\tcase \"DDRL\" -> \"HeroDreadLordDeath\";\n+\t\t\tcase \"DDRN\" -> \"DraeneiDeath\";\n+\t\t\tcase \"DDRS\" -> \"DragonspawnDeath\";\n+\t\t\tcase \"DDRY\" -> \"DryadDeath\";\n+\t\t\tcase \"DDSH\" -> \"HumanDissipate\";\n+\t\t\tcase \"DDSN\" -> \"NightElfDissipate\";\n+\t\t\tcase \"DDSO\" -> \"OrcDissipate\";\n+\t\t\tcase \"DDWF\" -> \"DireWolfDeath\";\n+\t\t\tcase \"DEBA\" -> \"DeathWalkingNightElfBuilding\";\n+\t\t\tcase \"DEBC\" -> \"DeathNightElfBuildingCancel\";\n+\t\t\tcase \"DEGS\" -> \"EggSackDeath\";\n+\t\t\tcase \"DELB\" -> \"DeathNightElfLargeBuilding\";\n+\t\t\tcase \"DELS\" -> \"DeathNightElfSmallBuilding\";\n+\t\t\tcase \"DENT\" -> \"EntDeath\";\n+\t\t\tcase \"DFAR\" -> \"HeroFarSeerDeath\";\n+\t\t\tcase \"DFCO\" -> \"FacelessOneDeath\";\n+\t\t\tcase \"DFDR\" -> \"FaerieDragonDeath\";\n+\t\t\tcase \"DFLG\" -> \"FelguardDeath\";\n+\t\t\tcase \"DFEL\" -> \"FelhoundDeath\";\n+\t\t\tcase \"DFOO\" -> \"FootmanDeath\";\n+\t\t\tcase \"DFOR\" -> \"ForgottenOneDeath\";\n+\t\t\tcase \"DFRG\" -> \"FrogDeath\";\n+\t\t\tcase \"DFRM\" -> \"FrostmourneDeath\";\n+\t\t\tcase \"DFRT\" -> \"ForestTrollDeath\";\n+\t\t\tcase \"DFRW\" -> \"FrostWyrmDeath\";\n+\t\t\tcase \"DFSP\" -> \"ForestTrollShadowPriestDeath\";\n+\t\t\tcase \"DFTN\" -> \"ForgottenOneTentacleDeath\";\n+\t\t\tcase \"DFUR\" -> \"FurbolgDeath\";\n+\t\t\tcase \"DGAR\" -> \"GargoyleDeath\";\n+\t\t\tcase \"DGAS\" -> \"GargoyleStoneDeath\";\n+\t\t\tcase \"DGAT\" -> \"GateDeath\";\n+\t\t\tcase \"DGHO\" -> \"GhoulDeath\";\n+\t\t\tcase \"DGLD\" -> \"GoldMineDeath\";\n+\t\t\tcase \"DGLM\" -> \"GoblinLandMineDeath\";\n+\t\t\tcase \"DGNA\" -> \"GnollArcherDeath\";\n+\t\t\tcase \"DGNL\" -> \"GnollDeath\";\n+\t\t\tcase \"DGOB\" -> \"GemstoneObeliskDeath\";\n+\t\t\tcase \"DGRU\" -> \"GruntDeath\";\n+\t\t\tcase \"DGRY\" -> \"GryphonRiderDeath\";\n+\t\t\tcase \"DGRZ\" -> \"GrizzlyBearDeath\";\n+\t\t\tcase \"DGRS\" -> \"BearSwimDeath\";\n+\t\t\tcase \"DGSD\" -> \"GoblinSapperDeath\";\n+\t\t\tcase \"DGSP\" -> \"GoblinSapperExplode\";\n+\t\t\tcase \"DGST\" -> \"GiantSeaTurtleDeath\";\n+\t\t\tcase \"DTDS\" -> \"GiantSeaTurtleDeathSwim\";\n+\t\t\tcase \"DGYR\" -> \"GyrocopterDeath\";\n+\t\t\tcase \"DGZP\" -> \"GoblinZeppelinDeath\";\n+\t\t\tcase \"DHBC\" -> \"DeathHumanBuildingCancel\";\n+\t\t\tcase \"DHIP\" -> \"HippogryphDeath\";\n+\t\t\tcase \"DHLB\" -> \"DeathHumanLargeBuilding\";\n+\t\t\tcase \"DHLS\" -> \"DeathHumanSmallBuilding\";\n+\t\t\tcase \"DHMC\" -> \"HermitCrabDeath\";\n+\t\t\tcase \"DHOR\" -> \"HorseDeath\";\n+\t\t\tcase \"DHRP\" -> \"HarpyDeath\";\n+\t\t\tcase \"DHUN\" -> \"HeadHunterDeath\";\n+\t\t\tcase \"DHWD\" -> \"HealingWardDeath\";\n+\t\t\tcase \"DHDA\" -> \"HydraDeath\";\n+\t\t\tcase \"DHDS\" -> \"HydraDeathSwim\";\n+\t\t\tcase \"DHYD\" -> \"HydraliskDeath\";\n+\t\t\tcase \"DICT\" -> \"IceTrollDeath\";\n+\t\t\tcase \"DINF\" -> \"InfernalDeath\";\n+\t\t\tcase \"DINM\" -> \"InfernalMachineDeath\";\n+\t\t\tcase \"DIPW\" -> \"PrisonWagonDeath\";\n+\t\t\tcase \"DIRG\" -> \"IronGolemDeath\";\n+\t\t\tcase \"DJAN\" -> \"JainaDeath\";\n+\t\t\tcase \"DKBS\" -> \"KoboldShovelerDeath\";\n+\t\t\tcase \"DKEE\" -> \"HeroKeeperOfTheGroveDeath\";\n+\t\t\tcase \"DKNI\" -> \"KnightDeath\";\n+\t\t\tcase \"DKOB\" -> \"KoboldDeath\";\n+\t\t\tcase \"DKOD\" -> \"KodoBeastDeath\";\n+\t\t\tcase \"DLIC\" -> \"HeroLichDeath\";\n+\t\t\tcase \"DLOC\" -> \"LocustDeath\";\n+\t\t\tcase \"DLVR\" -> \"LeverDeath\";\n+\t\t\tcase \"DMAG\" -> \"MagnataurDeath\";\n+\t\t\tcase \"DMAK\" -> \"MakruraDeath\";\n+\t\t\tcase \"DMAM\" -> \"MammothDeath\";\n+\t\t\tcase \"DMGS\" -> \"MurgulDeathSwim\";\n+\t\t\tcase \"DMGT\" -> \"MountainGiantDeath\";\n+\t\t\tcase \"DMKG\" -> \"HeroMountainKingDeath\";\n+\t\t\tcase \"DMLF\" -> \"MalfurionDeath\";\n+\t\t\tcase \"DMOO\" -> \"HeroMoonPriestessDeath\";\n+\t\t\tcase \"DMOR\" -> \"MortarTeamDeath\";\n+\t\t\tcase \"DMTW\" -> \"MeatWagonDeath\";\n+\t\t\tcase \"DMUR\" -> \"MurlocDeath\";\n+\t\t\tcase \"DNBL\" -> \"NagaBuildingDeath\";\n+\t\t\tcase \"DNDR\" -> \"NetherDragonDeath\";\n+\t\t\tcase \"DNDS\" -> \"HumanDissipate\";\n+\t\t\tcase \"DNEC\" -> \"NecromancerDeath\";\n+\t\t\tcase \"DMYR\" -> \"NagaMyrmidonDeath\";\n+\t\t\tcase \"DMYS\" -> \"NagaMyrmidonDeathSwim\";\n+\t\t\tcase \"DNSR\" -> \"NagaSirenDeath\";\n+\t\t\tcase \"DNSS\" -> \"NagaSirenDeathSwim\";\n+\t\t\tcase \"DNSW\" -> \"NagaSeaWitchDeath\";\n+\t\t\tcase \"DNWS\" -> \"NagaSeaWitchDeathSwim\";\n+\t\t\tcase \"DOBS\" -> \"ObsidianStatueDeath\";\n+\t\t\tcase \"DOGR\" -> \"OgreDeath\";\n+\t\t\tcase \"DOLB\" -> \"DeathOrcLargeBuilding\";\n+\t\t\tcase \"DOLS\" -> \"DeathOrcSmallBuilding\";\n+\t\t\tcase \"DORW\" -> \"OrcWarlockDeath\";\n+\t\t\tcase \"DOWB\" -> \"OwlbearDeath\";\n+\t\t\tcase \"DOWL\" -> \"SnowOwlDeath\";\n+\t\t\tcase \"DPAL\" -> \"HeroPaladinDeath\";\n+\t\t\tcase \"DPMB\" -> \"PandarenBrewmasterDeath\";\n+\t\t\tcase \"DPEN\" -> \"PenguinDeath\";\n+\t\t\tcase \"DPEO\" -> \"PeonDeath\";\n+\t\t\tcase \"DPES\" -> \"PeasantDeath\";\n+\t\t\tcase \"DPHX\" -> \"PhoenixDeath\";\n+\t\t\tcase \"DPIG\" -> \"PigDeath\";\n+\t\t\tcase \"DPIT\" -> \"CryptFiendDeath\";\n+\t\t\tcase \"DPLD\" -> \"PitlordDeath\";\n+\t\t\tcase \"DPRS\" -> \"PriestDeath\";\n+\t\t\tcase \"DQBS\" -> \"QuillBeastDeath\";\n+\t\t\tcase \"DRAI\" -> \"RaiderDeath\";\n+\t\t\tcase \"DRAN\" -> \"ArcherDeath\";\n+\t\t\tcase \"DRAT\" -> \"RatDeath\";\n+\t\t\tcase \"DREV\" -> \"RevenantDeath\";\n+\t\t\tcase \"DRKG\" -> \"RockGolemDeath\";\n+\t\t\tcase \"DRKW\" -> \"RockWallDeath\";\n+\t\t\tcase \"DRHG\" -> \"RiddenHippogryphDeath\";\n+\t\t\tcase \"DRIF\" -> \"RiflemanDeath\";\n+\t\t\tcase \"DSAT\" -> \"SatyrDeath\";\n+\t\t\tcase \"DSCB\" -> \"ScarabDeath\";\n+\t\t\tcase \"DSEL\" -> \"SealDeath\";\n+\t\t\tcase \"DSEN\" -> \"SentinelDeath\";\n+\t\t\tcase \"DSGT\" -> \"SeaGiantDeath\";\n+\t\t\tcase \"DSGW\" -> \"SeaGiantSwimDeath\";\n+\t\t\tcase \"DSHD\" -> \"ShadeDeath\";\n+\t\t\tcase \"DSHH\" -> \"HeroShadowHunterDeath\";\n+\t\t\tcase \"DSHM\" -> \"ShamanDeath\";\n+\t\t\tcase \"DSHP\" -> \"SheepDeath\";\n+\t\t\tcase \"DSHW\" -> \"SheepDeathSwim\";\n+\t\t\tcase \"DSKE\" -> \"SkeletonDeath\";\n+\t\t\tcase \"DSKK\" -> \"SkinkDeath\";\n+\t\t\tcase \"DSLG\" -> \"SludgeMonsterDeath\";\n+\t\t\tcase \"DSND\" -> \"SnapDragonDeath\";\n+\t\t\tcase \"DSNS\" -> \"SnapDragonDeathSwim\";\n+\t\t\tcase \"DSOR\" -> \"SorceressDeath\";\n+\t\t\tcase \"DSPB\" -> \"SpellBreakerDeath\";\n+\t\t\tcase \"DSPC\" -> \"SpiderCrabDeath\";\n+\t\t\tcase \"DSPD\" -> \"SpiderDeath\";\n+\t\t\tcase \"DSPL\" -> \"SplatDeath\";\n+\t\t\tcase \"DSPV\" -> \"SpiritOfVengeanceDeath\";\n+\t\t\tcase \"DSTT\" -> \"SteamTankDeath\";\n+\t\t\tcase \"DTAU\" -> \"TaurenDeath\";\n+\t\t\tcase \"DTCH\" -> \"HeroTaurenChieftainDeath\";\n+\t\t\tcase \"DTRW\" -> \"TreeWallDeath\";\n+\t\t\tcase \"DTUS\" -> \"TuskarrDeath\";\n+\t\t\tcase \"DUAB\" -> \"UndeadAirBargeDeath\";\n+\t\t\tcase \"DUBC\" -> \"DeathUndeadBuildingCancel\";\n+\t\t\tcase \"DUDS\" -> \"UndeadDissipate\";\n+\t\t\tcase \"DULB\" -> \"DeathUndeadLargeBuilding\";\n+\t\t\tcase \"DULS\" -> \"DeathUndeadSmallBuilding\";\n+\t\t\tcase \"DUNB\" -> \"UnbrokenDeath\";\n+\t\t\tcase \"DVLC\" -> \"VillagerChildDeath\";\n+\t\t\tcase \"DVLM\" -> \"VillagerManDeath\";\n+\t\t\tcase \"DVLW\" -> \"VillagerWomanDeath\";\n+\t\t\tcase \"DVNG\" -> \"VengeanceDeath\";\n+\t\t\tcase \"DVUL\" -> \"VultureDeath\";\n+\t\t\tcase \"DWAR\" -> \"WarlockDeath\";\n+\t\t\tcase \"DWAT\" -> \"WaterElementalDeath\";\n+\t\t\tcase \"DWCD\" -> \"WyvernCageDeath\";\n+\t\t\tcase \"DWDS\" -> \"WingedSerpentDeath\";\n+\t\t\tcase \"DWEN\" -> \"WendigoDeath\";\n+\t\t\tcase \"DWIT\" -> \"WitchDoctorDeath\";\n+\t\t\tcase \"DWLD\" -> \"WarlordDeath\";\n+\t\t\tcase \"DWLF\" -> \"WolfDeath\";\n+\t\t\tcase \"DWRD\" -> \"HeroWardenDeath\";\n+\t\t\tcase \"DWRE\" -> \"WarEagleDeath\";\n+\t\t\tcase \"DWSP\" -> \"WispDeath\";\n+\t\t\tcase \"DWYV\" -> \"WyvernRiderDeath\";\n+\t\t\tcase \"DZOM\" -> \"ZombieDeath\";\n+\t\t\tcase \"KANG\" -> \"AncestralGuardianAttack1\";\n+\t\t\tcase \"KAOE\" -> \"AncientOfTheEarthAttack1\";\n+\t\t\tcase \"KAOM\" -> \"AncientOfTheMoonAttack1\";\n+\t\t\tcase \"KAW1\" -> \"AncientOfTheWildAttack1\";\n+\t\t\tcase \"KAW2\" -> \"AncientOfTheWildAttack2\";\n+\t\t\tcase \"KANP\" -> \"AncientProtectorMissileAttack\";\n+\t\t\tcase \"KAP1\" -> \"AncientProtectorMeleeAttack1\";\n+\t\t\tcase \"KAP2\" -> \"AncientProtectorMeleeAttack2\";\n+\t\t\tcase \"KBAL\" -> \"BalrogAttack1\";\n+\t\t\tcase \"KAZB\" -> \"AzureDragonAttack1\";\n+\t\t\tcase \"KBLL\" -> \"BallistaAttack\";\n+\t\t\tcase \"KBLB\" -> \"BlackDragonAttack1\";\n+\t\t\tcase \"KBRB\" -> \"BronzeDragonAttack1\";\n+\t\t\tcase \"KBST\" -> \"BeastmasterAttack\";\n+\t\t\tcase \"KGRB\" -> \"GreenDragonAttack1\";\n+\t\t\tcase \"KRDB\" -> \"RedDragonAttack1\";\n+\t\t\tcase \"KBM1\" -> \"HeroBladeMasterAttack1\";\n+\t\t\tcase \"KBM2\" -> \"HeroBladeMasterAttack2\";\n+\t\t\tcase \"KCAN\" -> \"CannonTowerAttack\";\n+\t\t\tcase \"KCAT\" -> \"CatapultAttack1\";\n+\t\t\tcase \"KCL1\" -> \"CryptLordAttack1\";\n+\t\t\tcase \"KCL2\" -> \"CryptLordAttack2\";\n+\t\t\tcase \"KDH1\" -> \"HeroDemonHunterAttack1\";\n+\t\t\tcase \"KDH2\" -> \"HeroDemonHunterAttack2\";\n+\t\t\tcase \"KDK1\" -> \"HeroDeathKnightAttack1\";\n+\t\t\tcase \"KFAR\" -> \"HeroFarSeerAttack1\";\n+\t\t\tcase \"KFRB\" -> \"FrostWyrmAttack1\";\n+\t\t\tcase \"KGUA\" -> \"GuardTowerAttack\";\n+\t\t\tcase \"KGYR\" -> \"GyrocopterAttack\";\n+\t\t\tcase \"KIN1\" -> \"InfernalAttack1\";\n+\t\t\tcase \"KIN2\" -> \"InfernalAttack2\";\n+\t\t\tcase \"KINJ\" -> \"InfernalJuggernaughtAttack\";\n+\t\t\tcase \"KINM\" -> \"InfernalMachineAttack\";\n+\t\t\tcase \"KIRG\" -> \"IronGolemAttack1\";\n+\t\t\tcase \"KLIC\" -> \"HeroLichAttack1\";\n+\t\t\tcase \"KMKG\" -> \"HeroMountainKingAttack1\";\n+\t\t\tcase \"KMT1\" -> \"MortarTeamAttack1\";\n+\t\t\tcase \"KMT2\" -> \"MortarTeamAttack2\";\n+\t\t\tcase \"KMTW\" -> \"MeatWagonAttack1\";\n+\t\t\tcase \"KPB1\" -> \"BrewmasterAttack1\";\n+\t\t\tcase \"KPB2\" -> \"BrewmasterAttack2\";\n+\t\t\tcase \"KPL1\" -> \"HeroPaladinAttack1\";\n+\t\t\tcase \"KPL2\" -> \"HeroPaladinAttack2\";\n+\t\t\tcase \"KPD1\" -> \"PitLordAttack1\";\n+\t\t\tcase \"KPD2\" -> \"PitLordAttack2\";\n+\t\t\tcase \"KPD3\" -> \"PitLordAttack3\";\n+\t\t\tcase \"KPS1\" -> \"PitLordAttackSlam1\";\n+\t\t\tcase \"KPS2\" -> \"PitLordAttackSlam2\";\n+\t\t\tcase \"KRG1\" -> \"RockGolemAttack1\";\n+\t\t\tcase \"KRG2\" -> \"RockGolemAttack2\";\n+\t\t\tcase \"KRIF\" -> \"RiflemanAttack1\";\n+\t\t\tcase \"KRN1\" -> \"HeroRangerAttack1\";\n+\t\t\tcase \"KRN2\" -> \"HeroRangerAttack2\";\n+\t\t\tcase \"KSTT\" -> \"SteamTankAttack\";\n+\t\t\tcase \"KTC1\" -> \"HeroTaurenChieftainAttack1\";\n+\t\t\tcase \"KTC2\" -> \"HeroTaurenChieftainAttack2\";\n+\t\t\tcase \"KTOL\" -> \"TreeOfLifeAttack1\";\n+\t\t\tcase \"KWAR\" -> \"WardenAttack\";\n+\t\t\tcase \"MABS\" -> \"AbsorbManaLaunch\";\n+\t\t\tcase \"MANG\" -> \"AncestralGuardianMissileHit\";\n+\t\t\tcase \"MANL\" -> \"AncestralGuardianMissileLaunch\";\n+\t\t\tcase \"MANP\" -> \"AncientProtectorMissileHit\";\n+\t\t\tcase \"MAPL\" -> \"AncientProtectorMissileLaunch\";\n+\t\t\tcase \"MARL\" -> \"ArrowLaunch\";\n+\t\t\tcase \"MARR\" -> \"ArrowHit\";\n+\t\t\tcase \"MAXE\" -> \"AxeMissileHit\";\n+\t\t\tcase \"MAXL\" -> \"AxeMissileLaunch\";\n+\t\t\tcase \"MBAL\" -> \"BallistaMissileHit\";\n+\t\t\tcase \"MBAN\" -> \"BansheeMissileHit\";\n+\t\t\tcase \"MBHT\" -> \"BoatMissileHit\";\n+\t\t\tcase \"MBHL\" -> \"BoatMissileLaunch\";\n+\t\t\tcase \"MBML\" -> \"BloodMageMissileLaunch\";\n+\t\t\tcase \"MBNL\" -> \"BansheeMissileLaunch\";\n+\t\t\tcase \"MBLT\" -> \"Bolt\";\n+\t\t\tcase \"MBRH\" -> \"BristleBackMissileHit\";\n+\t\t\tcase \"MBRL\" -> \"BristleBackMissileLaunch\";\n+\t\t\tcase \"MBSL\" -> \"PriestMissileLaunch\";\n+\t\t\tcase \"MBSH\" -> \"PriestMissileHit\";\n+\t\t\tcase \"MCAH\" -> \"ChimaeraAcidHit\";\n+\t\t\tcase \"MCAL\" -> \"ChimaeraAcidLaunch\";\n+\t\t\tcase \"MCAN\" -> \"CannonTowerMissile\";\n+\t\t\tcase \"MCAT\" -> \"Catapult\";\n+\t\t\tcase \"MCDA\" -> \"ColdArrow\";\n+\t\t\tcase \"MCRH\" -> \"CryptFiendMissileHit\";\n+\t\t\tcase \"MCRL\" -> \"CryptFiendMissileLaunch\";\n+\t\t\tcase \"MDCL\" -> \"DeathCoilMissile\";\n+\t\t\tcase \"MDEM\" -> \"DemonHunterMissileHit\";\n+\t\t\tcase \"MDLL\" -> \"DestroyerMissileLaunch\";\n+\t\t\tcase \"MDML\" -> \"DemonHunterMissileLaunch\";\n+\t\t\tcase \"MDOC\" -> \"WitchDoctorMissileLaunch\";\n+\t\t\tcase \"MDOH\" -> \"WitchDoctorMissileHit\";\n+\t\t\tcase \"MDRY\" -> \"DryadMissile\";\n+\t\t\tcase \"MDTL\" -> \"DruidOfTheTalonMissileLaunch\";\n+\t\t\tcase \"MDTH\" -> \"DruidOfTheTalonMissileHit\";\n+\t\t\tcase \"MDVM\" -> \"DevourMagicLaunch\";\n+\t\t\tcase \"MFAH\" -> \"FrostArrowHit\";\n+\t\t\tcase \"MFAL\" -> \"FrostArrowLaunch\";\n+\t\t\tcase \"MFAR\" -> \"FarseerMissile\";\n+\t\t\tcase \"MFBL\" -> \"FrostBoltLaunch\";\n+\t\t\tcase \"MFBH\" -> \"FrostBoltHit\";\n+\t\t\tcase \"MFDL\" -> \"FaerieDragonLaunch\";\n+\t\t\tcase \"MFKH\" -> \"FanOfKnivesHit\";\n+\t\t\tcase \"MFLA\" -> \"SearingArrowHit\";\n+\t\t\tcase \"MFLL\" -> \"SearingArrowLaunch\";\n+\t\t\tcase \"MFRB\" -> \"Fireball\";\n+\t\t\tcase \"MFRL\" -> \"FireballLaunch\";\n+\t\t\tcase \"MGML\" -> \"GryphonRiderMissileLaunch\";\n+\t\t\tcase \"MGRH\" -> \"GargoyleMissileHit\";\n+\t\t\tcase \"MGRL\" -> \"GargoyleMissileLaunch\";\n+\t\t\tcase \"MGUA\" -> \"GuardTowerMissileHit\";\n+\t\t\tcase \"MHAR\" -> \"HarpyMissileHit\";\n+\t\t\tcase \"MHRL\" -> \"HarpyMissileLaunch\";\n+\t\t\tcase \"MHNL\" -> \"HunterMissileLaunch\";\n+\t\t\tcase \"MHUN\" -> \"HunterMissileHit\";\n+\t\t\tcase \"MKGL\" -> \"KeeperOfTheGroveMissileLaunch\";\n+\t\t\tcase \"MKGH\" -> \"KeeperOfTheGroveMissileHit\";\n+\t\t\tcase \"MKML\" -> \"NecromancerMissileLaunch\";\n+\t\t\tcase \"MKMH\" -> \"NecromancerMissileHit\";\n+\t\t\tcase \"MLIC\" -> \"LichMissile\";\n+\t\t\tcase \"MLSL\" -> \"BansheeMissileLaunch\";\n+\t\t\tcase \"MLSH\" -> \"BansheeMissileHit\";\n+\t\t\tcase \"MMEA\" -> \"MeatWagonMissileHit\";\n+\t\t\tcase \"MMTI\" -> \"Mortar\";\n+\t\t\tcase \"MNCH\" -> \"NecromancerMissileHit\";\n+\t\t\tcase \"MNCL\" -> \"NecromancerMissileLaunch\";\n+\t\t\tcase \"MPAH\" -> \"PoisonArrowHit\";\n+\t\t\tcase \"MPML\" -> \"PriestMissileLaunch\";\n+\t\t\tcase \"MPMH\" -> \"PriestMissileHit\";\n+\t\t\tcase \"MPXL\" -> \"PhoenixMissileLaunch\";\n+\t\t\tcase \"MRAN\" -> \"RangerMissile\";\n+\t\t\tcase \"MRIF\" -> \"Rifle\";\n+\t\t\tcase \"MSBL\" -> \"PriestMissileLaunch\";\n+\t\t\tcase \"MSBH\" -> \"PriestMissileHit\";\n+\t\t\tcase \"MSEH\" -> \"SentinelMissileHit\";\n+\t\t\tcase \"MSEL\" -> \"SentinelMissileLaunch\";\n+\t\t\tcase \"MSHD\" -> \"ShadowHunterMissileLaunch\";\n+\t\t\tcase \"MSHH\" -> \"ShadowHunterMissileHit\";\n+\t\t\tcase \"MSMH\" -> \"SorceressMissileHit\";\n+\t\t\tcase \"MSML\" -> \"SorceressMissileLaunch\";\n+\t\t\tcase \"MSNL\" -> \"SnapDragonMissileLaunch\";\n+\t\t\tcase \"MSPR\" -> \"Spear\";\n+\t\t\tcase \"MSVL\" -> \"GargoyleMissileLaunch\";\n+\t\t\tcase \"MSVH\" -> \"GargoyleMissileHit\";\n+\t\t\tcase \"MTBL\" -> \"TrollBatriderMissileLaunch\";\n+\t\t\tcase \"MWAT\" -> \"WaterElementalMissile\";\n+\t\t\tcase \"MWEB\" -> \"WebMissileLaunch\";\n+\t\t\tcase \"MWIN\" -> \"DragonHawkMissileHit\";\n+\t\t\tcase \"MWNL\" -> \"DragonHawkMissileLaunch\";\n+\t\t\tcase \"MWYV\" -> \"WyvernSpearMissile\";\n+\t\t\tcase \"MZIG\" -> \"ZigguratMissileLaunch\";\n+\t\t\tcase \"MZGH\" -> \"ZigguratMissileHit\";\n+\t\t\tcase \"MZFL\" -> \"ZigguratFrostMissileLaunch\";\n+\t\t\tcase \"MZFH\" -> \"ZigguratFrostMissileHit\";\n+\t\t\tcase \"GSMN\" -> \"ExpansionGlueMonster\";\n+\t\t\tcase \"AIFT\" -> \"FinalCinematic\";\n+\t\t\tdefault -> \"Unknown\";\n+\t\t};\n+\t}\n+\n+\tpublic static String getSplatName(String code) {\n+\t\treturn switch (code) {\n+\t\t\tcase \"DBL0\" -> \"DemonBloodLarge0\";\n+\t\t\tcase \"DBL1\" -> \"DemonBloodLarge1\";\n+\t\t\tcase \"DBL2\" -> \"DemonBloodLarge2\";\n+\t\t\tcase \"DBL3\" -> \"DemonBloodLarge3\";\n+\t\t\tcase \"DBS0\" -> \"DemonBloodSmall0\";\n+\t\t\tcase \"DBS1\" -> \"DemonBloodSmall1\";\n+\t\t\tcase \"DBS2\" -> \"DemonBloodSmall2\";\n+\t\t\tcase \"DBS3\" -> \"DemonBloodSmall3\";\n+\t\t\tcase \"EBL0\" -> \"NightElfBloodLarge0\";\n+\t\t\tcase \"EBL1\" -> \"NightElfBloodLarge1\";\n+\t\t\tcase \"EBL2\" -> \"NightElfBloodLarge2\";\n+\t\t\tcase \"EBL3\" -> \"NightElfBloodLarge3\";\n+\t\t\tcase \"EBS0\" -> \"NightElfBloodSmall0\";\n+\t\t\tcase \"EBS1\" -> \"NightElfBloodSmall1\";\n+\t\t\tcase \"EBS2\" -> \"NightElfBloodSmall2\";\n+\t\t\tcase \"EBS3\" -> \"NightElfBloodSmall3\";\n+\t\t\tcase \"FAL0\" -> \"FootprintBareSmallLeft\";\n+\t\t\tcase \"FAL1\" -> \"FootprintBareLargeLeft1\";\n+\t\t\tcase \"FAL2\" -> \"FootprintBareGiantLeft1\";\n+\t\t\tcase \"FAL3\" -> \"FootprintBareHugeLeft1\";\n+\t\t\tcase \"FAR0\" -> \"FootprintBareSmallRight1\";\n+\t\t\tcase \"FAR1\" -> \"FootprintBareLargeRight1\";\n+\t\t\tcase \"FAR2\" -> \"FootprintBareGiantRight1\";\n+\t\t\tcase \"FAR3\" -> \"FootprintBareHugeRight1\";\n+\t\t\tcase \"FBL0\" -> \"FootprintBootSmallLeft0\";\n+\t\t\tcase \"FBL1\" -> \"FootprintBootLargeLeft0\";\n+\t\t\tcase \"FBL2\" -> \"FootprintBootSmallLeft1\";\n+\t\t\tcase \"FBL3\" -> \"FootprintBootLargeLeft1\";\n+\t\t\tcase \"FBL4\" -> \"FootprintBootGiantLeft1\";\n+\t\t\tcase \"FBR0\" -> \"FootprintBootSmallRight0\";\n+\t\t\tcase \"FBR1\" -> \"FootprintBootLargeRight0\";\n+\t\t\tcase \"FBR2\" -> \"FootprintBootSmallRight1\";\n+\t\t\tcase \"FBR3\" -> \"FootprintBootLargeRight1\";\n+\t\t\tcase \"FBR4\" -> \"FootprintBootGiantRight1\";\n+\t\t\tcase \"FCR0\" -> \"FootprintClovenSmallRight\";\n+\t\t\tcase \"FCL0\" -> \"FootprintClovenSmallLeft\";\n+\t\t\tcase \"FCL1\" -> \"FootprintClovenLargeLeft\";\n+\t\t\tcase \"FCR1\" -> \"FootprintClovenLargeRight\";\n+\t\t\tcase \"FCL3\" -> \"FootprintClovenXtraLargeLeft\";\n+\t\t\tcase \"FCR3\" -> \"FootprintClovenXtraLargeRight\";\n+\t\t\tcase \"FCL2\" -> \"FootprintClovenReallySmallLeft\";\n+\t\t\tcase \"FCR2\" -> \"FootprintClovenReallySmallRight\";\n+\t\t\tcase \"FHL0\" -> \"FootprintHorseSmallLeft\";\n+\t\t\tcase \"FHL1\" -> \"FootprintHorseLargeLeft\";\n+\t\t\tcase \"FHR0\" -> \"FootprintHorseSmallRight\";\n+\t\t\tcase \"FHR1\" -> \"FootprintHorseLargeRight\";\n+\t\t\tcase \"FPL0\" -> \"FootprintPawLeft0\";\n+\t\t\tcase \"FPL1\" -> \"FootprintPawLargeLeft\";\n+\t\t\tcase \"FPR0\" -> \"FootprintPawRight0\";\n+\t\t\tcase \"FPR1\" -> \"FootprintPawLargeRight\";\n+\t\t\tcase \"FRL0\" -> \"FootprintRootLeft\";\n+\t\t\tcase \"FRR0\" -> \"FootprintRootRight\";\n+\t\t\tcase \"FRL1\" -> \"FootprintRootLeftSmall\";\n+\t\t\tcase \"FRR1\" -> \"FootprintRootRightSmall\";\n+\t\t\tcase \"FTL0\" -> \"FootPrintTrollLeft\";\n+\t\t\tcase \"FTR0\" -> \"FootPrintTrollRight\";\n+\t\t\tcase \"FWL0\" -> \"FootPrintWheelLeft0\";\n+\t\t\tcase \"FWR0\" -> \"FootPrintWheelRight0\";\n+\t\t\tcase \"FWL1\" -> \"FootPrintWheelLeft1\";\n+\t\t\tcase \"FWR1\" -> \"FootPrintWheelRight1\";\n+\t\t\tcase \"FML0\" -> \"FootPrintMurlocLeft\";\n+\t\t\tcase \"FMR0\" -> \"FootPrintMurlocRight\";\n+\t\t\tcase \"FPL2\" -> \"FootPrintPawBearLeft\";\n+\t\t\tcase \"FPR2\" -> \"FootPrintPawBearRight\";\n+\t\t\tcase \"FSL0\" -> \"FooprintSkeletonRight\";\n+\t\t\tcase \"FSR0\" -> \"FooprintSkeletonLeft\";\n+\t\t\tcase \"FSL1\" -> \"FooprintSkeletonGiantRight\";\n+\t\t\tcase \"FSR1\" -> \"FooprintSkeletonGiantLeft\";\n+\t\t\tcase \"FFL0\" -> \"FootprintFlameLeft\";\n+\t\t\tcase \"FFR0\" -> \"FootprintFlameRight\";\n+\t\t\tcase \"FFL1\" -> \"FootprintFlameGiantLeft\";\n+\t\t\tcase \"FFR1\" -> \"FootprintFlameGiantRight\";\n+\t\t\tcase \"FKL0\" -> \"FootprintSpikeLeft\";\n+\t\t\tcase \"FKR0\" -> \"FootprintSpikeRight\";\n+\t\t\tcase \"FKL1\" -> \"FootprintSpikeLargeLeft\";\n+\t\t\tcase \"FKR1\" -> \"FootprintSpikeLargeRight\";\n+\t\t\tcase \"FKL2\" -> \"FootprintSpikeGiantLeft\";\n+\t\t\tcase \"FKR2\" -> \"FootprintSpikeGiantRight\";\n+\t\t\tcase \"FLSL\" -> \"FootprintLizzardSmallLeft\";\n+\t\t\tcase \"FLSR\" -> \"FootprintLizzardSmallRight\";\n+\t\t\tcase \"FLLL\" -> \"FootprintLizzardLargeLeft\";\n+\t\t\tcase \"FLLR\" -> \"FootprintLizzardLargeRight\";\n+\t\t\tcase \"FSSL\" -> \"FootprintSnakeSmallLeft\";\n+\t\t\tcase \"FSSR\" -> \"FootprintSnakeSmallRight\";\n+\t\t\tcase \"FSLL\" -> \"FootprintSnakeLargeLeft\";\n+\t\t\tcase \"FSLR\" -> \"FootprintSnakeLargeRight\";\n+\t\t\tcase \"FDSL\" -> \"FootprintDragSmallLeft\";\n+\t\t\tcase \"FDSR\" -> \"FootprintDragSmallRight\";\n+\t\t\tcase \"FDLL\" -> \"FootprintDragLargeLeft\";\n+\t\t\tcase \"FDLR\" -> \"FootprintDragLargeRight\";\n+\t\t\tcase \"HBL0\" -> \"HumanBloodLarge0\";\n+\t\t\tcase \"HBL1\" -> \"HumanBloodLarge1\";\n+\t\t\tcase \"HBL2\" -> \"HumanBloodLarge2\";\n+\t\t\tcase \"HBS0\" -> \"HumanBloodSmall0\";\n+\t\t\tcase \"HBS1\" -> \"HumanBloodSmall1\";\n+\t\t\tcase \"HBS2\" -> \"HumanBloodSmall2\";\n+\t\t\tcase \"HBS3\" -> \"HumanBloodSmall3\";\n+\t\t\tcase \"HBL3\" -> \"HumanBloodLarge3\";\n+\t\t\tcase \"OBL0\" -> \"OrcBloodLarge0\";\n+\t\t\tcase \"OBL1\" -> \"OrcBloodLarge1\";\n+\t\t\tcase \"OBL2\" -> \"OrcBloodLarge2\";\n+\t\t\tcase \"OBL3\" -> \"OrcBloodLarge3\";\n+\t\t\tcase \"OBS0\" -> \"OrcBloodSmall0\";\n+\t\t\tcase \"OBS1\" -> \"OrcBloodSmall1\";\n+\t\t\tcase \"OBS2\" -> \"OrcBloodSmall2\";\n+\t\t\tcase \"OBS3\" -> \"OrcBloodSmall3\";\n+\t\t\tcase \"UBL0\" -> \"UndeadBloodLarge0\";\n+\t\t\tcase \"UBL1\" -> \"UndeadBloodLarge1\";\n+\t\t\tcase \"UBL2\" -> \"UndeadBloodLarge2\";\n+\t\t\tcase \"UBL3\" -> \"UndeadBloodLarge3\";\n+\t\t\tcase \"UBS0\" -> \"UndeadBloodSmall0\";\n+\t\t\tcase \"UBS1\" -> \"UndeadBloodSmall1\";\n+\t\t\tcase \"UBS2\" -> \"UndeadBloodSmall2\";\n+\t\t\tcase \"UBS3\" -> \"UndeadBloodSmall3\";\n+\t\t\tcase \"WSL0\" -> \"WaterSplashLarge0\";\n+\t\t\tcase \"WSL1\" -> \"WaterSplashLarge1\";\n+\t\t\tcase \"WSS0\" -> \"WaterSplashSmall0\";\n+\t\t\tcase \"WSS1\" -> \"WaterSplashSmall1\";\n+\t\t\tcase \"WHL0\" -> \"WaterHumanBloodLarge0\";\n+\t\t\tcase \"WHL1\" -> \"WaterHumanBloodLarge1\";\n+\t\t\tcase \"WHS0\" -> \"WaterHumanBloodSmall0\";\n+\t\t\tcase \"WHS1\" -> \"WaterHumanBloodSmall1\";\n+\t\t\tcase \"WOL0\" -> \"WaterOrcBloodLarge0\";\n+\t\t\tcase \"WOL1\" -> \"WaterOrcBloodLarge1\";\n+\t\t\tcase \"WOS0\" -> \"WaterOrcBloodSmall0\";\n+\t\t\tcase \"WOS1\" -> \"WaterOrcBloodSmall1\";\n+\t\t\tcase \"WEL0\" -> \"WaterNightElfBloodLarge0\";\n+\t\t\tcase \"WEL1\" -> \"WaterNightElfBloodLarge1\";\n+\t\t\tcase \"WES0\" -> \"WaterNightElfBloodSmall0\";\n+\t\t\tcase \"WES1\" -> \"WaterNightElfBloodSmall1\";\n+\t\t\tcase \"WUL0\" -> \"WaterUndeadBloodLarge0\";\n+\t\t\tcase \"WUL1\" -> \"WaterUndeadBloodLarge1\";\n+\t\t\tcase \"WUS0\" -> \"WaterUndeadBloodSmall0\";\n+\t\t\tcase \"WUS1\" -> \"WaterUndeadBloodSmall1\";\n+\t\t\tcase \"WDL0\" -> \"WaterDemonBloodLarge0\";\n+\t\t\tcase \"WDL1\" -> \"WaterDemonBloodLarge1\";\n+\t\t\tcase \"WDS0\" -> \"WaterDemonBloodSmall0\";\n+\t\t\tcase \"WDS1\" -> \"WaterDemonBloodSmall1\";\n+\t\t\tcase \"WSX0\" -> \"WaterSplashOnly0\";\n+\t\t\tcase \"WSX1\" -> \"WaterSplashOnly1\";\n+\t\t\tdefault -> \"Unknown\";\n+\t\t};\n+\t}\n+\n+\tpublic static String getUberSplatName(String code) {\n+\t\treturn switch (code) {\n+\t\t\tcase \"LSDS\" -> \"LordSummerPlainDirtSmall\";\n+\t\t\tcase \"LSDM\" -> \"LordSummerPlainDirtMedium\";\n+\t\t\tcase \"LSDL\" -> \"LordSummerPlainDirtLarge\";\n+\t\t\tcase \"HCRT\" -> \"HumanCrater\";\n+\t\t\tcase \"UDSU\" -> \"UndeadUberSplat\";\n+\t\t\tcase \"DNCS\" -> \"DeathNeutralCityBuildingSmall\";\n+\t\t\tcase \"HMTP\" -> \"HumanMassTeleport\";\n+\t\t\tcase \"SCTP\" -> \"ScrollOfTownPortal\";\n+\t\t\tcase \"AMRC\" -> \"AmuletOfRecall\";\n+\t\t\tcase \"DRKC\" -> \"DarkConversion\";\n+\t\t\tcase \"DOSB\" -> \"DeathOrcSmallBuilding\";\n+\t\t\tcase \"DOMB\" -> \"DeathOrcMediumBuilding\";\n+\t\t\tcase \"DOLB\" -> \"DeathOrcLargeBuilding\";\n+\t\t\tcase \"DHSB\" -> \"DeathHumanSmallBuilding\";\n+\t\t\tcase \"DHMB\" -> \"DeathHumanMediumBuilding\";\n+\t\t\tcase \"DHLB\" -> \"DeathHumanLargeBuilding\";\n+\t\t\tcase \"DUSB\" -> \"DeathUndeadSmallBuilding\";\n+\t\t\tcase \"DUMB\" -> \"DeathUndeadMediumBuilding\";\n+\t\t\tcase \"DULB\" -> \"DeathUndeadLargeBuilding\";\n+\t\t\tcase \"DNSB\" -> \"DeathNightElfSmallBuilding\";\n+\t\t\tcase \"DNMB\" -> \"DeathNightElfMediumBuilding\";\n+\t\t\tcase \"DNSA\" -> \"DeathNightElfSmallAncient\";\n+\t\t\tcase \"DNMA\" -> \"DeathNightElfMediumAncient\";\n+\t\t\tcase \"HSMA\" -> \"HumanUberSplatSmall\";\n+\t\t\tcase \"HMED\" -> \"HumanUberSplatMedium\";\n+\t\t\tcase \"HLAR\" -> \"HumanUberSplatLarge\";\n+\t\t\tcase \"OSMA\" -> \"OrcUberSplatSmall\";\n+\t\t\tcase \"OMED\" -> \"OrcUberSplatMedium\";\n+\t\t\tcase \"OLAR\" -> \"OrcUberSplatLarge\";\n+\t\t\tcase \"USMA\" -> \"UndeadUberSplatSmall\";\n+\t\t\tcase \"UMED\" -> \"UndeadUberSplatMedium\";\n+\t\t\tcase \"ULAR\" -> \"UndeadUberSplatLarge\";\n+\t\t\tcase \"ESMA\" -> \"AncientUberSplatSmall\";\n+\t\t\tcase \"EMDA\" -> \"AncientUberSplatMedium\";\n+\t\t\tcase \"ESMB\" -> \"NightElfUberSplatSmall\";\n+\t\t\tcase \"EMDB\" -> \"NightElfUberSplatMedium\";\n+\t\t\tcase \"HTOW\" -> \"TownHallUberSplat\";\n+\t\t\tcase \"HCAS\" -> \"CastleUberSplat\";\n+\t\t\tcase \"NGOL\" -> \"GoldmineUberSplat\";\n+\t\t\tcase \"THND\" -> \"ThunderClap\";\n+\t\t\tcase \"NDGS\" -> \"DemonGateSplat\";\n+\t\t\tcase \"CLTS\" -> \"ThornyShieldSplat\";\n+\t\t\tcase \"HFS1\" -> \"HumanFlameStrike1\";\n+\t\t\tcase \"HFS2\" -> \"HumanFlameStrike2\";\n+\t\t\tcase \"USBR\" -> \"Burrow\";\n+\t\t\tcase \"NLAR\" -> \"NagaUberSplatLarge\";\n+\t\t\tcase \"NMED\" -> \"NagaUberSplatMedium\";\n+\t\t\tcase \"DPSW\" -> \"DarkPortalSWsplat\";\n+\t\t\tcase \"DPSE\" -> \"DarkPortalSEsplat\";\n+\t\t\tdefault -> \"Unknown\";\n+\t\t};\n+\t}\n+\n+\tpublic static String getSpawnObjectName(String code) {\n+\t\treturn switch (code) {\n+\t\t\tcase \"UEGG\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\CryptFiendEggsack\\\\CryptFiendEggsack.mdl\";\n+\t\t\tcase \"GCBL\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\GargoyleCrumble\\\\GargoyleCrumble.mdl\";\n+\t\t\tcase \"UDIS\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\UndeadDissipate\\\\UndeadDissipate.mdl\";\n+\t\t\tcase \"EDIS\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightelfDissipate\\\\NightElfDissipate.mdl\";\n+\t\t\tcase \"DDIS\" -> \"Objects\\\\Spawnmodels\\\\Demon\\\\DemonDissipate\\\\DemonDissipate.mdl\";\n+\t\t\tcase \"ODIS\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\OrcDissipate\\\\OrcDissipate.mdl\";\n+\t\t\tcase \"HDIS\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanDissipate\\\\HumanDissipate.mdl\";\n+\t\t\tcase \"HBS0\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HumanBloodSmall0.mdl\";\n+\t\t\tcase \"HBS1\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HumanBloodSmall1.mdl\";\n+\t\t\tcase \"HBL0\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HumanBloodLarge0.mdl\";\n+\t\t\tcase \"HBL1\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HumanBloodLarge1.mdl\";\n+\t\t\tcase \"EENT\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\EntBirthTarget\\\\EntBirthTarget.mdl\";\n+\t\t\tcase \"DNAM\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NEDeathMedium\\\\NEDeath.mdl\";\n+\t\t\tcase \"DNAS\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NEDeathSmall\\\\NEDeathSmall.mdl\";\n+\t\t\tcase \"DUME\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\UDeathMedium\\\\UDeath.mdl\";\n+\t\t\tcase \"DUSM\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\UDeathSmall\\\\UDeathSmall.mdl\";\n+\t\t\tcase \"INFR\" -> \"Objects\\\\Spawnmodels\\\\Demon\\\\InfernalMeteor\\\\InfernalMeteor.mdl\";\n+\t\t\tcase \"INFL\" -> \"Objects\\\\Spawnmodels\\\\Demon\\\\InfernalMeteor\\\\InfernalMeteor2.mdl\";\n+\t\t\tcase \"INFU\" -> \"Objects\\\\Spawnmodels\\\\Demon\\\\InfernalMeteor\\\\InfernalMeteor3.mdl\";\n+\t\t\tcase \"HBF0\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HumanBloodFootman.mdl\";\n+\t\t\tcase \"HBK0\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HumanBloodKnight.mdl\";\n+\t\t\tcase \"HBM0\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HumanBloodMortarTeam.mdl\";\n+\t\t\tcase \"HBP0\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HumanBloodPeasant.mdl\";\n+\t\t\tcase \"HBPR\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HumanBloodPriest.mdl\";\n+\t\t\tcase \"HBR0\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HumanBloodRifleman.mdl\";\n+\t\t\tcase \"HBSR\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HumanBloodSorceress.mdl\";\n+\t\t\tcase \"HBNE\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\UndeadBlood\\\\UndeadBloodNecromancer.mdl\";\n+\t\t\tcase \"NBVW\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\NPCBlood\\\\NpcBloodVillagerWoman.mdl\";\n+\t\t\tcase \"OBHE\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrcBloodHeadhunter.mdl\";\n+\t\t\tcase \"OBHS\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrcBloodHellScream.mdl\";\n+\t\t\tcase \"OBFS\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrcBloodHeroFarSeer.mdl\";\n+\t\t\tcase \"OBTC\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrcBloodHeroTaurenChieftain.mdl\";\n+\t\t\tcase \"OBKB\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrcBloodKotoBeast.mdl\";\n+\t\t\tcase \"OBWD\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrcBloodWitchDoctor.mdl\";\n+\t\t\tcase \"OBWR\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrcBloodWolfrider.mdl\";\n+\t\t\tcase \"OBWY\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrdBloodWyvernRider.mdl\";\n+\t\t\tcase \"OBWV\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrcBloodRiderlessWyvernRider.mdl\";\n+\t\t\tcase \"OBT0\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrcBloodTauren.mdl\";\n+\t\t\tcase \"OBG0\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrcBloodGrunt.mdl\";\n+\t\t\tcase \"OBP0\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\OrcBloodPeon.mdl\";\n+\t\t\tcase \"OKBP\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\KodoBeastPuke\\\\KodoBeastPuke.mdl\";\n+\t\t\tcase \"UBGA\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\UndeadBlood\\\\UndeadBloodGargoyle.mdl\";\n+\t\t\tcase \"UBGH\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\UndeadBlood\\\\UndeadBloodGhoul.mdl\";\n+\t\t\tcase \"UBAB\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\UndeadBlood\\\\UndeadBloodAbomination.mdl\";\n+\t\t\tcase \"UBAC\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\UndeadBlood\\\\UndeadBloodAcolyte.mdl\";\n+\t\t\tcase \"DBCR\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\UndeadBlood\\\\UndeadBloodCryptFiend.mdl\";\n+\t\t\tcase \"NBAR\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodArcher.mdl\";\n+\t\t\tcase \"NBDC\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodDruidoftheClaw.mdl\";\n+\t\t\tcase \"NBDT\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodDruidoftheTalon.mdl\";\n+\t\t\tcase \"NBDR\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodDryad.mdl\";\n+\t\t\tcase \"NBHU\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodHuntress.mdl\";\n+\t\t\tcase \"NBDB\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodDruidBear.mdl\";\n+\t\t\tcase \"NBDA\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodDruidRaven.mdl\";\n+\t\t\tcase \"NBDH\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodHeroDemonHunter.mdl\";\n+\t\t\tcase \"NBKG\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodHeroKeeperoftheGrove.mdl\";\n+\t\t\tcase \"NBMP\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodHeroMoonPriestess.mdl\";\n+\t\t\tcase \"NBCH\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodChimaera.mdl\";\n+\t\t\tcase \"NBHG\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\NightElfBloodHippogryph.mdl\";\n+\t\t\tcase \"DBPT\" -> \"Objects\\\\Spawnmodels\\\\Demon\\\\DemonBlood\\\\DemonBloodPitlord.mdl\";\n+\t\t\tcase \"DNBL\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\NeutralBuildingExplosion\\\\NeutralBuildingExplosion.mdl\";\n+\t\t\tcase \"CLID\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\ImpaleTargetDust\\\\ImpaleTargetDust.mdl\";\n+\t\t\tcase \"HFSS\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\SmallFlameSpawn\\\\SmallFlameSpawn.mdl\";\n+\t\t\tcase \"UBSC\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\UndeadBlood\\\\ObsidianStatueCrumble.mdl\";\n+\t\t\tcase \"UBCC\" -> \"Objects\\\\Spawnmodels\\\\Undead\\\\UndeadBlood\\\\ObsidianStatueCrumble2.mdl\";\n+\t\t\tcase \"HBBM\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\HeroBloodElfBlood.mdl\";\n+\t\t\tcase \"HBSB\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\HumanBlood\\\\BloodElfSpellThiefBlood.mdl\";\n+\t\t\tcase \"NBMF\" -> \"Objects\\\\Spawnmodels\\\\NightElf\\\\NightElfBlood\\\\MALFurion_Blood.mdl\";\n+\t\t\tcase \"OBBT\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\BattrollBlood.mdl\";\n+\t\t\tcase \"OBSH\" -> \"Objects\\\\Spawnmodels\\\\Orc\\\\Orcblood\\\\HeroShadowHunterBlood.mdl\";\n+\t\t\tcase \"DBPB\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\PandarenBrewmasterBlood\\\\PandarenBrewmasterBlood.mdl\";\n+\t\t\tcase \"DBBM\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\BeastmasterBlood\\\\BeastmasterBlood.mdl\";\n+\t\t\tcase \"PEFI\" -> \"Abilities\\\\Spells\\\\Other\\\\ImmolationRed\\\\ImmolationREDTarget.mdl\";\n+\t\t\tcase \"DNBD\" -> \"Objects\\\\Spawnmodels\\\\Naga\\\\NagaDeath\\\\NagaDeath.mdl\";\n+\t\t\tcase \"FTSO\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\FlameThrower\\\\FlameThrowerSpawnObj.mdl\";\n+\t\t\tcase \"TOBO\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\ToonBoom\\\\ToonBoom.mdl\";\n+\t\t\tcase \"CBAL\" -> \"Objects\\\\Spawnmodels\\\\Critters\\\\Albatross\\\\CritterBloodAlbatross.mdl\";\n+\t\t\tcase \"IFP0\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\IllidanFootprint\\\\IllidanSpawnFootPrint0.mdl\";\n+\t\t\tcase \"IFP1\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\IllidanFootprint\\\\IllidanSpawnFootPrint1.mdl\";\n+\t\t\tcase \"IFPW\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\IllidanFootprint\\\\IllidanWaterSpawnFootPrint.mdl\";\n+\t\t\tcase \"HBCE\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\HumanBloodCinematicEffect\\\\HumanBloodCinematicEffect.mdl\";\n+\t\t\tcase \"OBCE\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\OrcBloodCinematicEffect\\\\OrcBloodCinematicEffect.mdl\";\n+\t\t\tcase \"FRBS\" -> \"Objects\\\\Spawnmodels\\\\Human\\\\FragmentationShards\\\\FragBoomSpawn.mdl\";\n+\t\t\tcase \"PBSX\" -> \"Objects\\\\Spawnmodels\\\\Other\\\\PandarenBrewmasterExplosionUltimate\\\\PandarenBrewmasterExplosionUltimate.mdl\";\n+\t\t\tcase \"GDCR\" -> \"UI\\\\Feedback\\\\GoldCredit\\\\GoldCredit.mdl\";\n+\t\t\tcase \"NBWS\" -> \"Objects\\\\Spawnmodels\\\\Naga\\\\NagaBlood\\\\NagaBloodWindserpent.mdl\";\n+\t\t\tdefault -> \"Unknown\";\n+\t\t};\n+\t}\n+\n+\tpublic String getDispString() {\n+\t\tString soundCode = name.substring(name.length() - 4);\n+//\t\tSystem.out.println(\"EventObject name: \" + name);\n+\t\treturn name + \" - \" + getEventName(name);\n+\t}\n }"
  },
  {
    "sha": "13182849106935de6f48cf4dc2b6dbb73e4b1163",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/ExtLog.java",
    "status": "modified",
    "additions": 18,
    "deletions": 2,
    "changes": 20,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/ExtLog.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/ExtLog.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/ExtLog.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -55,11 +55,23 @@ public ExtLog(final float[] minE, final float[] maxE, final double boundsRad) {\n \t}\n \n \tpublic ExtLog(final ExtLog other) {\n-\t\tminimumExtent = other.minimumExtent;\n-\t\tmaximumExtent = other.maximumExtent;\n+\t\tminimumExtent = new Vec3(other.minimumExtent);\n+\t\tmaximumExtent = new Vec3(other.maximumExtent);\n \t\tboundsRadius = other.boundsRadius;\n \t}\n \n+\tpublic void setMinMax(final ExtLog other) {\n+\t\tif (other != null) {\n+\t\t\tif (other.minimumExtent != null) {\n+\t\t\t\tminimumExtent.minimize(other.minimumExtent);\n+\t\t\t}\n+\t\t\tif (other.maximumExtent != null) {\n+\t\t\t\tmaximumExtent.maximize(other.maximumExtent);\n+\t\t\t}\n+\t\t\tboundsRadius = Math.max(boundsRadius, other.boundsRadius);\n+\t\t}\n+\t}\n+\n \tpublic void setMinExt(final Vec3 v) {\n \t\tminimumExtent = v;\n \t}\n@@ -99,4 +111,8 @@ public double getBoundsRadius() {\n \tpublic void setBoundsRadius(final double boundsRadius) {\n \t\tthis.boundsRadius = boundsRadius;\n \t}\n+\n+\tpublic String toString() {\n+\t\treturn \"minExt: \" + minimumExtent.toString() + \"\\nmaxExt: \" + maximumExtent.toString() + \"\\nbonusRad: \" + boundsRadius;\n+\t}\n }"
  },
  {
    "sha": "b0e6f1359db4060b9c3b884e555af3ea7168a19a",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/Geoset.java",
    "status": "modified",
    "additions": 246,
    "deletions": 106,
    "changes": 352,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Geoset.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Geoset.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/Geoset.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,5 +1,6 @@\n package com.hiveworkshop.rms.editor.model;\n \n+import com.hiveworkshop.rms.editor.model.animflag.AnimFlag;\n import com.hiveworkshop.rms.editor.model.util.ModelUtils;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxExtent;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxGeoset;\n@@ -10,8 +11,7 @@\n import java.awt.geom.Rectangle2D;\n import java.nio.FloatBuffer;\n import java.nio.IntBuffer;\n-import java.util.ArrayList;\n-import java.util.List;\n+import java.util.*;\n \n public class Geoset implements Named, VisibilitySource {\n \tExtLog extents;\n@@ -47,35 +47,30 @@ public Geoset(final MdlxGeoset geoset, final EditableModel model) {\n \t\tfinal float[] vertices = geoset.vertices;\n \t\tfinal float[] normals = geoset.normals;\n \t\tfinal float[][] uvSets = geoset.uvSets;\n-\t\tfinal int nVertices = vertices.length / 3;\n \t\tfinal short[] vertexGroups = geoset.vertexGroups;\n \n-\t\tfor (int k = 0; k < nVertices; k++) {\n-\t\t\tfinal int i = k * 3;\n-\t\t\tfinal int j = k * 2;\n-\t\t\tfinal GeosetVertex gv = new GeosetVertex(vertices[i], vertices[i + 1],vertices[i + 2]);\n+\t\tfor (int i = 0; i < vertices.length / 3; i++) {\n+\t\t\tfinal GeosetVertex gv = new GeosetVertex(vertices[(i * 3)], vertices[(i * 3) + 1], vertices[(i * 3) + 2]);\n \n \t\t\tadd(gv);\n \n-\t\t\tif (k >= vertexGroups.length) {\n+\t\t\tif (i >= vertexGroups.length) {\n \t\t\t\tgv.setVertexGroup(-1);\n \t\t\t} else {\n-\t\t\t\tgv.setVertexGroup((256 + vertexGroups[k]) % 256);\n+\t\t\t\tgv.setVertexGroup((256 + vertexGroups[i]) % 256);\n \t\t\t}\n-\t\t\t// this is an unsigned byte, the other guys java code will read as\n-\t\t\t// signed\n+\t\t\t// this is an unsigned byte, the other guys java code will read as signed\n \t\t\tif (normals.length > 0) {\n-\t\t\t\tgv.setNormal(new Vec3(normals[i], normals[i + 1], normals[i + 2]));\n+\n+\t\t\t\tgv.setNormal(new Vec3(normals[(i * 3)], normals[(i * 3) + 1], normals[(i * 3) + 2]));\n \t\t\t}\n \n \t\t\tfor (float[] uvSet : uvSets) {\n-\t\t\t\tgv.addTVertex(new Vec2(uvSet[j], uvSet[j + 1]));\n+\t\t\t\tgv.addTVertex(new Vec2(uvSet[(i * 2)], uvSet[(i * 2) + 1]));\n \t\t\t}\n \t\t}\n-\t\t// guys I didn't code this to allow experimental\n-\t\t// non-triangle faces that were suggested to exist\n-\t\t// on the web (i.e. quads).\n-\t\t// if you wanted to fix that, you'd want to do it below\n+\t\t// guys I didn't code this to allow experimental non-triangle faces that were suggested to exist\n+\t\t// on the web (i.e. quads). if you wanted to fix that, you'd want to do it below\n \t\tfinal int[] faces = geoset.faces;\n \n \t\tfor (int i = 0; i < faces.length; i += 3) {\n@@ -212,17 +207,16 @@ public MdlxGeoset toMdlx(final EditableModel model) {\n \t\t\tgeoset.vertexGroups[vId] = (byte) vertex.getVertexGroup();\n \t\t}\n \n-\t\t// Again, the current implementation of my mdl code is that it only\n-\t\t// handles triangle facetypes\n+\t\t// Again, the current implementation of my mdl code is that it only handles triangle face types\n \t\t// (there's another note about this in the MDX -> MDL geoset code)\n-\t\tgeoset.faceGroups = new long[] { getTriangles().size() * 3 };\n-\t\tgeoset.faceTypeGroups = new long[] { 4 }; // triangles!\n+\t\tgeoset.faceGroups = new long[] {getTriangles().size() * 3L};\n+\t\tgeoset.faceTypeGroups = new long[] {4}; // triangles!\n \t\tgeoset.faces = new int[getTriangles().size() * 3]; // triangles!\n \n-\t\tint i = 0;\n+\t\tint faceIndex = 0;\n \t\tfor (final Triangle tri : getTriangles()) {\n \t\t\tfor (int v = 0; v < /* tri.size() */3; v++) {\n-\t\t\t\tgeoset.faces[i++] = tri.getId(v);\n+\t\t\t\tgeoset.faces[faceIndex++] = tri.getId(v);\n \t\t\t}\n \t\t}\n \n@@ -232,29 +226,16 @@ public MdlxGeoset toMdlx(final EditableModel model) {\n \n \t\tgeoset.selectionGroup = getSelectionGroup();\n \n-\t\tint matrixIndexsSize = 0;\n-\t\tfor (final Matrix matrix : getMatrix()) {\n-\t\t\tint size = matrix.size();\n-\t\t\tif (size == -1) {\n-\t\t\t\tsize = 1;\n-\t\t\t}\n-\t\t\tmatrixIndexsSize += size;\n-\t\t}\n-\n+\t\tgeoset.matrixIndices = new long[getMatrixIndexesSize()];\n \t\tgeoset.matrixGroups = new long[getMatrix().size()];\n-\t\tif (matrixIndexsSize == -1) {\n-\t\t\tmatrixIndexsSize = 1;\n-\t\t}\n-\n-\t\tgeoset.matrixIndices = new long[matrixIndexsSize];\n-\t\ti = 0;\n+\t\tint matrixIndex = 0;\n \t\tint groupIndex = 0;\n \t\tfor (final Matrix matrix : getMatrix()) {\n \t\t\tfor (int index = 0; index < matrix.size(); index++) {\n-\t\t\t\tgeoset.matrixIndices[i++] = matrix.getBoneId(index);\n+\t\t\t\tgeoset.matrixIndices[matrixIndex++] = matrix.getBoneId(index);\n \t\t\t}\n \t\t\tif (matrix.size() <= 0) {\n-\t\t\t\tgeoset.matrixIndices[i++] = -1;\n+\t\t\t\tgeoset.matrixIndices[matrixIndex++] = -1;\n \t\t\t}\n \t\t\tint size = matrix.size();\n \t\t\tif (size == -1) {\n@@ -271,7 +252,7 @@ public MdlxGeoset toMdlx(final EditableModel model) {\n \t\t\tgeoset.skin = new short[8 * numVertices];\n \t\t\tgeoset.tangents = new float[4 * numVertices];\n \n-\t\t\tfor (i = 0; i < numVertices; i++) {\n+\t\t\tfor (int i = 0; i < numVertices; i++) {\n \t\t\t\tfor (int j = 0; j < 4; j++) {\n \t\t\t\t\tfinal GeosetVertex vertex = getVertex(i);\n \t\t\t\t\tgeoset.skin[(i * 8) + j] = vertex.getSkinBoneIndexes()[j];\n@@ -284,10 +265,156 @@ public MdlxGeoset toMdlx(final EditableModel model) {\n \t\treturn geoset;\n \t}\n \n+\tprivate int getMatrixIndexesSize() {\n+\t\tint matrixIndexesSize = 0;\n+\t\tfor (final Matrix matrix : getMatrix()) {\n+\t\t\tint size = matrix.size();\n+\t\t\tif (size == -1) {\n+\t\t\t\tsize = 1;\n+\t\t\t}\n+\t\t\tmatrixIndexesSize += size;\n+\t\t}\n+\n+\t\tif (matrixIndexesSize == -1) {\n+\t\t\tmatrixIndexesSize = 1;\n+\t\t}\n+\t\treturn matrixIndexesSize;\n+\t}\n+\n \t@Override\n \tpublic String getName() {\n-\t\treturn \"Geoset \" + (parentModel.getGeosetId(this) + 1);// parentModel.getName()\n-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// + \"\n+\t\tif (levelOfDetailName.equals(\"\")) {\n+\t\t\tif (skin != null) {\n+\t\t\t\tString name = hdGetMostCommonUniqueBoneName();\n+\t\t\t\tif (name.equals(\"\")) {\n+\t\t\t\t\tmatrix.get(0).getName();\n+\t\t\t\t}\n+\t\t\t\treturn \"Geoset \" + (parentModel.getGeosetId(this)) + \": \" + name;\n+\t\t\t} else if (!matrix.isEmpty()) {\n+\t\t\t\tString name = sdGetMostCommonUniqueBoneName();\n+\t\t\t\tif (name.equals(\"\")) {\n+\t\t\t\t\tmatrix.get(0).getName();\n+\t\t\t\t}\n+//\t\t\t\treturn \"Geoset \" + (parentModel.getGeosetId(this)) + \": \" + matrix.get(0).getName();\n+\t\t\t\treturn \"Geoset \" + (parentModel.getGeosetId(this)) + \": \" + name;\n+\t\t\t}\n+\t\t} else {\n+\t\t\treturn \"Geoset \" + (parentModel.getGeosetId(this)) + \": \" + levelOfDetailName;\n+\t\t}\n+\t\treturn \"Geoset \" + (parentModel.getGeosetId(this));// parentModel.getName() // + \"\n+\t}\n+\n+\tpublic String sdGetMostCommonUniqueBoneName() {\n+\t\tList<Bone> nonSharedParentBones = new ArrayList<>();\n+\t\tList<Bone> mBones = new ArrayList<>();\n+\t\tif (!matrix.isEmpty()) {\n+\t\t\tfor (Matrix m : matrix) {\n+\t\t\t\tmBones.addAll(m.getBones());\n+\t\t\t}\n+\n+\t\t\tif (mBones.size() == 1) {\n+\t\t\t\treturn mBones.get(0).getName().replaceAll(\"(?i)bone_*\", \"\");\n+\t\t\t}\n+\t\t\tfor (Bone bone : mBones) {\n+\t\t\t\tBone lp = lastParentIn(bone, mBones);\n+\n+\t\t\t\tif ((lp.geoset == this || lp instanceof Helper) && !nonSharedParentBones.contains(lp)) {\n+\t\t\t\t\tnonSharedParentBones.add(lp);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tList<Bone> curatedBones = new ArrayList<>();\n+\t\t\tfor (Bone bone : nonSharedParentBones) {\n+\t\t\t\tif (!bone.getName().toLowerCase().startsWith(\"mesh\")) {\n+\t\t\t\t\tcuratedBones.add(bone);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (curatedBones.size() < 3) {\n+\t\t\t\tfor (int i = 0; i < nonSharedParentBones.size() && curatedBones.size() < 3; i++) {\n+\t\t\t\t\tif (!curatedBones.contains(nonSharedParentBones.get(i))) {\n+\t\t\t\t\t\tcuratedBones.add(nonSharedParentBones.get(i));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+//\t\t\tfor (Bone bone : nonSharedParentBones) {\n+//\t\t\t\tif(!nonSharedParentBones.contains(bone.getParent())){\n+//\t\t\t\t\tcuratedBones.add(bone);\n+//\t\t\t\t}\n+//\t\t\t}\n+\t\t\tList<String> nameParts = new ArrayList<>();\n+//\t\t\tfor (Bone bone : nonSharedParentBones) {\n+//\t\t\t\tnameParts.add(bone.getName().replaceAll(\"(?i)bone_*\", \"\"));\n+//\t\t\t}\n+\t\t\tfor (Bone bone : curatedBones) {\n+\t\t\t\tnameParts.add(bone.getName().replaceAll(\"(?i)bone_*\", \"\"));\n+\t\t\t}\n+\t\t\treturn String.join(\", \", nameParts);\n+\t\t}\n+\t\treturn \"\";\n+\t}\n+\n+\n+\tpublic Bone lastParentIn(Bone bone, List<Bone> list) {\n+\t\tBone parentBone = bone;\n+\t\tint infStopper = 0;\n+\t\twhile (list.contains(parentBone) && parentBone != null && infStopper < 1000) {\n+\t\t\tif (bone.getParent() instanceof Bone) {\n+\t\t\t\tparentBone = (Bone) bone.getParent();\n+\t\t\t\tif (parentBone.multiGeoId || (parentBone.geoset != this && parentBone.geoset != null)) {\n+\t\t\t\t\treturn bone;\n+\t\t\t\t} else if (list.contains(parentBone)) {\n+\t\t\t\t\tbone = parentBone;\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\treturn bone;\n+\t\t\t}\n+\t\t\tinfStopper++;\n+\t\t}\n+\t\treturn bone;\n+\t}\n+\n+\n+\tpublic String hdGetMostCommonUniqueBoneName() {\n+\t\tList<Bone> nonSharedParentBones = new ArrayList<>();\n+\t\tList<Bone> mBones = new ArrayList<>();\n+\t\tSet<Short> parentIds = new HashSet<>();\n+\t\tSet<Short> prioParentIds = new HashSet<>();\n+\t\tif (skin != null) {\n+\t\t\tfor (short[] vert : skin) {\n+\t\t\t\tfor (int i = 0; i < 4; i++) {\n+\t\t\t\t\tif (vert[i + 4] > 60) {\n+\t\t\t\t\t\tparentIds.add(vert[i]);\n+\t\t\t\t\t\tif (vert[i + 4] > 250) {\n+\t\t\t\t\t\t\tprioParentIds.add(vert[i]);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (prioParentIds.isEmpty()) {\n+\t\t\t\tfor (short s : parentIds) {\n+\t\t\t\t\tmBones.add(parentModel.getBone(s));\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tfor (short s : prioParentIds) {\n+\t\t\t\t\tmBones.add(parentModel.getBone(s));\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t\tif (mBones.size() == 1) {\n+\t\t\t\treturn mBones.get(0).getName().replaceAll(\"[Bb][Oo][Nn][Ee]_*\", \"\");\n+\t\t\t}\n+\t\t\tfor (Bone bone : mBones) {\n+\t\t\t\tBone lp = lastParentIn(bone, mBones);\n+\t\t\t\tif (lp.geoset == this && !nonSharedParentBones.contains(lp)) {\n+\t\t\t\t\tnonSharedParentBones.add(lp);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tList<String> nameParts = new ArrayList<>();\n+\t\t\tfor (Bone bone : nonSharedParentBones) {\n+\t\t\t\tnameParts.add(bone.getName().replaceAll(\"[Bb][Oo][Nn][Ee]_*\", \"\"));\n+\t\t\t}\n+\t\t\treturn String.join(\", \", nameParts);\n+\t\t}\n+\t\treturn \"\";\n \t}\n \n \tpublic void addVertex(final GeosetVertex v) {\n@@ -451,41 +578,13 @@ public int numAnims() {\n \t}\n \n \tpublic void updateToObjects(final EditableModel mdlr) {\n-\t\t// upload the temporary UVLayer and Matrix objects into the vertices\n-\t\t// themselves\n-\t\tfinal int sz = numVerteces();\n+\t\t// upload the temporary UVLayer and Matrix objects into the vertices themselves\n \t\tfor (final Matrix m : matrix) {\n \t\t\tm.updateBones(mdlr);\n \t\t}\n-\t\tfor (int i = 0; i < sz; i++) {\n+\t\tfor (int i = 0; i < vertices.size(); i++) {\n \t\t\tfinal GeosetVertex gv = vertices.get(i);\n-\t\t\tif ((ModelUtils.isTangentAndSkinSupported(mdlr.getFormatVersion())) && (tangents != null)) {\n-\t\t\t\tgv.initV900();\n-\t\t\t\tfor (int j = 0; j < 4; j++) {\n-\t\t\t\t\tshort boneLookupId = skin.get(i)[j];\n-\t\t\t\t\tif (boneLookupId < 0) {\n-\t\t\t\t\t\tboneLookupId += 256;\n-\t\t\t\t\t}\n-\t\t\t\t\tshort boneWeight = skin.get(i)[j + 4];\n-\t\t\t\t\tif (boneWeight < 0) {\n-\t\t\t\t\t\tboneWeight += 256;\n-\t\t\t\t\t}\n-\t\t\t\t\tfinal Bone bone;\n-\t\t\t\t\tif ((boneLookupId >= mdlr.getIdObjectsSize()) || (boneLookupId < 0)) {\n-\t\t\t\t\t\tbone = null;\n-\t\t\t\t\t} else {\n-\t\t\t\t\t\tfinal IdObject idObject = mdlr.getIdObject(boneLookupId);\n-\t\t\t\t\t\tif (idObject instanceof Bone) {\n-\t\t\t\t\t\t\tbone = (Bone) idObject;\n-\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\tbone = null;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\tgv.getSkinBones()[j] = bone;\n-\t\t\t\t\tgv.getSkinBoneWeights()[j] = boneWeight;\n-\t\t\t\t\tgv.getTangent()[j] = tangents.get(i)[j];\n-\t\t\t\t}\n-\t\t\t}\n+\t\t\tsetSkinBones(mdlr, i, gv);\n \t\t\tfinal Matrix mx;\n \t\t\tif ((gv.getVertexGroup() == -1) && (ModelUtils.isTangentAndSkinSupported(mdlr.getFormatVersion()))) {\n \t\t\t\tmx = null;\n@@ -515,10 +614,27 @@ public void updateToObjects(final EditableModel mdlr) {\n \t\tparentModel = mdlr;\n \t}\n \n+\tprivate void setSkinBones(EditableModel mdlr, int i, GeosetVertex gv) {\n+\t\tif ((ModelUtils.isTangentAndSkinSupported(mdlr.getFormatVersion())) && (tangents != null)) {\n+\t\t\tgv.initV900();\n+\t\t\tfor (int j = 0; j < 4; j++) {\n+\t\t\t\tshort boneLookupId = (short) ((skin.get(i)[j] + 256) % 256);\n+\n+\t\t\t\tshort boneWeight = (short) ((skin.get(i)[j + 4] + 256) % 256);\n+\n+\t\t\t\tfinal IdObject idObject = mdlr.getIdObject(boneLookupId);\n+\t\t\t\tif (idObject instanceof Bone) {\n+\t\t\t\t\tgv.setSkinBone((Bone) idObject, boneWeight, j);\n+\t\t\t\t} else {\n+\t\t\t\t\tgv.setSkinBone(null, boneWeight, j);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tgv.setTangent(tangents.get(i));\n+\t\t}\n+\t}\n+\n \tpublic void applyMatricesToVertices(final EditableModel mdlr) {\n-\t\tfinal int sz = numVerteces();\n-\t\tfor (int i = 0; i < sz; i++) {\n-\t\t\tfinal GeosetVertex gv = vertices.get(i);\n+\t\tfor (final GeosetVertex gv : vertices) {\n \t\t\tgv.clearBoneAttachments();\n \t\t\tfinal Matrix mx = getMatrix(gv.getVertexGroup());\n \t\t\tif (((gv.getVertexGroup() == -1) || (mx == null))) {\n@@ -528,10 +644,12 @@ public void applyMatricesToVertices(final EditableModel mdlr) {\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tmx.updateIds(mdlr);\n-\t\t\t\tfinal int szmx = mx.size();\n-\t\t\t\tfor (int m = 0; m < szmx; m++) {\n-\t\t\t\t\tgv.addBoneAttachment((Bone) mdlr.getIdObject(mx.getBoneId(m)));\n+\t\t\t\tfor (Bone bone : mx.getBones()) {\n+\t\t\t\t\tgv.addBoneAttachment(bone);\n \t\t\t\t}\n+//\t\t\t\tfor (int m = 0; m < mx.size(); m++) {\n+//\t\t\t\t\tgv.addBoneAttachment((Bone) mdlr.getIdObject(mx.getBoneId(m)));\n+//\t\t\t\t}\n \t\t\t}\n \t\t}\n \t}\n@@ -551,7 +669,7 @@ public void applyVerticesToMatrices(final EditableModel mdlr) {\n \t\t\t\tmatrix.add(newTemp);\n \t\t\t\tnewTemp.updateIds(mdlr);\n \t\t\t}\n-\t\t\tvertex.VertexGroup = matrix.indexOf(newTemp);\n+\t\t\tvertex.vertexGroup = matrix.indexOf(newTemp);\n \t\t\tvertex.setMatrix(newTemp);\n \t\t}\n \t}\n@@ -563,9 +681,8 @@ public void purifyFaces() {\n \t\t\t\tfinal Triangle trix = triangles.get(ix);\n \t\t\t\tif (trix != tri) {\n \t\t\t\t\tif (trix.equalRefsNoIds(tri))\n-\t\t\t\t\t// Changed this from \"sameVerts\" -- this means that\n-\t\t\t\t\t// triangles with the same vertices but in a different\n-\t\t\t\t\t// order will no longer be purged automatically.\n+\t\t\t\t\t// Changed this from \"sameVerts\" -- this means that triangles with the same\n+\t\t\t\t\t// vertices but in a different order will no longer be purged automatically.\n \t\t\t\t\t{\n \t\t\t\t\t\ttriangles.remove(tri);\n \t\t\t\t\t\tbreak;\n@@ -587,7 +704,8 @@ public void doSavePrep(final EditableModel mdlr) {\n \t\tfor (final GeosetVertex geosetVertex : vertices) {\n \t\t\tif (geosetVertex.getSkinBones() != null) {\n \t\t\t\tif (matrix.isEmpty()) {\n-\t\t\t\t\tfinal List<Bone> bones = mdlr.sortedIdObjects(Bone.class);\n+//\t\t\t\t\tfinal List<Bone> bones = mdlr.sortedIdObjects(Bone.class);\n+\t\t\t\t\tfinal List<Bone> bones = mdlr.getBones();\n \t\t\t\t\tfor (int j = 0; (j < bones.size()) && (j < 256); j++) {\n \t\t\t\t\t\tfinal List<Bone> singleBoneList = new ArrayList<>();\n \t\t\t\t\t\tsingleBoneList.add(bones.get(j));\n@@ -611,7 +729,7 @@ public void doSavePrep(final EditableModel mdlr) {\n \t\t\t\t\t\tgeosetVertex.getSkinBoneIndexes()[skinIndex++] = (byte) index;\n \t\t\t\t\t}\n \t\t\t\t}\n-\t\t\t\tgeosetVertex.VertexGroup = -1;\n+\t\t\t\tgeosetVertex.vertexGroup = -1;\n \t\t\t} else {\n \t\t\t\tMatrix newTemp = new Matrix(geosetVertex.bones);\n \t\t\t\tboolean newMatrix = true;\n@@ -625,7 +743,7 @@ public void doSavePrep(final EditableModel mdlr) {\n \t\t\t\t\tmatrix.add(newTemp);\n \t\t\t\t\tnewTemp.updateIds(mdlr);\n \t\t\t\t}\n-\t\t\t\tgeosetVertex.VertexGroup = matrix.indexOf(newTemp);\n+\t\t\t\tgeosetVertex.vertexGroup = matrix.indexOf(newTemp);\n \t\t\t\tgeosetVertex.setMatrix(newTemp);\n \t\t\t}\n \t\t}\n@@ -650,18 +768,18 @@ public GeosetAnim forceGetGeosetAnim() {\n \t}\n \n \t@Override\n-\tpublic void setVisibilityFlag(final AnimFlag a) {\n-\t\tif (a != null) {\n-\t\t\tforceGetGeosetAnim().setVisibilityFlag(a);\n+\tpublic AnimFlag<?> getVisibilityFlag() {\n+\t\tif (geosetAnim != null) {\n+\t\t\treturn geosetAnim.getVisibilityFlag();\n \t\t}\n+\t\treturn null;\n \t}\n \n \t@Override\n-\tpublic AnimFlag getVisibilityFlag() {\n-\t\tif (geosetAnim != null) {\n-\t\t\treturn geosetAnim.getVisibilityFlag();\n+\tpublic void setVisibilityFlag(final AnimFlag<?> a) {\n+\t\tif (a != null) {\n+\t\t\tforceGetGeosetAnim().setVisibilityFlag(a);\n \t\t}\n-\t\treturn null;\n \t}\n \n \t@Override\n@@ -763,23 +881,45 @@ public void remove(final Triangle tri) {\n \n \tpublic ExtLog calculateExtent() {\n \t\tdouble maximumDistanceFromCenter = 0;\n-\t\tdouble maxX = -Double.MAX_VALUE, maxY = -Double.MAX_VALUE, maxZ = -Double.MAX_VALUE;\n-\t\tdouble minX = Double.MAX_VALUE, minY = Double.MAX_VALUE, minZ = Double.MAX_VALUE;\n+\t\tVec3 max = new Vec3(Float.MIN_VALUE, Float.MIN_VALUE, Float.MIN_VALUE);\n+\t\tVec3 min = new Vec3(Float.MAX_VALUE, Float.MAX_VALUE, Float.MAX_VALUE);\n \n \t\tfor (final GeosetVertex geosetVertex : vertices) {\n-\t\t\tmaxX = Math.max(geosetVertex.x, maxX);\n-\t\t\tmaxY = Math.max(geosetVertex.y, maxY);\n-\t\t\tmaxZ = Math.max(geosetVertex.z, maxZ);\n-\t\t\tminX = Math.min(geosetVertex.x, minX);\n-\t\t\tminY = Math.min(geosetVertex.y, minY);\n-\t\t\tminZ = Math.min(geosetVertex.z, minZ);\n-\n-\t\t\tfinal double distanceFromCenter = Math.sqrt((geosetVertex.x * geosetVertex.x)\n-\t\t\t\t\t+ (geosetVertex.y * geosetVertex.y) + (geosetVertex.z * geosetVertex.z));\n+\t\t\tmax.maximize(geosetVertex);\n+\t\t\tmin.minimize(geosetVertex);\n+\n+\t\t\tfinal double distanceFromCenter = geosetVertex.length();\n \t\t\tif (distanceFromCenter > maximumDistanceFromCenter) {\n \t\t\t\tmaximumDistanceFromCenter = distanceFromCenter;\n \t\t\t}\n \t\t}\n-\t\treturn new ExtLog(new Vec3(minX, minY, minZ), new Vec3(maxX, maxY, maxZ), maximumDistanceFromCenter);\n+\t\treturn new ExtLog(min, max, maximumDistanceFromCenter);\n+\t}\n+\n+\tpublic Map<Bone, List<GeosetVertex>> getBoneMap() {\n+\t\tMap<Bone, List<GeosetVertex>> boneMap = new HashMap<>();\n+\t\tfor (GeosetVertex geosetVertex : vertices) {\n+\t\t\tBone[] sb = geosetVertex.getSkinBones();\n+\t\t\tshort[] bw = geosetVertex.getSkinBoneWeights();\n+\t\t\tif (sb != null && bw != null) {\n+\t\t\t\tfor (int i = 0; i < sb.length; i++) {\n+\t\t\t\t\tif (!boneMap.containsKey(sb[i])) {\n+\t\t\t\t\t\tboneMap.put(sb[i], new ArrayList<>());\n+\t\t\t\t\t}\n+\t\t\t\t\tif (bw[i] > 0) {\n+//\t\t\t\t\t\tSystem.out.println(\"added geoVert\");\n+\t\t\t\t\t\tboneMap.get(sb[i]).add(geosetVertex);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tfor (Bone bone : geosetVertex.getBones()) {\n+\t\t\t\t\tif (!boneMap.containsKey(bone)) {\n+\t\t\t\t\t\tboneMap.put(bone, new ArrayList<>());\n+\t\t\t\t\t}\n+\t\t\t\t\tboneMap.get(bone).add(geosetVertex);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn boneMap;\n \t}\n }"
  },
  {
    "sha": "9714e1e5907f32bf19792648cd3ae097dacfebba",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/GeosetAnim.java",
    "status": "modified",
    "additions": 17,
    "deletions": 25,
    "changes": 42,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/GeosetAnim.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/GeosetAnim.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/GeosetAnim.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,5 +1,7 @@\n package com.hiveworkshop.rms.editor.model;\n \n+import com.hiveworkshop.rms.editor.model.animflag.AnimFlag;\n+import com.hiveworkshop.rms.editor.model.animflag.FloatAnimFlag;\n import com.hiveworkshop.rms.editor.model.util.ModelUtils;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxGeosetAnimation;\n import com.hiveworkshop.rms.ui.application.viewer.AnimatedRenderEnvironment;\n@@ -18,11 +20,11 @@\n \tGeoset geoset;\n \tboolean dropShadow = false;\n \n-\tpublic GeosetAnim(final AnimFlag flag) {\n+\tpublic GeosetAnim(final AnimFlag<?> flag) {\n \t\tadd(flag);\n \t}\n \n-\tpublic GeosetAnim(final List<AnimFlag> flags) {\n+\tpublic GeosetAnim(final List<AnimFlag<?>> flags) {\n \t\tsetAnimFlags(flags);\n \t}\n \n@@ -57,6 +59,9 @@ public MdlxGeosetAnimation toMdlx(final EditableModel model) {\n \t\tif (dropShadow) {\n \t\t\tanimation.flags |= 1;\n \t\t}\n+\t\tif (find(\"Color\") != null || !staticColor.equals(new Vec3(1, 1, 1))) {\n+\t\t\tanimation.flags |= 0x2;\n+\t\t}\n \n \t\tanimation.color = ModelUtils.flipRGBtoBGR(getStaticColor().toFloatArray());\n \n@@ -76,10 +81,10 @@ public String getName() {\n \n \tpublic GeosetAnim getMostVisible(final GeosetAnim partner) {\n \t\tif ((getVisibilityFlag() != null) && (partner != null)) {\n-\t\t\tfinal AnimFlag thisFlag = getVisibilityFlag();\n+\t\t\tfinal AnimFlag<?> thisFlag = getVisibilityFlag();\n \t\t\tfinal AnimFlag thatFlag = partner.getVisibilityFlag();\n \t\t\tif (thatFlag != null) {\n-\t\t\t\tfinal AnimFlag result = thisFlag.getMostVisible(thatFlag);\n+\t\t\t\tfinal AnimFlag<?> result = thisFlag.getMostVisible(thatFlag);\n \t\t\t\tif (result == thisFlag) {\n \t\t\t\t\treturn this;\n \t\t\t\t} else if (result == thatFlag) {\n@@ -132,44 +137,31 @@ public float getRenderVisibility(final AnimatedRenderEnvironment animatedRenderE\n \t\treturn getRenderVisibility(animatedRenderEnvironment, (float) staticAlpha);\n \t}\n \n-\tprivate static final Vec3 renderColorVector = new Vec3();\n-\n \tpublic Vec3 getRenderColor(final AnimatedRenderEnvironment animatedRenderEnvironment) {\n-\t\tfinal Vec3 c = getInterpolatedVector(animatedRenderEnvironment, \"Color\", staticColor);\n-\n-\t\trenderColorVector.x = c.x;\n-\t\trenderColorVector.y = c.y;\n-\t\trenderColorVector.z = c.z;\n-\n-\t\treturn renderColorVector;\n+\t\treturn getInterpolatedVector(animatedRenderEnvironment, \"Color\", staticColor);\n \t}\n \n \tpublic void copyVisibilityFrom(final VisibilitySource other, final EditableModel mdlr) {\n \t\tfinal VisibilitySource temp = this;\n-\t\tfinal AnimFlag visFlag = temp.getVisibilityFlag();// might be\n-\t\t// null\n-\t\tfinal AnimFlag newVisFlag;\n-\t\tboolean tans = false;\n+\t\tfinal AnimFlag<?> visFlag = getVisibilityFlag();// might be null\n+\t\tfinal FloatAnimFlag newVisFlag;\n \t\tif (visFlag != null) {\n-\t\t\tnewVisFlag = AnimFlag.buildEmptyFrom(visFlag);\n-\t\t\ttans = visFlag.tans();\n+\t\t\tnewVisFlag = (FloatAnimFlag) AnimFlag.buildEmptyFrom(visFlag);\n \t\t} else {\n-\t\t\tnewVisFlag = new AnimFlag(temp.visFlagName());\n+\t\t\tnewVisFlag = new FloatAnimFlag(temp.visFlagName());\n \t\t}\n \t\t// newVisFlag = new AnimFlag(temp.visFlagName());\n-\t\tfinal AnimFlag flagNew = other.getVisibilityFlag();\n+\t\tfinal FloatAnimFlag flagNew = (FloatAnimFlag) other.getVisibilityFlag();\n \t\t// this is an element not favoring existing over imported\n \t\tfor (final Animation a : mdlr.getAnims()) {\n \t\t\tif (newVisFlag != null) {\n \t\t\t\tif (!newVisFlag.hasGlobalSeq()) {\n \t\t\t\t\tnewVisFlag.deleteAnim(a);\n-\t\t\t\t\t// All entries for visibility are deleted from\n-\t\t\t\t\t// original-based sources during imported animation\n-\t\t\t\t\t// times\n+\t\t\t\t\t// All entries for visibility are deleted from original-based sources during imported animation times\n \t\t\t\t}\n \t\t\t}\n \t\t}\n-\t\tif (flagNew != null) {\n+\t\tif (flagNew != null && newVisFlag != null) {\n \t\t\tnewVisFlag.copyFrom(flagNew);\n \t\t}\n \t\tsetVisibilityFlag(newVisFlag);"
  },
  {
    "sha": "20a899bd22fc0e43206876e76fc55f3115261275",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/GeosetVertex.java",
    "status": "modified",
    "additions": 400,
    "deletions": 121,
    "changes": 521,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/GeosetVertex.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/GeosetVertex.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/GeosetVertex.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -2,9 +2,9 @@\n \n import com.hiveworkshop.rms.util.Vec2;\n import com.hiveworkshop.rms.util.Vec3;\n+import com.hiveworkshop.rms.util.Vec4;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.List;\n \n /**\n@@ -20,14 +20,15 @@\n public class GeosetVertex extends Vec3 {\n     Matrix matrixRef;\n     private Vec3 normal = new Vec3();\n-    public int VertexGroup = -1;\n+    public int vertexGroup = -1;\n     List<Vec2> tverts = new ArrayList<>();\n     List<Bone> bones = new ArrayList<>();\n     List<Triangle> triangles = new ArrayList<>();\n     private byte[] skinBoneIndexes;\n-    private Bone[] skinBones;\n-    private short[] skinBoneWeights;\n-    private float[] tangent;\n+    //    private Bone[] skinBones; //ToDo replace with SkinBone[]\n+//    private short[] skinBoneWeights;\n+    private Vec4 tangent;\n+    private SkinBone[] sskinBones;\n \n     Geoset geoset;\n \n@@ -40,68 +41,114 @@ public GeosetVertex(final double x, final double y, final double z, final Vec3 n\n         normal = n;\n     }\n \n+    public GeosetVertex(final GeosetVertex old) {\n+        super(old.x, old.y, old.z);\n+        normal = new Vec3(old.normal);\n+        bones = new ArrayList<>(old.bones);\n+        tverts = new ArrayList<>();\n+        for (final Vec2 tv : old.tverts) {\n+            tverts.add(new Vec2(tv));\n+        }\n+        // odd, but when writing\n+        geoset = old.geoset;\n+        // TODO copy triangles???????\n+        if (old.skinBoneIndexes != null) {\n+            skinBoneIndexes = old.skinBoneIndexes.clone();\n+        }\n+//        if (old.skinBones != null) {\n+//            skinBones = old.skinBones.clone();\n+//        }\n+//        if (old.skinBoneWeights != null) {\n+//            skinBoneWeights = old.skinBoneWeights.clone();\n+//        }\n+        if (old.sskinBones != null) {\n+            sskinBones = old.sskinBones.clone();\n+        }\n+        if (old.tangent != null) {\n+            tangent = new Vec4(old.tangent);\n+        }\n+    }\n+\n     public void initV900() {\n         skinBoneIndexes = new byte[4];\n-        skinBones = new Bone[4];\n-        skinBoneWeights = new short[4];\n-        tangent = new float[4];\n+//        skinBones = new Bone[4];\n+//        skinBoneWeights = new short[4];\n+        sskinBones = new SkinBone[4];\n+        tangent = new Vec4(0, 0, 0, 0);\n     }\n \n+    public void magicSkinBones() {\n+        final int bonesNum = Math.min(4, bones.size());\n+        final short weight = (short) (255 / bonesNum);\n+\n+        for (int i = 0; i < 4; i++) {\n+            if (i < bonesNum) {\n+                setSkinBone(bones.get(i), weight, i);\n+            } else {\n+                setSkinBone((short) 0, i);\n+            }\n+        }\n+        setSkinBone(bones.get(0), (short) (weight + (255 % bonesNum)), 0);\n+    }\n+\n+//    public void un900Heuristic2() {\n+//        if (tangent != null) {\n+//            tangent = null;\n+//        }\n+//        if (skinBones != null) {\n+//            bones.clear();\n+//            int index = 0;\n+//            boolean fallback = false;\n+//            for (final Bone bone : skinBones) {\n+//                if (bone != null) {\n+//                    fallback = true;\n+//                    if (skinBoneWeights[index] > 110) {\n+//                        bones.add(bone);\n+//                    }\n+//                }\n+//                index++;\n+//            }\n+//            if (bones.isEmpty() && fallback) {\n+//                for (final Bone bone : skinBones) {\n+//                    if (bone != null) {\n+//                        bones.add(bone);\n+//                    }\n+//                }\n+//            }\n+//            skinBones = null;\n+//            skinBoneWeights = null;\n+//            skinBoneIndexes = null;\n+//        }\n+//    }\n+\n     public void un900Heuristic() {\n         if (tangent != null) {\n             tangent = null;\n         }\n-        if (skinBones != null) {\n+        if (sskinBones != null) {\n             bones.clear();\n-            int index = 0;\n             boolean fallback = false;\n-            for (final Bone bone : skinBones) {\n-                if (bone != null) {\n+            for (final SkinBone skinBone : sskinBones) {\n+                if (skinBone != null && skinBone.getBone() != null) {\n                     fallback = true;\n-                    if (skinBoneWeights[index] > 110) {\n-                        bones.add(bone);\n+                    if (skinBone.getWeight() > 110) {\n+                        bones.add(skinBone.getBone());\n                     }\n                 }\n-                index++;\n             }\n             if (bones.isEmpty() && fallback) {\n-                for (final Bone bone : skinBones) {\n-                    if (bone != null) {\n-                        bones.add(bone);\n+                for (final SkinBone skinBone : sskinBones) {\n+                    if (skinBone != null && skinBone.getBone() != null) {\n+                        bones.add(skinBone.getBone());\n                     }\n                 }\n             }\n-            skinBones = null;\n-            skinBoneWeights = null;\n+//            skinBones = null;\n+//            skinBoneWeights = null;\n             skinBoneIndexes = null;\n         }\n     }\n \n-    public GeosetVertex(final GeosetVertex old) {\n-        super(old.x, old.y, old.z);\n-        normal = new Vec3(old.normal);\n-        bones = new ArrayList<>(old.bones);\n-        tverts = new ArrayList<>();\n-        for (final Vec2 tv : old.tverts) {\n-            tverts.add(new Vec2(tv));\n-        }\n-        // odd, but when writing\n-        geoset = old.geoset;\n-        // TODO copy triangles???????\n-        if (old.skinBoneIndexes != null) {\n-            skinBoneIndexes = old.skinBoneIndexes.clone();\n-        }\n-        if (old.skinBones != null) {\n-            skinBones = old.skinBones.clone();\n-        }\n-        if (old.skinBoneWeights != null) {\n-            skinBoneWeights = old.skinBoneWeights.clone();\n-        }\n-        if (old.tangent != null) {\n-            tangent = old.tangent.clone();\n-        }\n-    }\n-\n     public void addTVertex(final Vec2 v) {\n         tverts.add(v);\n     }\n@@ -114,12 +161,12 @@ public Vec2 getTVertex(final int i) {\n         }\n     }\n \n-    public void setVertexGroup(final int k) {\n-        VertexGroup = k;\n+    public int getVertexGroup() {\n+        return vertexGroup;\n     }\n \n-    public int getVertexGroup() {\n-        return VertexGroup;\n+    public void setVertexGroup(final int k) {\n+        vertexGroup = k;\n     }\n \n     public void clearBoneAttachments() {\n@@ -190,30 +237,145 @@ public Geoset getGeoset() {\n         return skinBoneIndexes;\n     }\n \n+//    public Bone[] getSkinBones() {\n+//        return skinBones;\n+//    }\n+\n     public Bone[] getSkinBones() {\n-        return skinBones;\n+        if (this.sskinBones == null) {\n+            return null;\n+        }\n+        Bone[] sb = new Bone[4];\n+        for (int i = 0; i < sskinBones.length; i++) {\n+            sb[i] = sskinBones[i].getBone();\n+        }\n+        return sb;\n     }\n \n     public void setSkinBones(final Bone[] skinBones) {\n-        this.skinBones = skinBones;\n+//        this.skinBones = skinBones;\n+        if (this.sskinBones == null) {\n+            this.sskinBones = new SkinBone[4];\n+        }\n+        for (int i = 0; i < 4; i++) {\n+            if (this.sskinBones[i] == null) {\n+                this.sskinBones[i] = new SkinBone(skinBones[i]);\n+            } else {\n+                this.sskinBones[i].setBone(skinBones[i]);\n+            }\n+        }\n+    }\n+\n+//    public void setSkinBones(final Bone[] skinBones) {\n+//        this.skinBones = skinBones;\n+//    }\n+\n+    public SkinBone[] getSSkinBones() {\n+        return sskinBones;\n+    }\n+\n+//    public void setSkinBones(final Bone[] skinBones, final short[] skinBoneWeights) {\n+//        this.skinBones = skinBones;\n+//        this.skinBoneWeights = skinBoneWeights;\n+//    }\n+\n+    public void setSkinBones(final Bone[] skinBones, final short[] skinBoneWeights) {\n+//        this.skinBones = skinBones;\n+//        this.skinBoneWeights = skinBoneWeights;\n+\n+        if (this.sskinBones == null) {\n+            this.sskinBones = new SkinBone[4];\n+        }\n+        for (int i = 0; i < 4; i++) {\n+            if (this.sskinBones[i] == null) {\n+                this.sskinBones[i] = new SkinBone(skinBoneWeights[i], skinBones[i]);\n+            } else {\n+                this.sskinBones[i].set(skinBoneWeights[i], skinBones[i]);\n+            }\n+        }\n+    }\n+\n+    public void setSkinBone(final Bone skinBone, final short skinBoneWeight, int i) {\n+//        this.skinBones[i] = skinBone;\n+//        this.skinBoneWeights[i] = skinBoneWeight;\n+        if (this.sskinBones[i] == null) {\n+            this.sskinBones[i] = new SkinBone(skinBoneWeight, skinBone);\n+        } else {\n+            this.sskinBones[i].set(skinBoneWeight, skinBone);\n+        }\n     }\n \n+    public void setSkinBone(final Bone skinBone, int i) {\n+//        this.skinBones[i] = skinBone;\n+        if (this.sskinBones[i] == null) {\n+            this.sskinBones[i] = new SkinBone(skinBone);\n+        } else {\n+            this.sskinBones[i].setBone(skinBone);\n+        }\n+    }\n+\n+    public void setSkinBone(final short skinBoneWeight, int i) {\n+//        this.skinBoneWeights[i] = skinBoneWeight;\n+        if (this.sskinBones[i] == null) {\n+            this.sskinBones[i] = new SkinBone(skinBoneWeight);\n+        } else {\n+            this.sskinBones[i].setWeight(skinBoneWeight);\n+        }\n+    }\n+\n+//    public short[] getSkinBoneWeights() {\n+//        return skinBoneWeights;\n+//    }\n+\n     public short[] getSkinBoneWeights() {\n-        return skinBoneWeights;\n+        if (this.sskinBones == null) {\n+            return null;\n+        }\n+        short[] sw = new short[4];\n+        for (int i = 0; i < sskinBones.length; i++) {\n+            sw[i] = sskinBones[i].getWeight();\n+        }\n+        return sw;\n     }\n \n+//    public void setSkinBoneWeights(final short[] skinBoneWeights) {\n+//        this.skinBoneWeights = skinBoneWeights;\n+//    }\n+\n     public void setSkinBoneWeights(final short[] skinBoneWeights) {\n-        this.skinBoneWeights = skinBoneWeights;\n+//        this.skinBoneWeights = skinBoneWeights;\n+        if (this.sskinBones == null) {\n+            this.sskinBones = new SkinBone[4];\n+        }\n+        for (int i = 0; i < 4; i++) {\n+            if (this.sskinBones[i] == null) {\n+                this.sskinBones[i] = new SkinBone(skinBoneWeights[i]);\n+            } else {\n+                this.sskinBones[i].setWeight(skinBoneWeights[i]);\n+            }\n+        }\n     }\n \n     public float[] getTangent() {\n-        return tangent;\n+        return tangent.toFloatArray();\n     }\n \n     public void setTangent(final float[] tangent) {\n+        this.tangent = new Vec4(tangent);\n+    }\n+\n+    public void setTangent(Vec4 tangent) {\n         this.tangent = tangent;\n     }\n \n+    public Vec4 getTang() {\n+        return tangent;\n+    }\n+\n+    public void setTangent(Vec3 tangent, float w) {\n+        this.tangent = new Vec4(tangent, w);\n+    }\n+\n     public void setGeoset(final Geoset geoset) {\n         this.geoset = geoset;\n     }\n@@ -224,69 +386,70 @@ public Matrix getMatrixRef() {\n     }\n \n     @Override\n-    public void rotate(final double centerX, final double centerY, final double centerZ, final double radians,\n+    public Vec3 rotate(final double centerX, final double centerY, final double centerZ, final double radians,\n                        final byte firstXYZ, final byte secondXYZ) {\n         super.rotate(centerX, centerY, centerZ, radians, firstXYZ, secondXYZ);\n-        // TODO fix bad design, use interface or something instead of bizarre\n-        // override\n         normal.rotate(0, 0, 0, radians, firstXYZ, secondXYZ);\n         if (tangent != null) {\n-            rotateTangent(0, 0, 0, radians, firstXYZ, secondXYZ, tangent);\n-        }\n-    }\n-\n-    public static void rotateTangent(final double centerX, final double centerY, final double centerZ,\n-                                     final double radians, final byte firstXYZ, final byte secondXYZ, final float[] vertex) {\n-        final double x1 = getVertexCoord(firstXYZ, vertex);\n-        final double y1 = getVertexCoord(secondXYZ, vertex);\n-        final double cx = getCenter(centerX, centerY, centerZ, firstXYZ);// = coordinateSystem.geomX(centerX);\n-        final double dx = x1 - cx;\n-        final double cy = getCenter(centerX, centerY, centerZ, secondXYZ);// = coordinateSystem.geomY(centerY);\n-        final double dy = y1 - cy;\n-        final double r = Math.sqrt((dx * dx) + (dy * dy));\n-        double verAng = Math.acos(dx / r);\n-        if (dy < 0) {\n-            verAng = -verAng;\n-        }\n-        // if( getDimEditable(dim1) )\n-        double nextDim = (Math.cos(verAng + radians) * r) + cx;\n-        if (!Double.isNaN(nextDim)) {\n-            setVertexCoord(firstXYZ, vertex, (float) nextDim);\n+            tangent.set(tangent.getVec3().rotate(0, 0, 0, radians, firstXYZ, secondXYZ));\n         }\n-        // if( getDimEditable(dim2) )\n-        nextDim = (Math.sin(verAng + radians) * r) + cy;\n-        if (!Double.isNaN(nextDim)) {\n-            setVertexCoord(secondXYZ, vertex, (float) ((Math.sin(verAng + radians) * r) + cy));\n-        }\n-    }\n-\n-    private static double getCenter(double centerX, double centerY, double centerZ, byte secondXYZ) {\n-        return switch (secondXYZ) {\n-            case 0 -> centerX;\n-            case 1 -> centerY;\n-            case -1 -> -centerX;\n-            case -2 -> -centerY;\n-            case -3 -> -centerZ;\n-            case 2 -> centerZ;\n-            default -> centerZ;\n-        };\n+        return this;\n     }\n \n-    private static void setVertexCoord(byte firstXYZ, float[] vertex, float nextDim) {\n-        if (firstXYZ < 0) {\n-            firstXYZ = (byte) (-firstXYZ - 1);\n-            nextDim = -nextDim;\n+    @Override\n+    public Vec3 rotate(Vec3 center, final double radians,\n+                       final byte firstXYZ, final byte secondXYZ) {\n+        super.rotate(center, radians, firstXYZ, secondXYZ);\n+        normal.rotate(0, 0, 0, radians, firstXYZ, secondXYZ);\n+        if (tangent != null) {\n+//            rotateTangent(0, 0, 0, radians, firstXYZ, secondXYZ, tangent);\n+            tangent.set(tangent.getVec3().rotate(0, 0, 0, radians, firstXYZ, secondXYZ));\n         }\n-        vertex[firstXYZ] = nextDim;\n-    }\n-\n-    private static float getVertexCoord(byte firstXYZ, float[] vertex) {\n-        if(firstXYZ < 0) {\n-            firstXYZ = (byte)(-firstXYZ-1);\n-            return -vertex[firstXYZ];\n-        }\n-        return vertex[firstXYZ];\n-    }\n+        return this;\n+    }\n+\n+//    public static void rotateTangent(final double centerX, final double centerY, final double centerZ,\n+//                                     final double radians,\n+//                                     final byte firstXYZ, final byte secondXYZ,\n+//                                     final float[] vertex) {\n+//        final double x1 = getVertexCoord(firstXYZ, vertex);\n+//        final double y1 = getVertexCoord(secondXYZ, vertex);\n+//        final double cx = getCenter(centerX, centerY, centerZ, firstXYZ);// = coordinateSystem.geomX(centerX);\n+//        final double dx = x1 - cx;\n+//        final double cy = getCenter(centerX, centerY, centerZ, secondXYZ);// = coordinateSystem.geomY(centerY);\n+//        final double dy = y1 - cy;\n+//        final double r = Math.sqrt((dx * dx) + (dy * dy));\n+//        double verAng = Math.acos(dx / r);\n+//        if (dy < 0) {\n+//            verAng = -verAng;\n+//        }\n+//        // if( getDimEditable(dim1) )\n+//        double newFirstCoord = (Math.cos(verAng + radians) * r) + cx;\n+//        if (!Double.isNaN(newFirstCoord)) {\n+//            setVertexCoord(firstXYZ, vertex, (float) newFirstCoord);\n+//        }\n+//        // if( getDimEditable(dim2) )\n+//        double newSecondCoord = (Math.sin(verAng + radians) * r) + cy;\n+//        if (!Double.isNaN(newSecondCoord)) {\n+//            setVertexCoord(secondXYZ, vertex, (float) newSecondCoord);\n+//        }\n+//    }\n+//\n+//    private static void setVertexCoord(byte firstXYZ, float[] vertex, float nextDim) {\n+//        if (firstXYZ < 0) {\n+//            firstXYZ = (byte) (-firstXYZ - 1);\n+//            nextDim = -nextDim;\n+//        }\n+//        vertex[firstXYZ] = nextDim;\n+//    }\n+//\n+//    private static float getVertexCoord(byte firstXYZ, float[] vertex) {\n+//        if(firstXYZ < 0) {\n+//            firstXYZ = (byte)(-firstXYZ-1);\n+//            return -vertex[firstXYZ];\n+//        }\n+//        return vertex[firstXYZ];\n+//    }\n \n     public Vec3 createNormal() {\n         final Vec3 sum = new Vec3();\n@@ -309,27 +472,143 @@ public Vec3 createNormal(final List<GeosetVertex> matches) {\n             }\n         }\n \n-        sum.normalize();\n+        return sum.normalize();\n+    }\n \n-        return sum;\n+    public Vec3 createNormal(final List<GeosetVertex> matches, double maxAngle) {\n+        final Vec3 sum = new Vec3();\n+        Vec3 normal = createNormal();\n+        List<Vec3> uniqueNormals = new ArrayList<>();\n+        for (final GeosetVertex match : matches) {\n+            Vec3 matchNormal = match.createNormal();\n+            uniqueNormals.add(matchNormal);\n+        }\n+        uniqueNormals.stream().filter(n -> normal.degAngleTo(n) < maxAngle).forEach(sum::add);\n+\n+        return sum.normalize();\n     }\n \n+\n+    public Vec3 createNormalFromFaces(final List<GeosetVertex> matches, double maxAngle) {\n+        final Vec3 sum = new Vec3();\n+        Vec3 normal = createNormal();\n+        for (final GeosetVertex match : matches) {\n+            for (final Triangle triangle : match.triangles) {\n+                Vec3 matchNormal = triangle.getNormal().normalize();\n+                double angle = normal.degAngleTo(matchNormal);\n+                if (angle < maxAngle) {\n+                    sum.add(matchNormal);\n+                }\n+            }\n+        }\n+\n+        return sum.normalize();\n+    }\n+\n+//    public void rigBones(List<Bone> matrixBones) {\n+//        if (skinBones == null) {\n+//            clearBoneAttachments();\n+//            addBoneAttachments(matrixBones);\n+//        } else {\n+//            Arrays.fill(skinBones, null);\n+//            Arrays.fill(skinBoneWeights, (short) 0);\n+//            final int basicWeighting = 255 / matrixBones.size();\n+//            final int offset = 255 - (basicWeighting * matrixBones.size());\n+//            for (int i = 0; (i < matrixBones.size()) && (i < 4); i++) {\n+//                skinBones[i] = matrixBones.get(i);\n+//                skinBoneWeights[i] = (short) basicWeighting;\n+//                if (i == 0) {\n+//                    skinBoneWeights[i] += offset;\n+//                }\n+//            }\n+//        }\n+//    }\n+\n     public void rigBones(List<Bone> matrixBones) {\n-        if (skinBones == null) {\n+        if (sskinBones == null) {\n             clearBoneAttachments();\n             addBoneAttachments(matrixBones);\n         } else {\n-            Arrays.fill(skinBones, null);\n-            Arrays.fill(skinBoneWeights, (short) 0);\n-            final int basicWeighting = 255 / matrixBones.size();\n-            final int offset = 255 - (basicWeighting * matrixBones.size());\n-            for (int i = 0; (i < matrixBones.size()) && (i < 4); i++) {\n-                skinBones[i] = matrixBones.get(i);\n-                skinBoneWeights[i] = (short) basicWeighting;\n-                if (i == 0) {\n-                    skinBoneWeights[i] += offset;\n+//            Arrays.fill(skinBones, null);\n+//            Arrays.fill(skinBoneWeights, (short) 0);\n+\n+\n+            final int weight = 255 / matrixBones.size();\n+            final int offset = 255 - (weight * matrixBones.size());\n+            for (int i = 1; i < 4; i++) {\n+                if (i < matrixBones.size()) {\n+                    setSkinBone(matrixBones.get(i), (short) weight, i);\n+                } else {\n+                    setSkinBone((short) 0, i);\n                 }\n             }\n+            setSkinBone(matrixBones.get(0), (short) (weight + offset), 0);\n+        }\n+    }\n+\n+    public short[] getSkinBoneEntry() {\n+        short[] skinEntry = {0, 0, 0, 0, 0, 0, 0, 0};\n+\n+        for (int i = 0; i < sskinBones.length && i < 4; i++) {\n+            skinEntry[i] = sskinBones[i].weight;\n+            skinEntry[i + 4] = (short) sskinBones[i].getBoneId(geoset.getParentModel());\n+        }\n+        return skinEntry;\n+    }\n+\n+    public static class SkinBone {\n+        short weight;\n+        Bone bone;\n+\n+        SkinBone() {\n+        }\n+\n+        SkinBone(SkinBone skinBone) {\n+            this.weight = skinBone.weight;\n+            this.bone = skinBone.bone;\n+        }\n+\n+        SkinBone(short weight, Bone bone) {\n+            this.weight = weight;\n+            this.bone = bone;\n+        }\n+\n+        SkinBone(short weight) {\n+            this.weight = weight;\n+            this.bone = null;\n+        }\n+\n+        SkinBone(Bone bone) {\n+            this.weight = 0;\n+            this.bone = bone;\n+        }\n+\n+        public SkinBone set(short weight, Bone bone) {\n+            this.bone = bone;\n+            this.weight = weight;\n+            return this;\n+        }\n+\n+        public Bone getBone() {\n+            return bone;\n+        }\n+\n+        public SkinBone setBone(Bone bone) {\n+            this.bone = bone;\n+            return this;\n+        }\n+\n+        public short getWeight() {\n+            return weight;\n+        }\n+\n+        public SkinBone setWeight(short weight) {\n+            this.weight = weight;\n+            return this;\n+        }\n+\n+        int getBoneId(EditableModel model) {\n+            return model.getObjectId(bone);\n         }\n     }\n }"
  },
  {
    "sha": "eccc1af56f346031b6166ccfcbbac18a1bee4ac0",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/Helper.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Helper.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Helper.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/Helper.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,7 +1,7 @@\n package com.hiveworkshop.rms.editor.model;\n \n-import com.hiveworkshop.rms.parsers.mdlx.MdlxHelper;\n import com.hiveworkshop.rms.editor.model.visitor.IdObjectVisitor;\n+import com.hiveworkshop.rms.parsers.mdlx.MdlxHelper;\n \n /**\n  * Write a description of class Helper here.\n@@ -30,16 +30,15 @@ public Helper(final MdlxHelper helper) {\n \t\tloadObject(helper);\n \t}\n \n-\tpublic MdlxHelper toMdlxHelper() {\n+\tpublic MdlxHelper toMdlxHelper(EditableModel model) {\n \t\tfinal MdlxHelper helper = new MdlxHelper();\n \n-\t\tobjectToMdlx(helper);\n+\t\tobjectToMdlx(helper, model);\n \n \t\treturn helper;\n \t}\n \n-\t// printTo is already written as a part of bone; these two things are\n-\t// stupidly the same\n+\t// printTo is already written as a part of bone; these two things are stupidly the same\n \t@Override\n \tpublic Helper copy() {\n \t\treturn new Helper(this);"
  },
  {
    "sha": "00aae6dbb118f443f0ca58bf5e9e7fa47ebdb571",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/IdObject.java",
    "status": "modified",
    "additions": 38,
    "deletions": 26,
    "changes": 64,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/IdObject.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/IdObject.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/IdObject.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,13 +1,13 @@\n package com.hiveworkshop.rms.editor.model;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-\n import com.hiveworkshop.rms.editor.model.visitor.IdObjectVisitor;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxGenericObject;\n import com.hiveworkshop.rms.ui.application.edit.mesh.viewport.axes.CoordinateSystem;\n import com.hiveworkshop.rms.util.Vec3;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n /**\n  * Write a description of class ObjectId here.\n  *\n@@ -76,11 +76,11 @@ public void loadObject(final MdlxGenericObject object) {\n \t\tloadTimelines(object);\n \t}\n \n-\tpublic void objectToMdlx(final MdlxGenericObject object) {\n+\tpublic void objectToMdlx(final MdlxGenericObject object, EditableModel model) {\n \t\tobject.name = getName();\n-\t\tobject.objectId = getObjectId();\n-\t\tobject.parentId = getParentId();\n-\t\t\n+\t\tobject.objectId = getObjectId(model);\n+\t\tobject.parentId = getParentId(model);\n+\n \t\tif (dontInheritTranslation) {\n \t\t\tobject.flags |= 0x1;\n \t\t}\n@@ -158,8 +158,6 @@ public void copyObject(final IdObject other) {\n \tpublic abstract double getClickRadius(CoordinateSystem coordinateSystem);\n \n \t/**\n-\t *\n-\t *\n \t * @return The Object ID\n \t * @deprecated Note that all object IDs are deleted and regenerated at save\n \t */\n@@ -168,34 +166,48 @@ public int getObjectId() {\n \t\treturn objectId;\n \t}\n \n-\t/**\n-\t * @param objectId New object ID value\n-\t * @deprecated Note that all object IDs are deleted and regenerated at save\n-\t */\n-\t@Deprecated\n-\tpublic void setObjectId(final int objectId) {\n-\t\tthis.objectId = objectId;\n+\tpublic int getObjectId(EditableModel model) {\n+\t\treturn model.getObjectId(this);\n \t}\n \n+//\t/**\n+//\t * @param objectId New object ID value\n+//\t * @deprecated Note that all object IDs are deleted and regenerated at save\n+//\t */\n+//\t@Deprecated\n+//\tpublic void setObjectId(final int objectId) {\n+//\t\tthis.objectId = objectId;\n+//\t}\n+\n \t/**\n \t * @return Parent ID\n \t * @deprecated Note that all object IDs are deleted and regenerated at save\n \t */\n \t@Deprecated\n \tpublic int getParentId() {\n-\t\treturn parentId;\n+\t\treturn parent.getObjectId();\n \t}\n \n-\t/**\n-\t * @param parentId new Parent ID\n-\t * @deprecated IF UNSURE, YOU SHOULD USE setParent(), note that all object IDs\n-\t *             are deleted and regenerated at save\n-\t */\n-\t@Deprecated\n-\tpublic void setParentId(final int parentId) {\n-\t\tthis.parentId = parentId;\n+\tpublic int getParentId(EditableModel model) {\n+\t\tif (parent == null) {\n+//\t\t\tSystem.out.println(\"trying to get parent for bone: \" + getName());\n+//\t\t\tSystem.out.println(\"parent: \" + parent);\n+//\t\t\tSystem.out.println(\"_____________________________________________________\");\n+\t\t\treturn -1;\n+\t\t}\n+\t\treturn model.getObjectId(parent);\n \t}\n \n+//\t/**\n+//\t * @param parentId new Parent ID\n+//\t * @deprecated IF UNSURE, YOU SHOULD USE setParent(), note that all object IDs\n+//\t *             are deleted and regenerated at save\n+//\t */\n+//\t@Deprecated\n+//\tpublic void setParentId(final int parentId) {\n+//\t\tthis.parentId = parentId;\n+//\t}\n+\n \tpublic void setDontInheritTranslation(final boolean dontInheritTranslation) {\n \t\tthis.dontInheritTranslation = dontInheritTranslation;\n \t}\n@@ -257,7 +269,7 @@ public Vec3 getPivotPoint() {\n \t\treturn pivotPoint;\n \t}\n \n-\t@Override\n+\t//\t@Override\n \tpublic IdObject getParent() {\n \t\treturn parent;\n \t}"
  },
  {
    "sha": "a8c76e4349ab89ae5589b24c9799fd6bc8f860b1",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/Layer.java",
    "status": "modified",
    "additions": 14,
    "deletions": 12,
    "changes": 26,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Layer.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Layer.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/Layer.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,5 +1,7 @@\n package com.hiveworkshop.rms.editor.model;\n \n+import com.hiveworkshop.rms.editor.model.animflag.AnimFlag;\n+import com.hiveworkshop.rms.editor.model.animflag.IntAnimFlag;\n import com.hiveworkshop.rms.editor.model.util.ModelUtils;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxLayer;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxLayer.FilterMode;\n@@ -213,8 +215,8 @@ public Layer(final Layer other) {\n \t\tnoDepthSet = other.noDepthSet;\n \t\tunlit = other.unlit;\n \n-\t\tfor (AnimFlag animFlag : other.getAnimFlags()) {\n-\t\t\tadd(new AnimFlag(animFlag));\n+\t\tfor (AnimFlag<?> animFlag : other.getAnimFlags()) {\n+\t\t\tadd(AnimFlag.createFromAnimFlag(animFlag));\n \t\t}\n \n \t\ttextures = new ArrayList<>();\n@@ -333,7 +335,7 @@ public Bitmap firstTexture() {\n \n \tpublic Bitmap getRenderTexture(final AnimatedRenderEnvironment animatedRenderEnvironment,\n \t\t\tfinal EditableModel model) {\n-\t\tfinal AnimFlag textureFlag = find(MdlUtils.TOKEN_TEXTURE_ID);\n+\t\tfinal IntAnimFlag textureFlag = (IntAnimFlag) find(MdlUtils.TOKEN_TEXTURE_ID);\n \t\tif ((textureFlag != null) && (animatedRenderEnvironment != null)) {\n \t\t\tif (animatedRenderEnvironment.getCurrentAnimation() == null) {\n \t\t\t\tif (textures.size() > 0) {\n@@ -342,7 +344,7 @@ public Bitmap getRenderTexture(final AnimatedRenderEnvironment animatedRenderEnv\n \t\t\t\t\treturn texture;\n \t\t\t\t}\n \t\t\t}\n-\t\t\tfinal Integer textureIdAtTime = (Integer) textureFlag.interpolateAt(animatedRenderEnvironment);\n+\t\t\tfinal Integer textureIdAtTime = textureFlag.interpolateAt(animatedRenderEnvironment);\n \t\t\tif (textureIdAtTime >= model.getTextures().size()) {\n \t\t\t\treturn texture;\n \t\t\t}\n@@ -371,9 +373,9 @@ public void setTextureAnim(final List<TextureAnim> list) {\n \n \tpublic void buildTextureList(final EditableModel mdlr) {\n \t\ttextures = new ArrayList<>();\n-\t\tfinal AnimFlag txFlag = find(MdlUtils.TOKEN_TEXTURE_ID);\n-\t\tfor (int i = 0; i < txFlag.values.size(); i++) {\n-\t\t\tfinal int txId = (Integer) txFlag.values.get(i);\n+\t\tfinal IntAnimFlag txFlag = (IntAnimFlag) find(MdlUtils.TOKEN_TEXTURE_ID);\n+\t\tfor (int i = 0; i < txFlag.getValues().size(); i++) {\n+\t\t\tfinal int txId = txFlag.getValues().get(i);\n \t\t\tfinal Bitmap texture2 = mdlr.getTexture(txId);\n \t\t\ttextures.add(texture2);\n \t\t\tridiculouslyWrongTextureIDToTexture.put(txId, texture2);\n@@ -384,12 +386,12 @@ public void updateIds(final EditableModel mdlr) {\n \t\ttextureId = mdlr.getTextureId(texture);\n \t\tTVertexAnimId = mdlr.getTextureAnimId(textureAnim);\n \t\tif (textures != null) {\n-\t\t\tfinal AnimFlag txFlag = find(MdlUtils.TOKEN_TEXTURE_ID);\n-\t\t\tfor (int i = 0; i < txFlag.values.size(); i++) {\n+\t\t\tfinal IntAnimFlag txFlag = (IntAnimFlag) find(MdlUtils.TOKEN_TEXTURE_ID);\n+\t\t\tfor (int i = 0; i < txFlag.getValues().size(); i++) {\n \t\t\t\tfinal Bitmap textureFoundFromDirtyId = ridiculouslyWrongTextureIDToTexture\n-\t\t\t\t\t\t.get(txFlag.values.get(i));\n+\t\t\t\t\t\t.get(txFlag.getValues().get(i));\n \t\t\t\tfinal int newerTextureId = mdlr.getTextureId(textureFoundFromDirtyId);\n-\t\t\t\ttxFlag.values.set(i, newerTextureId);\n+\t\t\t\ttxFlag.getValues().set(i, newerTextureId);\n \t\t\t\tridiculouslyWrongTextureIDToTexture.put(newerTextureId, textureFoundFromDirtyId);\n \t\t\t}\n \t\t}\n@@ -402,7 +404,7 @@ public void updateRefs(final EditableModel mdlr) {\n \t\tif ((TVertexAnimId >= 0) && (TVertexAnimId < mdlr.texAnims.size())) {\n \t\t\ttextureAnim = mdlr.texAnims.get(TVertexAnimId);\n \t\t}\n-\t\tfinal AnimFlag txFlag = find(MdlUtils.TOKEN_TEXTURE_ID);\n+\t\tfinal IntAnimFlag txFlag = (IntAnimFlag) find(MdlUtils.TOKEN_TEXTURE_ID);\n \t\tif (txFlag != null) {\n \t\t\tbuildTextureList(mdlr);\n \t\t}"
  },
  {
    "sha": "e9effed2826bcf3fb533f6e738dd442003781e24",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/Light.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Light.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Light.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/Light.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -58,19 +58,19 @@ public Light(final MdlxLight light) {\n \t\tsetAmbIntensity(light.ambientIntensity);\n \t}\n \n-\tpublic MdlxLight toMdlx() {\n+\tpublic MdlxLight toMdlx(EditableModel model) {\n \t\tfinal MdlxLight light = new MdlxLight();\n \n-\t\tobjectToMdlx(light);\n+\t\tobjectToMdlx(light, model);\n \n \t\tlight.type = type;\n \t\tlight.attenuation[0] = getAttenuationStart();\n \t\tlight.attenuation[1] = getAttenuationEnd();\n \t\tlight.color = ModelUtils.flipRGBtoBGR(getStaticColor().toFloatArray());\n-\t\tlight.intensity = (float)getIntensity();\n+\t\tlight.intensity = (float) getIntensity();\n \t\tlight.ambientColor = ModelUtils.flipRGBtoBGR(getStaticAmbColor().toFloatArray());\n-\t\tlight.ambientIntensity = (float)getAmbIntensity();\n-\t\t\n+\t\tlight.ambientIntensity = (float) getAmbIntensity();\n+\n \t\treturn light;\n \t}\n "
  },
  {
    "sha": "288bc224e0621a3381a3c75788b9bdd572745252",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/Material.java",
    "status": "modified",
    "additions": 118,
    "deletions": 2,
    "changes": 120,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Material.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Material.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/Material.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,5 +1,6 @@\n package com.hiveworkshop.rms.editor.model;\n \n+import com.hiveworkshop.rms.editor.model.animflag.AnimFlag;\n import com.hiveworkshop.rms.editor.model.util.ModelUtils;\n import com.hiveworkshop.rms.filesystem.sources.DataSource;\n import com.hiveworkshop.rms.parsers.blp.BLPHandler;\n@@ -12,6 +13,7 @@\n import java.awt.image.BufferedImage;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.stream.Collectors;\n \n /**\n  * A class for MDL materials.\n@@ -87,7 +89,7 @@ public Material(final MdlxMaterial material, final EditableModel editableModel)\n \t}\n \n \tpublic Material(final AiMaterial material, final EditableModel model) {\n-\t\tSystem.out.println(\"IMPLEMENT Material(AiMaterial)\");\n+//\t\tSystem.out.println(\"IMPLEMENT Material(AiMaterial)\");\n \n \t\tfinal Layer diffuseLayer = new Layer();\n \n@@ -135,7 +137,7 @@ public static String getTeamColorNumberString() {\n \t\treturn string;\n \t}\n \n-\tpublic String getName() {\n+\tpublic String getName2() {\n \t\tStringBuilder name = new StringBuilder();\n \t\tif (layers.size() > 0) {\n \t\t\tif (SHADER_HD_DEFAULT_UNIT.equals(shaderString)) {\n@@ -171,6 +173,49 @@ public String getName() {\n \t\treturn name.toString();\n \t}\n \n+\tpublic String getName() {\n+\t\tStringBuilder name = new StringBuilder();\n+\t\tString over = \" /\\u21E9 \"; //\\u226F ≯,\\u21B8 ↸, \\u21B8↸, /\\u02C5 /˅, /\\u21E9 /⇩, /\\u23F7 /⏷, /\\u25BC /▼, /\\u2304 /⌄, \\u2215\\u2304\n+//\t\t\"\\u226F ≯,\\u21B8 ↸, \\u21B8↸, /\\u02C5 /˅, /\\u21E9 /⇩, /\\u23F7 /⏷, /\\u25BC /▼, /\\u2304 /⌄, \\u2215\\u2304 Pessant /↘ Team color\"\n+\t\tString alpha = \"\\u25A8\"; //\\u2237 ∷, \\u25A8▨\n+\t\tString animated = \" \\u23E9\"; //\\u23EF ⏯, \\u21DD⇝, \\u23ED ⏭, \\u23F5\\u23F8⏵⏸, \\u25B6\\u23F8▶⏸, \\u23E9⏩, \\u23F2⏲\n+\t\tString texture = \"\\u25A3\"; //\\u22A2 ⊢, 22A1⊡, \\u25A3 ▣\n+\t\tif (layers.size() > 0) {\n+\t\t\tif (SHADER_HD_DEFAULT_UNIT.equals(shaderString)) {\n+\t\t\t\ttry {\n+\t\t\t\t\tname.append(over).append(layers.get(0).texture.getName());\n+\t\t\t\t\tif (layers.get(0).find(\"Alpha\") != null) {\n+\t\t\t\t\t\tname.append(animated + alpha);\n+\t\t\t\t\t}\n+\t\t\t\t} catch (final NullPointerException e) {\n+//\t\t\t\t\tname.append(over).append(animated + texture).append(\"animated texture layers (\").append(layers.get(0).textures.get(0).getName()).append(\")\");\n+\t\t\t\t\tname.append(over).append(animated + texture).append(\"(\").append(layers.get(0).textures.get(0).getName()).append(\")\");\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif (layers.get(layers.size() - 1).texture != null) {\n+\t\t\t\t\tname = new StringBuilder(layers.get(layers.size() - 1).texture.getName());\n+\t\t\t\t\tif (layers.get(layers.size() - 1).find(\"Alpha\") != null) {\n+\t\t\t\t\t\tname.append(animated + alpha);\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\tname = new StringBuilder(animated + texture);\n+\t\t\t\t}\n+\t\t\t\tfor (int i = layers.size() - 2; i >= 0; i--) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tname.append(over).append(layers.get(i).texture.getName());\n+\t\t\t\t\t\tif (layers.get(i).find(\"Alpha\") != null) {\n+\t\t\t\t\t\t\tname.append(animated + alpha);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} catch (final NullPointerException e) {\n+//\t\t\t\t\t\tname.append(over).append(animated + texture).append(\"animated texture layers (\").append(layers.get(i).textures.get(0).getName()).append(\")\");\n+\t\t\t\t\t\tname.append(over).append(animated + texture).append(\"(\").append(layers.get(i).textures.get(0).getName()).append(\")\");\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn name.toString();\n+\t}\n+\n \tpublic Layer firstLayer() {\n \t\tif (layers.size() > 0) {\n \t\t\treturn layers.get(layers.size() - 1);\n@@ -214,6 +259,7 @@ public void setPriorityPlane(final int priorityPlane) {\n \n \t@Override\n \tpublic boolean equals(final Object obj) {\n+//\t\tSystem.out.println(\"equals\");\n \t\tif (this == obj) {\n \t\t\treturn true;\n \t\t}\n@@ -279,6 +325,7 @@ public void setTwoSided(final boolean twoSided) {\n \t}\n \n \tpublic BufferedImage getBufferedImage(final DataSource workingDirectory) {\n+//\t\tSystem.out.println(\"getBufferedImage\");\n \t\tBufferedImage theImage = null;\n \t\tif (SHADER_HD_DEFAULT_UNIT.equals(shaderString) && (layers.size() > 0)) {\n \t\t\tfinal Layer firstLayer = layers.get(0);\n@@ -320,6 +367,7 @@ public BufferedImage getBufferedImage(final DataSource workingDirectory) {\n \t * Intended to handle resolving ReplaceableIds into paths\n \t */\n \tprivate String getRenderableTexturePath(final Bitmap tex) {\n+//\t\tSystem.out.println(\"getRenderableTexturePath\");\n \t\tif (tex == null) {\n \t\t\treturn \"Textures\\\\white.blp\";\n \t\t}\n@@ -358,4 +406,72 @@ public static BufferedImage mergeImageScaled(final Image source, final Image ove\n \n \t\treturn combined;\n \t}\n+\n+\tpublic void makeHD() {\n+\t\tsetShaderString(\"Shader_HD_DefaultUnit\");\n+\t\tList<Layer> tempList = new ArrayList<>(getLayers());\n+\t\tif (getLayers().size() > 1) {\n+\t\t\tlayers.removeAll(tempList);\n+//\t\t\tList<Layer> temp2 = tempList.stream().filter(l -> !l.getTextureBitmap().getName().equals(\"Team Color\")).collect(Collectors.toList());\n+\t\t\tList<Layer> temp2 = tempList.stream().filter(l -> !l.getTextureBitmap().getPath().equals(\"\")).collect(Collectors.toList());\n+\t\t\tif (temp2.isEmpty()) {\n+\t\t\t\tlayers.add(tempList.get(0));\n+\t\t\t} else {\n+\t\t\t\tlayers.add(temp2.get(0));\n+\t\t\t}\n+\t\t} else if (getLayers().size() == 0) {\n+\t\t\tfinal Bitmap white = new Bitmap(\"Textures\\\\White.dds\");\n+\t\t\twhite.setWrapHeight(true);\n+\t\t\twhite.setWrapWidth(true);\n+\t\t\tgetLayers().add(new Layer(\"None\", white));\n+\t\t}\n+\t\tif (getLayers().size() == 0) {\n+\t\t\tfinal Bitmap white = new Bitmap(\"Textures\\\\White.dds\");\n+\t\t\twhite.setWrapHeight(true);\n+\t\t\twhite.setWrapWidth(true);\n+\t\t\tgetLayers().add(new Layer(\"None\", white));\n+\t\t}\n+\t\tfinal Bitmap normTex = new Bitmap(\"ReplaceableTextures\\\\TeamColor\\\\TeamColor09.dds\");\n+\t\tnormTex.setWrapHeight(true);\n+\t\tnormTex.setWrapWidth(true);\n+\t\tgetLayers().add(1, new Layer(\"None\", normTex));\n+\t\tfinal Bitmap ormTex = new Bitmap(\"ReplaceableTextures\\\\TeamColor\\\\TeamColor18.dds\");\n+\t\tormTex.setWrapHeight(true);\n+\t\tormTex.setWrapWidth(true);\n+\t\tgetLayers().add(2, new Layer(\"None\", ormTex));\n+\t\tfinal Bitmap black32 = new Bitmap(\"Textures\\\\Black32.dds\");\n+\t\tblack32.setWrapHeight(true);\n+\t\tblack32.setWrapWidth(true);\n+\t\tgetLayers().add(3, new Layer(\"None\", black32));\n+\t\tgetLayers().add(4, new Layer(\"None\", new Bitmap(\"\", 1)));\n+\t\tfinal Bitmap envTex = new Bitmap(\"ReplaceableTextures\\\\EnvironmentMap.dds\");\n+\t\tenvTex.setWrapHeight(true);\n+\t\tenvTex.setWrapWidth(true);\n+\t\tgetLayers().add(5, new Layer(\"None\", envTex));\n+\t\tfor (final Layer l : getLayers()) {\n+\t\t\tl.setEmissive(1.0);\n+\t\t}\n+\t}\n+\n+\tpublic void makeSD() {\n+\t\tif (getShaderString() != null) {\n+\t\t\tsetShaderString(null);\n+\t\t\tfinal Layer layerZero = getLayers().get(0);\n+\t\t\tgetLayers().clear();\n+\t\t\tgetLayers().add(layerZero);\n+\t\t\tif (getTwoSided()) {\n+\t\t\t\tsetTwoSided(false);\n+\t\t\t\tlayerZero.setTwoSided(true);\n+\t\t\t}\n+\t\t}\n+\t\tfor (final Layer layer : getLayers()) {\n+\t\t\tif (!Double.isNaN(layer.getEmissive())) {\n+\t\t\t\tlayer.setEmissive(Double.NaN);\n+\t\t\t}\n+\t\t\tfinal AnimFlag<?> flag = layer.find(\"Emissive\");\n+\t\t\tif (flag != null) {\n+\t\t\t\tlayer.remove(flag);\n+\t\t\t}\n+\t\t}\n+\t}\n }"
  },
  {
    "sha": "20343c037433aa745b4d9ea1161b29ae3a267d9c",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/Matrix.java",
    "status": "modified",
    "additions": 48,
    "deletions": 47,
    "changes": 95,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Matrix.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Matrix.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/Matrix.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -22,6 +22,17 @@ public Matrix(final int id) {\n \t\tm_boneIds.add(id);\n \t}\n \n+\tpublic Matrix(final List<Bone> newBones) {\n+\t\tbones = new ArrayList<>(newBones);\n+\t}\n+\n+\tpublic Matrix(final int[] boneIds) {\n+\t\tm_boneIds = new ArrayList<>();\n+\t\tfor (int boneId : boneIds) {\n+\t\t\tm_boneIds.add(boneId);\n+\t\t}\n+\t}\n+\n \tpublic String getName() {\n \t\tStringBuilder out = new StringBuilder();\n \t\tif (bones != null) {\n@@ -49,30 +60,34 @@ public String getName() {\n \tlong lastPopupTimeHack = 0;\n \n \tpublic void updateIds(final EditableModel mdlr) {\n-\t\tfinal int sz1 = bones.size();\n+\t\tmdlr.sortIdObjects();\n \t\tif (m_boneIds == null) {\n \t\t\tm_boneIds = new ArrayList<>();\n \t\t} else {\n \t\t\tm_boneIds.clear();\n \t\t}\n-        for (Bone bone : bones) {\n-            final int newId = mdlr.getObjectId(bone);\n-            if (newId >= 0) {\n-                m_boneIds.add(newId);\n-            } else {\n-                new Exception(\"Matrix error\").printStackTrace();\n-                if ((System.currentTimeMillis() - lastPopupTimeHack) > 2000) {\n-                    JOptionPane.showMessageDialog(null,\n-                            \"Error: A matrix's bone reference was missing in the model!\\nDid you move geometry between models and forget to update bones?\");\n-                    lastPopupTimeHack = System.currentTimeMillis();\n-                }\n-            }\n-        }\n-\t\tif ((m_boneIds.size() < sz1) || ((sz1 != 0) && (m_boneIds.size() == 0))) {\n+\t\tList<Bone> bonesToRemove = new ArrayList<>();\n+\t\tfor (Bone bone : bones) {\n+\t\t\tfinal int newId = mdlr.getObjectId(bone);\n+//\t\t\tSystem.out.println(\"new id: \" + newId + \" for bone: \" + bone.getName());\n+\t\t\tif (newId >= 0) {\n+\t\t\t\tm_boneIds.add(newId);\n+\t\t\t} else {\n+\t\t\t\tbonesToRemove.add(bone);\n+\t\t\t\tnew Exception(\"Matrix error\").printStackTrace();\n+\t\t\t\tif ((System.currentTimeMillis() - lastPopupTimeHack) > 2000) {\n+//\t\t\t\t\tJOptionPane.showMessageDialog(null, \"Error: A matrix's bone reference was missing in the model!\" + \"\\nDid you move geometry between models and forget to update bones?\");\n+\t\t\t\t\tSystem.out.println(\"Error: A matrix's bone reference was missing in the model!\" + \"\\nDid you move geometry between models and forget to update bones?\");\n+\t\t\t\t\tlastPopupTimeHack = System.currentTimeMillis();\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\tif (((bones.size() != 0) && (m_boneIds.size() == 0)) || (m_boneIds.size() < bones.size())) {\n+\t\t\tbones.removeAll(bonesToRemove);\n \t\t\tnew Exception(\"Matrix error\").printStackTrace();\n \t\t\tif ((System.currentTimeMillis() - lastPopupTimeHack) > 2000) {\n-\t\t\t\tJOptionPane.showMessageDialog(null, \"Error: bad sizes in matrix (\" + (sz1 - m_boneIds.size())\n-\t\t\t\t\t\t+ \" as difference, should be same size)\");\n+\t\t\t\tJOptionPane.showMessageDialog(null, \"Error: bad sizes in matrix (\" + (bones.size() - m_boneIds.size()) + \" as difference, should be same size)\\n Bad bones was removed from the matrix.\");\n+\t\t\t\tSystem.out.println(\"Error: bad sizes in matrix (\" + (bones.size() - m_boneIds.size()) + \" as difference, should be same size)\");\n \t\t\t\tlastPopupTimeHack = System.currentTimeMillis();\n \t\t\t}\n \t\t}\n@@ -85,30 +100,14 @@ public void updateBones(final EditableModel mdlr) {\n \t\t\tbones.clear();\n \t\t}\n         for (Integer m_boneId : m_boneIds) {\n-            final Bone b = mdlr.getBone(m_boneId);\n-            // if( b.getClass() == Helper.class )\n-            // {\n-            // JOptionPane.showMessageDialog(null,\"Error: Holy fo shizzle my\n-            // grizzle! There's geometry attached to Helper \"+b.getName()+\" and\n-            // that is very bad!\");\n-            // }\n-            if (b != null) {\n-                bones.add(b);\n-            } else {\n+\t        final Bone b = mdlr.getBone(m_boneId);\n+\t        // if( b.getClass() == Helper.class ) { JOptionPane.showMessageDialog(null,\"Error: Holy fo shizzle my grizzle! There's geometry attached to Helper \"+b.getName()+\" and that is very bad!\"); }\n+\t        if (b != null) {\n+\t\t        bones.add(b);\n+\t        } else {\n //\t\t\t\tJOptionPane.showMessageDialog(null, \"Error: A matrix's bone id was not referencing a real bone!\");\n-                System.err.println(\"Error: A matrix's bone id was not referencing a real bone! \" + m_boneId);\n-            }\n-        }\n-\t}\n-\n-\tpublic Matrix(final List<Bone> newBones) {\n-\t\tbones = new ArrayList<>(newBones);\n-\t}\n-\n-\tpublic Matrix(final int[] boneIds) {\n-\t\tm_boneIds = new ArrayList<>();\n-        for (int boneId : boneIds) {\n-            m_boneIds.add(boneId);\n+\t\t        System.err.println(\"Error: A matrix's bone id was not referencing a real bone! \" + m_boneId);\n+\t        }\n         }\n \t}\n \n@@ -124,10 +123,13 @@ public int getBoneId(final int index) {\n \t\treturn m_boneIds.get(index);\n \t}\n \n+\tpublic int getBoneId(final int index, EditableModel model) {\n+\t\treturn model.getObjectId(bones.get(index));\n+\t}\n+\n \tpublic int size() {\n-\t\tif ((m_boneIds != null) && (m_boneIds.size() > 0)) {\n-\t\t\treturn m_boneIds.size();\n-\t\t} else if ((bones != null) && (bones.size() > 0)) {\n+//\t\tif ((m_boneIds != null) && (m_boneIds.size() > 0)) { return m_boneIds.size(); } else\n+\t\tif ((bones != null) && (bones.size() > 0)) {\n \t\t\treturn bones.size();\n \t\t}\n \t\t// JOptionPane.showMessageDialog(null,\"Warning: A matrix with no contents was used!\");\n@@ -139,13 +141,12 @@ public boolean equals(final Matrix other) {\n \t\tif (other.size() != size()) {\n \t\t\treturn false;\n \t\t}\n-\t\tboolean same = true;\n-\t\tfor (int i = 0; (i < size()) && same; i++) {\n+\t\tfor (int i = 0; i < size(); i++) {\n \t\t\tif (bones.get(i) != other.bones.get(i)) {\n-\t\t\t\tsame = false;\n+\t\t\t\treturn false;\n \t\t\t}\n \t\t}\n-\t\treturn same;\n+\t\treturn true;\n \t}\n \n \tpublic List<Bone> getBones() {"
  },
  {
    "sha": "72e69a93acf005cd2b04eb02840785dcb15f9900",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitter.java",
    "status": "modified",
    "additions": 9,
    "deletions": 9,
    "changes": 18,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitter.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitter.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitter.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -3,8 +3,8 @@\n import com.hiveworkshop.rms.editor.model.visitor.IdObjectVisitor;\n import com.hiveworkshop.rms.editor.render3d.EmitterIdObject;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxParticleEmitter;\n-import com.hiveworkshop.rms.ui.application.viewer.AnimatedRenderEnvironment;\n import com.hiveworkshop.rms.ui.application.edit.mesh.viewport.axes.CoordinateSystem;\n+import com.hiveworkshop.rms.ui.application.viewer.AnimatedRenderEnvironment;\n \n /**\n  * ParticleEmitter2 class, these are the things most people would think of as a\n@@ -68,17 +68,17 @@ public ParticleEmitter(final MdlxParticleEmitter emitter) {\n \t\t}\n \t}\n \n-\tpublic MdlxParticleEmitter toMdlx() {\n+\tpublic MdlxParticleEmitter toMdlx(EditableModel model) {\n \t\tfinal MdlxParticleEmitter emitter = new MdlxParticleEmitter();\n \n-\t\tobjectToMdlx(emitter);\n+\t\tobjectToMdlx(emitter, model);\n \n-\t\temitter.emissionRate = (float)getEmissionRate();\n-\t\temitter.gravity = (float)getGravity();\n-\t\temitter.speed = (float)getInitVelocity();\n-\t\temitter.latitude = (float)getLatitude();\n-\t\temitter.lifeSpan = (float)getLifeSpan();\n-\t\temitter.longitude = (float)getLongitude();\n+\t\temitter.emissionRate = (float) getEmissionRate();\n+\t\temitter.gravity = (float) getGravity();\n+\t\temitter.speed = (float) getInitVelocity();\n+\t\temitter.latitude = (float) getLatitude();\n+\t\temitter.lifeSpan = (float) getLifeSpan();\n+\t\temitter.longitude = (float) getLongitude();\n \t\temitter.path = getPath();\n \n \t\tif (isMDLEmitter()) {"
  },
  {
    "sha": "b0e653c72db03beff640cac1e5539894c00f1a9b",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitter2.java",
    "status": "modified",
    "additions": 15,
    "deletions": 15,
    "changes": 30,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitter2.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitter2.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitter2.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -174,13 +174,13 @@ public ParticleEmitter2(final MdlxParticleEmitter2 emitter) {\n \t\t}\n \n \t\tsetPriorityPlane(emitter.priorityPlane);\n-\t\tsetReplaceableId((int)emitter.replaceableId);\n+\t\tsetReplaceableId((int) emitter.replaceableId);\n \t}\n \n-\tpublic MdlxParticleEmitter2 toMdlx() {\n+\tpublic MdlxParticleEmitter2 toMdlx(EditableModel model) {\n \t\tfinal MdlxParticleEmitter2 emitter = new MdlxParticleEmitter2();\n-\t\n-\t\tobjectToMdlx(emitter);\n+\n+\t\tobjectToMdlx(emitter, model);\n \n \t\tif (unshaded) {\n \t\t\temitter.flags |= 0x8000;\n@@ -216,20 +216,20 @@ public MdlxParticleEmitter2 toMdlx() {\n \t\temitter.speed = (float)getSpeed();\n \t\temitter.variation = (float)getVariation();\n \t\temitter.latitude = (float)getLatitude();\n-\t\temitter.gravity = (float)getGravity();\n-\t\temitter.lifeSpan = (float)getLifeSpan();\n-\t\temitter.emissionRate = (float)getEmissionRate();\n-\t\temitter.length = (float)getLength();\n-\t\temitter.width = (float)getWidth();\n+\t\temitter.gravity = (float) getGravity();\n+\t\temitter.lifeSpan = (float) getLifeSpan();\n+\t\temitter.emissionRate = (float) getEmissionRate();\n+\t\temitter.length = (float) getLength();\n+\t\temitter.width = (float) getWidth();\n \t\temitter.rows = getRows();\n \t\temitter.columns = getCols();\n-\t\temitter.tailLength = (float)getTailLength();\n-\t\temitter.timeMiddle = (float)getTime();\n+\t\temitter.tailLength = (float) getTailLength();\n+\t\temitter.timeMiddle = (float) getTime();\n+\n+\t\temitter.segmentColors[0] = ModelUtils.flipRGBtoBGR(getSegmentColor(0).toFloatArray());\n+\t\temitter.segmentColors[1] = ModelUtils.flipRGBtoBGR(getSegmentColor(1).toFloatArray());\n+\t\temitter.segmentColors[2] = ModelUtils.flipRGBtoBGR(getSegmentColor(2).toFloatArray());\n \n-\t\temitter.segmentColors[0] = getSegmentColor(0).toFloatArray();\n-\t\temitter.segmentColors[1] = getSegmentColor(1).toFloatArray();\n-\t\temitter.segmentColors[2] = getSegmentColor(2).toFloatArray();\n-\t\t\n \t\temitter.segmentAlphas = getAlpha().toShortArray();\n \t\temitter.segmentScaling = getParticleScaling().toFloatArray();\n "
  },
  {
    "sha": "23bea572c0154619d6199374381cc6d44c08604e",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitterPopcorn.java",
    "status": "modified",
    "additions": 74,
    "deletions": 3,
    "changes": 77,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitterPopcorn.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitterPopcorn.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/ParticleEmitterPopcorn.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -7,6 +7,8 @@\n import com.hiveworkshop.rms.ui.application.viewer.AnimatedRenderEnvironment;\n import com.hiveworkshop.rms.util.Vec3;\n \n+import java.util.*;\n+\n /**\n  * Popcorn FX is what I am calling the CORN chunk, somebody said that's probably\n  * what they represent. 2020-08: Changing the name to ParticleEmitterPopcorn to\n@@ -22,6 +24,7 @@\n \tfloat lifeSpan = 0;\n \tString path = \"\";\n \tString animVisibilityGuide = \"\";\n+\tMap<Animation, State> animationVisStateMap = new HashMap<>();\n \n \tpublic ParticleEmitterPopcorn(final String name) {\n \t\tthis.name = name;\n@@ -51,12 +54,13 @@ public ParticleEmitterPopcorn(final MdlxParticleEmitterPopcorn emitter) {\n \t\treplaceableId = emitter.replaceableId;\n \t\tpath = emitter.path;\n \t\tanimVisibilityGuide = emitter.animationVisiblityGuide;\n+\t\tSystem.out.println(emitter.animationVisiblityGuide);\n \t}\n \n-\tpublic MdlxParticleEmitterPopcorn toMdlx() {\n+\tpublic MdlxParticleEmitterPopcorn toMdlx(EditableModel model) {\n \t\tfinal MdlxParticleEmitterPopcorn emitter = new MdlxParticleEmitterPopcorn();\n \n-\t\tobjectToMdlx(emitter);\n+\t\tobjectToMdlx(emitter, model);\n \n \t\temitter.lifeSpan = lifeSpan;\n \t\temitter.emissionRate = emissionRate;\n@@ -65,7 +69,8 @@ public MdlxParticleEmitterPopcorn toMdlx() {\n \t\temitter.alpha = alpha;\n \t\temitter.replaceableId = replaceableId;\n \t\temitter.path = path;\n-\t\temitter.animationVisiblityGuide = animVisibilityGuide;\n+//\t\temitter.animationVisiblityGuide = animVisibilityGuide;\n+\t\temitter.animationVisiblityGuide = getAnimVisibilityGuide();\n \n \t\treturn emitter;\n \t}\n@@ -88,6 +93,13 @@ public void setAnimVisibilityGuide(final String flagString) {\n \t}\n \n \tpublic String getAnimVisibilityGuide() {\n+\t\tif (!animationVisStateMap.isEmpty()) {\n+\t\t\tList<String> visStrings = new ArrayList<>();\n+\t\t\tanimationVisStateMap.keySet().stream()\n+\t\t\t\t\t.filter(s -> !animationVisStateMap.get(s).equals(State.none))\n+\t\t\t\t\t.forEach(s -> visStrings.add(s.getName() + \"=\" + animationVisStateMap.get(s).name()));\n+\t\t\treturn String.join(\", \", visStrings);\n+\t\t}\n \t\treturn animVisibilityGuide;\n \t}\n \n@@ -152,4 +164,63 @@ public int getReplaceableId() {\n \tpublic void setReplaceableId(final int replaceableId) {\n \t\tthis.replaceableId = replaceableId;\n \t}\n+\n+\tpublic ParticleEmitterPopcorn initAnimsVisStates(List<Animation> anims) {\n+\t\tMap<String, String> visGuid = new HashMap<>();\n+\t\tfor (String vg : animVisibilityGuide.split(\",\")) {\n+\t\t\tString[] anSt = vg.split(\"=\");\n+\t\t\tif (anSt.length == 2) {\n+\t\t\t\tSystem.out.println(vg);\n+\t\t\t\tvisGuid.put(anSt[0].strip(), anSt[1].strip());\n+\t\t\t}\n+\t\t}\n+\t\tfor (Animation animation : anims) {\n+\t\t\tState state = State.none;\n+\t\t\tif (visGuid.containsKey(animation.getName())) {\n+\t\t\t\tstate = State.valueOf(visGuid.get(animation.getName()));\n+\t\t\t}\n+\t\t\tanimationVisStateMap.put(animation, state);\n+\t\t}\n+\n+\t\treturn this;\n+\t}\n+\n+\tpublic ParticleEmitterPopcorn updateAnimsVisMap(List<Animation> anims) {\n+\t\tSet<Animation> existingAnimationSet = new HashSet<>(anims);\n+\t\tfor (Animation animation : anims) {\n+\t\t\tif (!animationVisStateMap.containsKey(animation)) {\n+\t\t\t\tanimationVisStateMap.put(animation, State.none);\n+\t\t\t}\n+\t\t}\n+\t\tanimationVisStateMap.forEach((a, s) -> {\n+\t\t\tif (!existingAnimationSet.contains(a)) animationVisStateMap.remove(a);\n+\t\t});\n+\t\treturn this;\n+\t}\n+\n+\tpublic ParticleEmitterPopcorn setAnimVisState(Animation animation, State state) {\n+\t\tanimationVisStateMap.put(animation, state);\n+\t\treturn this;\n+\t}\n+\n+\tpublic State getAnimVisState(Animation animation) {\n+\t\treturn animationVisStateMap.get(animation);\n+\t}\n+\n+\tpublic void setStaticVis(float vis) {\n+\t\tSystem.out.println(vis);\n+\t}\n+\n+\t;\n+\n+\tpublic enum State {\n+\t\ton, off, none;\n+\n+\t\tstatic State fromInt(int i) {\n+\t\t\tif (0 <= i && i < 3) {\n+\t\t\t\treturn values()[i];\n+\t\t\t}\n+\t\t\treturn none;\n+\t\t}\n+\t}\n }"
  },
  {
    "sha": "46e3e7b586a8f3aaa4967700e59249844a293502",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/RibbonEmitter.java",
    "status": "modified",
    "additions": 12,
    "deletions": 12,
    "changes": 24,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/RibbonEmitter.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/RibbonEmitter.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/RibbonEmitter.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,13 +1,13 @@\n package com.hiveworkshop.rms.editor.model;\n \n-import java.util.List;\n-\n import com.hiveworkshop.rms.editor.model.util.ModelUtils;\n import com.hiveworkshop.rms.editor.model.visitor.IdObjectVisitor;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxRibbonEmitter;\n import com.hiveworkshop.rms.ui.application.edit.mesh.viewport.axes.CoordinateSystem;\n import com.hiveworkshop.rms.util.Vec3;\n \n+import java.util.List;\n+\n /**\n  * RibbonEmitter class, these are the things most people would think of as a\n  * particle emitter, I think. Blizzard favored use of these over\n@@ -69,24 +69,24 @@ public RibbonEmitter(final MdlxRibbonEmitter emitter) {\n \t\tsetAlpha(emitter.alpha);\n \t\tsetStaticColor(new Vec3(ModelUtils.flipRGBtoBGR(emitter.color)));\n \t\tsetLifeSpan(emitter.lifeSpan);\n-\t\tsetEmissionRate((int)emitter.emissionRate);\n-\t\tsetRows((int)emitter.rows);\n-\t\tsetColumns((int)emitter.columns);\n+\t\tsetEmissionRate((int) emitter.emissionRate);\n+\t\tsetRows((int) emitter.rows);\n+\t\tsetColumns((int) emitter.columns);\n \t\tsetMaterialId(emitter.materialId);\n \t\tsetGravity(emitter.gravity);\n \t}\n \n-\tpublic MdlxRibbonEmitter toMdlx() {\n+\tpublic MdlxRibbonEmitter toMdlx(EditableModel model) {\n \t\tfinal MdlxRibbonEmitter emitter = new MdlxRibbonEmitter();\n \n-\t\tobjectToMdlx(emitter);\n+\t\tobjectToMdlx(emitter, model);\n \n-\t\temitter.textureSlot = (long)getTextureSlot();\n-\t\temitter.heightAbove = (float)getHeightAbove();\n-\t\temitter.heightBelow = (float)getHeightBelow();\n-\t\temitter.alpha = (float)getAlpha();\n+\t\temitter.textureSlot = (long) getTextureSlot();\n+\t\temitter.heightAbove = (float) getHeightAbove();\n+\t\temitter.heightBelow = (float) getHeightBelow();\n+\t\temitter.alpha = (float) getAlpha();\n \t\temitter.color = ModelUtils.flipRGBtoBGR(getStaticColor().toFloatArray());\n-\t\temitter.lifeSpan = (float)getLifeSpan();\n+\t\temitter.lifeSpan = (float) getLifeSpan();\n \t\temitter.emissionRate = getEmissionRate();\n \t\temitter.rows = getRows();\n \t\temitter.columns = getColumns();"
  },
  {
    "sha": "59b66951e379d3ff1ee04d63b60422fd5454ae7f",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/SoundEmitter.java",
    "status": "modified",
    "additions": 35,
    "deletions": 35,
    "changes": 70,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/SoundEmitter.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/SoundEmitter.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/SoundEmitter.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,14 +1,14 @@\n package com.hiveworkshop.rms.editor.model;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import javax.swing.JOptionPane;\n-\n+import com.hiveworkshop.rms.editor.model.animflag.AnimFlag;\n import com.hiveworkshop.rms.editor.model.visitor.IdObjectVisitor;\n import com.hiveworkshop.rms.ui.application.edit.mesh.viewport.axes.CoordinateSystem;\n import com.hiveworkshop.rms.util.Vec3;\n \n+import javax.swing.*;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n /**\n  * <pre>\n Sounds {\n@@ -19,17 +19,17 @@\n     }\n }\n \n-SoundEmitter {\n-    ObjectId <long>,\n-    Parent <long>,\n-    SoundTrack <long_count> {\n-        <time - long>: <sound id - long>,\n-        ...\n-    }\n-    (Translation { <float_x>, <float_y>, <float_z> })\n-    (Rotation { <float_a>, <float_b>, <float_c>, <float_d> })\n-    (Scaling { <float_x>, <float_y>, <float_z> })\n-}\n+ SoundEmitter {\n+ ObjectId <long>,\n+ Parent <long>,\n+ SoundTrack <long_count> {\n+ <time - long>: <sound id - long>,\n+ ...\n+ }\n+ (Translation { <float_x>, <float_y>, <float_z> })\n+ (Rotation { <float_a>, <float_b>, <float_c>, <float_d> })\n+ (Scaling { <float_x>, <float_y>, <float_z> })\n+ }\n  * </pre>\n  *\n  * The MDX Tags are: SNDS, SNME, KESK(Sound track animations)\n@@ -38,7 +38,7 @@\n  */\n public class SoundEmitter extends IdObject {\n \tprivate static final List<String> EMPTY = new ArrayList<>();\n-\tList<AnimFlag> animFlags = new ArrayList<>();\n+\tList<AnimFlag<?>> animFlags = new ArrayList<>();\n \tList<SoundFile> soundFiles;\n \n \tprivate SoundEmitter() {\n@@ -59,8 +59,8 @@ public IdObject copy() {\n \t\tx.parentId = parentId;\n \t\tx.setParent(getParent());\n \n-\t\tfor (final AnimFlag af : animFlags) {\n-\t\t\tx.animFlags.add(new AnimFlag(af));\n+\t\tfor (final AnimFlag<?> af : animFlags) {\n+\t\t\tx.animFlags.add(AnimFlag.createFromAnimFlag(af));\n \t\t}\n \t\treturn x;\n \t}\n@@ -116,40 +116,40 @@ public IdObject copy() {\n \t// \twriter.println(\"}\");\n \t// }\n \n-\tpublic void setSoundTrackFlag(final AnimFlag flag) {\n+\tpublic AnimFlag<?> getSoundTrackFlag() {\n \t\tint count = 0;\n-\t\tint index = 0;\n-\t\tfor (int i = 0; i < animFlags.size(); i++) {\n-\t\t\tfinal AnimFlag af = animFlags.get(i);\n+\t\tAnimFlag<?> output = null;\n+\t\tfor (final AnimFlag<?> af : animFlags) {\n \t\t\tif (af.getName().equals(\"SoundTrack\")) {\n \t\t\t\tcount++;\n-\t\t\t\tindex = i;\n-\t\t\t\tanimFlags.remove(af);\n+\t\t\t\toutput = af;\n \t\t\t}\n \t\t}\n-\t\tif (flag != null) {\n-\t\t\tanimFlags.add(index, flag);\n-\t\t}\n \t\tif (count > 1) {\n \t\t\tJOptionPane.showMessageDialog(null,\n-\t\t\t\t\t\"Some SoundTrack animation data was lost unexpectedly during overwrite in \" + getName() + \".\");\n+\t\t\t\t\t\"Some SoundTrack animation data was lost unexpectedly during retrieval in \" + getName() + \".\");\n \t\t}\n+\t\treturn output;\n \t}\n \n-\tpublic AnimFlag getSoundTrackFlag() {\n+\tpublic void setSoundTrackFlag(final AnimFlag<?> flag) {\n \t\tint count = 0;\n-\t\tAnimFlag output = null;\n-\t\tfor (final AnimFlag af : animFlags) {\n+\t\tint index = 0;\n+\t\tfor (int i = 0; i < animFlags.size(); i++) {\n+\t\t\tfinal AnimFlag<?> af = animFlags.get(i);\n \t\t\tif (af.getName().equals(\"SoundTrack\")) {\n \t\t\t\tcount++;\n-\t\t\t\toutput = af;\n+\t\t\t\tindex = i;\n+\t\t\t\tanimFlags.remove(af);\n \t\t\t}\n \t\t}\n+\t\tif (flag != null) {\n+\t\t\tanimFlags.add(index, flag);\n+\t\t}\n \t\tif (count > 1) {\n \t\t\tJOptionPane.showMessageDialog(null,\n-\t\t\t\t\t\"Some SoundTrack animation data was lost unexpectedly during retrieval in \" + getName() + \".\");\n+\t\t\t\t\t\"Some SoundTrack animation data was lost unexpectedly during overwrite in \" + getName() + \".\");\n \t\t}\n-\t\treturn output;\n \t}\n \n \tpublic String getVisTagname() {"
  },
  {
    "sha": "c377c62a5f3db2810c6fe5591b9ca67d113a2d9b",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/TextureAnim.java",
    "status": "modified",
    "additions": 15,
    "deletions": 5,
    "changes": 20,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/TextureAnim.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/TextureAnim.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/TextureAnim.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,10 +1,13 @@\n package com.hiveworkshop.rms.editor.model;\n \n+import com.hiveworkshop.rms.editor.model.animflag.AnimFlag;\n+import com.hiveworkshop.rms.editor.model.animflag.IntAnimFlag;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxTextureAnimation;\n \n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import java.util.Map;\n \n /**\n  * TextureAnims, inside them called TVertexAnims\n@@ -15,18 +18,18 @@\n \t/**\n \t * Constructor for objects of class TextureAnim\n \t */\n-\tpublic TextureAnim(final AnimFlag flag) {\n+\tpublic TextureAnim(final AnimFlag<?> flag) {\n \t\tadd(flag);\n \t}\n \n-\tpublic TextureAnim(final List<AnimFlag> flags) {\n+\tpublic TextureAnim(final List<AnimFlag<?>> flags) {\n \t\tsetAnimFlags(flags);\n \t}\n \n \tpublic TextureAnim(final TextureAnim other) {\n-\t\tCollection<AnimFlag> flags = new ArrayList<>();\n-\t\tfor (AnimFlag animFlag : other.getAnimFlags()) {\n-\t\t\tflags.add(new AnimFlag(animFlag));\n+\t\tCollection<AnimFlag<?>> flags = new ArrayList<>();\n+\t\tfor (AnimFlag<?> animFlag : other.getAnimFlags()) {\n+\t\t\tflags.add(new IntAnimFlag((IntAnimFlag) animFlag));\n \t\t}\n \t\tsetAnimFlags(flags);\n \t}\n@@ -42,4 +45,11 @@ public MdlxTextureAnimation toMdlx() {\n \n \t\treturn animation;\n \t}\n+\n+\tpublic String getFlagNames() {\n+\t\tMap<String, AnimFlag<?>> flags = this.animFlags;\n+\t\t//TODO figure out what this should return\n+\t\tSystem.out.println(flags.keySet());\n+\t\treturn flags.keySet().toString();\n+\t}\n }"
  },
  {
    "sha": "e74e6467bdf85f49a3ef037854e2114d717ce7a7",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/TimelineContainer.java",
    "status": "modified",
    "additions": 54,
    "deletions": 46,
    "changes": 100,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/TimelineContainer.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/TimelineContainer.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/TimelineContainer.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,37 +1,38 @@\n package com.hiveworkshop.rms.editor.model;\n \n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.Map;\n-\n+import com.hiveworkshop.rms.editor.model.animflag.*;\n import com.hiveworkshop.rms.parsers.mdlx.MdlxAnimatedObject;\n import com.hiveworkshop.rms.parsers.mdlx.mdl.MdlUtils;\n import com.hiveworkshop.rms.parsers.mdlx.timeline.MdlxTimeline;\n import com.hiveworkshop.rms.ui.application.viewer.AnimatedRenderEnvironment;\n import com.hiveworkshop.rms.util.Quat;\n import com.hiveworkshop.rms.util.Vec3;\n \n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n public abstract class TimelineContainer implements VisibilitySource {\n-\tpublic Map<String, AnimFlag> animFlags = new HashMap<>();\n+\tpublic Map<String, AnimFlag<?>> animFlags = new HashMap<>();\n \n \tpublic void loadTimelines(final MdlxAnimatedObject object) {\n \t\tfor (final MdlxTimeline<?> timeline : object.timelines) {\n-\t\t\tadd(new AnimFlag(timeline));\n+\t\t\tadd(AnimFlag.createFromTimeline(timeline));\n \t\t}\n \t}\n \n \tpublic void timelinesToMdlx(final MdlxAnimatedObject object) {\n-\t\tfor (final AnimFlag timeline : animFlags.values()) {\n+\t\tfor (final AnimFlag<?> timeline : animFlags.values()) {\n \t\t\tobject.timelines.add(timeline.toMdlx(this));\n \t\t}\n \t}\n \n-\tpublic void add(final AnimFlag timeline) {\n+\tpublic void add(final AnimFlag<?> timeline) {\n \t\tanimFlags.put(timeline.getName(), timeline);\n \t}\n \n-\tpublic void addAll(final Collection<AnimFlag> timelines) {\n-\t\tfor (final AnimFlag timeline : timelines) {\n+\tpublic void addAll(final Collection<AnimFlag<?>> timelines) {\n+\t\tfor (final AnimFlag<?> timeline : timelines) {\n \t\t\tadd(timeline);\n \t\t}\n \t}\n@@ -40,102 +41,113 @@ public boolean has(final String name) {\n \t\treturn animFlags.containsKey(name);\n \t}\n \n-\tpublic void remove(final AnimFlag timeline) {\n+\tpublic void remove(final AnimFlag<?> timeline) {\n \t\tanimFlags.remove(timeline.getName());\n \t}\n \n \tpublic void remove(final String name) {\n-\t\tfinal AnimFlag timeline = animFlags.get(name);\n+\t\tfinal AnimFlag<?> timeline = animFlags.get(name);\n \n \t\tif (timeline != null) {\n \t\t\tanimFlags.remove(name);\n \t\t}\n \t}\n \n-\tpublic Collection<AnimFlag> getAnimFlags() {\n+\tpublic Collection<AnimFlag<?>> getAnimFlags() {\n \t\treturn animFlags.values();\n \t}\n \n-\tpublic void setAnimFlags(final Collection<AnimFlag> timelines) {\n+\tpublic void setAnimFlags(final Collection<AnimFlag<?>> timelines) {\n \t\tanimFlags.clear();\n \n-\t\tfor (final AnimFlag timeline : timelines) {\n+\t\tfor (final AnimFlag<?> timeline : timelines) {\n \t\t\tadd(timeline);\n \t\t}\n \t}\n \n-\tpublic AnimFlag find(final String name) {\n+\tpublic AnimFlag<?> find(final String name) {\n \t\treturn animFlags.get(name);\n \t}\n \n-\tpublic AnimFlag find(final String name, final Integer globalSeq) {\n-\t\tfinal AnimFlag timeline = animFlags.get(name);\n+\tpublic AnimFlag<?> find(final String name, final Integer globalSeq) {\n+\t\tfinal AnimFlag<?> timeline = animFlags.get(name);\n \n-\t\tif (timeline != null && (((globalSeq == null) && (timeline.globalSeq == null))\n-\t\t\t\t|| ((globalSeq != null) && globalSeq.equals(timeline.globalSeq)))) {\n+\t\tif (timeline != null && (((globalSeq == null) && (timeline.getGlobalSeq() == null))\n+\t\t\t\t|| ((globalSeq != null) && globalSeq.equals(timeline.getGlobalSeq())))) {\n \t\t\treturn timeline;\n \t\t}\n \n \t\treturn null;\n \t}\n \n \tpublic void removeAllTimelinesForGlobalSeq(final Integer selectedValue) {\n-\t\tfor (final AnimFlag timeline : animFlags.values()) {\n+\t\tfor (final AnimFlag<?> timeline : animFlags.values()) {\n \t\t\tif (selectedValue.equals(timeline.getGlobalSeq())) {\n \t\t\t\tremove(timeline);\n \t\t\t}\n \t\t}\n \t}\n \n \tpublic int getInterpolatedInteger(final AnimatedRenderEnvironment animatedRenderEnvironment, final String tag, final int defaultValue) {\n-\t\tfinal AnimFlag timeline = find(tag);\n+\t\tfinal IntAnimFlag timeline = (IntAnimFlag) find(tag);\n \n \t\tif (timeline != null) {\n-\t\t\treturn (Integer) timeline.interpolateAt(animatedRenderEnvironment);\n+\t\t\treturn timeline.interpolateAt(animatedRenderEnvironment);\n \t\t}\n-\t\t\n+\n \t\treturn defaultValue;\n \t}\n \n \tpublic float getInterpolatedFloat(final AnimatedRenderEnvironment animatedRenderEnvironment, final String tag, final float defaultValue) {\n-\t\tfinal AnimFlag timeline = find(tag);\n+\t\tfinal FloatAnimFlag timeline = (FloatAnimFlag) find(tag);\n \n \t\tif (timeline != null) {\n-\t\t\treturn (Float) timeline.interpolateAt(animatedRenderEnvironment);\n+\t\t\treturn timeline.interpolateAt(animatedRenderEnvironment);\n \t\t}\n-\t\t\n+\n \t\treturn defaultValue;\n \t}\n \n \tpublic Vec3 getInterpolatedVector(final AnimatedRenderEnvironment animatedRenderEnvironment, final String tag, final Vec3 defaultValue) {\n-\t\tfinal AnimFlag timeline = find(tag);\n+\t\tfinal Vec3AnimFlag timeline = (Vec3AnimFlag) find(tag);\n \n \t\tif (timeline != null) {\n-\t\t\treturn (Vec3)timeline.interpolateAt(animatedRenderEnvironment);\n+\t\t\treturn timeline.interpolateAt(animatedRenderEnvironment);\n \t\t}\n-\t\t\n+\n \t\treturn defaultValue;\n \t}\n \n \tpublic Quat getInterpolatedQuat(final AnimatedRenderEnvironment animatedRenderEnvironment, final String tag, final Quat defaultValue) {\n-\t\tfinal AnimFlag timeline = find(tag);\n+\t\tfinal QuatAnimFlag timeline = (QuatAnimFlag) find(tag);\n \n \t\tif (timeline != null) {\n-\t\t\treturn (Quat)timeline.interpolateAt(animatedRenderEnvironment);\n+\t\t\treturn timeline.interpolateAt(animatedRenderEnvironment);\n \t\t}\n-\t\t\n+\n \t\treturn defaultValue;\n \t}\n \n \tpublic void flipOver(final byte axis) {\n-\t\tfor (final AnimFlag timeline : animFlags.values()) {\n+\t\tfor (final AnimFlag<?> timeline : animFlags.values()) {\n \t\t\ttimeline.flipOver(axis);\n \t\t}\n \t}\n \n+\t@Override\n+\tpublic AnimFlag<?> getVisibilityFlag() {\n+\t\tAnimFlag<?> timeline = find(MdlUtils.TOKEN_VISIBILITY);\n+\n+\t\tif (timeline == null) {\n+\t\t\ttimeline = find(MdlUtils.TOKEN_ALPHA);\n+\t\t}\n+\n+\t\treturn timeline;\n+\t}\n+\n \t// VisibilitySource methods\n \t@Override\n-\tpublic void setVisibilityFlag(final AnimFlag flag) {\n+\tpublic void setVisibilityFlag(final AnimFlag<?> flag) {\n \t\tremove(MdlUtils.TOKEN_VISIBILITY);\n \t\tremove(MdlUtils.TOKEN_ALPHA);\n \n@@ -144,17 +156,6 @@ public void setVisibilityFlag(final AnimFlag flag) {\n \t\t}\n \t}\n \n-\t@Override\n-\tpublic AnimFlag getVisibilityFlag() {\n-\t\tAnimFlag timeline = find(MdlUtils.TOKEN_VISIBILITY);\n-\t\t\n-\t\tif (timeline == null) {\n-\t\t\ttimeline = find(MdlUtils.TOKEN_ALPHA);\n-\t\t}\n-\n-\t\treturn timeline;\n-\t}\n-\n \tpublic float getRenderVisibility(final AnimatedRenderEnvironment animatedRenderEnvironment) {\n \t\treturn getRenderVisibility(animatedRenderEnvironment, 1);\n \t}\n@@ -167,4 +168,11 @@ public float getRenderVisibility(final AnimatedRenderEnvironment animatedRenderE\n \tpublic String visFlagName() {\n \t\treturn \"Visibility\";\n \t}\n+\n+\tpublic VisibilitySource getVisibilitySource() {\n+\t\tif (getVisibilityFlag() != null) {\n+\t\t\treturn this;\n+\t\t}\n+\t\treturn null;\n+\t}\n }"
  },
  {
    "sha": "e52a51a9a2fec8d259228eee2cde5a88cf22ba68",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/Triangle.java",
    "status": "modified",
    "additions": 32,
    "deletions": 37,
    "changes": 69,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Triangle.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/Triangle.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/Triangle.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,9 +1,10 @@\n package com.hiveworkshop.rms.editor.model;\n \n-import java.util.List;\n-\n+import com.hiveworkshop.rms.util.Vec2;\n import com.hiveworkshop.rms.util.Vec3;\n \n+import java.util.List;\n+\n public class Triangle {\n \tGeosetVertex[] verts = new GeosetVertex[3];\n \tint[] vertIds = new int[3];\n@@ -55,10 +56,8 @@ public void updateVertexRefs() {\n \n \tpublic void updateVertexIds() {\n \t\t// Potentially this procedure could lag a bunch in the way I wrote it,\n-\t\t// but it will\n-\t\t// change vertex ids to match a changed geoset, assuming the geoset\n-\t\t// still contains the\n-\t\t// vertex\n+\t\t// but it will change vertex ids to match a changed geoset,\n+\t\t// assuming the geoset still contains the vertex\n \t\tvertIds[0] = geoset.getVertexId(verts[0]);\n \t\tvertIds[1] = geoset.getVertexId(verts[1]);\n \t\tvertIds[2] = geoset.getVertexId(verts[2]);\n@@ -119,23 +118,21 @@ public int indexOf(final GeosetVertex v) {\n \t}\n \n \tpublic boolean equalLocs(final Triangle t) {\n-\t\tboolean equal = true;\n-\t\tfor (int i = 0; i < 3 && equal; i++) {\n+\t\tfor (int i = 0; i < 3; i++) {\n \t\t\tif (!t.verts[i].equalLocs(verts[i]) || t.vertIds[i] != vertIds[i]) {\n-\t\t\t\tequal = false;\n+\t\t\t\treturn false;\n \t\t\t}\n \t\t}\n-\t\treturn equal;\n+\t\treturn true;\n \t}\n \n \tpublic boolean sameVerts(final Triangle t) {\n-\t\tboolean equal = true;\n-\t\tfor (int i = 0; i < 3 && equal; i++) {\n+\t\tfor (int i = 0; i < 3; i++) {\n \t\t\tif (!contains(t.verts[i])) {\n-\t\t\t\tequal = false;\n+\t\t\t\treturn false;\n \t\t\t}\n \t\t}\n-\t\treturn equal;\n+\t\treturn true;\n \t}\n \n \tpublic int indexOfRef(final GeosetVertex v) {\n@@ -149,25 +146,21 @@ public int indexOfRef(final GeosetVertex v) {\n \t}\n \n \tpublic boolean equalRefsNoIds(final Triangle t) {\n-\t\tboolean equal = true;\n-\t\tfor (int i = 0; i < 3 && equal; i++) {\n-            if (t.verts[i] != verts[i]) {\n-                equal = false;\n-                break;\n-            }\n+\t\tfor (int i = 0; i < 3; i++) {\n+\t\t\tif (t.verts[i] != verts[i]) {\n+\t\t\t\treturn false;\n+\t\t\t}\n \t\t}\n-\t\treturn equal;\n+\t\treturn true;\n \t}\n \n \tpublic boolean equalRefs(final Triangle t) {\n-\t\tboolean equal = true;\n-\t\tfor (int i = 0; i < 3 && equal; i++) {\n-            if (t.verts[i] != verts[i] || t.vertIds[i] != vertIds[i]) {\n-                equal = false;\n-                break;\n-            }\n+\t\tfor (int i = 0; i < 3; i++) {\n+\t\t\tif (t.verts[i] != verts[i] || t.vertIds[i] != vertIds[i]) {\n+\t\t\t\treturn false;\n+\t\t\t}\n \t\t}\n-\t\treturn equal;\n+\t\treturn true;\n \t}\n \n \tpublic GeosetVertex[] getAll() {\n@@ -190,6 +183,14 @@ public boolean equalRefs(final Triangle t) {\n \t\treturn output;\n \t}\n \n+\tpublic Vec2[] getProjectedVerts(final byte axis1, final byte axis2) {\n+\t\tfinal Vec2[] output = new Vec2[3];\n+\t\tfor (int i = 0; i < 3; i++) {\n+\t\t\toutput[i] = new Vec2(verts[i].getCoord(axis1), verts[i].getCoord(axis2));\n+\t\t}\n+\t\treturn output;\n+\t}\n+\n \tpublic double[] getTVertCoords(final byte dim, final int layerId) {\n \t\tfinal double[] output = new double[3];\n \t\tfor (int i = 0; i < 3; i++) {\n@@ -251,14 +252,8 @@ public void setVertIds(final int[] vertIds) {\n \t}\n \n \tpublic Vec3 getNormal() {\n-\t\tfinal Vec3 edge1 = new Vec3();\n-\t\tfinal Vec3 edge2 = new Vec3();\n-\t\tfinal Vec3 normal = new Vec3();\n-\t\t\n-\t\tverts[1].sub(verts[0], edge1);\n-\t\tverts[2].sub(verts[1], edge2);\n-\t\tedge1.cross(edge2, normal);\n-\n-\t\treturn normal;\n+\t\tfinal Vec3 edge1 = Vec3.getDiff(verts[1], verts[0]);\n+\t\tfinal Vec3 edge2 = Vec3.getDiff(verts[2], verts[1]);\n+\t\treturn Vec3.getCross(edge1, edge2);\n \t}\n }"
  },
  {
    "sha": "811641044b1baed1a6cab1adf8ec4162ecf01858",
    "filename": "modelstudio/src/com/hiveworkshop/rms/editor/model/VisibilitySource.java",
    "status": "modified",
    "additions": 11,
    "deletions": 8,
    "changes": 19,
    "blob_url": "https://github.com/Retera/ReterasModelStudio/blob/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/VisibilitySource.java",
    "raw_url": "https://github.com/Retera/ReterasModelStudio/raw/fc212687ec635d8477ba83d86e1f33ac58b6b5a2/modelstudio/src/com/hiveworkshop/rms/editor/model/VisibilitySource.java",
    "contents_url": "https://api.github.com/repos/Retera/ReterasModelStudio/contents/modelstudio/src/com/hiveworkshop/rms/editor/model/VisibilitySource.java?ref=fc212687ec635d8477ba83d86e1f33ac58b6b5a2",
    "patch": "@@ -1,15 +1,18 @@\n package com.hiveworkshop.rms.editor.model;\n \n+import com.hiveworkshop.rms.editor.model.animflag.AnimFlag;\n+\n /**\n- * Something to keep track of which stuff has visibility, \n- * \n+ * Something to keep track of which stuff has visibility,\n+ *\n  * Eric Theller\n  * 6/28/2012\n  */\n-public interface VisibilitySource\n-{\n-    AnimFlag getVisibilityFlag();\n-    void setVisibilityFlag(AnimFlag what);\n-//     public String getVisTagname();\n-String visFlagName();\n+public interface VisibilitySource {\n+    AnimFlag<?> getVisibilityFlag();\n+\n+    void setVisibilityFlag(AnimFlag<?> what);\n+\n+    //     public String getVisTagname();\n+    String visFlagName();\n }"
  }
]
