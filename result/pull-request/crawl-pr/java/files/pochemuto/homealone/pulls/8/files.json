[
  {
    "sha": "aa29f75654a33fbca0debd70407249cf80cb5142",
    "filename": "docker-compose.local.yml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/pochemuto/homealone/blob/4ea355e7a3a04856995db3a1b0d31553de90bb14/docker-compose.local.yml",
    "raw_url": "https://github.com/pochemuto/homealone/raw/4ea355e7a3a04856995db3a1b0d31553de90bb14/docker-compose.local.yml",
    "contents_url": "https://api.github.com/repos/pochemuto/homealone/contents/docker-compose.local.yml?ref=4ea355e7a3a04856995db3a1b0d31553de90bb14",
    "patch": "@@ -12,8 +12,8 @@ services:\n     restart: always\n     shm_size: 2gb\n     environment:\n-      - SCREEN_WIDTH=1170\n-      - SCREEN_HEIGHT=2532\n+      - SCREEN_WIDTH=831\n+      - SCREEN_HEIGHT=1800\n       - SCREEN_DEPTH=24\n       - SCREEN_DPI=460\n     ports:"
  },
  {
    "sha": "9e665b44644029e6480c68da93fd4a56cfb39682",
    "filename": "src/main/java/com/pochemuto/homealone/bot/TelegramBot.java",
    "status": "modified",
    "additions": 60,
    "deletions": 9,
    "changes": 69,
    "blob_url": "https://github.com/pochemuto/homealone/blob/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/bot/TelegramBot.java",
    "raw_url": "https://github.com/pochemuto/homealone/raw/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/bot/TelegramBot.java",
    "contents_url": "https://api.github.com/repos/pochemuto/homealone/contents/src/main/java/com/pochemuto/homealone/bot/TelegramBot.java?ref=4ea355e7a3a04856995db3a1b0d31553de90bb14",
    "patch": "@@ -1,27 +1,34 @@\n package com.pochemuto.homealone.bot;\n \n-import java.io.IOException;\n-import java.util.Comparator;\n-import java.util.List;\n-import java.util.Objects;\n-\n-import javax.annotation.Nullable;\n-import javax.annotation.PostConstruct;\n \n import com.google.common.collect.MapDifference.ValueDifference;\n import com.pochemuto.homealone.ikea.IkeaChecker;\n import com.pochemuto.homealone.ikea.IkeaListener;\n import com.pochemuto.homealone.ikea.Item;\n+import com.pochemuto.homealone.marafon.MarafonLocalScraper;\n+import lombok.SneakyThrows;\n import lombok.extern.slf4j.Slf4j;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n import org.telegram.telegrambots.bots.TelegramLongPollingBot;\n+import org.telegram.telegrambots.meta.api.interfaces.BotApiObject;\n import org.telegram.telegrambots.meta.api.methods.send.SendMessage;\n+import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;\n import org.telegram.telegrambots.meta.api.methods.updatingmessages.EditMessageText;\n+import org.telegram.telegrambots.meta.api.objects.InputFile;\n import org.telegram.telegrambots.meta.api.objects.Message;\n import org.telegram.telegrambots.meta.api.objects.Update;\n import org.telegram.telegrambots.meta.exceptions.TelegramApiException;\n \n+import javax.annotation.Nullable;\n+import javax.annotation.PostConstruct;\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Objects;\n+\n+\n import static java.util.Comparator.comparing;\n \n @Slf4j\n@@ -37,6 +44,11 @@\n     @Autowired\n     private IkeaChecker ikeaChecker;\n \n+    @Autowired\n+    private MarafonLocalScraper marafonLocalScraper;\n+\n+\n+\n     @PostConstruct\n     public void postConstruct() {\n         log.info(\"Registering as bot {} with token {}\",\n@@ -57,18 +69,42 @@ public String getBotToken() {\n     }\n     //endregion\n \n+    @SneakyThrows\n     @Override\n     public void onUpdateReceived(Update update) {\n         if (update.hasMessage() && update.getMessage().hasText()) {\n             var text = update.getMessage().getText().toLowerCase().strip();\n             switch (text) {\n                 case \"/ikea\", \"/икея\" -> ikea(update);\n-                case \"ping\" -> ping(update);\n+                case \"ping\" -> pong(update);\n+                case \"/marafon\" -> marafon(update);\n             }\n         }\n     }\n \n-    private void ping(Update update) {\n+    private void marafon(Update update) throws IOException {\n+        long chatId = update.getMessage().getChatId();\n+        Integer requestingMessageId = sendMessage(chatId, \"Смотрим...\");\n+        if (requestingMessageId == null) {\n+            return;\n+        }\n+        meetUser(update);\n+\n+        marafonLocalScraper.getData();\n+        File breakfast = new File(\"./Screenshots/Завтрак.png\");\n+        File brunch = new File(\"./Screenshots/Перекус 1.png\");\n+        File lunch = new File(\"./Screenshots/Обед.png\");\n+        File dinner = new File(\"./Screenshots/Ужин.png\");\n+\n+        sendPhoto(chatId, breakfast);\n+        sendPhoto(chatId, brunch);\n+        sendPhoto(chatId, lunch);\n+        sendPhoto(chatId, dinner);\n+\n+    }\n+\n+\n+    private void pong(Update update) {\n         log.info(\"Sending pong\");\n         sendMessage(update.getMessage().getChatId(), \"pong\");\n         log.info(\"Pong!\");\n@@ -77,6 +113,8 @@ private void ping(Update update) {\n     private void ikea(Update update) {\n         long chatId = update.getMessage().getChatId();\n         try {\n+\n+\n             Integer requestingMessageId = sendMessage(chatId, \"Смотрим...\");\n             if (requestingMessageId == null) {\n                 return;\n@@ -162,6 +200,19 @@ private Integer sendMessage(long chatId, String text) {\n         return null;\n     }\n \n+    private BotApiObject sendPhoto(long chatID, File photo) {\n+        try{\n+            InputFile targetPhoto = new InputFile(photo);\n+            SendPhoto sendPhoto = new SendPhoto();\n+            sendPhoto.setChatId(String.valueOf(chatID));\n+            sendPhoto.setPhoto(targetPhoto);\n+            return execute(sendPhoto);\n+        } catch (TelegramApiException telegramApiException) {\n+        log.error(\"Cannot send photo\", telegramApiException);\n+    }\n+            return null;\n+    }\n+\n     @Override\n     public void onItemsChanged(List<Item> added, List<Item> removed, List<ValueDifference<Item>> changed) {\n         var sb = new StringBuilder();"
  },
  {
    "sha": "ab6e6f388547dd5dd2f6b621ffcd079a6e0b62d2",
    "filename": "src/main/java/com/pochemuto/homealone/marafon/MafaronScraper.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/pochemuto/homealone/blob/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/marafon/MafaronScraper.java",
    "raw_url": "https://github.com/pochemuto/homealone/raw/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/marafon/MafaronScraper.java",
    "contents_url": "https://api.github.com/repos/pochemuto/homealone/contents/src/main/java/com/pochemuto/homealone/marafon/MafaronScraper.java?ref=4ea355e7a3a04856995db3a1b0d31553de90bb14",
    "patch": "@@ -5,6 +5,7 @@\n import java.net.URL;\n import java.nio.file.Path;\n import java.time.LocalDateTime;\n+import java.time.format.DateTimeFormatter;\n import java.util.concurrent.TimeUnit;\n \n import com.google.common.base.Preconditions;\n@@ -24,7 +25,7 @@\n @Component\n public class MafaronScraper {\n \n-    private static final File IMG_FILE = Path.of(System.getProperty(\"user.home\"), \"Desktop\", \"img \" + LocalDateTime.now().toString() + \".png\").toFile();\n+    private static final File IMG_FILE = Path.of(\"C:\\\\Users\\\\Кирилл\\\\Desktop\\\\\" + LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyyMMdd_HHmmss\")) + \".png\").toFile();\n     private static final String SELENIUM_URL = \"http://localhost:4444/wd/hub\";\n     @Autowired\n     private MarafonProperties properties;\n@@ -48,7 +49,7 @@ public static void main(String[] args) throws IOException {\n         driver.navigate().to(\"https://lk.lerchekmarafon.ru/marafon/food?week=1&number=2\");\n \n         driver.manage().window().maximize();\n-        takeScreenshot(driver);\n+       takeScreenshot(driver);\n \n         System.out.println(driver.getTitle());\n         var cookies = driver.manage().getCookies();\n@@ -60,9 +61,9 @@ private static void takeScreenshot(WebDriver driver) {\n \n         File file = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\n         WebElement element = driver.findElement(By.cssSelector(\"div.food_list > div:nth-child(3)\"));\n-//\n+\n         boolean moved = file.renameTo(IMG_FILE);\n-        Preconditions.checkState(moved);\n+       Preconditions.checkState(moved);\n         System.out.println(file.getAbsolutePath());\n     }\n }"
  },
  {
    "sha": "c4e9380812ed74b1397917aa09a20470b735e1cb",
    "filename": "src/main/java/com/pochemuto/homealone/marafon/MarafonLocalScraper.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/pochemuto/homealone/blob/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/marafon/MarafonLocalScraper.java",
    "raw_url": "https://github.com/pochemuto/homealone/raw/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/marafon/MarafonLocalScraper.java",
    "contents_url": "https://api.github.com/repos/pochemuto/homealone/contents/src/main/java/com/pochemuto/homealone/marafon/MarafonLocalScraper.java?ref=4ea355e7a3a04856995db3a1b0d31553de90bb14",
    "patch": "@@ -0,0 +1,76 @@\n+package com.pochemuto.homealone.marafon;\n+\n+import com.google.common.base.Preconditions;\n+import com.pochemuto.homealone.ikea.IkeaChecker;\n+import com.pochemuto.homealone.marafon.page.PersonalAccountPage;\n+import com.pochemuto.homealone.utils.ScreenShotUtil;\n+import com.pochemuto.homealone.utils.WaitUtils;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.io.FileUtils;\n+import org.openqa.selenium.*;\n+import org.openqa.selenium.chrome.ChromeDriver;\n+import org.openqa.selenium.chrome.ChromeOptions;\n+import org.openqa.selenium.interactions.Actions;\n+import org.openqa.selenium.remote.RemoteWebDriver;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URL;\n+import java.nio.file.Path;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.temporal.ChronoUnit;\n+import java.util.UUID;\n+import java.util.concurrent.TimeUnit;\n+@Slf4j\n+@Component\n+public class MarafonLocalScraper {\n+    final LocalDate startDate = LocalDate.of(2021, 2, 15);\n+    private static final String SELENIUM_URL = \"http://localhost:4444/wd/hub\";\n+    @Autowired\n+    private MarafonProperties marafonProperties;\n+\n+    public  void getData() throws IOException {\n+        ChromeOptions options = new ChromeOptions();\n+        options.addArguments(\"--force-device-scale-factor=1.0\");\n+        options.setPageLoadStrategy(PageLoadStrategy.EAGER);\n+        WebDriver driver = new RemoteWebDriver(new URL(SELENIUM_URL), options);\n+        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n+\n+        log.info(\"open browser\");\n+        PersonalAccountPage personalAccountPage = new PersonalAccountPage(driver);\n+        personalAccountPage.openPage(\"https://lk.lerchekmarafon.ru/\");\n+        Dimension dimension = new Dimension(831, 1800);\n+        driver.manage().window().setSize(dimension);\n+\n+        personalAccountPage.populateLoginNameField(marafonProperties.getLogin());\n+        personalAccountPage.populateLoginPasswordField(marafonProperties.getPassword());\n+        personalAccountPage.submitLoginForm();\n+        log.info(\"go to account page {}\", marafonProperties.getLogin());\n+        WaitUtils.waitABit(1000);\n+        personalAccountPage.openPage(personalAccountPage.generateFoodPageUrl(getCurrentWeek(startDate),getCurrentDay()));\n+        WaitUtils.waitABit(1000);\n+        log.info(\"go to food page\");\n+\n+        personalAccountPage.takeScreenShotsOfFood();\n+        log.info(\"take screenshots\");\n+        driver.quit();\n+        log.info(\"browser is closed\");\n+    }\n+\n+    public long getCurrentWeek(LocalDate startDate){\n+        LocalDate currentDate = LocalDate.now();\n+        return ChronoUnit.WEEKS.between(startDate, currentDate);\n+    }\n+\n+    public int getCurrentDay(){\n+        return LocalDate.now().getDayOfWeek().getValue();\n+    }\n+\n+\n+\n+\n+}"
  },
  {
    "sha": "7855251b075c355f10c357d8aef733030920404f",
    "filename": "src/main/java/com/pochemuto/homealone/marafon/page/LoginPage.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/pochemuto/homealone/blob/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/marafon/page/LoginPage.java",
    "raw_url": "https://github.com/pochemuto/homealone/raw/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/marafon/page/LoginPage.java",
    "contents_url": "https://api.github.com/repos/pochemuto/homealone/contents/src/main/java/com/pochemuto/homealone/marafon/page/LoginPage.java?ref=4ea355e7a3a04856995db3a1b0d31553de90bb14",
    "patch": "@@ -8,7 +8,7 @@\n public class LoginPage {\n     private final WebDriver driver;\n \n-    @FindBy(css = \"#login-form\")\n+    @FindBy(xpath = \"#login-form\")\n     private WebElement form;\n \n     @FindBy(css = \"#loginform-email\")"
  },
  {
    "sha": "63ac704192a523cdd1e12814c4576873bfc15b14",
    "filename": "src/main/java/com/pochemuto/homealone/marafon/page/PersonalAccountPage.java",
    "status": "added",
    "additions": 131,
    "deletions": 0,
    "changes": 131,
    "blob_url": "https://github.com/pochemuto/homealone/blob/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/marafon/page/PersonalAccountPage.java",
    "raw_url": "https://github.com/pochemuto/homealone/raw/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/marafon/page/PersonalAccountPage.java",
    "contents_url": "https://api.github.com/repos/pochemuto/homealone/contents/src/main/java/com/pochemuto/homealone/marafon/page/PersonalAccountPage.java?ref=4ea355e7a3a04856995db3a1b0d31553de90bb14",
    "patch": "@@ -0,0 +1,131 @@\n+package com.pochemuto.homealone.marafon.page;\n+\n+import com.pochemuto.homealone.utils.ScreenShotUtil;\n+import com.pochemuto.homealone.utils.WaitUtils;\n+import org.openqa.selenium.*;\n+import org.openqa.selenium.interactions.Actions;\n+import org.openqa.selenium.support.FindBy;\n+import org.openqa.selenium.support.PageFactory;\n+import org.openqa.selenium.support.ui.ExpectedConditions;\n+import org.openqa.selenium.support.ui.WebDriverWait;\n+\n+import java.io.IOException;\n+import java.time.Duration;\n+\n+public class PersonalAccountPage {\n+\n+    //login page elements:\n+    @FindBy(xpath = \"//*[@id=\\\"loginform-email\\\"]\")\n+    private WebElement loginField;\n+    @FindBy(xpath = \"//*[@id=\\\"loginform-password\\\"]\")\n+    private WebElement passwordField;\n+    @FindBy(xpath = \"//*[@id=\\\"login-form\\\"]//button\")\n+    private WebElement submitButton;\n+\n+    //food page elements:\n+    @FindBy(xpath = \"//header\")\n+    private WebElement header;\n+    @FindBy(xpath = \"//*[text()='Завтрак']\")\n+    private WebElement breakfast;\n+    @FindBy(xpath = \"//*[text()='Перекус 1']\")\n+    private WebElement brunch;\n+    @FindBy(xpath = \"//*[text()='Обед']\")\n+    private WebElement lunch;\n+    @FindBy(xpath = \"//*[text()='Ужин']\")\n+    private WebElement dinner;\n+\n+        //-elements with food description (for evaluating window height):\n+    @FindBy (xpath = \"//*[text()='Завтрак']/following::div[2]\")\n+    private WebElement breakfastComponents;\n+    @FindBy (xpath = \"//*[text()='Перекус 1']/following::div[2]\")\n+    private WebElement brunchComponents;\n+    @FindBy (xpath = \"//*[text()='Обед']/following::div[2]\")\n+    private WebElement lunchComponents;\n+    @FindBy (xpath = \"//*[text()='Ужин']/following::div[2]\")\n+    private WebElement dinnerComponents;\n+\n+    WebDriver driver;\n+    public PersonalAccountPage(WebDriver driver){\n+        this.driver = driver;\n+        PageFactory.initElements(driver, this);\n+    }\n+\n+    public PersonalAccountPage openPage(String url){\n+        driver.get(url);\n+        return this;\n+    }\n+\n+    public PersonalAccountPage windowMaximize(){\n+        driver.manage().window().maximize();\n+        return this;\n+    }\n+\n+    public PersonalAccountPage populateLoginNameField(String name) {\n+        loginField.sendKeys(name);\n+        return this;\n+    }\n+\n+    public PersonalAccountPage populateLoginPasswordField (String pass){\n+        passwordField.sendKeys(pass);\n+        return this;\n+    }\n+\n+    public PersonalAccountPage submitLoginForm (){\n+        submitButton.click();\n+         return this;\n+    }\n+\n+    public String generateFoodPageUrl(long week, int day) {\n+        return \"https://lk.lerchekmarafon.ru/marafon/food?week=\" + week + \"&number=\" + day;\n+    }\n+\n+    public PersonalAccountPage moveToElements(WebElement element)  {\n+        Actions actions = new Actions(driver);\n+        actions.sendKeys(Keys.END).build().perform();\n+\n+        WaitUtils.waitABit(500);\n+        JavascriptExecutor js = (JavascriptExecutor)driver;\n+        js.executeScript(\"arguments[0].scrollIntoView();\", element);\n+\n+        return this;\n+    }\n+\n+\n+    public PersonalAccountPage takeScreenShotsOfFood() throws IOException {\n+        ScreenShotUtil screenShotUtil = new ScreenShotUtil(driver);\n+\n+        WaitUtils.waitToBeVisible(driver, header);\n+\n+        driver.manage().window().setSize(getDimensionOfWindow(dinnerComponents));\n+        moveToElements(dinner);\n+        WaitUtils.waitToBeVisible(driver, dinner);\n+        screenShotUtil.captureScreenShot(dinner.getText());\n+\n+        driver.manage().window().setSize(getDimensionOfWindow(lunchComponents));\n+        moveToElements(lunch);\n+        WaitUtils.waitToBeVisible(driver, lunch);\n+        screenShotUtil.captureScreenShot(lunch.getText());\n+\n+        driver.manage().window().setSize(getDimensionOfWindow(brunchComponents));\n+        moveToElements(brunch);\n+        WaitUtils.waitToBeVisible(driver, brunch);\n+        screenShotUtil.captureScreenShot(brunch.getText());\n+\n+        driver.manage().window().setSize(getDimensionOfWindow(breakfastComponents));\n+        moveToElements(breakfast);\n+        WaitUtils.waitToBeVisible(driver, breakfast);\n+        screenShotUtil.captureScreenShot(breakfast.getText());\n+\n+        return this;\n+    }\n+\n+    public Dimension getDimensionOfWindow(WebElement element){\n+        int height = element.getSize().height;\n+        int width = 831;\n+        Dimension dimension = new Dimension(width, height+200);\n+        return dimension;\n+    }\n+\n+\n+\n+}"
  },
  {
    "sha": "ee5d79c21940cf0be3155cc2a686e4de47c21ac1",
    "filename": "src/main/java/com/pochemuto/homealone/utils/ScreenShotUtil.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/pochemuto/homealone/blob/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/utils/ScreenShotUtil.java",
    "raw_url": "https://github.com/pochemuto/homealone/raw/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/utils/ScreenShotUtil.java",
    "contents_url": "https://api.github.com/repos/pochemuto/homealone/contents/src/main/java/com/pochemuto/homealone/utils/ScreenShotUtil.java?ref=4ea355e7a3a04856995db3a1b0d31553de90bb14",
    "patch": "@@ -0,0 +1,25 @@\n+package com.pochemuto.homealone.utils;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.openqa.selenium.OutputType;\n+import org.openqa.selenium.TakesScreenshot;\n+import org.openqa.selenium.WebDriver;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.UUID;\n+\n+public class ScreenShotUtil {\n+    private WebDriver driver;\n+\n+    public ScreenShotUtil(WebDriver driver){\n+        this.driver = driver;\n+    }\n+    public void captureScreenShot(String fileName) throws IOException {\n+        File scrFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\n+\n+        File targetFile = new File(\"./Screenshots/\" + fileName + \".png\");\n+        FileUtils.copyFile(scrFile, targetFile);\n+\n+    }\n+}"
  },
  {
    "sha": "4de34d641b950958fd5219ebf357e3a6a20f12d7",
    "filename": "src/main/java/com/pochemuto/homealone/utils/WaitUtils.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/pochemuto/homealone/blob/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/utils/WaitUtils.java",
    "raw_url": "https://github.com/pochemuto/homealone/raw/4ea355e7a3a04856995db3a1b0d31553de90bb14/src/main/java/com/pochemuto/homealone/utils/WaitUtils.java",
    "contents_url": "https://api.github.com/repos/pochemuto/homealone/contents/src/main/java/com/pochemuto/homealone/utils/WaitUtils.java?ref=4ea355e7a3a04856995db3a1b0d31553de90bb14",
    "patch": "@@ -0,0 +1,25 @@\n+package com.pochemuto.homealone.utils;\n+\n+import org.openqa.selenium.JavascriptExecutor;\n+import org.openqa.selenium.WebDriver;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.PageFactory;\n+import org.openqa.selenium.support.ui.ExpectedCondition;\n+import org.openqa.selenium.support.ui.ExpectedConditions;\n+import org.openqa.selenium.support.ui.WebDriverWait;\n+\n+public class WaitUtils {\n+\n+    public static void waitABit (int timeout) {\n+        try{\n+            Thread.sleep(timeout);\n+        } catch (InterruptedException e){\n+            e.printStackTrace();\n+        }\n+    }\n+\n+public static void waitToBeVisible (WebDriver driver, WebElement element){\n+        element = new WebDriverWait(driver, 10).until(ExpectedConditions.visibilityOf(element));\n+}\n+\n+}"
  }
]
