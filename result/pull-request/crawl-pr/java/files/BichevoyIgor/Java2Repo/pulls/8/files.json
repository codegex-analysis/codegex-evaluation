[
  {
    "sha": "bd6b1feeeea20069b283fef0c33da92cd83ad335",
    "filename": "out/production/Java2Repo/Apple.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BichevoyIgor/Java2Repo/blob/51df568dbe7be7fcd4760ae3142072c30e71417d/out/production/Java2Repo/Apple.class",
    "raw_url": "https://github.com/BichevoyIgor/Java2Repo/raw/51df568dbe7be7fcd4760ae3142072c30e71417d/out/production/Java2Repo/Apple.class",
    "contents_url": "https://api.github.com/repos/BichevoyIgor/Java2Repo/contents/out/production/Java2Repo/Apple.class?ref=51df568dbe7be7fcd4760ae3142072c30e71417d"
  },
  {
    "sha": "443d886e6a87dcf349dbd5e8a79b1330e6bb21b7",
    "filename": "out/production/Java2Repo/Box.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BichevoyIgor/Java2Repo/blob/51df568dbe7be7fcd4760ae3142072c30e71417d/out/production/Java2Repo/Box.class",
    "raw_url": "https://github.com/BichevoyIgor/Java2Repo/raw/51df568dbe7be7fcd4760ae3142072c30e71417d/out/production/Java2Repo/Box.class",
    "contents_url": "https://api.github.com/repos/BichevoyIgor/Java2Repo/contents/out/production/Java2Repo/Box.class?ref=51df568dbe7be7fcd4760ae3142072c30e71417d"
  },
  {
    "sha": "4fcc61e9790651f45a372445e2ee731244de39e5",
    "filename": "out/production/Java2Repo/Fruit.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BichevoyIgor/Java2Repo/blob/51df568dbe7be7fcd4760ae3142072c30e71417d/out/production/Java2Repo/Fruit.class",
    "raw_url": "https://github.com/BichevoyIgor/Java2Repo/raw/51df568dbe7be7fcd4760ae3142072c30e71417d/out/production/Java2Repo/Fruit.class",
    "contents_url": "https://api.github.com/repos/BichevoyIgor/Java2Repo/contents/out/production/Java2Repo/Fruit.class?ref=51df568dbe7be7fcd4760ae3142072c30e71417d"
  },
  {
    "sha": "5b987305c8817cc6b5d07bace92a6fc0417948a4",
    "filename": "out/production/Java2Repo/Main.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BichevoyIgor/Java2Repo/blob/51df568dbe7be7fcd4760ae3142072c30e71417d/out/production/Java2Repo/Main.class",
    "raw_url": "https://github.com/BichevoyIgor/Java2Repo/raw/51df568dbe7be7fcd4760ae3142072c30e71417d/out/production/Java2Repo/Main.class",
    "contents_url": "https://api.github.com/repos/BichevoyIgor/Java2Repo/contents/out/production/Java2Repo/Main.class?ref=51df568dbe7be7fcd4760ae3142072c30e71417d"
  },
  {
    "sha": "aaadaace610b72bb13f092c1ce9dfe8ab119c3dc",
    "filename": "out/production/Java2Repo/Orange.class",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/BichevoyIgor/Java2Repo/blob/51df568dbe7be7fcd4760ae3142072c30e71417d/out/production/Java2Repo/Orange.class",
    "raw_url": "https://github.com/BichevoyIgor/Java2Repo/raw/51df568dbe7be7fcd4760ae3142072c30e71417d/out/production/Java2Repo/Orange.class",
    "contents_url": "https://api.github.com/repos/BichevoyIgor/Java2Repo/contents/out/production/Java2Repo/Orange.class?ref=51df568dbe7be7fcd4760ae3142072c30e71417d"
  },
  {
    "sha": "5faf09e24a1e9148032d2e47f2f156278ea34db1",
    "filename": "src/Main.java",
    "status": "modified",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/BichevoyIgor/Java2Repo/blob/51df568dbe7be7fcd4760ae3142072c30e71417d/src/Main.java",
    "raw_url": "https://github.com/BichevoyIgor/Java2Repo/raw/51df568dbe7be7fcd4760ae3142072c30e71417d/src/Main.java",
    "contents_url": "https://api.github.com/repos/BichevoyIgor/Java2Repo/contents/src/Main.java?ref=51df568dbe7be7fcd4760ae3142072c30e71417d",
    "patch": "@@ -1,5 +1,91 @@\n+import java.util.ArrayList;\n+import java.util.Collections;\n+\n public class Main {\n+\n     public static void main(String[] args) {\n \n     }\n+\n+    //1. Написать метод, который меняет два элемента массива местами.(массив может быть любого ссылочного типа);\n+    public static <T> void changeElementIntArray(T[] arr, int i, int j) {\n+        if (i >= arr.length || j >= arr.length || i == j) {\n+            System.out.println(\"Нельзя поменять местами указанные элементы\");\n+        } else {\n+            T a = arr[i];\n+            arr[i] = arr[j];\n+            arr[j] = a;\n+        }\n+    }\n+\n+    //2. Написать метод, который преобразует массив в ArrayList;\n+    public static <T> ArrayList<T> convertToArrayList(T[] arr) {\n+        ArrayList<T> list = new ArrayList<>();\n+        Collections.addAll(list, arr);\n+        return list;\n+    }\n+\n+}\n+\n+//3. Большая задача:\n+abstract class Fruit {\n+    private float weight;\n+\n+    public Fruit(float weight) {\n+        this.weight = weight;\n+    }\n+\n+    public float getWeight() {\n+        return weight;\n+    }\n+\n+    public void setWeight(float weight) {\n+        this.weight = weight;\n+    }\n+}\n+\n+class Apple extends Fruit {\n+    public Apple(float w) {\n+        super(w);\n+    }\n }\n+\n+class Orange extends Fruit {\n+    public Orange(float w) {\n+        super(w);\n+    }\n+}\n+\n+class Box<T extends Fruit> {\n+    private ArrayList<T> fruitInBox = new ArrayList<>();\n+\n+    public void setCount(T fruit) {\n+        fruitInBox.add(fruit);\n+    }\n+\n+    public float getWeight() {\n+        if (fruitInBox.size() > 0) {\n+            return fruitInBox.size() * fruitInBox.get(0).getWeight();\n+        } else return 0;\n+    }\n+\n+    public ArrayList<T> getFruitInBox() {\n+        return fruitInBox;\n+    }\n+\n+    public void addFromAnotherBox(Box<T> box) {\n+        fruitInBox.addAll(box.getFruitInBox());\n+        box.getFruitInBox().clear();\n+    }\n+\n+    public void putToAnotherBox(Box<T> box) {\n+        box.addFromAnotherBox(this);\n+    }\n+\n+    public boolean compare(Box box) {\n+        if (this.getWeight() - box.getWeight() == 0) {\n+            return true;\n+        } else return false;\n+    }\n+}\n+"
  }
]
