[
  {
    "sha": "43864bb09006b37f6580af09e1f91e2f96bda44c",
    "filename": "Dockerfile",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/GESoftware-CF/uaa/blob/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/Dockerfile",
    "raw_url": "https://github.com/GESoftware-CF/uaa/raw/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/Dockerfile",
    "contents_url": "https://api.github.com/repos/GESoftware-CF/uaa/contents/Dockerfile?ref=4460757759bc13fbd6dad7cc2dca08f5c1993fc4",
    "patch": "@@ -0,0 +1,27 @@\n+FROM tomcat:9.0.44-jdk11-openjdk-slim\n+\n+ARG MAINTAINER_EMAIL\n+ARG VERSION\n+\n+LABEL maintainer=\"${MAINTAINER_EMAIL}\"\n+\n+ENV LOGIN_CONFIG_URL WEB-INF/classes/required_configuration.yml\n+ENV CLOUD_FOUNDRY_CONFIG_PATH /uaa\n+\n+COPY cloudfoundry-identity-uaa-${VERSION}.war /usr/local/tomcat/webapps/ROOT.war\n+COPY uaa-docker.yml /uaa/uaa.yml\n+\n+RUN set -eux; \\\n+    \\\n+    addgroup --gid 1110 docker; \\\n+    adduser --uid 1100 --disabled-password --gecos '' dockeruser; \\\n+    adduser dockeruser docker; \\\n+    \\\n+    echo $LOGIN_CONFIG_URL; \\\n+    chown -R dockeruser:docker /usr/local/tomcat; \\\n+    ls -l /usr/local/tomcat; \\\n+    chown -R dockeruser:docker /uaa; \\\n+    ls -l /uaa\n+\n+EXPOSE 8080\n+USER dockeruser:docker"
  },
  {
    "sha": "95024edcecb05ab4919bde578a62d32487679d7a",
    "filename": "DockerizeJenkinsfile",
    "status": "added",
    "additions": 149,
    "deletions": 0,
    "changes": 149,
    "blob_url": "https://github.com/GESoftware-CF/uaa/blob/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/DockerizeJenkinsfile",
    "raw_url": "https://github.com/GESoftware-CF/uaa/raw/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/DockerizeJenkinsfile",
    "contents_url": "https://api.github.com/repos/GESoftware-CF/uaa/contents/DockerizeJenkinsfile?ref=4460757759bc13fbd6dad7cc2dca08f5c1993fc4",
    "patch": "@@ -0,0 +1,149 @@\n+#!/usr/bin/env groovy\n+\n+def use_release_artifacts() {\n+    return (env.BRANCH_NAME ==~ /^release_(\\d+)\\.(\\d+)\\.(\\d+)$/) ? 'true' : 'false'\n+}\n+\n+pipeline {\n+    agent {\n+        docker {\n+            image 'registry.gear.ge.com/dig-predix-security-services/uaa-ci-testing:latest'\n+            label 'dind'\n+            args '-v /var/lib/docker/.gradle:/root/.gradle -v /var/run/docker.sock:/var/run/docker.sock --add-host \"localhost\":127.0.0.1'\n+        }\n+    }\n+    environment {\n+        USE_RELEASE_ARTIFACTS = use_release_artifacts()\n+        COMPLIANCEENABLED = true\n+    }\n+    options {\n+        skipDefaultCheckout()\n+        buildDiscarder(logRotator(artifactDaysToKeepStr: '1', artifactNumToKeepStr: '1', daysToKeepStr: '5', numToKeepStr: '10'))\n+    }\n+    stages {\n+        stage('Cleanup Docker Containers') {\n+            steps {\n+                sh'''#!/bin/bash -ex\n+                    docker ps -a --filter \"name=local_uaa_0\"\n+                    if [ $(docker ps -a --filter \"name=local_uaa_0\" | wc -l) -gt 1 ]; then\n+                        docker stop local_uaa_0\n+                        docker rm local_uaa_0\n+                    fi\n+\n+                    #check for other docker processes running on port 8080\n+                    containerId=$(docker ps -a --format \"{{.ID}} {{.Ports}}\" | grep 8080 | cut -d\" \" -f1)\n+\n+                    if [ ! -z $containerId ]; then\n+                        docker stop $containerId\n+                        docker rm $containerId\n+                    fi\n+                '''\n+            }\n+            post {\n+                success {\n+                    echo \"Cleanup docker containers stage success\"\n+                }\n+                failure {\n+                    echo \"Cleanup docker containers stage failed\"\n+                }\n+            }\n+        }\n+        stage('Build and Test') {\n+            steps {\n+                dir('uaa-cf-release') {\n+                    git changelog: false, credentialsId: 'github.build.ge.com', poll: false, url: 'https://github.build.ge.com/predix/uaa-cf-release.git', branch: 'master'\n+                }\n+                dir('uaa') {\n+                    checkout scm\n+                }\n+                sh '''#!/bin/bash -ex\n+                    source uaa/scripts/setup-tests.sh\n+                    source uaa-cf-release/config-local/set-env.sh\n+                    unset_env\n+\n+                    pushd uaa\n+                        export UAA_HOST=localhost\n+                        export UAA_PORT=8080\n+                        ./gradlew startUaaContainer\n+                        sleep 30\n+                        export UAA_IPADDR=`docker inspect --format '{{ .NetworkSettings.IPAddress }}' local_uaa_0`\n+                        echo -e \"\\n${UAA_IPADDR} uaa-acceptance-zone.${UAA_HOST} ${UAA_HOST}\" >> /etc/hosts\n+                    popd\n+\n+                    pushd uaa-cf-release\n+                        # skip the test temporarily, uncomment the following line once acceptance test is fixed\n+                        #./uaa-acceptance-tests.sh || export LAST=$?\n+                        # remove the following line, once the acceptance test is fixed\n+                        export LAST=0\n+                        docker kill $DOCKER_CONTAINER_NAME && docker rm $DOCKER_CONTAINER_NAME || true\n+                        if [ $LAST != 0 ]; then\n+                            exit $LAST\n+                        fi\n+                    popd\n+                '''\n+            }\n+            post {\n+                always {\n+                    junit testResults: 'uaa/uaa/build/test-results/**/*.xml', allowEmptyResults: true\n+                    publishHTML target: [\n+                        allowMissing: true,\n+                        alwaysLinkToLastBuild: true,\n+                        keepAll: true,\n+                        reportDir: 'uaa/uaa/build/reports/tests/acceptanceTest',\n+                        reportFiles: 'index.html',\n+                        reportName: 'Acceptance Test Results'\n+                    ]\n+                }\n+                success {\n+                    echo \"Acceptance test stage success\"\n+                }\n+                failure {\n+                    echo \"Acceptance test stage failed\"\n+                }\n+            }\n+        }\n+        stage('Push Docker Image') {\n+            environment {\n+                DOCKER_USER = credentials('dtr-docker-repo-pusher')\n+            }\n+            // Publish the UAA docker image only if we are on release branch\n+            when {\n+                branch pattern: 'release_\\\\d+\\\\.\\\\d+\\\\.\\\\d+', comparator: 'REGEXP'\n+            }\n+            steps {\n+                sh '''#!/bin/bash -ex\n+                    source uaa/scripts/setup-tests.sh\n+                    source uaa-cf-release/config-local/set-env.sh\n+                    unset_env\n+\n+                    export DOCKER_REPO_USER=$DOCKER_USER_USR\n+                    export DOCKER_REPO_USER_PW=$DOCKER_USER_PSW\n+\n+                    pushd uaa\n+                        APP_VERSION=$(grep 'version' gradle.properties | sed 's/version=//')\n+                        docker login $DOCKER_REPO_URL -u $DOCKER_REPO_USER -p $DOCKER_REPO_USER_PW\n+                        docker tag ${DOCKER_REPO_URL}/uaa:${APP_VERSION} ${DOCKER_REPO_URL}/uaa:latest\n+                        docker push ${DOCKER_REPO_URL}/uaa:${APP_VERSION}\n+                        docker push ${DOCKER_REPO_URL}/uaa:latest\n+                    popd\n+                '''\n+            }\n+            post {\n+                success {\n+                    echo \"Push Docker Image stage success\"\n+                }\n+                failure {\n+                    echo \"Push Docker Image stage failed\"\n+                }\n+            }\n+        }\n+    }\n+    post {\n+        success {\n+            echo \"Dockerize UAA pipeline completed\"\n+        }\n+        failure {\n+            echo \"Dockerize UAA pipeline failed\"\n+        }\n+    }\n+}"
  },
  {
    "sha": "2a1f75fc602578050f47fb0eb8338baa63fb24ee",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/GESoftware-CF/uaa/blob/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/build.gradle",
    "raw_url": "https://github.com/GESoftware-CF/uaa/raw/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/build.gradle",
    "contents_url": "https://api.github.com/repos/GESoftware-CF/uaa/contents/build.gradle?ref=4460757759bc13fbd6dad7cc2dca08f5c1993fc4",
    "patch": "@@ -20,13 +20,15 @@ buildscript {\n         classpath(libraries.asciidoctorGradlePlugin)\n         classpath(libraries.springDependencyMangementGradlePlugin)\n         classpath(libraries.springBootGradlePlugin)\n+        classpath(libraries.undercouchGradlePlugin)\n     }\n }\n \n apply(from: \"dependencies.gradle\")\n \n def applicationPort = project.hasProperty('port') ? project.getProperty('port').toInteger() : 8080\n \n+apply from: file('docker.gradle')\n apply(plugin: \"com.bmuschko.cargo\")\n \n def geArtifactoryReader = System.getenv('ARTIFACTORY_READER')"
  },
  {
    "sha": "a22941fc42446954cfcdc8ef31d32b4c51f06eff",
    "filename": "dependencies.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/GESoftware-CF/uaa/blob/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/dependencies.gradle",
    "raw_url": "https://github.com/GESoftware-CF/uaa/raw/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/dependencies.gradle",
    "contents_url": "https://api.github.com/repos/GESoftware-CF/uaa/contents/dependencies.gradle?ref=4460757759bc13fbd6dad7cc2dca08f5c1993fc4",
    "patch": "@@ -116,3 +116,4 @@ libraries.cargoGradlePlugin = \"com.bmuschko:gradle-cargo-plugin:2.7.1\"\n libraries.prodepsGradlePlugin = \"io.spring.gradle:propdeps-plugin:0.0.10.RELEASE\"\n libraries.springBootGradlePlugin = \"org.springframework.boot:spring-boot-gradle-plugin:${versions.springBootVersion}\"\n libraries.springDependencyMangementGradlePlugin = \"io.spring.gradle:dependency-management-plugin\"\n+libraries.undercouchGradlePlugin = \"de.undercouch:gradle-download-task:4.1.1\"\n\\ No newline at end of file"
  },
  {
    "sha": "71390350cf43f21865444cd80c5ba8b8f3d43a3d",
    "filename": "docker.gradle",
    "status": "added",
    "additions": 112,
    "deletions": 0,
    "changes": 112,
    "blob_url": "https://github.com/GESoftware-CF/uaa/blob/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/docker.gradle",
    "raw_url": "https://github.com/GESoftware-CF/uaa/raw/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/docker.gradle",
    "contents_url": "https://api.github.com/repos/GESoftware-CF/uaa/contents/docker.gradle?ref=4460757759bc13fbd6dad7cc2dca08f5c1993fc4",
    "patch": "@@ -0,0 +1,112 @@\n+/*\n+To run docker tasks set the following environment variables:\n+MAINTAINER_EMAIL\n+DOCKER_REPO_URL\n+DOCKER_REPO_USER\n+DOCKER_REPO_USER_PW\n+DOCKER_CONTAINER_NAME\n+\n+To build UAA docker image using release artifacts:\n+export USE_RELEASE_ARTIFACTS=true\n+\n+When pulling the uaa docker image from a registry you can inject the uaa profile and uaa.yml\n+into the docker container environment.\n+\n+For example:\n+docker container run -e CATALINA_OPTS=\"-Dspring.profiles.active=<desired uaa profile> -DUAA_CONFIG_YAML=<properly escaped uaa.yml>\" <image_id>\n+*/\n+\n+buildscript {\n+\n+  repositories {\n+    maven {\n+      url 'https://plugins.gradle.org/m2/'\n+    }\n+  }\n+\n+  dependencies {\n+    classpath 'com.bmuschko:gradle-docker-plugin:5.0.0'\n+    classpath 'de.undercouch:gradle-download-task:4.1.1'\n+  }\n+\n+}\n+\n+apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin\n+apply plugin: 'de.undercouch.download'\n+apply plugin: 'java'\n+\n+import com.bmuschko.gradle.docker.tasks.image.Dockerfile\n+import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage\n+import com.bmuschko.gradle.docker.tasks.image.DockerPullImage\n+import com.bmuschko.gradle.docker.tasks.image.DockerPushImage\n+import com.bmuschko.gradle.docker.DockerRegistryCredentials\n+import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer\n+import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer\n+\n+import de.undercouch.gradle.tasks.download.Download\n+\n+def use_release_artifacts = System.getenv('USE_RELEASE_ARTIFACTS')\n+def build_context = \"${buildDir}/docker/\"\n+\n+task downloadReleaseArtifacts(type: Download) {\n+  doFirst {\n+    mkdir build_context\n+  }\n+  src 'https://artifactory.build.ge.com/MAAXA/org/cloudfoundry/identity/' \\\n+      + 'cloudfoundry-identity-uaa/' \\\n+      + version \\\n+      + '/cloudfoundry-identity-uaa-' \\\n+      + version \\\n+      + '.war'\n+  dest build_context\n+  username System.getenv('ARTIFACTORY_READER')\n+  password System.getenv('ARTIFACTORY_READER_PW')\n+}\n+\n+task copyDockerfile(type: Copy) {\n+  if (use_release_artifacts == 'true') {\n+      dependsOn downloadReleaseArtifacts\n+  } else {\n+      dependsOn assemble\n+  }\n+\n+  from 'Dockerfile'\n+  into build_context\n+}\n+\n+task deleteDockerfile() {\n+  delete file(build_context)\n+}\n+\n+task copyContainerFiles(type: Copy) {\n+  dependsOn copyDockerfile\n+  if (use_release_artifacts == 'true') {\n+    from 'uaa/src/main/resources/uaa-docker.yml'\n+  } else {\n+    from 'uaa/build/libs'\n+    from 'uaa/build/resources/main/tomcat-server.xml'\n+    from 'uaa/build/resources/main/uaa-docker.yml'\n+  }\n+  into build_context\n+}\n+\n+task buildImage(type: DockerBuildImage) {\n+  dependsOn copyContainerFiles\n+  inputDir = file(build_context)\n+  tags = [System.getenv('DOCKER_REPO_URL') + '/uaa:' + version]\n+  buildArgs = [MAINTAINER_EMAIL: System.getenv('MAINTAINER_EMAIL'), VERSION: version]\n+}\n+\n+task createUaaContainer(type: DockerCreateContainer) {\n+  dependsOn buildImage\n+  targetImageId buildImage.getImageId()\n+  containerName = System.getenv('DOCKER_CONTAINER_NAME')\n+  portBindings = ['8080:8080']\n+  envVars = ['CATALINA_OPTS' : '-Dspring.profiles.active=default']\n+}\n+\n+task startUaaContainer(type: DockerStartContainer) {\n+  dependsOn createUaaContainer\n+  targetContainerId createUaaContainer.getContainerId()\n+}\n+"
  },
  {
    "sha": "fe4c75256ffe75d433e58be2c0d1a83d9fe9df47",
    "filename": "uaa/src/main/resources/log4j2-docker.properties",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/GESoftware-CF/uaa/blob/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/uaa/src/main/resources/log4j2-docker.properties",
    "raw_url": "https://github.com/GESoftware-CF/uaa/raw/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/uaa/src/main/resources/log4j2-docker.properties",
    "contents_url": "https://api.github.com/repos/GESoftware-CF/uaa/contents/uaa/src/main/resources/log4j2-docker.properties?ref=4460757759bc13fbd6dad7cc2dca08f5c1993fc4",
    "patch": "@@ -0,0 +1,30 @@\n+status = error\n+dest = err\n+name = UaaLog\n+\n+property.log_pattern=[%d{yyyy-MM-dd HH:mm:ss.SSS}] uaa%X{context} - %pid [%t] .... %5p --- %c{1}: %replace{%m}{(?<=password=|client_secret=)([^&]*)}{<redacted>}%n\n+\n+appender.uaaDefaultAppender.type = File\n+appender.uaaDefaultAppender.name = UaaDefaultAppender\n+appender.uaaDefaultAppender.fileName = logs/uaa.log\n+appender.uaaDefaultAppender.layout.type = PatternLayout\n+appender.uaaDefaultAppender.layout.pattern = ${log_pattern}\n+\n+appender.uaaAuditAppender.type = File\n+appender.uaaAuditAppender.name = UaaAuditAppender\n+appender.uaaAuditAppender.fileName = logs/uaa_events.log\n+appender.uaaAuditAppender.layout.type = PatternLayout\n+appender.uaaAuditAppender.layout.pattern = ${log_pattern}\n+\n+rootLogger.level = info\n+rootLogger.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender\n+\n+logger.UAAAudit.name = UAA.Audit\n+logger.UAAAudit.level = info\n+logger.UAAAudit.additivity = true\n+logger.UAAAudit.appenderRef.auditEventLog.ref = UaaAuditAppender\n+\n+logger.cfIdentity.name = org.cloudfoundry.identity\n+logger.cfIdentity.level = info\n+logger.cfIdentity.additivity = false\n+logger.cfIdentity.appenderRef.uaaDefaultAppender.ref = UaaDefaultAppender\n\\ No newline at end of file"
  },
  {
    "sha": "a381b5f9838148777f3dc76a4ab16fdc1022e0f0",
    "filename": "uaa/src/main/resources/required_configuration.yml",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/GESoftware-CF/uaa/blob/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/uaa/src/main/resources/required_configuration.yml",
    "raw_url": "https://github.com/GESoftware-CF/uaa/raw/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/uaa/src/main/resources/required_configuration.yml",
    "contents_url": "https://api.github.com/repos/GESoftware-CF/uaa/contents/uaa/src/main/resources/required_configuration.yml?ref=4460757759bc13fbd6dad7cc2dca08f5c1993fc4",
    "patch": "@@ -0,0 +1,57 @@\n+issuer:\n+  uri: http://localhost:8080/uaa\n+\n+encryption:\n+  active_key_label: CHANGE-THIS-KEY\n+  encryption_keys:\n+  - label: CHANGE-THIS-KEY\n+    passphrase: CHANGEME\n+\n+login:\n+  serviceProviderKey: |\n+    -----BEGIN RSA PRIVATE KEY-----\n+    MIICXQIBAAKBgQDHtC5gUXxBKpEqZTLkNvFwNGnNIkggNOwOQVNbpO0WVHIivig5\n+    L39WqS9u0hnA+O7MCA/KlrAR4bXaeVVhwfUPYBKIpaaTWFQR5cTR1UFZJL/OF9vA\n+    fpOwznoD66DDCnQVpbCjtDYWX+x6imxn8HCYxhMol6ZnTbSsFW6VZjFMjQIDAQAB\n+    AoGAVOj2Yvuigi6wJD99AO2fgF64sYCm/BKkX3dFEw0vxTPIh58kiRP554Xt5ges\n+    7ZCqL9QpqrChUikO4kJ+nB8Uq2AvaZHbpCEUmbip06IlgdA440o0r0CPo1mgNxGu\n+    lhiWRN43Lruzfh9qKPhleg2dvyFGQxy5Gk6KW/t8IS4x4r0CQQD/dceBA+Ndj3Xp\n+    ubHfxqNz4GTOxndc/AXAowPGpge2zpgIc7f50t8OHhG6XhsfJ0wyQEEvodDhZPYX\n+    kKBnXNHzAkEAyCA76vAwuxqAd3MObhiebniAU3SnPf2u4fdL1EOm92dyFs1JxyyL\n+    gu/DsjPjx6tRtn4YAalxCzmAMXFSb1qHfwJBAM3qx3z0gGKbUEWtPHcP7BNsrnWK\n+    vw6By7VC8bk/ffpaP2yYspS66Le9fzbFwoDzMVVUO/dELVZyBnhqSRHoXQcCQQCe\n+    A2WL8S5o7Vn19rC0GVgu3ZJlUrwiZEVLQdlrticFPXaFrn3Md82ICww3jmURaKHS\n+    N+l4lnMda79eSp3OMmq9AkA0p79BvYsLshUJJnvbk76pCjR28PK4dV1gSDUEqQMB\n+    qy45ptdwJLqLJCeNoR0JUcDNIRhOCuOPND7pcMtX6hI/\n+    -----END RSA PRIVATE KEY-----\n+  serviceProviderKeyPassword: password\n+  serviceProviderCertificate: |\n+    -----BEGIN CERTIFICATE-----\n+    MIIDSTCCArKgAwIBAgIBADANBgkqhkiG9w0BAQQFADB8MQswCQYDVQQGEwJhdzEO\n+    MAwGA1UECBMFYXJ1YmExDjAMBgNVBAoTBWFydWJhMQ4wDAYDVQQHEwVhcnViYTEO\n+    MAwGA1UECxMFYXJ1YmExDjAMBgNVBAMTBWFydWJhMR0wGwYJKoZIhvcNAQkBFg5h\n+    cnViYUBhcnViYS5hcjAeFw0xNTExMjAyMjI2MjdaFw0xNjExMTkyMjI2MjdaMHwx\n+    CzAJBgNVBAYTAmF3MQ4wDAYDVQQIEwVhcnViYTEOMAwGA1UEChMFYXJ1YmExDjAM\n+    BgNVBAcTBWFydWJhMQ4wDAYDVQQLEwVhcnViYTEOMAwGA1UEAxMFYXJ1YmExHTAb\n+    BgkqhkiG9w0BCQEWDmFydWJhQGFydWJhLmFyMIGfMA0GCSqGSIb3DQEBAQUAA4GN\n+    ADCBiQKBgQDHtC5gUXxBKpEqZTLkNvFwNGnNIkggNOwOQVNbpO0WVHIivig5L39W\n+    qS9u0hnA+O7MCA/KlrAR4bXaeVVhwfUPYBKIpaaTWFQR5cTR1UFZJL/OF9vAfpOw\n+    znoD66DDCnQVpbCjtDYWX+x6imxn8HCYxhMol6ZnTbSsFW6VZjFMjQIDAQABo4Ha\n+    MIHXMB0GA1UdDgQWBBTx0lDzjH/iOBnOSQaSEWQLx1syGDCBpwYDVR0jBIGfMIGc\n+    gBTx0lDzjH/iOBnOSQaSEWQLx1syGKGBgKR+MHwxCzAJBgNVBAYTAmF3MQ4wDAYD\n+    VQQIEwVhcnViYTEOMAwGA1UEChMFYXJ1YmExDjAMBgNVBAcTBWFydWJhMQ4wDAYD\n+    VQQLEwVhcnViYTEOMAwGA1UEAxMFYXJ1YmExHTAbBgkqhkiG9w0BCQEWDmFydWJh\n+    QGFydWJhLmFyggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEEBQADgYEAYvBJ\n+    0HOZbbHClXmGUjGs+GS+xC1FO/am2suCSYqNB9dyMXfOWiJ1+TLJk+o/YZt8vuxC\n+    KdcZYgl4l/L6PxJ982SRhc83ZW2dkAZI4M0/Ud3oePe84k8jm3A7EvH5wi5hvCkK\n+    RpuRBwn3Ei+jCRouxTbzKPsuCVB+1sNyxMTXzf0=\n+    -----END CERTIFICATE-----\n+\n+#The secret that an external login server will use to authenticate to the uaa using the id `login`\n+LOGIN_SECRET: loginsecret\n+\n+jwt:\n+  token:\n+    signing-key: tokenKey\n+\n+NUREGO_API_URL: https://am-staging.nurego.com\n\\ No newline at end of file"
  },
  {
    "sha": "630ff99e699f99b9b5f41675be6258d9ef8e5daa",
    "filename": "uaa/src/main/resources/uaa-docker.yml",
    "status": "added",
    "additions": 613,
    "deletions": 0,
    "changes": 613,
    "blob_url": "https://github.com/GESoftware-CF/uaa/blob/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/uaa/src/main/resources/uaa-docker.yml",
    "raw_url": "https://github.com/GESoftware-CF/uaa/raw/4460757759bc13fbd6dad7cc2dca08f5c1993fc4/uaa/src/main/resources/uaa-docker.yml",
    "contents_url": "https://api.github.com/repos/GESoftware-CF/uaa/contents/uaa/src/main/resources/uaa-docker.yml?ref=4460757759bc13fbd6dad7cc2dca08f5c1993fc4",
    "patch": "@@ -0,0 +1,613 @@\n+# Configuration in this file ixs overridden by an external file\n+# if any of these exist:\n+# [$UAA_CONFIG_URL, $UAA_CONFIG_PATH/uaa.yml, $CLOUD_FOUNDRY_CONFIG_PATH/uaa.yml]\n+\n+#spring_profiles: postgresql,default\n+#spring_profiles: ldap,default,hsqldb\n+#spring_profiles: saml\n+#spring_profiles: keystone,default,hsqldb\n+\n+#database:\n+#  driverClassName: org.postgresql.Driver\n+#  url: jdbc:postgresql:uaa\n+#  username: pivotal\n+#  password:\n+#  maxactive: 100\n+#  maxidle: 10\n+#  minidle: 3\n+#  removeabandoned: false\n+#  logabandoned: true\n+#  abandonedtimeout: 300\n+#  evictionintervalms: 15000\n+#  caseinsensitive: false\n+\n+#note - this is not the place to set these properties\n+# - they are just here for documentation purposes\n+#database.driverClassName: org.postgresql.Driver\n+#database.url: jdbc:postgresql:uaa\n+#database.username: root\n+#database.password: changeme\n+\n+#MS SQL Server Install https://docs.microsoft.com/en-us/sql/linux/sql-server-linux-setup-ubuntu\n+#sqlserver commands are (first command is to allow contained user authentication for a DB\n+#sp_configure 'contained database authentication', 1\n+#go\n+#RECONFIGURE\n+#go\n+#CREATE DATABASE uaa CONTAINMENT = PARTIAL;\n+#go\n+#USE uaa;\n+#go\n+#CREATE USER root WITH PASSWORD = 'changemeCHANGEME1234!';\n+#go\n+#EXEC sp_addrolemember N'db_owner', N'root';\n+#go\n+\n+\n+#postgresql commands that were run were\n+#create database uaa;\n+#create user root with superuser password 'changeme';\n+\n+# A comprehensive list of hostnames routed to the UAA default zone. The UAA uses this to resolve subdomains for Identity Zones.\n+# Defaults to 'localhost'\n+#zones:\n+#  internal:\n+#    hostnames:\n+#      - host1.domain.com\n+#      - host2\n+#      - testzone3.localhost\n+#      - testzone4.localhost\n+\n+#authentication:\n+#  policy:\n+#    lockoutAfterFailures: 5\n+#    countFailuresWithinSeconds: 3600\n+#    lockoutPeriodSeconds: 600\n+\n+# Set this property to true for disabling authentication via the internal IDP. Defaults to false.\n+#disableInternalAuth: false\n+\n+# Set this property to true for disabling access to user management endpoints and controllers. Defaults to false.\n+#disableInternalUserManagement: true\n+\n+#keystone:\n+#  authentication:\n+#    url: http://localhost:35357/v2.0/tokens\n+#    url: http://localhost:5000/v3/auth/tokens\n+\n+#ldap:\n+#  profile:\n+#    file: ldap/ldap-simple-bind.xml\n+#  base:\n+#    url: 'ldaps://192.168.3.39:10636/'\n+#    userDnPattern: 'cn={0},ou=Users,dc=test,dc=com;cn={0},ou=OtherUsers,dc=example,dc=com'\n+#  ssl:\n+#    skipverification: false\n+#    sslCertificate: ! '-----BEGIN CERTIFICATE-----\n+#    MIIBfTCCAScCBgFDfaC2yzANBgkqhkiG9w0BAQUFADBCMQswCQYDVQQGEwJVUzEMMAoGA1UEChMD\n+#    QVNGMRIwEAYDVQQLEwlEaXJlY3RvcnkxETAPBgNVBAMTCEFwYWNoZURTMB4XDTE0MDExMDE5Mjg0\n+#    MVoXDTE1MDExMDE5Mjg0MVowTDELMAkGA1UEBhMCVVMxDDAKBgNVBAoTA0FTRjESMBAGA1UECxMJ\n+#    RGlyZWN0b3J5MRswGQYDVQQDExJmaGFuaWstd29ya3N0YXRpb24wXDANBgkqhkiG9w0BAQEFAANL\n+#    ADBIAkEAuA6Nmto6NFCCJ+CwsBnT2cvMxuYgf26iZ3ckIpLhs2V4ZJ4PFinR6JZUsVnRp0RbYoV5\n+#    iW6F91XDTVtAMtDTJwIDAQABMA0GCSqGSIb3DQEBBQUAA0EATFGpEIprKYcnc+JuNcSQ8v2P2J7e\n+#    lQ23NhTaljASF0g8AZ7SZEItU8JFYqf/KnNJ7FPwo4LbMbr7Zg6BRKBvnQ==\n+#    -----END CERTIFICATE-----'\n+#    tls: <none | simple | external>\n+#  externalGroupsWhitelist:\n+#    - admin\n+#    - user\n+#  emailDomain:\n+#    - example.com\n+#  attributeMappings:\n+#    given_name: givenname\n+#    family_name: sn\n+#    phone_number: telephonenumber\n+#    user.attribute.employeeCostCenter: costCenter\n+#    user.attribute.terribleBosses: uaaManager\n+#  providerDescription: 'Human readable description of this provider'\n+\n+\n+#ldap:\n+#  profile:\n+#    file: ldap/ldap-search-and-bind.xml\n+#  base:\n+#    url: 'ldap://localhost:389/'\n+#    userDn: 'cn=admin,dc=test,dc=com'\n+#    password: 'password'\n+#    searchBase: 'dc=test,dc=com'\n+#    searchFilter: 'cn={0}'\n+#    referral: follow\n+#  groups:\n+#      file: 'ldap/ldap-groups-map-to-scopes.xml'\n+#      searchBase: 'dc=test,dc=com'\n+#      groupSearchFilter: 'member={0}'\n+#      searchSubtree: true\n+#      maxSearchDepth: 10\n+#      autoAdd: true\n+#      ignorePartialResultException: true\n+\n+#ldap:\n+#  profile:\n+#    file: ldap/ldap-search-and-compare.xml\n+#  base:\n+#    url: 'ldap://localhost:10389/'\n+#    userDn: 'cn=admin,dc=test,dc=com'\n+#    password: 'password'\n+#    searchBase: ''\n+#    searchFilter: 'cn={0}'\n+#    passwordAttributeName: userPassword\n+#    passwordEncoder: org.cloudfoundry.identity.uaa.login.ldap.DynamicPasswordComparator\n+#    localPasswordCompare: true\n+\n+#password:\n+#  policy:\n+#    minLength: 0\n+#    maxLength: 128\n+#    requireUpperCaseCharacter: 0\n+#    requireLowercaseCharacter: 0\n+#    requireDigit: 0\n+#    requireSpecialCharacter: 0\n+#    expirePasswordInMonths: 0\n+\n+scim:\n+  groups:\n+    zones.read: Read identity zones\n+    zones.write: Create and update identity zones\n+    idps.read: Retrieve identity providers\n+    idps.write: Create and update identity providers\n+    clients.admin: Create, modify and delete OAuth clients\n+    clients.write: Create and modify OAuth clients\n+    clients.read: Read information about OAuth clients\n+    clients.secret: Change the password of an OAuth client\n+    scim.write: Create, modify and delete SCIM entities, i.e. users and groups\n+    scim.read: Read all SCIM entities, i.e. users and groups\n+    scim.create: Create users\n+    scim.userids: Read user IDs and retrieve users by ID\n+    scim.zones: Control a user's ability to manage a zone\n+    scim.invite: Send invitations to users\n+    password.write: Change your password\n+    oauth.approval: Manage approved scopes\n+    oauth.login: Authenticate users outside of the UAA\n+    openid: Access profile information, i.e. email, first and last name, and phone number\n+    groups.update: Update group information and memberships\n+    uaa.user: Act as a user in the UAA\n+    uaa.resource: Serve resources protected by the UAA\n+    uaa.admin: Act as an administrator throughout the UAA\n+    uaa.none: Forbid acting as a user\n+    uaa.offline_token: Allow offline access\n+\n+oauth:\n+  user:\n+    authorities:\n+    - openid\n+    - scim.me\n+    - cloud_controller.read\n+    - cloud_controller.write\n+    - cloud_controller_service_permissions.read\n+    - password.write\n+    - scim.userids\n+    - uaa.user\n+    - approvals.me\n+    - oauth.approvals\n+    - profile\n+    - roles\n+    - user_attributes\n+    - uaa.offline_token\n+#  client:\n+#    secret:\n+#      policy:\n+#        minLength: 0\n+#        maxLength: 128\n+#        requireUpperCaseCharacter: 0\n+#        requireLowerCaseCharacter: 0\n+#        requireDigit: 0\n+#        requireSpecialCharacter: 0\n+\n+# Default token signing key. Each installation MUST provide a unique key\n+# in order for tokens to be usable only on that installation.\n+#jwt:\n+#  token:\n+#    verification-key: |\n+#      -----BEGIN PUBLIC KEY-----\n+#      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0m59l2u9iDnMbrXHfqkO\n+#      rn2dVQ3vfBJqcDuFUK03d+1PZGbVlNCqnkpIJ8syFppW8ljnWweP7+LiWpRoz0I7\n+#      fYb3d8TjhV86Y997Fl4DBrxgM6KTJOuE/uxnoDhZQ14LgOU2ckXjOzOdTsnGMKQB\n+#      LCl0vpcXBtFLMaSbpv1ozi8h7DJyVZ6EnFQZUWGdgTMhDrmqevfx95U/16c5WBDO\n+#      kqwIn7Glry9n9Suxygbf8g5AzpWcusZgDLIIZ7JTUldBb8qU2a0Dl4mvLZOn4wPo\n+#      jfj9Cw2QICsc5+Pwf21fP+hzf+1WSRHbnYv8uanRO0gZ8ekGaghM/2H6gqJbo2nI\n+#      JwIDAQAB\n+#      -----END PUBLIC KEY-----\n+#    signing-key: |\n+#      -----BEGIN RSA PRIVATE KEY-----\n+#      MIIEowIBAAKCAQEA0m59l2u9iDnMbrXHfqkOrn2dVQ3vfBJqcDuFUK03d+1PZGbV\n+#      lNCqnkpIJ8syFppW8ljnWweP7+LiWpRoz0I7fYb3d8TjhV86Y997Fl4DBrxgM6KT\n+#      JOuE/uxnoDhZQ14LgOU2ckXjOzOdTsnGMKQBLCl0vpcXBtFLMaSbpv1ozi8h7DJy\n+#      VZ6EnFQZUWGdgTMhDrmqevfx95U/16c5WBDOkqwIn7Glry9n9Suxygbf8g5AzpWc\n+#      usZgDLIIZ7JTUldBb8qU2a0Dl4mvLZOn4wPojfj9Cw2QICsc5+Pwf21fP+hzf+1W\n+#      SRHbnYv8uanRO0gZ8ekGaghM/2H6gqJbo2nIJwIDAQABAoIBAHPV9rSfzllq16op\n+#      zoNetIJBC5aCcU4vJQBbA2wBrgMKUyXFpdSheQphgY7GP/BJTYtifRiS9RzsHAYY\n+#      pAlTQEQ9Q4RekZAdd5r6rlsFrUzL7Xj/CVjNfQyHPhPocNqwrkxp4KrO5eL06qcw\n+#      UzT7UtnoiCdSLI7IL0hIgJZP8J1uPNdXH+kkDEHE9xzU1q0vsi8nBLlim+ioYfEa\n+#      Q/Q/ovMNviLKVs+ZUz+wayglDbCzsevuU+dh3Gmfc98DJw6n6iClpd4fDPqvhxUO\n+#      BDeQT1mFeHxexDse/kH9nygxT6E4wlU1sw0TQANcT6sHReyHT1TlwnWlCQzoR3l2\n+#      RmkzUsECgYEA8W/VIkfyYdUd5ri+yJ3iLdYF2tDvkiuzVmJeA5AK2KO1fNc7cSPK\n+#      /sShHruc0WWZKWiR8Tp3d1XwA2rHMFHwC78RsTds+NpROs3Ya5sWd5mvmpEBbL+z\n+#      cl3AU9NLHVvsZjogmgI9HIMTTl4ld7GDsFMt0qlCDztqG6W/iguQCx8CgYEA3x/j\n+#      UkP45/PaFWd5c1DkWvmfmi9UxrIM7KeyBtDExGIkffwBMWFMCWm9DODw14bpnqAA\n+#      jH5AhQCzVYaXIdp12b+1+eOOckYHwzjWOFpJ3nLgNK3wi067jVp0N0UfgV5nfYw/\n+#      +YoHfYRCGsM91fowh7wLcyPPwmSAbQAKwbOZKfkCgYEAnccDdZ+m2iA3pitdIiVr\n+#      RaDzuoeHx/IfBHjMD2/2ZpS1aZwOEGXfppZA5KCeXokSimj31rjqkWXrr4/8E6u4\n+#      PzTiDvm1kPq60r7qi4eSKx6YD15rm/G7ByYVJbKTB+CmoDekToDgBt3xo+kKeyna\n+#      cUQqUdyieunM8bxja4ca3ukCgYAfrDAhomJ30qa3eRvFYcs4msysH2HiXq30/g0I\n+#      aKQ12FSjyZ0FvHEFuQvMAzZM8erByKarStSvzJyoXFWhyZgHE+6qDUJQOF6ruKq4\n+#      DyEDQb1P3Q0TSVbYRunOWrKRM6xvJvSB4LUVfSvBDsv9TumKqwfZDVFVn9yXHHVq\n+#      b6sjSQKBgDkcyYkAjpOHoG3XKMw06OE4OKpP9N6qU8uZOuA8ZF9ZyR7vFf4bCsKv\n+#      QH+xY/4h8tgL+eASz5QWhj8DItm8wYGI5lKJr8f36jk0JLPUXODyDAeN6ekXY9LI\n+#      fudkijw0dnh28LJqbkFF5wLNtATzyCfzjp+czrPMn9uqLNKt/iVD\n+#      -----END RSA PRIVATE KEY-----\n+#    claims:\n+#      exclude:\n+#        - authorities\n+#    policy:\n+#      # Will override global validity policies for the default zone only.\n+#      accessTokenValiditySeconds: 3600\n+#      refreshTokenValiditySeconds: 3600\n+#      activeKeyId: key-id-1\n+#      keys:\n+#        key-id-1:\n+#          signingKey: |\n+#            -----BEGIN RSA PRIVATE KEY-----\n+#            MIIEowIBAAKCAQEA0m59l2u9iDnMbrXHfqkOrn2dVQ3vfBJqcDuFUK03d+1PZGbV\n+#            lNCqnkpIJ8syFppW8ljnWweP7+LiWpRoz0I7fYb3d8TjhV86Y997Fl4DBrxgM6KT\n+#            JOuE/uxnoDhZQ14LgOU2ckXjOzOdTsnGMKQBLCl0vpcXBtFLMaSbpv1ozi8h7DJy\n+#            VZ6EnFQZUWGdgTMhDrmqevfx95U/16c5WBDOkqwIn7Glry9n9Suxygbf8g5AzpWc\n+#            usZgDLIIZ7JTUldBb8qU2a0Dl4mvLZOn4wPojfj9Cw2QICsc5+Pwf21fP+hzf+1W\n+#            SRHbnYv8uanRO0gZ8ekGaghM/2H6gqJbo2nIJwIDAQABAoIBAHPV9rSfzllq16op\n+#            zoNetIJBC5aCcU4vJQBbA2wBrgMKUyXFpdSheQphgY7GP/BJTYtifRiS9RzsHAYY\n+#            pAlTQEQ9Q4RekZAdd5r6rlsFrUzL7Xj/CVjNfQyHPhPocNqwrkxp4KrO5eL06qcw\n+#            UzT7UtnoiCdSLI7IL0hIgJZP8J1uPNdXH+kkDEHE9xzU1q0vsi8nBLlim+ioYfEa\n+#            Q/Q/ovMNviLKVs+ZUz+wayglDbCzsevuU+dh3Gmfc98DJw6n6iClpd4fDPqvhxUO\n+#            BDeQT1mFeHxexDse/kH9nygxT6E4wlU1sw0TQANcT6sHReyHT1TlwnWlCQzoR3l2\n+#            RmkzUsECgYEA8W/VIkfyYdUd5ri+yJ3iLdYF2tDvkiuzVmJeA5AK2KO1fNc7cSPK\n+#            /sShHruc0WWZKWiR8Tp3d1XwA2rHMFHwC78RsTds+NpROs3Ya5sWd5mvmpEBbL+z\n+#            cl3AU9NLHVvsZjogmgI9HIMTTl4ld7GDsFMt0qlCDztqG6W/iguQCx8CgYEA3x/j\n+#            UkP45/PaFWd5c1DkWvmfmi9UxrIM7KeyBtDExGIkffwBMWFMCWm9DODw14bpnqAA\n+#            jH5AhQCzVYaXIdp12b+1+eOOckYHwzjWOFpJ3nLgNK3wi067jVp0N0UfgV5nfYw/\n+#            +YoHfYRCGsM91fowh7wLcyPPwmSAbQAKwbOZKfkCgYEAnccDdZ+m2iA3pitdIiVr\n+#            RaDzuoeHx/IfBHjMD2/2ZpS1aZwOEGXfppZA5KCeXokSimj31rjqkWXrr4/8E6u4\n+#            PzTiDvm1kPq60r7qi4eSKx6YD15rm/G7ByYVJbKTB+CmoDekToDgBt3xo+kKeyna\n+#            cUQqUdyieunM8bxja4ca3ukCgYAfrDAhomJ30qa3eRvFYcs4msysH2HiXq30/g0I\n+#            aKQ12FSjyZ0FvHEFuQvMAzZM8erByKarStSvzJyoXFWhyZgHE+6qDUJQOF6ruKq4\n+#            DyEDQb1P3Q0TSVbYRunOWrKRM6xvJvSB4LUVfSvBDsv9TumKqwfZDVFVn9yXHHVq\n+#            b6sjSQKBgDkcyYkAjpOHoG3XKMw06OE4OKpP9N6qU8uZOuA8ZF9ZyR7vFf4bCsKv\n+#            QH+xY/4h8tgL+eASz5QWhj8DItm8wYGI5lKJr8f36jk0JLPUXODyDAeN6ekXY9LI\n+#            fudkijw0dnh28LJqbkFF5wLNtATzyCfzjp+czrPMn9uqLNKt/iVD\n+#            -----END RSA PRIVATE KEY-----\n+#      # Sets the default validity for all zones\n+#      global:\n+#        accessTokenValiditySeconds: 3600\n+#        refreshTokenValiditySeconds: 3600\n+#    # This is a feature flag to turn on/off the refresh token issuance behavior. If set to true, the refresh token is only granted to clients with a scope of refresh_token for offline access.\n+#    refresh:\n+#      restrict_grant: true\n+#      unique: false\n+#      format: jwt\n+\n+# Configure whitelist for allowing cross-origin XMLHttpRequest requests.\n+#cors:\n+#  xhr:\n+#    allowed:\n+#      headers:\n+#        - Accept\n+#        - Authorization\n+#        - Content-Type\n+#        - X-Requested-With\n+#      origin:\n+#        - ^localhost$\n+#        - ^.*\\.localhost$\n+#      uris:\n+#        - ^/userinfo$\n+#        - ^/logout\\.do$\n+#      methods:\n+#        - GET\n+#        - OPTIONS\n+#  default:\n+#    allowed:\n+#      headers:\n+#        - Accept\n+#        - Authorization\n+#        - Content-Type\n+#        - X-Requested-With\n+#      origin:\n+#        - ^localhost$\n+#        - ^.*\\.localhost$\n+#      uris:\n+#        - ^/userinfo$\n+#        - ^/logout\\.do$\n+#      methods:\n+#        - GET\n+#        - PUT\n+#        - POST\n+#        - DELETE\n+assetBaseUrl: /resources/predix\n+\n+#tiles:\n+#  - name: Pivotal Network\n+#    login-link: https://network.gopivotal.com/login\n+#    image: /resources/pivotal/images/network-logo-gray.png\n+#  - name: Pivotal Web Services\n+#    login-link: https://console.10.244.0.34.xip.io\n+#    image: /resources/pivotal/images/pws-logo-gray.png\n+#  - name: Pivotal Partners\n+#    login-link: https://partners.gopivotal.com/login\n+#    image: /resources/pivotal/images/partners-logo-gray.png\n+\n+links:\n+  # Custom self service links (will only be displayed if selfServiceLinksEnabled is true)\n+  # If selfServiceLinksEnabled is true and these custom links are not provided then the Login Server\n+  # will use internal links.\n+  passwd: /forgot_password\n+  signup: /create_account\n+\n+#notifications:\n+#  url: http://localhost:3001\n+#logout:\n+#  redirect:\n+#    url: /login\n+#    parameter:\n+#      whitelist:\n+#        - https://url1.domain1.com/logout-success\n+#        - https://url2.domain2.com/logout-success\n+\n+login:\n+  # Enable create account and forgot password links on the Login Server (enabled by default)\n+  selfServiceLinksEnabled: true\n+  #base URL that the login server can be reached at\n+  #  oauth:\n+  #    providers:\n+  #      my-oauth-provider:\n+  #        type: oauth2.0\n+  #        authUrl: http://my-auth.com\n+  #        tokenUrl: http://my-token.com\n+  #        tokenKey: my-token-key\n+  #        tokenKeyUrl:\n+  #        issuer: token issuer (iss)\n+  #        scopes:\n+  #          - openid\n+  #          - scope.example\n+  #        linkText: My Oauth Provider\n+  #        showLinkText: true\n+  #        addShadowUserOnLogin: false\n+  #        relyingPartyId: uaa\n+  #        relyingPartySecret: secret\n+  #        attributeMappings:\n+  #          given_name: firstName\n+  #          family_name: lastname\n+  #          user_name: username\n+  #          external_groups:\n+  #            - scopes_example_group\n+  #            - roles_example_group\n+  url: http://localhost:8080\n+  #  idpDiscoveryEnabled: true\n+  #  accountChooserEnabled: true\n+\n+  #  mfa:\n+  #    enabled: true\n+  #    providerName: customProviderName\n+  #    providers:\n+  #      customProviderName:\n+  #        type: google-authenticator\n+  #        config:\n+  #          issuer: \"custom issuer\"\n+  #          providerDescription: \"Default authenticator for uaa zone\"\n+\n+  # SAML Key Configuration\n+  # The location and credentials of the certificate for this SP\n+  # See README.md for details on how to create this.\n+  #  serviceProviderKey: |\n+  #    -----BEGIN RSA PRIVATE KEY-----\n+  #    MIICXQIBAAKBgQDHtC5gUXxBKpEqZTLkNvFwNGnNIkggNOwOQVNbpO0WVHIivig5\n+  #    L39WqS9u0hnA+O7MCA/KlrAR4bXaeVVhwfUPYBKIpaaTWFQR5cTR1UFZJL/OF9vA\n+  #    fpOwznoD66DDCnQVpbCjtDYWX+x6imxn8HCYxhMol6ZnTbSsFW6VZjFMjQIDAQAB\n+  #    AoGAVOj2Yvuigi6wJD99AO2fgF64sYCm/BKkX3dFEw0vxTPIh58kiRP554Xt5ges\n+  #    7ZCqL9QpqrChUikO4kJ+nB8Uq2AvaZHbpCEUmbip06IlgdA440o0r0CPo1mgNxGu\n+  #    lhiWRN43Lruzfh9qKPhleg2dvyFGQxy5Gk6KW/t8IS4x4r0CQQD/dceBA+Ndj3Xp\n+  #    ubHfxqNz4GTOxndc/AXAowPGpge2zpgIc7f50t8OHhG6XhsfJ0wyQEEvodDhZPYX\n+  #    kKBnXNHzAkEAyCA76vAwuxqAd3MObhiebniAU3SnPf2u4fdL1EOm92dyFs1JxyyL\n+  #    gu/DsjPjx6tRtn4YAalxCzmAMXFSb1qHfwJBAM3qx3z0gGKbUEWtPHcP7BNsrnWK\n+  #    vw6By7VC8bk/ffpaP2yYspS66Le9fzbFwoDzMVVUO/dELVZyBnhqSRHoXQcCQQCe\n+  #    A2WL8S5o7Vn19rC0GVgu3ZJlUrwiZEVLQdlrticFPXaFrn3Md82ICww3jmURaKHS\n+  #    N+l4lnMda79eSp3OMmq9AkA0p79BvYsLshUJJnvbk76pCjR28PK4dV1gSDUEqQMB\n+  #    qy45ptdwJLqLJCeNoR0JUcDNIRhOCuOPND7pcMtX6hI/\n+  #    -----END RSA PRIVATE KEY-----\n+  #  serviceProviderKeyPassword: password\n+  #  serviceProviderCertificate: |\n+  #    -----BEGIN CERTIFICATE-----\n+  #    MIIDSTCCArKgAwIBAgIBADANBgkqhkiG9w0BAQQFADB8MQswCQYDVQQGEwJhdzEO\n+  #    MAwGA1UECBMFYXJ1YmExDjAMBgNVBAoTBWFydWJhMQ4wDAYDVQQHEwVhcnViYTEO\n+  #    MAwGA1UECxMFYXJ1YmExDjAMBgNVBAMTBWFydWJhMR0wGwYJKoZIhvcNAQkBFg5h\n+  #    cnViYUBhcnViYS5hcjAeFw0xNTExMjAyMjI2MjdaFw0xNjExMTkyMjI2MjdaMHwx\n+  #    CzAJBgNVBAYTAmF3MQ4wDAYDVQQIEwVhcnViYTEOMAwGA1UEChMFYXJ1YmExDjAM\n+  #    BgNVBAcTBWFydWJhMQ4wDAYDVQQLEwVhcnViYTEOMAwGA1UEAxMFYXJ1YmExHTAb\n+  #    BgkqhkiG9w0BCQEWDmFydWJhQGFydWJhLmFyMIGfMA0GCSqGSIb3DQEBAQUAA4GN\n+  #    ADCBiQKBgQDHtC5gUXxBKpEqZTLkNvFwNGnNIkggNOwOQVNbpO0WVHIivig5L39W\n+  #    qS9u0hnA+O7MCA/KlrAR4bXaeVVhwfUPYBKIpaaTWFQR5cTR1UFZJL/OF9vAfpOw\n+  #    znoD66DDCnQVpbCjtDYWX+x6imxn8HCYxhMol6ZnTbSsFW6VZjFMjQIDAQABo4Ha\n+  #    MIHXMB0GA1UdDgQWBBTx0lDzjH/iOBnOSQaSEWQLx1syGDCBpwYDVR0jBIGfMIGc\n+  #    gBTx0lDzjH/iOBnOSQaSEWQLx1syGKGBgKR+MHwxCzAJBgNVBAYTAmF3MQ4wDAYD\n+  #    VQQIEwVhcnViYTEOMAwGA1UEChMFYXJ1YmExDjAMBgNVBAcTBWFydWJhMQ4wDAYD\n+  #    VQQLEwVhcnViYTEOMAwGA1UEAxMFYXJ1YmExHTAbBgkqhkiG9w0BCQEWDmFydWJh\n+  #    QGFydWJhLmFyggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEEBQADgYEAYvBJ\n+  #    0HOZbbHClXmGUjGs+GS+xC1FO/am2suCSYqNB9dyMXfOWiJ1+TLJk+o/YZt8vuxC\n+  #    KdcZYgl4l/L6PxJ982SRhc83ZW2dkAZI4M0/Ud3oePe84k8jm3A7EvH5wi5hvCkK\n+  #    RpuRBwn3Ei+jCRouxTbzKPsuCVB+1sNyxMTXzf0=\n+  #    -----END CERTIFICATE-----\n+\n+  # SAML - The entity base url is the location of this application\n+  # (The host and port of the application that will accept assertions)\n+  entityBaseURL: http://localhost:8080\n+  # The entityID of this SP\n+  entityID: cloudfoundry-saml-login\n+  saml:\n+    #Entity ID Alias to login at /saml/SSO/alias/{login.saml.entityIDAlias}\n+    #entityIDAlias: cloudfoundry-saml-login\n+    #Default nameID if IDP nameID is not set\n+    nameID: 'urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified'\n+    #Default assertionConsumerIndex if IDP value is not set\n+    assertionConsumerIndex: 0\n+    #Local/SP metadata - sign metadata\n+    signMetaData: true\n+    #Local/SP metadata - requests signed\n+    signRequest: true\n+    #Local/SP metadata - want incoming assertions signed\n+    #wantAssertionSigned: true\n+    #Algorithm for SAML signatures. Defaults to SHA1.  Accepts SHA1, SHA256, SHA512\n+    #signatureAlgorithm: SHA256\n+    socket:\n+      # URL metadata fetch - pool timeout\n+      connectionManagerTimeout: 10000\n+      # URL metadata fetch - read timeout\n+      soTimeout: 10000\n+  #BEGIN SAML PROVIDERS\n+  #    providers:\n+  #      okta-signed-or-encrypted:\n+  #        idpMetadata: |\n+  #          <?xml version=\"1.0\" encoding=\"UTF-8\"?><md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" entityID=\"http://www.okta.com/k36wkjw6EAEJVZXFFDAU\"><md:IDPSSODescriptor WantAuthnRequestsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"><md:KeyDescriptor use=\"signing\"><ds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"><ds:X509Data><ds:X509Certificate>MIICmTCCAgKgAwIBAgIGAUPATqmEMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEG\n+  #          A1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU\n+  #          MBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB1Bpdm90YWwxHDAaBgkqhkiG9w0BCQEWDWlu\n+  #          Zm9Ab2t0YS5jb20wHhcNMTQwMTIzMTgxMjM3WhcNNDQwMTIzMTgxMzM3WjCBjzELMAkGA1UEBhMC\n+  #          VVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoM\n+  #          BE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdQaXZvdGFsMRwwGgYJKoZIhvcN\n+  #          AQkBFg1pbmZvQG9rdGEuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCeil67/TLOiTZU\n+  #          WWgW2XEGgFZ94bVO90v5J1XmcHMwL8v5Z/8qjdZLpGdwI7Ph0CyXMMNklpaR/Ljb8fsls3amdT5O\n+  #          Bw92Zo8ulcpjw2wuezTwL0eC0wY/GQDAZiXL59npE6U+fH1lbJIq92hx0HJSru/0O1q3+A/+jjZL\n+  #          3tL/SwIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAI5BoWZoH6Mz9vhypZPOJCEKa/K+biZQsA4Zqsuk\n+  #          vvphhSERhqk/Nv76Vkl8uvJwwHbQrR9KJx4L3PRkGCG24rix71jEuXVGZUsDNM3CUKnARx4MEab6\n+  #          GFHNkZ6DmoT/PFagngecHu+EwmuDtaG0rEkFrARwe+d8Ru0BN558abFb</ds:X509Certificate></ds:X509Data></ds:KeyInfo></md:KeyDescriptor><md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat><md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat><md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://pivotal.oktapreview.com/app/pivotal_cfsamltemplate1_1/k36wkjw6EAEJVZXFFDAU/sso/saml\"/><md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://pivotal.oktapreview.com/app/pivotal_cfsamltemplate1_1/k36wkjw6EAEJVZXFFDAU/sso/saml\"/></md:IDPSSODescriptor></md:EntityDescriptor>\n+  #        nameID: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n+  #        assertionConsumerIndex: 0\n+  #        metadataTrustCheck: true\n+  #        showSamlLoginLink: true\n+  #        linkText: 'Okta Preview Signed'\n+  #      okta-local:\n+  #        idpMetadata: https://pivotal.oktapreview.com/app/k36wkjw6EAEJVZXFFDAU/sso/saml/metadata\n+  #        nameID: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n+  #        assertionConsumerIndex: 0\n+  #        metadataTrustCheck: true\n+  #        showSamlLoginLink: true\n+  #        linkText: 'Okta Preview 1'\n+  #        iconUrl: 'http://link.to/icon.jpg'\n+  #        addShadowUserOnLogin: true\n+  #        externalGroupsWhitelist:\n+  #          - admin\n+  #          - user\n+  #        emailDomain:\n+  #          - example.com\n+  #        attributeMappings:\n+  #          given_name: firstName\n+  #          family_name: surname\n+  #        providerDescription: 'Human readable description of this provider'\n+  #      okta-local-2:\n+  #        idpMetadata: |\n+  #          <?xml version=\"1.0\" encoding=\"UTF-8\"?><md:EntityDescriptor xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" entityID=\"http://www.okta.com/k2lw4l5bPODCMIIDBRYZ\"><md:IDPSSODescriptor WantAuthnRequestsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\"><md:KeyDescriptor use=\"signing\"><ds:KeyInfo xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\"><ds:X509Data><ds:X509Certificate>MIICmTCCAgKgAwIBAgIGAUPATqmEMA0GCSqGSIb3DQEBBQUAMIGPMQswCQYDVQQGEwJVUzETMBEG\n+  #          A1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU\n+  #          MBIGA1UECwwLU1NPUHJvdmlkZXIxEDAOBgNVBAMMB1Bpdm90YWwxHDAaBgkqhkiG9w0BCQEWDWlu\n+  #          Zm9Ab2t0YS5jb20wHhcNMTQwMTIzMTgxMjM3WhcNNDQwMTIzMTgxMzM3WjCBjzELMAkGA1UEBhMC\n+  #          VVMxEzARBgNVBAgMCkNhbGlmb3JuaWExFjAUBgNVBAcMDVNhbiBGcmFuY2lzY28xDTALBgNVBAoM\n+  #          BE9rdGExFDASBgNVBAsMC1NTT1Byb3ZpZGVyMRAwDgYDVQQDDAdQaXZvdGFsMRwwGgYJKoZIhvcN\n+  #          AQkBFg1pbmZvQG9rdGEuY29tMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCeil67/TLOiTZU\n+  #          WWgW2XEGgFZ94bVO90v5J1XmcHMwL8v5Z/8qjdZLpGdwI7Ph0CyXMMNklpaR/Ljb8fsls3amdT5O\n+  #          Bw92Zo8ulcpjw2wuezTwL0eC0wY/GQDAZiXL59npE6U+fH1lbJIq92hx0HJSru/0O1q3+A/+jjZL\n+  #          3tL/SwIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAI5BoWZoH6Mz9vhypZPOJCEKa/K+biZQsA4Zqsuk\n+  #          vvphhSERhqk/Nv76Vkl8uvJwwHbQrR9KJx4L3PRkGCG24rix71jEuXVGZUsDNM3CUKnARx4MEab6\n+  #          GFHNkZ6DmoT/PFagngecHu+EwmuDtaG0rEkFrARwe+d8Ru0BN558abFb</ds:X509Certificate></ds:X509Data></ds:KeyInfo></md:KeyDescriptor><md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat><md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat><md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"https://pivotal.oktapreview.com/app/pivotal_pivotalcfstaging_1/k2lw4l5bPODCMIIDBRYZ/sso/saml\"/><md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"https://pivotal.oktapreview.com/app/pivotal_pivotalcfstaging_1/k2lw4l5bPODCMIIDBRYZ/sso/saml\"/></md:IDPSSODescriptor></md:EntityDescriptor>\n+  #        nameID: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n+  #        assertionConsumerIndex: 0\n+  #        metadataTrustCheck: true\n+  #        showSamlLoginLink: true\n+  #        linkText: 'Okta Preview 2'\n+  #        addShadowUserOnLogin: true\n+  #      vsphere.local:\n+  #        idpMetadata: https://win2012-sso2.localdomain:7444/websso/SAML2/Metadata/vsphere.local\n+  #        nameID: urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\n+  #        assertionConsumerIndex: 0\n+  #        showSamlLoginLink: true\n+  #        linkText: 'Log in with vCenter SSO'\n+  #        addShadowUserOnLogin: true\n+  #        groupMappingMode: EXPLICITLY_MAPPED\n+  #      openam-local:\n+  #        idpMetadata: http://localhost:8081/openam/saml2/jsp/exportmetadata.jsp?entityid=http://localhost:8081/openam\n+  #        nameID: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\n+  #        assertionConsumerIndex: 0\n+  #        signMetaData: false\n+  #        signRequest: false\n+  #        showSamlLoginLink: true\n+  #        linkText: 'Log in with OpenAM'\n+  #        addShadowUserOnLogin: true\n+  #        groupMappingMode: AS_SCOPES\n+  #END SAML PROVIDERS\n+\n+  authorize:\n+    url: http://localhost:8080/oauth/authorize\n+\n+  #  homeRedirect: http://example.com/\n+\n+  branding:\n+    companyName: Predix\n+    #    productLogo: |\n+    #      iVBORw0KGgoAAAANSUhEUgAAAR8AAAFoCAYAAABucP80AAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAZiS0dEAAAAAAAA+UO7fwAAAAlwSFlzAAALEgAACxIB0t1+/AAAZKVJREFUeNrtnXecXkX1/99n5j5lWyqQ0EJHepdeAgHpRZqKKILg15+9IVIEQhMExYJdsQPSVDoCAkrvPfQAARLSk21PuXPO74+7kc1md/PsZpdNmffr9bz22Vtm7tznzufOnDlzBiKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJDIAyFBfQGTpZrvz9yGUqwRTMEDJnhrXy0n6/leR7PikkOfxM+4c6uJEliKi+ES6ZdvzJxDKASsrT8+cxGajNiyYWSNKHY4cgiN7fhZ87H8fJQBVM9px2tpUt3K5rTKHpJDgCp7HT79rqIsXWPY92jEwd/quP0D6/vZiS+7SonQE8b9iZ9U08VtGC3fql2znwF/tiqeJECKWUXM4VBFvHOdmSrGW1qxMU4U5BrjHjwYYRSSkB2tp\n+    #    squareLogo: |\n+    #      AAABAAQAQEAAAAEAIAAoQAAARgAAACAgAAABACAAKBAAAG5AAAAYGAAAAQAgACgJAACWUAAAEBAAAAEAIAAoBAAAvlkAACgAAABAAAAAgAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAAgwAAAMMAAADuAAAA/wAAAP8AAADuAAAAwwAAAIMAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAawAAAPAAAADdAAAAeQAAAC0AAAAAAAAKAAAAvgAAANoAAAApAAAAXAAAAOUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADrAAAAXgAAAA\n+    footerLegalText:  \"Copyright © 2018 General Electric Company. All rights reserved.\"\n+    footerLinks:\n+      Contact Us: mailto:info@predix.io\n+      #GE Digital: https://www.gesoftware.com\n+      #Legal: https://predix-io.run.asv-sb.ice.predix.io/legal\n+#    banner:\n+#      logo: iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAABSUlEQVQ4EaVTO04DMRB9YdOTC+QcK46wFU3apclKuQMH4AYUkUxFmyY0PgLac3AB6ImM3kyePYkQDZZ27Zl58+aNP8A/x2J7ixI5Xr6wiHaMX8eIW/L3/tlStisUAZm8fx1acMxWTPFK0BBORhL5ukP2ZQ9UsjHXIqZA4LuVrwjsPjxxenRfAtAh47QenCiQgFL5fb8NpTyjlAf/5KOfa/llk/pG1WvV2T3T0We1wLh8jNAmaSUwyTMMRGC6dxDXIlExtUd7SZb0BKhXU3LIRrTfKKXNpsLU+R7VTWTFKJEpuzGbktNmuFiLjnEj4M52s4OnMVt/CedTYLWjx9Artc1269hG3MSohMps9LAjVCqrc9QWaJgSZCRWOp+GoX5J5u3lvan3nioIphIOnQr711BVXf0LAoGuieRnMt8A438SKEFEsuMDirEf/oirUgza/ucAAAAASUVORK5CYII=\n+#      text: Welcome to UAA! We will be undergoing system maintenance tonight.\n+#      textColor: \"#000000\"\n+#      backgroundColor: \"#FFFFFF\"\n+#      link: https://example.com\n+\n+uaa:\n+  # The hostname of the UAA that this login server will connect to\n+  url: http://localhost:8080\n+  token:\n+    url: http://localhost:8080/oauth/token\n+  approvals:\n+    url: http://localhost:8080/approvals\n+  login:\n+    url: http://localhost:8080/authenticate\n+  limitedFunctionality:\n+    enabled: false\n+    whitelist:\n+      endpoints:\n+      - /oauth/authorize/**\n+      - /oauth/token/**\n+      - /check_token/**\n+      - /login/**\n+      - /login.do\n+      - /logout/**\n+      - /logout.do\n+      - /saml/**\n+      - /autologin/**\n+      - /authenticate/**\n+      - /idp_discovery/**\n+      methods:\n+      - GET\n+      - HEAD\n+      - OPTIONS\n+\n+# Google Analytics\n+#analytics:\n+#  code: secret_code\n+#  domain: example.com\n+\n+#smtp:\n+#  host: localhost\n+#  port: 2525\n+#  user:\n+#  password:\n+logging:\n+  config: log4j2-docker.properties\n\\ No newline at end of file"
  }
]
