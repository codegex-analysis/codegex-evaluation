[
  {
    "sha": "144df67b8a7c4d839a13fc5ffb43dcd48f13238c",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.test/META-INF/MANIFEST.MF",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/META-INF/MANIFEST.MF",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/META-INF/MANIFEST.MF",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.test/META-INF/MANIFEST.MF?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -14,7 +14,8 @@ Require-Bundle: org.junit,\n  de.dlr.sc.virsat.model,\r\n  de.dlr.sc.virsat.model.edit,\r\n  de.dlr.sc.virsat.concept.unittest.util,\r\n- de.dlr.sc.virsat.model.extension.ps\r\n+ de.dlr.sc.virsat.model.extension.ps,\r\n+ org.hamcrest.library\r\n Export-Package: de.dlr.sc.virsat.model.extension.requirements.test\r\n Automatic-Module-Name: de.dlr.sc.virsat.model.extension.requirements.test\r\n Import-Package: de.dlr.sc.virsat.build.test\r"
  },
  {
    "sha": "1a8b6b7537206f80dc74a7109bfaed3f8f0cf3c3",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/AImportConfigurationTest.java",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/AImportConfigurationTest.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/AImportConfigurationTest.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/AImportConfigurationTest.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,83 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.model;\r\n+\r\n+// *****************************************************************\r\n+// * Import Statements\r\n+// *****************************************************************\r\n+\r\n+\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoriesFactory;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\r\n+import java.lang.Exception;\r\n+\r\n+\r\n+// *****************************************************************\r\n+// * Class Declaration\r\n+// *****************************************************************\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+import static org.junit.Assert.assertNotNull;\r\n+import static org.junit.Assert.assertNull;\r\n+\r\n+import org.junit.After;\r\n+import org.junit.Before;\r\n+import org.junit.Test;\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * Mapping specification of imported requirements\r\n+ * \r\n+ */\t\r\n+public abstract class AImportConfigurationTest {\r\n+\t\r\n+\tprotected Concept concept;\r\n+\t\r\n+\t@Before\r\n+\tpublic void setUp() throws Exception {\r\n+\t\tString conceptXmiPluginPath = \"de.dlr.sc.virsat.model.extension.requirements/concept/concept.xmi\";\r\n+\t\tconcept = de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader.loadConceptFromPlugin(conceptXmiPluginPath);\r\n+\t}\r\n+\r\n+\t@After\r\n+\tpublic void tearDown() throws Exception {\r\n+\t}\r\n+\r\n+\t\r\n+\t// *****************************************************************\r\n+\t// * Constructor Test Cases\r\n+\t// *****************************************************************\r\n+\t\r\n+\t@Test\r\n+\tpublic void testImportConfiguration() {\r\n+\t\tImportConfiguration testImportConfiguration = new ImportConfiguration();\r\n+\t\r\n+\t\tassertNull(\"There is no internal DVLM object\", testImportConfiguration.getTypeInstance());\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testImportConfigurationConcept() {\r\n+\t\tImportConfiguration testImportConfiguration = new ImportConfiguration(concept);\r\n+\t\t\r\n+\t\tassertNotNull(\"There is an internal DVLM object\", testImportConfiguration.getATypeInstance());\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testImportConfigurationCategoryAssignment() {\r\n+\t\tCategoryAssignment testCa = CategoriesFactory.eINSTANCE.createCategoryAssignment();\r\n+\t\tImportConfiguration testImportConfiguration = new ImportConfiguration(testCa);\r\n+\t\t\r\n+\t\tassertEquals(\"DVLM object has been set as specified\", testCa, testImportConfiguration.getTypeInstance());\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "dfc14352b3e3c9b6a014b76045f1eea3a1520676",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/ARequirementLinkTypeTest.java",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/ARequirementLinkTypeTest.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/ARequirementLinkTypeTest.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/ARequirementLinkTypeTest.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,83 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.model;\r\n+\r\n+// *****************************************************************\r\n+// * Import Statements\r\n+// *****************************************************************\r\n+\r\n+\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoriesFactory;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\r\n+import java.lang.Exception;\r\n+\r\n+\r\n+// *****************************************************************\r\n+// * Class Declaration\r\n+// *****************************************************************\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+import static org.junit.Assert.assertNotNull;\r\n+import static org.junit.Assert.assertNull;\r\n+\r\n+import org.junit.After;\r\n+import org.junit.Before;\r\n+import org.junit.Test;\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * Definition of a requirement link type\r\n+ * \r\n+ */\t\r\n+public abstract class ARequirementLinkTypeTest {\r\n+\t\r\n+\tprotected Concept concept;\r\n+\t\r\n+\t@Before\r\n+\tpublic void setUp() throws Exception {\r\n+\t\tString conceptXmiPluginPath = \"de.dlr.sc.virsat.model.extension.requirements/concept/concept.xmi\";\r\n+\t\tconcept = de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader.loadConceptFromPlugin(conceptXmiPluginPath);\r\n+\t}\r\n+\r\n+\t@After\r\n+\tpublic void tearDown() throws Exception {\r\n+\t}\r\n+\r\n+\t\r\n+\t// *****************************************************************\r\n+\t// * Constructor Test Cases\r\n+\t// *****************************************************************\r\n+\t\r\n+\t@Test\r\n+\tpublic void testRequirementLinkType() {\r\n+\t\tRequirementLinkType testRequirementLinkType = new RequirementLinkType();\r\n+\t\r\n+\t\tassertNull(\"There is no internal DVLM object\", testRequirementLinkType.getTypeInstance());\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testRequirementLinkTypeConcept() {\r\n+\t\tRequirementLinkType testRequirementLinkType = new RequirementLinkType(concept);\r\n+\t\t\r\n+\t\tassertNotNull(\"There is an internal DVLM object\", testRequirementLinkType.getATypeInstance());\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testRequirementLinkTypeCategoryAssignment() {\r\n+\t\tCategoryAssignment testCa = CategoriesFactory.eINSTANCE.createCategoryAssignment();\r\n+\t\tRequirementLinkType testRequirementLinkType = new RequirementLinkType(testCa);\r\n+\t\t\r\n+\t\tassertEquals(\"DVLM object has been set as specified\", testCa, testRequirementLinkType.getTypeInstance());\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "1296b71d22fbec2cd20b95f133f2cf408dc01611",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/ASpecificationMappingTest.java",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/ASpecificationMappingTest.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/ASpecificationMappingTest.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/model/ASpecificationMappingTest.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,83 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.model;\r\n+\r\n+// *****************************************************************\r\n+// * Import Statements\r\n+// *****************************************************************\r\n+\r\n+\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoriesFactory;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\r\n+import java.lang.Exception;\r\n+\r\n+\r\n+// *****************************************************************\r\n+// * Class Declaration\r\n+// *****************************************************************\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+import static org.junit.Assert.assertNotNull;\r\n+import static org.junit.Assert.assertNull;\r\n+\r\n+import org.junit.After;\r\n+import org.junit.Before;\r\n+import org.junit.Test;\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * \r\n+ * \r\n+ */\t\r\n+public abstract class ASpecificationMappingTest {\r\n+\t\r\n+\tprotected Concept concept;\r\n+\t\r\n+\t@Before\r\n+\tpublic void setUp() throws Exception {\r\n+\t\tString conceptXmiPluginPath = \"de.dlr.sc.virsat.model.extension.requirements/concept/concept.xmi\";\r\n+\t\tconcept = de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader.loadConceptFromPlugin(conceptXmiPluginPath);\r\n+\t}\r\n+\r\n+\t@After\r\n+\tpublic void tearDown() throws Exception {\r\n+\t}\r\n+\r\n+\t\r\n+\t// *****************************************************************\r\n+\t// * Constructor Test Cases\r\n+\t// *****************************************************************\r\n+\t\r\n+\t@Test\r\n+\tpublic void testSpecificationMapping() {\r\n+\t\tSpecificationMapping testSpecificationMapping = new SpecificationMapping();\r\n+\t\r\n+\t\tassertNull(\"There is no internal DVLM object\", testSpecificationMapping.getTypeInstance());\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testSpecificationMappingConcept() {\r\n+\t\tSpecificationMapping testSpecificationMapping = new SpecificationMapping(concept);\r\n+\t\t\r\n+\t\tassertNotNull(\"There is an internal DVLM object\", testSpecificationMapping.getATypeInstance());\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testSpecificationMappingCategoryAssignment() {\r\n+\t\tCategoryAssignment testCa = CategoriesFactory.eINSTANCE.createCategoryAssignment();\r\n+\t\tSpecificationMapping testSpecificationMapping = new SpecificationMapping(testCa);\r\n+\t\t\r\n+\t\tassertEquals(\"DVLM object has been set as specified\", testCa, testSpecificationMapping.getTypeInstance());\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "a1ff783c46a48fa33f456e8e1903e52400bd4046",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/test/AllTestsGen.java",
    "status": "modified",
    "additions": 11,
    "deletions": 5,
    "changes": 16,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/test/AllTestsGen.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/test/AllTestsGen.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.test/src-gen/de/dlr/sc/virsat/model/extension/requirements/test/AllTestsGen.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -23,24 +23,27 @@\n import de.dlr.sc.virsat.model.extension.requirements.migrator.Migrator0v1Test;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.VerificationTypeTest;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.EnumerationLiteralTest;\r\n-import de.dlr.sc.virsat.model.extension.requirements.migrator.Migrator0v4Test;\r\n-import de.dlr.sc.virsat.model.extension.requirements.model.DefaultVerificationTest;\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.SpecificationMappingTest;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.RequirementsConfigurationCollectionTest;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.RequirementTypeTest;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.RequirementLinkTest;\r\n import de.dlr.sc.virsat.model.extension.requirements.migrator.Migrator0v2Test;\r\n-import de.dlr.sc.virsat.model.extension.requirements.model.RequirementAttributeTest;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.VerificationConfigurationTest;\r\n-import de.dlr.sc.virsat.model.extension.requirements.model.AttributeValueTest;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.RequirementTest;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.RequirementsSpecificationTest;\r\n-import de.dlr.sc.virsat.model.extension.requirements.migrator.Migrator0v5Test;\r\n import de.dlr.sc.virsat.model.extension.requirements.validator.RequirementsValidatorTest;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.RequirementsConfigurationTest;\r\n import de.dlr.sc.virsat.model.extension.requirements.migrator.Migrator0v3Test;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.EnumerationDefinitionTest;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.RequirementTraceTest;\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.ImportConfigurationTest;\r\n+import de.dlr.sc.virsat.model.extension.requirements.migrator.Migrator0v4Test;\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.DefaultVerificationTest;\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.RequirementAttributeTest;\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.AttributeValueTest;\r\n+import de.dlr.sc.virsat.model.extension.requirements.migrator.Migrator0v5Test;\r\n import de.dlr.sc.virsat.model.extension.requirements.model.ExistenceVerificationTest;\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.RequirementLinkTypeTest;\r\n \r\n /**\r\n  * \r\n@@ -57,7 +60,10 @@\n \tRequirementTraceTest.class,\r\n \tAttributeValueTest.class,\r\n \tRequirementTypeTest.class,\r\n+\tRequirementLinkTypeTest.class,\r\n \tRequirementAttributeTest.class,\r\n+\tImportConfigurationTest.class,\r\n+\tSpecificationMappingTest.class,\r\n \tEnumerationDefinitionTest.class,\r\n \tEnumerationLiteralTest.class,\r\n \tDefaultVerificationTest.class,\r"
  },
  {
    "sha": "e700efbaf3620c8306f56c06a8ba9399c4e536c1",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/ImportConfigurationTest.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/ImportConfigurationTest.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/ImportConfigurationTest.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/ImportConfigurationTest.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,32 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.model;\r\n+\r\n+// *****************************************************************\r\n+// * Import Statements\r\n+// *****************************************************************\r\n+\r\n+\r\n+\r\n+// *****************************************************************\r\n+// * Class Declaration\r\n+// *****************************************************************\r\n+\r\n+/**\r\n+ * Auto Generated Class inheriting from Generator Gap Class\r\n+ * \r\n+ * This class is generated once, do your changes here\r\n+ * \r\n+ * Mapping specification of imported requirements\r\n+ * \r\n+ */\r\n+public class ImportConfigurationTest extends AImportConfigurationTest {\r\n+\r\n+}\r"
  },
  {
    "sha": "675cc3c9508cc46d7792c220ae32afafc24ca00c",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/RequirementLinkTypeTest.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/RequirementLinkTypeTest.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/RequirementLinkTypeTest.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/RequirementLinkTypeTest.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,32 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.model;\r\n+\r\n+// *****************************************************************\r\n+// * Import Statements\r\n+// *****************************************************************\r\n+\r\n+\r\n+\r\n+// *****************************************************************\r\n+// * Class Declaration\r\n+// *****************************************************************\r\n+\r\n+/**\r\n+ * Auto Generated Class inheriting from Generator Gap Class\r\n+ * \r\n+ * This class is generated once, do your changes here\r\n+ * \r\n+ * Definition of a requirement link type\r\n+ * \r\n+ */\r\n+public class RequirementLinkTypeTest extends ARequirementLinkTypeTest {\r\n+\r\n+}\r"
  },
  {
    "sha": "7710bf3202cbf2d876ded596464d20dfc47ce8bc",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/SpecificationMappingTest.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/SpecificationMappingTest.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/SpecificationMappingTest.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/model/SpecificationMappingTest.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,32 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.model;\r\n+\r\n+// *****************************************************************\r\n+// * Import Statements\r\n+// *****************************************************************\r\n+\r\n+\r\n+\r\n+// *****************************************************************\r\n+// * Class Declaration\r\n+// *****************************************************************\r\n+\r\n+/**\r\n+ * Auto Generated Class inheriting from Generator Gap Class\r\n+ * \r\n+ * This class is generated once, do your changes here\r\n+ * \r\n+ * \r\n+ * \r\n+ */\r\n+public class SpecificationMappingTest extends ASpecificationMappingTest {\r\n+\r\n+}\r"
  },
  {
    "sha": "d397ca86b8acb5f6e173765b7138007bfe57acb4",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/reqif/ReqIfImporterTest.java",
    "status": "added",
    "additions": 167,
    "deletions": 0,
    "changes": 167,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/reqif/ReqIfImporterTest.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/reqif/ReqIfImporterTest.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.test/src/de/dlr/sc/virsat/model/extension/requirements/reqif/ReqIfImporterTest.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,167 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.reqif;\r\n+\r\n+import static org.hamcrest.MatcherAssert.assertThat;\r\n+import static org.hamcrest.Matchers.hasItem;\r\n+import static org.junit.Assert.assertEquals;\r\n+import static org.junit.Assert.assertNotNull;\r\n+import static org.junit.Assert.assertTrue;\r\n+\r\n+import java.io.IOException;\r\n+import java.util.Collections;\r\n+import java.util.HashMap;\r\n+import java.util.List;\r\n+import java.util.Map;\r\n+import java.util.stream.Collectors;\r\n+\r\n+import org.eclipse.core.resources.IFile;\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.common.util.URI;\r\n+import org.eclipse.emf.ecore.resource.Resource;\r\n+import org.eclipse.rmf.reqif10.ReqIF;\r\n+import org.eclipse.rmf.reqif10.ReqIF10Factory;\r\n+import org.eclipse.rmf.reqif10.Specification;\r\n+import org.junit.Before;\r\n+import org.junit.Test;\r\n+\r\n+import de.dlr.sc.virsat.concept.unittest.util.test.AConceptProjectTestCase;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\r\n+import de.dlr.sc.virsat.model.extension.requirements.Activator;\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.ImportConfiguration;\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.RequirementsConfigurationCollection;\r\n+import de.dlr.sc.virsat.project.resources.command.CreateSeiResourceAndFileCommand;\r\n+\r\n+/**\r\n+ * Test class for the reqif importer\r\n+ *\r\n+ */\r\n+public class ReqIfImporterTest extends AConceptProjectTestCase {\r\n+\t\r\n+\tprivate static final String REQ_IF_RESOURCE_NAME = \"ImportModel\";\r\n+\tprivate static final String REQ_IF_RESOURCE_PATH = \"test/\" + REQ_IF_RESOURCE_NAME + \".reqif\";\r\n+\t\r\n+\tprivate static final String TREE_NAME = \"ConfigurationTree\";\r\n+\tprivate static final String TREE_CHILD_NAME = \"ElementConfiguration\";\r\n+\t\r\n+\tprivate static final String SPEC_1_NAME = \"FirstSpec\";\r\n+\tprivate static final String SPEC_2_NAME = \"SecondSpec\";\r\n+\tprivate static final String SPEC_3_NAME = \"ThirdSpec\";\r\n+\t\r\n+\tprivate Resource reqIfModel;\r\n+\tprivate IFile reqIfModelFile;\r\n+\tprivate ReqIF reqIFContent;\r\n+\t\r\n+\tprivate Concept psConcept;\r\n+\tprivate Concept reqConcept;\r\n+\t\r\n+\tprivate RequirementsConfigurationCollection rcc;\r\n+\tStructuralElementInstance treeSei;\r\n+\tStructuralElementInstance childSei;\r\n+\t\r\n+\t@Before\r\n+\tpublic void setUp() throws CoreException {\r\n+\t\tsuper.setUp();\r\n+\t\taddEditingDomainAndRepository();\r\n+\t\t\r\n+\t\texecuteAsCommand(() -> loadConceptAndInstallToRepository(CONCEPT_ID_CORE));\r\n+\t\texecuteAsCommand(() -> psConcept = loadConceptAndInstallToRepository(de.dlr.sc.virsat.model.extension.ps.Activator.getPluginId()));\r\n+\t\texecuteAsCommand(() -> reqConcept = loadConceptAndInstallToRepository(Activator.getPluginId()));\r\n+\t\t \r\n+\t\t// Create basic PS structure\r\n+\t\tConfigurationTree ct = new ConfigurationTree(psConcept);\r\n+\t\tct.setName(TREE_NAME);\r\n+\t\tElementConfiguration ec = new ElementConfiguration(psConcept);\r\n+\t\tec.setName(TREE_CHILD_NAME);\r\n+\t\tct.add(ec);\r\n+\t\ttreeSei = ct.getStructuralElementInstance();\r\n+\t\tchildSei = ec.getStructuralElementInstance();\r\n+\t\texecuteAsCommand(() -> repository.getRootEntities().add(treeSei));\r\n+\t\teditingDomain.getCommandStack().execute(new CreateSeiResourceAndFileCommand(rs, treeSei));\r\n+\t\t\r\n+\t\t// Create basic req concept structure\r\n+\t\trcc = new RequirementsConfigurationCollection(reqConcept);\r\n+\t\texecuteAsCommand(() -> repository.getRootEntities().add(rcc.getStructuralElementInstance()));\r\n+\t\t\r\n+\t\t// Create ReqIF model resource\r\n+\t\treqIfModelFile = testProject.getFile(REQ_IF_RESOURCE_PATH);\r\n+\t\tURI fileUri = URI.createPlatformResourceURI(reqIfModelFile.getFullPath().toString(), true);\r\n+\t\treqIfModel = rs.createResource(fileUri);\r\n+\t\t\r\n+\t\t// Create external model content\r\n+\t\treqIFContent = ReqIF10Factory.eINSTANCE.createReqIF();\r\n+\t\texecuteAsCommand(() -> reqIfModel.getContents().add(reqIFContent));\r\n+\t\ttry {\r\n+\t\t\treqIfModel.save(Collections.emptyMap());\r\n+\t\t} catch (IOException e) {\r\n+\t\t}\r\n+\t\t\r\n+\t}\r\n+\t\r\n+\tprivate ReqIfImporter importerUnderTest = new ReqIfImporter();\r\n+\t\r\n+\t@Test\r\n+\tpublic void testPersistSpecificationMapping() {\r\n+\t\t\r\n+\t\tCommand importCmd = importerUnderTest.persistSpecificationMapping(editingDomain, getBasicSpecMapping(), reqIFContent, rcc);\r\n+\t\teditingDomain.getCommandStack().execute(importCmd);\r\n+\t\t\r\n+\t\t// Check that new specifications have been created\r\n+\t\tassertEquals(\"Tree SIE has been added to tree\", treeSei.getCategoryAssignments().size(), 1);  // Spec1 \r\n+\t\tassertEquals(\"Tree SIE has been added to tree\", childSei.getCategoryAssignments().size(), 2);  // Spec2 + Spec3\r\n+\t\tassertEquals(\"Spec named correctly\", treeSei.getCategoryAssignments().get(0).getName(), SPEC_1_NAME);\r\n+\t\tList<String> childSpecNames = childSei.getCategoryAssignments().stream().\r\n+\t\t\t\tmap(n -> n.getName()).\r\n+\t\t\t\tcollect(Collectors.toList());\r\n+\t\tassertTrue(\"Spec2 to added to child\", childSpecNames.contains(SPEC_2_NAME));\r\n+\t\tassertTrue(\"Spec3 to added to child\", childSpecNames.contains(SPEC_3_NAME));\r\n+\t\t\r\n+\t\t// Check mapping has been created\r\n+\t\tImportConfiguration importConfig = rcc.getFirst(ImportConfiguration.class);\r\n+\t\tassertEquals(importConfig.getName(), ReqIfImporter.IMPORT_CONFIC_PREFIX + REQ_IF_RESOURCE_NAME);\r\n+\t\tassertNotNull(\"It exists a mapping of external Spec1 to a new internal spec element\", importConfig.getSpecification(SPEC_1_NAME));\r\n+\t\tassertNotNull(\"It exists a mapping of external Spec2 to a new internal spec element\", importConfig.getSpecification(SPEC_2_NAME));\r\n+\t\tassertNotNull(\"It exists a mapping of external Spec3 to a new internal spec element\", importConfig.getSpecification(SPEC_3_NAME));\r\n+\t\t\r\n+\t\t// Check if mapping is correct\r\n+\t\tassertEquals(treeSei.getCategoryAssignments().get(0), importConfig.getSpecification(SPEC_1_NAME).getATypeInstance());\r\n+\t\tassertThat(childSei.getCategoryAssignments(), hasItem(importConfig.getSpecification(SPEC_2_NAME).getTypeInstance()));\r\n+\t\tassertThat(childSei.getCategoryAssignments(), hasItem(importConfig.getSpecification(SPEC_3_NAME).getTypeInstance()));\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Create a basic mapping of reqif specifications to SEIs\r\n+\t * @return a hashmap\r\n+\t */\r\n+\tprotected Map<Specification, StructuralElementInstance> getBasicSpecMapping() {\r\n+\t\tMap<Specification, StructuralElementInstance> map = new HashMap<Specification, StructuralElementInstance>();\r\n+\t\t\r\n+\t\t//Create some basic specification elements\r\n+\t\tSpecification spec1 = ReqIF10Factory.eINSTANCE.createSpecification();\r\n+\t\tspec1.setLongName(SPEC_1_NAME);\r\n+\t\tSpecification spec2 = ReqIF10Factory.eINSTANCE.createSpecification();\r\n+\t\tspec2.setLongName(SPEC_2_NAME);\r\n+\t\tSpecification spec3 = ReqIF10Factory.eINSTANCE.createSpecification();\r\n+\t\tspec3.setLongName(SPEC_3_NAME);\r\n+\t\t\r\n+\t\t// Put one spec directly into tree\r\n+\t\tmap.put(spec1, treeSei);\r\n+\t\t\r\n+\t\t// Put two specs into on SEI\r\n+\t\tmap.put(spec2, childSei);\r\n+\t\tmap.put(spec3, childSei);\r\n+\t\treturn map;\r\n+\t}\r\n+\r\n+}\r"
  },
  {
    "sha": "0787e972bcdf3e835e45c4739c8d9cdb28a3d202",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/META-INF/MANIFEST.MF",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/META-INF/MANIFEST.MF",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/META-INF/MANIFEST.MF",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/META-INF/MANIFEST.MF?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -15,7 +15,10 @@ Require-Bundle: de.dlr.sc.virsat.model.extension.requirements,\n  de.dlr.sc.virsat.project.ui,\r\n  de.dlr.sc.virsat.uiengine.ui,\r\n  de.dlr.sc.virsat.build.ui,\r\n- de.dlr.sc.virsat.model.extension.ps\r\n+ de.dlr.sc.virsat.model.extension.ps,\r\n+ org.eclipse.rmf.reqif10.pror,\r\n+ org.eclipse.rmf.reqif10.pror.edit,\r\n+ org.eclipse.rmf.reqif10.pror.editor\r\n Bundle-RequiredExecutionEnvironment: JavaSE-1.8\r\n Bundle-ActivationPolicy: lazy\r\n Automatic-Module-Name: de.dlr.sc.virsat.model.extension.requirements.ui\r"
  },
  {
    "sha": "4bd248e8fa478748b9b4af02c14031d7645fad45",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/plugin.xml",
    "status": "modified",
    "additions": 175,
    "deletions": 0,
    "changes": 175,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/plugin.xml",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/plugin.xml",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/plugin.xml?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -55,10 +55,22 @@\n \t\tfullQualifiedID=\"de.dlr.sc.virsat.model.extension.requirements.RequirementType\"\r\n \t\tpathToImage=\"resources/icons/RequirementType.gif\">\r\n \t</conceptImage>\r\n+\t<conceptImage\r\n+\t\tfullQualifiedID=\"de.dlr.sc.virsat.model.extension.requirements.RequirementLinkType\"\r\n+\t\tpathToImage=\"resources/icons/RequirementLinkType.gif\">\r\n+\t</conceptImage>\r\n \t<conceptImage\r\n \t\tfullQualifiedID=\"de.dlr.sc.virsat.model.extension.requirements.RequirementAttribute\"\r\n \t\tpathToImage=\"resources/icons/RequirementAttribute.gif\">\r\n \t</conceptImage>\r\n+\t<conceptImage\r\n+\t\tfullQualifiedID=\"de.dlr.sc.virsat.model.extension.requirements.ImportConfiguration\"\r\n+\t\tpathToImage=\"resources/icons/ImportConfiguration.gif\">\r\n+\t</conceptImage>\r\n+\t<conceptImage\r\n+\t\tfullQualifiedID=\"de.dlr.sc.virsat.model.extension.requirements.SpecificationMapping\"\r\n+\t\tpathToImage=\"resources/icons/SpecificationMapping.gif\">\r\n+\t</conceptImage>\r\n \t<conceptImage\r\n \t\tfullQualifiedID=\"de.dlr.sc.virsat.model.extension.requirements.EnumerationDefinition\"\r\n \t\tpathToImage=\"resources/icons/EnumerationDefinition.gif\">\r\n@@ -129,10 +141,22 @@\n \t\tid=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddRequirementType\"\r\n \t\tname=\"Add RequirementType\">\r\n \t</command>\r\n+\t<command\r\n+\t\tid=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddRequirementLinkType\"\r\n+\t\tname=\"Add RequirementLinkType\">\r\n+\t</command>\r\n \t<command\r\n \t\tid=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddRequirementAttribute\"\r\n \t\tname=\"Add RequirementAttribute\">\r\n \t</command>\r\n+\t<command\r\n+\t\tid=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddImportConfiguration\"\r\n+\t\tname=\"Add ImportConfiguration\">\r\n+\t</command>\r\n+\t<command\r\n+\t\tid=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddSpecificationMapping\"\r\n+\t\tname=\"Add SpecificationMapping\">\r\n+\t</command>\r\n \t<command\r\n \t\tid=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddEnumerationDefinition\"\r\n \t\tname=\"Add EnumerationDefinition\">\r\n@@ -204,11 +228,26 @@\n \t      disabledIcon=\"resources/icons/RequirementType_disabled.gif\"\r\n \t      icon=\"resources/icons/RequirementType.gif\">\r\n \t</image>\r\n+\t<image\r\n+\t      commandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddRequirementLinkType\"\r\n+\t      disabledIcon=\"resources/icons/RequirementLinkType_disabled.gif\"\r\n+\t      icon=\"resources/icons/RequirementLinkType.gif\">\r\n+\t</image>\r\n \t<image\r\n \t      commandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddRequirementAttribute\"\r\n \t      disabledIcon=\"resources/icons/RequirementAttribute_disabled.gif\"\r\n \t      icon=\"resources/icons/RequirementAttribute.gif\">\r\n \t</image>\r\n+\t<image\r\n+\t      commandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddImportConfiguration\"\r\n+\t      disabledIcon=\"resources/icons/ImportConfiguration_disabled.gif\"\r\n+\t      icon=\"resources/icons/ImportConfiguration.gif\">\r\n+\t</image>\r\n+\t<image\r\n+\t      commandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddSpecificationMapping\"\r\n+\t      disabledIcon=\"resources/icons/SpecificationMapping_disabled.gif\"\r\n+\t      icon=\"resources/icons/SpecificationMapping.gif\">\r\n+\t</image>\r\n \t<image\r\n \t      commandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddEnumerationDefinition\"\r\n \t      disabledIcon=\"resources/icons/EnumerationDefinition_disabled.gif\"\r\n@@ -277,10 +316,22 @@\n \t\tclass=\"de.dlr.sc.virsat.model.extension.requirements.ui.handler.AddRequirementTypeHandler\"\r\n \t\tcommandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddRequirementType\">\r\n \t</handler>\r\n+\t<handler\r\n+\t\tclass=\"de.dlr.sc.virsat.model.extension.requirements.ui.handler.AddRequirementLinkTypeHandler\"\r\n+\t\tcommandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddRequirementLinkType\">\r\n+\t</handler>\r\n \t<handler\r\n \t\tclass=\"de.dlr.sc.virsat.model.extension.requirements.ui.handler.AddRequirementAttributeHandler\"\r\n \t\tcommandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddRequirementAttribute\">\r\n \t</handler>\r\n+\t<handler\r\n+\t\tclass=\"de.dlr.sc.virsat.model.extension.requirements.ui.handler.AddImportConfigurationHandler\"\r\n+\t\tcommandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddImportConfiguration\">\r\n+\t</handler>\r\n+\t<handler\r\n+\t\tclass=\"de.dlr.sc.virsat.model.extension.requirements.ui.handler.AddSpecificationMappingHandler\"\r\n+\t\tcommandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddSpecificationMapping\">\r\n+\t</handler>\r\n \t<handler\r\n \t\tclass=\"de.dlr.sc.virsat.model.extension.requirements.ui.handler.AddEnumerationDefinitionHandler\"\r\n \t\tcommandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddEnumerationDefinition\">\r\n@@ -548,6 +599,28 @@\n \t\t\t\t</with>\r\n \t\t\t</visibleWhen>\r\n \t\t</command>\r\n+\t\t<command\r\n+\t\t\tcommandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddRequirementLinkType\"\r\n+\t\t\tstyle=\"push\">\r\n+\t\t\t<visibleWhen\r\n+\t\t\t\tcheckEnabled=\"true\">\r\n+\t\t\t\t<with\r\n+\t\t\t\t\tvariable=\"selection\">\r\n+\t\t\t\t\t<iterate\r\n+\t\t\t\t\t\tifEmpty=\"false\"\r\n+\t\t\t\t\t\toperator=\"and\">\r\n+\t\t\t\t\t\t<test \r\n+\t\t\t\t\t\t\tproperty=\"de.dlr.sc.virsat.model.extension.requirements.ui.propertyTester.conceptEnabled\"\r\n+\t\t\t\t\t\t\tvalue=\"true\" \r\n+\t\t\t\t\t\t\tforcePluginActivation=\"true\">\r\n+\t\t\t\t\t\t</test>\t\t\r\n+\t\t\t\t\t\t<instanceof\r\n+\t\t\t\t\t\t\tvalue=\"de.dlr.sc.virsat.model.dvlm.categories.ICategoryAssignmentContainer\">\r\n+\t\t\t\t\t\t</instanceof>\r\n+\t\t\t\t\t</iterate>\r\n+\t\t\t\t</with>\r\n+\t\t\t</visibleWhen>\r\n+\t\t</command>\r\n \t\t<command\r\n \t\t\tcommandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddRequirementAttribute\"\r\n \t\t\tstyle=\"push\">\r\n@@ -570,6 +643,50 @@\n \t\t\t\t</with>\r\n \t\t\t</visibleWhen>\r\n \t\t</command>\r\n+\t\t<command\r\n+\t\t\tcommandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddImportConfiguration\"\r\n+\t\t\tstyle=\"push\">\r\n+\t\t\t<visibleWhen\r\n+\t\t\t\tcheckEnabled=\"true\">\r\n+\t\t\t\t<with\r\n+\t\t\t\t\tvariable=\"selection\">\r\n+\t\t\t\t\t<iterate\r\n+\t\t\t\t\t\tifEmpty=\"false\"\r\n+\t\t\t\t\t\toperator=\"and\">\r\n+\t\t\t\t\t\t<test \r\n+\t\t\t\t\t\t\tproperty=\"de.dlr.sc.virsat.model.extension.requirements.ui.propertyTester.conceptEnabled\"\r\n+\t\t\t\t\t\t\tvalue=\"true\" \r\n+\t\t\t\t\t\t\tforcePluginActivation=\"true\">\r\n+\t\t\t\t\t\t</test>\t\t\r\n+\t\t\t\t\t\t<instanceof\r\n+\t\t\t\t\t\t\tvalue=\"de.dlr.sc.virsat.model.dvlm.categories.ICategoryAssignmentContainer\">\r\n+\t\t\t\t\t\t</instanceof>\r\n+\t\t\t\t\t</iterate>\r\n+\t\t\t\t</with>\r\n+\t\t\t</visibleWhen>\r\n+\t\t</command>\r\n+\t\t<command\r\n+\t\t\tcommandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddSpecificationMapping\"\r\n+\t\t\tstyle=\"push\">\r\n+\t\t\t<visibleWhen\r\n+\t\t\t\tcheckEnabled=\"true\">\r\n+\t\t\t\t<with\r\n+\t\t\t\t\tvariable=\"selection\">\r\n+\t\t\t\t\t<iterate\r\n+\t\t\t\t\t\tifEmpty=\"false\"\r\n+\t\t\t\t\t\toperator=\"and\">\r\n+\t\t\t\t\t\t<test \r\n+\t\t\t\t\t\t\tproperty=\"de.dlr.sc.virsat.model.extension.requirements.ui.propertyTester.conceptEnabled\"\r\n+\t\t\t\t\t\t\tvalue=\"true\" \r\n+\t\t\t\t\t\t\tforcePluginActivation=\"true\">\r\n+\t\t\t\t\t\t</test>\t\t\r\n+\t\t\t\t\t\t<instanceof\r\n+\t\t\t\t\t\t\tvalue=\"de.dlr.sc.virsat.model.dvlm.categories.ICategoryAssignmentContainer\">\r\n+\t\t\t\t\t\t</instanceof>\r\n+\t\t\t\t\t</iterate>\r\n+\t\t\t\t</with>\r\n+\t\t\t</visibleWhen>\r\n+\t\t</command>\r\n \t\t<command\r\n \t\t\tcommandId=\"de.dlr.sc.virsat.model.extension.requirements.ui.command.AddEnumerationDefinition\"\r\n \t\t\tstyle=\"push\">\r\n@@ -765,6 +882,11 @@\n \t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n \t\t      snippet=\"de.dlr.sc.virsat.model.extension.requirements.ui.snippet.UiSnippetTableRequirementsConfigurationTypeDefinitionsRequirementType\">\r\n \t\t</uiSnippet>\r\n+\t\t<uiSnippet\r\n+\t\t      id=\"de.dlr.sc.virsat.model.extension.requirements.table.uiSnippetRequirementsConfigurationLinkTypeDefinitionsRequirementLinkType\"\r\n+\t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n+\t\t      snippet=\"de.dlr.sc.virsat.model.extension.requirements.ui.snippet.UiSnippetTableRequirementsConfigurationLinkTypeDefinitionsRequirementLinkType\">\r\n+\t\t</uiSnippet>\r\n \t\t<uiSnippet\r\n \t\t      id=\"de.dlr.sc.virsat.model.extension.requirements.table.uiSnippetVerificationConfiguration\"\r\n \t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n@@ -880,6 +1002,16 @@\n \t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n \t\t      snippet=\"de.dlr.sc.virsat.model.extension.requirements.ui.snippet.UiSnippetTableRequirementTypeAttributesRequirementAttribute\">\r\n \t\t</uiSnippet>\r\n+\t\t<uiSnippet\r\n+\t\t      id=\"de.dlr.sc.virsat.model.extension.requirements.table.uiSnippetRequirementLinkType\"\r\n+\t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n+\t\t      snippet=\"de.dlr.sc.virsat.model.extension.requirements.ui.snippet.UiSnippetTableRequirementLinkType\">\r\n+\t\t</uiSnippet>\r\n+\t\t<uiSnippet\r\n+\t\t      id=\"de.dlr.sc.virsat.model.extension.requirements.section.uiSnippetRequirementLinkType\"\r\n+\t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n+\t\t      snippet=\"de.dlr.sc.virsat.model.extension.requirements.ui.snippet.UiSnippetSectionRequirementLinkType\">\r\n+\t\t</uiSnippet>\r\n \t\t<uiSnippet\r\n \t\t      id=\"de.dlr.sc.virsat.model.extension.requirements.table.uiSnippetRequirementAttribute\"\r\n \t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n@@ -890,6 +1022,31 @@\n \t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n \t\t      snippet=\"de.dlr.sc.virsat.model.extension.requirements.ui.snippet.UiSnippetSectionRequirementAttribute\">\r\n \t\t</uiSnippet>\r\n+\t\t<uiSnippet\r\n+\t\t      id=\"de.dlr.sc.virsat.model.extension.requirements.table.uiSnippetImportConfiguration\"\r\n+\t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n+\t\t      snippet=\"de.dlr.sc.virsat.model.extension.requirements.ui.snippet.UiSnippetTableImportConfiguration\">\r\n+\t\t</uiSnippet>\r\n+\t\t<uiSnippet\r\n+\t\t      id=\"de.dlr.sc.virsat.model.extension.requirements.section.uiSnippetImportConfiguration\"\r\n+\t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n+\t\t      snippet=\"de.dlr.sc.virsat.model.extension.requirements.ui.snippet.UiSnippetSectionImportConfiguration\">\r\n+\t\t</uiSnippet>\r\n+\t\t<uiSnippet\r\n+\t\t      id=\"de.dlr.sc.virsat.model.extension.requirements.table.uiSnippetImportConfigurationMappedSpecificationsSpecificationMapping\"\r\n+\t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n+\t\t      snippet=\"de.dlr.sc.virsat.model.extension.requirements.ui.snippet.UiSnippetTableImportConfigurationMappedSpecificationsSpecificationMapping\">\r\n+\t\t</uiSnippet>\r\n+\t\t<uiSnippet\r\n+\t\t      id=\"de.dlr.sc.virsat.model.extension.requirements.table.uiSnippetSpecificationMapping\"\r\n+\t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n+\t\t      snippet=\"de.dlr.sc.virsat.model.extension.requirements.ui.snippet.UiSnippetTableSpecificationMapping\">\r\n+\t\t</uiSnippet>\r\n+\t\t<uiSnippet\r\n+\t\t      id=\"de.dlr.sc.virsat.model.extension.requirements.section.uiSnippetSpecificationMapping\"\r\n+\t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n+\t\t      snippet=\"de.dlr.sc.virsat.model.extension.requirements.ui.snippet.UiSnippetSectionSpecificationMapping\">\r\n+\t\t</uiSnippet>\r\n \t\t<uiSnippet\r\n \t\t      id=\"de.dlr.sc.virsat.model.extension.requirements.table.uiSnippetEnumerationDefinition\"\r\n \t\t      section=\"de.dlr.sc.virsat.model.extension.requirements.ui.Section\"\r\n@@ -1050,10 +1207,28 @@\n \t     icon=\"resources/icons/RequirementsSpecification.gif\"\r\n \t     name=\"Requirements CSV Import Wizard\">\r\n \t   </wizard>\r\n+\t   <wizard\r\n+\t     category=\"de.dlr.virsat.global.category.import.virsat\"\r\n+\t     class=\"de.dlr.sc.virsat.model.extension.requirements.ui.wizard.ReqIfImportWizard\"\r\n+\t     id=\"de.dlr.sc.virsat.model.extension.requirements.ui.wizard.reqIFImport\"\r\n+\t     icon=\"resources/icons/RequirementsSpecification.gif\"\r\n+\t     name=\"Requirements ReqIF Import Wizard\">\r\n+\t   </wizard>\r\n \t  <category\r\n             id=\"de.dlr.virsat.global.category.import.virsat\"\r\n             name=\"Virtual Satellite\">\r\n       </category>\r\n \t</extension>\r\n+\t   <extension point=\"org.eclipse.ui.editors\">\r\n+      <editor\r\n+            class=\"org.eclipse.rmf.reqif10.pror.editor.presentation.Reqif10Editor\"\r\n+            contributorClass=\"org.eclipse.rmf.reqif10.pror.editor.presentation.Reqif10ActionBarContributor\"\r\n+            default=\"true\"\r\n+            icon=\"resources/icons/RequirementsIconReqIF16.gif\"\r\n+            extensions=\"reqif\"\r\n+            id=\"org.eclipse.rmf.reqif10.presentation.Reqif10EditorID\"\r\n+            name=\"ReqIF ProR Editor\">\r\n+      </editor>\r\n+   </extension>\r\n \t<!-- Plugin.XML Protected Region End -->\r\n </plugin>\r"
  },
  {
    "sha": "2d5d39b680a75ee9741295f44a93eff7783542db",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/ImportConfiguration.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/ImportConfiguration.gif",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/ImportConfiguration.gif",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/ImportConfiguration.gif?ref=b023ede677530cb3bc2fccda2cb39abb52836be9"
  },
  {
    "sha": "2d5d39b680a75ee9741295f44a93eff7783542db",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/ImportConfiguration_disabled.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/ImportConfiguration_disabled.gif",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/ImportConfiguration_disabled.gif",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/ImportConfiguration_disabled.gif?ref=b023ede677530cb3bc2fccda2cb39abb52836be9"
  },
  {
    "sha": "a317d8379e0d861f39ce66b922ddeea63073ef03",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementLinkType.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementLinkType.gif",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementLinkType.gif",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementLinkType.gif?ref=b023ede677530cb3bc2fccda2cb39abb52836be9"
  },
  {
    "sha": "a317d8379e0d861f39ce66b922ddeea63073ef03",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementLinkType_disabled.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementLinkType_disabled.gif",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementLinkType_disabled.gif",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementLinkType_disabled.gif?ref=b023ede677530cb3bc2fccda2cb39abb52836be9"
  },
  {
    "sha": "31b2527d3b392fb7aa41470a4a3f1d8d8032c18c",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementsIconReqIF16.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementsIconReqIF16.gif",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementsIconReqIF16.gif",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/RequirementsIconReqIF16.gif?ref=b023ede677530cb3bc2fccda2cb39abb52836be9"
  },
  {
    "sha": "a9af1795d44b8532aae6a9a625b921cb0de0c996",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/SpecificationMapping.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/SpecificationMapping.gif",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/SpecificationMapping.gif",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/SpecificationMapping.gif?ref=b023ede677530cb3bc2fccda2cb39abb52836be9"
  },
  {
    "sha": "a9af1795d44b8532aae6a9a625b921cb0de0c996",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/SpecificationMapping_disabled.gif",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/SpecificationMapping_disabled.gif",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/SpecificationMapping_disabled.gif",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/resources/icons/SpecificationMapping_disabled.gif?ref=b023ede677530cb3bc2fccda2cb39abb52836be9"
  },
  {
    "sha": "dea89bbc0b9e945458bf6e909308ecf964915abb",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddArrayElementLinkTypeDefinitionsCommand.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddArrayElementLinkTypeDefinitionsCommand.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddArrayElementLinkTypeDefinitionsCommand.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddArrayElementLinkTypeDefinitionsCommand.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,36 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.command;\r\n+\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.ATypeInstance;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.edit.command.AddCommand;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesPackage;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.util.CategoryInstantiator;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.Category;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ArrayInstance;\r\n+\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * \r\n+ * \r\n+ */\t\r\n+public abstract class ACreateAddArrayElementLinkTypeDefinitionsCommand {\r\n+\t\r\n+\tpublic Command create(EditingDomain editingDomain, ArrayInstance arrayInstance, Category type) {\r\n+\t\tATypeInstance ati = new CategoryInstantiator().generateInstance(arrayInstance, type);\r\n+\t\treturn AddCommand.create(editingDomain, arrayInstance, PropertyinstancesPackage.Literals.ARRAY_INSTANCE__ARRAY_INSTANCES, ati);\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "369c6377fb0b1bafd1228dfcd1bca44bb4af90a2",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddArrayElementMappedSpecificationsCommand.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddArrayElementMappedSpecificationsCommand.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddArrayElementMappedSpecificationsCommand.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddArrayElementMappedSpecificationsCommand.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,36 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.command;\r\n+\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.ATypeInstance;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.edit.command.AddCommand;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesPackage;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.util.CategoryInstantiator;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.Category;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ArrayInstance;\r\n+\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * \r\n+ * \r\n+ */\t\r\n+public abstract class ACreateAddArrayElementMappedSpecificationsCommand {\r\n+\t\r\n+\tpublic Command create(EditingDomain editingDomain, ArrayInstance arrayInstance, Category type) {\r\n+\t\tATypeInstance ati = new CategoryInstantiator().generateInstance(arrayInstance, type);\r\n+\t\treturn AddCommand.create(editingDomain, arrayInstance, PropertyinstancesPackage.Literals.ARRAY_INSTANCE__ARRAY_INSTANCES, ati);\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "05aec2443e9628c4f299a29f519d560678f55bf3",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddImportConfigurationCommand.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddImportConfigurationCommand.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddImportConfigurationCommand.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddImportConfigurationCommand.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,37 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.command;\r\n+\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoriesPackage;\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.edit.command.AddCommand;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+\r\n+\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.ImportConfiguration;\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * Mapping specification of imported requirements\r\n+ * \r\n+ */\t\r\n+public abstract class ACreateAddImportConfigurationCommand {\r\n+\tpublic Command create(EditingDomain editingDomain, EObject owner, Concept activeConcept) {\r\n+\t\tImportConfiguration conceptObject = new ImportConfiguration(activeConcept);\r\n+\t\tCategoryAssignment ca = conceptObject.getTypeInstance();\r\n+\t\treturn AddCommand.create(editingDomain, owner, CategoriesPackage.Literals.ICATEGORY_ASSIGNMENT_CONTAINER__CATEGORY_ASSIGNMENTS, ca);\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "4f8902ec2ebd9da173876b19b340f9d133e06140",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddRequirementLinkTypeCommand.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddRequirementLinkTypeCommand.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddRequirementLinkTypeCommand.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddRequirementLinkTypeCommand.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,37 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.command;\r\n+\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoriesPackage;\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.edit.command.AddCommand;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+\r\n+\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.RequirementLinkType;\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * Definition of a requirement link type\r\n+ * \r\n+ */\t\r\n+public abstract class ACreateAddRequirementLinkTypeCommand {\r\n+\tpublic Command create(EditingDomain editingDomain, EObject owner, Concept activeConcept) {\r\n+\t\tRequirementLinkType conceptObject = new RequirementLinkType(activeConcept);\r\n+\t\tCategoryAssignment ca = conceptObject.getTypeInstance();\r\n+\t\treturn AddCommand.create(editingDomain, owner, CategoriesPackage.Literals.ICATEGORY_ASSIGNMENT_CONTAINER__CATEGORY_ASSIGNMENTS, ca);\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "e24edc23b009384255ee568490cb07522a752f8a",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddSpecificationMappingCommand.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddSpecificationMappingCommand.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddSpecificationMappingCommand.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/command/ACreateAddSpecificationMappingCommand.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,37 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.command;\r\n+\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoriesPackage;\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.edit.command.AddCommand;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+\r\n+\r\n+import de.dlr.sc.virsat.model.extension.requirements.model.SpecificationMapping;\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * \r\n+ * \r\n+ */\t\r\n+public abstract class ACreateAddSpecificationMappingCommand {\r\n+\tpublic Command create(EditingDomain editingDomain, EObject owner, Concept activeConcept) {\r\n+\t\tSpecificationMapping conceptObject = new SpecificationMapping(activeConcept);\r\n+\t\tCategoryAssignment ca = conceptObject.getTypeInstance();\r\n+\t\treturn AddCommand.create(editingDomain, owner, CategoriesPackage.Literals.ICATEGORY_ASSIGNMENT_CONTAINER__CATEGORY_ASSIGNMENTS, ca);\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "d66467ddd7fcad60bf4e107b1e6b231c296416a8",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddImportConfigurationHandler.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddImportConfigurationHandler.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddImportConfigurationHandler.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddImportConfigurationHandler.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.handler;\r\n+\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+\r\n+import de.dlr.sc.virsat.project.ui.transactional.handler.ATransactionalAddCategoryHandler;\r\n+import de.dlr.sc.virsat.model.extension.requirements.ui.command.CreateAddImportConfigurationCommand;\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * Mapping specification of imported requirements\r\n+ * \r\n+ */\t\r\n+public abstract class AAddImportConfigurationHandler extends ATransactionalAddCategoryHandler {\r\n+\t\r\n+\t@Override\r\n+\tprotected String getConceptName() {\r\n+\t\treturn \"de.dlr.sc.virsat.model.extension.requirements\";\r\n+\t}\r\n+\t\r\n+\t@Override\r\n+\tprotected Command createAddCommand(EditingDomain editingDomain, EObject owner, Concept activeConcept) {\r\n+\t\treturn new CreateAddImportConfigurationCommand().create(editingDomain, owner, activeConcept);\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "2dc24c6b5528fdf59dee577c9ca52f48e30ea798",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddRequirementLinkTypeHandler.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddRequirementLinkTypeHandler.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddRequirementLinkTypeHandler.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddRequirementLinkTypeHandler.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.handler;\r\n+\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+\r\n+import de.dlr.sc.virsat.project.ui.transactional.handler.ATransactionalAddCategoryHandler;\r\n+import de.dlr.sc.virsat.model.extension.requirements.ui.command.CreateAddRequirementLinkTypeCommand;\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * Definition of a requirement link type\r\n+ * \r\n+ */\t\r\n+public abstract class AAddRequirementLinkTypeHandler extends ATransactionalAddCategoryHandler {\r\n+\t\r\n+\t@Override\r\n+\tprotected String getConceptName() {\r\n+\t\treturn \"de.dlr.sc.virsat.model.extension.requirements\";\r\n+\t}\r\n+\t\r\n+\t@Override\r\n+\tprotected Command createAddCommand(EditingDomain editingDomain, EObject owner, Concept activeConcept) {\r\n+\t\treturn new CreateAddRequirementLinkTypeCommand().create(editingDomain, owner, activeConcept);\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "4854d4c057347abcb4660a614ec8ae1a300dafb6",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddSpecificationMappingHandler.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddSpecificationMappingHandler.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddSpecificationMappingHandler.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/handler/AAddSpecificationMappingHandler.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.handler;\r\n+\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+\r\n+import de.dlr.sc.virsat.project.ui.transactional.handler.ATransactionalAddCategoryHandler;\r\n+import de.dlr.sc.virsat.model.extension.requirements.ui.command.CreateAddSpecificationMappingCommand;\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * \r\n+ * \r\n+ */\t\r\n+public abstract class AAddSpecificationMappingHandler extends ATransactionalAddCategoryHandler {\r\n+\t\r\n+\t@Override\r\n+\tprotected String getConceptName() {\r\n+\t\treturn \"de.dlr.sc.virsat.model.extension.requirements\";\r\n+\t}\r\n+\t\r\n+\t@Override\r\n+\tprotected Command createAddCommand(EditingDomain editingDomain, EObject owner, Concept activeConcept) {\r\n+\t\treturn new CreateAddSpecificationMappingCommand().create(editingDomain, owner, activeConcept);\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "f2cfb95799c9ea8328d2cc85c6d74e8983f65be8",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionImportConfiguration.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionImportConfiguration.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionImportConfiguration.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionImportConfiguration.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,28 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.snippet;\r\n+\r\n+import de.dlr.sc.virsat.uiengine.ui.editor.snippets.IUiSnippet;\r\n+import de.dlr.sc.virsat.uiengine.ui.editor.snippets.AUiSnippetGenericPropertyInstances;\r\n+\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * Mapping specification of imported requirements\r\n+ * \r\n+ */\t\r\n+public abstract class AUiSnippetSectionImportConfiguration extends AUiSnippetGenericPropertyInstances implements IUiSnippet {\r\n+\tpublic AUiSnippetSectionImportConfiguration() {\r\n+\t\tsuper(\"de.dlr.sc.virsat.model.extension.requirements\", \"ImportConfiguration\");\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "6de776857f6a3cc059eb2d15e4e0669804e92293",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionRequirementLinkType.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionRequirementLinkType.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionRequirementLinkType.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionRequirementLinkType.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,28 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.snippet;\r\n+\r\n+import de.dlr.sc.virsat.uiengine.ui.editor.snippets.IUiSnippet;\r\n+import de.dlr.sc.virsat.uiengine.ui.editor.snippets.AUiSnippetGenericPropertyInstances;\r\n+\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * Definition of a requirement link type\r\n+ * \r\n+ */\t\r\n+public abstract class AUiSnippetSectionRequirementLinkType extends AUiSnippetGenericPropertyInstances implements IUiSnippet {\r\n+\tpublic AUiSnippetSectionRequirementLinkType() {\r\n+\t\tsuper(\"de.dlr.sc.virsat.model.extension.requirements\", \"RequirementLinkType\");\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "4cbc496bbbab26c2ef713a208c663504cd2fb278",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionSpecificationMapping.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionSpecificationMapping.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionSpecificationMapping.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetSectionSpecificationMapping.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,28 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.snippet;\r\n+\r\n+import de.dlr.sc.virsat.uiengine.ui.editor.snippets.IUiSnippet;\r\n+import de.dlr.sc.virsat.uiengine.ui.editor.snippets.AUiSnippetGenericPropertyInstances;\r\n+\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * \r\n+ * \r\n+ */\t\r\n+public abstract class AUiSnippetSectionSpecificationMapping extends AUiSnippetGenericPropertyInstances implements IUiSnippet {\r\n+\tpublic AUiSnippetSectionSpecificationMapping() {\r\n+\t\tsuper(\"de.dlr.sc.virsat.model.extension.requirements\", \"SpecificationMapping\");\r\n+\t}\r\n+}\r"
  },
  {
    "sha": "bc1930e1ea499e1cc71721d23a85dc03f88ce84e",
    "filename": "de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetTableImportConfiguration.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/blob/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetTableImportConfiguration.java",
    "raw_url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/raw/b023ede677530cb3bc2fccda2cb39abb52836be9/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetTableImportConfiguration.java",
    "contents_url": "https://api.github.com/repos/virtualsatellite/VirtualSatellite4-Core/contents/de.dlr.sc.virsat.model.extension.requirements.ui/src-gen/de/dlr/sc/virsat/model/extension/requirements/ui/snippet/AUiSnippetTableImportConfiguration.java?ref=b023ede677530cb3bc2fccda2cb39abb52836be9",
    "patch": "@@ -0,0 +1,41 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.requirements.ui.snippet;\r\n+\r\n+import de.dlr.sc.virsat.model.extension.requirements.ui.command.CreateAddImportConfigurationCommand;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import de.dlr.sc.virsat.uiengine.ui.editor.snippets.IUiSnippet;\r\n+import de.dlr.sc.virsat.uiengine.ui.editor.snippets.AUiSnippetGenericCategoryAssignmentTable;\r\n+\r\n+;\r\n+\r\n+/**\r\n+ * Auto Generated Abstract Generator Gap Class\r\n+ * \r\n+ * Don't Manually modify this class\r\n+ * \r\n+ * Mapping specification of imported requirements\r\n+ * \r\n+ */\t\r\n+public abstract class AUiSnippetTableImportConfiguration extends AUiSnippetGenericCategoryAssignmentTable implements IUiSnippet {\r\n+\tpublic AUiSnippetTableImportConfiguration() {\r\n+\t\tsuper(\"de.dlr.sc.virsat.model.extension.requirements\",\r\n+\t\t\t\"ImportConfiguration\",\r\n+\t\t\t\"de.dlr.sc.virsat.model.extension.requirements.ImportConfiguration\",\r\n+\t\t\tSTYLE_ADD_BUTTON | STYLE_REMOVE_BUTTON | STYLE_EDITOR_BUTTON);\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tprotected Command createAddCommand(EditingDomain editingDomain, Concept activeConcept) {\r\n+\t\treturn new CreateAddImportConfigurationCommand().create(editingDomain, model, activeConcept);\r\n+\t}\r\n+}\r"
  }
]
