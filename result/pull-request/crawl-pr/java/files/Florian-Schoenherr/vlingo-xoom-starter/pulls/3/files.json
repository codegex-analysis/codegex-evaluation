[
  {
    "sha": "2ea22f8cbe3db8b604ba6caeff423bed277de87f",
    "filename": "src/main/frontend/package-lock.json",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/package-lock.json",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/package-lock.json",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/package-lock.json?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -2426,6 +2426,11 @@\n       \"integrity\": \"sha512-TAy4Qikbrr3K/fxym4EUzknJakyWpMOpm7CRuyiCST0LX+NZgnf/Wip479TC3sUXOrfuczJNH4VeFVvxy/m/1A==\",\n       \"dev\": true\n     },\n+    \"svelte-portal\": {\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https://registry.npmjs.org/svelte-portal/-/svelte-portal-2.1.1.tgz\",\n+      \"integrity\": \"sha512-B61Bem/3cqgPGVMRM09RhEmZKBGbv3EFVO15GWbFWltNy9dN6sdLK5rV5VEOdZRDNaqgYai9caCHMDuYMpW/1w==\"\n+    },\n     \"svelte-preprocess\": {\n       \"version\": \"4.6.0\",\n       \"resolved\": \"https://registry.npmjs.org/svelte-preprocess/-/svelte-preprocess-4.6.0.tgz\","
  },
  {
    "sha": "dd4f1763384800b53703fdb7ea99b080fe0ec7d7",
    "filename": "src/main/frontend/package.json",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/package.json",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/package.json",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/package.json?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -13,7 +13,8 @@\n     \"@mdi/js\": \"^5.8.55\",\n     \"compression\": \"^1.7.1\",\n     \"polka\": \"next\",\n-    \"sirv\": \"^1.0.0\"\n+    \"sirv\": \"^1.0.0\",\n+    \"svelte-portal\": \"^2.1.1\"\n   },\n   \"devDependencies\": {\n     \"@babel/core\": \"^7.0.0\","
  },
  {
    "sha": "8349b343574967c38046541e7b7bcf2da7e18087",
    "filename": "src/main/frontend/src/components/aggregates/AggregateDialog.svelte",
    "status": "modified",
    "additions": 78,
    "deletions": 86,
    "changes": 164,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/components/aggregates/AggregateDialog.svelte",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/components/aggregates/AggregateDialog.svelte",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/src/components/aggregates/AggregateDialog.svelte?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -1,13 +1,7 @@\n <script>\n-\timport {\n-\t\tButton,\n-\t\tTextField,\n-\t\tDialog,\n-\t\tCardActions\n-\t} from 'svelte-materialify/src';\n-\timport { aggregateSettings, currentAggregate, setLocalStorage } from \"../../stores\";\n-\timport { classNameRule, identifierRule, requireRule, routeRule, isPropertyUnique, isAggregateUnique } from \"../../validators\";\n-\n+\timport { Button, TextField, Dialog, CardActions } from 'svelte-materialify/src';\n+\timport { aggregateSettings, getLocalStorage, setLocalStorage } from \"../../stores\";\n+\timport { classNameRule, identifierRule, requireRule, routeRule, isPropertyUniqueRule, isAggregateUniqueRule } from \"../../validators\";\n \timport StateFields from './StateFields.svelte';\n \timport Events from './Events.svelte';\n \timport Methods from './Methods.svelte';\n@@ -18,94 +12,92 @@\n \n \texport let dialogActive;\n \texport let editMode;\n+\texport let oldAggregate;\n+\tlet newAggregate;\n+\tlet aggregateName, stateFields, events, methods, rootPath, producerExchangeName, consumerExchangeName, schemaGroup, disableSchemaGroup, routes, outgoingEvents, receivers;\n \n-\texport let currentId;\n-\t\n-\tlet aggregateIndex = undefined;\n-\tlet aggregateName = $currentAggregate ? $currentAggregate.aggregateName : \"\";\n-\tlet stateFields = [{ name: \"id\", type: \"String\" }];\n-\tlet events = [];\n-\tlet methods = [];\n-\tlet rootPath = \"/\";\n-\tlet producerExchangeName = \"\";\n-\tlet consumerExchangeName = \"\";\n-\tlet schemaGroup = \"\";\n-\tlet disableSchemaGroup = false;\n-\tlet routes = [];\n-\tlet outgoingEvents = [];\n-\tlet receivers = [];\n+\n+\tconst retrieveSchemaGroup = () => $aggregateSettings.length > 0 ? $aggregateSettings[0].producerExchange.schemaGroup : \"\";\n+\tconst canWriteSchemaGroup = () => (schemaGroup == undefined || schemaGroup.length == 0); //currentId == 0 ||\n+\tconst initialAggregate = {\n+\t\taggregateName: \"\",\n+\t\tstateFields: [{ name: \"id\", type: \"String\" }],\n+\t\tevents: [],\n+\t\tmethods: [],\n+\t\tapi: {\n+\t\t\trootPath: \"/\",\n+\t\t\troutes: [],\n+\t\t},\n+\t\tproducerExchange: {\n+\t\t\texchangeName: \"\",\n+\t\t\tschemaGroup: retrieveSchemaGroup(),\n+\t\t\toutgoingEvents: [],\n+\t\t},\n+\t\tconsumerExchange: {\n+\t\t\texchangeName: \"\",\n+\t\t\treceivers: [],\n+\t\t},\n+\t\tdisableSchemaGroup: !canWriteSchemaGroup(),\n+\t}\n \n \tconst add = () => {\n-\t\tif(requireRule(aggregateName)) return;\n-\t\t$aggregateSettings = [...$aggregateSettings, $currentAggregate];\n-\t\tcurrentId = undefined;\n-\t\treset();\n-\t\tdialogActive = false;\n+\t\tif(!valid) return;\n+\t\t$aggregateSettings = [...$aggregateSettings, newAggregate];\n+\t\tcloseDialog();\n \t}\n \n \tconst update = () => {\n-\t\tif(requireRule(aggregateName)) return;\n-\t\t$aggregateSettings.splice(currentId, 1, $currentAggregate);\n-\t\t$aggregateSettings = $aggregateSettings;\n-\t\tcurrentId = undefined;\n-\t\treset();\n-\t\tdialogActive = false;\n+\t\tif(!valid) return;\n+\t\t$aggregateSettings = $aggregateSettings.filter(a => JSON.stringify(a) !== JSON.stringify(oldAggregate));\n+\t\t$aggregateSettings = [...$aggregateSettings, newAggregate];\n+\t\tcloseDialog();\n \t}\n \n-\tconst reset = () => {\n-\t\taggregateName = \"\";\n-\t\tstateFields = [{ name: \"id\", type: \"String\" }];\n-\t\tevents = [];\n-\t\tmethods = [];\n-\t\trootPath = \"/\";\n-\t\troutes = [];\n-\t\tproducerExchangeName = \"\";\n-\t\tschemaGroup = retrieveSchemaGroup();\n-\t\tdisableSchemaGroup = !canWriteSchemaGroup();\n-\t\toutgoingEvents = [];\n-\t\tconsumerExchangeName = \"\";\n-\t\treceivers = [];\n+\tconst closeDialog = () => {\n+\t\tclearFields();\n+\t\tdialogActive = false;\n+\t\tsetLocalStorage(\"aggregateDialogState\", {});\n \t}\n \n-\tconst retrieveSchemaGroup = () => {\n-\t\treturn $aggregateSettings.length > 0 ? $aggregateSettings[0].producerExchange.schemaGroup : \"\";\n+\tconst initFieldsWith = (aggregate) => {\n+\t\taggregateName = aggregate.aggregateName;\n+\t\tstateFields = aggregate.stateFields;\n+\t\tevents = aggregate.events;\n+\t\tmethods = aggregate.methods;\n+\t\trootPath = aggregate.api.rootPath;\n+\t\troutes = aggregate.api.routes;\n+\t\tproducerExchangeName = aggregate.producerExchange.exchangeName;\n+\t\tschemaGroup = aggregate.producerExchange.schemaGroup;\n+\t\toutgoingEvents = aggregate.producerExchange.outgoingEvents;\n+\t\tconsumerExchangeName = aggregate.consumerExchange.exchangeName;\n+\t\treceivers = aggregate.consumerExchange.receivers;\n+\t\tdisableSchemaGroup = aggregate.disableSchemaGroup;\n \t}\n+\tconst clearFields = () => initFieldsWith(initialAggregate);\n \n-\tconst canWriteSchemaGroup = () => {\n-\t\treturn currentId == 0 || (schemaGroup == undefined && schemaGroup.length == 0);\n-\t}\n+\tconst validField = (f) => !identifierRule(f.name) && f.type && !isPropertyUniqueRule(f.name, stateFields, 'name');\n+\tconst validEvent = (e) => !classNameRule(e.name) && e.fields.length > 0 && !isPropertyUniqueRule(e.name, events, 'name');\n+\tconst validMethod = (m) => !identifierRule(m.name) && m.parameters.length > 0 && m.event && !isPropertyUniqueRule(m.name, methods, 'name');\n+\tconst validRoute = (r) => r.path && r.aggregateMethod;\n \n-\t$: changedCurrent(currentId);\n-\tfunction changedCurrent(index) {\n-\t\taggregateIndex = index;\n-\t\tif(index !== undefined && $aggregateSettings[index]) {\n-\t\t\tconst aggregateWithId =  $aggregateSettings[index];\n-\t\t\taggregateName = aggregateWithId.aggregateName;\n-\t\t\tstateFields = aggregateWithId.stateFields;\n-\t\t\tevents = aggregateWithId.events;\n-\t\t\tmethods = aggregateWithId.methods;\n-\t\t\trootPath = aggregateWithId.api.rootPath;\n-\t\t\troutes = aggregateWithId.api.routes;\n-\t\t\tproducerExchangeName = aggregateWithId.producerExchange.exchangeName;\n-\t\t\tschemaGroup = aggregateWithId.producerExchange.schemaGroup;\n-\t\t\toutgoingEvents = aggregateWithId.producerExchange.outgoingEvents;\n-\t\t\tconsumerExchangeName = aggregateWithId.consumerExchange.exchangeName;\n-\t\t\treceivers = aggregateWithId.consumerExchange.receivers;\n-\t\t} else {\n-\t\t\treset();\n-\t\t}\n+\t\n+\t$: {\n+\t\tconst storageState = getLocalStorage(\"aggregateDialogState\");\n+\t\tif(storageState && storageState.newAggregate) initFieldsWith(storageState.newAggregate);\n+\t\t/* this changes if editMode OR oldAggregate changes (so even if you enter with editMode multiple times, it will react) */\n+\t\telse editMode ? initFieldsWith(oldAggregate) : clearFields();\n \t}\n \n-\tconst validField = (f) => !identifierRule(f.name) && f.type && !isPropertyUnique(f.name, stateFields, 'name');\n-\tconst validEvent = (e) => !classNameRule(e.name) && e.fields.length > 0 && !isPropertyUnique(e.name, events, 'name');\n-\tconst validMethod = (m) => !identifierRule(m.name) && m.parameters.length > 0 && m.event && !isPropertyUnique(m.name, methods, 'name');\n-\tconst validRoute = (r) => r.path && r.aggregateMethod;\n-\n-\t$: valid = !classNameRule(aggregateName) && stateFields.every(validField) && events.every(validEvent) && methods.every(validMethod) && !routeRule(rootPath) && routes.every(validRoute) && !isAggregateUnique(aggregateIndex, aggregateName, [...$aggregateSettings, { aggregateName }]);\n+\t$: valid = !classNameRule(aggregateName) && stateFields.every(validField) && events.every(validEvent) && methods.every(validMethod) \n+\t&& !routeRule(rootPath) && routes.every(validRoute) && !isAggregateUniqueRule(oldAggregate, aggregateName, $aggregateSettings);\n+\t\n \t$: if(valid) {\n-\t\t$currentAggregate = {aggregateIndex, aggregateName, stateFields, events, methods, api: { rootPath, routes }, producerExchange: { \"exchangeName\" : producerExchangeName, schemaGroup, outgoingEvents }, consumerExchange: {  \"exchangeName\" : consumerExchangeName, receivers } };\n-\t\t//TODO: rework this - we need to keep the modal open, too.\n-\t\tsetLocalStorage(\"currentAggregate\", $currentAggregate);\n+\t\tnewAggregate = {\n+\t\t\taggregateName, stateFields, events, methods, api: { rootPath, routes }\n+\t\t\t, producerExchange: { \"exchangeName\" : producerExchangeName, schemaGroup, outgoingEvents }\n+\t\t\t, consumerExchange: {  \"exchangeName\" : consumerExchangeName, receivers }\n+\t\t};\n+\t\tsetLocalStorage(\"aggregateDialogState\", {oldAggregate, newAggregate, dialogActive, editMode});\n \t}\n </script>\n \n@@ -117,7 +109,7 @@\n \t\t\tNew Aggregate\n \t\t{/if}\n \t</h4>\n-\t<TextField class=\"mb-4\" bind:value={aggregateName} rules={[requireRule, classNameRule, (name) => isAggregateUnique(aggregateIndex, name, [...$aggregateSettings, { aggregateName }])]} validateOnBlur={!aggregateName}>Aggregate Name</TextField>\n+\t<TextField class=\"mb-4\" bind:value={aggregateName} rules={[requireRule, classNameRule, (name) => isAggregateUniqueRule(oldAggregate, name, $aggregateSettings)]} validateOnBlur={!aggregateName}>Aggregate Name</TextField>\n \t<ValueObjects />\n \t<StateFields bind:stateFields />\n \t<Events bind:events  bind:stateFields />\n@@ -127,12 +119,12 @@\n \t<ConsumerExchange bind:consumerExchangeName bind:receivers bind:methods />\n \t<CardActions>\n \t\t{#if editMode}\n-\t\t\t<Button class=\"mr-3\" on:click={update} disabled={!valid}>Update</Button>\n+\t\t\t<Button class=\"mr-3\" on:click={update} disabled={!valid}>Update</Button> <!--TODO: vlingo colors: class=\"primary-color\", right now materialify overwrites disabled state-->\n \t\t{:else}\n-\t\t\t<Button class=\"mr-3\" on:click={add} disabled={!valid}>Add</Button>\n+\t\t\t<Button class=\"mr-3\" on:click={add} disabled={!valid}>Add</Button> <!--TODO: vlingo colors-->\n \t\t{/if}\n-\t\t<Button on:click={() => dialogActive = !dialogActive}>Cancel</Button>\n+\t\t<Button outlined on:click={closeDialog}>Cancel</Button>\n \t\t<span style=\"width: 100%;\"></span>\n-\t\t<Button on:click={reset}>Reset</Button>\n+\t\t<Button outlined class=\"red red-text\" on:click={clearFields}>Clear Fields</Button>\n \t</CardActions>\n </Dialog>\n\\ No newline at end of file"
  },
  {
    "sha": "472f4bd390914c798610dbcd4e7145d512e7c78e",
    "filename": "src/main/frontend/src/components/aggregates/DeleteWithDialog.svelte",
    "status": "modified",
    "additions": 19,
    "deletions": 17,
    "changes": 36,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/components/aggregates/DeleteWithDialog.svelte",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/components/aggregates/DeleteWithDialog.svelte",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/src/components/aggregates/DeleteWithDialog.svelte?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -8,6 +8,7 @@\n \t} from \"svelte-materialify/src\";\n \timport DeleteButton from \"./DeleteButton.svelte\";\n \timport { createEventDispatcher } from \"svelte\";\n+\timport Portal from \"svelte-portal/src/Portal.svelte\";\n \n \tconst dispatch = createEventDispatcher();\n \t\n@@ -24,24 +25,25 @@\n </script>\n \n <DeleteButton title=\"Delete {type}\" on:click={open} bind:color/>\n-\t\n-<Dialog persistent bind:active={dialogActive}>\n-\t<Card class=\"pa-3\">\n-\t\t<div class=\"d-flex flex-column\">\n-\t\t\t<CardTitle>\n-\t\t\t\tAre you sure you want to delete this {type}?\n-\t\t\t\t<div class=\"small\">\n-\t\t\t\t\t<slot />\n-\t\t\t\t</div>\n-\t\t\t</CardTitle>\n-\t\t\t<CardActions style=\"margin-top: auto\" class=\"justify-space-around\">\n-\t\t\t\t<Button on:click={onDelete} text class=\"red-text\">Delete</Button>\n-\t\t\t\t<Button on:click={close}>Cancel</Button>\n-\t\t\t</CardActions>\n-\t\t</div>\n-\t</Card>\n-</Dialog>\n \n+<Portal target=\".s-app\"> <!-- solves Dialog capturing problem -->\n+\t<Dialog persistent bind:active={dialogActive}>\n+\t\t<Card class=\"pa-3\">\n+\t\t\t<div class=\"d-flex flex-column\">\n+\t\t\t\t<CardTitle>\n+\t\t\t\t\tAre you sure you want to delete this {type}?\n+\t\t\t\t\t<div class=\"small\">\n+\t\t\t\t\t\t<slot />\n+\t\t\t\t\t</div>\n+\t\t\t\t</CardTitle>\n+\t\t\t\t<CardActions style=\"margin-top: auto\" class=\"justify-space-around\">\n+\t\t\t\t\t<Button on:click={onDelete} text class=\"red-text\">Delete</Button>\n+\t\t\t\t\t<Button on:click={close}>Cancel</Button>\n+\t\t\t\t</CardActions>\n+\t\t\t</div>\n+\t\t</Card>\n+\t</Dialog>\n+</Portal>\n <style lang=\"scss\" global>\n \t.small {\n \t\tfont-size: 14px;"
  },
  {
    "sha": "5e524f6e71fdea41117c7205cd0c718e3f0a9ecc",
    "filename": "src/main/frontend/src/components/aggregates/Events.svelte",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/components/aggregates/Events.svelte",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/components/aggregates/Events.svelte",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/src/components/aggregates/Events.svelte?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -2,7 +2,7 @@\n   import { Select, TextField } from 'svelte-materialify/src';\n   import DeleteWithDialog from \"./DeleteWithDialog.svelte\";\n \timport CreateButton from \"./CreateButton.svelte\";\n-\timport { classNameRule, requireRule, isPropertyUnique } from \"../../validators\";\n+\timport { classNameRule, requireRule, isPropertyUniqueRule } from \"../../validators\";\n   import { formatArrayForSelect } from '../../utils';\n \n   export let events;\n@@ -34,7 +34,7 @@\n   {#each events as event, i (i)}\n     <div class=\"d-flex\">\n       <div style=\"flex: 1;\" class=\"mb-3 pb-3 mr-4\">\n-        <TextField  bind:value={event.name} rules={[requireRule, classNameRule, (v) => isPropertyUnique(v, events, 'name')]} validateOnBlur={!event.name}>Name</TextField>\n+        <TextField  bind:value={event.name} rules={[requireRule, classNameRule, (v) => isPropertyUniqueRule(v, events, 'name')]} validateOnBlur={!event.name}>Name</TextField>\n       </div>\n       <div style=\"flex: 1;\" class=\"mb-3 pb-3\">\n         <Select mandatory disabled={!stateFields.length} multiple items={formatArrayForSelect(stateFields.map(f => f.name !== 'id' && f.name))} bind:value={event.fields}>Fields</Select>"
  },
  {
    "sha": "999fb90683b339c5192525667b577adfda40e65d",
    "filename": "src/main/frontend/src/components/aggregates/Methods.svelte",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/components/aggregates/Methods.svelte",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/components/aggregates/Methods.svelte",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/src/components/aggregates/Methods.svelte?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -2,7 +2,7 @@\n \timport { Select, Switch, TextField } from 'svelte-materialify/src';\n   import DeleteWithDialog from \"./DeleteWithDialog.svelte\";\n \timport CreateButton from \"./CreateButton.svelte\";\n-\timport { identifierRule, requireRule, isPropertyUnique } from \"../../validators\";\n+\timport { identifierRule, requireRule, isPropertyUniqueRule } from \"../../validators\";\n   import { formatArrayForSelect } from '../../utils';\n \n   export let methods;\n@@ -46,10 +46,10 @@\n       <div style=\"flex: 1;\">\n         <div class=\"d-flex\">\n           <div class=\"mb-1 pb-1 mr-4\" style=\"flex: 1;\">\n-            <TextField bind:value={method.name} rules={[requireRule, identifierRule, (v) => isPropertyUnique(v, methods, 'name')]} validateOnBlur={!method.name}>Name</TextField>\n+            <TextField bind:value={method.name} rules={[requireRule, identifierRule, (v) => isPropertyUniqueRule(v, methods, 'name')]} validateOnBlur={!method.name}>Name</TextField>\n           </div>\n           <div class=\"mb-1 pb-1 mr-4\" style=\"flex: 1;\">\n-            <Select id=\"method-parameter\" mandatory disabled={!stateFields.length} multiple items={formatArrayForSelect(stateFields.map(f => f.name))} bind:value={method.parameters}>Parameters</Select>\n+            <Select mandatory disabled={!stateFields.length} multiple items={formatArrayForSelect(stateFields.map(f => f.name))} bind:value={method.parameters}>Parameters</Select>\n           </div>\n           <div class=\"mb-1 pb-1 \" style=\"flex: 1;\">\n             <Select mandatory disabled={!events.length} items={formatArrayForSelect(events.map(e => e.name))} bind:value={method.event}>Event</Select>"
  },
  {
    "sha": "3f03276af64c18c259a4e5a115158d486dca6cb2",
    "filename": "src/main/frontend/src/components/aggregates/StateFields.svelte",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/components/aggregates/StateFields.svelte",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/components/aggregates/StateFields.svelte",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/src/components/aggregates/StateFields.svelte?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -1,8 +1,8 @@\n <script>\n-  import { Select, TextField, Menu, Button, List, ListItem, Dialog } from 'svelte-materialify/src';\n+  import { Select, TextField } from 'svelte-materialify/src';\n   import DeleteWithDialog from \"./DeleteWithDialog.svelte\";\n \timport CreateButton from \"./CreateButton.svelte\";\n-  import { identifierRule, requireRule, isPropertyUnique } from \"../../validators\";\n+  import { identifierRule, requireRule, isPropertyUniqueRule } from \"../../validators\";\n   import { formatArrayForSelect } from '../../utils';\n \timport { valueObjectSettings, simpleTypes } from '../../stores';\n \n@@ -21,7 +21,7 @@\n   {#each stateFields as stateField, i (i)}\n     <div class=\"d-flex\">\n       <div style=\"flex: 1;\" class=\"mb-3 pb-4 mr-4\">\n-        <TextField disabled={i === 0} autocomplete=\"off\" bind:value={stateField.name} rules={[requireRule, identifierRule, (v) => isPropertyUnique(v, stateFields, 'name') ]}>Name</TextField>\n+        <TextField disabled={i === 0} autocomplete=\"off\" bind:value={stateField.name} rules={[requireRule, identifierRule, (v) => isPropertyUniqueRule(v, stateFields, 'name') ]}>Name</TextField>\n       </div>\n       <div style=\"flex: 1;\" class=\"mb-3 pb-4\">\n         <Select mandatory disabled={i === 0} items={stateFieldsTypes} bind:value={stateField.type}>Type</Select>"
  },
  {
    "sha": "a69399ffabf336381facd06cf918e81f93d0511a",
    "filename": "src/main/frontend/src/routes/aggregates.svelte",
    "status": "modified",
    "additions": 13,
    "deletions": 16,
    "changes": 29,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/routes/aggregates.svelte",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/routes/aggregates.svelte",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/src/routes/aggregates.svelte?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -2,34 +2,31 @@\n \timport CardForm from \"../components/CardForm.svelte\";\n \timport AggregateCard from \"../components/aggregates/AggregateCard.svelte\";\n \timport AggregateDialog from \"../components/aggregates/AggregateDialog.svelte\";\n-\timport { aggregateSettings, setLocalStorage } from \"../stores\";\n+\timport { aggregateSettings, getLocalStorage, setLocalStorage } from \"../stores\";\n \timport { SlideGroup, SlideItem, Icon } from \"svelte-materialify/src\";\n \timport { mdiPlus } from \"@mdi/js\";\n-import Button from \"svelte-materialify/src/components/Button\";\n+\timport Button from \"svelte-materialify/src/components/Button\";\n \n-\tlet dialogActive = false;\n-\tlet editMode = false;\n+\tlet dialogActive = getLocalStorage(\"aggregateDialogState\") ? getLocalStorage(\"aggregateDialogState\").dialogActive : false;\n+\tlet editMode = getLocalStorage(\"aggregateDialogState\") ? getLocalStorage(\"aggregateDialogState\").editMode : false;\n \n-\tlet currentId;\n+\tlet oldAggregate = getLocalStorage(\"aggregateDialogState\") ? getLocalStorage(\"aggregateDialogState\").oldAggregate : undefined;\n \n \tconst newAggregate = () => {\n-\t\tcurrentId = $aggregateSettings.length;\n \t\tdialogActive = true;\n+\t\teditMode = false;\n \t}\n \n-\tconst edit = (id) => {\n-\t\tcurrentId = id;\n+\tconst edit = (aggregate) => {\n+\t\toldAggregate = aggregate;\n \t\tdialogActive = true;\n \t\teditMode = true;\n \t}\n \n-\tconst remove = (id) => {\n-\t\t$aggregateSettings.splice(id, 1);\n-\t\t$aggregateSettings = $aggregateSettings;\n+\tconst remove = (aggregate) => {\n+\t\t$aggregateSettings = $aggregateSettings.filter(a => JSON.stringify(a) !== JSON.stringify(aggregate));\n \t}\n \n-\t$: if(!dialogActive && editMode) editMode = false;\n-\n \t$: setLocalStorage(\"aggregateSettings\", $aggregateSettings)\n </script>\n \n@@ -48,14 +45,14 @@ import Button from \"svelte-materialify/src/components/Button\";\n \t<div class=\"d-flex\">\n \t\t<SlideGroup activeClass=\"white-text\">\n \t\t\t<SlideItem>\n-\t\t\t\t{#each $aggregateSettings as aggregate, id}\n-\t\t\t\t\t<AggregateCard {aggregate} on:edit={() => edit(id)} on:remove={() => remove(id)}/>\n+\t\t\t\t{#each $aggregateSettings as aggregate}\n+\t\t\t\t\t<AggregateCard {aggregate} on:edit={() => edit(aggregate)} on:remove={() => remove(aggregate)}/>\n \t\t\t\t{/each}\n \t\t\t</SlideItem>\n \t\t</SlideGroup>\n \t</div>\n </CardForm>\n \n {#if dialogActive}\n-\t<AggregateDialog bind:dialogActive bind:editMode bind:currentId/>\n+\t<AggregateDialog bind:dialogActive bind:editMode bind:oldAggregate/>\n {/if}\n\\ No newline at end of file"
  },
  {
    "sha": "25bda4e04e7020db6dedadad5ea04283e97c8366",
    "filename": "src/main/frontend/src/routes/generation.svelte",
    "status": "modified",
    "additions": 9,
    "deletions": 2,
    "changes": 11,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/routes/generation.svelte",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/routes/generation.svelte",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/src/routes/generation.svelte?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -3,7 +3,7 @@\n \timport { contextSettings, aggregateSettings, persistenceSettings, deploymentSettings, generationSettings, setLocalStorage, valueObjectSettings } from \"../stores\";\n \timport XoomStarterRepository from \"../api/XoomStarterRepository\";\n \timport { requireRule } from \"../validators\";\n-  import { mdiCheckBold, mdiCloseThick } from \"@mdi/js\";\n+  import { mdiAlert, mdiCheckBold, mdiCloseThick } from \"@mdi/js\";\n   import {\n     Button,\n     Switch,\n@@ -12,6 +12,7 @@\n     Snackbar,\n     Icon\n   } from 'svelte-materialify/src';\n+  import Alert from \"svelte-materialify/src/components/Alert\";\n \n \tlet context = $contextSettings;\n   let model = { aggregateSettings: $aggregateSettings, persistenceSettings: $persistenceSettings, valueObjectSettings: $valueObjectSettings };\n@@ -55,7 +56,7 @@\n \n <!-- add newbie tooltips -->\n <CardForm title=\"Generation\" previous=\"deployment\">\n-\t<TextField class=\"mb-4\" placeholder=\"D:\\demo-projects\" bind:value={projectDirectory} rules={[requireRule]}>Absolute path where you want to generate the project</TextField>\n+\t<TextField class=\"mb-4\" placeholder=\"C:\\demo-projects\" bind:value={projectDirectory} rules={[requireRule]}>Absolute path where you want to generate the project</TextField>\n \t<Switch class=\"mb-4\" bind:checked={useAnnotations}>Use VLINGO/XOOM annotations</Switch>\n   <Switch class=\"mb-4\" bind:checked={useAutoDispatch} disabled={!useAnnotations}>Use VLINGO/XOOM auto dispatch</Switch>\n \n@@ -68,6 +69,12 @@\n     <Icon class=\"red-text\" path={mdiCloseThick}/> {failure[0]}\n     <a href=\"https://github.com/vlingo/vlingo-xoom-starter/issues\" rel=\"noopener\" target=\"_blank\">{failure[1]}</a>\n   {/if}\n+  <Alert class=\"info-color mt-5\">\n+    <div slot=\"icon\">\n+      <Icon path={mdiAlert} />\n+    </div>\n+    Project generation depends on Maven and requires the use of mvnw. Ensure that Maven is installed and that mvnw has file execution permission for your user account. For example: <code>chmod mvnw 755</code>\n+  </Alert>\n </CardForm>\n \n "
  },
  {
    "sha": "3f6345a69648fa2829702ec56678534fa5bcac19",
    "filename": "src/main/frontend/src/routes/persistence.svelte",
    "status": "modified",
    "additions": 6,
    "deletions": 7,
    "changes": 13,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/routes/persistence.svelte",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/routes/persistence.svelte",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/src/routes/persistence.svelte?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -1,7 +1,7 @@\n <script>\n \timport CardForm from \"../components/CardForm.svelte\";\n \timport { persistenceSettings, setLocalStorage } from \"../stores\";\n-\timport { storageTypes, projectionsTypes, databaseTypes } from '../stores/persistance';\n+\timport { storageTypes, projectionsTypes, databaseTypes } from '../stores/persistence';\n \timport { Select, Switch } from \"svelte-materialify/src\";\n \n \tconst storageFormat = (val) => $storageTypes.find(t => t.value === val).name;\n@@ -28,16 +28,15 @@\n \t\tif(storageType === \"JOURNAL\") {\n \t\t\t$projectionsTypes = [\n \t\t\t\t{name: 'Not Applicable', value: 'NONE'},\n-\t\t\t\t{name: 'Event Based', value: 'EVENT_BASED'},\n+\t\t\t\t{name: 'Event-based', value: 'EVENT_BASED'},\n \t\t\t];\n-\t\t\tif(projections === 'OPERATION_BASED') {\n-\t\t\t\tprojections = \"NONE\";\n-\t\t\t}\n+\t\t\tuseCQRS = true;\n+\t\t\tprojections = \"EVENT_BASED\";\n \t\t} else {\n \t\t\t$projectionsTypes = [\n \t\t\t\t{name: 'Not Applicable', value: 'NONE'},\n-\t\t\t\t{name: 'Event Based', value: 'EVENT_BASED'},\n-\t\t\t\t{name: 'Operation Based', value: 'OPERATION_BASED'}\n+\t\t\t\t{name: 'Event-based', value: 'EVENT_BASED'},\n+\t\t\t\t{name: 'Operation-based', value: 'OPERATION_BASED'}\n \t\t\t];\n \t\t}\n \t}"
  },
  {
    "sha": "863bc2ac5bfae374b83477a4bec8e9f9f954543b",
    "filename": "src/main/frontend/src/stores/persistence.js",
    "status": "renamed",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/stores/persistence.js",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/stores/persistence.js",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/src/stores/persistence.js?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -2,15 +2,15 @@ import { readable, writable } from 'svelte/store';\n \n export const storageTypes = readable(null, function start(set) {\n \tset([\n-    {name: \"State Store\", value: \"STATE_STORE\"},\n-    {name: \"Journal\", value: \"JOURNAL\"}\n+    {name: \"State Store for Key-Value Persistence\", value: \"STATE_STORE\"},\n+    {name: \"Journal for Event Sourcing\", value: \"JOURNAL\"}\n   ]);\n });\n \n export const projectionsTypes = writable([\n   {name: 'Not Applicable', value: 'NONE'},\n-  {name: 'Event Based', value: 'EVENT_BASED'},\n-  {name: 'Operation Based', value: 'OPERATION_BASED'}\n+  {name: 'Event-based', value: 'EVENT_BASED'},\n+  {name: 'Operation-based', value: 'OPERATION_BASED'}\n ]);\n \n export const databaseTypes = readable(null, function start(set) {",
    "previous_filename": "src/main/frontend/src/stores/persistance.js"
  },
  {
    "sha": "dc55e0e95cbfd3f2156c432a7c026d0b1e0f3917",
    "filename": "src/main/frontend/src/validators.js",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/blob/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/validators.js",
    "raw_url": "https://github.com/Florian-Schoenherr/vlingo-xoom-starter/raw/62dad3e56bfbb6ac35f03c440fb407fad47f6eae/src/main/frontend/src/validators.js",
    "contents_url": "https://api.github.com/repos/Florian-Schoenherr/vlingo-xoom-starter/contents/src/main/frontend/src/validators.js?ref=62dad3e56bfbb6ac35f03c440fb407fad47f6eae",
    "patch": "@@ -25,5 +25,5 @@ export const routeRule = (value) => /^[a-zA-Z_$/?%-]+$/.test(value) ? undefined\n export const xoomVersionRule = (value) => [\"1.4.1-SNAPSHOT\", \"1.4.0\"].some(v => v == value) ? undefined : errors.XOOMVERSION;\n export const schemaGroupRule = (value) => /^[A-Za-z]+\\:[A-Za-z]+\\:[A-Za-z.]+$/.test(value) ? undefined : errors.SCHEMAGROUP;\n export const schemaRule = (value) => /^[A-Za-z]+\\:[A-Za-z]+\\:[A-Za-z.]+\\:[A-Za-z]+\\:\\d+\\.\\d+\\.\\d+$/.test(value) ? undefined : errors.SCHEMA;\n-export const isPropertyUnique = (value, store, prop) => store.filter(obj => obj[prop] === value).length === 1 ? undefined : `${prop.charAt(0).toUpperCase() + prop.slice(1)} must be unique`;\n-export const isAggregateUnique = (aggregateIndex, aggregateName, store) => store.filter(obj => obj.aggregateIndex != aggregateIndex && obj.aggregateName === aggregateName).length === 1 ? undefined : `Aggregate name must be unique`;\n\\ No newline at end of file\n+export const isPropertyUniqueRule = (value, array, prop) => array.filter(obj => obj[prop] === value).length === 1 ? undefined : `${prop.charAt(0).toUpperCase() + prop.slice(1)} must be unique`;\n+export const isAggregateUniqueRule = (oldAggregate, aggregateName, aggregateSettings) => aggregateSettings.filter(a => JSON.stringify(a) !== JSON.stringify(oldAggregate) && a.aggregateName === aggregateName).length === 0 ? undefined : `Aggregate name must be unique`;\n\\ No newline at end of file"
  }
]
