[
  {
    "sha": "83d7c7a21a20cb001916b049b2515213ab868bfc",
    "filename": "src/br/com/zup/Conta.java",
    "status": "removed",
    "additions": 0,
    "deletions": 100,
    "changes": 100,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/ae6e1db88d02be858253c35a9ea44390429e30cb/src/br/com/zup/Conta.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/ae6e1db88d02be858253c35a9ea44390429e30cb/src/br/com/zup/Conta.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/Conta.java?ref=ae6e1db88d02be858253c35a9ea44390429e30cb",
    "patch": "@@ -1,100 +0,0 @@\n-package br.com.zup;\n-\n-public class Conta implements Transacao {\n-    private double saldo;\n-    private String numero, agencia, nome;\n-\n-    public Conta(String numero, String agencia, double saldo, String nome) {\n-        this.numero = numero;\n-        this.agencia = agencia;\n-        this.saldo = saldo;\n-        this.nome = nome;\n-    }\n-\n-    public String getNumero() {\n-        return numero;\n-    }\n-\n-    public void setNumero(String numero) {\n-        this.numero = numero;\n-    }\n-\n-    public String getAgencia() {\n-        return agencia;\n-    }\n-\n-    public void setAgencia(String agencia) {\n-        this.agencia = agencia;\n-    }\n-\n-    public double getSaldo() {\n-        return saldo;\n-    }\n-\n-    public void setSaldo(double saldo) {\n-        this.saldo += saldo;\n-    }\n-\n-    public String getNome() {\n-        return nome;\n-    }\n-\n-    public void setNome(String nome) {\n-        this.nome = nome;\n-    }\n-\n-    @Override\n-    public void depositarNaConta(double valorADepositar) {\n-        this.saldo += valorADepositar;\n-    }\n-\n-    @Override\n-    public boolean sacarDaConta(double valorASacar) throws Exception {\n-        if(this.saldo >= valorASacar) {\n-            this.saldo -= valorASacar;\n-            return true;\n-        } else {\n-            throw new Exception(\"Saldo insuficiente\");\n-        }\n-    }\n-\n-    @Override\n-    public boolean transferirParaOutraConta(double valorATransferir, Conta conta) throws Exception {\n-        this.existeConta(conta);\n-        if(this.getSaldo() >= valorATransferir && this.getNumero() != conta.getNumero()) {\n-            conta.setSaldo(valorATransferir);\n-            this.diminuirSaldo(valorATransferir);\n-            return true;\n-        } else if(this.getSaldo() <= valorATransferir) {\n-            throw new Exception(\"Saldo insuficiente\");\n-        } else if(this.getNumero() == conta.getNumero()){\n-            throw new Exception(\"A conta de destino é a mesma da conta informada\");\n-        }\n-        return false;\n-    }\n-\n-    @Override\n-    public void consultarSaldo() {\n-        System.out.println(\"Saldo da conta: \" + this.getSaldo());\n-    }\n-\n-    public void diminuirSaldo(double valor) {\n-        this.saldo -= valor;\n-    }\n-\n-    public boolean existeConta(Conta conta) throws Exception {\n-        if(conta.getNumero() != null) {\n-            return true;\n-        } else {\n-            throw new Exception(\"Conta inexistente\");\n-        }\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return    \"\\nnome: \" + getNome()\n-                + \"\\nsaldo: R$ \" + getSaldo()\n-                + \"\\nnumero: \" + getNumero()\n-                + \"\\nagencia: \" + getAgencia();\n-    }\n-}"
  },
  {
    "sha": "5675751e606afa53452f6108a6666670ba17e888",
    "filename": "src/br/com/zup/ContaCorrente.java",
    "status": "removed",
    "additions": 0,
    "deletions": 14,
    "changes": 14,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/ae6e1db88d02be858253c35a9ea44390429e30cb/src/br/com/zup/ContaCorrente.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/ae6e1db88d02be858253c35a9ea44390429e30cb/src/br/com/zup/ContaCorrente.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/ContaCorrente.java?ref=ae6e1db88d02be858253c35a9ea44390429e30cb",
    "patch": "@@ -1,14 +0,0 @@\n-package br.com.zup;\n-\n-public class ContaCorrente extends Conta implements Transacao{\n-\n-    public ContaCorrente(String numero, String agencia, double saldo, String nome) {\n-        super(numero, agencia, saldo, nome);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"-- Conta Corrente --\"\n-                +super.toString();\n-    }\n-}"
  },
  {
    "sha": "5c19fbea1e2d30e550065541e51ea85e44c72840",
    "filename": "src/br/com/zup/ContaPoupanca.java",
    "status": "removed",
    "additions": 0,
    "deletions": 37,
    "changes": 37,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/ae6e1db88d02be858253c35a9ea44390429e30cb/src/br/com/zup/ContaPoupanca.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/ae6e1db88d02be858253c35a9ea44390429e30cb/src/br/com/zup/ContaPoupanca.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/ContaPoupanca.java?ref=ae6e1db88d02be858253c35a9ea44390429e30cb",
    "patch": "@@ -1,37 +0,0 @@\n-package br.com.zup;\n-\n-import java.util.Calendar;\n-\n-public class ContaPoupanca extends Conta implements Transacao{\n-    private int diaRendimento;\n-    public ContaPoupanca(String numero, String agencia, double saldo, String nome) {\n-        super(numero, agencia, saldo, nome);\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"-- Conta Poupança --\"\n-                +super.toString();\n-    }\n-\n-    public int getDiaRendimento() {\n-        return diaRendimento;\n-    }\n-\n-    public void setDiaRendimento(int diaRendimento) {\n-        this.diaRendimento = diaRendimento;\n-    }\n-\n-    public boolean calcularNovoSaldo(double taxaRendimento){\n-\n-        Calendar hoje = Calendar.getInstance();\n-        diaRendimento = 24;\n-        if (diaRendimento == hoje.get(Calendar.DAY_OF_MONTH)){\n-            double valorComRendimento = this.getSaldo() * taxaRendimento;\n-            this.setSaldo(valorComRendimento);\n-            return true;\n-        }\n-        return false;\n-    }\n-\n-}"
  },
  {
    "sha": "82218001d5f4fc0624e308d655db924465358cd5",
    "filename": "src/br/com/zup/Main.java",
    "status": "modified",
    "additions": 8,
    "deletions": 91,
    "changes": 99,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/Main.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/Main.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/Main.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -1,103 +1,20 @@\n package br.com.zup;\n \n-public class Main {\n+import br.com.zup.controller.Control;\n \n-    public static void main(String[] args) throws Exception {\n+/**\n+ * @author 3 Mosqueteiros\n+ * @version 1.0.0\n+ */\n \n-        Conta ccRicardo = new ContaCorrente(\"1000\", \"0010\", 0.0, \"Ricardo\");\n-        Conta ccWesley = new ContaCorrente(\"2000\", \"0020\", 0.0, \"Wesley\");\n+public class Main {\n \n-        Conta cpRicardo = new ContaPoupanca(\"1234\", \"0030\", 0.0, \"Ricardo\");\n-        ContaPoupanca cpWesley = new ContaPoupanca(\"2345\", \"0040\", 0.0, \"Wesley\");\n+    public static void main(String[] args) throws Exception {\n \n         try {\n-            pularLinha();\n-            pularLinha();\n-\n-            System.out.println(cpWesley);\n-\n-\n-            pularLinha();\n-            pularLinha();pularLinha();\n-            pularLinha();pularLinha();\n-            pularLinha();pularLinha();\n-            pularLinha();pularLinha();\n-            pularLinha();pularLinha();\n-            pularLinha();pularLinha();\n-            pularLinha();pularLinha();\n-            pularLinha();pularLinha();\n-            pularLinha();pularLinha();\n-            pularLinha();pularLinha();\n-            pularLinha();\n-\n-            // Mostrando as contas corrente\n-            System.out.println(ccWesley);\n-            pularLinha();\n-            System.out.println(ccRicardo);\n-            pularLinha();\n-\n-            // Depositando nas contas corrente\n-            ccWesley.depositarNaConta(10000.00);\n-            ccRicardo.depositarNaConta(5000.00);\n-\n-            // Saldo após o depósito\n-            System.out.println(\"Foi depositado R$ 10.000,00 na conta corrente do Wesley\" +\n-                               \" e R$ e 5.000,00 na conta corrente do Ricardo.\\n\" +\n-                               \"Saldo das contas após o depósito\");\n-            pularLinha();\n-            System.out.println(\"Saldo Conta Wesley: \" + ccWesley.getSaldo());\n-            System.out.println(\"Saldo Conta Ricardo: \" + ccRicardo.getSaldo());\n-\n-            // Sacar das contas corrente\n-            ccWesley.sacarDaConta(2000.00);\n-            ccRicardo.sacarDaConta(1500.00);\n-            pularLinha();\n-\n-            // Saldo após o saque\n-            System.out.println(\"Foi sacado R$ 2.000,00 da conta corrente do Wesley\" +\n-                               \" e R$ e 1.500,00 da conta corrente do Ricardo.\\n\" +\n-                               \"Saldo das contas após o saque\");\n-            pularLinha();\n-            System.out.println(\"Saldo Conta Wesley: \" + ccWesley.getSaldo());\n-            System.out.println(\"Saldo Conta Ricardo: \" + ccRicardo.getSaldo());\n-            pularLinha();\n-\n-            // Transferência entre contas\n-            ccWesley.transferirParaOutraConta(3000.00, ccRicardo);\n-            System.out.println(\"Foi transferido R$ 3.000,00 reais da conta corrente do Wesley para \" +\n-                               \"conta corrente do Ricardo\\n\" +\n-                               \"Saldo das contas após a transferência\");\n-            pularLinha();\n-            System.out.println(\"Saldo Conta Wesley: \" + ccWesley.getSaldo());\n-            System.out.println(\"Saldo Conta Ricardo: \" + ccRicardo.getSaldo());\n-            pularLinha();\n-\n-            // Mostrando as contas poupança\n-            System.out.println(cpWesley);\n-            pularLinha();\n-            System.out.println(cpRicardo);\n-            pularLinha();\n-\n-            // Transferência de conta corrente para conta poupança\n-            ccRicardo.transferirParaOutraConta(2000.00, cpRicardo);\n-\n-            // Saldo da conta poupança após a transferência\n-            System.out.println(cpRicardo);\n-            pularLinha();\n-\n-            // Depósito na conta poupança do Wesley\n-            cpWesley.depositarNaConta(4500.00);\n-\n-            // Saldo da conta poupança após o depósito\n-            System.out.println(cpWesley);\n-\n-\n+            Control.executarSistema();\n         } catch (Exception e) {\n             System.out.println(e.getMessage());\n         }\n     }\n-\n-    public static void pularLinha() {\n-        System.out.println();\n-    }\n }"
  },
  {
    "sha": "9fd34596043f90ccc581e685970ad53b4c273b4d",
    "filename": "src/br/com/zup/Transacao.java",
    "status": "removed",
    "additions": 0,
    "deletions": 12,
    "changes": 12,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/ae6e1db88d02be858253c35a9ea44390429e30cb/src/br/com/zup/Transacao.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/ae6e1db88d02be858253c35a9ea44390429e30cb/src/br/com/zup/Transacao.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/Transacao.java?ref=ae6e1db88d02be858253c35a9ea44390429e30cb",
    "patch": "@@ -1,12 +0,0 @@\n-package br.com.zup;\n-\n-public interface Transacao {\n-\n-    public void depositarNaConta(double valorADepositar);\n-\n-    public boolean sacarDaConta(double valorASacar) throws Exception;\n-\n-    public boolean transferirParaOutraConta(double valorATransferir, Conta conta) throws Exception;\n-\n-    public void consultarSaldo();\n-}"
  },
  {
    "sha": "542c905b34eb23fb8da87c7fe9fa97d8576fba9d",
    "filename": "src/br/com/zup/conta/Conta.java",
    "status": "added",
    "additions": 118,
    "deletions": 0,
    "changes": 118,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/conta/Conta.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/conta/Conta.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/conta/Conta.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,118 @@\n+package br.com.zup.conta;\n+\n+import br.com.zup.pessoa.Pessoa;\n+\n+/**\n+ * Classe de modelagem da conta\n+ */\n+\n+public class Conta implements Transacao{\n+    private double saldo;\n+    private String numero, agencia;\n+    private Pessoa pessoa;\n+    private double limite;\n+\n+    public Conta(String numero, String agencia, double saldo, Pessoa pessoa) {\n+        this.numero = numero;\n+        this.agencia = agencia;\n+        this.saldo = saldo;\n+        this.pessoa = pessoa;\n+        this.limite = 0;\n+    }\n+\n+    public Pessoa getPessoa() {\n+        return pessoa;\n+    }\n+\n+    public String getNumero() {\n+        return numero;\n+    }\n+\n+    public String getAgencia() {\n+        return agencia;\n+    }\n+\n+    public double getSaldo() {\n+        return saldo;\n+    }\n+\n+    public void setSaldo(double saldo) {\n+        this.saldo += saldo;\n+    }\n+\n+    public double getLimite() {\n+        return limite;\n+    }\n+\n+    public void setLimite(double limite) {\n+        this.limite = limite;\n+    }\n+\n+    public Pessoa getNome() {\n+        return pessoa;\n+    }\n+\n+    @Override\n+    public void depositarNaConta(double valorADepositar) {\n+        this.saldo += valorADepositar;\n+    }\n+\n+    @Override\n+    public void sacarDaConta(double valorASacar) throws Exception {\n+        if ((this.saldo + this.limite) >= valorASacar) {\n+            double valorSacado = 0;\n+            if (this.saldo > 0) {\n+                this.saldo -= valorASacar;\n+                System.out.println(\"Saque efetuado com sucesso!\");\n+            } else if (this.saldo <= 0) {\n+                this.limite -= valorASacar;\n+                valorSacado = valorSacado - valorASacar;\n+                this.saldo = valorSacado;\n+                System.out.println(\"Saque efetuado do seu limite.\\nSeu saldo está R$ \" + valorSacado + \" negativo!\");\n+            } else {\n+                throw new Exception(\"Saldo insuficiente\");\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public boolean transferirParaOutraConta(double valorATransferir, Conta contaRemente, Conta contaDestino) throws Exception {\n+        this.existeConta(contaRemente);\n+        this.existeConta(contaDestino);\n+        if(this.getSaldo() >= valorATransferir && contaRemente.getNumero() != contaDestino.getNumero()) {\n+            contaDestino.setSaldo(valorATransferir);\n+            contaRemente.diminuirSaldo(valorATransferir);\n+            return true;\n+        } else if(contaRemente.getSaldo() <= valorATransferir) {\n+            throw new Exception(\"Saldo insuficiente\");\n+        } else if(contaRemente.getNumero() == contaRemente.getNumero()){\n+            throw new Exception(\"A conta de destino é a mesma da conta informada\");\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public void consultarSaldo() {\n+        System.out.println(\"Saldo da conta: \" + this.getSaldo());\n+    }\n+\n+    public void diminuirSaldo(double valor) {\n+        this.saldo -= valor;\n+    }\n+\n+    public static boolean existeConta(Conta conta) throws Exception {\n+        if(conta.getNumero() != null) {\n+            return true;\n+        } else {\n+            throw new Exception(\"Conta inexistente\");\n+        }\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return  \"\\n\" + getNome()\n+                + \"\\nSaldo: R$ \" + getSaldo()\n+                + \"\\nNumero: \" + getNumero()\n+                + \"\\nAgência: \" + getAgencia();\n+    }\n+}"
  },
  {
    "sha": "453f16192b11610d3bebda831573c3ad60edc437",
    "filename": "src/br/com/zup/conta/ContaCorrente.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/conta/ContaCorrente.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/conta/ContaCorrente.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/conta/ContaCorrente.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,22 @@\n+package br.com.zup.conta;\n+\n+import br.com.zup.pessoa.Pessoa;\n+\n+/**\n+ * Classe que cria um objeto do tipo Conta Corrente\n+ */\n+\n+public class ContaCorrente extends Conta {\n+\n+    public ContaCorrente(String numero, String agencia, double saldo, Pessoa pessoa) {\n+        super(numero, agencia, saldo, pessoa);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"---------------------------------------------\\n\"\n+                +\"\\n-- Conta Corrente --\\n\"\n+                + super.toString()\n+                + \"\\nLimite: \" + getLimite();\n+    }\n+}"
  },
  {
    "sha": "e064dce092422e6f3f338b26159df63a947ff871",
    "filename": "src/br/com/zup/conta/ContaPoupanca.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/conta/ContaPoupanca.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/conta/ContaPoupanca.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/conta/ContaPoupanca.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,28 @@\n+package br.com.zup.conta;\n+\n+import br.com.zup.pessoa.Pessoa;\n+\n+/**\n+ * Classe que cria um objeto do tipo Conta Poupança\n+ */\n+\n+public class ContaPoupanca extends Conta{\n+\n+    public ContaPoupanca(String numero, String agencia, double saldo, Pessoa pessoa, double taxaRendimento) {\n+        super(numero, agencia, saldo, pessoa);\n+        this.calcularRendimento(taxaRendimento);\n+    }\n+\n+    public void calcularRendimento(double taxaRendimento) {\n+\n+        double valorComRendimento = this.getSaldo() * taxaRendimento;\n+        this.setSaldo(valorComRendimento);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"---------------------------------------------\\n\"\n+                +\"\\n-- Conta Poupança --\\n\"\n+                + super.toString();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2427d3c61d1507c11fb6fcddb969c4c9044a05fe",
    "filename": "src/br/com/zup/conta/Transacao.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/conta/Transacao.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/conta/Transacao.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/conta/Transacao.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,16 @@\n+package br.com.zup.conta;\n+\n+/**\n+ * Contrato da classe conta\n+ */\n+\n+public interface Transacao {\n+\n+    void depositarNaConta(double valorADepositar);\n+\n+    void sacarDaConta(double valorASacar) throws Exception;\n+\n+    boolean transferirParaOutraConta(double valorATransferir, Conta contaRemetente, Conta contaDestino) throws Exception;\n+\n+    void consultarSaldo();\n+}"
  },
  {
    "sha": "889ecdb4321cd85e0045be742f8e9ae93bb233e9",
    "filename": "src/br/com/zup/controller/Control.java",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/controller/Control.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/controller/Control.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/controller/Control.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,78 @@\n+package br.com.zup.controller;\n+\n+import br.com.zup.telas.IO;\n+import br.com.zup.telas.Menu;\n+\n+/**\n+ * Classe que controla a execução do sistema\n+ */\n+\n+public class Control {\n+    private static boolean continuarMenuPrincipal = true;\n+    private static boolean continuarMenuCliente = false;\n+\n+    public static void executarSistema() throws Exception {\n+        executarMenuPrincipal();\n+    }\n+        public static void executarMenuPrincipal() throws Exception {\n+            while (continuarMenuPrincipal) {\n+                Menu.executarMenuPrincipal();\n+                System.out.print(\"Opção: \");\n+                int opcao = IO.lerDados().nextInt();\n+                validarMenuPrincipal(opcao);\n+            }\n+        }\n+        public static void executarMenuCliente() throws Exception {\n+            while (continuarMenuCliente) {\n+                Menu.executarMenuCliente();\n+                System.out.print(\"Opção: \");\n+                int opcao = IO.lerDados().nextInt();\n+                validarMenuCliente(opcao);\n+            }\n+        }\n+\n+    public static void validarMenuPrincipal(int opcao) throws Exception {\n+        final String GERENTE = \"GERENTE\";\n+        final String ANALISTA = \"ANALISTA\";\n+        if (opcao == 1) {\n+            Menu.executarMenuCadastroFuncionario(GERENTE);\n+        } else if (opcao == 2) {\n+            Menu.executarMenuCriarLimite();\n+        } else if (opcao == 4 || opcao == 8) {\n+            Menu.executarMenuPesquisaCliente();\n+        } else if (opcao == 3) {\n+            Menu.executarMenuCadastroFuncionario(ANALISTA);\n+        } else if (opcao == 5) {\n+            Menu.executarMenuCadastroContas();\n+        } else if (opcao == 6) {\n+            Menu.executarMenuPesquisaContaPorCPF();\n+        } else if (opcao == 7) {\n+            Menu.executarMenuCadastroClienteExterno();\n+        } else if (opcao == 9) {\n+            continuarMenuPrincipal = false;\n+            continuarMenuCliente = true;\n+            executarMenuCliente();\n+\n+        } else if(opcao == 0) {\n+            continuarMenuPrincipal = false;\n+        }\n+    }\n+\n+    public static void validarMenuCliente(int opcao) throws Exception {\n+        if (opcao == 1) {\n+            Menu.executarMenuSacar();\n+        } else if (opcao == 2) {\n+            Menu.executarMenuDepositar();\n+        } else if (opcao == 3) {\n+            Menu.executarMenuTransferir();\n+        } else if (opcao == 4) {\n+            Menu.executarMenuConsultarSaldo();\n+        } else if (opcao == 9) {\n+            continuarMenuPrincipal = true;\n+            continuarMenuCliente = false;\n+            executarMenuPrincipal();\n+        } else if(opcao == 0) {\n+            continuarMenuCliente = false;\n+        }\n+    }\n+}"
  },
  {
    "sha": "73d2a16d7e1f77b4b3d20f5f1e447253f6f56b2a",
    "filename": "src/br/com/zup/controller/OperacaoBancaria.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/controller/OperacaoBancaria.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/controller/OperacaoBancaria.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/controller/OperacaoBancaria.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,71 @@\n+package br.com.zup.controller;\n+\n+import br.com.zup.conta.Conta;\n+import br.com.zup.conta.ContaCorrente;\n+import br.com.zup.conta.ContaPoupanca;\n+import br.com.zup.pessoa.GerenciamentoPessoas;\n+import br.com.zup.pessoa.Pessoa;\n+import br.com.zup.telas.IO;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Classe que efetua as operações bancárias\n+ */\n+\n+public class OperacaoBancaria {\n+    public static List<Conta> listaConta = new ArrayList<>();\n+\n+    public static void cadastrarConta(int opcao, String numero, String agencia, double saldo, Pessoa pessoa) throws Exception {\n+\n+\n+        boolean conta = OperacaoBancaria.pesquisarConta(pessoa);\n+        if (opcao == 1 && conta == false) {\n+            Conta contaCorrente = new ContaCorrente(numero, agencia, saldo, pessoa);\n+            OperacaoBancaria.listaConta.add(contaCorrente);\n+            IO.escreverDados(\"\\nConta cadastrada com sucesso!\");\n+            System.out.println(contaCorrente);\n+        } else if (opcao == 2 && conta == false) {\n+            IO.escreverDados(\"Digite a taxa de porcentagem da poupança: \");\n+            double taxaRendimento = IO.lerDados().nextDouble();\n+            Conta contaPoupanca = new ContaPoupanca(numero, agencia, saldo, pessoa, taxaRendimento);\n+            OperacaoBancaria.listaConta.add(contaPoupanca);\n+            IO.escreverDados(\"\\nConta cadastrada com sucesso!\");\n+            System.out.println(contaPoupanca);\n+        } else {\n+            System.out.println(\"Conta já cadastrada!\");\n+        }\n+    }\n+\n+    public static Conta pesquisarContaPorCPF(String CPF) throws Exception {\n+        for(Conta conta : listaConta) {\n+            if(conta.getPessoa().getCPF().equalsIgnoreCase(CPF)) {\n+                return conta;\n+            }\n+        }\n+        throw new Exception(\"Conta não cadastrada!\");\n+    }\n+\n+    public static Conta pesquisarContaPorPessoa(Pessoa pessoa) throws Exception {\n+        for(Conta conta : listaConta) {\n+            if(conta.getPessoa().equals(pessoa)) {\n+                return conta;\n+            }\n+        }\n+        throw new Exception(\"Conta não cadastrada!\");\n+    }\n+\n+    public static boolean pesquisarConta(Pessoa pessoa) throws Exception {\n+        for(Conta conta : listaConta) {\n+            if(conta.getPessoa().equals(pessoa)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    public static void criarLimite(Conta conta, double valorLimite) {\n+\n+    }\n+}\n+"
  },
  {
    "sha": "65c1c3e7b37b0864cae82ef9abde73b66f589b29",
    "filename": "src/br/com/zup/pessoa/Analista.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/Analista.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/Analista.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/pessoa/Analista.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,20 @@\n+package br.com.zup.pessoa;\n+\n+/**\n+ * Classe que cria um objeto do tipo Analista\n+ */\n+\n+public class Analista extends Funcionario{\n+\n+    public Analista(String nome, String sobrenome, String dataNascimento, String CPF, String cargo) {\n+        super(nome, sobrenome, dataNascimento, CPF, cargo);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Nome: \" + this.getNome() +\n+                \"\\nSobrenome: \" + this.getSobrenome() +\n+                \"\\nData de nascimento: \" + this.getDataNascimento() +\n+                \"\\nCPF: \" + this.getCPF();\n+    }\n+}"
  },
  {
    "sha": "f52117cc9b09b2f18eb4a68a9ad763cb35e2419d",
    "filename": "src/br/com/zup/pessoa/ClienteExterno.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/ClienteExterno.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/ClienteExterno.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/pessoa/ClienteExterno.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,19 @@\n+package br.com.zup.pessoa;\n+\n+/**\n+ * Classe que cria um objeto do tipo Cliente Externo\n+ */\n+\n+public class ClienteExterno extends Pessoa{\n+    public ClienteExterno(String nome, String sobrenome, String dataNascimento, String CPF) {\n+        super(nome, sobrenome, dataNascimento, CPF);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Nome: \" + this.getNome() +\n+                \"\\nSobrenome: \" + this.getSobrenome() +\n+                \"\\nData de nascimento: \" + this.getDataNascimento() +\n+                \"\\nCPF: \" + this.getCPF();\n+    }\n+}"
  },
  {
    "sha": "a2bfac64fe385de9fa111e981681a58ee16f6495",
    "filename": "src/br/com/zup/pessoa/Funcionario.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/Funcionario.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/Funcionario.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/pessoa/Funcionario.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,31 @@\n+package br.com.zup.pessoa;\n+\n+/**\n+ * Classe que cria um objeto funcionário\n+ */\n+\n+public class Funcionario extends Pessoa{\n+\n+    private int id;\n+    private String cargo;\n+\n+    public Funcionario() {}\n+\n+    public Funcionario(String nome, String sobrenome, String dataNascimento, String CPF, String cargo) {\n+        super(nome, sobrenome, dataNascimento, CPF);\n+        this.cargo = cargo;\n+    }\n+\n+    public String getCargo() {\n+        return cargo;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Nome: \" + this.getNome() +\n+                \"\\nSobrenome: \" + this.getSobrenome() +\n+                \"\\nData de nascimento: \" + this.getDataNascimento() +\n+                \"\\nCPF: \" + this.getCPF() +\n+                \"\\nCargo: \" + this.getCargo();\n+    }\n+}"
  },
  {
    "sha": "126c1c95ec5cb9d412ed133674d3eabb2961a62d",
    "filename": "src/br/com/zup/pessoa/GerenciamentoPessoas.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/GerenciamentoPessoas.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/GerenciamentoPessoas.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/pessoa/GerenciamentoPessoas.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,38 @@\n+package br.com.zup.pessoa;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * Classe que gerencia os objetos Clinte externo, Gerente e Analista\n+ */\n+\n+public class GerenciamentoPessoas {\n+    public static List<Pessoa> listaPessoas = new ArrayList<>();\n+    public static List<Funcionario> listaFuncionarios = new ArrayList<>();\n+\n+    public static Pessoa pesquisarClientePeloCPF(String CPF) throws Exception {\n+        for(Pessoa pessoa : listaPessoas) {\n+            if(pessoa.getCPF().equalsIgnoreCase(CPF)) {\n+                return pessoa;\n+            }\n+        }\n+        throw new Exception(CPF + \" não está cadastrado!\");\n+    }\n+\n+    public static Funcionario pesquisarFuncionarioPeloCPF(String CPF) throws Exception {\n+        for(Funcionario funcionario : listaFuncionarios) {\n+            if(funcionario.getCPF().equalsIgnoreCase(CPF)) {\n+                return funcionario;\n+            }\n+        }\n+        throw new Exception(CPF + \" não está cadastrado!\");\n+    }\n+\n+    public static boolean ehGerente(Funcionario gerente) {\n+        if(gerente.getCargo().equalsIgnoreCase(\"GERENTE\")) {\n+            return true;\n+        }\n+        return false;\n+    }\n+}"
  },
  {
    "sha": "2d461279cf212d225802a2475481e8ed345fd14b",
    "filename": "src/br/com/zup/pessoa/Gerente.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/Gerente.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/Gerente.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/pessoa/Gerente.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,22 @@\n+package br.com.zup.pessoa;\n+\n+/**\n+ * Classe que cria um objeto do tipo Gerente\n+ */\n+\n+public class Gerente extends Funcionario {\n+\n+    public Gerente() {}\n+\n+    public Gerente(String nome, String sobrenome, String dataNascimento, String CPF, String cargo) {\n+        super(nome, sobrenome, dataNascimento, CPF, cargo);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Nome: \" + this.getNome() +\n+                \"\\nSobrenome: \" + this.getSobrenome() +\n+                \"\\nData de nascimento: \" + this.getDataNascimento() +\n+                \"\\nCPF: \" + this.getCPF();\n+    }\n+}"
  },
  {
    "sha": "10defdb8002b74ab44ff99359a20bd62150f94d9",
    "filename": "src/br/com/zup/pessoa/Pessoa.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/Pessoa.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/pessoa/Pessoa.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/pessoa/Pessoa.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,44 @@\n+package br.com.zup.pessoa;\n+\n+/**\n+ * Classe que modela pessoa\n+ */\n+\n+public class Pessoa {\n+\n+    private String nome, sobrenome, dataNascimento;\n+    private String CPF;\n+\n+    public Pessoa() {}\n+\n+    public Pessoa(String nome, String sobrenome, String dataNascimento, String CPF) {\n+        this.nome = nome;\n+        this.sobrenome = sobrenome;\n+        this.dataNascimento = dataNascimento;\n+        this.CPF = CPF;\n+    }\n+\n+    public String getNome() {\n+        return nome;\n+    }\n+\n+    public String getSobrenome() {\n+        return sobrenome;\n+    }\n+\n+    public String getDataNascimento() {\n+        return dataNascimento;\n+    }\n+\n+    public String getCPF() {\n+        return CPF;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Pessoa\" +\n+                \"Nome: \" + nome +\n+                \"Sobrenome: \" + sobrenome +\n+                \"DataNascimento: \" + dataNascimento;\n+    }\n+}"
  },
  {
    "sha": "9c4cce85a60d00644aba7af767e09eacbf2840e7",
    "filename": "src/br/com/zup/telas/IO.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/telas/IO.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/telas/IO.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/telas/IO.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,21 @@\n+package br.com.zup.telas;\n+\n+import java.util.Scanner;\n+\n+/**\n+ * Classe que implementa funcionalidades uteis de entrada e saída\n+ */\n+\n+public class IO {\n+    public static Scanner lerDados(){\n+        return new Scanner(System.in);\n+    }\n+\n+    public static void escreverDados(String mensagem){\n+        System.out.println(mensagem);\n+    }\n+\n+    public static void barraHorizontal(){\n+        System.out.println(\"---------------------------------------------\");\n+    }\n+}"
  },
  {
    "sha": "0cd2c91b37312363e0751603aa13a1ba1f51f975",
    "filename": "src/br/com/zup/telas/Menu.java",
    "status": "added",
    "additions": 187,
    "deletions": 0,
    "changes": 187,
    "blob_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/blob/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/telas/Menu.java",
    "raw_url": "https://github.com/Ricardo-Alcantara/sistema-bancario/raw/501643e1482e910bbfaae127d73cdb6df0c79ec1/src/br/com/zup/telas/Menu.java",
    "contents_url": "https://api.github.com/repos/Ricardo-Alcantara/sistema-bancario/contents/src/br/com/zup/telas/Menu.java?ref=501643e1482e910bbfaae127d73cdb6df0c79ec1",
    "patch": "@@ -0,0 +1,187 @@\n+package br.com.zup.telas;\n+\n+import br.com.zup.conta.Conta;\n+import br.com.zup.conta.ContaCorrente;\n+import br.com.zup.controller.OperacaoBancaria;\n+import br.com.zup.pessoa.*;\n+\n+/**\n+ * Classe que implementa a interface gráfica\n+ */\n+\n+public class Menu {\n+\n+    public static void executarMenuPrincipal() {\n+        IO.escreverDados(\"\\n\\n-----------------------------------------------------------------------------------------------------------------------------------------------------\");\n+        IO.escreverDados(\"----------------------------------------------------------------- SISTEMA BANCÁRIO ------------------------------------------------------------------\");\n+        IO.escreverDados(\"-----------------------------------------------------------------------------------------------------------------------------------------------------\\n\\n\");\n+        IO.escreverDados(\"Seja bem vindo!\\n\");\n+        IO.escreverDados(\"\\n\\n                      ------------------------------ Digite o número correspondente a opção desejada -----------------------------\");\n+        IO.escreverDados(\"                      |                                                                                                          |\");\n+        IO.escreverDados(\"                      |          |1| Cadastrar gerente         |2| Criar limite               |3| Cadastrar funcionário          |\");\n+        IO.escreverDados(\"                      |                                                                                                          |\");\n+        IO.escreverDados(\"                      |          |4| Consultar funcionário     |5| Cadastrar uma conta        |6| Consultar uma conta            |\");\n+        IO.escreverDados(\"                      |                                                                                                          |\");\n+        IO.escreverDados(\"                      |          |7| Cadastrar cliente         |8| Consultar cliente          |9] Menu Cliente                   |\");\n+        IO.escreverDados(\"                      |                                                                                                          |\");\n+        IO.escreverDados(\"                      |                                              |0] SAIR                                                    |\");\n+        IO.escreverDados(\"                      |                                                                                                          |\");\n+        IO.escreverDados(\"                      ------------------------------------------------------------------------------------------------------------\\n\\n\");\n+    }\n+\n+    public static void executarMenuCliente() {\n+        IO.escreverDados(\"\\n\\n-----------------------------------------------------------------------------------------------------------------------------------------------------\");\n+        IO.escreverDados(\"----------------------------------------------------------------- MENU CLIENTE ----------------------------------------------------------------------\");\n+        IO.escreverDados(\"-----------------------------------------------------------------------------------------------------------------------------------------------------\\n\\n\");\n+        IO.escreverDados(\"\\n\\n                      ------------------------------ Digite o número correspondente a opção desejada -----------------------------\");\n+        IO.escreverDados(\"                      |                                                                                                          |\");\n+        IO.escreverDados(\"                      |          |1| Sacar          |2| Depositar          |3| Transferir          |4| Consultar saldo           |\");\n+        IO.escreverDados(\"                      |                                                                                                          |\");\n+        IO.escreverDados(\"                      |          |9| Voltar ao Menu Principal              |0| SAIR                                                 |\");\n+        IO.escreverDados(\"                      |                                                                                                          |\");\n+        IO.escreverDados(\"                      ------------------------------------------------------------------------------------------------------------\\n\\n\");\n+    }\n+\n+    public static void executarMenuCadastroFuncionario(String cargo) {\n+        IO.escreverDados(\"-------------------------------------------------------------- CADASTRO DE FUNCIONÁRIO ---------------------------------------------------------------\\n\");\n+        IO.escreverDados(\"Digite o nome: \");\n+        String nome = IO.lerDados().nextLine();\n+        IO.barraHorizontal();\n+        IO.escreverDados(\"Digite o sobrenome: \");\n+        String sobrenome = IO.lerDados().nextLine();\n+        IO.barraHorizontal();\n+        IO.escreverDados(\"Digite data de nascimento: \");\n+        String dataNascimento = IO.lerDados().nextLine();\n+        IO.barraHorizontal();\n+        IO.escreverDados(\"Digite o CPF: \");\n+        String CPF = IO.lerDados().nextLine();\n+\n+        if(cargo.equalsIgnoreCase(\"GERENTE\")) {\n+            Gerente gerente = new Gerente(nome, sobrenome, dataNascimento, CPF, \"GERENTE\");\n+            GerenciamentoPessoas.listaPessoas.add(gerente);\n+            GerenciamentoPessoas.listaFuncionarios.add(gerente);\n+        } else if(cargo.equalsIgnoreCase(\"ANALISTA\")) {\n+            Analista analista = new Analista(nome, sobrenome, dataNascimento, CPF, \"ANALISTA\");\n+            GerenciamentoPessoas.listaPessoas.add(analista);\n+            GerenciamentoPessoas.listaFuncionarios.add(analista);\n+        }\n+    }\n+\n+    public static void executarMenuPesquisaCliente() throws Exception {\n+        IO.escreverDados(\"\\n\\n---------------------------------------------------------------- PESQUISAR CLIENTE ------------------------------------------------------------------\\n\");\n+        IO.escreverDados(\"Digite o CPF: \");\n+        String CPF = IO.lerDados().nextLine();\n+\n+        System.out.println(GerenciamentoPessoas.pesquisarClientePeloCPF(CPF));\n+    }\n+\n+    public static void executarMenuCadastroContas() throws Exception {\n+        IO.escreverDados(\"\\n\\n---------------------------------------------------------------- CADASTRO DE CONTA ------------------------------------------------------------------\\n\");\n+        IO.escreverDados(\"Selecione: \\n\\n  1 - Conta Corrente      2 - Conta Poupança\");\n+\n+        int opcao = IO.lerDados().nextInt();\n+\n+        IO.barraHorizontal();\n+        IO.escreverDados(\"Digite o CPF: \");\n+        String CPF = IO.lerDados().nextLine();\n+        Pessoa pessoa = GerenciamentoPessoas.pesquisarClientePeloCPF(CPF);\n+\n+        IO.barraHorizontal();\n+\n+        IO.escreverDados(\"Digite o número da conta: \");\n+        String numero = IO.lerDados().nextLine();\n+        IO.barraHorizontal();\n+        IO.escreverDados(\"Digite o número da agência: \");\n+        String agencia = IO.lerDados().nextLine();\n+        IO.barraHorizontal();\n+        IO.escreverDados(\"Digite o saldo da conta: \");\n+        double saldo = IO.lerDados().nextDouble();\n+\n+        OperacaoBancaria.cadastrarConta(opcao, numero, agencia, saldo, pessoa);\n+    }\n+\n+    public static void executarMenuPesquisaContaPorCPF() throws Exception {\n+        IO.escreverDados(\"\\n\\n---------------------------------------------------------------- PESQUISA DE CLIENTE ----------------------------------------------------------------\\n\");\n+        IO.escreverDados(\"Digite o número do CPF: \");\n+        String CPF = IO.lerDados().nextLine();\n+\n+        System.out.println(OperacaoBancaria.pesquisarContaPorCPF(CPF));\n+    }\n+\n+    public static void executarMenuCadastroClienteExterno() {\n+        IO.escreverDados(\"\\n\\n---------------------------------------------------------------- CADASTRO DE CLIENTE ----------------------------------------------------------------\\n\");\n+        IO.escreverDados(\"Digite o nome: \");\n+        String nome = IO.lerDados().nextLine();\n+        IO.barraHorizontal();\n+        IO.escreverDados(\"Digite o sobrenome: \");\n+        String sobrenome = IO.lerDados().nextLine();\n+        IO.barraHorizontal();\n+        IO.escreverDados(\"Digite data de nascimento: \");\n+        String dataNascimento = IO.lerDados().nextLine();\n+        IO.barraHorizontal();\n+        IO.escreverDados(\"Digite o CPF: \");\n+        String CPF = IO.lerDados().nextLine();\n+\n+        ClienteExterno cliente = new ClienteExterno(nome, sobrenome, dataNascimento, CPF);\n+        GerenciamentoPessoas.listaPessoas.add(cliente);\n+        System.out.println(cliente);\n+    }\n+\n+    public static void executarMenuCriarLimite() throws Exception {\n+        IO.escreverDados(\"\\n\\n---------------------------------------------------------------- CRIAR LIMITE -----------------------------------------------------------------------\\n\");\n+        IO.escreverDados(\"Digite o CPF do gerente: \");\n+        String CPFGerente = IO.lerDados().nextLine();\n+        Funcionario gerente = GerenciamentoPessoas.pesquisarFuncionarioPeloCPF(CPFGerente);\n+        GerenciamentoPessoas.ehGerente(gerente);\n+        IO.escreverDados(\"Digite o CPF do cliente: \");\n+        String CPFCliente = IO.lerDados().nextLine();\n+        Conta conta = OperacaoBancaria.pesquisarContaPorCPF(CPFCliente);\n+        IO.escreverDados(\"Digite o valor do limite: \");\n+        double valorLimite = IO.lerDados().nextDouble();\n+        conta.setLimite(valorLimite);\n+    }\n+\n+    public static void executarMenuSacar() throws Exception {\n+        IO.escreverDados(\"\\n\\n---------------------------------------------------------------- MENU SAQUE -------------------------------------------------------------------------\\n\");\n+        IO.escreverDados(\"Digite o CPF do cliente: \");\n+        String CPF = IO.lerDados().nextLine();\n+        Conta conta = OperacaoBancaria.pesquisarContaPorCPF(CPF);\n+        IO.escreverDados(\"Digite o valor desejado: \");\n+        double valorASacar = IO.lerDados().nextDouble();\n+        conta.sacarDaConta(valorASacar);\n+        System.out.println(conta.toString());\n+    }\n+\n+    public static void executarMenuDepositar() throws Exception {\n+        IO.escreverDados(\"\\n\\n---------------------------------------------------------------- MENU DEPOSITAR -------------------------------------------------------------------------\\n\");\n+        IO.escreverDados(\"Digite o CPF do cliente: \");\n+        String CPF = IO.lerDados().nextLine();\n+        Conta conta = OperacaoBancaria.pesquisarContaPorCPF(CPF);\n+        IO.escreverDados(\"Digite o valor desejado: \");\n+        double valorADepositar = IO.lerDados().nextDouble();\n+        conta.depositarNaConta(valorADepositar);\n+        System.out.println(conta.toString());\n+    }\n+\n+    public static void executarMenuTransferir() throws Exception {\n+        IO.escreverDados(\"\\n\\n---------------------------------------------------------------- MENU TRANSFERIR ------------------------------------------------------------------------\\n\");\n+        IO.escreverDados(\"Digite o seu CPF: \");\n+        String CPF = IO.lerDados().nextLine();\n+        Conta contaRemetente = OperacaoBancaria.pesquisarContaPorCPF(CPF);\n+        IO.escreverDados(\"Digite o valor desejado: \");\n+        double valorATransferir = IO.lerDados().nextDouble();\n+        IO.escreverDados(\"Digite o CPF da conta destino: \");\n+        String CPFContaDestino = IO.lerDados().nextLine();\n+        Conta contaDestino = OperacaoBancaria.pesquisarContaPorCPF(CPFContaDestino);\n+        contaRemetente.transferirParaOutraConta(valorATransferir, contaRemetente, contaDestino);\n+        System.out.println(contaDestino.toString());\n+    }\n+\n+    public static void executarMenuConsultarSaldo() throws Exception {\n+        IO.escreverDados(\"\\n\\n---------------------------------------------------------------- MENU CONSULTA SALDO ---------------------------------------------------------------------\\n\");\n+        IO.escreverDados(\"Digite o CPF: \");\n+        String CPF = IO.lerDados().nextLine();\n+        Conta conta = OperacaoBancaria.pesquisarContaPorCPF(CPF);\n+        conta.consultarSaldo();\n+    }\n+}"
  }
]
