[
  {
    "sha": "46fbc7947d79250e1d087f0119bf49b52b1e282d",
    "filename": "config.yml",
    "status": "added",
    "additions": 401,
    "deletions": 0,
    "changes": 401,
    "blob_url": "https://github.com/EarthPol/EP-Recipe/blob/50401b3e5b40409c2c261744f62be3bebe8e1fb4/config.yml",
    "raw_url": "https://github.com/EarthPol/EP-Recipe/raw/50401b3e5b40409c2c261744f62be3bebe8e1fb4/config.yml",
    "contents_url": "https://api.github.com/repos/EarthPol/EP-Recipe/contents/config.yml?ref=50401b3e5b40409c2c261744f62be3bebe8e1fb4",
    "patch": "@@ -0,0 +1,401 @@\n+bell:\n+  type: shaped\n+  key: custom_bell\n+  shape: [\"SSS\", \" G \", \"GNG\"]\n+  definitions:\n+    S: STICK\n+    G: GOLD_INGOT\n+    N: GOLD_NUGGET\n+  output:\n+    type: BELL\n+    amount: 1\n+web:\n+  type: shaped\n+  key: custom_web\n+  shape: [\"S S\", \" S \", \"S S\"]\n+  definitions:\n+    S: STRING\n+  output:\n+    type: COBWEB\n+    amount: 5\n+quartz_item:\n+  type: shapeless\n+  key: custom_nether_quartz\n+  items:\n+    - QUARTZ_BLOCK\n+  output:\n+    type: QUARTZ\n+    amount: 4\n+packed_ice:\n+  type: shaped\n+  key: custom_packedice\n+  shape: [\"III\", \"III\", \"III\"]\n+  definitions:\n+    I: ICE\n+  output:\n+    type: PACKED_ICE\n+    amount: 4\n+blue_ice:\n+  type: shaped\n+  key: custom_blueice\n+  shape: [\"III\", \"III\", \"III\"]\n+  definitions:\n+    I: PACKED_ICE\n+  output:\n+    type: BLUE_ICE\n+    amount: 4\n+slimeball:\n+  type: shapeless\n+  key: custom_slimeball\n+  items:\n+    - SNOWBALL\n+    - GREEN_DYE\n+  output:\n+    type: SLIME_BALL\n+    amount: 1\n+prismarine_shard:\n+  type: shapeless\n+  key: custom_prismarineshard\n+  items:\n+    - SAND\n+    - DIRT\n+    - LAPIS_LAZULI\n+  output:\n+    type: PRISMARINE_SHARD\n+    amount: 3\n+prismarine_crystals:\n+  type: shapeless\n+  key: custom_prismarinecrystals\n+  items:\n+    - PRISMARINE_SHARD\n+    - GLOWSTONE_DUST\n+  output:\n+    type: PRISMARINE_CRYSTALS\n+    amount: 3\n+lilypad_acacia:\n+  type: shaped\n+  key: custom_lilypad1\n+  shape: [\"LLL\"]\n+  definitions:\n+    L: ACACIA_LEAVES\n+  output:\n+    type: LILY_PAD\n+    amount: 3\n+lilypad_birch:\n+  type: shaped\n+  key: custom_lilypad2\n+  shape: [\"LLL\"]\n+  definitions:\n+    L: BIRCH_LEAVES\n+  output:\n+    type: LILY_PAD\n+    amount: 3\n+lilypad_dark_oak:\n+  type: shaped\n+  key: custom_lilypad3\n+  shape: [\"LLL\"]\n+  definitions:\n+    L: DARK_OAK_LEAVES\n+  output:\n+    type: LILY_PAD\n+    amount: 3\n+lilypad_jungle:\n+  type: shaped\n+  key: custom_lilypad4\n+  shape: [\"LLL\"]\n+  definitions:\n+    L: JUNGLE_LEAVES\n+  output:\n+    type: LILY_PAD\n+    amount: 3\n+lilypad_oak:\n+  type: shaped\n+  key: custom_lilypad5\n+  shape: [\"LLL\"]\n+  definitions:\n+    L: OAK_LEAVES\n+  output:\n+    type: LILY_PAD\n+    amount: 3\n+lilypad_spruce:\n+  type: shaped\n+  key: custom_lilypad6\n+  shape: [\"LLL\"]\n+  definitions:\n+    L: SPRUCE_LEAVES\n+  output:\n+    type: LILY_PAD\n+    amount: 3\n+glowstone_dust:\n+  type: shaped\n+  key: custom_glowstoneDust\n+  shape: [\"RRR\", \"RBR\", \"RRR\"]\n+  definitions:\n+    R: REDSTONE\n+    B: BLAZE_POWDER\n+  output:\n+    type: GLOWSTONE_DUST\n+    amount: 8\n+heart_of_the_sea:\n+  type: shaped\n+  key: custom_HeartOfSea\n+  shape: [\"DPQ\", \"PSP\", \"QPD\"]\n+  definitions:\n+    D: DIAMOND_BLOCK\n+    Q: QUARTZ_BLOCK\n+    P: PRISMARINE\n+    S: SLIME_BALL\n+  output:\n+    type: HEART_OF_THE_SEA\n+    amount: 1\n+nether_wart:\n+  type: shaped\n+  key: custom_netherWart\n+  shape: [\"RRR\", \"RBR\", \"RRR\"]\n+  definitions:\n+    R: REDSTONE_BLOCK\n+    B: BLAZE_POWDER\n+  output:\n+    type: NETHER_WART\n+    amount: 8\n+string:\n+  type: shapeless\n+  key: custom_string\n+  items:\n+    - WHITE_WOOL\n+  output:\n+    type: STRING\n+    amount: 4\n+soul_sand:\n+  type: shaped\n+  key: custom_soulsand\n+  shape: [\"RBR\", \"BPB\", \"RBR\"]\n+  definitions:\n+    R: ROTTEN_FLESH\n+    B: BONE\n+    P: BLAZE_POWDER\n+  output:\n+    type: SOUL_SAND\n+    amount: 12\n+black_dye_1:\n+  type: shapeless\n+  key: custom_blackdye_1\n+  items:\n+    - COAL\n+  output:\n+    type: INK_SAC\n+    amount: 1\n+black_dye_2:\n+  type: shapeless\n+  key: custom_blackdye_2\n+  items:\n+    - CHARCOAL\n+  output:\n+    type: INK_SAC\n+    amount: 1\n+wet_sponge:\n+  type: shaped\n+  key: custom_sponge\n+  shape: [\"WWW\",\"WBW\",\"WWW\"]\n+  definitions:\n+    W: YELLOW_WOOL\n+    B: WATER_BUCKET\n+  output:\n+    type: WET_SPONGE\n+    amount: 8\n+blackstone:\n+  type: shaped\n+  key: custom_blackstone\n+  shape: [\"SSS\",\"SDS\",\"SSS\"]\n+  definitions:\n+    S: STONE\n+    D: BLACK_DYE\n+  output:\n+    type: BLACKSTONE\n+    amount: 8\n+chiseled_polished_blackstone:\n+  type: shaped\n+  key: custom_chiseled_blackstone\n+  shape: [\"BB\",\"BB\"]\n+  definitions:\n+    B: POLISHED_BLACKSTONE_BRICKS\n+  output:\n+    type: CHISELED_POLISHED_BLACKSTONE\n+    amount: 4\n+netherrack:\n+  type: shaped\n+  key: custom_netherrack\n+  shape: [\"SSS\",\"SDS\",\"SSS\"]\n+  definitions:\n+    S: STONE\n+    D: RED_DYE\n+  output:\n+    type: NETHERRACK\n+    amount: 8\n+crimson_nylium:\n+  type: shapeless\n+  key: custom_crimson_nylium\n+  items:\n+    - MYCELIUM\n+    - NETHER_WART\n+    - NETHERRACK\n+  output:\n+    type: CRIMSON_NYLIUM\n+    amount: 1\n+warped_nylium:\n+  type: shapeless\n+  key: custom_warped_nylium\n+  items:\n+    - MYCELIUM\n+    - NETHER_WART\n+    - SOUL_SAND\n+  output:\n+    type: WARPED_NYLIUM\n+    amount: 1\n+# CARPETS\n+black_carpet:\n+  type: shapeless\n+  key: custom_black_carpet\n+  items:\n+    - BLACK_CARPET\n+  output:\n+    type: BLACK_CARPET\n+    amount: 3\n+blue_carpet:\n+  type: shapeless\n+  key: custom_blue_carpet\n+  items:\n+    - BLUE_CARPET\n+  output:\n+    type: BLUE_CARPET\n+    amount: 3\n+brown_carpet:\n+  type: shapeless\n+  key: custom_brown_carpet\n+  items:\n+    - BROWN_CARPET\n+  output:\n+    type: BROWN_CARPET\n+    amount: 3\n+cyan_carpet:\n+  type: shapeless\n+  key: custom_cyan_carpet\n+  items:\n+    - CYAN_CARPET\n+  output:\n+    type: CYAN_CARPET\n+    amount: 3\n+gray_carpet:\n+  type: shapeless\n+  key: custom_gray_carpet\n+  items:\n+    - GRAY_CARPET\n+  output:\n+    type: GRAY_CARPET\n+    amount: 3\n+green_carpet:\n+  type: shapeless\n+  key: custom_green_carpet\n+  items:\n+    - GREEN_CARPET\n+  output:\n+    type: GREEN_CARPET\n+    amount: 3\n+light_blue_carpet:\n+  type: shapeless\n+  key: custom_light_blue_carpet\n+  items:\n+    - LIGHT_BLUE_CARPET\n+  output:\n+    type: LIGHT_BLUE_CARPET\n+    amount: 3\n+light_gray_carpet:\n+  type: shapeless\n+  key: custom_light_gray_carpet\n+  items:\n+    - LIGHT_GRAY_CARPET\n+  output:\n+    type: LIGHT_GRAY_CARPET\n+    amount: 3\n+lime_carpet:\n+  type: shapeless\n+  key: custom_lime_carpet\n+  items:\n+    - LIME_CARPET\n+  output:\n+    type: LIME_CARPET\n+    amount: 3\n+magenta_carpet:\n+  type: shapeless\n+  key: custom_magenta_carpet\n+  items:\n+    - MAGENTA_CARPET\n+  output:\n+    type: MAGENTA_CARPET\n+    amount: 3\n+pink_carpet:\n+  type: shapeless\n+  key: custom_pink_carpet\n+  items:\n+    - PINK_CARPET\n+  output:\n+    type: PINK_CARPET\n+    amount: 3\n+purple_carpet:\n+  type: shapeless\n+  key: custom_purple_carpet\n+  items:\n+    - PURPLE_CARPET\n+  output:\n+    type: PURPLE_CARPET\n+    amount: 3\n+red_carpet:\n+  type: shapeless\n+  key: custom_red_carpet\n+  items:\n+    - RED_CARPET\n+  output:\n+    type: RED_CARPET\n+    amount: 3\n+white_carpet:\n+  type: shapeless\n+  key: custom_white_carpet\n+  items:\n+    - WHITE_CARPET\n+  output:\n+    type: WHITE_CARPET\n+    amount: 3\n+yellow_carpet:\n+  type: shapeless\n+  key: custom_yellow_carpet\n+  items:\n+    - YELLOW_CARPET\n+  output:\n+    type: YELLOW_CARPET\n+    amount: 3\n+orange_carpet:\n+  type: shapeless\n+  key: custom_orange_carpet\n+  items:\n+    - ORANGE_CARPET\n+  output:\n+    type: ORANGE_CARPET\n+    amount: 3\n+blaze_rod_furnace:\n+  type: furnace\n+  key: custom_blazerods_furnace\n+  item: IRON_BARS\n+  experience: 0\n+  time: 200\n+  output:\n+    type: BLAZE_ROD\n+    amount: 1\n+blaze_rod_blast_furnace:\n+  type: blast\n+  key: custom_blazerods\n+  item: IRON_BARS\n+  experience: 0\n+  time: 60\n+  output:\n+    type: BLAZE_ROD\n+    amount: 1\n\\ No newline at end of file"
  },
  {
    "sha": "416d56ece658d37d631d94244f09c7b6d002c924",
    "filename": "plugin.yml",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/EarthPol/EP-Recipe/blob/50401b3e5b40409c2c261744f62be3bebe8e1fb4/plugin.yml",
    "raw_url": "https://github.com/EarthPol/EP-Recipe/raw/50401b3e5b40409c2c261744f62be3bebe8e1fb4/plugin.yml",
    "contents_url": "https://api.github.com/repos/EarthPol/EP-Recipe/contents/plugin.yml?ref=50401b3e5b40409c2c261744f62be3bebe8e1fb4",
    "patch": "@@ -1,8 +1,8 @@\n name: EP-Recipe\n-version: \"1.0.1\"\n+version: \"1.1.0\"\n description: \"This plugin handles and operates custom crafting recipes for EPMC\"\n authors: [\"0xBit\"]\n-website: https://earthpol.github.com\n+website: https://earthpol.github.io\n main: com.earthpol.recipes.Main\n api: [\"1.16.4\"]\n api-version: 1.16\n\\ No newline at end of file"
  },
  {
    "sha": "a0a3010117b4249e994ecc5db9fbb796ea45bf13",
    "filename": "src/com/earthpol/recipes/CraftingNerfs.java",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/EarthPol/EP-Recipe/blob/50401b3e5b40409c2c261744f62be3bebe8e1fb4/src/com/earthpol/recipes/CraftingNerfs.java",
    "raw_url": "https://github.com/EarthPol/EP-Recipe/raw/50401b3e5b40409c2c261744f62be3bebe8e1fb4/src/com/earthpol/recipes/CraftingNerfs.java",
    "contents_url": "https://api.github.com/repos/EarthPol/EP-Recipe/contents/src/com/earthpol/recipes/CraftingNerfs.java?ref=50401b3e5b40409c2c261744f62be3bebe8e1fb4",
    "patch": "@@ -1,9 +1,6 @@\n package com.earthpol.recipes;\n \n-import org.bukkit.Material;\n-import org.bukkit.event.EventHandler;\n import org.bukkit.event.Listener;\n-import org.bukkit.event.inventory.BrewEvent;\n \n public class CraftingNerfs implements Listener {\n \t"
  },
  {
    "sha": "8b2543f8ca04bcc52f5e02ecd8907f57d75bdd05",
    "filename": "src/com/earthpol/recipes/Main.java",
    "status": "modified",
    "additions": 61,
    "deletions": 271,
    "changes": 332,
    "blob_url": "https://github.com/EarthPol/EP-Recipe/blob/50401b3e5b40409c2c261744f62be3bebe8e1fb4/src/com/earthpol/recipes/Main.java",
    "raw_url": "https://github.com/EarthPol/EP-Recipe/raw/50401b3e5b40409c2c261744f62be3bebe8e1fb4/src/com/earthpol/recipes/Main.java",
    "contents_url": "https://api.github.com/repos/EarthPol/EP-Recipe/contents/src/com/earthpol/recipes/Main.java?ref=50401b3e5b40409c2c261744f62be3bebe8e1fb4",
    "patch": "@@ -1,22 +1,20 @@\n package com.earthpol.recipes;\n \n-import java.util.logging.Logger;\n-\n import org.bukkit.Bukkit;\n import org.bukkit.Material;\n import org.bukkit.NamespacedKey;\n-import org.bukkit.inventory.BlastingRecipe;\n-import org.bukkit.inventory.FurnaceRecipe;\n-import org.bukkit.inventory.ItemStack;\n-import org.bukkit.inventory.ShapedRecipe;\n-import org.bukkit.inventory.ShapelessRecipe;\n+import org.bukkit.inventory.*;\n import org.bukkit.plugin.java.JavaPlugin;\n \n+import java.util.logging.Logger;\n+\n public class Main extends JavaPlugin {\n \tpublic static Main instance;\n \tpublic static Logger log = Bukkit.getLogger();\n-\t\n+\n \tpublic void onEnable() {\n+\t\tsaveDefaultConfig();\n+\n \t\tlog.info(\"====== EPMC RECIPE ======\");\n \t\tlog.info(\"= EarthPol Recipe Plugin\");\n \t\tlog.info(\"= Version: \" + this.getDescription().getVersion());\n@@ -25,278 +23,70 @@ public void onEnable() {\n \t\tlog.info(\"= Support: https://discord.gg/DvtZzztAfF\");\n \t\tlog.info(\"=========================\");\n \t\tlog.info(\"= Loading Custom Recipes\");\n+\t\tlong before = System.currentTimeMillis();\n \t\trecipes();\n-\t\tlog.info(\"= Loaded Custom Recipes\");\n+\t\tlog.info(\"= Loaded Custom Recipes (took \"+ (System.currentTimeMillis()-before) +\"ms)\");\n \t\t//log.info(\"= Registering Crafting Listener\");\n \t\t//getServer().getPluginManager().registerEvents(new CraftingNerfs(), this);\n \t\tlog.info(\"=========================\");\n \t}\n \t\n \t@SuppressWarnings(\"deprecation\")\n \tpublic void recipes() {\n-\t\t\n-\t\t// Custom Bell Recipe\n-\t\tfinal ShapedRecipe bell = new ShapedRecipe(new NamespacedKey(this, \"custom_bell\"), new ItemStack(Material.BELL, 1));\n-\t\tbell.shape(\"SSS\", \" G \", \"GNG\");\n-\t\tbell.setIngredient('S', Material.STICK);\n-\t\tbell.setIngredient('G', Material.GOLD_INGOT);\n-\t\tbell.setIngredient('N', Material.GOLD_NUGGET);\n-\t\tBukkit.addRecipe(bell);\n-\t\t\n-\t\t// Custom Web Recipe\n-\t\tfinal ShapedRecipe web = new ShapedRecipe(new NamespacedKey(this, \"custom_web\"), new ItemStack(Material.COBWEB, 5));\n-\t\tweb.shape(\"S S\", \" S \", \"S S\");\n-\t\tweb.setIngredient('S', Material.STRING);\n-\t\tBukkit.addRecipe(web);\n-\t\t\n-\t\t//Custom Quartz Item Recipe\n-\t\tfinal ShapelessRecipe quartz = new ShapelessRecipe(new NamespacedKey(this, \"custom_nether_quartz\"), new ItemStack(Material.QUARTZ, 4));\n-\t\tquartz.addIngredient(1, Material.QUARTZ_BLOCK);\n-\t\tBukkit.addRecipe(quartz);\n-\t\t\n-\t\t//Custom Packed Ice\n-\t\tfinal ShapedRecipe packedIce = new ShapedRecipe(new NamespacedKey(this, \"custom_packedice\"), new ItemStack(Material.PACKED_ICE, 4));\n-        packedIce.shape(\"III\", \"III\", \"III\");\n-        packedIce.setIngredient('I', Material.ICE);\n-        Bukkit.addRecipe(packedIce);\n-\t\t\n-        //Custom Blue Ice\n-        final ShapedRecipe blueice = new ShapedRecipe(new NamespacedKey(this, \"custom_blueice\"), new ItemStack(Material.BLUE_ICE, 4));\n-        blueice.shape(\"III\", \"III\", \"III\");\n-        blueice.setIngredient('I', Material.PACKED_ICE);\n-        Bukkit.addRecipe(blueice);\n-\t\t\n-        //Custom Slimeball\n-        final ShapelessRecipe slimeball = new ShapelessRecipe(new NamespacedKey(this, \"custom_slimeball\"), new ItemStack(Material.SLIME_BALL, 1));\n-        slimeball.addIngredient(1, Material.GREEN_DYE);\n-        slimeball.addIngredient(1, Material.SNOWBALL);\n-        Bukkit.addRecipe(slimeball);\n-        \n-        //Custom Prismarine Shard\n-        final ShapelessRecipe prismarineshard = new ShapelessRecipe(new NamespacedKey(this, \"custom_prismarineshard\"), new ItemStack(Material.PRISMARINE_SHARD, 3));\n-        prismarineshard.addIngredient(1, Material.SAND);\n-        prismarineshard.addIngredient(1, Material.DIRT);\n-        prismarineshard.addIngredient(1, Material.LAPIS_LAZULI);\n-        Bukkit.addRecipe(prismarineshard);\n-        \n-        //Custom Prismarine Crystals\n-        final ShapelessRecipe prismarinecrystals = new ShapelessRecipe(new NamespacedKey(this, \"custom_prismarinecrystals\"), new ItemStack(Material.PRISMARINE_CRYSTALS, 3));\n-        prismarinecrystals.addIngredient(1, Material.PRISMARINE_SHARD);\n-        prismarinecrystals.addIngredient(1, Material.GLOWSTONE_DUST);\n-        Bukkit.addRecipe(prismarinecrystals);\n-        \n-        //Custom Lily Pad - Acacia Leaves\n-        final ShapedRecipe lilypad = new ShapedRecipe(new NamespacedKey(this, \"custom_lilypad1\"), new ItemStack(Material.LILY_PAD, 3));\n-        lilypad.shape(\"   \", \"   \", \"LLL\");\n-        lilypad.setIngredient('L', Material.ACACIA_LEAVES);\n-        Bukkit.addRecipe(lilypad);\n-        \n-        //Custom Lily Pad - Birch Leaves\n-        final ShapedRecipe lilypad2 = new ShapedRecipe(new NamespacedKey(this, \"custom_lilypad2\"), new ItemStack(Material.LILY_PAD, 3));\n-        lilypad2.shape(\"   \", \"   \", \"LLL\");\n-        lilypad2.setIngredient('L', Material.BIRCH_LEAVES);\n-        Bukkit.addRecipe(lilypad2);\n \n-        //Custom Lily Pad - Dark Oak Leaves\n-        final ShapedRecipe lilypad3 = new ShapedRecipe(new NamespacedKey(this, \"custom_lilypad3\"), new ItemStack(Material.LILY_PAD, 3));\n-        lilypad3.shape(\"   \", \"   \", \"LLL\");\n-        lilypad3.setIngredient('L', Material.DARK_OAK_LEAVES);\n-        Bukkit.addRecipe(lilypad3);\n-        \n-        //Custom Lily Pad - Jungle Leaves\n-        final ShapedRecipe lilypad4 = new ShapedRecipe(new NamespacedKey(this, \"custom_lilypad4\"), new ItemStack(Material.LILY_PAD, 3));\n-        lilypad4.shape(\"   \", \"   \", \"LLL\");\n-        lilypad4.setIngredient('L', Material.JUNGLE_LEAVES);\n-        Bukkit.addRecipe(lilypad4);\n-        \n-        //Custom Lily Pad - Oak Leaves\n-        final ShapedRecipe lilypad5 = new ShapedRecipe(new NamespacedKey(this, \"custom_lilypad5\"), new ItemStack(Material.LILY_PAD, 3));\n-        lilypad5.shape(\"   \", \"   \", \"LLL\");\n-        lilypad5.setIngredient('L', Material.OAK_LEAVES);\n-        Bukkit.addRecipe(lilypad5);\n-        \n-        //Custom Lily Pad - Spruce Leaves\n-        final ShapedRecipe lilypad6 = new ShapedRecipe(new NamespacedKey(this, \"custom_lilypad6\"), new ItemStack(Material.LILY_PAD, 3));\n-        lilypad6.shape(\"   \", \"   \", \"LLL\");\n-        lilypad6.setIngredient('L', Material.SPRUCE_LEAVES);\n-        Bukkit.addRecipe(lilypad6);\n-        \n-        //Custom Glowstone Dust\n-        final ShapedRecipe glowstoneDust = new ShapedRecipe(new NamespacedKey(this, \"custom_glowstoneDust\"), new ItemStack(Material.GLOWSTONE_DUST, 8));\n-        glowstoneDust.shape(\"RRR\", \"RBR\", \"RRR\");\n-        glowstoneDust.setIngredient('R', Material.REDSTONE);\n-        glowstoneDust.setIngredient('B', Material.BLAZE_POWDER);\n-        Bukkit.addRecipe(glowstoneDust);\n-        \n-        //Custom Heart of Sea\n-        final ShapedRecipe HeartOfSea = new ShapedRecipe(new NamespacedKey(this, \"custom_HeartOfSea\"), new ItemStack(Material.HEART_OF_THE_SEA, 1));\n-        HeartOfSea.shape(\"DPQ\", \"PSP\", \"QPD\");\n-        HeartOfSea.setIngredient('D', Material.DIAMOND_BLOCK);\n-        HeartOfSea.setIngredient('Q', Material.QUARTZ_BLOCK);\n-        HeartOfSea.setIngredient('P', Material.PRISMARINE);\n-        HeartOfSea.setIngredient('S', Material.SLIME_BALL);\n-        Bukkit.addRecipe(HeartOfSea);\n-        \n-        //Custom Nether Wart\n-        final ShapedRecipe netherWart = new ShapedRecipe(new NamespacedKey(this, \"custom_netherWart\"), new ItemStack(Material.NETHER_WART, 8));\n-        netherWart.shape(\"RRR\", \"RBR\", \"RRR\");\n-        netherWart.setIngredient('R', Material.REDSTONE_BLOCK);\n-        netherWart.setIngredient('B', Material.BLAZE_POWDER);\n-        Bukkit.addRecipe(netherWart);\n-        \n-        //Custom String\n-        final ShapelessRecipe string = new ShapelessRecipe(new NamespacedKey(this, \"custom_string\"), new ItemStack(Material.STRING, 4));\n-        string.addIngredient(1, Material.WHITE_WOOL);\n-        Bukkit.addRecipe(string);\n-        \n-        //Custom Soulsand\n-        final ShapedRecipe soulsand = new ShapedRecipe(new NamespacedKey(this, \"custom_soulsand\"), new ItemStack(Material.SOUL_SAND, 12));\n-        soulsand.shape(\"RBR\",\"BPB\",\"RBR\");\n-        soulsand.setIngredient('R', Material.ROTTEN_FLESH);\n-        soulsand.setIngredient('B', Material.BONE);\n-        soulsand.setIngredient('P', Material.BLAZE_POWDER);\n-        Bukkit.addRecipe(soulsand);\n-        \n-        //Custom Black Dye\n-        final ShapelessRecipe blackdye1 = new ShapelessRecipe(new NamespacedKey(this, \"custom_blackdye_1\"), new ItemStack(Material.INK_SAC, 1));\n-        blackdye1.addIngredient(1, Material.COAL);\n-        Bukkit.addRecipe(blackdye1);\n-        \n-        //Custom Black Dye #2\n-        final ShapelessRecipe blackdye2 = new ShapelessRecipe(new NamespacedKey(this, \"custom_blackdye_2\"), new ItemStack(Material.INK_SAC, 1));\n-        blackdye2.addIngredient(1, Material.CHARCOAL);\n-        Bukkit.addRecipe(blackdye2);\n-        \n-        //Custom Sponge\n-        final ShapedRecipe sponge = new ShapedRecipe(new NamespacedKey(this, \"custom_sponge\"), new ItemStack(Material.WET_SPONGE, 8));\n-        sponge.shape(\"WWW\",\"WBW\",\"WWW\");\n-        sponge.setIngredient('W', Material.YELLOW_WOOL);\n-        sponge.setIngredient('B', Material.WATER_BUCKET);\n-        Bukkit.addRecipe(sponge);\n-        \n-        //Custom Blackstone\n-        final ShapedRecipe blackstone = new ShapedRecipe(new NamespacedKey(this, \"custom_blackstone\"), new ItemStack(Material.BLACKSTONE, 8));\n-        blackstone.shape(\"SSS\",\"SDS\",\"SSS\");\n-        blackstone.setIngredient('S', Material.STONE);\n-        blackstone.setIngredient('D', Material.BLACK_DYE);\n-        Bukkit.addRecipe(blackstone);\n-        \n-        \n-        //Custom Chiseled Polished Blackstone\n-        final ShapedRecipe chiseledBlackstone = new ShapedRecipe(new NamespacedKey(this, \"custom_chiseled_blackstone\"), new ItemStack(Material.CHISELED_POLISHED_BLACKSTONE, 4));\n-        chiseledBlackstone.shape(\" BB\", \" BB\", \"   \");\n-        chiseledBlackstone.setIngredient('B', Material.POLISHED_BLACKSTONE_BRICKS);\n-        Bukkit.addRecipe(chiseledBlackstone);\n-        \n-        //Netherrack\n-        final ShapedRecipe netherrack = new ShapedRecipe(new NamespacedKey(this, \"custom_netherrack\"), new ItemStack(Material.NETHERRACK, 8));\n-        netherrack.shape(\"SSS\", \"SDS\", \"SSS\");\n-        netherrack.setIngredient('S', Material.STONE);\n-        netherrack.setIngredient('D', Material.RED_DYE);\n-        Bukkit.addRecipe(netherrack);\n-        \n-        //Crimson Nylium\n-        final ShapelessRecipe crimsonNylium = new ShapelessRecipe(new NamespacedKey(this, \"custom_crimson_nylium\"), new ItemStack(Material.CRIMSON_NYLIUM, 1));\n-        crimsonNylium.addIngredient(1, Material.MYCELIUM);\n-        crimsonNylium.addIngredient(1, Material.NETHER_WART);\n-        crimsonNylium.addIngredient(1, Material.NETHERRACK);\n-        Bukkit.addRecipe(crimsonNylium);\n-        \n-        //Warped Nylium\n-        final ShapelessRecipe warpedNylium = new ShapelessRecipe(new NamespacedKey(this, \"custom_warped_nylium\"), new ItemStack(Material.WARPED_NYLIUM, 1));\n-        warpedNylium.addIngredient(1, Material.MYCELIUM);\n-        warpedNylium.addIngredient(1, Material.NETHER_WART);\n-        warpedNylium.addIngredient(1, Material.SOUL_SAND);\n-        Bukkit.addRecipe(warpedNylium);\n-        \n-        \n-        /*=================\n-         * CARPET COLORS\n-         ==================*/\n-        \n-        // BLACK CARPET\n-        final ShapelessRecipe blackCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_black_carpet\"), new ItemStack(Material.BLACK_CARPET, 3));\n-        blackCarpet.addIngredient(1, Material.BLACK_CARPET);\n-        Bukkit.addRecipe(blackCarpet);\n-        \n-        //Blue Carpet\n-        final ShapelessRecipe blueCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_blue_carpet\"), new ItemStack(Material.BLUE_CARPET, 3));\n-        blueCarpet.addIngredient(1, Material.BLUE_CARPET);\n-        Bukkit.addRecipe(blueCarpet);\n-        \n-        //Brown Carpet\n-        final ShapelessRecipe brownCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_brown_carpet\"), new ItemStack(Material.BROWN_CARPET, 3));\n-        brownCarpet.addIngredient(1, Material.BROWN_CARPET);\n-        Bukkit.addRecipe(brownCarpet);\n-        \n-        //Cyan Carpet\n-        final ShapelessRecipe cyanCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_cyan_carpet\"), new ItemStack(Material.CYAN_CARPET, 3));\n-        cyanCarpet.addIngredient(1, Material.CYAN_CARPET);\n-        Bukkit.addRecipe(cyanCarpet);\n-        \n-        //Gray carpet\n-        final ShapelessRecipe grayCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_gray_carpet\"), new ItemStack(Material.GRAY_CARPET, 3));\n-        grayCarpet.addIngredient(1, Material.GRAY_CARPET);\n-        Bukkit.addRecipe(grayCarpet);\n-        \n-        //Green Carpet\n-        final ShapelessRecipe greenCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_green_carpet\"), new ItemStack(Material.GREEN_CARPET, 3));\n-        greenCarpet.addIngredient(1, Material.GREEN_CARPET);\n-        Bukkit.addRecipe(greenCarpet);\n-        \n-        //lightblue carpet\n-        final ShapelessRecipe lightBlueCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_light_blue_carpet\"), new ItemStack(Material.LIGHT_BLUE_CARPET, 3));\n-        lightBlueCarpet.addIngredient(1, Material.LIGHT_BLUE_CARPET);\n-        Bukkit.addRecipe(lightBlueCarpet);\n-        \n-        //LIGHT GRAY carpet\n-        final ShapelessRecipe lightGrayCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_light_gray_carpet\"), new ItemStack(Material.LIGHT_GRAY_CARPET, 3));\n-        lightGrayCarpet.addIngredient(1, Material.LIGHT_GRAY_CARPET);\n-        Bukkit.addRecipe(lightGrayCarpet);\n-        \n-        //LIME carpet\n-        final ShapelessRecipe limeCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_lime_carpet\"), new ItemStack(Material.LIME_CARPET, 3));\n-        limeCarpet.addIngredient(1, Material.LIME_CARPET);\n-        Bukkit.addRecipe(limeCarpet);\n-        \n-        //Magenta Carpet\n-        final ShapelessRecipe magentaCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_magenta_carpet\"), new ItemStack(Material.MAGENTA_CARPET, 3));\n-        magentaCarpet.addIngredient(1, Material.MAGENTA_CARPET);\n-        Bukkit.addRecipe(magentaCarpet);\n-        \n-        //Pink Carpet\n-        final ShapelessRecipe pinkCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_pink_carpet\"), new ItemStack(Material.PINK_CARPET, 3));\n-        pinkCarpet.addIngredient(1, Material.PINK_CARPET);\n-        Bukkit.addRecipe(pinkCarpet);\n-        \n-        //Purple Carpet\n-        final ShapelessRecipe purpleCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_purple_carpet\"), new ItemStack(Material.PURPLE_CARPET, 3));\n-        purpleCarpet.addIngredient(1, Material.PURPLE_CARPET);\n-        Bukkit.addRecipe(purpleCarpet);\n-        \n-        //Red Carpet\n-        final ShapelessRecipe redCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_red_carpet\"), new ItemStack(Material.RED_CARPET, 3));\n-        redCarpet.addIngredient(1, Material.RED_CARPET);\n-        Bukkit.addRecipe(redCarpet);\n-        \n-        //White Carpet\n-        final ShapelessRecipe whiteCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_white_carpet\"), new ItemStack(Material.WHITE_CARPET, 3));\n-        whiteCarpet.addIngredient(1, Material.WHITE_CARPET);\n-        Bukkit.addRecipe(whiteCarpet);\n-        \n-        //Yellow Carpet\n-        final ShapelessRecipe yellowCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_yellow_carpet\"), new ItemStack(Material.YELLOW_CARPET, 3));\n-        yellowCarpet.addIngredient(1, Material.YELLOW_CARPET);\n-        Bukkit.addRecipe(yellowCarpet);\n-        \n-        //Orange Carpet\n-        final ShapelessRecipe orangeCarpet = new ShapelessRecipe(new NamespacedKey(this, \"custom_orange_carpet\"), new ItemStack(Material.ORANGE_CARPET, 3));\n-        orangeCarpet.addIngredient(1, Material.ORANGE_CARPET);\n-        Bukkit.addRecipe(orangeCarpet);\n-        \n-        //Custom Blaze Rods\n-        this.getServer().addRecipe(new FurnaceRecipe(new ItemStack(Material.BLAZE_ROD, 1), Material.IRON_BARS));\n-        this.getServer().addRecipe(new BlastingRecipe(new NamespacedKey(this,\"custom_blazerods\"), new ItemStack(Material.BLAZE_ROD, 1), Material.IRON_BARS, 0, 60));\n+\t\tfor(String key : getConfig().getKeys(false)) { // For each recipe in the config\n+\t\t\t// Output material and amount of said material\n+\t\t\tMaterial material = Material.valueOf(getConfig().getString(key+\".output.type\"));\n+\t\t\tint amount = getConfig().getInt(key+\".output.amount\");\n+\n+\t\t\t// Key of recipe\n+\t\t\tString recipe_key = getConfig().getString(key + \".key\");\n+\t\t\tassert recipe_key != null;\n+\n+\t\t\t// Shaped, Shapeless, Furnace, or Blast Furnace recipe\n+\t\t\tString type = getConfig().getString(key+\".type\");\n+\n+\t\t\tif(type.equalsIgnoreCase(\"shaped\")) {\n+\n+\t\t\t\tString[] shape = getConfig().getStringList(key + \".shape\").toArray(new String[0]);\n+\n+\t\t\t\t// Create the recipe\n+\t\t\t\tfinal ShapedRecipe recipe = new ShapedRecipe(new NamespacedKey(this, recipe_key), new ItemStack(material, amount));\n+\t\t\t\trecipe.shape(shape);\n+\t\t\t\tfor (String d_keys : getConfig().getConfigurationSection(key + \".definitions\").getKeys(false)) {  // Assign characters to material items\n+\t\t\t\t\tMaterial mat = Material.valueOf(getConfig().getString(key + \".definitions.\" + d_keys));\n+\t\t\t\t\trecipe.setIngredient(d_keys.charAt(0), mat);\n+\t\t\t\t}\n+\t\t\t\tBukkit.addRecipe(recipe);\n+\t\t\t}\n+\n+\t\t\telse if (type.equalsIgnoreCase(\"shapeless\")) {\n+\t\t\t\tfinal ShapelessRecipe recipe = new ShapelessRecipe(new NamespacedKey(this, recipe_key), new ItemStack(material, amount));\n+\t\t\t\tfor (String item : getConfig().getStringList(key + \".items\")) { // Assign characters to material items\n+\t\t\t\t\tMaterial mat = Material.valueOf(item);\n+\t\t\t\t\trecipe.addIngredient(mat);\n+\t\t\t\t}\n+\t\t\t\tBukkit.addRecipe(recipe);\n+\t\t\t}\n+\n+\t\t\telse if (type.equalsIgnoreCase(\"furnace\")) {\n+\t\t\t\t// Get furnace specific data such as input item for smelting, experience gained, time to cook\n+\t\t\t\tMaterial input = Material.valueOf(getConfig().getString(key+\".item\"));\n+\t\t\t\tint experience = getConfig().getInt(key+\".experience\");\n+\t\t\t\tint time = getConfig().getInt(key+\".time\");\n+\t\t\t\tthis.getServer().addRecipe(new FurnaceRecipe(new NamespacedKey(this,recipe_key), new ItemStack(material, amount), input, experience, time));\n+\t\t\t}\n+\n+\t\t\telse if (type.equalsIgnoreCase(\"blast\")) {\n+\t\t\t\t// Get blast furnace specific data such as input item for smelting, experience gained, time to cook\n+\t\t\t\tMaterial input = Material.valueOf(getConfig().getString(key+\".item\"));\n+\t\t\t\tint experience = getConfig().getInt(key+\".experience\");\n+\t\t\t\tint time = getConfig().getInt(key+\".time\");\n+\t\t\t\tthis.getServer().addRecipe(new BlastingRecipe(new NamespacedKey(this,recipe_key), new ItemStack(material, amount), input, experience, time));\n+\t\t\t}\n+\n+\t\t}\n+\n \t}\n \t\n \tpublic void onDisable() {"
  }
]
