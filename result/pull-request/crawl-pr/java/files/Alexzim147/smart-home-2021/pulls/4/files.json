[
  {
    "sha": "9fcf3d32b02438ac1e4be5188b65304ce54c3284",
    "filename": "smart-home-1.json",
    "status": "renamed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/smart-home-1.json",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/smart-home-1.json",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/smart-home-1.json?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "previous_filename": "smart-home-1.js"
  },
  {
    "sha": "b06488acef792d862f8aeb66aa8b7041a0a7f892",
    "filename": "src/main/java/ru/sbt/mipt/oop/Application.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/Application.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/Application.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/Application.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -18,7 +18,7 @@\n \n     public static void main(String... args) throws IOException {\n         // считываем состояние дома из файла\n-        Application application = new Application(new JsonSmartHomeLoader(\"smart-home-1.js\"));\n+        Application application = new Application(new JsonSmartHomeLoader(\"smart-home-1.json\"));\n         application.act();\n     }\n "
  },
  {
    "sha": "aa0a8f05343ed6d312fea4127972e337a6622ad8",
    "filename": "src/main/java/ru/sbt/mipt/oop/event/Action.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/event/Action.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/event/Action.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/event/Action.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop.event;\n+\n+import ru.sbt.mipt.oop.objects.Actionable;\n+\n+public interface Action {\n+    void execute(Actionable actionable);\n+}"
  },
  {
    "sha": "2a90611e94f42a41fc655471d60657e8ec9d3da0",
    "filename": "src/main/java/ru/sbt/mipt/oop/event/DoorEventProcessing.java",
    "status": "modified",
    "additions": 7,
    "deletions": 22,
    "changes": 29,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/event/DoorEventProcessing.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/event/DoorEventProcessing.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/event/DoorEventProcessing.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -1,8 +1,6 @@\n package ru.sbt.mipt.oop.event;\n \n-import ru.sbt.mipt.oop.command.SensorCommand;\n import ru.sbt.mipt.oop.objects.Door;\n-import ru.sbt.mipt.oop.objects.Room;\n import ru.sbt.mipt.oop.objects.SmartHome;\n \n import static ru.sbt.mipt.oop.event.SensorEventType.DOOR_CLOSED;\n@@ -11,30 +9,17 @@\n public class DoorEventProcessing implements EventProcessing {\n     public void processEvent(SensorEvent event, SmartHome smartHome) {\n         if (isDoorEvent(event)) {\n-            for (Room room : smartHome.getRooms()) {\n-                for (Door door : room.getDoors()) {\n-                    if (door.getId().equals(event.getObjectId())) {\n-                        if (event.getType() == DOOR_OPEN) {\n-                            processOpeningDoorEvent(door, room);\n-                        } else {\n-                            processClosingDoorEvent(door, room);\n-                        }\n-                    }\n+            Action action = object -> {\n+                if (! (object instanceof Door)) { return; }\n+                Door asDoor = (Door) object;\n+                if (asDoor.getId().equals(event.getObjectId())) {\n+                    asDoor.setOpen(event.getType() == DOOR_OPEN);\n                 }\n-            }\n+            };\n+            smartHome.execute(action);\n         }\n     }\n \n-    private void processOpeningDoorEvent(Door door, Room room) {\n-        door.setOpen(true);\n-        System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was opened.\");\n-    }\n-\n-    private void processClosingDoorEvent(Door door, Room room) {\n-        door.setOpen(false);\n-        System.out.println(\"Door \" + door.getId() + \" in room \" + room.getName() + \" was closed.\");\n-    }\n-\n     private boolean isDoorEvent(SensorEvent event) {\n         return event.getType() == DOOR_OPEN || event.getType() == DOOR_CLOSED;\n     }"
  },
  {
    "sha": "d5605d577b1049e968e5789b54c2d46f2600c7a3",
    "filename": "src/main/java/ru/sbt/mipt/oop/event/EventProcessingCycle.java",
    "status": "modified",
    "additions": 0,
    "deletions": 3,
    "changes": 3,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/event/EventProcessingCycle.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/event/EventProcessingCycle.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/event/EventProcessingCycle.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -4,9 +4,6 @@\n \n import java.util.ArrayList;\n \n-import static ru.sbt.mipt.oop.event.SensorEventType.*;\n-import static ru.sbt.mipt.oop.event.SensorEventType.DOOR_CLOSED;\n-\n public class EventProcessingCycle {\n     private final SmartHome smartHome;\n     private final SensorEventGenerator sensorEventGenerator;"
  },
  {
    "sha": "2ea58fae7f9dfea943071b0d9f9bbe3a30c300de",
    "filename": "src/main/java/ru/sbt/mipt/oop/event/HallDoorEventProcessing.java",
    "status": "modified",
    "additions": 6,
    "deletions": 10,
    "changes": 16,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/event/HallDoorEventProcessing.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/event/HallDoorEventProcessing.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/event/HallDoorEventProcessing.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -13,16 +13,12 @@\n     public void processEvent(SensorEvent event, SmartHome smartHome) {\n         if (isDoorEvent(event) && isHallDoorEvent(smartHome, event)) {\n             if (event.getType() == DOOR_CLOSED) {\n-                processClosingDoorEvent(smartHome);\n-            }\n-        }\n-    }\n-\n-    private void processClosingDoorEvent(SmartHome smartHome) {\n-        for (Room room : smartHome.getRooms()) {\n-            for (Light light : room.getLights()) {\n-                light.setOn(false);\n-                System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned off.\");\n+                Action action = object -> {\n+                    if (! (object instanceof Light)) { return; }\n+                    Light asLight = (Light) object;\n+                    asLight.setOn(false);\n+                };\n+                smartHome.execute(action);\n             }\n         }\n     }"
  },
  {
    "sha": "8467deedb1edb271290429b6d62c2c31581a47da",
    "filename": "src/main/java/ru/sbt/mipt/oop/event/LightEventProcessing.java",
    "status": "modified",
    "additions": 8,
    "deletions": 15,
    "changes": 23,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/event/LightEventProcessing.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/event/LightEventProcessing.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/event/LightEventProcessing.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -1,29 +1,22 @@\n package ru.sbt.mipt.oop.event;\n \n import ru.sbt.mipt.oop.objects.Light;\n-import ru.sbt.mipt.oop.objects.Room;\n import ru.sbt.mipt.oop.objects.SmartHome;\n \n-import static ru.sbt.mipt.oop.event.SensorEventType.LIGHT_OFF;\n-import static ru.sbt.mipt.oop.event.SensorEventType.LIGHT_ON;\n+import static ru.sbt.mipt.oop.event.SensorEventType.*;\n \n public class LightEventProcessing implements EventProcessing {\n     @Override\n     public void processEvent(SensorEvent event, SmartHome smartHome) {\n         if (isLightEvent(event)) {\n-            for (Room room : smartHome.getRooms()) {\n-                for (Light light : room.getLights()) {\n-                    if (light.getId().equals(event.getObjectId())) {\n-                        if (event.getType() == LIGHT_ON) {\n-                            light.setOn(true);\n-                            System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned on.\");\n-                        } else {\n-                            light.setOn(false);\n-                            System.out.println(\"Light \" + light.getId() + \" in room \" + room.getName() + \" was turned off.\");\n-                        }\n-                    }\n+            Action action = object -> {\n+                if (! (object instanceof Light)) { return; }\n+                Light asLight = (Light) object;\n+                if (asLight.getId().equals(event.getObjectId())) {\n+                    asLight.setOn(event.getType() == LIGHT_ON);\n                 }\n-            }\n+            };\n+            smartHome.execute(action);\n         }\n     }\n "
  },
  {
    "sha": "1d176e7f74ebef5ffa023ded613cb7685bfc7d66",
    "filename": "src/main/java/ru/sbt/mipt/oop/objects/Actionable.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/objects/Actionable.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/objects/Actionable.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/objects/Actionable.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.sbt.mipt.oop.objects;\n+\n+import ru.sbt.mipt.oop.event.Action;\n+\n+public interface Actionable {\n+    void execute(Action action);\n+}"
  },
  {
    "sha": "02bbd205511971819d81b6c63b9f02ccbb7289a7",
    "filename": "src/main/java/ru/sbt/mipt/oop/objects/Door.java",
    "status": "modified",
    "additions": 14,
    "deletions": 1,
    "changes": 15,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/objects/Door.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/objects/Door.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/objects/Door.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -1,19 +1,32 @@\n package ru.sbt.mipt.oop.objects;\n \n-public class Door {\n+import ru.sbt.mipt.oop.event.Action;\n+\n+public class Door implements Actionable {\n     private final String id;\n     private boolean isOpen;\n \n+    public boolean isOpen() {\n+        return isOpen;\n+    }\n+\n     public Door(boolean isOpen, String id) {\n         this.isOpen = isOpen;\n         this.id = id;\n     }\n \n+    @Override\n+    public void execute(Action action) {\n+        action.execute(this);\n+    }\n+\n     public String getId() {\n         return id;\n     }\n \n     public void setOpen(boolean open) {\n         isOpen = open;\n     }\n+\n+\n }"
  },
  {
    "sha": "f6fa6e9dcfd68c51a46ffc10bd9682b23e5fdeef",
    "filename": "src/main/java/ru/sbt/mipt/oop/objects/Light.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/objects/Light.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/objects/Light.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/objects/Light.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -1,6 +1,8 @@\n package ru.sbt.mipt.oop.objects;\n \n-public class Light {\n+import ru.sbt.mipt.oop.event.Action;\n+\n+public class Light implements Actionable {\n     private boolean isOn;\n     private final String id;\n \n@@ -20,4 +22,9 @@ public String getId() {\n     public void setOn(boolean on) {\n         isOn = on;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        action.execute(this);\n+    }\n }"
  },
  {
    "sha": "c907b0f41704db01c5de9c40e19039d60af25bda",
    "filename": "src/main/java/ru/sbt/mipt/oop/objects/Room.java",
    "status": "modified",
    "additions": 9,
    "deletions": 1,
    "changes": 10,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/objects/Room.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/objects/Room.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/objects/Room.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -1,8 +1,10 @@\n package ru.sbt.mipt.oop.objects;\n \n+import ru.sbt.mipt.oop.event.Action;\n+\n import java.util.Collection;\n \n-public class Room {\n+public class Room implements Actionable {\n     private final Collection<Light> lights;\n     private final Collection<Door> doors;\n     private final String name;\n@@ -24,4 +26,10 @@ public Room(Collection<Light> lights, Collection<Door> doors, String name) {\n     public String getName() {\n         return name;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        lights.forEach(light -> light.execute(action));\n+        doors.forEach(door -> door.execute(action));\n+    }\n }"
  },
  {
    "sha": "7626c0710513dbf6b5151ba1dae1be424ee3ca48",
    "filename": "src/main/java/ru/sbt/mipt/oop/objects/SmartHome.java",
    "status": "modified",
    "additions": 8,
    "deletions": 1,
    "changes": 9,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/objects/SmartHome.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/main/java/ru/sbt/mipt/oop/objects/SmartHome.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/main/java/ru/sbt/mipt/oop/objects/SmartHome.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -1,9 +1,11 @@\n package ru.sbt.mipt.oop.objects;\n \n+import ru.sbt.mipt.oop.event.Action;\n+\n import java.util.ArrayList;\n import java.util.Collection;\n \n-public class SmartHome {\n+public class SmartHome implements Actionable {\n     private Collection<Room> rooms;\n \n     public SmartHome() {\n@@ -21,4 +23,9 @@ public void addRoom(Room room) {\n     public Collection<Room> getRooms() {\n         return rooms;\n     }\n+\n+    @Override\n+    public void execute(Action action) {\n+        rooms.forEach(room -> room.execute(action));\n+    }\n }"
  },
  {
    "sha": "21e6b72341fe8886ada6fd9b436e519f47943e74",
    "filename": "src/test/java/TestDoorEventProcessing.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/test/java/TestDoorEventProcessing.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/test/java/TestDoorEventProcessing.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/test/java/TestDoorEventProcessing.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -0,0 +1,45 @@\n+import org.junit.Before;\n+import org.junit.Test;\n+import ru.sbt.mipt.oop.event.DoorEventProcessing;\n+import ru.sbt.mipt.oop.event.SensorEvent;\n+import ru.sbt.mipt.oop.event.SensorEventType;\n+import ru.sbt.mipt.oop.loader.JsonSmartHomeLoader;\n+import ru.sbt.mipt.oop.objects.Door;\n+import ru.sbt.mipt.oop.objects.Room;\n+import ru.sbt.mipt.oop.objects.SmartHome;\n+\n+public class TestDoorEventProcessing {\n+    @Test\n+    public void closeDoorProcessingTest() {\n+        SmartHome smartHome = new JsonSmartHomeLoader(\"smart-home-1.json\").loadSmartHome();\n+        DoorEventProcessing doorEventProcessing = new DoorEventProcessing();\n+        SensorEvent sensorEvent = new SensorEvent(SensorEventType.DOOR_CLOSED, \"1\");\n+        doorEventProcessing.processEvent(sensorEvent, smartHome);\n+        Door changedDoor = null;\n+        for (Room room : smartHome.getRooms()) {\n+            for (Door door : room.getDoors()){\n+                if (door.getId().equals(\"1\")) {\n+                    changedDoor = door;\n+                }\n+            }\n+        }\n+        assert(!changedDoor.isOpen());\n+    }\n+\n+    @Test\n+    public void openDoorProcessingTest() {\n+        SmartHome smartHome = new JsonSmartHomeLoader(\"smart-home-1.json\").loadSmartHome();\n+        DoorEventProcessing doorEventProcessing = new DoorEventProcessing();\n+        SensorEvent sensorEvent = new SensorEvent(SensorEventType.DOOR_OPEN, \"1\");\n+        doorEventProcessing.processEvent(sensorEvent, smartHome);\n+        Door changedDoor = null;\n+        for (Room room : smartHome.getRooms()) {\n+            for (Door door : room.getDoors()){\n+                if (door.getId().equals(\"1\")) {\n+                    changedDoor = door;\n+                }\n+            }\n+        }\n+        assert(changedDoor.isOpen());\n+    }\n+}"
  },
  {
    "sha": "bb7e5369a987f9605af717213b0b7fc137fb2f37",
    "filename": "src/test/java/TestHallDoorEventProcessing.java",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/test/java/TestHallDoorEventProcessing.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/test/java/TestHallDoorEventProcessing.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/test/java/TestHallDoorEventProcessing.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -0,0 +1,2 @@\n+public class TestHallDoorEventProcessing {\n+}"
  },
  {
    "sha": "989a434e73cfa971ecbe2916eb6ff229d6a33bf8",
    "filename": "src/test/java/TestLightEventProcessing.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/Alexzim147/smart-home-2021/blob/4eb5cddf423b617516277227de0e9ce9896445a7/src/test/java/TestLightEventProcessing.java",
    "raw_url": "https://github.com/Alexzim147/smart-home-2021/raw/4eb5cddf423b617516277227de0e9ce9896445a7/src/test/java/TestLightEventProcessing.java",
    "contents_url": "https://api.github.com/repos/Alexzim147/smart-home-2021/contents/src/test/java/TestLightEventProcessing.java?ref=4eb5cddf423b617516277227de0e9ce9896445a7",
    "patch": "@@ -0,0 +1,46 @@\n+import org.junit.Before;\n+import org.junit.Test;\n+import ru.sbt.mipt.oop.event.LightEventProcessing;\n+import ru.sbt.mipt.oop.event.SensorEvent;\n+import ru.sbt.mipt.oop.event.SensorEventType;\n+import ru.sbt.mipt.oop.loader.JsonSmartHomeLoader;\n+import ru.sbt.mipt.oop.objects.Light;\n+import ru.sbt.mipt.oop.objects.Room;\n+import ru.sbt.mipt.oop.objects.SmartHome;\n+\n+public class TestLightEventProcessing {\n+    @Test\n+    public void onLightProcessingTest() {\n+        SmartHome smartHome = new JsonSmartHomeLoader(\"smart-home-1.json\").loadSmartHome();\n+        LightEventProcessing lightEventProcessing = new LightEventProcessing();\n+        SensorEvent sensorEvent = new SensorEvent(SensorEventType.LIGHT_ON, \"1\");\n+        lightEventProcessing.processEvent(sensorEvent, smartHome);\n+        Light changedLight = null;\n+        for (Room room : smartHome.getRooms()) {\n+            for (Light light : room.getLights()){\n+                if (light.getId().equals(\"1\")) {\n+                    changedLight = light;\n+                }\n+            }\n+        }\n+        assert(changedLight.isOn());\n+    }\n+\n+    @Test\n+    public void offLightProcessingTest() {\n+        SmartHome smartHome = new JsonSmartHomeLoader(\"smart-home-1.json\").loadSmartHome();\n+        LightEventProcessing lightEventProcessing = new LightEventProcessing();\n+        SensorEvent sensorEvent = new SensorEvent(SensorEventType.LIGHT_OFF, \"1\");\n+        lightEventProcessing.processEvent(sensorEvent, smartHome);\n+        Light changedLight = null;\n+        for (Room room : smartHome.getRooms()) {\n+            for (Light light : room.getLights()){\n+                if (light.getId().equals(\"1\")) {\n+                    changedLight = light;\n+                }\n+            }\n+        }\n+        assert(!changedLight.isOn());\n+    }\n+\n+}"
  }
]
