[
  {
    "sha": "bca1e543691aae1f51816f51c3b1d0b195c6ea9f",
    "filename": "bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/SmartgridRCPApplication.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/blob/738483fabcb0923a80a288a0742ccd7e162edc11/bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/SmartgridRCPApplication.java",
    "raw_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/raw/738483fabcb0923a80a288a0742ccd7e162edc11/bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/SmartgridRCPApplication.java",
    "contents_url": "https://api.github.com/repos/kit-sdq/Smart-Grid-ICT-Resilience-Framework/contents/bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/SmartgridRCPApplication.java?ref=738483fabcb0923a80a288a0742ccd7e162edc11",
    "patch": "@@ -55,7 +55,7 @@ private ControllerCommand getCommand(String commandString) {\n \t\t\tLOG.error(\"The entered command can't be recognized. The program will end.\");\n \t\t\treturn null;\n \t\t}\n-\t\tvar controller = (LocalController) Activator.getInstance().getController();\n+\t\tvar controller = new LocalController(); //(LocalController) Activator.getInstance().getController();\n \t\tswitch (command) {\n \t\t\tcase INIT_TOPO:\n \t\t\t\tcCommand = new InitTopoCommand(controller);"
  },
  {
    "sha": "36ef7f2ce86d88655303269cd88d5bcffa461547",
    "filename": "bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/commands/ControllerCommand.java",
    "status": "modified",
    "additions": 73,
    "deletions": 1,
    "changes": 74,
    "blob_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/blob/738483fabcb0923a80a288a0742ccd7e162edc11/bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/commands/ControllerCommand.java",
    "raw_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/raw/738483fabcb0923a80a288a0742ccd7e162edc11/bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/commands/ControllerCommand.java",
    "contents_url": "https://api.github.com/repos/kit-sdq/Smart-Grid-ICT-Resilience-Framework/contents/bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/commands/ControllerCommand.java?ref=738483fabcb0923a80a288a0742ccd7e162edc11",
    "patch": "@@ -7,15 +7,28 @@\n import java.io.ObjectOutputStream;\n \n import org.apache.log4j.Logger;\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.emf.ecore.resource.Resource;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;\n+import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;\n+import org.modelversioning.emfprofileapplication.EMFProfileApplicationPackage;\n \n import couplingToICT.SimcontrolException;\n import smartgrid.newsimcontrol.controller.LocalController;\n+import smartgridinput.ScenarioState;\n+import smartgridinput.SmartgridinputPackage;\n+import smartgridtopo.SmartGridTopology;\n+import smartgridtopo.SmartgridtopoPackage;\n \n public abstract class ControllerCommand {\n \n \tLocalController controller; \n \tprotected static final Logger LOG = Logger.getLogger(ControllerCommand.class);\n-\n+\tpublic enum ObjectType  {\n+\t\t\ttopo,\n+\t\t\tinput\n+\t};\n \t\n \tpublic ControllerCommand(LocalController controller) {\n \t\tthis.controller = controller;\n@@ -34,6 +47,15 @@ public void execute(String[] args) throws SimcontrolException, InterruptedExcept\n \t\n \tpublic Object readObjectFromFile(String filepath) {\n \t\t \n+        return readObjectFromFile(filepath, null);\n+    }\n+\t\n+\tpublic Object readObjectFromFile(String filepath, ObjectType objectType) {\n+\t\t \n+\t\tif (objectType != null) {\n+\t\t\treturn readTopoOrInput(filepath, objectType);\n+\t\t}\n+\t\t\n         try {\n  \n             FileInputStream fileIn = new FileInputStream(filepath);\n@@ -50,6 +72,17 @@ public Object readObjectFromFile(String filepath) {\n         }\n     }\n \t\n+\tprivate Object readTopoOrInput(String filepath, ObjectType objectType) {\n+\t\tswitch (objectType) {\n+\t\tcase input:\n+\t\t\treturn loadInput(filepath);\n+\t\tcase topo:\n+\t\t\treturn loadTopology(filepath);\n+\t\tdefault:\n+\t\t\treturn null;\n+\t\t}\n+\t}\n+\n \tpublic void writeObjectToFile(Object serObj, String filepath) {\n \t\t \n         try {\n@@ -64,5 +97,44 @@ public void writeObjectToFile(Object serObj, String filepath) {\n             ex.printStackTrace();\n         }\n     }\n+\t\n+\t/**\n+     * @param path\n+     *            path of the ScenarioState to be used\n+     * @return The read ScenarioState file\n+     */\n+    protected static ScenarioState loadInput(final String path) {\n+\n+        final ResourceSet resourceSet = new ResourceSetImpl();\n+\n+        resourceSet.getPackageRegistry().put(\"http://www.modelversioning.org/emfprofile/application/1.1\",\n+                EMFProfileApplicationPackage.eINSTANCE);\n+        resourceSet.getPackageRegistry().put(\"http://sdq.ipd.uka.de/smartgridinput/1.0\",\n+                SmartgridinputPackage.eINSTANCE);\n+\n+        Resource.Factory.Registry.INSTANCE.getExtensionToFactoryMap().put(\"smartgridinput\",\n+                new XMIResourceFactoryImpl());\n+        final Resource resource = resourceSet.getResource(URI.createFileURI(path), true);\n+        return (ScenarioState) resource.getContents().get(0);\n+    }\n+\n+    /**\n+     * @param path\n+     *            path of the ScenarioTopology to be used\n+     * @return The read ScenarioTopology file\n+     */\n+    protected static SmartGridTopology loadTopology(final String path) {\n+\n+        final ResourceSet resourceSet = new ResourceSetImpl();\n+\n+        resourceSet.getPackageRegistry().put(\"http://www.modelversioning.org/emfprofile/application/1.1\",\n+                EMFProfileApplicationPackage.eINSTANCE);\n+        resourceSet.getPackageRegistry().put(\"http://sdq.ipd.uka.de/smartgridtopo/1.1\", SmartgridtopoPackage.eINSTANCE);\n+\n+        Resource.Factory.Registry.INSTANCE.getExtensionToFactoryMap().put(\"smartgridtopo\",\n+                new XMIResourceFactoryImpl());\n+        final Resource resource = resourceSet.getResource(URI.createFileURI(path), true);\n+        return (SmartGridTopology) resource.getContents().get(0);\n+    }\n \n }"
  },
  {
    "sha": "f69e960f021e8be4159553e40d20bee1242e0c77",
    "filename": "bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/commands/GetModifiedPowerspecsCommand.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/blob/738483fabcb0923a80a288a0742ccd7e162edc11/bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/commands/GetModifiedPowerspecsCommand.java",
    "raw_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/raw/738483fabcb0923a80a288a0742ccd7e162edc11/bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/commands/GetModifiedPowerspecsCommand.java",
    "contents_url": "https://api.github.com/repos/kit-sdq/Smart-Grid-ICT-Resilience-Framework/contents/bundles/smartgrid.newsimcontrol.rcp/src/smartgrid/newsimcontrol/rcp/commands/GetModifiedPowerspecsCommand.java?ref=738483fabcb0923a80a288a0742ccd7e162edc11",
    "patch": "@@ -32,11 +32,10 @@ public boolean checkArguments(String[] args) {\n \t\t\treturn false;\n \t\t}\n \t\tObject obj1 = readObjectFromFile(args[0]);\n-\t\tObject obj2 = readObjectFromFile(args[1]);\n-\t\tObject obj3 = readObjectFromFile(args[2]);\n-\t\tObject obj4 = readObjectFromFile(args[3]);\n-\t\treturn (obj1 instanceof Map<?,?> && obj2 instanceof SmartGridTopoContainer \n-\t\t\t\t&& obj3 instanceof PowerSpecContainer && obj4 instanceof PowerAssigned);\n+\t\tObject obj2 = readObjectFromFile(args[3]);\n+\t\tObject obj3 = readObjectFromFile(args[4]);\n+\t\treturn (obj1 instanceof Map<?,?> && obj2 instanceof PowerSpecContainer \n+\t\t\t\t&& obj3 instanceof PowerAssigned);\n \t}\n \n \t@Override"
  },
  {
    "sha": "9411dc47641c139b20e315be9ccddbf91b1e197a",
    "filename": "bundles/smartgrid.simcontrol.test/src/smartgrid/newsimcontrol/controller/LocalController.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/blob/738483fabcb0923a80a288a0742ccd7e162edc11/bundles/smartgrid.simcontrol.test/src/smartgrid/newsimcontrol/controller/LocalController.java",
    "raw_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/raw/738483fabcb0923a80a288a0742ccd7e162edc11/bundles/smartgrid.simcontrol.test/src/smartgrid/newsimcontrol/controller/LocalController.java",
    "contents_url": "https://api.github.com/repos/kit-sdq/Smart-Grid-ICT-Resilience-Framework/contents/bundles/smartgrid.simcontrol.test/src/smartgrid/newsimcontrol/controller/LocalController.java?ref=738483fabcb0923a80a288a0742ccd7e162edc11",
    "patch": "@@ -45,7 +45,8 @@ public SmartComponentStateContainer getDysfunctSmartComponents()\n     @Override\n     public PowerSpecContainer getModifiedPowerSpec(PowerSpecContainer powerSpecs, PowerAssigned sMPowerAssigned)\n             throws SimcontrolException, InterruptedException {\n-        reactiveSimControl.run(sMPowerAssigned);\n+    \t//TODO Check PowerSpecs wegen PowerdistrictId, smartID\n+    \treactiveSimControl.run(sMPowerAssigned);\n         return reactiveSimControl.modifyPowerSpecContainer(powerSpecs);\n     }\n "
  },
  {
    "sha": "d9dd47c3d3e80b2bb4603718dc0ea645aaf2a40b",
    "filename": "smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/helpers/InitHelpers.java",
    "status": "modified",
    "additions": 153,
    "deletions": 38,
    "changes": 191,
    "blob_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/blob/738483fabcb0923a80a288a0742ccd7e162edc11/smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/helpers/InitHelpers.java",
    "raw_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/raw/738483fabcb0923a80a288a0742ccd7e162edc11/smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/helpers/InitHelpers.java",
    "contents_url": "https://api.github.com/repos/kit-sdq/Smart-Grid-ICT-Resilience-Framework/contents/smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/helpers/InitHelpers.java?ref=738483fabcb0923a80a288a0742ccd7e162edc11",
    "patch": "@@ -3,6 +3,7 @@\n import java.util.HashMap;\n import java.util.LinkedHashMap;\n import java.util.Map;\n+import java.util.Random;\n \n import couplingToICT.PowerSpec;\n import couplingToICT.PowerSpecContainer;\n@@ -13,8 +14,14 @@\n import couplingToICT.initializer.PowerSpecsModificationTypes;\n \n public class InitHelpers {\n-\tprivate InitHelpers() {\n-\t\tassert false;\n+\t\n+\tpublic static int NO_OF_POWER_DISTRICTS_POWER_INFEED = 5;\n+\tpublic static int NO_OF_POWER_DISTRICTS_POWER_DEMAND = 5;\n+\tpublic static int NO_OF_POWER_SPECS_POWER_DEMAND = 5;\n+\tpublic static int NO_OF_POWER_SPECS_POWER_INFEED = 5;\n+\tprivate static PowerSpecContainer powerSpecContainer;\n+\t\n+\tpublic InitHelpers() {\n \t}\n \n \tpublic static HashMap<InitializationMapKeys, String> createDTOMAP(String path) {\n@@ -36,61 +43,169 @@ private InitHelpers() {\n \t}\n \n \tpublic static PowerSpecContainer createPowerSpecContainer() {\n-\t\tvar powerDemanMap = new LinkedHashMap<String, Map<String, PowerSpec>>();\n-\t\tvar map = new HashMap<String, PowerSpec>();\n+\t\tvar powerDemandMap = getPowerDemandMap();\n+\t\tvar powerInfeedMap = getPowerInfeedMap();\n \t\t\n-\t\tvar powerspec = new PowerSpec(\"Smart-Meter\", \"Test\", \"1234\", \"1234\", 1, 1.0, 1.0, 1.0);\n-\t\tmap.put(\"1234\", powerspec);\n+\t\tpowerSpecContainer = new PowerSpecContainer(powerDemandMap, powerInfeedMap);\n+\t\treturn powerSpecContainer;\n+\t\n+\t}\n+\t\n+\tpublic static LinkedHashMap<String, Map<String, PowerSpec>> getPowerDemandMap(){\n+\t\tvar powerDemandMap = new LinkedHashMap<String, Map<String, PowerSpec>>();\n \t\t\n-\t\tpowerspec = new PowerSpec(\"Smart-Meter\", \"Medicine\", \"234\", \"234\", 1, 1.0, 1.0, 1.0);\n-\t\tmap.put(\"234\", powerspec);\n+\t\tString powerDistrictId;\n+\t\tHashMap<String, PowerSpec> powerDistrictPowerDemand;\n \t\t\n-\t\tpowerspec = new PowerSpec(\"Smart-Meter\", \"Important\", \"34\", \"34\", 1, 1.0, 1.0, 1.0);\n-\t\tmap.put(\"34\", powerspec);\n+\t\tfor (int i=0; i<NO_OF_POWER_DISTRICTS_POWER_DEMAND; i++) {\n+\t\t\tpowerDistrictId = createRandomPowerDistrictId();\n+\t\t\tpowerDistrictPowerDemand = createRandomPowerDistrictPowerDemand(powerDistrictId);\n+\t\t\tpowerDemandMap.put(powerDistrictId, powerDistrictPowerDemand);\n+\t\t}\n \t\t\n-\t\tpowerDemanMap.put(\"1\", map);\n-\t\treturn new PowerSpecContainer(powerDemanMap, null);\n+\t\treturn powerDemandMap;\n+\t}\n \t\n+\tpublic static LinkedHashMap<String, Map<String, PowerSpec>> getPowerInfeedMap(){\n+\t\tvar powerInfeedMap = new LinkedHashMap<String, Map<String, PowerSpec>>();\n+\t\t\n+\t\tString powerDistrictId;\n+\t\tHashMap<String, PowerSpec> powerDistrictPowerInfeed;\n+\t\t\n+\t\tfor (int i=0; i<NO_OF_POWER_DISTRICTS_POWER_INFEED; i++) {\n+\t\t\tpowerDistrictId = createRandomPowerDistrictId();\n+\t\t\tpowerDistrictPowerInfeed = createRandomPowerDistrictPowerInfeed(powerDistrictId);\n+\t\t\tpowerInfeedMap.put(powerDistrictId, powerDistrictPowerInfeed);\n+\t\t}\n+\t\t\n+\t\treturn powerInfeedMap;\n \t}\n-\n-\tpublic static LinkedHashMap<String, Map<String, SmartComponentGeoData>> createTopoMap() {\n-\t\tvar smartMeter = new LinkedHashMap<String, Map<String, SmartComponentGeoData>>();\n \t\n-\t\t// insert powerDistrict 1\n-\t\tvar district = new HashMap<String, SmartComponentGeoData>();\n+\tpublic static HashMap<String, PowerSpec> createRandomPowerDistrictPowerInfeed(String powerDistrictId){\n+\t\tvar map = new HashMap<String, PowerSpec>();\n+\t\t\n+\t\tPowerSpec powerspec;\n+\t\tString smartID;\n+\t\tfor (int i=0; i<NO_OF_POWER_SPECS_POWER_INFEED; i++) {\n+\t\t\tsmartID = createRandomSmartId();\n+\t\t\tpowerspec = createRandomPowerSpec(smartID, powerDistrictId);\n+\t\t\tmap.put(smartID, powerspec);\n+\t\t}\n+\t\t\n+\t\treturn map;\n+\t}\n \t\n-\t\tvar geodata = new SmartComponentGeoData();\n-\t\tgeodata.setPowerDistrictId(1);\n-\t\tgeodata.setCompName(\"Test\");\n-\t\tgeodata.setCompType(\"1234\");\n-\t\tdistrict.put(\"1234\", geodata);\n+\tpublic static HashMap<String, PowerSpec> createRandomPowerDistrictPowerDemand(String powerDistrictId){\n+\t\tvar map = new HashMap<String, PowerSpec>();\n+\t\t\n+\t\tPowerSpec powerspec;\n+\t\tString smartID;\n+\t\tfor (int i=0; i<NO_OF_POWER_SPECS_POWER_DEMAND; i++) {\n+\t\t\tsmartID = createRandomSmartId();\n+\t\t\tpowerspec = createRandomPowerSpec(smartID, powerDistrictId);\n+\t\t\tmap.put(smartID, powerspec);\n+\t\t}\n+\t\t\n+\t\treturn map;\n+\t}\n \t\n-\t\tgeodata = new SmartComponentGeoData();\n-\t\tgeodata.setPowerDistrictId(1);\n-\t\tgeodata.setCompName(\"Medicine\");\n-\t\tgeodata.setCompType(\"234\");\n-\t\tdistrict.put(\"234\", geodata);\n \t\n-\t\tgeodata = new SmartComponentGeoData();\n-\t\tgeodata.setPowerDistrictId(1);\n-\t\tgeodata.setCompName(\"Important\");\n-\t\tgeodata.setCompType(\"34\");\n-\t\tdistrict.put(\"34\", geodata);\n+\tpublic static PowerSpec createRandomPowerSpec(String smartID, String powerDistrictId2) {\n+\t\tRandom rand = new Random();\n+\t\tString ciType = \"SmartMeter\" + Integer.toString(rand.nextInt(10000000)); // CI, owner type\n+\t\tString ciOwner = \"Owner\" + Integer.toString(rand.nextInt(10000000)); // CI, owner name\n+\t\tString ciID = Integer.toString(rand.nextInt(10000000)); // CI, owner id\n+\t\tString ciSmartID = smartID; //Integer.toString(rand.nextInt(10000000)); // Smart meter agent-ID\n+\t\tint powerDistrictId = Integer.valueOf(powerDistrictId2); //rand.nextInt(10000000);// determined by the Smart Grid scenario\n+\t\tdouble optDemand = rand.nextInt(20); // optimal demand\n+\t\tdouble minReqDemand = rand.nextInt(20); // Minimum required power\n+\t\tdouble criticality = rand.nextInt(20); // 1, if e.g. human casualties (has to be // supplied)\n+\t\tdouble maxPowerInfeed = rand.nextInt(20);// maximum power infeed by generators or storages\n+\t\t\n+\t\tvar powerspec = new PowerSpec(ciType, ciOwner, ciID, ciSmartID, powerDistrictId, optDemand, minReqDemand, criticality);\n+\t\tpowerspec.setMaxPowerInfeed(maxPowerInfeed);\n+\t\treturn powerspec;\n+\t}\n+\t\n+\tpublic static String createRandomSmartId() {\n+\t\tRandom rand = new Random();\n+\t\treturn Integer.toString(rand.nextInt(10000000));\n+\t}\n+\t\n+\tpublic static String createRandomPowerDistrictId() {\n+\t\tRandom rand = new Random();\n+\t\treturn Integer.toString(rand.nextInt(10000000));\n+\t}\n+\n+\tpublic static LinkedHashMap<String, Map<String, SmartComponentGeoData>> createTopoMap() {\n+\t\tvar smartMeter = new LinkedHashMap<String, Map<String, SmartComponentGeoData>>();\n \t\n-\t\tsmartMeter.put(\"1\", district);\n+\t\tvar powerDemandMap = powerSpecContainer.getPowerDemand();\n+\t\tvar powerInfeedMap = powerSpecContainer.getPowerInfeed();\n+\t\t\n+\t\t\n+\t\tfor (String powerDistrictId: powerDemandMap.keySet()) {\n+\t\t\tvar district = new HashMap<String, SmartComponentGeoData>();\n+\t\t\tint count = 0;\n+\t\t\tfor(String smartId : powerDemandMap.get(powerDistrictId).keySet()) {\n+\t\t\t\tvar geodata = new SmartComponentGeoData();\n+\t\t\t\tgeodata.setCompName(\"testComp\" + powerDistrictId + count);\n+\t\t\t\tgeodata.setCompType(\"testCompType\" + powerDistrictId + count);\n+\t\t\t\tgeodata.setPowerDistrictId(Integer.valueOf(powerDistrictId));\n+\t\t\t\tdistrict.put(smartId, geodata);\n+\t\t\t\tcount ++;\n+\t\t\t}\n+\t\t\tsmartMeter.put(powerDistrictId, district);\n+\t\t}\n+\t\t\n+\t\tfor (String powerDistrictId: powerInfeedMap.keySet()) {\n+\t\t\tvar district = new HashMap<String, SmartComponentGeoData>();\n+\t\t\tint count = 0;\n+\t\t\tfor(String smartId : powerInfeedMap.get(powerDistrictId).keySet()) {\n+\t\t\t\tvar geodata = new SmartComponentGeoData();\n+\t\t\t\tgeodata.setCompName(\"testComp\" + powerDistrictId + count);\n+\t\t\t\tgeodata.setCompType(\"testCompType\" + powerDistrictId + count);\n+\t\t\t\tgeodata.setPowerDistrictId(Integer.valueOf(powerDistrictId));\n+\t\t\t\tdistrict.put(smartId, geodata);\n+\t\t\t\tcount ++;\n+\t\t\t}\n+\t\t\tsmartMeter.put(powerDistrictId, district);\n+\t\t}\n+\t\t\n \t\n \t\treturn smartMeter;\n \t}\n \n \tpublic static LinkedHashMap<String, HashMap<String, Double>> assignPower() {\n \t\tvar assignment = new LinkedHashMap<String, HashMap<String, Double>>();\n-\t\tvar districAssignment = new HashMap<String, Double>();\n-\t\tdistricAssignment.put(\"1234\", 1.0);\n-\t\tdistricAssignment.put(\"234\", 1.0);\n-\t\tdistricAssignment.put(\"34\", 1.0);\n-\t\tassignment.put(\"1\", districAssignment);\n+\t\t\n+\t\tvar powerDemandMap = powerSpecContainer.getPowerDemand();\n+\t\tvar powerInfeedMap = powerSpecContainer.getPowerInfeed();\n+\t\t\n+\t\t\n+\t\tfor (String powerDistrictId: powerDemandMap.keySet()) {\n+\t\t\tvar singleAssignment = new HashMap<String, Double>();\n+\t\t\tfor(String smartId : powerDemandMap.get(powerDistrictId).keySet()) {\n+\t\t\t\tsingleAssignment.put(smartId, generateRandomPower());\n+\t\t\t}\n+\t\t\tassignment.put(powerDistrictId, singleAssignment);\n+\t\t}\n+\t\t\n+\t\tfor (String powerDistrictId: powerInfeedMap.keySet()) {\n+\t\t\tvar singleAssignment = new HashMap<String, Double>();\n+\t\t\tfor(String smartId : powerInfeedMap.get(powerDistrictId).keySet()) {\n+\t\t\t\tsingleAssignment.put(smartId, generateRandomPower());\n+\t\t\t}\n+\t\t\tassignment.put(powerDistrictId, singleAssignment);\n+\t\t}\n+\t\t\n \t\treturn assignment;\n \t\t\n \t}\n \n+\tprivate static Double generateRandomPower() {\n+\t\tRandom rand = new Random();\n+\t\treturn rand.nextDouble() * 10;\n+\t}\n+\n }"
  },
  {
    "sha": "62e187b0fc1cc10438e8d786f048bdd8c65ed55f",
    "filename": "smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/rcp/RCPCall.java",
    "status": "modified",
    "additions": 8,
    "deletions": 6,
    "changes": 14,
    "blob_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/blob/738483fabcb0923a80a288a0742ccd7e162edc11/smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/rcp/RCPCall.java",
    "raw_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/raw/738483fabcb0923a80a288a0742ccd7e162edc11/smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/rcp/RCPCall.java",
    "contents_url": "https://api.github.com/repos/kit-sdq/Smart-Grid-ICT-Resilience-Framework/contents/smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/rcp/RCPCall.java?ref=738483fabcb0923a80a288a0742ccd7e162edc11",
    "patch": "@@ -66,12 +66,14 @@ public static void main(String[] args) throws SimcontrolException, InterruptedEx\n \t}\n \n \tpublic static void init_objects() {\n-\t\t//TODO: The correct objects must be given here\n-\t\tpowerSpec = InitHelpers.createPowerSpecContainer();\n-\t\ttopoContainer = new SmartGridTopoContainer(InitHelpers.createTopoMap(), null);\n-\t\tpowerAssigned = new PowerAssigned(InitHelpers.assignPower());\n-\t\tdtoMap = InitHelpers.createDTOMAP(path + File.separator + \"output-\" + System.currentTimeMillis());\n-\t\t\n+\t\t//inputs\n+\t\t//use an instance instead of the class to track the ids and the districts created\n+\t\tInitHelpers initHelper = new InitHelpers();\n+\t\tpowerSpec = initHelper.createPowerSpecContainer();\n+\t\ttopoContainer = new SmartGridTopoContainer(initHelper.createTopoMap(), null);\n+\t\tpowerAssigned = new PowerAssigned(initHelper.assignPower());\n+\t\tdtoMap = initHelper.createDTOMAP(path + File.separator + \"output-\" + System.currentTimeMillis());\n+\t\t\t\t\n \t}\n \t\n \tpublic static void init_values(){"
  },
  {
    "sha": "59b58a687e25905c7ef3989534f1463f6c47552b",
    "filename": "smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/rcp/TestRCPCall.java",
    "status": "modified",
    "additions": 55,
    "deletions": 32,
    "changes": 87,
    "blob_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/blob/738483fabcb0923a80a288a0742ccd7e162edc11/smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/rcp/TestRCPCall.java",
    "raw_url": "https://github.com/kit-sdq/Smart-Grid-ICT-Resilience-Framework/raw/738483fabcb0923a80a288a0742ccd7e162edc11/smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/rcp/TestRCPCall.java",
    "contents_url": "https://api.github.com/repos/kit-sdq/Smart-Grid-ICT-Resilience-Framework/contents/smartgrid.newsimcontrol.rcp.test/src/smartgrid/newsimcontrol/tests/rcp/TestRCPCall.java?ref=738483fabcb0923a80a288a0742ccd7e162edc11",
    "patch": "@@ -5,6 +5,12 @@\n import java.util.HashMap;\n \n import org.apache.log4j.BasicConfigurator;\n+import org.junit.AfterClass;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.AfterEach;\n+import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.DisplayName;\n import org.junit.jupiter.api.Test;\n@@ -22,39 +28,44 @@\n \n public class TestRCPCall {\n \t\n-\tstatic String dirProperty = System.getProperty(\"java.io.tmpdir\");\n+\tstatic String dirProperty = \"C:\\\\Users\\\\mazen\\\\TestFolder\";//System.getProperty(\"java.io.tmpdir\");\n \t\n \t//inputs\n-\tPowerSpecContainer powerSpec;\n-\tSmartGridTopoContainer topoContainer;\n-\tPowerAssigned powerAssigned;\n-\tHashMap<InitializationMapKeys, String> dtoMap;\n+\tstatic PowerSpecContainer powerSpec;\n+\tstatic SmartGridTopoContainer topoContainer;\n+\tstatic PowerAssigned powerAssigned;\n+\tstatic HashMap<InitializationMapKeys, String> dtoMap;\n \t\n \t//outputs\n-\tCollection<ICTElement> ictElements;\n-\tPowerSpecContainer powerSpecModified;\n-\tSmartComponentStateContainer smartCompStateContainer;\n+\tstatic Collection<ICTElement> ictElements;\n+\tstatic PowerSpecContainer powerSpecModified;\n+\tstatic SmartComponentStateContainer smartCompStateContainer;\n \t\n \t//inputs\n-\tString powerSpecFilepath = dirProperty + File.separator + \"powerSpec-\" + System.currentTimeMillis();\n-\tString topoContainerFilepath = dirProperty + File.separator + \"topoContainer-\" + System.currentTimeMillis();\n-\tString powerASsignedFilepath = dirProperty + File.separator + \"powerAssigned-\" + System.currentTimeMillis();\n-\tString dtoMapFilePath = dirProperty + File.separator + \"dtoMap-\" + System.currentTimeMillis();\n+\tstatic String powerSpecFilepath = dirProperty + File.separator + \"powerSpec-\" + System.currentTimeMillis();\n+\tstatic String topoContainerFilepath = dirProperty + File.separator + \"topoContainer-\" + System.currentTimeMillis();\n+\tstatic String powerASsignedFilepath = dirProperty + File.separator + \"powerAssigned-\" + System.currentTimeMillis();\n+\tstatic String dtoMapFilePath = dirProperty + File.separator + \"dtoMap-\" + System.currentTimeMillis();\n \t\n \t//outputs\n-\tString ictElementsFilePath;\n-\tString powerSpecModifiedFilePath;\n-\tString smartCompStateContainerFilePath;\n+\tstatic String ictElementsFilePath;\n+\tstatic String powerSpecModifiedFilePath;\n+\tstatic String smartCompStateContainerFilePath;\n+\tstatic String topoPath;\n+\tstatic String inputPath;\n \t\n \t//controller\n-\tString controllerFilePath;\n+\tstatic String controllerFilePath;\n \t\n \t//count\n-\tint controllerCount = 0; //For every test case a new controller\n+\tstatic int controllerCount = 0; //For every test case a new controller\n \t\n-\t@SuppressWarnings(\"unchecked\")\n-\t@BeforeEach\n-\tvoid initTestCase(){\n+\t//helper\n+\t\tprivate static String OS = System.getProperty(\"os.name\").toLowerCase();\n+\t\tprivate static String rcpPath = \"/home/majuwa/tmp/workspace-helmholtz-new/eclipse/eclipse\";\n+\t\n+\t@Before\n+\tstatic void initTestCase(){\n \t\t\n \n \t\tBasicConfigurator.resetConfiguration();\n@@ -64,10 +75,12 @@ void initTestCase(){\n \t\tcontrollerCount ++;\n \t\t\n \t\t//inputs\n-\t\tpowerSpec = InitHelpers.createPowerSpecContainer();\n-\t\ttopoContainer = new SmartGridTopoContainer(InitHelpers.createTopoMap(), null);\n-\t\tpowerAssigned = new PowerAssigned(InitHelpers.assignPower());\n-\t\tdtoMap = InitHelpers.createDTOMAP(dirProperty + File.separator + \"output-\" + System.currentTimeMillis());\n+\t\t//use an instance instead of the class to track the ids and the districts created\n+\t\tInitHelpers initHelper = new InitHelpers();\n+\t\tpowerSpec = initHelper.createPowerSpecContainer();\n+\t\ttopoContainer = new SmartGridTopoContainer(initHelper.createTopoMap(), null);\n+\t\tpowerAssigned = new PowerAssigned(initHelper.assignPower());\n+\t\tdtoMap = initHelper.createDTOMAP(dirProperty + File.separator + \"output-\" + System.currentTimeMillis());\n \t\t\n \t\tTestHelper.WriteObjectToFile(powerSpec, powerSpecFilepath);\t\n \t\tTestHelper.WriteObjectToFile(topoContainer, topoContainerFilepath);\n@@ -78,15 +91,11 @@ void initTestCase(){\n \t\tictElementsFilePath = dirProperty + File.separator + \"icts\" + controllerCount + \"-\" + System.currentTimeMillis();\n \t\tpowerSpecModifiedFilePath = dirProperty + File.separator + \"powerSpecModified\" + controllerCount + \"-\" + System.currentTimeMillis();\n \t\tsmartCompStateContainerFilePath = dirProperty + File.separator + \"smartCompStateContainer\" + controllerCount +\"-\" + System.currentTimeMillis();\n+\t\ttopoPath = dirProperty + File.separator + \"topo\" + controllerCount + \"-\" + System.currentTimeMillis();\n+\t\tinputPath = dirProperty + File.separator + \"input\" + controllerCount + \"-\" + System.currentTimeMillis();\n \t\t\n \t\t//controller\n \t\tcontrollerFilePath = dirProperty + File.separator + \"controller\" + controllerCount + \"-\" + System.currentTimeMillis();\n-\t\t\n-\n-\t\tictElements = (Collection<ICTElement>) TestHelper.ReadObjectFromFile(ictElementsFilePath);\n-\t\tpowerSpecModified = (PowerSpecContainer) TestHelper.ReadObjectFromFile(powerSpecModifiedFilePath);\n-\t\tsmartCompStateContainer = (SmartComponentStateContainer) TestHelper.ReadObjectFromFile(smartCompStateContainerFilePath);\n-\t\t\n \t}\n \t\n \t\n@@ -96,21 +105,35 @@ void initTestCase(){\n \tvoid runCommands() throws SimcontrolException, InterruptedException {\n \t\tString command;\n \t   \n+\t\tinitTestCase();\n+\t\t\n \t\t//1. Init Topo\n \t\tcommand = \"INIT_TOPO\";\n-\t\tcommand += \" \" + dtoMapFilePath + \" \" + topoContainerFilepath + \" \" + ictElementsFilePath;\n+\t\tcommand += \" \" + dtoMapFilePath + \" \" + topoContainerFilepath + \" \" + ictElementsFilePath + \" \" + topoPath + \" \" + inputPath;\n \t\trunCommand(command);\n \t\t\n \t\t//2. Get Modified PowerSpecs\n \t\tcommand = \"GET_MODIFIED_POWERSPECS\";\n-\t\tcommand += \" \" + dtoMapFilePath + \" \" + topoContainerFilepath + \" \" + powerSpecFilepath + \" \" + powerASsignedFilepath + \" \" + powerSpecModifiedFilePath + \" \" + smartCompStateContainerFilePath;\n+\t\tcommand += \" \" + dtoMapFilePath + \" \" + topoPath + \" \" + inputPath + \" \" + powerSpecFilepath + \" \" + powerASsignedFilepath + \" \" + powerSpecModifiedFilePath + \" \" + smartCompStateContainerFilePath;\n \t\trunCommand(command);\n+\t\t\n+\t\tcollectObjects();\n \t}\n \t\n \tvoid runCommand(String commandArguments) throws SimcontrolException, InterruptedException {\n \t\tSmartgridRCPApplication testApp = new SmartgridRCPApplication();\n \t\ttestApp.startTest(commandArguments);\n \t}\n \t\n+\t@AfterClass\n+\tpublic static void collectObjects() {\n \n+\t\ttry {\n+\t\tictElements = (Collection<ICTElement>) TestHelper.ReadObjectFromFile(ictElementsFilePath);\n+\t\tpowerSpecModified = (PowerSpecContainer) TestHelper.ReadObjectFromFile(powerSpecModifiedFilePath);\n+\t\tsmartCompStateContainer = (SmartComponentStateContainer) TestHelper.ReadObjectFromFile(smartCompStateContainerFilePath);\n+\t\t} catch (Exception e) {\n+\t\t\t//don't do any thing\n+\t\t}\n+\t\t}\n }"
  }
]
