[
  {
    "sha": "986646a7d47a6a6e7851cd93d158d3cb23b41aa8",
    "filename": "demo-crm/pom.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/pom.xml",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/pom.xml",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/pom.xml?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -25,6 +25,10 @@\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-data-jdbc</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-jdbc</artifactId>\n+        </dependency>\n \n         <dependency>\n             <groupId>org.springframework.boot</groupId>\n@@ -36,11 +40,6 @@\n             <artifactId>spring-boot-starter-web</artifactId>\n         </dependency>\n \n-<!--        <dependency>-->\n-<!--            <groupId>org.springframework.boot</groupId>-->\n-<!--            <artifactId>spring-boot-starter-data-jpa</artifactId>-->\n-<!--        </dependency>-->\n-\n         <dependency>\n             <groupId>org.flywaydb</groupId>\n             <artifactId>flyway-core</artifactId>"
  },
  {
    "sha": "5ee5d4674f5e6553f18cc7b80705838f2c4acc08",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ClientDAO.java",
    "status": "modified",
    "additions": 18,
    "deletions": 22,
    "changes": 40,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ClientDAO.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ClientDAO.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ClientDAO.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,22 +1,18 @@\n-//package com.elenakuropatkina.democrm.DAO;\n-//\n-//import com.elenakuropatkina.democrm.entities.Client;\n-//\n-//import java.util.HashMap;\n-//import java.util.List;\n-//import java.util.Map;\n-//\n-//public interface ClientDAO {\n-//\n-//    private final Map<Integer, Client> identityMap = new HashMap<>();\n-//\n-//    public void createClient(String name, String phone, String email, String notificationType);\n-//\n-//    public Client getOne(Long id);\n-//\n-//    public List findAll();\n-//\n-//    public void delete(Long id);\n-//\n-//    public void update(Long id, String name, String phone, String email, String notificationType);\n-//}\n+package com.elenakuropatkina.democrm.DAO;\n+\n+import com.elenakuropatkina.democrm.entities.Client;\n+\n+import java.util.List;\n+\n+public interface ClientDAO {\n+\n+    public void create(String name, String phone, String email, String notificationType);\n+\n+    public Client findOne(Long id);\n+\n+    public List<Client> findAll();\n+\n+    public void delete(Long id);\n+\n+    public void update(Long id, String name, String phone, String email, String notificationType);\n+}"
  },
  {
    "sha": "b395cc710a559369855cfc4edd0da996e10c7ae8",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ClientDAOImpl.java",
    "status": "added",
    "additions": 77,
    "deletions": 0,
    "changes": 77,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ClientDAOImpl.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ClientDAOImpl.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ClientDAOImpl.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -0,0 +1,77 @@\n+package com.elenakuropatkina.democrm.DAO;\n+\n+import com.elenakuropatkina.democrm.dataMappers.ClientMapper;\n+import com.elenakuropatkina.democrm.entities.Client;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.stereotype.Repository;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Repository\n+public class ClientDAOImpl implements ClientDAO {\n+\n+\n+    private static final Logger logger = LoggerFactory.getLogger(ClientDAOImpl.class);\n+    private final Map<Long, Client> identityMap = new HashMap<>();\n+\n+    private ClientMapper clientMapper;\n+    private JdbcTemplate jdbcTemplate;\n+\n+    @Autowired\n+    public ClientDAOImpl(ClientMapper clientMapper, JdbcTemplate jdbcTemplate) {\n+        this.clientMapper = clientMapper;\n+        this.jdbcTemplate = jdbcTemplate;\n+    }\n+\n+    @Override\n+    public void create(String name, String phone, String email, String notificationType) {\n+        String SQL = \"INSERT INTO CLIENTS (name, phone, email, notificationType) VALUES (?,?,?)\";\n+        jdbcTemplate.update(SQL, name, phone, email, notificationType);\n+        logger.info(\"Client successfully created.\\nName: \" + name + \";\\nPhone: \" +\n+                phone + \"; \\nEmail: \" + email + \";\\nNotificationType: \" + notificationType + \"\\n\");\n+    }\n+\n+    @Override\n+    public Client findOne(Long id) {\n+        Client client = identityMap.get(id);\n+        if (client == null) {\n+            String SQL = \"SELECT * FROM CLIENTS WHERE id = ?\";\n+            client = (Client) jdbcTemplate.queryForObject(SQL, new Object[]{id}, clientMapper);\n+        }\n+        if (client != null) {\n+            identityMap.put(id, client);\n+        }\n+        return client;\n+    }\n+\n+\n+    @Override\n+    public List<Client> findAll() {\n+        logger.info(\"findAll_clients\");\n+        String SQL = \"SELECT * FROM CLIENTS\";\n+        List<Client> clients = jdbcTemplate.query(SQL, clientMapper);\n+        return clients;\n+    }\n+\n+    @Override\n+    public void delete(Long id) {\n+        identityMap.remove(id);\n+        String SQL = \"DELETE FROM CLIENTS WHERE id = ?\";\n+        jdbcTemplate.update(SQL, id);\n+        logger.info(\"Client with id: \" + id + \" successfully deleted\");\n+    }\n+\n+    @Override\n+    public void update(Long id, String name, String phone, String email, String notificationType) {\n+        String SQL = \"UPDATE CLIENTS SET name = ?, phone = ?, email = ?, notification_type = ? WHERE id = ?\";\n+        jdbcTemplate.update(SQL, name, phone, email, notificationType, id);\n+        logger.info(\"Client with id: \" + id + \" successfully updated.\");\n+    }\n+}\n+\n+"
  },
  {
    "sha": "8ad132b27ab9817e33f7ca561541930b3d83ca6c",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/DealDAO.java",
    "status": "modified",
    "additions": 3,
    "deletions": 7,
    "changes": 10,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/DealDAO.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/DealDAO.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/DealDAO.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,20 +1,16 @@\n //package com.elenakuropatkina.democrm.DAO;\n //\n-//import com.elenakuropatkina.democrm.entities.Client;\n //import com.elenakuropatkina.democrm.entities.Deal;\n //\n //import java.util.Date;\n-//import java.util.HashMap;\n //import java.util.List;\n-//import java.util.Map;\n //\n-//public interface DealDAO {\n //\n-//    private final Map<Integer, Deal> identityMap = new HashMap<>();\n+//public interface DealDAO {\n //\n-//    public void createDeal(Date date, Long clientId, Long managerId, Long productId, String connectionType, String status);\n+//    public void create(Date date, Long clientId, Long managerId, Long productId, String connectionType, String status);\n //\n-//    public Deal getOne(Long id);\n+//    public Deal findOne(Long id);\n //\n //    public List findAll();\n //"
  },
  {
    "sha": "c5c4659b2648d647b6bc0ec49104e4fccbdb078f",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/DealDAOImpl.java",
    "status": "added",
    "additions": 75,
    "deletions": 0,
    "changes": 75,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/DealDAOImpl.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/DealDAOImpl.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/DealDAOImpl.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -0,0 +1,75 @@\n+//package com.elenakuropatkina.democrm.DAO;\n+//\n+//import com.elenakuropatkina.democrm.dataMappers.DealMapper;\n+//import com.elenakuropatkina.democrm.entities.Deal;\n+//import org.slf4j.Logger;\n+//import org.slf4j.LoggerFactory;\n+//import org.springframework.beans.factory.annotation.Autowired;\n+//import org.springframework.jdbc.core.JdbcTemplate;\n+//import org.springframework.stereotype.Repository;\n+//\n+//import java.util.Date;\n+//import java.util.HashMap;\n+//import java.util.List;\n+//import java.util.Map;\n+//\n+//@Repository\n+//public class DealDAOImpl implements DealDAO{\n+//\n+//        private static final Logger logger = LoggerFactory.getLogger(DealDAOImpl.class);\n+//        private final Map<Long, Deal> identityMap = new HashMap<>();\n+//\n+//        private DealMapper dealMapper;\n+//        private JdbcTemplate jdbcTemplate;\n+//\n+//        @Autowired\n+//        public DealDAOImpl(DealMapper dealMapper, JdbcTemplate jdbcTemplate) {\n+//            this.dealMapper = dealMapper;\n+//            this.jdbcTemplate = jdbcTemplate;\n+//        }\n+//\n+//        @Override\n+//        public void create(Date date, Long clientId, Long managerId, Long productId, String connectionType, String status) {\n+//            String SQL = \"INSERT INTO DEALS (date, clientId, managerId, productId, connectionType, status) VALUES (?,?,?)\";\n+//            jdbcTemplate.update(SQL, date, clientId, managerId, productId, connectionType, status);\n+//            logger.info(\"Deal successfully created\");\n+//        }\n+//\n+//        @Override\n+//        public Deal findOne(Long id) {\n+//            Deal deal = identityMap.get(id);\n+//            if (deal == null) {\n+//                String SQL = \"SELECT * FROM DEALS WHERE id = ?\";\n+//                deal = (Deal) jdbcTemplate.queryForObject(SQL, new Object[]{id}, dealMapper);\n+//            }\n+//            if (deal != null) {\n+//                identityMap.put(id, deal);\n+//            }\n+//            return deal;\n+//        }\n+//\n+//\n+//        @Override\n+//        public List<Deal> findAll() {\n+//            logger.info(\"findAll_deals\");\n+//            String SQL = \"SELECT * FROM DEALS\";\n+//            List<Deal> deals = jdbcTemplate.query(SQL, dealMapper);\n+//            return deals;\n+//        }\n+//\n+//        @Override\n+//        public void delete(Long id) {\n+//            identityMap.remove(id);\n+//            String SQL = \"DELETE FROM DEALS WHERE id = ?\";\n+//            jdbcTemplate.update(SQL, id);\n+//            logger.info(\"Deal with id: \" + id + \" successfully deleted\");\n+//        }\n+//\n+//        @Override\n+//        public void update(Long id, Date date, Long clientId, Long managerId, Long productId, String connectionType, String status) {\n+//            String SQL = \"UPDATE DEALS SET date = ?, client_id = ?, manager_id = ?, product_id = ?, connection_type = ?, status = ? WHERE id = ?\";\n+//            jdbcTemplate.update(SQL, date, clientId, managerId, productId, connectionType, status, id);\n+//            logger.info(\"Deal with id: \" + id + \" successfully updated.\");\n+//        }\n+//    }\n+//"
  },
  {
    "sha": "86377859c27892719cd7cf43c77aff5c86df8ff8",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ManagerDAO.java",
    "status": "modified",
    "additions": 19,
    "deletions": 21,
    "changes": 40,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ManagerDAO.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ManagerDAO.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ManagerDAO.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,21 +1,19 @@\n-//package com.elenakuropatkina.democrm.DAO;\n-//\n-//import java.util.HashMap;\n-//import java.util.List;\n-//\n-//public interface ManagerDAO {\n-//\n-//\n-//    private final Map<Integer, Manager> identityMap = new HashMap<>();\n-//\n-//    public void createManager(String name, String phone, String email, String password, String login);\n-//\n-//    public Manager getOne(Long id);\n-//\n-//    public List findAll();\n-//\n-//    public void delete(Long id);\n-//\n-//    public void update(Long id, String name, String phone, String email, String password, String login);\n-//}\n-//\n+package com.elenakuropatkina.democrm.DAO;\n+\n+import com.elenakuropatkina.democrm.entities.Manager;\n+\n+import java.util.List;\n+\n+public interface ManagerDAO {\n+\n+    public void create(String name, String phone, String email, String password, String login);\n+\n+    public Manager findOne(Long id);\n+\n+    public List<Manager> findAll();\n+\n+    public void delete(Long id);\n+\n+    public void update(Long id, String name, String phone, String email, String password, String login);\n+\n+}"
  },
  {
    "sha": "1014542dd4ef3cb4dbfe3f38b59cd91e44c4e784",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ManagerDAOImpl.java",
    "status": "added",
    "additions": 75,
    "deletions": 0,
    "changes": 75,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ManagerDAOImpl.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ManagerDAOImpl.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ManagerDAOImpl.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -0,0 +1,75 @@\n+package com.elenakuropatkina.democrm.DAO;\n+\n+import com.elenakuropatkina.democrm.dataMappers.ManagerMapper;\n+import com.elenakuropatkina.democrm.entities.Manager;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.jdbc.core.JdbcTemplate;\n+import org.springframework.stereotype.Repository;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Repository\n+public class ManagerDAOImpl implements ManagerDAO {\n+\n+    private final Map<Long, Manager> identityMap = new HashMap<>();\n+    private static final Logger logger = LoggerFactory.getLogger(ManagerDAOImpl.class);\n+\n+    private ManagerMapper managerMapper;\n+    private JdbcTemplate jdbcTemplate;\n+\n+    @Autowired\n+    public ManagerDAOImpl(ManagerMapper managerMapper, JdbcTemplate jdbcTemplate) {\n+        this.managerMapper = managerMapper;\n+        this.jdbcTemplate = jdbcTemplate;\n+    }\n+\n+    @Override\n+    public void create(String name, String phone, String email, String password, String login) {\n+        String SQL = \"INSERT INTO MANAGERS (name, phone, email, password, login) VALUES (?,?,?)\";\n+        jdbcTemplate.update(SQL, name, phone, email, password, login);\n+        logger.info(\"Manager successfully created.\\nName: \" + name + \";\\nPhone: \" +\n+                phone + \"; \\nEmail: \" + email + \";\\nPassword: \" + password + \";\\nLogin: \" + login + \"\\n\");\n+    }\n+\n+    @Override\n+    public Manager findOne(Long id) {\n+        Manager manager = identityMap.get(id);\n+        if (manager == null) {\n+            String SQL = \"SELECT * FROM MANAGERS WHERE id = ?\";\n+            manager = (Manager) jdbcTemplate.queryForObject(SQL, new Object[]{id}, managerMapper);\n+        }\n+        if (manager != null) {\n+            identityMap.put(id, manager);\n+        }\n+        return manager;\n+    }\n+\n+\n+    @Override\n+    public List<Manager> findAll() {\n+        logger.info(\"findAll_managers\");\n+        String SQL = \"SELECT * FROM MANAGERS\";\n+        List<Manager> managers = jdbcTemplate.query(SQL, managerMapper);\n+        return managers;\n+    }\n+\n+    @Override\n+    public void delete(Long id) {\n+        identityMap.remove(id);\n+        String SQL = \"DELETE FROM MANAGERS WHERE id = ?\";\n+        jdbcTemplate.update(SQL, id);\n+        logger.info(\"Manager with id: \" + id + \" successfully deleted\");\n+    }\n+\n+    @Override\n+    public void update(Long id, String name, String phone, String email, String password, String login) {\n+        String SQL = \"UPDATE MANAGERS SET name = ?, phone = ?, email = ?, password = ?, login = ? WHERE id = ?\";\n+        jdbcTemplate.update(SQL, name, phone, email, password, login, id);\n+        logger.info(\"Manager with id: \" + id + \" successfully updated.\");\n+    }\n+\n+}"
  },
  {
    "sha": "241068a777bcc6b99b12fda17dd4969740742331",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ProductDAO.java",
    "status": "modified",
    "additions": 6,
    "deletions": 12,
    "changes": 18,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ProductDAO.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ProductDAO.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ProductDAO.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,28 +1,22 @@\n package com.elenakuropatkina.democrm.DAO;\n \n-import com.elenakuropatkina.democrm.dataMappers.ProductMapper;\n import com.elenakuropatkina.democrm.entities.Product;\n-import org.springframework.jdbc.core.JdbcTemplate;\n \n-import javax.sql.DataSource;\n import java.math.BigDecimal;\n-import java.util.HashMap;\n import java.util.List;\n-import java.util.Map;\n \n-public interface ProductDAO {\n \n-        public void setDataSource(DataSource dataSource);\n+public interface ProductDAO {\n \n-        public void create(String title, BigDecimal price);\n+        void create(String title, BigDecimal price);\n \n-        public Product findOne(Long id);\n+        Product findOne(Long id);\n \n-        public List findAll();\n+        List<Product> findAll();\n \n-        public void delete(Long id);\n+        void delete(Long id);\n \n-        public void update(Product product);\n+        void update(Long id, String title, BigDecimal price);\n     }\n \n "
  },
  {
    "sha": "01828f8cae250064b27de36b81e71e1af748ebfd",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ProductDAOImpl.java",
    "status": "modified",
    "additions": 24,
    "deletions": 14,
    "changes": 38,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ProductDAOImpl.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ProductDAOImpl.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/DAO/ProductDAOImpl.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -2,32 +2,38 @@\n \n import com.elenakuropatkina.democrm.dataMappers.ProductMapper;\n import com.elenakuropatkina.democrm.entities.Product;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.jdbc.core.JdbcTemplate;\n-import org.springframework.stereotype.Component;\n+import org.springframework.stereotype.Repository;\n \n-import javax.sql.DataSource;\n import java.math.BigDecimal;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n-@Component\n+\n+@Repository\n public class ProductDAOImpl  implements ProductDAO{\n \n+    private static final Logger logger = LoggerFactory.getLogger(ProductDAOImpl.class);\n     private final Map<Long, Product> identityMap = new HashMap<>();\n+\n+    private ProductMapper productMapper;\n     private JdbcTemplate jdbcTemplate;\n \n-    @Override\n-    public void setDataSource(DataSource dataSource) {\n-        this.jdbcTemplate = new JdbcTemplate(dataSource);\n+    @Autowired\n+    public ProductDAOImpl(ProductMapper productMapper, JdbcTemplate jdbcTemplate) {\n+        this.productMapper = productMapper;\n+        this.jdbcTemplate = jdbcTemplate;\n     }\n \n     @Override\n     public void create(String title, BigDecimal price){\n         String SQL = \"INSERT INTO PRODUCTS (title, price) VALUES (?,?,?)\";\n         jdbcTemplate.update(SQL, title, price);\n-        System.out.println(\"Product successfully created.\\nTitle: \" + title + \";\\nPrice: \" +\n+        logger.info(\"Product successfully created.\\nTitle: \" + title + \";\\nPrice: \" +\n                 price + \"\\n\");\n     }\n \n@@ -36,19 +42,21 @@ public Product findOne(Long id) {\n         Product product = identityMap.get(id);\n         if (product == null) {\n             String SQL = \"SELECT * FROM PRODUCTS WHERE id = ?\";\n-            product = (Product) jdbcTemplate.queryForObject(SQL, new Object[]{id}, new ProductMapper());\n+            product = (Product) jdbcTemplate.queryForObject(SQL, new Object[]{id}, productMapper);\n         }\n         if (product != null) {\n             identityMap.put(id, product);\n         }\n         return product;\n     }\n \n+\n+\n     @Override\n-    public List findAll() {\n-        System.out.println(\"Find All\");\n+    public List<Product> findAll() {\n+        logger.info(\"findAll_products\");\n         String SQL = \"SELECT * FROM PRODUCTS\";\n-        List products = jdbcTemplate.query(SQL, new ProductMapper());\n+        List<Product> products = jdbcTemplate.query(SQL, productMapper);\n         return products;\n     }\n \n@@ -57,11 +65,13 @@ public void delete(Long id) {\n         identityMap.remove(id);\n         String SQL = \"DELETE FROM PRODUCTS WHERE id = ?\";\n         jdbcTemplate.update(SQL, id);\n-        System.out.println(\"Product with id: \" + id + \" successfully deleted\");\n+        logger.info(\"Product with id: \" + id + \" successfully deleted\");\n     }\n \n     @Override\n-    public void update(Product product) {\n-       //some code\n+    public void update(Long id, String title, BigDecimal price) {\n+        String SQL = \"UPDATE PRODUCTS SET title = ?, price = ? WHERE id = ?\";\n+        jdbcTemplate.update(SQL, title, price, id);\n+        logger.info(\"Product with id: \" + id + \" successfully updated.\");\n     }\n }"
  },
  {
    "sha": "0315ef8658a6c0f07b3cdf937dec899442a14641",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/auth/SecurityConfig.java",
    "status": "modified",
    "additions": 3,
    "deletions": 51,
    "changes": 54,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/auth/SecurityConfig.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/auth/SecurityConfig.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/auth/SecurityConfig.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,51 +1,3 @@\n-//package com.elenakuropatkina.democrm.auth;\n-//\n-//import org.springframework.beans.factory.annotation.Autowired;\n-//import org.springframework.context.annotation.Bean;\n-//import org.springframework.security.authentication.dao.DaoAuthenticationProvider;\n-//import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n-//import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n-//import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n-//import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n-//import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n-//\n-//@EnableWebSecurity\n-//@EnableGlobalMethodSecurity(securedEnabled = true)\n-//public class SecurityConfig extends WebSecurityConfigurerAdapter {\n-//    private UsersService usersService;\n-//\n-//    @Autowired\n-//    public void setUserService(UsersService usersService) {\n-//        this.usersService = usersService;\n-//    }\n-//\n-//    @Override\n-//    protected void configure(HttpSecurity http) throws Exception {\n-//        http.authorizeRequests()\n-//                .antMatchers(\"/profile/*\").authenticated()\n-//                .antMatchers(\"/orders/*\").authenticated()\n-//                .anyRequest().permitAll()\n-//                .and()\n-//                .formLogin()\n-//                .loginPage(\"/login\")\n-//                .loginProcessingUrl(\"/authenticate\")\n-//                .permitAll()\n-//                .and()\n-//                .logout()\n-//                .logoutSuccessUrl(\"/\")\n-//                .permitAll();\n-//    }\n-//\n-//    @Bean\n-//    public BCryptPasswordEncoder passwordEncoder() {\n-//        return new BCryptPasswordEncoder();\n-//    }\n-//\n-//    @Bean\n-//    public DaoAuthenticationProvider authenticationProvider() {\n-//        DaoAuthenticationProvider auth = new DaoAuthenticationProvider();\n-//        auth.setUserDetailsService(usersService);\n-//        auth.setPasswordEncoder(passwordEncoder());\n-//        return auth;\n-//    }\n-//}\n+package com.elenakuropatkina.democrm.auth;\n+public class SecurityConfig  {\n+}"
  },
  {
    "sha": "37ddb978e6be17bc1891835a4d4d801af591a935",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ClientController.java",
    "status": "added",
    "additions": 73,
    "deletions": 0,
    "changes": 73,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ClientController.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ClientController.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ClientController.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -0,0 +1,73 @@\n+package com.elenakuropatkina.democrm.controllers;\n+\n+import com.elenakuropatkina.democrm.entities.Client;\n+import com.elenakuropatkina.democrm.services.ClientService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.servlet.mvc.support.RedirectAttributes;\n+\n+import java.io.IOException;\n+\n+@Controller\n+public class ClientController {\n+\n+    private ClientService clientService;\n+\n+    @Autowired\n+    public ClientController(ClientService clientService) {\n+        this.clientService = clientService;\n+    }\n+\n+    @GetMapping(\"/clients\")\n+    public String clientsPage(Model model) {\n+        model.addAttribute(\"activePage\", \"Clients\");\n+        model.addAttribute(\"clients\", clientService.findAll());\n+        return \"clients\";\n+    }\n+\n+    @GetMapping(\"/client/{id}/edit\")\n+    public String updateClient(Model model, @PathVariable(\"id\") Long id) {\n+        model.addAttribute(\"edit\", true);\n+        model.addAttribute(\"activePage\", \"Clients\");\n+        model.addAttribute(\"client\", clientService.findOne(id));\n+        return \"client_form\";\n+    }\n+\n+    @GetMapping(\"/client/create\")\n+    public String createClient(Model model) {\n+        model.addAttribute(\"create\", true);\n+        model.addAttribute(\"activePage\", \"Clients\");\n+        model.addAttribute(\"client\", new Client());\n+        return \"client_form\";\n+    }\n+\n+    @PostMapping(\"/client\")\n+    public String update(Model model, RedirectAttributes redirectAttributes, Client client) throws IOException {\n+        model.addAttribute(\"activePage\", \"Clients\");\n+\n+        try {\n+            clientService.update(client.getId(), client.getName(), client.getPhone(), client.getEmail(), client.getNotificationType());\n+        } catch (Exception ex) {\n+            redirectAttributes.addFlashAttribute(\"error\", true);\n+            if (client.getId() == null) {\n+                return \"redirect:/client/create\";\n+            }\n+            return \"redirect:/client/\" + client.getId() + \"/edit\";\n+        }\n+        return \"redirect:/clients\";\n+    }\n+\n+    @PostMapping(\"/client/{id}/delete\")\n+    public String deleteClient(Model model, @PathVariable(\"id\") Long id) {\n+        clientService.delete(id);\n+        return \"redirect:/clients\";\n+    }\n+\n+}\n+\n+\n+"
  },
  {
    "sha": "ca7f20651168fe1d58a573b9c315927ac3086e8e",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/DealController.java",
    "status": "added",
    "additions": 76,
    "deletions": 0,
    "changes": 76,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/DealController.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/DealController.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/DealController.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -0,0 +1,76 @@\n+//package com.elenakuropatkina.democrm.controllers;\n+//\n+//import com.elenakuropatkina.democrm.entities.Deal;\n+//import com.elenakuropatkina.democrm.services.DealService;\n+//import org.springframework.beans.factory.annotation.Autowired;\n+//import org.springframework.stereotype.Controller;\n+//import org.springframework.ui.Model;\n+//import org.springframework.web.bind.annotation.GetMapping;\n+//import org.springframework.web.bind.annotation.PathVariable;\n+//import org.springframework.web.bind.annotation.PostMapping;\n+//import org.springframework.web.servlet.mvc.support.RedirectAttributes;\n+//\n+//import java.io.IOException;\n+//\n+//@Controller\n+//public class DealController {\n+//\n+//    private DealService dealService;\n+//\n+//    @Autowired\n+//    public DealController(DealService dealService) {\n+//        this.dealService = dealService;\n+//    }\n+//\n+//    @GetMapping(\"/deals\")\n+//    public String dealsPage(Model model) {\n+//        model.addAttribute(\"activePage\", \"Deals\");\n+//        model.addAttribute(\"deals\", dealService.findAll());\n+//        return \"deals\";\n+//    }\n+//\n+//    @GetMapping(\"/deal/{id}/edit\")\n+//    public String updateDeal(Model model, @PathVariable(\"id\") Long id) {\n+//        model.addAttribute(\"edit\", true);\n+//        model.addAttribute(\"activePage\", \"Deals\");\n+//        model.addAttribute(\"deal\", dealService.findOne(id));\n+//        return \"deal_form\";\n+//    }\n+//\n+//    @GetMapping(\"/deal/create\")\n+//    public String createDeal(Model model) {\n+//        model.addAttribute(\"create\", true);\n+//        model.addAttribute(\"activePage\", \"Deals\");\n+//        model.addAttribute(\"deal\", new Deal());\n+//        return \"deal_form\";\n+//    }\n+//\n+//    @PostMapping(\"/deal\")\n+//    public String update(Model model, RedirectAttributes redirectAttributes, Deal deal) throws IOException {\n+//        model.addAttribute(\"activePage\", \"Deals\");\n+//\n+//        try {\n+//            dealService.update(deal.getId(),\n+//                    deal.getDate(),\n+//                    deal.getClient().getId(),\n+//                    deal.getManager().getId(),\n+//                    deal.getProduct().getId(),\n+//                    deal.getConnectionType(),\n+//                    deal.getStatus());\n+//        } catch (Exception ex) {\n+//            redirectAttributes.addFlashAttribute(\"error\", true);\n+//            if (deal.getId() == null) {\n+//                return \"redirect:/deal/create\";\n+//            }\n+//            return \"redirect:/deal/\" + deal.getId() + \"/edit\";\n+//        }\n+//        return \"redirect:/deals\";\n+//    }\n+//\n+//    @PostMapping(\"/deal/{id}/delete\")\n+//    public String deleteDeal(Model model, @PathVariable(\"id\") Long id) {\n+//        dealService.delete(id);\n+//        return \"redirect:/deals\";\n+//    }\n+//\n+//}"
  },
  {
    "sha": "d34fba272322673930bee207ca3796fc92e387c9",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ManagerController.java",
    "status": "modified",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ManagerController.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ManagerController.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ManagerController.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,4 +1,69 @@\n package com.elenakuropatkina.democrm.controllers;\n \n+import com.elenakuropatkina.democrm.entities.Manager;\n+import com.elenakuropatkina.democrm.services.ManagerService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.servlet.mvc.support.RedirectAttributes;\n+\n+import java.io.IOException;\n+\n+@Controller\n public class ManagerController {\n+\n+    private ManagerService managerService;\n+\n+    @Autowired\n+    public ManagerController(ManagerService managerService) {\n+        this.managerService = managerService;\n+    }\n+\n+    @GetMapping(\"/managers\")\n+    public String managersPage(Model model) {\n+        model.addAttribute(\"activePage\", \"Managers\");\n+        model.addAttribute(\"managers\", managerService.findAll());\n+        return \"managers\";\n+    }\n+\n+    @GetMapping(\"/manager/{id}/edit\")\n+    public String updateManager(Model model, @PathVariable(\"id\") Long id) {\n+        model.addAttribute(\"edit\", true);\n+        model.addAttribute(\"activePage\", \"Managers\");\n+        model.addAttribute(\"manager\", managerService.findOne(id));\n+        return \"manager_form\";\n+    }\n+\n+    @GetMapping(\"/manager/create\")\n+    public String createManager(Model model) {\n+        model.addAttribute(\"create\", true);\n+        model.addAttribute(\"activePage\", \"Managers\");\n+        model.addAttribute(\"manager\", new Manager());\n+        return \"manager_form\";\n+    }\n+\n+    @PostMapping(\"/manager\")\n+    public String update(Model model, RedirectAttributes redirectAttributes, Manager manager) throws IOException {\n+        model.addAttribute(\"activePage\", \"Managers\");\n+\n+        try {\n+            managerService.update(manager.getId(), manager.getName(), manager.getPhone(), manager.getEmail(), manager.getPassword(), manager.getLogin());\n+        } catch (Exception ex) {\n+            redirectAttributes.addFlashAttribute(\"error\", true);\n+            if (manager.getId() == null) {\n+                return \"redirect:/manager/create\";\n+            }\n+            return \"redirect:/manager/\" + manager.getId() + \"/edit\";\n+        }\n+        return \"redirect:/managers\";\n+    }\n+\n+    @PostMapping(\"/manager/{id}/delete\")\n+    public String deleteManager(Model model, @PathVariable(\"id\") Long id) {\n+        managerService.delete(id);\n+        return \"redirect:/managers\";\n+    }\n }"
  },
  {
    "sha": "956adbf11d93815b0b0f7c2b7ff48e0d94d57f54",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ProductController.java",
    "status": "modified",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ProductController.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ProductController.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/controllers/ProductController.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -5,7 +5,6 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Controller;\n import org.springframework.ui.Model;\n-import org.springframework.web.bind.annotation.DeleteMapping;\n import org.springframework.web.bind.annotation.GetMapping;\n import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.PostMapping;\n@@ -17,8 +16,7 @@\n @Controller\n public class ProductController {\n \n-\n-    private final ProductService productService;\n+    private ProductService productService;\n \n     @Autowired\n     public ProductController(ProductService productService) {\n@@ -49,11 +47,11 @@ public String createProduct(Model model) {\n     }\n \n     @PostMapping(\"/product\")\n-    public String upsertProduct(Model model, RedirectAttributes redirectAttributes, Product product) throws IOException {\n+    public String update(Model model, RedirectAttributes redirectAttributes, Product product) throws IOException {\n         model.addAttribute(\"activePage\", \"Products\");\n \n         try {\n-            productService.update(product);\n+            productService.update(product.getId(), product.getTitle(), product.getPrice());\n         } catch (Exception ex) {\n             redirectAttributes.addFlashAttribute(\"error\", true);\n             if (product.getId() == null) {\n@@ -64,7 +62,7 @@ public String upsertProduct(Model model, RedirectAttributes redirectAttributes,\n         return \"redirect:/products\";\n     }\n \n-    @DeleteMapping(\"/product/{id}/delete\")\n+    @PostMapping(\"/product/{id}/delete\")\n     public String deleteProduct(Model model, @PathVariable(\"id\") Long id) {\n         productService.delete(id);\n         return \"redirect:/products\";"
  },
  {
    "sha": "aaf95b6f290c751719128c0b637b154ecfb5b3d0",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ClientMapper.java",
    "status": "modified",
    "additions": 23,
    "deletions": 21,
    "changes": 44,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ClientMapper.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ClientMapper.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ClientMapper.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,21 +1,23 @@\n-//package com.elenakuropatkina.democrm.dataMappers;\n-//\n-//import com.elenakuropatkina.democrm.entities.Client;\n-//import org.springframework.jdbc.core.RowMapper;\n-//\n-//import java.sql.ResultSet;\n-//import java.sql.SQLException;\n-//\n-//public class ClientMapper implements RowMapper {\n-//\n-//    @Override\n-//    public Client mapRow(ResultSet rs, int rowNum) throws SQLException {\n-//        Client client = new Client();\n-//        client.setId(rs.getLong(\"id\"));\n-//        client.setName(rs.getString(\"name\"));\n-//        client.setPhone(rs.getString(\"phone\"));\n-//        client.setEmail(rs.getString(\"email\"));\n-//        client.setNotificationType(rs.getString(\"notification_type\"));\n-//        return client;\n-//    }\n-//}\n+package com.elenakuropatkina.democrm.dataMappers;\n+\n+import com.elenakuropatkina.democrm.entities.Client;\n+import org.springframework.jdbc.core.RowMapper;\n+import org.springframework.stereotype.Component;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+@Component\n+public class ClientMapper implements RowMapper<Client> {\n+\n+    @Override\n+    public Client mapRow(ResultSet rs, int rowNum) throws SQLException {\n+        Client client = new Client();\n+        client.setId(rs.getLong(\"id\"));\n+        client.setName(rs.getString(\"name\"));\n+        client.setPhone(rs.getString(\"phone\"));\n+        client.setEmail(rs.getString(\"email\"));\n+        client.setNotificationType(rs.getString(\"notification_type\"));\n+        return client;\n+    }\n+}"
  },
  {
    "sha": "5c40e4108004fa70de724b622138378318d05377",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/DealMapper.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/DealMapper.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/DealMapper.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/DealMapper.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,13 +1,14 @@\n //package com.elenakuropatkina.democrm.dataMappers;\n //\n-//import com.elenakuropatkina.democrm.entities.Client;\n //import com.elenakuropatkina.democrm.entities.Deal;\n //import org.springframework.jdbc.core.RowMapper;\n+//import org.springframework.stereotype.Component;\n //\n //import java.sql.ResultSet;\n //import java.sql.SQLException;\n //\n-//public class DealMapper implements RowMapper {\n+//@Component\n+//public class DealMapper implements RowMapper<Deal> {\n //    @Override\n //    public Deal mapRow(ResultSet rs, int rowNum) throws SQLException {\n //        Deal deal = new Deal();"
  },
  {
    "sha": "87af59a4654d113d552a18b67efd3e9ea8d97b90",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ManagerMapper.java",
    "status": "modified",
    "additions": 26,
    "deletions": 24,
    "changes": 50,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ManagerMapper.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ManagerMapper.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ManagerMapper.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,24 +1,26 @@\n-//package com.elenakuropatkina.democrm.dataMappers;\n-//\n-//\n-//import com.elenakuropatkina.democrm.entities.Manager;\n-//import org.springframework.jdbc.core.RowMapper;\n-//\n-//import java.sql.ResultSet;\n-//import java.sql.SQLException;\n-//\n-//public class ManagerMapper implements RowMapper {\n-//\n-//        @Override\n-//        public Manager mapRow(ResultSet rs, int rowNum) throws SQLException {\n-//\n-//            Manager manager = new Manager();\n-//            manager.setId(rs.getLong(\"id\"));\n-//            manager.setName(rs.getString(\"name\"));\n-//            manager.setPhone(rs.getString(\"phone\"));\n-//            manager.setEmail(rs.getString(\"email\"));\n-//            manager.setPassword(rs.getString(\"password\"));\n-//            manager.setLogin(rs.getString(\"login\"));\n-//            return manager;\n-//        }\n-//}\n+package com.elenakuropatkina.democrm.dataMappers;\n+\n+\n+import com.elenakuropatkina.democrm.entities.Manager;\n+import org.springframework.jdbc.core.RowMapper;\n+import org.springframework.stereotype.Component;\n+\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+@Component\n+public class ManagerMapper implements RowMapper<Manager> {\n+\n+        @Override\n+        public Manager mapRow(ResultSet rs, int rowNum) throws SQLException {\n+\n+            Manager manager = new Manager();\n+            manager.setId(rs.getLong(\"id\"));\n+            manager.setName(rs.getString(\"name\"));\n+            manager.setPhone(rs.getString(\"phone\"));\n+            manager.setEmail(rs.getString(\"email\"));\n+            manager.setPassword(rs.getString(\"password\"));\n+            manager.setLogin(rs.getString(\"login\"));\n+            return manager;\n+        }\n+}"
  },
  {
    "sha": "c8b9adbe90653783b3afce2d57c384d402b6b2fb",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ProductMapper.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ProductMapper.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ProductMapper.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/dataMappers/ProductMapper.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,12 +1,15 @@\n package com.elenakuropatkina.democrm.dataMappers;\n \n import com.elenakuropatkina.democrm.entities.Product;\n+\n import org.springframework.jdbc.core.RowMapper;\n+import org.springframework.stereotype.Component;\n \n import java.sql.ResultSet;\n import java.sql.SQLException;\n \n-public class ProductMapper implements RowMapper {\n+@Component\n+public class ProductMapper implements RowMapper<Product> {\n \n     @Override\n     public Product mapRow(ResultSet rs, int rowNum) throws SQLException {"
  },
  {
    "sha": "2bfa8db08541898b4b18f3a3f1a4f7c47097bb08",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Client.java",
    "status": "modified",
    "additions": 13,
    "deletions": 26,
    "changes": 39,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Client.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Client.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Client.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,33 +1,20 @@\n package com.elenakuropatkina.democrm.entities;\n \n-\n import lombok.Data;\n-import lombok.RequiredArgsConstructor;\n-\n-//import javax.persistence.*;\n-//\n-//@Entity\n-//@RequiredArgsConstructor\n-//@Data\n-//@Table(name = \"clients\")\n+import org.springframework.data.annotation.Id;\n+\n+@Data\n public class Client {\n \n-//    @Id\n-//    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-//    @Column(name = \"id\")\n-//    private Long id;\n-//\n-//    @Column(name = \"name\")\n-//    private String name;\n-//\n-//    @Column(name = \"phone\")\n-//    private String phone;\n-//\n-//    @Column(name = \"email\")\n-//    private String email;\n-//\n-//    @Column(name = \"notification_type\")\n-//    private String notificationType;\n-//\n+    @Id\n+    private Long id;\n+\n+    private String name;\n+\n+    private String phone;\n+\n+    private String email;\n+\n+    private String notificationType;\n \n }"
  },
  {
    "sha": "fcb04e51b39f60d2d97ccf98467c7320d8fafe77",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Deal.java",
    "status": "modified",
    "additions": 7,
    "deletions": 25,
    "changes": 32,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Deal.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Deal.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Deal.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,43 +1,25 @@\n-package com.elenakuropatkina.democrm.entities;\n-\n-import lombok.Data;\n-import lombok.RequiredArgsConstructor;\n-\n-//import javax.persistence.*;\n+//package com.elenakuropatkina.democrm.entities;\n+//\n+//import lombok.Data;\n+//import org.springframework.data.annotation.Id;\n+//\n //import java.util.Date;\n //\n-//@Entity\n-//@RequiredArgsConstructor\n //@Data\n-//@Table(name = \"deals\")\n-public class Deal {\n+//public class Deal {\n //    @Id\n-//    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-//    @Column(name = \"id\")\n //    private Long id;\n //\n-//    @Column(name = \"date\")\n //    private Date date;\n //\n-//    @ManyToOne\n-//    @JoinColumn(name = \"client_id\")\n //    private Client client;\n //\n-//    @ManyToOne\n-//    @JoinColumn(name = \"manager_id\")\n //    private Manager manager;\n //\n-//    @ManyToOne\n-//    @JoinColumn(name = \"product_id\")\n //    private Product product;\n //\n-//    @Column(name = \"connectionType\")\n //    private String connectionType;\n //\n-//    @Column(name = \"status\")\n //    private String status;\n //\n-//\n-//\n-\n-}\n+//}"
  },
  {
    "sha": "b086afcbe093d01644712b65e00063dfde2190c9",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Manager.java",
    "status": "modified",
    "additions": 15,
    "deletions": 28,
    "changes": 43,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Manager.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Manager.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Manager.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,35 +1,22 @@\n package com.elenakuropatkina.democrm.entities;\n \n-\n import lombok.Data;\n-import lombok.RequiredArgsConstructor;\n-\n-//import javax.persistence.*;\n-//\n-//@Entity\n-//@RequiredArgsConstructor\n-//@Data\n-//@Table(name = \"managers\")\n+import org.springframework.data.annotation.Id;\n+\n+@Data\n public class Manager {\n \n-//    @Id\n-//    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-//    @Column(name = \"id\")\n-//    private Long id;\n-//\n-//    @Column(name = \"name\")\n-//    private String name;\n-//\n-//    @Column(name = \"phone\")\n-//    private String phone;\n-//\n-//    @Column(name = \"email\")\n-//    private String email;\n-//\n-//    @Column(name = \"password\")\n-//    private String password;\n-//\n-//    @Column(name = \"login\")\n-//    private String login;\n+    @Id\n+    private Long id;\n+\n+    private String name;\n+\n+    private String phone;\n+\n+    private String email;\n+\n+    private String password;\n+\n+    private String login;\n \n }"
  },
  {
    "sha": "ed7afcbe1352c400cf98fa9fb945739fdb6737d7",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Product.java",
    "status": "modified",
    "additions": 2,
    "deletions": 5,
    "changes": 7,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Product.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Product.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/entities/Product.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,13 +1,10 @@\n package com.elenakuropatkina.democrm.entities;\n \n import lombok.Data;\n-import lombok.RequiredArgsConstructor;\n import org.springframework.data.annotation.Id;\n \n import java.math.BigDecimal;\n \n-\n-@RequiredArgsConstructor\n @Data\n public class Product {\n \n@@ -16,8 +13,8 @@\n \n     private String title;\n \n-    private String phone;\n-\n     private BigDecimal price;\n \n }\n+\n+"
  },
  {
    "sha": "1e393714be448ed1a6671d382dcc019a27596259",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ClientService.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ClientService.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ClientService.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ClientService.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -0,0 +1,41 @@\n+package com.elenakuropatkina.democrm.services;\n+\n+import com.elenakuropatkina.democrm.DAO.ClientDAO;\n+import com.elenakuropatkina.democrm.entities.Client;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.List;\n+\n+@Service\n+@RequiredArgsConstructor\n+public class ClientService {\n+\n+    private final ClientDAO clientDAO;\n+\n+    public List<Client> findAll() {\n+        return clientDAO.findAll();\n+    }\n+\n+\n+    public void create(String name, String phone, String email, String notificationType) {\n+        clientDAO.create(name, phone, email, notificationType);\n+    }\n+\n+    public Client findOne(Long id) {\n+        return clientDAO.findOne(id);\n+    }\n+\n+    public void delete(Long id) {\n+        clientDAO.delete(id);\n+    }\n+\n+\n+    public void update(Long id, String name, String phone, String email, String notificationType) {\n+        clientDAO.update(id, name, phone, email, notificationType);\n+    }\n+\n+}\n+\n+\n+"
  },
  {
    "sha": "0ee70127aaa8bedaa2d391138412e7e675baec62",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/services/DealService.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/DealService.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/DealService.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/DealService.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -0,0 +1,39 @@\n+//package com.elenakuropatkina.democrm.services;\n+//\n+//import com.elenakuropatkina.democrm.DAO.DealDAO;\n+//import com.elenakuropatkina.democrm.entities.Deal;\n+//import lombok.RequiredArgsConstructor;\n+//import org.springframework.stereotype.Service;\n+//\n+//import java.util.Date;\n+//import java.util.List;\n+//\n+//@Service\n+//@RequiredArgsConstructor\n+//public class DealService {\n+//\n+//        private final DealDAO dealDAO;\n+//\n+//        public List<Deal> findAll() {\n+//            return dealDAO.findAll();\n+//        }\n+//\n+//\n+//        public void create(Date date, Long clientId, Long managerId, Long productId, String connectionType, String status) {\n+//            dealDAO.create(date, clientId, managerId, productId, connectionType, status);\n+//        }\n+//\n+//        public Deal findOne(Long id) {\n+//            return dealDAO.findOne(id);\n+//        }\n+//\n+//        public void delete(Long id) {\n+//            dealDAO.delete(id);\n+//        }\n+//\n+//\n+//        public void update(Long id, Date date, Long clientId, Long managerId, Long productId, String connectionType, String status) {\n+//            dealDAO.update(id, date, clientId, managerId, productId, connectionType, status);\n+//        }\n+//\n+//    }"
  },
  {
    "sha": "00361a82d585ab81eab30825f41e52042c775712",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ManagerService.java",
    "status": "modified",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ManagerService.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ManagerService.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ManagerService.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,4 +1,38 @@\n package com.elenakuropatkina.democrm.services;\n \n+import com.elenakuropatkina.democrm.DAO.ManagerDAO;\n+import com.elenakuropatkina.democrm.entities.Manager;\n+import lombok.RequiredArgsConstructor;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.List;\n+\n+@Service\n+@RequiredArgsConstructor\n public class ManagerService {\n+\n+    private final ManagerDAO managerDAO;\n+\n+    public List<Manager> findAll() {\n+        return managerDAO.findAll();\n+    }\n+\n+\n+    public void create(String name, String phone, String email, String password, String login) {\n+        managerDAO.create(name, phone, email, password, login);\n+    }\n+\n+    public Manager findOne(Long id) {\n+        return managerDAO.findOne(id);\n+    }\n+\n+    public void delete(Long id) {\n+        managerDAO.delete(id);\n+    }\n+\n+\n+    public void update(Long id, String name, String phone, String email, String password, String login) {\n+        managerDAO.update(id, name, phone, email, password, login);\n+    }\n+\n }"
  },
  {
    "sha": "0c62fc1e0fcc04a663b56c0326ac68968479899a",
    "filename": "demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ProductService.java",
    "status": "modified",
    "additions": 24,
    "deletions": 22,
    "changes": 46,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ProductService.java",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ProductService.java",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/java/com/elenakuropatkina/democrm/services/ProductService.java?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,42 +1,44 @@\n package com.elenakuropatkina.democrm.services;\n \n import com.elenakuropatkina.democrm.DAO.ProductDAO;\n-import com.elenakuropatkina.democrm.DAO.ProductDAOImpl;\n import com.elenakuropatkina.democrm.entities.Product;\n+import lombok.RequiredArgsConstructor;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n import java.math.BigDecimal;\n import java.util.List;\n \n+\n @Service\n+@RequiredArgsConstructor\n public class ProductService {\n \n-    private ProductDAO productDAO;\n-\n-        //@Autowired\n-        public void setProductDAO(ProductDAOImpl productDAO) {\n-            this.productDAO = productDAO;\n-        }\n+    private final ProductDAO productDAO;\n \n-        public void create(String title, BigDecimal price) {\n-                productDAO.create(title, price);\n-        }\n+//    @Autowired\n+//    public ProductService(ProductDAO productDAO) {\n+//        this.productDAO = productDAO;\n+//    }\n \n-        public Product findOne(Long id) {\n-            return productDAO.findOne(id);\n-        }\n+    public List<Product> findAll() {\n+        return productDAO.findAll();\n+    }\n \n-        public List<Product> findAll() {\n-            return productDAO.findAll();\n-        }\n+    public void create(String title, BigDecimal price) {\n+        productDAO.create(title, price);\n+    }\n \n+    public Product findOne(Long id) {\n+        return productDAO.findOne(id);\n+    }\n \n-        public void delete(Long id) {\n-            productDAO.delete(id);\n-        }\n+    public void delete(Long id) {\n+        productDAO.delete(id);\n+    }\n \n-        public void update(Product product) {\n-            productDAO.update(product);\n-        }\n+    public void update(Long id, String title, BigDecimal price) {\n+        productDAO.update(id, title, price);\n+    }\n }\n+"
  },
  {
    "sha": "46b4675d93fa8b4db669eec023852387dd17cc9a",
    "filename": "demo-crm/src/main/resources/application.properties",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/resources/application.properties",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/resources/application.properties?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -4,10 +4,10 @@ spring.datasource.url=jdbc:h2:mem:demo_db;MODE=MySQL\n spring.datasource.username=root\n spring.datasource.password=Dasha5631304@\n spring.datasource.driver-class-name=org.h2.Driver\n-#spring.jpa.show-sql=true\n+\n #spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect\n #spring.hibernate.hbm2ddl.auto=create\n-#spring.jpa.temp.use_jdbc_metadata_defaults=false\n+\n spring.thymeleaf.encoding=UTF-8\n \n \n@@ -17,3 +17,4 @@ spring.thymeleaf.encoding=UTF-8\n \n \n \n+"
  },
  {
    "sha": "df530e58329e48503b3d1b01ef2e786777e0613f",
    "filename": "demo-crm/src/main/resources/db/migration/V1__init.sql",
    "status": "modified",
    "additions": 23,
    "deletions": 23,
    "changes": 46,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/resources/db/migration/V1__init.sql",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/resources/db/migration/V1__init.sql",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/resources/db/migration/V1__init.sql?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -1,18 +1,18 @@\n--- drop table if exists managers cascade;\n--- create table managers (id bigserial, name varchar(255), phone varchar(255), email varchar(255), password varchar(80) not null, login varchar(255), primary key(id));\n--- insert into managers\n--- (name, phone, email, password, login) values\n--- ('Ivan Ivanov', '9154151213', 'ivanov@mail.ru', '$2y$04$cChhG0aIZiSJXKzmWoTEAuokUjq1AHUxhCSAVfJTpoPM.HpZoq1jG', 'ivanov'),\n--- ('Petr Petrov', '9151111212', 'petrov@mail.ru','$2y$04$bXBlRIka4ScFxDSF2ZbCqulrbGSnc3CE87sMZFQMm8.bn58N6g2au', 'petrov'),\n--- ('Masha Mashina', '9159991213', 'mashina@mail.ru','$2y$04$o9AKs6P0AU8INXqeUsGD5OxR/8RE3aFjgOXKJklX.mJks8gP6aotK', 'mashina');\n---\n--- drop table if exists clients cascade;\n--- create table clients (id bigserial, name varchar(255), phone varchar(255), email varchar(255), notification_type varchar(255), primary key(id));\n--- insert into clients\n--- (name, phone, email, notification_type) values\n--- ('Sam', '9151111111', 'sam@mail.ru', 'EMAIL'),\n--- ('Bob', '9152222222', 'bob@mail.ru', 'SMS'),\n--- ('Jack', '9153333333', 'jack@mail.ru', 'EMAIL_SMS');\n+drop table if exists managers cascade;\n+create table managers (id bigserial, name varchar(255), phone varchar(255), email varchar(255), password varchar(80) not null, login varchar(255), primary key(id));\n+insert into managers\n+(name, phone, email, password, login) values\n+('Ivan Ivanov', '9154151213', 'ivanov@mail.ru', '$2y$04$cChhG0aIZiSJXKzmWoTEAuokUjq1AHUxhCSAVfJTpoPM.HpZoq1jG', 'ivanov'),\n+('Petr Petrov', '9151111212', 'petrov@mail.ru','$2y$04$bXBlRIka4ScFxDSF2ZbCqulrbGSnc3CE87sMZFQMm8.bn58N6g2au', 'petrov'),\n+('Masha Mashina', '9159991213', 'mashina@mail.ru','$2y$04$o9AKs6P0AU8INXqeUsGD5OxR/8RE3aFjgOXKJklX.mJks8gP6aotK', 'mashina');\n+\n+drop table if exists clients cascade;\n+create table clients (id bigserial, name varchar(255), phone varchar(255), email varchar(255), notification_type varchar(255), primary key(id));\n+insert into clients\n+(name, phone, email, notification_type) values\n+('Sam', '9151111111', 'sam@mail.ru', 'EMAIL'),\n+('Bob', '9152222222', 'bob@mail.ru', 'SMS'),\n+('Jack', '9153333333', 'jack@mail.ru', 'EMAIL_SMS');\n \n drop table if exists products cascade;\n create table products (id bigserial, title varchar(255), price decimal(19, 2), primary key(id));\n@@ -22,11 +22,11 @@ insert into products\n ('product_2', 2000),\n ('product_3', 1500);\n \n--- drop table if exists deals cascade;\n--- create table deals (id bigserial, date date, client_id bigint, manager_id bigint, product_id bigint, connection_type varchar(255), status varchar(255), primary key(id),\n--- foreign key (client_id) references clients(id), foreign key (manager_id) references managers(id), foreign key (product_id) references products(id));\n--- insert into deals\n--- (date, client_id, manager_id, product_id, connection_type, status) values\n--- ('2021-02-21', 1, 2, 3, 'phone', 'isPaid');\n---\n---\n+drop table if exists deals cascade;\n+create table deals (id bigserial, date date, client_id bigint, manager_id bigint, product_id bigint, connection_type varchar(255), status varchar(255), primary key(id),\n+foreign key (client_id) references clients(id), foreign key (manager_id) references managers(id), foreign key (product_id) references products(id));\n+insert into deals\n+(date, client_id, manager_id, product_id, connection_type, status) values\n+('2021-02-21', 1, 2, 3, 'phone', 'isPaid');\n+\n+"
  },
  {
    "sha": "a9bce80e944eb471732cd86469767139830efbd5",
    "filename": "demo-crm/src/main/resources/templates/client_form.html",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/resources/templates/client_form.html",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/resources/templates/client_form.html",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/resources/templates/client_form.html?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -0,0 +1,54 @@\n+<!doctype html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\"\n+      xmlns:sec=\"http://www.thymeleaf.org/extras/spring-security\">\n+\n+<head th:replace=\"fragments/header :: head\"></head>\n+\n+<body class=\"bg-light\">\n+\n+<div th:replace=\"fragments/header :: header\"></div>\n+\n+<div class=\"d-flex\">\n+    <div th:replace=\"fragments/sidebar :: sidebar\"></div>\n+\n+    <div class=\"content p-4\">\n+        <h2 class=\"mb-4\" th:if=\"${edit}\">Edit client</h2>\n+        <h2 class=\"mb-4\" th:if=\"${create}\">Create client</h2>\n+\n+        <form th:object=\"${client}\" method=\"post\" th:action=\"@{/client}\" enctype=\"multipart/form-data\">\n+            <div class=\"card mb-4\">\n+                <div class=\"card-body\">\n+                    <input th:type=\"hidden\" th:field=\"*{id}\">\n+                    <div class=\"form-group\">\n+                        <label for=\"name\">Name</label>\n+                        <input th:field=\"*{name}\" type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter name\"\n+                               required>\n+                    </div>\n+                    <div class=\"form-group\">\n+                        <label for=\"phone\">Phone</label>\n+                        <input th:field=\"*{phone}\" type=\"text\" class=\"form-control\" id=\"phone\" placeholder=\"Phone\"\n+                               required>\n+                    </div>\n+                    <div class=\"form-group\">\n+                        <label for=\"email\">Email</label>\n+                        <input th:field=\"*{email}\" type=\"text\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\n+                               required>\n+                    </div>\n+                    <div class=\"form-group\">\n+                        <label for=\"notification_type\">Notification Type</label>\n+                        <input th:field=\"*{notificationType}\" type=\"text\" class=\"form-control\" id=\"notification_type\" placeholder=\"notification type\"\n+                               required>\n+                    </div>\n+                </div>\n+                <div class=\"card-footer bg-white\">\n+                    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n+                </div>\n+            </div>\n+        </form>\n+    </div>\n+</div>\n+\n+<script th:replace=\"fragments/footer :: scripts\"></script>\n+\n+</body>\n+</html>"
  },
  {
    "sha": "2c078c51c5e38eb6f35b586f51ec2d6e3b8a718f",
    "filename": "demo-crm/src/main/resources/templates/clients.html",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/ElenaKuropatkina/Architecture/blob/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/resources/templates/clients.html",
    "raw_url": "https://github.com/ElenaKuropatkina/Architecture/raw/47fc951c388de351cae8063b6383fed369f9c857/demo-crm/src/main/resources/templates/clients.html",
    "contents_url": "https://api.github.com/repos/ElenaKuropatkina/Architecture/contents/demo-crm/src/main/resources/templates/clients.html?ref=47fc951c388de351cae8063b6383fed369f9c857",
    "patch": "@@ -0,0 +1,71 @@\n+<!doctype html>\n+<html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\"\n+      xmlns:sec=\"http://www.thymeleaf.org/extras/spring-security\">\n+\n+<head th:replace=\"fragments/header :: head\"></head>\n+\n+<body class=\"bg-light\">\n+\n+<div th:replace=\"fragments/header :: header\"></div>\n+\n+<div class=\"d-flex\">\n+    <div th:replace=\"fragments/sidebar :: sidebar\"></div>\n+\n+    <div class=\"content p-4\">\n+        <h2 class=\"mb-4\">Clients list</h2>\n+\n+        <div class=\"card mb-4\">\n+\n+            <div class=\"card-body\">\n+                <form class=\"form-group\" th:action=\"@{/client/create}\">\n+                    <button type=\"submit\" class=\"btn btn-primary\">Create new</button>\n+                </form>\n+\n+                <table id=\"clients\" class=\"table table-hover\" cellspacing=\"0\" width=\"100%\">\n+                    <thead>\n+                    <tr>\n+                        <th>Id</th>\n+                        <th>Name</th>\n+                        <th>Phone</th>\n+                        <th>Email</th>\n+                        <th>Notification type</th>\n+                        <th class=\"actions\">Actions</th>\n+                    </tr>\n+                    </thead>\n+                    <tbody>\n+                    <tr th:each=\"c : ${clients}\">\n+                        <td th:text=\"${c.id}\"></td>\n+                        <td th:text=\"${c.name}\"></td>\n+                        <td th:text=\"${c.phone}\"></td>\n+                        <td th:text=\"${c.email}\"></td>\n+                        <td th:text=\"${c.notificationType}\"></td>\n+                        <td>\n+                            <a th:href=\"@{/client/{id}/edit(id=${c.id})}\" class=\"btn btn-icon btn-pill btn-primary\"\n+                               data-toggle=\"tooltip\" title=\"Edit\">\n+                                <i class=\"fa fa-fw fa-edit\"></i>\n+                            </a>\n+                            <form th:action=\"@{/client/{id}/delete(id=${c.id})}\" th:method=\"delete\" class=\"d-inline\">\n+                                <button class=\"btn btn-icon btn-pill btn-danger\" data-toggle=\"tooltip\" title=\"Delete\">\n+                                    <i class=\"fa fa-fw fa-trash\"></i>\n+                                </button>\n+                            </form>\n+                        </td>\n+                    </tr>\n+                    </tbody>\n+                </table>\n+\n+            </div>\n+        </div>\n+    </div>\n+</div>\n+\n+<script th:replace=\"fragments/footer :: scripts\"></script>\n+<script th:src=\"@{/js/datatables.min.js}\"></script>\n+<script>\n+    $(document).ready(function () {\n+        $('#clients').DataTable();\n+    });\n+</script>\n+\n+</body>\n+</html>\n\\ No newline at end of file"
  }
]
