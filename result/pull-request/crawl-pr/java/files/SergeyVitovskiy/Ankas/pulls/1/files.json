[
  {
    "sha": "42d66cb8a216d4ecdad241ecd8a496c2a5a28a93",
    "filename": ".idea/gradle.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/.idea/gradle.xml",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/.idea/gradle.xml",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/.idea/gradle.xml?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -1,5 +1,6 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project version=\"4\">\n+  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n   <component name=\"GradleSettings\">\n     <option name=\"linkedExternalProjectsSettings\">\n       <GradleProjectSettings>"
  },
  {
    "sha": "8ec256a5d290bffdb16a99dd3db0d613792739d5",
    "filename": ".idea/render.experimental.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/.idea/render.experimental.xml",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/.idea/render.experimental.xml",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/.idea/render.experimental.xml?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"RenderSettings\">\n+    <option name=\"showDecorations\" value=\"true\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "35eb1ddfbbc029bcab630581847471d7f238ec53",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/.idea/vcs.xml",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/.idea/vcs.xml?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "1462a9df65a1ec55d4412e046e926127c25d70e6",
    "filename": "app/build.gradle",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/build.gradle",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/build.gradle",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/build.gradle?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -26,8 +26,14 @@ dependencies {\n     implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\n     implementation 'androidx.appcompat:appcompat:1.2.0'\n     implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\n+    implementation 'com.squareup.picasso:picasso:2.71828'\n+    implementation 'androidx.viewpager2:viewpager2:1.0.0'\n+    implementation 'com.google.android.material:material:1.3.0'\n+    implementation 'androidx.navigation:navigation-fragment:2.3.3'\n+    implementation 'androidx.navigation:navigation-ui:2.3.3'\n     testImplementation 'junit:junit:4.12'\n     androidTestImplementation 'androidx.test.ext:junit:1.1.2'\n     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\n \n+\n }\n\\ No newline at end of file"
  },
  {
    "sha": "f0edebb23739e4b6cdfee147faa8004b7a567ad2",
    "filename": "app/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 9,
    "deletions": 2,
    "changes": 11,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/AndroidManifest.xml?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -2,20 +2,27 @@\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     package=\"com.example.ankas\">\n \n+    <uses-permission android:name=\"android.permission.INTERNET\" />\n+\n     <application\n         android:allowBackup=\"true\"\n         android:icon=\"@mipmap/ic_launcher\"\n         android:label=\"@string/app_name\"\n         android:roundIcon=\"@mipmap/ic_launcher_round\"\n         android:supportsRtl=\"true\"\n-        android:theme=\"@style/AppTheme\">\n-        <activity android:name=\".MainActivity\">\n+        android:theme=\"@style/AppTheme\"\n+        android:usesCleartextTraffic=\"true\">\n+        <activity android:name=\".SearchActivity\"></activity>\n+        <activity android:name=\".SplashActivity\">\n             <intent-filter>\n                 <action android:name=\"android.intent.action.MAIN\" />\n \n                 <category android:name=\"android.intent.category.LAUNCHER\" />\n             </intent-filter>\n         </activity>\n+        <activity android:name=\".ProductActivity\" />\n+        <activity android:name=\".CategoryAndProduct\" />\n+        <activity android:name=\".MainActivity\" />\n     </application>\n \n </manifest>\n\\ No newline at end of file"
  },
  {
    "sha": "77a04e55bcb9364d67eeba994a407fef1e6a2c20",
    "filename": "app/src/main/java/com/example/ankas/Adapter/BasketAdapter.java",
    "status": "added",
    "additions": 111,
    "deletions": 0,
    "changes": 111,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Adapter/BasketAdapter.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Adapter/BasketAdapter.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Adapter/BasketAdapter.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,111 @@\n+package com.example.ankas.Adapter;\n+\n+import android.content.Context;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.BaseAdapter;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.example.ankas.Fragments.BasketFragment;\n+import com.example.ankas.Objects.Basket;\n+import com.example.ankas.R;\n+import com.squareup.picasso.Picasso;\n+\n+import java.util.List;\n+\n+public class BasketAdapter extends BaseAdapter {\n+\n+    List<Basket> mBasketList;\n+    Context mContext;\n+\n+    public BasketAdapter(List<Basket> mBasketList, Context mContext) {\n+        this.mBasketList = mBasketList;\n+        this.mContext = mContext;\n+    }\n+\n+    @Override\n+    public int getCount() {\n+        return mBasketList.size();\n+    }\n+\n+    @Override\n+    public Object getItem(int position) {\n+        return mBasketList.get(position);\n+    }\n+\n+    @Override\n+    public long getItemId(int position) {\n+        return mBasketList.get(position).getId_();\n+    }\n+\n+    @Override\n+    public View getView(final int position, View view, ViewGroup viewGroup) {\n+        View viewItemBasket = View.inflate(mContext, R.layout.item_basket, null);\n+        // Присвоение компонентов\n+        ImageView image = viewItemBasket.findViewById(R.id.image);\n+        TextView txt_name = viewItemBasket.findViewById(R.id.txt_name);\n+        TextView txt_price = viewItemBasket.findViewById(R.id.txt_price);\n+        TextView txt_minus = viewItemBasket.findViewById(R.id.txt_minus);\n+        TextView txt_plus = viewItemBasket.findViewById(R.id.txt_plus);\n+        final TextView txt_quantity = viewItemBasket.findViewById(R.id.txt_quantity);\n+        final TextView txt_sumPrice = viewItemBasket.findViewById(R.id.txt_sumPrice);\n+        TextView txt_delete = viewItemBasket.findViewById(R.id.txt_delete);\n+        // Вывод информации\n+        final Basket basket = mBasketList.get(position);\n+        txt_name.setText(basket.getName());\n+        txt_price.setText(setPrice(basket.getPrice()));\n+        txt_quantity.setText(String.valueOf(basket.getQuantity()));\n+        txt_sumPrice.setText(setPrice(basket.getSumPrice()));\n+        Picasso.get()\n+                .load(\"http://anndroidankas.h1n.ru/image/\" + basket.getImage())\n+                .placeholder(R.drawable.ico_small)\n+                .into(image);\n+        // Обработка нажатий\n+        txt_minus.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                if (Basket.getBasketList().get(position).getQuantity() > 1) {\n+                    Basket.getBasketList().get(position).setQuantity(mContext,-1);\n+                    updatePrice(txt_quantity, position, txt_sumPrice);\n+                }\n+            }\n+        });\n+        txt_plus.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                Basket.getBasketList().get(position).setQuantity(mContext,1);\n+                updatePrice(txt_quantity, position, txt_sumPrice);\n+            }\n+        });\n+        // Удаление товара\n+        txt_delete.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                Basket.deleteItemBasket(mContext,position);\n+                BasketFragment.checkVisibleWindowNullBasket();\n+                BasketFragment.sumPrice();\n+            }\n+        });\n+        return viewItemBasket;\n+    }\n+\n+    // Изменение цены\n+    private void updatePrice(TextView txt_quantity, int position, TextView txt_sumPrice){\n+        txt_quantity.setText(\n+                String.valueOf(Basket.getBasketList().get(position).getQuantity()));\n+        txt_sumPrice.setText(setPrice(Basket.getBasketList().get(position).getSumPrice()));\n+        BasketFragment.sumPrice();\n+    }\n+\n+    // конвертация цена\n+    private String setPrice(int price) {\n+        StringBuffer newPrice = new StringBuffer(String.valueOf(price) + \" ₽\");\n+        int position = 5;\n+        while (newPrice.length() > position) {\n+            newPrice = newPrice.insert((newPrice.length() - position), \" \");\n+            position += 4;\n+        }\n+        return newPrice.toString();\n+    }\n+}"
  },
  {
    "sha": "f53a69d58ba8d48da21235a59bd44e59c06f4732",
    "filename": "app/src/main/java/com/example/ankas/Adapter/CategoryAdapter.java",
    "status": "added",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Adapter/CategoryAdapter.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Adapter/CategoryAdapter.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Adapter/CategoryAdapter.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,87 @@\n+package com.example.ankas.Adapter;\n+\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.graphics.Color;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.BaseAdapter;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.example.ankas.CategoryAndProduct;\n+import com.example.ankas.MainActivity;\n+import com.example.ankas.Objects.Category;\n+import com.example.ankas.R;\n+import com.squareup.picasso.Picasso;\n+\n+import java.util.List;\n+\n+public class CategoryAdapter extends BaseAdapter {\n+    private List<Category> mCategoryList;\n+    Context mContext;\n+\n+    public CategoryAdapter(List<Category> mCategoryList, Context mContext) {\n+        this.mCategoryList = mCategoryList;\n+        this.mContext = mContext;\n+    }\n+\n+    @Override\n+    public int getCount() {\n+        return mCategoryList.size();\n+    }\n+\n+    @Override\n+    public Object getItem(int position) {\n+        return mCategoryList.get(position);\n+    }\n+\n+    @Override\n+    public long getItemId(int position) {\n+        return mCategoryList.get(position).getId_();\n+    }\n+\n+    @SuppressLint(\"ResourceAsColor\")\n+    @Override\n+    public View getView(int position, View view, ViewGroup viewGroup) {\n+        View viewItem = View.inflate(mContext, R.layout.item_category, null);\n+        // Присвоение компонентов\n+        TextView txt_name = viewItem.findViewById(R.id.txt_name);\n+        ImageView image_category = viewItem.findViewById(R.id.image_category);\n+        final Category category = mCategoryList.get(position);\n+        // Проверка на пустоту\n+        if (category.getId_() == 0 && category.getName().equals(\"null\") &&\n+                category.getDescription().equals(\"null\") && category.getImage().equals(\"null\")) {\n+            txt_name.setText(\"\");\n+            Picasso.get()\n+                    .load(\"http://anndroidankas.h1n.ru/image/whiteSquare.png\")\n+                    .placeholder(R.drawable.ico_small)\n+                    .into(image_category);\n+        } else {\n+            // Изменить цвет\n+            if (category.getId_() == 0)\n+                txt_name.setTextColor(Color.BLUE);\n+            txt_name.setText(category.getName());\n+            Picasso.get()\n+                    .load(\"http://anndroidankas.h1n.ru/image/\" + category.getImage())\n+                    .placeholder(R.drawable.ico_small)\n+                    .into(image_category);\n+            // Обработка нажатия\n+            viewItem.setOnClickListener(new View.OnClickListener() {\n+                @Override\n+                public void onClick(View view) {\n+                    // Посмотреть все категории\n+                    if (category.getId_() == 0) {\n+                        MainActivity.selectItem(R.id.item_category);\n+                    } else {\n+                        Intent intent = new Intent(mContext, CategoryAndProduct.class);\n+                        intent.putExtra(\"id_\", category.getId_());\n+                        mContext.startActivity(intent);\n+                    }\n+                }\n+            });\n+        }\n+        return viewItem;\n+    }\n+}"
  },
  {
    "sha": "ce2d0877f1037313509ea6cd27ccaa771cf609e9",
    "filename": "app/src/main/java/com/example/ankas/Adapter/CharacteristicAdapter.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Adapter/CharacteristicAdapter.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Adapter/CharacteristicAdapter.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Adapter/CharacteristicAdapter.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,48 @@\n+package com.example.ankas.Adapter;\n+\n+import android.content.Context;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.BaseAdapter;\n+import android.widget.TextView;\n+\n+import com.example.ankas.Objects.Characteristic;\n+import com.example.ankas.R;\n+\n+import java.util.List;\n+\n+public class CharacteristicAdapter extends BaseAdapter {\n+    List<Characteristic> mCharacteristicList;\n+    Context mContext;\n+\n+    public CharacteristicAdapter(List<Characteristic> mCharacteristicList, Context mContext) {\n+        this.mCharacteristicList = mCharacteristicList;\n+        this.mContext = mContext;\n+    }\n+\n+    @Override\n+    public int getCount() {\n+        return mCharacteristicList.size();\n+    }\n+\n+    @Override\n+    public Object getItem(int position) {\n+        return mCharacteristicList.get(position);\n+    }\n+\n+    @Override\n+    public long getItemId(int position) {\n+        return position;\n+    }\n+\n+    @Override\n+    public View getView(int position, View view, ViewGroup viewGroup) {\n+        View viewItem = View.inflate(mContext, R.layout.item_characteristic, null);\n+        TextView txt_name = viewItem.findViewById(R.id.txt_name);\n+        TextView txt_characteristic = viewItem.findViewById(R.id.txt_characteristic);\n+        Characteristic characteristic = mCharacteristicList.get(position);\n+        txt_name.setText(characteristic.getNameCharacteristic());\n+        txt_characteristic.setText(characteristic.getCharacteristic());\n+        return viewItem;\n+    }\n+}"
  },
  {
    "sha": "7137ee453af85dd7eafe44b32a73b7e43475d629",
    "filename": "app/src/main/java/com/example/ankas/Adapter/ProductAdapter.java",
    "status": "added",
    "additions": 179,
    "deletions": 0,
    "changes": 179,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Adapter/ProductAdapter.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Adapter/ProductAdapter.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Adapter/ProductAdapter.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,179 @@\n+package com.example.ankas.Adapter;\n+\n+import android.app.AlertDialog;\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.BaseAdapter;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.example.ankas.MainActivity;\n+import com.example.ankas.Objects.Basket;\n+import com.example.ankas.Objects.Category;\n+import com.example.ankas.Objects.Product;\n+import com.example.ankas.ProductActivity;\n+import com.example.ankas.R;\n+import com.squareup.picasso.Picasso;\n+\n+import java.util.List;\n+\n+public class ProductAdapter extends BaseAdapter {\n+    private List<Product> mProductList;\n+    Context mContext;\n+\n+    public ProductAdapter(List<Product> mProductList, Context mContext) {\n+        this.mProductList = mProductList;\n+        this.mContext = mContext;\n+    }\n+\n+    @Override\n+    public int getCount() {\n+        return mProductList.size();\n+    }\n+\n+    @Override\n+    public Object getItem(int position) {\n+        return mProductList.get(position);\n+    }\n+\n+    @Override\n+    public long getItemId(int position) {\n+        return mProductList.get(position).getId_();\n+    }\n+\n+    @Override\n+    public View getView(final int position, View view, ViewGroup viewGroup) {\n+        View viewItem = View.inflate(mContext, R.layout.item_product, null);\n+        TextView txt_name = viewItem.findViewById(R.id.txt_name);\n+        ImageView image_product = viewItem.findViewById(R.id.image_product);\n+        TextView txt_price = viewItem.findViewById(R.id.txt_price);\n+        final Button btn_by = viewItem.findViewById(R.id.btn_by);\n+        TextView txt_brand = viewItem.findViewById(R.id.txt_brand);\n+        TextView txt_available = viewItem.findViewById(R.id.txt_available);\n+        // Заполнение элемента\n+        final Product product = mProductList.get(position);\n+        // Проверка на пустой элементт\n+        if (product.getId_() != 0) {\n+            txt_name.setText(product.getName());\n+            Picasso.get().load(\"http://anndroidankas.h1n.ru/image/\" + product.getName_image())\n+                    .placeholder(R.drawable.ico_small)\n+                    .into(image_product);\n+            txt_price.setText(setPrice(product.getPrice()));\n+            txt_brand.setText(product.getBrand_name() + \", \" + product.getBrand_country());\n+            // Кол-во товаров\n+            if (product.getQuantity() > 0) {\n+                txt_available.setText(\"В наличии\");\n+            } else {\n+                txt_available.setText(\"Под заказ\");\n+            }\n+            // Есть ли товар в корзине\n+            if (Basket.checkProductBasket(product.getId_()))\n+                btn_by.setText(\"В корзине\");\n+            else\n+                btn_by.setText(\"Купить\");\n+            // Купить товар или перейти в корзину\n+            btn_by.setOnClickListener(new View.OnClickListener() {\n+                @Override\n+                public void onClick(View view) {\n+                    // Упить или перейти в корзину\n+                    if(btn_by.getText().toString().equals(\"Купить\")) {\n+                        btn_by.setText(\"В корзине\");\n+                        btn_by(product.getId_(),\n+                                product.getName(),\n+                                product.getName_image(),\n+                                product.getPrice());\n+                    } else\n+                    {\n+                        Intent intent = new Intent(mContext, MainActivity.class);\n+                        intent.putExtra(\"ItemFragment\", R.id.item_basket);\n+                        mContext.startActivity(intent);\n+                        btn_by.setText(\"Купить\");\n+                    }\n+                }\n+            });\n+            // Переход к подробностям о товаре\n+            image_product.setOnClickListener(new View.OnClickListener() {\n+                @Override\n+                public void onClick(View view) {\n+                    Intent intent = new Intent(mContext, ProductActivity.class);\n+                    intent.putExtra(\"Id_\", product.getId_())\n+                            .putExtra(\"Name\", product.getName())\n+                            .putExtra(\"Price\", product.getPrice())\n+                            .putExtra(\"Quantity\", product.getQuantity())\n+                            .putExtra(\"Description\", product.getDescription())\n+                            .putExtra(\"Name_image\", product.getName_image())\n+                            .putExtra(\"Brand_country\", product.getBrand_country())\n+                            .putExtra(\"Brand_name\", product.getBrand_name());\n+                    mContext.startActivity(intent);\n+                }\n+            });\n+        } else {\n+            // Пустое поля для красивого вывода\n+            // Пустое поле\n+            txt_available.setText(\"\");\n+            txt_brand.setText(\"\");\n+            txt_name.setText(\"\");\n+            txt_price.setText(\"\");\n+            btn_by.setVisibility(View.VISIBLE);\n+            Picasso.get().load(\"http://anndroidankas.h1n.ru/image/whiteSquare.png\")\n+                    .placeholder(R.drawable.ico_small)\n+                    .into(image_product);\n+        }\n+        // Возрат элемента обратно\n+        return viewItem;\n+    }\n+\n+    // Диалоговое окно покупки товаров\n+    private void btn_by(int id, String name, String image, int price) {\n+        // Добавление товара в корзину\n+        Basket.addProductBasket(mContext, id, name, image, price);\n+        // Создание и присвоение макета к диалогу\n+        AlertDialog.Builder builder = new AlertDialog.Builder(mContext);\n+        View viewItemDialog = View.inflate(mContext, R.layout.dialog_by, null);\n+        builder.setView(viewItemDialog);\n+        final Dialog dialogBy = builder.create();\n+        TextView txt_name_dialog = viewItemDialog.findViewById(R.id.txt_name_dialog);\n+        ImageView image_dialog = viewItemDialog.findViewById(R.id.image_dialog);\n+        // Вывод данных\n+        txt_name_dialog.setText(name);\n+        Picasso.get().load(\"http://anndroidankas.h1n.ru/image/\" + image)\n+                .placeholder(R.drawable.ico_small)\n+                .into(image_dialog);\n+        // Продолжить покупки\n+        Button btn_resume_dialog = viewItemDialog.findViewById(R.id.btn_resume_dialog);\n+        btn_resume_dialog.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                dialogBy.cancel();\n+            }\n+        });\n+        // Перейти к оформлению\n+        Button btn_arrange_dialog = viewItemDialog.findViewById(R.id.btn_arrange_dialog);\n+        btn_arrange_dialog.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                dialogBy.cancel();\n+                Intent intent = new Intent(mContext, MainActivity.class);\n+                intent.putExtra(\"ItemFragment\", R.id.item_basket);\n+                mContext.startActivity(intent);\n+            }\n+        });\n+        // Вывод диалога\n+        dialogBy.show();\n+    }\n+\n+    // Конвертация цена\n+    private String setPrice(int price) {\n+        StringBuffer newPrice = new StringBuffer(String.valueOf(price) + \" ₽\");\n+        int position = 5;\n+        while (newPrice.length() > position) {\n+            newPrice = newPrice.insert((newPrice.length() - position), \" \");\n+            position += 4;\n+        }\n+        return newPrice.toString();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "67528f2074952869a57a5cefaf0277391667215c",
    "filename": "app/src/main/java/com/example/ankas/CategoryAndProduct.java",
    "status": "added",
    "additions": 242,
    "deletions": 0,
    "changes": 242,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/CategoryAndProduct.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/CategoryAndProduct.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/CategoryAndProduct.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,242 @@\n+package com.example.ankas;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.AsyncTask;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.MenuItem;\n+import android.view.View;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.PopupMenu;\n+import android.widget.RelativeLayout;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+import com.example.ankas.Adapter.CategoryAdapter;\n+import com.example.ankas.Adapter.ProductAdapter;\n+import com.example.ankas.Components.ExpandableHeightGridView;\n+import com.example.ankas.Fragments.MainFragment;\n+import com.example.ankas.Objects.Category;\n+import com.example.ankas.Objects.Product;\n+\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.w3c.dom.Text;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+public class CategoryAndProduct extends AppCompatActivity {\n+    List<Category> categoryList;\n+    List<Product> productList;\n+    ExpandableHeightGridView grid_categoryAndProduct;\n+    // Название\n+    TextView txt_title;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_category_and_product);\n+        // Верхнее меню\n+        toolbar();\n+        grid_categoryAndProduct = findViewById(R.id.grid_categoryAndProduct);\n+        txt_title = findViewById(R.id.txt_title);\n+        int id_ = getIntent().getIntExtra(\"id_\", 0);\n+        categoryList = new ArrayList<>();\n+        productList = new ArrayList<>();\n+        new getCategoryAndProduct().execute(\"http://anndroidankas.h1n.ru/mobile-api/Product/ProductOrCategory/\" + id_);\n+    }\n+    // Верхнее меню\n+    private void toolbar() {\n+        ImageView img_logo = findViewById(R.id.img_logo);\n+        ImageView img_search = findViewById(R.id.img_search);\n+        img_logo.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                Intent intent = new Intent(CategoryAndProduct.this, MainActivity.class);\n+                intent.putExtra(\"ItemFragment\", R.id.item_main);\n+                startActivity(intent);\n+            }\n+        });\n+        img_search.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                Intent intent = new Intent(CategoryAndProduct.this, SearchActivity.class);\n+                startActivity(intent);\n+            }\n+        });\n+    }\n+\n+    // Получение товаров или категорий\n+    private class getCategoryAndProduct extends AsyncTask<String, Void, String> {\n+\n+        @Override\n+        protected String doInBackground(String... strings) {\n+            try {\n+                // Подключение\n+                URL url = new URL(strings[0]);\n+                HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+                connection.connect();\n+                // Считывание ответа\n+                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n+                String line = \"\";\n+                StringBuffer result = new StringBuffer();\n+                while ((line = reader.readLine()) != null)\n+                    result.append(line);\n+                return result.toString();\n+            } catch (MalformedURLException e) {\n+                e.printStackTrace();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            return \"null\";\n+        }\n+\n+        // Парсинг ответа\n+        @Override\n+        protected void onPostExecute(String result) {\n+            super.onPostExecute(result);\n+            if (checkResult(result)) {\n+                try {\n+                    categoryList.clear();\n+                    productList.clear();\n+                    // Парсинг ответа от сервера\n+                    JSONObject jsonObjectResult = new JSONObject(result);\n+                    if (jsonObjectResult.getString(\"Param\").equals(\"Category\")) {\n+                        // Категории товаров\n+                        JSONArray jsonArrayCategory = jsonObjectResult.getJSONArray(\"Category\");\n+                        parseCategory(jsonArrayCategory);\n+                    } else if (jsonObjectResult.getString(\"Param\").equals(\"Product\")) {\n+                        // Товары\n+                        JSONArray jsonArrayProduct = jsonObjectResult.getJSONArray(\"Product\");\n+                        parseProduct(jsonArrayProduct);\n+                    }\n+                    Log.d(\"--- Выполнено ---\", \"Ответ от сервера получен (Категории)\");\n+                    grid_categoryAndProduct.setExpanded(true);\n+                } catch (JSONException e) {\n+                    e.printStackTrace();\n+                }\n+            } else {\n+                Log.d(\" --- Ошибка ---\", \"Нет или неверный ответ от сервера\");\n+            }\n+        }\n+    }\n+\n+    // Парсинг категорий\n+    private void parseCategory(JSONArray jsonArrayCategory) throws JSONException {\n+        for (int position = 0; position < jsonArrayCategory.length(); position++) {\n+            JSONObject jsonObjectCategory = jsonArrayCategory.getJSONObject(position);\n+            Category category = new Category(\n+                    jsonObjectCategory.getInt(\"id_\"),\n+                    jsonObjectCategory.getString(\"name\"),\n+                    jsonObjectCategory.getString(\"description\"),\n+                    jsonObjectCategory.getString(\"image\")\n+            );\n+            categoryList.add(category);\n+        }\n+        // Усли не хватает на заполнение\n+        while ((categoryList.size() % 3) != 0) {\n+            Category category = new Category(\n+                    0,\n+                    \"null\",\n+                    \"null\",\n+                    \"null\"\n+            );\n+            categoryList.add(category);\n+        }\n+        CategoryAdapter categoryAdapter = new CategoryAdapter(categoryList, CategoryAndProduct.this);\n+        grid_categoryAndProduct.setAdapter(categoryAdapter);\n+        txt_title.setText(\"Категории товаров\");\n+    }\n+\n+    // Парсинг товаров\n+    private void parseProduct(JSONArray jsonArrayProduct) throws JSONException {\n+        for (int position = 0; position < jsonArrayProduct.length(); position++) {\n+            JSONObject jsonObjectProduct = jsonArrayProduct.getJSONObject(position);\n+            Product product = new Product(\n+                    jsonObjectProduct.getInt(\"id_\"),\n+                    jsonObjectProduct.getString(\"name\"),\n+                    jsonObjectProduct.getInt(\"price\"),\n+                    jsonObjectProduct.getInt(\"quantity\"),\n+                    jsonObjectProduct.getString(\"description\"),\n+                    jsonObjectProduct.getString(\"brand_name\"),\n+                    jsonObjectProduct.getString(\"brand_country\"),\n+                    jsonObjectProduct.getString(\"name_image\")\n+            );\n+            productList.add(product);\n+        }\n+        // Усли не хватает на заполнение\n+        while ((productList.size() % 2) != 0) {\n+            Product product = new Product(\n+                    0,\n+                    \"null\",\n+                    0,\n+                    0,\n+                    \"null\",\n+                    \"null\",\n+                    \"null\",\n+                    \"null\"\n+            );\n+            productList.add(product);\n+        }\n+        ProductAdapter productAdapter = new ProductAdapter(productList, CategoryAndProduct.this);\n+        grid_categoryAndProduct.setAdapter(productAdapter);\n+        grid_categoryAndProduct.setNumColumns(2);\n+        grid_categoryAndProduct.setHorizontalSpacing(0);\n+        grid_categoryAndProduct.setVerticalSpacing(0);\n+        txt_title.setText(\"Товары\");\n+        sortingAndFiltering(productAdapter, productList);\n+    }\n+\n+    // Проверка ответа от сервера\n+    private boolean checkResult(String result) {\n+        if (!result.equals(\"null\") || !result.equals(\"[]\") || !result.equals(\"\") || !result.equals(\"{}\"))\n+            return true;\n+        else return false;\n+    }\n+\n+    // Сортировка и фильтр\n+    private void sortingAndFiltering(ProductAdapter productAdapter, final List<Product> productList) {\n+        RelativeLayout layout_sorting_and_filtering = findViewById(R.id.layout_sorting_and_filtering);\n+        layout_sorting_and_filtering.setVisibility(View.VISIBLE);\n+        TextView txt_filtering = findViewById(R.id.txt_filtering);\n+        TextView txt_sorting = findViewById(R.id.txt_sorting);\n+        txt_sorting.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                final Context context = CategoryAndProduct.this;\n+                PopupMenu popupMenu = new PopupMenu(context, view);\n+                popupMenu.inflate(R.menu.menu_sorting);\n+                popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\n+                    @Override\n+                    public boolean onMenuItemClick(MenuItem menuItem) {\n+                        switch (menuItem.getItemId()) {\n+                            case R.id.txt_popularity:\n+                                break;\n+                            case R.id.txt_ascending:\n+                                break;\n+                            case R.id.txt_descending:\n+                                break;\n+                            case R.id.txt_nameCompany:\n+                                break;\n+                        }\n+                        return false;\n+                    }\n+                });\n+                popupMenu.show();\n+            }\n+        });\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "5db6b5cafa966b8ebf6d295f215e64c5714b1c2e",
    "filename": "app/src/main/java/com/example/ankas/Components/ExpandableHeightGridView.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Components/ExpandableHeightGridView.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Components/ExpandableHeightGridView.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Components/ExpandableHeightGridView.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,57 @@\n+package com.example.ankas.Components;\n+\n+import android.content.Context;\n+import android.util.AttributeSet;\n+import android.view.ViewGroup;\n+import android.widget.GridView;\n+\n+public class ExpandableHeightGridView extends GridView {\n+    boolean expanded = false;\n+\n+    public ExpandableHeightGridView(Context context)\n+    {\n+        super(context);\n+    }\n+\n+    public ExpandableHeightGridView(Context context, AttributeSet attrs)\n+    {\n+        super(context, attrs);\n+    }\n+\n+    public ExpandableHeightGridView(Context context, AttributeSet attrs,\n+                                    int defStyle)\n+    {\n+        super(context, attrs, defStyle);\n+    }\n+\n+    public boolean isExpanded()\n+    {\n+        return expanded;\n+    }\n+\n+    @Override\n+    public void onMeasure(int widthMeasureSpec, int heightMeasureSpec)\n+    {\n+        // HACK! TAKE THAT ANDROID!\n+        if (isExpanded())\n+        {\n+            // Calculate entire height by providing a very large height hint.\n+            // View.MEASURED_SIZE_MASK represents the largest height possible.\n+            int expandSpec = MeasureSpec.makeMeasureSpec(MEASURED_SIZE_MASK,\n+                    MeasureSpec.AT_MOST);\n+            super.onMeasure(widthMeasureSpec, expandSpec);\n+\n+            ViewGroup.LayoutParams params = getLayoutParams();\n+            params.height = getMeasuredHeight();\n+        }\n+        else\n+        {\n+            super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n+        }\n+    }\n+\n+    public void setExpanded(boolean expanded)\n+    {\n+        this.expanded = expanded;\n+    }\n+}"
  },
  {
    "sha": "bb92d1d9f2b7e1dbd7ed49dc8047c3ab264d0db9",
    "filename": "app/src/main/java/com/example/ankas/Components/MySliderImage.java",
    "status": "added",
    "additions": 159,
    "deletions": 0,
    "changes": 159,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Components/MySliderImage.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Components/MySliderImage.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Components/MySliderImage.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,159 @@\n+package com.example.ankas.Components;\n+\n+import android.content.Context;\n+import android.os.AsyncTask;\n+import android.util.AttributeSet;\n+import android.util.Log;\n+import android.view.View;\n+import android.view.animation.Animation;\n+import android.view.animation.AnimationUtils;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.RelativeLayout;\n+\n+import com.example.ankas.R;\n+import com.squareup.picasso.Picasso;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Timer;\n+import java.util.TimerTask;\n+\n+public class MySliderImage extends RelativeLayout {\n+\n+    ImageView image_slider;\n+    ImageView image_left;\n+    ImageView image_right;\n+    LinearLayout layout_point;\n+    int positionSlider;\n+    List<String> listImage;\n+\n+    int tick;\n+\n+    public MySliderImage(Context context) {\n+        super(context);\n+        init(context);\n+    }\n+\n+    public MySliderImage(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        init(context);\n+    }\n+\n+    public MySliderImage(Context context, AttributeSet attrs, int defStyleAttr) {\n+        super(context, attrs, defStyleAttr);\n+        init(context);\n+    }\n+\n+    public MySliderImage(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n+        super(context, attrs, defStyleAttr, defStyleRes);\n+        init(context);\n+    }\n+\n+    private void init(Context context) {\n+        View viewItem = View.inflate(context, R.layout.my_slideri_image, this);\n+        setDescendantFocusability(FOCUS_BLOCK_DESCENDANTS);\n+        image_slider = viewItem.findViewById(R.id.image_slider);\n+        image_left = viewItem.findViewById(R.id.image_left);\n+        image_right = viewItem.findViewById(R.id.image_right);\n+        layout_point = viewItem.findViewById(R.id.layout_point);\n+    }\n+\n+    // Настройка компонента\n+    public void setListImage(List<String> list) {\n+        listImage = new ArrayList<>();\n+        listImage = list;\n+        sliderImage();\n+    }\n+\n+    // Установка таймера\n+    public void setTimer(int tick) {\n+        this.tick = tick;\n+        // Запуск таймера\n+        new timerSlider().execute();\n+    }\n+\n+    // Изображения\n+    private void sliderImage() {\n+        ImageView image_left = findViewById(R.id.image_left);\n+        ImageView image_right = findViewById(R.id.image_right);\n+        updateImageBanner();\n+        // Перелистывание изображения\n+        // Перелистывание назад\n+        image_left.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                if (positionSlider <= 0) {\n+                    positionSlider = listImage.size() - 1;\n+                } else {\n+                    positionSlider--;\n+                }\n+                updateImageBanner();\n+            }\n+        });\n+        // Перелистывание вперед\n+        image_right.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                if (positionSlider >= listImage.size() - 1) {\n+                    positionSlider = 0;\n+                } else {\n+                    positionSlider++;\n+                }\n+                updateImageBanner();\n+            }\n+        });\n+    }\n+\n+    // Обновление изображения\n+    private void updateImageBanner() {\n+        image_slider = findViewById(R.id.image_slider);\n+        layout_point = findViewById(R.id.layout_point);\n+        Animation slideMovement = AnimationUtils.loadAnimation(getContext(), R.anim.slider_movement);\n+        image_slider.setAnimation(slideMovement);\n+        image_slider.animate();\n+        Picasso.get().load(\"http://anndroidankas.h1n.ru/image/\" + listImage.get(positionSlider))\n+                .placeholder(R.drawable.banner)\n+                .into(image_slider);\n+        Log.d(\"positionSlider\", \" - - \" + positionSlider);\n+        // Поинты\n+        layout_point.removeAllViews();\n+        for (int position = 0; position < listImage.size(); position++) {\n+            ImageView imageView = new ImageView(getContext());\n+            if (position == positionSlider) {\n+                imageView.setImageResource(R.drawable.point_true);\n+            } else {\n+                imageView.setImageResource(R.drawable.point_false);\n+            }\n+            imageView.setLayoutParams(new LinearLayout.LayoutParams(30, 30));\n+            imageView.setPadding(5, 0, 5, 0);\n+            layout_point.addView(imageView);\n+        }\n+    }\n+\n+    // Таймер слайдера\n+    private class timerSlider extends AsyncTask<String, Void, String> {\n+\n+        @Override\n+        protected String doInBackground(String... strings) {\n+            try {\n+                Thread.sleep(tick);\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+            return null;\n+        }\n+\n+        @Override\n+        protected void onPostExecute(String s) {\n+            super.onPostExecute(s);\n+            if (positionSlider >= listImage.size() - 1) {\n+                positionSlider = 0;\n+            } else {\n+                positionSlider++;\n+            }\n+            updateImageBanner();\n+            new timerSlider().execute();\n+        }\n+    }\n+}"
  },
  {
    "sha": "bfb396d18b7934f5edf2c3870c27da65689dcc60",
    "filename": "app/src/main/java/com/example/ankas/Fragments/BasketFragment.java",
    "status": "added",
    "additions": 128,
    "deletions": 0,
    "changes": 128,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Fragments/BasketFragment.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Fragments/BasketFragment.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Fragments/BasketFragment.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,128 @@\n+package com.example.ankas.Fragments;\n+\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+\n+import com.example.ankas.Adapter.BasketAdapter;\n+import com.example.ankas.Components.ExpandableHeightGridView;\n+import com.example.ankas.MainActivity;\n+import com.example.ankas.Objects.Basket;\n+import com.example.ankas.R;\n+\n+public class BasketFragment extends Fragment {\n+    static LinearLayout layout_windowBasketNull;\n+    View BasketFragmentView;\n+    Context context;\n+    ExpandableHeightGridView grid_basket;\n+    static BasketAdapter basketAdapter;\n+    String receivingProduct;\n+    // Сумма заказа\n+    static TextView txt_sumProductPrice;\n+    static TextView sumPrice;\n+\n+    @Nullable\n+    @Override\n+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n+        BasketFragmentView = inflater.inflate(R.layout.basket_fragment, null);\n+        context = BasketFragmentView.getContext();\n+        addProdctBasket();\n+        windowNullBasket();\n+        receivingProduct();\n+        // Сумма товаров\n+        txt_sumProductPrice = BasketFragmentView.findViewById(R.id.txt_sumProductPrice);\n+        sumPrice = BasketFragmentView.findViewById(R.id.sumPrice);\n+        sumPrice();\n+        return BasketFragmentView;\n+    }\n+    public static void sumPrice(){\n+        txt_sumProductPrice.setText(\"Общая стоимость товаров: \" + setPrice(Basket.getSumProduct()));\n+        sumPrice.setText(\"Итог: \" + setPrice(Basket.getSumProduct()));\n+    }\n+    // Выбор способа получения\n+    private void receivingProduct() {\n+        receivingProduct = \"pickUp\";\n+        final LinearLayout layout_pickUp = BasketFragmentView.findViewById(R.id.layout_pickUp);\n+        final LinearLayout layout_delivery = BasketFragmentView.findViewById(R.id.layout_delivery);\n+        // Самовывоз\n+        layout_pickUp.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                layout_pickUp.setBackgroundResource(R.drawable.border_green);\n+                layout_delivery.setBackgroundResource(R.drawable.border_gray);\n+                receivingProduct = \"pickUp\";\n+            }\n+        });\n+        // Доставка\n+        layout_delivery.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                layout_pickUp.setBackgroundResource(R.drawable.border_gray);\n+                layout_delivery.setBackgroundResource(R.drawable.border_green);\n+                receivingProduct = \"delivery\";\n+            }\n+        });\n+    }\n+\n+    // Оформление заказа\n+    private void createOrder(){\n+        TextView txt_surname;\n+        TextView txt_name;\n+        TextView txt_mail;\n+        TextView txt_tell;\n+\n+        TextView txt_note;\n+    }\n+\n+    // Вывод информации о товарах в корзине\n+    private void addProdctBasket() {\n+        grid_basket = BasketFragmentView.findViewById(R.id.grid_basket);\n+        grid_basket.setExpanded(true);\n+        basketAdapter = new BasketAdapter(Basket.getBasketList(), context);\n+        grid_basket.setAdapter(basketAdapter);\n+    }\n+\n+    // Окно при пустой корзине\n+    private void windowNullBasket() {\n+        layout_windowBasketNull = BasketFragmentView.findViewById(R.id.layout_windowBasketNull);\n+        // Переход в корзину\n+        Button btn_busket = BasketFragmentView.findViewById(R.id.btn_busket);\n+        btn_busket.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                MainActivity.selectItem(R.id.item_category);\n+            }\n+        });\n+        checkVisibleWindowNullBasket();\n+    }\n+\n+    // Скрыть или показать диалог\n+    public static void checkVisibleWindowNullBasket() {\n+        if (Basket.getSizeBasket() == 0) {\n+            layout_windowBasketNull.setVisibility(View.VISIBLE);\n+        } else {\n+            layout_windowBasketNull.setVisibility(View.GONE);\n+        }\n+        basketAdapter.notifyDataSetChanged();\n+    }\n+\n+    // конвертация цена\n+    private static String setPrice(int price) {\n+        StringBuffer newPrice = new StringBuffer(String.valueOf(price) + \" ₽\");\n+        int position = 5;\n+        while (newPrice.length() > position) {\n+            newPrice = newPrice.insert((newPrice.length() - position), \" \");\n+            position += 4;\n+        }\n+        return newPrice.toString();\n+    }\n+}"
  },
  {
    "sha": "855180d38d4e9d80788d3e6ac906843df85c968b",
    "filename": "app/src/main/java/com/example/ankas/Fragments/CategoryFragment.java",
    "status": "added",
    "additions": 118,
    "deletions": 0,
    "changes": 118,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Fragments/CategoryFragment.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Fragments/CategoryFragment.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Fragments/CategoryFragment.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,118 @@\n+package com.example.ankas.Fragments;\n+\n+import android.content.Context;\n+import android.os.AsyncTask;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+\n+import com.example.ankas.Adapter.CategoryAdapter;\n+import com.example.ankas.Components.ExpandableHeightGridView;\n+import com.example.ankas.Objects.Category;\n+import com.example.ankas.R;\n+\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class CategoryFragment extends Fragment {\n+    Context context;\n+    View MainFragmentView;\n+    // Категории\n+    List<Category> categoryList;\n+    ExpandableHeightGridView grid_category;\n+    CategoryAdapter categoryAdapter;\n+\n+    @Nullable\n+    @Override\n+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n+        MainFragmentView = inflater.inflate(R.layout.category_fragment, null);\n+        context = MainFragmentView.getContext();\n+        // Категории товаров\n+        categoryList = new ArrayList<>();\n+        grid_category = MainFragmentView.findViewById(R.id.grid_category);\n+        grid_category.setExpanded(true);\n+        categoryAdapter = new CategoryAdapter(categoryList, context);\n+        grid_category.setAdapter(categoryAdapter);\n+        new getCategory().execute(\"http://anndroidankas.h1n.ru/mobile-api/Product/ProductOrCategory/0\");\n+        // Возрат view для отрисовки\n+        return MainFragmentView;\n+    }\n+\n+    // Получение категорий\n+    private class getCategory extends AsyncTask<String, Void, String> {\n+\n+        @Override\n+        protected String doInBackground(String... strings) {\n+            try {\n+                // Подключение\n+                URL url = new URL(strings[0]);\n+                HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+                connection.connect();\n+                // Считывание ответа\n+                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n+                String line = \"\";\n+                StringBuffer result = new StringBuffer();\n+                while ((line = reader.readLine()) != null)\n+                    result.append(line);\n+                return result.toString();\n+            } catch (MalformedURLException e) {\n+                e.printStackTrace();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            return \"null\";\n+        }\n+\n+        @Override\n+        protected void onPostExecute(String result) {\n+            super.onPostExecute(result);\n+            if (checkResult(result)) {\n+                try {\n+                    categoryList.clear();\n+                    // Парсинг ответа от сервера\n+                    JSONObject jsonObjectResult = new JSONObject(result);\n+                    JSONArray jsonArrayCategory = jsonObjectResult.getJSONArray(\"Category\");\n+                    for (int position = 0; position < jsonArrayCategory.length(); position++) {\n+                        JSONObject jsonObjectCategory = jsonArrayCategory.getJSONObject(position);\n+                        Category category = new Category(\n+                                jsonObjectCategory.getInt(\"id_\"),\n+                                jsonObjectCategory.getString(\"name\"),\n+                                jsonObjectCategory.getString(\"description\"),\n+                                jsonObjectCategory.getString(\"image\")\n+                        );\n+                        categoryList.add(category);\n+                    }\n+                    Log.d(\"--- Выполнено ---\", \"Ответ от сервера получен (Категории)\");\n+                    categoryAdapter.notifyDataSetChanged();\n+                } catch (JSONException e) {\n+                    e.printStackTrace();\n+                }\n+            } else {\n+                Log.d(\" --- Ошибка ---\", \"Нет или неверный ответ от сервера\");\n+            }\n+        }\n+    }\n+\n+    // Проверка ответа\n+    private boolean checkResult(String result) {\n+        if (!result.equals(\"null\") || !result.equals(\"[]\") || !result.equals(\"\") || !result.equals(\"{}\"))\n+            return true;\n+        else return false;\n+    }\n+}"
  },
  {
    "sha": "72adf74465a267d8eaf80ad3832a4b855dcd25b1",
    "filename": "app/src/main/java/com/example/ankas/Fragments/InfoFragment.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Fragments/InfoFragment.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Fragments/InfoFragment.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Fragments/InfoFragment.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,25 @@\n+package com.example.ankas.Fragments;\n+\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+\n+import com.example.ankas.R;\n+\n+public class InfoFragment extends Fragment {\n+    Context context;\n+    View InfoFragmentView;\n+    @Nullable\n+    @Override\n+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n+        InfoFragmentView = inflater.inflate(R.layout.info_fragment, null);\n+        context = InfoFragmentView.getContext();\n+        return InfoFragmentView;\n+    }\n+}"
  },
  {
    "sha": "4ec7e216361b6e4dfe828826a4f3a48400e6e712",
    "filename": "app/src/main/java/com/example/ankas/Fragments/MainFragment.java",
    "status": "added",
    "additions": 561,
    "deletions": 0,
    "changes": 561,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Fragments/MainFragment.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Fragments/MainFragment.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Fragments/MainFragment.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,561 @@\n+package com.example.ankas.Fragments;\n+\n+import android.app.AlertDialog;\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.AsyncTask;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.EditText;\n+import android.widget.ImageView;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+import android.widget.Toast;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.fragment.app.Fragment;\n+\n+import com.example.ankas.Adapter.CategoryAdapter;\n+import com.example.ankas.Adapter.ProductAdapter;\n+import com.example.ankas.CategoryAndProduct;\n+import com.example.ankas.Components.ExpandableHeightGridView;\n+import com.example.ankas.Components.MySliderImage;\n+import com.example.ankas.MainActivity;\n+import com.example.ankas.Objects.Basket;\n+import com.example.ankas.Objects.Category;\n+import com.example.ankas.Objects.Product;\n+import com.example.ankas.ProductActivity;\n+import com.example.ankas.R;\n+import com.squareup.picasso.Picasso;\n+\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class MainFragment extends Fragment {\n+    Context context;\n+    View MainFragmentView;\n+    // Категории\n+    List<Category> categoryList;\n+    ExpandableHeightGridView grid_category;\n+    CategoryAdapter categoryAdapter;\n+    // Популярные товары\n+    ExpandableHeightGridView grid_popularProduct;\n+    List<Product> popularProductList;\n+    ProductAdapter popularProductAdapter;\n+\n+    @Nullable\n+    @Override\n+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n+        MainFragmentView = inflater.inflate(R.layout.main_fragment, null);\n+        context = MainFragmentView.getContext();\n+        // Категории товаров\n+        categoryList = new ArrayList<>();\n+        grid_category = MainFragmentView.findViewById(R.id.grid_category);\n+        grid_category.setExpanded(true);\n+        categoryAdapter = new CategoryAdapter(categoryList, context);\n+        grid_category.setAdapter(categoryAdapter);\n+        // Баннер\n+        new getImageBanner().execute(\"http://anndroidankas.h1n.ru/mobile-api/MainScreen/Banner\");\n+        // Категории\n+        new getCategory().execute(\"http://anndroidankas.h1n.ru/mobile-api/Product/ProductOrCategory/0\");\n+        // Популярные категории\n+        new getPopularCategory().execute(\"http://anndroidankas.h1n.ru/mobile-api/MainScreen/PopularCategories\");\n+        // Популярные товары\n+        popularProduct();\n+        // Обратный звонок\n+        call();\n+        // Возрат view для отрисовки\n+        return MainFragmentView;\n+    }\n+\n+    // Баннер\n+    private class getImageBanner extends AsyncTask<String, Void, String> {\n+\n+        @Override\n+        protected String doInBackground(String... strings) {\n+            try {\n+                URL url = new URL(strings[0]);\n+                HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+                connection.connect();\n+                // Получение ответа\n+                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n+                StringBuilder result = new StringBuilder();\n+                String line = \"\";\n+                while ((line = reader.readLine()) != null)\n+                    result.append(line);\n+                return result.toString();\n+            } catch (MalformedURLException e) {\n+                e.printStackTrace();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            return \"null\";\n+        }\n+\n+        @Override\n+        protected void onPostExecute(String result) {\n+            super.onPostExecute(result);\n+            // Парсинг ответа\n+            if(checkResult(result)) {\n+                try {\n+                    List<String> listImage = new ArrayList<>();\n+                    JSONArray jsonArray = new JSONArray(result);\n+                    for (int position = 0; position < jsonArray.length(); position++) {\n+                        JSONObject jsonObjectImage = jsonArray.getJSONObject(position);\n+                        String nameImage = jsonObjectImage.getString(\"name_image\");\n+                        listImage.add(nameImage);\n+                        Log.d(\"Name image banner\", nameImage);\n+                    }\n+                    MySliderImage slider_banner = MainFragmentView.findViewById(R.id.slider_banner);\n+                    slider_banner.setListImage(listImage);\n+                    slider_banner.setTimer(10000);\n+                } catch (JSONException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+    }\n+\n+    // Популярные категории\n+    private class getPopularCategory extends AsyncTask<String, Void, String> {\n+\n+        @Override\n+        protected String doInBackground(String... strings) {\n+            try {\n+                // Параметры подключения\n+                URL url = new URL(strings[0]);\n+                HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+                connection.connect();\n+                // Считывание ответа\n+                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n+                String line = \"\";\n+                StringBuffer result = new StringBuffer();\n+                while ((line = reader.readLine()) != null)\n+                    result.append(line);\n+                return result.toString();\n+            } catch (MalformedURLException e) {\n+                e.printStackTrace();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            return \"null\";\n+        }\n+\n+        @Override\n+        protected void onPostExecute(String result) {\n+            super.onPostExecute(result);\n+            if (checkResult(result)) {\n+                try {\n+                    JSONArray jsonArrayCategory = new JSONArray(result);\n+                    for (int position = 0; position < jsonArrayCategory.length(); position++) {\n+                        JSONObject jsonObjectCategory = jsonArrayCategory.getJSONObject(position);\n+                        int id_ = jsonObjectCategory.getInt(\"id_\");\n+                        String name = jsonObjectCategory.getString(\"name\");\n+                        new getPopularProductCategories()\n+                                .execute((\"http://anndroidankas.h1n.ru/mobile-api/MainScreen/PopularProductCategories/\" + id_),\n+                                        name,\n+                                        \"null\");\n+                    }\n+                } catch (JSONException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+    }\n+\n+    // Популярные товары по категориям\n+    private class getPopularProductCategories extends AsyncTask<String, Void, String> {\n+        String nameCategory;\n+        String image_category;\n+\n+        @Override\n+        protected String doInBackground(String... strings) {\n+            nameCategory = strings[1];\n+            image_category = strings[2];\n+            try {\n+                // Параметры подключения\n+                URL url = new URL(strings[0]);\n+                HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+                connection.connect();\n+                // Считывание ответа\n+                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n+                String line = \"\";\n+                StringBuffer result = new StringBuffer();\n+                while ((line = reader.readLine()) != null)\n+                    result.append(line);\n+                return result.toString();\n+            } catch (MalformedURLException e) {\n+                e.printStackTrace();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            return \"null\";\n+        }\n+\n+        @Override\n+        protected void onPostExecute(String result) {\n+            super.onPostExecute(result);\n+            if (checkResult(result)) {\n+                try {\n+                    JSONArray jsonArrayProduct = new JSONArray(result);\n+                    List<Product> productList = new ArrayList<>();\n+                    for (int position = 0; position < jsonArrayProduct.length(); position++) {\n+                        JSONObject jsonObjectProduct = jsonArrayProduct.getJSONObject(position);\n+                        Product product = new Product(\n+                                jsonObjectProduct.getInt(\"id_\"),\n+                                jsonObjectProduct.getString(\"name\"),\n+                                jsonObjectProduct.getInt(\"price\"),\n+                                jsonObjectProduct.getInt(\"quantity\"),\n+                                null,\n+                                jsonObjectProduct.getString(\"brand_name\"),\n+                                jsonObjectProduct.getString(\"brand_country\"),\n+                                jsonObjectProduct.getString(\"name_image\")\n+                        );\n+                        productList.add(product);\n+                    }\n+                    popularCategory(nameCategory, productList);\n+                } catch (JSONException e) {\n+                    e.printStackTrace();\n+                }\n+            } else {\n+                Log.d(\"Ошибка:\", \"Не удалось получить популярные категории\");\n+            }\n+        }\n+    }\n+\n+    // Категорий\n+    private class getCategory extends AsyncTask<String, Void, String> {\n+\n+        @Override\n+        protected String doInBackground(String... strings) {\n+            try {\n+                // Подключение\n+                URL url = new URL(strings[0]);\n+                HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+                connection.connect();\n+                // Считывание ответа\n+                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n+                String line = \"\";\n+                StringBuffer result = new StringBuffer();\n+                while ((line = reader.readLine()) != null)\n+                    result.append(line);\n+                return result.toString();\n+            } catch (MalformedURLException e) {\n+                e.printStackTrace();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            return \"null\";\n+        }\n+\n+        @Override\n+        protected void onPostExecute(String result) {\n+            super.onPostExecute(result);\n+            if (checkResult(result)) {\n+                try {\n+                    categoryList.clear();\n+                    // Парсинг ответа от сервера\n+                    JSONObject jsonObjectResult = new JSONObject(result);\n+                    JSONArray jsonArrayCategory = jsonObjectResult.getJSONArray(\"Category\");\n+                    for (int position = 0; position < 8; position++) {\n+                        JSONObject jsonObjectCategory = jsonArrayCategory.getJSONObject(position);\n+                        Category category = new Category(\n+                                jsonObjectCategory.getInt(\"id_\"),\n+                                jsonObjectCategory.getString(\"name\"),\n+                                jsonObjectCategory.getString(\"description\"),\n+                                jsonObjectCategory.getString(\"image\")\n+                        );\n+                        categoryList.add(category);\n+                    }\n+                    Category category = new Category(\n+                            0,\n+                            \"Просмотреть все категории\",\n+                            null,\n+                            \"point.jpg\"\n+                    );\n+                    categoryList.add(category);\n+                    Log.d(\"--- Выполнено ---\", \"Ответ от сервера получен (Категории)\");\n+                    categoryAdapter.notifyDataSetChanged();\n+                } catch (JSONException e) {\n+                    e.printStackTrace();\n+                }\n+            } else {\n+                Log.d(\" --- Ошибка ---\", \"Нет или неверный ответ от сервера\");\n+            }\n+        }\n+    }\n+\n+    // Получение популярных товаров\n+    private class getPopularProduct extends AsyncTask<String, Void, String> {\n+\n+        @Override\n+        protected String doInBackground(String... strings) {\n+            try {\n+                // Подключение\n+                URL url = new URL(strings[0]);\n+                HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+                connection.connect();\n+                // Считывание ответа\n+                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n+                String line = \"\";\n+                StringBuffer result = new StringBuffer();\n+                while ((line = reader.readLine()) != null)\n+                    result.append(line);\n+                return result.toString();\n+            } catch (MalformedURLException e) {\n+                e.printStackTrace();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            return \"null\";\n+        }\n+\n+        // Парсинг ответа\n+        @Override\n+        protected void onPostExecute(String result) {\n+            super.onPostExecute(result);\n+            if (checkResult(result)) {\n+                try {\n+                    // Парсинг ответа от сервера\n+                    JSONObject jsonObjectResult = new JSONObject(result);\n+                    if (jsonObjectResult.getString(\"Param\").equals(\"Product\")) {\n+                        // Товары\n+                        JSONArray jsonArrayProduct = jsonObjectResult.getJSONArray(\"Product\");\n+                        parseProduct(jsonArrayProduct);\n+                        Log.d(\"--- Выполнено ---\", \"Ответ от сервера получен (Категории)\");\n+                        grid_popularProduct.setExpanded(true);\n+                    }\n+                } catch (JSONException e) {\n+                    e.printStackTrace();\n+                }\n+            } else {\n+                Log.d(\" --- Ошибка ---\", \"Нет или неверный ответ от сервера\");\n+            }\n+        }\n+    }\n+\n+    // Популярные категории\n+    private void popularCategory(String nameCategory, List<Product> productList) {\n+        // Компоненты на главном экране\n+        LinearLayout layout_popular_category = MainFragmentView.findViewById(R.id.layout_popular_category);\n+        View viewItem_popularCategory = View.inflate(context, R.layout.item_popular_category, null);\n+        TextView txt_name = viewItem_popularCategory.findViewById(R.id.txt_name);\n+        LinearLayout layout_product = viewItem_popularCategory.findViewById(R.id.layout_product);\n+        txt_name.setText(nameCategory);\n+        // Товары\n+        for (int position = 0; position < productList.size(); position++) {\n+            View viewItem = View.inflate(context, R.layout.item_product, null);\n+            viewItem.setLayoutParams(new LinearLayout.LayoutParams(500, ViewGroup.LayoutParams.WRAP_CONTENT));\n+            TextView txt_name_product = viewItem.findViewById(R.id.txt_name);\n+            ImageView image_product = viewItem.findViewById(R.id.image_product);\n+            TextView txt_price = viewItem.findViewById(R.id.txt_price);\n+            final Button btn_by = viewItem.findViewById(R.id.btn_by);\n+            TextView txt_brand = viewItem.findViewById(R.id.txt_brand);\n+            TextView txt_available = viewItem.findViewById(R.id.txt_available);\n+            final Product product = productList.get(position);\n+            txt_name_product.setText(product.getName());\n+            Picasso.get().load(\"http://anndroidankas.h1n.ru/image/\" + product.getName_image())\n+                    .placeholder(R.drawable.ico_small)\n+                    .into(image_product);\n+            txt_price.setText(setPrice(product.getPrice()));\n+            txt_brand.setText(product.getBrand_name() + \", \" + product.getBrand_country());\n+            // Кол-во товаров\n+            if (product.getQuantity() > 0) {\n+                txt_available.setText(\"В наличии\");\n+            } else {\n+                txt_available.setText(\"Под заказ\");\n+            }\n+            // Купить товар\n+            btn_by.setOnClickListener(new View.OnClickListener() {\n+                @Override\n+                public void onClick(View view) {\n+                    btn_by(product.getId_(),\n+                            product.getName(),\n+                            product.getName_image(),\n+                            product.getPrice());\n+                }\n+            });\n+            // Переход к подробностям о товаре\n+            image_product.setOnClickListener(new View.OnClickListener() {\n+                @Override\n+                public void onClick(View view) {\n+                    Intent intent = new Intent(context, ProductActivity.class);\n+                    intent.putExtra(\"Id_\", product.getId_())\n+                            .putExtra(\"Name\", product.getName())\n+                            .putExtra(\"Price\", product.getPrice())\n+                            .putExtra(\"Quantity\", product.getQuantity())\n+                            .putExtra(\"Description\", product.getDescription())\n+                            .putExtra(\"Name_image\", product.getName_image())\n+                            .putExtra(\"Brand_country\", product.getBrand_country())\n+                            .putExtra(\"Brand_name\", product.getBrand_name());\n+                    context.startActivity(intent);\n+                }\n+            });\n+            // Вывод на экран\n+            layout_product.addView(viewItem);\n+        }\n+        // Вывод на экран\n+        layout_popular_category.addView(viewItem_popularCategory);\n+    }\n+\n+    // Диалоговое окно покупки товаров\n+    private void btn_by(int id, String name, String image, int price) {\n+        // Добавление товара в корзину\n+        Basket.addProductBasket(context, id, name, image, price);\n+        // Создание и присвоение макета к диалогу\n+        AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+        View viewItemDialog = View.inflate(context, R.layout.dialog_by, null);\n+        builder.setView(viewItemDialog);\n+        final Dialog dialogBy = builder.create();\n+        TextView txt_name_dialog = viewItemDialog.findViewById(R.id.txt_name_dialog);\n+        ImageView image_dialog = viewItemDialog.findViewById(R.id.image_dialog);\n+        // Вывод данных\n+        txt_name_dialog.setText(name);\n+        Picasso.get().load(\"http://anndroidankas.h1n.ru/image/\" + image)\n+                .placeholder(R.drawable.ico_small)\n+                .into(image_dialog);\n+        // Продолжить покупки\n+        Button btn_resume_dialog = viewItemDialog.findViewById(R.id.btn_resume_dialog);\n+        btn_resume_dialog.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                dialogBy.cancel();\n+            }\n+        });\n+        // Перейти к оформлению\n+        Button btn_arrange_dialog = viewItemDialog.findViewById(R.id.btn_arrange_dialog);\n+        btn_arrange_dialog.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                dialogBy.cancel();\n+                Intent intent = new Intent(context, MainActivity.class);\n+                intent.putExtra(\"ItemFragment\", R.id.item_basket);\n+                context.startActivity(intent);\n+            }\n+        });\n+        // Вывод диалога\n+        dialogBy.show();\n+    }\n+\n+    // конвертация цена\n+    private String setPrice(int price) {\n+        StringBuffer newPrice = new StringBuffer(String.valueOf(price) + \" ₽\");\n+        int position = 5;\n+        while (newPrice.length() > position) {\n+            newPrice = newPrice.insert((newPrice.length() - position), \" \");\n+            position += 4;\n+        }\n+        return newPrice.toString();\n+    }\n+\n+    // Популярные товары\n+    private void popularProduct() {\n+        popularProductList = new ArrayList<>();\n+        grid_popularProduct = MainFragmentView.findViewById(R.id.grid_popularProduct);\n+        new getPopularProduct().execute(\"http://anndroidankas.h1n.ru/mobile-api/MainScreen/PopularProduct/0/30\");\n+        popularProductAdapter = new ProductAdapter(popularProductList, context);\n+        grid_popularProduct.setAdapter(popularProductAdapter);\n+    }\n+\n+    // Парсинг товаров\n+    private void parseProduct(JSONArray jsonArrayProduct) throws JSONException {\n+        for (int position = 0; position < jsonArrayProduct.length(); position++) {\n+            JSONObject jsonObjectProduct = jsonArrayProduct.getJSONObject(position);\n+            Product product = new Product(\n+                    jsonObjectProduct.getInt(\"id_\"),\n+                    jsonObjectProduct.getString(\"name\"),\n+                    jsonObjectProduct.getInt(\"price\"),\n+                    jsonObjectProduct.getInt(\"quantity\"),\n+                    jsonObjectProduct.getString(\"description\"),\n+                    jsonObjectProduct.getString(\"brand_name\"),\n+                    jsonObjectProduct.getString(\"brand_country\"),\n+                    jsonObjectProduct.getString(\"name_image\")\n+            );\n+            popularProductList.add(product);\n+        }\n+        // Усли не хватает на заполнение\n+        while ((popularProductList.size() % 2) != 0) {\n+            Product product = new Product(\n+                    0,\n+                    \"null\",\n+                    0,\n+                    0,\n+                    \"null\",\n+                    \"null\",\n+                    \"null\",\n+                    \"null\"\n+            );\n+            popularProductList.add(product);\n+        }\n+        popularProductAdapter.notifyDataSetChanged();\n+    }\n+\n+    // Проверка ответа\n+    private boolean checkResult(String result) {\n+        if (!result.equals(\"null\") || !result.equals(\"[]\") || !result.equals(\"\") || !result.equals(\"{}\"))\n+            return true;\n+        else return false;\n+    }\n+\n+    // Звонки\n+    private void call() {\n+        TextView txt_tell = MainFragmentView.findViewById(R.id.txt_tell);\n+        TextView txt_callBack = MainFragmentView.findViewById(R.id.txt_callBack);\n+        // Позвонить в компанию\n+        txt_tell.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+\n+            }\n+        });\n+        // Заказать обратный звонок\n+        txt_callBack.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+                View viewItemCall = View.inflate(context, R.layout.dialog_call_back, null);\n+                builder.setView(viewItemCall);\n+                Dialog dialogCallBack = builder.create();\n+                EditText txt_name = viewItemCall.findViewById(R.id.txt_name);\n+                EditText txt_tell = viewItemCall.findViewById(R.id.txt_tell);\n+                Button btn_arrange_dialog = viewItemCall.findViewById(R.id.btn_arrange_dialog);\n+                String name = txt_name.getText().toString();\n+                String tell = txt_tell.getText().toString();\n+                int check = 0;\n+                // Проверка имени\n+                if (name.length() > 2) {\n+                    check++;\n+                } else {\n+                    Toast.makeText(context, \"Заполните имя\", Toast.LENGTH_LONG).show();\n+                }\n+                // Проверка телефона\n+                if (tell.length() > 3) {\n+                    check++;\n+                } else {\n+                    Toast.makeText(context, \"Заполните номер телефона\", Toast.LENGTH_LONG).show();\n+                }\n+                // Отправка данных на сервер\n+                if (check == 2) {\n+                    Toast.makeText(context, \"Запрос в обработке, ожидайте звонка\", Toast.LENGTH_LONG).show();\n+                }\n+                dialogCallBack.show();\n+            }\n+        });\n+    }\n+}"
  },
  {
    "sha": "758941c351c0cde1c2ea382038e1386c870abec1",
    "filename": "app/src/main/java/com/example/ankas/MainActivity.java",
    "status": "modified",
    "additions": 90,
    "deletions": 0,
    "changes": 90,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/MainActivity.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/MainActivity.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/MainActivity.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -1,14 +1,104 @@\n package com.example.ankas;\n \n+import androidx.annotation.NonNull;\n import androidx.appcompat.app.AppCompatActivity;\n+import androidx.fragment.app.Fragment;\n \n+import android.content.Context;\n+import android.content.Intent;\n import android.os.Bundle;\n+import android.view.MenuItem;\n+import android.view.View;\n+import android.widget.ImageView;\n+\n+import com.example.ankas.Fragments.BasketFragment;\n+import com.example.ankas.Fragments.CategoryFragment;\n+import com.example.ankas.Fragments.InfoFragment;\n+import com.example.ankas.Fragments.MainFragment;\n+import com.google.android.material.bottomnavigation.BottomNavigationView;\n \n public class MainActivity extends AppCompatActivity {\n+    static BottomNavigationView bottom_nav;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         setContentView(R.layout.activity_main);\n+        // Верхнее меню\n+        toolbar();\n+        // Нижнее меню\n+        bottomNav();\n+    }\n+\n+    // Верхнее меню\n+    private void toolbar() {\n+        ImageView img_search = findViewById(R.id.img_search);\n+        ImageView img_logo = findViewById(R.id.img_logo);\n+        img_logo.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                bottom_nav.setSelectedItemId(R.id.item_main);\n+            }\n+        });\n+        img_search.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                Intent intent = new Intent(MainActivity.this, SearchActivity.class);\n+                startActivity(intent);\n+            }\n+        });\n+    }\n+\n+    // Настройки нижнего меню\n+    public void bottomNav() {\n+        // Получение фрагмента\n+        int itemId = getIntent().getIntExtra(\"ItemFragment\", 0);\n+        switch (itemId) {\n+            case R.id.item_main:\n+                getSupportFragmentManager().beginTransaction()\n+                        .replace(R.id.layout_content, new MainFragment()).commit();\n+                break;\n+            case R.id.item_basket:\n+                getSupportFragmentManager().beginTransaction()\n+                        .replace(R.id.layout_content, new BasketFragment()).commit();\n+                break;\n+            default:\n+                getSupportFragmentManager().beginTransaction()\n+                        .replace(R.id.layout_content, new MainFragment()).commit();\n+                break;\n+\n+        }\n+        bottom_nav = findViewById(R.id.bottom_nav);\n+        bottom_nav.setOnNavigationItemSelectedListener(navSelectedListener);\n+    }\n+    // Обработчик нажатий нижнего меню\n+    BottomNavigationView.OnNavigationItemSelectedListener navSelectedListener =\n+            new BottomNavigationView.OnNavigationItemSelectedListener() {\n+                @Override\n+                public boolean onNavigationItemSelected(@NonNull MenuItem item) {\n+                    switch (item.getItemId()) {\n+                        case R.id.item_main:\n+                            getSupportFragmentManager().beginTransaction()\n+                                    .replace(R.id.layout_content, new MainFragment()).commit();\n+                            break;\n+                        case R.id.item_category:\n+                            getSupportFragmentManager().beginTransaction()\n+                                    .replace(R.id.layout_content, new CategoryFragment()).commit();\n+                            break;\n+                        case R.id.item_basket:\n+                            getSupportFragmentManager().beginTransaction()\n+                                    .replace(R.id.layout_content, new BasketFragment()).commit();\n+                            break;\n+                        case R.id.item_user:\n+                            getSupportFragmentManager().beginTransaction()\n+                                    .replace(R.id.layout_content, new InfoFragment()).commit();\n+                            break;\n+                    }\n+                    return true;\n+                }\n+            };\n+\n+    public static void selectItem(int item) {\n+        bottom_nav.setSelectedItemId(item);\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "803cdf76f1a3769b7aaa1c62725ceee450fdd255",
    "filename": "app/src/main/java/com/example/ankas/Objects/Basket.java",
    "status": "added",
    "additions": 152,
    "deletions": 0,
    "changes": 152,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Objects/Basket.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Objects/Basket.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Objects/Basket.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,152 @@\n+package com.example.ankas.Objects;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class Basket {\n+    private static List<Basket> basketList;\n+\n+    private int id_;\n+    private String name;\n+    private String image;\n+    private int quantity;\n+    private int price;\n+\n+    // Иницелизация данных корзины\n+    public Basket(int id_, String name, String image, int quantity, int price) {\n+        this.id_ = id_;\n+        this.name = name;\n+        this.image = image;\n+        this.quantity = quantity;\n+        this.price = price;\n+    }\n+\n+    // Редоктирование листа\n+    public static List<Basket> getBasketList() {\n+        return basketList;\n+    }\n+\n+    // Добавление товара в корззину\n+    public static void addProductBasket(Context context, int id_, String name, String image, int price) {\n+        Basket basketItem = new Basket(\n+                id_,\n+                name,\n+                image,\n+                1,\n+                price\n+        );\n+        basketList.add(basketItem);\n+        int i = basketList.size();\n+        saveSystemList(context);\n+    }\n+\n+    // Получить кол-во товаров в корзине\n+    public static int getSizeBasket() {\n+        int size = 0;\n+        try {\n+            size = basketList.size();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        return size;\n+    }\n+\n+    // Получить общую сумму товаров в корзине\n+    public static int getSumProduct() {\n+        int sum = 0;\n+        for (int position = 0; position < basketList.size(); position++) {\n+            sum += basketList.get(position).getPrice()\n+                    * basketList.get(position).getQuantity();\n+        }\n+        return sum;\n+    }\n+\n+    // есть ли товар в корзине\n+    public static boolean checkProductBasket(int idProduct) {\n+        for (int position = 0; position < getSizeBasket(); position++) {\n+            if (basketList.get(position).getId_() == idProduct)\n+                return true;\n+        }\n+        return false;\n+    }\n+\n+    // Сохранение данных в память\n+    public static void saveSystemList(Context context) {\n+        SharedPreferences sharedPreferences =\n+                context.getSharedPreferences(\"Settings\", Context.MODE_PRIVATE);\n+        SharedPreferences.Editor editor = sharedPreferences.edit();\n+        int count = getSizeBasket();\n+        editor.putInt(\"countItem\", count).apply();\n+        for (int position = 0; position < count; position++) {\n+            Basket basket = getBasketList().get(position);\n+            editor.putInt(\"id\" + position, basket.id_).apply();\n+            editor.putString(\"name\" + position, basket.getName()).apply();\n+            editor.putString(\"image\" + position, basket.getImage()).apply();\n+            editor.putInt(\"quantity\" + position, basket.getQuantity()).apply();\n+            editor.putInt(\"price\" + position, basket.getPrice()).apply();\n+        }\n+    }\n+\n+    // Получение данных из памяти\n+    public static void getSystemList(Context context) {\n+        basketList = new ArrayList<>();\n+        // Отчищаем List\n+        basketList.clear();\n+        // Считываем данные\n+        SharedPreferences sharedPreferences =\n+                context.getSharedPreferences(\"Settings\", Context.MODE_PRIVATE);\n+        int countItem = sharedPreferences.getInt(\"countItem\", 0);\n+        for (int position = 0; position < countItem; position++) {\n+            Basket basket = new Basket(\n+                    sharedPreferences.getInt(\"id\" + position, 0),\n+                    sharedPreferences.getString(\"name\" + position, null),\n+                    sharedPreferences.getString(\"image\" + position, null),\n+                    sharedPreferences.getInt(\"quantity\" + position, 0),\n+                    sharedPreferences.getInt(\"price\" + position, 0)\n+            );\n+            basketList.add(basket);\n+        }\n+    }\n+\n+    // Удаление элемента\n+    public static void deleteItemBasket(Context context, int position) {\n+        basketList.remove(position);\n+        saveSystemList(context);\n+    }\n+\n+    // Установка кол-во товара\n+    public int setQuantity(Context context, int value) {\n+        quantity += value;\n+        saveSystemList(context);\n+        return quantity;\n+    }\n+\n+    // Получение отдальных данных\n+    public int getId_() {\n+        return id_;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public String getImage() {\n+        return image;\n+    }\n+\n+    public int getQuantity() {\n+        return quantity;\n+    }\n+\n+    public int getPrice() {\n+        return price;\n+    }\n+\n+    public int getSumPrice() {\n+        int sum = price * quantity;\n+        return sum;\n+    }\n+}"
  },
  {
    "sha": "809110162b66033009737ff950472945409b8173",
    "filename": "app/src/main/java/com/example/ankas/Objects/Category.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Objects/Category.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Objects/Category.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Objects/Category.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,31 @@\n+package com.example.ankas.Objects;\n+\n+public class Category {\n+    int id_;\n+    String name;\n+    String description;\n+    String image;\n+\n+    public Category(int id_, String name, String description, String image) {\n+        this.id_ = id_;\n+        this.name = name;\n+        this.description = description;\n+        this.image = image;\n+    }\n+\n+    public int getId_() {\n+        return id_;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public String getImage() {\n+        return image;\n+    }\n+}"
  },
  {
    "sha": "dc505db9e1c794d7686fedfa33adb01909d49616",
    "filename": "app/src/main/java/com/example/ankas/Objects/Characteristic.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Objects/Characteristic.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Objects/Characteristic.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Objects/Characteristic.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,19 @@\n+package com.example.ankas.Objects;\n+\n+public class Characteristic {\n+    String nameCharacteristic;\n+    String characteristic;\n+\n+    public Characteristic(String nameCharacteristic, String characteristic) {\n+        this.nameCharacteristic = nameCharacteristic;\n+        this.characteristic = characteristic;\n+    }\n+\n+    public String getNameCharacteristic() {\n+        return nameCharacteristic;\n+    }\n+\n+    public String getCharacteristic() {\n+        return characteristic;\n+    }\n+}"
  },
  {
    "sha": "be08c5cf210908e35dacae245e2c99825f444460",
    "filename": "app/src/main/java/com/example/ankas/Objects/Product.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Objects/Product.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/Objects/Product.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/Objects/Product.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,56 @@\n+package com.example.ankas.Objects;\n+\n+public class Product {\n+\n+    int id_;\n+    String name;\n+    int price;\n+    int quantity;\n+    String description;\n+    String brand_name;\n+    String brand_country;\n+    String name_image;\n+\n+    public Product(int id_, String name, int price, int quantity, String description, String brand_name, String brand_country, String name_image) {\n+        this.id_ = id_;\n+        this.name = name;\n+        this.price = price;\n+        this.quantity = quantity;\n+        this.description = description;\n+        this.brand_name = brand_name;\n+        this.brand_country = brand_country;\n+        this.name_image = name_image;\n+    }\n+\n+    public int getId_() {\n+        return id_;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public int getPrice() {\n+        return price;\n+    }\n+\n+    public int getQuantity() {\n+        return quantity;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public String getBrand_name() {\n+        return brand_name;\n+    }\n+\n+    public String getBrand_country() {\n+        return brand_country;\n+    }\n+\n+    public String getName_image() {\n+        return name_image;\n+    }\n+}"
  },
  {
    "sha": "eb96e35a0e71d14b09cb38066d2bd43ddea43bb2",
    "filename": "app/src/main/java/com/example/ankas/ProductActivity.java",
    "status": "added",
    "additions": 310,
    "deletions": 0,
    "changes": 310,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/ProductActivity.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/ProductActivity.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/ProductActivity.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,310 @@\n+package com.example.ankas;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import android.app.AlertDialog;\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.AsyncTask;\n+import android.os.Bundle;\n+import android.text.Html;\n+import android.util.Log;\n+import android.view.View;\n+import android.widget.Button;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+\n+import com.example.ankas.Adapter.CharacteristicAdapter;\n+import com.example.ankas.Components.ExpandableHeightGridView;\n+import com.example.ankas.Components.MySliderImage;\n+import com.example.ankas.Objects.Basket;\n+import com.example.ankas.Objects.Characteristic;\n+import com.squareup.picasso.Picasso;\n+\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class ProductActivity extends AppCompatActivity {\n+    TextView txt_name;\n+    TextView txt_quantity;\n+    TextView txt_price;\n+    TextView txt_idProduct;\n+    TextView txt_brand;\n+    TextView txt_description;\n+    Button btn_by;\n+    ExpandableHeightGridView grid_specifications;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_product);\n+        // Верхнее меню\n+        toolbar();\n+        // Обьявление компонентов\n+        declaringComponents();\n+        // Получение значений с предыдущей формы\n+        int id_ = getIntent().getIntExtra(\"Id_\", 0);\n+        String name = getIntent().getStringExtra(\"Name\");\n+        int quantity = getIntent().getIntExtra(\"Quantity\", 0);\n+        int price = getIntent().getIntExtra(\"Price\", 0);\n+        String description = getIntent().getStringExtra(\"Description\");\n+        String name_image = getIntent().getStringExtra(\"Name_image\");\n+        // Вывод информации\n+        txt_name.setText(name);\n+        txt_quantity.setText(quantity + \"шт.\");\n+        txt_price.setText(\"Цена: \" + setPrice(price));\n+        txt_idProduct.setText(\"Код товара: \" + id_);\n+        txt_brand.setText(getIntent().getStringExtra(\"Brand_name\")\n+                + \", \" + getIntent().getStringExtra(\"Brand_country\"));\n+        // Описание товара\n+        if (description != null && !description.equals(\"\"))\n+            txt_description.setText(Html.fromHtml(description));\n+        // Получение изображения\n+        new getImage().execute(\"http://anndroidankas.h1n.ru/mobile-api/Product/Image/\" + id_);\n+        // Получение информации о товаре\n+        new getInfoProduct().execute(\"http://anndroidankas.h1n.ru/mobile-api/Product/Product/\" + id_);\n+        // Получение характеристики\n+        new getSpecifications().execute(\"http://anndroidankas.h1n.ru/mobile-api/Product/Characteristics/\" + id_);\n+        // Кнопка покупки товара\n+        btn_by(id_, name, name_image, price);\n+    }\n+\n+    // Обьявление компонентов\n+    private void declaringComponents() {\n+        txt_name = findViewById(R.id.txt_name);\n+        txt_quantity = findViewById(R.id.txt_quantity);\n+        txt_price = findViewById(R.id.txt_price);\n+        txt_idProduct = findViewById(R.id.txt_idProduct);\n+        txt_brand = findViewById(R.id.txt_brand);\n+        txt_description = findViewById(R.id.txt_description);\n+        grid_specifications = findViewById(R.id.grid_specifications);\n+        btn_by = findViewById(R.id.btn_by);\n+    }\n+\n+    // Верхнее меню\n+    private void toolbar() {\n+        ImageView img_logo = findViewById(R.id.img_logo);\n+        ImageView img_search = findViewById(R.id.img_search);\n+        img_logo.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                Intent intent = new Intent(ProductActivity.this, MainActivity.class);\n+                intent.putExtra(\"ItemFragment\", R.id.item_main);\n+                startActivity(intent);\n+            }\n+        });\n+        img_search.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                Intent intent = new Intent(ProductActivity.this, SearchActivity.class);\n+                startActivity(intent);\n+            }\n+        });\n+    }\n+\n+    // Изображения\n+    private class getImage extends AsyncTask<String, Void, String> {\n+\n+        @Override\n+        protected String doInBackground(String... strings) {\n+            try {\n+                URL url = new URL(strings[0]);\n+                HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+                connection.connect();\n+                // Получение ответа\n+                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n+                StringBuilder result = new StringBuilder();\n+                String line = \"\";\n+                while ((line = reader.readLine()) != null)\n+                    result.append(line);\n+                return result.toString();\n+            } catch (MalformedURLException e) {\n+                e.printStackTrace();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            return \"null\";\n+        }\n+\n+        @Override\n+        protected void onPostExecute(String result) {\n+            super.onPostExecute(result);\n+            // Парсинг ответа\n+            if (checkResult(result)) {\n+                try {\n+                    List<String> listImage = new ArrayList<>();\n+                    JSONArray jsonArray = new JSONArray(result);\n+                    for (int position = 0; position < jsonArray.length(); position++) {\n+                        JSONObject jsonObjectImage = jsonArray.getJSONObject(position);\n+                        String nameImage = jsonObjectImage.getString(\"name_image\");\n+                        listImage.add(nameImage);\n+                    }\n+                    MySliderImage slider_image = findViewById(R.id.slider_image);\n+                    slider_image.setListImage(listImage);\n+                } catch (JSONException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+    }\n+\n+    // Получение информации о товаре\n+    private class getInfoProduct extends AsyncTask<String, Void, String> {\n+\n+        @Override\n+        protected String doInBackground(String... strings) {\n+            try {\n+                URL url = new URL(strings[0]);\n+                HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+                connection.connect();\n+                // Считывание ответа\n+                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\n+                StringBuffer result = new StringBuffer();\n+                String line = \"\";\n+                while ((line = reader.readLine()) != null)\n+                    result.append(line);\n+                return result.toString();\n+            } catch (MalformedURLException e) {\n+                e.printStackTrace();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            return \"null\";\n+        }\n+\n+        @Override\n+        protected void onPostExecute(String s) {\n+            super.onPostExecute(s);\n+        }\n+    }\n+\n+    // Получить характеристики\n+    private class getSpecifications extends AsyncTask<String, Void, String> {\n+\n+        @Override\n+        protected String doInBackground(String... strings) {\n+            try {\n+                // Параметры подключения\n+                URL url = new URL(strings[0]);\n+                HttpURLConnection connection = (HttpURLConnection) url.openConnection();\n+                connection.connect();\n+                // Получение ответа\n+                BufferedReader reader = new BufferedReader(\n+                        new InputStreamReader(connection.getInputStream()));\n+                StringBuilder result = new StringBuilder();\n+                String line = \"\";\n+                while ((line = reader.readLine()) != null) {\n+                    result.append(line);\n+                }\n+                return result.toString();\n+            } catch (MalformedURLException e) {\n+                e.printStackTrace();\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+            return \"null\";\n+        }\n+\n+        // Парсинг ответа от сервера\n+        @Override\n+        protected void onPostExecute(String result) {\n+            super.onPostExecute(result);\n+            if (checkResult(result)) {\n+                try {\n+                    List<Characteristic> characteristicList = new ArrayList<>();\n+                    JSONArray jsonArraySpecifications = new JSONArray(result);\n+                    for (int position = 0; position < jsonArraySpecifications.length(); position++) {\n+                        JSONObject jsonObjectCharacteristic\n+                                = jsonArraySpecifications.getJSONObject(position);\n+                        Characteristic characteristic = new Characteristic(\n+                                jsonObjectCharacteristic.getString(\"name\"),\n+                                jsonObjectCharacteristic.getString(\"characteristic\")\n+                        );\n+                        characteristicList.add(characteristic);\n+                    }\n+                    CharacteristicAdapter characteristicAdapter =\n+                            new CharacteristicAdapter(characteristicList, ProductActivity.this);\n+                    grid_specifications.setExpanded(true);\n+                    grid_specifications.setAdapter(characteristicAdapter);\n+                } catch (JSONException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+        }\n+    }\n+\n+    // Диалоговое окно покупки товаров\n+    private void btn_by(final int id, final String name, final String image, final int price) {\n+        // Кнопка покупки\n+        btn_by.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                // Добавление товара в корзину\n+                Basket.addProductBasket(ProductActivity.this, id, name, image, price);\n+                final Context context = ProductActivity.this;\n+                // Создание и присвоение макета к диалогу\n+                AlertDialog.Builder builder = new AlertDialog.Builder(context);\n+                View viewItemDialog = View.inflate(context, R.layout.dialog_by, null);\n+                builder.setView(viewItemDialog);\n+                final Dialog dialogBy = builder.create();\n+                TextView txt_name_dialog = viewItemDialog.findViewById(R.id.txt_name_dialog);\n+                ImageView image_dialog = viewItemDialog.findViewById(R.id.image_dialog);\n+                // Вывод данных\n+                txt_name_dialog.setText(name);\n+                Picasso.get().load(\"http://anndroidankas.h1n.ru/image/\" + image)\n+                        .placeholder(R.drawable.ico_small)\n+                        .into(image_dialog);\n+                // Продолжить покупки\n+                Button btn_resume_dialog = viewItemDialog.findViewById(R.id.btn_resume_dialog);\n+                btn_resume_dialog.setOnClickListener(new View.OnClickListener() {\n+                    @Override\n+                    public void onClick(View view) {\n+                        dialogBy.cancel();\n+                    }\n+                });\n+                // Перейти к оформлению\n+                Button btn_arrange_dialog = viewItemDialog.findViewById(R.id.btn_arrange_dialog);\n+                btn_arrange_dialog.setOnClickListener(new View.OnClickListener() {\n+                    @Override\n+                    public void onClick(View view) {\n+                        dialogBy.cancel();\n+                        Intent intent = new Intent(context, MainActivity.class);\n+                        intent.putExtra(\"ItemFragment\", R.id.item_basket);\n+                        startActivity(intent);\n+                    }\n+                });\n+                // Вывод диалога\n+                dialogBy.show();\n+            }\n+        });\n+    }\n+\n+    // конвертация цена\n+    private String setPrice(int price) {\n+        StringBuffer newPrice = new StringBuffer(String.valueOf(price) + \" ₽\");\n+        int position = 5;\n+        while (newPrice.length() > position) {\n+            newPrice = newPrice.insert((newPrice.length() - position), \" \");\n+            position += 4;\n+        }\n+        return newPrice.toString();\n+    }\n+\n+    // Проверка ответа\n+    private boolean checkResult(String result) {\n+        if (!result.equals(\"null\") || !result.equals(\"[]\") || !result.equals(\"\") || !result.equals(\"{}\"))\n+            return true;\n+        else return false;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "fe83841da40b5f1e7b8f5b758e701886ecc41599",
    "filename": "app/src/main/java/com/example/ankas/SearchActivity.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/SearchActivity.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/SearchActivity.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/SearchActivity.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,23 @@\n+package com.example.ankas;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import android.os.Bundle;\n+import android.view.View;\n+import android.widget.TextView;\n+\n+public class SearchActivity extends AppCompatActivity {\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_search);\n+        TextView txt_cancel = findViewById(R.id.txt_cancel);\n+        txt_cancel.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View view) {\n+                finish();\n+            }\n+        });\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a7b62fb37537a834a68e52d9d317248169cf87fe",
    "filename": "app/src/main/java/com/example/ankas/SplashActivity.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/SplashActivity.java",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/java/com/example/ankas/SplashActivity.java",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/java/com/example/ankas/SplashActivity.java?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,20 @@\n+package com.example.ankas;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import android.content.Intent;\n+import android.os.Bundle;\n+\n+import com.example.ankas.Objects.Basket;\n+\n+public class SplashActivity extends AppCompatActivity {\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_splash);\n+        Basket.getSystemList(this);\n+        Intent intent = new Intent(SplashActivity.this, MainActivity.class);\n+        startActivity(intent);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "74d20bbb57efce66c6ffc8b8b151f565580947bf",
    "filename": "app/src/main/res/anim/slider_movement.xml",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/res/anim/slider_movement.xml",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/res/anim/slider_movement.xml",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/res/anim/slider_movement.xml?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8",
    "patch": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<set xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+    <alpha\n+        android:duration=\"2000\"\n+        android:fromAlpha=\"0.0\"\n+        android:toAlpha=\"1.0\" >\n+    </alpha>\n+</set>\n\\ No newline at end of file"
  },
  {
    "sha": "93fe1e7626cea31b2d8d410518ac35b77202966d",
    "filename": "app/src/main/res/drawable-v24/basket.png",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/0dd51dbeb9340ab386286ee561b25af63871064c/app/src/main/res/drawable-v24/basket.png",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/0dd51dbeb9340ab386286ee561b25af63871064c/app/src/main/res/drawable-v24/basket.png",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/res/drawable-v24/basket.png?ref=0dd51dbeb9340ab386286ee561b25af63871064c"
  },
  {
    "sha": "3fcb2b0dab79e3428b4b7d343440903d4b0e246b",
    "filename": "app/src/main/res/drawable-v24/menu.png",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/0dd51dbeb9340ab386286ee561b25af63871064c/app/src/main/res/drawable-v24/menu.png",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/0dd51dbeb9340ab386286ee561b25af63871064c/app/src/main/res/drawable-v24/menu.png",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/res/drawable-v24/menu.png?ref=0dd51dbeb9340ab386286ee561b25af63871064c"
  },
  {
    "sha": "d60b599778a76e72448345f98ae927a08a47bc1f",
    "filename": "app/src/main/res/drawable/apple_pay.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/res/drawable/apple_pay.png",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/res/drawable/apple_pay.png",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/res/drawable/apple_pay.png?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8"
  },
  {
    "sha": "b4edca4c8ad727ef4ddd06a933e716aab610ff31",
    "filename": "app/src/main/res/drawable/banner.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/res/drawable/banner.png",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/res/drawable/banner.png",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/res/drawable/banner.png?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8"
  },
  {
    "sha": "85e439ca9c8287e859c49fc46f88976c552eb8bf",
    "filename": "app/src/main/res/drawable/basket.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/SergeyVitovskiy/Ankas/blob/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/res/drawable/basket.png",
    "raw_url": "https://github.com/SergeyVitovskiy/Ankas/raw/d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8/app/src/main/res/drawable/basket.png",
    "contents_url": "https://api.github.com/repos/SergeyVitovskiy/Ankas/contents/app/src/main/res/drawable/basket.png?ref=d43d8f7a73b1690d6f83b3a16450e0f947f0f0d8"
  }
]
