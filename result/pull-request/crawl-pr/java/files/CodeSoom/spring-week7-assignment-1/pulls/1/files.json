[
  {
    "sha": "ea0b2ed7e932b8d20e7a99fd45cb60224bf935cf",
    "filename": "TODO.md",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/CodeSoom/spring-week7-assignment-1/blob/52e29be52d14e3291c9c1dee64f9a2ccd611b67f/TODO.md",
    "raw_url": "https://github.com/CodeSoom/spring-week7-assignment-1/raw/52e29be52d14e3291c9c1dee64f9a2ccd611b67f/TODO.md",
    "contents_url": "https://api.github.com/repos/CodeSoom/spring-week7-assignment-1/contents/TODO.md?ref=52e29be52d14e3291c9c1dee64f9a2ccd611b67f",
    "patch": "@@ -0,0 +1,11 @@\n+# TODO-LIST\n+## MON\n+- [ ] 현재 로직 확인하기\n+- [ ] Spring Security 학습하기\n+\n+## TUE\n+- [ ] 현재 로직 확인하기\n+- [ ] Spring Security 학습하기\n+\n+## WED\n+- [ ] Spring Security 학습하기"
  },
  {
    "sha": "bf7626bd0cd7927c69b60f379babd89379aec1f5",
    "filename": "app/build.gradle",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/CodeSoom/spring-week7-assignment-1/blob/52e29be52d14e3291c9c1dee64f9a2ccd611b67f/app/build.gradle",
    "raw_url": "https://github.com/CodeSoom/spring-week7-assignment-1/raw/52e29be52d14e3291c9c1dee64f9a2ccd611b67f/app/build.gradle",
    "contents_url": "https://api.github.com/repos/CodeSoom/spring-week7-assignment-1/contents/app/build.gradle?ref=52e29be52d14e3291c9c1dee64f9a2ccd611b67f",
    "patch": "@@ -69,6 +69,9 @@ dependencies {\n     implementation 'org.springframework.boot:spring-boot-starter-data-jpa'\n     runtimeOnly 'com.h2database:h2'\n \n+    // Spring Security\n+    implementation 'org.springframework.boot:spring-boot-starter-security'\n+\n     // Spring Developer Tools\n     developmentOnly 'org.springframework.boot:spring-boot-devtools'\n "
  },
  {
    "sha": "ac1e7251ee39ac2582b9c0d34bbcb87112f54910",
    "filename": "app/src/main/java/com/codesoom/assignment/config/SecurityJavaConfig.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/CodeSoom/spring-week7-assignment-1/blob/52e29be52d14e3291c9c1dee64f9a2ccd611b67f/app/src/main/java/com/codesoom/assignment/config/SecurityJavaConfig.java",
    "raw_url": "https://github.com/CodeSoom/spring-week7-assignment-1/raw/52e29be52d14e3291c9c1dee64f9a2ccd611b67f/app/src/main/java/com/codesoom/assignment/config/SecurityJavaConfig.java",
    "contents_url": "https://api.github.com/repos/CodeSoom/spring-week7-assignment-1/contents/app/src/main/java/com/codesoom/assignment/config/SecurityJavaConfig.java?ref=52e29be52d14e3291c9c1dee64f9a2ccd611b67f",
    "patch": "@@ -0,0 +1,25 @@\n+package com.codesoom.assignment.config;\n+\n+import com.codesoom.assignment.application.AuthenticationService;\n+import com.codesoom.assignment.filters.JwtAuthenticationFilter;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+\n+import javax.servlet.Filter;\n+\n+@Configuration\n+public class SecurityJavaConfig extends WebSecurityConfigurerAdapter {\n+\n+    @Autowired\n+    private AuthenticationService authenticationService;\n+\n+    @Override\n+    protected void configure(HttpSecurity http) throws Exception {\n+        Filter authenticationInterceptor = new JwtAuthenticationFilter(authenticationManager(), authenticationService);\n+        http\n+                .csrf().disable()\n+                .addFilter(authenticationInterceptor);\n+    }\n+}"
  },
  {
    "sha": "178728d4fbe8d6ef7de75806aaaf339df4180b39",
    "filename": "app/src/main/java/com/codesoom/assignment/config/WebJavaConfig.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/CodeSoom/spring-week7-assignment-1/blob/52e29be52d14e3291c9c1dee64f9a2ccd611b67f/app/src/main/java/com/codesoom/assignment/config/WebJavaConfig.java",
    "raw_url": "https://github.com/CodeSoom/spring-week7-assignment-1/raw/52e29be52d14e3291c9c1dee64f9a2ccd611b67f/app/src/main/java/com/codesoom/assignment/config/WebJavaConfig.java",
    "contents_url": "https://api.github.com/repos/CodeSoom/spring-week7-assignment-1/contents/app/src/main/java/com/codesoom/assignment/config/WebJavaConfig.java?ref=52e29be52d14e3291c9c1dee64f9a2ccd611b67f",
    "patch": "@@ -13,6 +13,6 @@\n \n     @Override\n     public void addInterceptors(InterceptorRegistry registry) {\n-        registry.addInterceptor(authenticationInterceptor);\n+//        registry.addInterceptor(authenticationInterceptor);\n     }\n }"
  },
  {
    "sha": "7cda600a38a6c82c8fd5b34dce2913f79b4dd4af",
    "filename": "app/src/main/java/com/codesoom/assignment/filters/JwtAuthenticationFilter.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/CodeSoom/spring-week7-assignment-1/blob/52e29be52d14e3291c9c1dee64f9a2ccd611b67f/app/src/main/java/com/codesoom/assignment/filters/JwtAuthenticationFilter.java",
    "raw_url": "https://github.com/CodeSoom/spring-week7-assignment-1/raw/52e29be52d14e3291c9c1dee64f9a2ccd611b67f/app/src/main/java/com/codesoom/assignment/filters/JwtAuthenticationFilter.java",
    "contents_url": "https://api.github.com/repos/CodeSoom/spring-week7-assignment-1/contents/app/src/main/java/com/codesoom/assignment/filters/JwtAuthenticationFilter.java?ref=52e29be52d14e3291c9c1dee64f9a2ccd611b67f",
    "patch": "@@ -0,0 +1,42 @@\n+package com.codesoom.assignment.filters;\n+\n+import com.codesoom.assignment.application.AuthenticationService;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.security.authentication.AuthenticationManager;\n+import org.springframework.security.web.authentication.www.BasicAuthenticationFilter;\n+\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+public class JwtAuthenticationFilter extends BasicAuthenticationFilter {\n+    private final AuthenticationService authenticationService;\n+\n+    public JwtAuthenticationFilter(AuthenticationManager authenticationManager, AuthenticationService authenticationService) {\n+        super(authenticationManager);\n+        this.authenticationService = authenticationService;\n+    }\n+\n+    @Override\n+    protected void doFilterInternal(HttpServletRequest request,\n+                                    HttpServletResponse response,\n+                                    FilterChain chain) throws IOException, ServletException {\n+\n+        String authorization = request.getHeader(\"Authorization\");\n+\n+        if (authorization == null) {\n+            response.sendError(HttpStatus.UNAUTHORIZED.value());\n+            return;\n+        }\n+\n+        String accessToken = authorization.substring(\"Bearer \".length());\n+        Long userId = authenticationService.parseToken(accessToken);\n+\n+        request.setAttribute(\"userId\", userId);\n+        \n+        chain.doFilter(request, response);\n+//        super.doFilterInternal(request, response, chain);\n+    }\n+}"
  }
]
