[
  {
    "sha": "f6047652ddeac0c7a1892d902074c0fcf805dc67",
    "filename": "src/main/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderController.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderController.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderController.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/main/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderController.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -76,6 +76,7 @@ ProbationRecord getProbationRecord(@ApiParam(name = \"crn\", value = \"CRN for the\n     @ApiOperation(value = \"Gets the basic offender probation status details by CRN\")\n     @ApiResponses(\n         value = {\n+            @ApiResponse(code = 200, message = \"OK\", response = ProbationStatusDetail.class),\n             @ApiResponse(code = 400, message = \"Invalid request\", response = ErrorResponse.class),\n             @ApiResponse(code = 401, message = \"Unauthorised\", response = ErrorResponse.class),\n             @ApiResponse(code = 403, message = \"Forbidden\", response = ErrorResponse.class),\n@@ -91,6 +92,7 @@ ProbationRecord getProbationRecord(@ApiParam(name = \"crn\", value = \"CRN for the\n     @ApiOperation(value = \"Gets the offender detail by CRN\")\n     @ApiResponses(\n         value = {\n+            @ApiResponse(code = 200, message = \"OK\", response = OffenderDetail.class),\n             @ApiResponse(code = 400, message = \"Invalid request\", response = ErrorResponse.class),\n             @ApiResponse(code = 401, message = \"Unauthorised\", response = ErrorResponse.class),\n             @ApiResponse(code = 403, message = \"Forbidden\", response = ErrorResponse.class),\n@@ -106,6 +108,7 @@ ProbationRecord getProbationRecord(@ApiParam(name = \"crn\", value = \"CRN for the\n     @ApiOperation(value = \"Gets the requirement data by CRN and conviction ID.\")\n     @ApiResponses(\n         value = {\n+            @ApiResponse(code = 200, message = \"OK\", response = RequirementsResponse.class),\n             @ApiResponse(code = 400, message = \"Invalid request\", response = ErrorResponse.class),\n             @ApiResponse(code = 401, message = \"Unauthorised\", response = ErrorResponse.class),\n             @ApiResponse(code = 403, message = \"Forbidden\", response = ErrorResponse.class),"
  },
  {
    "sha": "1d4d28d1c5ea2a16605076126c8bd518a010e74f",
    "filename": "src/main/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderMatchesController.java",
    "status": "modified",
    "additions": 7,
    "deletions": 4,
    "changes": 11,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderMatchesController.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderMatchesController.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/main/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderMatchesController.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -1,11 +1,9 @@\n package uk.gov.justice.probation.courtcaseservice.controller;\n \n-import java.net.URI;\n import io.swagger.annotations.Api;\n import io.swagger.annotations.ApiOperation;\n import io.swagger.annotations.ApiResponse;\n import io.swagger.annotations.ApiResponses;\n-import javax.validation.Valid;\n import lombok.AllArgsConstructor;\n import org.springframework.http.HttpStatus;\n import org.springframework.http.ResponseEntity;\n@@ -22,6 +20,9 @@\n import uk.gov.justice.probation.courtcaseservice.jpa.entity.GroupedOffenderMatchesEntity;\n import uk.gov.justice.probation.courtcaseservice.service.OffenderMatchService;\n \n+import javax.validation.Valid;\n+import java.net.URI;\n+\n import static org.springframework.http.MediaType.APPLICATION_JSON_VALUE;\n \n @Api(tags = \"Offender Matches Resources\")\n@@ -33,6 +34,7 @@\n     @ApiOperation(value = \"Creates a new offender-match entity associated with a case\")\n     @ApiResponses(\n             value = {\n+                    @ApiResponse(code = 200, message = \"OK\", response = GroupedOffenderMatchesEntity.class),\n                     @ApiResponse(code = 400, message = \"Invalid request\", response = ErrorResponse.class),\n                     @ApiResponse(code = 401, message = \"Unauthorised\", response = ErrorResponse.class),\n                     @ApiResponse(code = 403, message = \"Forbidden\", response = ErrorResponse.class),\n@@ -50,9 +52,10 @@\n                     .build());\n     }\n \n-    @ApiOperation(value = \"Creates a new offender-match entity associated with a case\")\n+    @ApiOperation(value = \"Gets an existing offender-match entity associated with a case\")\n     @ApiResponses(\n             value = {\n+                    @ApiResponse(code = 200, message = \"OK\", response = GroupedOffenderMatchesEntity.class),\n                     @ApiResponse(code = 400, message = \"Invalid request\", response = ErrorResponse.class),\n                     @ApiResponse(code = 401, message = \"Unauthorised\", response = ErrorResponse.class),\n                     @ApiResponse(code = 403, message = \"Forbidden\", response = ErrorResponse.class),\n@@ -68,7 +71,7 @@\n          return offenderMatchService.getGroupedMatches(courtCode, caseNo, groupId);\n     }\n \n-    @ApiOperation(value = \"Creates a new offender-match entity associated with a case\")\n+    @ApiOperation(value = \"Returns all possible matches found for a given case\")\n     @ApiResponses(\n         value = {\n             @ApiResponse(code = 400, message = \"Invalid request\", response = ErrorResponse.class),"
  },
  {
    "sha": "7a19e23b4437f345ec7761f9dbf97b60eac71b98",
    "filename": "src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/OffenderRestClient.java",
    "status": "modified",
    "additions": 2,
    "deletions": 4,
    "changes": 6,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/OffenderRestClient.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/OffenderRestClient.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/OffenderRestClient.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -26,7 +26,6 @@\n import uk.gov.justice.probation.courtcaseservice.service.model.Conviction;\n import uk.gov.justice.probation.courtcaseservice.service.model.CourtAppearance;\n import uk.gov.justice.probation.courtcaseservice.service.model.LicenceCondition;\n-import uk.gov.justice.probation.courtcaseservice.service.model.OffenderDetail;\n import uk.gov.justice.probation.courtcaseservice.service.model.ProbationRecord;\n import uk.gov.justice.probation.courtcaseservice.service.model.ProbationStatusDetail;\n import uk.gov.justice.probation.courtcaseservice.service.model.PssRequirement;\n@@ -86,13 +85,12 @@\n             .map(OffenderMapper::probationStatusDetailFrom);\n     }\n \n-    public Mono<OffenderDetail> getOffenderDetailByCrn(String crn) {\n+    public Mono<CommunityApiOffenderResponse> getOffender(String crn) {\n         return clientHelper.get(String.format(offenderUrlTemplate, crn))\n             .retrieve()\n             .onStatus(HttpStatus::is4xxClientError, (clientResponse) -> clientHelper.handleOffenderError(crn, clientResponse))\n             .bodyToMono(CommunityApiOffenderResponse.class)\n-            .doOnError(e -> log.error(String.format(\"Unexpected exception when retrieving offender detail data for CRN '%s'\", crn), e))\n-            .map(OffenderMapper::offenderDetailFrom);\n+            .doOnError(e -> log.error(String.format(\"Unexpected exception when retrieving offender detail data for CRN '%s'\", crn), e));\n     }\n \n     public Mono<OffenderMatchDetail> getOffenderMatchDetailByCrn(String crn) {"
  },
  {
    "sha": "f1117afb92b520a7879f7e0fe19456656f2d98e6",
    "filename": "src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/mapper/OffenderMapper.java",
    "status": "modified",
    "additions": 4,
    "deletions": 5,
    "changes": 9,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/mapper/OffenderMapper.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/mapper/OffenderMapper.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/mapper/OffenderMapper.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -60,10 +60,10 @@ public static ProbationRecord probationRecordFrom(CommunityApiOffenderResponse o\n                 .build();\n     }\n \n-    public static OffenderDetail offenderDetailFrom(CommunityApiOffenderResponse offenderResponse) {\n+    public static OffenderDetail offenderDetailFrom(CommunityApiOffenderResponse offenderResponse, ProbationStatusDetail probationStatusDetail) {\n         return OffenderDetail.builder()\n             .otherIds(otherIdsFrom(offenderResponse))\n-            .probationStatus(offenderResponse.isCurrentDisposal() ? ProbationStatus.CURRENT : ProbationStatus.PREVIOUSLY_KNOWN)\n+            .probationStatus(ProbationStatus.of(probationStatusDetail.getStatus()))\n             .dateOfBirth(offenderResponse.getDateOfBirth())\n             .forename(offenderResponse.getFirstName())\n             .middleNames(offenderResponse.getMiddleNames())\n@@ -88,7 +88,6 @@ public static OffenderMatchDetail offenderMatchDetailFrom(CommunityApiOffenderRe\n             .middleNames(Optional.ofNullable(offenderResponse.getMiddleNames()).orElse(Collections.emptyList()))\n             .surname(offenderResponse.getSurname())\n             .address(addressFrom(offenderResponse.getContactDetails(), addressCode))\n-            .probationStatus(offenderResponse.isCurrentDisposal() ? ProbationStatus.CURRENT : ProbationStatus.PREVIOUSLY_KNOWN)\n             .matchIdentifiers(Optional.ofNullable(offenderResponse.getOtherIds())\n                 .map(otherIds -> MatchIdentifiers.builder().crn(otherIds.getCrn())\n                                                             .cro(otherIds.getCroNumber())\n@@ -100,14 +99,14 @@ public static OffenderMatchDetail offenderMatchDetailFrom(CommunityApiOffenderRe\n             .build();\n     }\n \n-    public static OffenderMatchDetail offenderMatchDetailFrom(OffenderMatchDetail offenderMatchDetail, Sentence sentence) {\n+    public static OffenderMatchDetail offenderMatchDetailFrom(OffenderMatchDetail offenderMatchDetail, Sentence sentence, ProbationStatusDetail probationStatus) {\n         OffenderMatchDetail.OffenderMatchDetailBuilder builder = OffenderMatchDetail.builder()\n             .title(offenderMatchDetail.getTitle())\n             .forename(offenderMatchDetail.getForename())\n             .middleNames(Optional.ofNullable(offenderMatchDetail.getMiddleNames()).orElse(Collections.emptyList()))\n             .surname(offenderMatchDetail.getSurname())\n             .address(offenderMatchDetail.getAddress())\n-            .probationStatus(offenderMatchDetail.getProbationStatus())\n+            .probationStatus(ProbationStatus.of(probationStatus.getStatus()))\n             .matchIdentifiers(offenderMatchDetail.getMatchIdentifiers())\n             .dateOfBirth(offenderMatchDetail.getDateOfBirth());\n         if (sentence != null) {"
  },
  {
    "sha": "f506c1197b246af38393d364d13c3a6849a21d1c",
    "filename": "src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/model/CommunityApiOffenderResponse.java",
    "status": "modified",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/model/CommunityApiOffenderResponse.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/model/CommunityApiOffenderResponse.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/model/CommunityApiOffenderResponse.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -1,7 +1,6 @@\n package uk.gov.justice.probation.courtcaseservice.restclient.communityapi.model;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n import lombok.AllArgsConstructor;\n import lombok.Builder;\n import lombok.Data;\n@@ -26,7 +25,4 @@\n     private String surname;\n     private LocalDate dateOfBirth;\n     private CommunityApiContactDetails contactDetails;\n-    @JsonDeserialize(using = NumericBooleanDeserializer.class)\n-    private boolean currentDisposal;\n-\n }"
  },
  {
    "sha": "2b57e2ad5879e8bcb0d9c9591a8db58c84fcb17f",
    "filename": "src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/model/NumericBooleanDeserializer.java",
    "status": "removed",
    "additions": 0,
    "deletions": 14,
    "changes": 14,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/cbd3b1958b156bf8fec97f2bb5525f0cbc71bf48/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/model/NumericBooleanDeserializer.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/cbd3b1958b156bf8fec97f2bb5525f0cbc71bf48/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/model/NumericBooleanDeserializer.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/main/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/model/NumericBooleanDeserializer.java?ref=cbd3b1958b156bf8fec97f2bb5525f0cbc71bf48",
    "patch": "@@ -1,14 +0,0 @@\n-package uk.gov.justice.probation.courtcaseservice.restclient.communityapi.model;\n-\n-import com.fasterxml.jackson.core.JsonParser;\n-import com.fasterxml.jackson.databind.DeserializationContext;\n-import com.fasterxml.jackson.databind.JsonDeserializer;\n-import java.io.IOException;\n-\n-public class NumericBooleanDeserializer extends JsonDeserializer<Boolean> {\n-\n-    @Override\n-    public Boolean deserialize(JsonParser jsonParser, DeserializationContext ctxt) throws IOException {\n-        return \"0\".equals(jsonParser.getText()) ? Boolean.FALSE : Boolean.TRUE;\n-    }\n-}"
  },
  {
    "sha": "d2c16a510111f79865f2d5b36080f60d159e7fc6",
    "filename": "src/main/java/uk/gov/justice/probation/courtcaseservice/service/ConvictionService.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/service/ConvictionService.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/service/ConvictionService.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/main/java/uk/gov/justice/probation/courtcaseservice/service/ConvictionService.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -14,12 +14,12 @@\n import uk.gov.justice.probation.courtcaseservice.restclient.ConvictionRestClient;\n import uk.gov.justice.probation.courtcaseservice.restclient.OffenderRestClient;\n import uk.gov.justice.probation.courtcaseservice.restclient.OffenderRestClientFactory;\n+import uk.gov.justice.probation.courtcaseservice.restclient.communityapi.model.CommunityApiOffenderResponse;\n import uk.gov.justice.probation.courtcaseservice.restclient.exception.CustodialStatusNotFoundException;\n import uk.gov.justice.probation.courtcaseservice.restclient.exception.OffenderNotFoundException;\n import uk.gov.justice.probation.courtcaseservice.service.model.Conviction;\n import uk.gov.justice.probation.courtcaseservice.service.model.CustodialStatus;\n import uk.gov.justice.probation.courtcaseservice.service.model.LicenceCondition;\n-import uk.gov.justice.probation.courtcaseservice.service.model.OffenderDetail;\n import uk.gov.justice.probation.courtcaseservice.service.model.PssRequirement;\n import uk.gov.justice.probation.courtcaseservice.service.model.Requirement;\n import uk.gov.justice.probation.courtcaseservice.service.model.Sentence;\n@@ -61,7 +61,7 @@ public SentenceResponse getSentence(final String crn, final Long convictionId, f\n                 convictionRestClient.getAttendances(crn, convictionId),\n                 convictionRestClient.getConviction(crn, convictionId),\n                 convictionRestClient.getCurrentOrderHeader(crn, convictionId),\n-                offenderRestClient.getOffenderDetailByCrn(crn)\n+                offenderRestClient.getOffender(crn)\n         );\n \n         var tuple4 = sentenceMono.blockOptional().orElseThrow(() -> new OffenderNotFoundException(crn));\n@@ -123,13 +123,13 @@ private PssRequirement transform(PssRequirement pssRequirement) {\n             .build();\n     }\n \n-    private SentenceResponse combineOffenderAndConvictions(List<AttendanceResponse> attendanceResponses, Conviction conviction, CurrentOrderHeaderResponse currentOrderHeaderResponse, OffenderDetail offenderDetail) {\n+    private SentenceResponse combineOffenderAndConvictions(List<AttendanceResponse> attendanceResponses, Conviction conviction, CurrentOrderHeaderResponse currentOrderHeaderResponse, CommunityApiOffenderResponse offenderDetail) {\n         return SentenceResponse.builder()\n                 .attendances(attendanceResponses)\n                 .unpaidWork(Optional.ofNullable(conviction.getSentence()).map(Sentence::getUnpaidWork).orElse(null))\n                 .currentOrderHeaderDetail(currentOrderHeaderResponse)\n                 .links(SentenceLinks.builder()\n-                        .deliusContactList(String.format(deliusContactListUrlTemplate, offenderDetail.getOtherIds().getOffenderId(), conviction.getConvictionId()))\n+                        .deliusContactList(String.format(deliusContactListUrlTemplate, offenderDetail.getOffenderId(), conviction.getConvictionId()))\n                         .build())\n                 .build();\n     }"
  },
  {
    "sha": "d0098cbab072972f15078c4d24799d7ad8c66f6f",
    "filename": "src/main/java/uk/gov/justice/probation/courtcaseservice/service/OffenderMatchService.java",
    "status": "modified",
    "additions": 8,
    "deletions": 4,
    "changes": 12,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/service/OffenderMatchService.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/service/OffenderMatchService.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/main/java/uk/gov/justice/probation/courtcaseservice/service/OffenderMatchService.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -19,6 +19,7 @@\n import uk.gov.justice.probation.courtcaseservice.service.exceptions.EntityNotFoundException;\n import uk.gov.justice.probation.courtcaseservice.service.mapper.OffenderMatchMapper;\n import uk.gov.justice.probation.courtcaseservice.service.model.Conviction;\n+import uk.gov.justice.probation.courtcaseservice.service.model.ProbationStatusDetail;\n import uk.gov.justice.probation.courtcaseservice.service.model.Sentence;\n \n import java.util.Collections;\n@@ -88,12 +89,15 @@ OffenderMatchDetail getOffenderMatchDetail(String crn) {\n         log.debug(\"Looking for offender detail for CRN :{}\", crn);\n         return Mono.zip(offenderRestClient.getOffenderMatchDetailByCrn(crn),\n                         offenderRestClient.getConvictionsByCrn(crn)\n-                        .onErrorResume(OffenderNotFoundException.class, e -> Mono.just(Collections.emptyList())))\n-            .map(tuple -> addMostRecentEventToOffenderMatch(tuple.getT1(), tuple.getT2()))\n+                            .onErrorResume(OffenderNotFoundException.class, e -> Mono.just(Collections.emptyList())),\n+                        offenderRestClient.getProbationStatusByCrn(crn))\n+            .map(tuple -> addMostRecentEventToOffenderMatch(tuple.getT1(), tuple.getT2(), tuple.getT3()))\n             .block();\n     }\n \n-    OffenderMatchDetail addMostRecentEventToOffenderMatch(OffenderMatchDetail offenderMatchDetail, List<Conviction> convictions) {\n+    private OffenderMatchDetail addMostRecentEventToOffenderMatch(OffenderMatchDetail offenderMatchDetail,\n+                                                          List<Conviction> convictions,\n+                                                          ProbationStatusDetail probationStatus) {\n \n         if (offenderMatchDetail == null) {\n             return null;\n@@ -105,7 +109,7 @@ OffenderMatchDetail addMostRecentEventToOffenderMatch(OffenderMatchDetail offend\n             .map(Conviction::getSentence)\n             .orElse(getSentenceForMostRecentConviction(convictions));\n \n-        return OffenderMapper.offenderMatchDetailFrom(offenderMatchDetail, sentence);\n+        return OffenderMapper.offenderMatchDetailFrom(offenderMatchDetail, sentence, probationStatus);\n     }\n \n     Sentence getSentenceForMostRecentConviction(List<Conviction> convictions) {"
  },
  {
    "sha": "87218b43dc6a483905bb870374d1c7092112b703",
    "filename": "src/main/java/uk/gov/justice/probation/courtcaseservice/service/OffenderService.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/service/OffenderService.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/main/java/uk/gov/justice/probation/courtcaseservice/service/OffenderService.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/main/java/uk/gov/justice/probation/courtcaseservice/service/OffenderService.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -12,6 +12,7 @@\n import uk.gov.justice.probation.courtcaseservice.restclient.DocumentRestClient;\n import uk.gov.justice.probation.courtcaseservice.restclient.OffenderRestClient;\n import uk.gov.justice.probation.courtcaseservice.restclient.OffenderRestClientFactory;\n+import uk.gov.justice.probation.courtcaseservice.restclient.communityapi.mapper.OffenderMapper;\n import uk.gov.justice.probation.courtcaseservice.restclient.exception.OffenderNotFoundException;\n import uk.gov.justice.probation.courtcaseservice.service.model.Assessment;\n import uk.gov.justice.probation.courtcaseservice.service.model.Breach;\n@@ -139,7 +140,8 @@ private ProbationRecord addConvictionsToProbationRecord(ProbationRecord probatio\n     }\n \n     public Mono<OffenderDetail> getOffenderDetail(String crn) {\n-        return offenderRestClient.getOffenderDetailByCrn(crn);\n+        return Mono.zip(offenderRestClient.getOffender(crn), offenderRestClient.getProbationStatusByCrn(crn))\n+                .map((tuple2) -> OffenderMapper.offenderDetailFrom(tuple2.getT1(), tuple2.getT2()));\n     }\n \n     public Mono<List<Registration>> getOffenderRegistrations(String crn) {"
  },
  {
    "sha": "1faaf9f8614f48009763f88bb267fec8b5ad6a22",
    "filename": "src/test/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderControllerIntTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderControllerIntTest.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderControllerIntTest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderControllerIntTest.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -255,7 +255,7 @@ public void givenLowerCaseCrn_whenCallMadeToGetOffenderDetail_thenReturnCorrectD\n             .then()\n             .statusCode(200)\n             .body(\"title\",  equalTo(\"Mr.\"))\n-            .body(\"probationStatus\", equalTo(\"Current\"))\n+            .body(\"probationStatus\", equalTo(\"Previously known\"))\n             .body(\"dateOfBirth\", equalTo(\"2000-07-19\"))\n             .body(\"forename\", equalTo(\"Aadland\"))\n             .body(\"surname\", equalTo(\"Bertrand\"))"
  },
  {
    "sha": "dbb477d1c3d88b573516a318af9a99e30ddbc9ef",
    "filename": "src/test/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderMatchesControllerIntTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderMatchesControllerIntTest.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderMatchesControllerIntTest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/java/uk/gov/justice/probation/courtcaseservice/controller/OffenderMatchesControllerIntTest.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -202,7 +202,7 @@ public void givenMultipleMatchesOneNotFound_whenGetOffenderDetailMatch_thenRetur\n             .body(\"offenderMatchDetails[0].matchIdentifiers.crn\", equalTo(\"X320741\"))\n             .body(\"offenderMatchDetails[0].matchIdentifiers.pnc\", equalTo(\"2004/0712343H\"))\n             .body(\"offenderMatchDetails[0].matchIdentifiers.cro\", equalTo(\"123456/04A\"))\n-            .body(\"offenderMatchDetails[0].probationStatus\", equalTo(\"Current\"))\n+            .body(\"offenderMatchDetails[0].probationStatus\", equalTo(\"Previously known\"))\n             .body(\"offenderMatchDetails[0].mostRecentEvent.text\", equalTo(\"CJA - Indeterminate Public Prot.\"))\n             .body(\"offenderMatchDetails[0].mostRecentEvent.length\", equalTo(5))\n             .body(\"offenderMatchDetails[0].mostRecentEvent.lengthUnits\", equalTo(\"Years\"))"
  },
  {
    "sha": "cbca987b8e6b29c323ed52052e6ec1e68453642b",
    "filename": "src/test/java/uk/gov/justice/probation/courtcaseservice/restclient/OffenderRestClientIntTest.java",
    "status": "modified",
    "additions": 7,
    "deletions": 8,
    "changes": 15,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/restclient/OffenderRestClientIntTest.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/restclient/OffenderRestClientIntTest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/java/uk/gov/justice/probation/courtcaseservice/restclient/OffenderRestClientIntTest.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -24,7 +24,7 @@\n     private static final String CRN = \"X320741\";\n     private static final String UNKNOWN_CRN = \"CRNXXX\";\n     private static final Long CONVICTION_ID = 2500297061L;\n-    public static final String SERVER_ERROR_CRN = \"X320742\";\n+    public static final String SERVER_ERROR_CRN = \"SE12345\";\n \n     @Autowired\n     private OffenderRestClientFactory offenderRestClientFactory;\n@@ -170,28 +170,27 @@ public void givenServiceThrowsError_whenGetOffenderMatchDetail_thenFailFastAndTh\n \n     @Test\n     public void whenGetOffenderDetailByCrnCalled_thenMakeRestCallToCommunityApi() {\n-        var optionalOffender = offenderRestClient.getOffenderDetailByCrn(CRN).blockOptional();\n+        var optionalOffender = offenderRestClient.getOffender(CRN).blockOptional();\n \n         assertThat(optionalOffender).isNotEmpty();\n         var offenderDetail = optionalOffender.get();\n         assertThat(offenderDetail.getTitle()).isEqualTo(\"Mr.\");\n-        assertThat(offenderDetail.getProbationStatus()).isSameAs(ProbationStatus.CURRENT);\n         assertThat(offenderDetail.getDateOfBirth()).isEqualTo(LocalDate.of(2000, Month.JULY, 19));\n-        assertThat(offenderDetail.getForename()).isEqualTo(\"Aadland\");\n+        assertThat(offenderDetail.getFirstName()).isEqualTo(\"Aadland\");\n         assertThat(offenderDetail.getSurname()).isEqualTo(\"Bertrand\");\n-        assertThat(offenderDetail.getOtherIds().getOffenderId()).isEqualTo(2500343964L);\n+        assertThat(offenderDetail.getOffenderId()).isEqualTo(2500343964L);\n         assertThat(offenderDetail.getOtherIds().getCrn()).isEqualTo(\"X320741\");\n         assertThat(offenderDetail.getMiddleNames()).containsExactlyInAnyOrder(\"Hope\", \"Felix\");\n     }\n \n     @Test(expected = OffenderNotFoundException.class)\n     public void givenOffenderDetailDoesNotExist_whenGetOffenderByCrnCalled_thenExpectException() {\n-        offenderRestClient.getOffenderDetailByCrn(UNKNOWN_CRN).blockOptional();\n+        offenderRestClient.getOffender(UNKNOWN_CRN).blockOptional();\n     }\n \n     @Test(expected = WebClientResponseException.class)\n     public void givenServiceThrowsError_whenGetOffenderDetailByCrnCalled_thenFailFastAndThrowException() {\n-        offenderRestClient.getOffenderDetailByCrn(SERVER_ERROR_CRN).block();\n+        offenderRestClient.getOffender(SERVER_ERROR_CRN).block();\n     }\n \n     @Test\n@@ -288,6 +287,6 @@ public void givenForbiddenError_whenGetProbationStatus_thenReturn() {\n \n     @Test(expected = WebClientResponseException.class)\n     public void givenServerError_whenGetProbationStatus_thenReturn() {\n-        offenderRestClient.getProbationStatusByCrn(SERVER_ERROR_CRN).blockOptional();\n+        offenderRestClient.getProbationStatusByCrn(\"SE12345\").blockOptional();\n     }\n }"
  },
  {
    "sha": "499e7ca1080f3bb07235984cf452a2aaddada4b0",
    "filename": "src/test/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/mapper/OffenderMapperTest.java",
    "status": "modified",
    "additions": 14,
    "deletions": 6,
    "changes": 20,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/mapper/OffenderMapperTest.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/mapper/OffenderMapperTest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/java/uk/gov/justice/probation/courtcaseservice/restclient/communityapi/mapper/OffenderMapperTest.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -20,6 +20,7 @@\n import uk.gov.justice.probation.courtcaseservice.restclient.communityapi.model.OtherIds;\n import uk.gov.justice.probation.courtcaseservice.service.model.Conviction;\n import uk.gov.justice.probation.courtcaseservice.service.model.KeyValue;\n+import uk.gov.justice.probation.courtcaseservice.service.model.ProbationStatusDetail;\n import uk.gov.justice.probation.courtcaseservice.service.model.Sentence;\n import uk.gov.justice.probation.courtcaseservice.service.model.Staff;\n \n@@ -151,7 +152,9 @@ void givenNulls_whenMapOffenderManager_thenReturn() {\n         void shouldMapOffenderDetailsToOffenderDetail() {\n             offenderResponse.setDateOfBirth(null);\n \n-            var offenderDetail = OffenderMapper.offenderDetailFrom(offenderResponse);\n+            var offenderDetail = OffenderMapper.offenderDetailFrom(offenderResponse, ProbationStatusDetail.builder()\n+                    .status(\"CURRENT\")\n+                    .build());\n \n             assertThat(offenderDetail.getOtherIds().getCrn())\n                 .isNotNull()\n@@ -373,6 +376,8 @@ void shouldMapEmptyCustodialStatus() {\n         @Test\n         void shouldMapOffenderToMatchDetail() {\n             OffenderMatchDetail offenderMatchDetail = OffenderMapper.offenderMatchDetailFrom(offenderResponse, \"M\");\n+\n+            assertThat(offenderMatchDetail.getProbationStatus()).isNull();\n             assertOffenderMatchFields(offenderMatchDetail);\n         }\n \n@@ -384,15 +389,15 @@ void shouldMapOffenderToMatchDetailWithNulls() {\n             OffenderMatchDetail offenderMatchDetail = OffenderMapper.offenderMatchDetailFrom(offenderResponse, \"M\");\n \n             assertThat(offenderMatchDetail.getTitle()).isEqualTo(\"Mr.\");\n-            assertThat(offenderMatchDetail.getProbationStatus()).isSameAs(ProbationStatus.PREVIOUSLY_KNOWN);\n+            assertThat(offenderMatchDetail.getProbationStatus()).isNull();\n             assertThat(offenderMatchDetail.getAddress()).isNull();\n             assertThat(offenderMatchDetail.getEvent()).isNull();\n             assertThat(offenderMatchDetail.getMiddleNames()).hasSize(0);\n         }\n \n         @DisplayName(\"Test mapping of an offender match with additional fields for Event coming from the Sentence\")\n         @Test\n-        void shouldMapOffenderToMatchDetail_WithSentenceEvent() {\n+        void shouldMapOffenderToMatchDetail_WithSentenceEventAndProbationStatus() {\n \n             LocalDate eventDate = LocalDate.of(2020, Month.JULY, 29);\n             OffenderMatchDetail offenderMatch = OffenderMapper.offenderMatchDetailFrom(offenderResponse, \"M\");\n@@ -403,9 +408,14 @@ void shouldMapOffenderToMatchDetail_WithSentenceEvent() {\n                 .startDate(eventDate)\n                 .build();\n \n-            OffenderMatchDetail offenderMatchDetail = OffenderMapper.offenderMatchDetailFrom(offenderMatch, sentence);\n+            final var probationStatus = ProbationStatusDetail.builder()\n+                    .status(\"CURRENT\")\n+                    .build();\n+            OffenderMatchDetail offenderMatchDetail = OffenderMapper.offenderMatchDetailFrom(offenderMatch, sentence, probationStatus);\n \n             assertOffenderMatchFields(offenderMatchDetail);\n+\n+            assertThat(offenderMatchDetail.getProbationStatus()).isSameAs(ProbationStatus.CURRENT);\n             assertThat(offenderMatchDetail.getEvent().getLength()).isEqualTo(6);\n             assertThat(offenderMatchDetail.getEvent().getLengthUnits()).isEqualTo(\"Months\");\n             assertThat(offenderMatchDetail.getEvent().getText()).isEqualTo(\"Sentence description\");\n@@ -429,8 +439,6 @@ private void assertOffenderMatchFields(OffenderMatchDetail offenderMatchDetail)\n             assertThat(offenderMatchDetail.getAddress().getTown()).isEqualTo(\"Sheffield\");\n             assertThat(offenderMatchDetail.getAddress().getCounty()).isEqualTo(\"South Yorkshire\");\n             assertThat(offenderMatchDetail.getAddress().getPostcode()).isEqualTo(\"S10 2NA\");\n-\n-            assertThat(offenderMatchDetail.getProbationStatus()).isSameAs(ProbationStatus.CURRENT);\n         }\n     }\n "
  },
  {
    "sha": "4a7943344af45dba527bca04eab500f15171e0fe",
    "filename": "src/test/java/uk/gov/justice/probation/courtcaseservice/service/ConvictionServiceTest.java",
    "status": "modified",
    "additions": 7,
    "deletions": 10,
    "changes": 17,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/service/ConvictionServiceTest.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/service/ConvictionServiceTest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/java/uk/gov/justice/probation/courtcaseservice/service/ConvictionServiceTest.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -13,12 +13,11 @@\n import uk.gov.justice.probation.courtcaseservice.restclient.ConvictionRestClient;\n import uk.gov.justice.probation.courtcaseservice.restclient.OffenderRestClient;\n import uk.gov.justice.probation.courtcaseservice.restclient.OffenderRestClientFactory;\n+import uk.gov.justice.probation.courtcaseservice.restclient.communityapi.model.CommunityApiOffenderResponse;\n import uk.gov.justice.probation.courtcaseservice.restclient.exception.OffenderNotFoundException;\n import uk.gov.justice.probation.courtcaseservice.service.model.Conviction;\n import uk.gov.justice.probation.courtcaseservice.service.model.CustodialStatus;\n import uk.gov.justice.probation.courtcaseservice.service.model.LicenceCondition;\n-import uk.gov.justice.probation.courtcaseservice.service.model.OffenderDetail;\n-import uk.gov.justice.probation.courtcaseservice.service.model.OtherIds;\n import uk.gov.justice.probation.courtcaseservice.service.model.PssRequirement;\n import uk.gov.justice.probation.courtcaseservice.service.model.Requirement;\n import uk.gov.justice.probation.courtcaseservice.service.model.Sentence;\n@@ -41,10 +40,8 @@\n     public static final Long SOME_SENTENCE_ID = 5467L;\n     public static final Long SOME_OFFENDER_ID = 789456L;\n     private static final String PSS_DESC_TO_KEEP = \"specified activity\";\n-    private static final OffenderDetail OFFENDER_DETAIL = OffenderDetail.builder()\n-            .otherIds(OtherIds.builder()\n-                    .offenderId(SOME_OFFENDER_ID)\n-                    .build())\n+    private static final CommunityApiOffenderResponse OFFENDER_DETAIL = CommunityApiOffenderResponse.builder()\n+            .offenderId(SOME_OFFENDER_ID)\n             .build();\n     private static final String DELIUS_LINK_TEMPLATE = \"http://test.url/foo/?bar=%s&baz=%s\";\n     private Conviction conviction;\n@@ -85,7 +82,7 @@ public void givenConviction_whenGetConviction_returnConviction() {\n         when(convictionRestClient.getAttendances(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.just(attendancesResponse));\n         when(convictionRestClient.getConviction(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.just(conviction));\n         when(convictionRestClient.getCurrentOrderHeader(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.just(currentOrderHeaderResponse));\n-        when(offenderRestClient.getOffenderDetailByCrn(CRN)).thenReturn(Mono.just(OFFENDER_DETAIL));\n+        when(offenderRestClient.getOffender(CRN)).thenReturn(Mono.just(OFFENDER_DETAIL));\n \n         final SentenceResponse response = service.getSentence(CRN, SOME_CONVICTION_ID, SOME_SENTENCE_ID);\n \n@@ -105,7 +102,7 @@ public void givenNullSentenceOnConviction_whenGetSentence_returnSentenceNoUnPaid\n         when(convictionRestClient.getAttendances(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.just(attendancesResponse));\n         when(convictionRestClient.getConviction(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.just(conviction));\n         when(convictionRestClient.getCurrentOrderHeader(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.just(currentOrderHeaderResponse));\n-        when(offenderRestClient.getOffenderDetailByCrn(CRN)).thenReturn(Mono.just(OFFENDER_DETAIL));\n+        when(offenderRestClient.getOffender(CRN)).thenReturn(Mono.just(OFFENDER_DETAIL));\n \n         final SentenceResponse response = service.getSentence(CRN, SOME_CONVICTION_ID, SOME_SENTENCE_ID);\n \n@@ -124,7 +121,7 @@ public void givenNoAttendances_whenGetConviction_returnConviction() {\n         when(convictionRestClient.getAttendances(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.just(Collections.emptyList()));\n         when(convictionRestClient.getConviction(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.just(conviction));\n         when(convictionRestClient.getCurrentOrderHeader(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.just(currentOrderHeaderResponse));\n-        when(offenderRestClient.getOffenderDetailByCrn(CRN)).thenReturn(Mono.just(OFFENDER_DETAIL));\n+        when(offenderRestClient.getOffender(CRN)).thenReturn(Mono.just(OFFENDER_DETAIL));\n \n         final SentenceResponse response = service.getSentence(CRN, SOME_CONVICTION_ID, SOME_SENTENCE_ID);\n \n@@ -143,7 +140,7 @@ void givenAttendancesNotFound_whenGetAttendances_thenThrowException() {\n         when(convictionRestClient.getAttendances(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.error(new OffenderNotFoundException(CRN)));\n         when(convictionRestClient.getConviction(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.error(new OffenderNotFoundException(CRN)));\n         when(convictionRestClient.getCurrentOrderHeader(CRN, SOME_CONVICTION_ID)).thenReturn(Mono.error(new OffenderNotFoundException(CRN)));\n-        when(offenderRestClient.getOffenderDetailByCrn(CRN)).thenReturn(Mono.error(new OffenderNotFoundException(CRN)));\n+        when(offenderRestClient.getOffender(CRN)).thenReturn(Mono.error(new OffenderNotFoundException(CRN)));\n \n         assertThatExceptionOfType(OffenderNotFoundException.class)\n             .isThrownBy(() -> service.getSentence(CRN, SOME_CONVICTION_ID, SOME_SENTENCE_ID))"
  },
  {
    "sha": "dced1903b2b4d678eb7f20298f76020d006d2f1a",
    "filename": "src/test/java/uk/gov/justice/probation/courtcaseservice/service/OffenderMatchServiceTest.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/service/OffenderMatchServiceTest.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/service/OffenderMatchServiceTest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/java/uk/gov/justice/probation/courtcaseservice/service/OffenderMatchServiceTest.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -10,6 +10,7 @@\n import uk.gov.justice.probation.courtcaseservice.controller.model.GroupedOffenderMatchesRequest;\n import uk.gov.justice.probation.courtcaseservice.controller.model.OffenderMatchDetail;\n import uk.gov.justice.probation.courtcaseservice.controller.model.OffenderMatchDetailResponse;\n+import uk.gov.justice.probation.courtcaseservice.controller.model.ProbationStatus;\n import uk.gov.justice.probation.courtcaseservice.jpa.entity.CourtCaseEntity;\n import uk.gov.justice.probation.courtcaseservice.jpa.entity.GroupedOffenderMatchesEntity;\n import uk.gov.justice.probation.courtcaseservice.jpa.entity.OffenderMatchEntity;\n@@ -19,6 +20,7 @@\n import uk.gov.justice.probation.courtcaseservice.restclient.exception.OffenderNotFoundException;\n import uk.gov.justice.probation.courtcaseservice.service.exceptions.EntityNotFoundException;\n import uk.gov.justice.probation.courtcaseservice.service.model.Conviction;\n+import uk.gov.justice.probation.courtcaseservice.service.model.ProbationStatusDetail;\n import uk.gov.justice.probation.courtcaseservice.service.model.Sentence;\n \n import java.time.LocalDate;\n@@ -154,6 +156,7 @@ void whenGetOffenderMatchDetail_thenReturn() {\n         verify(offenderRestClient).getOffenderMatchDetailByCrn(crn);\n         verify(offenderRestClient).getConvictionsByCrn(crn);\n         assertThat(offenderMatchDetail.getForename()).isEqualTo(\"Chris\");\n+        assertThat(offenderMatchDetail.getProbationStatus()).isEqualTo(ProbationStatus.CURRENT);\n     }\n \n     @Test\n@@ -168,6 +171,7 @@ void givenNoConvictions_whenGetOffenderMatchDetail_thenReturn() {\n         assertThat(offenderMatchDetail.getForename()).isEqualTo(\"Chris\");\n         verify(offenderRestClient).getOffenderMatchDetailByCrn(crn);\n         verify(offenderRestClient).getConvictionsByCrn(crn);\n+        assertThat(offenderMatchDetail.getProbationStatus()).isEqualTo(ProbationStatus.CURRENT);\n     }\n \n     @Test\n@@ -177,10 +181,12 @@ void given404OnConvictionsCall_whenGetOffenderMatchDetail_thenReturn() {\n         String crn = \"X320741\";\n         when(offenderRestClient.getOffenderMatchDetailByCrn(crn)).thenReturn(Mono.justOrEmpty(matchDetail));\n         when(offenderRestClient.getConvictionsByCrn(crn)).thenReturn(Mono.error( new OffenderNotFoundException(crn)));\n+        when(offenderRestClient.getProbationStatusByCrn(crn)).thenReturn(Mono.just(ProbationStatusDetail.builder().status(\"CURRENT\").build()));\n \n         OffenderMatchDetail offenderMatchDetail = service.getOffenderMatchDetail(\"X320741\");\n \n         assertThat(offenderMatchDetail.getForename()).isEqualTo(\"Chris\");\n+        assertThat(offenderMatchDetail.getProbationStatus()).isEqualTo(ProbationStatus.CURRENT);\n     }\n \n     @Test\n@@ -195,6 +201,7 @@ void givenNoMatchDetail_whenGetOffenderMatchDetail_thenReturnNull() {\n         assertThat(offenderMatchDetail).isNull();\n         verify(offenderRestClient).getOffenderMatchDetailByCrn(crn);\n         verify(offenderRestClient).getConvictionsByCrn(crn);\n+        verify(offenderRestClient).getProbationStatusByCrn(crn);\n     }\n \n     @Test\n@@ -222,6 +229,7 @@ void givenMultipleCrns_whenGetOffenderMatchDetails_thenReturn() {\n     private void mockOffenderDetailMatch(String crn, OffenderMatchDetail matchDetail, List<Conviction> convictions) {\n         when(offenderRestClient.getOffenderMatchDetailByCrn(crn)).thenReturn(Mono.justOrEmpty(matchDetail));\n         when(offenderRestClient.getConvictionsByCrn(crn)).thenReturn(Mono.just(convictions));\n+        when(offenderRestClient.getProbationStatusByCrn(crn)).thenReturn(Mono.just(ProbationStatusDetail.builder().status(\"CURRENT\").build()));\n     }\n \n     private Conviction buildConviction(boolean active, String sentenceDesc) {"
  },
  {
    "sha": "0ed551e315810d51019332e8f9b1a2a40d1ed55f",
    "filename": "src/test/java/uk/gov/justice/probation/courtcaseservice/service/OffenderServiceTest.java",
    "status": "modified",
    "additions": 21,
    "deletions": 7,
    "changes": 28,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/service/OffenderServiceTest.java",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/java/uk/gov/justice/probation/courtcaseservice/service/OffenderServiceTest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/java/uk/gov/justice/probation/courtcaseservice/service/OffenderServiceTest.java?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -13,12 +13,13 @@\n import uk.gov.justice.probation.courtcaseservice.restclient.DocumentRestClient;\n import uk.gov.justice.probation.courtcaseservice.restclient.OffenderRestClient;\n import uk.gov.justice.probation.courtcaseservice.restclient.OffenderRestClientFactory;\n+import uk.gov.justice.probation.courtcaseservice.restclient.communityapi.model.CommunityApiOffenderResponse;\n+import uk.gov.justice.probation.courtcaseservice.restclient.communityapi.model.OtherIds;\n import uk.gov.justice.probation.courtcaseservice.restclient.exception.OffenderNotFoundException;\n import uk.gov.justice.probation.courtcaseservice.service.model.Assessment;\n import uk.gov.justice.probation.courtcaseservice.service.model.Breach;\n import uk.gov.justice.probation.courtcaseservice.service.model.Conviction;\n import uk.gov.justice.probation.courtcaseservice.service.model.KeyValue;\n-import uk.gov.justice.probation.courtcaseservice.service.model.OffenderDetail;\n import uk.gov.justice.probation.courtcaseservice.service.model.ProbationRecord;\n import uk.gov.justice.probation.courtcaseservice.service.model.ProbationStatusDetail;\n import uk.gov.justice.probation.courtcaseservice.service.model.Registration;\n@@ -50,8 +51,10 @@\n @ExtendWith(MockitoExtension.class)\n class OffenderServiceTest {\n \n-    public static final String CRN = \"CRN\";\n-    public static final String CONVICTION_ID = \"123\";\n+    private static final String CRN = \"CRN\";\n+    private static final String CONVICTION_ID = \"123\";\n+    private static final Long OFFENDER_ID = 12345L;\n+    private static final String PROBATION_STATUS = \"CURRENT\";\n \n     private final DocumentTypeFilter documentTypeFilter\n         = new DocumentTypeFilter(singletonList(COURT_REPORT_DOCUMENT), singletonList(\"CJF\"));\n@@ -382,13 +385,24 @@ void beforeEach() {\n \n         @DisplayName(\"Simple get of offender detail\")\n         @Test\n-        void whenGetOffenderDetail_thenReturnSame() {\n-            var offenderDetail = OffenderDetail.builder().build();\n-            when(offenderRestClient.getOffenderDetailByCrn(CRN)).thenReturn(Mono.just(offenderDetail));\n+        void whenGetOffenderDetail_thenReturnDetailWithCorrectProbationStatus() {\n+            final var communityApiOffenderResponse = CommunityApiOffenderResponse.builder()\n+                    .offenderId(OFFENDER_ID)\n+                    .otherIds(OtherIds.builder()\n+                            .crn(\"CRN\")\n+                            .build())\n+                    .build();\n+            final var probationStatusDetail = ProbationStatusDetail.builder()\n+                    .status(PROBATION_STATUS)\n+                    .build();\n+\n+            when(offenderRestClient.getOffender(CRN)).thenReturn(Mono.just(communityApiOffenderResponse));\n+            when(offenderRestClient.getProbationStatusByCrn(CRN)).thenReturn(Mono.just(probationStatusDetail));\n \n             var detail = service.getOffenderDetail(CRN).block();\n \n-            assertThat(detail).isSameAs(offenderDetail);\n+            assertThat(detail.getOtherIds().getOffenderId()).isEqualTo(OFFENDER_ID);\n+            assertThat(detail.getProbationStatus()).isEqualTo(ProbationStatus.CURRENT);\n         }\n     }\n "
  },
  {
    "sha": "e096ee92f2b905b75f30c8190d0b787db4652f5d",
    "filename": "src/test/resources/mocks/mappings/GET_offender_all_server_error_SE12345.json",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/GET_offender_all_server_error_SE12345.json",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/GET_offender_all_server_error_SE12345.json",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/resources/mocks/mappings/GET_offender_all_server_error_SE12345.json?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -1,7 +1,7 @@\n {\n   \"request\": {\n     \"method\": \"GET\",\n-    \"urlPath\": \"/secure/offenders/crn/X320742/all\",\n+    \"urlPath\": \"/secure/offenders/crn/SE12345/all\",\n     \"headers\" : {\n       \"Content-Type\": {\n         \"equalTo\": \"application/json\"",
    "previous_filename": "src/test/resources/mocks/mappings/GET_offender_all_server_error_X320742.json"
  },
  {
    "sha": "8e00a8564f45d2bf7aadb4a140badf493ba9eb05",
    "filename": "src/test/resources/mocks/mappings/GET_offender_server_error_SE12345.json",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/GET_offender_server_error_SE12345.json",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/GET_offender_server_error_SE12345.json",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/resources/mocks/mappings/GET_offender_server_error_SE12345.json?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -1,7 +1,7 @@\n {\n   \"request\": {\n     \"method\": \"GET\",\n-    \"urlPath\": \"/secure/offenders/crn/X320742\",\n+    \"urlPath\": \"/secure/offenders/crn/SE12345\",\n     \"headers\" : {\n       \"Content-Type\": {\n         \"equalTo\": \"application/json\"",
    "previous_filename": "src/test/resources/mocks/mappings/GET_offender_server_error_X320742.json"
  },
  {
    "sha": "15b15081d6bc2c663a54942ee947199f7650d75d",
    "filename": "src/test/resources/mocks/mappings/offender-convictions/GET_convictions_server_error_SE12345.json",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-convictions/GET_convictions_server_error_SE12345.json",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-convictions/GET_convictions_server_error_SE12345.json",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/resources/mocks/mappings/offender-convictions/GET_convictions_server_error_SE12345.json?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -1,7 +1,7 @@\n {\n   \"request\": {\n     \"method\": \"GET\",\n-    \"urlPath\": \"/secure/offenders/crn/X320742/convictions\",\n+    \"urlPath\": \"/secure/offenders/crn/SE12345/convictions\",\n     \"headers\" : {\n       \"Content-Type\": {\n         \"equalTo\": \"application/json\"",
    "previous_filename": "src/test/resources/mocks/mappings/offender-convictions/GET_convictions_server_error_X320742.json"
  },
  {
    "sha": "e334630a691d4628b9c4949becd35bbfc2db8464",
    "filename": "src/test/resources/mocks/mappings/offender-nsis/GET_nsi_server_error_SE12345.json",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-nsis/GET_nsi_server_error_SE12345.json",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-nsis/GET_nsi_server_error_SE12345.json",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/resources/mocks/mappings/offender-nsis/GET_nsi_server_error_SE12345.json?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -0,0 +1,17 @@\n+{\n+  \"request\": {\n+    \"method\": \"GET\",\n+    \"urlPath\": \"/secure/offenders/crn/SE12345/convictions/2500297061/nsis\",\n+    \"headers\" : {\n+      \"Content-Type\": {\n+        \"equalTo\": \"application/json\"\n+      }\n+    }\n+  },\n+  \"response\": {\n+    \"status\": 500,\n+    \"headers\": {\n+      \"Content-Type\": \"application/json\"\n+    }\n+  }\n+}"
  },
  {
    "sha": "e5a8b7f62848755a6043216b1ca3fd3ba46258d2",
    "filename": "src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_403_CRN403.json",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_403_CRN403.json",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_403_CRN403.json",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_403_CRN403.json?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -1,4 +1,5 @@\n {\n+  \"priority\": 1,\n   \"request\": {\n     \"method\": \"GET\",\n     \"urlPath\": \"/secure/offenders/crn/CRN403/probationStatus\","
  },
  {
    "sha": "0dcb1e31871b3ea7affd654b36910827d9dee722",
    "filename": "src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_404_CRNXXX.json",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_404_CRNXXX.json",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_404_CRNXXX.json",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_404_CRNXXX.json?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -1,4 +1,5 @@\n {\n+  \"priority\": 1,\n   \"request\": {\n     \"method\": \"GET\",\n     \"urlPath\": \"/secure/offenders/crn/CRNXXX/probationStatus\","
  },
  {
    "sha": "e444cf37db2bb7b77dd8395944543ac520499a9d",
    "filename": "src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_500_SE12345.json",
    "status": "renamed",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_500_SE12345.json",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_500_SE12345.json",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_500_SE12345.json?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -1,7 +1,8 @@\n {\n+  \"priority\": 1,\n   \"request\": {\n     \"method\": \"GET\",\n-    \"urlPath\": \"/secure/offenders/crn/X320742/probationStatus\",\n+    \"urlPath\": \"/secure/offenders/crn/SE12345/probationStatus\",\n     \"headers\" : {\n       \"Content-Type\": {\n         \"equalTo\": \"application/json\"",
    "previous_filename": "src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_500_X320742.json"
  },
  {
    "sha": "d61538ec362d2a7ef77cbf7b6ae083ac6acfa520",
    "filename": "src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_success_2234.json",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_success_2234.json",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_success_2234.json",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_success_2234.json?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -0,0 +1,19 @@\n+{\n+  \"priority\": 1,\n+  \"request\": {\n+    \"method\": \"GET\",\n+    \"urlPath\": \"/secure/offenders/crn/2234/probationStatus\",\n+    \"headers\" : {\n+      \"Content-Type\": {\n+        \"equalTo\": \"application/json\"\n+      }\n+    }\n+  },\n+  \"response\": {\n+    \"status\": 200,\n+    \"headers\": {\n+      \"Content-Type\": \"application/json\"\n+    },\n+    \"body\": \"{\\\"status\\\": \\\"CURRENT\\\", \\\"previouslyKnownTerminationDate\\\": \\\"2010-04-05\\\", \\\"inBreach\\\": true, \\\"preSentenceActivity\\\": true}\"\n+  }\n+}"
  },
  {
    "sha": "48d267c0200395f57561dcc6632d1c99f23b8c65",
    "filename": "src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_success_any_crn.json",
    "status": "renamed",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/ministryofjustice/court-case-service/blob/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_success_any_crn.json",
    "raw_url": "https://github.com/ministryofjustice/court-case-service/raw/1e82144f23f62115ead318ee902a82171b7bde96/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_success_any_crn.json",
    "contents_url": "https://api.github.com/repos/ministryofjustice/court-case-service/contents/src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_success_any_crn.json?ref=1e82144f23f62115ead318ee902a82171b7bde96",
    "patch": "@@ -1,7 +1,8 @@\n {\n+  \"priority\": 5,\n   \"request\": {\n     \"method\": \"GET\",\n-    \"urlPath\": \"/secure/offenders/crn/X320741/probationStatus\",\n+    \"urlPattern\": \"/secure/offenders/crn/[A-Z0-9]*/probationStatus\",\n     \"headers\" : {\n       \"Content-Type\": {\n         \"equalTo\": \"application/json\"",
    "previous_filename": "src/test/resources/mocks/mappings/offender-probationStatus/GET_probation_status_success_X320741.json"
  }
]
