[
  {
    "sha": "3a376448ed7dfd537e51641df87696e68c85d49b",
    "filename": "src/main/java/uk/gov/justice/digital/delius/data/api/Nsi.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/ministryofjustice/community-api/blob/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/java/uk/gov/justice/digital/delius/data/api/Nsi.java",
    "raw_url": "https://github.com/ministryofjustice/community-api/raw/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/java/uk/gov/justice/digital/delius/data/api/Nsi.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/community-api/contents/src/main/java/uk/gov/justice/digital/delius/data/api/Nsi.java?ref=67f9366e6443f22c58fddf38722ade1bde0486f3",
    "patch": "@@ -18,7 +18,6 @@\n public class Nsi {\n     private Long nsiId;\n     private KeyValue nsiType;\n-    private KeyValue nsiSubType;\n     private KeyValue nsiOutcome;\n     private Requirement requirement;\n     private KeyValue nsiStatus;"
  },
  {
    "sha": "65de0bf83e01a59fccc78dddd9ca2acd90526b1b",
    "filename": "src/main/java/uk/gov/justice/digital/delius/data/api/ReferralSentRequest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 13,
    "changes": 14,
    "blob_url": "https://github.com/ministryofjustice/community-api/blob/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/java/uk/gov/justice/digital/delius/data/api/ReferralSentRequest.java",
    "raw_url": "https://github.com/ministryofjustice/community-api/raw/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/java/uk/gov/justice/digital/delius/data/api/ReferralSentRequest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/community-api/contents/src/main/java/uk/gov/justice/digital/delius/data/api/ReferralSentRequest.java?ref=67f9366e6443f22c58fddf38722ade1bde0486f3",
    "patch": "@@ -19,13 +19,6 @@\n @NoArgsConstructor\n @AllArgsConstructor\n public class ReferralSentRequest {\n-    @NotEmpty\n-    @ApiModelProperty(required = true)\n-    private String providerCode;\n-\n-    private String staffCode;\n-\n-    private String teamCode;\n \n     @NotNull\n     @ApiModelProperty(required = true)\n@@ -34,9 +27,7 @@\n \n     @NotEmpty\n     @ApiModelProperty(required = true)\n-    private String nsiType;\n-\n-    private String nsiSubType;\n+    private String serviceCategory;\n \n     @Positive\n     @NotNull\n@@ -46,8 +37,5 @@\n     @Positive\n     private Long requirementId;\n \n-    @NotEmpty\n-    private String nsiStatus;\n-\n     private String notes;\n }"
  },
  {
    "sha": "80d37d385f24f0507edc2b135c6bfebd6546752e",
    "filename": "src/main/java/uk/gov/justice/digital/delius/data/api/deliusapi/NewNsi.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/ministryofjustice/community-api/blob/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/java/uk/gov/justice/digital/delius/data/api/deliusapi/NewNsi.java",
    "raw_url": "https://github.com/ministryofjustice/community-api/raw/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/java/uk/gov/justice/digital/delius/data/api/deliusapi/NewNsi.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/community-api/contents/src/main/java/uk/gov/justice/digital/delius/data/api/deliusapi/NewNsi.java?ref=67f9366e6443f22c58fddf38722ade1bde0486f3",
    "patch": "@@ -14,7 +14,6 @@\n @AllArgsConstructor\n public class NewNsi {\n     private String type;\n-    private String subType;\n     private String offenderCrn;\n     private Long eventId;\n     private Long requirementId;"
  },
  {
    "sha": "643c344f662e646ec196bfdf4ed3d1730e7f0dfe",
    "filename": "src/main/java/uk/gov/justice/digital/delius/service/ReferralService.java",
    "status": "modified",
    "additions": 42,
    "deletions": 19,
    "changes": 61,
    "blob_url": "https://github.com/ministryofjustice/community-api/blob/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/java/uk/gov/justice/digital/delius/service/ReferralService.java",
    "raw_url": "https://github.com/ministryofjustice/community-api/raw/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/java/uk/gov/justice/digital/delius/service/ReferralService.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/community-api/contents/src/main/java/uk/gov/justice/digital/delius/service/ReferralService.java?ref=67f9366e6443f22c58fddf38722ade1bde0486f3",
    "patch": "@@ -1,6 +1,6 @@\n package uk.gov.justice.digital.delius.service;\n \n-import org.apache.commons.lang3.StringUtils;\n+import org.springframework.beans.factory.annotation.Value;\n import org.springframework.stereotype.Service;\n import org.springframework.transaction.annotation.Transactional;\n import uk.gov.justice.digital.delius.controller.BadRequestException;\n@@ -12,24 +12,43 @@\n import uk.gov.justice.digital.delius.data.api.deliusapi.NewNsiManager;\n \n import java.util.Collections;\n+import java.util.Map;\n import java.util.Optional;\n \n import static java.util.stream.Collectors.toList;\n \n @Service\n public class ReferralService {\n-    public static final String UNALLOCATED_STAFF_SUFFIX = \"UATU\";\n-    public static final String UNALLOCATED_TEAM_SUFFIX = \"UAT\";\n+\n+    private final String providerCode;\n+    private final String staffCode;\n+    private final String teamCode;\n+    private final String nsiStatus;\n+    private final Map<String, String> referralTypeToNsiTypeMapping;\n+\n     private final DeliusApiClient deliusApiClient;\n \n     private final NsiService nsiService;\n \n     private final OffenderService offenderService;\n \n-    public ReferralService(final DeliusApiClient deliusApiClient, final NsiService nsiService, final OffenderService offenderService) {\n+    public ReferralService(final DeliusApiClient deliusApiClient,\n+                           final NsiService nsiService,\n+                           final OffenderService offenderService,\n+                           @Value(\"${new-nsi.referral.provider-code}\") final String providerCode,\n+                           @Value(\"${new-nsi.referral.staff-code}\") final String staffCode,\n+                           @Value(\"${new-nsi.referral.team-code}\") final String teamCode,\n+                           @Value(\"${new-nsi.referral.nsi-status}\") final String nsiStatus,\n+                           @Value(\"#{${new-nsi.referral.referral-type-to-nsi-type}}\") final Map<String, String> referralTypeToNsiTypeMapping\n+    ) {\n         this.deliusApiClient = deliusApiClient;\n         this.nsiService = nsiService;\n         this.offenderService = offenderService;\n+        this.providerCode = providerCode;\n+        this.staffCode = staffCode;\n+        this.teamCode = teamCode;\n+        this.nsiStatus = nsiStatus;\n+        this.referralTypeToNsiTypeMapping = referralTypeToNsiTypeMapping;\n     }\n \n     @Transactional\n@@ -39,20 +58,19 @@ public ReferralSentResponse createNsiReferral(final String crn,\n \n         return ReferralSentResponse.builder().nsiId(existingNsi.map(Nsi::getNsiId).orElseGet(() -> {\n             var newNsiRequest = NewNsi.builder()\n-                .type(referralSent.getNsiType())\n-                .subType(referralSent.getNsiSubType())\n+                .type(getNsiType(referralSent.getServiceCategory()))\n                 .offenderCrn(crn)\n                 .eventId(referralSent.getConvictionId())\n                 .requirementId(referralSent.getRequirementId())\n                 .referralDate(referralSent.getDate())\n-                .status(referralSent.getNsiStatus())\n+                .status(nsiStatus)\n                 .statusDate(referralSent.getDate().atStartOfDay())\n                 .notes(referralSent.getNotes())\n-                .intendedProvider(referralSent.getProviderCode())\n+                .intendedProvider(providerCode)\n                 .manager(NewNsiManager.builder()\n-                    .staff(referralSent.getStaffCode())\n-                    .team(referralSent.getTeamCode())\n-                    .provider(referralSent.getProviderCode())\n+                    .staff(staffCode)\n+                    .team(teamCode)\n+                    .provider(providerCode)\n                     .build()).build();\n \n             return deliusApiClient.createNewNsi(newNsiRequest).getId();\n@@ -63,26 +81,31 @@ public ReferralSentResponse createNsiReferral(final String crn,\n         // determine if there is an existing suitable NSI\n         var offenderId = offenderService.offenderIdOfCrn(crn).orElseThrow(() -> new BadRequestException(\"Offender CRN not found\"));\n \n-        var existingNsis = nsiService.getNsiByCodes(offenderId, referralSent.getConvictionId(), Collections.singletonList(referralSent.getNsiType()))\n+        var existingNsis = nsiService.getNsiByCodes(offenderId, referralSent.getConvictionId(), Collections.singletonList(getNsiType(referralSent.getServiceCategory())))\n             .map(wrapper -> wrapper.getNsis().stream()\n                 // eventID, offenderID, nsiID, and callerID are handled in the NSI service\n-                .filter(nsi -> Optional.ofNullable(nsi.getNsiSubType()).map(n -> n.getCode().equals(referralSent.getNsiSubType())).orElse(false))\n                 .filter(nsi -> Optional.ofNullable(nsi.getReferralDate()).map(n -> n.equals(referralSent.getDate())).orElse(false))\n-                .filter(nsi -> Optional.ofNullable(nsi.getNsiStatus()).map(n -> n.getCode().equals(referralSent.getNsiStatus())).orElse(false))\n+                .filter(nsi -> Optional.ofNullable(nsi.getNsiStatus()).map(n -> n.getCode().equals(nsiStatus)).orElse(false))\n                 .filter(nsi -> Optional.ofNullable(nsi.getRequirement()).map(n -> nsi.getRequirement().getRequirementId().equals(referralSent.getRequirementId())).orElse(referralSent.getRequirementId() == null))\n-                .filter(nsi -> Optional.ofNullable(nsi.getIntendedProvider()).map(n -> n.getCode().equals(referralSent.getProviderCode())).orElse(false))\n+                .filter(nsi -> Optional.ofNullable(nsi.getIntendedProvider()).map(n -> n.getCode().equals(providerCode)).orElse(false))\n                 .filter(nsi -> Optional.ofNullable(nsi.getNsiManagers()).map(n -> n.stream().anyMatch(\n-                    nsiManager -> (StringUtils.isNotEmpty(referralSent.getStaffCode()) ? nsiManager.getStaff().getStaffCode().equals(referralSent.getStaffCode()) : nsiManager.getStaff().getStaffCode().endsWith(UNALLOCATED_STAFF_SUFFIX))\n-                        && (StringUtils.isNotEmpty(referralSent.getTeamCode()) ? nsiManager.getTeam().getCode().equals(referralSent.getTeamCode()) : nsiManager.getTeam().getCode().endsWith(UNALLOCATED_TEAM_SUFFIX))\n-                        && nsiManager.getProbationArea().getCode().equals(referralSent.getProviderCode())\n+                    nsiManager -> nsiManager.getStaff().getStaffCode().equals(staffCode)\n+                        && nsiManager.getTeam().getCode().equals(teamCode)\n+                        && nsiManager.getProbationArea().getCode().equals(providerCode)\n                     )\n                 ).orElse(false))\n                 .collect(toList())\n-            ).orElseThrow();\n+            ).orElse(Collections.emptyList());\n \n         if (existingNsis.size() > 1) {\n             throw new ConflictingRequestException(\"Multiple existing matching NSIs found\");\n         }\n         return existingNsis.stream().findFirst();\n     }\n+\n+    String getNsiType(final String referralType) {\n+        return Optional.ofNullable(referralTypeToNsiTypeMapping.get(referralType)).orElseThrow(\n+            () -> new IllegalArgumentException(\"Nsi Type mapping from referralType does not exist for: \" + referralType)\n+        );\n+    }\n }"
  },
  {
    "sha": "fd480116dfd7a183aa2dda4d204f17cdcd048c61",
    "filename": "src/main/java/uk/gov/justice/digital/delius/transformers/NsiTransformer.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/ministryofjustice/community-api/blob/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/java/uk/gov/justice/digital/delius/transformers/NsiTransformer.java",
    "raw_url": "https://github.com/ministryofjustice/community-api/raw/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/java/uk/gov/justice/digital/delius/transformers/NsiTransformer.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/community-api/contents/src/main/java/uk/gov/justice/digital/delius/transformers/NsiTransformer.java?ref=67f9366e6443f22c58fddf38722ade1bde0486f3",
    "patch": "@@ -23,7 +23,6 @@\n                 .nsiId(n.getNsiId())\n                 .requirement(RequirementTransformer.requirementOf(n.getRqmnt()))\n                 .nsiType(nsiTypeOf(n.getNsiType()))\n-                .nsiSubType(nsiSubtypeOf(n.getNsiSubType()))\n                 .nsiOutcome(nsiOutcomeOf(n.getNsiOutcome()))\n                 .nsiStatus(nsiStatusOf(n.getNsiStatus()))\n                 .actualStartDate(n.getActualStartDate())"
  },
  {
    "sha": "d8d668352bc28e8c6ec15a280cbe3700ae1cfe56",
    "filename": "src/main/resources/application.yml",
    "status": "modified",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/ministryofjustice/community-api/blob/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/resources/application.yml",
    "raw_url": "https://github.com/ministryofjustice/community-api/raw/67f9366e6443f22c58fddf38722ade1bde0486f3/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/ministryofjustice/community-api/contents/src/main/resources/application.yml?ref=67f9366e6443f22c58fddf38722ade1bde0486f3",
    "patch": "@@ -100,6 +100,19 @@ features:\n         update-prison-location: false\n   apply-limited-access-markers: false\n \n+new-nsi:\n+  referral:\n+    provider-code: CRS\n+    staff-code: CRSUATU\n+    team-code: CRSUAT\n+    nsi-status: INPROG\n+    referral-type-to-nsi-type: '{\n+      \"Accommodation\": \"CRS01\",\n+      \"Education, Training and Employment (ETE)\": \"CRS02\",\n+      \"Finance, Benefits and Debt (FBD)\": \"CRS03\",\n+      \"Dependency and Recovery (D&R)\": \"CRS04\"\n+      }'\n+\n smoke:\n   test:\n     aware: false"
  },
  {
    "sha": "1ef46631e0323749aae9974e5a03b98320b73704",
    "filename": "src/test/java/uk/gov/justice/digital/delius/controller/secure/ReferralControllerTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 7,
    "changes": 8,
    "blob_url": "https://github.com/ministryofjustice/community-api/blob/67f9366e6443f22c58fddf38722ade1bde0486f3/src/test/java/uk/gov/justice/digital/delius/controller/secure/ReferralControllerTest.java",
    "raw_url": "https://github.com/ministryofjustice/community-api/raw/67f9366e6443f22c58fddf38722ade1bde0486f3/src/test/java/uk/gov/justice/digital/delius/controller/secure/ReferralControllerTest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/community-api/contents/src/test/java/uk/gov/justice/digital/delius/controller/secure/ReferralControllerTest.java?ref=67f9366e6443f22c58fddf38722ade1bde0486f3",
    "patch": "@@ -7,7 +7,6 @@\n import org.junit.jupiter.api.Test;\n import uk.gov.justice.digital.delius.controller.advice.SecureControllerAdvice;\n import uk.gov.justice.digital.delius.data.api.ReferralSentRequest;\n-import uk.gov.justice.digital.delius.service.DeliusApiClient;\n import uk.gov.justice.digital.delius.service.ReferralService;\n \n import java.time.LocalDate;\n@@ -50,13 +49,8 @@ public void updateReferral_callsServiceAndReturnsOKWhenValidationSucceeds() thro\n         given()\n             .contentType(APPLICATION_JSON_VALUE)\n             .body(ReferralSentRequest.builder()\n-                .providerCode(\"N01\")\n-                .staffCode(\"NO1S12\")\n-                .teamCode(\"TEAM1\")\n                 .date(LocalDate.now())\n-                .nsiType(\"NSI1\")\n-                .nsiSubType(\"NSISUB\")\n-                .nsiStatus(\"REFER\")\n+                .serviceCategory(\"Dependency and Recovery (D&R)\")\n                 .convictionId(12354L)\n                 .requirementId(345678L).build()\n             )"
  },
  {
    "sha": "4a56135aeb5dd99b1b4a3b20accc83c240057be9",
    "filename": "src/test/java/uk/gov/justice/digital/delius/service/ReferralServiceTest.java",
    "status": "modified",
    "additions": 39,
    "deletions": 32,
    "changes": 71,
    "blob_url": "https://github.com/ministryofjustice/community-api/blob/67f9366e6443f22c58fddf38722ade1bde0486f3/src/test/java/uk/gov/justice/digital/delius/service/ReferralServiceTest.java",
    "raw_url": "https://github.com/ministryofjustice/community-api/raw/67f9366e6443f22c58fddf38722ade1bde0486f3/src/test/java/uk/gov/justice/digital/delius/service/ReferralServiceTest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/community-api/contents/src/test/java/uk/gov/justice/digital/delius/service/ReferralServiceTest.java?ref=67f9366e6443f22c58fddf38722ade1bde0486f3",
    "patch": "@@ -1,13 +1,11 @@\n package uk.gov.justice.digital.delius.service;\n \n-import org.hibernate.engine.loading.internal.CollectionLoadContext;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.api.extension.ExtendWith;\n import org.junit.jupiter.params.ParameterizedTest;\n import org.junit.jupiter.params.provider.Arguments;\n import org.junit.jupiter.params.provider.MethodSource;\n-import org.mockito.InjectMocks;\n import org.mockito.Mock;\n import org.mockito.junit.jupiter.MockitoExtension;\n import uk.gov.justice.digital.delius.controller.ConflictingRequestException;\n@@ -27,6 +25,8 @@\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n import java.util.Optional;\n import java.util.stream.Stream;\n \n@@ -41,38 +41,41 @@\n \n @ExtendWith(MockitoExtension.class)\n public class ReferralServiceTest {\n-    private static final String NSI_CODE = \"IPT\";\n     private static final Long OFFENDER_ID = 123L;\n     private static final String OFFENDER_CRN = \"X123456\";\n     private static final Long CONVICTION_ID = 2500295343L;\n     private static final Long REQUIREMENT_ID = 2500083652L;\n+    private static final String SERVICE_CATEGORY = \"Accommodation\";\n+    private static final String NSI_TYPE = \"CR01\";\n+    private static final String PROVIDER_CODE = \"CRS\";\n+    private static final String STAFF_CODE = \"CRSUATU\";\n+    private static final String TEAM_CODE = \"CRSUAT\";\n+    private static final String NSI_STATUS = \"INPROG\";\n+    private static final Map <String, String> SERVICE_CATEGORY_TO_NSI_TYPE_MAPPING = new HashMap<>(){{\n+        this.put(SERVICE_CATEGORY, NSI_TYPE);\n+    }};\n+\n \n     private static final Nsi MATCHING_NSI = Nsi.builder()\n         .nsiId(12345L)\n-        .nsiType(KeyValue.builder().code(NSI_CODE).build())\n-        .nsiSubType(KeyValue.builder().code(\"IPT1\").build())\n+        .nsiType(KeyValue.builder().code(NSI_TYPE).build())\n         .referralDate(LocalDate.of(2021, 1, 20))\n-        .nsiStatus(KeyValue.builder().code(\"REFER\").build())\n+        .nsiStatus(KeyValue.builder().code(NSI_STATUS).build())\n         .requirement(Requirement.builder().requirementId(REQUIREMENT_ID).build())\n-        .intendedProvider(ProbationArea.builder().code(\"YSS\").build())\n+        .intendedProvider(ProbationArea.builder().code(PROVIDER_CODE).build())\n         .nsiManagers(singletonList(\n             NsiManager.builder()\n-                .staff(StaffDetails.builder().staffCode(\"N06AAFU\").build())\n-                .team(Team.builder().code(\"N05MKU\").build())\n-                .probationArea(ProbationArea.builder().code(\"YSS\").build())\n+                .staff(StaffDetails.builder().staffCode(STAFF_CODE).build())\n+                .team(Team.builder().code(TEAM_CODE).build())\n+                .probationArea(ProbationArea.builder().code(PROVIDER_CODE).build())\n                 .build()))\n         .build();\n \n     private static final ReferralSentRequest NSI_REQUEST = ReferralSentRequest\n         .builder()\n-        .nsiType(NSI_CODE)\n-        .nsiSubType(\"IPT1\")\n+        .serviceCategory(SERVICE_CATEGORY)\n         .date(LocalDate.of(2021, 1, 20))\n-        .nsiStatus(\"REFER\")\n         .requirementId(REQUIREMENT_ID)\n-        .providerCode(\"YSS\")\n-        .staffCode(\"N06AAFU\")\n-        .teamCode(\"N05MKU\")\n         .convictionId(CONVICTION_ID)\n         .notes(\"A test note\")\n         .build();\n@@ -86,11 +89,13 @@\n     @Mock\n     NsiService nsiService;\n \n-    @InjectMocks\n     ReferralService referralService;\n \n     @BeforeEach\n     public void setup() {\n+        referralService = new ReferralService(deliusApiClient, nsiService, offenderService,\n+            PROVIDER_CODE, STAFF_CODE, TEAM_CODE, NSI_STATUS, SERVICE_CATEGORY_TO_NSI_TYPE_MAPPING);\n+\n         when(offenderService.offenderIdOfCrn(OFFENDER_CRN)).thenReturn(Optional.of(OFFENDER_ID));\n     }\n \n@@ -100,7 +105,7 @@ public void creatingNewNsiWhenMatchingOneExistsReturnsExistingNsi() {\n \n         var response = referralService.createNsiReferral(\"X123456\", NSI_REQUEST);\n \n-        verify(nsiService).getNsiByCodes(OFFENDER_ID, CONVICTION_ID, singletonList(NSI_CODE));\n+        verify(nsiService).getNsiByCodes(OFFENDER_ID, CONVICTION_ID, singletonList(NSI_TYPE));\n         verifyNoInteractions(deliusApiClient);\n \n         assertThat(response.getNsiId()).isEqualTo(MATCHING_NSI.getNsiId());\n@@ -112,7 +117,7 @@ public void creatingNewNsiWhenMultipleMatchingExistReturnsConflict() {\n \n         assertThrows(ConflictingRequestException.class, () -> referralService.createNsiReferral(\"X123456\", NSI_REQUEST));\n \n-        verify(nsiService).getNsiByCodes(OFFENDER_ID, CONVICTION_ID, singletonList(NSI_CODE));\n+        verify(nsiService).getNsiByCodes(OFFENDER_ID, CONVICTION_ID, singletonList(NSI_TYPE));\n         verifyNoInteractions(deliusApiClient);\n     }\n \n@@ -125,11 +130,10 @@ public void creatingNewNsiCallsDeliusApiWhenNonExisting() {\n \n         var response = referralService.createNsiReferral(\"X123456\", NSI_REQUEST);\n \n-        verify(nsiService).getNsiByCodes(OFFENDER_ID, CONVICTION_ID, singletonList(NSI_CODE));\n+        verify(nsiService).getNsiByCodes(OFFENDER_ID, CONVICTION_ID, singletonList(NSI_TYPE));\n \n         verify(deliusApiClient).createNewNsi(eq(NewNsi.builder()\n-            .type(NSI_CODE)\n-            .subType(\"IPT1\")\n+            .type(NSI_TYPE)\n             .offenderCrn(OFFENDER_CRN)\n             .eventId(CONVICTION_ID)\n             .requirementId(REQUIREMENT_ID)\n@@ -139,12 +143,12 @@ public void creatingNewNsiCallsDeliusApiWhenNonExisting() {\n             .startDate(null)\n             .endDate(null)\n             .length(null)\n-            .status(\"REFER\")\n+            .status(NSI_STATUS)\n             .statusDate(LocalDateTime.of(2021, 1, 20, 0, 0))\n             .outcome(null)\n             .notes(\"A test note\")\n-            .intendedProvider(\"YSS\")\n-            .manager(NewNsiManager.builder().staff(\"N06AAFU\").team(\"N05MKU\").provider(\"YSS\").build())\n+            .intendedProvider(PROVIDER_CODE)\n+            .manager(NewNsiManager.builder().staff(STAFF_CODE).team(TEAM_CODE).provider(PROVIDER_CODE).build())\n             .build()));\n \n         assertThat(response.getNsiId()).isEqualTo(deliusApiResponse.getId());\n@@ -160,18 +164,21 @@ public void noNsisAreReturnedWhenNotExactMatch(final ReferralSentRequest nsiRequ\n         assertThat(response.isPresent()).isEqualTo(exists);\n     }\n \n+    @Test\n+    public void throwsExceptionIfNsiTypeMappingNotFound() {\n+        var nsiRequest = NSI_REQUEST\n+            .toBuilder()\n+            .serviceCategory(\"invalid one\")\n+            .build();\n+\n+        assertThrows(IllegalArgumentException.class, () -> referralService.createNsiReferral(OFFENDER_CRN, nsiRequest));\n+    }\n+\n     private static Stream<Arguments> nsis() {\n         return Stream.of(\n             Arguments.of(NSI_REQUEST, MATCHING_NSI, true),\n-            Arguments.of(NSI_REQUEST.withNsiSubType(\"NOMATCH\"), MATCHING_NSI, false),\n             Arguments.of(NSI_REQUEST.withDate(LocalDate.of(2017, 1, 1)), MATCHING_NSI, false),\n-            Arguments.of(NSI_REQUEST.withNsiStatus(\"NOMATCH\"), MATCHING_NSI, false),\n             Arguments.of(NSI_REQUEST.withRequirementId(1L), MATCHING_NSI, false),\n-            Arguments.of(NSI_REQUEST.withProviderCode(\"NOMATCH\"), MATCHING_NSI, false),\n-            Arguments.of(NSI_REQUEST.withStaffCode(\"NOMATCH\"), MATCHING_NSI, false),\n-            Arguments.of(NSI_REQUEST.withTeamCode(\"NOMATCH\"), MATCHING_NSI, false),\n-            Arguments.of(NSI_REQUEST.withTeamCode(null), MATCHING_NSI.withNsiManagers(Collections.singletonList(MATCHING_NSI.getNsiManagers().get(0).withTeam(Team.builder().code(\"N06UAT\").build()))), true),\n-            Arguments.of(NSI_REQUEST.withStaffCode(null), MATCHING_NSI.withNsiManagers(Collections.singletonList(MATCHING_NSI.getNsiManagers().get(0).withStaff(StaffDetails.builder().staffCode(\"N06UATU\").build()))), true),\n             Arguments.of(NSI_REQUEST.withRequirementId(null), MATCHING_NSI.withRequirement(null), true)\n         );\n     }"
  },
  {
    "sha": "cc6efdc111cc10862b7237fb00f73299fec0e829",
    "filename": "src/test/java/uk/gov/justice/digital/delius/transformers/NsiTransformerTest.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/ministryofjustice/community-api/blob/67f9366e6443f22c58fddf38722ade1bde0486f3/src/test/java/uk/gov/justice/digital/delius/transformers/NsiTransformerTest.java",
    "raw_url": "https://github.com/ministryofjustice/community-api/raw/67f9366e6443f22c58fddf38722ade1bde0486f3/src/test/java/uk/gov/justice/digital/delius/transformers/NsiTransformerTest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/community-api/contents/src/test/java/uk/gov/justice/digital/delius/transformers/NsiTransformerTest.java?ref=67f9366e6443f22c58fddf38722ade1bde0486f3",
    "patch": "@@ -68,7 +68,6 @@ void testTransform() {\n         assertThat(nsi.getReferralDate()).isEqualTo(referralDate);\n         assertThat(nsi.getStatusDateTime()).isEqualTo(statusDate);\n         assertThat(nsi.getNsiType()).isEqualTo(KeyValue.builder().code(\"TYPE\").description(\"Type Desc\").build());\n-        assertThat(nsi.getNsiSubType()).isEqualTo(KeyValue.builder().code(\"STC\").description(\"Sub Type Desc\").build());\n         assertThat(nsi.getNsiOutcome()).isEqualTo(KeyValue.builder().code(\"OC\").description(\"Outcome Type Desc\").build());\n         assertThat(nsi.getRequirement().getActive()).isEqualTo(true);\n         assertThat(nsi.getLength()).isEqualTo(12L);"
  },
  {
    "sha": "62791b34400ef1e7192b469953a080127bc93990",
    "filename": "src/testIntegration/java/uk/gov/justice/digital/delius/controller/secure/OffendersResource_getOffenderNsisByCrn.java",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/ministryofjustice/community-api/blob/67f9366e6443f22c58fddf38722ade1bde0486f3/src/testIntegration/java/uk/gov/justice/digital/delius/controller/secure/OffendersResource_getOffenderNsisByCrn.java",
    "raw_url": "https://github.com/ministryofjustice/community-api/raw/67f9366e6443f22c58fddf38722ade1bde0486f3/src/testIntegration/java/uk/gov/justice/digital/delius/controller/secure/OffendersResource_getOffenderNsisByCrn.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/community-api/contents/src/testIntegration/java/uk/gov/justice/digital/delius/controller/secure/OffendersResource_getOffenderNsisByCrn.java?ref=67f9366e6443f22c58fddf38722ade1bde0486f3",
    "patch": "@@ -55,7 +55,6 @@ public void getNsiByCrnAndNsiId() {\n         assertThat(nsi.getNotes()).isEqualTo(\"Some notes added to the breach.\");\n         assertThat(nsi.getNsiStatus()).isEqualTo(KeyValue.builder().code(\"BRE01\").description(\"Breach Initiated\").build());\n         assertThat(nsi.getNsiType()).isEqualTo(KeyValue.builder().code(\"BRE\").description(\"Breach Request\").build());\n-        assertThat(nsi.getNsiSubType()).isEqualTo(KeyValue.builder().code(\"BRE01\").description(\"Community Order / SSO\").build());\n         assertThat(nsi.getLengthUnit()).isEqualTo(\"Months\");\n         assertThat(nsi.getNsiManagers().get(0).getProbationArea().getDescription()).isEqualTo(\"NPS North East\");\n         assertThat(nsi.getNsiManagers().get(0).getProbationArea().getCode()).isEqualTo(\"N02\");"
  },
  {
    "sha": "56382876ca0cfe866076125f1995e3ddebe8f29f",
    "filename": "src/testIntegration/java/uk/gov/justice/digital/delius/controller/secure/ReferralAPITest.java",
    "status": "modified",
    "additions": 2,
    "deletions": 12,
    "changes": 14,
    "blob_url": "https://github.com/ministryofjustice/community-api/blob/67f9366e6443f22c58fddf38722ade1bde0486f3/src/testIntegration/java/uk/gov/justice/digital/delius/controller/secure/ReferralAPITest.java",
    "raw_url": "https://github.com/ministryofjustice/community-api/raw/67f9366e6443f22c58fddf38722ade1bde0486f3/src/testIntegration/java/uk/gov/justice/digital/delius/controller/secure/ReferralAPITest.java",
    "contents_url": "https://api.github.com/repos/ministryofjustice/community-api/contents/src/testIntegration/java/uk/gov/justice/digital/delius/controller/secure/ReferralAPITest.java?ref=67f9366e6443f22c58fddf38722ade1bde0486f3",
    "patch": "@@ -60,13 +60,8 @@ public void shouldReturnOKAfterCreatingANewNsi() {\n                 .contentType(String.valueOf(ContentType.APPLICATION_JSON))\n                 .body(writeValueAsString(ReferralSentRequest\n                     .builder()\n-                    .providerCode(\"YSS\")\n-                    .staffCode(\"N06AAFU\")\n-                    .teamCode(\"N05MKU\")\n                     .date(LocalDate.now())\n-                    .nsiType(\"IPT\")\n-                    .nsiSubType(\"IPT1\")\n-                    .nsiStatus(\"REFER\")\n+                    .serviceCategory(\"Accommodation\")\n                     .convictionId(2500295343L)\n                     .requirementId(2500083652L)\n                     .notes(\"A test note\")\n@@ -91,13 +86,8 @@ public void shouldReturnOKWhenReturningExistingNsi() {\n             .contentType(String.valueOf(ContentType.APPLICATION_JSON))\n             .body(writeValueAsString(ReferralSentRequest\n                 .builder()\n-                .providerCode(\"N02\")\n-                .staffCode(\"N02UATU\")\n-                .teamCode(\"N02UAT\")\n                 .date(LocalDate.of(2019,9,2))\n-                .nsiType(\"APCUS\")\n-                .nsiSubType(\"APHSP\")\n-                .nsiStatus(\"REFER\")\n+                .serviceCategory(\"Accommodation\")\n                 .convictionId(2500295345L)\n                 .notes(\"A test note\")\n                 .build()))"
  }
]
