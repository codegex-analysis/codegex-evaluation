[
  {
    "sha": "3398333e32eccb235e713934e3617e896128aaa8",
    "filename": "chpl/chpl-api/src/main/resources/log4j2-xinclude-file-appenders.xml",
    "status": "modified",
    "additions": 0,
    "deletions": 11,
    "changes": 11,
    "blob_url": "https://github.com/chpladmin/chpl-api/blob/de7bd167cf308fca7317c4d224da27934ce7ac71/chpl/chpl-api/src/main/resources/log4j2-xinclude-file-appenders.xml",
    "raw_url": "https://github.com/chpladmin/chpl-api/raw/de7bd167cf308fca7317c4d224da27934ce7ac71/chpl/chpl-api/src/main/resources/log4j2-xinclude-file-appenders.xml",
    "contents_url": "https://api.github.com/repos/chpladmin/chpl-api/contents/chpl/chpl-api/src/main/resources/log4j2-xinclude-file-appenders.xml?ref=de7bd167cf308fca7317c4d224da27934ce7ac71",
    "patch": "@@ -396,15 +396,4 @@\n                 interval=\"1\" modulate=\"true\" />\n         </Policies>\n     </RollingFile>\n-    <RollingFile name=\"measureFixJob\"\n-        fileName=\"${logDir}/scheduler/measureFixJob.log\"\n-        filePattern=\"${logDir}/scheduler/history/measureFixJob-%d{yyyy-MM-dd}.log\">\n-        <PatternLayout>\n-            <Pattern>%d{ISO8601} %-5p (%t) [%C{1}(%M:%L)] %m%n</Pattern>\n-        </PatternLayout>\n-        <Policies>\n-            <TimeBasedTriggeringPolicy\n-                interval=\"1\" modulate=\"true\" />\n-        </Policies>\n-    </RollingFile>\n </Appenders>"
  },
  {
    "sha": "ab4805fb3d63a36c8f1cc9b6d1e16e6a26522c8e",
    "filename": "chpl/chpl-api/src/main/resources/log4j2-xinclude-loggers.xml",
    "status": "modified",
    "additions": 0,
    "deletions": 4,
    "changes": 4,
    "blob_url": "https://github.com/chpladmin/chpl-api/blob/de7bd167cf308fca7317c4d224da27934ce7ac71/chpl/chpl-api/src/main/resources/log4j2-xinclude-loggers.xml",
    "raw_url": "https://github.com/chpladmin/chpl-api/raw/de7bd167cf308fca7317c4d224da27934ce7ac71/chpl/chpl-api/src/main/resources/log4j2-xinclude-loggers.xml",
    "contents_url": "https://api.github.com/repos/chpladmin/chpl-api/contents/chpl/chpl-api/src/main/resources/log4j2-xinclude-loggers.xml?ref=de7bd167cf308fca7317c4d224da27934ce7ac71",
    "patch": "@@ -147,8 +147,4 @@\n         additivity=\"false\">\n         <AppenderRef ref=\"annualReportGenerationJob\" />\n     </Logger>\n-    <Logger name=\"measureFixJobLogger\" level=\"INFO\"\n-        additivity=\"false\">\n-        <AppenderRef ref=\"measureFixJob\" />\n-    </Logger>\n </Loggers>"
  },
  {
    "sha": "8af032e23deca6f04c3da5f49e1b33eec1606eff",
    "filename": "chpl/chpl-resources/src/main/resources/jobs.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 16,
    "changes": 20,
    "blob_url": "https://github.com/chpladmin/chpl-api/blob/de7bd167cf308fca7317c4d224da27934ce7ac71/chpl/chpl-resources/src/main/resources/jobs.xml",
    "raw_url": "https://github.com/chpladmin/chpl-api/raw/de7bd167cf308fca7317c4d224da27934ce7ac71/chpl/chpl-resources/src/main/resources/jobs.xml",
    "contents_url": "https://api.github.com/repos/chpladmin/chpl-api/contents/chpl/chpl-resources/src/main/resources/jobs.xml?ref=de7bd167cf308fca7317c4d224da27934ce7ac71",
    "patch": "@@ -8,6 +8,10 @@\n         <delete-triggers-in-group>triggerJob</delete-triggers-in-group>\n         <delete-triggers-in-group>interruptJob</delete-triggers-in-group>\n         <!-- BEGIN REMOVE after PROD push -->\n+        <delete-job>\n+            <name>G1/G2 Measure Data Fix</name>\n+            <group>systemJobs</group>\n+        </delete-job\n         <!-- END remove after PROD push -->\n     </pre-processing-commands>\n     <processing-directives>\n@@ -676,21 +680,5 @@\n                 </entry>\n             </job-data-map>\n         </job>\n-\n-        <!-- G1/G2 Measure Data Fix -->\n-        <job>\n-            <name>G1/G2 Measure Data Fix</name>\n-            <group>systemJobs</group>\n-            <description>Fixes the G1/G2 Measure data </description>\n-            <job-class>gov.healthit.chpl.scheduler.job.measurefix.MeasureFixJob</job-class>\n-            <durability>true</durability>\n-            <recover>false</recover>\n-            <job-data-map>\n-                <entry>\n-                    <key>frequency</key>\n-                    <value>DAILY</value>\n-                </entry>\n-            </job-data-map>\n-        </job>\n     </schedule>\n </job-scheduling-data>"
  },
  {
    "sha": "2ddddaabcdfee549137274a21fb5fd91f70ecfd9",
    "filename": "chpl/chpl-service/src/main/java/gov/healthit/chpl/manager/CertifiedProductManager.java",
    "status": "modified",
    "additions": 1,
    "deletions": 20,
    "changes": 21,
    "blob_url": "https://github.com/chpladmin/chpl-api/blob/de7bd167cf308fca7317c4d224da27934ce7ac71/chpl/chpl-service/src/main/java/gov/healthit/chpl/manager/CertifiedProductManager.java",
    "raw_url": "https://github.com/chpladmin/chpl-api/raw/de7bd167cf308fca7317c4d224da27934ce7ac71/chpl/chpl-service/src/main/java/gov/healthit/chpl/manager/CertifiedProductManager.java",
    "contents_url": "https://api.github.com/repos/chpladmin/chpl-api/contents/chpl/chpl-service/src/main/java/gov/healthit/chpl/manager/CertifiedProductManager.java?ref=de7bd167cf308fca7317c4d224da27934ce7ac71",
    "patch": "@@ -1113,23 +1113,6 @@ public CertifiedProductDTO update(ListingUpdateRequest updateRequest)\n             throws AccessDeniedException, EntityRetrievalException, JsonProcessingException, EntityCreationException,\n             InvalidArgumentsException, IOException, ValidationException, MissingReasonException {\n \n-        return update(updateRequest, true);\n-    }\n-\n-\n-    @PreAuthorize(\"@permissions.hasAccess(T(gov.healthit.chpl.permissions.Permissions).CERTIFIED_PRODUCT, \"\n-            + \"T(gov.healthit.chpl.permissions.domains.CertifiedProductDomainPermissions).UPDATE, #updateRequest)\")\n-    @Transactional(rollbackFor = {\n-            EntityRetrievalException.class, EntityCreationException.class, JsonProcessingException.class,\n-            AccessDeniedException.class, InvalidArgumentsException.class\n-    })\n-    @CacheEvict(value = {\n-            CacheNames.ALL_DEVELOPERS, CacheNames.ALL_DEVELOPERS_INCLUDING_DELETED, CacheNames.COLLECTIONS_DEVELOPERS, CacheNames.COLLECTIONS_LISTINGS\n-    }, allEntries = true)\n-    public CertifiedProductDTO update(ListingUpdateRequest updateRequest, Boolean logActivity)\n-            throws AccessDeniedException, EntityRetrievalException, JsonProcessingException, EntityCreationException,\n-            InvalidArgumentsException, IOException, ValidationException, MissingReasonException {\n-\n         CertifiedProductSearchDetails updatedListing = updateRequest.getListing();\n         CertifiedProductSearchDetails existingListing = certifiedProductDetailsManager\n                 .getCertifiedProductDetails(updatedListing.getId());\n@@ -1149,9 +1132,7 @@ public CertifiedProductDTO update(ListingUpdateRequest updateRequest, Boolean lo\n         updateListingsChildData(existingListing, updatedListing);\n \n         // Log the activity\n-        if (logActivity) {\n-            logCertifiedProductUpdateActivity(existingListing, updateRequest.getReason());\n-        }\n+        logCertifiedProductUpdateActivity(existingListing, updateRequest.getReason());\n \n         return result;\n     }"
  },
  {
    "sha": "318cdae87b3f44bba836ea9a761476e7acbfcae3",
    "filename": "chpl/chpl-service/src/main/java/gov/healthit/chpl/scheduler/job/measurefix/MeasureFixJob.java",
    "status": "removed",
    "additions": 0,
    "deletions": 138,
    "changes": 138,
    "blob_url": "https://github.com/chpladmin/chpl-api/blob/a5270fdefbe31f56611c28a17d14cf1ab5140fba/chpl/chpl-service/src/main/java/gov/healthit/chpl/scheduler/job/measurefix/MeasureFixJob.java",
    "raw_url": "https://github.com/chpladmin/chpl-api/raw/a5270fdefbe31f56611c28a17d14cf1ab5140fba/chpl/chpl-service/src/main/java/gov/healthit/chpl/scheduler/job/measurefix/MeasureFixJob.java",
    "contents_url": "https://api.github.com/repos/chpladmin/chpl-api/contents/chpl/chpl-service/src/main/java/gov/healthit/chpl/scheduler/job/measurefix/MeasureFixJob.java?ref=a5270fdefbe31f56611c28a17d14cf1ab5140fba",
    "patch": "@@ -1,138 +0,0 @@\n-package gov.healthit.chpl.scheduler.job.measurefix;\n-\n-import java.util.List;\n-import java.util.concurrent.CompletableFuture;\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Executors;\n-import java.util.stream.Collectors;\n-\n-import org.quartz.Job;\n-import org.quartz.JobExecutionContext;\n-import org.quartz.JobExecutionException;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.security.core.context.SecurityContextHolder;\n-import org.springframework.web.context.support.SpringBeanAutowiringSupport;\n-\n-import gov.healthit.chpl.auth.permission.GrantedPermission;\n-import gov.healthit.chpl.auth.user.JWTAuthenticatedUser;\n-import gov.healthit.chpl.auth.user.User;\n-import gov.healthit.chpl.dao.CertifiedProductDAO;\n-import gov.healthit.chpl.domain.CertifiedProductSearchDetails;\n-import gov.healthit.chpl.domain.ListingUpdateRequest;\n-import gov.healthit.chpl.domain.concept.CertificationEditionConcept;\n-import gov.healthit.chpl.dto.CertifiedProductDetailsDTO;\n-import gov.healthit.chpl.exception.EntityRetrievalException;\n-import gov.healthit.chpl.exception.ValidationException;\n-import gov.healthit.chpl.manager.CertifiedProductDetailsManager;\n-import gov.healthit.chpl.manager.CertifiedProductManager;\n-import gov.healthit.chpl.validation.listing.ListingValidatorFactory;\n-import gov.healthit.chpl.validation.listing.Validator;\n-import lombok.extern.log4j.Log4j2;\n-\n-@Log4j2(topic = \"measureFixJobLogger\")\n-public class MeasureFixJob implements Job {\n-\n-    @Autowired\n-    private CertifiedProductDAO certifiedProductDAO;\n-\n-    @Autowired\n-    private CertifiedProductDetailsManager certifiedProductDetailsManager;\n-\n-    @Autowired\n-    private CertifiedProductManager certifiedProductManager;\n-\n-    @Autowired\n-    private ListingValidatorFactory validatorFactory;\n-\n-    @Value(\"${executorThreadCountForQuartzJobs}\")\n-    private Integer threadCount;\n-\n-    @Override\n-    public void execute(JobExecutionContext context) throws JobExecutionException {\n-        SpringBeanAutowiringSupport.processInjectionBasedOnCurrentContext(this);\n-        LOGGER.info(\"********* Starting the G1/G2 Measure Data Fix job. *********\");\n-        try {\n-            setSecurityContext();\n-            ExecutorService executorService = Executors.newFixedThreadPool(threadCount);\n-\n-            List<CompletableFuture<Boolean>> futures = getAll2015CertifiedProducts().stream()\n-                    .map(cp -> CompletableFuture.supplyAsync(() ->\n-                            processListing(cp), executorService))\n-                    .collect(Collectors.toList());\n-\n-            CompletableFuture<Void> combinedFutures = CompletableFuture\n-                    .allOf(futures.toArray(new CompletableFuture[futures.size()]));\n-\n-            // This is not blocking - presumably because the job executes using it's own ExecutorService\n-            // This is necessary so that the system can indicate that the job and it's threads are still running\n-            combinedFutures.get();\n-            LOGGER.info(\"********* Completed the G1/G2 Measure Data Fix job. *********\");\n-        } catch (Exception e) {\n-            LOGGER.catching(e);\n-        }\n-    }\n-\n-    private List<CertifiedProductDetailsDTO> getAll2015CertifiedProducts() {\n-        LOGGER.info(\"Retrieving all 2015 listings\");\n-        List<CertifiedProductDetailsDTO> listings = certifiedProductDAO.findByEdition(\n-                CertificationEditionConcept.CERTIFICATION_EDITION_2015.getYear());\n-        LOGGER.info(\"Completed retreiving all 2015 listings\");\n-        return listings;\n-    }\n-\n-    private Boolean processListing(CertifiedProductDetailsDTO cp) {\n-        try {\n-            CertifiedProductSearchDetails listing = certifiedProductDetailsManager.getCertifiedProductDetails(cp.getId());\n-            listing = validateListing(listing);\n-            if (listing.getErrorMessages().size() > 0) {\n-                return resaveListing(listing);\n-            }\n-        } catch (EntityRetrievalException e) {\n-            LOGGER.catching(e);\n-            return false;\n-        }\n-        return false;\n-    }\n-\n-    private CertifiedProductSearchDetails validateListing(CertifiedProductSearchDetails listing) {\n-        Validator validator = validatorFactory.getValidator(listing);\n-        validator.validate(listing);\n-        LOGGER.info(\"Completed validation of listing: \" + listing.getId());\n-        return listing;\n-    }\n-\n-    private Boolean resaveListing(CertifiedProductSearchDetails listing) {\n-        try {\n-            ListingUpdateRequest request = ListingUpdateRequest.builder()\n-                    .listing(listing)\n-                    .acknowledgeWarnings(true)\n-                    .reason(null)\n-                    .build();\n-\n-            certifiedProductManager.update(request, false);\n-            LOGGER.info(String.format(\"Successfully updated listing %s (%s).\", listing.getChplProductNumber(), listing.getId().toString()));\n-            return true;\n-        } catch (ValidationException e) {\n-            LOGGER.info(String.format(\"Could not update listing %s (%s) for the following reasons:\", listing.getChplProductNumber(), listing.getId().toString()));\n-            e.getErrorMessages().stream()\n-                .forEach(message -> LOGGER.info(message));\n-            return false;\n-        } catch (Exception e) {\n-            LOGGER.info(String.format(\"Could not update listing %s (%s) for the following reasons:\", listing.getChplProductNumber(), listing.getId().toString()));\n-            LOGGER.catching(e);\n-            return false;\n-        }\n-    }\n-\n-    private void setSecurityContext() {\n-        JWTAuthenticatedUser adminUser = new JWTAuthenticatedUser();\n-        adminUser.setFullName(\"Administrator\");\n-        adminUser.setId(User.ADMIN_USER_ID);\n-        adminUser.setFriendlyName(\"Admin\");\n-        adminUser.setSubjectName(\"admin\");\n-        adminUser.getPermissions().add(new GrantedPermission(\"ROLE_ADMIN\"));\n-\n-        SecurityContextHolder.getContext().setAuthentication(adminUser);\n-    }\n-}"
  }
]
