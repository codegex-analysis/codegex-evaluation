[
  {
    "sha": "adc074219978075bbfbf67b0a2e19d2d01f760d1",
    "filename": "README.md",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/README.md",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/README.md",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/README.md?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -15,4 +15,6 @@\n * [Контейнеры и алгоритмы.](hw04-generics)\n * [Аннотации.](hw06-reflections)\n * [Сборщик мусора.](-)\n-* [Байт код, class-loader, инструментация, asm.](hw10-byteCodes)\n\\ No newline at end of file\n+* [Байт код, class-loader, инструментация, asm.](hw10-byteCodes)\n+* [Концепты проектирования ООП.](hw12-solid)\n+* [Паттерны](hw15-patterns)\n\\ No newline at end of file"
  },
  {
    "sha": "e3f726cdd4b81c82901b714a0c5478cee08af3e8",
    "filename": "hw15-patterns/README.md",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/README.md",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/README.md",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/README.md?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,14 @@\n+# Домашнее задание\n+## Structural patterns.\n+Обработчик сообщений\n+\n+## Цель\n+Применить на практике шаблоны проектирования.\n+\n+## Задание\n+Реализовать to do:\n+1. Добавить поля field11 - field13 (для field13 используйте класс ObjectForMessage)\n+2. Сделать процессор, который поменяет местами значения field11 и field12\n+3. Сделать процессор, который будет выбрасывать исключение в четную секунду (сделайте тест с гарантированным результатом)\n+Секунда должна определяться во время выполнения.\n+4. Сделать Listener для ведения истории: старое сообщение — новое (подумайте, как сделать, чтобы сообщения не портились)\n\\ No newline at end of file"
  },
  {
    "sha": "3cee72159577de7623a8e0e759652f8c3b1a0b59",
    "filename": "hw15-patterns/build.gradle",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/build.gradle",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/build.gradle",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/build.gradle?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,28 @@\n+plugins {\n+    id 'java'\n+}\n+\n+sourceCompatibility = JavaVersion.VERSION_15\n+targetCompatibility = JavaVersion.VERSION_15\n+\n+dependencies {\n+    testImplementation ('org.junit.jupiter:junit-jupiter-api')\n+    testImplementation ('org.junit.jupiter:junit-jupiter-engine')\n+    testImplementation ('org.junit.jupiter:junit-jupiter-params')\n+    testImplementation ('org.assertj:assertj-core')\n+    testImplementation ('org.mockito:mockito-core')\n+    testImplementation ('org.mockito:mockito-junit-jupiter')\n+}\n+\n+test {\n+    useJUnitPlatform()\n+    testLogging {\n+        events \"passed\", \"skipped\", \"failed\"\n+    }\n+}\n+\n+tasks.withType(JavaCompile) {\n+    options.with {\n+        encoding = 'UTF-8'\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a567844fa3bef76e78c2dbcb24a9b603782c0c1b",
    "filename": "hw15-patterns/src/main/java/ru/rt/Demo.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/Demo.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/Demo.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/Demo.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,34 @@\n+package ru.rt;\n+\n+import ru.rt.handler.ComplexProcessor;\n+import ru.rt.listener.ListenerPrinter;\n+import ru.rt.model.Message;\n+import ru.rt.processor.LoggerProcessor;\n+import ru.rt.processor.ProcessorConcatFields;\n+import ru.rt.processor.ProcessorUpperField10;\n+\n+import java.util.List;\n+\n+public class Demo {\n+    public static void main(String[] args) {\n+        var processors = List.of(new ProcessorConcatFields(),\n+                new LoggerProcessor(new ProcessorUpperField10()));\n+\n+        var complexProcessor = new ComplexProcessor(processors, (ex) -> {});\n+        var listenerPrinter = new ListenerPrinter();\n+        complexProcessor.addListener(listenerPrinter);\n+\n+        var message = new Message.Builder(1L)\n+                .field1(\"field1\")\n+                .field2(\"field2\")\n+                .field3(\"field3\")\n+                .field6(\"field6\")\n+                .field10(\"field10\")\n+                .build();\n+\n+        var result = complexProcessor.handle(message);\n+        System.out.println(\"result:\" + result);\n+\n+        complexProcessor.removeListener(listenerPrinter);\n+    }\n+}"
  },
  {
    "sha": "3641eee3b801480ddaf84808c3dd68ab3dd53bbd",
    "filename": "hw15-patterns/src/main/java/ru/rt/HomeWork.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/HomeWork.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/HomeWork.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/HomeWork.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,42 @@\n+package ru.rt;\n+\n+import ru.rt.handler.ComplexProcessor;\n+import ru.rt.listener.homework.ListenerHistory;\n+import ru.rt.listener.homework.MessageHistory;\n+import ru.rt.model.Message;\n+import ru.rt.model.ObjectForMessage;\n+import ru.rt.processor.homework.ProcessorSwapValuesOfFields11_12;\n+import ru.rt.processor.homework.ProcessorTimer;\n+\n+import java.time.Clock;\n+import java.time.ZoneId;\n+import java.util.List;\n+\n+public class HomeWork {\n+\n+    public static void main(String[] args) {\n+        var processors = List.of(new ProcessorSwapValuesOfFields11_12(),\n+                new ProcessorTimer(Clock.system(ZoneId.systemDefault())));\n+\n+        var storage = new MessageHistory();\n+        var complexProcessor = new ComplexProcessor(processors, (ex) -> {\n+            System.out.println(\"timer: second is even\");\n+        });\n+        var listenerPrinter = new ListenerHistory(storage);\n+        complexProcessor.addListener(listenerPrinter);\n+\n+        var field13Value = new ObjectForMessage();\n+        field13Value.setData(List.of(\"field13_1\",\"field13_2\",\"field13_3\"));\n+        var message = new Message.Builder(1L)\n+                .field10(\"field10\")\n+                .field11(\"field11\")\n+                .field12(\"field12\")\n+                .field13(field13Value)\n+                .build();\n+\n+        var result = complexProcessor.handle(message);\n+        System.out.println(\"result: \" + result);\n+\n+        complexProcessor.removeListener(listenerPrinter);\n+    }\n+}"
  },
  {
    "sha": "480a353b367effaa94d3ed1f07605364494d96a9",
    "filename": "hw15-patterns/src/main/java/ru/rt/handler/ComplexProcessor.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/handler/ComplexProcessor.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/handler/ComplexProcessor.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/handler/ComplexProcessor.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,55 @@\n+package ru.rt.handler;\n+\n+import ru.rt.model.Message;\n+import ru.rt.listener.Listener;\n+import ru.rt.processor.Processor;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Consumer;\n+\n+public class ComplexProcessor implements Handler {\n+\n+    private final List<Listener> listeners = new ArrayList<>();\n+    private final List<Processor> processors;\n+    private final Consumer<Exception> errorHandler;\n+\n+    public ComplexProcessor(List<Processor> processors, Consumer<Exception> errorHandler) {\n+        this.processors = processors;\n+        this.errorHandler = errorHandler;\n+    }\n+\n+    @Override\n+    public Message handle(Message msg) {\n+        Message newMsg = msg;\n+        for (Processor pros : processors) {\n+            try {\n+                newMsg = pros.process(newMsg);\n+            } catch (Exception ex) {\n+                errorHandler.accept(ex);\n+            }\n+        }\n+        notify(msg, newMsg);\n+        return newMsg;\n+    }\n+\n+    @Override\n+    public void addListener(Listener listener) {\n+        listeners.add(listener);\n+    }\n+\n+    @Override\n+    public void removeListener(Listener listener) {\n+        listeners.remove(listener);\n+    }\n+\n+    private void notify(Message oldMsg, Message newMsg) {\n+        listeners.forEach(listener -> {\n+            try {\n+                listener.onUpdated(oldMsg, newMsg);\n+            } catch (Exception ex) {\n+                ex.printStackTrace();\n+            }\n+        });\n+    }\n+}"
  },
  {
    "sha": "43fd3d4950c241e83fd316fda64a72ba65d47148",
    "filename": "hw15-patterns/src/main/java/ru/rt/handler/Handler.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/handler/Handler.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/handler/Handler.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/handler/Handler.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.rt.handler;\n+\n+import ru.rt.model.Message;\n+import ru.rt.listener.Listener;\n+\n+public interface Handler {\n+    Message handle(Message msg);\n+\n+    void addListener(Listener listener);\n+    void removeListener(Listener listener);\n+}"
  },
  {
    "sha": "21add71bf191bb6f9456b70dbad5a72f9de15167",
    "filename": "hw15-patterns/src/main/java/ru/rt/listener/Listener.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/listener/Listener.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/listener/Listener.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/listener/Listener.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.rt.listener;\n+\n+import ru.rt.model.Message;\n+\n+public interface Listener {\n+\n+    void onUpdated(Message oldMsg, Message newMsg);\n+\n+    //todo: 4. Сделать Listener для ведения истории: старое сообщение - новое (подумайте, как сделать, чтобы сообщения не портились)\n+    /*\n+     Сделайте такой тест:\n+        - положите сообщение в лисенер\n+        - поменяйте сообщение\n+        - проверьте, сто в лисенере сообщение не изменилось\n+    */\n+}"
  },
  {
    "sha": "6878fd2628daf99b9060eec7de5797558f6ee1a4",
    "filename": "hw15-patterns/src/main/java/ru/rt/listener/ListenerPrinter.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/listener/ListenerPrinter.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/listener/ListenerPrinter.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/listener/ListenerPrinter.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,12 @@\n+package ru.rt.listener;\n+\n+import ru.rt.model.Message;\n+\n+public class ListenerPrinter implements Listener {\n+\n+    @Override\n+    public void onUpdated(Message oldMsg, Message newMsg) {\n+        var logString = String.format(\"oldMsg:%s, newMsg:%s\", oldMsg, newMsg);\n+        System.out.println(logString);\n+    }\n+}"
  },
  {
    "sha": "aa5d016bc5a7c64f926e6bc03e51c02e26bc6cc1",
    "filename": "hw15-patterns/src/main/java/ru/rt/listener/homework/ListenerHistory.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/listener/homework/ListenerHistory.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/listener/homework/ListenerHistory.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/listener/homework/ListenerHistory.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,18 @@\n+package ru.rt.listener.homework;\n+\n+import ru.rt.listener.Listener;\n+import ru.rt.model.Message;\n+\n+public class ListenerHistory implements Listener {\n+    Storageable storage;\n+\n+    public ListenerHistory(Storageable storage){\n+        this.storage = storage;\n+    }\n+\n+    @Override\n+    public void onUpdated(Message oldMsg, Message newMsg) {\n+        storage.add(oldMsg, newMsg);\n+    }\n+\n+}"
  },
  {
    "sha": "c37476e7835ade837458ec7047ae73b16d66db64",
    "filename": "hw15-patterns/src/main/java/ru/rt/listener/homework/MessageHistory.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/listener/homework/MessageHistory.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/listener/homework/MessageHistory.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/listener/homework/MessageHistory.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,22 @@\n+package ru.rt.listener.homework;\n+\n+import ru.rt.model.Message;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class MessageHistory implements Storageable {\n+    Map<Message, Message> history = new HashMap<>();\n+\n+    @Override\n+    public void add(Message oldMsg, Message newMsg) {\n+        history.put(oldMsg.copy(), newMsg.copy());\n+    }\n+\n+    public Message getLastOldMsg(){\n+        List<Message> keys =  new ArrayList<>(history.keySet());\n+        return keys.get(history.size()-1);\n+    }\n+}"
  },
  {
    "sha": "5b9ce8c43f26fdbb9cf410deabbc8c6d1e326e38",
    "filename": "hw15-patterns/src/main/java/ru/rt/listener/homework/Storageable.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/listener/homework/Storageable.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/listener/homework/Storageable.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/listener/homework/Storageable.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,8 @@\n+package ru.rt.listener.homework;\n+\n+import ru.rt.model.Message;\n+\n+public interface Storageable {\n+\n+    void add(Message oldMsg, Message newMsg);\n+}"
  },
  {
    "sha": "f3fde25e08f80b982c37aa36a206aca5c7cc514a",
    "filename": "hw15-patterns/src/main/java/ru/rt/model/Copyable.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/model/Copyable.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/model/Copyable.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/model/Copyable.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,5 @@\n+package ru.rt.model;\n+\n+public interface Copyable<T> {\n+    T copy();\n+}"
  },
  {
    "sha": "9562a27125dfa95afc7aa3272f294593877e8e74",
    "filename": "hw15-patterns/src/main/java/ru/rt/model/Message.java",
    "status": "added",
    "additions": 249,
    "deletions": 0,
    "changes": 249,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/model/Message.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/model/Message.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/model/Message.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,249 @@\n+package ru.rt.model;\n+\n+import java.util.ArrayList;\n+import java.util.Objects;\n+\n+public class Message implements Copyable<Message> {\n+    private final long id;\n+    private final String field1;\n+    private final String field2;\n+    private final String field3;\n+    private final String field4;\n+    private final String field5;\n+    private final String field6;\n+    private final String field7;\n+    private final String field8;\n+    private final String field9;\n+    private final String field10;\n+    private final String field11;\n+    private final String field12;\n+    private final ObjectForMessage field13;\n+\n+    //todo: 1. Добавить поля field11 - field13 (для field13 используйте класс ObjectForMessage)\n+\n+    private Message(long id, String field1, String field2, String field3, String field4, String field5, String field6, String field7, String field8, String field9, String field10, String field11, String field12, ObjectForMessage field13) {\n+        this.id = id;\n+        this.field1 = field1;\n+        this.field2 = field2;\n+        this.field3 = field3;\n+        this.field4 = field4;\n+        this.field5 = field5;\n+        this.field6 = field6;\n+        this.field7 = field7;\n+        this.field8 = field8;\n+        this.field9 = field9;\n+        this.field10 = field10;\n+        this.field11 = field11;\n+        this.field12 = field12;\n+        this.field13 = Objects.requireNonNullElse(field13, new ObjectForMessage());\n+    }\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public String getField1() {\n+        return field1;\n+    }\n+\n+    public String getField2() {\n+        return field2;\n+    }\n+\n+    public String getField3() {\n+        return field3;\n+    }\n+\n+    public String getField4() {\n+        return field4;\n+    }\n+\n+    public String getField5() {\n+        return field5;\n+    }\n+\n+    public String getField6() {\n+        return field6;\n+    }\n+\n+    public String getField7() {\n+        return field7;\n+    }\n+\n+    public String getField8() {\n+        return field8;\n+    }\n+\n+    public String getField9() {\n+        return field9;\n+    }\n+\n+    public String getField10() {\n+        return field10;\n+    }\n+\n+    public String getField11() {\n+        return field11;\n+    }\n+\n+    public String getField12() {\n+        return field12;\n+    }\n+\n+    public ObjectForMessage getField13() {\n+        return field13;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+\n+        Message message = (Message) o;\n+\n+        return id == message.id;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return (int) (id ^ (id >>> 32));\n+    }\n+\n+    @Override\n+    public Message copy() {\n+        var newField13 = new ObjectForMessage();\n+        newField13.setData(new ArrayList<>(field13.getData()));\n+        return this.toBuilder().field13(newField13).build();\n+    }\n+\n+    public Builder toBuilder() {\n+        return new Builder(id, field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Message{\" +\n+                \"id=\" + id +\n+                \", field1='\" + field1 + '\\'' +\n+                \", field2='\" + field2 + '\\'' +\n+                \", field3='\" + field3 + '\\'' +\n+                \", field4='\" + field4 + '\\'' +\n+                \", field5='\" + field5 + '\\'' +\n+                \", field6='\" + field6 + '\\'' +\n+                \", field7='\" + field7 + '\\'' +\n+                \", field8='\" + field8 + '\\'' +\n+                \", field9='\" + field9 + '\\'' +\n+                \", field10='\" + field10 + '\\'' +\n+                \", field11='\" + field11 + '\\'' +\n+                \", field12='\" + field12 + '\\'' +\n+                \", field13='\" + field13 + '\\'' +\n+                '}';\n+    }\n+\n+    public static class Builder {\n+        private final long id;\n+        private String field1;\n+        private String field2;\n+        private String field3;\n+        private String field4;\n+        private String field5;\n+        private String field6;\n+        private String field7;\n+        private String field8;\n+        private String field9;\n+        private String field10;\n+        private String field11;\n+        private String field12;\n+        private ObjectForMessage field13;\n+\n+        public Builder(long id) {\n+            this.id = id;\n+        }\n+\n+        private Builder(long id, String field1, String field2, String field3, String field4, String field5, String field6, String field7, String field8, String field9, String field10, String field11, String field12, ObjectForMessage field13) {\n+            this.id = id;\n+            this.field1 = field1;\n+            this.field2 = field2;\n+            this.field3 = field3;\n+            this.field4 = field4;\n+            this.field5 = field5;\n+            this.field6 = field6;\n+            this.field7 = field7;\n+            this.field8 = field8;\n+            this.field9 = field9;\n+            this.field10 = field10;\n+            this.field11 = field11;\n+            this.field12 = field12;\n+            this.field13 = Objects.requireNonNullElse(field13, new ObjectForMessage());\n+        }\n+\n+        public Builder field1(String field1) {\n+            this.field1 = field1;\n+            return this;\n+        }\n+\n+        public Builder field2(String field2) {\n+            this.field2 = field2;\n+            return this;\n+        }\n+\n+        public Builder field3(String field3) {\n+            this.field3 = field3;\n+            return this;\n+        }\n+\n+        public Builder field4(String field4) {\n+            this.field4 = field4;\n+            return this;\n+        }\n+\n+        public Builder field5(String field5) {\n+            this.field5 = field5;\n+            return this;\n+        }\n+\n+        public Builder field6(String field6) {\n+            this.field6 = field6;\n+            return this;\n+        }\n+\n+        public Builder field7(String field7) {\n+            this.field7 = field7;\n+            return this;\n+        }\n+\n+        public Builder field8(String field8) {\n+            this.field8 = field8;\n+            return this;\n+        }\n+\n+        public Builder field9(String field9) {\n+            this.field9 = field9;\n+            return this;\n+        }\n+\n+        public Builder field10(String field10) {\n+            this.field10 = field10;\n+            return this;\n+        }\n+\n+        public Builder field11(String field11) {\n+            this.field11 = field11;\n+            return this;\n+        }\n+\n+        public Builder field12(String field12) {\n+            this.field12 = field12;\n+            return this;\n+        }\n+\n+        public Builder field13(ObjectForMessage field13) {\n+            this.field13 = Objects.requireNonNullElse(field13, new ObjectForMessage());\n+            return this;\n+        }\n+\n+        public Message build() {\n+            return new Message(id, field1, field2, field3, field4, field5, field6, field7, field8, field9, field10, field11, field12, field13);\n+        }\n+    }\n+}"
  },
  {
    "sha": "5b417211afeee06b072f86d958bf8c43d1fde5d6",
    "filename": "hw15-patterns/src/main/java/ru/rt/model/ObjectForMessage.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/model/ObjectForMessage.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/model/ObjectForMessage.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/model/ObjectForMessage.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,16 @@\n+package ru.rt.model;\n+\n+import java.util.List;\n+\n+public class ObjectForMessage {\n+    private List<String> data;\n+\n+    public List<String> getData() {\n+        return data;\n+    }\n+\n+    public void setData(List<String> data) {\n+        this.data = data;\n+    }\n+\n+}"
  },
  {
    "sha": "a44b28f3541d86d7feed42a51bb48e1622ac3794",
    "filename": "hw15-patterns/src/main/java/ru/rt/processor/LoggerProcessor.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/LoggerProcessor.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/LoggerProcessor.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/processor/LoggerProcessor.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.rt.processor;\n+\n+import ru.rt.model.Message;\n+\n+public class LoggerProcessor implements Processor {\n+\n+\n+    private final Processor processor;\n+\n+    public LoggerProcessor(Processor processor) {\n+        this.processor = processor;\n+    }\n+\n+    @Override\n+    public Message process(Message message) {\n+        System.out.println(\"log processing message:\" + message);\n+        return processor.process(message);\n+    }\n+}"
  },
  {
    "sha": "ffb712d42b9dbfc68af73546e03092576ecdfb2e",
    "filename": "hw15-patterns/src/main/java/ru/rt/processor/Processor.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/Processor.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/Processor.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/processor/Processor.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.rt.processor;\n+\n+import ru.rt.model.Message;\n+\n+public interface Processor {\n+\n+    Message process(Message message);\n+\n+    //todo: 2. Сделать процессор, который поменяет местами значения field11 и field12\n+\n+    //todo: 3. Сделать процессор, который будет выбрасывать исключение в четную секунду (сделайте тест с гарантированным результатом)\n+    //         Секунда должна определяьться во время выполнения.\n+    //         Тест - важная часть задания\n+}"
  },
  {
    "sha": "15126ee771bc2a301bf16e18e98fb5596e9786de",
    "filename": "hw15-patterns/src/main/java/ru/rt/processor/ProcessorConcatFields.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/ProcessorConcatFields.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/ProcessorConcatFields.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/processor/ProcessorConcatFields.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,12 @@\n+package ru.rt.processor;\n+\n+import ru.rt.model.Message;\n+\n+public class ProcessorConcatFields implements Processor {\n+\n+    @Override\n+    public Message process(Message message) {\n+        var newFieldValue = String.join(\" \", \"concat:\", message.getField1(), message.getField2(), message.getField3());\n+        return message.toBuilder().field4(newFieldValue).build();\n+    }\n+}"
  },
  {
    "sha": "f0d0d1ab7cda845d7b5259a36519ab4e929faafe",
    "filename": "hw15-patterns/src/main/java/ru/rt/processor/ProcessorUpperField10.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/ProcessorUpperField10.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/ProcessorUpperField10.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/processor/ProcessorUpperField10.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.rt.processor;\n+\n+import ru.rt.model.Message;\n+\n+public class ProcessorUpperField10 implements Processor {\n+\n+    @Override\n+    public Message process(Message message) {\n+        return message.toBuilder().field4(message.getField10().toUpperCase()).build();\n+    }\n+}"
  },
  {
    "sha": "e368efcfe1caaad23b11a419d1014fb92be1b45d",
    "filename": "hw15-patterns/src/main/java/ru/rt/processor/homework/ProcessorSwapValuesOfFields11_12.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/homework/ProcessorSwapValuesOfFields11_12.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/homework/ProcessorSwapValuesOfFields11_12.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/processor/homework/ProcessorSwapValuesOfFields11_12.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.rt.processor.homework;\n+\n+import ru.rt.model.Message;\n+import ru.rt.processor.Processor;\n+\n+public class ProcessorSwapValuesOfFields11_12 implements Processor {\n+\n+    @Override\n+    public Message process(Message message) {\n+        return message.toBuilder()\n+                      .field11(message.getField12())\n+                      .field12(message.getField11())\n+                      .build();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0dbbe9b96668f527786c6d8ccb2dd254adad1824",
    "filename": "hw15-patterns/src/main/java/ru/rt/processor/homework/ProcessorTimer.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/homework/ProcessorTimer.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/main/java/ru/rt/processor/homework/ProcessorTimer.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/main/java/ru/rt/processor/homework/ProcessorTimer.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,26 @@\n+package ru.rt.processor.homework;\n+\n+import ru.rt.model.Message;\n+import ru.rt.processor.Processor;\n+\n+import java.text.SimpleDateFormat;\n+import java.time.Clock;\n+import java.util.Date;\n+\n+public class ProcessorTimer implements Processor {\n+    private final Clock currTime;\n+\n+    public ProcessorTimer(Clock currTime){\n+        this.currTime = currTime;\n+    }\n+\n+    @Override\n+    public Message process(Message message) {\n+        var seconds = currTime.instant().getEpochSecond();\n+        if ((seconds & 1) == 0) {\n+            var formatDate = new SimpleDateFormat(\"ss\");\n+            throw new RuntimeException(\"Четная секунда: \" + formatDate.format(Date.from(currTime.instant())));\n+        }\n+        return message.toBuilder().build();\n+    }\n+}"
  },
  {
    "sha": "727fa7af37d84437dd12d247c8d99420b485a5ee",
    "filename": "hw15-patterns/src/test/java/ru/rt/handler/ComplexProcessorTest.java",
    "status": "added",
    "additions": 171,
    "deletions": 0,
    "changes": 171,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/test/java/ru/rt/handler/ComplexProcessorTest.java",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/hw15-patterns/src/test/java/ru/rt/handler/ComplexProcessorTest.java",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/hw15-patterns/src/test/java/ru/rt/handler/ComplexProcessorTest.java?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -0,0 +1,171 @@\n+package ru.rt.handler;\n+\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import ru.rt.listener.Listener;\n+import ru.rt.listener.homework.ListenerHistory;\n+import ru.rt.listener.homework.MessageHistory;\n+import ru.rt.model.Message;\n+import ru.rt.model.ObjectForMessage;\n+import ru.rt.processor.Processor;\n+import ru.rt.processor.homework.ProcessorSwapValuesOfFields11_12;\n+import ru.rt.processor.homework.ProcessorTimer;\n+import ru.rt.processor.ProcessorUpperField10;\n+\n+import java.time.Clock;\n+import java.time.Instant;\n+import java.time.ZoneId;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.assertj.core.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+import static org.mockito.Mockito.*;\n+\n+class ComplexProcessorTest {\n+\n+    @Test\n+    @DisplayName(\"Тестируем вызовы процессоров\")\n+    void handleProcessorsTest() {\n+        //given\n+        var message = new Message.Builder(1L).field7(\"field7\").build();\n+\n+        var processor1 = mock(Processor.class);\n+        when(processor1.process(message)).thenReturn(message);\n+\n+        var processor2 = mock(Processor.class);\n+        when(processor2.process(message)).thenReturn(message);\n+\n+        var processors = List.of(processor1, processor2);\n+\n+        var complexProcessor = new ComplexProcessor(processors, (ex) -> {\n+        });\n+\n+        //when\n+        var result = complexProcessor.handle(message);\n+\n+        //then\n+        verify(processor1).process(message);\n+        verify(processor2).process(message);\n+        assertThat(result).isEqualTo(message);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Тестируем обработку исключения\")\n+    void handleExceptionTest() {\n+        //given\n+        var message = new Message.Builder(1L).field8(\"field8\").build();\n+\n+        var processor1 = mock(Processor.class);\n+        when(processor1.process(message)).thenThrow(new RuntimeException(\"Test Exception\"));\n+\n+        var processor2 = mock(Processor.class);\n+        when(processor2.process(message)).thenReturn(message);\n+\n+        var processors = List.of(processor1, processor2);\n+\n+        var complexProcessor = new ComplexProcessor(processors, (ex) -> {\n+            throw new TestException(ex.getMessage());\n+        });\n+\n+        //when\n+        assertThatExceptionOfType(TestException.class).isThrownBy(() -> complexProcessor.handle(message));\n+\n+        //then\n+        verify(processor1, times(1)).process(message);\n+        verify(processor2, never()).process(message);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Тестируем уведомления\")\n+    void notifyTest() {\n+        //given\n+        var message = new Message.Builder(1L).field9(\"field9\").build();\n+\n+        var listener = mock(Listener.class);\n+\n+        var complexProcessor = new ComplexProcessor(new ArrayList<>(), (ex) -> {\n+        });\n+\n+        complexProcessor.addListener(listener);\n+\n+        //when\n+        complexProcessor.handle(message);\n+        complexProcessor.removeListener(listener);\n+        complexProcessor.handle(message);\n+\n+        //then\n+        verify(listener, times(1)).onUpdated(message, message);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Тестируем поля 11 и 12\")\n+    void swapFieldsTest() {\n+        //given\n+        var message = new Message.Builder(1L).field11(\"field11\").field12(\"field12\").build();\n+\n+        List<Processor> processors = List.of(new ProcessorSwapValuesOfFields11_12());\n+\n+        var complexProcessor = new ComplexProcessor(processors, (ex) -> {});\n+\n+        //when\n+        var result = complexProcessor.handle(message);\n+\n+        //then\n+        assertEquals(result.getField11(), message.getField12());\n+        assertEquals(result.getField12(), message.getField11());\n+    }\n+\n+    @Test\n+    @DisplayName(\"Тестируем таймер\")\n+    void timerTest() {\n+        var message = new Message.Builder(1L).build();\n+\n+        var oddClock = Clock.fixed(Instant.parse(\"2021-01-01T00:00:01.00Z\"), ZoneId.systemDefault());\n+        List<Processor> oddProcessors = List.of(new ProcessorTimer(oddClock));\n+        var oddProcessor = new ComplexProcessor(oddProcessors, (ex) -> {\n+            throw new TestException(ex.getMessage());\n+        });\n+\n+        assertThatCode(() -> oddProcessor.handle(message)).doesNotThrowAnyException();\n+\n+        var evenClock = Clock.fixed(Instant.parse(\"2021-01-01T00:00:02.00Z\"), ZoneId.systemDefault());\n+        List<Processor> evenProcessors = List.of(new ProcessorTimer(evenClock));\n+        var evenProcessor = new ComplexProcessor(evenProcessors, (ex) -> {\n+                throw new TestException(ex.getMessage());\n+            });\n+\n+        assertThatCode(() -> evenProcessor.handle(message)).isInstanceOf(TestException.class).hasMessage(\"Четная секунда: 02\");\n+    }\n+\n+    @Test\n+    @DisplayName(\"Тестируем историю\")\n+    void historyTest() {\n+        //given\n+        var field13Value = new ObjectForMessage();\n+        field13Value.setData(List.of(\"a\",\"b\",\"c\"));\n+        var message = new Message.Builder(1L).field4(\"field4\").field10(\"field10\").field13(field13Value).build();\n+\n+        List<Processor> processors = List.of(new ProcessorUpperField10());\n+        var complexProcessor = new ComplexProcessor(processors, (ex) -> {});\n+\n+        var storage = new MessageHistory();\n+        var listener = new ListenerHistory(storage);\n+        complexProcessor.addListener(listener);\n+\n+        var newMessage = complexProcessor.handle(message);\n+\n+        field13Value.setData(List.of(\"x\",\"y\",\"z\"));\n+\n+        assertNotEquals(message.getField13().getData(), storage.getLastOldMsg().getField13().getData());\n+        assertEquals(storage.getLastOldMsg().getField13().getData(),List.of(\"a\",\"b\",\"c\"));\n+    }\n+\n+    private static class TestException extends RuntimeException {\n+        public TestException(String message) {\n+            super(message);\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "9472a4f4fd3ad431b8ab832161f27feb5d1891f5",
    "filename": "settings.gradle",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Enimin/2020-12-otus-java-minkin/blob/b716833a596a162b5416cd72b21cfdd782dca015/settings.gradle",
    "raw_url": "https://github.com/Enimin/2020-12-otus-java-minkin/raw/b716833a596a162b5416cd72b21cfdd782dca015/settings.gradle",
    "contents_url": "https://api.github.com/repos/Enimin/2020-12-otus-java-minkin/contents/settings.gradle?ref=b716833a596a162b5416cd72b21cfdd782dca015",
    "patch": "@@ -4,4 +4,6 @@ include 'hw04-generics'\n include 'hw06-reflections'\n include 'hw08-gc'\n include 'hw10-byteCodes'\n+include 'hw12-solid'\n+include 'hw15-patterns'\n "
  }
]
