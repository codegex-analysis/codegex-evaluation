[
  {
    "sha": "88f0119ab0c5a65f5f3774c9647bbab0d71ca3ad",
    "filename": ".idea/runConfigurations/MainServer.xml",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/.idea/runConfigurations/MainServer.xml",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/.idea/runConfigurations/MainServer.xml",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/.idea/runConfigurations/MainServer.xml?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -0,0 +1,10 @@\n+<component name=\"ProjectRunConfigurationManager\">\n+  <configuration default=\"false\" name=\"MainServer\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\n+    <option name=\"MAIN_CLASS_NAME\" value=\"ru.geekbrains.server.MainServer\" />\n+    <module name=\"server\" />\n+    <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/\" />\n+    <method v=\"2\">\n+      <option name=\"Make\" enabled=\"true\" />\n+    </method>\n+  </configuration>\n+</component>\n\\ No newline at end of file"
  },
  {
    "sha": "e96534fb27b68192f27f985d3879e173ec77adb8",
    "filename": ".idea/uiDesigner.xml",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/.idea/uiDesigner.xml",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/.idea/uiDesigner.xml",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/.idea/uiDesigner.xml?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -0,0 +1,124 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"Palette2\">\n+    <group name=\"Swing\">\n+      <item class=\"com.intellij.uiDesigner.HSpacer\" tooltip-text=\"Horizontal Spacer\" icon=\"/com/intellij/uiDesigner/icons/hspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"com.intellij.uiDesigner.VSpacer\" tooltip-text=\"Vertical Spacer\" icon=\"/com/intellij/uiDesigner/icons/vspacer.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+      <item class=\"javax.swing.JPanel\" icon=\"/com/intellij/uiDesigner/icons/panel.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollPane\" icon=\"/com/intellij/uiDesigner/icons/scrollPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JButton\" icon=\"/com/intellij/uiDesigner/icons/button.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Button\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JRadioButton\" icon=\"/com/intellij/uiDesigner/icons/radioButton.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"RadioButton\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JCheckBox\" icon=\"/com/intellij/uiDesigner/icons/checkBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"CheckBox\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JLabel\" icon=\"/com/intellij/uiDesigner/icons/label.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" />\n+        <initial-values>\n+          <property name=\"text\" value=\"Label\" />\n+        </initial-values>\n+      </item>\n+      <item class=\"javax.swing.JTextField\" icon=\"/com/intellij/uiDesigner/icons/textField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JPasswordField\" icon=\"/com/intellij/uiDesigner/icons/passwordField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JFormattedTextField\" icon=\"/com/intellij/uiDesigner/icons/formattedTextField.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\">\n+          <preferred-size width=\"150\" height=\"-1\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextArea\" icon=\"/com/intellij/uiDesigner/icons/textArea.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTextPane\" icon=\"/com/intellij/uiDesigner/icons/textPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JEditorPane\" icon=\"/com/intellij/uiDesigner/icons/editorPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JComboBox\" icon=\"/com/intellij/uiDesigner/icons/comboBox.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JTable\" icon=\"/com/intellij/uiDesigner/icons/table.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JList\" icon=\"/com/intellij/uiDesigner/icons/list.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"2\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTree\" icon=\"/com/intellij/uiDesigner/icons/tree.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"150\" height=\"50\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JTabbedPane\" icon=\"/com/intellij/uiDesigner/icons/tabbedPane.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSplitPane\" icon=\"/com/intellij/uiDesigner/icons/splitPane.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\">\n+          <preferred-size width=\"200\" height=\"200\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JSpinner\" icon=\"/com/intellij/uiDesigner/icons/spinner.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"true\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSlider\" icon=\"/com/intellij/uiDesigner/icons/slider.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"8\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JSeparator\" icon=\"/com/intellij/uiDesigner/icons/separator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"6\" anchor=\"0\" fill=\"3\" />\n+      </item>\n+      <item class=\"javax.swing.JProgressBar\" icon=\"/com/intellij/uiDesigner/icons/progressbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JToolBar\" icon=\"/com/intellij/uiDesigner/icons/toolbar.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\">\n+          <preferred-size width=\"-1\" height=\"20\" />\n+        </default-constraints>\n+      </item>\n+      <item class=\"javax.swing.JToolBar$Separator\" icon=\"/com/intellij/uiDesigner/icons/toolbarSeparator.png\" removable=\"false\" auto-create-binding=\"false\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"1\" />\n+      </item>\n+      <item class=\"javax.swing.JScrollBar\" icon=\"/com/intellij/uiDesigner/icons/scrollbar.png\" removable=\"false\" auto-create-binding=\"true\" can-attach-label=\"false\">\n+        <default-constraints vsize-policy=\"6\" hsize-policy=\"0\" anchor=\"0\" fill=\"2\" />\n+      </item>\n+    </group>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "9b8ca3afbac8433cbb226dc0a49a52adbb8540dd",
    "filename": "client/history_null.txt",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/client/history_null.txt",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/client/history_null.txt",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/client/history_null.txt?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -0,0 +1,28 @@\n+Welcome to chat\n+\n+[14:33:29 01.03.2021] Renat: asdsadasd\n+\n+[14:33:32 01.03.2021] Renat: ПРивет\n+\n+[14:33:34 01.03.2021] Renat: что там\n+\n+[14:33:36 01.03.2021] Renat: как ты\n+\n+[14:33:38 01.03.2021] Renat: что?\n+\n+Artem in chat now\n+\n+[14:34:20 01.03.2021] Artem: это второй логин\n+\n+[14:34:22 01.03.2021] Artem: как связь\n+\n+[14:34:24 01.03.2021] Artem: тест\n+\n+[14:34:32 01.03.2021] Artem: тест 2\n+\n+[14:34:37 01.03.2021] Renat: тест 1\n+\n+[14:34:42 01.03.2021] Renat: Ренат\n+\n+[14:34:47 01.03.2021] Artem: Артём\n+"
  },
  {
    "sha": "9b8ca3afbac8433cbb226dc0a49a52adbb8540dd",
    "filename": "client/history_test.txt",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/client/history_test.txt",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/client/history_test.txt",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/client/history_test.txt?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -0,0 +1,28 @@\n+Welcome to chat\n+\n+[14:33:29 01.03.2021] Renat: asdsadasd\n+\n+[14:33:32 01.03.2021] Renat: ПРивет\n+\n+[14:33:34 01.03.2021] Renat: что там\n+\n+[14:33:36 01.03.2021] Renat: как ты\n+\n+[14:33:38 01.03.2021] Renat: что?\n+\n+Artem in chat now\n+\n+[14:34:20 01.03.2021] Artem: это второй логин\n+\n+[14:34:22 01.03.2021] Artem: как связь\n+\n+[14:34:24 01.03.2021] Artem: тест\n+\n+[14:34:32 01.03.2021] Artem: тест 2\n+\n+[14:34:37 01.03.2021] Renat: тест 1\n+\n+[14:34:42 01.03.2021] Renat: Ренат\n+\n+[14:34:47 01.03.2021] Artem: Артём\n+"
  },
  {
    "sha": "00773a5902552a810ef20ae644eb23818d217a63",
    "filename": "client/pom.xml",
    "status": "modified",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/client/pom.xml",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/client/pom.xml",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/client/pom.xml?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -10,6 +10,35 @@\n     <modelVersion>4.0.0</modelVersion>\n \n     <artifactId>client</artifactId>\n+    <dependencies>\n+        <dependency>\n+            <groupId>commons-io</groupId>\n+            <artifactId>commons-io</artifactId>\n+            <version>2.8.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <version>RELEASE</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>commons-lang</groupId>\n+            <artifactId>commons-lang</artifactId>\n+            <version>2.5</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-api</artifactId>\n+            <version>2.4.1</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-core</artifactId>\n+            <version>2.4.1</version>\n+        </dependency>\n+    </dependencies>\n+\n \n     <properties>\n         <maven.compiler.source>11</maven.compiler.source>"
  },
  {
    "sha": "10c661f83539a92e655a47f262bb1a9d502ab566",
    "filename": "client/src/main/java/ru/geekbrains/client/Controller.java",
    "status": "modified",
    "additions": 33,
    "deletions": 2,
    "changes": 35,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/client/src/main/java/ru/geekbrains/client/Controller.java",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/client/src/main/java/ru/geekbrains/client/Controller.java",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/client/src/main/java/ru/geekbrains/client/Controller.java?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -1,8 +1,6 @@\n package ru.geekbrains.client;\n \n import javafx.application.Platform;\n-import javafx.beans.value.ChangeListener;\n-import javafx.beans.value.ObservableValue;\n import javafx.collections.FXCollections;\n import javafx.collections.ObservableList;\n import javafx.fxml.FXML;\n@@ -18,9 +16,11 @@\n \n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n+import java.io.File;\n import java.io.IOException;\n import java.net.Socket;\n import java.net.URL;\n+import java.util.List;\n import java.util.ResourceBundle;\n \n public class Controller implements Initializable {\n@@ -52,6 +52,8 @@\n     private String nickname;\n     private ObservableList<String> clients;\n     private boolean authorized;\n+    private ReadWriteLinesToFile hystoryService;\n+\n \n     @Override\n     public void initialize(URL url, ResourceBundle resourceBundle) {\n@@ -93,6 +95,7 @@ public void setAuthorized(boolean authorized) {\n             nickname = \"\";\n         }\n \n+\n         Platform.runLater(() -> {\n             if (nickname.isEmpty()) {\n                 ((Stage) mainBox.getScene().getWindow()).setTitle(\"Java Chat Client\");\n@@ -128,6 +131,7 @@ public void sendMsg(String msg) {\n         }\n     }\n \n+\n     public void sendAuth() {\n         connect();\n         // /auth login1 password1\n@@ -136,6 +140,7 @@ public void sendAuth() {\n         passField.clear();\n     }\n \n+\n     private void connect() {\n         try {\n             if (socket == null || socket.isClosed()) {\n@@ -150,13 +155,28 @@ private void connect() {\n                             if (str.startsWith(\"/authok\")) {\n                                 nickname = str.split(\" \")[1];\n                                 setAuthorized(true);\n+                                String filename = System.getProperty(\"user.dir\") + \"\\\\history_\" + nickname + \".txt\";\n+                                File file = new File(filename);\n+                                if (!file.exists()) {\n+                                file.createNewFile();\n+                                }\n+                                hystoryService = HystoryService.getInstance(file);\n+                                List<String> chat = hystoryService.getLastLines(file, 100);\n+                                textArea.appendText(chat.toString());\n                                 break;\n                             }\n                         }\n                         while (true) {\n                             String str = in.readUTF();\n                             if (!str.startsWith(\"/\")) {\n                                 textArea.appendText(str + System.lineSeparator());\n+                                String filename = System.getProperty(\"user.dir\") + \"\\\\history_\" + nickname + \".txt\";\n+                                File file = new File(filename);\n+                                if (!file.exists()) {\n+                                    file.createNewFile();\n+                                }\n+                                hystoryService = HystoryService.getInstance(file);\n+                                hystoryService.writeLineToFile(str + System.lineSeparator());\n                             } else if (str.startsWith(\"/clientslist\")) {\n                                 // /clientslist nick1 nick2 nick3\n                                 String[] subStr = str.split(\" \");\n@@ -208,4 +228,15 @@ public void registerBtn() {\n         }\n \n     }\n+\n+    public void log() throws IOException {\n+        File log = new File(\"src/main/java/ru/geekbrains/client/Log/history_\" + nickname + \".txt\");\n+        System.out.println(nickname);\n+        System.out.println(log.exists());\n+//        if (!log.exists()){\n+//            log.createNewFile();\n+//        }\n+    }\n+\n }\n+"
  },
  {
    "sha": "50a7ba6c10d9d1849bb5952b9ded31c71d55581a",
    "filename": "client/src/main/java/ru/geekbrains/client/HystoryService.java",
    "status": "added",
    "additions": 61,
    "deletions": 0,
    "changes": 61,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/client/src/main/java/ru/geekbrains/client/HystoryService.java",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/client/src/main/java/ru/geekbrains/client/HystoryService.java",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/client/src/main/java/ru/geekbrains/client/HystoryService.java?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -0,0 +1,61 @@\n+package ru.geekbrains.client;\n+\n+\n+import org.apache.commons.io.input.ReversedLinesFileReader;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.PrintWriter;\n+import java.nio.charset.Charset;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+\n+public class HystoryService implements ReadWriteLinesToFile{\n+\n+    private PrintWriter printWriter;\n+\n+    private HystoryService(PrintWriter printWriter){\n+        this.printWriter = printWriter;\n+    }\n+\n+    public static HystoryService getInstance(File file) throws FileNotFoundException{\n+        try {\n+            return new HystoryService(new PrintWriter(new FileOutputStream(file, true), true));\n+        } catch (FileNotFoundException e) {\n+            e.printStackTrace();\n+            throw e;\n+        }\n+    }\n+\n+    @Override\n+    public void close() {\n+        if (printWriter != null){\n+            printWriter.close();\n+        }\n+\n+    }\n+\n+    @Override\n+    public void writeLineToFile(String line) {\n+        printWriter.println(line);\n+    }\n+\n+    @Override\n+    public List<String> getLastLines(File file, Integer numberOfLines) {\n+        List<String> result = new ArrayList<>();\n+        try (ReversedLinesFileReader reader = new ReversedLinesFileReader(file, Charset.defaultCharset())){\n+            for (int i = 0; i < numberOfLines; i++) {\n+                String line = reader.readLine();\n+                if (line == null){\n+                    return result;\n+                }\n+                result.add(line);\n+            }\n+        }catch (Exception e){\n+            e.printStackTrace();\n+        }\n+        return result;\n+    }\n+}"
  },
  {
    "sha": "549db0124e3fb2081b0e3b11b454d949f4d6c3fe",
    "filename": "client/src/main/java/ru/geekbrains/client/ReadWriteLinesToFile.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/client/src/main/java/ru/geekbrains/client/ReadWriteLinesToFile.java",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/client/src/main/java/ru/geekbrains/client/ReadWriteLinesToFile.java",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/client/src/main/java/ru/geekbrains/client/ReadWriteLinesToFile.java?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.geekbrains.client;\n+\n+import java.io.File;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.util.List;\n+\n+public interface ReadWriteLinesToFile extends AutoCloseable {\n+\n+    void close() throws FileNotFoundException;\n+\n+    void writeLineToFile (String line);\n+\n+    List<String> getLastLines (File file, Integer numberOfLines) throws IOException;\n+}"
  },
  {
    "sha": "b82242d22aad043af369197fa16dea611df2437a",
    "filename": "client/src/main/java/ru/geekbrains/client/RegistrationController.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/client/src/main/java/ru/geekbrains/client/RegistrationController.java",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/client/src/main/java/ru/geekbrains/client/RegistrationController.java",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/client/src/main/java/ru/geekbrains/client/RegistrationController.java?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -14,6 +14,7 @@\n     private DataInputStream in;\n     private DataOutputStream out;\n \n+\n     @FXML\n     TextField login, password, nickname;\n "
  },
  {
    "sha": "774d5a2efb73125d8e25cb42d8186165aa98524e",
    "filename": "history_Artem.txt",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/history_Artem.txt",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/history_Artem.txt",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/history_Artem.txt?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -0,0 +1,24 @@\n+Welcome to chat\n+\n+[14:34:20 01.03.2021] Artem: это второй логин\n+\n+[14:34:22 01.03.2021] Artem: как связь\n+\n+[14:34:24 01.03.2021] Artem: тест\n+\n+[14:34:32 01.03.2021] Artem: тест 2\n+\n+[14:34:37 01.03.2021] Renat: тест 1\n+\n+[14:34:42 01.03.2021] Renat: Ренат\n+\n+[14:34:47 01.03.2021] Artem: Артём\n+\n+Renat leaves chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+"
  },
  {
    "sha": "2fe15f87f3a0a5747139e24bb6eb0550e06d59c1",
    "filename": "history_Renat.txt",
    "status": "added",
    "additions": 106,
    "deletions": 0,
    "changes": 106,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/history_Renat.txt",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/history_Renat.txt",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/history_Renat.txt?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -0,0 +1,106 @@\n+Welcome to chat\n+\n+[14:33:29 01.03.2021] Renat: asdsadasd\n+\n+[14:33:32 01.03.2021] Renat: ПРивет\n+\n+[14:33:34 01.03.2021] Renat: что там\n+\n+[14:33:36 01.03.2021] Renat: как ты\n+\n+[14:33:38 01.03.2021] Renat: что?\n+\n+Artem in chat now\n+\n+[14:34:20 01.03.2021] Artem: это второй логин\n+\n+[14:34:22 01.03.2021] Artem: как связь\n+\n+[14:34:24 01.03.2021] Artem: тест\n+\n+[14:34:32 01.03.2021] Artem: тест 2\n+\n+[14:34:37 01.03.2021] Renat: тест 1\n+\n+[14:34:42 01.03.2021] Renat: Ренат\n+\n+[14:34:47 01.03.2021] Artem: Артём\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+[15:19:20 01.03.2021] Renat: sadsa\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+[15:21:36 01.03.2021] Renat: sadsa\n+\n+Welcome to chat\n+\n+[15:22:24 01.03.2021] Renat: asdasdasda\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+[15:43:08 01.03.2021] Renat: sadsad\n+\n+[15:43:09 01.03.2021] Renat: sadasd\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+[18:29:57 03.03.2021] Renat: sadasd\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+[18:34:04 03.03.2021] Renat: dsafdf\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+Welcome to chat\n+\n+[18:49:57 03.03.2021] Renat: sadasd\n+"
  },
  {
    "sha": "fe915b1dace8928672faae0e976aa6f0b5ed3d0e",
    "filename": "logs/Server.log",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/logs/Server.log",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/logs/Server.log",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/logs/Server.log?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -0,0 +1,34 @@\n+2021-03-08 19:00:00,315 INFO r.g.s.SQLHandler [main] Успешное подключение к БД\n+2021-03-08 19:00:23,862 INFO r.g.s.ClientHandler [Thread-0] Пользователь пытается авторизоваться с логином login1\n+2021-03-08 19:00:23,919 INFO r.g.s.ClientHandler [Thread-0] Упешная авторизация ползователя login1\n+2021-03-08 19:00:26,353 INFO r.g.s.ClientHandler [Thread-0] Пользователь Artem выходит из чата\n+2021-03-08 19:00:26,354 ERROR r.g.s.ClientHandler [Thread-0] Неуданая оправка сообщения\n+java.net.SocketException: Socket closed\n+\tat java.base/java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:113) ~[?:?]\n+\tat java.base/java.net.SocketOutputStream.write(SocketOutputStream.java:150) ~[?:?]\n+\tat java.base/java.io.DataOutputStream.write(DataOutputStream.java:107) ~[?:?]\n+\tat java.base/java.io.DataOutputStream.writeUTF(DataOutputStream.java:401) ~[?:?]\n+\tat java.base/java.io.DataOutputStream.writeUTF(DataOutputStream.java:323) ~[?:?]\n+\tat ru.geekbrains.server.ClientHandler.sendMsg(ClientHandler.java:159) ~[classes/:?]\n+\tat ru.geekbrains.server.Server.broadcastMsg(Server.java:51) ~[classes/:?]\n+\tat ru.geekbrains.server.Server.unsubscribe(Server.java:39) ~[classes/:?]\n+\tat ru.geekbrains.server.ClientHandler.lambda$new$0(ClientHandler.java:146) ~[classes/:?]\n+\tat java.base/java.lang.Thread.run(Thread.java:834) [?:?]\n+2021-03-08 19:02:00,879 INFO r.g.s.SQLHandler [main] Успешное подключение к БД\n+2021-03-08 19:02:14,022 INFO r.g.s.ClientHandler [pool-2-thread-1] Пользователь пытается авторизоваться с логином login1\n+2021-03-08 19:02:14,040 INFO r.g.s.ClientHandler [pool-2-thread-1] Упешная авторизация ползователя login1\n+2021-03-08 19:02:20,739 INFO r.g.s.ClientHandler [pool-2-thread-1] Пользователь Artem выходит из чата\n+2021-03-08 19:02:20,741 ERROR r.g.s.ClientHandler [pool-2-thread-1] Неуданая оправка сообщения\n+java.net.SocketException: Socket closed\n+\tat java.base/java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:113) ~[?:?]\n+\tat java.base/java.net.SocketOutputStream.write(SocketOutputStream.java:150) ~[?:?]\n+\tat java.base/java.io.DataOutputStream.write(DataOutputStream.java:107) ~[?:?]\n+\tat java.base/java.io.DataOutputStream.writeUTF(DataOutputStream.java:401) ~[?:?]\n+\tat java.base/java.io.DataOutputStream.writeUTF(DataOutputStream.java:323) ~[?:?]\n+\tat ru.geekbrains.server.ClientHandler.sendMsg(ClientHandler.java:161) ~[classes/:?]\n+\tat ru.geekbrains.server.Server.broadcastMsg(Server.java:51) ~[classes/:?]\n+\tat ru.geekbrains.server.Server.unsubscribe(Server.java:39) ~[classes/:?]\n+\tat ru.geekbrains.server.ClientHandler.lambda$new$0(ClientHandler.java:148) ~[classes/:?]\n+\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]\n+\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]\n+\tat java.base/java.lang.Thread.run(Thread.java:834) [?:?]"
  },
  {
    "sha": "468f51949a7465c139d8d5dc4af18fa5209df3c8",
    "filename": "server/pom.xml",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/server/pom.xml",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/server/pom.xml",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/server/pom.xml?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -22,5 +22,15 @@\n             <artifactId>sqlite-jdbc</artifactId>\n             <version>3.32.3.2</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-api</artifactId>\n+            <version>2.4.1</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-core</artifactId>\n+            <version>2.4.1</version>\n+        </dependency>\n     </dependencies>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "2bffa9ceec6121f5d8b4031f8a11e2aa7e66bc9b",
    "filename": "server/src/main/java/ru/geekbrains/server/ClientHandler.java",
    "status": "modified",
    "additions": 23,
    "deletions": 10,
    "changes": 33,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/server/src/main/java/ru/geekbrains/server/ClientHandler.java",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/server/src/main/java/ru/geekbrains/server/ClientHandler.java",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/server/src/main/java/ru/geekbrains/server/ClientHandler.java?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -4,21 +4,30 @@\n import java.io.DataOutputStream;\n import java.io.IOException;\n import java.net.Socket;\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n \n public class ClientHandler {\n     private Server server;\n     private Socket socket;\n     private DataInputStream in;\n     private DataOutputStream out;\n     private String nickname;\n+    //добавил формат даты для логов\n+    SimpleDateFormat dateFormat = new SimpleDateFormat(\"HH:mm:ss dd.MM.yyyy\");\n \n     public ClientHandler(Server server, Socket socket) {\n         try {\n             this.server = server;\n             this.socket = socket;\n             this.in = new DataInputStream(socket.getInputStream());\n             this.out = new DataOutputStream(socket.getOutputStream());\n-            new Thread(() -> {\n+\n+            ExecutorService executorService = Executors.newCachedThreadPool();\n+            executorService.execute(() -> {\n+//            new Thread(() -> {\n                 try {\n                     while (true) {\n                         String str = in.readUTF();\n@@ -31,7 +40,7 @@ public ClientHandler(Server server, Socket socket) {\n                                     if (!server.isNickInChat(nickFromDB)) {\n                                         nickname = nickFromDB;\n                                         sendMsg(\"/authok \" + nickname);\n-                                        server.subscribe(this);\n+                                        server.subscribe(ClientHandler.this);\n                                         break;\n                                     } else {\n                                         sendMsg(\"This nick already in use\");\n@@ -56,20 +65,22 @@ public ClientHandler(Server server, Socket socket) {\n                         }\n                     }\n \n+\n                     while (true) {\n                         String str = in.readUTF();\n-                        System.out.println(\"Сообщение от клиента: \" + str);\n+                        System.out.println(\"[\" + dateFormat.format(new Date()) + \"]\" + \"Сообщение от клиента: \" + str);\n                         if (str.startsWith(\"/\")) {\n                             if (str.equals(\"/end\")) {\n                                 break;\n                             } else if (str.startsWith(\"/w\")) {\n+                                // личные сообщения\n                                 // /w nick hello m8! hi\n                                 final String[] subStrings = str.split(\" \", 3);\n                                 if (subStrings.length == 3) {\n                                     final String toUserNick = subStrings[1];\n                                     if (server.isNickInChat(toUserNick)) {\n-                                        server.unicastMsg(toUserNick, \"from \" + nickname + \": \" + subStrings[2]);\n-                                        sendMsg(\"to \" + toUserNick + \": \" + subStrings[2]);\n+                                        server.unicastMsg(toUserNick, \"[\" + dateFormat.format(new Date()) + \"]\" + \" \" + \"from \" + nickname + \": \" + subStrings[2]);\n+                                        sendMsg(\"[\" + dateFormat.format(new Date()) + \"]\" + \" \" + \"to \" + toUserNick + \": \" + subStrings[2]);\n                                     } else {\n                                         sendMsg(\"User with nick '\" + toUserNick + \"' not found in chat room\");\n                                     }\n@@ -81,17 +92,17 @@ public ClientHandler(Server server, Socket socket) {\n                                 String[] subStr = str.split(\" \");\n                                 if (subStr.length == 2){\n                                     if (SQLHandler.tryToChangeNick(subStr[1], nickname)){\n-                                        sendMsg(nickname + \" изменён на \" + subStr[1]);\n+                                        sendMsg(\"[\" + dateFormat.format(new Date()) + \"]\" + nickname + \" изменён на \" + subStr[1]);\n                                         sendMsg(\"Изменения вступят в силу после перезахода\");\n-                                        server.broadcastMsg(nickname + \" changed has nickname to \" + subStr[1]);\n+                                        server.broadcastMsg(\"[\" + dateFormat.format(new Date()) + \"]\" + nickname + \" changed has nickname to \" + subStr[1]);\n                                         break;\n                                     } else {\n                                         sendMsg(\"Incorrect nickname\");\n                                     }\n                                 }\n                             }\n                         } else {\n-                            server.broadcastMsg(nickname + \": \" + str);\n+                            server.broadcastMsg(\"[\" + dateFormat.format(new Date()) + \"]\" + \" \" + nickname + \": \" + str);\n                         }\n                     }\n                 } catch (IOException e) {\n@@ -112,9 +123,11 @@ public ClientHandler(Server server, Socket socket) {\n                     } catch (IOException e) {\n                         e.printStackTrace();\n                     }\n-                    server.unsubscribe(this);\n+                    server.unsubscribe(ClientHandler.this);\n                 }\n-            }).start();\n+//            }).start();\n+            });\n+            executorService.shutdown();\n         } catch (IOException e) {\n             e.printStackTrace();\n         }"
  },
  {
    "sha": "d7870c96686b12f4dfa0bb1dee95dfddde0caed8",
    "filename": "server/src/main/java/ru/geekbrains/server/MainServer.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/server/src/main/java/ru/geekbrains/server/MainServer.java",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/server/src/main/java/ru/geekbrains/server/MainServer.java",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/server/src/main/java/ru/geekbrains/server/MainServer.java?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -6,6 +6,8 @@ public static void main(String[] args) {\n         new Server();\n     }\n \n-//1. Добавить в сетевой чат авторизацию через базу данных SQLite.\n-//2.*Добавить в сетевой чат возможность смены ника\n+//Добавить в сетевой чат запись локальной истории в текстовый файл на клиенте. Для каждой учетной записи файл с историей должен называться history_[login].txt. (Например, history_login1.txt, history_user111.txt)\n+//** После загрузки клиента показывать ему последние 100 строк истории чата.\n+\n+\n }"
  },
  {
    "sha": "a65d4752626d297aa2c2aadae6c61cf1e54dd166",
    "filename": "server/src/main/java/ru/geekbrains/server/SQLHandler.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/server/src/main/java/ru/geekbrains/server/SQLHandler.java",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/server/src/main/java/ru/geekbrains/server/SQLHandler.java",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/server/src/main/java/ru/geekbrains/server/SQLHandler.java?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -2,6 +2,7 @@\n \n import java.sql.*;\n \n+\n public class SQLHandler {\n     private static Connection connection;\n     private static Statement statement;"
  },
  {
    "sha": "6b0dc61dea109a4de0f0853b032153282e45932c",
    "filename": "server/src/main/java/ru/geekbrains/server/Server.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/server/src/main/java/ru/geekbrains/server/Server.java",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/server/src/main/java/ru/geekbrains/server/Server.java",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/server/src/main/java/ru/geekbrains/server/Server.java?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -1,5 +1,6 @@\n package ru.geekbrains.server;\n \n+\n import java.io.IOException;\n import java.net.ServerSocket;\n import java.net.Socket;"
  },
  {
    "sha": "33ef2c26c3b8e78cb3288aff3a1b3a62a5d4015e",
    "filename": "server/src/main/resources/log4j2.xml",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/hayRenat/JavaChatMaven/blob/751f45dff0e3c877db76fdf936e46e430d060f3f/server/src/main/resources/log4j2.xml",
    "raw_url": "https://github.com/hayRenat/JavaChatMaven/raw/751f45dff0e3c877db76fdf936e46e430d060f3f/server/src/main/resources/log4j2.xml",
    "contents_url": "https://api.github.com/repos/hayRenat/JavaChatMaven/contents/server/src/main/resources/log4j2.xml?ref=751f45dff0e3c877db76fdf936e46e430d060f3f",
    "patch": "@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"debug\" strict=\"true\"\n+               name=\"XMLConfigTest\" packages=\"org.apache.logging.log4j.test\">\n+    <Filter type=\"ThresholdFilter\" level=\"trace\" />\n+\n+    <Appenders>\n+        <Console name=\"STDOUT\">\n+            <Layout type=\"PatternLayout\" pattern=\"%m %n\" />\n+        </Console>\n+        <RollingFile name=\"rollingFile\"\n+                     fileName=\"logs/Server.log\"\n+                     filePattern=\"logs/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz\">\n+            <PatternLayout>\n+                <Pattern>%d %p %c{1.} [%t] %m%n</Pattern>\n+            </PatternLayout>\n+            <Policies>\n+                <!--  <TimeBasedTriggeringPolicy interval = \"1\" /> -->\n+                <SizeBasedTriggeringPolicy size=\"100 MB\" />\n+            </Policies>\n+        </RollingFile>\n+    </Appenders>\n+\n+    <Loggers>\n+        <Root level=\"INFO\">\n+            <AppenderRef ref=\"STDOUT\" />\n+            <AppenderRef ref=\"rollingFile\" />\n+        </Root>\n+    </Loggers>\n+\n+</Configuration>\n\\ No newline at end of file"
  }
]
