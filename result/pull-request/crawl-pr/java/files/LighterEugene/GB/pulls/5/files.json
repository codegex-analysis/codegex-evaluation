[
  {
    "sha": "26d33521af10bcc7fd8cea344038eaaeb78d0ef5",
    "filename": ".idea/.gitignore",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/LighterEugene/GB/blob/2850504bacfb902e076e011de75eb378238d4195/.idea/.gitignore",
    "raw_url": "https://github.com/LighterEugene/GB/raw/2850504bacfb902e076e011de75eb378238d4195/.idea/.gitignore",
    "contents_url": "https://api.github.com/repos/LighterEugene/GB/contents/.idea/.gitignore?ref=2850504bacfb902e076e011de75eb378238d4195",
    "patch": "@@ -0,0 +1,3 @@\n+# Default ignored files\n+/shelf/\n+/workspace.xml"
  },
  {
    "sha": "40674af8d699c0ff4e92f9e8639ff4904ce4bdea",
    "filename": ".idea/misc.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/LighterEugene/GB/blob/2850504bacfb902e076e011de75eb378238d4195/.idea/misc.xml",
    "raw_url": "https://github.com/LighterEugene/GB/raw/2850504bacfb902e076e011de75eb378238d4195/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/LighterEugene/GB/contents/.idea/misc.xml?ref=2850504bacfb902e076e011de75eb378238d4195",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_15\" project-jdk-name=\"15\" project-jdk-type=\"JavaSDK\">\n+    <output url=\"file://$PROJECT_DIR$/out\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "6a371b96e66da04ae1d955a530445a24268d25ce",
    "filename": ".idea/modules.xml",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/LighterEugene/GB/blob/2850504bacfb902e076e011de75eb378238d4195/.idea/modules.xml",
    "raw_url": "https://github.com/LighterEugene/GB/raw/2850504bacfb902e076e011de75eb378238d4195/.idea/modules.xml",
    "contents_url": "https://api.github.com/repos/LighterEugene/GB/contents/.idea/modules.xml?ref=2850504bacfb902e076e011de75eb378238d4195",
    "patch": "@@ -0,0 +1,8 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectModuleManager\">\n+    <modules>\n+      <module fileurl=\"file://$PROJECT_DIR$/7.iml\" filepath=\"$PROJECT_DIR$/7.iml\" />\n+    </modules>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "35eb1ddfbbc029bcab630581847471d7f238ec53",
    "filename": ".idea/vcs.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/LighterEugene/GB/blob/2850504bacfb902e076e011de75eb378238d4195/.idea/vcs.xml",
    "raw_url": "https://github.com/LighterEugene/GB/raw/2850504bacfb902e076e011de75eb378238d4195/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/LighterEugene/GB/contents/.idea/vcs.xml?ref=2850504bacfb902e076e011de75eb378238d4195",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "03179d7372fa5fe8fafa8d725330bd0b6e4238fb",
    "filename": "7.iml",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/LighterEugene/GB/blob/2850504bacfb902e076e011de75eb378238d4195/7.iml",
    "raw_url": "https://github.com/LighterEugene/GB/raw/2850504bacfb902e076e011de75eb378238d4195/7.iml",
    "contents_url": "https://api.github.com/repos/LighterEugene/GB/contents/7.iml?ref=2850504bacfb902e076e011de75eb378238d4195",
    "patch": "@@ -0,0 +1,11 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<module type=\"JAVA_MODULE\" version=\"4\">\n+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n+    <exclude-output />\n+    <content url=\"file://$MODULE_DIR$\">\n+      <sourceFolder url=\"file://$MODULE_DIR$/untitled/src\" isTestSource=\"false\" />\n+    </content>\n+    <orderEntry type=\"inheritedJdk\" />\n+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n+  </component>\n+</module>\n\\ No newline at end of file"
  },
  {
    "sha": "8ee5cb22018231c2bb6cb4e94a2e10539b48d2a9",
    "filename": "untitled/src/Cat.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/LighterEugene/GB/blob/2850504bacfb902e076e011de75eb378238d4195/untitled/src/Cat.java",
    "raw_url": "https://github.com/LighterEugene/GB/raw/2850504bacfb902e076e011de75eb378238d4195/untitled/src/Cat.java",
    "contents_url": "https://api.github.com/repos/LighterEugene/GB/contents/untitled/src/Cat.java?ref=2850504bacfb902e076e011de75eb378238d4195",
    "patch": "@@ -0,0 +1,27 @@\n+public class Cat {\n+    private String name;\n+    private int appetite;\n+    private boolean Satiety;//3) поля сытость\n+\n+    public Cat(String name, int appetite) {\n+        this.name = name;\n+        this.appetite = appetite;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Состояние сытости\" +\n+                \" кота по кличке \" + name +\n+                \", равняется \" + Satiety;\n+    }\n+\n+    public void eat(Plate p) {\n+        if (p.getFood() - this.appetite < 0){//2. если еды меньше, чем надо коту, он её не трогает и остаётся голоден\n+\n+        }\n+        else {\n+            p.decreaseFood(appetite);\n+            Satiety = true;\n+        }\n+    }\n+}"
  },
  {
    "sha": "6802668b7aae0f74d55a05077da46a3be98a919d",
    "filename": "untitled/src/Homework3.java",
    "status": "removed",
    "additions": 0,
    "deletions": 95,
    "changes": 95,
    "blob_url": "https://github.com/LighterEugene/GB/blob/45a3b5108cc00e71c20415b4ded48a6eeeddf35f/untitled/src/Homework3.java",
    "raw_url": "https://github.com/LighterEugene/GB/raw/45a3b5108cc00e71c20415b4ded48a6eeeddf35f/untitled/src/Homework3.java",
    "contents_url": "https://api.github.com/repos/LighterEugene/GB/contents/untitled/src/Homework3.java?ref=45a3b5108cc00e71c20415b4ded48a6eeeddf35f",
    "patch": "@@ -1,95 +0,0 @@\n-\n-import java.io.BufferedReader;\n-import java.io.IOException;\n-import java.io.InputStreamReader;\n-\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Random;\n-\n-public class Homework3 {\n-\n-    //1. Написать программу, которая загадывает случайное число от 0 до 9 и пользователю дается 3 попытки угадать\n-    // это число. При каждой попытке компьютер должен сообщить, больше ли указанное пользователем число, чем загаданное,\n-    // или меньше. После победы или проигрыша выводится\n-    // запрос – «Повторить игру еще раз? 1 да / 0 – нет»(1 – повторить, 0 – нет).\n-\n-\n-    public static void guessingNumberGame() throws IOException {\n-        System.out.println(\"Требуется угадать число от 0 до 9, у вас 3 попытки. Введите пожалуйста число:\");\n-        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n-        Random rand = new Random();\n-        int guessedNumber = rand.nextInt(10);\n-        for (int i = 3; i > 0; i--) {\n-            byte answerOfPerson = Byte.parseByte(reader.readLine());\n-            if (answerOfPerson > guessedNumber) System.out.println(\" Введёное число больше загаданного, осталось \" + ( i - 1) + \" попробуйте ввести другое число\");\n-            else if (answerOfPerson < guessedNumber) System.out.println(\" Введёное число меньше загаданного, осталось \" + ( i - 1) + \" попыток, попробуйте ввести другое число\");\n-            else if (answerOfPerson == guessedNumber) {\n-                System.out.println(\"Поздравляю, Вы угадали!\");\n-                break;\n-            }\n-            if (i == 1 && answerOfPerson != guessedNumber) System.out.println(\"ой, а ввести уже ничего не получится, ваши попытки исчерпаны \\n к сожалению, вы не угадали...\");\n-        }\n-        System.out.println(\"Повторить игру еще раз? Введите 1 если хотите и 0 если нет\");\n-        byte answerOfPersonOfEndingOrContinuing = Byte.parseByte(reader.readLine());\n-        if (answerOfPersonOfEndingOrContinuing == 1) guessingNumberGame();\n-        else if (answerOfPersonOfEndingOrContinuing == 0) System.out.println(\"Игра окончена!\");\n-        reader.close();\n-    }\n-\n-    /*2  Создать массив из слов\n-String[] words = {\"apple\", \"orange\", \"lemon\", \"banana\", \"apricot\", \"avocado\", \"broccoli\", \"carrot\", \"cherry\", \"garlic\", \"grape\", \"melon\", \"leak\", \"kiwi\", \"mango\", \"mushroom\", \"nut\", \"olive\", \"pea\", \"peanut\", \"pear\", \"pepper\", \"pineapple\", \"pumpkin\", \"potato\"}.\n-        При запуске программы компьютер загадывает слово, запрашивает ответ у пользователя, сравнивает его с загаданным словом и сообщает, правильно ли ответил пользователь. Если слово не угадано, компьютер показывает буквы, которые стоят на своих местах.\n-apple – загаданное\n-apricot - ответ игрока\n-ap############# (15 символов, чтобы пользователь не мог узнать длину слова)\n-Для сравнения двух слов посимвольно можно пользоваться:\n-String str = \"apple\";\n-char a = str.charAt(0); - метод вернет char, который стоит в слове str на первой позиции\n-Играем до тех пор, пока игрок не отгадает слово.\n-Используем только маленькие буквы.\n-*/\n-    public static void guessingWordGame() throws IOException {\n-        Random rand = new Random();\n-        int plate = rand.nextInt(25);\n-        String[] words = new String[]{\"apple\", \"orange\", \"lemon\", \"banana\", \"apricot\", \"avocado\", \"broccoli\", \"carrot\", \"cherry\", \"garlic\", \"grape\", \"melon\", \"leak\", \"kiwi\", \"mango\", \"mushroom\", \"nut\", \"olive\", \"pea\", \"peanut\", \"pear\", \"pepper\", \"pineapple\", \"pumpkin\", \"potato\"};\n-        System.out.println(\"Компьютер загадал слово,попытайтесь отгадать, играем до тех пор, пока игрок не отгадает слово:\");\n-        String guessedWord = words[plate];\n-        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n-        while(true){\n-            String answerOfPerson = reader.readLine().toLowerCase();\n-            int maxLength = answerOfPerson.length() < guessedWord.length() ? answerOfPerson.length() : guessedWord.length();\n-            if(answerOfPerson.equals(guessedWord)){\n-                System.out.println(\"Поздравляю, Вы угадали!\");\n-                break;\n-            }\n-            else if (!answerOfPerson.equals(guessedWord)){\n-                System.out.println(\"Попробуйте ещё раз, вы не угадали, сейчас будет выведена подсказка, какие буквы вами угаданы, # не означает что буква обязательно есть, она может как быть:\");\n-                String[] promptArray = new String[15];\n-                for (int i = 0; i < 15; i++)promptArray[i] = \"#\";\n-                for (int i = 0; i < maxLength;i++){\n-                    if (answerOfPerson.charAt(i) == guessedWord.charAt(i)){\n-                        promptArray[i] = Character.toString(guessedWord.charAt(i));\n-                    }\n-                    else if(answerOfPerson.charAt(i) != guessedWord.charAt(i)){\n-                        promptArray[i] =\"#\";\n-                    }\n-\n-                }\n-                ArrayList<String> list = new ArrayList<String>(Arrays.asList(promptArray));\n-                for (String partOfList: list)\n-                {\n-                    System.out.print(partOfList);\n-                }\n-                System.out.println();\n-            }\n-        }\n-    }\n-    //\n-    public static void main(String[] args) throws IOException{\n-        guessingWordGame();\n-\n-\n-\n-    }\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "1a2347254cb99cec27597d9055e64fc341375588",
    "filename": "untitled/src/Homework7.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/LighterEugene/GB/blob/2850504bacfb902e076e011de75eb378238d4195/untitled/src/Homework7.java",
    "raw_url": "https://github.com/LighterEugene/GB/raw/2850504bacfb902e076e011de75eb378238d4195/untitled/src/Homework7.java",
    "contents_url": "https://api.github.com/repos/LighterEugene/GB/contents/untitled/src/Homework7.java?ref=2850504bacfb902e076e011de75eb378238d4195",
    "patch": "@@ -0,0 +1,38 @@\n+/*\n+1. Расширить задачу про котов и тарелки с едой.\n+2. Сделать так, чтобы в тарелке с едой не могло получиться отрицательного количества еды (например, в миске 10 еды, а кот пытается покушать 15-20).\n+3. Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось покушать (хватило еды), сытость = true.\n+4. Считаем, что если коту мало еды в тарелке, то он её просто не трогает, то есть не может быть наполовину сыт (это сделано для упрощения логики программы).\n+5. Создать массив котов и тарелку с едой, попросить всех котов покушать из этой тарелки и потом вывести информацию о сытости котов в консоль.\n+6. Добавить в тарелку метод, с помощью которого можно было бы добавлять еду в тарелку.\n+ */\n+\n+public class Homework7 {\n+    public static void main(String[] args) {\n+\n+        Plate plate = new Plate(25);\n+\n+        Cat[] cats = new Cat[6];// массив котов\n+        cats[0] = new Cat(\"Томас\",9);\n+        cats[1] = new Cat(\"Бегемот\",7);\n+        cats[2] = new Cat(\"Филипп Маркович\",8);\n+        cats[3] = new Cat(\"Пушок\",9);\n+        cats[4] = new Cat(\"Василёк\",5);\n+        cats[5] = new Cat(\"Глазик\",6);\n+\n+        for (int i = 0; i < cats.length; i++) {\n+            cats[i].eat(plate);\n+            System.out.println(cats[i]);//выводиться информация о коте и поёл он или нет\n+            /*\n+            Результат работы программы:\n+            Состояние сытости кота по кличке Томас, равняется true\n+            Состояние сытости кота по кличке Бегемот, равняется true\n+            Состояние сытости кота по кличке Филипп Маркович, равняется true\n+            Состояние сытости кота по кличке Пушок, равняется false\n+            Состояние сытости кота по кличке Василёк, равняется false\n+            Состояние сытости кота по кличке Глазик, равняется false\n+             */\n+\n+        }\n+    }\n+}"
  },
  {
    "sha": "3cd9163791d38e1f8d87c85e8159f91db23fd832",
    "filename": "untitled/src/Plate.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/LighterEugene/GB/blob/2850504bacfb902e076e011de75eb378238d4195/untitled/src/Plate.java",
    "raw_url": "https://github.com/LighterEugene/GB/raw/2850504bacfb902e076e011de75eb378238d4195/untitled/src/Plate.java",
    "contents_url": "https://api.github.com/repos/LighterEugene/GB/contents/untitled/src/Plate.java?ref=2850504bacfb902e076e011de75eb378238d4195",
    "patch": "@@ -0,0 +1,25 @@\n+public class Plate {\n+    private int food;\n+\n+    public Plate(int food) {\n+        this.food = food;\n+    }\n+\n+    public int getFood() {\n+        return food;\n+    }\n+\n+    public void setFood(int food) {\n+        this.food = food;\n+    }\n+\n+    public void decreaseFood(int n) {\n+        food -= n;\n+    }\n+    public void addFood(int n) {//6.  добавляет еду в тарелку\n+        food += n;\n+    }\n+    public void info() {\n+        System.out.println(\"plate: \" + food);\n+    }\n+}"
  }
]
