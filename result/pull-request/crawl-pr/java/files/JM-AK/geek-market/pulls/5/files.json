[
  {
    "sha": "510f7a31ae9eaffe282c735e4f459b0c647082fa",
    "filename": "chromedriver",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/chromedriver",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/chromedriver",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/chromedriver?ref=34cf3016a065469bf3451ce9ab92a85446bf9249"
  },
  {
    "sha": "15bc3a0e160046abe16e9b2ad0fb64dae832ef36",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/pom.xml",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/pom.xml",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/pom.xml?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -50,6 +50,10 @@\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-websocket</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-mail</artifactId>\n+        </dependency>\n         <dependency>\n             <groupId>org.springframework.session</groupId>\n             <artifactId>spring-session-core</artifactId>\n@@ -66,6 +70,14 @@\n             <optional>true</optional>\n         </dependency>\n \n+        <!--<dependency swagger>-->\n+        <dependency>\n+            <groupId>io.springfox</groupId>\n+            <artifactId>springfox-boot-starter</artifactId>\n+            <version>3.0.0</version>\n+        </dependency>\n+\n+\n         <!--<dependency database>-->\n         <dependency>\n             <groupId>com.h2database</groupId>\n@@ -121,6 +133,13 @@\n             <version>1.35.0</version>\n         </dependency>\n \n+        <!--<dependency rabbitmq>-->\n+        <dependency>\n+            <groupId>com.rabbitmq</groupId>\n+            <artifactId>amqp-client</artifactId>\n+            <version>5.7.0</version>\n+        </dependency>\n+\n         <!--<dependency websocket>-->\n         <dependency>\n             <groupId>org.springframework.boot</groupId>\n@@ -152,6 +171,20 @@\n             <version>3.5.1</version>\n         </dependency>\n \n+        <!--<dependency aop>-->\n+        <dependency>\n+            <groupId>org.aspectj</groupId>\n+            <artifactId>aspectjweaver</artifactId>\n+            <version>1.9.6</version>\n+        </dependency>\n+\n+        <!--<dependency jwt>-->\n+        <dependency>\n+            <groupId>io.jsonwebtoken</groupId>\n+            <artifactId>jjwt</artifactId>\n+            <version>0.9.1</version>\n+        </dependency>\n+\n         <!--<dependency test>-->\n         <dependency>\n             <groupId>org.springframework.boot</groupId>\n@@ -163,6 +196,30 @@\n             <artifactId>spring-security-test</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+            <version>4.13.2</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.seleniumhq.selenium</groupId>\n+            <artifactId>selenium-java</artifactId>\n+            <version>3.14.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.testng</groupId>\n+            <artifactId>testng</artifactId>\n+            <version>7.4.0</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.google.guava</groupId>\n+            <artifactId>guava</artifactId>\n+            <version>30.1-jre</version>\n+        </dependency>\n+\n+\n     </dependencies>\n \n     <build>"
  },
  {
    "sha": "9489bbbfa18340bcc9691f2364bc36b242cc9ad3",
    "filename": "src/main/java/ru/geekbrains/market/beans/Cart.java",
    "status": "renamed",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/beans/Cart.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/beans/Cart.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/beans/Cart.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,4 +1,4 @@\n-package ru.geekbrains.market.utils;\n+package ru.geekbrains.market.beans;\n \n import lombok.Data;\n import lombok.NoArgsConstructor;\n@@ -110,5 +110,9 @@ private OrderItem findOrderFromProduct(Product p) {\n         return items.stream().filter(o -> o.getProduct().getId().equals(p.getId())).findFirst().orElse(null);\n     }\n \n+    public void clear() {\n+        items.clear();\n+        recalculate();\n+    }\n \n }",
    "previous_filename": "src/main/java/ru/geekbrains/market/utils/Cart.java"
  },
  {
    "sha": "a23f233d9f5fb6823f388119c276607d880468aa",
    "filename": "src/main/java/ru/geekbrains/market/config/restjs/JwtRequestFilter.java",
    "status": "added",
    "additions": 69,
    "deletions": 0,
    "changes": 69,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/restjs/JwtRequestFilter.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/restjs/JwtRequestFilter.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/config/restjs/JwtRequestFilter.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -0,0 +1,69 @@\n+package ru.geekbrains.market.config.restjs;\n+\n+import io.jsonwebtoken.ExpiredJwtException;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.filter.OncePerRequestFilter;\n+import ru.geekbrains.market.services.UserService;\n+\n+import javax.servlet.FilterChain;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import java.io.IOException;\n+\n+@Component\n+@Slf4j\n+@Profile(\"restjs\")\n+public class JwtRequestFilter extends OncePerRequestFilter {\n+    private UserService userService;\n+    private JwtTokenUtil jwtTokenUtil;\n+\n+    @Autowired\n+    public void setUserService(UserService userService) {\n+        this.userService = userService;\n+    }\n+\n+    @Autowired\n+    public void setJwtTokenUtil(JwtTokenUtil jwtTokenUtil) {\n+        this.jwtTokenUtil = jwtTokenUtil;\n+    }\n+\n+    @Override\n+    protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {\n+        String authHeader = request.getHeader(\"Authorization\");\n+\n+        String username = null;\n+        String jwt = null;\n+        if (authHeader != null && authHeader.startsWith(\"Bearer \")) {\n+            jwt = authHeader.substring(7);\n+            log.info( \"1 - \" + jwt);\n+            try {\n+                username = jwtTokenUtil.getUsernameFromToken(jwt);\n+                log.info(\"1 - \" + username);\n+            } catch (ExpiredJwtException e){\n+                log.debug(\"The token is expired\");\n+                e.printStackTrace();\n+            }\n+        }\n+        log.info(\"next step after 1\");\n+        log.info(\"check username\" + username);\n+        if (username != null && SecurityContextHolder.getContext().getAuthentication() == null) {\n+            UserDetails userDetails = userService.loadUserByUsername(username);\n+            log.info(\"2 - \" + userDetails.getUsername());\n+            UsernamePasswordAuthenticationToken token = new UsernamePasswordAuthenticationToken(userDetails, null, userDetails.getAuthorities());\n+            token.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));\n+            log.info(\"2 - \" + token.toString());\n+            SecurityContextHolder.getContext().setAuthentication(token);\n+        }\n+\n+        filterChain.doFilter(request, response);\n+    }\n+\n+}"
  },
  {
    "sha": "53dbe91cabc2f0f2368af81d6ee3851beee54388",
    "filename": "src/main/java/ru/geekbrains/market/config/restjs/JwtSecurityConfig.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/restjs/JwtSecurityConfig.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/restjs/JwtSecurityConfig.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/config/restjs/JwtSecurityConfig.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -0,0 +1,48 @@\n+package ru.geekbrains.market.config.restjs;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.security.authentication.AuthenticationManager;\n+import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+import org.springframework.security.config.http.SessionCreationPolicy;\n+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n+import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n+\n+@EnableWebSecurity\n+@EnableGlobalMethodSecurity(prePostEnabled = true)\n+@Profile(\"restjs\")\n+public class JwtSecurityConfig extends WebSecurityConfigurerAdapter {\n+    private JwtRequestFilter jwtRequestFilter;\n+\n+    @Autowired\n+    public void setJwtRequestFilter(JwtRequestFilter jwtRequestFilter) {\n+        this.jwtRequestFilter = jwtRequestFilter;\n+    }\n+\n+    @Override\n+    protected void configure(HttpSecurity http) throws Exception {\n+        http\n+                .csrf().disable()\n+                .authorizeRequests()\n+                .antMatchers(\"/api/v1/**\").authenticated()\n+                .anyRequest().permitAll()\n+                .and()\n+                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS);\n+        http.addFilterBefore(jwtRequestFilter, UsernamePasswordAuthenticationFilter.class);\n+    }\n+\n+    @Bean\n+    public BCryptPasswordEncoder passwordEncoder() {\n+        return new BCryptPasswordEncoder();\n+    }\n+\n+    @Override\n+    @Bean\n+    public AuthenticationManager authenticationManagerBean() throws Exception {\n+        return super.authenticationManagerBean();\n+    }\n+}"
  },
  {
    "sha": "8fba0750d240b8b7f62c4355ca6046d83cf6be03",
    "filename": "src/main/java/ru/geekbrains/market/config/restjs/JwtTokenUtil.java",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/restjs/JwtTokenUtil.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/restjs/JwtTokenUtil.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/config/restjs/JwtTokenUtil.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -0,0 +1,79 @@\n+package ru.geekbrains.market.config.restjs;\n+\n+import io.jsonwebtoken.Claims;\n+import io.jsonwebtoken.Jwts;\n+import io.jsonwebtoken.SignatureAlgorithm;\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.*;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+@Component\n+@Profile(\"restjs\")\n+@Slf4j\n+public class JwtTokenUtil {\n+    @Value(\"${jwt.secret}\")\n+    private String secret;\n+\n+    private <T> T getClaimFromToken(String token, Function<Claims, T> claimsResolver) {\n+        Claims claims = getAllClaimsFromToken(token);\n+        return claimsResolver.apply(claims);\n+    }\n+\n+    public String getUsernameFromToken(String token) {\n+        return getClaimFromToken(token, Claims::getSubject);\n+    }\n+\n+//    private Date getExpirationDateFromToken(String token) {\n+//        return getClaimFromToken(token, Claims::getExpiration);\n+//    }\n+\n+//    public boolean validateToken(String token) {\n+//        return !isTokenExpired(token);\n+//    }\n+\n+//    public boolean validateToken(String token, UserDetails userDetails) {\n+//        String username = getUsernameFromToken(token);\n+//        return Objects.equals(username, userDetails.getUsername()) && !isTokenExpired(token);\n+//    }\n+\n+    public String generateToken(UserDetails userDetails) {\n+        Map<String, Object> claims = new HashMap<>();\n+        List<String> rolesList = userDetails.getAuthorities().stream()\n+                .map(GrantedAuthority::getAuthority)\n+                .collect(Collectors.toList());\n+        claims.put(\"role\", rolesList);\n+        return doGenerateToken(claims, userDetails.getUsername());\n+    }\n+\n+    private String doGenerateToken(Map<String, Object> claims, String subject) {\n+        Date issuedDate = new Date();\n+        Date expiredDate = new Date(issuedDate.getTime() + 60 * 60 * 1000);\n+        return Jwts.builder()\n+                .setClaims(claims)\n+                .setSubject(subject)\n+                .setIssuedAt(issuedDate)\n+                .setExpiration(expiredDate)\n+                .signWith(SignatureAlgorithm.HS256, secret)\n+                .compact();\n+    }\n+\n+    private Claims getAllClaimsFromToken(String token) {\n+        log.info(\"token in jwtutil=\" + token);\n+        return Jwts.parser()\n+                .setSigningKey(secret)\n+                .parseClaimsJws(token)\n+                .getBody();\n+    }\n+\n+//    private boolean isTokenExpired(String token) {\n+//        Date date = getExpirationDateFromToken(token);\n+//        return date != null && date.before(new Date());\n+//    }\n+}"
  },
  {
    "sha": "4c7b52a1ba166fcfacbce891b7f8791c5a47d8a8",
    "filename": "src/main/java/ru/geekbrains/market/config/restjs/SwaggerConfig.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/restjs/SwaggerConfig.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/restjs/SwaggerConfig.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/config/restjs/SwaggerConfig.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -0,0 +1,24 @@\n+package ru.geekbrains.market.config.restjs;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+import springfox.documentation.builders.PathSelectors;\n+import springfox.documentation.builders.RequestHandlerSelectors;\n+import springfox.documentation.spi.DocumentationType;\n+import springfox.documentation.spring.web.plugins.Docket;\n+import springfox.documentation.swagger2.annotations.EnableSwagger2;\n+\n+@Configuration\n+@EnableSwagger2\n+@Profile(\"restjs\")\n+public class SwaggerConfig {\n+    @Bean\n+    public Docket api() {\n+        return new Docket(DocumentationType.SWAGGER_2)\n+                .select()\n+                .apis(RequestHandlerSelectors.basePackage(\"ru.geekbrains.market.controllers\"))\n+                .paths(PathSelectors.regex(\"/api.*\"))\n+                .build();\n+    }\n+}"
  },
  {
    "sha": "143bac57e5dcbf5859fa30099692c600936820bd",
    "filename": "src/main/java/ru/geekbrains/market/config/thymeleaf/AppConfig.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 5,
    "changes": 8,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/thymeleaf/AppConfig.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/thymeleaf/AppConfig.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/config/thymeleaf/AppConfig.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,9 +1,6 @@\n-package ru.geekbrains.market.config;\n+package ru.geekbrains.market.config.thymeleaf;\n \n-import org.springframework.context.annotation.Bean;\n-import org.springframework.context.annotation.ComponentScan;\n-import org.springframework.context.annotation.Configuration;\n-import org.springframework.context.annotation.PropertySource;\n+import org.springframework.context.annotation.*;\n import org.springframework.web.servlet.LocaleResolver;\n import org.springframework.web.servlet.config.annotation.InterceptorRegistry;\n import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\n@@ -15,6 +12,7 @@\n \n @Configuration\n @PropertySource(\"classpath:private.properties\")\n+@EnableAspectJAutoProxy\n @ComponentScan(\"ru.geekbrains.market\")\n public class AppConfig implements WebMvcConfigurer {\n     public void addResourceHandlers(ResourceHandlerRegistry registry) {",
    "previous_filename": "src/main/java/ru/geekbrains/market/config/AppConfig.java"
  },
  {
    "sha": "0836e56f8a764fec121dc5e4a321705df261e283",
    "filename": "src/main/java/ru/geekbrains/market/config/thymeleaf/CustomAuthenticationSuccessHandler.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/thymeleaf/CustomAuthenticationSuccessHandler.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/thymeleaf/CustomAuthenticationSuccessHandler.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/config/thymeleaf/CustomAuthenticationSuccessHandler.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,4 +1,4 @@\n-package ru.geekbrains.market.config;\n+package ru.geekbrains.market.config.thymeleaf;\n \n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.security.core.Authentication;",
    "previous_filename": "src/main/java/ru/geekbrains/market/config/CustomAuthenticationSuccessHandler.java"
  },
  {
    "sha": "9938b0c13ad83f95ff0c0ff0fc58f46a8c1fc06a",
    "filename": "src/main/java/ru/geekbrains/market/config/thymeleaf/MailConfig.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/thymeleaf/MailConfig.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/thymeleaf/MailConfig.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/config/thymeleaf/MailConfig.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -0,0 +1,38 @@\n+package ru.geekbrains.market.config.thymeleaf;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.mail.javamail.JavaMailSender;\n+import org.springframework.mail.javamail.JavaMailSenderImpl;\n+\n+import java.util.Properties;\n+\n+@Configuration\n+@Profile(\"thymeleaf\")\n+public class MailConfig {\n+    @Value(\"${mail.username}\")\n+    private String username;\n+\n+    @Value(\"${mail.password}\")\n+    private String password;\n+\n+    @Bean\n+    public JavaMailSender javaMailSender() {\n+        JavaMailSenderImpl mailSender = new JavaMailSenderImpl();\n+        mailSender.setHost(\"smtp.gmail.com\");\n+        mailSender.setPort(587);\n+\n+        mailSender.setUsername(username);\n+        mailSender.setPassword(password);\n+\n+        Properties props = mailSender.getJavaMailProperties();\n+        props.put(\"mail.transport.protocol\", \"smtp\");\n+        props.put(\"mail.smtp.auth\", \"true\");\n+        props.put(\"mail.smtp.starttls.enable\", \"true\");\n+        props.put(\"mail.debug\", \"true\");\n+\n+        return mailSender;\n+    }\n+}"
  },
  {
    "sha": "275df58c87ad91ea4acea8a34d319dd9f25c4808",
    "filename": "src/main/java/ru/geekbrains/market/config/thymeleaf/ThymeleafSecurityConfig.java",
    "status": "renamed",
    "additions": 10,
    "deletions": 4,
    "changes": 14,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/thymeleaf/ThymeleafSecurityConfig.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/thymeleaf/ThymeleafSecurityConfig.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/config/thymeleaf/ThymeleafSecurityConfig.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,21 +1,26 @@\n-package ru.geekbrains.market.config;\n+package ru.geekbrains.market.config.thymeleaf;\n \n+import lombok.NoArgsConstructor;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Profile;\n import org.springframework.security.authentication.dao.DaoAuthenticationProvider;\n import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\n import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n+import org.springframework.stereotype.Component;\n import ru.geekbrains.market.services.UserService;\n \n @Configuration\n @EnableWebSecurity\n @EnableGlobalMethodSecurity(securedEnabled = true)\n-public class SecurityConfig extends WebSecurityConfigurerAdapter {\n+@Profile(\"thymeleaf\")\n+@NoArgsConstructor\n+public class ThymeleafSecurityConfig extends WebSecurityConfigurerAdapter {\n     private UserService userService;\n     private CustomAuthenticationSuccessHandler customAuthenticationSuccessHandler;\n \n@@ -40,7 +45,7 @@ protected void configure(HttpSecurity http) throws Exception {\n                 .antMatchers(\"/register/**\").permitAll()\n                 .antMatchers(\"/admin/**\").hasRole(\"ADMIN\")\n                 .antMatchers(\"/products/**\").hasRole(\"ADMIN\")\n-                .antMatchers(\"/shop/order/**\").authenticated()\n+                .antMatchers(\"/orders/**\").authenticated()\n                 .antMatchers(\"/profile/**\").authenticated()\n                 .and()\n                 .formLogin()\n@@ -50,7 +55,7 @@ protected void configure(HttpSecurity http) throws Exception {\n                 .permitAll()\n                 .and()\n                 .logout()\n-                .logoutSuccessUrl(\"/catalog\")\n+                .logoutSuccessUrl(\"/\")\n                 .permitAll();\n     }\n \n@@ -66,4 +71,5 @@ public DaoAuthenticationProvider authenticationProvider() {\n         auth.setPasswordEncoder(passwordEncoder());\n         return auth;\n     }\n+\n }\n\\ No newline at end of file",
    "previous_filename": "src/main/java/ru/geekbrains/market/config/SecurityConfig.java"
  },
  {
    "sha": "0ae02acc719bc52744b96fa435702faee2fe3c45",
    "filename": "src/main/java/ru/geekbrains/market/config/thymeleaf/WebSocketConfiguration.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/thymeleaf/WebSocketConfiguration.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/config/thymeleaf/WebSocketConfiguration.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/config/thymeleaf/WebSocketConfiguration.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,4 +1,4 @@\n-package ru.geekbrains.market.config;\n+package ru.geekbrains.market.config.thymeleaf;\n \n import org.springframework.context.annotation.Configuration;\n import org.springframework.messaging.simp.config.MessageBrokerRegistry;",
    "previous_filename": "src/main/java/ru/geekbrains/market/config/WebSocketConfiguration.java"
  },
  {
    "sha": "734eff2839010e4ed1345df763e194ec7d8cf148",
    "filename": "src/main/java/ru/geekbrains/market/controllers/restjs/JwtAuthController.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/restjs/JwtAuthController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/restjs/JwtAuthController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/restjs/JwtAuthController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -0,0 +1,50 @@\n+package ru.geekbrains.market.controllers.restjs;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.authentication.AuthenticationManager;\n+import org.springframework.security.authentication.BadCredentialsException;\n+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestBody;\n+import org.springframework.web.bind.annotation.RestController;\n+import ru.geekbrains.market.config.restjs.JwtTokenUtil;\n+import ru.geekbrains.market.entities.dto.jwt.JwtRequest;\n+import ru.geekbrains.market.entities.dto.jwt.JwtResponse;\n+import ru.geekbrains.market.exceptions.GeekMarketError;\n+import ru.geekbrains.market.services.UserService;\n+\n+@RestController\n+@Profile(\"restjs\")\n+@Slf4j\n+public class JwtAuthController {\n+    private UserService usersService;\n+    private JwtTokenUtil jwtTokenUtil;\n+    private AuthenticationManager authenticationManager;\n+\n+    public JwtAuthController(UserService usersService,\n+                          JwtTokenUtil jwtTokenUtil,\n+                          AuthenticationManager authenticationManager) {\n+        this.usersService = usersService;\n+        this.jwtTokenUtil = jwtTokenUtil;\n+        this.authenticationManager = authenticationManager;\n+    }\n+\n+    @PostMapping(\"/auth\")\n+    public ResponseEntity<?> createAuthToken(@RequestBody JwtRequest authRequest) throws Exception {\n+        try {\n+            authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(authRequest.getUsername(), authRequest.getPassword()));\n+        } catch (BadCredentialsException ex) {\n+            return new ResponseEntity<>(new GeekMarketError(HttpStatus.UNAUTHORIZED.value(), \"Incorrect username or password\"), HttpStatus.UNAUTHORIZED);\n+        }\n+        UserDetails userDetails = usersService.loadUserByUsername(authRequest.getUsername());\n+        String token = jwtTokenUtil.generateToken(userDetails);\n+        return ResponseEntity.ok(new JwtResponse(token));\n+    }\n+\n+\n+}"
  },
  {
    "sha": "088f8084d285e4e3ae7bd1fe6df1f04ba143780f",
    "filename": "src/main/java/ru/geekbrains/market/controllers/restjs/RestCartController.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/restjs/RestCartController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/restjs/RestCartController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/restjs/RestCartController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.geekbrains.market.controllers.restjs;\n+\n+\n+import lombok.AllArgsConstructor;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.data.rest.webmvc.ResourceNotFoundException;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+import ru.geekbrains.market.entities.Product;\n+import ru.geekbrains.market.entities.dto.OrderItemDto;\n+import ru.geekbrains.market.services.OrderItemService;\n+import ru.geekbrains.market.services.ProductService;\n+import ru.geekbrains.market.beans.Cart;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequestMapping(\"/api/v1/cart\")\n+@AllArgsConstructor\n+@Profile(\"restjs\")\n+public class RestCartController {\n+    private OrderItemService orderItemService;\n+    private ProductService productService;\n+    private Cart cart;\n+\n+    @GetMapping(\"/add/{productId}\")\n+    public void addProductToCartById(@PathVariable Long productId) {\n+        Product product = productService.findById(productId).orElseThrow(() -> new ResourceNotFoundException(\"Unable to add product (id = \" + productId + \" ) to cart. Product not found\"));\n+        cart.add(product);\n+    }\n+\n+    @GetMapping\n+    public List<OrderItemDto> getCartContent() {\n+        return orderItemService.mapEntityListToDtoList(cart.getItems());\n+    }\n+\n+}"
  },
  {
    "sha": "07b4199e7cbb4e0de019192cecd165f6051f5c67",
    "filename": "src/main/java/ru/geekbrains/market/controllers/restjs/RestCatalogController.java",
    "status": "added",
    "additions": 85,
    "deletions": 0,
    "changes": 85,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/restjs/RestCatalogController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/restjs/RestCatalogController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/restjs/RestCatalogController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -0,0 +1,85 @@\n+package ru.geekbrains.market.controllers.restjs;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+import ru.geekbrains.market.entities.Product;\n+import ru.geekbrains.market.entities.dto.ProductDto;\n+import ru.geekbrains.market.exceptions.ProductNotFoundException;\n+import ru.geekbrains.market.services.ProductService;\n+\n+import java.util.List;\n+\n+\n+@RestController\n+@CrossOrigin(\"*\")\n+@RequestMapping(\"/api/v1/catalog\")\n+@Profile(\"restjs\")\n+@Api(\"Set of endpoints for CRUD operations for Products\")\n+public class RestCatalogController {\n+    private ProductService productService;\n+\n+    @Autowired\n+    public void setProductService(ProductService productService) {\n+        this.productService = productService;\n+    }\n+\n+    @GetMapping(produces = \"application/json\")\n+    @ApiOperation(\"Returns list of all products\")\n+    public List<ProductDto> getAllProducts() {\n+        return productService.findAllDtos();\n+    }\n+\n+    @GetMapping(value = \"/{id}\", produces = \"application/json\")\n+    @ApiOperation(\"Returns one product by id\")\n+    public ResponseEntity<?> getOneProduct(@PathVariable @ApiParam(\"Id of the product to be requested. Cannot be empty\") Long id) {\n+        if (!productService.existsById(id)) {\n+            throw new ProductNotFoundException(\"Product not found, id: \" + id);\n+        }\n+        return new ResponseEntity<>(productService.findById(id), HttpStatus.OK);\n+    }\n+\n+    @DeleteMapping\n+    @ApiOperation(\"Removes all products\")\n+    public void deleteAllProducts() {\n+        productService.deleteAll();\n+    }\n+\n+    @DeleteMapping(\"/{id}\")\n+    @ApiOperation(\"Removes one product by id\")\n+    public void deleteOneProduct(@PathVariable Long id) {\n+        productService.deleteById(id);\n+    }\n+\n+    @PostMapping(consumes = \"application/json\", produces = \"application/json\")\n+    @ResponseStatus(HttpStatus.CREATED)\n+    @ApiOperation(\"Creates a new product\")\n+    public Product saveNewProduct(@RequestBody Product product) {\n+        if (product.getId() != null) {\n+            product.setId(null);\n+        }\n+        return productService.save(product);\n+    }\n+\n+    @PutMapping(consumes = \"application/json\", produces = \"application/json\")\n+    @ApiOperation(\"Modifies an existing product\")\n+    public ResponseEntity<?> modifyProduct(@RequestBody Product product) {\n+        if (product.getId() == null || !productService.existsById(product.getId())) {\n+            throw new ProductNotFoundException(\"Product not found, id: \" + product.getId());\n+        }\n+        if (product.getPrice() < 0.0) {\n+            return new ResponseEntity<>(\"Product's price can not be negative\", HttpStatus.BAD_REQUEST);\n+        }\n+        return new ResponseEntity<>(productService.save(product), HttpStatus.OK);\n+    }\n+\n+    @ExceptionHandler\n+    public ResponseEntity<?> handleException(ProductNotFoundException exc) {\n+        return new ResponseEntity<>(exc.getMessage(), HttpStatus.NOT_FOUND);\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "1bab5f3079a7ecb08200f732f0209a3a45142255",
    "filename": "src/main/java/ru/geekbrains/market/controllers/restjs/RestOrdersController.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/restjs/RestOrdersController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/restjs/RestOrdersController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/restjs/RestOrdersController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -0,0 +1,44 @@\n+package ru.geekbrains.market.controllers.restjs;\n+\n+import lombok.AllArgsConstructor;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+import ru.geekbrains.market.entities.Order;\n+import ru.geekbrains.market.entities.User;\n+import ru.geekbrains.market.services.DeliveryAddressService;\n+import ru.geekbrains.market.services.OrderService;\n+import ru.geekbrains.market.services.UserService;\n+import ru.geekbrains.market.beans.Cart;\n+\n+import java.security.Principal;\n+import java.time.LocalDateTime;\n+\n+@Controller\n+@RequestMapping(\"/api/v1/orders\")\n+@Profile(\"restjs\")\n+@AllArgsConstructor\n+public class RestOrdersController {\n+    private UserService userService;\n+    private OrderService orderService;\n+    private DeliveryAddressService deliveryAddressService;\n+    private Cart cart;\n+\n+    @PostMapping(\"/confirm\")\n+    @ResponseStatus(HttpStatus.OK)\n+    public void confirmOrder(Principal principal, @RequestParam String address, @RequestParam String phone) {\n+        User user = userService.findByUserName(principal.getName()).get();\n+        Order order = orderService.makeOrder(cart, user);\n+\n+        order.setDeliveryAddress(deliveryAddressService.getUserAddressOrCreateOne(user.getId(), address));\n+        order.setPhoneNumber(phone);\n+        order.setDeliveryDate(LocalDateTime.now().plusDays(7));\n+        order.setDeliveryPrice(0.0);\n+\n+        order = orderService.saveOrder(order);\n+    }\n+}"
  },
  {
    "sha": "1974c85431a0b808477ce2592c884333956430b1",
    "filename": "src/main/java/ru/geekbrains/market/controllers/thymeleaf/AdminController.java",
    "status": "renamed",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/AdminController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/AdminController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/thymeleaf/AdminController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,6 +1,7 @@\n-package ru.geekbrains.market.controllers;\n+package ru.geekbrains.market.controllers.thymeleaf;\n \n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Profile;\n import org.springframework.stereotype.Controller;\n import org.springframework.ui.Model;\n import org.springframework.web.bind.annotation.GetMapping;\n@@ -15,6 +16,7 @@\n \n @Controller\n @RequestMapping(\"/admin\")\n+@Profile(\"thymeleaf\")\n public class AdminController {\n     private OrderService orderService;\n \n@@ -41,4 +43,12 @@ public void orderReady(@PathVariable(\"id\") Long id, HttpServletRequest request,\n         orderService.changeOrderStatus(order, 2L);\n         response.sendRedirect(request.getHeader(\"referer\"));\n     }\n+\n+    @GetMapping(\"/orders/info/{id}\")\n+    public String orderInfo(@PathVariable(\"id\") Long id, Model model) throws Exception {\n+        Order order = orderService.findById(id);\n+        model.addAttribute(\"order\", order);\n+        return \"order-info-page\";\n+    }\n+\n }",
    "previous_filename": "src/main/java/ru/geekbrains/market/controllers/AdminController.java"
  },
  {
    "sha": "bd98328f8c5bfc15825b00f3e3395175f3ccef67",
    "filename": "src/main/java/ru/geekbrains/market/controllers/thymeleaf/CartController.java",
    "status": "renamed",
    "additions": 58,
    "deletions": 20,
    "changes": 78,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/CartController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/CartController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/thymeleaf/CartController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,20 +1,20 @@\n-package ru.geekbrains.market.controllers;\n+package ru.geekbrains.market.controllers.thymeleaf;\n \n-import lombok.AllArgsConstructor;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Profile;\n import org.springframework.http.HttpStatus;\n import org.springframework.stereotype.Controller;\n import org.springframework.ui.Model;\n import org.springframework.web.bind.annotation.*;\n import org.springframework.web.servlet.ModelAndView;\n import ru.geekbrains.market.entities.Product;\n-import ru.geekbrains.market.entities.websocket.Greeting;\n+import ru.geekbrains.market.entities.dto.websocket.Greeting;\n import ru.geekbrains.market.exceptions.NotFoundException;\n import ru.geekbrains.market.services.ProductService;\n-import ru.geekbrains.market.utils.Cart;\n-import ru.geekbrains.market.utils.GreetingsWS;\n+import ru.geekbrains.market.beans.Cart;\n+import ru.geekbrains.market.utils.rabbitmq.CartSenderRabbit;\n \n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpSession;\n@@ -27,54 +27,92 @@\n \n @Controller\n @RequestMapping(\"/cart\")\n-@AllArgsConstructor\n+@Profile(\"thymeleaf\")\n public class CartController {\n     private ProductService productService;\n+    private CatalogControllerWS catalogControllerWS;\n+    private Cart cart;\n+    private CartSenderRabbit cartSenderRabbit;\n+\n+    private static final Logger logger = LoggerFactory.getLogger(CartController.class);\n \n     @Autowired\n     public void setProductService(ProductService productService) {\n         this.productService = productService;\n     }\n \n-    private static final Logger logger = LoggerFactory.getLogger(CartController.class);\n+    @Autowired\n+    public void setCatalogControllerWS(CatalogControllerWS catalogControllerWS) {\n+        this.catalogControllerWS = catalogControllerWS;\n+    }\n+\n+    @Autowired\n+    public void setCartSenderRabbit(CartSenderRabbit cartSenderRabbit) {\n+        this.cartSenderRabbit = cartSenderRabbit;\n+    }\n+\n+    @Autowired\n+    public void setCart(Cart cart) {\n+        this.cart = cart;\n+    }\n \n     @GetMapping\n-    public String showCartPage(HttpSession session, Model model) {\n-        Cart cart = getCurrentCart(session);\n+    public String showCartPage(Model model, HttpSession session) {\n+        this.cart = getCurrentCart(session);\n         model.addAttribute(\"cart\", cart);\n         return \"cart-page\";\n     }\n \n+    @GetMapping(\"/add/{product_id}\")\n+    public String addProduct(@PathVariable(name = \"product_id\") Long productId, HttpServletRequest request) throws IOException, InterruptedException {\n+        Product p = productService.findById(productId).orElseThrow(() -> new NotFoundException());\n+        cart.add(p);\n+\n+        String finalCount = String.valueOf(cart.getItems().size());\n+        new Thread(()->{\n+            try {\n+                Thread.sleep(1000);\n+            } catch (InterruptedException e) {\n+                e.printStackTrace();\n+            }\n+            catalogControllerWS.sendMessage(\"/topic/add_to_cart\",\n+                    new Greeting(\"В корзине товаров: \" + finalCount));\n+        }).start();\n+\n+        try {\n+            cartSenderRabbit.sendProduct(p);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+\n+        String referrer = request.getHeader(\"referer\");\n+        return \"redirect:\" + referrer;\n+    }\n+\n     @GetMapping(\"/inc/{product_id}\")\n-    public String incrementProduct(@PathVariable(name = \"product_id\") Long productId, HttpSession session) {\n-        Cart cart = getCurrentCart(session);\n+    public String incrementProduct(@PathVariable(name = \"product_id\") Long productId) {\n         cart.increment(productId);\n         return \"redirect:/cart\";\n     }\n \n     @GetMapping(\"/dec/{product_id}\")\n-    public String decrementProduct(@PathVariable(name = \"product_id\") Long productId, HttpSession session) {\n-        Cart cart = getCurrentCart(session);\n+    public String decrementProduct(@PathVariable(name = \"product_id\") Long productId) {\n         cart.decrement(productId);\n         return \"redirect:/cart\";\n     }\n \n     //ToDo fix address\n     @GetMapping(\"/set/{product_id}\")\n-    public String setProductQuantity(Model model,\n-                                     @RequestParam(name = \"product_id\") Long productId,\n-                                     @RequestParam(name = \"product_quantity\") Long quantity,\n-                                     HttpSession session) {\n+    public String setProductQuantity(@RequestParam(name = \"product_id\") Long productId,\n+                                     @RequestParam(name = \"product_quantity\") Long quantity) {\n         Product p = productService.findById(productId).orElseThrow(\n                 () -> new NotFoundException());\n-        Cart cart = getCurrentCart(session);\n         cart.setQuantity(p,quantity);\n         return \"redirect:/cart\";\n     }\n \n     @GetMapping(\"/remove/{product_id}\")\n-    public String removeProduct(@PathVariable(name = \"product_id\") Long productId, HttpSession session) {\n-        Cart cart = getCurrentCart(session);\n+    public String removeProduct(@PathVariable(name = \"product_id\") Long productId) {\n         cart.remove(productId);\n         return \"redirect:/cart\";\n     }",
    "previous_filename": "src/main/java/ru/geekbrains/market/controllers/CartController.java"
  },
  {
    "sha": "e432835d6ab1846874ac079255197114903969c8",
    "filename": "src/main/java/ru/geekbrains/market/controllers/thymeleaf/CatalogController.java",
    "status": "renamed",
    "additions": 4,
    "deletions": 42,
    "changes": 46,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/CatalogController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/CatalogController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/thymeleaf/CatalogController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,8 +1,9 @@\n-package ru.geekbrains.market.controllers;\n+package ru.geekbrains.market.controllers.thymeleaf;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Profile;\n import org.springframework.data.domain.Page;\n import org.springframework.data.rest.webmvc.ResourceNotFoundException;\n import org.springframework.http.HttpStatus;\n@@ -14,25 +15,21 @@\n import ru.geekbrains.market.entities.Category;\n import ru.geekbrains.market.entities.Product;\n import ru.geekbrains.market.entities.ProductImage;\n-import ru.geekbrains.market.entities.websocket.Greeting;\n+import ru.geekbrains.market.entities.dto.websocket.Greeting;\n import ru.geekbrains.market.exceptions.NotFoundException;\n import ru.geekbrains.market.services.CategoryService;\n import ru.geekbrains.market.services.ImageSaverService;\n import ru.geekbrains.market.services.ProductService;\n-import ru.geekbrains.market.utils.Cart;\n-import ru.geekbrains.market.utils.GreetingsWS;\n import ru.geekbrains.market.utils.ProductFilter;\n \n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpSession;\n-import java.io.IOException;\n import java.io.NotActiveException;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n \n @Controller\n @RequestMapping(\"/catalog\")\n+@Profile(\"thymeleaf\")\n public class CatalogController {\n     private ProductService productService;\n     private CategoryService categoryService;\n@@ -58,11 +55,6 @@ public void setImageSaverService(ImageSaverService imageSaverService) {\n         this.imageSaverService = imageSaverService;\n     }\n \n-    @Autowired\n-    public void setCatalogControllerWS(CatalogControllerWS catalogControllerWS) {\n-        this.catalogControllerWS = catalogControllerWS;\n-    }\n-\n     @GetMapping\n     public String catalogPage(Model model,\n                            @RequestParam(value = \"page\") Optional<Integer> page,\n@@ -142,36 +134,6 @@ public void deleteAll(){\n         productService.deleteAll();\n     }\n \n-    @GetMapping(\"/cart/add/{product_id}\")\n-    public String addToCart(@PathVariable(name = \"product_id\") Long productId, HttpServletRequest request, Model model) throws IOException, InterruptedException {\n-        Product p = productService.findById(productId).orElseThrow(() -> new NotFoundException());\n-        Cart cart = getCurrentCart(request.getSession());\n-        cart.add(p);\n-\n-        String finalCount = String.valueOf(cart.getItems().size());\n-        new Thread(()->{\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException e) {\n-                e.printStackTrace();\n-            }\n-            catalogControllerWS.sendMessage(\"/topic/add_to_cart\",\n-                    new Greeting(\"В корзине товаров: \" + finalCount));\n-        }).start();\n-\n-        String referrer = request.getHeader(\"referer\");\n-        return \"redirect:\" + referrer;\n-    }\n-\n-    public Cart getCurrentCart(HttpSession session) {\n-        Cart cart = (Cart) session.getAttribute(\"cart\");\n-        if (cart == null) {\n-            cart = new Cart();\n-            session.setAttribute(\"cart\", cart);\n-        }\n-        return cart;\n-    }\n-\n     @ExceptionHandler\n     public ModelAndView notFoundExceptionHandler(NotFoundException ex){\n         ModelAndView modelAndView = new ModelAndView(\"not found\");",
    "previous_filename": "src/main/java/ru/geekbrains/market/controllers/CatalogController.java"
  },
  {
    "sha": "b4757f381f433b3bca628239642cd24b66ca477f",
    "filename": "src/main/java/ru/geekbrains/market/controllers/thymeleaf/CatalogControllerWS.java",
    "status": "renamed",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/CatalogControllerWS.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/CatalogControllerWS.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/thymeleaf/CatalogControllerWS.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,18 +1,20 @@\n-package ru.geekbrains.market.controllers;\n+package ru.geekbrains.market.controllers.thymeleaf;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Profile;\n import org.springframework.messaging.handler.annotation.MessageMapping;\n import org.springframework.messaging.handler.annotation.SendTo;\n import org.springframework.messaging.simp.SimpMessagingTemplate;\n import org.springframework.stereotype.Controller;\n import org.springframework.web.util.HtmlUtils;\n-import ru.geekbrains.market.entities.websocket.Greeting;\n-import ru.geekbrains.market.entities.websocket.Message;\n+import ru.geekbrains.market.entities.dto.websocket.Greeting;\n+import ru.geekbrains.market.entities.dto.websocket.Message;\n import ru.geekbrains.market.utils.GreetingsWS;\n \n @Controller\n+@Profile(\"thymeleaf\")\n public class CatalogControllerWS implements GreetingsWS {\n     private static final Logger logger = LoggerFactory.getLogger(CatalogControllerWS.class);\n ",
    "previous_filename": "src/main/java/ru/geekbrains/market/controllers/CatalogControllerWS.java"
  },
  {
    "sha": "14de4a3ef98cf41d1744ca6de2a3711acced4b3a",
    "filename": "src/main/java/ru/geekbrains/market/controllers/thymeleaf/LoginController.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/LoginController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/LoginController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/thymeleaf/LoginController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,9 +1,11 @@\n-package ru.geekbrains.market.controllers;\n+package ru.geekbrains.market.controllers.thymeleaf;\n \n+import org.springframework.context.annotation.Profile;\n import org.springframework.stereotype.Controller;\n import org.springframework.web.bind.annotation.GetMapping;\n \n @Controller\n+@Profile(\"thymeleaf\")\n public class LoginController {\n     @GetMapping(\"/login\")\n     public String showMyLoginPage() {",
    "previous_filename": "src/main/java/ru/geekbrains/market/controllers/LoginController.java"
  },
  {
    "sha": "8fc22821612f6b2e1557944685882a0997e9ebad",
    "filename": "src/main/java/ru/geekbrains/market/controllers/thymeleaf/MainController.java",
    "status": "renamed",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/MainController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/MainController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/thymeleaf/MainController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,15 +1,17 @@\n-package ru.geekbrains.market.controllers;\n+package ru.geekbrains.market.controllers.thymeleaf;\n \n+import org.springframework.context.annotation.Profile;\n import org.springframework.stereotype.Controller;\n import org.springframework.web.bind.annotation.RequestMapping;\n \n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n \n @Controller\n+@Profile(\"thymeleaf\")\n public class MainController {\n     @RequestMapping(\"/\")\n     public String showHomePage(HttpServletRequest request, HttpServletResponse response) {\n-        return \"index\";\n+        return \"th-index\";\n     }\n }",
    "previous_filename": "src/main/java/ru/geekbrains/market/controllers/MainController.java"
  },
  {
    "sha": "2421c90a448596f16fdfbefb0c16c98a70f2149d",
    "filename": "src/main/java/ru/geekbrains/market/controllers/thymeleaf/OrderController.java",
    "status": "renamed",
    "additions": 30,
    "deletions": 4,
    "changes": 34,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/OrderController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/OrderController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/thymeleaf/OrderController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,17 +1,21 @@\n-package ru.geekbrains.market.controllers;\n+package ru.geekbrains.market.controllers.thymeleaf;\n \n-import lombok.AllArgsConstructor;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Profile;\n import org.springframework.stereotype.Controller;\n import org.springframework.ui.Model;\n import org.springframework.web.bind.annotation.*;\n import ru.geekbrains.market.entities.DeliveryAddress;\n import ru.geekbrains.market.entities.Order;\n import ru.geekbrains.market.entities.User;\n import ru.geekbrains.market.services.DeliveryAddressService;\n+import ru.geekbrains.market.services.MailService;\n import ru.geekbrains.market.services.OrderService;\n import ru.geekbrains.market.services.UserService;\n-import ru.geekbrains.market.utils.Cart;\n+import ru.geekbrains.market.beans.Cart;\n+import ru.geekbrains.market.utils.rabbitmq.CartReceiverRabbit;\n \n import javax.servlet.http.HttpServletRequest;\n import java.security.Principal;\n@@ -20,10 +24,15 @@\n \n @Controller\n @RequestMapping(\"/orders\")\n+@Profile(\"thymeleaf\")\n public class OrderController {\n     private OrderService orderService;\n     private DeliveryAddressService deliverAddressService;\n     private UserService userService;\n+    private CartReceiverRabbit cartReceiverRabbit;\n+    private MailService mailService;\n+\n+    private static final Logger logger = LoggerFactory.getLogger(OrderController.class);\n \n     @Autowired\n     public void setUserService(UserService userService) {\n@@ -40,6 +49,16 @@ public void setDeliverAddressService(DeliveryAddressService deliverAddressServic\n         this.deliverAddressService = deliverAddressService;\n     }\n \n+    @Autowired\n+    public void setCartReceiverRabbit(CartReceiverRabbit cartReceiverRabbit) {\n+        this.cartReceiverRabbit = cartReceiverRabbit;\n+    }\n+\n+    @Autowired\n+    public void setMailService(MailService mailService) {\n+        this.mailService = mailService;\n+    }\n+\n     @GetMapping\n     public String firstRequest(Model model) {\n         model.addAttribute(\"order\", orderService.findAll());\n@@ -51,9 +70,15 @@ public String orderFill(Model model, HttpServletRequest httpServletRequest, Prin\n         if (principal == null) {\n             return \"redirect:/login\";\n         }\n+        try {\n+            cartReceiverRabbit.receiveProduct();\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n         User user = userService.findByUserName(principal.getName()).get();\n         Cart cart = (Cart) httpServletRequest.getSession().getAttribute(\"cart\");\n         Order order = orderService.makeOrder(cart, user);\n+\n         List<DeliveryAddress> deliveryAddresses = deliverAddressService.getUserAddresses(user.getId());\n         model.addAttribute(\"order\", order);\n         model.addAttribute(\"deliveryAddresses\", deliveryAddresses);\n@@ -74,6 +99,7 @@ public String orderConfirm(Model model, HttpServletRequest httpServletRequest, @\n         order.setDeliveryPrice(0.0);\n         order = orderService.saveOrder(order);\n         model.addAttribute(\"order\", order);\n+\n         return \"order-filler\";\n     }\n \n@@ -88,7 +114,7 @@ public String orderConfirm(Model model, @PathVariable(name = \"id\") Long id, Prin\n         if (!user.getId().equals(confirmedOrder.getUser().getId())) {\n             return \"redirect:/\";\n         }\n-//        mailService.sendOrderMail(confirmedOrder);\n+        mailService.sendOrderMail(confirmedOrder);\n         model.addAttribute(\"order\", confirmedOrder);\n         return \"order-result\";\n     }",
    "previous_filename": "src/main/java/ru/geekbrains/market/controllers/OrderController.java"
  },
  {
    "sha": "f966f9f933361e7ad2af130d73778dce8559e0cb",
    "filename": "src/main/java/ru/geekbrains/market/controllers/thymeleaf/RegistrationController.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/RegistrationController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/RegistrationController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/thymeleaf/RegistrationController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,9 +1,10 @@\n-package ru.geekbrains.market.controllers;\n+package ru.geekbrains.market.controllers.thymeleaf;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.propertyeditors.StringTrimmerEditor;\n+import org.springframework.context.annotation.Profile;\n import org.springframework.stereotype.Controller;\n import org.springframework.ui.Model;\n import org.springframework.validation.BindingResult;\n@@ -17,6 +18,7 @@\n \n @Controller\n @RequestMapping(\"/register\")\n+@Profile(\"thymeleaf\")\n public class RegistrationController {\n     private UserService userService;\n ",
    "previous_filename": "src/main/java/ru/geekbrains/market/controllers/RegistrationController.java"
  },
  {
    "sha": "1303c5a72c3fcf9431cbe1e1a57ae328f620e00e",
    "filename": "src/main/java/ru/geekbrains/market/controllers/thymeleaf/UserControllerGRPC.java",
    "status": "renamed",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/UserControllerGRPC.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/UserControllerGRPC.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/thymeleaf/UserControllerGRPC.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,25 +1,25 @@\n-package ru.geekbrains.market.controllers;\n+package ru.geekbrains.market.controllers.thymeleaf;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Profile;\n import org.springframework.security.core.userdetails.UsernameNotFoundException;\n import org.springframework.stereotype.Controller;\n import org.springframework.web.bind.annotation.GetMapping;\n import org.springframework.web.bind.annotation.PathVariable;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.ResponseBody;\n-import ru.geekbrains.market.entities.Role;\n import ru.geekbrains.market.services.UserService;\n import ru.geekbrains.market.utils.grpc.RoleServiceClientGRPC;\n-import ru.geekbrains.market.utils.grpc.RoleServiceImplGRPC;\n import ru.geekbrains.market.utils.grpc.RoleServiceServerGRPC;\n \n import java.io.IOException;\n import java.util.List;\n \n @Controller\n @RequestMapping(\"/users\")\n+@Profile(\"thymeleaf\")\n public class UserControllerGRPC {\n \n     private static final Logger logger = LoggerFactory.getLogger(UserControllerGRPC.class);",
    "previous_filename": "src/main/java/ru/geekbrains/market/controllers/UserControllerGRPC.java"
  },
  {
    "sha": "5f48398c4b661fccceaf2defb2fd17bf11a37dce",
    "filename": "src/main/java/ru/geekbrains/market/controllers/thymeleaf/UserProfileController.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/UserProfileController.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/controllers/thymeleaf/UserProfileController.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/controllers/thymeleaf/UserProfileController.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -0,0 +1,66 @@\n+package ru.geekbrains.market.controllers.thymeleaf;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.propertyeditors.StringTrimmerEditor;\n+import org.springframework.context.annotation.Profile;\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.validation.BindingResult;\n+import org.springframework.web.bind.WebDataBinder;\n+import org.springframework.web.bind.annotation.*;\n+import ru.geekbrains.market.entities.Order;\n+import ru.geekbrains.market.entities.SystemUser;\n+import ru.geekbrains.market.entities.User;\n+import ru.geekbrains.market.services.OrderService;\n+import ru.geekbrains.market.services.UserServiceImpl;\n+\n+import javax.servlet.http.HttpServletRequest;\n+import javax.validation.Valid;\n+import java.security.Principal;\n+import java.util.List;\n+\n+@Controller\n+@RequestMapping(\"/profile\")\n+@Profile(\"thymeleaf\")\n+public class UserProfileController {\n+    private UserServiceImpl userService;\n+    private OrderService orderService;\n+\n+    @Autowired\n+    public void setUserService(UserServiceImpl userService) {\n+        this.userService = userService;\n+    }\n+\n+    @Autowired\n+    public void setOrderService(OrderService orderService) {\n+        this.orderService = orderService;\n+    }\n+\n+    private final Logger logger = LoggerFactory.getLogger(UserProfileController.class);\n+\n+    @InitBinder\n+    public void initBinder(WebDataBinder dataBinder) {\n+        StringTrimmerEditor stringTrimmerEditor = new StringTrimmerEditor(true);\n+        dataBinder.registerCustomEditor(String.class, stringTrimmerEditor);\n+    }\n+\n+    @GetMapping()\n+    public String getProfile (Model model, Principal principal){\n+        User user = userService.findByUserName(principal.getName()).get();\n+\n+        List<Order> orders = orderService.findByUserId(user.getId());\n+\n+        model.addAttribute(\"systemUser\", user);\n+        model.addAttribute(\"orders\", orders);\n+        return \"profile-page\";\n+    }\n+\n+    @GetMapping(\"/orders/info/{id}\")\n+    public String orderInfo(@PathVariable(\"id\") Long id, Model model) throws Exception {\n+        Order order = orderService.findById(id);\n+        model.addAttribute(\"order\", order);\n+        return \"order-info-page\";\n+    }\n+}"
  },
  {
    "sha": "cde043574336ec1b9b08d186fd04240ad648b783",
    "filename": "src/main/java/ru/geekbrains/market/entities/DeliveryAddress.java",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/entities/DeliveryAddress.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/entities/DeliveryAddress.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/entities/DeliveryAddress.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,12 +1,14 @@\n package ru.geekbrains.market.entities;\n \n import lombok.Data;\n+import lombok.NoArgsConstructor;\n \n import javax.persistence.*;\n \n @Entity\n @Table(name = \"delivery_addresses\")\n @Data\n+@NoArgsConstructor\n public class DeliveryAddress {\n     @Id\n     @GeneratedValue(strategy = GenerationType.IDENTITY)\n@@ -19,4 +21,7 @@\n \n     @Column(name = \"address\")\n     private String address;\n+\n+    public DeliveryAddress(Long userId, String address) {\n+    }\n }"
  },
  {
    "sha": "769ce5d930e0ce73a04abcf7402bba0bb9f87c60",
    "filename": "src/main/java/ru/geekbrains/market/entities/Order.java",
    "status": "modified",
    "additions": 14,
    "deletions": 1,
    "changes": 15,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/entities/Order.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/entities/Order.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/entities/Order.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -3,8 +3,8 @@\n import com.fasterxml.jackson.annotation.JsonIgnore;\n import lombok.Data;\n import lombok.NoArgsConstructor;\n-import org.hibernate.annotations.Cascade;\n import org.hibernate.annotations.CreationTimestamp;\n+import ru.geekbrains.market.beans.Cart;\n \n import javax.persistence.*;\n import java.time.LocalDateTime;\n@@ -62,4 +62,17 @@\n     @Transient\n     private boolean confirmed;\n \n+//    public Order(User user, Cart cart, String phoneNumber, DeliveryAddress deliveryAddress) {\n+//        this.user = user;\n+//        this.phoneNumber = phoneNumber;\n+//        this.deliveryAddress = deliveryAddress;\n+//        this.orderItems = new ArrayList<>();\n+//        for (OrderItem oi : cart.getItems()) {\n+//            oi.setOrder(this);\n+//            this.orderItems.add(oi);\n+//        }\n+//        this.price = cart.getTotalPrice();\n+//        cart.clear();\n+//    }\n+\n }"
  },
  {
    "sha": "9b7fa0361d12282c4aca9c736c1aa3ce1b47f5b3",
    "filename": "src/main/java/ru/geekbrains/market/entities/Product.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/entities/Product.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/entities/Product.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/entities/Product.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -1,5 +1,6 @@\n package ru.geekbrains.market.entities;\n \n+import com.fasterxml.jackson.annotation.JsonIgnore;\n import lombok.Data;\n import lombok.NoArgsConstructor;\n import org.hibernate.annotations.CreationTimestamp;\n@@ -52,6 +53,7 @@\n     private List<Category> categories;\n \n     @OneToMany(cascade = {CascadeType.ALL}, mappedBy = \"product\")\n+    @JsonIgnore\n     private List<ProductImage> images;\n \n     @Column(name = \"create_at\", nullable=false, updatable = false )\n@@ -63,6 +65,7 @@\n     private LocalDateTime updateAt;\n \n     @OneToMany(mappedBy = \"product\")\n+    @JsonIgnore\n     private List<OrderItem> orderItems;\n \n     public void addImage(ProductImage productImage) {"
  },
  {
    "sha": "10655ac98abcfcd0df6f6388a00b64a06701f4ea",
    "filename": "src/main/java/ru/geekbrains/market/entities/dto/OrderItemDto.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/JM-AK/geek-market/blob/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/entities/dto/OrderItemDto.java",
    "raw_url": "https://github.com/JM-AK/geek-market/raw/34cf3016a065469bf3451ce9ab92a85446bf9249/src/main/java/ru/geekbrains/market/entities/dto/OrderItemDto.java",
    "contents_url": "https://api.github.com/repos/JM-AK/geek-market/contents/src/main/java/ru/geekbrains/market/entities/dto/OrderItemDto.java?ref=34cf3016a065469bf3451ce9ab92a85446bf9249",
    "patch": "@@ -0,0 +1,21 @@\n+package ru.geekbrains.market.entities.dto;\n+\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+import ru.geekbrains.market.entities.OrderItem;\n+\n+@Data\n+@NoArgsConstructor\n+public class OrderItemDto {\n+    private Long id;\n+    private Double price;\n+    private Long quantity;\n+    private String productTitle;\n+\n+    public OrderItemDto(OrderItem orderItem) {\n+        this.id = orderItem.getId();\n+        this.price = orderItem.getTotalPrice();\n+        this.quantity = orderItem.getQuantity();\n+        this.productTitle = orderItem.getProduct().getTitle();\n+    }\n+}"
  }
]
