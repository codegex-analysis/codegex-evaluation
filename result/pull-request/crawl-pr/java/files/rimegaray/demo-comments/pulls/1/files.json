[
  {
    "sha": "f9a8417026a21ddf3d3584f79a889dc5dcc3e7d3",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 23,
    "deletions": 4,
    "changes": 27,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/pom.xml",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/pom.xml",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/pom.xml?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -1,12 +1,13 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n \txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n \t<modelVersion>4.0.0</modelVersion>\n \t<parent>\n \t\t<groupId>org.springframework.boot</groupId>\n \t\t<artifactId>spring-boot-starter-parent</artifactId>\n \t\t<version>2.4.3</version>\n-\t\t<relativePath/> <!-- lookup parent from repository -->\n+\t\t<relativePath /> <!-- lookup parent from repository -->\n \t</parent>\n \t<groupId>com.demos</groupId>\n \t<artifactId>demo</artifactId>\n@@ -17,16 +18,34 @@\n \t\t<java.version>11</java.version>\n \t</properties>\n \t<dependencies>\n+\t\t<!-- https://mvnrepository.com/artifact/org.springframework/spring-web -->\n \t\t<dependency>\n \t\t\t<groupId>org.springframework.boot</groupId>\n-\t\t\t<artifactId>spring-boot-starter</artifactId>\n+\t\t\t<artifactId>spring-boot-starter-webflux</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework</groupId>\n+\t\t\t<artifactId>spring-webflux</artifactId>\n+\t\t\t<version>5.3.4</version>\n \t\t</dependency>\n-\n \t\t<dependency>\n \t\t\t<groupId>org.springframework.boot</groupId>\n \t\t\t<artifactId>spring-boot-starter-test</artifactId>\n \t\t\t<scope>test</scope>\n \t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>junit</groupId>\n+\t\t\t<artifactId>junit</artifactId>\n+\t\t\t<version>4.13</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>io.projectreactor</groupId>\n+\t\t\t<artifactId>reactor-test</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t\t<version>3.2.3.RELEASE</version>\n+\t\t</dependency>\n+\n \t</dependencies>\n \n \t<build>"
  },
  {
    "sha": "8d879612541035c9f9b1a20d911c7826941ebbd4",
    "filename": "src/main/java/com/demos/demo/comments/business/ICommentService.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/business/ICommentService.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/business/ICommentService.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/comments/business/ICommentService.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,9 @@\n+package com.demos.demo.comments.business;\n+\n+import com.demos.demo.comments.model.Data;\n+\n+import reactor.core.publisher.Mono;\n+\n+public interface ICommentService {\n+\tpublic Mono<Data> searchComments();\n+}"
  },
  {
    "sha": "d10b3e888340ab14a99925d62fa95ba772fdb2f1",
    "filename": "src/main/java/com/demos/demo/comments/business/impl/CommentServiceImpl.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/business/impl/CommentServiceImpl.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/business/impl/CommentServiceImpl.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/comments/business/impl/CommentServiceImpl.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,29 @@\n+package com.demos.demo.comments.business.impl;\n+\n+import com.demos.demo.comments.business.ICommentService;\n+import com.demos.demo.comments.dao.ICommentDao;\n+import com.demos.demo.comments.model.Data;\n+import com.demos.demo.comments.utils.Utils;\n+\n+import java.util.stream.Collectors;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import reactor.core.publisher.Mono;\n+\n+@Service\n+public class CommentServiceImpl implements ICommentService {\n+\n+  @Autowired\n+  private ICommentDao dao;\n+  \n+  @Override\n+  public Mono<Data> searchComments() {\n+    return dao.searchComments()\n+        .map(comment -> Utils.transformData(comment))\n+        .collect(Collectors.toList())\n+        .map(data ->  new Data(data));\n+  }\n+\n+}"
  },
  {
    "sha": "9bf3a339c9793c6e2a34d73ed2ba75ed740506cd",
    "filename": "src/main/java/com/demos/demo/comments/dao/ICommentDao.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/dao/ICommentDao.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/dao/ICommentDao.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/comments/dao/ICommentDao.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,9 @@\n+package com.demos.demo.comments.dao;\n+\n+import com.demos.demo.comments.model.Comment;\n+\n+import reactor.core.publisher.Flux;\n+\n+public interface ICommentDao {\n+\tpublic Flux<Comment> searchComments();\n+}"
  },
  {
    "sha": "bf26bf9f78eb4ec6725709b40085d8c49b35c7f4",
    "filename": "src/main/java/com/demos/demo/comments/dao/impl/CommentDaoImpl.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/dao/impl/CommentDaoImpl.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/dao/impl/CommentDaoImpl.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/comments/dao/impl/CommentDaoImpl.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,34 @@\n+package com.demos.demo.comments.dao.impl;\n+\n+import com.demos.demo.comments.dao.ICommentDao;\n+import com.demos.demo.comments.exception.ApiException;\n+import com.demos.demo.comments.model.Comment;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.MediaType;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.reactive.function.client.WebClient;\n+\n+import reactor.core.publisher.Flux;\n+\n+@Component\n+public class CommentDaoImpl implements ICommentDao{\n+\n+  @Autowired\n+  private WebClient webClient;\n+  \n+  @Override\n+  public Flux<Comment> searchComments() {\n+    return webClient.get()\n+     .accept(MediaType.APPLICATION_JSON)\n+     .exchangeToFlux(response -> {\n+       if (response.statusCode().equals(HttpStatus.OK)) {\n+         return response.bodyToFlux(Comment.class);\n+       } else {\n+         return Flux.error(ApiException.builderException(new Throwable()));\n+       }\n+     });\n+  }\n+\n+}"
  },
  {
    "sha": "fc7ed07abac6a73022d842af7839058ffe6b5cc5",
    "filename": "src/main/java/com/demos/demo/comments/exception/ApiException.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/exception/ApiException.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/exception/ApiException.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/comments/exception/ApiException.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,27 @@\n+package com.demos.demo.comments.exception;\n+\n+public class ApiException extends RuntimeException{\n+\n+  private static final long serialVersionUID = 1L;\n+  \n+  private String code;\n+  \n+  public ApiException(String code) {\n+\tsuper();\n+\tthis.code = code;\n+  }\n+  \n+  ApiException(final String code, final String description, final Throwable cause){\n+    super(description, cause);\n+    this.code = code;\n+  }\n+  \n+  public static ApiException builderException(Throwable cause) {\n+\t  return new ApiException(\"E001\", \"Error al consumir el servicio RETO\", cause);\n+  }\n+\n+  public String getCode() {\n+    return code;\n+  }\n+  \n+}"
  },
  {
    "sha": "5f8ca1be5203435ea0f79c3d640caa2bb87bf134",
    "filename": "src/main/java/com/demos/demo/comments/exception/ErrorHandler.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/exception/ErrorHandler.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/exception/ErrorHandler.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/comments/exception/ErrorHandler.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,16 @@\n+package com.demos.demo.comments.exception;\n+\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.ControllerAdvice;\n+import org.springframework.web.bind.annotation.ExceptionHandler;\n+\n+@ControllerAdvice\n+public class ErrorHandler {\n+\n+\t@ExceptionHandler(ApiException.class)\n+\tpublic ResponseEntity<ErrorInfo> methodArgumentNotValidException(ApiException e) {\n+\t\tErrorInfo errorInfo = new ErrorInfo(e.getCode(), HttpStatus.SERVICE_UNAVAILABLE.value(), e.getMessage());\n+\t\treturn new ResponseEntity<>(errorInfo, HttpStatus.SERVICE_UNAVAILABLE);\n+\t}\n+}"
  },
  {
    "sha": "d577e673f4d78db6d1ac2efa144cbc7ad82c76e2",
    "filename": "src/main/java/com/demos/demo/comments/exception/ErrorInfo.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/exception/ErrorInfo.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/exception/ErrorInfo.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/comments/exception/ErrorInfo.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,26 @@\n+package com.demos.demo.comments.exception;\n+\n+public class ErrorInfo {\n+\tprivate String code;\n+\tprivate String message;\n+\tprivate int statusCode;\n+\n+\tpublic ErrorInfo(String code, int statusCode, String message) {\n+\t\tthis.code = code;\n+\t\tthis.message = message;\n+\t\tthis.statusCode = statusCode;\n+\t}\n+\n+\tpublic String getCode() {\n+\t\treturn code;\n+\t}\n+\n+\tpublic String getMessage() {\n+\t\treturn message;\n+\t}\n+\n+\tpublic int getStatusCode() {\n+\t\treturn statusCode;\n+\t}\n+\n+}"
  },
  {
    "sha": "8df0cf413cfa02d3897512165efb52fb5b359033",
    "filename": "src/main/java/com/demos/demo/comments/model/Comment.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/model/Comment.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/model/Comment.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/comments/model/Comment.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,43 @@\n+package com.demos.demo.comments.model;\n+\n+public class Comment {\n+\t\n+\tprivate Integer postId;\n+\tprivate Integer id;\n+\tprivate String name;\n+\tprivate String email;\n+\tprivate String body;\n+\n+\tpublic Integer getPostId() {\n+\t\treturn postId;\n+\t}\n+\n+\tpublic void setPostId(Integer postId) {\n+\t\tthis.postId = postId;\n+\t}\n+\n+\tpublic Integer getId() {\n+\t\treturn id;\n+\t}\n+\n+\tpublic void setId(Integer id) {\n+\t\tthis.id = id;\n+\t}\n+\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\n+\tpublic String getEmail() {\n+\t\treturn email;\n+\t}\n+\n+\tpublic void setEmail(String email) {\n+\t\tthis.email = email;\n+\t}\n+\n+\tpublic void setBody(String body) {\n+\t\tthis.body = body;\n+\t}\n+\n+}"
  },
  {
    "sha": "14a50e1d4a970ee047ec43280a8daeeff9c379da",
    "filename": "src/main/java/com/demos/demo/comments/model/Data.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/model/Data.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/model/Data.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/comments/model/Data.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,30 @@\n+package com.demos.demo.comments.model;\n+\n+import java.io.Serializable;\n+import java.util.List;\n+\n+public class Data implements Serializable {\n+\t\n+\tprivate static final long serialVersionUID = 1L;\n+\n+\tprivate List<String> data;\n+\n+\tpublic Data(List<String> data) {\n+\t\tsuper();\n+\t\tthis.data = data;\n+\t}\n+\n+\tpublic Data() {\n+\t\tsuper();\n+\t}\n+\n+\tpublic List<String> getData() {\n+\t\treturn data;\n+\t}\n+\n+\tpublic void setData(List<String> data) {\n+\t\tthis.data = data;\n+\t}\n+\t\n+\t\n+}"
  },
  {
    "sha": "77689e8fcef6f1eba199ec55e150693a8bb29639",
    "filename": "src/main/java/com/demos/demo/comments/utils/Utils.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/utils/Utils.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/comments/utils/Utils.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/comments/utils/Utils.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,17 @@\n+package com.demos.demo.comments.utils;\n+\n+import com.demos.demo.comments.model.Comment;\n+\n+public class Utils {\n+\t\n+  public static String transformData(Comment comment) {\n+\t  return new StringBuilder()\n+\t\t\t  .append(comment.getPostId())\n+\t\t\t  .append(\"|\")\n+\t\t\t  .append(comment.getId() )\n+\t\t\t  .append(\"|\")\n+\t\t\t  .append(comment.getEmail())\n+\t\t\t  .toString();\n+  }\n+  \n+}"
  },
  {
    "sha": "224b9ff660c0dc5fb81fc5e8e32a114beac4e7e7",
    "filename": "src/main/java/com/demos/demo/config/AppConfig.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/config/AppConfig.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/config/AppConfig.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/config/AppConfig.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,19 @@\n+package com.demos.demo.config;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.web.reactive.function.client.WebClient;\n+\n+@Configuration\n+public class AppConfig {\n+\t\n+\t@Value(\"${config.base.url}\")\n+\tprivate String url;\n+\t\n+\t@Bean\n+\tpublic WebClient registrarWebClient() {\n+\t\treturn WebClient.create(url);\n+\t}\n+\n+}"
  },
  {
    "sha": "764c3c82164ce477111aa4bc81a61bfdfb27e88a",
    "filename": "src/main/java/com/demos/demo/expose/web/CommentController.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/expose/web/CommentController.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/java/com/demos/demo/expose/web/CommentController.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/java/com/demos/demo/expose/web/CommentController.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,22 @@\n+package com.demos.demo.expose.web;\n+\n+import com.demos.demo.comments.business.ICommentService;\n+import com.demos.demo.comments.model.Data;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import reactor.core.publisher.Mono;\n+\n+@RestController\n+public class CommentController {\n+\n+\t@Autowired\n+\tprivate ICommentService service;\n+\t\n+\t@GetMapping(\"comments\")\n+\tpublic Mono<Data> searchComments(){\n+\t\treturn service.searchComments();\n+\t}\n+}"
  },
  {
    "sha": "847d0c4efcbc1f1acb7fd24283710c354f649a95",
    "filename": "src/main/resources/application.properties",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/resources/application.properties",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/resources/application.properties?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -1 +1,2 @@\n-\n+server.port=8081\n+config.base.url = https://jsonplaceholder.typicode.com/comments\n\\ No newline at end of file"
  },
  {
    "sha": "95670e069b0b79638a40089882f69bc4d01ff363",
    "filename": "src/main/resources/mijson.json",
    "status": "added",
    "additions": 504,
    "deletions": 0,
    "changes": 504,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/resources/mijson.json",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/resources/mijson.json",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/resources/mijson.json?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,504 @@\n+{\n+    \"data\": [\n+        \"1|1|Eliseo@gardner.biz\",\n+        \"1|2|Jayne_Kuhic@sydney.com\",\n+        \"1|3|Nikita@garfield.biz\",\n+        \"1|4|Lew@alysha.tv\",\n+        \"1|5|Hayden@althea.biz\",\n+        \"2|6|Presley.Mueller@myrl.com\",\n+        \"2|7|Dallas@ole.me\",\n+        \"2|8|Mallory_Kunze@marie.org\",\n+        \"2|9|Meghan_Littel@rene.us\",\n+        \"2|10|Carmen_Keeling@caroline.name\",\n+        \"3|11|Veronica_Goodwin@timmothy.net\",\n+        \"3|12|Oswald.Vandervort@leanne.org\",\n+        \"3|13|Kariane@jadyn.tv\",\n+        \"3|14|Nathan@solon.io\",\n+        \"3|15|Maynard.Hodkiewicz@roberta.com\",\n+        \"4|16|Christine@ayana.info\",\n+        \"4|17|Preston_Hudson@blaise.tv\",\n+        \"4|18|Vincenza_Klocko@albertha.name\",\n+        \"4|19|Madelynn.Gorczany@darion.biz\",\n+        \"4|20|Mariana_Orn@preston.org\",\n+        \"5|21|Noemie@marques.me\",\n+        \"5|22|Khalil@emile.co.uk\",\n+        \"5|23|Sophia@arianna.co.uk\",\n+        \"5|24|Jeffery@juwan.us\",\n+        \"5|25|Isaias_Kuhic@jarrett.net\",\n+        \"6|26|Russel.Parker@kameron.io\",\n+        \"6|27|Francesco.Gleason@nella.us\",\n+        \"6|28|Ronny@rosina.org\",\n+        \"6|29|Jennings_Pouros@erica.biz\",\n+        \"6|30|Lurline@marvin.biz\",\n+        \"7|31|Buford@shaylee.biz\",\n+        \"7|32|Maria@laurel.name\",\n+        \"7|33|Jaeden.Towne@arlene.tv\",\n+        \"7|34|Ethelyn.Schneider@emelia.co.uk\",\n+        \"7|35|Georgianna@florence.io\",\n+        \"8|36|Raheem_Heaney@gretchen.biz\",\n+        \"8|37|Jacky@victoria.net\",\n+        \"8|38|Piper@linwood.us\",\n+        \"8|39|Gaylord@russell.net\",\n+        \"8|40|Clare.Aufderhar@nicole.ca\",\n+        \"9|41|Lucio@gladys.tv\",\n+        \"9|42|Shemar@ewell.name\",\n+        \"9|43|Jackeline@eva.tv\",\n+        \"9|44|Marianna_Wilkinson@rupert.io\",\n+        \"9|45|Marcia@name.biz\",\n+        \"10|46|Jeremy.Harann@waino.me\",\n+        \"10|47|Pearlie.Kling@sandy.com\",\n+        \"10|48|Manuela_Stehr@chelsie.tv\",\n+        \"10|49|Camryn.Weimann@doris.io\",\n+        \"10|50|Kiana_Predovic@yasmin.io\",\n+        \"11|51|Laurie@lincoln.us\",\n+        \"11|52|Abigail.OConnell@june.org\",\n+        \"11|53|Laverne_Price@scotty.info\",\n+        \"11|54|Kenton_Vandervort@friedrich.com\",\n+        \"11|55|Hayden_Olson@marianna.me\",\n+        \"12|56|Vince_Crist@heidi.biz\",\n+        \"12|57|Darron.Nikolaus@eulah.me\",\n+        \"12|58|Ezra_Abshire@lyda.us\",\n+        \"12|59|Jameson@tony.info\",\n+        \"12|60|Americo@estrella.net\",\n+        \"13|61|Aurelio.Pfeffer@griffin.ca\",\n+        \"13|62|Vesta_Crooks@dora.us\",\n+        \"13|63|Margarett_Klein@mike.biz\",\n+        \"13|64|Freida@brandt.tv\",\n+        \"13|65|Mollie@agustina.name\",\n+        \"14|66|Janice@alda.io\",\n+        \"14|67|Dashawn@garry.com\",\n+        \"14|68|Devan.Nader@ettie.me\",\n+        \"14|69|Joana.Schoen@leora.co.uk\",\n+        \"14|70|Minerva.Anderson@devonte.ca\",\n+        \"15|71|Lavinia@lafayette.me\",\n+        \"15|72|Sabrina.Marks@savanah.name\",\n+        \"15|73|Desmond_Graham@kailee.biz\",\n+        \"15|74|Gussie_Kunde@sharon.biz\",\n+        \"15|75|Richard@chelsie.co.uk\",\n+        \"16|76|Gage_Turner@halle.name\",\n+        \"16|77|Alfred@sadye.biz\",\n+        \"16|78|Catharine@jordyn.com\",\n+        \"16|79|Esther_Ratke@shayna.biz\",\n+        \"16|80|Evangeline@chad.net\",\n+        \"17|81|Newton.Kertzmann@anjali.io\",\n+        \"17|82|Caleb_Herzog@rosamond.net\",\n+        \"17|83|Sage_Mueller@candace.net\",\n+        \"17|84|Bernie.Bergnaum@lue.com\",\n+        \"17|85|Alexzander_Davis@eduardo.name\",\n+        \"18|86|Jacquelyn@krista.info\",\n+        \"18|87|Grover_Volkman@coty.tv\",\n+        \"18|88|Jovanny@abigale.ca\",\n+        \"18|89|Isac_Schmeler@barton.com\",\n+        \"18|90|Sandy.Erdman@sabina.info\",\n+        \"19|91|Alexandro@garry.io\",\n+        \"19|92|Vickie_Schuster@harley.net\",\n+        \"19|93|Roma_Doyle@alia.com\",\n+        \"19|94|Tatum_Marks@jaylon.name\",\n+        \"19|95|Juston.Ruecker@scot.tv\",\n+        \"20|96|River.Grady@lavada.biz\",\n+        \"20|97|Claudia@emilia.ca\",\n+        \"20|98|Torrey@june.tv\",\n+        \"20|99|Hildegard.Aufderhar@howard.com\",\n+        \"20|100|Leone_Fay@orrin.com\",\n+        \"21|101|Lura@rod.tv\",\n+        \"21|102|Lottie.Zieme@ruben.us\",\n+        \"21|103|Winona_Price@jevon.me\",\n+        \"21|104|Gabriel@oceane.biz\",\n+        \"21|105|Adolph.Ondricka@mozell.co.uk\",\n+        \"22|106|Allen@richard.biz\",\n+        \"22|107|Nicholaus@mikayla.ca\",\n+        \"22|108|Kayla@susanna.org\",\n+        \"22|109|Gideon@amina.name\",\n+        \"22|110|Cassidy@maribel.io\",\n+        \"23|111|Stefan.Crist@duane.ca\",\n+        \"23|112|Aniyah.Ortiz@monte.me\",\n+        \"23|113|Laverna@rico.biz\",\n+        \"23|114|Derek@hildegard.net\",\n+        \"23|115|Tyrell@abdullah.ca\",\n+        \"24|116|Reyes@hailey.name\",\n+        \"24|117|Danika.Dicki@mekhi.biz\",\n+        \"24|118|Alessandra.Nitzsche@stephania.us\",\n+        \"24|119|Matteo@marquis.net\",\n+        \"24|120|Joshua.Spinka@toby.io\",\n+        \"25|121|Annabelle@cole.com\",\n+        \"25|122|Kacey@jamal.info\",\n+        \"25|123|Mina@mallie.name\",\n+        \"25|124|Hudson.Blick@ruben.biz\",\n+        \"25|125|Domenic.Durgan@joaquin.name\",\n+        \"26|126|Alexie@alayna.org\",\n+        \"26|127|Haven_Barrows@brant.org\",\n+        \"26|128|Marianne@maximo.us\",\n+        \"26|129|Fanny@danial.com\",\n+        \"26|130|Trevion_Kuphal@bernice.name\",\n+        \"27|131|Emmet@guy.biz\",\n+        \"27|132|Megane.Fritsch@claude.name\",\n+        \"27|133|Amya@durward.ca\",\n+        \"27|134|Jasen_Rempel@willis.org\",\n+        \"27|135|Harmony@reggie.com\",\n+        \"28|136|Rosanna_Kunze@guy.net\",\n+        \"28|137|Ressie.Boehm@flossie.com\",\n+        \"28|138|Domenic.Wuckert@jazmyne.us\",\n+        \"28|139|Rhett.OKon@brian.info\",\n+        \"28|140|Mathias@richmond.info\",\n+        \"29|141|Ottis@lourdes.org\",\n+        \"29|142|Estel@newton.ca\",\n+        \"29|143|Bertha@erik.co.uk\",\n+        \"29|144|Joesph@matteo.info\",\n+        \"29|145|Alva@cassandre.net\",\n+        \"30|146|Vivienne@willis.org\",\n+        \"30|147|Angelita@aliza.me\",\n+        \"30|148|Timmothy_Okuneva@alyce.tv\",\n+        \"30|149|Moriah_Welch@richmond.org\",\n+        \"30|150|Ramiro_Kuhn@harmon.biz\",\n+        \"31|151|Cary@taurean.biz\",\n+        \"31|152|Tillman_Koelpin@luisa.com\",\n+        \"31|153|Aleen@tania.biz\",\n+        \"31|154|Durward@cindy.com\",\n+        \"31|155|Lester@chauncey.ca\",\n+        \"32|156|Telly_Lynch@karl.co.uk\",\n+        \"32|157|Makenzie@libbie.io\",\n+        \"32|158|Amiya@perry.us\",\n+        \"32|159|Meghan@akeem.tv\",\n+        \"32|160|Mitchel.Williamson@fletcher.io\",\n+        \"33|161|Ashlee_Jast@emie.biz\",\n+        \"33|162|Antwan@lori.ca\",\n+        \"33|163|Estelle@valentina.info\",\n+        \"33|164|Haylie@gino.name\",\n+        \"33|165|Blake_Spinka@robyn.info\",\n+        \"34|166|Aimee.Bins@braeden.ca\",\n+        \"34|167|Eloy@vladimir.com\",\n+        \"34|168|Gabrielle@jada.co.uk\",\n+        \"34|169|Lee@dawn.net\",\n+        \"34|170|Gideon.Hyatt@jalen.tv\",\n+        \"35|171|Gerda.Reynolds@ceasar.co.uk\",\n+        \"35|172|Ivah@brianne.net\",\n+        \"35|173|Ethyl_Bogan@candace.co.uk\",\n+        \"35|174|Janelle_Guann@americo.info\",\n+        \"35|175|Alfonzo.Barton@kelley.co.uk\",\n+        \"36|176|Esther@ford.me\",\n+        \"36|177|Naomie_Cronin@rick.co.uk\",\n+        \"36|178|Darryl@reginald.us\",\n+        \"36|179|Thea@aurelio.org\",\n+        \"36|180|Carolyn@eloisa.biz\",\n+        \"37|181|Milan.Schoen@cortney.io\",\n+        \"37|182|Sabrina@raymond.biz\",\n+        \"37|183|Hildegard@alford.ca\",\n+        \"37|184|Lowell.Pagac@omari.biz\",\n+        \"37|185|Vivianne@ima.us\",\n+        \"38|186|Yasmin.Prohaska@hanna.co.uk\",\n+        \"38|187|Ursula.Kirlin@eino.org\",\n+        \"38|188|Nichole_Bartoletti@mozell.me\",\n+        \"38|189|Lottie_Wyman@jasen.biz\",\n+        \"38|190|Dominique_Hermann@paige.ca\",\n+        \"39|191|Eugene@mohammed.net\",\n+        \"39|192|Janick@marty.me\",\n+        \"39|193|Alena@deron.name\",\n+        \"39|194|Alphonso_Rosenbaum@valentin.co.uk\",\n+        \"39|195|Frank@rosalind.name\",\n+        \"40|196|Jenifer_Lowe@reuben.ca\",\n+        \"40|197|Cecelia_Nitzsche@marty.com\",\n+        \"40|198|Christop_Friesen@jordan.me\",\n+        \"40|199|Cooper_Boehm@damian.biz\",\n+        \"40|200|Amir@kaitlyn.org\",\n+        \"41|201|Cleve@royal.us\",\n+        \"41|202|Donnell@polly.net\",\n+        \"41|203|Bonita@karl.biz\",\n+        \"41|204|Shea@angelina.biz\",\n+        \"41|205|Omari@veronica.us\",\n+        \"42|206|Sophie@antoinette.ca\",\n+        \"42|207|Jessika@crystel.ca\",\n+        \"42|208|Cesar_Volkman@letitia.biz\",\n+        \"42|209|Maureen_Mueller@lance.us\",\n+        \"42|210|Eriberto@geovany.ca\",\n+        \"43|211|Faustino.Keeling@morris.co.uk\",\n+        \"43|212|Viola@aric.co.uk\",\n+        \"43|213|Felton_Huel@terrell.biz\",\n+        \"43|214|Ferne_Bogan@angus.info\",\n+        \"43|215|Amy@reymundo.org\",\n+        \"44|216|Jaylan.Mayert@norbert.biz\",\n+        \"44|217|Cristina.DAmore@destini.biz\",\n+        \"44|218|Ettie_Bashirian@lambert.biz\",\n+        \"44|219|Lizeth@kellen.org\",\n+        \"44|220|Vladimir_Schumm@sharon.tv\",\n+        \"45|221|Madonna@will.com\",\n+        \"45|222|Cicero_Goldner@elenor.tv\",\n+        \"45|223|Zella@jan.net\",\n+        \"45|224|Robin_Jacobi@verdie.net\",\n+        \"45|225|Lawson@demarco.co.uk\",\n+        \"46|226|Benton@jayde.tv\",\n+        \"46|227|Melody@london.name\",\n+        \"46|228|Wyman.Swaniawski@marjorie.name\",\n+        \"46|229|Deborah@fletcher.co.uk\",\n+        \"46|230|Dario@barton.info\",\n+        \"47|231|Kelton_McKenzie@danial.us\",\n+        \"47|232|Itzel@fritz.io\",\n+        \"47|233|Jacquelyn_Kutch@kaya.co.uk\",\n+        \"47|234|Cheyanne.Schowalter@alycia.biz\",\n+        \"47|235|Macey@abbie.org\",\n+        \"48|236|Freeda.Kirlin@eddie.ca\",\n+        \"48|237|Jennifer.Rowe@zoe.org\",\n+        \"48|238|Providenci.Heller@lenna.info\",\n+        \"48|239|Emerald_Murazik@darrell.biz\",\n+        \"48|240|Joseph@corrine.com\",\n+        \"49|241|Lemuel@willow.name\",\n+        \"49|242|Sven@gudrun.info\",\n+        \"49|243|Jennifer@shania.ca\",\n+        \"49|244|Eldora@madge.com\",\n+        \"49|245|Litzy@kaylie.io\",\n+        \"50|246|Jaycee.Turner@euna.name\",\n+        \"50|247|Wilbert@cheyenne.ca\",\n+        \"50|248|Rebecca_Hessel@edna.net\",\n+        \"50|249|Christiana@lawrence.info\",\n+        \"50|250|Samara@shaun.org\",\n+        \"51|251|Ayden_Hickle@stephany.tv\",\n+        \"51|252|Carissa.Krajcik@jean.name\",\n+        \"51|253|Jayde@geovanny.io\",\n+        \"51|254|Ardella@khalid.biz\",\n+        \"51|255|Delta_Welch@carleton.tv\",\n+        \"52|256|Carlee_Heathcote@harley.tv\",\n+        \"52|257|Delpha_Cormier@raymond.org\",\n+        \"52|258|Glenna@caesar.org\",\n+        \"52|259|Hoyt_Dickens@napoleon.ca\",\n+        \"52|260|Wendell.Marvin@maegan.net\",\n+        \"53|261|Virgie@layne.org\",\n+        \"53|262|Tia@kirsten.info\",\n+        \"53|263|Marco@jennyfer.biz\",\n+        \"53|264|Taya@milan.biz\",\n+        \"53|265|Lenora@derrick.biz\",\n+        \"54|266|Carolina.Auer@polly.co.uk\",\n+        \"54|267|Jaylan.Braun@lane.us\",\n+        \"54|268|Javier.Dicki@damien.org\",\n+        \"54|269|Khalil_Sawayn@tanya.net\",\n+        \"54|270|Tom.Russel@pattie.org\",\n+        \"55|271|Ethelyn.Moore@gabe.info\",\n+        \"55|272|Evangeline_Kuvalis@santina.ca\",\n+        \"55|273|Orland@larry.name\",\n+        \"55|274|Micaela.Powlowski@saul.me\",\n+        \"55|275|Imelda_Klein@melany.biz\",\n+        \"56|276|Matt.Moen@gilda.org\",\n+        \"56|277|Rocky_Ullrich@rowena.name\",\n+        \"56|278|Natalia@caitlyn.ca\",\n+        \"56|279|Edythe@general.org\",\n+        \"56|280|Aglae@gerardo.name\",\n+        \"57|281|Bridie@pearl.ca\",\n+        \"57|282|Aglae_Goldner@madisyn.co.uk\",\n+        \"57|283|Owen_Moore@jeremy.org\",\n+        \"57|284|Jarred@dangelo.name\",\n+        \"57|285|Remington_Mohr@vincenza.me\",\n+        \"58|286|Marco.Langworth@zoie.org\",\n+        \"58|287|Sedrick@mertie.tv\",\n+        \"58|288|Caleigh@eleanore.org\",\n+        \"58|289|Paolo@cristopher.com\",\n+        \"58|290|Juana_Stamm@helmer.com\",\n+        \"59|291|Pascale@fleta.ca\",\n+        \"59|292|Molly_Kertzmann@tristin.me\",\n+        \"59|293|Kailee.Larkin@amina.org\",\n+        \"59|294|Earnest.Sanford@lane.us\",\n+        \"59|295|Abigail@trudie.com\",\n+        \"60|296|Name.Walter@zoie.me\",\n+        \"60|297|Norma@abraham.co.uk\",\n+        \"60|298|Norberto_Weimann@ford.tv\",\n+        \"60|299|Nelson@charlene.biz\",\n+        \"60|300|Letha@liliane.ca\",\n+        \"61|301|Tiana@jeramie.tv\",\n+        \"61|302|Lindsey@caitlyn.net\",\n+        \"61|303|Gregory.Kutch@shawn.info\",\n+        \"61|304|Murphy.Kris@casimer.me\",\n+        \"61|305|Isidro_Kiehn@cristina.org\",\n+        \"62|306|Kenton_Carter@yolanda.co.uk\",\n+        \"62|307|Amos_Rohan@mozelle.tv\",\n+        \"62|308|Timothy_Heathcote@jose.name\",\n+        \"62|309|Otilia.Daniel@elvie.io\",\n+        \"62|310|Toni@joesph.biz\",\n+        \"63|311|Brisa@carrie.us\",\n+        \"63|312|Jasen.Kihn@devon.biz\",\n+        \"63|313|Efren.Konopelski@madisyn.us\",\n+        \"63|314|Demetris.Bergnaum@fae.io\",\n+        \"63|315|Luella.Pollich@gloria.org\",\n+        \"64|316|Sister.Morissette@adelia.io\",\n+        \"64|317|Shyanne@rick.info\",\n+        \"64|318|Freeman.Dare@ada.name\",\n+        \"64|319|Donnell@orland.org\",\n+        \"64|320|Robin@gaylord.biz\",\n+        \"65|321|Danyka_Stark@jedidiah.name\",\n+        \"65|322|Margarita@casper.io\",\n+        \"65|323|Carlo@cortney.net\",\n+        \"65|324|Mina@nikita.tv\",\n+        \"65|325|Violette@naomi.tv\",\n+        \"66|326|Lauren.Hodkiewicz@jarret.info\",\n+        \"66|327|Ernestina@piper.biz\",\n+        \"66|328|Hettie_Morar@wiley.info\",\n+        \"66|329|Corbin.Hilll@modesto.biz\",\n+        \"66|330|Kenyatta@renee.io\",\n+        \"67|331|Don@cameron.co.uk\",\n+        \"67|332|Jovan@aaliyah.tv\",\n+        \"67|333|Jeanie.McGlynn@enoch.ca\",\n+        \"67|334|Garett_Gusikowski@abigale.me\",\n+        \"67|335|Doug@alana.co.uk\",\n+        \"68|336|Yoshiko@viviane.name\",\n+        \"68|337|Micaela_Bins@mertie.us\",\n+        \"68|338|Loy@gillian.me\",\n+        \"68|339|Tyrel@hunter.net\",\n+        \"68|340|Otilia.Schuppe@randal.com\",\n+        \"69|341|April@larissa.co.uk\",\n+        \"69|342|Glenna_Waters@retha.me\",\n+        \"69|343|Cordelia.Oberbrunner@peyton.com\",\n+        \"69|344|Zander@santino.net\",\n+        \"69|345|Camila_Runolfsdottir@tressa.tv\",\n+        \"70|346|Kirstin@tina.info\",\n+        \"70|347|Anthony.Koepp@savannah.tv\",\n+        \"70|348|Bradley.Lang@marilyne.tv\",\n+        \"70|349|Loren@aric.biz\",\n+        \"70|350|Arjun@natalie.ca\",\n+        \"71|351|Solon.Goldner@judah.org\",\n+        \"71|352|Nina@osbaldo.name\",\n+        \"71|353|Madaline@marlin.org\",\n+        \"71|354|Mike.Kozey@gladyce.us\",\n+        \"71|355|Orval.Treutel@arnold.me\",\n+        \"72|356|Trent@samir.net\",\n+        \"72|357|Ashleigh@annette.ca\",\n+        \"72|358|Douglas@anabel.org\",\n+        \"72|359|Lowell@mossie.com\",\n+        \"72|360|Jacquelyn@kristian.net\",\n+        \"73|361|Antwon@domenico.me\",\n+        \"73|362|Kenyon@retha.me\",\n+        \"73|363|Ben@elouise.net\",\n+        \"73|364|Madisen.Hauck@barney.co.uk\",\n+        \"73|365|Dock.Parker@roy.biz\",\n+        \"74|366|Pablo.Ritchie@tyrique.co.uk\",\n+        \"74|367|Sebastian_Gaylord@freda.org\",\n+        \"74|368|Lazaro@nadia.ca\",\n+        \"74|369|Jessy.Boyle@vernice.biz\",\n+        \"74|370|Mitchel@hal.co.uk\",\n+        \"75|371|Lindsay@kiley.name\",\n+        \"75|372|Erika.Murazik@jorge.me\",\n+        \"75|373|Olin@edmund.ca\",\n+        \"75|374|Lacey@novella.biz\",\n+        \"75|375|Sister@miller.net\",\n+        \"76|376|Raphaelle@miller.com\",\n+        \"76|377|Jaren.Schiller@augusta.org\",\n+        \"76|378|Nikko_Reynolds@harry.me\",\n+        \"76|379|Afton.Medhurst@mina.info\",\n+        \"76|380|Wilson.Nikolaus@fredrick.org\",\n+        \"77|381|Tomasa@lee.us\",\n+        \"77|382|Ally_Kassulke@rashad.ca\",\n+        \"77|383|Reagan_Ziemann@ross.io\",\n+        \"77|384|Angelita@sally.org\",\n+        \"77|385|Lonzo@lorena.org\",\n+        \"78|386|Alexandre@derrick.co.uk\",\n+        \"78|387|Judd@lucinda.ca\",\n+        \"78|388|Eleanora@karson.net\",\n+        \"78|389|Enrico_Feil@liana.biz\",\n+        \"78|390|Beverly@perry.org\",\n+        \"79|391|Corene_Mante@rory.com\",\n+        \"79|392|Emily_Flatley@ephraim.name\",\n+        \"79|393|Donna@frederik.com\",\n+        \"79|394|Kyleigh@ruben.org\",\n+        \"79|395|Noemy.Hammes@lisette.net\",\n+        \"80|396|Margarett_Jenkins@harley.us\",\n+        \"80|397|Dexter.Pacocha@lauren.biz\",\n+        \"80|398|Gennaro@jaunita.co.uk\",\n+        \"80|399|Jaycee@aimee.us\",\n+        \"80|400|Brennon@carmela.tv\",\n+        \"81|401|Vella.Mayer@colten.net\",\n+        \"81|402|Caleb_Dach@kathleen.us\",\n+        \"81|403|Patience_Bahringer@dameon.biz\",\n+        \"81|404|Destinee.Simonis@jose.tv\",\n+        \"81|405|Keshaun@brown.biz\",\n+        \"82|406|Merle.Schultz@marcel.org\",\n+        \"82|407|Malvina_Fay@louie.name\",\n+        \"82|408|Domenick_Douglas@gabe.us\",\n+        \"82|409|Isaac@allene.net\",\n+        \"82|410|Marianna.Pacocha@george.net\",\n+        \"83|411|Sister_Barton@lela.com\",\n+        \"83|412|Autumn.Lebsack@kasandra.ca\",\n+        \"83|413|Irma.OKon@arden.me\",\n+        \"83|414|Alaina_Hammes@carter.info\",\n+        \"83|415|Alia@addison.org\",\n+        \"84|416|Aurelie_McKenzie@providenci.biz\",\n+        \"84|417|May_Steuber@virgil.net\",\n+        \"84|418|Tessie@emilie.co.uk\",\n+        \"84|419|Priscilla@colten.org\",\n+        \"84|420|Aylin@abigale.me\",\n+        \"85|421|Holden@kenny.io\",\n+        \"85|422|Guillermo_Dare@dorothea.tv\",\n+        \"85|423|Oscar@pearline.com\",\n+        \"85|424|Jonathon_Feest@maxime.io\",\n+        \"85|425|Micah_Wolf@lennie.co.uk\",\n+        \"86|426|Shany@daisha.biz\",\n+        \"86|427|Drew_Lemke@alexis.net\",\n+        \"86|428|Karina.Donnelly@liam.com\",\n+        \"86|429|Ahmed_Runolfsson@claire.name\",\n+        \"86|430|Marilou_Halvorson@kane.io\",\n+        \"87|431|Bernie.Schoen@seamus.co.uk\",\n+        \"87|432|Joesph@darryl.net\",\n+        \"87|433|Timmothy.Corwin@augustus.co.uk\",\n+        \"87|434|Julien_OHara@vance.io\",\n+        \"87|435|Susan.Bartell@euna.org\",\n+        \"88|436|Selena.Quigley@johan.co.uk\",\n+        \"88|437|Clifton_Boehm@jacynthe.io\",\n+        \"88|438|Lizzie_Bartell@diamond.net\",\n+        \"88|439|Yasmeen@golda.ca\",\n+        \"88|440|Adolf.Russel@clark.ca\",\n+        \"89|441|Elian@matilda.me\",\n+        \"89|442|Salma@francis.net\",\n+        \"89|443|Orlando_Dickinson@vern.org\",\n+        \"89|444|Elda@orval.name\",\n+        \"89|445|Dennis@karley.net\",\n+        \"90|446|Jedediah@mason.io\",\n+        \"90|447|Maryam@jack.name\",\n+        \"90|448|Rick@carlos.tv\",\n+        \"90|449|Vallie@jerrod.net\",\n+        \"90|450|Adolph.Hayes@isobel.biz\",\n+        \"91|451|Duane_Dach@demario.us\",\n+        \"91|452|General@schuyler.org\",\n+        \"91|453|Stephania_Stanton@demond.biz\",\n+        \"91|454|Reinhold.Schiller@kelly.info\",\n+        \"91|455|Royce@jaiden.co.uk\",\n+        \"92|456|Cassie@diana.org\",\n+        \"92|457|Jena.OKeefe@adonis.net\",\n+        \"92|458|Magdalen@holly.io\",\n+        \"92|459|Nyah@otho.com\",\n+        \"92|460|Kara_Stokes@connie.co.uk\",\n+        \"93|461|Conner@daron.info\",\n+        \"93|462|Nathanael@jada.org\",\n+        \"93|463|Nicklaus@talon.io\",\n+        \"93|464|Jerald@laura.io\",\n+        \"93|465|Jamey_Dare@johnny.org\",\n+        \"94|466|Brant@yasmin.co.uk\",\n+        \"94|467|Adrianna_Howell@molly.io\",\n+        \"94|468|Amiya.Morar@emma.tv\",\n+        \"94|469|Destany@bailey.info\",\n+        \"94|470|Katarina.Wolff@joel.io\",\n+        \"95|471|Pearline@veda.ca\",\n+        \"95|472|Belle.Braun@otis.name\",\n+        \"95|473|Eliane@libby.net\",\n+        \"95|474|Trey.Harber@christop.biz\",\n+        \"95|475|Kailyn@ivory.info\",\n+        \"96|476|Amely.Kunde@rodrigo.co.uk\",\n+        \"96|477|Thaddeus.Halvorson@ruthe.ca\",\n+        \"96|478|Hannah@emma.ca\",\n+        \"96|479|Maryam.Mann@thelma.info\",\n+        \"96|480|Michel@keira.us\",\n+        \"97|481|Domenick@russell.ca\",\n+        \"97|482|Chanelle@samson.me\",\n+        \"97|483|Hermann.Kunde@rosina.us\",\n+        \"97|484|Olen@bryce.net\",\n+        \"97|485|Lorenza.Carter@consuelo.ca\",\n+        \"98|486|Lamont@georgiana.biz\",\n+        \"98|487|Colin_Gutkowski@muriel.net\",\n+        \"98|488|Albert@johnny.biz\",\n+        \"98|489|Hilma.Kutch@ottilie.info\",\n+        \"98|490|Donnie@alfreda.biz\",\n+        \"99|491|Maxwell@adeline.me\",\n+        \"99|492|Amina@emmet.org\",\n+        \"99|493|Gilda@jacques.org\",\n+        \"99|494|Kadin@walter.io\",\n+        \"99|495|Alice_Considine@daren.com\",\n+        \"100|496|Zola@lizzie.com\",\n+        \"100|497|Dolly@mandy.co.uk\",\n+        \"100|498|Davion@eldora.net\",\n+        \"100|499|Wilburn_Labadie@araceli.name\",\n+        \"100|500|Emma@joanny.ca\"\n+    ]\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0d7ba4cd0e1014522195c61c25b869b53c7f57ef",
    "filename": "src/main/resources/webservice.json",
    "status": "added",
    "additions": 3502,
    "deletions": 0,
    "changes": 3502,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/resources/webservice.json",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/main/resources/webservice.json",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/main/resources/webservice.json?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f"
  },
  {
    "sha": "99897f9a5edd5d26503a43cfba9506ff3551c41a",
    "filename": "src/test/java/com/demos/demo/CommentDaoTest.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/test/java/com/demos/demo/CommentDaoTest.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/test/java/com/demos/demo/CommentDaoTest.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/test/java/com/demos/demo/CommentDaoTest.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,56 @@\n+package com.demos.demo;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import com.demos.demo.comments.dao.impl.CommentDaoImpl;\n+import com.demos.demo.comments.model.Comment;\n+import com.fasterxml.jackson.core.JsonParseException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.springframework.http.MediaType;\n+import org.springframework.web.reactive.function.client.WebClient;\n+\n+import reactor.core.publisher.Flux;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class CommentDaoTest {\n+\n+\t@InjectMocks\n+\tCommentDaoImpl dao;\n+\t\n+\tpublic static final ObjectMapper JSON_MAPPER = new ObjectMapper();\n+\t\n+\t@Mock\n+\tWebClient webClientMock;\n+\t\n+\t@Test\n+\tpublic void shouldReturnOk() throws JsonParseException, JsonMappingException, IOException {\n+\t\tArrayList<Comment> myComments = JSON_MAPPER.readValue(new File(\"src/main/resources/webservice.json\"), \n+\t\t\t\tJSON_MAPPER.getTypeFactory().constructCollectionType(ArrayList.class, Comment.class));\n+\t\t\n+\t\tfinal var uriSpecMock = Mockito.mock(WebClient.RequestHeadersUriSpec.class);\n+\t\tfinal var headersSpecMock = Mockito.mock(WebClient.RequestHeadersSpec.class);\n+\t\t\n+\t\tMockito.when(webClientMock.get()).thenReturn(uriSpecMock);\n+\t\tMockito.when(uriSpecMock.accept(MediaType.APPLICATION_JSON)).thenReturn(headersSpecMock);\n+\t\tMockito.when(headersSpecMock.exchangeToFlux(Mockito.any()))\n+        .thenReturn(Flux.fromIterable(myComments));\n+\t\t\n+\t\tassertNotNull(dao.searchComments());\n+\t\tassertEquals(myComments.get(0).getId(), dao.searchComments().blockFirst().getId());\n+\t}\n+\t\n+\t\n+}"
  },
  {
    "sha": "fdca4279ca123682914573258b4680b73c92d756",
    "filename": "src/test/java/com/demos/demo/CommentServiceTest.java",
    "status": "added",
    "additions": 57,
    "deletions": 0,
    "changes": 57,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/test/java/com/demos/demo/CommentServiceTest.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/test/java/com/demos/demo/CommentServiceTest.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/test/java/com/demos/demo/CommentServiceTest.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,57 @@\n+package com.demos.demo;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.InjectMocks;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import com.demos.demo.comments.business.impl.CommentServiceImpl;\n+import com.demos.demo.comments.dao.impl.CommentDaoImpl;\n+import com.demos.demo.comments.model.Comment;\n+import com.demos.demo.comments.model.Data;\n+import com.fasterxml.jackson.core.JsonParseException;\n+import com.fasterxml.jackson.databind.JsonMappingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import reactor.core.publisher.Flux;\n+import reactor.test.StepVerifier;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class CommentServiceTest {\n+\n+\t@InjectMocks\n+\tCommentServiceImpl service;\n+\t\n+\tpublic static final ObjectMapper JSON_MAPPER = new ObjectMapper();\n+\t\n+\t@Mock\n+\tCommentDaoImpl daoMock;\n+\t\n+\t@Test\n+\tpublic void shouldReturnOk() throws JsonParseException, JsonMappingException, IOException {\n+\t\tData data = JSON_MAPPER.readValue(new File(\"src/main/resources/mijson.json\"), Data.class);\n+\t\t\n+\t\tArrayList<Comment> myComments = JSON_MAPPER.readValue(new File(\"src/main/resources/webservice.json\"), \n+\t\t\t\tJSON_MAPPER.getTypeFactory().constructCollectionType(ArrayList.class, Comment.class));\n+\t\t\n+\t\tMockito.when(daoMock.searchComments()).thenReturn(Flux.fromIterable(myComments));\n+\t\t\n+\t\tassertEquals(data.getData().get(0), service.searchComments().block().getData().get(0));\n+\t\tassertEquals(data.getData().get(1), service.searchComments().block().getData().get(1));\n+\t\tassertEquals(data.getData().get(2), service.searchComments().block().getData().get(2));\n+\t\t\n+\t\tStepVerifier.create(service.searchComments())\n+\t    .expectNextCount(1)\n+\t    .expectComplete()\n+\t    .verify();\n+\t}\n+\t\n+}"
  },
  {
    "sha": "35a595a5fdfecdf131de906640ce8f5c45e18547",
    "filename": "src/test/java/com/demos/demo/ControllerTestException.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/test/java/com/demos/demo/ControllerTestException.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/test/java/com/demos/demo/ControllerTestException.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/test/java/com/demos/demo/ControllerTestException.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,56 @@\n+package com.demos.demo;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import org.junit.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+import com.demos.demo.comments.exception.ApiException;\n+import com.demos.demo.comments.exception.ErrorHandler;\n+import com.demos.demo.comments.exception.ErrorInfo;\n+import com.demos.demo.expose.web.CommentController;\n+\n+import reactor.test.StepVerifier;\n+\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ExtendWith(SpringExtension.class)\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT, \n+    properties = \"config.base.url = https://jsonplaceholder.typicode.com/otro\")\n+public class ControllerTestException {\n+\n+\t@Autowired\n+\tCommentController controller;\n+\t\n+\t@Autowired\n+\tErrorHandler handler;\n+\n+\t@Test\n+\tpublic void shouldReturnApiExceptionWhenUrlIsNoOk() {\n+\t  StepVerifier.create(controller.searchComments())\n+\t    .expectError(ApiException.class)\n+\t    .verify();\n+\t}\n+\t\n+\t@Test\n+\tpublic void testHanlderException() {\n+\t\tassertNotNull(handler.methodArgumentNotValidException(new ApiException(\"T004\")));\n+\t}\n+\t\n+\t@Test\n+\tpublic void testErrorInfo() {\n+\t\tErrorInfo errorInfo = new ErrorInfo(\"T001\", HttpStatus.ACCEPTED.value(), \"Test\");\n+\t\tassertEquals(\"T001\", errorInfo.getCode());\n+\t\tassertEquals(HttpStatus.ACCEPTED.value(), errorInfo.getStatusCode());\n+\t\tassertEquals(\"Test\", errorInfo.getMessage());\n+\t}\n+\t\n+\t\n+}"
  },
  {
    "sha": "b3df22a47770f5e3a63b86f4a18b575bcc11b41d",
    "filename": "src/test/java/com/demos/demo/ControllerTestOk.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/test/java/com/demos/demo/ControllerTestOk.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/93186413b8eccbf600377d7ddf49368be3f7cd7f/src/test/java/com/demos/demo/ControllerTestOk.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/test/java/com/demos/demo/ControllerTestOk.java?ref=93186413b8eccbf600377d7ddf49368be3f7cd7f",
    "patch": "@@ -0,0 +1,47 @@\n+package com.demos.demo;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+import com.demos.demo.expose.web.CommentController;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.http.MediaType;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+import org.springframework.test.web.reactive.server.WebTestClient;\n+\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT,\n+    properties = \"config.base.url = https://jsonplaceholder.typicode.com/comments\")\n+public class ControllerTestOk {\n+\n+\t@Autowired\n+\tCommentController controller;\n+\t\n+\t@Autowired\n+\tprivate WebTestClient webTestClient;\n+\t\n+\t@Test\n+\tpublic void shouldReturnIs4xxClientErrorWhenResponseIsNotOk() {\n+\t\tassertNotNull(webTestClient.get()\n+\t\t\t\t  .uri(\"https://jsonplaceholder.typicode.com/commentss\")\n+\t\t\t\t  .accept(MediaType.TEXT_PLAIN).exchange()\n+\t\t\t\t  .expectStatus().is4xxClientError());\n+\t}\n+\t\n+\t@Test\n+\tpublic void shouldReturnIsOkWhenResponseIsOk() {\n+\t\tassertNotNull(webTestClient.get()\n+\t\t\t\t  .uri(\"https://jsonplaceholder.typicode.com/comments\")\n+\t\t\t\t  .accept(MediaType.TEXT_PLAIN).exchange()\n+\t\t\t\t  .expectStatus().isOk());\n+\t}\n+\t\n+\t@Test\n+\tpublic void dataResponseShouldReturnNotNullWhenResponseIsOk() {\n+\t\tassertNotNull(controller.searchComments().block().getData().get(0));\n+\t}\n+}"
  },
  {
    "sha": "2c9f38d1ad82dc5d6c6add9c754a4973b9a88b2c",
    "filename": "src/test/java/com/demos/demo/DemoApplicationTests.java",
    "status": "removed",
    "additions": 0,
    "deletions": 13,
    "changes": 13,
    "blob_url": "https://github.com/rimegaray/demo-comments/blob/7ac9567a449373f2423ec8da9d8025feb42021a3/src/test/java/com/demos/demo/DemoApplicationTests.java",
    "raw_url": "https://github.com/rimegaray/demo-comments/raw/7ac9567a449373f2423ec8da9d8025feb42021a3/src/test/java/com/demos/demo/DemoApplicationTests.java",
    "contents_url": "https://api.github.com/repos/rimegaray/demo-comments/contents/src/test/java/com/demos/demo/DemoApplicationTests.java?ref=7ac9567a449373f2423ec8da9d8025feb42021a3",
    "patch": "@@ -1,13 +0,0 @@\n-package com.demos.demo;\n-\n-import org.junit.jupiter.api.Test;\n-import org.springframework.boot.test.context.SpringBootTest;\n-\n-@SpringBootTest\n-class DemoApplicationTests {\n-\n-\t@Test\n-\tvoid contextLoads() {\n-\t}\n-\n-}"
  }
]
