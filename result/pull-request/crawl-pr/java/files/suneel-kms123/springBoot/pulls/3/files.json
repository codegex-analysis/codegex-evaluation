[
  {
    "sha": "9284792f8cb1da050f2052e9df646c833d56417f",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 95,
    "deletions": 2,
    "changes": 97,
    "blob_url": "https://github.com/suneel-kms123/springBoot/blob/7b525361a357aef9137d49ab1fba5dd7deee5007/pom.xml",
    "raw_url": "https://github.com/suneel-kms123/springBoot/raw/7b525361a357aef9137d49ab1fba5dd7deee5007/pom.xml",
    "contents_url": "https://api.github.com/repos/suneel-kms123/springBoot/contents/pom.xml?ref=7b525361a357aef9137d49ab1fba5dd7deee5007",
    "patch": "@@ -19,8 +19,7 @@\n \t\t<dependency>\r\n \t\t\t<groupId>junit</groupId>\r\n \t\t\t<artifactId>junit</artifactId>\r\n-\t\t\t<version>4.12</version>\r\n-\t\t\t<scope>test</scope>\r\n+\t\t\t<version>4.13.1</version>\r\n \t\t</dependency>\r\n \t\t<dependency>\r\n \t\t\t<groupId>javax.servlet</groupId>\r\n@@ -35,6 +34,11 @@\n \t\t\t<groupId>org.springframework</groupId>\r\n \t\t\t<artifactId>spring-beans</artifactId>\r\n \t\t</dependency>\r\n+\t\t<dependency>\r\n+\t\t\t<groupId>org.springframework.boot</groupId>\r\n+\t\t\t<artifactId>spring-boot-starter-security</artifactId>\r\n+\t\t</dependency>\r\n+\r\n \t\t<dependency>\r\n \t\t\t<groupId>org.springframework</groupId>\r\n \t\t\t<artifactId>spring-webmvc</artifactId>\r\n@@ -44,6 +48,11 @@\n \t\t\t<artifactId>spring-boot-starter</artifactId>\r\n \t\t</dependency>\r\n \r\n+\t\t<dependency>\r\n+\t\t\t<groupId>org.springframework.boot</groupId>\r\n+\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n+\t\t</dependency>\r\n+\r\n \t\t<dependency>\r\n     \t\t<groupId>io.springfox</groupId>\r\n     \t\t<artifactId>springfox-boot-starter</artifactId>\r\n@@ -59,6 +68,48 @@\n \t\t<dependency>\r\n \t\t\t<groupId>org.springframework.kafka</groupId>\r\n \t\t\t<artifactId>spring-kafka</artifactId>\r\n+\t\t\t<version>2.6.3</version>\r\n+\t\t</dependency>\r\n+\r\n+\t\t<dependency>\r\n+\t\t\t<groupId>org.apache.kafka</groupId>\r\n+\t\t\t<artifactId>kafka-clients</artifactId>\r\n+\t\t\t<version>2.6.0</version>\r\n+\t\t</dependency>\r\n+\r\n+\r\n+\t\t<dependency>\r\n+\t\t\t<groupId>io.rest-assured</groupId>\r\n+\t\t\t<artifactId>rest-assured</artifactId>\r\n+\t\t\t<version>4.2.0</version>\r\n+\t\t</dependency>\r\n+\r\n+\t\t<dependency>\r\n+\t\t\t<groupId>io.rest-assured</groupId>\r\n+\t\t\t<artifactId>xml-path</artifactId>\r\n+\t\t\t<version>4.2.0</version>\r\n+\t\t</dependency>\r\n+\r\n+\t\t<dependency>\r\n+\t\t\t<groupId>io.rest-assured</groupId>\r\n+\t\t\t<artifactId>json-path</artifactId>\r\n+\t\t\t<version>4.2.0</version>\r\n+\t\t</dependency>\r\n+\r\n+\r\n+\t\t<dependency>\r\n+\t\t\t<groupId>org.springframework.kafka</groupId>\r\n+\t\t\t<artifactId>spring-kafka-test</artifactId>\r\n+\t\t</dependency>\r\n+\r\n+\t\t<dependency>\r\n+\t\t\t<groupId>org.springframework.boot</groupId>\r\n+\t\t\t<artifactId>spring-boot-starter-actuator</artifactId>\r\n+\t\t</dependency>\r\n+\r\n+\t\t<dependency>\r\n+\t\t\t<groupId>org.springframework.security</groupId>\r\n+\t\t\t<artifactId>spring-security-test</artifactId>\r\n \t\t</dependency>\r\n \r\n \t\t<dependency>\r\n@@ -81,9 +132,39 @@\n \t\t<dependency>\r\n \t\t\t<groupId>org.springframework.boot</groupId>\r\n \t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n+\t\t</dependency>\r\n+\r\n+\t\t<dependency>\r\n+\t\t\t<groupId>javax.servlet</groupId>\r\n+\t\t\t<artifactId>javax.servlet-api</artifactId>\r\n+\t\t\t<version>3.1.0</version>\r\n \t\t\t<scope>test</scope>\r\n \t\t</dependency>\r\n \t</dependencies>\r\n+\r\n+\t<profiles>\r\n+        <profile>\r\n+            <id>development</id>\r\n+            <activation>\r\n+                <activeByDefault>true</activeByDefault>\r\n+            </activation>\r\n+            <build>\r\n+                <plugins>\r\n+                    <plugin>\r\n+                        <groupId>org.springframework.boot</groupId>\r\n+                        <artifactId>spring-boot-maven-plugin</artifactId>\r\n+                        <configuration>\r\n+                            <profiles>\r\n+                                <profile>development</profile>\r\n+                            </profiles>\r\n+                        </configuration>\r\n+                    </plugin>\r\n+                </plugins>\r\n+            </build>\r\n+        </profile>\r\n+    </profiles>\r\n+\r\n+\r\n \t<properties>\r\n \t\t<java.version>1.8</java.version>\r\n \t\t<start-class>com.demoApplication.Application</start-class>\r\n@@ -97,6 +178,18 @@\n                 <mainClass>com.demoApplication.Application</mainClass>\r\n             </configuration>\r\n         </plugin>\r\n+\r\n+\t\t<plugin>\r\n+\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n+\t\t\t<artifactId>maven-surefire-plugin</artifactId>\r\n+\t\t\t<version>2.22.0</version>\r\n+\t\t\t<configuration>\r\n+\t\t\t\t<includes>\r\n+\t\t\t\t\t<include>**/*IT*.java</include>\r\n+\t\t\t\t\t<include>**/*Test*.java</include>\r\n+\t\t\t\t</includes>\r\n+\t\t\t</configuration>\r\n+\t\t</plugin>\r\n     </plugins>\r\n </build>\r\n </project>\r"
  },
  {
    "sha": "207358b097a98bb8291f88f785411a218f24dcbd",
    "filename": "src/main/java/com/demoApplication/Application.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/suneel-kms123/springBoot/blob/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/java/com/demoApplication/Application.java",
    "raw_url": "https://github.com/suneel-kms123/springBoot/raw/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/java/com/demoApplication/Application.java",
    "contents_url": "https://api.github.com/repos/suneel-kms123/springBoot/contents/src/main/java/com/demoApplication/Application.java?ref=7b525361a357aef9137d49ab1fba5dd7deee5007",
    "patch": "@@ -2,11 +2,11 @@\n \n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n-import org.springframework.context.annotation.ComponentScan;\n+//import org.springframework.context.annotation.ComponentScan;\n import org.springframework.kafka.annotation.EnableKafka;\n \n @SpringBootApplication()\n-@ComponentScan(basePackages = \"com\")\n+//@ComponentScan(basePackageClasses = Application.class)\n @EnableKafka\n public class Application {\n "
  },
  {
    "sha": "7b75cfccf8ab53534ac230585b4fe1016bb624e3",
    "filename": "src/main/java/com/programspring/SpringBoot/SpringBootController.java",
    "status": "modified",
    "additions": 28,
    "deletions": 8,
    "changes": 36,
    "blob_url": "https://github.com/suneel-kms123/springBoot/blob/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/java/com/programspring/SpringBoot/SpringBootController.java",
    "raw_url": "https://github.com/suneel-kms123/springBoot/raw/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/java/com/programspring/SpringBoot/SpringBootController.java",
    "contents_url": "https://api.github.com/repos/suneel-kms123/springBoot/contents/src/main/java/com/programspring/SpringBoot/SpringBootController.java?ref=7b525361a357aef9137d49ab1fba5dd7deee5007",
    "patch": "@@ -1,15 +1,23 @@\n package com.programspring.SpringBoot;\n \n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n import com.kafka.ProducerExample;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.kafka.support.SendResult;\n+import org.springframework.util.concurrent.ListenableFuture;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.ResponseBody;\n import org.springframework.web.bind.annotation.RestController;\n-import org.springframework.web.servlet.ModelAndView;\n \n import io.swagger.annotations.ApiOperation;\n \n@@ -22,17 +30,29 @@\n \tprivate ProducerExample producerExampleService;\n \n \t@RequestMapping(value = \"/hello\", method = RequestMethod.GET, produces = \"application/json\")\n-\t@ApiOperation(value = \"hello message\")  \n-\tpublic ModelAndView handleBoot() {\n-\t\tString message = \"BOOT SPRING MVC\";  \n-        return new ModelAndView(\"bootpage\", \"message\", message); \n+\t@ApiOperation(value = \"hello message\")\n+\tpublic @ResponseBody ResponseEntity<String> handleBoot() {\n+\t\tLOG.debug(\"*********hello message***********\");\n+\t\tString message = \"BOOT SPRING MVC\";\n+\t\treturn ResponseEntity.ok().body(message);\n \t}\n \n \t@RequestMapping(value = \"/sendMessage\", method = RequestMethod.POST, produces = \"application/json\")\n-\t@ApiOperation(value = \"send message\")  \n-\tpublic void sendKafkaMessage(@RequestParam String message) {\n+\t@ApiOperation(value = \"send message\")\n+\tpublic ResponseEntity<String> sendKafkaMessage(@RequestParam String message) {\n \t\tLOG.debug(\"kafka send message\" + message);\n-\t\tproducerExampleService.sendMessage(message, \"example\", \"kafka-learn-sample\");\n+\t\tListenableFuture<SendResult<String, String>> future = producerExampleService.sendMessage(message, \"example\",\n+\t\t\t\t\"kafka-learn-sample\");\n+\n+\t\ttry {\n+\t\t\tSendResult<String, String> result = future.get(10, TimeUnit.SECONDS);\n+\t\t\tresult.getProducerRecord().topic().equals(\"kafka-learn-sample\");\n+\t\t\treturn ResponseEntity.ok().build();\n+\t\t} catch (InterruptedException | ExecutionException | TimeoutException e) {\n+\t\t\tLOG.error(\"Exception while getting result\");\n+\t\t}\t\t\n+\n+\t\treturn ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();\n \t}\n \t\t\n }"
  },
  {
    "sha": "d12446883ce0b65dae60de09ec2fc4cc902b96c6",
    "filename": "src/main/java/com/programspring/SpringBoot/SwaggerConfiguration.java",
    "status": "modified",
    "additions": 7,
    "deletions": 4,
    "changes": 11,
    "blob_url": "https://github.com/suneel-kms123/springBoot/blob/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/java/com/programspring/SpringBoot/SwaggerConfiguration.java",
    "raw_url": "https://github.com/suneel-kms123/springBoot/raw/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/java/com/programspring/SpringBoot/SwaggerConfiguration.java",
    "contents_url": "https://api.github.com/repos/suneel-kms123/springBoot/contents/src/main/java/com/programspring/SpringBoot/SwaggerConfiguration.java?ref=7b525361a357aef9137d49ab1fba5dd7deee5007",
    "patch": "@@ -1,5 +1,6 @@\n package com.programspring.SpringBoot;\n \n+import org.assertj.core.util.Sets;\n import org.springframework.boot.autoconfigure.EnableAutoConfiguration;\n import org.springframework.context.annotation.Bean;\n \n@@ -16,10 +17,12 @@\n     @Bean\n     public Docket api() { \n         return new Docket(DocumentationType.SWAGGER_2)  \n-          .select()                                  \n-          .apis(RequestHandlerSelectors.any())              \n-          .paths(PathSelectors.any())                          \n-          .build();                                           \n+            .host(\"http://localhost:8080/api/v1\") \n+            .produces(Sets.newHashSet())\n+            .select()                                 \n+            .apis(RequestHandlerSelectors.any())              \n+            .paths(PathSelectors.any())                          \n+            .build();                                           \n     }\n     \n }"
  },
  {
    "sha": "86fa644f3e69c483980cfc8c847b83cc88f0b27a",
    "filename": "src/main/java/com/programspring/SpringBoot/WebSecurityConfig.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/suneel-kms123/springBoot/blob/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/java/com/programspring/SpringBoot/WebSecurityConfig.java",
    "raw_url": "https://github.com/suneel-kms123/springBoot/raw/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/java/com/programspring/SpringBoot/WebSecurityConfig.java",
    "contents_url": "https://api.github.com/repos/suneel-kms123/springBoot/contents/src/main/java/com/programspring/SpringBoot/WebSecurityConfig.java?ref=7b525361a357aef9137d49ab1fba5dd7deee5007",
    "patch": "@@ -0,0 +1,24 @@\n+package com.programspring.SpringBoot;\n+\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.http.HttpMethod;\n+import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n+import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n+\n+@Configuration\n+public class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n+ \n+  @Override\n+  protected void configure(HttpSecurity http) throws Exception {\n+    http\n+      .csrf()\n+      .disable()\n+      .httpBasic()\n+      .and()\n+      .authorizeRequests(\n+        requests -> requests\n+          .mvcMatchers(HttpMethod.GET, \"/\").permitAll()\n+          .mvcMatchers(HttpMethod.POST, \"/\").hasRole(\"ADMIN\")\n+          .anyRequest().authenticated());\n+  }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b865e757db7ad3f6509208bc795568460023fa0a",
    "filename": "src/main/resources/application-default.yml",
    "status": "modified",
    "additions": 5,
    "deletions": 15,
    "changes": 20,
    "blob_url": "https://github.com/suneel-kms123/springBoot/blob/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/resources/application-default.yml",
    "raw_url": "https://github.com/suneel-kms123/springBoot/raw/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/resources/application-default.yml",
    "contents_url": "https://api.github.com/repos/suneel-kms123/springBoot/contents/src/main/resources/application-default.yml?ref=7b525361a357aef9137d49ab1fba5dd7deee5007",
    "patch": "@@ -1,15 +1,11 @@\n+server:\n+  port: 8088\n+\n spring:\n   main:\n     web-application-type: none\n   kafka:\n-    bootstrap-servers: ${kafka_bootstrap_servers:localhost:9092}\n-    properties:\n-      sasl:\n-        jaas:\n-          config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${kafka_username:'admin'} password=${kafka_password:'admin-secret'};\n-        mechanism: PLAIN\n-      security:\n-        protocol: SASL_PLAINTEXT\n+    bootstrap-servers: \"${spring.embedded.kafka.brokers:#{localhost:9092}}\"\n     consumer:\n       auto-offset-reset: earliest\n       group-id: example\n@@ -23,10 +19,4 @@ spring:\n       client-id: example\n       key-serializer: org.apache.kafka.common.serialization.StringSerializer\n       value-serializer: org.apache.kafka.common.serialization.StringSerializer\n-      retries: 2\n-    jaas:\n-      enabled: true\n-    listener:\n-      poll-timeout: 1800000\n-      concurrency: 1\n-      ack-mode: manual_immediate\n+      retries: 2\n\\ No newline at end of file"
  },
  {
    "sha": "4959efca0d236efb8f9733382a815250fd0f473b",
    "filename": "src/main/resources/application.yml",
    "status": "modified",
    "additions": 4,
    "deletions": 14,
    "changes": 18,
    "blob_url": "https://github.com/suneel-kms123/springBoot/blob/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/resources/application.yml",
    "raw_url": "https://github.com/suneel-kms123/springBoot/raw/7b525361a357aef9137d49ab1fba5dd7deee5007/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/suneel-kms123/springBoot/contents/src/main/resources/application.yml?ref=7b525361a357aef9137d49ab1fba5dd7deee5007",
    "patch": "@@ -1,15 +1,11 @@\n+server:\n+  port: 8088\n+\n spring:\n   main:\n     web-application-type: none\n   kafka:\n-    bootstrap-servers: ${kafka_bootstrap_servers:localhost:9092}\n-    properties:\n-      sasl:\n-        jaas:\n-          config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${kafka_username:'admin'} password=${kafka_password:'admin-secret'};\n-        mechanism: PLAIN\n-      security:\n-        protocol: SASL_PLAINTEXT\n+    bootstrap-servers: \"${spring.embedded.kafka.brokers:#{localhost:9092}}\"\n     consumer:\n       auto-offset-reset: earliest\n       group-id: example\n@@ -24,9 +20,3 @@ spring:\n       key-serializer: org.apache.kafka.common.serialization.StringSerializer\n       value-serializer: org.apache.kafka.common.serialization.StringSerializer\n       retries: 2\n-    jaas:\n-      enabled: true\n-    listener:\n-      poll-timeout: 1800000\n-      concurrency: 1\n-      ack-mode: manual_immediate"
  },
  {
    "sha": "87df54e59347842f6de73c1de37c0f19a6b99ff1",
    "filename": "src/test/java/com/demoApplication/SpringBootControllerIT.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/suneel-kms123/springBoot/blob/7b525361a357aef9137d49ab1fba5dd7deee5007/src/test/java/com/demoApplication/SpringBootControllerIT.java",
    "raw_url": "https://github.com/suneel-kms123/springBoot/raw/7b525361a357aef9137d49ab1fba5dd7deee5007/src/test/java/com/demoApplication/SpringBootControllerIT.java",
    "contents_url": "https://api.github.com/repos/suneel-kms123/springBoot/contents/src/test/java/com/demoApplication/SpringBootControllerIT.java?ref=7b525361a357aef9137d49ab1fba5dd7deee5007",
    "patch": "@@ -0,0 +1,50 @@\n+package com.demoApplication;\n+\n+import org.junit.Before;\n+\n+//import com.demoApplication.Application;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.http.MediaType;\n+import org.springframework.kafka.test.context.EmbeddedKafka;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.context.ActiveProfiles;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+\n+@DirtiesContext\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)\n+@ActiveProfiles(\"test\")\n+@EmbeddedKafka(topics = \"kafka-learn-sample\", partitions = 1, controlledShutdown = false)\n+public class SpringBootControllerIT {\n+\n+    @LocalServerPort\n+    private int port;\n+\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        RestAssured.baseURI = \"http://127.0.0.1:\" + port;\n+        RestAssured.port = port;\n+    }\n+\n+    @Test\n+    public void testSendMessageSwaggerApi() {\n+        RestAssured.given()\n+        .log()\n+        .all()\n+        .proxy(\"192.168.0.34\", Integer.valueOf(\"8080\"))\n+        //.queryParams(\"message\", \"firstParameterValue\")\n+        .contentType(ContentType.JSON)\n+        .when()\n+        .get(\"/hello\")\n+        .then().assertThat().statusCode(200);\n+    }\n+\n+}"
  },
  {
    "sha": "c784d4e21513c2b769a6c07e8cc75204592d3f07",
    "filename": "src/test/java/com/demoApplication/SpringBootControllerTest.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/suneel-kms123/springBoot/blob/7b525361a357aef9137d49ab1fba5dd7deee5007/src/test/java/com/demoApplication/SpringBootControllerTest.java",
    "raw_url": "https://github.com/suneel-kms123/springBoot/raw/7b525361a357aef9137d49ab1fba5dd7deee5007/src/test/java/com/demoApplication/SpringBootControllerTest.java",
    "contents_url": "https://api.github.com/repos/suneel-kms123/springBoot/contents/src/test/java/com/demoApplication/SpringBootControllerTest.java?ref=7b525361a357aef9137d49ab1fba5dd7deee5007",
    "patch": "@@ -0,0 +1,19 @@\n+package com.demoApplication;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+import io.restassured.RestAssured;\n+\n+@SpringBootTest\n+@RunWith(SpringRunner.class)\n+public class SpringBootControllerTest {\n+\n+    @Test\n+    public void testRestApi() {\n+        RestAssured.given().get(\"/hello\").then().assertThat().statusCode(200);\n+    }\n+    \n+}"
  },
  {
    "sha": "658a30441cd995c5c42064acb9bf78d84fd97781",
    "filename": "src/test/resources/application-test.yml",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/suneel-kms123/springBoot/blob/7b525361a357aef9137d49ab1fba5dd7deee5007/src/test/resources/application-test.yml",
    "raw_url": "https://github.com/suneel-kms123/springBoot/raw/7b525361a357aef9137d49ab1fba5dd7deee5007/src/test/resources/application-test.yml",
    "contents_url": "https://api.github.com/repos/suneel-kms123/springBoot/contents/src/test/resources/application-test.yml?ref=7b525361a357aef9137d49ab1fba5dd7deee5007",
    "patch": "@@ -0,0 +1,30 @@\n+server:\n+  port: 8080\n+\n+spring:\n+  main:\n+    web-application-type: none\n+  kafka:\n+    bootstrap-servers: \"${spring.embedded.kafka.brokers:#{localhost:9092}}\"\n+    consumer:\n+      auto-offset-reset: earliest\n+      group-id: example\n+      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer\n+      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer\n+      max-poll-records: 1\n+      fetch-max-wait: 36000\n+      enable-auto-commit: false\n+      client-id: example\n+    producer:\n+      client-id: example\n+      key-serializer: org.apache.kafka.common.serialization.StringSerializer\n+      value-serializer: org.apache.kafka.common.serialization.StringSerializer\n+      retries: 2\n+\n+local:\n+  server:\n+    port: 8088\n+\n+http:\n+  proxyHost: localhost\n+  proxyPort: 8080\n\\ No newline at end of file"
  },
  {
    "sha": "f2976cdd1219e1f6b973a218c1660d3a95d0fea4",
    "filename": "target/classes/com/programspring/SpringBoot/SpringBootController.java",
    "status": "removed",
    "additions": 0,
    "deletions": 15,
    "changes": 15,
    "blob_url": "https://github.com/suneel-kms123/springBoot/blob/7807a4105b2ea6d5e285f351e2eff8b777d38bb3/target/classes/com/programspring/SpringBoot/SpringBootController.java",
    "raw_url": "https://github.com/suneel-kms123/springBoot/raw/7807a4105b2ea6d5e285f351e2eff8b777d38bb3/target/classes/com/programspring/SpringBoot/SpringBootController.java",
    "contents_url": "https://api.github.com/repos/suneel-kms123/springBoot/contents/target/classes/com/programspring/SpringBoot/SpringBootController.java?ref=7807a4105b2ea6d5e285f351e2eff8b777d38bb3",
    "patch": "@@ -1,15 +0,0 @@\n-package com.programspring.SpringBoot;\r\n-\r\n-import org.springframework.web.servlet.ModelAndView;\r\n-\r\n-@Controller\r\n-public class SpringBootController {\r\n-\r\n-\t@RequestMapping(\"/hello\")  \r\n-\tpublic ModelAndView handleBoot() {\r\n-\t\tString message = \"BOOT SPRING MVC\";  \r\n-        return new ModelAndView(\"bootpage\", \"message\", message); \r\n-\t}\r\n-\t\r\n-\t\r\n-}\r"
  }
]
