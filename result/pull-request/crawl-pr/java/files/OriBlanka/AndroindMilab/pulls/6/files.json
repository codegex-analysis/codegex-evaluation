[
  {
    "sha": "aa724b77071afcbd9bb398053e05adaf7ac9405a",
    "filename": "FinalProject/client/.gitignore",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.gitignore",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.gitignore",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/.gitignore?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,15 @@\n+*.iml\n+.gradle\n+/local.properties\n+/.idea/caches\n+/.idea/libraries\n+/.idea/modules.xml\n+/.idea/workspace.xml\n+/.idea/navEditor.xml\n+/.idea/assetWizardSettings.xml\n+.DS_Store\n+/build\n+/captures\n+.externalNativeBuild\n+.cxx\n+local.properties"
  },
  {
    "sha": "26d33521af10bcc7fd8cea344038eaaeb78d0ef5",
    "filename": "FinalProject/client/.idea/.gitignore",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/.gitignore",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/.gitignore",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/.idea/.gitignore?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,3 @@\n+# Default ignored files\n+/shelf/\n+/workspace.xml"
  },
  {
    "sha": "5ab92e60c80c7fe918b5726a4c664d77092aa3f1",
    "filename": "FinalProject/client/.idea/.name",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/.name",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/.name",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/.idea/.name?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1 @@\n+RunBuddy\n\\ No newline at end of file"
  },
  {
    "sha": "61a9130cd9669c3843e6445dfe1fee2d493869bc",
    "filename": "FinalProject/client/.idea/compiler.xml",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/compiler.xml",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/.idea/compiler.xml?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,6 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"CompilerConfiguration\">\n+    <bytecodeTargetLevel target=\"1.8\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "23a89bbb6ca829a47211d20c8b11960088ea4950",
    "filename": "FinalProject/client/.idea/gradle.xml",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/gradle.xml",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/gradle.xml",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/.idea/gradle.xml?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n+  <component name=\"GradleSettings\">\n+    <option name=\"linkedExternalProjectsSettings\">\n+      <GradleProjectSettings>\n+        <option name=\"testRunner\" value=\"PLATFORM\" />\n+        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n+        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n+        <option name=\"gradleJvm\" value=\"1.8\" />\n+        <option name=\"modules\">\n+          <set>\n+            <option value=\"$PROJECT_DIR$\" />\n+            <option value=\"$PROJECT_DIR$/app\" />\n+          </set>\n+        </option>\n+        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n+        <option name=\"useQualifiedModuleNames\" value=\"true\" />\n+      </GradleProjectSettings>\n+    </option>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "a5f05cd8c87d4a72b0242026524cb32639fca7f0",
    "filename": "FinalProject/client/.idea/jarRepositories.xml",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/jarRepositories.xml",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/jarRepositories.xml",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/.idea/jarRepositories.xml?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"RemoteRepositoriesConfiguration\">\n+    <remote-repository>\n+      <option name=\"id\" value=\"central\" />\n+      <option name=\"name\" value=\"Maven Central repository\" />\n+      <option name=\"url\" value=\"https://repo1.maven.org/maven2\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"jboss.community\" />\n+      <option name=\"name\" value=\"JBoss Community repository\" />\n+      <option name=\"url\" value=\"https://repository.jboss.org/nexus/content/repositories/public/\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"BintrayJCenter\" />\n+      <option name=\"name\" value=\"BintrayJCenter\" />\n+      <option name=\"url\" value=\"https://jcenter.bintray.com/\" />\n+    </remote-repository>\n+    <remote-repository>\n+      <option name=\"id\" value=\"Google\" />\n+      <option name=\"name\" value=\"Google\" />\n+      <option name=\"url\" value=\"https://dl.google.com/dl/android/maven2/\" />\n+    </remote-repository>\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "d5d35ec44f10991b508f6454a85204a276726364",
    "filename": "FinalProject/client/.idea/misc.xml",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/misc.xml",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/misc.xml",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/.idea/misc.xml?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,9 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n+    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n+  </component>\n+  <component name=\"ProjectType\">\n+    <option name=\"id\" value=\"Android\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "64713b81f3557f6879e5fe4965dcc1348e60fb9c",
    "filename": "FinalProject/client/.idea/vcs.xml",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/vcs.xml",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/.idea/vcs.xml",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/.idea/vcs.xml?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,7 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project version=\"4\">\n+  <component name=\"VcsDirectoryMappings\">\n+    <mapping directory=\"$PROJECT_DIR$/../..\" vcs=\"Git\" />\n+    <mapping directory=\"$PROJECT_DIR$/..\" vcs=\"Git\" />\n+  </component>\n+</project>\n\\ No newline at end of file"
  },
  {
    "sha": "42afabfd2abebf31384ca7797186a27a4b7dbee8",
    "filename": "FinalProject/client/app/.gitignore",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/.gitignore",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/.gitignore",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/.gitignore?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1 @@\n+/build\n\\ No newline at end of file"
  },
  {
    "sha": "5e77ea6b15b528c60e31d494c1b05e65d1c9267a",
    "filename": "FinalProject/client/app/build.gradle",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/build.gradle",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/build.gradle",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/build.gradle?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,54 @@\n+plugins {\n+    id 'com.android.application'\n+    id 'com.google.gms.google-services'\n+}\n+\n+android {\n+    compileSdkVersion 30\n+    buildToolsVersion \"30.0.2\"\n+\n+    defaultConfig {\n+        applicationId \"com.runbuddy\"\n+        minSdkVersion 26\n+        targetSdkVersion 30\n+        versionCode 1\n+        versionName \"1.0\"\n+\n+        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n+    }\n+\n+    buildTypes {\n+        release {\n+            minifyEnabled false\n+            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n+        }\n+    }\n+    compileOptions {\n+        sourceCompatibility JavaVersion.VERSION_1_8\n+        targetCompatibility JavaVersion.VERSION_1_8\n+    }\n+}\n+\n+dependencies {\n+\n+    implementation 'androidx.appcompat:appcompat:1.2.0'\n+    implementation 'com.google.android.material:material:1.1.0'\n+    implementation 'com.google.android.material:material:1.2.1'\n+    implementation 'com.google.android.material:material:1.3.0'\n+    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\n+    implementation 'com.google.android.gms:play-services-maps:17.0.0'\n+    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\n+    implementation 'androidx.wear:wear:1.1.0'\n+    testImplementation 'junit:junit:4.+'\n+    implementation platform('com.google.firebase:firebase-bom:26.3.0')\n+    implementation 'com.google.firebase:firebase-analytics'\n+    implementation 'com.google.firebase:firebase-messaging:20.1.0'\n+    implementation 'com.android.volley:volley:1.1.1'\n+    implementation 'com.google.firebase:firebase-inappmessaging-display:19.0.3'\n+    implementation 'com.google.android.gms:play-services-location:17.0.0'\n+    implementation 'androidx.recyclerview:recyclerview:1.1.0'\n+    implementation 'androidx.cardview:cardview:1.0.0'\n+    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\n+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\n+    compileOnly 'com.google.android.wearable:wearable:2.8.1'\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "a84f7303eaf0fc9e6823b2059c0e866aba35275d",
    "filename": "FinalProject/client/app/google-services.json",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/google-services.json",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/google-services.json",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/google-services.json?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,39 @@\n+{\n+  \"project_info\": {\n+    \"project_number\": \"449189598907\",\n+    \"project_id\": \"runbuddy-d9c60\",\n+    \"storage_bucket\": \"runbuddy-d9c60.appspot.com\"\n+  },\n+  \"client\": [\n+    {\n+      \"client_info\": {\n+        \"mobilesdk_app_id\": \"1:449189598907:android:714d1b3a1233ec5e277b9e\",\n+        \"android_client_info\": {\n+          \"package_name\": \"com.runbuddy\"\n+        }\n+      },\n+      \"oauth_client\": [\n+        {\n+          \"client_id\": \"449189598907-ns90vhclaj97fnqeu2ic4lkdmng8caoa.apps.googleusercontent.com\",\n+          \"client_type\": 3\n+        }\n+      ],\n+      \"api_key\": [\n+        {\n+          \"current_key\": \"AIzaSyBxUIw0hcKbaUzd_FFYsKMklwj44B0ko6c\"\n+        }\n+      ],\n+      \"services\": {\n+        \"appinvite_service\": {\n+          \"other_platform_oauth_client\": [\n+            {\n+              \"client_id\": \"449189598907-ns90vhclaj97fnqeu2ic4lkdmng8caoa.apps.googleusercontent.com\",\n+              \"client_type\": 3\n+            }\n+          ]\n+        }\n+      }\n+    }\n+  ],\n+  \"configuration_version\": \"1\"\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "481bb434814107eb79d7a30b676d344b0df2f8ce",
    "filename": "FinalProject/client/app/proguard-rules.pro",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/proguard-rules.pro",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/proguard-rules.pro",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/proguard-rules.pro?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,21 @@\n+# Add project specific ProGuard rules here.\n+# You can control the set of applied configuration files using the\n+# proguardFiles setting in build.gradle.\n+#\n+# For more details, see\n+#   http://developer.android.com/guide/developing/tools/proguard.html\n+\n+# If your project uses WebView with JS, uncomment the following\n+# and specify the fully qualified class name to the JavaScript interface\n+# class:\n+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n+#   public *;\n+#}\n+\n+# Uncomment this to preserve the line number information for\n+# debugging stack traces.\n+#-keepattributes SourceFile,LineNumberTable\n+\n+# If you keep the line number information, uncomment this to\n+# hide the original source file name.\n+#-renamesourcefileattribute SourceFile\n\\ No newline at end of file"
  },
  {
    "sha": "4ffc629e6d7829d4163a096e07fa5a0df49236cd",
    "filename": "FinalProject/client/app/src/androidTest/java/com/runbuddy/ExampleInstrumentedTest.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/androidTest/java/com/runbuddy/ExampleInstrumentedTest.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/androidTest/java/com/runbuddy/ExampleInstrumentedTest.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/androidTest/java/com/runbuddy/ExampleInstrumentedTest.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,26 @@\n+package com.runbuddy;\n+\n+import android.content.Context;\n+\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * Instrumented test, which will execute on an Android device.\n+ *\n+ * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\n+ */\n+@RunWith(AndroidJUnit4.class)\n+public class ExampleInstrumentedTest {\n+    @Test\n+    public void useAppContext() {\n+        // Context of the app under test.\n+        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();\n+        assertEquals(\"com.runbuddy\", appContext.getPackageName());\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "061c98405cc4881d3996023c3812c8f69b3dbbc4",
    "filename": "FinalProject/client/app/src/debug/res/values/google_maps_api.xml",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/debug/res/values/google_maps_api.xml",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/debug/res/values/google_maps_api.xml",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/debug/res/values/google_maps_api.xml?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,24 @@\n+<resources>\n+    <!--\n+    TODO: Before you run your application, you need a Google Maps API key.\n+\n+    To get one, follow this link, follow the directions and press \"Create\" at the end:\n+\n+    https://console.developers.google.com/flows/enableapi?apiid=maps_android_backend&keyType=CLIENT_SIDE_ANDROID&r=A1:A1:A5:2E:E4:05:AE:2F:DC:8E:C0:3B:01:32:E0:85:B4:A5:BC:89%3Bcom.runbuddy\n+\n+    You can also add your credentials to an existing key, using these values:\n+\n+    Package name:\n+    com.runbuddy\n+\n+    SHA-1 certificate fingerprint:\n+    A1:A1:A5:2E:E4:05:AE:2F:DC:8E:C0:3B:01:32:E0:85:B4:A5:BC:89\n+\n+    Alternatively, follow the directions here:\n+    https://developers.google.com/maps/documentation/android/start#get-key\n+\n+    Once you have your key (it starts with \"AIza\"), replace the \"google_maps_key\"\n+    string in this file.\n+    -->\n+    <string name=\"google_maps_key\" templateMergeStrategy=\"preserve\" translatable=\"false\">AIzaSyAx1qwIc--SwBe-QHSGD3jsUEuXK7wjj_A</string>\n+</resources>\n\\ No newline at end of file"
  },
  {
    "sha": "91e8f07a3828236713cb9b64c0009d96248bb81c",
    "filename": "FinalProject/client/app/src/main/AndroidManifest.xml",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/AndroidManifest.xml?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,51 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"com.runbuddy\">\n+\n+    <!--\n+         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use\n+         Google Maps Android API v2, but you must specify either coarse or fine\n+         location permissions for the \"MyLocation\" functionality.\n+    -->\n+    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n+    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\n+\n+    <application\n+        android:allowBackup=\"true\"\n+        android:icon=\"@mipmap/ic_launcher\"\n+        android:label=\"@string/app_name\"\n+        android:roundIcon=\"@mipmap/ic_launcher_round\"\n+        android:supportsRtl=\"true\"\n+        android:theme=\"@style/Theme.RunBuddy\">\n+\n+        <!--\n+             The API key for Google Maps-based APIs is defined as a string resource.\n+             (See the file \"res/values/google_maps_api.xml\").\n+             Note that the API key is linked to the encryption key used to sign the APK.\n+             You need a different API key for each encryption key, including the release key that is used to\n+             sign the APK for publishing.\n+             You can define the keys for the debug and release targets in src/debug/ and src/release/.\n+        -->\n+        <meta-data\n+            android:name=\"com.google.android.geo.API_KEY\"\n+            android:value=\"@string/google_maps_key\" />\n+\n+        <activity android:name=\".HomePage\" />\n+\n+        <service\n+            android:name=\".MyFirebaseMessagingService\"\n+            android:enabled=\"true\"\n+            android:exported=\"true\" />\n+\n+        <activity android:name=\".SignUp\" />\n+        <activity android:name=\".LoginActivity\" />\n+        <activity android:name=\".MainActivity\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.MAIN\" />\n+\n+                <category android:name=\"android.intent.category.LAUNCHER\" />\n+            </intent-filter>\n+        </activity>\n+    </application>\n+\n+</manifest>\n\\ No newline at end of file"
  },
  {
    "sha": "4ca972ce6820ebae2f5d7433ebe42d081858fdd4",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/ActivityAdp.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/ActivityAdp.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/ActivityAdp.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/ActivityAdp.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,49 @@\n+package com.runbuddy;\n+\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.TextView;\n+\n+import androidx.annotation.NonNull;\n+import androidx.recyclerview.widget.RecyclerView;\n+\n+import java.util.ArrayList;\n+\n+public class ActivityAdp extends RecyclerView.Adapter<ActivityAdp.ViewHolder> {\n+\n+    ArrayList<String> arrayListActivity;\n+\n+    public ActivityAdp(ArrayList<String> arrayListActivity){\n+        this.arrayListActivity = arrayListActivity;\n+    }\n+\n+    @NonNull\n+    @Override\n+    public ActivityAdp.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n+        View view = LayoutInflater.from(parent.getContext()).\n+                inflate(R.layout.list_row_activity, parent, false);\n+        return new ActivityAdp.ViewHolder(view);\n+    }\n+\n+    @Override\n+    public void onBindViewHolder(@NonNull ActivityAdp.ViewHolder holder, int position) {\n+        holder.tvName.setText(arrayListActivity.get(position));\n+    }\n+\n+    @Override\n+    public int getItemCount() {\n+        return arrayListActivity.size();\n+    }\n+\n+    public class ViewHolder extends RecyclerView.ViewHolder {\n+\n+        TextView tvName;\n+\n+        public ViewHolder(@NonNull View itemView) {\n+            super(itemView);\n+            tvName = itemView.findViewById(R.id.tvName);\n+        }\n+    }\n+}\n+"
  },
  {
    "sha": "b17f183bb23c3363e00b74084ad123a8eb93cc37",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/GroupAdp.java",
    "status": "added",
    "additions": 97,
    "deletions": 0,
    "changes": 97,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/GroupAdp.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/GroupAdp.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/GroupAdp.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,97 @@\n+package com.runbuddy;\n+\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.TextView;\n+\n+import androidx.annotation.NonNull;\n+import androidx.fragment.app.Fragment;\n+import androidx.recyclerview.widget.LinearLayoutManager;\n+import androidx.recyclerview.widget.RecyclerView;\n+\n+import com.android.volley.Request;\n+import com.android.volley.Response;\n+import com.android.volley.VolleyError;\n+import com.android.volley.toolbox.JsonArrayRequest;\n+\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+\n+import java.util.ArrayList;\n+\n+public class GroupAdp extends RecyclerView.Adapter<GroupAdp.ViewHolder> {\n+\n+    private Fragment activity;\n+    ArrayList<String> arrayListGroup;\n+\n+    private static final String FRAGMENT_TAG = \"showActivity-GroupAdp\";\n+    private static final String SERVER_ADDRESS = \"http://10.0.0.25:8080/\";\n+\n+    public GroupAdp(Fragment activity, ArrayList<String> arrayListGroup) {\n+        this.activity = activity;\n+        this.arrayListGroup = arrayListGroup;\n+    }\n+\n+    @NonNull\n+    @Override\n+    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n+        View view = LayoutInflater.from(parent.getContext())\n+                .inflate(R.layout.list_row_group, parent, false);\n+        return new GroupAdp.ViewHolder(view);\n+    }\n+\n+    @Override\n+    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\n+        holder.tvName.setText(arrayListGroup.get(position));\n+\n+        ArrayList<String> arrayListActivity = new ArrayList<>();\n+        JsonArrayRequest req = new JsonArrayRequest(Request.Method.GET,SERVER_ADDRESS + \"/all_activities\",\n+                null, new Response.Listener<JSONArray>() {\n+\n+            @Override\n+            public void onResponse(JSONArray response){\n+                Log.d(FRAGMENT_TAG, response.toString());\n+                arrayListGroup = new ArrayList<>();\n+                try{\n+                    for (int i = 0; i < response.length(); i++) {\n+                        arrayListGroup.add(response.getJSONObject(i).getString(\"distance\"));\n+                        arrayListGroup.add(response.getJSONObject(i).getString(\"time:\"));\n+                    }\n+                } catch (JSONException e){\n+                    e.printStackTrace();\n+                    Log.d(FRAGMENT_TAG, \"error - \" + e);\n+                }\n+            }\n+        }, new Response.ErrorListener() {\n+            @Override\n+            public void onErrorResponse(VolleyError error) {\n+                Log.d(FRAGMENT_TAG, \"Encountered error - \" + error);\n+            }\n+        });\n+\n+        ActivityAdp adapterActivity = new ActivityAdp(arrayListActivity);\n+        LinearLayoutManager LayoutManagerActivity = new LinearLayoutManager(activity.getContext());\n+        holder.rvActivity.setLayoutManager(LayoutManagerActivity);\n+        holder.rvActivity.setAdapter(adapterActivity);\n+    }\n+\n+    @Override\n+    public int getItemCount() {\n+        return arrayListGroup.size();\n+    }\n+\n+    public class ViewHolder extends RecyclerView.ViewHolder {\n+\n+        TextView tvName;\n+        RecyclerView rvActivity;\n+\n+        public ViewHolder(@NonNull View itemView) {\n+            super(itemView);\n+\n+            tvName = itemView.findViewById(R.id.tvName);\n+            rvActivity = itemView.findViewById(R.id.rvActivity);\n+        }\n+    }\n+}"
  },
  {
    "sha": "9a701ebfc752d00752446e53ea60ac9d36a21b20",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/HomePage.java",
    "status": "added",
    "additions": 118,
    "deletions": 0,
    "changes": 118,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/HomePage.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/HomePage.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/HomePage.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,118 @@\n+package com.runbuddy;\n+\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AppCompatActivity;\n+import androidx.fragment.app.Fragment;\n+import androidx.fragment.app.FragmentManager;\n+import androidx.fragment.app.FragmentPagerAdapter;\n+import androidx.viewpager.widget.ViewPager;\n+\n+import android.os.Bundle;\n+\n+import com.google.android.gms.maps.MapFragment;\n+import com.google.android.material.tabs.TabLayout;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class HomePage extends AppCompatActivity {\n+\n+    //Initialize variable\n+    TabLayout tabLayout;\n+    ViewPager viewPager;\n+    MapsFragment mapfragment;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_home_page);\n+\n+        //Assign variable\n+        tabLayout = findViewById(R.id.tab_layout);\n+        viewPager = findViewById(R.id.view_paper);\n+\n+        //Initialize array list\n+        ArrayList<String> arrayList = new ArrayList<>();\n+\n+        //Add title in array list\n+        arrayList.add(\"Radius Settings\");\n+        arrayList.add(\"Start Activities\");\n+        arrayList.add(\"Show Activities\");\n+\n+        //Prepare view pager\n+        prepareViewPager(viewPager, arrayList);\n+\n+        //Setup with view pager\n+        tabLayout.setupWithViewPager(viewPager);\n+    }\n+\n+    private void prepareViewPager(ViewPager viewPager, ArrayList<String> arrayList) {\n+        //Initialize main adapter\n+        MainAdapter adapter = new MainAdapter(getSupportFragmentManager());\n+\n+        //Initialize main fragment\n+        mapfragment = new MapsFragment();\n+        Bundle bundle = new Bundle();\n+        //Put string\n+        bundle.putString(\"title\", \"map\");\n+        //Set argument\n+        mapfragment.setArguments(bundle);\n+        adapter.addFragment(mapfragment, arrayList.get(0));\n+\n+        StartActivityFragment freg = new StartActivityFragment();\n+        bundle.putString(\"title\", \"start\");\n+        //Set argument\n+        freg.setArguments(bundle);\n+        adapter.addFragment(freg, arrayList.get(1));\n+\n+\n+        ShowActivitiesFragment freg1 = new ShowActivitiesFragment();\n+        bundle.putString(\"title\", \"start1\");\n+        //Set argument\n+        freg1.setArguments(bundle);\n+        adapter.addFragment(freg1, arrayList.get(2));\n+\n+        //Set adapter\n+        viewPager.setAdapter(adapter);\n+    }\n+\n+    private class MainAdapter extends FragmentPagerAdapter {\n+        //Initialize array list\n+        ArrayList<String> arrayList = new ArrayList<>();\n+        List<Fragment> fragmentList = new ArrayList<>();\n+\n+        //Create constructor\n+        public void addFragment(Fragment fragment, String title) {\n+            //Add title\n+            arrayList.add(title);\n+            //Add fragment\n+            fragmentList.add(fragment);\n+        }\n+\n+        public MainAdapter(@NonNull FragmentManager fm) {\n+            super(fm);\n+        }\n+\n+        @NonNull\n+        @Override\n+        public Fragment getItem(int position) {\n+            //Return fragment position\n+            return fragmentList.get(position);\n+        }\n+\n+        @Override\n+        public int getCount() {\n+            //Return fragment list size\n+            return fragmentList.size();\n+        }\n+\n+        @Nullable\n+        @Override\n+        public CharSequence getPageTitle(int position) {\n+            //Return array list position\n+            return arrayList.get(position);\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "efec6683013904f15720b0827885a165d4101626",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/LatLngInterpolator.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/LatLngInterpolator.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/LatLngInterpolator.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/LatLngInterpolator.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,56 @@\n+package com.runbuddy;\n+\n+import com.google.android.gms.maps.model.LatLng;\n+\n+import static java.lang.Math.asin;\n+import static java.lang.Math.atan2;\n+import static java.lang.Math.cos;\n+import static java.lang.Math.pow;\n+import static java.lang.Math.sin;\n+import static java.lang.Math.sqrt;\n+import static java.lang.Math.toDegrees;\n+import static java.lang.Math.toRadians;\n+\n+public interface LatLngInterpolator {\n+    LatLng interpolate(float fraction, LatLng a, LatLng b);\n+\n+    class Spherical implements LatLngInterpolator {\n+\n+        @Override\n+        public LatLng interpolate(float fraction, LatLng from, LatLng to) {\n+            double fromLat = toRadians(from.latitude);\n+            double fromLng = toRadians(from.longitude);\n+            double toLat = toRadians(to.latitude);\n+            double toLng = toRadians(to.longitude);\n+            double cosFromLat = cos(fromLat);\n+            double cosToLat = cos(toLat);\n+\n+            // Computes Spherical interpolation coefficients.\n+            double angle = computeAngleBetween(fromLat, fromLng, toLat, toLng);\n+            double sinAngle = sin(angle);\n+            if (sinAngle < 1E-6) {\n+                return from;\n+            }\n+            double a = sin((1 - fraction) * angle) / sinAngle;\n+            double b = sin(fraction * angle) / sinAngle;\n+\n+            // Converts from polar to vector and interpolate.\n+            double x = a * cosFromLat * cos(fromLng) + b * cosToLat * cos(toLng);\n+            double y = a * cosFromLat * sin(fromLng) + b * cosToLat * sin(toLng);\n+            double z = a * sin(fromLat) + b * sin(toLat);\n+\n+            // Converts interpolated vector back to polar.\n+            double lat = atan2(z, sqrt(x * x + y * y));\n+            double lng = atan2(y, x);\n+            return new LatLng(toDegrees(lat), toDegrees(lng));\n+        }\n+\n+        private double computeAngleBetween(double fromLat, double fromLng, double toLat, double toLng) {\n+            // Haversine's formula\n+            double dLat = fromLat - toLat;\n+            double dLng = fromLng - toLng;\n+            return 2 * asin(sqrt(pow(sin(dLat / 2), 2) +\n+                    cos(fromLat) * cos(toLat) * pow(sin(dLng / 2), 2)));\n+        }\n+    }\n+}"
  },
  {
    "sha": "0a3fef29a56b2d27ebfe1f4eb8cba08261d42f54",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/LoginActivity.java",
    "status": "added",
    "additions": 135,
    "deletions": 0,
    "changes": 135,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/LoginActivity.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/LoginActivity.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/LoginActivity.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,135 @@\n+package com.runbuddy;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.View;\n+import android.widget.Button;\n+import android.widget.Toast;\n+\n+import com.android.volley.Request;\n+import com.android.volley.RequestQueue;\n+import com.android.volley.Response;\n+import com.android.volley.VolleyError;\n+import com.android.volley.toolbox.JsonObjectRequest;\n+import com.google.android.gms.tasks.OnSuccessListener;\n+import com.google.android.material.textfield.TextInputEditText;\n+import com.google.firebase.iid.FirebaseInstanceId;\n+import com.google.firebase.iid.InstanceIdResult;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+public class LoginActivity extends AppCompatActivity {\n+\n+    String token = \"\";\n+    public static TextInputEditText userName;\n+    TextInputEditText password;\n+    Button next;\n+    Button cancel;\n+    private RequestQueue _queue;\n+    private static final String ACTIVITY_TAG = \"login\";\n+    private static final String SERVER_ADDRESS = \"http://10.0.0.25:8080/\";\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_login);\n+\n+        userName = (TextInputEditText)findViewById(R.id.userNameEditText);\n+        password = (TextInputEditText)findViewById(R.id.repasswordEditText);\n+        next = (Button)findViewById(R.id.nextButton);\n+        next.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                LogUserIn(userName.getText().toString(), password.getText().toString());\n+            }\n+        });\n+\n+        cancel = (Button)findViewById(R.id.cancelButton);\n+        cancel.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                Intent cancelIntent = new Intent(LoginActivity.this, MainActivity.class);\n+                startActivity(cancelIntent);\n+            }\n+        });\n+    }\n+\n+    /**********************************************************************\n+        This method checks the users login credentials and logs him\n+        in if he is in the system\n+    ***********************************************************************/\n+    private void LogUserIn(String email, String password){\n+        JSONObject requestObject = new JSONObject();\n+\n+        try {\n+            requestObject.put(\"email\", email);\n+            requestObject.put(\"password\", password);\n+        }\n+        catch (JSONException e) {\n+            resetInputs();\n+            Log.e(ACTIVITY_TAG, \"error in verifying user\");\n+            Toast.makeText(LoginActivity.this, \"Please re-enter user and pass\", Toast.LENGTH_SHORT).show();\n+        }\n+\n+        JsonObjectRequest req = new JsonObjectRequest(Request.Method.POST, SERVER_ADDRESS + email + \"/check\",\n+                requestObject, new Response.Listener<JSONObject>() {\n+            @Override\n+            public void onResponse(JSONObject response) {\n+                Log.d(ACTIVITY_TAG, response.toString());\n+                String match = response.toString();\n+\n+                if (match.equals(\"true\")){\n+                    Log.d(ACTIVITY_TAG, \"user is found\");\n+                    Toast.makeText(LoginActivity.this, \"Welcome back, \" + userName, Toast.LENGTH_SHORT).show();\n+                    //TODO: change the intent name\n+                    Intent nextIntent = new Intent(LoginActivity.this, HomePage.class);\n+                    nextIntent.putExtra(\"username\",userName.getText().toString());\n+                    Log.i(ACTIVITY_TAG,\"check \"+ userName.getText().toString());\n+                    resetInputs();\n+                    sendToServer();\n+                    startActivity(nextIntent);\n+                } else{\n+                    Log.i(ACTIVITY_TAG, \"user isn't found\");\n+                    Toast.makeText(LoginActivity.this, \"Wrong username / password\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        },\n+                new Response.ErrorListener() {\n+                    @Override\n+                    public void onErrorResponse(VolleyError error) {\n+                        Log.e(ACTIVITY_TAG, \"Failed to Log in - \" + error);\n+                    }\n+                });\n+        _queue.add(req);\n+    }\n+\n+\n+    /**********************************************************************\n+        This method resets the input to their original hints\n+    ***********************************************************************/\n+    private void resetInputs(){\n+        Log.i(ACTIVITY_TAG, \"resetting inputs\");\n+        userName.setText(null);\n+        userName.setHint(\"Username\");\n+        password.setText(null);\n+        password.setHint(\"Password\");\n+    }\n+\n+\n+    /**********************************************************************\n+        Send a stock's name to the server\n+    ***********************************************************************/\n+    private void sendToServer(){\n+        FirebaseInstanceId.getInstance().getInstanceId().addOnSuccessListener(this,  new OnSuccessListener<InstanceIdResult>() {\n+            @Override\n+            public void onSuccess(InstanceIdResult instanceIdResult) {\n+                token = instanceIdResult.getToken();\n+                Log.d(ACTIVITY_TAG,\"user token \" + token);\n+            }\n+        });\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f883caf7982492988386aff98f67972e661a47d8",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/MainActivity.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/MainActivity.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/MainActivity.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/MainActivity.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,38 @@\n+package com.runbuddy;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.View;\n+import android.widget.Button;\n+\n+public class MainActivity extends AppCompatActivity {\n+\n+    Button login;\n+    Button signup;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_main);\n+\n+        login = (Button) findViewById(R.id.signInButton);\n+        login.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                Intent loginIntent = new Intent(v.getContext(), LoginActivity.class);\n+                startActivity(loginIntent);\n+            }\n+        });\n+\n+        signup = (Button) findViewById(R.id.signUpButton);\n+        signup.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                Intent signinIntent = new Intent(v.getContext(), SignUp.class);\n+                startActivity(signinIntent);\n+            }\n+        });\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "77ea4e1d47a882462117c582dde5d8beb8cc71cd",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/MapsFragment.java",
    "status": "added",
    "additions": 181,
    "deletions": 0,
    "changes": 181,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/MapsFragment.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/MapsFragment.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/MapsFragment.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,181 @@\n+package com.runbuddy;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.content.ContextCompat;\n+import androidx.fragment.app.Fragment;\n+\n+import android.Manifest;\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.content.pm.PackageManager;\n+import android.graphics.Color;\n+import android.location.Criteria;\n+import android.location.Location;\n+import android.location.LocationManager;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.Toast;\n+\n+import com.android.volley.Request;\n+import com.android.volley.RequestQueue;\n+import com.android.volley.Response;\n+import com.android.volley.VolleyError;\n+import com.android.volley.toolbox.JsonObjectRequest;\n+import com.google.android.gms.location.FusedLocationProviderClient;\n+import com.google.android.gms.location.LocationServices;\n+import com.google.android.gms.maps.CameraUpdateFactory;\n+import com.google.android.gms.maps.GoogleMap;\n+import com.google.android.gms.maps.OnMapReadyCallback;\n+import com.google.android.gms.maps.SupportMapFragment;\n+import com.google.android.gms.maps.model.CameraPosition;\n+import com.google.android.gms.maps.model.CircleOptions;\n+import com.google.android.gms.maps.model.LatLng;\n+import com.google.android.gms.maps.model.MarkerOptions;\n+import com.google.android.material.textfield.TextInputEditText;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+public class MapsFragment extends Fragment {\n+\n+    GoogleMap map;\n+    LatLng currentLocation;\n+    FusedLocationProviderClient fusedLocationProviderClient;\n+    Button submit;\n+    TextInputEditText radiusText;\n+    int radius = 100;\n+\n+    private RequestQueue _queue;\n+\n+    private static final String ACTIVITY_TAG = \"mapFragment\";\n+    private static final String SERVER_ADDRESS = \"http://10.0.0.25:8080/\";\n+    public static final int MY_PERMISSIONS_REQUEST_LOCATION = 100;\n+\n+    private OnMapReadyCallback callback = new OnMapReadyCallback() {\n+\n+        /**\n+         * Manipulates the map once available.\n+         * This callback is triggered when the map is ready to be used.\n+         * This is where we can add markers or lines, add listeners or move the camera.\n+         * In this case, we just add a marker near Sydney, Australia.\n+         * If Google Play services is not installed on the device, the user will be prompted to\n+         * install it inside the SupportMapFragment. This method will only be triggered once the\n+         * user has installed Google Play services and returned to the app.\n+         */\n+        @Override\n+        public void onMapReady(GoogleMap googleMap) {\n+            Location location = null;\n+\n+            map = googleMap;\n+            map.setMapType(GoogleMap.MAP_TYPE_TERRAIN);\n+\n+            fusedLocationProviderClient = LocationServices.getFusedLocationProviderClient(getActivity());\n+\n+            if (ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_FINE_LOCATION) == PackageManager.PERMISSION_GRANTED\n+                    && ContextCompat.checkSelfPermission(getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION)\n+                    == PackageManager.PERMISSION_GRANTED) {\n+                location = getMyLocation();\n+            } else {\n+                requestPermissions(new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, MY_PERMISSIONS_REQUEST_LOCATION);\n+            }\n+\n+            currentLocation = new LatLng(location.getLatitude(),location.getLongitude());\n+            googleMap.addMarker(new MarkerOptions().position(currentLocation).title(\"Your current location\"));\n+            map.moveCamera(CameraUpdateFactory.newLatLngZoom(currentLocation,17));\n+            drawCircle(radius);\n+        }\n+    };\n+\n+    @Nullable\n+    @Override\n+    public View onCreateView(@NonNull LayoutInflater inflater,\n+                             @Nullable ViewGroup container,\n+                             @Nullable Bundle savedInstanceState) {\n+        View view = inflater.inflate(R.layout.fragment_maps, container, false);\n+        radiusText = (TextInputEditText)view.findViewById(R.id.radiusEditText);\n+        submit = (Button)view.findViewById(R.id.submitRadiusButton);\n+        submit.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                radius = Integer.parseInt(radiusText.getText().toString());\n+                drawCircle(radius);\n+                JSONObject requestObject = new JSONObject();\n+\n+                    try {\n+                        requestObject.put(\"email\", LoginActivity.userName);\n+                        requestObject.put(\"radius\", radius);\n+                    }\n+                    catch (JSONException e) {\n+                        Log.e(ACTIVITY_TAG, \"error in changing radius setting\");\n+                        Toast.makeText(view.getContext(), \"Please try again later :)\", Toast.LENGTH_SHORT).show();\n+                    }\n+\n+                    JsonObjectRequest req = new JsonObjectRequest(Request.Method.POST,  SERVER_ADDRESS + LoginActivity.userName + \"/radius\",\n+                            requestObject, new Response.Listener<JSONObject>() {\n+                        @Override\n+                        public void onResponse(JSONObject response) {\n+                            Log.d(ACTIVITY_TAG, \"radius sent successfully\");\n+                        }\n+                    },\n+                            new Response.ErrorListener() {\n+                                @Override\n+                                public void onErrorResponse(VolleyError error) {\n+                                    Log.e(ACTIVITY_TAG, \"Failed to send radius - \" + error);\n+                                }\n+                            });\n+                    _queue.add(req);\n+                }\n+            });\n+        return view;\n+    }\n+\n+    @Override\n+    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n+        super.onViewCreated(view, savedInstanceState);\n+        SupportMapFragment mapFragment =\n+                (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.map);\n+        if (mapFragment != null) {\n+            mapFragment.getMapAsync(callback);\n+        }\n+    }\n+\n+\n+    public MapsFragment() {\n+        // Required empty public constructor\n+    }\n+\n+    @SuppressLint(\"MissingPermission\")\n+    public Location getMyLocation() {\n+        LocationManager locationManager = (LocationManager) getActivity().getSystemService(Context.LOCATION_SERVICE);\n+        Criteria criteria = new Criteria();\n+\n+        Location location = locationManager.getLastKnownLocation(locationManager.getBestProvider(criteria, false));\n+        if (location != null)\n+        {\n+            map.animateCamera(CameraUpdateFactory.newLatLngZoom(\n+                    new LatLng(location.getLatitude(), location.getLongitude()), 13));\n+\n+            CameraPosition cameraPosition = new CameraPosition.Builder()\n+                    .target(new LatLng(location.getLatitude(), location.getLongitude())) // Sets the center of the map to location user\n+                    .zoom(17)                   // Sets the zoom\n+                    .bearing(90)                // Sets the orientation of the camera to east\n+                    .tilt(40)                   // Sets the tilt of the camera to 30 degrees\n+                    .build();                   // Creates a CameraPosition from the builder\n+            map.animateCamera(CameraUpdateFactory.newCameraPosition(cameraPosition));\n+        }\n+        return location;\n+    }\n+\n+    public void drawCircle (int radius){\n+        map.addCircle(new CircleOptions()\n+                .center(currentLocation)\n+                .radius(radius)\n+                .strokeWidth(0f)\n+                .fillColor(Color.argb(70,150,50,50)));\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "03315f1459704d663061633fc9cf8c92a0cb18d0",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/MarkerAnimation.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/MarkerAnimation.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/MarkerAnimation.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/MarkerAnimation.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,41 @@\n+package com.runbuddy;\n+\n+import android.os.Handler;\n+import android.os.SystemClock;\n+import android.view.animation.AccelerateDecelerateInterpolator;\n+import android.view.animation.Interpolator;\n+\n+import com.google.android.gms.maps.model.LatLng;\n+import com.google.android.gms.maps.model.Marker;\n+\n+public class MarkerAnimation {\n+    public static void animateMarkerToGB(final Marker marker, final LatLng finalPosition, final LatLngInterpolator latLngInterpolator) {\n+        final LatLng startPosition = marker.getPosition();\n+        final Handler handler = new Handler();\n+        final long start = SystemClock.uptimeMillis();\n+        final Interpolator interpolator = new AccelerateDecelerateInterpolator();\n+        final float durationInMs = 2000;\n+\n+        handler.post(new Runnable() {\n+            long elapsed;\n+            float t;\n+            float v;\n+\n+            @Override\n+            public void run() {\n+                // Calculate progress using interpolator\n+                elapsed = SystemClock.uptimeMillis() - start;\n+                t = elapsed / durationInMs;\n+                v = interpolator.getInterpolation(t);\n+\n+                marker.setPosition(latLngInterpolator.interpolate(v, startPosition, finalPosition));\n+\n+                // Repeat till progress is complete.\n+                if (t < 1) {\n+                    // Post again 16ms later.\n+                    handler.postDelayed(this, 16);\n+                }\n+            }\n+        });\n+    }\n+}"
  },
  {
    "sha": "3580375f9fd25fecfafea14bfb85688ba72fae3e",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/MyFirebaseMessagingService.java",
    "status": "added",
    "additions": 142,
    "deletions": 0,
    "changes": 142,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/MyFirebaseMessagingService.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/MyFirebaseMessagingService.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/MyFirebaseMessagingService.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,142 @@\n+package com.runbuddy;\n+import android.app.NotificationChannel;\n+import android.app.NotificationManager;\n+import android.app.PendingIntent;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.Build;\n+import android.os.Handler;\n+import android.os.Looper;\n+import android.util.Log;\n+\n+import androidx.annotation.NonNull;\n+import androidx.core.app.NotificationCompat;\n+\n+import com.android.volley.Request;\n+import com.android.volley.RequestQueue;\n+import com.android.volley.Response;\n+import com.android.volley.VolleyError;\n+import com.android.volley.toolbox.JsonObjectRequest;\n+import com.android.volley.toolbox.Volley;\n+import com.google.firebase.messaging.FirebaseMessagingService;\n+import com.google.firebase.messaging.RemoteMessage;\n+\n+import org.json.JSONObject;\n+\n+public class MyFirebaseMessagingService extends FirebaseMessagingService {\n+    private static final String TAG = \"MyFirebaseMsgService\";\n+    private static final String SERVER_ADDRESS = \"http://10.0.0.25:8080/\";\n+\n+    static String CHANNEL_ID = \"CHANNEL\";\n+    static int notifyId = 1;\n+\n+    private RequestQueue _queue;\n+\n+\n+    @Override\n+    public void onCreate() {\n+        super.onCreate();\n+        _queue = Volley.newRequestQueue(this);\n+    }\n+\n+    /**********************************************************************\n+     Called if InstanceID token is updated. This may occur if the\n+     security of the previous token had been compromised. Note that\n+     this is called when the InstanceID token is initially generated\n+     so this is where you would retrieve the token.\n+     ***********************************************************************/\n+    @Override\n+    public void onNewToken(@NonNull String token) {\n+        Log.d(TAG, \"Refreshed token: \" + token);\n+        super.onNewToken(token);\n+        sendRegistrationToServer(token);\n+    }\n+\n+    /**********************************************************************\n+     Persist token to third-party servers.\n+     Modify this method to associate the user's FCM InstanceID token\n+     with any server-side account maintained by your application.\n+     ***********************************************************************/\n+    private void sendRegistrationToServer(String token) {\n+        String userName = LoginActivity.userName.getText().toString();\n+        JSONObject requestObject = new JSONObject();\n+        JsonObjectRequest req = new JsonObjectRequest(Request.Method.POST, SERVER_ADDRESS + userName +\"/token/\" + token,\n+                requestObject, new Response.Listener<JSONObject>() {\n+            @Override\n+            public void onResponse(JSONObject response) {\n+                Log.i(TAG, \"Token saved successfully\");\n+            }\n+        },\n+                new Response.ErrorListener() {\n+                    @Override\n+                    public void onErrorResponse(VolleyError error) {\n+                        Log.e(TAG, \"Failed to save token - \" + error);\n+                    }\n+                });\n+        _queue.add(req);\n+    }\n+\n+    /**********************************************************************\n+     Called when message is received.\n+     ***********************************************************************/\n+    @Override\n+    public void onMessageReceived(final RemoteMessage remoteMessage) {\n+        Log.d(TAG, \"From: \" + remoteMessage.getFrom());\n+\n+        // Check if message contains a data payload.\n+        if (remoteMessage.getData().size() > 0) {\n+            Log.d(TAG, \"Message data payload: \" + remoteMessage.getData());\n+        }\n+\n+        // Check if message contains a notification payload.\n+        if (remoteMessage.getNotification() != null) {\n+            Log.d(TAG, \"Message Notification Body: \" + remoteMessage.getNotification().getBody());\n+            new Handler(Looper.getMainLooper()).post(new Runnable() {\n+                @Override\n+                public void run() {\n+                    //Push notification with the information that sent from firebase\n+                    sendNotification(remoteMessage.getNotification().getBody());\n+                }\n+            });\n+        }\n+    }\n+\n+    /**********************************************************************\n+         Create and show notification with the information that sent from\n+         firebase\n+    ***********************************************************************/\n+    private void sendNotification(String messageBody) {\n+        Intent intent = new Intent(this, MainActivity.class);\n+        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n+        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent, PendingIntent.FLAG_ONE_SHOT);\n+\n+        createNotificationChannel();\n+\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, CHANNEL_ID)\n+                .setContentTitle(\"Running Time!\")\n+                .setPriority(NotificationCompat.PRIORITY_MAX)\n+                .setContentText(messageBody)\n+                .setAutoCancel(true)\n+                .setContentIntent(pendingIntent);\n+\n+        NotificationManager notificationManager = (NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);\n+        Log.d(TAG, \"Sent notification with id \" + notifyId);\n+        notificationManager.notify(notifyId, builder.build());\n+        notifyId = notifyId + 1;\n+    }\n+\n+    /**********************************************************************\n+        From some API version we need to create a notification channel\n+        and throw exception if there is any problem with the file\n+    ***********************************************************************/\n+    private void createNotificationChannel(){\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n+            CharSequence name = \"Final_channel\";\n+            int importance = NotificationManager.IMPORTANCE_HIGH;\n+\n+            NotificationChannel channel = new NotificationChannel(CHANNEL_ID, name, importance);\n+            NotificationManager notificationManager = getSystemService(NotificationManager.class);\n+            notificationManager.createNotificationChannel(channel);\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "9d762d59df36c60e4598d84a634baaf0d2f16c27",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/ShowActivitiesFragment.java",
    "status": "added",
    "additions": 121,
    "deletions": 0,
    "changes": 121,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/ShowActivitiesFragment.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/ShowActivitiesFragment.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/ShowActivitiesFragment.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,121 @@\n+package com.runbuddy;\n+\n+import android.os.Bundle;\n+\n+import androidx.fragment.app.Fragment;\n+import androidx.recyclerview.widget.LinearLayoutManager;\n+import androidx.recyclerview.widget.RecyclerView;\n+\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+import com.android.volley.Request;\n+import com.android.volley.Response;\n+import com.android.volley.VolleyError;\n+import com.android.volley.toolbox.JsonArrayRequest;\n+import com.android.volley.toolbox.JsonObjectRequest;\n+\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * A simple {@link Fragment} subclass.\n+ * Use the {@link ShowActivitiesFragment#newInstance} factory method to\n+ * create an instance of this fragment.\n+ */\n+public class ShowActivitiesFragment extends Fragment {\n+\n+    RecyclerView rvGroup;\n+    ArrayList<String> arrayListGroup;\n+    LinearLayoutManager layoutManagerGroup;\n+    GroupAdp adapterGroup;\n+    private static final String FRAGMENT_TAG = \"showActivity\";\n+    private static final String SERVER_ADDRESS = \"http://10.0.0.25:8080/\";\n+\n+    // TODO: Rename parameter arguments, choose names that match\n+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n+    private static final String ARG_PARAM1 = \"param1\";\n+    private static final String ARG_PARAM2 = \"param2\";\n+\n+    // TODO: Rename and change types of parameters\n+    private String mParam1;\n+    private String mParam2;\n+\n+    public ShowActivitiesFragment() {\n+        // Required empty public constructor\n+    }\n+\n+    /**\n+     * Use this factory method to create a new instance of\n+     * this fragment using the provided parameters.\n+     *\n+     * @param param1 Parameter 1.\n+     * @param param2 Parameter 2.\n+     * @return A new instance of fragment ShowActivitiesFragment.\n+     */\n+    // TODO: Rename and change types and number of parameters\n+    public static ShowActivitiesFragment newInstance(String param1, String param2) {\n+        ShowActivitiesFragment fragment = new ShowActivitiesFragment();\n+        Bundle args = new Bundle();\n+        args.putString(ARG_PARAM1, param1);\n+        args.putString(ARG_PARAM2, param2);\n+        fragment.setArguments(args);\n+        return fragment;\n+    }\n+\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        if (getArguments() != null) {\n+            mParam1 = getArguments().getString(ARG_PARAM1);\n+            mParam2 = getArguments().getString(ARG_PARAM2);\n+        }\n+    }\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                             Bundle savedInstanceState) {\n+        View view = inflater.inflate(R.layout.fragment_show_activities, container, false);\n+\n+        rvGroup = view.findViewById(R.id.rvGroup);\n+\n+        JsonArrayRequest req = new JsonArrayRequest(Request.Method.GET,SERVER_ADDRESS + \"/all_activities\",\n+                null, new Response.Listener<JSONArray>() {\n+\n+            @Override\n+            public void onResponse(JSONArray response){\n+                Log.d(FRAGMENT_TAG, response.toString());\n+                arrayListGroup = new ArrayList<>();\n+                try{\n+                    for (int i = 0; i < response.length(); i++) {\n+                        arrayListGroup.add(response.getJSONObject(i).getString(\"email\"));\n+                    }\n+                } catch (JSONException e){\n+                    e.printStackTrace();\n+                    Log.d(FRAGMENT_TAG, \"error - \" + e);\n+                }\n+            }\n+        }, new Response.ErrorListener() {\n+            @Override\n+            public void onErrorResponse(VolleyError error) {\n+                Log.d(FRAGMENT_TAG, \"Encountered error - \" + error);\n+            }\n+        });\n+/*\n+        arrayListGroup = new ArrayList<>();\n+        for (int i = 1; i <= 10; i++) {\n+            arrayListGroup.add(\"Group \" + i);\n+        }\n+*/\n+        adapterGroup = new GroupAdp(this, arrayListGroup);\n+        layoutManagerGroup = new LinearLayoutManager(this.getContext());\n+        rvGroup.setLayoutManager(layoutManagerGroup);\n+        rvGroup.setAdapter(adapterGroup);\n+\n+        return view;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "f7af46add61f6037f52bf0834d977fa17c582de3",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/SignUp.java",
    "status": "added",
    "additions": 149,
    "deletions": 0,
    "changes": 149,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/SignUp.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/SignUp.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/SignUp.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,149 @@\n+package com.runbuddy;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.View;\n+import android.widget.TextView;\n+import android.widget.Button;\n+import android.widget.Toast;\n+\n+import com.android.volley.Request;\n+import com.android.volley.RequestQueue;\n+import com.android.volley.Response;\n+import com.android.volley.VolleyError;\n+import com.android.volley.toolbox.JsonObjectRequest;\n+import com.google.android.material.textfield.TextInputEditText;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+public class SignUp extends AppCompatActivity {\n+\n+    TextView login;\n+    TextInputEditText firstName;\n+    TextInputEditText lastName;\n+    TextInputEditText email;\n+    TextInputEditText pass;\n+    TextInputEditText rePass;\n+    Button done;\n+\n+    private RequestQueue _queue;\n+    private static final String ACTIVITY_TAG = \"signUp\";\n+    private static final String SERVER_ADDRESS = \"http://10.0.0.25:8080/\";\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_sign_up);\n+\n+        firstName = (TextInputEditText)findViewById(R.id.firstNameEditText);\n+        lastName = (TextInputEditText)findViewById(R.id.lastNameEditText);\n+        email = (TextInputEditText)findViewById(R.id.emailEditText);\n+        pass = (TextInputEditText)findViewById(R.id.passwordEditText);\n+        rePass = (TextInputEditText)findViewById(R.id.repasswordEditText);\n+\n+        login = (TextView) findViewById(R.id.loginTextView);\n+        login.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                Intent loginIntent = new Intent(v.getContext(), LoginActivity.class);\n+                startActivity(loginIntent);\n+            }\n+        });\n+\n+        done = (Button) findViewById(R.id.doneButton);\n+        done.setOnClickListener(new View.OnClickListener() {\n+\n+            @Override\n+            public void onClick(View v) {\n+                if(!chekFildes()){\n+                    Toast.makeText(SignUp.this, \"Make sure all fields are filled and re-password is match to to the password\", Toast.LENGTH_SHORT).show();\n+                } else {\n+                    JSONObject requestObject = new JSONObject();\n+\n+                    try {\n+                        requestObject.put(\"email\", email);\n+                        requestObject.put(\"password\", pass);\n+                    }\n+                    catch (JSONException e) {\n+                        Log.e(ACTIVITY_TAG, \"error in verifying exist user\");\n+                        Toast.makeText(SignUp.this, \"Please try again later :)\", Toast.LENGTH_SHORT).show();\n+                    }\n+\n+                    JsonObjectRequest req = new JsonObjectRequest(Request.Method.POST,  SERVER_ADDRESS + email + \"/check\",\n+                            requestObject, new Response.Listener<JSONObject>() {\n+                        @Override\n+                        public void onResponse(JSONObject response) {\n+                            Log.d(ACTIVITY_TAG, response.toString());\n+                            String match = response.toString();\n+\n+                            if(match.equals(\"true\")){\n+                                Log.i(ACTIVITY_TAG, \"user is found\");\n+                                Toast.makeText(SignUp.this, \"The email exist in our system, try another one\", Toast.LENGTH_SHORT).show();\n+                            } else{\n+                                Toast.makeText(SignUp.this, \"Welcome, \" + email, Toast.LENGTH_SHORT).show();\n+                                //TODO: change the intent name\n+                                Intent nextIntent = new Intent(SignUp.this, HomePage.class);\n+                                nextIntent.putExtra(\"username\",email.getText().toString());\n+                                Log.i(ACTIVITY_TAG,\"check \"+ email.getText().toString());\n+                                LoginActivity.userName = email;\n+                                resetInputs();\n+                                startActivity(nextIntent);\n+                            }\n+\n+                        }\n+                    },\n+                            new Response.ErrorListener() {\n+                                @Override\n+                                public void onErrorResponse(VolleyError error) {\n+                                    Log.e(ACTIVITY_TAG, \"Failed to sign up - \" + error);\n+                                }\n+                            });\n+                    _queue.add(req);\n+                }\n+            }\n+        });\n+    }\n+\n+    private boolean chekFildes() {\n+        if (firstName == null){\n+            return false;\n+        }\n+        if (lastName == null){\n+            return false;\n+        }\n+        if (email == null){\n+            return false;\n+        }\n+        if (pass == null){\n+            return false;\n+        }\n+        if (rePass == null){\n+            return false;\n+        }\n+        if (pass.getText().toString().equals(rePass.getText().toString()) == false){\n+            return false;\n+        }\n+        return true;\n+    }\n+\n+    /**********************************************************************\n+     This method resets the input to their original hints\n+     ***********************************************************************/\n+    private void resetInputs(){\n+        Log.i(ACTIVITY_TAG, \"resetting inputs\");\n+        firstName.setText(null);\n+        firstName.setHint(\"First name\");\n+        lastName.setText(null);\n+        lastName.setHint(\"Last name\");\n+        email.setText(null);\n+        email.setHint(\"Email\");\n+        pass.setText(null);\n+        pass.setHint(\"Password\");\n+        rePass.setText(null);\n+        rePass.setHint(\"Re-password\");\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "906bc864ef9cf0bb5001cd97f28b98380a5ffc58",
    "filename": "FinalProject/client/app/src/main/java/com/runbuddy/StartActivityFragment.java",
    "status": "added",
    "additions": 159,
    "deletions": 0,
    "changes": 159,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/StartActivityFragment.java",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/java/com/runbuddy/StartActivityFragment.java",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/java/com/runbuddy/StartActivityFragment.java?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,159 @@\n+package com.runbuddy;\n+\n+import android.app.DatePickerDialog;\n+import android.os.Bundle;\n+\n+import androidx.fragment.app.Fragment;\n+\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.TimePicker;\n+import android.widget.Toast;\n+\n+import com.android.volley.Request;\n+import com.android.volley.RequestQueue;\n+import com.android.volley.Response;\n+import com.android.volley.VolleyError;\n+import com.android.volley.toolbox.JsonObjectRequest;\n+import com.google.android.material.textfield.TextInputEditText;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.util.Calendar;\n+\n+/**\n+ * A simple {@link Fragment} subclass.\n+ * Use the {@link StartActivityFragment#newInstance} factory method to\n+ * create an instance of this fragment.\n+ */\n+public class StartActivityFragment extends Fragment {\n+\n+    final Calendar myCalendar = Calendar.getInstance();\n+    TimePicker timePicker;\n+\n+    TextInputEditText distanceEditText;\n+    TextInputEditText dateEditText;\n+    Button submit;\n+    private RequestQueue _queue;\n+    private static final String FRAGMENT_TAG = \"startActivity\";\n+    private static final String SERVER_ADDRESS = \"http://10.0.0.25:8080/\";\n+\n+    // TODO: Rename parameter arguments, choose names that match\n+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n+    private static final String ARG_PARAM1 = \"param1\";\n+    private static final String ARG_PARAM2 = \"param2\";\n+\n+    // TODO: Rename and change types of parameters\n+    private String mParam1;\n+    private String mParam2;\n+\n+    public StartActivityFragment() {\n+        // Required empty public constructor\n+    }\n+\n+    /**\n+     * Use this factory method to create a new instance of\n+     * this fragment using the provided parameters.\n+     *\n+     * @param param1 Parameter 1.\n+     * @param param2 Parameter 2.\n+     * @return A new instance of fragment StartActivityFragment.\n+     */\n+    // TODO: Rename and change types and number of parameters\n+    public static StartActivityFragment newInstance(String param1, String param2) {\n+        StartActivityFragment fragment = new StartActivityFragment();\n+        Bundle args = new Bundle();\n+        args.putString(ARG_PARAM1, param1);\n+        args.putString(ARG_PARAM2, param2);\n+        fragment.setArguments(args);\n+        return fragment;\n+    }\n+\n+    @Override\n+    public void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        if (getArguments() != null) {\n+            mParam1 = getArguments().getString(ARG_PARAM1);\n+            mParam2 = getArguments().getString(ARG_PARAM2);\n+        }\n+    }\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                             Bundle savedInstanceState) {\n+        View view = inflater.inflate(R.layout.fragment_start_activity, container, false);\n+\n+        dateEditText = view.findViewById(R.id.dateEditText);\n+        dateEditText.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                openDatePickerDialog(v);\n+            }\n+        });\n+\n+        timePicker = (TimePicker)view.findViewById(R.id.time_picker);\n+        timePicker.setIs24HourView(true);\n+        int hour = timePicker.getHour();\n+        int minute = timePicker.getMinute();\n+        String time = hour + \":\" + minute;\n+\n+        submit = (Button) view.findViewById(R.id.submitButton);\n+        submit.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                JSONObject requestObject = new JSONObject();\n+\n+                try {\n+                    requestObject.put(\"email\", LoginActivity.userName);\n+                    requestObject.put(\"distance\", distanceEditText.toString());\n+                    requestObject.put(\"date\", dateEditText.toString());\n+                    requestObject.put(\"time\", time);\n+\n+                    JsonObjectRequest req = new JsonObjectRequest(Request.Method.POST,  SERVER_ADDRESS + \"/create_activity\",\n+                            requestObject, new Response.Listener<JSONObject>() {\n+                        @Override\n+                        public void onResponse(JSONObject response) {\n+                            Log.d(FRAGMENT_TAG, response.toString());\n+                            Toast.makeText(view.getContext(), \"Activity saved! :)\", Toast.LENGTH_SHORT).show();\n+                            Log.i(FRAGMENT_TAG,\"activity saved\");\n+                        }\n+                    },\n+                            new Response.ErrorListener() {\n+                                @Override\n+                                public void onErrorResponse(VolleyError error) {\n+                                    Log.e(FRAGMENT_TAG, \"Failed to Log in - \" + error);\n+                                    Toast.makeText(view.getContext(), \"Sonthing went wrong. Please try again later\", Toast.LENGTH_SHORT).show();\n+                                }\n+                            });\n+                    _queue.add(req);\n+                }\n+                catch (JSONException e) {\n+                    Log.e(FRAGMENT_TAG, \"error in submitting activity\");\n+                    Toast.makeText(view.getContext(), \"Please try again\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+        return view;\n+    }\n+\n+    public void openDatePickerDialog(final View v) {\n+        // Get Current Date\n+        DatePickerDialog datePickerDialog = new DatePickerDialog(getActivity(),\n+                (view, year, monthOfYear, dayOfMonth) -> {\n+                    String selectedDate = dayOfMonth + \"/\" + (monthOfYear + 1) + \"/\" + year;\n+                    switch (v.getId()) {\n+                        case R.id.dateEditText:\n+                            ((TextInputEditText) v).setText(selectedDate);\n+                            break;\n+                    }\n+                }, myCalendar.get(Calendar.YEAR), myCalendar.get(Calendar.MONTH), myCalendar.get(Calendar.DAY_OF_MONTH));\n+\n+\n+        datePickerDialog.getDatePicker().setMaxDate(myCalendar.getTimeInMillis());\n+        datePickerDialog.show();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "2b068d11462a4b96669193de13a711a3a36220a0",
    "filename": "FinalProject/client/app/src/main/res/drawable-v24/ic_launcher_foreground.xml",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/res/drawable-v24/ic_launcher_foreground.xml",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/res/drawable-v24/ic_launcher_foreground.xml",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/res/drawable-v24/ic_launcher_foreground.xml?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,30 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:aapt=\"http://schemas.android.com/aapt\"\n+    android:width=\"108dp\"\n+    android:height=\"108dp\"\n+    android:viewportWidth=\"108\"\n+    android:viewportHeight=\"108\">\n+    <path android:pathData=\"M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z\">\n+        <aapt:attr name=\"android:fillColor\">\n+            <gradient\n+                android:endX=\"85.84757\"\n+                android:endY=\"92.4963\"\n+                android:startX=\"42.9492\"\n+                android:startY=\"49.59793\"\n+                android:type=\"linear\">\n+                <item\n+                    android:color=\"#44000000\"\n+                    android:offset=\"0.0\" />\n+                <item\n+                    android:color=\"#00000000\"\n+                    android:offset=\"1.0\" />\n+            </gradient>\n+        </aapt:attr>\n+    </path>\n+    <path\n+        android:fillColor=\"#FFFFFF\"\n+        android:fillType=\"nonZero\"\n+        android:pathData=\"M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z\"\n+        android:strokeWidth=\"1\"\n+        android:strokeColor=\"#00000000\" />\n+</vector>\n\\ No newline at end of file"
  },
  {
    "sha": "07d5da9cbf141911847041df5d7b87f0dd5ef9d4",
    "filename": "FinalProject/client/app/src/main/res/drawable/ic_launcher_background.xml",
    "status": "added",
    "additions": 170,
    "deletions": 0,
    "changes": 170,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/res/drawable/ic_launcher_background.xml",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/res/drawable/ic_launcher_background.xml",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/res/drawable/ic_launcher_background.xml?ref=698c2078079fe03206e5a211c8d1f5c15be2605e",
    "patch": "@@ -0,0 +1,170 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:width=\"108dp\"\n+    android:height=\"108dp\"\n+    android:viewportWidth=\"108\"\n+    android:viewportHeight=\"108\">\n+    <path\n+        android:fillColor=\"#3DDC84\"\n+        android:pathData=\"M0,0h108v108h-108z\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M9,0L9,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,0L19,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M29,0L29,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M39,0L39,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M49,0L49,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M59,0L59,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M69,0L69,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M79,0L79,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M89,0L89,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M99,0L99,108\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,9L108,9\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,19L108,19\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,29L108,29\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,39L108,39\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,49L108,49\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,59L108,59\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,69L108,69\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,79L108,79\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,89L108,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M0,99L108,99\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,29L89,29\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,39L89,39\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,49L89,49\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,59L89,59\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,69L89,69\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M19,79L89,79\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M29,19L29,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M39,19L39,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M49,19L49,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M59,19L59,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M69,19L69,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+    <path\n+        android:fillColor=\"#00000000\"\n+        android:pathData=\"M79,19L79,89\"\n+        android:strokeWidth=\"0.8\"\n+        android:strokeColor=\"#33FFFFFF\" />\n+</vector>"
  },
  {
    "sha": "48c39828f277a83f732f978f3602cc53a870c503",
    "filename": "FinalProject/client/app/src/main/res/drawable/main_background.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/OriBlanka/AndroindMilab/blob/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/res/drawable/main_background.png",
    "raw_url": "https://github.com/OriBlanka/AndroindMilab/raw/698c2078079fe03206e5a211c8d1f5c15be2605e/FinalProject/client/app/src/main/res/drawable/main_background.png",
    "contents_url": "https://api.github.com/repos/OriBlanka/AndroindMilab/contents/FinalProject/client/app/src/main/res/drawable/main_background.png?ref=698c2078079fe03206e5a211c8d1f5c15be2605e"
  }
]
