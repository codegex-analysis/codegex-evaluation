[
  {
    "sha": "1e8cc9558df666f429812ac0ca43771392ac754e",
    "filename": "src/intTest/resources/edifact/pathology_2.edifact.dat",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/blob/24921a33ea52196ada7c431e3998545e390d3572/src/intTest/resources/edifact/pathology_2.edifact.dat",
    "raw_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/raw/24921a33ea52196ada7c431e3998545e390d3572/src/intTest/resources/edifact/pathology_2.edifact.dat",
    "contents_url": "https://api.github.com/repos/nhsconnect/integration-adaptor-lab-results/contents/src/intTest/resources/edifact/pathology_2.edifact.dat?ref=24921a33ea52196ada7c431e3998545e390d3572",
    "patch": "@@ -61,6 +61,6 @@ RSL+NV+0.8++:::ng/mL'\n STS++FI'\n RFF+ARL:1'\n S20+20'\n-RND+U+2.0+20.0'\n+RND+U+2.0+20.0+nmol/L'\n UNT+41+1'\n UNZ+1+1015'"
  },
  {
    "sha": "bf3d737146f622dd6920160880c8d1c80ff2b105",
    "filename": "src/intTest/resources/edifact/screening.edifact.dat",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/blob/24921a33ea52196ada7c431e3998545e390d3572/src/intTest/resources/edifact/screening.edifact.dat",
    "raw_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/raw/24921a33ea52196ada7c431e3998545e390d3572/src/intTest/resources/edifact/screening.edifact.dat",
    "contents_url": "https://api.github.com/repos/nhsconnect/integration-adaptor-lab-results/contents/src/intTest/resources/edifact/screening.edifact.dat?ref=24921a33ea52196ada7c431e3998545e390d3572",
    "patch": "@@ -39,5 +39,7 @@ INV+MQ+368481000000103:921::Bowel cancer screening result'\n RSL+CV+::375211000000108:921::Bowel cancer screening programme FOB test normal (finding)'\n FTX+SPC+++Normal. Sent following an initial single Negative result or following:2 Negative results after an initial Weak Positive'\n RFF+ASL:1'\n+S20+20'\n+RND+U+13.3+16.7+g/dl'\n UNT+40+1'\n UNZ+1+34'"
  },
  {
    "sha": "bb8e24a78f7fb23a76dba2086d0b9796c7970433",
    "filename": "src/intTest/resources/fhir/pathology_2.fhir.json",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/blob/24921a33ea52196ada7c431e3998545e390d3572/src/intTest/resources/fhir/pathology_2.fhir.json",
    "raw_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/raw/24921a33ea52196ada7c431e3998545e390d3572/src/intTest/resources/fhir/pathology_2.fhir.json",
    "contents_url": "https://api.github.com/repos/nhsconnect/integration-adaptor-lab-results/contents/src/intTest/resources/fhir/pathology_2.fhir.json?ref=24921a33ea52196ada7c431e3998545e390d3572",
    "patch": "@@ -318,10 +318,12 @@\n         \"referenceRange\": [\n           {\n             \"low\": {\n-              \"value\": 2.0\n+              \"value\": 2.0,\n+              \"unit\": \"nmol/L\"\n             },\n             \"high\": {\n-              \"value\": 20.0\n+              \"value\": 20.0,\n+              \"unit\": \"nmol/L\"\n             }\n           }\n         ],"
  },
  {
    "sha": "f935521e4714e7963340ecfbc960b33548ccb5fb",
    "filename": "src/intTest/resources/fhir/screening.fhir.json",
    "status": "modified",
    "additions": 22,
    "deletions": 4,
    "changes": 26,
    "blob_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/blob/24921a33ea52196ada7c431e3998545e390d3572/src/intTest/resources/fhir/screening.fhir.json",
    "raw_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/raw/24921a33ea52196ada7c431e3998545e390d3572/src/intTest/resources/fhir/screening.fhir.json",
    "contents_url": "https://api.github.com/repos/nhsconnect/integration-adaptor-lab-results/contents/src/intTest/resources/fhir/screening.fhir.json?ref=24921a33ea52196ada7c431e3998545e390d3572",
    "patch": "@@ -3,7 +3,9 @@\n   \"id\": \"bfbbff2b-aa31-455e-8072-43ef3f28a13a\",\n   \"meta\": {\n     \"lastUpdated\": \"2021-03-12T13:36:29.588+00:00\",\n-    \"profile\": [ \"https://fhir.nhs.uk/STU3/StructureDefinition/ITK-Message-Bundle-1\" ]\n+    \"profile\": [\n+      \"https://fhir.nhs.uk/STU3/StructureDefinition/ITK-Message-Bundle-1\"\n+    ]\n   },\n   \"identifier\": {\n     \"system\": \"https://tools.ietf.org/html/rfc4122\",\n@@ -25,8 +27,12 @@\n         \"name\": [\n           {\n             \"family\": \"GRIMSHAW\",\n-            \"given\": [ \"BRETT\" ],\n-            \"prefix\": [ \"CAPT\" ]\n+            \"given\": [\n+              \"BRETT\"\n+            ],\n+            \"prefix\": [\n+              \"CAPT\"\n+            ]\n           }\n         ],\n         \"gender\": \"male\",\n@@ -169,7 +175,19 @@\n         \"comment\": \"Normal. Sent following an initial single Negative result or following 2 Negative results after an initial Weak Positive\",\n         \"specimen\": {\n           \"reference\": \"urn:uuid:ad79dabe-2842-4a74-8f09-72cd398fcdd4\"\n-        }\n+        },\n+        \"referenceRange\": [\n+          {\n+            \"low\": {\n+              \"value\": 13.3,\n+              \"unit\": \"g/dl\"\n+            },\n+            \"high\": {\n+              \"value\": 16.7,\n+              \"unit\": \"g/dl\"\n+            }\n+          }\n+        ]\n       }\n     }\n   ]"
  },
  {
    "sha": "296b9593d8828f735f8884e5a467d90fd321cb33",
    "filename": "src/main/java/uk/nhs/digital/nhsconnect/lab/results/model/edifact/RangeDetail.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/blob/24921a33ea52196ada7c431e3998545e390d3572/src/main/java/uk/nhs/digital/nhsconnect/lab/results/model/edifact/RangeDetail.java",
    "raw_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/raw/24921a33ea52196ada7c431e3998545e390d3572/src/main/java/uk/nhs/digital/nhsconnect/lab/results/model/edifact/RangeDetail.java",
    "contents_url": "https://api.github.com/repos/nhsconnect/integration-adaptor-lab-results/contents/src/main/java/uk/nhs/digital/nhsconnect/lab/results/model/edifact/RangeDetail.java?ref=24921a33ea52196ada7c431e3998545e390d3572",
    "patch": "@@ -10,9 +10,10 @@\n \n /**\n  * Examples:\n- *\n+ * <br/>\n  * {@code RND+U+170+1100'}: between 170 and 1100<br/>\n  * {@code RND+U++999'}: less than 999<br/>\n+ * {@code RND+U+13.3+16.7+g/dl'}: with units\n  */\n @EqualsAndHashCode(callSuper = false)\n @AllArgsConstructor\n@@ -23,10 +24,13 @@\n \n     private static final int INDEX_LOWER_LIMIT = 2;\n     private static final int INDEX_UPPER_LIMIT = 3;\n+    private static final int INDEX_UNITS = 4;\n \n     private final BigDecimal lowerLimit;\n     private final BigDecimal upperLimit;\n \n+    private final String units;\n+\n     public static RangeDetail fromString(final String edifact) {\n         if (!edifact.startsWith(KEY_QUALIFIER)) {\n             throw new IllegalArgumentException(\"Can't create \" + RangeDetail.class.getSimpleName()\n@@ -40,8 +44,9 @@ public static RangeDetail fromString(final String edifact) {\n         final BigDecimal upperLimit = split[INDEX_UPPER_LIMIT].isBlank()\n             ? null\n             : new BigDecimal(split[INDEX_UPPER_LIMIT]);\n+        final String units = split.length > INDEX_UNITS ? split[INDEX_UNITS] : null;\n \n-        return new RangeDetail(lowerLimit, upperLimit);\n+        return new RangeDetail(lowerLimit, upperLimit, units);\n     }\n \n     public Optional<BigDecimal> getLowerLimit() {\n@@ -52,6 +57,10 @@ public static RangeDetail fromString(final String edifact) {\n         return Optional.ofNullable(upperLimit);\n     }\n \n+    public Optional<String> getUnits() {\n+        return Optional.ofNullable(units);\n+    }\n+\n     @Override\n     public String getKey() {\n         return KEY;"
  },
  {
    "sha": "f032639035feb18b4a849d677742fb8a998f315d",
    "filename": "src/main/java/uk/nhs/digital/nhsconnect/lab/results/translator/mapper/ObservationMapper.java",
    "status": "modified",
    "additions": 12,
    "deletions": 4,
    "changes": 16,
    "blob_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/blob/24921a33ea52196ada7c431e3998545e390d3572/src/main/java/uk/nhs/digital/nhsconnect/lab/results/translator/mapper/ObservationMapper.java",
    "raw_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/raw/24921a33ea52196ada7c431e3998545e390d3572/src/main/java/uk/nhs/digital/nhsconnect/lab/results/translator/mapper/ObservationMapper.java",
    "contents_url": "https://api.github.com/repos/nhsconnect/integration-adaptor-lab-results/contents/src/main/java/uk/nhs/digital/nhsconnect/lab/results/translator/mapper/ObservationMapper.java?ref=24921a33ea52196ada7c431e3998545e390d3572",
    "patch": "@@ -19,16 +19,17 @@\n import org.hl7.fhir.dstu3.model.Specimen;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n-import uk.nhs.digital.nhsconnect.lab.results.model.enums.CodingType;\n import uk.nhs.digital.nhsconnect.lab.results.model.edifact.FreeTextSegment;\n-import uk.nhs.digital.nhsconnect.lab.results.model.enums.LaboratoryInvestigationResultType;\n-import uk.nhs.digital.nhsconnect.lab.results.model.enums.MeasurementValueComparator;\n import uk.nhs.digital.nhsconnect.lab.results.model.edifact.Message;\n+import uk.nhs.digital.nhsconnect.lab.results.model.edifact.RangeDetail;\n import uk.nhs.digital.nhsconnect.lab.results.model.edifact.TestStatus;\n-import uk.nhs.digital.nhsconnect.lab.results.model.enums.TestStatusCode;\n import uk.nhs.digital.nhsconnect.lab.results.model.edifact.segmentgroup.InvestigationSubject;\n import uk.nhs.digital.nhsconnect.lab.results.model.edifact.segmentgroup.LabResult;\n import uk.nhs.digital.nhsconnect.lab.results.model.edifact.segmentgroup.ResultReferenceRange;\n+import uk.nhs.digital.nhsconnect.lab.results.model.enums.CodingType;\n+import uk.nhs.digital.nhsconnect.lab.results.model.enums.LaboratoryInvestigationResultType;\n+import uk.nhs.digital.nhsconnect.lab.results.model.enums.MeasurementValueComparator;\n+import uk.nhs.digital.nhsconnect.lab.results.model.enums.TestStatusCode;\n import uk.nhs.digital.nhsconnect.lab.results.utils.ResourceFullUrlGenerator;\n import uk.nhs.digital.nhsconnect.lab.results.utils.UUIDGenerator;\n \n@@ -231,11 +232,13 @@ private void mapReferenceRange(final LabResult labResult, final Observation obse\n                     // Observation.referenceRange.low = SG20.RND.6162\n                     rangeDetail.getLowerLimit()\n                         .map(this::toSimpleQuantity)\n+                        .map(quantity -> addUnit(quantity, rangeDetail))\n                         .ifPresent(range::setLow);\n \n                     // Observation.referenceRange.high = SG20.RND.6152\n                     rangeDetail.getUpperLimit()\n                         .map(this::toSimpleQuantity)\n+                        .map(quantity -> addUnit(quantity, rangeDetail))\n                         .ifPresent(range::setHigh);\n \n                     return range;\n@@ -270,6 +273,11 @@ private SimpleQuantity toSimpleQuantity(final BigDecimal value) {\n             return simpleQuantity;\n         }\n \n+        private SimpleQuantity addUnit(final SimpleQuantity quantity, final RangeDetail rangeDetail) {\n+            rangeDetail.getUnits().ifPresent(quantity::setUnit);\n+            return quantity;\n+        }\n+\n         private String getSystemValue(final CodingType codingType) {\n             return CODING_TYPE_SYSTEMS.get(codingType);\n         }"
  },
  {
    "sha": "729a72e14d1b7203c8e3c89fd88dddc583d7022c",
    "filename": "src/test/java/uk/nhs/digital/nhsconnect/lab/results/model/edifact/RangeDetailTest.java",
    "status": "modified",
    "additions": 12,
    "deletions": 2,
    "changes": 14,
    "blob_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/blob/24921a33ea52196ada7c431e3998545e390d3572/src/test/java/uk/nhs/digital/nhsconnect/lab/results/model/edifact/RangeDetailTest.java",
    "raw_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/raw/24921a33ea52196ada7c431e3998545e390d3572/src/test/java/uk/nhs/digital/nhsconnect/lab/results/model/edifact/RangeDetailTest.java",
    "contents_url": "https://api.github.com/repos/nhsconnect/integration-adaptor-lab-results/contents/src/test/java/uk/nhs/digital/nhsconnect/lab/results/model/edifact/RangeDetailTest.java?ref=24921a33ea52196ada7c431e3998545e390d3572",
    "patch": "@@ -13,7 +13,7 @@\n class RangeDetailTest {\n     @Test\n     void testGetKey() {\n-        assertThat(new RangeDetail(null, null).getKey()).isEqualTo(\"RND\");\n+        assertThat(new RangeDetail(null, null, null).getKey()).isEqualTo(\"RND\");\n     }\n \n     @Test\n@@ -24,7 +24,17 @@ void testIncorrectHeader() {\n     }\n \n     @Test\n-    void testMissingBothLimits() {\n+    void testAllFieldsGiven() {\n+        var result = RangeDetail.fromString(\"RND+U+1.1+2.2+unit\");\n+        assertAll(\n+            () -> assertThat(result.getLowerLimit()).contains(new BigDecimal(\"1.1\")),\n+            () -> assertThat(result.getUpperLimit()).contains(new BigDecimal(\"2.2\")),\n+            () -> assertThat(result.getUnits()).contains(\"unit\")\n+        );\n+    }\n+\n+    @Test\n+    void testMissingAllFields() {\n         var result = RangeDetail.fromString(\"RND+U++\");\n         assertAll(\n             () -> assertThat(result.getLowerLimit()).isEmpty(),"
  },
  {
    "sha": "e2294537465a69f54da4f059f8f6672eeabbb9fe",
    "filename": "src/test/java/uk/nhs/digital/nhsconnect/lab/results/translator/mapper/ObservationMapperTest.java",
    "status": "modified",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/blob/24921a33ea52196ada7c431e3998545e390d3572/src/test/java/uk/nhs/digital/nhsconnect/lab/results/translator/mapper/ObservationMapperTest.java",
    "raw_url": "https://github.com/nhsconnect/integration-adaptor-lab-results/raw/24921a33ea52196ada7c431e3998545e390d3572/src/test/java/uk/nhs/digital/nhsconnect/lab/results/translator/mapper/ObservationMapperTest.java",
    "contents_url": "https://api.github.com/repos/nhsconnect/integration-adaptor-lab-results/contents/src/test/java/uk/nhs/digital/nhsconnect/lab/results/translator/mapper/ObservationMapperTest.java?ref=24921a33ea52196ada7c431e3998545e390d3572",
    "patch": "@@ -287,6 +287,35 @@ void testMapRange() {\n         );\n     }\n \n+    @Test\n+    void testMapRangeWithUnits() {\n+        final var message = new Message(List.of(\n+            \"S02+02\", // ServiceReportDetails\n+            \"S06+06\", // InvestigationSubject\n+            \"GIS+N\", // LabResult\n+            \"INV+MQ+c:911::d\", // LaboratoryInvestigation\n+            \"RFF+ASL:1\", // Reference\n+\n+            \"S20+20\", // ResultReferenceRange\n+            \"RND+U+-1.0+1.0+megatons\" // RangeDetail\n+        ));\n+\n+        final var observations = mapper.mapToObservations(message, mockPatient, emptyMap(), mockOrganization,\n+            mockPractitioner);\n+\n+        final var assertReferenceRange = assertThat(observations).hasSize(1)\n+            .first()\n+            .extracting(Observation::getReferenceRangeFirstRep);\n+        assertAll(\n+            () -> assertReferenceRange.extracting(ObservationReferenceRangeComponent::getLow)\n+                .extracting(SimpleQuantity::getUnit)\n+                .isEqualTo(\"megatons\"),\n+            () -> assertReferenceRange.extracting(ObservationReferenceRangeComponent::getHigh)\n+                .extracting(SimpleQuantity::getUnit)\n+                .isEqualTo(\"megatons\")\n+        );\n+    }\n+\n     @Test\n     void testMapPatientAsSubject() {\n         final var message = new Message(List.of("
  }
]
