[
  {
    "sha": "2825441053177aebeccd702d0f1414ebf4401941",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Zero-BS/polla-java/blob/4acd19e893cc0b41d032539c343ac60bf5ac7ff7/build.gradle",
    "raw_url": "https://github.com/Zero-BS/polla-java/raw/4acd19e893cc0b41d032539c343ac60bf5ac7ff7/build.gradle",
    "contents_url": "https://api.github.com/repos/Zero-BS/polla-java/contents/build.gradle?ref=4acd19e893cc0b41d032539c343ac60bf5ac7ff7",
    "patch": "@@ -2,6 +2,7 @@ plugins {\n \tid 'org.springframework.boot' version '2.4.2'\n \tid 'io.spring.dependency-management' version '1.0.11.RELEASE'\n \tid 'java'\n+\tid \"org.sonarqube\" version \"3.1.1\"\n }\n \n group = 'org.zerobs'"
  },
  {
    "sha": "541ccf836b54c07fa4401ee81d5c476a945c4de6",
    "filename": "src/main/java/org/zerobs/polla/managers/DefaultUserManager.java",
    "status": "modified",
    "additions": 155,
    "deletions": 0,
    "changes": 155,
    "blob_url": "https://github.com/Zero-BS/polla-java/blob/4acd19e893cc0b41d032539c343ac60bf5ac7ff7/src/main/java/org/zerobs/polla/managers/DefaultUserManager.java",
    "raw_url": "https://github.com/Zero-BS/polla-java/raw/4acd19e893cc0b41d032539c343ac60bf5ac7ff7/src/main/java/org/zerobs/polla/managers/DefaultUserManager.java",
    "contents_url": "https://api.github.com/repos/Zero-BS/polla-java/contents/src/main/java/org/zerobs/polla/managers/DefaultUserManager.java?ref=4acd19e893cc0b41d032539c343ac60bf5ac7ff7",
    "patch": "@@ -14,4 +14,159 @@\n     public User add(User user) {\n         return userRepository.save(user);\n     }\n+\n+    public boolean uselessMethodWoCoverage1(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage91(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage2(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage3(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage4(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage5(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage6(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage7(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage8(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage9(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage0(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage10(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage11(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage12(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage13(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage14(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage15(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage16(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage17(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage18(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage19(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n+    public boolean uselessMethodWoCoverage20(String s) {\n+        if (s== null)\n+            return true;\n+        if (s.isEmpty())\n+            return true;\n+        return false;\n+    }\n }"
  },
  {
    "sha": "b61090fe0dbd1f38601a3010a76e2ffe1eb77422",
    "filename": "src/test/java/org/zerobs/polla/managers/DefaultUserManagerTest.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Zero-BS/polla-java/blob/4acd19e893cc0b41d032539c343ac60bf5ac7ff7/src/test/java/org/zerobs/polla/managers/DefaultUserManagerTest.java",
    "raw_url": "https://github.com/Zero-BS/polla-java/raw/4acd19e893cc0b41d032539c343ac60bf5ac7ff7/src/test/java/org/zerobs/polla/managers/DefaultUserManagerTest.java",
    "contents_url": "https://api.github.com/repos/Zero-BS/polla-java/contents/src/test/java/org/zerobs/polla/managers/DefaultUserManagerTest.java?ref=4acd19e893cc0b41d032539c343ac60bf5ac7ff7",
    "patch": "@@ -0,0 +1,12 @@\n+package org.zerobs.polla.managers;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+class DefaultUserManagerTest {\n+    @Test\n+    void test_bs() {\n+        assertEquals(1, 2);\n+    }\n+}"
  }
]
