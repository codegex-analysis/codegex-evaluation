[
  {
    "sha": "37351a3ab61ebbdb2aaeee29e739b2ba09e5cc07",
    "filename": "src/models/responces.java",
    "status": "added",
    "additions": 128,
    "deletions": 0,
    "changes": 128,
    "blob_url": "https://github.com/SirKSteen/MicroStar_CableVision_Project/blob/83bf4693f1c64802d357ae85eef8425f44742690/src/models/responces.java",
    "raw_url": "https://github.com/SirKSteen/MicroStar_CableVision_Project/raw/83bf4693f1c64802d357ae85eef8425f44742690/src/models/responces.java",
    "contents_url": "https://api.github.com/repos/SirKSteen/MicroStar_CableVision_Project/contents/src/models/responces.java?ref=83bf4693f1c64802d357ae85eef8425f44742690",
    "patch": "@@ -0,0 +1,128 @@\n+package models;\n+\n+/*This class will serve as the user domain object.\n+ * it will map to the users table in the mysql database\n+ * \n+ * */\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.EnumType;\n+import javax.persistence.Enumerated;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+\n+import org.hibernate.HibernateException;\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.Transaction;\n+\n+import factories.HibernateConnectorSessionFactory;\n+import utils.Role;\n+import java.util.Date;\n+\n+\n+@Entity\n+@Table(name = \"Responces\") //reference the user table in database. \n+public class responces {\n+\t\n+\t/*use annotations to specify id column and set it to auto generate ID's. \n+\t * we don't have to worry about keeping track of ID's for new users.\n+\t * \n+\t*/\t\n+\t@Id\n+\t@GeneratedValue(strategy = GenerationType.IDENTITY) //Automatically increments ID number based on previous record.\n+\t@Column(name = \"responces_id\") //specify column name since variable name is different\n+\tprivate int responces_id;\n+\t\n+\t@Column(name = \"complaint_id\")\n+\tprivate int complaint_id;\n+\t\n+\t@Column(name = \"responce_date\")\n+\tprivate Date responce_date;\n+\t\n+\t@Column(name = \"responce\")\n+\tprivate String responce;\n+\t\n+\t\n+\t\n+\t\n+\t//constructors\n+\t\n+\n+\n+\tpublic responces(int responces_id, int complaint_id, Date responce_date, String responce) {\n+\t\tthis.responces_id = responces_id;\n+\t\tthis.complaint_id = complaint_id;\n+\t\tthis.responce_date = responce_date;\n+\t\tthis.responce = responce;\n+\t\t\n+\t}\n+\t\n+\tpublic responces(final responces responces) {\n+\t\tthis.responces_id = responces.responces_id;\n+\t\tthis.complaint_id = responces.complaint_id;\n+\t\tthis.responce_date = responces.responce_date;\n+\t\tthis.responce = responces.responce;\n+\t}\n+\n+//getters and setters\n+\n+\tpublic responces() {\n+\t\tthis(0,0,null,\"\"); // initialize variables using primary constructor to promote code reuse \n+\t}\n+\n+\n+\t\n+\n+\tpublic int getResponces_id() {\n+\t\treturn responces_id;\n+\t}\n+\n+\n+\tpublic void setResponces_id(int responces_id) {\n+\t\tthis.responces_id = responces_id;\n+\t}\n+\n+\n+\tpublic int getComplaint_id() {\n+\t\treturn complaint_id;\n+\t}\n+\n+\n+\tpublic void setComplaint_id(int complaint_id) {\n+\t\tthis.complaint_id = complaint_id;\n+\t}\n+\n+\n+\tpublic Date getResponce_date() {\n+\t\treturn responce_date;\n+\t}\n+\n+\n+\tpublic void setResponce_date(Date responce_date) {\n+\t\tthis.responce_date = responce_date;\n+\t}\n+\n+\n+\tpublic String getResponce() {\n+\t\treturn responce;\n+\t}\n+\n+\n+\tpublic void setResponce(String responce) {\n+\t\tthis.responce = responce;\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn \"responces [responces_id=\" + responces_id + \", complaint_id=\" + complaint_id + \", responce_date=\"\n+\t\t\t\t+ responce_date + \", responce=\" + responce + \"]\";\n+\t}\n+\n+\t\n+\t\n+\n+}"
  }
]
