[
  {
    "sha": "c97fdfb8e0feb75729162f49f4fdbc0812b7c4ff",
    "filename": "Timer.java",
    "status": "modified",
    "additions": 28,
    "deletions": 46,
    "changes": 74,
    "blob_url": "https://github.com/NathanFleming26/P6-GroupProject/blob/562b536d2fdff5d678f72696060469f203d807d7/Timer.java",
    "raw_url": "https://github.com/NathanFleming26/P6-GroupProject/raw/562b536d2fdff5d678f72696060469f203d807d7/Timer.java",
    "contents_url": "https://api.github.com/repos/NathanFleming26/P6-GroupProject/contents/Timer.java?ref=562b536d2fdff5d678f72696060469f203d807d7",
    "patch": "@@ -1,55 +1,37 @@\n-import javax.swing.JFrame;\r\n+/*\r\n+ * To change this license header, choose License Headers in Project Properties.\r\n+ * To change this template file, choose Tools | Templates\r\n+ * and open the template in the editor.\r\n+ */\r\n+package timer;\r\n \r\n-/* Generated by Together */\r\n+import javafx.application.Application;\r\n+import javafx.fxml.FXMLLoader;\r\n+import javafx.scene.Parent;\r\n+import javafx.scene.Scene;\r\n+import javafx.stage.Stage;\r\n \r\n /**\r\n- * This represents a hypothetical clock set to produce a \"new day\" signal every midnight.\r\n- *\r\n- * In this emulation the signal can be triggered by a simple button all by itself in a JFrame.\r\n- * The uses made of this timing signal are described in the Timer use case\r\n- * diagram (hyperlinked from this class).\r\n  *\r\n- * There will only be a single instance of this class. It will maintain a current Date object,\r\n- * incremented with each new day. The interface will always show the current date.\r\n- *\r\n- * @stereotype boundary\r\n+ * @author Priscilla\r\n  */\r\n-public class Timer extends JFrame {\r\n-    /**\r\n-     * The Timer has a navigable association to the system status so that it can send the new\r\n-     * date each time that a new day starts.\r\n-     * @clientCardinality 1\r\n-     * @supplierCardinality 1\r\n-     * @label It's a new day\r\n-     * @directed*/\r\n-    private System_status lnkSystem_status;\r\n-\r\n-    /**\r\n-     * The Timer has a navigable association to the permit list so that it can send the new\r\n-     * date each time that a new day starts.\r\n-     * @clientCardinality 1\r\n-     * @supplierCardinality 1\r\n-     * @label It's a new day\r\n-     * @directed\r\n-     */\r\n-    private Permit_list lnkPermit_list;\r\n+public class Timer extends Application {\r\n+    \r\n+    @Override\r\n+    public void start(Stage stage) throws Exception {\r\n+        Parent root = FXMLLoader.load(getClass().getResource(\"timerfrontend.fxml\"));\r\n+        \r\n+        Scene scene = new Scene(root);\r\n+        \r\n+        stage.setScene(scene);\r\n+        stage.show();\r\n+    }\r\n \r\n     /**\r\n-     * This attribute holds today's date.\r\n-     *\r\n-     * It is incremented every time a midnight \"tick\" occurs (by a click on the button in\r\n-     * the visible interface).\r\n-     *\r\n-     * The date is sent to the System_status every time that a tick occurs, so that it can\r\n-     * keep an up-to-date note of the date (for example for attaching to each entry in the log).\r\n-     *\r\n-     * The date is also sent to the Permit_list every time that a tick occurs so that tidying\r\n-     * up actions on the permits can be carried out - for example automatically cancelling expired permits.\r\n-     * @supplierCardinality 1\r\n-     * @clientCardinality 1\r\n-     * @link aggregation\r\n-     * @label Contains\r\n-     * @directed\r\n+     * @param args the command line arguments\r\n      */\r\n-    private Date today;\r\n+    public static void main(String[] args) {\r\n+        launch(args);\r\n+    }\r\n+    \r\n }\r"
  },
  {
    "sha": "cacc5d779570567eb87e635fe6af9cf8653b5e38",
    "filename": "timerfrontend.fxml",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/NathanFleming26/P6-GroupProject/blob/562b536d2fdff5d678f72696060469f203d807d7/timerfrontend.fxml",
    "raw_url": "https://github.com/NathanFleming26/P6-GroupProject/raw/562b536d2fdff5d678f72696060469f203d807d7/timerfrontend.fxml",
    "contents_url": "https://api.github.com/repos/NathanFleming26/P6-GroupProject/contents/timerfrontend.fxml?ref=562b536d2fdff5d678f72696060469f203d807d7",
    "patch": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.Label?>\n+<?import javafx.scene.layout.AnchorPane?>\n+\n+<AnchorPane id=\"AnchorPane\" prefHeight=\"200\" prefWidth=\"320\" xmlns=\"http://javafx.com/javafx/15.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"timer1.timerfrontendController\">\n+    <children>\n+      <Button layoutX=\"193.0\" layoutY=\"70.0\" mnemonicParsing=\"false\" onAction=\"#BE\" prefHeight=\"55.0\" prefWidth=\"66.0\" text=\"Update\" />\n+      <Label fx:id=\"label2\" layoutX=\"74.0\" layoutY=\"96.0\" />\n+      <Label layoutX=\"40.0\" layoutY=\"96.0\" text=\"Date:\" />\n+    </children>\n+</AnchorPane>"
  },
  {
    "sha": "95d8cb4ce58ffc88b75c02fa64869c0b15e0eee5",
    "filename": "timerfrontendController.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/NathanFleming26/P6-GroupProject/blob/562b536d2fdff5d678f72696060469f203d807d7/timerfrontendController.java",
    "raw_url": "https://github.com/NathanFleming26/P6-GroupProject/raw/562b536d2fdff5d678f72696060469f203d807d7/timerfrontendController.java",
    "contents_url": "https://api.github.com/repos/NathanFleming26/P6-GroupProject/contents/timerfrontendController.java?ref=562b536d2fdff5d678f72696060469f203d807d7",
    "patch": "@@ -0,0 +1,54 @@\n+/*\n+ * To change this license header, choose License Headers in Project Properties.\n+ * To change this template file, choose Tools | Templates\n+ * and open the template in the editor.\n+ */\n+\n+package timer;\n+\n+import java.net.URL;\n+import java.util.ResourceBundle;\n+import javafx.event.ActionEvent;\n+import javafx.fxml.FXML;\n+import javafx.fxml.Initializable;\n+import javafx.scene.control.Label;\n+\n+/**\n+ *  @FXML\n+    private Label label;\n+    @FXML\n+    private void handleButtonAction(ActionEvent event) {\n+        System.out.println(\"You clicked me!\");\n+        label.setText(\"Hello World!\");\n+    }\n+ */\n+\n+public class timerfrontendController implements Initializable {\n+    \n+    int dayNumber;\n+    \n+    @Override\n+    public void initialize(URL url, ResourceBundle rb) {\n+        // TODO\n+    }   \n+\n+    @FXML\n+    private Label label2;\n+    @FXML    \n+    private void BE (ActionEvent e)\n+    {\n+        \n+   if(dayNumber<365)\n+   {\n+       dayNumber++;\n+       label2.setText(\"dayNumber\");\n+   }\n+   else\n+   {\n+       dayNumber=1;\n+       label2.setText(\"dayNumber\");\n+   }\n+    \n+    }\n+\n+}"
  }
]
