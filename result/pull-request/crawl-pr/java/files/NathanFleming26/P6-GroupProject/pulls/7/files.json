[
  {
    "sha": "111309c4c912bc2326b82a691bda705fd68ce1c7",
    "filename": "CampusSecurityUI.fxml",
    "status": "added",
    "additions": 65,
    "deletions": 0,
    "changes": 65,
    "blob_url": "https://github.com/NathanFleming26/P6-GroupProject/blob/56c61d9e671efa3e3d534909e443ef160e8d7a8b/CampusSecurityUI.fxml",
    "raw_url": "https://github.com/NathanFleming26/P6-GroupProject/raw/56c61d9e671efa3e3d534909e443ef160e8d7a8b/CampusSecurityUI.fxml",
    "contents_url": "https://api.github.com/repos/NathanFleming26/P6-GroupProject/contents/CampusSecurityUI.fxml?ref=56c61d9e671efa3e3d534909e443ef160e8d7a8b",
    "patch": "@@ -0,0 +1,65 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<?import javafx.scene.control.Button?>\n+<?import javafx.scene.control.Label?>\n+<?import javafx.scene.control.Tab?>\n+<?import javafx.scene.control.TabPane?>\n+<?import javafx.scene.control.TextArea?>\n+<?import javafx.scene.control.TextField?>\n+<?import javafx.scene.layout.AnchorPane?>\n+<?import javafx.scene.text.Font?>\n+\n+<TabPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"400.0\" prefWidth=\"600.0\" tabClosingPolicy=\"UNAVAILABLE\" xmlns=\"http://javafx.com/javafx/15.0.1\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"application.CampusSecurityUIController\">\n+  <tabs>\n+    <Tab closable=\"false\" text=\"Barrier Controls\">\n+      <content>\n+        <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"180.0\" prefWidth=\"200.0\">\n+               <children>\n+                  <Button fx:id=\"P1btn_raiseBarrier\" layoutX=\"208.0\" layoutY=\"163.0\" mnemonicParsing=\"false\" onAction=\"#raiseBarrier\" prefHeight=\"44.0\" prefWidth=\"184.0\" text=\"Raise Barrier\">\n+                     <font>\n+                        <Font size=\"20.0\" />\n+                     </font>\n+                  </Button>\n+                  <Button fx:id=\"P1btn_lowerBarrier\" layoutX=\"208.0\" layoutY=\"225.0\" mnemonicParsing=\"false\" onAction=\"#lowerBarrier\" prefHeight=\"44.0\" prefWidth=\"185.0\" text=\"Lower Barrier\">\n+                     <font>\n+                        <Font size=\"20.0\" />\n+                     </font>\n+                  </Button>\n+                  <Label fx:id=\"P1lbl_barrierStatus\" layoutX=\"208.0\" layoutY=\"121.0\" text=\"Barrier Status:\" />\n+                  <Label fx:id=\"P1lbl_dynamicBarrierStatus\" layoutX=\"303.0\" layoutY=\"114.0\" prefHeight=\"30.0\" prefWidth=\"90.0\">\n+                     <font>\n+                        <Font size=\"20.0\" />\n+                     </font>\n+                  </Label>\n+               </children></AnchorPane>\n+      </content>\n+    </Tab>\n+    <Tab closable=\"false\" text=\"Vehicle Warnings\">\n+      <content>\n+        <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"180.0\" prefWidth=\"200.0\">\n+               <children>\n+                  <Label fx:id=\"P2lbl_enterReg\" layoutX=\"253.0\" layoutY=\"109.0\" text=\"Enter Registration\" />\n+                  <TextField fx:id=\"P2txt_vehicleReg\" alignment=\"CENTER\" layoutX=\"220.0\" layoutY=\"138.0\" prefHeight=\"26.0\" prefWidth=\"161.0\" promptText=\"Vehicle Registration\" />\n+                  <Button fx:id=\"P2btn_issueWarning\" layoutX=\"220.0\" layoutY=\"177.0\" mnemonicParsing=\"false\" onAction=\"#issueWarning\" text=\"Isssue Warning\">\n+                     <font>\n+                        <Font size=\"20.0\" />\n+                     </font>\n+                  </Button>\n+               </children></AnchorPane>\n+      </content>\n+    </Tab>\n+    <Tab closable=\"false\" text=\"Barrier Status\">\n+      <content>\n+        <AnchorPane minHeight=\"0.0\" minWidth=\"0.0\" prefHeight=\"180.0\" prefWidth=\"200.0\">\n+               <children>\n+                  <Label fx:id=\"P3lbl_barrierLog\" layoutX=\"252.0\" layoutY=\"14.0\" text=\"Barrier Log\">\n+                     <font>\n+                        <Font size=\"20.0\" />\n+                     </font>\n+                  </Label>\n+                  <TextArea fx:id=\"P3txtA_barrierLog\" layoutX=\"33.0\" layoutY=\"85.0\" prefHeight=\"200.0\" prefWidth=\"527.0\" />\n+               </children></AnchorPane>\n+      </content>\n+    </Tab>\n+  </tabs>\n+</TabPane>"
  },
  {
    "sha": "adbfc8f0e253273a73cf8816db1fe1a163fe2d00",
    "filename": "CampusSecurityUIController.java",
    "status": "added",
    "additions": 168,
    "deletions": 0,
    "changes": 168,
    "blob_url": "https://github.com/NathanFleming26/P6-GroupProject/blob/56c61d9e671efa3e3d534909e443ef160e8d7a8b/CampusSecurityUIController.java",
    "raw_url": "https://github.com/NathanFleming26/P6-GroupProject/raw/56c61d9e671efa3e3d534909e443ef160e8d7a8b/CampusSecurityUIController.java",
    "contents_url": "https://api.github.com/repos/NathanFleming26/P6-GroupProject/contents/CampusSecurityUIController.java?ref=56c61d9e671efa3e3d534909e443ef160e8d7a8b",
    "patch": "@@ -0,0 +1,168 @@\n+/*\r\n+ * To change this license header, choose License Headers in Project Properties.\r\n+ * To change this template file, choose Tools | Templates\r\n+ * and open the template in the editor.\r\n+ */\r\n+package application;\r\n+\r\n+import java.net.URL;\r\n+import java.util.ResourceBundle;\r\n+import javafx.event.ActionEvent;\r\n+import javafx.fxml.FXML;\r\n+import javafx.fxml.Initializable;\r\n+import javafx.scene.control.Alert;\r\n+import javafx.scene.control.Alert.AlertType;\r\n+import javafx.scene.control.Button;\r\n+import javafx.scene.control.Label;\r\n+import javafx.scene.control.TableView;\r\n+import javafx.scene.control.TextArea;\r\n+import javafx.scene.control.TextField;\r\n+import javafx.scene.paint.Color;\r\n+\r\n+/*\r\n+ * @author Cameron Savoury: cas00235\r\n+ */\r\n+public class CampusSecurityUIController implements Initializable \r\n+{\r\n+    //<editor-fold defaultstate=\"collapsed\" desc=\"Class Instance Variables\">\r\n+\r\n+    //Class Instance Variables\r\n+    private Boolean barrierRaised;\r\n+    \r\n+    RawDataSanitation RDS = new RawDataSanitation();\r\n+    \r\n+    System_status systStatus = new System_status();\r\n+    \r\n+    Alert a;\r\n+    \r\n+//</editor-fold>\r\n+    \r\n+    //<editor-fold defaultstate=\"collapsed\" desc=\"Declare Elements\">\r\n+    \r\n+    //<editor-fold defaultstate=\"collapsed\" desc=\"Pane 1 Elements\">\r\n+    //Pane 1 Elements\r\n+        @FXML\r\n+        private Button P1btn_raiseBarrier;\r\n+\r\n+        @FXML\r\n+        private Button P1btn_lowerBarrier;\r\n+\r\n+        @FXML\r\n+        private Label P1lbl_barrierStatus;\r\n+        \r\n+        @FXML\r\n+        private Label P1lbl_dynamicBarrierStatus;\r\n+    //</editor-fold>\r\n+    \r\n+    //<editor-fold defaultstate=\"collapsed\" desc=\"Pane 2 Elements\">\r\n+        //Pane 2 Elements\r\n+        @FXML\r\n+        private Button P2btn_issueWarning;\r\n+        \r\n+        @FXML\r\n+        private Label P2lbl_enterReg;\r\n+        \r\n+        @FXML\r\n+        private TextField P2txt_vehicleReg;\r\n+        //</editor-fold>\r\n+    \r\n+    //<editor-fold defaultstate=\"collapsed\" desc=\"Pane 3 Elements\">\r\n+        //Pane 3 Elements\r\n+        @FXML\r\n+        private Label P3lbl_barrierLog;\r\n+        \r\n+        @FXML\r\n+        private TextArea P3txtA_barrierLog;\r\n+        //</editor-fold>\r\n+    \r\n+//</editor-fold>\r\n+    \r\n+    //<editor-fold defaultstate=\"collapsed\" desc=\"Barrier Control Methods\">\r\n+    @FXML\r\n+    private void raiseBarrier (ActionEvent e)\r\n+    {\r\n+        barrierRaised = true;\r\n+        if(systStatus.setSystemStaus(barrierRaised))\r\n+        {\r\n+            System.out.println(\"Barrier Raised\");\r\n+            P1lbl_dynamicBarrierStatus.setTextFill(Color.GREEN);\r\n+            P1lbl_dynamicBarrierStatus.setText(\"RAISED\");  \r\n+        }\r\n+        else\r\n+        {\r\n+            System.out.println(\"Error raising barrier\");\r\n+            return;\r\n+        }\r\n+    }//raiseBarrier\r\n+    \r\n+    @FXML\r\n+    private void lowerBarrier (ActionEvent e)\r\n+    {\r\n+        barrierRaised = false;\r\n+        if(!systStatus.setSystemStaus(barrierRaised))\r\n+        {\r\n+            System.out.println(\"Barrier Lowered\");\r\n+            P1lbl_dynamicBarrierStatus.setTextFill(Color.RED);\r\n+            P1lbl_dynamicBarrierStatus.setText(\"LOWERED\");  \r\n+        }\r\n+        else\r\n+        {\r\n+            System.out.println(\"Error lowering barrier\");\r\n+            return;\r\n+        }\r\n+    }//lowerBarrier\r\n+//</editor-fold>\r\n+    \r\n+    //<editor-fold defaultstate=\"collapsed\" desc=\"Issue Warning\">\r\n+    @FXML\r\n+    private String issueWarning()\r\n+    {\r\n+        //get registration from textField\r\n+        String vehicleReg = P2txt_vehicleReg.getText();\r\n+\r\n+        if (!RDS.isValidRegistration(vehicleReg)) \r\n+        {\r\n+            // Pop error\r\n+            a.setAlertType(AlertType.ERROR);\r\n+            a.setHeaderText(\"Invalid UK Car Registration\");\r\n+            a.setTitle(\"Error with car registration field\");\r\n+            a.setContentText(\"Please enter a vaild UK car registration!\");\r\n+            a.show();\r\n+            \r\n+            P2txt_vehicleReg.clear();\r\n+            return null;\r\n+        }\r\n+        else\r\n+        {\r\n+            a.setAlertType(AlertType.INFORMATION);\r\n+            a.setHeaderText(\"Warning Confirmed\");\r\n+            a.setTitle(\"Warning Confirmation\");\r\n+            a.setContentText(\"Warning Issued for: \" + vehicleReg);\r\n+            a.show(); \r\n+            P2txt_vehicleReg.clear();\r\n+        return vehicleReg;\r\n+        }\r\n+    }\r\n+    //</editor-fold>\r\n+    \r\n+    //<editor-fold defaultstate=\"collapsed\" desc=\"Log Change\">\r\n+    @FXML\r\n+    private void logChange()\r\n+    {\r\n+        systStatus.addToLog(barrierRaised);\r\n+        P3txtA_barrierLog.clear();\r\n+        P3txtA_barrierLog.insertText(0, systStatus.getLog);\r\n+    }\r\n+//</editor-fold>\r\n+    \r\n+    @Override\r\n+    public void initialize(URL url, ResourceBundle rb) \r\n+    {\r\n+        a = new Alert(AlertType.NONE);\r\n+        \r\n+        //Set All Labels to their default values\r\n+        P1lbl_dynamicBarrierStatus.setTextFill(Color.BLACK);\r\n+        P1lbl_dynamicBarrierStatus.setText(\"\");\r\n+    }//Initialize \r\n+    \r\n+}//End of Class\r"
  },
  {
    "sha": "df3dad53a404b31c3c25c682d75172383cbae6e4",
    "filename": "Campus_security.java",
    "status": "modified",
    "additions": 27,
    "deletions": 38,
    "changes": 65,
    "blob_url": "https://github.com/NathanFleming26/P6-GroupProject/blob/56c61d9e671efa3e3d534909e443ef160e8d7a8b/Campus_security.java",
    "raw_url": "https://github.com/NathanFleming26/P6-GroupProject/raw/56c61d9e671efa3e3d534909e443ef160e8d7a8b/Campus_security.java",
    "contents_url": "https://api.github.com/repos/NathanFleming26/P6-GroupProject/contents/Campus_security.java?ref=56c61d9e671efa3e3d534909e443ef160e8d7a8b",
    "patch": "@@ -1,42 +1,31 @@\n-import java.util.Observer;\r\n+package application;\r\n \r\n-import javax.swing.JFrame;\r\n+import javafx.application.Application;\r\n+import static javafx.application.Application.launch;\r\n+import javafx.fxml.FXMLLoader;\r\n+import javafx.scene.Parent;\r\n+import javafx.scene.Scene;\r\n+import javafx.stage.Stage;\r\n \r\n-/* Generated by Together */\r\n+//@author Cameron Savoury\r\n \r\n-/**\r\n- * The Campus security staff actually activate and deactivate the barriers, enter warnings for\r\n- * vehicles breaching the parking regulations and monitor the state of the barrier system.\r\n- * This class represents the interactive interface to these functions.  Information about these\r\n- * functions is in the Campus security use case diagram (hyperlinked from this class).\r\n- * The interface comprises one screen with the various functions present on it, all on view at\r\n- * once since there aren't many.\r\n- * There could be several instances of this class: one in the central security office, and one\r\n- * at each entrance to the University (in a staffed booth).\r\n- * The class implements Observer, and observes the system status so that it can keep the displayed\r\n- * information up to date (current date, barriers active or not, log of entries through the barriers).\r\n- * @stereotype boundary\r\n- */\r\n-public class Campus_security extends JFrame implements Observer {\r\n-    /**\r\n-     * Each instance of Campus_security has a navigable association to the vehicle list so that\r\n-     * warnings can be recorded on the permit for vehicles that breach parking regulations.\r\n-     * Note that this process goes via the vehicle list as the only information available about such a\r\n-     * vehicle is its registration number.\r\n-     * @clientCardinality 1..*\r\n-     * @supplierCardinality 1\r\n-     * @label Record warning\r\n-     * @directed\r\n-     */\r\n-    private Vehicle_list lnkVehicle_list;\r\n-\r\n-    /**\r\n-     * Each instance of Campus_security has a navigable association to the system status so that it\r\n-     * can both find out status information about the system, and send controlling messages to the\r\n-     * system status (to activate/deactivate the system).\r\n-     * @clientCardinality 1..*\r\n-     * @supplierCardinality 1\r\n-     * @label Control/monitor\r\n-     * @directed*/\r\n-    private System_status lnkSystem_status;\r\n+public class Campus_security extends Application \r\n+    {\r\n+    \r\n+    @Override\r\n+    public void start(Stage stage) throws Exception \r\n+    {\r\n+        Parent root = FXMLLoader.load(getClass().getResource(\"CampusSecurityUI.fxml\"));\r\n+        \r\n+        Scene scene = new Scene(root);\r\n+        \r\n+        stage.setScene(scene);\r\n+        stage.show();\r\n+    }\r\n+    \r\n+    public static void main(String[] args) \r\n+        {\r\n+            launch(args);\r\n+        }\r\n+    \r\n }\r"
  },
  {
    "sha": "62c24d8c9e52c13c8e0b59b4f04ccc6e53d4dbdf",
    "filename": "RawDataSanitation.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/NathanFleming26/P6-GroupProject/blob/56c61d9e671efa3e3d534909e443ef160e8d7a8b/RawDataSanitation.java",
    "raw_url": "https://github.com/NathanFleming26/P6-GroupProject/raw/56c61d9e671efa3e3d534909e443ef160e8d7a8b/RawDataSanitation.java",
    "contents_url": "https://api.github.com/repos/NathanFleming26/P6-GroupProject/contents/RawDataSanitation.java?ref=56c61d9e671efa3e3d534909e443ef160e8d7a8b",
    "patch": "@@ -0,0 +1,18 @@\n+package application;\r\n+\r\n+//This class will ensure text entered by the user is suitable to be stored in the system\r\n+public class RawDataSanitation {\r\n+\r\n+\tpublic boolean isValidName(String name) {\r\n+\r\n+\t\treturn (name.matches(\"[A-Z][a-z]{1,20}\"));\r\n+\r\n+\t}\r\n+\r\n+\tpublic boolean isValidRegistration(String reg) {\r\n+\r\n+\t\treturn (reg.matches(\"(^[A-Z]{2}[0-9]{2} [A-Z]{3}$)|(^[A-Z][0-9]{1,3} [A-Z]{3}$)|(^[A-Z]{3} [0-9]{1,3}[A-Z]$)|(^[0-9]{1,4} [A-Z]{1,2}$)|(^[0-9]{1,3} [A-Z]{1,3}$)|(^[A-Z]{1,2} [0-9]{1,4}$)|(^[A-Z]{1,3} [0-9]{1,3}$)\"));\r\n+\r\n+\t}\r\n+\r\n+}\r"
  },
  {
    "sha": "160c3f1db27ed3189bd28f1f1b7b7055e178f8bc",
    "filename": "System_status.java",
    "status": "modified",
    "additions": 72,
    "deletions": 4,
    "changes": 76,
    "blob_url": "https://github.com/NathanFleming26/P6-GroupProject/blob/56c61d9e671efa3e3d534909e443ef160e8d7a8b/System_status.java",
    "raw_url": "https://github.com/NathanFleming26/P6-GroupProject/raw/56c61d9e671efa3e3d534909e443ef160e8d7a8b/System_status.java",
    "contents_url": "https://api.github.com/repos/NathanFleming26/P6-GroupProject/contents/System_status.java?ref=56c61d9e671efa3e3d534909e443ef160e8d7a8b",
    "patch": "@@ -1,4 +1,8 @@\n+import java.time.LocalDateTime;\r\n+import java.time.format.DateTimeFormatter;\r\n+import java.util.LinkedList;\r\n import java.util.Observable;\r\n+import java.util.Queue;\r\n \r\n /* Generated by Together */\r\n \r\n@@ -12,19 +16,82 @@\n  *\r\n  * There will only be one instance of this class.\r\n  */\r\n-public class System_status extends Observable {\r\n+public class System_status extends Observable \r\n+{\r\n+    //Date Variables to be used in later methods\r\n+    //Sets up a formatted version of the current system date and time\r\n+    DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\");\r\n+    LocalDateTime myDateObj = LocalDateTime.now();\r\n+    \r\n     /**\r\n      * This attribute is the central indication of the activity status of the whole barrier\r\n      * system. It is set/unset by messages from instances of the Campus security class.\r\n      */\r\n-    private boolean systemActive = false;\r\n+    private boolean systemActive;\r\n+    \r\n+    //Method to change the systemActive boolean to the value passed in the method call from the campus security class\r\n+    private boolean setSystemStaus(boolean changeTo)\r\n+    {\r\n+        systemActive = changeTo;\r\n+        return systemActive;\r\n+    }\r\n \r\n     /**\r\n-     * An array of strings showing recent attempts to pass through the barriers (both successful\r\n+     * A Queue of strings showing recent attempts to pass through the barriers (both successful\r\n      * and unsuccessful). The last 20 should be enough? These are intended for display on\r\n      * the Campus_security screens.\r\n      */\r\n-    private String[] log;\r\n+    private Queue<String> log = new LinkedList<String>();\r\n+    \r\n+    private void addToLog(boolean barrierStatus)\r\n+    {\r\n+        //Initialisation of variables to be used\r\n+        String barrierStatusStr = \"\";\r\n+        String fullEntry = \"\";\r\n+        String formattedDate = myDateObj.format(myFormatObj);\r\n+        \r\n+        //Format based on status of the barrier\r\n+        if(barrierStatus && systemActive) //If barrier is already raised\r\n+        {\r\n+            fullEntry = \"Attempt to change barrier status to \" + barrierStatusStr + \"  was made on \" + formattedDate + \" however the barrier was already \" + barrierStatusStr;   \r\n+        }\r\n+        else if (!barrierStatus && !systemActive) //If barrier is already lowered\r\n+        {\r\n+            fullEntry = \"Attempt to change barrier status to \" + barrierStatusStr + \"  was made on \" + formattedDate + \" however the barrier was already \" + barrierStatusStr; \r\n+        }\r\n+        else if(barrierStatus && !systemActive) //If barrier is already lowered but to be raised\r\n+        {\r\n+            barrierStatusStr = \"Raised\";\r\n+            fullEntry = \"Barrier was \" + barrierStatusStr + \" on \" + formattedDate;\r\n+        }\r\n+        else if(!barrierStatus && systemActive) //If barrier is already raised but to be lowered\r\n+        {\r\n+            \r\n+            barrierStatusStr = \"Lowered\";\r\n+            fullEntry = \"Barrier was \" + barrierStatusStr + \" on \" + formattedDate;\r\n+        }\r\n+        else //Error\r\n+        {\r\n+            System.out.println(\"Error adding to log\");\r\n+            return;\r\n+        }\r\n+\r\n+        if(log.size()<20) //To keep the list only storing the latest 20 entries\r\n+        {\r\n+        log.add(fullEntry);\r\n+        }\r\n+        else\r\n+        {\r\n+            log.remove(); //remove the oldest entry (at the head)\r\n+            log.add(fullEntry); //and then iterate the list\r\n+        }\r\n+    }\r\n+    \r\n+    //Returns the log to be printed in the campus security class\r\n+    private String getLog()\r\n+    {\r\n+        return log.toString();\r\n+    }\r\n \r\n     /**\r\n      * This attribute is kept up to date by the Timer.\r\n@@ -35,4 +102,5 @@\n      * @directed\r\n      */\r\n     private Date today;\r\n+    //TODO\r\n }\r"
  }
]
