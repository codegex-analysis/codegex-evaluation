[
  {
    "sha": "b50c13cf03d422810211d69c24e88f8efed75457",
    "filename": "src/hw1/Main.java",
    "status": "modified",
    "additions": 56,
    "deletions": 1,
    "changes": 57,
    "blob_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/blob/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/Main.java",
    "raw_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/raw/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/Main.java",
    "contents_url": "https://api.github.com/repos/Zaytsev-Andrey/java_3_hw_02032021/contents/src/hw1/Main.java?ref=5e56b88c7bbcca06244d9efdae8283fcf33cd069",
    "patch": "@@ -1,7 +1,62 @@\n package hw1;\n \n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n public class Main {\n     public static void main(String[] args) {\n-        \n+        System.out.println(\"Задание 1\");\n+        Integer[] intArray = {1, 2, 3, 4, 5};\n+        String[] strArray = {\"a\", \"b\", \"c\", \"d\", \"e\"};\n+\n+        int firstIndex = 1;\n+        int secondIndex = 4;\n+\n+        System.out.printf(\"Исходный массив типа %s: %s\\n\", intArray.getClass().getSimpleName(), Arrays.toString(intArray));\n+        swapElements(intArray, firstIndex, secondIndex);\n+        System.out.printf(\"Поменяны местами элемент %s с элементом %s: %s\\n\", firstIndex, secondIndex, Arrays.toString(intArray));\n+\n+        System.out.printf(\"Исходный массив типа %s: %s\\n\", strArray.getClass().getSimpleName(), Arrays.toString(strArray));\n+        swapElements(strArray, firstIndex, secondIndex);\n+        System.out.printf(\"Поменяны местами элемент %s с элементом %s: %s\\n\", firstIndex, secondIndex, Arrays.toString(strArray));\n+\n+\n+        System.out.println();\n+        System.out.println(\"Задание 2\");\n+        System.out.printf(\"ArrayList из массива типа %s: [ \", intArray.getClass().getSimpleName());\n+        asArrayList(intArray).forEach(e -> System.out.printf(\"{%s}:%s \", e.getClass().getSimpleName(), e));\n+        System.out.println(\"]\");\n+        System.out.printf(\"ArrayList из массива типа %s: [ \", strArray.getClass().getSimpleName());\n+        asArrayList(strArray).forEach(e -> System.out.printf(\"{%s}:%s \", e.getClass().getSimpleName(), e));\n+        System.out.println(\"]\");\n+    }\n+\n+    /**\n+     * Меняет местами элемент с индексом firstIndex с элементом с индексом secondIndex для массива любого ссылочного типа\n+     * @param array массив любого ссылочного типа\n+     * @param firstIndex индекс первого элемента\n+     * @param secondIndex индекс второго элемента\n+     * @param <T> любой ссылочный тип\n+     */\n+    private static <T> void swapElements(T[] array, int firstIndex, int secondIndex) {\n+        if (firstIndex >= 0 && firstIndex < array.length && secondIndex >=0 && secondIndex < array.length) {\n+            T temp = array[firstIndex];\n+            array[firstIndex] = array[secondIndex];\n+            array[secondIndex] = temp;\n+        } else {\n+            throw new IllegalArgumentException(\"Элемент(ы) с переданными индексами не существуют\");\n+        }\n+    }\n+\n+    /**\n+     * Преобразует массив в ArrayList\n+     * @param array исходный массив\n+     * @param <E> тип элементов массива и ArrayList\n+     * @return ArrayList<E>\n+     */\n+    private static <E> ArrayList<E> asArrayList(E[] array) {\n+        return Arrays.stream(array).collect(Collectors.toCollection(ArrayList::new));\n     }\n }"
  },
  {
    "sha": "33bc9b66fb0fa39206d61894dd568c6e73219ea6",
    "filename": "src/hw1/boxes/Apple.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/blob/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/boxes/Apple.java",
    "raw_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/raw/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/boxes/Apple.java",
    "contents_url": "https://api.github.com/repos/Zaytsev-Andrey/java_3_hw_02032021/contents/src/hw1/boxes/Apple.java?ref=5e56b88c7bbcca06244d9efdae8283fcf33cd069",
    "patch": "@@ -0,0 +1,7 @@\n+package hw1.boxes;\n+\n+public class Apple extends Fruit {\n+    public Apple() {\n+        super(1.0f);\n+    }\n+}"
  },
  {
    "sha": "accee804e371385fa4440a0f689fd5057c0f054c",
    "filename": "src/hw1/boxes/Box.java",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/blob/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/boxes/Box.java",
    "raw_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/raw/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/boxes/Box.java",
    "contents_url": "https://api.github.com/repos/Zaytsev-Andrey/java_3_hw_02032021/contents/src/hw1/boxes/Box.java?ref=5e56b88c7bbcca06244d9efdae8283fcf33cd069",
    "patch": "@@ -0,0 +1,32 @@\n+package hw1.boxes;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class Box<T extends Fruit> {\n+    private List<T> storage;\n+\n+    public Box() {\n+        this.storage = new ArrayList<>();\n+    }\n+\n+    public void add(T fruit) {\n+        storage.add(fruit);\n+    }\n+\n+    public float getWeight() {\n+        return storage.stream()\n+                .map(Fruit::getWeight)\n+                .reduce(0.0f, Float::sum);\n+    }\n+\n+    public boolean compare(Box<?> otherBox) {\n+        return Math.abs(this.getWeight() - otherBox.getWeight()) < 0.001f;\n+    }\n+\n+    public void moveOtherBox(Box<T> otherBox) {\n+        while (!storage.isEmpty()) {\n+            otherBox.add(storage.remove(0));\n+        }\n+    }\n+}"
  },
  {
    "sha": "8fe71514d24f876deae28ab663ac4b46ef0aed6a",
    "filename": "src/hw1/boxes/Fruit.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/blob/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/boxes/Fruit.java",
    "raw_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/raw/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/boxes/Fruit.java",
    "contents_url": "https://api.github.com/repos/Zaytsev-Andrey/java_3_hw_02032021/contents/src/hw1/boxes/Fruit.java?ref=5e56b88c7bbcca06244d9efdae8283fcf33cd069",
    "patch": "@@ -0,0 +1,13 @@\n+package hw1.boxes;\n+\n+public abstract class Fruit {\n+    private float weight;\n+\n+    public Fruit(float weight) {\n+        this.weight = weight;\n+    }\n+\n+    public float getWeight() {\n+        return weight;\n+    }\n+}"
  },
  {
    "sha": "817345282d50a0788e11f7ad919c67278392194c",
    "filename": "src/hw1/boxes/Orange.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/blob/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/boxes/Orange.java",
    "raw_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/raw/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/boxes/Orange.java",
    "contents_url": "https://api.github.com/repos/Zaytsev-Andrey/java_3_hw_02032021/contents/src/hw1/boxes/Orange.java?ref=5e56b88c7bbcca06244d9efdae8283fcf33cd069",
    "patch": "@@ -0,0 +1,7 @@\n+package hw1.boxes;\n+\n+public class Orange extends Fruit {\n+    public Orange() {\n+        super(1.5f);\n+    }\n+}"
  },
  {
    "sha": "249122966e22937023220736a096a8f07a70e21c",
    "filename": "src/hw1/boxes/boxApp.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/blob/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/boxes/boxApp.java",
    "raw_url": "https://github.com/Zaytsev-Andrey/java_3_hw_02032021/raw/5e56b88c7bbcca06244d9efdae8283fcf33cd069/src/hw1/boxes/boxApp.java",
    "contents_url": "https://api.github.com/repos/Zaytsev-Andrey/java_3_hw_02032021/contents/src/hw1/boxes/boxApp.java?ref=5e56b88c7bbcca06244d9efdae8283fcf33cd069",
    "patch": "@@ -0,0 +1,55 @@\n+package hw1.boxes;\n+\n+public class boxApp {\n+    public static void main(String[] args) {\n+        System.out.println(\"Задание 3\");\n+        // 1-я коробка из 6 яблок\n+        Box<Apple> firstBox = createAppleBox(6);\n+        // 2-я коробка из 10 яблок\n+        Box<Apple> secondBox = createAppleBox(10);\n+        // 3-я коробка из 4 апельсинов\n+        Box<Orange> thirdBox = createOrangeBox(4);\n+        // 4-я пустая коробка\n+        Box<Orange> fourthBox = new Box<>();\n+\n+        showWeightOfBox(firstBox, secondBox, thirdBox, fourthBox);\n+\n+        System.out.printf(\"Коробка № 1 равна коробке № 2? - %b\\n\", firstBox.compare(secondBox));\n+        System.out.printf(\"Коробка № 1 равна коробке № 3? - %b\\n\", firstBox.compare(thirdBox));\n+        System.out.printf(\"Коробка № 2 равна коробке № 3? - %b\\n\", secondBox.compare(thirdBox));\n+        System.out.println(\"\");\n+\n+        System.out.println(\"Переместим содержимое коробки № 1 в коробку № 2\");\n+        firstBox.moveOtherBox(secondBox);\n+\n+        showWeightOfBox(firstBox, secondBox);\n+    }\n+\n+    private static Box<Apple> createAppleBox(int count) {\n+        Box<Apple> appleBox = new Box<>();\n+\n+        for (int i = 0; i < count; i++) {\n+            appleBox.add(new Apple());\n+        }\n+\n+        return appleBox;\n+    }\n+\n+    private static Box<Orange> createOrangeBox(int count) {\n+        Box<Orange> orangeBox = new Box<>();\n+\n+        for (int i = 0; i < count; i++) {\n+            orangeBox.add(new Orange());\n+        }\n+\n+        return orangeBox;\n+    }\n+\n+    private static void showWeightOfBox(Box<?>... boxes) {\n+        for (int i = 0; i < boxes.length; i++) {\n+            System.out.printf(\"Вес коробки № %d: %.3f\\n\", i + 1, boxes[i].getWeight());\n+        }\n+\n+        System.out.println(\"\");\n+    }\n+}"
  }
]
