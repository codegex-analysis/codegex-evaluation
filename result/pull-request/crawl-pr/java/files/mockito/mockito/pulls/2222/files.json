[
  {
    "sha": "5014dca91f2b6bd01e3ac8447748bacc89a6cccd",
    "filename": "src/main/java/org/mockito/internal/util/Primitives.java",
    "status": "modified",
    "additions": 32,
    "deletions": 28,
    "changes": 60,
    "blob_url": "https://github.com/mockito/mockito/blob/0dabbba9543575490cb636892afc3eec2932a1a8/src/main/java/org/mockito/internal/util/Primitives.java",
    "raw_url": "https://github.com/mockito/mockito/raw/0dabbba9543575490cb636892afc3eec2932a1a8/src/main/java/org/mockito/internal/util/Primitives.java",
    "contents_url": "https://api.github.com/repos/mockito/mockito/contents/src/main/java/org/mockito/internal/util/Primitives.java?ref=0dabbba9543575490cb636892afc3eec2932a1a8",
    "patch": "@@ -4,16 +4,15 @@\n  */\n package org.mockito.internal.util;\n \n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n \n @SuppressWarnings(\"unchecked\")\n public class Primitives {\n \n-    private static final Map<Class<?>, Class<?>> PRIMITIVE_TYPES =\n-            new HashMap<Class<?>, Class<?>>();\n-    private static final Map<Class<?>, Object> PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES =\n-            new HashMap<Class<?>, Object>();\n+    private static final Map<Class<?>, Class<?>> PRIMITIVE_TYPES;\n+    private static final Map<Class<?>, Object> PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES;\n \n     /**\n      * Returns the primitive type of the given class.\n@@ -63,33 +62,38 @@ public static boolean isAssignableFromWrapper(Class<?> valueClass, Class<?> refe\n     }\n \n     static {\n-        PRIMITIVE_TYPES.put(Boolean.class, Boolean.TYPE);\n-        PRIMITIVE_TYPES.put(Character.class, Character.TYPE);\n-        PRIMITIVE_TYPES.put(Byte.class, Byte.TYPE);\n-        PRIMITIVE_TYPES.put(Short.class, Short.TYPE);\n-        PRIMITIVE_TYPES.put(Integer.class, Integer.TYPE);\n-        PRIMITIVE_TYPES.put(Long.class, Long.TYPE);\n-        PRIMITIVE_TYPES.put(Float.class, Float.TYPE);\n-        PRIMITIVE_TYPES.put(Double.class, Double.TYPE);\n+        Map<Class<?>, Class<?>> mutablePrimitiveTypes = new HashMap<>();\n+        mutablePrimitiveTypes.put(Boolean.class, Boolean.TYPE);\n+        mutablePrimitiveTypes.put(Character.class, Character.TYPE);\n+        mutablePrimitiveTypes.put(Byte.class, Byte.TYPE);\n+        mutablePrimitiveTypes.put(Short.class, Short.TYPE);\n+        mutablePrimitiveTypes.put(Integer.class, Integer.TYPE);\n+        mutablePrimitiveTypes.put(Long.class, Long.TYPE);\n+        mutablePrimitiveTypes.put(Float.class, Float.TYPE);\n+        mutablePrimitiveTypes.put(Double.class, Double.TYPE);\n+        PRIMITIVE_TYPES = Collections.unmodifiableMap(mutablePrimitiveTypes);\n     }\n \n     static {\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Boolean.class, false);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Character.class, '\\u0000');\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Byte.class, (byte) 0);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Short.class, (short) 0);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Integer.class, 0);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Long.class, 0L);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Float.class, 0F);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(Double.class, 0D);\n+        Map<Class<?>, Object> mutablePrimitiveOrWrapperDefaultValues = new HashMap<>();\n+        mutablePrimitiveOrWrapperDefaultValues.put(Boolean.class, false);\n+        mutablePrimitiveOrWrapperDefaultValues.put(Character.class, '\\u0000');\n+        mutablePrimitiveOrWrapperDefaultValues.put(Byte.class, (byte) 0);\n+        mutablePrimitiveOrWrapperDefaultValues.put(Short.class, (short) 0);\n+        mutablePrimitiveOrWrapperDefaultValues.put(Integer.class, 0);\n+        mutablePrimitiveOrWrapperDefaultValues.put(Long.class, 0L);\n+        mutablePrimitiveOrWrapperDefaultValues.put(Float.class, 0F);\n+        mutablePrimitiveOrWrapperDefaultValues.put(Double.class, 0D);\n \n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(boolean.class, false);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(char.class, '\\u0000');\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(byte.class, (byte) 0);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(short.class, (short) 0);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(int.class, 0);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(long.class, 0L);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(float.class, 0F);\n-        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.put(double.class, 0D);\n+        mutablePrimitiveOrWrapperDefaultValues.put(boolean.class, false);\n+        mutablePrimitiveOrWrapperDefaultValues.put(char.class, '\\u0000');\n+        mutablePrimitiveOrWrapperDefaultValues.put(byte.class, (byte) 0);\n+        mutablePrimitiveOrWrapperDefaultValues.put(short.class, (short) 0);\n+        mutablePrimitiveOrWrapperDefaultValues.put(int.class, 0);\n+        mutablePrimitiveOrWrapperDefaultValues.put(long.class, 0L);\n+        mutablePrimitiveOrWrapperDefaultValues.put(float.class, 0F);\n+        mutablePrimitiveOrWrapperDefaultValues.put(double.class, 0D);\n+        PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES =\n+                Collections.unmodifiableMap(mutablePrimitiveOrWrapperDefaultValues);\n     }\n }"
  }
]
