[
  {
    "sha": "00c24e43326db638476d8e09c874bec4edb75dca",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/build.gradle",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/build.gradle",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/build.gradle?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -28,7 +28,6 @@ plugins {\n \n repositories {\n     mavenLocal()\n-    jcenter()\n     mavenCentral()\n     maven { url = \"https://maven.fabricmc.net/\" }\n     maven {\n@@ -45,6 +44,7 @@ repositories {\n             includeGroup \"mcp.mobius.waila\"\n         }\n     }\n+    maven { url \"https://maven.shedaniel.me\" }\n }\n \n dependencies {"
  },
  {
    "sha": "2d4f644bf18bbb5242d60eb3d0a8fca73f16ed7d",
    "filename": "gradle.properties",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/gradle.properties",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/gradle.properties",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/gradle.properties?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -8,19 +8,19 @@ org.gradle.jvmargs=-Xmx2G\n # Fabric Properties\n # Check these on https://modmuss50.me/fabric.html\n \n-minecraft_version=1.16.5\n-yarn_mappings=1.16.5+build.3\n-loader_version=0.11.1\n+minecraft_version=21w08b\n+yarn_mappings=21w08b+build.20\n+loader_version=0.11.2\n \n #Fabric api\n-fabric_version=0.30.0+1.16\n+fabric_version=0.31.2+1.17\n \n loom_version=0.5-SNAPSHOT\n \n # Dependencies\n-libblockattributes_version=0.8.7\n+libblockattributes_version=0.8.1700+\n tr_energy_version=0.1.0\n-rei_version=5.2.10\n+rei_version=5.10.9999\n \n #########################################################\n # Deployment                                            #"
  },
  {
    "sha": "54c58cfa1b4368e9f9169fb1a1778524ee39d804",
    "filename": "settings.gradle",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/settings.gradle",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/settings.gradle",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/settings.gradle?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -1,6 +1,5 @@\n pluginManagement {\n     repositories {\n-        jcenter()\n         maven {\n             name = \"Fabric\"\n             url = \"https://maven.fabricmc.net/\""
  },
  {
    "sha": "216f7d72a8255aa0ad83a164c260222afa426b38",
    "filename": "src/api/java/appeng/api/parts/LayerBase.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/api/java/appeng/api/parts/LayerBase.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/api/java/appeng/api/parts/LayerBase.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/api/java/appeng/api/parts/LayerBase.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -25,8 +25,10 @@\n \n import java.util.Set;\n \n+import net.minecraft.block.BlockState;\n import net.minecraft.block.entity.BlockEntity;\n import net.minecraft.block.entity.BlockEntityType;\n+import net.minecraft.util.math.BlockPos;\n import net.minecraft.util.math.Direction;\n \n import appeng.api.util.AEPartLocation;\n@@ -40,8 +42,8 @@\n public abstract class LayerBase extends BlockEntity // implements IPartHost\n {\n \n-    public LayerBase(BlockEntityType<?> tileEntityTypeIn) {\n-        super(tileEntityTypeIn);\n+    public LayerBase(BlockEntityType<?> tileEntityTypeIn, BlockPos pos, BlockState state) {\n+        super(tileEntityTypeIn, pos, state);\n         // TODO Auto-generated constructor stub\n     }\n "
  },
  {
    "sha": "75b5ff41bd76f108c30a702e1c1a3f9408b0d719",
    "filename": "src/datagen/java/appeng/data/providers/loot/BlockDropProvider.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/datagen/java/appeng/data/providers/loot/BlockDropProvider.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/datagen/java/appeng/data/providers/loot/BlockDropProvider.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/datagen/java/appeng/data/providers/loot/BlockDropProvider.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -17,17 +17,17 @@\n import net.minecraft.data.DataProvider;\n import net.minecraft.data.server.BlockLootTableGenerator;\n import net.minecraft.enchantment.Enchantments;\n-import net.minecraft.loot.ConstantLootTableRange;\n import net.minecraft.loot.LootManager;\n import net.minecraft.loot.LootPool;\n import net.minecraft.loot.LootTable;\n-import net.minecraft.loot.UniformLootTableRange;\n import net.minecraft.loot.condition.SurvivesExplosionLootCondition;\n import net.minecraft.loot.context.LootContextTypes;\n import net.minecraft.loot.entry.ItemEntry;\n import net.minecraft.loot.entry.LeafEntry;\n import net.minecraft.loot.function.ApplyBonusLootFunction;\n import net.minecraft.loot.function.SetCountLootFunction;\n+import net.minecraft.loot.provider.number.ConstantLootNumberProvider;\n+import net.minecraft.loot.provider.number.UniformLootNumberProvider;\n import net.minecraft.util.Identifier;\n import net.minecraft.util.registry.Registry;\n import net.minecraft.util.registry.RegistryKey;\n@@ -46,12 +46,12 @@\n             .put(BLOCKS.quartzOre().block(),\n                     b -> dropsWithSilkTouch(BLOCKS.quartzOre().block(), applyExplosionDecay(BLOCKS.quartzOre().block(),\n                             ItemEntry.builder(MATERIALS.certusQuartzCrystal().item())\n-                                    .apply(SetCountLootFunction.builder(UniformLootTableRange.between(1.0F, 2.0F)))\n+                                    .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1.0F, 2.0F)))\n                                     .apply(ApplyBonusLootFunction.uniformBonusCount(Enchantments.FORTUNE)))))\n             .put(BLOCKS.quartzOreCharged().block(), b -> dropsWithSilkTouch(BLOCKS.quartzOreCharged().block(),\n                     applyExplosionDecay(BLOCKS.quartzOreCharged().block(),\n                             ItemEntry.builder(MATERIALS.certusQuartzCrystalCharged().item())\n-                                    .apply(SetCountLootFunction.builder(UniformLootTableRange.between(1.0F, 2.0F)))\n+                                    .apply(SetCountLootFunction.builder(UniformLootNumberProvider.create(1.0F, 2.0F)))\n                                     .apply(ApplyBonusLootFunction.uniformBonusCount(Enchantments.FORTUNE)))))\n             .build();\n \n@@ -74,7 +74,7 @@ public void run(DataCache cache) throws IOException {\n \n     private LootTable.Builder defaultBuilder(Block block) {\n         LeafEntry.Builder<?> entry = ItemEntry.builder(block);\n-        LootPool.Builder pool = LootPool.builder().rolls(ConstantLootTableRange.create(1)).with(entry)\n+        LootPool.Builder pool = LootPool.builder().rolls(ConstantLootNumberProvider.create(1)).with(entry)\n                 .conditionally(SurvivesExplosionLootCondition.builder());\n \n         return LootTable.builder().pool(pool);"
  },
  {
    "sha": "68493253daa4f993b886d1033e751f85ee45cd48",
    "filename": "src/datagen/resources/fabric.mod.json",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/datagen/resources/fabric.mod.json",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/datagen/resources/fabric.mod.json",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/datagen/resources/fabric.mod.json?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -17,7 +17,6 @@\n   },\n   \"depends\": {\n     \"fabricloader\": \">=0.7.1\",\n-    \"fabric\": \"*\",\n-    \"minecraft\": \"1.16.x\"\n+    \"fabric\": \"*\"\n   }\n }"
  },
  {
    "sha": "112450b1af508552c25f4a820a9f70a43e0a2a0f",
    "filename": "src/main/java/appeng/block/AEBaseBlock.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/AEBaseBlock.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/AEBaseBlock.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/block/AEBaseBlock.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -22,8 +22,8 @@\n import net.fabricmc.fabric.api.tool.attribute.v1.FabricToolTags;\n import net.minecraft.block.Block;\n import net.minecraft.block.BlockState;\n+import net.minecraft.block.MapColor;\n import net.minecraft.block.Material;\n-import net.minecraft.block.MaterialColor;\n import net.minecraft.item.ItemStack;\n import net.minecraft.sound.BlockSoundGroup;\n import net.minecraft.util.Identifier;\n@@ -57,7 +57,7 @@ public static FabricBlockSettings defaultProps(Material material) {\n     /**\n      * Utility function to create block properties with some sensible defaults for AE blocks.\n      */\n-    public static FabricBlockSettings defaultProps(Material material, MaterialColor color) {\n+    public static FabricBlockSettings defaultProps(Material material, MapColor color) {\n         return FabricBlockSettings.of(material, color)\n                 // These values previousls were encoded in AEBaseBlock\n                 .strength(2.2f, 11.f).breakByTool(FabricToolTags.PICKAXES, 0)"
  },
  {
    "sha": "2c1bc34d717852712dc04bc299ce182e915dc918",
    "filename": "src/main/java/appeng/block/AEBaseTileBlock.java",
    "status": "modified",
    "additions": 16,
    "deletions": 4,
    "changes": 20,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/AEBaseTileBlock.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/AEBaseTileBlock.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/block/AEBaseTileBlock.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -20,6 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.function.BiFunction;\n import java.util.function.Supplier;\n \n import javax.annotation.Nonnull;\n@@ -31,6 +32,8 @@\n import net.minecraft.block.BlockEntityProvider;\n import net.minecraft.block.BlockState;\n import net.minecraft.block.entity.BlockEntity;\n+import net.minecraft.block.entity.BlockEntityTicker;\n+import net.minecraft.block.entity.BlockEntityType;\n import net.minecraft.entity.LivingEntity;\n import net.minecraft.entity.player.PlayerEntity;\n import net.minecraft.item.ItemStack;\n@@ -66,14 +69,14 @@\n     @Nonnull\n     private Class<T> blockEntityClass;\n     @Nonnull\n-    private Supplier<T> tileEntityFactory;\n+    private BiFunction<BlockPos, BlockState, T> tileEntityFactory;\n \n     public AEBaseTileBlock(final Settings props) {\n         super(props);\n     }\n \n     // TODO : Was this change needed?\n-    public void setTileEntity(final Class<T> tileEntityClass, Supplier<T> factory) {\n+    public void setTileEntity(final Class<T> tileEntityClass, BiFunction<BlockPos, BlockState, T> factory) {\n         this.blockEntityClass = tileEntityClass;\n         this.tileEntityFactory = factory;\n         this.setInventory(AEBaseInvBlockEntity.class.isAssignableFrom(tileEntityClass));\n@@ -102,8 +105,8 @@ public T getBlockEntity(final BlockView w, final BlockPos pos) {\n \n     @Nullable\n     @Override\n-    public BlockEntity createBlockEntity(BlockView world) {\n-        return this.tileEntityFactory.get();\n+    public BlockEntity createBlockEntity(BlockPos pos, BlockState state) {\n+        return this.tileEntityFactory.apply(pos, state);\n     }\n \n     @Override\n@@ -313,4 +316,13 @@ public void addAllAttributes(World world, BlockPos pos, BlockState state, Attrib\n         }\n     }\n \n+    @Override\n+    public <T extends BlockEntity> BlockEntityTicker<T> getTicker(World world, BlockState state,\n+            BlockEntityType<T> type) {\n+        return (world1, pos, state1, blockEntity) -> {\n+            if (blockEntity instanceof BlockEntityTicker)\n+                ((BlockEntityTicker) blockEntity).tick(world, pos, state, blockEntity);\n+        };\n+    }\n+\n }"
  },
  {
    "sha": "09afaaf9af2f15b3e6ebdb8bbe99372eb9d098a2",
    "filename": "src/main/java/appeng/block/misc/LightDetectorBlock.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/misc/LightDetectorBlock.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/misc/LightDetectorBlock.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/block/misc/LightDetectorBlock.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -48,7 +48,7 @@\n     public static final BooleanProperty ODD = BooleanProperty.of(\"odd\");\n \n     public LightDetectorBlock() {\n-        super(defaultProps(Material.SUPPORTED));\n+        super(defaultProps(Material.DECORATION));\n         this.setDefaultState(this.getDefaultState().with(Properties.FACING, Direction.UP).with(ODD, false));\n     }\n "
  },
  {
    "sha": "464d356697ed04c514a258e3f27541e1ebd866a4",
    "filename": "src/main/java/appeng/block/misc/QuartzFixtureBlock.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/misc/QuartzFixtureBlock.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/misc/QuartzFixtureBlock.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/block/misc/QuartzFixtureBlock.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -80,7 +80,7 @@\n     public static final BooleanProperty ODD = BooleanProperty.of(\"odd\");\n \n     public QuartzFixtureBlock() {\n-        super(defaultProps(Material.SUPPORTED).noCollision().strength(0).lightLevel(14).sounds(BlockSoundGroup.GLASS));\n+        super(defaultProps(Material.DECORATION).noCollision().strength(0).lightLevel(14).sounds(BlockSoundGroup.GLASS));\n \n         this.setDefaultState(getDefaultState().with(FACING, Direction.UP).with(ODD, false));\n     }"
  },
  {
    "sha": "919ee3b0b88449924d3e8111fffde9683aca399a",
    "filename": "src/main/java/appeng/block/networking/WirelessBlock.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/networking/WirelessBlock.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/networking/WirelessBlock.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/block/networking/WirelessBlock.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -39,6 +39,7 @@\n import net.minecraft.world.World;\n \n import appeng.block.AEBaseTileBlock;\n+import appeng.block.networking.WirelessBlock.State;\n import appeng.container.ContainerLocator;\n import appeng.container.ContainerOpener;\n import appeng.container.implementations.WirelessContainer;"
  },
  {
    "sha": "529b501ebe2f26e4507d4415b8badc87f28a75b3",
    "filename": "src/main/java/appeng/block/paint/PaintSplotchesBlock.java",
    "status": "modified",
    "additions": 6,
    "deletions": 8,
    "changes": 14,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/paint/PaintSplotchesBlock.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/paint/PaintSplotchesBlock.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/block/paint/PaintSplotchesBlock.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -20,8 +20,8 @@\n \n import net.minecraft.block.Block;\n import net.minecraft.block.BlockState;\n+import net.minecraft.block.MapColor;\n import net.minecraft.block.Material;\n-import net.minecraft.block.MaterialColor;\n import net.minecraft.block.ShapeContext;\n import net.minecraft.item.ItemGroup;\n import net.minecraft.item.ItemPlacementContext;\n@@ -39,7 +39,7 @@\n \n public class PaintSplotchesBlock extends AEBaseTileBlock<PaintSplotchesBlockEntity> {\n     public PaintSplotchesBlock() {\n-        super(defaultProps(Material.WATER, MaterialColor.CLEAR).nonOpaque().air());\n+        super(defaultProps(Material.WATER, MapColor.CLEAR).nonOpaque().air());\n     }\n \n     @Override\n@@ -61,12 +61,10 @@ public void neighborUpdate(BlockState state, World world, BlockPos pos, Block bl\n         }\n     }\n \n-    @Override\n-    public void rainTick(World world, BlockPos pos) {\n-        if (Platform.isServer()) {\n-            world.removeBlock(pos, false);\n-        }\n-    }\n+    /*\n+     * @Override public void precipitationTick(World world, BlockPos pos) { if (Platform.isServer()) {\n+     * world.removeBlock(pos, false); } }\n+     */\n \n // FIXME FABRIC currently no equivalent\n // FIXME FABRIC   @Override"
  },
  {
    "sha": "61d6e850e01d31947b9bc6483801715ab0d59731",
    "filename": "src/main/java/appeng/block/spatial/MatrixFrameBlock.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/spatial/MatrixFrameBlock.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/block/spatial/MatrixFrameBlock.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/block/spatial/MatrixFrameBlock.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -20,8 +20,8 @@\n \n import net.minecraft.block.BlockRenderType;\n import net.minecraft.block.BlockState;\n+import net.minecraft.block.MapColor;\n import net.minecraft.block.Material;\n-import net.minecraft.block.MaterialColor;\n import net.minecraft.block.ShapeContext;\n import net.minecraft.block.piston.PistonBehavior;\n import net.minecraft.item.ItemGroup;\n@@ -43,7 +43,7 @@\n  */\n public class MatrixFrameBlock extends AEBaseBlock {\n \n-    private static final Material MATERIAL = new Material(MaterialColor.CLEAR, false, true, true, false, false, false,\n+    private static final Material MATERIAL = new Material(MapColor.CLEAR, false, true, true, false, false, false,\n             PistonBehavior.PUSH_ONLY);\n \n     public MatrixFrameBlock() {"
  },
  {
    "sha": "9616a019a4972334e077469f315cce5ca6e1c004",
    "filename": "src/main/java/appeng/bootstrap/BlockDefinitionBuilder.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/bootstrap/BlockDefinitionBuilder.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/bootstrap/BlockDefinitionBuilder.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/bootstrap/BlockDefinitionBuilder.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -160,7 +160,7 @@ private void customizeForClient(BlockRenderingCustomizer callback) {\n                 @Environment(EnvType.CLIENT)\n                 public void setup() {\n                     FabricModelPredicateProviderRegistry.register(item, AppEng.makeId(\"fill_level\"),\n-                            (is, world, entity) -> {\n+                            (is, world, entity, seed) -> {\n                                 double curPower = chargeable.getAECurrentPower(is);\n                                 double maxPower = chargeable.getAEMaxPower(is);\n "
  },
  {
    "sha": "93fdce1e9fece00568ca9439afd0fb0185a8667a",
    "filename": "src/main/java/appeng/bootstrap/BlockEntityBuilder.java",
    "status": "modified",
    "additions": 10,
    "deletions": 7,
    "changes": 17,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/bootstrap/BlockEntityBuilder.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/bootstrap/BlockEntityBuilder.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/bootstrap/BlockEntityBuilder.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -4,16 +4,19 @@\n import java.util.Collections;\n import java.util.EnumSet;\n import java.util.List;\n-import java.util.function.Function;\n-import java.util.function.Supplier;\n+import java.util.function.BiFunction;\n \n import com.google.common.base.Preconditions;\n+import com.mojang.datafixers.util.Function3;\n \n import net.fabricmc.api.EnvType;\n import net.fabricmc.api.Environment;\n+import net.fabricmc.fabric.api.object.builder.v1.block.entity.FabricBlockEntityTypeBuilder;\n import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n import net.minecraft.block.entity.BlockEntityType;\n import net.minecraft.util.Identifier;\n+import net.minecraft.util.math.BlockPos;\n import net.minecraft.util.registry.Registry;\n \n import appeng.api.features.AEFeature;\n@@ -44,7 +47,7 @@\n     private BlockEntityType<T> type;\n \n     // The factory for creating block entity objects\n-    private final Function<BlockEntityType<T>, T> supplier;\n+    private final Function3<BlockEntityType<T>, BlockPos, BlockState, T> supplier;\n \n     private TileEntityRendering<T> tileEntityRendering;\n \n@@ -53,7 +56,7 @@\n     private final EnumSet<AEFeature> features = EnumSet.noneOf(AEFeature.class);\n \n     public BlockEntityBuilder(FeatureFactory factory, String id, Class<T> tileClass,\n-            Function<BlockEntityType<T>, T> supplier) {\n+            Function3<BlockEntityType<T>, BlockPos, BlockState, T> supplier) {\n         this.factory = factory;\n         this.id = AppEng.makeId(id);\n         this.tileClass = tileClass;\n@@ -88,8 +91,8 @@ public TileEntityDefinition build() {\n                 throw new IllegalStateException(\"No blocks make use of this block entity: \" + tileClass);\n             }\n \n-            Supplier<T> factory = () -> supplier.apply(type);\n-            type = BlockEntityType.Builder.create(factory, blocks.toArray(new Block[0])).build(null);\n+            BiFunction<BlockPos, BlockState, T> factory = (pos, state) -> supplier.apply(type, pos, state);\n+            type = FabricBlockEntityTypeBuilder.create(factory::apply, blocks.toArray(new Block[0])).build(null);\n \n             Registry.register(Registry.BLOCK_ENTITY_TYPE, id, type);\n \n@@ -115,7 +118,7 @@ public TileEntityDefinition build() {\n     private void buildClient() {\n         if (tileEntityRendering.tileEntityRenderer != null) {\n             factory.addBootstrapComponent(\n-                    new BlockEntityRendererComponent<>(type, tileEntityRendering.tileEntityRenderer));\n+                    new BlockEntityRendererComponent<T>(type, tileEntityRendering.tileEntityRenderer));\n         }\n     }\n "
  },
  {
    "sha": "b834c0ac68c42d10c4b2e4865f79890464ec01dd",
    "filename": "src/main/java/appeng/bootstrap/FeatureFactory.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/bootstrap/FeatureFactory.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/bootstrap/FeatureFactory.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/bootstrap/FeatureFactory.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -29,16 +29,20 @@\n import java.util.function.Function;\n import java.util.function.Supplier;\n \n+import com.mojang.datafixers.util.Function3;\n+\n import net.fabricmc.api.EnvType;\n import net.fabricmc.api.Environment;\n import net.minecraft.block.Block;\n+import net.minecraft.block.BlockState;\n import net.minecraft.block.entity.BlockEntityType;\n import net.minecraft.client.render.model.BakedModel;\n import net.minecraft.entity.Entity;\n import net.minecraft.entity.EntityType;\n import net.minecraft.entity.SpawnGroup;\n import net.minecraft.item.Item;\n import net.minecraft.util.Identifier;\n+import net.minecraft.util.math.BlockPos;\n \n import appeng.api.features.AEFeature;\n import appeng.bootstrap.components.ModelOverrideComponent;\n@@ -86,7 +90,7 @@ public IItemBuilder item(String id, Function<Item.Settings, Item> itemFactory) {\n     }\n \n     public <T extends AEBaseBlockEntity> BlockEntityBuilder<T> tileEntity(String id, Class<T> teClass,\n-            Function<BlockEntityType<T>, T> factory) {\n+            Function3<BlockEntityType<T>, BlockPos, BlockState, T> factory) {\n         return new BlockEntityBuilder<>(this, id, teClass, factory).features(this.defaultFeatures);\n     }\n "
  },
  {
    "sha": "4fcb8d4c2485df0cac4e723862f29082e6468b5f",
    "filename": "src/main/java/appeng/bootstrap/TileEntityRendering.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/bootstrap/TileEntityRendering.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/bootstrap/TileEntityRendering.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/bootstrap/TileEntityRendering.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -22,19 +22,19 @@\n \n import net.fabricmc.api.EnvType;\n import net.fabricmc.api.Environment;\n-import net.minecraft.client.render.block.entity.BlockEntityRenderDispatcher;\n import net.minecraft.client.render.block.entity.BlockEntityRenderer;\n+import net.minecraft.client.render.block.entity.BlockEntityRendererFactory;\n \n import appeng.tile.AEBaseBlockEntity;\n \n public class TileEntityRendering<T extends AEBaseBlockEntity> {\n \n     @Environment(EnvType.CLIENT)\n-    Function<BlockEntityRenderDispatcher, BlockEntityRenderer<T>> tileEntityRenderer;\n+    Function<BlockEntityRendererFactory.Context, BlockEntityRenderer<T>> tileEntityRenderer;\n \n     @Environment(EnvType.CLIENT)\n     public TileEntityRendering<T> tileEntityRenderer(\n-            Function<BlockEntityRenderDispatcher, BlockEntityRenderer<T>> tileEntityRenderer) {\n+            Function<BlockEntityRendererFactory.Context, BlockEntityRenderer<T>> tileEntityRenderer) {\n         this.tileEntityRenderer = tileEntityRenderer;\n         return this;\n     }"
  },
  {
    "sha": "22def777dc4b4eba6f203b4e92600c3211bd429e",
    "filename": "src/main/java/appeng/bootstrap/components/BlockEntityRendererComponent.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/bootstrap/components/BlockEntityRendererComponent.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/bootstrap/components/BlockEntityRendererComponent.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/bootstrap/components/BlockEntityRendererComponent.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -5,8 +5,8 @@\n import net.fabricmc.fabric.api.client.rendereregistry.v1.BlockEntityRendererRegistry;\n import net.minecraft.block.entity.BlockEntity;\n import net.minecraft.block.entity.BlockEntityType;\n-import net.minecraft.client.render.block.entity.BlockEntityRenderDispatcher;\n import net.minecraft.client.render.block.entity.BlockEntityRenderer;\n+import net.minecraft.client.render.block.entity.BlockEntityRendererFactory;\n \n /**\n  * Registers a block entity renderer for a given block entity type. This must occur late in the client's initialization,\n@@ -16,17 +16,17 @@\n \n     private final BlockEntityType<T> type;\n \n-    private final Function<BlockEntityRenderDispatcher, BlockEntityRenderer<T>> renderer;\n+    private final Function<BlockEntityRendererFactory.Context, BlockEntityRenderer<T>> renderer;\n \n     public BlockEntityRendererComponent(BlockEntityType<T> type,\n-            Function<BlockEntityRenderDispatcher, BlockEntityRenderer<T>> renderer) {\n+            Function<BlockEntityRendererFactory.Context, BlockEntityRenderer<T>> renderer) {\n         this.type = type;\n         this.renderer = renderer;\n     }\n \n     @Override\n     public void setup() {\n-        BlockEntityRendererRegistry.INSTANCE.register(type, renderer);\n+        BlockEntityRendererRegistry.INSTANCE.register(type, renderer::apply);\n     }\n \n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "3ce281c57f8e1a45f719572b6cf62c20cca57b32",
    "filename": "src/main/java/appeng/client/AppEngClient.java",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/AppEngClient.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/AppEngClient.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/AppEngClient.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -21,8 +21,10 @@\n import net.fabricmc.fabric.api.client.screenhandler.v1.ScreenRegistry;\n import net.fabricmc.fabric.api.event.client.ClientSpriteRegistryCallback;\n import net.fabricmc.fabric.api.event.lifecycle.v1.ServerLifecycleEvents;\n+import net.fabricmc.fabric.impl.client.renderer.registry.EntityRendererRegistryImpl;\n import net.minecraft.client.MinecraftClient;\n-import net.minecraft.client.options.KeyBinding;\n+import net.minecraft.client.option.KeyBinding;\n+import net.minecraft.client.render.entity.EntityRendererFactory;\n import net.minecraft.client.render.entity.ItemEntityRenderer;\n import net.minecraft.client.render.model.BakedModel;\n import net.minecraft.client.render.model.UnbakedModel;\n@@ -312,13 +314,11 @@ protected void registerParticleRenderers() {\n     protected void registerEntityRenderers() {\n         EntityRendererRegistry registry = EntityRendererRegistry.INSTANCE;\n \n-        registry.register(TinyTNTPrimedEntity.TYPE, (dispatcher, context) -> new TinyTNTPrimedRenderer(dispatcher));\n+        registry.register(TinyTNTPrimedEntity.TYPE, TinyTNTPrimedRenderer::new);\n \n-        EntityRendererRegistry.Factory itemEntityFactory = (dispatcher, context) -> new ItemEntityRenderer(dispatcher,\n-                context.getItemRenderer());\n-        registry.register(SingularityEntity.TYPE, itemEntityFactory);\n-        registry.register(GrowingCrystalEntity.TYPE, itemEntityFactory);\n-        registry.register(ChargedQuartzEntity.TYPE, itemEntityFactory);\n+        registry.register(SingularityEntity.TYPE, ItemEntityRenderer::new);\n+        registry.register(GrowingCrystalEntity.TYPE, ItemEntityRenderer::new);\n+        registry.register(ChargedQuartzEntity.TYPE, ItemEntityRenderer::new);\n     }\n \n     protected void registerItemColors() {"
  },
  {
    "sha": "8d61b9b68ce06e137f6c2a542cfb7e2a8e4ad550",
    "filename": "src/main/java/appeng/client/gui/AEBaseScreen.java",
    "status": "modified",
    "additions": 6,
    "deletions": 5,
    "changes": 11,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/AEBaseScreen.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/AEBaseScreen.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/gui/AEBaseScreen.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -41,6 +41,7 @@\n import net.minecraft.client.network.ClientPlayerEntity;\n import net.minecraft.client.render.BufferBuilder;\n import net.minecraft.client.render.Tessellator;\n+import net.minecraft.client.render.VertexFormat;\n import net.minecraft.client.render.VertexFormats;\n import net.minecraft.client.util.InputUtil;\n import net.minecraft.client.util.math.MatrixStack;\n@@ -303,7 +304,7 @@ public boolean mouseClicked(final double xCoord, final double yCoord, final int\n         for (CustomSlotWidget slot : this.guiSlots) {\n             if (this.isPointWithinBounds(slot.getTooltipAreaX(), slot.getTooltipAreaY(), slot.getTooltipAreaWidth(),\n                     slot.getTooltipAreaHeight(), xCoord, yCoord) && slot.canClick(getPlayer())) {\n-                slot.slotClicked(getPlayer().inventory.getCursorStack(), btn);\n+                slot.slotClicked(getPlayer().getInventory().getCursorStack(), btn);\n             }\n         }\n \n@@ -332,7 +333,7 @@ public boolean mouseReleased(double mouseX, double mouseY, int button) {\n     @Override\n     public boolean mouseDragged(double mouseX, double mouseY, int mouseButton, double dragX, double dragY) {\n         final Slot slot = this.getSlot((int) mouseX, (int) mouseY);\n-        final ItemStack itemstack = getPlayer().inventory.getCursorStack();\n+        final ItemStack itemstack = getPlayer().getInventory().getCursorStack();\n \n         if (this.getScrollBar() != null) {\n             // FIXME: Coordinate system of mouseX/mouseY is unclear\n@@ -465,7 +466,7 @@ protected void onMouseClick(final Slot slot, final int slotIdx, final int mouseB\n                     stack = ((SlotME) slot).getAEStack();\n \n                     if (stack != null && action == InventoryAction.PICKUP_OR_SET_DOWN && stack.getStackSize() == 0\n-                            && player.inventory.getCursorStack().isEmpty()) {\n+                            && player.getInventory().getCursorStack().isEmpty()) {\n                         action = InventoryAction.AUTO_CRAFT;\n                     }\n \n@@ -547,7 +548,7 @@ protected int getSlotIndex(Slot slot) {\n     protected boolean checkHotbarKeys(int keyCode, int scanCode) {\n         final Slot theSlot = this.focusedSlot;\n \n-        if (getPlayer().inventory.getCursorStack().isEmpty() && theSlot != null) {\n+        if (getPlayer().getInventory().getCursorStack().isEmpty() && theSlot != null) {\n             for (int j = 0; j < 9; ++j) {\n                 if (getClient().options.keysHotbar[j].matchesKey(keyCode, scanCode)) {\n                     final List<Slot> slots = this.getInventorySlots();\n@@ -715,7 +716,7 @@ public void drawSlot(MatrixStack matrices, Slot s) {\n                             final Tessellator tessellator = Tessellator.getInstance();\n                             final BufferBuilder vb = tessellator.getBuffer();\n \n-                            vb.begin(GL11.GL_QUADS, VertexFormats.POSITION_COLOR_TEXTURE);\n+                            vb.begin(VertexFormat.DrawMode.QUADS, VertexFormats.POSITION_COLOR_TEXTURE);\n \n                             final float f1 = 0.00390625F;\n                             final float f = 0.00390625F;"
  },
  {
    "sha": "30dbb67e8a91f33bde3b1b65494d8dce7d819021",
    "filename": "src/main/java/appeng/client/gui/implementations/InterfaceTerminalScreen.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/implementations/InterfaceTerminalScreen.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/implementations/InterfaceTerminalScreen.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/gui/implementations/InterfaceTerminalScreen.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -80,7 +80,7 @@ public void init() {\n         super.init();\n \n         this.searchField = new AETextField(this.textRenderer, this.x + 104, this.y + 4, 65, 12);\n-        this.searchField.setHasBorder(false);\n+        this.searchField.setDrawsBackground(false);\n         this.searchField.setMaxLength(25);\n         this.searchField.setEditableColor(0xFFFFFF);\n         this.searchField.setVisible(true);\n@@ -212,7 +212,7 @@ public void postUpdate(final CompoundTag in) {\n                     for (int x = 0; x < current.getInventory().getSlotCount(); x++) {\n                         final String which = Integer.toString(x);\n                         if (invData.contains(which)) {\n-                            current.getInventory().setInvStack(x, ItemStack.fromTag(invData.getCompound(which)),\n+                            current.getInventory().setInvStack(x, ItemStack.fromNbt(invData.getCompound(which)),\n                                     Simulation.ACTION);\n                         }\n                     }\n@@ -308,7 +308,7 @@ private boolean itemStackMatchesSearchTerm(final ItemStack itemStack, final Stri\n \n         for (int i = 0; i < outTag.size(); i++) {\n \n-            final ItemStack parsedItemStack = ItemStack.fromTag(outTag.getCompound(i));\n+            final ItemStack parsedItemStack = ItemStack.fromNbt(outTag.getCompound(i));\n             if (!parsedItemStack.isEmpty()) {\n                 final String displayName = Platform.getItemDisplayName(Api.instance().storage()\n                         .getStorageChannel(IItemStorageChannel.class).createStack(parsedItemStack)).getString()"
  },
  {
    "sha": "f596fb1089b0d15dedc31c9977e7f778f5b567ea",
    "filename": "src/main/java/appeng/client/gui/implementations/MEMonitorableScreen.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/implementations/MEMonitorableScreen.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/implementations/MEMonitorableScreen.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/gui/implementations/MEMonitorableScreen.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -230,7 +230,7 @@ public void init() {\n         }\n \n         this.searchField = new AETextField(this.textRenderer, this.x + Math.max(80, this.offsetX), this.y + 4, 90, 12);\n-        this.searchField.setHasBorder(false);\n+        this.searchField.setDrawsBackground(false);\n         this.searchField.setMaxLength(25);\n         this.searchField.setEditableColor(0xFFFFFF);\n         this.searchField.setSelectionColor(0xFF008000);"
  },
  {
    "sha": "e357108f7e88b3c0a1d1d41995868fde9ca94467",
    "filename": "src/main/java/appeng/client/gui/implementations/NumberEntryWidget.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/implementations/NumberEntryWidget.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/implementations/NumberEntryWidget.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/gui/implementations/NumberEntryWidget.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -63,11 +63,11 @@ public NumberEntryWidget(AEBaseScreen<?> parent, int x, int y, int width, int he\n         int inputX = parent.getX() + x;\n         int inputY = parent.getY() + y;\n         this.textField = new ConfirmableTextField(font, inputX, inputY, width, font.fontHeight, LiteralText.EMPTY);\n-        this.textField.setHasBorder(false);\n+        this.textField.setDrawsBackground(false);\n         this.textField.setMaxLength(16);\n         this.textField.setEditableColor(TEXT_COLOR_NORMAL);\n         this.textField.setVisible(true);\n-        this.textField.setSelected(true);\n+        this.textField.setTextFieldFocused(true);\n         parent.setInitialFocus(this.textField);\n         this.textField.setChangedListener(text -> {\n             validate();"
  },
  {
    "sha": "709d77484dde4047f7dfc028bff411a4920a3933",
    "filename": "src/main/java/appeng/client/gui/implementations/QuartzKnifeScreen.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/implementations/QuartzKnifeScreen.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/implementations/QuartzKnifeScreen.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/gui/implementations/QuartzKnifeScreen.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -49,11 +49,11 @@ public void init() {\n \n         this.name = new TextFieldWidget(this.textRenderer, this.x + 24, this.y + 32, 79, this.textRenderer.fontHeight,\n                 LiteralText.EMPTY);\n-        this.name.setHasBorder(false);\n+        this.name.setDrawsBackground(false);\n         this.name.setMaxLength(32);\n         this.name.setEditableColor(0xFFFFFF);\n         this.name.setVisible(true);\n-        this.name.setSelected(true);\n+        this.name.setTextFieldFocused(true);\n     }\n \n     @Override\n@@ -87,13 +87,13 @@ public boolean keyPressed(int keyCode, int scanCode, int p_keyPressed_3_) {\n \n         if (keyCode != GLFW.GLFW_KEY_ESCAPE && !this.checkHotbarKeys(keyCode, scanCode)) {\n             if (AppEng.instance().isActionKey(ActionKey.TOGGLE_FOCUS, keyCode, scanCode)) {\n-                this.name.setSelected(!this.name.isFocused());\n+                this.name.setTextFieldFocused(!this.name.isFocused());\n                 return true;\n             }\n \n             if (this.name.isFocused()) {\n                 if (keyCode == GLFW.GLFW_KEY_ENTER) {\n-                    this.name.setSelected(false);\n+                    this.name.setTextFieldFocused(false);\n                     return true;\n                 }\n "
  },
  {
    "sha": "e0866402298b90a7207fb855ab3af877843e8ad1",
    "filename": "src/main/java/appeng/client/gui/widgets/AETextField.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/widgets/AETextField.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/gui/widgets/AETextField.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/gui/widgets/AETextField.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -25,6 +25,7 @@\n import net.minecraft.client.gui.widget.TextFieldWidget;\n import net.minecraft.client.render.BufferBuilder;\n import net.minecraft.client.render.Tessellator;\n+import net.minecraft.client.render.VertexFormat;\n import net.minecraft.client.render.VertexFormats;\n import net.minecraft.client.util.math.MatrixStack;\n import net.minecraft.text.LiteralText;\n@@ -140,7 +141,7 @@ public void drawSelectionHighlight(int startX, int startY, int endX, int endY) {\n         RenderSystem.disableTexture();\n         RenderSystem.enableColorLogicOp();\n         RenderSystem.logicOp(GlStateManager.LogicOp.OR_REVERSE);\n-        bufferbuilder.begin(7, VertexFormats.POSITION);\n+        bufferbuilder.begin(VertexFormat.DrawMode.QUADS, VertexFormats.POSITION);\n         bufferbuilder.vertex(startX, endY, 0.0D).next();\n         bufferbuilder.vertex(endX, endY, 0.0D).next();\n         bufferbuilder.vertex(endX, startY, 0.0D).next();"
  },
  {
    "sha": "f447ac3be5fbbed0454561d03980a19059fbf06e",
    "filename": "src/main/java/appeng/client/render/FacingToRotation.java",
    "status": "modified",
    "additions": 26,
    "deletions": 26,
    "changes": 52,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/render/FacingToRotation.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/render/FacingToRotation.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/render/FacingToRotation.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -21,13 +21,13 @@\n import java.util.Locale;\n \n import net.minecraft.client.util.math.MatrixStack;\n-import net.minecraft.client.util.math.Vector3f;\n-import net.minecraft.client.util.math.Vector4f;\n import net.minecraft.util.StringIdentifiable;\n import net.minecraft.util.math.Direction;\n import net.minecraft.util.math.Matrix4f;\n import net.minecraft.util.math.Quaternion;\n+import net.minecraft.util.math.Vec3f;\n import net.minecraft.util.math.Vec3i;\n+import net.minecraft.util.math.Vector4f;\n \n /**\n  * TODO: Removed useless stuff.\n@@ -36,41 +36,41 @@\n \n     // DUNSWE\n     // @formatter:off\n-    DOWN_DOWN(new Vector3f(0, 0, 0)), // NOOP\n-    DOWN_UP(new Vector3f(0, 0, 0)), // NOOP\n-    DOWN_NORTH(new Vector3f(-90, 0, 0)), DOWN_SOUTH(new Vector3f(-90, 0, 180)), DOWN_WEST(new Vector3f(-90, 0, 90)),\n-    DOWN_EAST(new Vector3f(-90, 0, -90)), UP_DOWN(new Vector3f(0, 0, 0)), // NOOP\n-    UP_UP(new Vector3f(0, 0, 0)), // NOOP\n-    UP_NORTH(new Vector3f(90, 0, 180)), UP_SOUTH(new Vector3f(90, 0, 0)), UP_WEST(new Vector3f(90, 0, 90)),\n-    UP_EAST(new Vector3f(90, 0, -90)), NORTH_DOWN(new Vector3f(0, 0, 180)), NORTH_UP(new Vector3f(0, 0, 0)),\n-    NORTH_NORTH(new Vector3f(0, 0, 0)), // NOOP\n-    NORTH_SOUTH(new Vector3f(0, 0, 0)), // NOOP\n-    NORTH_WEST(new Vector3f(0, 0, 90)), NORTH_EAST(new Vector3f(0, 0, -90)), SOUTH_DOWN(new Vector3f(0, 180, 180)),\n-    SOUTH_UP(new Vector3f(0, 180, 0)), SOUTH_NORTH(new Vector3f(0, 0, 0)), // NOOP\n-    SOUTH_SOUTH(new Vector3f(0, 0, 0)), // NOOP\n-    SOUTH_WEST(new Vector3f(0, 180, -90)), SOUTH_EAST(new Vector3f(0, 180, 90)), WEST_DOWN(new Vector3f(0, 90, 180)),\n-    WEST_UP(new Vector3f(0, 90, 0)), WEST_NORTH(new Vector3f(0, 90, -90)), WEST_SOUTH(new Vector3f(0, 90, 90)),\n-    WEST_WEST(new Vector3f(0, 0, 0)), // NOOP\n-    WEST_EAST(new Vector3f(0, 0, 0)), // NOOP\n-    EAST_DOWN(new Vector3f(0, -90, 180)), EAST_UP(new Vector3f(0, -90, 0)), EAST_NORTH(new Vector3f(0, -90, 90)),\n-    EAST_SOUTH(new Vector3f(0, -90, -90)), EAST_WEST(new Vector3f(0, 0, 0)), // NOOP\n-    EAST_EAST(new Vector3f(0, 0, 0)); // NOOP\n+    DOWN_DOWN(new Vec3f(0, 0, 0)), // NOOP\n+    DOWN_UP(new Vec3f(0, 0, 0)), // NOOP\n+    DOWN_NORTH(new Vec3f(-90, 0, 0)), DOWN_SOUTH(new Vec3f(-90, 0, 180)), DOWN_WEST(new Vec3f(-90, 0, 90)),\n+    DOWN_EAST(new Vec3f(-90, 0, -90)), UP_DOWN(new Vec3f(0, 0, 0)), // NOOP\n+    UP_UP(new Vec3f(0, 0, 0)), // NOOP\n+    UP_NORTH(new Vec3f(90, 0, 180)), UP_SOUTH(new Vec3f(90, 0, 0)), UP_WEST(new Vec3f(90, 0, 90)),\n+    UP_EAST(new Vec3f(90, 0, -90)), NORTH_DOWN(new Vec3f(0, 0, 180)), NORTH_UP(new Vec3f(0, 0, 0)),\n+    NORTH_NORTH(new Vec3f(0, 0, 0)), // NOOP\n+    NORTH_SOUTH(new Vec3f(0, 0, 0)), // NOOP\n+    NORTH_WEST(new Vec3f(0, 0, 90)), NORTH_EAST(new Vec3f(0, 0, -90)), SOUTH_DOWN(new Vec3f(0, 180, 180)),\n+    SOUTH_UP(new Vec3f(0, 180, 0)), SOUTH_NORTH(new Vec3f(0, 0, 0)), // NOOP\n+    SOUTH_SOUTH(new Vec3f(0, 0, 0)), // NOOP\n+    SOUTH_WEST(new Vec3f(0, 180, -90)), SOUTH_EAST(new Vec3f(0, 180, 90)), WEST_DOWN(new Vec3f(0, 90, 180)),\n+    WEST_UP(new Vec3f(0, 90, 0)), WEST_NORTH(new Vec3f(0, 90, -90)), WEST_SOUTH(new Vec3f(0, 90, 90)),\n+    WEST_WEST(new Vec3f(0, 0, 0)), // NOOP\n+    WEST_EAST(new Vec3f(0, 0, 0)), // NOOP\n+    EAST_DOWN(new Vec3f(0, -90, 180)), EAST_UP(new Vec3f(0, -90, 0)), EAST_NORTH(new Vec3f(0, -90, 90)),\n+    EAST_SOUTH(new Vec3f(0, -90, -90)), EAST_WEST(new Vec3f(0, 0, 0)), // NOOP\n+    EAST_EAST(new Vec3f(0, 0, 0)); // NOOP\n     // @formatter:on\n \n-    private final Vector3f rot;\n+    private final Vec3f rot;\n     private final Quaternion xRot;\n     private final Quaternion yRot;\n     private final Quaternion zRot;\n     private final Quaternion combinedRotation;\n     private final Matrix4f mat;\n \n-    FacingToRotation(Vector3f rot) {\n+    FacingToRotation(Vec3f rot) {\n         this.rot = rot;\n         this.mat = new Matrix4f();\n         this.mat.loadIdentity();\n-        this.mat.multiply(xRot = Vector3f.POSITIVE_X.getDegreesQuaternion(rot.getX()));\n-        this.mat.multiply(yRot = Vector3f.POSITIVE_Y.getDegreesQuaternion(rot.getY()));\n-        this.mat.multiply(zRot = Vector3f.POSITIVE_Z.getDegreesQuaternion(rot.getZ()));\n+        this.mat.multiply(xRot = Vec3f.POSITIVE_X.getDegreesQuaternion(rot.getX()));\n+        this.mat.multiply(yRot = Vec3f.POSITIVE_Y.getDegreesQuaternion(rot.getY()));\n+        this.mat.multiply(zRot = Vec3f.POSITIVE_Z.getDegreesQuaternion(rot.getZ()));\n         this.combinedRotation = new Quaternion(rot.getX(), rot.getY(), rot.getZ(), true);\n     }\n "
  },
  {
    "sha": "ccbdc21507c78bd7761fbfe9832756422e088207",
    "filename": "src/main/java/appeng/client/render/SpatialSkyRender.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/render/SpatialSkyRender.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/render/SpatialSkyRender.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/render/SpatialSkyRender.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -26,6 +26,7 @@\n \n import net.minecraft.client.render.BufferBuilder;\n import net.minecraft.client.render.Tessellator;\n+import net.minecraft.client.render.VertexFormat;\n import net.minecraft.client.render.VertexFormats;\n import net.minecraft.client.util.math.MatrixStack;\n import net.minecraft.util.math.Quaternion;\n@@ -79,7 +80,7 @@ public void render(MatrixStack matrixStack) {\n             matrixStack.multiply(rotation);\n \n             RenderSystem.disableTexture();\n-            VertexBuffer.begin(GL11.GL_QUADS, VertexFormats.POSITION);\n+            VertexBuffer.begin(VertexFormat.DrawMode.QUADS, VertexFormats.POSITION);\n             VertexBuffer.vertex(-100.0D, -100.0D, -100.0D).next();\n             VertexBuffer.vertex(-100.0D, -100.0D, 100.0D).next();\n             VertexBuffer.vertex(100.0D, -100.0D, 100.0D).next();\n@@ -115,7 +116,7 @@ public void render(MatrixStack matrixStack) {\n     private void renderTwinkles() {\n         final Tessellator tessellator = Tessellator.getInstance();\n         final BufferBuilder vb = tessellator.getBuffer();\n-        vb.begin(GL11.GL_QUADS, VertexFormats.POSITION);\n+        vb.begin(VertexFormat.DrawMode.QUADS, VertexFormats.POSITION);\n \n         for (int i = 0; i < 50; ++i) {\n             double iX = this.random.nextFloat() * 2.0F - 1.0F;"
  },
  {
    "sha": "13a8b4759b0bbd2b1b9b80b6f5bd57b3ef805e14",
    "filename": "src/main/java/appeng/client/render/StackSizeRenderer.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/render/StackSizeRenderer.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/render/StackSizeRenderer.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/render/StackSizeRenderer.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -23,10 +23,10 @@\n import net.minecraft.client.font.TextRenderer;\n import net.minecraft.client.render.Tessellator;\n import net.minecraft.client.render.VertexConsumerProvider;\n-import net.minecraft.client.util.math.AffineTransformation;\n-import net.minecraft.client.util.math.Vector3f;\n import net.minecraft.text.LiteralText;\n import net.minecraft.text.Text;\n+import net.minecraft.util.math.AffineTransformation;\n+import net.minecraft.util.math.Vec3f;\n \n import appeng.api.storage.data.IAEItemStack;\n import appeng.core.AEConfig;\n@@ -69,9 +69,9 @@ public static void renderSizeLabel(TextRenderer fontRenderer, float xPos, float\n         final float inverseScaleFactor = 1.0f / scaleFactor;\n         final int offset = AEConfig.instance().isUseLargeFonts() ? 0 : -1;\n \n-        AffineTransformation tm = new AffineTransformation(new Vector3f(0, 0, 300), // Taken from\n+        AffineTransformation tm = new AffineTransformation(new Vec3f(0, 0, 300), // Taken from\n                 // ItemRenderer.renderItemOverlayIntoGUI\n-                null, new Vector3f(scaleFactor, scaleFactor, scaleFactor), null);\n+                null, new Vec3f(scaleFactor, scaleFactor, scaleFactor), null);\n \n         RenderSystem.disableBlend();\n         final int X = (int) ((xPos + offset + 16.0f - fontRenderer.getWidth(text) * scaleFactor) * inverseScaleFactor);"
  },
  {
    "sha": "05ef822e9181996b8c670309659ca53a2816bb78",
    "filename": "src/main/java/appeng/client/render/TesrRenderHelper.java",
    "status": "modified",
    "additions": 9,
    "deletions": 9,
    "changes": 18,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/render/TesrRenderHelper.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/render/TesrRenderHelper.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/render/TesrRenderHelper.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -24,9 +24,9 @@\n import net.minecraft.client.render.VertexConsumerProvider;\n import net.minecraft.client.render.model.json.ModelTransformation;\n import net.minecraft.client.util.math.MatrixStack;\n-import net.minecraft.client.util.math.Vector3f;\n import net.minecraft.item.ItemStack;\n import net.minecraft.util.math.Direction;\n+import net.minecraft.util.math.Vec3f;\n \n import appeng.api.storage.data.IAEItemStack;\n import appeng.util.IWideReadableNumberConverter;\n@@ -46,25 +46,25 @@\n     public static void rotateToFace(MatrixStack mStack, Direction face, byte spin) {\n         switch (face) {\n             case UP:\n-                mStack.multiply(Vector3f.POSITIVE_X.getDegreesQuaternion(270));\n-                mStack.multiply(Vector3f.POSITIVE_Z.getDegreesQuaternion(-spin * 90.0F));\n+                mStack.multiply(Vec3f.POSITIVE_X.getDegreesQuaternion(270));\n+                mStack.multiply(Vec3f.POSITIVE_Z.getDegreesQuaternion(-spin * 90.0F));\n                 break;\n \n             case DOWN:\n-                mStack.multiply(Vector3f.POSITIVE_X.getDegreesQuaternion(90.0F));\n-                mStack.multiply(Vector3f.POSITIVE_Z.getDegreesQuaternion(spin * -90.0F));\n+                mStack.multiply(Vec3f.POSITIVE_X.getDegreesQuaternion(90.0F));\n+                mStack.multiply(Vec3f.POSITIVE_Z.getDegreesQuaternion(spin * -90.0F));\n                 break;\n \n             case EAST:\n-                mStack.multiply(Vector3f.POSITIVE_Y.getDegreesQuaternion(90.0F));\n+                mStack.multiply(Vec3f.POSITIVE_Y.getDegreesQuaternion(90.0F));\n                 break;\n \n             case WEST:\n-                mStack.multiply(Vector3f.POSITIVE_Y.getDegreesQuaternion(-90.0F));\n+                mStack.multiply(Vec3f.POSITIVE_Y.getDegreesQuaternion(-90.0F));\n                 break;\n \n             case NORTH:\n-                mStack.multiply(Vector3f.POSITIVE_Y.getDegreesQuaternion(180.0F));\n+                mStack.multiply(Vec3f.POSITIVE_Y.getDegreesQuaternion(180.0F));\n                 break;\n \n             case SOUTH:\n@@ -93,7 +93,7 @@ public static void renderItem2d(MatrixStack matrixStack, VertexConsumerProvider\n             matrixStack.scale(scale, scale, 0.0002f);\n \n             MinecraftClient.getInstance().getItemRenderer().renderItem(itemStack, ModelTransformation.Mode.GUI,\n-                    combinedLightIn, OverlayTexture.DEFAULT_UV, matrixStack, buffers);\n+                    combinedLightIn, OverlayTexture.DEFAULT_UV, matrixStack, buffers, 0);\n \n             matrixStack.pop();\n "
  },
  {
    "sha": "6db10612a3000b8306c0316c75b848bacd75d7f7",
    "filename": "src/main/java/appeng/client/render/cablebus/CubeBuilder.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/blob/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/render/cablebus/CubeBuilder.java",
    "raw_url": "https://github.com/AppliedEnergistics/Applied-Energistics-2/raw/c9badb66a0ec7f5438b2082a3fce5f7000b0766c/src/main/java/appeng/client/render/cablebus/CubeBuilder.java",
    "contents_url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2/contents/src/main/java/appeng/client/render/cablebus/CubeBuilder.java?ref=c9badb66a0ec7f5438b2082a3fce5f7000b0766c",
    "patch": "@@ -28,8 +28,8 @@\n import net.fabricmc.fabric.api.renderer.v1.mesh.QuadEmitter;\n import net.minecraft.client.render.LightmapTextureManager;\n import net.minecraft.client.texture.Sprite;\n-import net.minecraft.client.util.math.Vector4f;\n import net.minecraft.util.math.Direction;\n+import net.minecraft.util.math.Vector4f;\n \n /**\n  * Builds the quads for a cube."
  }
]
