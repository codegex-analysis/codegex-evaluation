[
  {
    "sha": "cc89fe0a0fd0fac4232e4a969073a02af89fc108",
    "filename": "src/com/customify/client/dashboards/EmployeeDashboard.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/client/dashboards/EmployeeDashboard.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/client/dashboards/EmployeeDashboard.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/client/dashboards/EmployeeDashboard.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -73,6 +73,7 @@ public void view() throws Exception {\n             switch (choice) {\n                 case 1:\n                     CustomerMainView customer = new CustomerMainView(this.socket,this.isLoggedIn());\n+                    customer.view();\n                     break;\n                 case 2:\n                     ProductView productView = new ProductView(this.getSocket());"
  },
  {
    "sha": "958ef10dabb410915213535f454eb84b3d729ed2",
    "filename": "src/com/customify/client/services/reports/CouponReportService.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/client/services/reports/CouponReportService.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/client/services/reports/CouponReportService.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/client/services/reports/CouponReportService.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -0,0 +1,42 @@\n+/**\n+ * @author Fiston Nshimiyandinze\n+ * @role\n+ * For handling reports concerned with coupon\n+ * */\n+package com.customify.client.services.reports;\n+\n+import com.customify.client.SendToServer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.ObjectInputStream;\n+import java.net.Socket;\n+import java.util.List;\n+\n+public class CouponReportService {\n+    private Socket socket;\n+    private InputStream input;\n+    private ObjectInputStream objectInput;\n+    private String json_data;\n+    private List<String> response;\n+    public CouponReportService(){}\n+    public CouponReportService(Socket socket) {\n+        this.socket = socket;\n+    }\n+    public void getCouponWeekly(String json) throws IOException, ClassNotFoundException {\n+        SendToServer serverSend = new SendToServer(json, this.socket);\n+        if (serverSend.send()) {\n+\n+        } else {\n+            System.out.println(\"Request failed...\");\n+        }\n+    }\n+    public void getCouponDaily(String json) throws IOException, ClassNotFoundException {\n+        SendToServer serverSend = new SendToServer(json, this.socket);\n+        if (serverSend.send()) {\n+\n+        } else {\n+            System.out.println(\"Request failed...\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "2891127f587515d036d724b29d15cf94a1f1436f",
    "filename": "src/com/customify/client/services/reports/FeedbackReportService.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/client/services/reports/FeedbackReportService.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/client/services/reports/FeedbackReportService.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/client/services/reports/FeedbackReportService.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -0,0 +1,42 @@\n+/**\n+ * @author Fiston Nshimiyandinze\n+ * @role\n+ * For handling reports concerned with feedback\n+ * */\n+package com.customify.client.services.reports;\n+\n+import com.customify.client.SendToServer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.ObjectInputStream;\n+import java.net.Socket;\n+import java.util.List;\n+\n+public class FeedbackReportService {\n+    private Socket socket;\n+    private InputStream input;\n+    private ObjectInputStream objectInput;\n+    private String json_data;\n+    private List<String> response;\n+    public FeedbackReportService(){}\n+    public FeedbackReportService(Socket socket) {\n+        this.socket = socket;\n+    }\n+    public void getFeedbackWeekly(String json) throws IOException, ClassNotFoundException {\n+        SendToServer serverSend = new SendToServer(json, this.socket);\n+        if (serverSend.send()) {\n+\n+        } else {\n+            System.out.println(\"Request failed...\");\n+        }\n+    }\n+    public void getFeedbackDaily(String json) throws IOException, ClassNotFoundException {\n+        SendToServer serverSend = new SendToServer(json, this.socket);\n+        if (serverSend.send()) {\n+\n+        } else {\n+            System.out.println(\"Request failed...\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "f3b39eb9e84ca3972353d7ebaafb90f380b30f58",
    "filename": "src/com/customify/client/services/reports/NotificationsReportService.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/client/services/reports/NotificationsReportService.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/client/services/reports/NotificationsReportService.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/client/services/reports/NotificationsReportService.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -0,0 +1,42 @@\n+/**\n+ * @author Fiston Nshimiyandinze\n+ * @role\n+ * For handling reports concerned with notification\n+ * */\n+package com.customify.client.services.reports;\n+\n+import com.customify.client.SendToServer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.ObjectInputStream;\n+import java.net.Socket;\n+import java.util.List;\n+\n+public class NotificationsReportService {\n+    private Socket socket;\n+    private InputStream input;\n+    private ObjectInputStream objectInput;\n+    private String json_data;\n+    private List<String> response;\n+    public NotificationsReportService(){}\n+    public NotificationsReportService(Socket socket) {\n+        this.socket = socket;\n+    }\n+    public void getNotificationWeekly(String json) throws IOException, ClassNotFoundException {\n+        SendToServer serverSend = new SendToServer(json, this.socket);\n+        if (serverSend.send()) {\n+\n+        } else {\n+            System.out.println(\"Request failed...\");\n+        }\n+    }\n+    public void getNotificationDaily(String json) throws IOException, ClassNotFoundException {\n+        SendToServer serverSend = new SendToServer(json, this.socket);\n+        if (serverSend.send()) {\n+\n+        } else {\n+            System.out.println(\"Request failed...\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "2213234cbb63b1512b2bdd7726c59b5902946b3b",
    "filename": "src/com/customify/server/response_data_format/WinnersDataFormat.java",
    "status": "added",
    "additions": 87,
    "deletions": 0,
    "changes": 87,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/response_data_format/WinnersDataFormat.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/response_data_format/WinnersDataFormat.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/server/response_data_format/WinnersDataFormat.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -0,0 +1,87 @@\n+/**\n+ * @author GISA KAZE Fredson\n+ */\n+\n+\n+package com.customify.server.response_data_format;\n+\n+import java.io.Serializable;\n+\n+public class WinnersDataFormat implements Serializable {\n+    private String customerId;\n+    private String firstName;\n+    private String lastName;\n+    private String email;\n+    private float noPoints;\n+    private String winingDate;\n+    private String code;\n+\n+    public WinnersDataFormat() {\n+    }\n+\n+    public WinnersDataFormat(String customerId, String firstName, String lastName, String email, float noPoints, String winingDate, String code) {\n+        this.customerId = customerId;\n+        this.firstName = firstName;\n+        this.lastName = lastName;\n+        this.email = email;\n+        this.noPoints = noPoints;\n+        this.winingDate = winingDate;\n+        this.code = code;\n+    }\n+\n+    public String getCustomerId() {\n+        return customerId;\n+    }\n+\n+    public void setCustomerId(String customerId) {\n+        this.customerId = customerId;\n+    }\n+\n+    public String getFirstName() {\n+        return firstName;\n+    }\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    public String getLastName() {\n+        return lastName;\n+    }\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    public String getEmail() {\n+        return email;\n+    }\n+\n+    public void setEmail(String email) {\n+        this.email = email;\n+    }\n+\n+    public float getNoPoints() {\n+        return noPoints;\n+    }\n+\n+    public void setNoPoints(float noPoints) {\n+        this.noPoints = noPoints;\n+    }\n+\n+    public String getWiningDate() {\n+        return winingDate;\n+    }\n+\n+    public void setWiningDate(String winingDate) {\n+        this.winingDate = winingDate;\n+    }\n+\n+    public String getCode() {\n+        return code;\n+    }\n+\n+    public void setCode(String code) {\n+        this.code = code;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "872117580d0df29a147fe68ec4cadc48928df51c",
    "filename": "src/com/customify/server/response_data_format/report/CouponReportFormat.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/response_data_format/report/CouponReportFormat.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/response_data_format/report/CouponReportFormat.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/server/response_data_format/report/CouponReportFormat.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -0,0 +1,28 @@\n+package com.customify.server.response_data_format.report;\n+\n+public class CouponReportFormat {\n+    private int totalCustomers;\n+    private String created_at;\n+    CouponReportFormat(){}\n+\n+    public CouponReportFormat(int totalCustomers, String created_at) {\n+        this.totalCustomers = totalCustomers;\n+        this.created_at = created_at;\n+    }\n+\n+    public int getTotalCustomers() {\n+        return totalCustomers;\n+    }\n+\n+    public void setTotalCustomers(int totalCustomers) {\n+        this.totalCustomers = totalCustomers;\n+    }\n+\n+    public String getCreated_at() {\n+        return created_at;\n+    }\n+\n+    public void setCreated_at(String created_at) {\n+        this.created_at = created_at;\n+    }\n+}"
  },
  {
    "sha": "5e6c0203d8ae3d4c8620db63042156993bbdbf2e",
    "filename": "src/com/customify/server/response_data_format/report/FeedbackReportFormat.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/response_data_format/report/FeedbackReportFormat.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/response_data_format/report/FeedbackReportFormat.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/server/response_data_format/report/FeedbackReportFormat.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -0,0 +1,27 @@\n+package com.customify.server.response_data_format.report;\n+\n+public class FeedbackReportFormat {\n+    private int totalCustomers;\n+    private String created_at;\n+\n+    public FeedbackReportFormat(int totalCustomers, String created_at) {\n+        this.totalCustomers = totalCustomers;\n+        this.created_at = created_at;\n+    }\n+\n+    public int getTotalCustomers() {\n+        return totalCustomers;\n+    }\n+\n+    public void setTotalCustomers(int totalCustomers) {\n+        this.totalCustomers = totalCustomers;\n+    }\n+\n+    public String getCreated_at() {\n+        return created_at;\n+    }\n+\n+    public void setCreated_at(String created_at) {\n+        this.created_at = created_at;\n+    }\n+}"
  },
  {
    "sha": "385540a238715c5ef5a457bb3e9e454d4b345ec3",
    "filename": "src/com/customify/server/response_data_format/report/NotificationReportFormat.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/response_data_format/report/NotificationReportFormat.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/response_data_format/report/NotificationReportFormat.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/server/response_data_format/report/NotificationReportFormat.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -0,0 +1,28 @@\n+package com.customify.server.response_data_format.report;\n+\n+public class NotificationReportFormat {\n+    private int totalCustomers;\n+    private String created_at;\n+    public  NotificationReportFormat(){}\n+\n+    public NotificationReportFormat(int totalCustomers, String created_at) {\n+        this.totalCustomers = totalCustomers;\n+        this.created_at = created_at;\n+    }\n+\n+    public int getTotalCustomers() {\n+        return totalCustomers;\n+    }\n+\n+    public void setTotalCustomers(int totalCustomers) {\n+        this.totalCustomers = totalCustomers;\n+    }\n+\n+    public String getCreated_at() {\n+        return created_at;\n+    }\n+\n+    public void setCreated_at(String created_at) {\n+        this.created_at = created_at;\n+    }\n+}"
  },
  {
    "sha": "d3c24a142379d8862fa0971707de2a6673df479b",
    "filename": "src/com/customify/server/response_data_format/sale/SaleDataFormat.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/response_data_format/sale/SaleDataFormat.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/response_data_format/sale/SaleDataFormat.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/server/response_data_format/sale/SaleDataFormat.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -17,6 +17,15 @@ public SaleDataFormat(int saleId, String customerID, String quantity, String tot\n         this.productID = productID;\n     }\n \n+\n+    public SaleDataFormat(String customerID, String quantity, String totalPrice, String employeeID, String productID) {\n+        this.customerID = customerID;\n+        this.quantity = quantity;\n+        this.totalPrice = totalPrice;\n+        this.employeeID = employeeID;\n+        this.productID = productID;\n+    }\n+\n     public int getSaleId() {\n         return saleId;\n     }"
  },
  {
    "sha": "6c65a65830603080b937fecb6b2804ed45da427f",
    "filename": "src/com/customify/server/services/PointsService.java",
    "status": "modified",
    "additions": 131,
    "deletions": 62,
    "changes": 193,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/services/PointsService.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/services/PointsService.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/server/services/PointsService.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -1,63 +1,132 @@\n-//package com.customify.server.services;\n-//\n-//import com.customify.server.Db.Db;\n-//\n-//import java.sql.Connection;\n-//import java.sql.PreparedStatement;\n-//import java.sql.ResultSet;\n-//import java.sql.SQLException;\n-//\n-///**\n-// * @author GISA KAZE Fredson\n-// */\n-//public class PointsService {\n-//    public static boolean recordPointsAfterSale(SaleDataFormat saleDataFormat) throws SQLException {\n-//        try {\n-//            Connection connection = Db.getConnection();\n-//\n-//            PreparedStatement preparedStatement = connection.prepareStatement(\"SELECT bonded_points FROM products WHERE products.id =?\");\n-//            preparedStatement.setInt(1, saleDataFormat.getProductId());\n-//\n-//            ResultSet resultSet = preparedStatement.executeQuery();\n-//            float product_points = 0;\n-//            if (preparedStatement.executeUpdate() == 0) return false;\n-//\n-//\n-//            while (resultSet.next()) {\n-//                product_points = saleDataFormat.getQuantity() * resultSet.getFloat(\"bonded_points\");\n-//            }\n-//\n-//            preparedStatement = connection.prepareStatement(\"INSERT INTO Points(customer_id,number_of_points,`source`) VALUES (?,?,'product')\");\n-//            preparedStatement.setInt(1, saleDataFormat.getCustomerId());\n-//            preparedStatement.setFloat(2, product_points);\n-//\n-//            if (preparedStatement.executeUpdate() == 0) return false;\n-//\n-//            preparedStatement  = connection.prepareStatement(\"UPDATE Points_winning SET no_points = no_points+? WHERE customer_id = ?\");\n-//            preparedStatement.setFloat(1,product_points);\n-//            preparedStatement.setInt(2,saleDataFormat.getCustomerId());\n-//\n-//            if (preparedStatement.executeUpdate() < 1){\n-//                preparedStatement  = connection.prepareStatement(\"INSERT INTO Points_winning(customer_id,no_points) values (?,?)\");\n-//                preparedStatement.setInt(1,saleDataFormat.getCustomerId());\n-//                preparedStatement.setFloat(2,product_points);\n-//            }\n-//\n-//            return true;\n-//        }\n-//        catch (SQLException e){\n-//            System.out.println(e.getMessage());\n-//            return false;\n-//        }\n+/**\n+ * @author GISA KAZE Fredson\n+ */\n+\n+package com.customify.server.services;\n+\n+import com.customify.server.CustomizedObjectOutputStream;\n+import com.customify.server.Db.Db;\n+import com.customify.server.response_data_format.*;\n+import com.customify.server.response_data_format.sale.SaleDataFormat;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+//import com.customify.server.data_format.*;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.io.ObjectOutputStream;\n+import java.io.OutputStream;\n+import java.net.Socket;\n+import java.sql.*;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.Statement;\n+\n+public class PointsService {\n+    private Socket socket;\n+    //    private Request request;\n+    DataOutputStream output;\n+    ObjectOutputStream objectOutputStream;\n+    OutputStream outputStream;\n+    private ObjectMapper objectMapper = new ObjectMapper();\n+\n+\n+    public PointsService(Socket socket) {\n+        this.socket = socket;\n+    }\n+\n+    /**\n+     * @author GISA KAZE Fredson\n+     */\n+//    public void getPointsByCustomerEmail() {\n+//        PointsByCustomerEmailFormat data = (PointsByCustomerEmailFormat) request.getObject();\n+//        System.out.println(\"Customer email: \" + data.getEmail());\n //    }\n-//\n-//    public String customer() {\n-//        try {\n-//            ResultSet product = Db.getStatement().executeQuery(\"SELECT * FROM products\");\n-//\n-//        } catch (SQLException e) {\n-//            e.printStackTrace();\n-//        }\n-//        return \"Home\";\n-//    }\n-//}\n+\n+    public void getWinners() throws SQLException, IOException {\n+        System.out.println(\"Request to get winners received at server\");\n+        String sql = \"SELECT Points_winning.customer_id,no_points,Points_winning.created_at,first_name,last_name,email,code FROM Points_winning INNER JOIN Customer ON Points_winning.customer_id = Customer.customer_id AND no_points >= 15\";\n+//        Response response;\n+        List<String> winners = new ArrayList();\n+\n+        try {\n+            Statement statement = Db.getStatement();\n+            ResultSet records = statement.executeQuery(sql);\n+\n+//            CustomizedObjectOutputStream outputStream = new CustomizedObjectOutputStream(new ObjectOutputStream(socket.getOutputStream()));\n+\n+            while (records.next()) {\n+                WinnersDataFormat winnersDataFormat = new WinnersDataFormat(\n+                        records.getString(\"customer_id\"),\n+                        records.getString(\"first_name\"),\n+                        records.getString(\"last_name\"),\n+                        records.getString(\"email\"),\n+                        records.getInt(\"no_points\"),\n+                        records.getString(\"created_at\"),\n+                        records.getString(\"code\")\n+                );\n+                String jsonData = this.objectMapper.writeValueAsString(winnersDataFormat);\n+                winners.add(jsonData);\n+            }\n+//            System.out.println(winners);\n+        } catch (SQLException e) {\n+            System.out.println(e.getMessage());\n+//            response = new Response(500,new Object());\n+        }finally{\n+            outputStream = socket.getOutputStream();\n+            this.objectOutputStream = new CustomizedObjectOutputStream(this.outputStream);\n+            objectOutputStream.writeObject(winners);\n+            resetWinners();\n+        }\n+\n+    }\n+\n+    public void resetWinners() throws SQLException {\n+        String clear = \"Update Points_winning set no_points = no_points - 15 where no_points >= 15\";\n+        Connection connection = Db.getConnection();\n+        PreparedStatement preparedStatement = connection.prepareStatement(clear);\n+        preparedStatement.executeUpdate();\n+    }\n+\n+\n+    public static boolean recordPointsAfterSale(SaleDataFormat saleDataFormat) throws SQLException {\n+        try {\n+            Connection connection = Db.getConnection();\n+\n+            PreparedStatement preparedStatement = connection.prepareStatement(\"SELECT bonded_points FROM products WHERE products.id =?\");\n+            preparedStatement.setInt(1, Integer.parseInt(saleDataFormat.getProductID()));\n+\n+            ResultSet resultSet = preparedStatement.executeQuery();\n+            float product_points = 0;\n+            if (preparedStatement.executeUpdate() == 0) return false;\n+\n+\n+            while (resultSet.next()) {\n+                product_points = Float.parseFloat(saleDataFormat.getQuantity() )* resultSet.getFloat(\"bonded_points\");\n+            }\n+\n+            preparedStatement = connection.prepareStatement(\"INSERT INTO Points(customer_id,number_of_points,`source`) VALUES (?,?,'product')\");\n+            preparedStatement.setString(1, saleDataFormat.getCustomerID());\n+            preparedStatement.setFloat(2, product_points);\n+\n+            if (preparedStatement.executeUpdate() == 0) return false;\n+\n+            preparedStatement  = connection.prepareStatement(\"UPDATE Points_winning SET no_points = no_points+? WHERE customer_id = ?\");\n+            preparedStatement.setFloat(1,product_points);\n+            preparedStatement.setString(2,saleDataFormat.getCustomerID());\n+\n+            if (preparedStatement.executeUpdate() < 1){\n+                preparedStatement  = connection.prepareStatement(\"INSERT INTO Points_winning(customer_id,no_points) values (?,?)\");\n+                preparedStatement.setString(1,saleDataFormat.getCustomerID());\n+                preparedStatement.setFloat(2,product_points);\n+            }\n+\n+            return true;\n+        }\n+        catch (SQLException e){\n+            System.out.println(e.getMessage());\n+            return false;\n+        }\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "1ed27fb80cc98e66c787cd51cccb387e62838fab",
    "filename": "src/com/customify/server/services/SalesService.java",
    "status": "modified",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/services/SalesService.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/services/SalesService.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/server/services/SalesService.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -34,18 +34,28 @@ public void buyAProduct(String jsonData) throws IOException {\n         try{\n             ObjectMapper objectMapper = new ObjectMapper();\n             JsonNode jsonNode = objectMapper.readTree(jsonData);\n+            PointsService pointsService;\n \n             String query = \"INSERT INTO Sale(customerID, quantity, totalPrice, employeeID, productID) VALUES (?,?,?,?,?)\";\n \n             PreparedStatement statement = connection.prepareStatement(query);\n \n+\n+\n+\n             statement.setString(1,jsonNode.get(\"customerID\").asText());\n             statement.setString(2,jsonNode.get(\"quantity\").asText());\n             statement.setString(3,jsonNode.get(\"totalPrice\").asText());\n             statement.setString(4,jsonNode.get(\"employeeID\").asText());\n             statement.setString(5,jsonNode.get(\"productID\").asText());\n             statement.execute();\n+\n+            SaleDataFormat saleDataFormat = new SaleDataFormat(jsonNode.get(\"customerID\").asText(),jsonNode.get(\"quantity\").asText(),jsonNode.get(\"totalPrice\").asText(),jsonNode.get(\"employeeID\").asText(),jsonNode.get(\"productID\").asText());\n+\n+            PointsService.recordPointsAfterSale(saleDataFormat);\n+\n             this.sendToClient(\"Product sold!\");\n+\n         }catch (JsonProcessingException e){\n             this.sendToClient(\"Failed to parse request\");\n         } catch (IOException ioException) {\n@@ -64,7 +74,7 @@ public void getAllSales() throws IOException {\n \n             ResultSet resultSet = statement.executeQuery(query);\n             while (resultSet.next()){\n-                this.saleDataFormat = new SaleDataFormat(resultSet.getInt(1),resultSet.getString(2),resultSet.getString(3),resultSet.getString(4),resultSet.getString(5),resultSet.getString(6));\n+                this.saleDataFormat = new SaleDataFormat(resultSet.getInt(1),resultSet.getString(2),(resultSet.getString(3)),resultSet.getString(4),resultSet.getString(5),resultSet.getString(6));\n                 String jsonData = this.objectMapper.writeValueAsString(saleDataFormat);\n                 sales.add(jsonData);\n             }"
  },
  {
    "sha": "5e41b94e4bd8bebdee3cd80c62cd04511a495e2c",
    "filename": "src/com/customify/server/services/reports/CouponReportService.java",
    "status": "added",
    "additions": 94,
    "deletions": 0,
    "changes": 94,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/services/reports/CouponReportService.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/services/reports/CouponReportService.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/server/services/reports/CouponReportService.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -0,0 +1,94 @@\n+package com.customify.server.services.reports;\n+\n+import com.customify.server.Db.Db;\n+import com.customify.server.SendToClient;\n+import com.customify.server.response_data_format.report.CouponReportFormat;\n+import com.customify.server.response_data_format.report.NotificationReportFormat;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.io.ObjectOutputStream;\n+import java.io.OutputStream;\n+import java.net.Socket;\n+import java.sql.Connection;\n+import java.sql.ResultSet;\n+import java.sql.Statement;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class CouponReportService {\n+    Socket socket;\n+    OutputStream output;\n+    ObjectOutputStream objectOutput;\n+    Connection connection = Db.getConnection();\n+    List<String> response = new ArrayList<>();\n+    String statusCode;\n+    public CouponReportService(){}\n+    public  CouponReportService(Socket socket) throws IOException {\n+        this.socket = socket;\n+        this.output = socket.getOutputStream();\n+        this.objectOutput = new ObjectOutputStream(output);\n+    }\n+    public  void getAllTotalCouponsDaily(){\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        //formatting the response into a data format\n+        Statement statement = Db.getStatement();\n+        String query = \"Select count(id)  as TotalCoupons ,date(created_at) from Coupon group by date(created_at)\";\n+\n+        try {\n+            this.statusCode = \"200\";\n+            response.add(this.statusCode);\n+            ResultSet res = statement.executeQuery(query);\n+            String data;\n+            while(res.next()){\n+\n+                NotificationReportFormat bs = new NotificationReportFormat(\n+                        res.getInt(1),\n+                        res.getString(2)\n+                );\n+                data = objectMapper.writeValueAsString(bs);\n+                response.add(data);\n+            }\n+        }\n+        catch (Exception e){\n+            this.statusCode = \"500\";\n+            response.add(this.statusCode);\n+        }\n+        finally{\n+            SendToClient sendToClient = new SendToClient(this.socket, this.response);\n+        }\n+    }\n+\n+\n+    public  void getAllTotalCouponsWeekly(){\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        //formatting the response into a data format\n+        Statement statement = Db.getStatement();\n+        String query = \"Select count(id)  as TotalCoupons ,date(created_at) from Coupon group by week(created_at)\";\n+\n+        try {\n+            this.statusCode = \"200\";\n+            response.add(this.statusCode);\n+            ResultSet res = statement.executeQuery(query);\n+            String data;\n+            while(res.next()){\n+\n+                CouponReportFormat bs = new CouponReportFormat(\n+                        res.getInt(1),\n+                        res.getString(2)\n+                );\n+                data = objectMapper.writeValueAsString(bs);\n+                response.add(data);\n+            }\n+        }\n+        catch (Exception e){\n+            this.statusCode = \"500\";\n+            response.add(this.statusCode);\n+        }\n+        finally{\n+            SendToClient sendToClient = new SendToClient(this.socket, this.response);\n+        }\n+    }\n+\n+\n+}"
  },
  {
    "sha": "1e41714101b878155f320b0acaed6b3da4a66e42",
    "filename": "src/com/customify/server/services/reports/CustomerFeedbacksReportService.java",
    "status": "added",
    "additions": 92,
    "deletions": 0,
    "changes": 92,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/services/reports/CustomerFeedbacksReportService.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/services/reports/CustomerFeedbacksReportService.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/server/services/reports/CustomerFeedbacksReportService.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -0,0 +1,92 @@\n+package com.customify.server.services.reports;\n+\n+import com.customify.server.Db.Db;\n+import com.customify.server.SendToClient;\n+import com.customify.server.response_data_format.report.NotificationReportFormat;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.io.ObjectOutputStream;\n+import java.io.OutputStream;\n+import java.net.Socket;\n+import java.sql.Connection;\n+import java.sql.ResultSet;\n+import java.sql.Statement;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class CustomerFeedbacksReportService {\n+    Socket socket;\n+    OutputStream output;\n+    ObjectOutputStream objectOutput;\n+    Connection connection = Db.getConnection();\n+    List<String> response = new ArrayList<>();\n+    String statusCode;\n+    public CustomerFeedbacksReportService(){}\n+    public  CustomerFeedbacksReportService(Socket socket) throws IOException {\n+        this.socket = socket;\n+        this.output = socket.getOutputStream();\n+        this.objectOutput = new ObjectOutputStream(output);\n+    }\n+    public  void getAllTotalFeedbackDaily(){\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        //formatting the response into a data format\n+        Statement statement = Db.getStatement();\n+        String query = \"Select count(id)  as TotalFeedback ,date(created_at) from CustomerFeedbacks group by date(created_at)\";\n+\n+        try {\n+            this.statusCode = \"200\";\n+            response.add(this.statusCode);\n+            ResultSet res = statement.executeQuery(query);\n+            String data;\n+            while(res.next()){\n+\n+                NotificationReportFormat bs = new NotificationReportFormat(\n+                        res.getInt(1),\n+                        res.getString(2)\n+                );\n+                data = objectMapper.writeValueAsString(bs);\n+                response.add(data);\n+            }\n+        }\n+        catch (Exception e){\n+            this.statusCode = \"500\";\n+            response.add(this.statusCode);\n+        }\n+        finally{\n+            SendToClient sendToClient = new SendToClient(this.socket, this.response);\n+        }\n+    }\n+\n+\n+    public  void getAllTotalFeedbackWeekly(){\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        //formatting the response into a data format\n+        Statement statement = Db.getStatement();\n+        String query = \"Select count(id)  as TotalFeedback ,date(created_at) from CustomerFeedbacks group by week(created_at)\";\n+\n+        try {\n+            this.statusCode = \"200\";\n+            response.add(this.statusCode);\n+            ResultSet res = statement.executeQuery(query);\n+            String data;\n+            while(res.next()){\n+\n+                NotificationReportFormat bs = new NotificationReportFormat(\n+                        res.getInt(1),\n+                        res.getString(2)\n+                );\n+                data = objectMapper.writeValueAsString(bs);\n+                response.add(data);\n+            }\n+        }\n+        catch (Exception e){\n+            this.statusCode = \"500\";\n+            response.add(this.statusCode);\n+        }\n+        finally{\n+            SendToClient sendToClient = new SendToClient(this.socket, this.response);\n+        }\n+    }\n+\n+}"
  },
  {
    "sha": "a1ae7b1e188004965c7abf5387d16ce2abb26021",
    "filename": "src/com/customify/server/services/reports/NotificationsReportService.java",
    "status": "added",
    "additions": 101,
    "deletions": 0,
    "changes": 101,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/services/reports/NotificationsReportService.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/services/reports/NotificationsReportService.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/server/services/reports/NotificationsReportService.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -0,0 +1,101 @@\n+/**\n+ * @author Fiston Nshimiyandinze\n+ * @role\n+ * For handling reports concerned with business\n+ * */\n+package com.customify.server.services.reports;\n+\n+import com.customify.server.Db.Db;\n+import com.customify.server.SendToClient;\n+import com.customify.server.response_data_format.report.BusinessReportFormat;\n+import com.customify.server.response_data_format.report.NotificationReportFormat;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import java.io.IOException;\n+import java.io.ObjectOutputStream;\n+import java.io.OutputStream;\n+import java.net.Socket;\n+import java.sql.Connection;\n+import java.sql.ResultSet;\n+import java.sql.Statement;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class NotificationsReportService {\n+    Socket socket;\n+    OutputStream output;\n+    ObjectOutputStream objectOutput;\n+    Connection connection = Db.getConnection();\n+    List<String> response = new ArrayList<>();\n+    String statusCode;\n+    public NotificationsReportService(){}\n+    public  NotificationsReportService(Socket socket) throws IOException {\n+        this.socket = socket;\n+        this.output = socket.getOutputStream();\n+        this.objectOutput = new ObjectOutputStream(output);\n+    }\n+    public  void getAllNotificationDaily(){\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        //formatting the response into a data format\n+        Statement statement = Db.getStatement();\n+        String query = \"Select count(id)  as TotalNotification ,date(created_at) from Awards_Notifications group by date(created_at)\";\n+\n+        try {\n+            this.statusCode = \"200\";\n+            response.add(this.statusCode);\n+            ResultSet res = statement.executeQuery(query);\n+            String data;\n+            while(res.next()){\n+\n+                NotificationReportFormat bs = new NotificationReportFormat(\n+                        res.getInt(1),\n+                        res.getString(2)\n+                );\n+                data = objectMapper.writeValueAsString(bs);\n+                response.add(data);\n+            }\n+        }\n+        catch (Exception e){\n+            this.statusCode = \"500\";\n+            response.add(this.statusCode);\n+        }\n+        finally{\n+            SendToClient sendToClient = new SendToClient(this.socket, this.response);\n+        }\n+    }\n+\n+\n+    public  void getAllNotificationWeekly(){\n+        ObjectMapper objectMapper = new ObjectMapper();\n+        //formatting the response into a data format\n+        Statement statement = Db.getStatement();\n+        String query = \"Select count(id)  as TotalNotifications ,date(created_at) from Awards_Notifications group by week(created_at)\";\n+\n+        try {\n+            this.statusCode = \"200\";\n+            response.add(this.statusCode);\n+            ResultSet res = statement.executeQuery(query);\n+            String data;\n+            while(res.next()){\n+\n+                NotificationReportFormat bs = new NotificationReportFormat(\n+                        res.getInt(1),\n+                        res.getString(2)\n+                );\n+                data = objectMapper.writeValueAsString(bs);\n+                response.add(data);\n+            }\n+        }\n+        catch (Exception e){\n+            this.statusCode = \"500\";\n+            response.add(this.statusCode);\n+        }\n+        finally{\n+            SendToClient sendToClient = new SendToClient(this.socket, this.response);\n+        }\n+    }\n+\n+\n+\n+\n+}"
  },
  {
    "sha": "50c26996a65453df77cb94e82638e458b5cc045f",
    "filename": "src/com/customify/server/utils/RequestHandler.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/PatrickNiyogitare28/customify/blob/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/utils/RequestHandler.java",
    "raw_url": "https://github.com/PatrickNiyogitare28/customify/raw/530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6/src/com/customify/server/utils/RequestHandler.java",
    "contents_url": "https://api.github.com/repos/PatrickNiyogitare28/customify/contents/src/com/customify/server/utils/RequestHandler.java?ref=530fcbbf0c3aa1c4b4f28d2e20fbfc3412e24bf6",
    "patch": "@@ -46,7 +46,7 @@ public void init(InputStream inputStream) throws Exception {\n     }\n \n     public void handleRequest() throws Exception {\n-        CustomerService customer = new CustomerService(this.clientSocket);\n+        CustomerService customer = new CustomerService(this.clientSocket,json_data);\n         EmployeeService employee = new EmployeeService(this.clientSocket);\n         BusinessService businessService = new BusinessService(this.clientSocket);\n         ProductService productService = new ProductService(this.clientSocket);\n@@ -130,7 +130,7 @@ public void handleRequest() throws Exception {\n                 AuthService auth = new AuthService(this.clientSocket,this.json_data);\n                 break;\n             case DISABLE_CUSTOMER:\n-//                customer.disable();\n+                customer.disable();\n                 break;\n             case CREATE_COUPON:\n                 couponService.createCoupon(json_data);"
  }
]
