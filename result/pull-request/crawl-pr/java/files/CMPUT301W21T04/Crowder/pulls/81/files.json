[
  {
    "sha": "53a309625b66e62864dce266732d7c491055aca6",
    "filename": "CrowderApp/app/src/main/java/com/example/crowderapp/controllers/UserHandler.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/CMPUT301W21T04/Crowder/blob/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/java/com/example/crowderapp/controllers/UserHandler.java",
    "raw_url": "https://github.com/CMPUT301W21T04/Crowder/raw/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/java/com/example/crowderapp/controllers/UserHandler.java",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T04/Crowder/contents/CrowderApp/app/src/main/java/com/example/crowderapp/controllers/UserHandler.java?ref=5f71378cae3048b0e5d9381ef3ba2a736105e509",
    "patch": "@@ -103,18 +103,18 @@ public void getCurrentUser(getUserByIDCallBack cb) {\n      */\n     public void observeCurrentUser(Activity activity, UserDAO.UserObserver obs) {\n         currentUserTask.addOnSuccessListener(user -> {\n-            observerUser(user, activity, obs);\n+            observerUser(user.getUid(), activity, obs);\n         });\n     }\n \n     /**\n-     * Observe a user. Synchronous, no tasks.\n-     * @param user\n+     * Observe a user.\n+     * @param userId The Id of user\n      * @param activity Activity reference to prevent activity leak.\n      * @param obs The observer\n      */\n-    public void observerUser(User user, Activity activity, UserDAO.UserObserver obs) {\n-        userDAO.observeUser(user.getUid(), activity, obs);\n+    public void observerUser(String userId, Activity activity, UserDAO.UserObserver obs) {\n+        userDAO.observeUser(userId, activity, obs);\n     }\n \n     /**"
  },
  {
    "sha": "39a8d85fe4102cbefdc47612f484e54ba4786ab5",
    "filename": "CrowderApp/app/src/main/java/com/example/crowderapp/controllers/adapters/SearchListAdapter.java",
    "status": "modified",
    "additions": 24,
    "deletions": 4,
    "changes": 28,
    "blob_url": "https://github.com/CMPUT301W21T04/Crowder/blob/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/java/com/example/crowderapp/controllers/adapters/SearchListAdapter.java",
    "raw_url": "https://github.com/CMPUT301W21T04/Crowder/raw/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/java/com/example/crowderapp/controllers/adapters/SearchListAdapter.java",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T04/Crowder/contents/CrowderApp/app/src/main/java/com/example/crowderapp/controllers/adapters/SearchListAdapter.java?ref=5f71378cae3048b0e5d9381ef3ba2a736105e509",
    "patch": "@@ -15,21 +15,38 @@\n import com.example.crowderapp.controllers.UserHandler;\n import com.example.crowderapp.models.AllExperimentListItem;\n import com.example.crowderapp.models.Experiment;\n+import com.example.crowderapp.models.User;\n \n import java.util.List;\n \n public class SearchListAdapter extends ArrayAdapter<AllExperimentListItem> {\n     private List<AllExperimentListItem> experiments;\n     private Context context;\n-    private final View.OnClickListener listener;\n+    private final View.OnClickListener subListener;\n+    private final UsernameClickCallback userListener;\n     private UserHandler handler;\n \n+    /**\n+     * Callback for clicking a user.\n+     */\n+    public interface UsernameClickCallback {\n+        void userClicked(String userId);\n+    }\n+\n \n-    public SearchListAdapter(Context context, List<AllExperimentListItem> experiments, View.OnClickListener listener) {\n+    /**\n+     * Constructor.\n+     * @param context Android Context.\n+     * @param experiments List of Experiment List Items.\n+     * @param subListener The listener for when subscribe is clicked.\n+     * @param userListener The callback for when username is clicked.\n+     */\n+    public SearchListAdapter(Context context, List<AllExperimentListItem> experiments, View.OnClickListener subListener, UsernameClickCallback userListener) {\n         super(context,0,experiments);\n         this.experiments = experiments;\n         this.context = context;\n-        this.listener = listener;\n+        this.subListener = subListener;\n+        this.userListener = userListener;\n         handler = new UserHandler(getContext().getSharedPreferences(UserHandler.USER_DATA_KEY, Context.MODE_PRIVATE));\n     }\n \n@@ -49,7 +66,7 @@ public View getView(int position, @Nullable View view, @NonNull ViewGroup parent\n \n         // Init subscribe box\n         subscribed.setTag(position);\n-        subscribed.setOnClickListener(listener);\n+        subscribed.setOnClickListener(subListener);\n \n         expName.setText(experiment.getName());\n         status.setText(experiment.isEnded() ? \"Ended\" : \"Active\");\n@@ -65,6 +82,9 @@ public View getView(int position, @Nullable View view, @NonNull ViewGroup parent\n                 }\n                 else {\n                     username.setText(user.getName());\n+                    username.setOnClickListener((v) -> {\n+                        userListener.userClicked(user.getUid());\n+                    });\n                 }\n             });\n         }"
  },
  {
    "sha": "fd759d85217a474ff55945fd38be8f54d9dc5399",
    "filename": "CrowderApp/app/src/main/java/com/example/crowderapp/views/AllExperimentsFragment.java",
    "status": "modified",
    "additions": 12,
    "deletions": 1,
    "changes": 13,
    "blob_url": "https://github.com/CMPUT301W21T04/Crowder/blob/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/java/com/example/crowderapp/views/AllExperimentsFragment.java",
    "raw_url": "https://github.com/CMPUT301W21T04/Crowder/raw/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/java/com/example/crowderapp/views/AllExperimentsFragment.java",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T04/Crowder/contents/CrowderApp/app/src/main/java/com/example/crowderapp/views/AllExperimentsFragment.java?ref=5f71378cae3048b0e5d9381ef3ba2a736105e509",
    "patch": "@@ -135,13 +135,24 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa\n         searchEditText = view.findViewById(R.id.search_EditText);\n         searchBtn = view.findViewById(R.id.search_btn);\n         // Init search adapter\n-        searchListAdapter = new SearchListAdapter(thisContext, allExperimentListItems, listener);\n+        searchListAdapter = new SearchListAdapter(thisContext, allExperimentListItems, listener, userId -> openUserFragment(userId));\n \n         searchBtn.setOnClickListener(v -> handleSearch());\n \n         return view;\n     }\n \n+    /**\n+     * Opens an immutable user fragment.\n+     * @param userId The ID of user whose profile to open\n+     */\n+    public void openUserFragment(String userId) {\n+        FragmentTransaction transaction = getActivity().getSupportFragmentManager().beginTransaction();\n+        transaction.replace(R.id.container, ImmutableProfileFragment.newInstance(userId));\n+        transaction.addToBackStack(null);\n+        transaction.commit();\n+    }\n+\n     /**\n      * To be called when the search button is clicked.\n      * Retrieves all experiments again and filters by search string."
  },
  {
    "sha": "2c00b13b04f21a425d19a7d1b88d38d81bd4df1d",
    "filename": "CrowderApp/app/src/main/java/com/example/crowderapp/views/ImmutableProfileFragment.java",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/CMPUT301W21T04/Crowder/blob/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/java/com/example/crowderapp/views/ImmutableProfileFragment.java",
    "raw_url": "https://github.com/CMPUT301W21T04/Crowder/raw/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/java/com/example/crowderapp/views/ImmutableProfileFragment.java",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T04/Crowder/contents/CrowderApp/app/src/main/java/com/example/crowderapp/views/ImmutableProfileFragment.java?ref=5f71378cae3048b0e5d9381ef3ba2a736105e509",
    "patch": "@@ -0,0 +1,83 @@\n+package com.example.crowderapp.views;\n+\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+import com.example.crowderapp.R;\n+import com.example.crowderapp.models.User;\n+import com.example.crowderapp.models.dao.UserDAO;\n+\n+/**\n+ * Shows information for a current user.\n+ * Unlike the normal ProfileFragment, there are no options to edit the user\n+ * info in this fragment.\n+ */\n+public class ImmutableProfileFragment extends ProfileFragment {\n+\n+    private final static String USER_ID = \"USER_ID\";\n+\n+    /**\n+     * Creates the profile view with a specific user.\n+     * @param userId\n+     * @return\n+     */\n+    public static ImmutableProfileFragment newInstance(String userId) {\n+        ImmutableProfileFragment fragment = new ImmutableProfileFragment();\n+        Bundle args = new Bundle();\n+        args.putString(USER_ID, userId);\n+        fragment.setArguments(args);\n+        return fragment;\n+    }\n+\n+    /**\n+     * Create the profile view for a specific user.\n+     * @return\n+     */\n+    public static ImmutableProfileFragment newInstance() {\n+        ImmutableProfileFragment fragment = new ImmutableProfileFragment();\n+        Bundle args = new Bundle();\n+        fragment.setArguments(args);\n+        return fragment;\n+    }\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+        View view = inflater.inflate(R.layout.profile_fragment, container, false);\n+        attachViews(view);\n+\n+        // Set edit button to not appear\n+        editBtn.setVisibility(View.INVISIBLE);\n+\n+        // Can't edit fields.\n+        emailBox.setEnabled(false);\n+        phoneBox.setEnabled(false);\n+        usernameBox.setEnabled(false);\n+\n+        Bundle bundle = getArguments();\n+        String userId = bundle.getString(USER_ID);\n+\n+        // Observer to update the fields\n+        UserDAO.UserObserver obs = new UserDAO.UserObserver() {\n+            @Override\n+            public void update(UserDAO dao, User receive_user) {\n+                emailBox.setText(receive_user.getEmail());\n+                phoneBox.setText(receive_user.getPhone());\n+                usernameBox.setText(receive_user.getName());\n+                user = receive_user;\n+            }\n+        };\n+\n+        if (userId == null) {\n+            // Show current user.\n+            userHandler.observeCurrentUser(getActivity(), obs);\n+        }\n+        else {\n+            // Show the chosen user\n+            userHandler.observerUser(userId, getActivity(), obs);\n+        }\n+\n+        return view;\n+    }\n+}"
  },
  {
    "sha": "6b569c77ab5a6624aad58636bebb0121c09ec45e",
    "filename": "CrowderApp/app/src/main/java/com/example/crowderapp/views/ProfileFragment.java",
    "status": "modified",
    "additions": 31,
    "deletions": 11,
    "changes": 42,
    "blob_url": "https://github.com/CMPUT301W21T04/Crowder/blob/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/java/com/example/crowderapp/views/ProfileFragment.java",
    "raw_url": "https://github.com/CMPUT301W21T04/Crowder/raw/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/java/com/example/crowderapp/views/ProfileFragment.java",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T04/Crowder/contents/CrowderApp/app/src/main/java/com/example/crowderapp/views/ProfileFragment.java?ref=5f71378cae3048b0e5d9381ef3ba2a736105e509",
    "patch": "@@ -1,5 +1,6 @@\n package com.example.crowderapp.views;\n \n+import android.app.Activity;\n import android.content.Context;\n import android.graphics.drawable.Drawable;\n import android.os.Bundle;\n@@ -21,21 +22,27 @@\n import com.example.crowderapp.controllers.UserHandler;\n import com.example.crowderapp.models.User;\n \n+/**\n+ * Fragment to show the current user info.\n+ * Should never be used with non local user as this allows information\n+ * to be edited.\n+ */\n public class ProfileFragment extends Fragment {\n \n-    UserHandler userHandler;\n+    protected UserHandler userHandler;\n+    protected User user;\n \n-    EditText phoneBox;\n-    EditText emailBox;\n-    EditText usernameBox;\n-    ImageButton editBtn;\n+    protected EditText phoneBox;\n+    protected EditText emailBox;\n+    protected EditText usernameBox;\n+    protected ImageButton editBtn;\n \n-    Drawable editImage;\n-    Drawable checkImage;\n+    protected Drawable editImage;\n+    protected Drawable checkImage;\n \n-    boolean editMode = false;\n+    protected boolean editMode = false;\n \n-    User user;\n+    protected Activity parentActivity;\n \n     public ProfileFragment() {\n     }\n@@ -58,14 +65,27 @@ public void onCreate(Bundle savedInstanceState) {\n     }\n \n     @Override\n-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n-        View view = inflater.inflate(R.layout.profile_fragment, container, false);\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+    }\n \n+    /**\n+     * Create references to all the views in a parent view/fragment.\n+     * @param view The view representing the fragment.\n+     */\n+    protected void attachViews(View view) {\n         emailBox = view.findViewById(R.id.profile_email);\n         phoneBox = view.findViewById(R.id.profile_phone);\n         usernameBox = view.findViewById(R.id.profile_username);\n         editBtn = view.findViewById(R.id.profile_edit);\n \n+    }\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+        View view = inflater.inflate(R.layout.profile_fragment, container, false);\n+        attachViews(view);\n+\n         // Set icon to pencil first\n         editBtn.setImageDrawable(editImage);\n "
  },
  {
    "sha": "f036717921f4538ffc1170f88ec61840df45872e",
    "filename": "CrowderApp/app/src/main/res/layout/all_experiments_search_result.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/CMPUT301W21T04/Crowder/blob/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/res/layout/all_experiments_search_result.xml",
    "raw_url": "https://github.com/CMPUT301W21T04/Crowder/raw/5f71378cae3048b0e5d9381ef3ba2a736105e509/CrowderApp/app/src/main/res/layout/all_experiments_search_result.xml",
    "contents_url": "https://api.github.com/repos/CMPUT301W21T04/Crowder/contents/CrowderApp/app/src/main/res/layout/all_experiments_search_result.xml?ref=5f71378cae3048b0e5d9381ef3ba2a736105e509",
    "patch": "@@ -46,6 +46,8 @@\n         android:layout_height=\"wrap_content\"\n         android:layout_marginStart=\"8dp\"\n         android:layout_marginLeft=\"8dp\"\n+        android:textColor=\"@android:color/holo_blue_dark\"\n+        android:textStyle=\"bold\"\n         app:layout_constraintBaseline_toBaselineOf=\"@+id/textView3\"\n         app:layout_constraintStart_toEndOf=\"@+id/textView3\"\n         tools:text=\"RyanWasHere\" />"
  }
]
