[
  {
    "sha": "89fc4ae46d77a755868846633bd750b827cc4950",
    "filename": "backend/init.sql",
    "status": "modified",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/init.sql",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/init.sql",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/init.sql?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,37 @@\n+CREATE TABLE IF NOT EXISTS area (\n+    id serial PRIMARY KEY,\n+    area_id integer NOT NULL,\n+    area_name varchar NOT NULL\n+);\n+\n+CREATE TABLE IF NOT EXISTS company (\n+    id serial PRIMARY KEY,\n+    company_id integer NOT NULL,\n+    company_name varchar NOT NULL,\n+    date_create timestamp NOT NULL,\n+    description varchar NOT NULL,\n+    area_id integer NOT NULL references area(id),\n+    comment varchar,\n+    views_count integer NOT NULL\n+);\n+\n+CREATE TABLE IF NOT EXISTS salary (\n+    id serial PRIMARY KEY,\n+    to_sal integer,\n+    from_sal integer,\n+    currency varchar NOT NULL,\n+    gross boolean  NOT NULL\n+);\n+\n+CREATE TABLE IF NOT EXISTS vacancy (\n+    id serial PRIMARY KEY,\n+    vacancy_id integer NOT NULL,\n+    vacancy_name varchar NOT NULL,\n+    date_create timestamp NOT NULL,\n+    area_id integer NOT NULL references area(id),\n+    salary_id integer NOT NULL references salary(id),\n+    created_at varchar NOT NULL,\n+    employer_id integer NOT NULL references company(id),\n+    comment varchar,\n+    views_count integer NOT NULL\n+);\n\\ No newline at end of file"
  },
  {
    "sha": "33f43c05e5d6a1f9edbb03a23c7566717c7584c2",
    "filename": "backend/src/main/java/ru/hh/school/config/CommonConfig.java",
    "status": "modified",
    "additions": 55,
    "deletions": 9,
    "changes": 64,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/config/CommonConfig.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/config/CommonConfig.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/config/CommonConfig.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -5,20 +5,66 @@\n import org.springframework.context.annotation.Import;\n import ru.hh.nab.hibernate.MappingConfig;\n import ru.hh.nab.starter.NabCommonConfig;\n+import ru.hh.school.controller.employer.EmployerController;\n+import ru.hh.school.controller.employer.FavEmployerController;\n+import ru.hh.school.controller.vacancy.FavVacancyController;\n+import ru.hh.school.controller.vacancy.VacancyController;\n+import ru.hh.school.dao.AreaDao;\n+import ru.hh.school.dao.CompanyDao;\n+import ru.hh.school.dao.SalaryDao;\n+import ru.hh.school.dao.VacancyDao;\n+import ru.hh.school.mapper.AreaMapper;\n+import ru.hh.school.mapper.CompanyMapper;\n+import ru.hh.school.mapper.SalaryMapper;\n+import ru.hh.school.mapper.VacancyMapper;\n import ru.hh.school.resource.ExampleResource;\n+import ru.hh.school.service.AreaService;\n+import ru.hh.school.service.CompanyService;\n+import ru.hh.school.service.SalaryService;\n+import ru.hh.school.service.VacancyService;\n+\n+import javax.ws.rs.client.Client;\n+import javax.ws.rs.client.ClientBuilder;\n+\n \n @Configuration\n @Import({\n-  // import your beans here\n-  ExampleResource.class,\n-  NabCommonConfig.class\n+        // import your beans here\n+        EmployerController.class,\n+        VacancyController.class,\n+\n+        FavEmployerController.class,\n+        FavVacancyController.class,\n+\n+        ExampleResource.class,\n+        NabCommonConfig.class,\n+\n+        CompanyDao.class,\n+        AreaDao.class,\n+        VacancyDao.class,\n+        SalaryDao.class,\n+\n+        CompanyMapper.class,\n+        AreaMapper.class,\n+        VacancyMapper.class,\n+        SalaryMapper.class,\n+\n+        CompanyService.class,\n+        AreaService.class,\n+        VacancyService.class,\n+        SalaryService.class\n })\n public class CommonConfig {\n \n-  @Bean\n-  public MappingConfig mappingConfig() {\n-    MappingConfig mappingConfig = new MappingConfig();\n-    mappingConfig.addPackagesToScan(\"ru.hh.school.entity\");\n-    return mappingConfig;\n-  }\n+    @Bean\n+    public MappingConfig mappingConfig() {\n+        MappingConfig mappingConfig = new MappingConfig();\n+        mappingConfig.addPackagesToScan(\"ru.hh.school.entity\");\n+        return mappingConfig;\n+    }\n+\n+    @Bean\n+    public Client client() {\n+        return ClientBuilder.newClient();\n+    }\n }"
  },
  {
    "sha": "f9164dfa7152b3bbcabbc606f1067aceb5b4fa3c",
    "filename": "backend/src/main/java/ru/hh/school/controller/employer/EmployerController.java",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/controller/employer/EmployerController.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/controller/employer/EmployerController.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/controller/employer/EmployerController.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,56 @@\n+package ru.hh.school.controller.employer;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import ru.hh.school.dto.company.CompanyDtoByIdResponse;\n+import ru.hh.school.dto.company.CompanyDtoResponseArray;\n+\n+import javax.inject.Singleton;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.client.Client;\n+import javax.ws.rs.core.*;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Singleton\n+@Produces(MediaType.APPLICATION_JSON)\n+@Path(\"/employer\")\n+public class EmployerController {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(EmployerController.class);\n+    private final String EMPLOYER_URL = \"https://api.hh.ru/employers\";\n+    private final Client client;\n+\n+    public EmployerController(Client client) {\n+        this.client = client;\n+    }\n+\n+    @GET\n+    public Response getEmployers(@Context UriInfo allUri) {\n+        StringBuffer stringBuffer = new StringBuffer();\n+        stringBuffer.append(EMPLOYER_URL).append(\"?\");\n+        MultivaluedMap<String, String> mpAllQueParams = allUri.getQueryParameters();\n+        for (Map.Entry<String, List<String>> entry : mpAllQueParams.entrySet()) {\n+            entry.getValue().forEach(v -> stringBuffer.append(entry.getKey()).append(\"=\").append(v).append(\"&\"));\n+        }\n+        Response response = client.target(stringBuffer.toString()).request().get();\n+        int status = response.getStatus();\n+        CompanyDtoResponseArray entity = response.readEntity(CompanyDtoResponseArray.class);\n+        logger.info(\"get employers list\");\n+        return Response.status(status).entity(entity.getItems()).build();\n+    }\n+\n+    @GET\n+    @Path(\"/{employer_id}\")\n+    public Response getVacancy(@PathParam(\"employer_id\") Integer employerId) {\n+        Response response = client.target(EMPLOYER_URL + \"/\" + employerId).request().get();\n+        int status = response.getStatus();\n+        CompanyDtoByIdResponse entity = response.readEntity(CompanyDtoByIdResponse.class);\n+        logger.info(\"get employers info by id\");\n+        return Response.status(status).entity(entity).build();\n+    }\n+}\n+"
  },
  {
    "sha": "21654ae4975fea0096a329abd9b75b636a6a6523",
    "filename": "backend/src/main/java/ru/hh/school/controller/employer/FavEmployerController.java",
    "status": "added",
    "additions": 103,
    "deletions": 0,
    "changes": 103,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/controller/employer/FavEmployerController.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/controller/employer/FavEmployerController.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/controller/employer/FavEmployerController.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,103 @@\n+package ru.hh.school.controller.employer;\n+\n+import ru.hh.school.dto.company.CompanyDtoByIdResponse;\n+import ru.hh.school.entity.Company;\n+import ru.hh.school.mapper.CompanyMapper;\n+import ru.hh.school.service.CompanyService;\n+\n+import javax.inject.Singleton;\n+import javax.ws.rs.*;\n+import javax.ws.rs.client.Client;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+@Path(\"/favorites/employer\")\n+@Produces(MediaType.APPLICATION_JSON)\n+@Singleton\n+public class FavEmployerController {\n+\n+    private final String EMPLOYER_URL = \"https://api.hh.ru/employers\";\n+    private final CompanyService companyService;\n+    private final CompanyMapper companyMapper;\n+    private final Client client;\n+\n+    public FavEmployerController(CompanyService companyService, CompanyMapper companyMapper, Client client) {\n+        this.companyService = companyService;\n+        this.companyMapper = companyMapper;\n+        this.client = client;\n+    }\n+\n+    @POST\n+    public Response addCompanyToFav(@FormParam(\"employer_id\") String employerId,\n+                                    @FormParam(\"comment\") @DefaultValue(\"\") String comment) {\n+        try {\n+            Response response = client.target(EMPLOYER_URL + \"/\" + employerId).request().get();\n+            int status = response.getStatus();\n+            CompanyDtoByIdResponse entity = response.readEntity(CompanyDtoByIdResponse.class);\n+\n+            return Response.status(status).entity(\n+                    companyService.save(companyMapper.mapWithSideEffects(entity, comment))\n+            ).build();\n+        } catch (Exception e) {\n+            return Response.status(404, e.getMessage()).build();\n+        }\n+    }\n+\n+    @GET\n+    public Response getCompanies(@QueryParam(\"page\") @DefaultValue(\"0\") String page,\n+                                 @QueryParam(\"per_page\") @DefaultValue(\"10\") String perPage) {\n+        try {\n+            int pageI = Integer.parseInt(page);\n+            int perPageI = Integer.parseInt(perPage);\n+            List<Company> companies = companyService.getCompanies();\n+            if (pageI * perPageI + perPageI > companies.size()){\n+                companies = companies.subList(pageI * perPageI, pageI * perPageI + perPageI);\n+            }\n+            companies.forEach(c -> companyService.incrementView(c.getId()));\n+            return Response.ok(\n+                    companies.stream().map(companyMapper::mapWithSideEffects)\n+            ).build();\n+        } catch (Exception e) {\n+            return Response.status(404, e.getMessage()).build();\n+        }\n+    }\n+\n+    @PUT\n+    @Path(\"/{employer_id}\")\n+    public Response updateCompany(@PathParam(\"employer_id\") Integer employerId,\n+                                  @FormParam(\"comment\") @DefaultValue(\"\") String comment) {\n+        try {\n+            companyService.updateComment(employerId, comment);\n+            return Response.ok().build();\n+        } catch (Exception e) {\n+            return Response.status(404, e.getMessage()).build();\n+        }\n+    }\n+\n+    @DELETE\n+    @Path(\"/{employer_id}\")\n+    public Response deleteCompany(@PathParam(\"employer_id\") Integer employerId) {\n+        try {\n+            companyService.deleteCompany(employerId);\n+            return Response.ok().build();\n+        } catch (Exception e) {\n+            return Response.status(404, e.getMessage()).build();\n+        }\n+    }\n+\n+    @POST\n+    @Path(\"/{employer_id}/refresh\")\n+    public Response refreshCompany(@PathParam(\"employer_id\") Integer employerId) {\n+        try {\n+            Response response = client.target(EMPLOYER_URL + \"/\" + employerId).request().get();\n+            int status = response.getStatus();\n+            CompanyDtoByIdResponse entity = response.readEntity(CompanyDtoByIdResponse.class);\n+            Company company = companyService.getCompanyById(employerId);\n+            companyService.updateCompany(companyMapper.convertWithSideEffects(entity, company));\n+            return Response.status(status).build();\n+        } catch (Exception e) {\n+            return Response.status(404, e.getMessage()).build();\n+        }\n+    }\n+}"
  },
  {
    "sha": "d05ef9803713e1edbcdb6f6d7739e515b4990392",
    "filename": "backend/src/main/java/ru/hh/school/controller/vacancy/FavVacancyController.java",
    "status": "added",
    "additions": 99,
    "deletions": 0,
    "changes": 99,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/controller/vacancy/FavVacancyController.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/controller/vacancy/FavVacancyController.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/controller/vacancy/FavVacancyController.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,99 @@\n+package ru.hh.school.controller.vacancy;\n+\n+import ru.hh.school.dto.vacancy.VacancyDtoResponse;\n+import ru.hh.school.entity.Vacancy;\n+import ru.hh.school.mapper.VacancyMapper;\n+import ru.hh.school.service.CompanyService;\n+import ru.hh.school.service.VacancyService;\n+\n+import javax.inject.Singleton;\n+import javax.ws.rs.*;\n+import javax.ws.rs.client.Client;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+@Path(\"/favorites/vacancy\")\n+@Produces(MediaType.APPLICATION_JSON)\n+@Singleton\n+public class FavVacancyController {\n+\n+    private final String VACANCY_URL = \"https://api.hh.ru/vacancies\";\n+    private final VacancyService vacancyService;\n+    private final VacancyMapper vacancyMapper;\n+\n+    private final CompanyService companyService;\n+    private final Client client;\n+\n+    public FavVacancyController(VacancyService vacancyService, VacancyMapper vacancyMapper, CompanyService companyService, Client client) {\n+        this.vacancyService = vacancyService;\n+        this.vacancyMapper = vacancyMapper;\n+        this.companyService = companyService;\n+        this.client = client;\n+    }\n+\n+    @POST\n+    public Response addVacancyToFav(@FormParam(\"vacancy_id\") String vacancyId,\n+                                    @FormParam(\"comment\") @DefaultValue(\"\") String comment) {\n+        try {\n+            Response response = client.target(VACANCY_URL + \"/\" + vacancyId).request().get();\n+            int status = response.getStatus();\n+            VacancyDtoResponse entity = response.readEntity(VacancyDtoResponse.class);\n+            return Response.status(status).entity(\n+                    vacancyService.save(vacancyMapper.mapWithSideEffects(entity, comment))\n+            ).build();\n+        } catch (Exception e) {\n+            return Response.status(404, e.getMessage()).build();\n+        }\n+    }\n+\n+    @DELETE\n+    @Path(\"/{vacancy_id}\")\n+    public Response deleteVacancy(@PathParam(\"vacancy_id\") Integer vacancyId) {\n+        try {\n+            vacancyService.deleteVacancy(vacancyId);\n+            return Response.ok().build();\n+        } catch (Exception e) {\n+            return Response.status(404, e.getMessage()).build();\n+        }\n+    }\n+\n+\n+    @POST\n+    @Path(\"/{vacancy_id}/refresh\")\n+    public Response refreshVacancy(@PathParam(\"vacancy_id\") Integer vacancyId) {\n+        try {\n+            Response response = client.target(VACANCY_URL + \"/\" + vacancyId).request().get();\n+            int status = response.getStatus();\n+            VacancyDtoResponse entity = response.readEntity(VacancyDtoResponse.class);\n+            Vacancy vacancy = vacancyService.getVacancyById(vacancyId);\n+            vacancyService.updateVacancy(vacancyMapper.convertWithSideEffects(entity, vacancy));\n+            return Response.status(status).build();\n+        } catch (Exception e) {\n+            return Response.status(404, e.getMessage()).build();\n+        }\n+    }\n+\n+\n+    @GET\n+    public Response getVacancies(@QueryParam(\"page\") @DefaultValue(\"0\") String page,\n+                                 @QueryParam(\"per_page\") @DefaultValue(\"10\") String perPage) {\n+        try {\n+            int pageI = Integer.parseInt(page);\n+            int perPageI = Integer.parseInt(perPage);\n+            List<Vacancy> vacancies = vacancyService.getVacancies();\n+            if (pageI * perPageI + perPageI > vacancies.size()) {\n+                vacancies = vacancies.subList(pageI * perPageI, pageI * perPageI + perPageI);\n+            }\n+            vacancies.forEach(v -> {\n+                companyService.incrementView(v.getEmployer().getId());\n+                vacancyService.incrementView(v.getId());\n+            });\n+            return Response.ok(\n+                    vacancies.stream().map(vacancyMapper::mapWithSideEffects)\n+            ).build();\n+        } catch (Exception e) {\n+            return Response.status(404, e.getMessage()).build();\n+        }\n+    }\n+}"
  },
  {
    "sha": "7f2c9be278aa7daf1406f3aa61494e7fe11e49b0",
    "filename": "backend/src/main/java/ru/hh/school/controller/vacancy/VacancyController.java",
    "status": "added",
    "additions": 58,
    "deletions": 0,
    "changes": 58,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/controller/vacancy/VacancyController.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/controller/vacancy/VacancyController.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/controller/vacancy/VacancyController.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,58 @@\n+package ru.hh.school.controller.vacancy;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import ru.hh.school.dto.vacancy.VacancyDtoResponse;\n+import ru.hh.school.dto.vacancy.VacancyDtoResponseArray;\n+\n+import javax.inject.Singleton;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.client.Client;\n+import javax.ws.rs.core.*;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Singleton\n+@Produces(MediaType.APPLICATION_JSON)\n+@Path(\"/vacancy\")\n+public class VacancyController {\n+\n+    private static final Logger logger = LoggerFactory.getLogger(VacancyController.class);\n+    private final String VACANCY_URL = \"https://api.hh.ru/vacancies\";\n+    private final Client client;\n+\n+    public VacancyController(Client client) {\n+        this.client = client;\n+    }\n+\n+    @GET\n+    public Response getEmployers(@Context UriInfo allUri) {\n+        StringBuffer stringBuffer = new StringBuffer();\n+        stringBuffer.append(VACANCY_URL).append(\"?\");\n+        MultivaluedMap<String, String> mpAllQueParams = allUri.getQueryParameters();\n+        for (Map.Entry<String, List<String>> entry : mpAllQueParams.entrySet()) {\n+            entry.getValue().forEach(v -> stringBuffer.append(entry.getKey()).append(\"=\").append(v).append(\"&\"));\n+        }\n+        logger.info(stringBuffer.toString());\n+        Response response = client.target(stringBuffer.toString()).request().get();\n+        int status = response.getStatus();\n+        VacancyDtoResponseArray entity = response.readEntity(VacancyDtoResponseArray.class);\n+        logger.info(\"get vacancies list\");\n+        return Response.status(status).entity(\n+                entity.getItems()\n+        ).build();\n+    }\n+\n+    @GET\n+    @Path(\"/{vacancy_id}\")\n+    public Response getVacancy(@PathParam(\"vacancy_id\") Integer vacancyId) {\n+        Response response = client.target(VACANCY_URL + \"/\" + vacancyId).request().get();\n+        int status = response.getStatus();\n+        VacancyDtoResponse entity = response.readEntity(VacancyDtoResponse.class);\n+        logger.info(\"get vacancies info by id\");\n+        return Response.status(status).entity(entity).build();\n+    }\n+}"
  },
  {
    "sha": "1ce62ccdc4ec9aeba572cc227d9b2454ffa2bf11",
    "filename": "backend/src/main/java/ru/hh/school/dao/AreaDao.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dao/AreaDao.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dao/AreaDao.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dao/AreaDao.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,44 @@\n+package ru.hh.school.dao;\n+\n+import org.hibernate.SessionFactory;\n+import ru.hh.school.entity.Area;\n+\n+import javax.inject.Singleton;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Singleton\n+public class AreaDao {\n+\n+    private final SessionFactory sessionFactory;\n+\n+    public AreaDao(SessionFactory sessionFactory) {\n+        this.sessionFactory = sessionFactory;\n+    }\n+\n+    public Optional<Area> getArea(Integer id) {\n+        return Optional.ofNullable(sessionFactory.getCurrentSession()\n+                .get(Area.class, id));\n+    }\n+\n+    public List<Area> getAreas() {\n+        return sessionFactory.getCurrentSession()\n+                .createQuery(\"from Area\", Area.class).list();\n+    }\n+\n+    public Integer save(Area area) {\n+        sessionFactory.getCurrentSession().save(area);\n+        return area.getAreaId();\n+    }\n+\n+    public Integer saveOrUpdate(Area area) {\n+        sessionFactory.getCurrentSession().saveOrUpdate(area);\n+        return area.getAreaId();\n+    }\n+\n+    public Optional<Area> getAreaByAreaId(Integer id) {\n+        return sessionFactory.getCurrentSession()\n+                .createQuery(\"from Area where area_id =:id \", Area.class)\n+                .setParameter(\"id\", id).uniqueResultOptional();\n+    }\n+}"
  },
  {
    "sha": "1b2954c11ee1b774dba5f57c1d27cde2510f5c0d",
    "filename": "backend/src/main/java/ru/hh/school/dao/CompanyDao.java",
    "status": "added",
    "additions": 60,
    "deletions": 0,
    "changes": 60,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dao/CompanyDao.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dao/CompanyDao.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dao/CompanyDao.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,60 @@\n+package ru.hh.school.dao;\n+\n+import org.hibernate.SessionFactory;\n+import ru.hh.school.entity.Company;\n+\n+import javax.inject.Singleton;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Singleton\n+public class CompanyDao {\n+\n+    private final SessionFactory sessionFactory;\n+\n+    public CompanyDao(SessionFactory sessionFactory) {\n+        this.sessionFactory = sessionFactory;\n+    }\n+\n+    public Optional<Company> getCompany(Integer id) {\n+        return Optional.ofNullable(sessionFactory.getCurrentSession().get(Company.class, id));\n+    }\n+\n+    public Optional<Company> getCompanyByCompanyId(Integer id) {\n+        return sessionFactory.getCurrentSession()\n+                .createQuery(\"from Company where companyId =:id \", Company.class)\n+                .setParameter(\"id\", id).uniqueResultOptional();\n+    }\n+\n+    public List<Company> getCompanies() {\n+        return sessionFactory.getCurrentSession().createQuery(\"from Company\", Company.class).list();\n+    }\n+\n+    public void incrementView(Integer id) {\n+        sessionFactory.getCurrentSession()\n+                .createQuery(\"update Company set viewsCount = viewsCount + 1 WHERE id = :id\")\n+                .setParameter(\"id\", id).executeUpdate();\n+    }\n+\n+    public Integer save(Company company) {\n+        sessionFactory.getCurrentSession().save(company);\n+        return company.getCompanyId();\n+    }\n+\n+    public void updateComment(Integer id, String comment) {\n+        sessionFactory.getCurrentSession()\n+                .createQuery(\"update Company set comment = :comment WHERE companyId = :id\")\n+                .setParameter(\"comment\", comment)\n+                .setParameter(\"id\", id).executeUpdate();\n+    }\n+\n+    public void deleteCompany(Integer id) {\n+        sessionFactory.getCurrentSession()\n+                .createQuery(\"delete from Company WHERE companyId = :id\")\n+                .setParameter(\"id\", id).executeUpdate();\n+    }\n+\n+    public void updateCompany(Company company) {\n+        sessionFactory.getCurrentSession().merge(company);\n+    }\n+}"
  },
  {
    "sha": "dba79392a9a60b3e28473f34706103ef1a797a02",
    "filename": "backend/src/main/java/ru/hh/school/dao/SalaryDao.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dao/SalaryDao.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dao/SalaryDao.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dao/SalaryDao.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,20 @@\n+package ru.hh.school.dao;\n+\n+import org.hibernate.SessionFactory;\n+import ru.hh.school.entity.Salary;\n+\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class SalaryDao {\n+\n+    private final SessionFactory sessionFactory;\n+\n+    public SalaryDao(SessionFactory sessionFactory) {\n+        this.sessionFactory = sessionFactory;\n+    }\n+\n+    public void saveOrUpdate(Salary salary) {\n+        sessionFactory.getCurrentSession().saveOrUpdate(salary);\n+    }\n+}"
  },
  {
    "sha": "d6374e08c15bc3938651d6d3c2c54f85b3aa8b62",
    "filename": "backend/src/main/java/ru/hh/school/dao/VacancyDao.java",
    "status": "added",
    "additions": 49,
    "deletions": 0,
    "changes": 49,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dao/VacancyDao.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dao/VacancyDao.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dao/VacancyDao.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,49 @@\n+package ru.hh.school.dao;\n+\n+import org.hibernate.SessionFactory;\n+import ru.hh.school.entity.Vacancy;\n+\n+import javax.inject.Singleton;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Singleton\n+public class VacancyDao {\n+\n+    private final SessionFactory sessionFactory;\n+\n+    public VacancyDao(SessionFactory sessionFactory) {\n+        this.sessionFactory = sessionFactory;\n+    }\n+\n+    public Integer save(Vacancy vacancy) {\n+        sessionFactory.getCurrentSession().save(vacancy);\n+        return vacancy.getVacancyId();\n+    }\n+\n+    public Optional<Vacancy> getVacancyByVacancyId(Integer id) {\n+        return sessionFactory.getCurrentSession()\n+                .createQuery(\"from Vacancy where vacancyId =:id \", Vacancy.class)\n+                .setParameter(\"id\", id).uniqueResultOptional();\n+    }\n+\n+    public List<Vacancy> getVacancies() {\n+        return sessionFactory.getCurrentSession().createQuery(\"from Vacancy\", Vacancy.class).list();\n+    }\n+\n+    public void incrementView(Integer id) {\n+        sessionFactory.getCurrentSession()\n+                .createQuery(\"update Vacancy set viewsCount = viewsCount + 1 WHERE id = :id\")\n+                .setParameter(\"id\", id).executeUpdate();\n+    }\n+\n+    public void deleteVacancy(Integer id) {\n+        sessionFactory.getCurrentSession()\n+                .createQuery(\"delete from Vacancy WHERE vacancyId = :id\")\n+                .setParameter(\"id\", id).executeUpdate();\n+    }\n+\n+    public void updateVacancy(Vacancy vacancy) {\n+        sessionFactory.getCurrentSession().merge(vacancy);\n+    }\n+}"
  },
  {
    "sha": "f4e5bbed85bc09f7917a7b157fbb62c7e9a65bc7",
    "filename": "backend/src/main/java/ru/hh/school/dto/area/AreaDto.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/area/AreaDto.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/area/AreaDto.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dto/area/AreaDto.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,33 @@\n+package ru.hh.school.dto.area;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class AreaDto {\n+    private Integer id;\n+    private String name;\n+\n+    public AreaDto(Integer id, String name) {\n+        this.id = id;\n+        this.name = name;\n+    }\n+\n+    public AreaDto() {\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"AreaDto{\" +\n+                \"id=\" + id +\n+                \", name='\" + name + '\\'' +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "2344618d77dee75b84403a71b9dbcef1ecf384b1",
    "filename": "backend/src/main/java/ru/hh/school/dto/company/CompanyDtoByIdResponse.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoByIdResponse.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoByIdResponse.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoByIdResponse.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,48 @@\n+package ru.hh.school.dto.company;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import ru.hh.school.dto.area.AreaDto;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class CompanyDtoByIdResponse {\n+    private Integer id;\n+    private String name;\n+    private String description;\n+    private AreaDto area;\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public AreaDto getArea() {\n+        return area;\n+    }\n+\n+    public CompanyDtoByIdResponse(Integer id, String name, String description, AreaDto area) {\n+        this.id = id;\n+        this.name = name;\n+        this.description = description;\n+        this.area = area;\n+    }\n+\n+    public CompanyDtoByIdResponse() {\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"CompanyDtoByIdResponse{\" +\n+                \"id=\" + id +\n+                \", name='\" + name + '\\'' +\n+                \", description='\" + description + '\\'' +\n+                \", area=\" + area +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "822843b58fcee636faf11089d16a80877557cda3",
    "filename": "backend/src/main/java/ru/hh/school/dto/company/CompanyDtoRequest.java",
    "status": "added",
    "additions": 101,
    "deletions": 0,
    "changes": 101,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoRequest.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoRequest.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoRequest.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,101 @@\n+package ru.hh.school.dto.company;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import ru.hh.school.dto.area.AreaDto;\n+\n+import java.time.LocalDate;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class CompanyDtoRequest {\n+    public enum Popularity {\n+        POPULAR,\n+        REGULAR\n+    }\n+\n+    private Integer id;\n+    private String name;\n+    private LocalDate creationDate;\n+    private String description;\n+    private AreaDto area;\n+    private String comment;\n+    private Popularity popularity;\n+    private Integer views_count;\n+\n+    public CompanyDtoRequest(Integer id, String name, LocalDate creationDate, String description, AreaDto area, String comment, Popularity popularity, Integer views_count) {\n+        this.id = id;\n+        this.name = name;\n+        this.creationDate = creationDate;\n+        this.description = description;\n+        this.area = area;\n+        this.comment = comment;\n+        this.popularity = popularity;\n+        this.views_count = views_count;\n+    }\n+\n+    public CompanyDtoRequest() {\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public LocalDate getCreationDate() {\n+        return creationDate;\n+    }\n+\n+    public void setCreationDate(LocalDate creationDate) {\n+        this.creationDate = creationDate;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n+    public AreaDto getArea() {\n+        return area;\n+    }\n+\n+    public void setArea(AreaDto area) {\n+        this.area = area;\n+    }\n+\n+    public String getComment() {\n+        return comment;\n+    }\n+\n+    public void setComment(String comment) {\n+        this.comment = comment;\n+    }\n+\n+    public Popularity getPopularity() {\n+        return popularity;\n+    }\n+\n+    public void setPopularity(Popularity popularity) {\n+        this.popularity = popularity;\n+    }\n+\n+    public Integer getViews_count() {\n+        return views_count;\n+    }\n+\n+    public void setViews_count(Integer views_count) {\n+        this.views_count = views_count;\n+    }\n+}"
  },
  {
    "sha": "d3292e95e06481d43ef5f806394bf48d01c1bc40",
    "filename": "backend/src/main/java/ru/hh/school/dto/company/CompanyDtoResponse.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoResponse.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoResponse.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoResponse.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,33 @@\n+package ru.hh.school.dto.company;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class CompanyDtoResponse {\n+    private Integer id;\n+    private String name;\n+\n+    public CompanyDtoResponse(Integer id, String name) {\n+        this.id = id;\n+        this.name = name;\n+    }\n+\n+    public CompanyDtoResponse() {\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"CompanyDtoResponse{\" +\n+                \"id=\" + id +\n+                \", name='\" + name + '\\'' +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "84950361b7e58bea81fd7b8b879158cd859aa2ee",
    "filename": "backend/src/main/java/ru/hh/school/dto/company/CompanyDtoResponseArray.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoResponseArray.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoResponseArray.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dto/company/CompanyDtoResponseArray.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,28 @@\n+package ru.hh.school.dto.company;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import java.util.Arrays;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class CompanyDtoResponseArray {\n+    private CompanyDtoResponse[] items;\n+\n+    public CompanyDtoResponseArray(CompanyDtoResponse[] items) {\n+        this.items = items;\n+    }\n+\n+    public CompanyDtoResponse[] getItems() {\n+        return items;\n+    }\n+\n+    public CompanyDtoResponseArray() {\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"AbcDto{\" +\n+                \"items=\" + Arrays.toString(items) +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "c855f7166837c32ac9a3670d0dfbcab14911d8a2",
    "filename": "backend/src/main/java/ru/hh/school/dto/salary/SalaryDto.java",
    "status": "added",
    "additions": 47,
    "deletions": 0,
    "changes": 47,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/salary/SalaryDto.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/salary/SalaryDto.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dto/salary/SalaryDto.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,47 @@\n+package ru.hh.school.dto.salary;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class SalaryDto {\n+    private Integer to;\n+    private Integer from;\n+    private String currency;\n+    private Boolean gross;\n+\n+    public SalaryDto(Integer to, Integer from, String currency, Boolean gross) {\n+        this.to = to;\n+        this.from = from;\n+        this.currency = currency;\n+        this.gross = gross;\n+    }\n+\n+    public SalaryDto() {\n+    }\n+\n+    public Integer getTo() {\n+        return to;\n+    }\n+\n+    public Integer getFrom() {\n+        return from;\n+    }\n+\n+    public String getCurrency() {\n+        return currency;\n+    }\n+\n+    public Boolean getGross() {\n+        return gross;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"SalaryDto{\" +\n+                \"to=\" + to +\n+                \", from=\" + from +\n+                \", currency='\" + currency + '\\'' +\n+                \", gross=\" + gross +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "e6a021d4616f3c054bab5d45fb3c063fd0327980",
    "filename": "backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoRequest.java",
    "status": "added",
    "additions": 123,
    "deletions": 0,
    "changes": 123,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoRequest.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoRequest.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoRequest.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,123 @@\n+package ru.hh.school.dto.vacancy;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import ru.hh.school.dto.area.AreaDto;\n+import ru.hh.school.dto.company.CompanyDtoRequest;\n+import ru.hh.school.dto.salary.SalaryDto;\n+\n+import java.time.LocalDate;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class VacancyDtoRequest {\n+    public enum Popularity {\n+        POPULAR,\n+        REGULAR\n+    }\n+\n+    private Integer id;\n+    private String name;\n+    private LocalDate creationDate;\n+    private AreaDto area;\n+    private SalaryDto salary;\n+    private String createdAt;\n+    private CompanyDtoRequest employer;\n+    private Popularity popularity;\n+    private Integer views_count;\n+    private String comment;\n+\n+    public VacancyDtoRequest(Integer id, String name, LocalDate creationDate, AreaDto area, SalaryDto salary, String createdAt, CompanyDtoRequest employer, Popularity popularity, Integer views_count, String comment) {\n+        this.id = id;\n+        this.name = name;\n+        this.creationDate = creationDate;\n+        this.area = area;\n+        this.salary = salary;\n+        this.createdAt = createdAt;\n+        this.employer = employer;\n+        this.popularity = popularity;\n+        this.views_count = views_count;\n+        this.comment = comment;\n+    }\n+\n+    public VacancyDtoRequest() {\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public LocalDate getCreationDate() {\n+        return creationDate;\n+    }\n+\n+    public void setCreationDate(LocalDate creationDate) {\n+        this.creationDate = creationDate;\n+    }\n+\n+    public AreaDto getArea() {\n+        return area;\n+    }\n+\n+    public void setArea(AreaDto area) {\n+        this.area = area;\n+    }\n+\n+    public SalaryDto getSalary() {\n+        return salary;\n+    }\n+\n+    public void setSalary(SalaryDto salary) {\n+        this.salary = salary;\n+    }\n+\n+    public String getCreatedAt() {\n+        return createdAt;\n+    }\n+\n+    public void setCreatedAt(String createdAt) {\n+        this.createdAt = createdAt;\n+    }\n+\n+    public CompanyDtoRequest getEmployer() {\n+        return employer;\n+    }\n+\n+    public void setEmployer(CompanyDtoRequest employer) {\n+        this.employer = employer;\n+    }\n+\n+    public Popularity getPopularity() {\n+        return popularity;\n+    }\n+\n+    public void setPopularity(Popularity popularity) {\n+        this.popularity = popularity;\n+    }\n+\n+    public Integer getViews_count() {\n+        return views_count;\n+    }\n+\n+    public void setViews_count(Integer views_count) {\n+        this.views_count = views_count;\n+    }\n+\n+    public String getComment() {\n+        return comment;\n+    }\n+\n+    public void setComment(String comment) {\n+        this.comment = comment;\n+    }\n+}"
  },
  {
    "sha": "f333a06ffe7cba4e8e5496eabe7da0fede1cb5ad",
    "filename": "backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoResponse.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoResponse.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoResponse.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoResponse.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,62 @@\n+package ru.hh.school.dto.vacancy;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import ru.hh.school.dto.area.AreaDto;\n+import ru.hh.school.dto.company.CompanyDtoResponse;\n+import ru.hh.school.dto.salary.SalaryDto;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class VacancyDtoResponse {\n+    private Integer id;\n+    private String name;\n+    private AreaDto area;\n+    private SalaryDto salary;\n+    private String created_at;\n+    private CompanyDtoResponse employer;\n+\n+    public VacancyDtoResponse(Integer id, String name, AreaDto area, SalaryDto salary, String created_at, CompanyDtoResponse employer) {\n+        this.id = id;\n+        this.name = name;\n+        this.area = area;\n+        this.salary = salary;\n+        this.created_at = created_at;\n+        this.employer = employer;\n+    }\n+\n+    public VacancyDtoResponse() {\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public AreaDto getArea() {\n+        return area;\n+    }\n+\n+    public SalaryDto getSalary() {\n+        return salary;\n+    }\n+\n+    public String getCreated_at() {\n+        return created_at;\n+    }\n+\n+    public CompanyDtoResponse getEmployer() {\n+        return employer;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"CompanyDtoResponse{\" +\n+                \"id=\" + id +\n+                \", name='\" + name + '\\'' +\n+                '}';\n+    }\n+\n+\n+}"
  },
  {
    "sha": "e053cbb94ae6f185cb2789db6e5fef4d479f59fc",
    "filename": "backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoResponseArray.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoResponseArray.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoResponseArray.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/dto/vacancy/VacancyDtoResponseArray.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,28 @@\n+package ru.hh.school.dto.vacancy;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import java.util.Arrays;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class VacancyDtoResponseArray {\n+    private VacancyDtoResponse[] items;\n+\n+    public VacancyDtoResponseArray(VacancyDtoResponse[] items) {\n+        this.items = items;\n+    }\n+\n+    public VacancyDtoResponse[] getItems() {\n+        return items;\n+    }\n+\n+    public VacancyDtoResponseArray() {\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"AbcDto{\" +\n+                \"items=\" + Arrays.toString(items) +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
    "filename": "backend/src/main/java/ru/hh/school/entity/.gitkeep",
    "status": "removed",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/c5231d7d15aafe3e6ec16721f3fc25b517664a5c/backend/src/main/java/ru/hh/school/entity/.gitkeep",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/c5231d7d15aafe3e6ec16721f3fc25b517664a5c/backend/src/main/java/ru/hh/school/entity/.gitkeep",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/entity/.gitkeep?ref=c5231d7d15aafe3e6ec16721f3fc25b517664a5c"
  },
  {
    "sha": "9a54e5235f121a3df1a2180bb6c324cdbfbbfe15",
    "filename": "backend/src/main/java/ru/hh/school/entity/Area.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/entity/Area.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/entity/Area.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/entity/Area.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,50 @@\n+package ru.hh.school.entity;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"area\")\n+public class Area {\n+    @Id\n+    @Column(name = \"id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Integer id;\n+\n+    @Column(name = \"area_id\")\n+    private Integer areaId;\n+\n+    @Column(name = \"area_name\")\n+    private String name;\n+\n+    public Area(Integer areaId, String name) {\n+        this.areaId = areaId;\n+        this.name = name;\n+    }\n+\n+    public Area() {\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public Integer getAreaId() {\n+        return areaId;\n+    }\n+\n+    public void setAreaId(Integer areaId) {\n+        this.areaId = areaId;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"
  },
  {
    "sha": "24e86bfc5b5f996e34f26073a6e9c3b28a8f7deb",
    "filename": "backend/src/main/java/ru/hh/school/entity/Company.java",
    "status": "added",
    "additions": 124,
    "deletions": 0,
    "changes": 124,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/entity/Company.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/entity/Company.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/entity/Company.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,124 @@\n+package ru.hh.school.entity;\n+\n+import javax.persistence.*;\n+import java.time.LocalDate;\n+\n+@Entity\n+@Table(name = \"company\")\n+public class Company {\n+\n+    @Id\n+    @Column(name = \"id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Integer id;\n+\n+    @Column(name = \"company_id\")\n+    private Integer companyId;\n+\n+    @Column(name = \"company_name\")\n+    private String name;\n+\n+    @Column(name = \"date_create\")\n+    protected LocalDate creationDate;\n+\n+    @Column(name = \"description\")\n+    private String description;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"area_id\")\n+    private Area area;\n+\n+    @Column(name = \"comment\")\n+    private String comment;\n+\n+    @Column(name = \"views_count\")\n+    private Integer viewsCount;\n+\n+    public Company() {\n+    }\n+\n+    public Company(Integer id, Integer companyId, String name, String description, Area area, String comment, Integer viewsCount, LocalDate creationDate) {\n+        this.id = id;\n+        this.companyId = companyId;\n+        this.name = name;\n+        this.description = description;\n+        this.area = area;\n+        this.comment = comment;\n+        this.viewsCount = viewsCount;\n+        this.creationDate = creationDate;\n+    }\n+\n+    public Company(Integer companyId, String name, String description, Area area, String comment, Integer viewsCount, LocalDate date) {\n+        this.companyId = companyId;\n+        this.name = name;\n+        this.description = description;\n+        this.area = area;\n+        this.comment = comment;\n+        this.viewsCount = viewsCount;\n+        this.creationDate = date;\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public Integer getCompanyId() {\n+        return companyId;\n+    }\n+\n+    public void setCompanyId(Integer companyId) {\n+        this.companyId = companyId;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public LocalDate getCreationDate() {\n+        return creationDate;\n+    }\n+\n+    public void setCreationDate(LocalDate creationDate) {\n+        this.creationDate = creationDate;\n+    }\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+\n+    public Area getArea() {\n+        return area;\n+    }\n+\n+    public void setArea(Area area) {\n+        this.area = area;\n+    }\n+\n+    public String getComment() {\n+        return comment;\n+    }\n+\n+    public void setComment(String comment) {\n+        this.comment = comment;\n+    }\n+\n+    public Integer getViewsCount() {\n+        return viewsCount;\n+    }\n+\n+    public void setViewsCount(Integer viewsCount) {\n+        this.viewsCount = viewsCount;\n+    }\n+}"
  },
  {
    "sha": "9bdea2fa3ba762873aa880abd08e253ff2cb193e",
    "filename": "backend/src/main/java/ru/hh/school/entity/Salary.java",
    "status": "added",
    "additions": 75,
    "deletions": 0,
    "changes": 75,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/entity/Salary.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/entity/Salary.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/entity/Salary.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,75 @@\n+package ru.hh.school.entity;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"salary\")\n+public class Salary {\n+\n+    @Id\n+    @Column(name = \"id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Integer id;\n+\n+    @Column(name = \"to_sal\")\n+    private Integer to;\n+\n+    @Column(name = \"from_sal\")\n+    private Integer from;\n+\n+    @Column(name = \"currency\")\n+    private String currency;\n+\n+    @Column(name = \"gross\")\n+    private Boolean gross;\n+\n+    public Salary() {\n+    }\n+\n+    public Salary(Integer to, Integer from, String currency, Boolean gross) {\n+        this.to = to;\n+        this.from = from;\n+        this.currency = currency;\n+        this.gross = gross;\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public Integer getTo() {\n+        return to;\n+    }\n+\n+    public void setTo(Integer to) {\n+        this.to = to;\n+    }\n+\n+    public Integer getFrom() {\n+        return from;\n+    }\n+\n+    public void setFrom(Integer from) {\n+        this.from = from;\n+    }\n+\n+    public String getCurrency() {\n+        return currency;\n+    }\n+\n+    public void setCurrency(String currency) {\n+        this.currency = currency;\n+    }\n+\n+    public Boolean getGross() {\n+        return gross;\n+    }\n+\n+    public void setGross(Boolean gross) {\n+        this.gross = gross;\n+    }\n+}"
  },
  {
    "sha": "63606c9436507e372efcb570f83681fdb6bb8624",
    "filename": "backend/src/main/java/ru/hh/school/entity/Vacancy.java",
    "status": "added",
    "additions": 152,
    "deletions": 0,
    "changes": 152,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/entity/Vacancy.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/entity/Vacancy.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/entity/Vacancy.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,152 @@\n+package ru.hh.school.entity;\n+\n+import javax.persistence.*;\n+import java.time.LocalDate;\n+\n+@Entity\n+@Table(name = \"vacancy\")\n+public class Vacancy {\n+\n+    @Id\n+    @Column(name = \"id\")\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private Integer id;\n+\n+    @Column(name = \"vacancy_id\")\n+    private Integer vacancyId;\n+\n+    @Column(name = \"vacancy_name\")\n+    private String name;\n+\n+    @Column(name = \"date_create\")\n+    protected LocalDate creationDate;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"area_id\")\n+    private Area area;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"salary_id\")\n+    private Salary salary;\n+\n+    @Column(name = \"created_at\")\n+    private String createdAt;\n+\n+    @ManyToOne\n+    @JoinColumn(name = \"employer_id\")\n+    private Company employer;\n+\n+    @Column(name = \"comment\")\n+    private String comment;\n+\n+    @Column(name = \"views_count\")\n+    private Integer viewsCount;\n+\n+    public Vacancy() {\n+    }\n+\n+    public Vacancy(Integer id, Integer vacancyId, String name, LocalDate creationDate, Area area, Salary salary, String createdAt, Company employer, String comment, Integer viewsCount) {\n+        this.id = id;\n+        this.vacancyId = vacancyId;\n+        this.name = name;\n+        this.creationDate = creationDate;\n+        this.area = area;\n+        this.salary = salary;\n+        this.createdAt = createdAt;\n+        this.employer = employer;\n+        this.comment = comment;\n+        this.viewsCount = viewsCount;\n+    }\n+\n+    public Vacancy(Integer vacancyId, String name, Area area, Salary salary, String createdAt, Company employer, String comment, Integer viewsCount, LocalDate creationDate) {\n+        this.vacancyId = vacancyId;\n+        this.name = name;\n+        this.creationDate = creationDate;\n+        this.area = area;\n+        this.salary = salary;\n+        this.createdAt = createdAt;\n+        this.employer = employer;\n+        this.comment = comment;\n+        this.viewsCount = viewsCount;\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public Integer getVacancyId() {\n+        return vacancyId;\n+    }\n+\n+    public void setVacancyId(Integer vacancyId) {\n+        this.vacancyId = vacancyId;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public LocalDate getCreationDate() {\n+        return creationDate;\n+    }\n+\n+    public void setCreationDate(LocalDate creationDate) {\n+        this.creationDate = creationDate;\n+    }\n+\n+    public Area getArea() {\n+        return area;\n+    }\n+\n+    public void setArea(Area area) {\n+        this.area = area;\n+    }\n+\n+    public Salary getSalary() {\n+        return salary;\n+    }\n+\n+    public void setSalary(Salary salary) {\n+        this.salary = salary;\n+    }\n+\n+    public String getCreatedAt() {\n+        return createdAt;\n+    }\n+\n+    public void setCreatedAt(String createdAt) {\n+        this.createdAt = createdAt;\n+    }\n+\n+    public Company getEmployer() {\n+        return employer;\n+    }\n+\n+    public void setEmployer(Company employer) {\n+        this.employer = employer;\n+    }\n+\n+    public String getComment() {\n+        return comment;\n+    }\n+\n+    public void setComment(String comment) {\n+        this.comment = comment;\n+    }\n+\n+    public Integer getViewsCount() {\n+        return viewsCount;\n+    }\n+\n+    public void setViewsCount(Integer viewsCount) {\n+        this.viewsCount = viewsCount;\n+    }\n+}"
  },
  {
    "sha": "0218e176d249069678b425db0db481c29f3841a7",
    "filename": "backend/src/main/java/ru/hh/school/mapper/AreaMapper.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/mapper/AreaMapper.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/mapper/AreaMapper.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/mapper/AreaMapper.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,24 @@\n+package ru.hh.school.mapper;\n+\n+import ru.hh.school.dto.area.AreaDto;\n+import ru.hh.school.entity.Area;\n+\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class AreaMapper {\n+\n+    public AreaDto map(Area area) {\n+        return new AreaDto(\n+                area.getId(),\n+                area.getName()\n+        );\n+    }\n+\n+    public Area map(AreaDto area) {\n+        return new Area(\n+                area.getId(),\n+                area.getName()\n+        );\n+    }\n+}"
  },
  {
    "sha": "5f5f371a14558f0af375852bce7efeb9185e17a6",
    "filename": "backend/src/main/java/ru/hh/school/mapper/CompanyMapper.java",
    "status": "added",
    "additions": 70,
    "deletions": 0,
    "changes": 70,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/mapper/CompanyMapper.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/mapper/CompanyMapper.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/mapper/CompanyMapper.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,70 @@\n+package ru.hh.school.mapper;\n+\n+import org.springframework.transaction.annotation.Transactional;\n+import ru.hh.school.dto.area.AreaDto;\n+import ru.hh.school.dto.company.CompanyDtoByIdResponse;\n+import ru.hh.school.dto.company.CompanyDtoRequest;\n+import ru.hh.school.entity.Area;\n+import ru.hh.school.entity.Company;\n+import ru.hh.school.service.AreaService;\n+\n+import javax.inject.Singleton;\n+import java.time.LocalDate;\n+\n+\n+@Singleton\n+public class CompanyMapper {\n+\n+    private final AreaService areaService;\n+    private final AreaMapper areaMapper;\n+\n+    public CompanyMapper(AreaService areaService, AreaMapper areaMapper) {\n+        this.areaService = areaService;\n+        this.areaMapper = areaMapper;\n+    }\n+\n+    @Transactional\n+    public CompanyDtoRequest mapWithSideEffects(Company company) {\n+        AreaDto area = areaMapper.map(company.getArea());\n+        CompanyDtoRequest.Popularity popularity = (company.getViewsCount() > 50) ? CompanyDtoRequest.Popularity.POPULAR : CompanyDtoRequest.Popularity.REGULAR;\n+        return new CompanyDtoRequest(\n+                company.getCompanyId(),\n+                company.getName(),\n+                company.getCreationDate(),\n+                company.getDescription(),\n+                area,\n+                company.getComment(),\n+                popularity,\n+                company.getViewsCount() + 1\n+        );\n+    }\n+\n+    @Transactional\n+    public Company mapWithSideEffects(CompanyDtoByIdResponse companyDtoRequest, String comment) {\n+        Area area = areaMapper.map(companyDtoRequest.getArea());\n+        areaService.saveOrUpdate(area);\n+        return new Company(\n+                companyDtoRequest.getId(),\n+                companyDtoRequest.getName(),\n+                companyDtoRequest.getDescription(),\n+                area,\n+                comment,\n+                0,\n+                LocalDate.now());\n+    }\n+\n+    @Transactional\n+    public Company convertWithSideEffects(CompanyDtoByIdResponse companyDtoRequest, Company company) {\n+        Area area = areaMapper.map(companyDtoRequest.getArea());\n+        areaService.saveOrUpdate(area);\n+        return new Company(\n+                company.getId(),\n+                companyDtoRequest.getId(),\n+                companyDtoRequest.getName(),\n+                companyDtoRequest.getDescription(),\n+                area,\n+                company.getComment(),\n+                company.getViewsCount(),\n+                company.getCreationDate());\n+    }\n+}"
  },
  {
    "sha": "68aa7302191c6442c5302dab7a3ecb61ba56d04d",
    "filename": "backend/src/main/java/ru/hh/school/mapper/SalaryMapper.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/mapper/SalaryMapper.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/mapper/SalaryMapper.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/mapper/SalaryMapper.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,28 @@\n+package ru.hh.school.mapper;\n+\n+import ru.hh.school.dto.salary.SalaryDto;\n+import ru.hh.school.entity.Salary;\n+\n+import javax.inject.Singleton;\n+\n+@Singleton\n+public class SalaryMapper {\n+\n+    public SalaryDto map(Salary area) {\n+        return new SalaryDto(\n+                area.getTo(),\n+                area.getFrom(),\n+                area.getCurrency(),\n+                area.getGross()\n+        );\n+    }\n+\n+    public Salary map(SalaryDto area) {\n+        return new Salary(\n+                area.getTo(),\n+                area.getFrom(),\n+                area.getCurrency(),\n+                area.getGross()\n+        );\n+    }\n+}"
  },
  {
    "sha": "99b2ff5dad6512c16fed4977d5416b5c653ae72a",
    "filename": "backend/src/main/java/ru/hh/school/mapper/VacancyMapper.java",
    "status": "added",
    "additions": 97,
    "deletions": 0,
    "changes": 97,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/mapper/VacancyMapper.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/mapper/VacancyMapper.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/mapper/VacancyMapper.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,97 @@\n+package ru.hh.school.mapper;\n+\n+import javassist.NotFoundException;\n+import org.springframework.transaction.annotation.Transactional;\n+import ru.hh.school.dto.area.AreaDto;\n+import ru.hh.school.dto.company.CompanyDtoRequest;\n+import ru.hh.school.dto.salary.SalaryDto;\n+import ru.hh.school.dto.vacancy.VacancyDtoRequest;\n+import ru.hh.school.dto.vacancy.VacancyDtoResponse;\n+import ru.hh.school.entity.Area;\n+import ru.hh.school.entity.Company;\n+import ru.hh.school.entity.Salary;\n+import ru.hh.school.entity.Vacancy;\n+import ru.hh.school.service.AreaService;\n+import ru.hh.school.service.CompanyService;\n+import ru.hh.school.service.SalaryService;\n+\n+import javax.inject.Singleton;\n+import java.time.LocalDate;\n+\n+@Singleton\n+public class VacancyMapper {\n+\n+    private final AreaService areaService;\n+    private final AreaMapper areaMapper;\n+    private final SalaryService salaryService;\n+    private final SalaryMapper salaryMapper;\n+    private final CompanyService companyService;\n+    private final CompanyMapper companyMapper;\n+\n+    public VacancyMapper(AreaService areaService, AreaMapper areaMapper, SalaryService salaryService, SalaryMapper salaryMapper, CompanyService companyService, CompanyMapper companyMapper) {\n+        this.areaService = areaService;\n+        this.areaMapper = areaMapper;\n+        this.salaryService = salaryService;\n+        this.salaryMapper = salaryMapper;\n+        this.companyService = companyService;\n+        this.companyMapper = companyMapper;\n+    }\n+\n+    @Transactional\n+    public VacancyDtoRequest mapWithSideEffects(Vacancy vacancy) {\n+        AreaDto area = areaMapper.map(vacancy.getArea());\n+        SalaryDto salary = salaryMapper.map(vacancy.getSalary());\n+        CompanyDtoRequest companyDtoRequest = companyMapper.mapWithSideEffects(vacancy.getEmployer());\n+        VacancyDtoRequest.Popularity popularity = (vacancy.getViewsCount() > 50) ? VacancyDtoRequest.Popularity.POPULAR : VacancyDtoRequest.Popularity.REGULAR;\n+        return new VacancyDtoRequest(\n+                vacancy.getVacancyId(),\n+                vacancy.getName(),\n+                vacancy.getCreationDate(),\n+                area,\n+                salary,\n+                vacancy.getCreatedAt(),\n+                companyDtoRequest,\n+                popularity,\n+                vacancy.getViewsCount() + 1,\n+                vacancy.getComment()\n+        );\n+    }\n+\n+    @Transactional\n+    public Vacancy mapWithSideEffects(VacancyDtoResponse vacancyDtoResponse, String comment) throws NotFoundException {\n+        Area area = areaMapper.map(vacancyDtoResponse.getArea());\n+        areaService.saveOrUpdate(area);\n+        Salary salary = salaryMapper.map(vacancyDtoResponse.getSalary());\n+        salaryService.saveOrUpdate(salary);\n+        Company company = companyService.getCompany(vacancyDtoResponse.getEmployer().getId());\n+        return new Vacancy(\n+                vacancyDtoResponse.getId(),\n+                vacancyDtoResponse.getName(),\n+                area,\n+                salary,\n+                vacancyDtoResponse.getCreated_at(),\n+                company,\n+                comment,\n+                0,\n+                LocalDate.now());\n+    }\n+\n+    @Transactional\n+    public Vacancy convertWithSideEffects(VacancyDtoResponse vacancyDtoResponse, Vacancy vacancy) {\n+        Area area = areaMapper.map(vacancyDtoResponse.getArea());\n+        areaService.saveOrUpdate(area);\n+        Salary salary = salaryMapper.map(vacancyDtoResponse.getSalary());\n+        salaryService.saveOrUpdate(salary);\n+        return new Vacancy(\n+                vacancy.getId(),\n+                vacancyDtoResponse.getId(),\n+                vacancyDtoResponse.getName(),\n+                vacancy.getCreationDate(),\n+                area,\n+                salary,\n+                vacancyDtoResponse.getCreated_at(),\n+                vacancy.getEmployer(),\n+                vacancy.getComment(),\n+                vacancy.getViewsCount());\n+    }\n+}"
  },
  {
    "sha": "9fc281de32941b7832925e9df8efa729925883de",
    "filename": "backend/src/main/java/ru/hh/school/service/AreaService.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/service/AreaService.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/service/AreaService.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/service/AreaService.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,55 @@\n+package ru.hh.school.service;\n+\n+import javassist.NotFoundException;\n+import org.springframework.transaction.annotation.Transactional;\n+import ru.hh.school.dao.AreaDao;\n+import ru.hh.school.entity.Area;\n+\n+import javax.inject.Singleton;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Singleton\n+public class AreaService {\n+\n+    private AreaDao areaDao;\n+\n+    public AreaService(AreaDao userDao) {\n+        this.areaDao = userDao;\n+    }\n+\n+    @Transactional\n+    public Area getArea(Integer id) throws NotFoundException {\n+        Optional<Area> area = areaDao.getArea(id);\n+        if (area.isEmpty())\n+            throw new NotFoundException(\"Area not found with id = \" + id);\n+        else\n+            return area.get();\n+    }\n+\n+    @Transactional\n+    public Area getAreaById(Integer id) throws NotFoundException {\n+        Optional<Area> area = areaDao.getAreaByAreaId(id);\n+        if (area.isEmpty())\n+            throw new NotFoundException(\"Area not found with id = \" + id);\n+        else\n+            return area.get();\n+    }\n+\n+    @Transactional\n+    public List<Area> getAreas() {\n+        return areaDao.getAreas();\n+    }\n+\n+\n+    @Transactional\n+    public Integer save(Area area) {\n+        return areaDao.save(area);\n+    }\n+\n+    @Transactional\n+    public Integer saveOrUpdate(Area area) {\n+        return areaDao.saveOrUpdate(area);\n+    }\n+\n+}"
  },
  {
    "sha": "6beed5bf94d6458e67e38a8543df08064080d954",
    "filename": "backend/src/main/java/ru/hh/school/service/CompanyService.java",
    "status": "added",
    "additions": 68,
    "deletions": 0,
    "changes": 68,
    "blob_url": "https://github.com/k-vasiliev/hh-backend-homework/blob/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/service/CompanyService.java",
    "raw_url": "https://github.com/k-vasiliev/hh-backend-homework/raw/7886eed2553553981259a52733a76e8f9c69b346/backend/src/main/java/ru/hh/school/service/CompanyService.java",
    "contents_url": "https://api.github.com/repos/k-vasiliev/hh-backend-homework/contents/backend/src/main/java/ru/hh/school/service/CompanyService.java?ref=7886eed2553553981259a52733a76e8f9c69b346",
    "patch": "@@ -0,0 +1,68 @@\n+package ru.hh.school.service;\n+\n+import javassist.NotFoundException;\n+import org.springframework.transaction.annotation.Transactional;\n+import ru.hh.school.dao.CompanyDao;\n+import ru.hh.school.entity.Company;\n+\n+import javax.inject.Singleton;\n+import java.util.List;\n+import java.util.Optional;\n+\n+@Singleton\n+public class CompanyService {\n+\n+    private CompanyDao companyDao;\n+\n+    public CompanyService(CompanyDao companyDao) {\n+        this.companyDao = companyDao;\n+    }\n+\n+    @Transactional\n+    public Company getCompany(Integer id) throws NotFoundException {\n+        Optional<Company> company = companyDao.getCompany(id);\n+        if (company.isEmpty())\n+            throw new NotFoundException(\"Company not found\");\n+        else\n+            return company.get();\n+    }\n+\n+    @Transactional\n+    public Company getCompanyById(Integer id) throws NotFoundException {\n+        Optional<Company> company = companyDao.getCompanyByCompanyId(id);\n+        if (company.isEmpty())\n+            throw new NotFoundException(\"Company not found\");\n+        else\n+            return company.get();\n+    }\n+\n+    @Transactional\n+    public List<Company> getCompanies() {\n+        return companyDao.getCompanies();\n+    }\n+\n+    @Transactional\n+    public Integer save(Company company) {\n+        return companyDao.save(company);\n+    }\n+\n+    @Transactional\n+    public void incrementView(Integer id) {\n+        companyDao.incrementView(id);\n+    }\n+\n+    @Transactional\n+    public void updateComment(Integer id, String comment) {\n+        companyDao.updateComment(id, comment);\n+    }\n+\n+    @Transactional\n+    public void deleteCompany(Integer id) {\n+        companyDao.deleteCompany(id);\n+    }\n+\n+    @Transactional\n+    public void updateCompany(Company company) {\n+        companyDao.updateCompany(company);\n+    }\n+}"
  }
]
