[
  {
    "sha": "05ada9b607cccb0a4f7b0bbed183af776569befa",
    "filename": ".idea/compiler.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Pankrashin-iqa14/Java2.6-1Radio/blob/042e7c26bea09e0dfe28f11d5dd87f1d99c20720/.idea/compiler.xml",
    "raw_url": "https://github.com/Pankrashin-iqa14/Java2.6-1Radio/raw/042e7c26bea09e0dfe28f11d5dd87f1d99c20720/.idea/compiler.xml",
    "contents_url": "https://api.github.com/repos/Pankrashin-iqa14/Java2.6-1Radio/contents/.idea/compiler.xml?ref=042e7c26bea09e0dfe28f11d5dd87f1d99c20720",
    "patch": "@@ -2,6 +2,7 @@\n <project version=\"4\">\n   <component name=\"CompilerConfiguration\">\n     <annotationProcessing>\n+      <profile default=\"true\" name=\"Default\" enabled=\"true\" />\n       <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n         <sourceOutputDir name=\"target/generated-sources/annotations\" />\n         <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />"
  },
  {
    "sha": "ffccf04059b8ffbe1662c344f4d9d726ac7dd37f",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/Pankrashin-iqa14/Java2.6-1Radio/blob/042e7c26bea09e0dfe28f11d5dd87f1d99c20720/pom.xml",
    "raw_url": "https://github.com/Pankrashin-iqa14/Java2.6-1Radio/raw/042e7c26bea09e0dfe28f11d5dd87f1d99c20720/pom.xml",
    "contents_url": "https://api.github.com/repos/Pankrashin-iqa14/Java2.6-1Radio/contents/pom.xml?ref=042e7c26bea09e0dfe28f11d5dd87f1d99c20720",
    "patch": "@@ -21,6 +21,12 @@\n             <version>5.7.0</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>1.18.12</version>\n+            <scope>provided</scope>\n+        </dependency>\n     </dependencies>\n     <build>\n         <plugins>"
  },
  {
    "sha": "f129f09dec61ca5081f4644ab725f69b40f5b566",
    "filename": "src/main/java/ru/netology/domain/Radio.java",
    "status": "modified",
    "additions": 60,
    "deletions": 54,
    "changes": 114,
    "blob_url": "https://github.com/Pankrashin-iqa14/Java2.6-1Radio/blob/042e7c26bea09e0dfe28f11d5dd87f1d99c20720/src/main/java/ru/netology/domain/Radio.java",
    "raw_url": "https://github.com/Pankrashin-iqa14/Java2.6-1Radio/raw/042e7c26bea09e0dfe28f11d5dd87f1d99c20720/src/main/java/ru/netology/domain/Radio.java",
    "contents_url": "https://api.github.com/repos/Pankrashin-iqa14/Java2.6-1Radio/contents/src/main/java/ru/netology/domain/Radio.java?ref=042e7c26bea09e0dfe28f11d5dd87f1d99c20720",
    "patch": "@@ -1,88 +1,94 @@\n package ru.netology.domain;\n \n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.NoArgsConstructor;\n+\n+@NoArgsConstructor\n+@AllArgsConstructor\n+@Data\n+\n public class Radio {\n-    private int currentRadioStation;\n-    private int maxRadioStation = 9;\n-    private int minRadioStation = 0;\n+    private int currentRadiostation;\n+    private int maxRadiostation = 10;\n+    private int minRadiostation = 0;\n     private int currentVolume;\n-    private int maxVolume = 10;\n+    private int maxVolume = 100;\n     private int minVolume = 0;\n     private boolean on;\n \n-    public int getCurrentRadioStation() {\n-        return currentRadioStation;\n+\n+\n+    public Radio(int maxRadiostation, int currentRadiostation, int currentVolume) {\n+        this.maxRadiostation = maxRadiostation;\n+        this.currentRadiostation = currentRadiostation;\n+        this.currentVolume = currentVolume;\n+\n     }\n \n-    public void setCurrentRadioStation(int currentRadioStation) {\n-        if (currentRadioStation > maxRadioStation) {\n-            return;\n+    public void nextRadiostation() {\n+        if (currentRadiostation >= minRadiostation & currentRadiostation < maxRadiostation) {\n+            this.currentRadiostation = currentRadiostation + 1;\n         }\n-        if (currentRadioStation < minRadioStation) {\n-            return;\n+\n+        if (currentRadiostation == maxRadiostation | currentRadiostation < minRadiostation) {\n+            this.currentRadiostation = minRadiostation;\n         }\n-        this.currentRadioStation = currentRadioStation;\n-    }\n \n-    public void nextRadioStation() {\n-        int currentRadioStation = this.getCurrentRadioStation();\n-        if (currentRadioStation == maxRadioStation) {\n-            this.currentRadioStation = minRadioStation;\n-            return;\n+        if (currentRadiostation > maxRadiostation) {\n+            this.currentRadiostation = maxRadiostation;\n         }\n-        this.currentRadioStation++;\n+\n     }\n+    public void prevRadiostation() {\n+        if (currentRadiostation > minRadiostation & currentRadiostation <= maxRadiostation) {\n+            this.currentRadiostation = currentRadiostation - 1;\n+        }\n \n-    public void prevRadioStation() {\n-        int currentRadioStation = this.currentRadioStation;\n-        if (currentRadioStation == minRadioStation) {\n-            this.currentRadioStation = maxRadioStation;\n-            return;\n+        if (currentRadiostation == minRadiostation | currentRadiostation > maxRadiostation) {\n+            this.currentRadiostation = maxRadiostation;\n         }\n-        this.currentRadioStation--;\n-    }\n \n-    public void enterNumberRadioStation(int RadioStation) {\n+        if (currentRadiostation < minRadiostation) {\n+            this.currentRadiostation = minRadiostation;\n+        }\n \n-        if (RadioStation > maxRadioStation) {\n-            return;\n+    }\n+    public void increaseCurrentVolume () {\n+        if (currentVolume >= minVolume & currentVolume < maxVolume) {\n+            this.currentVolume = currentVolume + 1;\n         }\n-        if (RadioStation < minRadioStation) {\n-            return;\n+\n+        if (currentVolume >= maxVolume) {\n+            this.currentVolume = maxVolume;\n         }\n-        this.currentRadioStation = RadioStation;\n \n+        if (currentVolume < minVolume) {\n+            this.currentVolume = minVolume;\n+        }\n     }\n \n+    public void decreaseCurrentVolume () {\n+        if (currentVolume > minVolume & currentVolume <= maxVolume) {\n+            this.currentVolume = currentVolume - 1;\n+        }\n \n-    public int getCurrentVolume() {\n-        return currentVolume;\n-    }\n+        if (currentVolume <= minVolume) {\n+            this.currentVolume = minVolume;\n+        }\n \n-    public void setCurrentVolume(int currentVolume) {\n         if (currentVolume > maxVolume) {\n-            return;\n+            this.currentVolume = maxVolume;\n         }\n-        if (currentVolume < minVolume) {\n-            return;\n-        }\n-        this.currentVolume = currentVolume;\n     }\n \n-\n-    public void increaseVolume() {\n-        int currentVolume = this.currentVolume;\n-        if (currentVolume >= maxVolume) {\n+    public void enterNumberRadiostation(int radiostation) {\n+        if (radiostation > maxRadiostation) {\n             return;\n         }\n-        this.currentVolume++;\n-    }\n-\n-    public void decreaseVolume() {\n-        int currentVolume = this.currentVolume;\n-        if (currentVolume <= minVolume) {\n+        if (radiostation < minRadiostation) {\n             return;\n         }\n-        this.currentVolume--;\n+        this.currentRadiostation = radiostation;\n     }\n-}\n-\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "edce9ba5a2b06bbdeb2f6e4957d7abef21a04820",
    "filename": "src/test/java/ru/netology/domain/RadioTest.java",
    "status": "modified",
    "additions": 174,
    "deletions": 91,
    "changes": 265,
    "blob_url": "https://github.com/Pankrashin-iqa14/Java2.6-1Radio/blob/042e7c26bea09e0dfe28f11d5dd87f1d99c20720/src/test/java/ru/netology/domain/RadioTest.java",
    "raw_url": "https://github.com/Pankrashin-iqa14/Java2.6-1Radio/raw/042e7c26bea09e0dfe28f11d5dd87f1d99c20720/src/test/java/ru/netology/domain/RadioTest.java",
    "contents_url": "https://api.github.com/repos/Pankrashin-iqa14/Java2.6-1Radio/contents/src/test/java/ru/netology/domain/RadioTest.java?ref=042e7c26bea09e0dfe28f11d5dd87f1d99c20720",
    "patch": "@@ -2,139 +2,222 @@\n \n import org.junit.jupiter.api.Test;\n \n-import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n \n class RadioTest {\n-    Radio sony = new Radio();\n+    @Test\n+    public void shouldGetmaxRadiostation() {\n+        Radio radio = new Radio(11, 10, 50);\n+\n+        assertEquals(11, radio.getMaxRadiostation());\n+    }\n+\n \n     @Test\n-    public void shouldNextRadioStation() {\n-        int currentStation = 9;\n-        sony.setCurrentRadioStation(currentStation);\n-        sony.nextRadioStation();\n-        assertEquals(0, sony.getCurrentRadioStation());\n+    public void shouldGetCurrentRadiostation() {\n+        Radio radio = new Radio(10, 11, 50);\n+\n+\n+        assertEquals(11, radio.getCurrentRadiostation());\n     }\n \n     @Test\n-    public void shouldNextRadioStation1() {\n-        int currentStation = 0;\n-        sony.setCurrentRadioStation(currentStation);\n-        sony.nextRadioStation();\n-        assertEquals(1, sony.getCurrentRadioStation());\n+    public void shouldGetMaxVolume1() {\n+        Radio radio = new Radio(10, 10, 101);\n+\n+        assertEquals(100, radio.getMaxVolume());\n     }\n \n     @Test\n-    public void shouldNextRadioStation2() {\n-        int currentStation = 10;\n-        sony.setCurrentRadioStation(currentStation);\n-        sony.nextRadioStation();\n-        assertEquals(1, sony.getCurrentRadioStation());\n+    public void shouldGetMaxVolume2() {\n+        Radio radio = new Radio(10, 10, 99);\n+\n+        assertEquals(100, radio.getMaxVolume());\n     }\n+\n     @Test\n-    public void shouldNextRadioStation3() {\n-        int currentStation = -3;\n-        sony.setCurrentRadioStation(currentStation);\n-        sony.nextRadioStation();\n-        assertEquals(1, sony.getCurrentRadioStation());\n+    public void shouldGetCurrentVolume() {\n+        Radio radio = new Radio(10, 10, 50);\n+\n+        assertEquals(50, radio.getCurrentVolume());\n     }\n \n+\n     @Test\n-    public void shouldPrevRadioStation() {\n-        int currentStation = 0;\n-        sony.setCurrentRadioStation(currentStation);\n-        sony.prevRadioStation();\n-        assertEquals(9, sony.getCurrentRadioStation());\n+    public void shouldNextRadiostation1() {\n+        Radio radio = new Radio(11, 10, 50);\n+\n+        radio.nextRadiostation();\n+\n+        assertEquals(0, radio.getCurrentRadiostation());\n+\n     }\n \n     @Test\n-    public void shouldPrevRadioStation1() {\n-        int currentStation = 5;\n-        sony.setCurrentRadioStation(currentStation);\n-        sony.prevRadioStation();\n-        assertEquals(4, sony.getCurrentRadioStation());\n+    public void shouldNextRadiostation2() {\n+        Radio radio = new Radio(10, 10, 50);\n \n+\n+        radio.nextRadiostation();\n+\n+        assertEquals(0, radio.getCurrentRadiostation());\n     }\n \n     @Test\n-    public void shouldPrevRadioStation2() {\n-        int currentStation = 10;\n-        sony.setCurrentRadioStation(currentStation);\n-        sony.prevRadioStation();\n-        assertEquals(9, sony.getCurrentRadioStation());\n+    public void shouldNextRadiostation3() {\n+        Radio radio = new Radio(10, 15, 50);\n+\n+\n+        radio.nextRadiostation();\n+\n+        assertEquals(10, radio.getCurrentRadiostation());\n     }\n+\n     @Test\n-    public void shouldPrevRadioStation3() {\n-        int currentStation = -1;\n-        sony.setCurrentRadioStation(currentStation);\n-        sony.prevRadioStation();\n-        assertEquals(9, sony.getCurrentRadioStation());\n+    public void shouldNextRadiostation4() {\n+        Radio radio = new Radio(10, -1, 50);\n+\n+\n+        radio.nextRadiostation();\n+\n+        assertEquals(0, radio.getCurrentRadiostation());\n     }\n \n     @Test\n-    public void shouldEnterNumberRadioStation() {\n-        int RadioStation = 7;\n-        int currentRadioStation = 6;\n-        sony.setCurrentRadioStation(currentRadioStation);\n-        sony.enterNumberRadioStation(RadioStation);\n-        assertEquals(7, sony.getCurrentRadioStation());\n+    public void shouldPrevRadiostation1() {\n+        Radio radio = new Radio(10, 10, 50);\n+\n+        radio.prevRadiostation();\n+\n+        assertEquals(9, radio.getCurrentRadiostation());\n+\n     }\n+\n     @Test\n-    public void shouldEnterNumberRadioStation1() {\n-        int RadioStation = 9;\n-        int currentRadioStation = 0;\n-        sony.setCurrentRadioStation(currentRadioStation);\n-        sony.enterNumberRadioStation(RadioStation);\n-        assertEquals(9, sony.getCurrentRadioStation());\n+    public void shouldPrevRadiostation2() {\n+        Radio radio = new Radio(10, 0, 50);\n+\n+\n+        radio.prevRadiostation();\n+\n+        assertEquals(10, radio.getCurrentRadiostation());\n+\n     }\n+\n     @Test\n-    public void shouldEnterNumberRadioStation2() {\n-        int RadioStation = -5;\n-        int currentRadioStation = 0;\n-        sony.setCurrentRadioStation(currentRadioStation);\n-        sony.enterNumberRadioStation(RadioStation);\n-        assertEquals(0, sony.getCurrentRadioStation());\n+    public void shouldPrevRadiostation3() {\n+        Radio radio = new Radio(10, 11, 50);\n+\n+\n+        radio.prevRadiostation();\n+\n+        assertEquals(10, radio.getCurrentRadiostation());\n+\n     }\n \n     @Test\n-    public void shouldIncreaseVolume() {\n-        int currentVolume = 10;\n-        sony.setCurrentVolume(currentVolume);\n-        sony.increaseVolume();\n-        assertEquals(10, sony.getCurrentVolume());\n+    public void shouldPrevRadiostation4() {\n+        Radio radio = new Radio(10, -5, 50);\n+\n+\n+        radio.prevRadiostation();\n+\n+        assertEquals(0, radio.getCurrentRadiostation());\n+\n     }\n+\n     @Test\n-    public void shouldIncreaseVolume1() {\n-        int currentVolume = 0;\n-        sony.setCurrentVolume(currentVolume);\n-        sony.increaseVolume();\n-        assertEquals(1, sony.getCurrentVolume());\n+    public void shouldIncreaseCurrentVolume1() {\n+        Radio radio = new Radio(10, 10, 50);\n+\n+        radio.increaseCurrentVolume();\n+\n+        assertEquals(51, radio.getCurrentVolume());\n+    }\n+\n+    @Test\n+    public void shouldIncreaseCurrentVolume2() {\n+        Radio radio = new Radio(10, 10, 101);\n+\n+\n+        radio.increaseCurrentVolume();\n+\n+        assertEquals(100, radio.getCurrentVolume());\n+    }\n+\n+    @Test\n+    public void shouldIncreaseCurrentVolume3() {\n+        Radio radio = new Radio(10, 10, -5);\n+\n+\n+        radio.increaseCurrentVolume();\n+\n+        assertEquals(0, radio.getCurrentVolume());\n+    }\n+\n+    @Test\n+    public void shouldIncreaseCurrentVolume4() {\n+        Radio radio = new Radio(10, 10, 0);\n+\n+\n+        radio.increaseCurrentVolume();\n+\n+        assertEquals(1, radio.getCurrentVolume());\n+    }\n+\n+\n+    @Test\n+    public void shouldDecreaseCurrentVolume1() {\n+        Radio radio = new Radio(20, 10, 50);\n+\n+        radio.decreaseCurrentVolume();\n+\n+        assertEquals(49, radio.getCurrentVolume());\n     }\n+\n     @Test\n-    public void shouldIncreaseVolume2() {\n-        int currentVolume = 4;\n-        sony.setCurrentVolume(currentVolume);\n-        sony.increaseVolume();\n-        assertEquals(5, sony.getCurrentVolume());\n+    public void shouldDecreaseCurrentVolume2() {\n+        Radio radio = new Radio(20, 10, 100);\n+\n+        radio.decreaseCurrentVolume();\n+\n+        assertEquals(99, radio.getCurrentVolume());\n     }\n+\n     @Test\n-    public void shouldDecreaseVolume() {\n-        int currentVolume = 11;\n-        sony.setCurrentVolume(currentVolume);\n-        sony.decreaseVolume();\n-        assertEquals(0, sony.getCurrentVolume());\n+    public void shouldDecreaseCurrentVolume3() {\n+        Radio radio = new Radio(10, 10, -10);\n+\n+        radio.decreaseCurrentVolume();\n+\n+        assertEquals(0, radio.getCurrentVolume());\n     }\n+\n+    @Test\n+    public void shouldDecreaseCurrentVolume4() {\n+        Radio radio = new Radio(10, 10, 101);\n+\n+        radio.decreaseCurrentVolume();\n+\n+        assertEquals(100, radio.getCurrentVolume());\n+    }\n+\n     @Test\n-    public void shouldDecreaseVolume1() {\n-        int currentVolume = -2;\n-        sony.setCurrentVolume(currentVolume);\n-        sony.decreaseVolume();\n-        assertEquals(0, sony.getCurrentVolume());\n+    public void shouldEnterNumberRadioStation1() {\n+        Radio radio = new Radio(10, 10, 50);\n+        radio.enterNumberRadiostation(7);\n+        assertEquals(7, radio.getCurrentRadiostation());\n+    }\n+    @Test\n+    public void shouldEnterNumberRadioStation2() {\n+        Radio radio = new Radio(10, 10, 50);\n+        radio.enterNumberRadiostation(11);\n+        assertEquals(10, radio.getCurrentRadiostation());\n     }\n     @Test\n-    public void shouldDecreaseVolume2() {\n-        int currentVolume = 5;\n-        sony.setCurrentVolume(currentVolume);\n-        sony.decreaseVolume();\n-        assertEquals(4, sony.getCurrentVolume());\n+    public void shouldEnterNumberRadioStation3() {\n+        Radio radio = new Radio(10, 10, 50);\n+        radio.enterNumberRadiostation(0);\n+        assertEquals(0, radio.getCurrentRadiostation());\n     }\n-}\n+}\n\\ No newline at end of file"
  }
]
