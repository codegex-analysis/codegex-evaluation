[
  {
    "sha": "1896bcf801c7834cf8d0114f5f3a9ab928f2908a",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 26,
    "deletions": 2,
    "changes": 28,
    "blob_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/blob/0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c/pom.xml",
    "raw_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/raw/0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c/pom.xml",
    "contents_url": "https://api.github.com/repos/Pankrashin-iqa14/Java2.8-Mockito1/contents/pom.xml?ref=0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c",
    "patch": "@@ -1,4 +1,3 @@\n-\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n@@ -37,8 +36,33 @@\n                 <artifactId>maven-surefire-plugin</artifactId>\n                 <version>2.22.2</version>\n             </plugin>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <version>0.8.5</version>\n+                <executions>\n+                    <execution>\n+                        <id>prepare-agent</id>\n+                        <phase>initialize</phase>\n+                        <goals>\n+                            <goal>prepare-agent</goal>\n+                        </goals>\n+                    </execution>\n+                    <execution>\n+                        <id>report</id>\n+                        <phase>verify</phase>\n+                        <goals>\n+                            <goal>report</goal>\n+                        </goals>\n+                    </execution>\n+                    <execution>\n+                        <id>check</id>\n+                        <phase>verify</phase>\n+                    </execution>\n+                </executions>\n+            </plugin>\n         </plugins>\n     </build>\n \n \n-</project>\n\\ No newline at end of file\n+</project>"
  },
  {
    "sha": "fa95b86336c23a88a39a91af9306f970c21d3320",
    "filename": "src/main/java/ru/netology/domain/Movie.java",
    "status": "renamed",
    "additions": 4,
    "deletions": 6,
    "changes": 10,
    "blob_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/blob/0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c/src/main/java/ru/netology/domain/Movie.java",
    "raw_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/raw/0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c/src/main/java/ru/netology/domain/Movie.java",
    "contents_url": "https://api.github.com/repos/Pankrashin-iqa14/Java2.8-Mockito1/contents/src/main/java/ru/netology/domain/Movie.java?ref=0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c",
    "patch": "@@ -8,11 +8,9 @@\n     @NoArgsConstructor\n     @AllArgsConstructor\n     @Data\n-    public class PurchaseItem {\n-        private int id;\n-        private int productId;\n-        private String productName;\n-        private int productPrice;\n-        private int count;\n+    public class Movie {\n+        private int movieId;\n+        private String movieName;\n+\n     }\n ",
    "previous_filename": "src/main/java/ru/netology/domain/PurchaseItem.java"
  },
  {
    "sha": "4d1f045c0d5d2679fce6da53f97c51b7f455f63a",
    "filename": "src/main/java/ru/netology/manager/CartManager.java",
    "status": "removed",
    "additions": 0,
    "deletions": 51,
    "changes": 51,
    "blob_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/blob/71e3149b3216b9981214ea4ba8c97881ce77dacc/src/main/java/ru/netology/manager/CartManager.java",
    "raw_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/raw/71e3149b3216b9981214ea4ba8c97881ce77dacc/src/main/java/ru/netology/manager/CartManager.java",
    "contents_url": "https://api.github.com/repos/Pankrashin-iqa14/Java2.8-Mockito1/contents/src/main/java/ru/netology/manager/CartManager.java?ref=71e3149b3216b9981214ea4ba8c97881ce77dacc",
    "patch": "@@ -1,51 +0,0 @@\n-\n-    package ru.netology.manager;\n-\n-import ru.netology.domain.PurchaseItem;\n-\n-    public class CartManager {\n-        private PurchaseItem[] items = new PurchaseItem[0];\n-\n-        public void add(PurchaseItem item) {\n-            // создаём новый массив размером на единицу больше\n-            int length = items.length + 1;\n-            PurchaseItem[] tmp = new PurchaseItem[length];\n-            // itar + tab\n-            // копируем поэлементно\n-            // for (int i = 0; i < items.length; i++) {\n-            //   tmp[i] = items[i];\n-            // }\n-            System.arraycopy(items, 0, tmp, 0, items.length);\n-            // кладём последним наш элемент\n-            int lastIndex = tmp.length - 1;\n-            tmp[lastIndex] = item;\n-            items = tmp;\n-        }\n-\n-        public PurchaseItem[] getAll() {\n-            PurchaseItem[] result = new PurchaseItem[items.length];\n-            // перебираем массив в прямом порядке\n-            // но кладём в результаты в обратном\n-            for (int i = 0; i < result.length; i++) {\n-                int index = items.length - i - 1;\n-                result[i] = items[index];\n-            }\n-            return result;\n-        }\n-\n-        // наивная реализация\n-        public void removeById(int id) {\n-            int length = items.length - 1;\n-            PurchaseItem[] tmp = new PurchaseItem[length];\n-            int index = 0;\n-            for (PurchaseItem item : items) {\n-                if (item.getId() != id) {\n-                    tmp[index] = item;\n-                    index++;\n-                }\n-            }\n-            // меняем наши элементы\n-            items = tmp;\n-        }\n-    }\n-"
  },
  {
    "sha": "a09d838f0b556c59981dbdc3dfe2a8b00690052f",
    "filename": "src/main/java/ru/netology/manager/ManagerMovies.java",
    "status": "added",
    "additions": 64,
    "deletions": 0,
    "changes": 64,
    "blob_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/blob/0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c/src/main/java/ru/netology/manager/ManagerMovies.java",
    "raw_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/raw/0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c/src/main/java/ru/netology/manager/ManagerMovies.java",
    "contents_url": "https://api.github.com/repos/Pankrashin-iqa14/Java2.8-Mockito1/contents/src/main/java/ru/netology/manager/ManagerMovies.java?ref=0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c",
    "patch": "@@ -0,0 +1,64 @@\n+\n+package ru.netology.manager;\n+\n+import ru.netology.domain.Movie;\n+\n+public class ManagerMovies {\n+    private Movie[] items = new Movie[0];\n+    private int limitMovies = 10;\n+\n+\n+    public ManagerMovies(int limitMovies) {\n+        this.limitMovies = limitMovies;\n+    }\n+\n+    public ManagerMovies() {\n+\n+    }\n+\n+\n+    public void add(Movie item) {\n+\n+        int length = items.length + 1;\n+        Movie[] tmp = new Movie[length];\n+\n+        for (int i = 0; i < items.length; i++) {\n+            tmp[i] = items[i];\n+        }\n+        System.arraycopy(items, 0, tmp, 0, items.length);\n+\n+        int lastIndex = tmp.length - 1;\n+        tmp[lastIndex] = item;\n+        items = tmp;\n+    }\n+\n+\n+    public Movie[] getAll() {\n+\n+        if (items.length < limitMovies) {\n+            Movie[] result = new Movie[items.length];\n+            for (int i = 0; i < result.length; i++) {\n+                int index = items.length - i - 1;\n+                result[i] = items[index];\n+            }\n+            return result;\n+\n+        } else if (items.length >= limitMovies) {\n+            Movie[] result = new Movie[limitMovies];\n+            for (int i = 0; i < limitMovies; i++) {\n+                int index = items.length - i - 1;\n+                result[i] = items[index];\n+            }\n+            return result;\n+\n+        }\n+        return null;\n+    }\n+\n+}\n+\n+\n+\n+\n+\n+"
  },
  {
    "sha": "7a565375860a045d58828483466785c9794c8046",
    "filename": "src/test/java/ru/netology/manager/CartManagerTest.java",
    "status": "removed",
    "additions": 0,
    "deletions": 46,
    "changes": 46,
    "blob_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/blob/71e3149b3216b9981214ea4ba8c97881ce77dacc/src/test/java/ru/netology/manager/CartManagerTest.java",
    "raw_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/raw/71e3149b3216b9981214ea4ba8c97881ce77dacc/src/test/java/ru/netology/manager/CartManagerTest.java",
    "contents_url": "https://api.github.com/repos/Pankrashin-iqa14/Java2.8-Mockito1/contents/src/test/java/ru/netology/manager/CartManagerTest.java?ref=71e3149b3216b9981214ea4ba8c97881ce77dacc",
    "patch": "@@ -1,46 +0,0 @@\n-package ru.netology.manager;\n-\n-import org.junit.jupiter.api.BeforeEach;\n-import org.junit.jupiter.api.Test;\n-import ru.netology.domain.PurchaseItem;\n-import ru.netology.manager.CartManager;\n-\n-import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n-\n-public class CartManagerTest {\n-    private CartManager manager = new CartManager();\n-    private PurchaseItem first = new PurchaseItem(1, 1, \"first\", 1, 1);\n-    private PurchaseItem second = new PurchaseItem(2, 2, \"second\", 1, 1);\n-    private PurchaseItem third = new PurchaseItem(3, 3, \"third\", 1, 1);\n-\n-    @BeforeEach\n-    public void setUp() {\n-        manager.add(first);\n-        manager.add(second);\n-        manager.add(third);\n-    }\n-\n-    @Test\n-    public void shouldRemoveIfExists() {\n-        int idToRemove = 1;\n-        manager.removeById(idToRemove);\n-\n-        PurchaseItem[] actual = manager.getAll();\n-        PurchaseItem[] expected = new PurchaseItem[]{third, second};\n-\n-//    assertEquals(expected, actual);\n-        assertArrayEquals(expected, actual);\n-    }\n-\n-    @Test\n-    public void shouldNotRemoveIfNotExists() {\n-        int idToRemove = 4;\n-\n-        manager.removeById(idToRemove);\n-\n-        PurchaseItem[] actual = manager.getAll();\n-        PurchaseItem[] expected = new PurchaseItem[]{third, second, first};\n-\n-        assertArrayEquals(expected, actual);\n-    }\n-}"
  },
  {
    "sha": "38d899caba723cc060ad609c1c1b8321fa1f0d72",
    "filename": "src/test/java/ru/netology/manager/ManagerMoviesTest.java",
    "status": "added",
    "additions": 86,
    "deletions": 0,
    "changes": 86,
    "blob_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/blob/0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c/src/test/java/ru/netology/manager/ManagerMoviesTest.java",
    "raw_url": "https://github.com/Pankrashin-iqa14/Java2.8-Mockito1/raw/0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c/src/test/java/ru/netology/manager/ManagerMoviesTest.java",
    "contents_url": "https://api.github.com/repos/Pankrashin-iqa14/Java2.8-Mockito1/contents/src/test/java/ru/netology/manager/ManagerMoviesTest.java?ref=0dc4d3c3ea4d0d2171b30f0cefe1ad1159ef084c",
    "patch": "@@ -0,0 +1,86 @@\n+package ru.netology.manager;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import ru.netology.domain.Movie;\n+import ru.netology.manager.ManagerMovies;\n+\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n+\n+public class ManagerMoviesTest {\n+        ManagerMovies manager = new ManagerMovies();\n+\n+        Movie a1 = new Movie(1, \"first\");\n+        Movie a2 = new Movie(2, \"second\");\n+        Movie a3 = new Movie(3, \"third\");\n+        Movie a4 = new Movie(4, \"fourth\");\n+        Movie a5 = new Movie(5, \"fifth\");\n+        Movie a6 = new Movie(6, \"sixth\");\n+        Movie a7 = new Movie(7, \"seventh\");\n+        Movie a8 = new Movie(8, \"eighth\");\n+        Movie a9 = new Movie(9, \"ninth\");\n+        Movie a10 = new Movie(10, \"tenth\");\n+        Movie a11 = new Movie(11, \"eleven\");\n+\n+     @Test\n+             void shouldAdd10LastMovies(){\n+         ManagerMovies manager = new ManagerMovies();\n+         manager.add(a1);\n+         manager.add(a2);\n+         manager.add(a3);\n+         manager.add(a4);\n+         manager.add(a5);\n+         manager.add(a6);\n+         manager.add(a7);\n+         manager.add(a8);\n+         manager.add(a9);\n+         manager.add(a10);\n+         manager.add(a11);\n+\n+         Movie[] actual = manager.getAll();\n+         Movie[] expected = new Movie[]{a11,a10,a9,a8,a7,a6,a5,a4,a3,a2};\n+         assertArrayEquals(actual, expected);\n+     }\n+    @Test\n+    void shouldAdd8Movies(){\n+        ManagerMovies manager = new ManagerMovies(9);\n+        manager.add(a1);\n+        manager.add(a2);\n+        manager.add(a3);\n+        manager.add(a4);\n+        manager.add(a5);\n+        manager.add(a6);\n+        manager.add(a7);\n+        manager.add(a8);\n+\n+\n+        Movie[] actual = manager.getAll();\n+        Movie[] expected = new Movie[]{a8,a7,a6,a5,a4,a3,a2,a1};\n+        assertArrayEquals(actual, expected);\n+    }\n+    @Test\n+    void shouldAdd0LastMovies() {\n+        ManagerMovies manager = new ManagerMovies();\n+        manager.add(a1);\n+        manager.add(a2);\n+        manager.add(a3);\n+        manager.add(a4);\n+\n+\n+\n+        Movie[] actual = manager.getAll();\n+        Movie[] expected = new Movie[]{a4,a3,a2,a1};\n+        assertArrayEquals(actual, expected);\n+    }\n+\n+\n+\n+\n+\n+\n+}\n+\n+\n+\n+\n+"
  }
]
