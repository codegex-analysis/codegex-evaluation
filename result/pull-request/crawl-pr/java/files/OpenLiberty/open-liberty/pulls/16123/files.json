[
  {
    "sha": "217a0d4c921a38c6dbc4156c4ac21da1c2ada134",
    "filename": "dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties",
    "status": "modified",
    "additions": 11,
    "deletions": 11,
    "changes": 22,
    "blob_url": "https://github.com/OpenLiberty/open-liberty/blob/9209fa0bdba008f2a594618284928033e513938b/dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties",
    "raw_url": "https://github.com/OpenLiberty/open-liberty/raw/9209fa0bdba008f2a594618284928033e513938b/dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties",
    "contents_url": "https://api.github.com/repos/OpenLiberty/open-liberty/contents/dev/com.ibm.ws.transport.http/resources/OSGI-INF/l10n/metatype.properties?ref=9209fa0bdba008f2a594618284928033e513938b",
    "patch": "@@ -16,8 +16,8 @@\n #\n \n onError.name=On error\n-onError.desc=Action to take after a failure to start an endpoint. \n-onError.warn=The server will issue warning and error messages if it fails to start an endpoint. \n+onError.desc=Action to take after a failure to start an endpoint.\n+onError.warn=The server will issue warning and error messages if it fails to start an endpoint.\n onError.fail=The server will issue warning and error messages if it fails to start an endpoint and then will stop.\n onError.ignore=The server will not issue any warning or error messages when an endpoint fails to start.\n \n@@ -60,9 +60,9 @@ endpoint.protocolVersion.desc=When Servlet 4.0 API is enabled as a feature, set\n \n endpoint.tcpOptions=TCP Options\n endpoint.tcpOptions$Ref=TCP options reference\n-endpoint.tcpOptions.desc=TCP protocol options for the endpoint. \n+endpoint.tcpOptions.desc=TCP protocol options for the endpoint.\n \n-endpoint.sslOptions=SSL Options \n+endpoint.sslOptions=SSL Options\n endpoint.sslOptions$Ref=SSL options reference\n endpoint.sslOptions.desc=SSL protocol options for the endpoint.\n \n@@ -105,22 +105,22 @@ http.options=HTTP Options\n http.options.desc=HTTP protocol configuration.\n \n http.keepAlive=Enable persistent connections\n-http.keepAlive.desc=Enables persistent connections (HTTP keepalive). If true, connections are kept alive for reuse by multiple sequential requests and responses. If false, connections are closed after the response is sent.    \n+http.keepAlive.desc=Enables persistent connections (HTTP keepalive). If true, connections are kept alive for reuse by multiple sequential requests and responses. If false, connections are closed after the response is sent.\n \n http.maxKeepAliveRequests=Maximum persistent requests per connection\n-http.maxKeepAliveRequests.desc=Maximum number of persistent requests that are allowed on a single HTTP connection if persistent connections are enabled. A value of -1 means unlimited.  \n+http.maxKeepAliveRequests.desc=Maximum number of persistent requests that are allowed on a single HTTP connection if persistent connections are enabled. A value of -1 means unlimited. This option supports low latency or high throughput applications, and SSL connections for use in situations where building up a new connection can be costly.  \n \n http.noCacheCookiesControl=No cache cookies control\n http.noCacheCookiesControl.desc=Allows the user to control whether or not the presence of a Set-Cookie header should update the Cache-Control header with a matching no-cache value. This also adds the Expires header.\n \n http.persistTimeout=Persistent connection timeout\n-http.persistTimeout.desc=Amount of time that a socket will be allowed to remain idle between requests. This setting only applies if persistent connections are enabled. \n+http.persistTimeout.desc=Amount of time that a socket will be allowed to remain idle between requests. This setting only applies if persistent connections are enabled.\n \n http.readTimeout=Read timeout\n-http.readTimeout.desc=Amount of time to wait for a read request to complete on a socket after the first read occurs. \n+http.readTimeout.desc=Amount of time to wait for a read request to complete on a socket after the first read occurs.\n \n http.writeTimeout=Write timeout\n-http.writeTimeout.desc=Amount of time to wait on a socket for each portion of the response data to be transmitted. \n+http.writeTimeout.desc=Amount of time to wait on a socket for each portion of the response data to be transmitted.\n \n http.removeServerHeader=Remove server header\n http.removeServerHeader.desc=Removes server implementation information from HTTP headers.\n@@ -156,7 +156,7 @@ log.access=HTTP Access Logging\n log.access.desc=HTTP access logs contain a record of all inbound HTTP client requests.\n \n log.access.enabled=Enabled\n-log.access.enabled.desc=Enables access logging when the accessLogging configuration element is defined. Note: Access logging must be configured for this attribute to take effect.  \n+log.access.enabled.desc=Enables access logging when the accessLogging configuration element is defined. Note: Access logging must be configured for this attribute to take effect.\n \n log.access.filePath=Log file path\n log.access.filePath.desc=Directory path and name of the access log file. Standard variable substitutions, such as ${server.output.dir}, can be used when specifying the directory path.\n@@ -226,4 +226,4 @@ http.samesite.none=List of samesite none cookies\n http.samesite.none.desc=List of cookie names or patterns for which the SameSite attribute is set to a value of None, if not already defined. A single wildcard (*) character is supported as a stand-alone value, or following cookie name prefixes. Any cookie name or pattern that is defined by this list must be unique and not present in the 'lax' nor 'strict' configurations. Each cookie that is modified to contain a SameSite value of None as a result of this configuration is also set to Secure.\n \n http.samesite.strict=List of samesite strict cookies\n-http.samesite.strict.desc=List of cookie names or patterns for which the SameSite attribute is set to a value of Strict, if not already defined. A single wildcard (*) character is supported as a stand-alone value, or following cookie name prefixes. Any cookie name or pattern that is defined by this list must be unique and not present in the 'lax' nor 'none' configurations.\n\\ No newline at end of file\n+http.samesite.strict.desc=List of cookie names or patterns for which the SameSite attribute is set to a value of Strict, if not already defined. A single wildcard (*) character is supported as a stand-alone value, or following cookie name prefixes. Any cookie name or pattern that is defined by this list must be unique and not present in the 'lax' nor 'none' configurations."
  }
]
