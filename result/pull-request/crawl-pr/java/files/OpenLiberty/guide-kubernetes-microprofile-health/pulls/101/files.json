[
  {
    "sha": "a1a4a4d7e87d7ac53920451f6bf7a4a62b316092",
    "filename": ".github/workflows/test.yml",
    "status": "modified",
    "additions": 30,
    "deletions": 18,
    "changes": 48,
    "blob_url": "https://github.com/OpenLiberty/guide-kubernetes-microprofile-health/blob/e8732b220aae93d0db68da8e324ac8a7fb155eb4/.github/workflows/test.yml",
    "raw_url": "https://github.com/OpenLiberty/guide-kubernetes-microprofile-health/raw/e8732b220aae93d0db68da8e324ac8a7fb155eb4/.github/workflows/test.yml",
    "contents_url": "https://api.github.com/repos/OpenLiberty/guide-kubernetes-microprofile-health/contents/.github/workflows/test.yml?ref=e8732b220aae93d0db68da8e324ac8a7fb155eb4",
    "patch": "@@ -5,28 +5,40 @@ on:\n     branches: [ master, qa ]\n \n jobs:\n-  needTest:\n+  check-files:\n+    if: ${{ github.event_name == 'pull_request' }}\n     runs-on: ubuntu-latest\n     outputs:\n-        canSkip: ${{ steps.checkFiles.outputs.canSkip }}\n+      canSkip: ${{ steps.Checker.outputs.canSkip }}\n     steps:\n-    - name: Check files in PR\n-      id: checkFiles\n-      run: |\n-           PR_FILES_URL=\"https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{github.event.pull_request.number}}/files\"\n-           FILES_CHANGED=$(curl -s -X GET -G $PR_FILES_URL | jq -r '.[] | .filename')\n-           echo $FILES_CHANGED\n-           if [ ${#FILES_CHANGED[@]} == 1 ] && [ ${FILES_CHANGED[0]} == README.adoc ]; then\n-             echo \"Test can be skipped because only updated README.adoc\"\n-             echo \"::set-output name=canSkip::true\"\n-           else\n-             echo \"Need to run test\"           \n-             echo \"::set-output name=canSkip::false\"\n-           fi\n-  java8build:\n+      - name: Get files\n+        uses: actions/checkout@v2\n+      - name: Get tools\n+        uses: actions/checkout@v2\n+        with:\n+          path: tools/\n+          repository: openliberty/guides-common\n+      - id: Checker\n+        shell: bash\n+        run: bash ./tools/pr-checker/checker.sh ${{ github.repository }} ${{ github.event.pull_request.number }} | tee checker.log \n+      - id: Lint-Code-Base\n+        if: always()\n+        uses: github/super-linter@v3\n+        env:\n+          VALIDATE_ALL_CODEBASE: false\n+          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+          LINTER_RULES_PATH: ./tools/pr-checker/linters/\n+      - name: Summary\n+        if: always()\n+        run: |\n+            cat ./checker.log |  tail -n +2; echo \"====== Super Linter ======\"\n+            cat ./super-linter.log | sed -n '/.*The script has completed.*/,$p' | tail -n +4 | sed  's/.*\\(\\[[A-Z]\\+\\]\\)/\\1/'\n+            echo \"====== Examine logs in Checker and Super-Linter steps for more details ======\"\n+            if [ '${{ steps.Checker.outcome }}' != 'success' ] || [ '${{ steps.Lint-Code-Base.outcome }}' != 'success' ]; then exit 1; fi\n+  test-app:\n     runs-on: ubuntu-latest\n-    needs: [needTest]\n-    if: \"!contains(needs.needTest.outputs.canSkip, 'true')\"\n+    needs: [check-files]\n+    if: \"!contains(needs.check-files.outputs.canSkip, 'true')\"\n     env:\n       CHANGE_MINIKUBE_NONE_USER: true\n     defaults:"
  }
]
