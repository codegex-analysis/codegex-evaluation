[
  {
    "sha": "598f2613df7a2f63d41baa366e0eeaf02cc235b1",
    "filename": ".README.md.swo",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/f96f5823d9510d2562f61da31164d56225a230fe/.README.md.swo",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/f96f5823d9510d2562f61da31164d56225a230fe/.README.md.swo",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/.README.md.swo?ref=f96f5823d9510d2562f61da31164d56225a230fe"
  },
  {
    "sha": "4324638fda630db22a2c1144fdd2837a39dd89a3",
    "filename": ".travis.yml",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/f96f5823d9510d2562f61da31164d56225a230fe/.travis.yml",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/f96f5823d9510d2562f61da31164d56225a230fe/.travis.yml",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/.travis.yml?ref=f96f5823d9510d2562f61da31164d56225a230fe",
    "patch": "@@ -0,0 +1,4 @@\n+nguage: java\n+script:\n+        - ./gradlew build\n+        - ./gradlew test"
  },
  {
    "sha": "76ad7f5e3b7b567d7bc66c1791055721fc68d227",
    "filename": "README.md",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/f96f5823d9510d2562f61da31164d56225a230fe/README.md",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/f96f5823d9510d2562f61da31164d56225a230fe/README.md",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/README.md?ref=f96f5823d9510d2562f61da31164d56225a230fe",
    "patch": "@@ -46,3 +46,11 @@ The figure below illustrates this behavior using an example.\n 1. As the joystick remains at a positive value, the reference speed is incremented again.\n 1. However, it reaches the speed limit so in the next step it is not incremented even though the joystick still has a positive value.\n 1. Later, the joystick is set to a negative position for one time unit, making the reference speed to decrease as well.\n+\n+### Some notes\n+\n+[BME MIT](https://www.mit.bme.hu/)\n+\n+***This is the first laboratory excercise of the subject.***\n+\n+branch AB change"
  },
  {
    "sha": "cb65e5c786dd766750e85c36918571f4728b96bc",
    "filename": "settings.gradle",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/f96f5823d9510d2562f61da31164d56225a230fe/settings.gradle",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/f96f5823d9510d2562f61da31164d56225a230fe/settings.gradle",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/settings.gradle?ref=f96f5823d9510d2562f61da31164d56225a230fe",
    "patch": "@@ -5,3 +5,5 @@ include ':train-interfaces'\n include ':train-sensor'\n include ':train-system'\n include ':train-user'\n+include 'train-tachograph'\n+"
  },
  {
    "sha": "4478635fd3a73d0de2cf1dee69ac8d393cca23b7",
    "filename": "train-sensor/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/f96f5823d9510d2562f61da31164d56225a230fe/train-sensor/build.gradle",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/f96f5823d9510d2562f61da31164d56225a230fe/train-sensor/build.gradle",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/train-sensor/build.gradle?ref=f96f5823d9510d2562f61da31164d56225a230fe",
    "patch": "@@ -1,6 +1,7 @@\n dependencies {\n     compile project(':train-interfaces')\n     compile project(':train-user')\n+    compile project(':train-controller')\n \n     compile group: 'junit', name: 'junit', version: '4.12'\n     compile 'org.mockito:mockito-core:2.7.16'"
  },
  {
    "sha": "78b8078ba5eb8e132109f2f3f6302708d03043f7",
    "filename": "train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java",
    "status": "modified",
    "additions": 12,
    "deletions": 4,
    "changes": 16,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/f96f5823d9510d2562f61da31164d56225a230fe/train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/f96f5823d9510d2562f61da31164d56225a230fe/train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java?ref=f96f5823d9510d2562f61da31164d56225a230fe",
    "patch": "@@ -1,19 +1,27 @@\n package hu.bme.mit.train.sensor;\n \n+import hu.bme.mit.train.interfaces.TrainController;\n+import hu.bme.mit.train.interfaces.TrainUser;\n+import hu.bme.mit.train.user.TrainUserImpl;\n+import hu.bme.mit.train.controller.TrainControllerImpl;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n-import static org.mockito.Mockito.*;\n \n public class TrainSensorTest {\n \n+    TrainSensorImpl trainSensor;\n+\n     @Before\n     public void before() {\n-        // TODO Add initializations\n+        TrainController controller = new TrainControllerImpl();\n+        TrainUser user = new TrainUserImpl(controller);\n+        trainSensor = new TrainSensorImpl(controller, user);\n     }\n \n     @Test\n-    public void ThisIsAnExampleTestStub() {\n-        // TODO Delete this and add test cases based on the issues\n+    public void OverrideSpeedLimit_SetSpeedLimitToNegative() {\n+        trainSensor.overrideSpeedLimit(-1);\n+        Assert.assertEquals(-1, trainSensor.getSpeedLimit());\n     }\n }"
  },
  {
    "sha": "2a7769e137944df44883d4a7c8838b7b8461c252",
    "filename": "train-tachograph/build.gradle",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/f96f5823d9510d2562f61da31164d56225a230fe/train-tachograph/build.gradle",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/f96f5823d9510d2562f61da31164d56225a230fe/train-tachograph/build.gradle",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/train-tachograph/build.gradle?ref=f96f5823d9510d2562f61da31164d56225a230fe",
    "patch": "@@ -0,0 +1,8 @@\n+dependencies {\n+    compile project(':train-controller')\n+    compile project(':train-sensor')\n+    compile project(':train-user')\n+    implementation(\"com.google.guava:guava:30.1-jre\")\n+\n+    compile group: 'junit', name: 'junit', version: '4.12'\n+}"
  },
  {
    "sha": "52a3b28b9313c6843a28468765735dd443423b85",
    "filename": "train-tachograph/src/main/java/hu/bme/mit/train/tachograph/TrainTachograph.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/f96f5823d9510d2562f61da31164d56225a230fe/train-tachograph/src/main/java/hu/bme/mit/train/tachograph/TrainTachograph.java",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/f96f5823d9510d2562f61da31164d56225a230fe/train-tachograph/src/main/java/hu/bme/mit/train/tachograph/TrainTachograph.java",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/train-tachograph/src/main/java/hu/bme/mit/train/tachograph/TrainTachograph.java?ref=f96f5823d9510d2562f61da31164d56225a230fe",
    "patch": "@@ -0,0 +1,27 @@\n+package hu.bme.mit.train.tachograph;\n+\n+import com.google.common.collect.HashBasedTable;\n+import com.google.common.collect.Table;\n+import hu.bme.mit.train.controller.TrainControllerImpl;\n+import hu.bme.mit.train.interfaces.TrainController;\n+import hu.bme.mit.train.interfaces.TrainUser;\n+import hu.bme.mit.train.user.TrainUserImpl;\n+\n+import java.time.LocalTime;\n+\n+\n+public class TrainTachograph {\n+\n+    private TrainController controller = new TrainControllerImpl();\n+    private TrainUser user = new TrainUserImpl(controller);\n+    private Table<LocalTime, Integer, Integer> table;\n+\n+    public TrainTachograph() {\n+        table = HashBasedTable.create();\n+        table.put(java.time.LocalTime.now(), user.getJoystickPosition(), controller.getReferenceSpeed());\n+    }\n+\n+    public boolean TableIsEmpty(){\n+        return table.isEmpty();\n+    }\n+}"
  },
  {
    "sha": "bd9b6e012d901f854d34be0bf65b50c27ff90563",
    "filename": "train-tachograph/src/test/java/hu/bme/mit/train/system/TrainTachographTest.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/f96f5823d9510d2562f61da31164d56225a230fe/train-tachograph/src/test/java/hu/bme/mit/train/system/TrainTachographTest.java",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/f96f5823d9510d2562f61da31164d56225a230fe/train-tachograph/src/test/java/hu/bme/mit/train/system/TrainTachographTest.java",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/train-tachograph/src/test/java/hu/bme/mit/train/system/TrainTachographTest.java?ref=f96f5823d9510d2562f61da31164d56225a230fe",
    "patch": "@@ -0,0 +1,21 @@\n+package hu.bme.mit.train.system;\n+\n+import hu.bme.mit.train.tachograph.TrainTachograph;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TrainTachographTest {\n+\n+    private TrainTachograph tachograph;\n+\n+    @Before\n+    public void before() {\n+        tachograph = new TrainTachograph();\n+    }\n+\n+    @Test\n+    public void TableHasElements() {\n+        Assert.assertFalse(tachograph.TableIsEmpty());\n+    }\n+}"
  }
]
