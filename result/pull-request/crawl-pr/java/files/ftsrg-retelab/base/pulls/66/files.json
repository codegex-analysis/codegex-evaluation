[
  {
    "sha": "648d8d6c8c2379e73633744c37f636cbd6b363bf",
    "filename": "README.md",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/59e7d18f2522ea8f0054cd0696a387f53ce96ea6/README.md",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/59e7d18f2522ea8f0054cd0696a387f53ce96ea6/README.md",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/README.md?ref=59e7d18f2522ea8f0054cd0696a387f53ce96ea6",
    "patch": "@@ -46,3 +46,15 @@ The figure below illustrates this behavior using an example.\n 1. As the joystick remains at a positive value, the reference speed is incremented again.\n 1. However, it reaches the speed limit so in the next step it is not incremented even though the joystick still has a positive value.\n 1. Later, the joystick is set to a negative position for one time unit, making the reference speed to decrease as well.\n+\n+# My extra notes for Markdown exercise:   \n+   \n+Here is the URL of my repository: <https://github.com/BLilla/base.git>   \n+   \n+### Here is my formatted list:   \n+   \n+**1. First bold item**   \n+*2. First italic item*   \n+**3. Second bold item**   \n+*4. Second italic item*   \n+"
  },
  {
    "sha": "4478635fd3a73d0de2cf1dee69ac8d393cca23b7",
    "filename": "train-sensor/build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/59e7d18f2522ea8f0054cd0696a387f53ce96ea6/train-sensor/build.gradle",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/59e7d18f2522ea8f0054cd0696a387f53ce96ea6/train-sensor/build.gradle",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/train-sensor/build.gradle?ref=59e7d18f2522ea8f0054cd0696a387f53ce96ea6",
    "patch": "@@ -1,6 +1,7 @@\n dependencies {\n     compile project(':train-interfaces')\n     compile project(':train-user')\n+    compile project(':train-controller')\n \n     compile group: 'junit', name: 'junit', version: '4.12'\n     compile 'org.mockito:mockito-core:2.7.16'"
  },
  {
    "sha": "b7c0064c75d146ee50246bdfce4f0138b52d48b6",
    "filename": "train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java",
    "status": "modified",
    "additions": 17,
    "deletions": 3,
    "changes": 20,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/59e7d18f2522ea8f0054cd0696a387f53ce96ea6/train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/59e7d18f2522ea8f0054cd0696a387f53ce96ea6/train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java?ref=59e7d18f2522ea8f0054cd0696a387f53ce96ea6",
    "patch": "@@ -1,19 +1,33 @@\n package hu.bme.mit.train.sensor;\n \n+import hu.bme.mit.train.interfaces.TrainController;\n+import hu.bme.mit.train.interfaces.TrainUser;\n+import hu.bme.mit.train.interfaces.TrainSensor;\n+import hu.bme.mit.train.user.TrainUserImpl;\n+import hu.bme.mit.train.controller.TrainControllerImpl;\n+import hu.bme.mit.train.sensor.TrainSensorImpl;\n+\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n import static org.mockito.Mockito.*;\n \n public class TrainSensorTest {\n+\t\n+\tTrainController controller;\n+\tTrainUser user;\n+\tTrainSensor sensor;\n \n     @Before\n     public void before() {\n-        // TODO Add initializations\n+    \tcontroller = new TrainControllerImpl();\n+    \tuser = new TrainUserImpl(controller);\n+    \tsensor = new TrainSensorImpl(controller, user);\n     }\n \n     @Test\n-    public void ThisIsAnExampleTestStub() {\n-        // TODO Delete this and add test cases based on the issues\n+    public void overrideSpeedLimitTest() {\n+        sensor.overrideSpeedLimit(15);\n+        Assert.assertEquals(15, sensor.getSpeedLimit());\n     }\n }"
  }
]
