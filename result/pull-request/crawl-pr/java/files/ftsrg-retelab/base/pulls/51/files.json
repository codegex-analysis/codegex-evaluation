[
  {
    "sha": "8d91f13909a7b1b9c62b20f7680528eea809008f",
    "filename": "README.md",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/65ecae7ec6e5d67628dcfe9dd34dd58b26a44a9e/README.md",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/65ecae7ec6e5d67628dcfe9dd34dd58b26a44a9e/README.md",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/README.md?ref=65ecae7ec6e5d67628dcfe9dd34dd58b26a44a9e",
    "patch": "@@ -46,3 +46,6 @@ The figure below illustrates this behavior using an example.\n 1. As the joystick remains at a positive value, the reference speed is incremented again.\n 1. However, it reaches the speed limit so in the next step it is not incremented even though the joystick still has a positive value.\n 1. Later, the joystick is set to a negative position for one time unit, making the reference speed to decrease as well.\n+2_2: New Line\n+2_2: New Line Two\n+2_2: New Line Three"
  },
  {
    "sha": "55d36b2e13c5921b268f49504cdf21f163236caa",
    "filename": "train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java",
    "status": "modified",
    "additions": 4,
    "deletions": 2,
    "changes": 6,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/65ecae7ec6e5d67628dcfe9dd34dd58b26a44a9e/train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/65ecae7ec6e5d67628dcfe9dd34dd58b26a44a9e/train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/train-sensor/src/test/java/hu/bme/mit/train/sensor/TrainSensorTest.java?ref=65ecae7ec6e5d67628dcfe9dd34dd58b26a44a9e",
    "patch": "@@ -1,5 +1,9 @@\n package hu.bme.mit.train.sensor;\n \n+import hu.bme.mit.train.interfaces.TrainController;\n+import hu.bme.mit.train.interfaces.TrainSensor;\n+\n+\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n@@ -9,11 +13,9 @@\n \n     @Before\n     public void before() {\n-        // TODO Add initializations\n     }\n \n     @Test\n     public void ThisIsAnExampleTestStub() {\n-        // TODO Delete this and add test cases based on the issues\n     }\n }"
  },
  {
    "sha": "76cb9264e2255dc1c1273b1edbb4e3ef348b53ea",
    "filename": "train-system/src/main/java/hu/bme/mit/train/system/TrainSystem.java",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/ftsrg-retelab/base/blob/65ecae7ec6e5d67628dcfe9dd34dd58b26a44a9e/train-system/src/main/java/hu/bme/mit/train/system/TrainSystem.java",
    "raw_url": "https://github.com/ftsrg-retelab/base/raw/65ecae7ec6e5d67628dcfe9dd34dd58b26a44a9e/train-system/src/main/java/hu/bme/mit/train/system/TrainSystem.java",
    "contents_url": "https://api.github.com/repos/ftsrg-retelab/base/contents/train-system/src/main/java/hu/bme/mit/train/system/TrainSystem.java?ref=65ecae7ec6e5d67628dcfe9dd34dd58b26a44a9e",
    "patch": "@@ -25,4 +25,15 @@ public TrainUser getUser() {\n \t\treturn user;\n \t}\n \n+\tpublic void setController(TrainControllerImpl a) {\n+\t\tthis.controller = a;\n+\t}\n+\n+\tpublic void setSensor(TrainSensorImpl b) {\n+\t\tthis.sensor = b;\n+\t}\n+\n+\tpublic void setUser(TrainUserImpl c) {\n+\t\tthis.user = c;\n+\t}\n }"
  }
]
