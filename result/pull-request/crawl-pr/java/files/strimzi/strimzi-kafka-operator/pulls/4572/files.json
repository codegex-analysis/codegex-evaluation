[
  {
    "sha": "5fb20d5f08443e2260c28dfc759423336dd945e5",
    "filename": "systemtest/src/main/java/io/strimzi/systemtest/resources/crd/kafkaclients/KafkaOauthExampleClients.java",
    "status": "modified",
    "additions": 66,
    "deletions": 10,
    "changes": 76,
    "blob_url": "https://github.com/strimzi/strimzi-kafka-operator/blob/1f9e40866238be7187a6c8bb8c3fdbd0000bacdc/systemtest/src/main/java/io/strimzi/systemtest/resources/crd/kafkaclients/KafkaOauthExampleClients.java",
    "raw_url": "https://github.com/strimzi/strimzi-kafka-operator/raw/1f9e40866238be7187a6c8bb8c3fdbd0000bacdc/systemtest/src/main/java/io/strimzi/systemtest/resources/crd/kafkaclients/KafkaOauthExampleClients.java",
    "contents_url": "https://api.github.com/repos/strimzi/strimzi-kafka-operator/contents/systemtest/src/main/java/io/strimzi/systemtest/resources/crd/kafkaclients/KafkaOauthExampleClients.java?ref=1f9e40866238be7187a6c8bb8c3fdbd0000bacdc",
    "patch": "@@ -13,13 +13,21 @@\n public class KafkaOauthExampleClients extends KafkaBasicExampleClients {\n \n     private final String oauthClientId;\n+    private String oauthProducerClientId = null;\n+    private String oauthConsumerClientId = null;\n     private final String oauthClientSecret;\n+    private String oauthProducerSecret = null;\n+    private String oauthConsumerSecret = null;\n     private final String oauthTokenEndpointUri;\n     private final String userName;\n \n     public static class Builder extends KafkaBasicExampleClients.Builder {\n         private String oauthClientId;\n+        private String oauthProducerClientId;\n+        private String oauthConsumerClientId;\n         private String oauthClientSecret;\n+        private String oauthProducerSecret;\n+        private String oauthConsumerSecret;\n         private String oauthTokenEndpointUri;\n         private String userName;\n \n@@ -28,11 +36,31 @@ public Builder withOAuthClientId(String oauthClientId) {\n             return this;\n         }\n \n+        public Builder withOAuthProducerClientId(String oauthProducerClientId) {\n+            this.oauthProducerClientId = oauthProducerClientId;\n+            return this;\n+        }\n+\n+        public Builder withOAuthConsumerClientId(String oauthConsumerClientId) {\n+            this.oauthConsumerClientId = oauthConsumerClientId;\n+            return this;\n+        }\n+\n         public Builder withOAuthClientSecret(String oauthClientSecret) {\n             this.oauthClientSecret = oauthClientSecret;\n             return this;\n         }\n \n+        public Builder withOAuthProducerSecret(String oauthProducerSecret) {\n+            this.oauthProducerSecret = oauthProducerSecret;\n+            return this;\n+        }\n+\n+        public Builder withOAuthConsumerSecret(String oauthConsumerSecret) {\n+            this.oauthConsumerSecret = oauthConsumerSecret;\n+            return this;\n+        }\n+\n         public Builder withOAuthTokenEndpointUri(String oauthTokenEndpointUri) {\n             this.oauthTokenEndpointUri = oauthTokenEndpointUri;\n             return this;\n@@ -91,11 +119,19 @@ public KafkaOauthExampleClients build() {\n \n     protected KafkaOauthExampleClients(KafkaOauthExampleClients.Builder builder) {\n         super(builder);\n-        if (builder.oauthClientId == null || builder.oauthClientId.isEmpty()) throw new InvalidParameterException(\"OAuth client id is not set.\");\n-        if (builder.oauthClientSecret == null || builder.oauthClientSecret.isEmpty()) throw new InvalidParameterException(\"OAuth client secret is not set.\");\n+        if ((builder.oauthClientId == null || builder.oauthClientId.isEmpty()) &&\n+                (builder.oauthConsumerClientId == null && builder.oauthProducerClientId == null)) throw new InvalidParameterException(\"OAuth clientId is not set.\");\n+        if (builder.oauthClientSecret == null || builder.oauthClientSecret.isEmpty() &&\n+                (builder.oauthProducerSecret == null && builder.oauthConsumerSecret == null)) throw new InvalidParameterException(\"OAuth client secret is not set.\");\n+\n         if (builder.oauthTokenEndpointUri == null || builder.oauthTokenEndpointUri.isEmpty()) throw new InvalidParameterException(\"OAuth token endpoint url is not set.\");\n         if (builder.userName == null || builder.userName.isEmpty()) builder.userName = builder.oauthClientId;\n \n+        if (builder.oauthProducerClientId != null) oauthProducerClientId = builder.oauthProducerClientId;\n+        if (builder.oauthProducerSecret != null) oauthProducerSecret = builder.oauthProducerSecret;\n+        if (builder.oauthConsumerClientId != null) oauthConsumerClientId = builder.oauthConsumerClientId;\n+        if (builder.oauthConsumerSecret != null) oauthConsumerSecret = builder.oauthConsumerSecret;\n+\n         oauthClientId = builder.oauthClientId;\n         oauthClientSecret = builder.oauthClientSecret;\n         oauthTokenEndpointUri = builder.oauthTokenEndpointUri;\n@@ -111,6 +147,10 @@ protected Builder updateBuilder(Builder builder) {\n         super.updateBuilder(builder);\n         return builder\n             .withOAuthClientId(getOauthClientId())\n+            .withOAuthProducerClientId(getOauthProducerClientId())\n+            .withOAuthProducerSecret(getOauthProducerSecret())\n+            .withOAuthConsumerClientId(getOauthConsumerClientId())\n+            .withOAuthConsumerSecret(getOauthConsumerSecret())\n             .withOAuthClientSecret(getOauthClientSecret())\n             .withOAuthTokenEndpointUri(getOauthTokenEndpointUri())\n             .withUserName(getClientUserName());\n@@ -125,6 +165,22 @@ public String getOauthClientId() {\n         return oauthClientId;\n     }\n \n+    public String getOauthProducerClientId() {\n+        return oauthProducerClientId;\n+    }\n+\n+    public String getOauthConsumerClientId() {\n+        return oauthConsumerClientId;\n+    }\n+\n+    public String getOauthProducerSecret() {\n+        return oauthProducerSecret;\n+    }\n+\n+    public String getOauthConsumerSecret() {\n+        return oauthConsumerSecret;\n+    }\n+\n     public String getOauthClientSecret() {\n         return oauthClientSecret;\n     }\n@@ -150,13 +206,13 @@ private JobBuilder defaultProducerStrimziOauthPlain() {\n                         .editFirstContainer()\n                             .addNewEnv()\n                                 .withName(\"OAUTH_CLIENT_ID\")\n-                                .withValue(oauthClientId)\n+                                .withValue(oauthProducerClientId != null ? oauthProducerClientId : oauthClientId)\n                             .endEnv()\n                             .addNewEnv()\n                                 .withName(\"OAUTH_CLIENT_SECRET\")\n                                 .editOrNewValueFrom()\n                                     .withNewSecretKeyRef()\n-                                        .withName(oauthClientSecret)\n+                                        .withName(oauthProducerSecret != null ? oauthProducerSecret : oauthClientSecret)\n                                         .withKey(\"clientSecret\")\n                                     .endSecretKeyRef()\n                                 .endValueFrom()\n@@ -205,7 +261,7 @@ public JobBuilder producerStrimziOauthTls(String clusterName) {\n                                 .withName(\"USER_CRT\")\n                                 .withNewValueFrom()\n                                     .withNewSecretKeyRef()\n-                                        .withName(userName)\n+                                        .withName(oauthProducerClientId != null ? oauthProducerClientId : userName)\n                                         .withKey(\"user.crt\")\n                                     .endSecretKeyRef()\n                                 .endValueFrom()\n@@ -214,7 +270,7 @@ public JobBuilder producerStrimziOauthTls(String clusterName) {\n                                 .withName(\"USER_KEY\")\n                                 .withNewValueFrom()\n                                     .withNewSecretKeyRef()\n-                                        .withName(userName)\n+                                        .withName(oauthProducerClientId != null ? oauthProducerClientId : userName)\n                                         .withKey(\"user.key\")\n                                     .endSecretKeyRef()\n                                 .endValueFrom()\n@@ -238,13 +294,13 @@ private JobBuilder defaultConsumerStrimziOauth() {\n                         .editFirstContainer()\n                             .addNewEnv()\n                                 .withName(\"OAUTH_CLIENT_ID\")\n-                                .withValue(oauthClientId)\n+                                .withValue(oauthConsumerClientId != null ? oauthConsumerClientId : oauthClientId)\n                             .endEnv()\n                             .addNewEnv()\n                                 .withName(\"OAUTH_CLIENT_SECRET\")\n                                 .editOrNewValueFrom()\n                                     .withNewSecretKeyRef()\n-                                        .withName(oauthClientSecret)\n+                                        .withName(oauthConsumerSecret != null ? oauthConsumerSecret : oauthClientSecret)\n                                         .withKey(\"clientSecret\")\n                                     .endSecretKeyRef()\n                                 .endValueFrom()\n@@ -297,7 +353,7 @@ public JobBuilder consumerStrimziOauthTls(String clusterName) {\n                                 .withName(\"USER_CRT\")\n                                 .withNewValueFrom()\n                                     .withNewSecretKeyRef()\n-                                        .withName(userName)\n+                                        .withName(oauthConsumerClientId != null ? oauthConsumerClientId : userName)\n                                         .withKey(\"user.crt\")\n                                     .endSecretKeyRef()\n                                 .endValueFrom()\n@@ -306,7 +362,7 @@ public JobBuilder consumerStrimziOauthTls(String clusterName) {\n                                 .withName(\"USER_KEY\")\n                                 .withNewValueFrom()\n                                     .withNewSecretKeyRef()\n-                                        .withName(userName)\n+                                        .withName(oauthConsumerClientId != null ? oauthConsumerClientId : userName)\n                                         .withKey(\"user.key\")\n                                     .endSecretKeyRef()\n                                 .endValueFrom()"
  },
  {
    "sha": "06f74b64c90b65ef2b12cb9d149b33e24dfada5b",
    "filename": "systemtest/src/test/java/io/strimzi/systemtest/security/oauth/OauthPlainST.java",
    "status": "modified",
    "additions": 9,
    "deletions": 21,
    "changes": 30,
    "blob_url": "https://github.com/strimzi/strimzi-kafka-operator/blob/1f9e40866238be7187a6c8bb8c3fdbd0000bacdc/systemtest/src/test/java/io/strimzi/systemtest/security/oauth/OauthPlainST.java",
    "raw_url": "https://github.com/strimzi/strimzi-kafka-operator/raw/1f9e40866238be7187a6c8bb8c3fdbd0000bacdc/systemtest/src/test/java/io/strimzi/systemtest/security/oauth/OauthPlainST.java",
    "contents_url": "https://api.github.com/repos/strimzi/strimzi-kafka-operator/contents/systemtest/src/test/java/io/strimzi/systemtest/security/oauth/OauthPlainST.java?ref=1f9e40866238be7187a6c8bb8c3fdbd0000bacdc",
    "patch": "@@ -55,8 +55,7 @@\n     protected static final Logger LOGGER = LogManager.getLogger(OauthPlainST.class);\n \n     private KafkaOauthExampleClients oauthInternalClientJob;\n-    private KafkaOauthExampleClients oauthInternalClientProducerJob;\n-    private KafkaOauthExampleClients oauthInternalClientConsumerJob;\n+    private KafkaOauthExampleClients oauthInternalClientChecksJob;\n     private final String oauthClusterName = \"oauth-cluster-plain-name\";\n     private final String audienceListenerPort = \"9098\";\n     private final String customClaimListenerPort = \"9099\";\n@@ -90,10 +89,10 @@ void testProducerConsumerAudienceTokenChecks() {\n         JobUtils.deleteJobWithWait(NAMESPACE, OAUTH_CONSUMER_NAME);\n \n         LOGGER.info(\"Use clients with Access token containing audience token\");\n-        oauthInternalClientProducerJob.createAndWaitForReadiness(oauthInternalClientProducerJob.producerStrimziOauthPlain().build());\n+        oauthInternalClientChecksJob.createAndWaitForReadiness(oauthInternalClientChecksJob.producerStrimziOauthPlain().build());\n         ClientUtils.waitForClientSuccess(OAUTH_CLIENT_AUDIENCE_PRODUCER, NAMESPACE, MESSAGE_COUNT);\n \n-        oauthInternalClientConsumerJob.createAndWaitForReadiness(oauthInternalClientConsumerJob.consumerStrimziOauthPlain().build());\n+        oauthInternalClientChecksJob.createAndWaitForReadiness(oauthInternalClientChecksJob.consumerStrimziOauthPlain().build());\n         ClientUtils.waitForClientSuccess(OAUTH_CLIENT_AUDIENCE_CONSUMER, NAMESPACE, MESSAGE_COUNT);\n \n         JobUtils.deleteJobWithWait(NAMESPACE, OAUTH_CLIENT_AUDIENCE_PRODUCER);\n@@ -107,17 +106,14 @@ void testProducerConsumerAudienceTokenChecks() {\n     @Test\n     void testAccessTokenClaimCheck() {\n         LOGGER.info(\"Use clients with clientId not containing 'hello-world' in access token.\");\n-        oauthInternalClientProducerJob = oauthInternalClientProducerJob.toBuilder()\n-                .withBootstrapAddress(KafkaResources.bootstrapServiceName(oauthClusterName) + \":\" + customClaimListenerPort)\n-                .build();\n-        oauthInternalClientConsumerJob = oauthInternalClientConsumerJob.toBuilder()\n+        oauthInternalClientChecksJob = oauthInternalClientChecksJob.toBuilder()\n                 .withBootstrapAddress(KafkaResources.bootstrapServiceName(oauthClusterName) + \":\" + customClaimListenerPort)\n                 .build();\n \n-        oauthInternalClientProducerJob.createAndWaitForReadiness(oauthInternalClientProducerJob.producerStrimziOauthPlain().build());\n+        oauthInternalClientChecksJob.createAndWaitForReadiness(oauthInternalClientChecksJob.producerStrimziOauthPlain().build());\n         ClientUtils.waitForClientTimeout(OAUTH_CLIENT_AUDIENCE_PRODUCER, NAMESPACE, MESSAGE_COUNT);\n \n-        oauthInternalClientConsumerJob.createAndWaitForReadiness(oauthInternalClientConsumerJob.consumerStrimziOauthPlain().build());\n+        oauthInternalClientChecksJob.createAndWaitForReadiness(oauthInternalClientChecksJob.consumerStrimziOauthPlain().build());\n         ClientUtils.waitForClientTimeout(OAUTH_CLIENT_AUDIENCE_CONSUMER, NAMESPACE, MESSAGE_COUNT);\n \n         JobUtils.deleteJobWithWait(NAMESPACE, OAUTH_CLIENT_AUDIENCE_PRODUCER);\n@@ -485,22 +481,14 @@ void setUp() {\n             .withOAuthTokenEndpointUri(keycloakInstance.getOauthTokenEndpointUri())\n             .build();\n \n-        oauthInternalClientProducerJob = new KafkaOauthExampleClients.Builder()\n+        oauthInternalClientChecksJob = new KafkaOauthExampleClients.Builder()\n                 .withProducerName(OAUTH_CLIENT_AUDIENCE_PRODUCER)\n-                .withBootstrapAddress(KafkaResources.bootstrapServiceName(oauthClusterName) + \":\" + audienceListenerPort)\n-                .withTopicName(TOPIC_NAME)\n-                .withMessageCount(MESSAGE_COUNT)\n-                .withOAuthClientId(OAUTH_CLIENT_AUDIENCE_PRODUCER)\n-                .withOAuthClientSecret(OAUTH_CLIENT_AUDIENCE_SECRET)\n-                .withOAuthTokenEndpointUri(keycloakInstance.getOauthTokenEndpointUri())\n-                .build();\n-\n-        oauthInternalClientConsumerJob = new KafkaOauthExampleClients.Builder()\n                 .withConsumerName(OAUTH_CLIENT_AUDIENCE_CONSUMER)\n                 .withBootstrapAddress(KafkaResources.bootstrapServiceName(oauthClusterName) + \":\" + audienceListenerPort)\n                 .withTopicName(TOPIC_NAME)\n                 .withMessageCount(MESSAGE_COUNT)\n-                .withOAuthClientId(OAUTH_CLIENT_AUDIENCE_CONSUMER)\n+                .withOAuthProducerClientId(OAUTH_CLIENT_AUDIENCE_PRODUCER)\n+                .withOAuthConsumerClientId(OAUTH_CLIENT_AUDIENCE_CONSUMER)\n                 .withOAuthClientSecret(OAUTH_CLIENT_AUDIENCE_SECRET)\n                 .withOAuthTokenEndpointUri(keycloakInstance.getOauthTokenEndpointUri())\n                 .build();"
  }
]
