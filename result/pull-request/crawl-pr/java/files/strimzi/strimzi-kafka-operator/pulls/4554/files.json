[
  {
    "sha": "be30f4185027d760aeea822f324f4986dc2bbc72",
    "filename": "systemtest/src/test/java/io/strimzi/systemtest/security/oauth/OauthPlainST.java",
    "status": "modified",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/strimzi/strimzi-kafka-operator/blob/12256199e7a538f1fbd3d79b2bdb44101372154c/systemtest/src/test/java/io/strimzi/systemtest/security/oauth/OauthPlainST.java",
    "raw_url": "https://github.com/strimzi/strimzi-kafka-operator/raw/12256199e7a538f1fbd3d79b2bdb44101372154c/systemtest/src/test/java/io/strimzi/systemtest/security/oauth/OauthPlainST.java",
    "contents_url": "https://api.github.com/repos/strimzi/strimzi-kafka-operator/contents/systemtest/src/test/java/io/strimzi/systemtest/security/oauth/OauthPlainST.java?ref=12256199e7a538f1fbd3d79b2bdb44101372154c",
    "patch": "@@ -73,6 +73,41 @@ void testProducerConsumer() {\n         ClientUtils.waitForClientSuccess(OAUTH_CONSUMER_NAME, NAMESPACE, MESSAGE_COUNT);\n     }\n \n+    @Test\n+    void testSaslPlainProducerConsumer() {\n+        String plainAdditionalConfig =\n+                \"sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username=%s password=%s;\\n\" +\n+                        \"sasl.mechanism=PLAIN\";\n+\n+        KafkaOauthExampleClients plainSaslOauthConsumerClientsJob = new KafkaOauthExampleClients.Builder()\n+                .withConsumerName(OAUTH_CLIENT_AUDIENCE_CONSUMER)\n+                .withBootstrapAddress(KafkaResources.plainBootstrapAddress(oauthClusterName))\n+                .withTopicName(TOPIC_NAME)\n+                .withMessageCount(MESSAGE_COUNT)\n+                .withOAuthClientId(OAUTH_CLIENT_NAME)\n+                .withOAuthClientSecret(OAUTH_CLIENT_SECRET)\n+                .withOAuthTokenEndpointUri(keycloakInstance.getOauthTokenEndpointUri())\n+                .withAdditionalConfig(String.format(plainAdditionalConfig, OAUTH_CLIENT_AUDIENCE_CONSUMER, OAUTH_CLIENT_AUDIENCE_SECRET))\n+                .build();\n+\n+        KafkaOauthExampleClients plainSaslOauthProducerClientsJob = new KafkaOauthExampleClients.Builder()\n+                .withProducerName(OAUTH_CLIENT_AUDIENCE_PRODUCER)\n+                .withBootstrapAddress(KafkaResources.plainBootstrapAddress(oauthClusterName))\n+                .withTopicName(TOPIC_NAME)\n+                .withMessageCount(MESSAGE_COUNT)\n+                .withOAuthClientId(OAUTH_CLIENT_NAME)\n+                .withOAuthClientSecret(OAUTH_CLIENT_SECRET)\n+                .withOAuthTokenEndpointUri(keycloakInstance.getOauthTokenEndpointUri())\n+                .withAdditionalConfig(String.format(plainAdditionalConfig, OAUTH_CLIENT_AUDIENCE_PRODUCER, OAUTH_CLIENT_AUDIENCE_SECRET))\n+                .build();\n+\n+        plainSaslOauthProducerClientsJob.createAndWaitForReadiness(plainSaslOauthProducerClientsJob.producerStrimziOauthPlain().build());\n+        ClientUtils.waitForClientSuccess(OAUTH_CLIENT_AUDIENCE_PRODUCER, NAMESPACE, MESSAGE_COUNT);\n+\n+        plainSaslOauthConsumerClientsJob.createAndWaitForReadiness(plainSaslOauthConsumerClientsJob.consumerStrimziOauthPlain().build());\n+        ClientUtils.waitForClientSuccess(OAUTH_CLIENT_AUDIENCE_CONSUMER, NAMESPACE, MESSAGE_COUNT);\n+    }\n+\n     @Test\n     void testProducerConsumerAudienceTokenChecks() {\n         LOGGER.info(\"Setting producer and consumer properties\");"
  }
]
