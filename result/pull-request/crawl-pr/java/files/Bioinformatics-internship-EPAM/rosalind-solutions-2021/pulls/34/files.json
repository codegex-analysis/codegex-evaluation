[
  {
    "sha": "ae2274612b5de162c8aca2af6d068a5e1333a361",
    "filename": "Margarita_Baranova/src/com/baranovama/CalculatingExpectedOffspringTask.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/CalculatingExpectedOffspringTask.java",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/CalculatingExpectedOffspringTask.java",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/com/baranovama/CalculatingExpectedOffspringTask.java?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,22 @@\n+package com.baranovama;\n+\n+import utils.Utils;\n+\n+import java.util.stream.IntStream;\n+\n+public class CalculatingExpectedOffspringTask {\n+\n+    private static final String FILEPATH= \"src/resources/CalculatingExpectedOffspring.txt\";\n+\n+    public static void main(String[] args) throws Exception {\n+        String[] input = Utils.readFromFile(FILEPATH).get(0).split(\" \");\n+        System.out.println(getResult(input));\n+    }\n+\n+    private static String getResult(String[] input) {\n+        //Probability in pairs AA+AA, AA+Aa, AA+aa, Aa+Aa, Aa+aa, aa+aa\n+        double[] chances = new double [] {1, 1, 1, 0.75, 0.5, 0};\n+        final double result = IntStream.range(0, 6).mapToDouble(i -> chances[i] * Integer.parseInt(input[i])).sum();\n+        return String.format(\"%.1f\", 2*result).replace(',', '.');\n+    }\n+}"
  },
  {
    "sha": "b943dd885fc2fc62ab7ebd0ea2990fd0ece74379",
    "filename": "Margarita_Baranova/src/com/baranovama/ComplementingaStrandofDNATask.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/ComplementingaStrandofDNATask.java",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/ComplementingaStrandofDNATask.java",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/com/baranovama/ComplementingaStrandofDNATask.java?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,29 @@\n+package com.baranovama;\n+\n+import utils.Utils;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.IntStream;\n+\n+public class ComplementingaStrandofDNATask {\n+    private static final String FILEPATH= \"src/resources/ComplementingaStrandofDNA.txt\";\n+\n+    public static void main(String[] args) throws Exception {\n+        String input = Utils.readFromFile(FILEPATH).get(0);\n+        System.out.println(getResult(input));\n+    }\n+\n+    private static String getResult(String input) {\n+        var reverseComplement = new StringBuilder();\n+        HashMap<Character, Character> map = new HashMap<Character, Character>(Map.of(\n+                'A', 'T',\n+                'C', 'G',\n+                'G', 'C',\n+                'T', 'A'\n+        ));\n+        IntStream.range(0, input.length()).mapToObj(i -> map.get(input.charAt(i))).forEach(reverseComplement::append);\n+        final String result = reverseComplement.reverse().toString();\n+        return result;\n+    }\n+}"
  },
  {
    "sha": "fedbe5381beb8bccf36543a8f3bcd3fd2c787d50",
    "filename": "Margarita_Baranova/src/com/baranovama/CountingDNANucleotidesTask.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/CountingDNANucleotidesTask.java",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/CountingDNANucleotidesTask.java",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/com/baranovama/CountingDNANucleotidesTask.java?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,33 @@\n+package com.baranovama;\n+\n+import utils.Utils;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.IntStream;\n+\n+public class CountingDNANucleotidesTask {\n+    private static final String FILEPATH= \"src/resources/CountingDNANucleotides.txt\";\n+\n+    public static void main(String[] args) throws Exception {\n+        String input = Utils.readFromFile(FILEPATH).get(0);\n+        System.out.println(getResult(input));\n+    }\n+\n+    private static String getResult(String input){\n+        var map = new HashMap<Character, Integer>(Map.of(\n+                'A', 0,\n+                'C', 0,\n+                'G', 0,\n+                'T', 0\n+        ));\n+        char[] chars = input.toCharArray();\n+        IntStream.range(0, chars.length).forEach(i -> {\n+            if (!map.containsKey(chars[i])) {\n+                System.out.println(\"Error\");\n+            }\n+            map.put(chars[i], map.get(chars[i]) + 1);\n+        });\n+        return String.format(\"%d %d %d %d\", map.get('A'), map.get('C'), map.get('G'), map.get('T'));\n+    }\n+}"
  },
  {
    "sha": "7ee1b4e6c45e26dfb45215112464c4bed2e9527c",
    "filename": "Margarita_Baranova/src/com/baranovama/CountingPointMutationsTask.java",
    "status": "added",
    "additions": 21,
    "deletions": 0,
    "changes": 21,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/CountingPointMutationsTask.java",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/CountingPointMutationsTask.java",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/com/baranovama/CountingPointMutationsTask.java?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,21 @@\n+package com.baranovama;\n+\n+import utils.Utils;\n+\n+import java.util.stream.IntStream;\n+\n+public class CountingPointMutationsTask {\n+    private static final String FILEPATH= \"src/resources/CountingPointMutations.txt\";\n+\n+    public static void main(String[] args) throws Exception {\n+        String dna1 = Utils.readFromFile(FILEPATH).get(0);\n+        String dna2 = Utils.readFromFile(FILEPATH).get(1);\n+        System.out.println(getResult(dna1, dna2));\n+    }\n+\n+    private static String getResult(String dna1, String dna2) {\n+        long HammingDistance = IntStream.range(0, dna1.length()).filter(i -> dna1.charAt(i) != dna2.charAt(i)).count();\n+        final String result = Integer.toString((int) HammingDistance);\n+        return result;\n+    }\n+}"
  },
  {
    "sha": "33c47da2ff53bce5082f441c93755e8257f6fe20",
    "filename": "Margarita_Baranova/src/com/baranovama/FindingaMotifinDNATask.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/FindingaMotifinDNATask.java",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/FindingaMotifinDNATask.java",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/com/baranovama/FindingaMotifinDNATask.java?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,25 @@\n+package com.baranovama;\n+\n+import utils.Utils;\n+\n+import java.util.StringJoiner;\n+\n+public class FindingaMotifinDNATask {\n+    private static final String FILEPATH= \"src/resources/FindingaMotifinDNA.txt\";\n+\n+    public static void main(String[] args) throws Exception {\n+        String dna = Utils.readFromFile(FILEPATH).get(0);\n+        String dnaSub = Utils.readFromFile(FILEPATH).get(1);\n+        System.out.println(getResult(dna, dnaSub));\n+    }\n+\n+    private static StringJoiner getResult(String dna, String dnaSub) {\n+       final var result = new StringJoiner(\" \");\n+       Integer index = dna.indexOf(dnaSub);\n+        while (index >= 0) {\n+            result.add(Integer.toString(index + 1));\n+            index = dna.indexOf(dnaSub, index + 1);\n+        }\n+       return result;\n+    }\n+}"
  },
  {
    "sha": "7e484fb7dfa19cfc6cf23b61c15a1d10e6548ac6",
    "filename": "Margarita_Baranova/src/com/baranovama/ImplementPatternToNumberTask.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/ImplementPatternToNumberTask.java",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/ImplementPatternToNumberTask.java",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/com/baranovama/ImplementPatternToNumberTask.java?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,29 @@\n+package com.baranovama;\n+\n+import utils.Utils;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.IntStream;\n+\n+public class ImplementPatternToNumberTask {\n+\n+    private static final String FILEPATH= \"src/resources/ImplementPatternToNumber.txt\";\n+\n+    public static void main(String[] args) throws Exception {\n+        String input = Utils.readFromFile(FILEPATH).get(0);\n+        System.out.println(getResult(input));\n+    }\n+\n+    private static String getResult(String input){\n+        var map = new HashMap<Character, Integer>(Map.of(\n+                'A', 0,\n+                'C', 1,\n+                'G', 2,\n+                'T', 3\n+        ));\n+        char[] chars = input.toCharArray();\n+        long  number = IntStream.range(0, chars.length).mapToLong(i -> (long) (map.get(chars[i]) * (Math.pow(4, chars.length - i - 1)))).sum();\n+        return String.format(\"%d\", number);\n+    }\n+}"
  },
  {
    "sha": "dd0b87770532f945bb2ec7c80c2b5b894e246613",
    "filename": "Margarita_Baranova/src/com/baranovama/MendelsFirstLawTask.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/MendelsFirstLawTask.java",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/MendelsFirstLawTask.java",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/com/baranovama/MendelsFirstLawTask.java?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,39 @@\n+package com.baranovama;\n+\n+import utils.Utils;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class MendelsFirstLawTask {\n+    private static final String FILEPATH= \"src/resources/MendelsFirstLaw.txt\";\n+\n+    public static void main(String[] args) throws Exception {\n+        String[] input = Utils.readFromFile(FILEPATH).get(0).split(\" \");\n+        System.out.println(getResult(input));\n+    }\n+\n+    private static String getResult(String[] input) {\n+\n+        HashMap<String, Object> counts = new HashMap<>(Map.of(\n+                \"AA\", Integer.parseInt(input[0]),\n+                \"Aa\", Integer.parseInt(input[1]),\n+                \"aa\", Integer.parseInt(input[2])\n+        ));\n+\n+        var count = (int) counts.get(\"AA\")+ (int) counts.get(\"Aa\")+ (int) counts.get(\"aa\");\n+\n+        float allVariants = count*(count - 1)/2;\n+\n+        float probability = 0;\n+        probability += 1 * (((int) counts.get(\"AA\") * ((int) counts.get(\"AA\") - 1)) / 2) / allVariants; //AA+AA\n+        probability += 1 * (int) counts.get(\"AA\") * (int) counts.get(\"Aa\") /allVariants; //AA+Aa\n+        probability += 1 * (int) counts.get(\"AA\") * (int) counts.get(\"aa\") /allVariants; //AA+aa\n+        probability += 0.75f * ((int) counts.get(\"Aa\") * ((int) counts.get(\"Aa\") - 1) / 2) / allVariants; //Aa+Aa\n+        probability += 0.5f *(int) counts.get(\"Aa\")*(int) counts.get(\"aa\")/allVariants; //Aa+aa\n+\n+        final String result;\n+        result = String.format(\"%.5f\", probability);\n+        return result.replace(',', '.');\n+    }\n+}"
  },
  {
    "sha": "c65baf54aa89556f60ccd64ab0eeb43babaf8236",
    "filename": "Margarita_Baranova/src/com/baranovama/MortalFibonacciRabbitsTask.java",
    "status": "added",
    "additions": 37,
    "deletions": 0,
    "changes": 37,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/MortalFibonacciRabbitsTask.java",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/MortalFibonacciRabbitsTask.java",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/com/baranovama/MortalFibonacciRabbitsTask.java?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,37 @@\n+package com.baranovama;\n+\n+import utils.Utils;\n+\n+import java.math.BigInteger;\n+import java.util.ArrayList;\n+\n+public class MortalFibonacciRabbitsTask {\n+\n+    private static final String FILEPATH = \"src/resources/MortalFibonacciRabbits.txt\";\n+\n+    public static void main(String[] args) throws Exception {\n+        String[] input = Utils.readFromFile(FILEPATH).get(0).split(\" \");\n+        Integer months = Integer.parseInt(input[0]);\n+        Integer lifetime = Integer.parseInt(input[1]);\n+        System.out.println(getResult(months, lifetime));\n+    }\n+\n+    private static BigInteger getResult(Integer months, Integer lifetime) {\n+        ArrayList<BigInteger> count = new ArrayList();\n+        BigInteger result = BigInteger.valueOf(0);\n+        for (int i = 0; i < months; i++) {\n+            if (i < 2) {\n+                count.add(i, BigInteger.ONE);\n+            } else if (i < lifetime) {\n+                count.add(i, (BigInteger) count.get(i - 2).add((BigInteger) count.get(i - 1)));\n+            } else if (i == lifetime) {\n+                count.add(i, (BigInteger) count.get(i - 2).add((BigInteger) count.get(i - 1).subtract(BigInteger.ONE)));\n+            } else {\n+                count.add(i, (BigInteger) count.get(i - 2).add((BigInteger) count.get(i - 1).subtract((BigInteger) count.get(i - lifetime - 1))));\n+                count.set(i - lifetime - 1, BigInteger.ZERO);\n+            }\n+            result = (BigInteger) count.get(i);\n+        }\n+        return result;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "48939fc0462f09dc0c88a7cc1c73e32d433d9d9d",
    "filename": "Margarita_Baranova/src/com/baranovama/RabbitsandRecurrenceRelationsTask.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/RabbitsandRecurrenceRelationsTask.java",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/RabbitsandRecurrenceRelationsTask.java",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/com/baranovama/RabbitsandRecurrenceRelationsTask.java?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,18 @@\n+package com.baranovama;\n+\n+import utils.Utils;\n+\n+public class RabbitsandRecurrenceRelationsTask {\n+    private static final String FILEPATH = \"src/resources/RabbitsandRecurrenceRelations.txt\";\n+\n+    public static void main(String[] args) throws Exception {\n+        String[] input = Utils.readFromFile(FILEPATH).get(0).split(\" \");\n+        Integer months = Integer.parseInt(input[0]);\n+        Integer offspring = Integer.parseInt(input[1]);\n+        System.out.println(getResult(months, offspring));\n+    }\n+\n+    private static long getResult(Integer months, Integer offspring) {\n+        return months <= 2 ? 1 : getResult(months - 2, offspring) * offspring + getResult(months - 1, offspring);\n+    }\n+}"
  },
  {
    "sha": "da795b6d53696e6eb82bd2f9239507f786ea2bab",
    "filename": "Margarita_Baranova/src/com/baranovama/TranscribingDNAintoRNATask.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/TranscribingDNAintoRNATask.java",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/com/baranovama/TranscribingDNAintoRNATask.java",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/com/baranovama/TranscribingDNAintoRNATask.java?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,16 @@\n+package com.baranovama;\n+\n+import utils.Utils;\n+\n+public class TranscribingDNAintoRNATask {\n+    private static final String FILEPATH= \"src/resources/TranscribingDNAintoRNA.txt\";\n+\n+    public static void main(String[] args) throws Exception {\n+        String input = Utils.readFromFile(FILEPATH).get(0);\n+        System.out.println(getResult(input));\n+    }\n+\n+    private static String getResult(String input) {\n+        return input.replace('T', 'U');\n+    }\n+}"
  },
  {
    "sha": "33c9aab1e59fa7a8674c2522dd346c2ea62dfe69",
    "filename": "Margarita_Baranova/src/resources/CalculatingExpectedOffspring.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/CalculatingExpectedOffspring.txt",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/CalculatingExpectedOffspring.txt",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/resources/CalculatingExpectedOffspring.txt?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1 @@\n+18248 16335 18730 19154 18440 18647\n\\ No newline at end of file"
  },
  {
    "sha": "437c548929cd6f12834e74e65c1b8814c6b3191d",
    "filename": "Margarita_Baranova/src/resources/ComplementingaStrandofDNA.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/ComplementingaStrandofDNA.txt",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/ComplementingaStrandofDNA.txt",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/resources/ComplementingaStrandofDNA.txt?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1 @@\n+TGGACAAGCCCTGGAAGGCACCGCTGGATGTGTCGCGTCCGAGTTGCGTCTGAAGTTTATTTTTGTGATCGCGCGCACGCTGTCAAGGTTTACCAGTCGAGTACCTTAGCGTACATGACTACGTGCGAGGTTTTAATTCCATGAGTGAATGCTATATTAACTGTTACATGGACAAGTTAAGTTTCATGCTTTAGTCGAACTTGCTGGGGTAGCCGGTCGGGTGAGTATCGAATGATGCGAGGAACTTTTCTGGTTTTTAGTGACTTGGGAATATGTAGTTCATAAAGCAATTCGAAGGTACGCTAACCCTCATTATCGCCCGTGTGTATCAAAGGAAACATCCAGGTCGAATGCTGGACCGGTGTGACTATATAATAAAGACCCCGGATATTGTATTTGCAAACTAGATATTACAACTGGTCGATAATTATCCGCGACACACGACGGACACGCGCATATTCCGTGTCGAAGAAGAAAAGCCTCAGGTCTGGGCTATACTTCCGAGCTTAACGGTCTCTACTAAATTCAACGCCTGAATAATTTGGGCCCACCTCTATTACGAGTCCTACCGGTCGAAATGAATCTTTTCCGGTGAGGTATTATGTCAAGACAGATTACGCCTTTGCCGATACAAATTTTCGTTCCCGCCTACTGAAACATACGACCGGTTTACCATGTCGCAGCTTGCGCCCCAGGCCGCTAACAGATCCTTAGGTCTACAGGTAGCGACAACCCAGGTCCAGGTACTCGGTTTCGATGGCACGGGGAGACTATGCGGGAGTGTCGGCTTGTTTCCCTTTGAGTGCCTCGGGCATTTTAACGGAAAAGAAAACGATTATT\n\\ No newline at end of file"
  },
  {
    "sha": "5c9823baf3ff25507afef778580b3154a4f4fab9",
    "filename": "Margarita_Baranova/src/resources/CountingDNANucleotides.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/CountingDNANucleotides.txt",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/CountingDNANucleotides.txt",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/resources/CountingDNANucleotides.txt?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1 @@\n+GCGATGACCTGCGCGAAGCCGGAGAGCATGCGTTGTAACTCGAATTTGTGCGTAAACGGGTGGTTCCGAAAATGTGGGGAATAAGACTGGAACAGGAGTTTTGGGACTAAAATCCGGTTGGCGGACAATTGGTGCATGATAACCAACTTGCCAAGTTCGATGAGTACAGCCTAGTCGCATGACTCAGCACCAATGGGCATCCGTCGCGTTTCGTATGGGGTTTGATTAAATTATCCATCACAAGTAGACCGCACGGAGGCAGGACAACGAATCTAATTTACATCGGGGCTTAGCTCGGGCCGTAATCGGAGCTTGGTTCCTGACATGTTACCCCGCGCCCGAGTCTTTCATTAGGCAGGGGAAAGGGTGAATCATCGTTGTAGAGCCATATGGAGAGCATGTTAAGTGTTCATAAGTCAGCGGGTAGGCGATCTGTATACGTCCATCCAGACCGTGTACCACCCTGCTCGCAGGGGTATCCAAGAACGCGTTATCTGTATTTGATTACGCGCTCCCTAGCAGGTTATGTTAGAGATCCTTACCCAGACTCGCAGCGTAGATCATGTCGTCTGTCGCGTTTCTCTTCGGTTACGGTATGGAGTGAGATGACACGTGTTAAGTGTGTTTTCCCTTCAAAACTGGCAACGAGCTGAGAGAATATTCAGATGCTTGCGTTGACGCGAAACCGACCGCCGCCGGGAGGGGCCCAGCCATGATCGACGACCGTATGCAAATAACCCCTCTTCCAACACGGTCCTGGGTTGTCACGCCCTTACAGTAACATAGGATAATAGTGCCGGACGGGAGGGCCTAGGTTTGGTTCCTGTTGGACCGCTATGATCTACCACCATCGCAATAGACGTAGCCAAAGGCTAATTCGGTGCACCGGCTGCTTTAACACTACAAGAAGTTTAAAGATGGGCGTGTCAACACGGGAATGTCCAGCCCGCCTATTTGTTTCATTCAAC\n\\ No newline at end of file"
  },
  {
    "sha": "11ca8001ddc4e2759b6655f00a44908a6a6b2ca0",
    "filename": "Margarita_Baranova/src/resources/CountingPointMutations.txt",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/CountingPointMutations.txt",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/CountingPointMutations.txt",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/resources/CountingPointMutations.txt?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,2 @@\n+GTGTCACGCAAAAGATTGATAGGCTTTCATGTCTGCCCTTGAACGTATCTCAACACTTTTTTACGTCTGCGCGTGGCCCGATAGCCGAAACTATGTCGACCTGATCTTCACAGTTCGGAGTGGTAATCCGCCAGCACGTATTAGCTTAAGAAGATCAGGGGGGAGTCCTCAGAGGGGTTCTTTTCGGAAATCAACGACCAAGATTTAAGCAGTTCCCTTCTGACGGAAGGTATGTTCTAATACTGTAGTAGGCTTATATTAGATACGTGCCTGACGCTTATGGGTGGTTCCGGTACGACCTGCTCGAATCTAGCGGCGCCTGTCGACTTTTAACATTATTTATGTGCTGCTGAACGAACACAGGCCGGGCAGGATATCCATTCAGCAGGGGCGCAATGCCAGGGTAGGTCACCTTTGGCTGGCTCATGTATTGCAGCTCAGTAGGTCAGGCGCGTATCTAGCAGGCGAGTCTTTATGGGTCTCGCTATCGCACTGCTTGCAATTAGGCGTGGAACGATGGTTAAAGCCTACACAGATGCACTAGCATGTTCCCTGGCGCAATGTGTGACACAGGCAGAAAGAGTCGCTGGTAACCCGGCAATAACGGGGATGAAGAATGCATACATGAATAATGTTCGTGGGATAGTGTTTAGCGGAGATTCTAAAAATGACGGCTGCGACCAGTGAAGCTGTTCCTTTATTGAAGCGCATAGCCTTATCTCCAACGCATCAGCTGCACAGCAGGGCTTGACCTCTAGGCCTGAGGGTCGGGCCGCCGAATCGGAGGCAAACTCACATTCGCACCTGACGAACTGTTTCATGTCACGGCGGGCCCTATACGCAGGACGAACGCCGCGTGATTAACCCTTAATGCCTCGTTACGTGCAGGTACATGTCCGACCGATTACGCGGACCTGGAGACTACTTAATTTCGTAGAGCTCCACCC\n+ATGTTGCTGATATGACTGTCAGCTATTCCTATCGTCGAAAGTGCGTCACTTCAAACGCTTCTTCCTATCCGACCGACCGTGTCGTGGATTCAATCATGGGGCGACCCCATTAGTACGCTGACGTTGGCCCGCAGTACGACTTTGGTACCGCTCACTAGACCAGAGTGCCCATAGGGTTTGCGTGCGTTAAAAACATGGCAATGGTTCAGCTACTCTCTCCTTCCACACTGAATGTATTACGAGTGTGCAATTCATATACAAGACACATGGATCACCCTCGTGAGGAGATCTAGCAGCATGGGCGAGATTCAAGCCGCGGTTGCCGCATACCCGCTGTGTTTAGGCGAGGTCAGACGAACACAGGCCCCGCGTTAAACGACTCCAGCAGCGTCGAACGCAGCGTGTGGGGCACCTGTATATGCAGGATCAAGTTCTGCTCATCACAGCAGAGGCAGATGGAGAGTGTGATTCGTTGCGTGTACCTCTTTTTCACTGAAGACGAGAACTCTCGCAACGTGGGTGAACGGAGACTCAGATGGGGTAAGTAGTATCCTGGCATACCGTTGAACACTTCTGGATCCGATTGATGGGAAGCAGGTCGTAAACGGCTAGATAGAATCACCCTTCCAAAACGTGGCTGGTACGCTCTTTTGCTATCAGCCTAAAATCGACCTCAACGATTTATGAGGGTCCTCCTGTACGGTACCGCAAAACTTAGTCGCGAAAAGATCCTATTCACATCCTGGCGGGAATTCTTAACCTGATGTAAGATCAGTCGGAGCACCCTAGAACTCACATCACACGCAGGATAGTTGCAGAAAACCGACGCGAGCTACAAACACAGGACGACTCCTGCTGGATTCATCTGATTCGCCGAGGTGCGAGAGCTGACCAGCGGAGCCGATTACAGTACCATTGGGCCATCATTTTTTAGTATGACTAAACCA"
  },
  {
    "sha": "23f6d7ebb923ee70babc094feab06061b194e97f",
    "filename": "Margarita_Baranova/src/resources/FindingaMotifinDNA.txt",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/FindingaMotifinDNA.txt",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/FindingaMotifinDNA.txt",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/resources/FindingaMotifinDNA.txt?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,2 @@\n+CGAGGGCCCGGCGAATAGGGCCCGTGGGCCCGGGGCCCGGGGCCCGCAAGGGCCCGCGGGGCCCGCTTGGGCCCGGGGGCCCGTCATGGGCCCGACCGGGCCCGGGGGCCCGGGGCCCGGATTCCCTGGGCCCGGGGCCCGGTCCGGGCCCGACCGGGCCCGGGGCCCGGGGCCCGGGGCCCGGATTGGGCCCGTGGGGCCCGGGGCCCGGGGCCCGGTGGGCCCGACCAGGGCCCGGGGCCCGGGGGCCCGAGTAGGGCCCGGATCTGTCCGCGGTTATGACCCAGGGCCCGCGCTAATCTAGTGTACGGGCCCGGTACGGGCCCGATCCTGGGCCCGTCGGGCCCGGAGGGCCCGAAGAGGGCCCGGCAAGCGGGCCCGAGGGCCCGAGGGCCCGGAGGGCCCGTTGGGCCCGGCGCGGGGCCCGCAAGGGCCCGCCTGGGCCCGCTGGGCCCGTGCTAGGGTGCTCGGGGCCCGGGGGCCCGACAGGGCCCGAGGGCCCGGCGGGGCCCGAGGGCCCGTGATGGGCCCGATCGTGTAGGGCCCGAGGGGGCCCGTGGGCCCGGGGCCCGGGGGGCCCGGGGCCCGCAGGGGCCCGTGGGCCCGTCACTAGGGCCCGTTTTGGGCCCGTGTGGGCCCGAGGGCCCGATGGGCCCGGCGTGGAAGGGCCCGCTGGGGCCCGCGGGCCCGGTCAGGGCCCGGGGCCCGAGGGCCCGAGGGCCCGATCAGATACATGGGGCCCGGGGCCCGTGGGCCCGGGGCCCGGGGCCCGACTCGGGCCCGGGGCCCGGGGGCCCGCGGGGCCCGTTCTTAGGGCCCGGGGCCCGCGGGCCCGCGGGCCCGTGGGCCCGACCGGGGGGCGGGCCCGGGGCCCGAAGGGGCCCGGGCGGGGCCCGTCGTGGGCCCGCAGGGCCCGTTGGGCCCGCTGATAACGGGCCCGGATATGAAGGGCCCG\n+GGGCCCGGG"
  },
  {
    "sha": "919db5839da1b9adf7d144668fe6029ec8ddb4c6",
    "filename": "Margarita_Baranova/src/resources/ImplementPatternToNumber.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/ImplementPatternToNumber.txt",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/ImplementPatternToNumber.txt",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/resources/ImplementPatternToNumber.txt?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1 @@\n+TTTATCAGGGCATGTTTGTGAG\n\\ No newline at end of file"
  },
  {
    "sha": "81bec6e74f776cad40462c168f98e07afd62bdff",
    "filename": "Margarita_Baranova/src/resources/MendelsFirstLaw.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/MendelsFirstLaw.txt",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/MendelsFirstLaw.txt",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/resources/MendelsFirstLaw.txt?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1 @@\n+25 19 16"
  },
  {
    "sha": "a39649d0cd3dd619b23156e63ffbd55b4469e197",
    "filename": "Margarita_Baranova/src/resources/MortalFibonacciRabbits.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/MortalFibonacciRabbits.txt",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/MortalFibonacciRabbits.txt",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/resources/MortalFibonacciRabbits.txt?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1 @@\n+85 17"
  },
  {
    "sha": "b3f6033030efff7182ae8b6c3a4b81ddf3d7acee",
    "filename": "Margarita_Baranova/src/resources/RabbitsandRecurrenceRelations.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/RabbitsandRecurrenceRelations.txt",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/RabbitsandRecurrenceRelations.txt",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/resources/RabbitsandRecurrenceRelations.txt?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1 @@\n+33 2\n\\ No newline at end of file"
  },
  {
    "sha": "dca1af8be9e91dc0120c911aed051332488c9bad",
    "filename": "Margarita_Baranova/src/resources/TranscribingDNAintoRNA.txt",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/TranscribingDNAintoRNA.txt",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/resources/TranscribingDNAintoRNA.txt",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/resources/TranscribingDNAintoRNA.txt?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1 @@\n+AAATAGACGATTCCAGACAATTGCGACTCAATCTTCTACGACGCTCGCTAATTTTATATCCCAGAGTGGATCCGGCCGCCTGTGCGTCCTCGGGCTACGTGCAAGGTTAAAAGATAGTCTTTGCTCTAACTGTGTGGACTCCCGCCCCCGCGGAGATGACTATTTCGCAACAGGCCGGAACGAATTCGCACTGCCCCGGGAAGCACCGAACTCTTTTCCATTGAGAACGGCTGTATGTATTAGGGAACGCGCTTGGATATATTAATCGTAGTGATAATTTACCACTAAACGGCACCGGCTTGGCCATGGCATGATATAAGGGACTGGAAGTACTTCGAGATTCCCTAGCAACACGCTTGACACTGCGCCGTTCTCATCTCTTGAACCCGAACACCAACATAGCGTGATATGTGCATAATGGATAAATTCCCAAACTCTCACAATCGCCGTAGACTCAACTCCAGTGGGCACGGTGATACAGTGCCTCCGATACTAGAATTTGTTTAAAGTCACACACAGGCCTAGCCAGGATAGACTGCCAAACGAATCGTTGATAAGATTAACACTGACAAGTGCACCCACGGCATAGCGTCGCTAATATGAACATCCCTATGGATAAGACGCTCCAAAACACATAATGATAGAAGTATGAGCGTTATGGCACGACTGCGGCTCGTCGGTTCTACTGGAAGCCAGGGAGGCACAAAAGGCTGTCAAAACGCGTCGACTAAGGGAAACCCTATTGCAGATTCATTGCCATCAGCAGAAACGTTGCGCTGGCAGAGTAGGACCACTCAGCCGACGTTATTTTCTCATTGGAAGGCGTGTTATAAAGTGCCAGCATTGAGGATCAGGCCCACCGTACTTCGCTGGGAATGACCGTTTAACGCGATACCCTAGAAAGATGGACCT\n\\ No newline at end of file"
  },
  {
    "sha": "b999c7f5a995cb5abefe2f462080782c72d13244",
    "filename": "Margarita_Baranova/src/utils/Utils.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/blob/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/utils/Utils.java",
    "raw_url": "https://github.com/Bioinformatics-internship-EPAM/rosalind-solutions-2021/raw/fc836c3661fe676e99044202722a323619636a3b/Margarita_Baranova/src/utils/Utils.java",
    "contents_url": "https://api.github.com/repos/Bioinformatics-internship-EPAM/rosalind-solutions-2021/contents/Margarita_Baranova/src/utils/Utils.java?ref=fc836c3661fe676e99044202722a323619636a3b",
    "patch": "@@ -0,0 +1,13 @@\n+package utils;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+public final class Utils {\n+    public static List<String> readFromFile(String filePath) throws Exception {\n+        Path fullPath = Paths.get(filePath);\n+        final List<String> strings = Files.readAllLines(fullPath);\n+        return strings;\n+    }\n+}"
  }
]
