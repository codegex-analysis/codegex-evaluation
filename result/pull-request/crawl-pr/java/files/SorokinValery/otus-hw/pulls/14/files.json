[
  {
    "sha": "9db14437e3e8124360f3603e3fa20259c4b7ba1a",
    "filename": "HW14-WebServer/build.gradle",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/build.gradle",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/build.gradle",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/build.gradle?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,31 @@\n+plugins {\n+    id 'java'\n+}\n+\n+group 'ru.sorokin'\n+version 'unspecified'\n+\n+repositories {\n+    mavenCentral()\n+}\n+\n+dependencies {\n+    implementation(\"org.hibernate:hibernate-core\")\n+    implementation 'ch.qos.logback:logback-classic'\n+    implementation 'org.flywaydb:flyway-core'\n+    implementation 'org.postgresql:postgresql'\n+    implementation(\"com.google.code.gson:gson:${Versions.gson}\")\n+\n+    implementation(\"org.eclipse.jetty:jetty-servlet:${Versions.jetty}\")\n+    implementation(\"org.eclipse.jetty:jetty-server:${Versions.jetty}\")\n+    implementation(\"org.eclipse.jetty:jetty-webapp:${Versions.jetty}\")\n+    implementation(\"org.eclipse.jetty:jetty-security:${Versions.jetty}\")\n+    implementation(\"org.eclipse.jetty:jetty-http:${Versions.jetty}\")\n+    implementation(\"org.eclipse.jetty:jetty-io:${Versions.jetty}\")\n+    implementation(\"org.eclipse.jetty:jetty-util:${Versions.jetty}\")\n+    implementation(\"org.freemarker:freemarker:${Versions.freemarker}\")\n+}\n+\n+test {\n+    useJUnitPlatform()\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "be54f59f4bdf679d86e5af4ba430096e9b15e477",
    "filename": "HW14-WebServer/docer/runDb.src",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/docer/runDb.src",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/docer/runDb.src",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/docer/runDb.src?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1 @@\n+docker run --rm --name pg-docker -e POSTGRES_PASSWORD=pwd -e POSTGRES_USER=usr -e POSTGRES_DB=demoDB -p 5432:5432 postgres:12\n\\ No newline at end of file"
  },
  {
    "sha": "59441a0d4fcf635510001750d3322518fe09e889",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/Main.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/Main.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/Main.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/Main.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,55 @@\n+package ru.sorokin;\n+\n+import com.google.gson.Gson;\n+import com.google.gson.GsonBuilder;\n+import org.eclipse.jetty.security.HashLoginService;\n+import org.eclipse.jetty.security.LoginService;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.cfg.Configuration;\n+import ru.sorokin.entity.User;\n+import ru.sorokin.helpers.FileSystemHelper;\n+import ru.sorokin.hibernate.HibernateUtils;\n+import ru.sorokin.hibernate.dao.UserDaoImpl;\n+import ru.sorokin.hibernate.sessionmanager.SessionManagerHibernate;\n+import ru.sorokin.server.UsersWebServer;\n+import ru.sorokin.server.UsersWebServerWithBasicSecurity;\n+import ru.sorokin.service.UserService;\n+import ru.sorokin.service.UserServiceImpl;\n+import ru.sorokin.template.TemplateProcessor;\n+import ru.sorokin.template.TemplateProcessorImpl;\n+\n+public class Main {\n+    private static final int WEB_SERVER_PORT = 8080;\n+    private static final String TEMPLATES_DIR = \"/templates/\";\n+    private static final String HASH_LOGIN_SERVICE_CONFIG_NAME = \"realm.properties\";\n+    private static final String REALM_NAME = \"AnyRealm\";\n+    public static final String HIBERNATE_CFG_FILE = \"hibernate.cfg.xml\";\n+\n+    public static void main(String[] args) throws Exception {\n+        Configuration configuration = new Configuration().configure(HIBERNATE_CFG_FILE);\n+        SessionFactory sessionFactory = HibernateUtils.buildSessionFactory(configuration, User.class);\n+        SessionManagerHibernate sessionManager = new SessionManagerHibernate(sessionFactory);\n+        ru.sorokin.hibernate.dao.UserDao userDao = new UserDaoImpl(sessionManager);\n+        UserService userService = new UserServiceImpl(userDao);\n+\n+\n+        User firstUser = new User(\"Ivan Sobaka\", \"Ivan\", \"123\" );\n+        User secondUser = new User(\"George Eagle\", \"User\", \"456\" );\n+        userService.saveUser(firstUser);\n+        userService.saveUser(secondUser);\n+\n+\n+        Gson gson = new GsonBuilder().serializeNulls().setPrettyPrinting().create();\n+        TemplateProcessor templateProcessor = new TemplateProcessorImpl(TEMPLATES_DIR);\n+\n+        String hashLoginServiceConfigPath = FileSystemHelper.localFileNameOrResourceNameToFullPath(HASH_LOGIN_SERVICE_CONFIG_NAME);\n+        LoginService loginService = new HashLoginService(REALM_NAME, hashLoginServiceConfigPath);\n+\n+\n+        UsersWebServer usersWebServer = new UsersWebServerWithBasicSecurity(WEB_SERVER_PORT,\n+                loginService, userService, gson, templateProcessor);\n+\n+        usersWebServer.start();\n+        usersWebServer.join();\n+    }\n+}"
  },
  {
    "sha": "4d8b1bed906a748895068ecff38f7a554b9e4806",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/DatabaseSession.java",
    "status": "added",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/DatabaseSession.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/DatabaseSession.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/DatabaseSession.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,4 @@\n+package ru.sorokin.core.sessionmanager;\n+\n+public interface DatabaseSession {\n+}"
  },
  {
    "sha": "de1087410f360bd560929cee15cbf4de7ccd8675",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/SessionManager.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/SessionManager.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/SessionManager.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/SessionManager.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.sorokin.core.sessionmanager;\n+\n+public interface SessionManager extends AutoCloseable {\n+    void beginSession();\n+\n+    void commitSession();\n+\n+    void rollbackSession();\n+\n+    void close();\n+\n+    DatabaseSession getCurrentSession();\n+}"
  },
  {
    "sha": "a16ece19b3b623ffd6195b91ead2ede49e0c63f9",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/SessionManagerException.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/SessionManagerException.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/SessionManagerException.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/core/sessionmanager/SessionManagerException.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,12 @@\n+package ru.sorokin.core.sessionmanager;\n+\n+\n+public class SessionManagerException extends RuntimeException {\n+    public SessionManagerException(String msg) {\n+        super(msg);\n+    }\n+\n+    public SessionManagerException(Exception ex) {\n+        super(ex);\n+    }\n+}"
  },
  {
    "sha": "e932dfc2b2c0d765899eaa532e925ac3e9648af9",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/entity/User.java",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/entity/User.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/entity/User.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/entity/User.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,52 @@\n+package ru.sorokin.entity;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"user_data\")\n+public class User {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    @Column(name = \"id\")\n+    private long id;\n+    @Column(name=\"name\")\n+    private String name;\n+    @Column(name=\"login\")\n+    private String login;\n+    @Column(name=\"password\")\n+    private String password;\n+\n+    public User() {\n+    }\n+\n+    public User(String name, String login, String password) {\n+        this.name = name;\n+        this.login = login;\n+        this.password = password;\n+    }\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public String getLogin() {\n+        return login;\n+    }\n+\n+    public String getPassword() {\n+        return password;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"User{\" +\n+                \"id=\" + id +\n+                \", name='\" + name + '\\'' +\n+                \", login='\" + login + '\\'' +\n+                \", password='\" + password + '\\'' +\n+                '}';\n+    }\n+}"
  },
  {
    "sha": "8671f4f5b8702e98b66dec2821141027affe7651",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/helpers/FileSystemHelper.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/helpers/FileSystemHelper.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/helpers/FileSystemHelper.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/helpers/FileSystemHelper.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,28 @@\n+package ru.sorokin.helpers;\n+\n+import java.io.File;\n+import java.net.URLDecoder;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Optional;\n+\n+public final class FileSystemHelper {\n+\n+    private FileSystemHelper() {\n+    }\n+\n+    public static String localFileNameOrResourceNameToFullPath(String fileOrResourceName) {\n+        String path = null;\n+        File file = new File(String.format(\"./%s\", fileOrResourceName));\n+        if (file.exists()) {\n+            path = URLDecoder.decode(file.toURI().getPath(), StandardCharsets.UTF_8);\n+        }\n+\n+        if (path == null) {\n+            System.out.println(\"Local file not found, looking into resources\");\n+            path = Optional.ofNullable(FileSystemHelper.class.getClassLoader().getResource(fileOrResourceName))\n+                    .orElseThrow(() -> new RuntimeException(String.format(\"File \\\"%s\\\" not found\", fileOrResourceName))).toExternalForm();\n+\n+        }\n+        return path;\n+    }\n+}"
  },
  {
    "sha": "e909e9fb75660a2a17c7da39a400ae8338302e96",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/hibernate/HibernateUtils.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/hibernate/HibernateUtils.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/hibernate/HibernateUtils.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/hibernate/HibernateUtils.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,34 @@\n+package ru.sorokin.hibernate;\n+\n+import org.hibernate.SessionFactory;\n+import org.hibernate.boot.Metadata;\n+import org.hibernate.boot.MetadataSources;\n+import org.hibernate.boot.registry.StandardServiceRegistry;\n+import org.hibernate.boot.registry.StandardServiceRegistryBuilder;\n+import org.hibernate.cfg.Configuration;\n+\n+import java.util.Arrays;\n+\n+public final class HibernateUtils {\n+\n+    private HibernateUtils() {\n+    }\n+\n+    public static SessionFactory buildSessionFactory(String hibernateConfigFile, Class<?>... annotatedClasses) {\n+        Configuration configuration = new Configuration().configure(hibernateConfigFile);\n+        return buildSessionFactory(configuration, annotatedClasses);\n+    }\n+\n+    public static SessionFactory buildSessionFactory(Configuration configuration, Class<?>... annotatedClasses) {\n+        MetadataSources metadataSources = new MetadataSources(createServiceRegistry(configuration));\n+        Arrays.stream(annotatedClasses).forEach(metadataSources::addAnnotatedClass);\n+\n+        Metadata metadata = metadataSources.getMetadataBuilder().build();\n+        return metadata.getSessionFactoryBuilder().build();\n+    }\n+\n+    private static StandardServiceRegistry createServiceRegistry(Configuration configuration) {\n+        return new StandardServiceRegistryBuilder()\n+                .applySettings(configuration.getProperties()).build();\n+    }\n+}"
  },
  {
    "sha": "ba38998f89f93888608d1bf961676ef3a313ecda",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/hibernate/dao/UserDao.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/hibernate/dao/UserDao.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/hibernate/dao/UserDao.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/hibernate/dao/UserDao.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.sorokin.hibernate.dao;\n+\n+import ru.sorokin.core.sessionmanager.SessionManager;\n+import ru.sorokin.entity.User;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public interface UserDao {\n+    Optional<User> findById(long id);\n+    List<User> findAll();\n+    long insert(User user);\n+\n+    void update(User user);\n+\n+    long insertOrUpdate(User user);\n+\n+    SessionManager getSessionManager();\n+}"
  },
  {
    "sha": "7af45c34e61a36e7d2ee40b2d193c642ea42c4a0",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/hibernate/dao/UserDaoImpl.java",
    "status": "added",
    "additions": 94,
    "deletions": 0,
    "changes": 94,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/hibernate/dao/UserDaoImpl.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/hibernate/dao/UserDaoImpl.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/hibernate/dao/UserDaoImpl.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,94 @@\n+package ru.sorokin.hibernate.dao;\n+\n+import org.hibernate.Session;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import ru.sorokin.core.sessionmanager.SessionManager;\n+import ru.sorokin.entity.User;\n+import ru.sorokin.hibernate.sessionmanager.DatabaseSessionHibernate;\n+import ru.sorokin.hibernate.sessionmanager.SessionManagerHibernate;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Optional;\n+\n+public class UserDaoImpl implements UserDao {\n+    private static final Logger logger = LoggerFactory.getLogger(UserDaoImpl.class);\n+\n+    private final SessionManagerHibernate sessionManager;\n+\n+    public UserDaoImpl(SessionManagerHibernate sessionManager) {\n+        this.sessionManager = sessionManager;\n+    }\n+\n+    @Override\n+    public Optional<User> findById(long id) {\n+        DatabaseSessionHibernate currentSession = sessionManager.getCurrentSession();\n+        try {\n+            return Optional.ofNullable(currentSession.getHibernateSession().find(User.class, id));\n+        } catch (Exception e) {\n+            logger.error(e.getMessage(), e);\n+        }\n+        return Optional.empty();\n+    }\n+\n+    @Override\n+    public List<User> findAll() {\n+        DatabaseSessionHibernate currentSession = sessionManager.getCurrentSession();\n+        try {\n+            return currentSession.getHibernateSession().createQuery(\"select u from User u\",User.class).getResultList();\n+        } catch (Exception e) {\n+            logger.error(e.getMessage(), e);\n+        }\n+        return Collections.emptyList();\n+    }\n+\n+    @Override\n+    public long insert(User user) {\n+        DatabaseSessionHibernate currentSession = sessionManager.getCurrentSession();\n+        try {\n+            Session hibernateSession = currentSession.getHibernateSession();\n+            hibernateSession.persist(user);\n+            hibernateSession.flush();\n+            return user.getId();\n+        } catch (Exception e) {\n+            logger.error(e.getMessage(), e);\n+            return -1;\n+        }\n+    }\n+\n+    @Override\n+    public void update(User user) {\n+        DatabaseSessionHibernate currentSession = sessionManager.getCurrentSession();\n+        try {\n+            Session hibernateSession = currentSession.getHibernateSession();\n+            hibernateSession.merge(user);\n+        } catch (Exception e) {\n+            logger.error(e.getMessage(), e);\n+        }\n+    }\n+\n+    @Override\n+    public long insertOrUpdate(User user) {\n+        DatabaseSessionHibernate currentSession = sessionManager.getCurrentSession();\n+        try {\n+            Session hibernateSession = currentSession.getHibernateSession();\n+            if (user.getId() > 0) {\n+                hibernateSession.merge(user);\n+            } else {\n+                hibernateSession.persist(user);\n+                hibernateSession.flush();\n+            }\n+            return user.getId();\n+        } catch (Exception e) {\n+            logger.error(e.getMessage(), e);\n+            return -1;\n+        }\n+    }\n+\n+    @Override\n+    public SessionManager getSessionManager() {\n+        return sessionManager;\n+    }\n+\n+}"
  },
  {
    "sha": "19a9247cbd60d9981524866680459220c1ff422d",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/hibernate/sessionmanager/DatabaseSessionHibernate.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/hibernate/sessionmanager/DatabaseSessionHibernate.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/hibernate/sessionmanager/DatabaseSessionHibernate.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/hibernate/sessionmanager/DatabaseSessionHibernate.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,31 @@\n+package ru.sorokin.hibernate.sessionmanager;\n+\n+import org.hibernate.Session;\n+import org.hibernate.Transaction;\n+import ru.sorokin.core.sessionmanager.DatabaseSession;\n+\n+\n+public class DatabaseSessionHibernate implements DatabaseSession {\n+    private final Session session;\n+    private final Transaction transaction;\n+\n+    DatabaseSessionHibernate(Session session) {\n+        this.session = session;\n+        this.transaction = session.beginTransaction();\n+    }\n+\n+    public Session getHibernateSession() {\n+        return session;\n+    }\n+\n+    public Transaction getTransaction() {\n+        return transaction;\n+    }\n+\n+    public void close() {\n+        if (transaction.isActive()) {\n+            transaction.commit();\n+        }\n+        session.close();\n+    }\n+}"
  },
  {
    "sha": "56da24b31c54175b70ea1a62cacb58c975e64594",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/hibernate/sessionmanager/SessionManagerHibernate.java",
    "status": "added",
    "additions": 95,
    "deletions": 0,
    "changes": 95,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/hibernate/sessionmanager/SessionManagerHibernate.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/hibernate/sessionmanager/SessionManagerHibernate.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/hibernate/sessionmanager/SessionManagerHibernate.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,95 @@\n+package ru.sorokin.hibernate.sessionmanager;\n+\n+import org.hibernate.Session;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.Transaction;\n+import ru.sorokin.core.sessionmanager.SessionManager;\n+import ru.sorokin.core.sessionmanager.SessionManagerException;\n+\n+public class SessionManagerHibernate implements SessionManager {\n+\n+    private DatabaseSessionHibernate databaseSession;\n+    private final SessionFactory sessionFactory;\n+\n+    public SessionManagerHibernate(SessionFactory sessionFactory) {\n+        if (sessionFactory == null) {\n+            throw new SessionManagerException(\"SessionFactory is null\");\n+        }\n+        this.sessionFactory = sessionFactory;\n+    }\n+\n+    @Override\n+    public void beginSession() {\n+        try {\n+            databaseSession = new DatabaseSessionHibernate(sessionFactory.openSession());\n+        } catch (Exception e) {\n+            throw new SessionManagerException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void commitSession() {\n+        checkSessionAndTransaction();\n+        try {\n+            databaseSession.getTransaction().commit();\n+            databaseSession.getHibernateSession().close();\n+        } catch (Exception e) {\n+            throw new SessionManagerException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void rollbackSession() {\n+        checkSessionAndTransaction();\n+        try {\n+            databaseSession.getTransaction().rollback();\n+            databaseSession.getHibernateSession().close();\n+        } catch (Exception e) {\n+            throw new SessionManagerException(e);\n+        }\n+    }\n+\n+    @Override\n+    public void close() {\n+        if (databaseSession == null) {\n+            return;\n+        }\n+        Session session = databaseSession.getHibernateSession();\n+        if (session == null || !session.isConnected()) {\n+            return;\n+        }\n+\n+        Transaction transaction = databaseSession.getTransaction();\n+        if (transaction == null || !transaction.isActive()) {\n+            return;\n+        }\n+\n+        try {\n+            databaseSession.close();\n+            databaseSession = null;\n+        } catch (Exception e) {\n+            throw new SessionManagerException(e);\n+        }\n+    }\n+\n+    @Override\n+    public DatabaseSessionHibernate getCurrentSession() {\n+        checkSessionAndTransaction();\n+        return databaseSession;\n+    }\n+\n+    private void checkSessionAndTransaction() {\n+        if (databaseSession == null) {\n+            throw new SessionManagerException(\"DatabaseSession not opened \");\n+        }\n+        Session session = databaseSession.getHibernateSession();\n+        if (session == null || !session.isConnected()) {\n+            throw new SessionManagerException(\"Session not opened \");\n+        }\n+\n+        Transaction transaction = databaseSession.getTransaction();\n+        if (transaction == null || !transaction.isActive()) {\n+            throw new SessionManagerException(\"Transaction not opened \");\n+        }\n+    }\n+}"
  },
  {
    "sha": "65299e0bc848bd3c1663ad6375518017911f8ac5",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServer.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServer.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServer.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServer.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,9 @@\n+package ru.sorokin.server;\n+\n+public interface UsersWebServer {\n+    void start() throws Exception;\n+\n+    void join() throws Exception;\n+\n+    void stop() throws Exception;\n+}"
  },
  {
    "sha": "f6d619b728a0c8d9b10562436c728cb7a16a5e74",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServerSimple.java",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServerSimple.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServerSimple.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServerSimple.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,83 @@\n+package ru.sorokin.server;\n+\n+import com.google.gson.Gson;\n+import org.eclipse.jetty.server.Handler;\n+import org.eclipse.jetty.server.Server;\n+import org.eclipse.jetty.server.handler.HandlerList;\n+import org.eclipse.jetty.server.handler.ResourceHandler;\n+import org.eclipse.jetty.servlet.ServletContextHandler;\n+import org.eclipse.jetty.servlet.ServletHolder;\n+import ru.sorokin.helpers.FileSystemHelper;\n+import ru.sorokin.service.UserService;\n+import ru.sorokin.template.TemplateProcessor;\n+import ru.sorokin.servlet.UsersApiServlet;\n+import ru.sorokin.servlet.UsersServlet;\n+\n+\n+public class UsersWebServerSimple implements UsersWebServer {\n+    private static final String START_PAGE_NAME = \"index.html\";\n+    private static final String COMMON_RESOURCES_DIR = \"static\";\n+\n+    private final UserService userService;\n+    private final Gson gson;\n+    protected final TemplateProcessor templateProcessor;\n+    private final Server server;\n+\n+    public UsersWebServerSimple(int port, UserService userService, Gson gson, TemplateProcessor templateProcessor) {\n+        this.userService = userService;\n+        this.gson = gson;\n+        this.templateProcessor = templateProcessor;\n+        server = new Server(port);\n+    }\n+\n+    @Override\n+    public void start() throws Exception {\n+        if (server.getHandlers().length == 0) {\n+            initContext();\n+        }\n+        server.start();\n+    }\n+\n+    @Override\n+    public void join() throws Exception {\n+        server.join();\n+    }\n+\n+    @Override\n+    public void stop() throws Exception {\n+        server.stop();\n+    }\n+\n+    private Server initContext() {\n+\n+        ResourceHandler resourceHandler = createResourceHandler();\n+        ServletContextHandler servletContextHandler = createServletContextHandler();\n+\n+        HandlerList handlers = new HandlerList();\n+        handlers.addHandler(resourceHandler);\n+        handlers.addHandler(applySecurity(servletContextHandler, \"/users\", \"/api/user/*\"));\n+\n+\n+        server.setHandler(handlers);\n+        return server;\n+    }\n+\n+    protected Handler applySecurity(ServletContextHandler servletContextHandler, String ...paths) {\n+        return servletContextHandler;\n+    }\n+\n+    private ResourceHandler createResourceHandler() {\n+        ResourceHandler resourceHandler = new ResourceHandler();\n+        resourceHandler.setDirectoriesListed(false);\n+        resourceHandler.setWelcomeFiles(new String[]{START_PAGE_NAME});\n+        resourceHandler.setResourceBase(FileSystemHelper.localFileNameOrResourceNameToFullPath(COMMON_RESOURCES_DIR));\n+        return resourceHandler;\n+    }\n+\n+    private ServletContextHandler createServletContextHandler() {\n+        ServletContextHandler servletContextHandler = new ServletContextHandler(ServletContextHandler.SESSIONS);\n+        servletContextHandler.addServlet(new ServletHolder(new UsersServlet(templateProcessor, userService)), \"/users\");\n+        servletContextHandler.addServlet(new ServletHolder(new UsersApiServlet(userService, gson)), \"/api/user/*\");\n+        return servletContextHandler;\n+    }\n+}"
  },
  {
    "sha": "3c2ad02e8bf15a4b89efe8916213cf148da8b6b0",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServerWithBasicSecurity.java",
    "status": "added",
    "additions": 59,
    "deletions": 0,
    "changes": 59,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServerWithBasicSecurity.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServerWithBasicSecurity.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/server/UsersWebServerWithBasicSecurity.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,59 @@\n+package ru.sorokin.server;\n+\n+import com.google.gson.Gson;\n+import org.eclipse.jetty.security.ConstraintMapping;\n+import org.eclipse.jetty.security.ConstraintSecurityHandler;\n+import org.eclipse.jetty.security.LoginService;\n+import org.eclipse.jetty.security.authentication.BasicAuthenticator;\n+import org.eclipse.jetty.server.Handler;\n+import org.eclipse.jetty.server.handler.HandlerList;\n+import org.eclipse.jetty.servlet.ServletContextHandler;\n+import org.eclipse.jetty.util.security.Constraint;\n+import ru.sorokin.service.UserService;\n+import ru.sorokin.template.TemplateProcessor;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+public class UsersWebServerWithBasicSecurity extends UsersWebServerSimple {\n+    private static final String ROLE_NAME_USER = \"user\";\n+    private static final String ROLE_NAME_ADMIN = \"admin\";\n+    private static final String CONSTRAINT_NAME = \"auth\";\n+\n+    private final LoginService loginService;\n+\n+    public UsersWebServerWithBasicSecurity(int port,\n+                                           LoginService loginService,\n+                                           UserService userDao,\n+                                           Gson gson,\n+                                           TemplateProcessor templateProcessor) {\n+        super(port, userDao, gson, templateProcessor);\n+        this.loginService = loginService;\n+    }\n+\n+    protected Handler applySecurity(ServletContextHandler servletContextHandler, String... paths) {\n+        Constraint constraint = new Constraint();\n+        constraint.setName(CONSTRAINT_NAME);\n+        constraint.setAuthenticate(true);\n+        constraint.setRoles(new String[]{ROLE_NAME_USER, ROLE_NAME_ADMIN});\n+\n+        List<ConstraintMapping> constraintMappings = new ArrayList<>();\n+        Arrays.stream(paths).forEachOrdered(path -> {\n+            ConstraintMapping mapping = new ConstraintMapping();\n+            mapping.setPathSpec(path);\n+            mapping.setConstraint(constraint);\n+            constraintMappings.add(mapping);\n+        });\n+\n+        ConstraintSecurityHandler security = new ConstraintSecurityHandler();\n+        security.setAuthenticator(new BasicAuthenticator());\n+\n+        security.setLoginService(loginService);\n+        security.setConstraintMappings(constraintMappings);\n+        security.setHandler(new HandlerList(servletContextHandler));\n+\n+        return security;\n+\n+    }\n+}"
  },
  {
    "sha": "9bd9547263558696f9d5fbe7c1476156b47fbee0",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/service/UserService.java",
    "status": "added",
    "additions": 14,
    "deletions": 0,
    "changes": 14,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/service/UserService.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/service/UserService.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/service/UserService.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,14 @@\n+package ru.sorokin.service;\n+\n+import ru.sorokin.entity.User;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+public interface UserService {\n+\n+    long saveUser(User user);\n+\n+    Optional<User> getUser(long id);\n+    List<User> getAll();\n+}"
  },
  {
    "sha": "b3782a44e3336481c8cb5928b248b37af2cd18ab",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/service/UserServiceImpl.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/service/UserServiceImpl.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/service/UserServiceImpl.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/service/UserServiceImpl.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,72 @@\n+package ru.sorokin.service;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import ru.sorokin.core.sessionmanager.SessionManager;\n+import ru.sorokin.hibernate.dao.UserDao;\n+import ru.sorokin.entity.User;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Optional;\n+\n+public class UserServiceImpl implements UserService {\n+    private static final Logger logger = LoggerFactory.getLogger(UserServiceImpl.class);\n+\n+    private final UserDao userDao;\n+\n+    public UserServiceImpl(UserDao userDao) {\n+        this.userDao = userDao;\n+    }\n+\n+    @Override\n+    public long saveUser(User user) {\n+        try (SessionManager sessionManager = userDao.getSessionManager()) {\n+            sessionManager.beginSession();\n+            try {\n+                long userId = userDao.insertOrUpdate(user);\n+                sessionManager.commitSession();\n+\n+                logger.info(\"created user: {}\", userId);\n+                return userId;\n+            } catch (Exception e) {\n+                sessionManager.rollbackSession();\n+                throw new RuntimeException(e);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public Optional<User> getUser(long id) {\n+        try (SessionManager sessionManager = userDao.getSessionManager()) {\n+            sessionManager.beginSession();\n+            try {\n+                Optional<User> userOptional = userDao.findById(id);\n+\n+                logger.info(\"user: {}\", userOptional.orElse(null));\n+                return userOptional;\n+            } catch (Exception e) {\n+                logger.error(e.getMessage(), e);\n+                sessionManager.rollbackSession();\n+            }\n+            return Optional.empty();\n+        }\n+    }\n+\n+    @Override\n+    public List<User> getAll() {\n+        try (SessionManager sessionManager = userDao.getSessionManager()) {\n+            sessionManager.beginSession();\n+            try {\n+                List<User> userOptional = userDao.findAll();\n+\n+                logger.info(\"user: {}\", userOptional);\n+                return userOptional;\n+            } catch (Exception e) {\n+                logger.error(e.getMessage(), e);\n+                sessionManager.rollbackSession();\n+            }\n+            return Collections.emptyList();\n+        }\n+    }\n+}"
  },
  {
    "sha": "b23ae50560138f96fe7c493c53fa8d074f88da9d",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/servlet/AuthorizationFilter.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/servlet/AuthorizationFilter.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/servlet/AuthorizationFilter.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/servlet/AuthorizationFilter.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,44 @@\n+package ru.sorokin.servlet;\n+\n+\n+import jakarta.servlet.*;\n+import jakarta.servlet.http.HttpServletRequest;\n+import jakarta.servlet.http.HttpServletResponse;\n+import jakarta.servlet.http.HttpSession;\n+\n+import java.io.IOException;\n+\n+public class AuthorizationFilter implements Filter {\n+\n+    private ServletContext context;\n+\n+    @Override\n+    public void init(FilterConfig filterConfig) {\n+        this.context = filterConfig.getServletContext();\n+    }\n+\n+    @Override\n+    public void doFilter(ServletRequest servletRequest,\n+                         ServletResponse servletResponse,\n+                         FilterChain filterChain) throws IOException, ServletException {\n+        HttpServletRequest request = (HttpServletRequest) servletRequest;\n+        HttpServletResponse response = (HttpServletResponse) servletResponse;\n+\n+        String uri = request.getRequestURI();\n+        this.context.log(\"Requested Resource:\" + uri);\n+\n+        HttpSession session = request.getSession(false);\n+\n+        if (session == null) {\n+            response.sendRedirect(\"/login\");\n+        } else {\n+            filterChain.doFilter(servletRequest, servletResponse);\n+        }\n+\n+    }\n+\n+    @Override\n+    public void destroy() {\n+\n+    }\n+}"
  },
  {
    "sha": "895662b2161bf88dff1cd390d4ddaaa8fd052de7",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/servlet/UsersApiServlet.java",
    "status": "added",
    "additions": 43,
    "deletions": 0,
    "changes": 43,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/servlet/UsersApiServlet.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/servlet/UsersApiServlet.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/servlet/UsersApiServlet.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,43 @@\n+package ru.sorokin.servlet;\n+\n+import com.google.gson.Gson;\n+import ru.sorokin.entity.User;\n+\n+\n+import jakarta.servlet.ServletOutputStream;\n+import jakarta.servlet.http.HttpServlet;\n+import jakarta.servlet.http.HttpServletRequest;\n+import jakarta.servlet.http.HttpServletResponse;\n+import ru.sorokin.service.UserService;\n+\n+import java.io.*;\n+import java.nio.charset.StandardCharsets;\n+import java.util.List;\n+\n+\n+public class UsersApiServlet extends HttpServlet {\n+\n+    private final UserService userService;\n+    private final Gson gson;\n+\n+    public UsersApiServlet(UserService userService, Gson gson) {\n+        this.userService = userService;\n+        this.gson = gson;\n+    }\n+\n+    @Override\n+    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {\n+        Reader reader = new InputStreamReader(new ByteArrayInputStream(req.getInputStream().readAllBytes()), StandardCharsets.UTF_8);\n+        User user = gson.fromJson(reader, User.class);\n+        userService.saveUser(user);\n+    }\n+\n+    @Override\n+    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {\n+        List<User> users = userService.getAll();\n+        response.setContentType(\"application/json;charset=UTF-8\");\n+        ServletOutputStream out = response.getOutputStream();\n+        out.print(gson.toJson(users));\n+    }\n+\n+}"
  },
  {
    "sha": "0c9821543b8b0f8408fff0e25dd702dea4605ca3",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/servlet/UsersServlet.java",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/servlet/UsersServlet.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/servlet/UsersServlet.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/servlet/UsersServlet.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,26 @@\n+package ru.sorokin.servlet;\n+\n+import ru.sorokin.service.UserService;\n+import ru.sorokin.template.TemplateProcessor;\n+import jakarta.servlet.http.*;\n+import java.io.IOException;\n+\n+public class UsersServlet extends HttpServlet {\n+\n+    private static final String USERS_PAGE_TEMPLATE = \"users.html\";\n+\n+    private final UserService userService;\n+    private final TemplateProcessor templateProcessor;\n+\n+    public UsersServlet(TemplateProcessor templateProcessor, UserService userService) {\n+        this.templateProcessor = templateProcessor;\n+        this.userService = userService;\n+    }\n+\n+\n+    @Override\n+    protected void doGet(HttpServletRequest req, HttpServletResponse response) throws IOException {\n+        response.setContentType(\"text/html\");\n+        response.getWriter().println(templateProcessor.getPage(USERS_PAGE_TEMPLATE, null));\n+    }\n+}"
  },
  {
    "sha": "cd17f4de557cd18eb6c7e8ad595f658b13d7bd66",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/template/TemplateProcessor.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/template/TemplateProcessor.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/template/TemplateProcessor.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/template/TemplateProcessor.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,8 @@\n+package ru.sorokin.template;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+public interface TemplateProcessor {\n+    String getPage(String filename, Map<String, Object> data) throws IOException;\n+}"
  },
  {
    "sha": "020375232ee8f77573f276fa7fa103ac226f6433",
    "filename": "HW14-WebServer/src/main/java/ru/sorokin/template/TemplateProcessorImpl.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/template/TemplateProcessorImpl.java",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/java/ru/sorokin/template/TemplateProcessorImpl.java",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/java/ru/sorokin/template/TemplateProcessorImpl.java?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,31 @@\n+package ru.sorokin.template;\n+\n+import freemarker.template.Configuration;\n+import freemarker.template.Template;\n+import freemarker.template.TemplateException;\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.io.Writer;\n+import java.util.Map;\n+\n+public class TemplateProcessorImpl implements TemplateProcessor {\n+\n+    private final Configuration configuration;\n+\n+    public TemplateProcessorImpl(String templatesDir) {\n+        configuration = new Configuration(Configuration.VERSION_2_3_30);\n+        configuration.setClassForTemplateLoading(this.getClass(), templatesDir);\n+        configuration.setDefaultEncoding(\"UTF-8\");\n+    }\n+\n+    @Override\n+    public String getPage(String filename, Map<String, Object> data) throws IOException {\n+        try (Writer stream = new StringWriter()) {\n+            Template template = configuration.getTemplate(filename);\n+            template.process(data, stream);\n+            return stream.toString();\n+        } catch (TemplateException e) {\n+            throw new IOException(e);\n+        }\n+    }\n+}"
  },
  {
    "sha": "a9df40a881f4e190431ba661874baf6571d0a1d2",
    "filename": "HW14-WebServer/src/main/resources/hibernate.cfg.xml",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/hibernate.cfg.xml",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/hibernate.cfg.xml",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/resources/hibernate.cfg.xml?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!DOCTYPE hibernate-configuration SYSTEM\n+    \"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd\">\n+\n+<hibernate-configuration>\n+  <session-factory>\n+    <property name=\"hibernate.dialect\">org.hibernate.dialect.PostgreSQL10Dialect</property>\n+\n+\n+    <property name=\"hibernate.connection.url\">jdbc:postgresql://localhost:5432/demoDB</property>\n+\n+    <property name=\"hibernate.connection.username\">usr</property>\n+    <property name=\"hibernate.connection.password\">pwd</property>\n+\n+    <property name=\"hibernate.show_sql\">true</property>\n+    <property name=\"hibernate.generate_statistics\">true</property>\n+\n+    <property name=\"hibernate.hbm2ddl.auto\">create</property>\n+    <property name=\"hibernate.enable_lazy_load_no_trans\">false</property>\n+\n+  </session-factory>\n+</hibernate-configuration>"
  },
  {
    "sha": "ef3fe0d7c74c6c998532b9017d1c30e4ef8cf796",
    "filename": "HW14-WebServer/src/main/resources/realm.properties",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/realm.properties",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/realm.properties",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/resources/realm.properties?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1 @@\n+user: user,user\n\\ No newline at end of file"
  },
  {
    "sha": "c9381999aa1d577870b9ced04aa0ca9090fd94cc",
    "filename": "HW14-WebServer/src/main/resources/static/img/login.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/static/img/login.png",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/static/img/login.png",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/resources/static/img/login.png?ref=d2351dc8496d4c3b5c15a7966153da0932458ece"
  },
  {
    "sha": "0002d77bef8fe1e299ecb80701efa9c1b05ab8d7",
    "filename": "HW14-WebServer/src/main/resources/static/img/logo.svg",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/static/img/logo.svg",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/static/img/logo.svg",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/resources/static/img/logo.svg?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1 @@\n+<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-61.5 -9.5 200 200\"><circle cx=\"38.5\" cy=\"90.5\" r=\"100\" fill=\"#D8E4E7\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-width=\"2\" d=\"M68.99 179.99c0-8.2-6.65-14.85-14.85-14.85h-7.35m14.86 9.88a9.94 9.94 0 0 0-9.94-9.94H46.8\"/><path fill=\"#116A73\" d=\"M115.62 67.85H-11C18.9 55.45 18.58 1.77 55.07 1.77c34.07 0 41.4 47.37 61.56 63.2 1.2.95.52 2.88-1.01 2.88\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M115.62 67.85H-11C18.9 55.45 18.58 1.77 55.07 1.77c34.07 0 41.4 47.37 61.56 63.2 1.2.95.52 2.88-1.01 2.88z\"/><path fill=\"#E3684F\" d=\"M73.1 96.72c-1.14 2.16-2.3 4.31-3.43 6.47a29.35 29.35 0 0 1 7.91 38.15 29.35 29.35 0 0 0-1.15-51.68c-.81 2.4-2.08 4.7-3.33 7.06\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M73.1 96.72c-1.14 2.16-2.3 4.31-3.43 6.47a29.35 29.35 0 0 1 7.91 38.15 29.35 29.35 0 0 0-1.15-51.68c-.81 2.4-2.08 4.7-3.33 7.06z\"/><path fill=\"#E3684F\" d=\"M73.1 96.72c-2.29 4.34-4.64 8.66-6.83 13.05a29.36 29.36 0 0 1 11.2 31.51 29.35 29.35 0 0 0-3.97-45.29l-.4.73\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M73.1 96.72c-2.29 4.34-4.64 8.66-6.83 13.05a29.36 29.36 0 0 1 11.2 31.51 29.35 29.35 0 0 0-3.97-45.29l-.4.73zm-3.44 6.47a29.35 29.35 0 0 1 7.91 38.15l-7.9-38.15z\"/><path fill=\"#E3684F\" d=\"M15.4 106.02c-.2-2.96-.37-5.93-.57-8.9a35.72 35.72 0 0 1-32.57-34.47 35.73 35.73 0 0 0 34.2 52.8c-.68-3-.84-6.19-1.06-9.43\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.4 106.02c-.2-2.96-.37-5.93-.57-8.9a35.72 35.72 0 0 1-32.57-34.47 35.73 35.73 0 0 0 34.2 52.8c-.68-3-.84-6.19-1.06-9.43z\"/><path fill=\"#E3684F\" d=\"M14.15 88.14a35.73 35.73 0 0 1-31.73-25.49 35.72 35.72 0 0 0 33.05 44.37l-.07-1c-.4-5.96-.72-11.93-1.25-17.88z\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.4 106.02c-.4-5.96-.72-11.93-1.25-17.88a35.73 35.73 0 0 1-31.73-25.49 35.72 35.72 0 0 0 33.05 44.37l-.07-1zm-.57-8.9a35.72 35.72 0 0 1-32.57-34.47\"/><path fill=\"#E3684F\" d=\"M59.8 145.44l-7.17 19.4h-3.06l.5-20.31\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-width=\"2\" d=\"M59.8 145.44l-7.17 19.4h-3.06l.5-20.31m-23.93 35.46c0-8.2 6.65-14.85 14.85-14.85h7.35m-14.87 9.88a9.94 9.94 0 0 1 9.94-9.94h4.92\"/><path fill=\"#E3684F\" d=\"M35.32 145.44l7.17 19.4h3.07l-.5-20.31\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-width=\"2\" d=\"M35.32 145.44l7.17 19.4h3.07l-.5-20.31\"/><path fill=\"#E3684F\" d=\"M67.1 145.9H27.87c-7.52 0-13.61-6.1-13.61-13.61V79.12h66.46v53.17c0 7.51-6.1 13.61-13.62 13.61\"/><path fill=\"#F5BB42\" d=\"M53.21 87.11l-5.8 5.8-5.81-5.8 5.81-6.14 5.8 6.14\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M53.21 87.11l-5.8 5.8-5.8-5.8 5.8-6.14 5.8 6.14zm27.67-7.21v52.94c0 7.21-5.85 13.06-13.06 13.06h-40.5a13.06 13.06 0 0 1-13.07-13.06V79.12l66.63.78z\"/><path fill=\"#E98557\" d=\"M27 144.87v-11.03c0-11.57 9.47-21.04 21.04-21.04s21.03 9.47 21.03 21.04v11.03H27\"/><path fill=\"#FFFFFE\" d=\"M65.1 51.04a20.29 20.29 0 0 0-17.63 10.24 20.29 20.29 0 1 0 0 20.1 20.29 20.29 0 1 0 17.62-30.34\"/><path fill=\"none\" stroke=\"#78275A\" stroke-width=\"2\" d=\"M65.1 51.04a20.29 20.29 0 0 0-17.63 10.24 20.29 20.29 0 1 0 0 20.1 20.29 20.29 0 1 0 17.62-30.34z\"/><path fill=\"#00AD9A\" d=\"M101.02 67.85H-18.45c-1.59 0-2.23-2.07-.9-2.95C5.13 48.63 7.1 1.77 41.2 1.77c33.74 0 41.26 46.49 61 62.75 1.36 1.12.6 3.33-1.18 3.33\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M101.02 67.85H-18.45c-1.59 0-2.23-2.07-.9-2.95C5.13 48.63 7.1 1.77 41.2 1.77c33.74 0 41.26 46.49 61 62.75 1.36 1.12.6 3.33-1.18 3.33z\"/><path fill=\"#F6EB3D\" d=\"M103.96 26.07L86.64 43.39l-7.04-7.04 17.32-17.32.64 6.4 6.4.64\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M103.96 26.07L86.64 43.39l-7.04-7.04 17.32-17.32.64 6.4z\"/><path fill=\"#F6EB3D\" d=\"M93.45 42.18a13.08 13.08 0 1 1-26.15.01 13.08 13.08 0 0 1 26.16-.01\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M93.45 42.18a13.08 13.08 0 1 1-26.15.01 13.08 13.08 0 0 1 26.16-.01z\"/><path fill=\"#78275A\" d=\"M68.25 75.66h-6.3a1.41 1.41 0 1 1 0-2.83h6.3a1.41 1.41 0 1 1 0 2.83M30.15 75.66h-6.3a1.41 1.41 0 1 1 0-2.83h6.3a1.41 1.41 0 1 1 0 2.83\"/><path fill=\"#0C827C\" d=\"M23.15 72.95l-27.53-1.5a1.81 1.81 0 0 0-1.9 1.8v2.99a1.8 1.8 0 0 0 1.9 1.8l27.53-1.49a1.8 1.8 0 0 0 0-3.6\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M23.15 72.95l-27.53-1.5a1.81 1.81 0 0 0-1.9 1.8v2.99a1.8 1.8 0 0 0 1.9 1.8l27.53-1.49a1.8 1.8 0 0 0 0-3.6z\"/><path fill=\"#F6EB3D\" d=\"M3 68.58l-27.35-6.09v24.52L3 80.91a6.3 6.3 0 0 0 0-12.33\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 68.58l-27.35-6.09v24.52L3 80.91a6.3 6.3 0 0 0 0-12.33z\"/><path fill=\"#F6EB3D\" d=\"M-20.24 59.16h-14.98v31.18h14.98c2.87 0 5.2-6.98 5.2-15.59s-2.33-15.59-5.2-15.59\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M-20.24 59.16h-14.98v31.18h14.98c2.87 0 5.2-6.98 5.2-15.59s-2.33-15.59-5.2-15.59z\"/><path fill=\"#F6EB3D\" d=\"M-30.02 74.75c0 8.61-2.33 15.59-5.2 15.59s-5.2-6.98-5.2-15.59 2.33-15.59 5.2-15.59 5.2 6.98 5.2 15.59\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M-30.02 74.75c0 8.61-2.33 15.59-5.2 15.59s-5.2-6.98-5.2-15.59 2.33-15.59 5.2-15.59 5.2 6.98 5.2 15.59z\"/><path fill=\"#58BCBC\" d=\"M-31.96 62.61c-2.37 1.01-4.18 6.05-4.18 12.14 0 6.08 1.8 11.13 4.18 12.14 1.18-2.86 1.94-7.23 1.94-12.14s-.76-9.29-1.94-12.14\"/><path fill=\"none\" stroke=\"#78275A\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M-31.96 62.61c-2.37 1.01-4.18 6.05-4.18 12.14 0 6.08 1.8 11.13 4.18 12.14 1.18-2.86 1.94-7.23 1.94-12.14s-.76-9.29-1.94-12.14z\"/></svg>\n\\ No newline at end of file"
  },
  {
    "sha": "63fda19e6a6069b4d186bee9740752e66ac04536",
    "filename": "HW14-WebServer/src/main/resources/static/index.html",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/static/index.html",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/static/index.html",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/resources/static/index.html?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,13 @@\n+﻿<html xmlns=\"http://www.w3.org/1999/xhtml\" content=\"text/html;\">\n+<head>\n+    <title>Index</title>\n+</head>\n+<body>\n+<div class=\"top\">\n+    <img src=\"img/logo.svg\" style=\"width: 300px; height: 300px\">\n+    <br/>\n+    <h3>Добро пожаловать на стартовую страницу примера</h3>\n+    <a href=\"users\">Перейти на странцу информации о пользователях (возможно защищено паролем)</a>\n+</div>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "8de2514ce461c421d091271634505c71a04496be",
    "filename": "HW14-WebServer/src/main/resources/templates/login.html",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/templates/login.html",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/templates/login.html",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/resources/templates/login.html?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,24 @@\n+﻿<html xmlns=\"http://www.w3.org/1999/xhtml\" content=\"text/html;\">\n+<head>\n+    <title>Login</title>\n+</head>\n+<body>\n+<div class=\"top\">\n+    <img src=\"img/login.png\">\n+    <br/>\n+    <form action=\"login\" method=\"post\">\n+        <label>\n+            login <br/>\n+            <input type=\"text\" name=\"login\" value=\"user7\">\n+        </label>\n+        <br/>\n+        <label>\n+            password<br/>\n+            <input type=\"password\" name=\"password\" value=\"11111\">\n+        </label>\n+        <br/><br/>\n+        <input type=\"submit\" value=\"Перейти к списку пользователей\">\n+    </form>\n+</div>\n+</body>\n+</html>\n\\ No newline at end of file"
  },
  {
    "sha": "41a29635a0898498b3cee591daa06f3abc476a50",
    "filename": "HW14-WebServer/src/main/resources/templates/users.html",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/SorokinValery/otus-hw/blob/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/templates/users.html",
    "raw_url": "https://github.com/SorokinValery/otus-hw/raw/d2351dc8496d4c3b5c15a7966153da0932458ece/HW14-WebServer/src/main/resources/templates/users.html",
    "contents_url": "https://api.github.com/repos/SorokinValery/otus-hw/contents/HW14-WebServer/src/main/resources/templates/users.html?ref=d2351dc8496d4c3b5c15a7966153da0932458ece",
    "patch": "@@ -0,0 +1,54 @@\n+<html xmlns=\"http://www.w3.org/1999/xhtml\">\n+<head>\n+    <title>Пользователи</title>\n+    <script>\n+        function getAllUser() {\n+            //const userIdTextBox = document.getElementById('userIdTextBox');\n+            const userDataContainer = document.getElementById('userDataContainer');\n+            //const id = userIdTextBox.value;\n+            //fetch('api/user?id=' + id)\n+            fetch('api/user/')\n+                .then(response => response.json())\n+                .then(user => userDataContainer.innerHTML = JSON.stringify(user));\n+        }\n+\n+        let user = {\n+            name: '',\n+            login: '',\n+            password: ''\n+        }\n+        function createUser() {\n+            const userNameTextBox = document.getElementById('userNameTextBox').value;\n+            const userLoginTextBox = document.getElementById('userLoginTextBox').value;\n+            const userPasswordTextBox = document.getElementById('userPasswordTextBox').value;\n+            user.name = userNameTextBox;\n+            user.login = userLoginTextBox;\n+            user.password = userPasswordTextBox;\n+            fetch('api/user/', {\n+                method: 'POST',\n+                body: JSON.stringify(user),\n+                headers: {\n+                    'Content-Type': 'application/json'\n+                }\n+            })\n+                .then(response => response.json())\n+                .then(user => userDataContainer.innerHTML = JSON.stringify(user));\n+        }\n+    </script>\n+</head>\n+\n+<body>\n+<h4>Получить всех пользователей</h4>\n+<button onclick=\"getAllUser()\">Получить всех пользователей</button>\n+<pre id=\"userDataContainer\"></pre>\n+\n+<h4>Добавить пользователя</h4>\n+\n+\n+<input type=\"text\" id=\"userNameTextBox\" placeholder=\"Введите имя пользователя\">\n+<input type=\"text\" id=\"userLoginTextBox\" placeholder=\"Введите логин пользователя\">\n+<input type=\"text\" id=\"userPasswordTextBox\" placeholder=\"Введите пароль пользователя\">\n+<button onclick=\"createUser()\">Создать пользователя</button>\n+\n+</body>\n+</html>\n\\ No newline at end of file"
  }
]
