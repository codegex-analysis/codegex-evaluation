[
  {
    "sha": "d9652f82628d68ae8b1844cf78da9732c280ac46",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/pom.xml",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/pom.xml",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/pom.xml?ref=f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd",
    "patch": "@@ -53,6 +53,10 @@\n             <groupId>org.thymeleaf.extras</groupId>\n             <artifactId>thymeleaf-extras-springsecurity5</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-webflux</artifactId>\n+        </dependency>\n         <dependency>\n             <groupId>mysql</groupId>\n             <artifactId>mysql-connector-java</artifactId>"
  },
  {
    "sha": "14045ba73ed2577e98cd11a38fc07372a13a3d08",
    "filename": "src/main/java/com/jm/marketplace/config/WebClientConfig.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/main/java/com/jm/marketplace/config/WebClientConfig.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/main/java/com/jm/marketplace/config/WebClientConfig.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/java/com/jm/marketplace/config/WebClientConfig.java?ref=f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd",
    "patch": "@@ -0,0 +1,15 @@\n+package com.jm.marketplace.config;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.web.reactive.function.client.WebClient;\n+\n+@Configuration\n+public class WebClientConfig {\n+\n+    @Bean\n+    public WebClient.RequestHeadersUriSpec<?> requestHeadersUriSpec() {\n+        return WebClient.create().get();\n+    }\n+\n+}"
  },
  {
    "sha": "5a8258cf383b5f29443d39a628a85b70dae7e27b",
    "filename": "src/main/java/com/jm/marketplace/model/geoStructure/GeoStructure.java",
    "status": "added",
    "additions": 140,
    "deletions": 0,
    "changes": 140,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/main/java/com/jm/marketplace/model/geoStructure/GeoStructure.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/main/java/com/jm/marketplace/model/geoStructure/GeoStructure.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/java/com/jm/marketplace/model/geoStructure/GeoStructure.java?ref=f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd",
    "patch": "@@ -0,0 +1,140 @@\n+package com.jm.marketplace.model.geoStructure;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.*;\n+\n+import java.util.List;\n+\n+/**\n+ *\n+ * Сруктура для Json ответа с сервера Спутник Api\n+ */\n+\n+@Getter\n+@Setter\n+@NoArgsConstructor\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class GeoStructure {\n+\n+    @JsonProperty(\"result\")\n+    public Result result;\n+\n+    @Getter\n+    @Setter\n+    @AllArgsConstructor\n+    @NoArgsConstructor\n+    public static class Result {\n+\n+        @JsonProperty(\"priority\")\n+        public String priority;\n+        @JsonProperty(\"viewport\")\n+        public Viewport viewport;\n+        @JsonProperty(\"address\")\n+        public List<Address> address = null;\n+    }\n+\n+    @Getter\n+    @Setter\n+    @NoArgsConstructor\n+    @AllArgsConstructor\n+    public static class Address {\n+\n+        @JsonProperty(\"type\")\n+        public String type;\n+        @JsonProperty(\"features\")\n+        public List<Feature> features = null;\n+    }\n+\n+    @Getter\n+    @Setter\n+    @NoArgsConstructor\n+    @AllArgsConstructor\n+    public static class Properties {\n+\n+        @JsonProperty(\"id\")\n+        public Integer id;\n+        @JsonProperty(\"type\")\n+        public String type;\n+        @JsonProperty(\"description\")\n+        public String description;\n+        @JsonProperty(\"display_name\")\n+        public String displayName;\n+        @JsonProperty(\"title\")\n+        public String title;\n+        @JsonProperty(\"address_components\")\n+        public List<AddressComponent> addressComponents = null;\n+        @JsonProperty(\"fias_id\")\n+        public String fiasId;\n+        @JsonProperty(\"full_match\")\n+        public Boolean fullMatch;\n+        @JsonProperty(\"display_type\")\n+        public String displayType;\n+        @JsonProperty(\"poi_types\")\n+        public Object poiTypes;\n+    }\n+\n+    @Getter\n+    @Setter\n+    @NoArgsConstructor\n+    @AllArgsConstructor\n+    public static class Geometry {\n+        @JsonProperty(\"type\")\n+        public String type;\n+        @JsonProperty(\"geometries\")\n+        public List<Coordinate> geometries = null;\n+    }\n+\n+    @Getter\n+    @Setter\n+    @NoArgsConstructor\n+    @AllArgsConstructor\n+    public static class Coordinate {\n+        @JsonProperty(\"type\")\n+        public String type;\n+        @JsonProperty(\"coordinates\")\n+        public List<Double> coordinates = null;\n+    }\n+\n+    @Getter\n+    @Setter\n+    @NoArgsConstructor\n+    @AllArgsConstructor\n+    public static class Feature {\n+\n+        @JsonProperty(\"type\")\n+        public String type;\n+        @JsonProperty(\"properties\")\n+        public Properties properties;\n+        @JsonProperty(\"geometry\")\n+        public Geometry geometry;\n+    }\n+\n+    @Getter\n+    @Setter\n+    @NoArgsConstructor\n+    @AllArgsConstructor\n+    public static class AddressComponent {\n+\n+        @JsonProperty(\"type\")\n+        public String type;\n+        @JsonProperty(\"value\")\n+        public String value;\n+    }\n+\n+    @Getter\n+    @Setter\n+    @NoArgsConstructor\n+    @AllArgsConstructor\n+    public static class Viewport {\n+\n+        @JsonProperty(\"TopLat\")\n+        public Integer topLat;\n+        @JsonProperty(\"TopLon\")\n+        public Integer topLon;\n+        @JsonProperty(\"BotLat\")\n+        public Integer botLat;\n+        @JsonProperty(\"BotLon\")\n+        public Integer botLon;\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "e963bf90190b417b0f38c40742772a7aa4e8bb97",
    "filename": "src/main/java/com/jm/marketplace/model/geoStructure/Point.java",
    "status": "added",
    "additions": 25,
    "deletions": 0,
    "changes": 25,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/main/java/com/jm/marketplace/model/geoStructure/Point.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/main/java/com/jm/marketplace/model/geoStructure/Point.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/java/com/jm/marketplace/model/geoStructure/Point.java?ref=f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd",
    "patch": "@@ -0,0 +1,25 @@\n+package com.jm.marketplace.model.geoStructure;\n+\n+import lombok.*;\n+\n+/**\n+ * Координаты\n+ */\n+@Builder\n+@Getter\n+@Setter\n+@NoArgsConstructor\n+@AllArgsConstructor\n+public class Point {\n+\n+    /**\n+     * Долгота\n+     */\n+    private Double longitude;\n+\n+    /**\n+     * Широта\n+     */\n+    private Double latitude;\n+}\n+"
  },
  {
    "sha": "f4b9ba579f2d4f3f04a2f87ac19faf8dfdec0256",
    "filename": "src/main/java/com/jm/marketplace/util/geo/GeoCoderService.java",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/main/java/com/jm/marketplace/util/geo/GeoCoderService.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/main/java/com/jm/marketplace/util/geo/GeoCoderService.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/java/com/jm/marketplace/util/geo/GeoCoderService.java?ref=f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd",
    "patch": "@@ -0,0 +1,51 @@\n+package com.jm.marketplace.util.geo;\n+\n+import com.jm.marketplace.config.WebClientConfig;\n+import com.jm.marketplace.model.geoStructure.GeoStructure;\n+import com.jm.marketplace.model.geoStructure.Point;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.MediaType;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Сервис геокодирования позволяет получить географические координаты по его адресу.\n+ * http://api.sputnik.ru/maps/geocoder - Сервис геокодирования.\n+ */\n+@Component\n+public class GeoCoderService {\n+\n+    private static final String BASE_URL = \"http://search.maps.sputnik.ru/search/addr?q=\";\n+\n+    private final WebClientConfig webClientConfig;\n+\n+    @Autowired\n+    public GeoCoderService(WebClientConfig webClientConfig) {\n+        this.webClientConfig = webClientConfig;\n+    }\n+\n+    public Point getCoordinatesByAddress(String address) {\n+        GeoStructure.Coordinate coordinate = Objects.requireNonNull(webClientConfig\n+                .requestHeadersUriSpec()\n+                .uri(BASE_URL + address)\n+                .accept(MediaType.APPLICATION_JSON)\n+                .retrieve()\n+                .bodyToMono(GeoStructure.class).block())\n+                .getResult()\n+                .getAddress()\n+                .stream()\n+                .map(x -> x.getFeatures()\n+                        .get(0)\n+                        .getGeometry()\n+                        .getGeometries()\n+                        .get(0))\n+                .findFirst()\n+                .orElse(null);\n+\n+        return Point.builder()\n+                .longitude(Objects.requireNonNull(coordinate).getCoordinates().get(0))\n+                .latitude(Objects.requireNonNull(coordinate).getCoordinates().get(1))\n+                .build();\n+    }\n+}"
  },
  {
    "sha": "a015684c3c6bb2c6142d7ac784dc2f4b12c1fe4d",
    "filename": "src/main/java/com/jm/marketplace/util/geo/GeoRoutesService.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/main/java/com/jm/marketplace/util/geo/GeoRoutesService.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/main/java/com/jm/marketplace/util/geo/GeoRoutesService.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/java/com/jm/marketplace/util/geo/GeoRoutesService.java?ref=f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd",
    "patch": "@@ -0,0 +1,44 @@\n+package com.jm.marketplace.util.geo;\n+\n+import com.fasterxml.jackson.databind.JsonNode;\n+import com.jm.marketplace.config.WebClientConfig;\n+import com.jm.marketplace.model.geoStructure.Point;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Сервис позволяет получить дистанцию в МЕТРАХ между несколькими адресами.\n+ * http://api.sputnik.ru/maps/routes - Сервис маршрутов.\n+ */\n+@Component\n+public class GeoRoutesService {\n+\n+    private static final String BASE_URL = \"http://routes.maps.sputnik.ru/osrm/router/viaroute?\";\n+\n+    private final WebClientConfig webClientConfig;\n+\n+    @Autowired\n+    public GeoRoutesService(WebClientConfig webClientConfig) {\n+        this.webClientConfig = webClientConfig;\n+    }\n+\n+    public int getDistanceByAddress(Point start_point, Point end_point) {\n+\n+        String start = \"loc=\" + start_point.getLatitude()\n+                + \",\" + start_point.getLongitude();\n+\n+        String end = \"loc=\" + end_point.getLatitude()\n+                + \",\" + end_point.getLongitude();\n+\n+        return Objects.requireNonNull(webClientConfig\n+                .requestHeadersUriSpec()\n+                .uri(BASE_URL + start + \"&\" + end)\n+                .retrieve()\n+                .bodyToMono(JsonNode.class)\n+                .block())\n+                .at(\"/route_summary/total_distance\")\n+                .asInt();\n+    }\n+}"
  },
  {
    "sha": "a3b877c894526c956679d5db985116412839e3a0",
    "filename": "src/test/java/com/jm/marketplace/util/geo/GeoCoderServiceTest.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/test/java/com/jm/marketplace/util/geo/GeoCoderServiceTest.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/test/java/com/jm/marketplace/util/geo/GeoCoderServiceTest.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/test/java/com/jm/marketplace/util/geo/GeoCoderServiceTest.java?ref=f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd",
    "patch": "@@ -0,0 +1,15 @@\n+package com.jm.marketplace.util.geo;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+@SpringBootTest\n+class GeoCoderServiceTest {\n+\n+    @Test\n+    void getCoordinatesByAddress() {\n+         /*\n+       Написать тесты\n+        */\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b84ab5cc308dc5960c30c76309066a36efec1a6a",
    "filename": "src/test/java/com/jm/marketplace/util/geo/GeoRoutesServiceTest.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/test/java/com/jm/marketplace/util/geo/GeoRoutesServiceTest.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd/src/test/java/com/jm/marketplace/util/geo/GeoRoutesServiceTest.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/test/java/com/jm/marketplace/util/geo/GeoRoutesServiceTest.java?ref=f8ff198a9f97b2e0d8c24d59d05d64a18a8f45bd",
    "patch": "@@ -0,0 +1,15 @@\n+package com.jm.marketplace.util.geo;\n+\n+import org.junit.jupiter.api.Test;\n+import org.springframework.boot.test.context.SpringBootTest;\n+\n+@SpringBootTest\n+class GeoRoutesServiceTest {\n+\n+    @Test\n+    void getDistanceByAddress() {\n+         /*\n+       Написать тесты\n+        */\n+    }\n+}\n\\ No newline at end of file"
  }
]
