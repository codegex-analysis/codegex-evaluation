[
  {
    "sha": "27a2c2514fe143076dedb7bdd946833a172bac28",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/fecf2dc977229ac3b974b3437070ddc3a23b237a/pom.xml",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/fecf2dc977229ac3b974b3437070ddc3a23b237a/pom.xml",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/pom.xml?ref=fecf2dc977229ac3b974b3437070ddc3a23b237a",
    "patch": "@@ -37,6 +37,11 @@\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-security</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>org.springframework.security.oauth.boot</groupId>\n+            <artifactId>spring-security-oauth2-autoconfigure</artifactId>\n+            <version>2.0.0.RELEASE</version>\n+        </dependency>\n         <dependency>\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-web</artifactId>"
  },
  {
    "sha": "e3cb13ee7063a10016500750e62866e51bdc677f",
    "filename": "src/main/java/com/jm/marketplace/config/CustomUserInfoTokenServices.java",
    "status": "added",
    "additions": 185,
    "deletions": 0,
    "changes": 185,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/java/com/jm/marketplace/config/CustomUserInfoTokenServices.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/java/com/jm/marketplace/config/CustomUserInfoTokenServices.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/java/com/jm/marketplace/config/CustomUserInfoTokenServices.java?ref=fecf2dc977229ac3b974b3437070ddc3a23b237a",
    "patch": "@@ -0,0 +1,185 @@\n+package com.jm.marketplace.config;\n+\n+import com.jm.marketplace.dto.UserDto;\n+import com.jm.marketplace.service.user.UserService;\n+import lombok.extern.slf4j.Slf4j;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.springframework.boot.autoconfigure.security.oauth2.resource.AuthoritiesExtractor;\n+import org.springframework.boot.autoconfigure.security.oauth2.resource.FixedAuthoritiesExtractor;\n+import org.springframework.boot.autoconfigure.security.oauth2.resource.FixedPrincipalExtractor;\n+import org.springframework.boot.autoconfigure.security.oauth2.resource.PrincipalExtractor;\n+import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\n+import org.springframework.security.core.AuthenticationException;\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.crypto.password.PasswordEncoder;\n+import org.springframework.security.oauth2.client.OAuth2RestOperations;\n+import org.springframework.security.oauth2.client.OAuth2RestTemplate;\n+import org.springframework.security.oauth2.client.resource.BaseOAuth2ProtectedResourceDetails;\n+import org.springframework.security.oauth2.common.DefaultOAuth2AccessToken;\n+import org.springframework.security.oauth2.common.OAuth2AccessToken;\n+import org.springframework.security.oauth2.common.exceptions.InvalidTokenException;\n+import org.springframework.security.oauth2.provider.OAuth2Authentication;\n+import org.springframework.security.oauth2.provider.OAuth2Request;\n+import org.springframework.security.oauth2.provider.token.ResourceServerTokenServices;\n+\n+import org.springframework.util.Assert;\n+\n+import java.util.*;\n+\n+@Slf4j\n+public class CustomUserInfoTokenServices implements ResourceServerTokenServices {\n+\n+    private String userInfoEndpointUrl;\n+    private String clientId;\n+    private OAuth2RestOperations restTemplate;\n+    private String tokenType = \"Bearer\";\n+    private AuthoritiesExtractor authoritiesExtractor = new FixedAuthoritiesExtractor();\n+    private PrincipalExtractor principalExtractor = new FixedPrincipalExtractor();\n+\n+    private UserService userService;\n+\n+\n+    public CustomUserInfoTokenServices(String userInfoEndpointUrl, String clientId)\n+    {\n+        this.userInfoEndpointUrl = userInfoEndpointUrl;\n+        this.clientId = clientId;\n+    }\n+\n+    public void setUserService(UserService userService)\n+    {\n+        this.userService = userService;\n+    }\n+\n+\n+    public String getUserInfoEndpointUrl()\n+    {\n+        return userInfoEndpointUrl;\n+    }\n+\n+    public void setUserInfoEndpointUrl(String userInfoEndpointUrl)\n+    {\n+        this.userInfoEndpointUrl = userInfoEndpointUrl;\n+    }\n+\n+    public void setTokenType(String tokenType)\n+    {\n+        this.tokenType = tokenType;\n+    }\n+\n+    public void setRestTemplate(OAuth2RestOperations restTemplate)\n+    {\n+        this.restTemplate = restTemplate;\n+    }\n+\n+    public void setAuthoritiesExtractor(AuthoritiesExtractor authoritiesExtractor)\n+    {\n+        Assert.notNull(authoritiesExtractor, \"AuthoritiesExtractor must not be null\");\n+        this.authoritiesExtractor = authoritiesExtractor;\n+    }\n+\n+    public void setPrincipalExtractor(PrincipalExtractor principalExtractor) {\n+        Assert.notNull(principalExtractor, \"PrincipalExtractor must not be null\");\n+        this.principalExtractor = principalExtractor;\n+    }\n+\n+    @Override\n+    public OAuth2Authentication loadAuthentication(String accessToken)\n+            throws AuthenticationException, InvalidTokenException\n+    {\n+\n+\n+        Map<String, Object> map = getMap(this.userInfoEndpointUrl, accessToken);\n+\n+        if(map.containsKey(\"sub\"))\n+        {\n+            String googleName = (String) map.get(\"name\");\n+            String googleEmail = (String) map.get(\"email\");\n+            String picture = (String) map.get(\"picture\");\n+\n+\n+            if (!userService.checkByEmail(googleEmail)) {\n+                UserDto userDto = new UserDto();\n+                userDto.setEmail(googleEmail);\n+                userDto.setFirstName(googleName);\n+                userDto.setUserImg(picture);\n+                userDto.setActive(true);\n+                userDto.setPassword(String.valueOf(Objects.hash(googleEmail, googleName)));\n+                userService.saveUser(userDto);\n+            }\n+\n+\n+        }\n+\n+        if (map.containsKey(\"error\"))\n+        {\n+            log.debug(\"userinfo returned error: \" + map.get(\"error\"));\n+            throw new InvalidTokenException(accessToken);\n+        }\n+        return extractAuthentication(map);\n+    }\n+\n+    private OAuth2Authentication extractAuthentication(Map<String, Object> maps) {\n+        log.info(\"EXTRACT AUTHENTICATION\");\n+        for(Map.Entry<String, Object> e : maps.entrySet())\n+        {\n+            if (e.getKey().equals(\"name\")) {\n+                e.setValue(maps.get(\"email\"));\n+            }\n+        }\n+\n+        Object principal = getPrincipal(maps);\n+        List<GrantedAuthority> authorities = this.authoritiesExtractor\n+                .extractAuthorities(maps);\n+        OAuth2Request request = new OAuth2Request(null, this.clientId, null, true, null,\n+                null, null, null, null);\n+        UsernamePasswordAuthenticationToken token = new UsernamePasswordAuthenticationToken(\n+                principal, \"N/A\", authorities);\n+        token.setDetails(maps);\n+        return new OAuth2Authentication(request, token);\n+    }\n+\n+    /**\n+     * Return the principal that should be used for the token. The default implementation\n+     * delegates to the {@link PrincipalExtractor}.\n+     * @param map the source map\n+     * @return the principal or {@literal \"unknown\"}\n+     */\n+    protected Object getPrincipal(Map<String, Object> map) {\n+        Object principal = this.principalExtractor.extractPrincipal(map);\n+        return (principal == null ? \"unknown\" : principal);\n+    }\n+\n+    @Override\n+    public OAuth2AccessToken readAccessToken(String accessToken) {\n+        throw new UnsupportedOperationException(\"Not supported: read access token\");\n+    }\n+\n+    @SuppressWarnings({ \"unchecked\" })\n+    private Map<String, Object> getMap(String path, String accessToken) {\n+        log.info(\"Getting user info from: \" + path);\n+        try {\n+            OAuth2RestOperations restTemplate = this.restTemplate;\n+            if (restTemplate == null) {\n+                BaseOAuth2ProtectedResourceDetails resource = new BaseOAuth2ProtectedResourceDetails();\n+                resource.setClientId(this.clientId);\n+                restTemplate = new OAuth2RestTemplate(resource);\n+            }\n+            OAuth2AccessToken existingToken = restTemplate.getOAuth2ClientContext()\n+                    .getAccessToken();\n+            if (existingToken == null || !accessToken.equals(existingToken.getValue())) {\n+                DefaultOAuth2AccessToken token = new DefaultOAuth2AccessToken(\n+                        accessToken);\n+                token.setTokenType(this.tokenType);\n+                restTemplate.getOAuth2ClientContext().setAccessToken(token);\n+            }\n+            return restTemplate.getForEntity(path, Map.class).getBody();\n+        }\n+        catch (Exception ex) {\n+            log.info(\"Could not fetch user details: \" + ex.getClass() + \", \"\n+                    + ex.getMessage());\n+            return Collections.<String, Object>singletonMap(\"error\",\n+                    \"Could not fetch user details\");\n+        }\n+    }\n+}"
  },
  {
    "sha": "027a880ac8505c4e44392036467e22556b8f97c0",
    "filename": "src/main/java/com/jm/marketplace/config/SecurityConfig.java",
    "status": "modified",
    "additions": 76,
    "deletions": 8,
    "changes": 84,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/java/com/jm/marketplace/config/SecurityConfig.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/java/com/jm/marketplace/config/SecurityConfig.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/java/com/jm/marketplace/config/SecurityConfig.java?ref=fecf2dc977229ac3b974b3437070ddc3a23b237a",
    "patch": "@@ -1,32 +1,66 @@\n package com.jm.marketplace.config;\n \n-import com.jm.marketplace.config.handler.SuccessUserHandler;\n+import com.jm.marketplace.config.handler.LoginSuccessHandler;\n import com.jm.marketplace.service.user.UserService;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.boot.autoconfigure.security.oauth2.resource.AuthoritiesExtractor;\n+import org.springframework.boot.autoconfigure.security.oauth2.resource.ResourceServerProperties;\n+import org.springframework.boot.context.properties.ConfigurationProperties;\n+import org.springframework.boot.web.servlet.FilterRegistrationBean;\n import org.springframework.context.annotation.Bean;\n import org.springframework.context.annotation.PropertySource;\n import org.springframework.security.authentication.dao.DaoAuthenticationProvider;\n import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\n import org.springframework.security.config.annotation.web.builders.HttpSecurity;\n import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\n import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n-import org.springframework.security.core.Authentication;\n+import org.springframework.security.core.authority.AuthorityUtils;\n import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n import org.springframework.security.crypto.password.PasswordEncoder;\n+import org.springframework.security.oauth2.client.OAuth2ClientContext;\n+import org.springframework.security.oauth2.client.OAuth2RestTemplate;\n+import org.springframework.security.oauth2.client.filter.OAuth2ClientAuthenticationProcessingFilter;\n+import org.springframework.security.oauth2.client.filter.OAuth2ClientContextFilter;\n+import org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails;\n+import org.springframework.security.oauth2.config.annotation.web.configuration.EnableOAuth2Client;\n+import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\n import org.springframework.security.web.util.matcher.AntPathRequestMatcher;\n \n+import javax.servlet.Filter;\n+\n+\n @EnableWebSecurity\n @PropertySource(value = \"classpath:security.properties\")\n+@EnableOAuth2Client\n public class SecurityConfig extends WebSecurityConfigurerAdapter {\n \n     private UserService userService;\n-    private SuccessUserHandler successUserHandler;\n+\n+    /**\n+     * Используется при созданий фильтра, который проверяет пользовательский запрос при входе через соцсеть.\n+     * Фильтр доступ благодаря аннотациий @EnableOAuth2Client\n+     */\n+    @Bean\n+    @ConfigurationProperties(\"google.client\")\n+    public AuthorizationCodeResourceDetails google() {\n+        return new AuthorizationCodeResourceDetails();\n+    }\n+\n+    @Bean\n+    @ConfigurationProperties(\"google.resource\")\n+    public ResourceServerProperties googleResource()\n+    {\n+        return new ResourceServerProperties();\n+    }\n+\n+    @Qualifier(\"oauth2ClientContext\")\n+    @Autowired\n+    private OAuth2ClientContext oAuth2ClientContext;\n \n     @Autowired\n-    public void setUserService(UserService userService,\n-                               SuccessUserHandler successUserHandler) {\n+    public void setUserService(UserService userService) {\n         this.userService = userService;\n-        this.successUserHandler = successUserHandler;\n     }\n \n     @Override\n@@ -40,14 +74,13 @@ protected void configure(HttpSecurity http) throws Exception {\n                 // указываем страницу с формой логина\n                 // указываем action с формы логина\n                 // Указываем параметры логина и пароля с формы логина\n-                .successHandler(successUserHandler)\n                 .usernameParameter(\"email\")\n                 .passwordParameter(\"password\")\n                 // даем доступ к форме логина всем\n                 .permitAll();\n \n         http.authorizeRequests()\n-                .antMatchers(\"/\", \"/login\").permitAll()\n+                .antMatchers(\"/\", \"/login**\").permitAll()\n                 .antMatchers(\"/static/**\").permitAll()\n                 .antMatchers(\"/api/**\").permitAll()\n                 .antMatchers(\"/create-user\").permitAll()\n@@ -69,6 +102,8 @@ protected void configure(HttpSecurity http) throws Exception {\n                 .logoutSuccessUrl(\"/\");\n \n         http.rememberMe().alwaysRemember(true);\n+\n+        http.addFilterBefore(ssoFilter(), UsernamePasswordAuthenticationFilter.class);\n     }\n \n     /**\n@@ -86,4 +121,37 @@ public DaoAuthenticationProvider daoAuthenticationProvider() {\n         authenticationProvider.setPasswordEncoder(passwordEncoder());\n         return authenticationProvider;\n     }\n+\n+    @Bean\n+    public FilterRegistrationBean oAuth2ClientFilterRegistration(OAuth2ClientContextFilter oAuth2ClientContextFilter) {\n+        FilterRegistrationBean registrationBean = new FilterRegistrationBean();\n+        registrationBean.setFilter(oAuth2ClientContextFilter);\n+        registrationBean.setOrder(-100);\n+        return registrationBean;\n+    }\n+\n+    private Filter ssoFilter() {\n+        OAuth2ClientAuthenticationProcessingFilter googleFilter = new OAuth2ClientAuthenticationProcessingFilter(\"/login/oauth/google\");\n+        OAuth2RestTemplate googleTemplate = new OAuth2RestTemplate(google(), oAuth2ClientContext);\n+\n+        googleFilter.setRestTemplate(googleTemplate);\n+\n+        CustomUserInfoTokenServices tokenServices = new CustomUserInfoTokenServices(googleResource().getUserInfoUri(), google().getClientId());\n+        tokenServices.setRestTemplate(googleTemplate);\n+        googleFilter.setTokenServices(tokenServices);\n+        tokenServices.setUserService(userService);\n+\n+        AuthoritiesExtractor authoritiesExtractor = map -> {\n+            String email = (String) map.get(\"email\");\n+            if (userService.checkByEmail(email)) {\n+                return AuthorityUtils.commaSeparatedStringToAuthorityList(userService.findByEmail(email).getRolesString().trim());\n+            } else {\n+                return AuthorityUtils.commaSeparatedStringToAuthorityList(\"ROLE_USER\");\n+            }\n+        };\n+\n+        tokenServices.setAuthoritiesExtractor(authoritiesExtractor);\n+\n+        return googleFilter;\n+    }\n }"
  },
  {
    "sha": "e5997ac35f172631b032131283a0807453618749",
    "filename": "src/main/java/com/jm/marketplace/config/handler/LoginSuccessHandler.java",
    "status": "renamed",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/java/com/jm/marketplace/config/handler/LoginSuccessHandler.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/java/com/jm/marketplace/config/handler/LoginSuccessHandler.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/java/com/jm/marketplace/config/handler/LoginSuccessHandler.java?ref=fecf2dc977229ac3b974b3437070ddc3a23b237a",
    "patch": "@@ -1,4 +1,4 @@\n-package com.jm.marketplace.config;\n+package com.jm.marketplace.config.handler;\n \n import org.springframework.security.core.Authentication;\n import org.springframework.security.core.authority.AuthorityUtils;",
    "previous_filename": "src/main/java/com/jm/marketplace/config/LoginSuccessHandler.java"
  },
  {
    "sha": "3a1a8c85e45cc908adf7b7ed5a6ab9e2619429b7",
    "filename": "src/main/java/com/jm/marketplace/config/handler/SuccessUserHandler.java",
    "status": "removed",
    "additions": 0,
    "deletions": 36,
    "changes": 36,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/ba5f5b3b063c26824ef32aae911179352314c36d/src/main/java/com/jm/marketplace/config/handler/SuccessUserHandler.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/ba5f5b3b063c26824ef32aae911179352314c36d/src/main/java/com/jm/marketplace/config/handler/SuccessUserHandler.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/java/com/jm/marketplace/config/handler/SuccessUserHandler.java?ref=ba5f5b3b063c26824ef32aae911179352314c36d",
    "patch": "@@ -1,36 +0,0 @@\n-package com.jm.marketplace.config.handler;\n-\n-import org.springframework.security.core.Authentication;\n-import org.springframework.security.core.authority.AuthorityUtils;\n-import org.springframework.security.web.authentication.AuthenticationSuccessHandler;\n-import org.springframework.stereotype.Component;\n-\n-import javax.servlet.FilterChain;\n-import javax.servlet.ServletException;\n-import javax.servlet.http.HttpServletRequest;\n-import javax.servlet.http.HttpServletResponse;\n-import java.io.IOException;\n-import java.util.Set;\n-\n-@Component\n-public class SuccessUserHandler implements AuthenticationSuccessHandler {\n-    @Override\n-    public void onAuthenticationSuccess(HttpServletRequest request,\n-                                        HttpServletResponse response,\n-                                        FilterChain chain,\n-                                        Authentication authentication) throws IOException, ServletException {\n-\n-    }\n-\n-    @Override\n-    public void onAuthenticationSuccess(HttpServletRequest httpServletRequest,\n-                                        HttpServletResponse httpServletResponse,\n-                                        Authentication authentication) throws IOException, ServletException {\n-        Set<String> roles = AuthorityUtils.authorityListToSet(authentication.getAuthorities());\n-        if (roles.contains(\"ROLE_ADMIN\")) {\n-            httpServletResponse.sendRedirect(\"/admin\");\n-        } else {\n-            httpServletResponse.sendRedirect(\"/\");\n-        }\n-    }\n-}"
  },
  {
    "sha": "f59c68eade125cde672648b451e18733e93faa30",
    "filename": "src/main/java/com/jm/marketplace/controller/MainController.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/java/com/jm/marketplace/controller/MainController.java",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/java/com/jm/marketplace/controller/MainController.java",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/java/com/jm/marketplace/controller/MainController.java?ref=fecf2dc977229ac3b974b3437070ddc3a23b237a",
    "patch": "@@ -10,6 +10,8 @@\n import org.springframework.ui.Model;\n import org.springframework.web.bind.annotation.*;\n \n+import java.security.Principal;\n+\n @Controller\n @RequestMapping(value = \"/\")\n public class MainController {\n@@ -28,9 +30,7 @@ public MainController(AdvertisementService advertisementService, CityService cit\n     }\n \n     @GetMapping\n-    public String showMainPage(Model model,\n-                               @RequestParam(value = \"page\", required = false, defaultValue = \"0\") Integer page,\n-                               @RequestParam(value = \"search\", required = false) String search) {\n+    public String showMainPage(Model model, @RequestParam(value = \"page\", required = false, defaultValue = \"0\") Integer page, @RequestParam(value = \"search\", required = false) String search) {\n         model.addAttribute(\"userDto\", new UserDto());\n         model.addAttribute(\"cities\", cityService.getAllCity());\n         if(search!=null){"
  },
  {
    "sha": "74a2d07e0dcb70e3a0a82d9ed492a27cff8d1bd3",
    "filename": "src/main/resources/application.properties",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/resources/application.properties",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/resources/application.properties?ref=fecf2dc977229ac3b974b3437070ddc3a23b237a",
    "patch": "@@ -19,4 +19,13 @@ forbidden_words.path = /forbidden_words.txt\n \n #for prometheus metrics\n management.endpoints.web.exposure.include=prometheus\n-management.endpoint.prometheus.enabled=true\n\\ No newline at end of file\n+management.endpoint.prometheus.enabled=true\n+\n+google.client.clientId=473151556139-4vus86brtvu7f3ucea1nrng1ka74cken.apps.googleusercontent.com\n+google.client.clientSecret=56husOCq9xrn7aoMrakK1OH_\n+google.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token\n+google.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth\n+google.client.clientAuthenticationScheme=form\n+google.client.scope=openid,email,profile\n+google.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo\n+google.resource.preferTokenInfo=true\n\\ No newline at end of file"
  },
  {
    "sha": "6477db8785339da8fbe80ad215af71e9efb63910",
    "filename": "src/main/resources/templates/fragments/headers.html",
    "status": "modified",
    "additions": 84,
    "deletions": 30,
    "changes": 114,
    "blob_url": "https://github.com/Semyon-Fomichyov/students_marketplace/blob/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/resources/templates/fragments/headers.html",
    "raw_url": "https://github.com/Semyon-Fomichyov/students_marketplace/raw/fecf2dc977229ac3b974b3437070ddc3a23b237a/src/main/resources/templates/fragments/headers.html",
    "contents_url": "https://api.github.com/repos/Semyon-Fomichyov/students_marketplace/contents/src/main/resources/templates/fragments/headers.html?ref=fecf2dc977229ac3b974b3437070ddc3a23b237a",
    "patch": "@@ -31,27 +31,51 @@\n         }\n \n         @-webkit-keyframes shake {\n-            0%, 100% {-webkit-transform: translateX(0);}\n-            10%, 30%, 50%, 70%, 90% {-webkit-transform: translateX(-10px);}\n-            20%, 40%, 60%, 80% {-webkit-transform: translateX(10px);}\n+            0%, 100% {\n+                -webkit-transform: translateX(0);\n+            }\n+            10%, 30%, 50%, 70%, 90% {\n+                -webkit-transform: translateX(-10px);\n+            }\n+            20%, 40%, 60%, 80% {\n+                -webkit-transform: translateX(10px);\n+            }\n         }\n \n         @-moz-keyframes shake {\n-            0%, 100% {-moz-transform: translateX(0);}\n-            10%, 30%, 50%, 70%, 90% {-moz-transform: translateX(-10px);}\n-            20%, 40%, 60%, 80% {-moz-transform: translateX(10px);}\n+            0%, 100% {\n+                -moz-transform: translateX(0);\n+            }\n+            10%, 30%, 50%, 70%, 90% {\n+                -moz-transform: translateX(-10px);\n+            }\n+            20%, 40%, 60%, 80% {\n+                -moz-transform: translateX(10px);\n+            }\n         }\n \n         @-o-keyframes shake {\n-            0%, 100% {-o-transform: translateX(0);}\n-            10%, 30%, 50%, 70%, 90% {-o-transform: translateX(-10px);}\n-            20%, 40%, 60%, 80% {-o-transform: translateX(10px);}\n+            0%, 100% {\n+                -o-transform: translateX(0);\n+            }\n+            10%, 30%, 50%, 70%, 90% {\n+                -o-transform: translateX(-10px);\n+            }\n+            20%, 40%, 60%, 80% {\n+                -o-transform: translateX(10px);\n+            }\n         }\n \n         @keyframes shake {\n-            0%, 100% {transform: translateX(0);}\n-            10%, 30%, 50%, 70%, 90% {transform: translateX(-10px);}\n-            20%, 40%, 60%, 80% {transform: translateX(10px);}\n+            0%, 100% {\n+                transform: translateX(0);\n+            }\n+            10%, 30%, 50%, 70%, 90% {\n+                transform: translateX(-10px);\n+            }\n+            20%, 40%, 60%, 80% {\n+                transform: translateX(10px);\n+            }\n         }\n \n         .shake {\n@@ -61,28 +85,32 @@\n             animation-name: shake;\n         }\n \n-        .login .modal-dialog{\n+        .login .modal-dialog {\n             width: 350px;\n         }\n \n         .login .division span {\n             color: #424242;\n             font-size: 17px;\n         }\n-        .login .form-control{\n+\n+        .login .form-control {\n             border-radius: 3px;\n             background-color: rgba(0, 0, 0, 0.09);\n             box-shadow: 0 1px 0px 0px rgba(0, 0, 0, 0.09) inset;\n             color: #FFFFFF;\n         }\n-        .login .form-control:hover{\n-            background-color: rgba(0,0,0,.16);\n+\n+        .login .form-control:hover {\n+            background-color: rgba(0, 0, 0, .16);\n         }\n-        .login .form-control:focus{\n+\n+        .login .form-control:focus {\n             box-shadow: 0 1px 0 0 rgba(0, 0, 0, 0.04) inset;\n-            background-color: rgba(0,0,0,0.23);\n+            background-color: rgba(0, 0, 0, 0.23);\n             color: #FFFFFF;\n         }\n+\n         .login .box .form input[type=\"text\"], .login .box .form input[type=\"password\"] {\n             border-radius: 3px;\n             border: none;\n@@ -95,8 +123,8 @@\n         }\n \n \n-        @media (max-width:400px){\n-            .login .modal-dialog{\n+        @media (max-width: 400px) {\n+            .login .modal-dialog {\n                 width: 100%;\n             }\n         }\n@@ -135,7 +163,8 @@\n             </ul>\n             <ul class=\"navbar-nav ml-auto\" sec:authorize=\"hasRole('ADMIN')\">\n                 <li class=\"nav-item dropdown\">\n-                    <a class=\"nav-link dropdown-toggle btn-group dropleft\" href=\"#\" id=\"navbarDropdownAdmin\" role=\"button\"\n+                    <a class=\"nav-link dropdown-toggle btn-group dropleft\" href=\"#\" id=\"navbarDropdownAdmin\"\n+                       role=\"button\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                         Admin\n                     </a>\n@@ -153,15 +182,28 @@\n                         Profile\n                     </a>\n                     <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown2\">\n-                        <a class=\"dropdown-item\" href=\"/user\">Profile</a>\n-                        <button type=\"button\" class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#loginModal\">Авторизоваться</button>\n-                        <button type=\"button\" class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#modalRegistration\">Sing up</button>\n-                        <a class=\"dropdown-item\" href=\"/logout\">logout</a>\n+                        <div sec:authorize=\"isAuthenticated()\">\n+                             <a class=\"dropdown-item\" href=\"/user\">Profile</a>\n+                        </div>\n+                        <div sec:authorize=\"!isAuthenticated()\">\n+                            <button type=\"button\" class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#loginModal\">\n+                                Авторизоваться\n+                            </button>\n+                        </div>\n+                        <div sec:authorize=\"!isAuthenticated()\">\n+                            <button type=\"button\" class=\"dropdown-item\" data-toggle=\"modal\"\n+                                    data-target=\"#modalRegistration\">Sing up\n+                            </button>\n+                        </div>\n+                        <div sec:authorize=\"isAuthenticated()\">\n+                            <a class=\"dropdown-item\" href=\"/logout\">logout</a>\n+                        </div>\n                     </div>\n                 </li>\n             </ul>\n             <ul class=\"navbar-nav\">\n-                <a class=\"btn btn-outline-primary btn-sm\" th:href=\"@{/api/v1/goods}\" role=\"button\">Разместить объявление</a>\n+                <a class=\"btn btn-outline-primary btn-sm\" th:href=\"@{/api/v1/goods}\" role=\"button\">Разместить\n+                    объявление</a>\n             </ul>\n         </div>\n     </div>\n@@ -174,7 +216,7 @@\n     </div>\n </div>\n \n-<div class=\"modal fade login\" id=\"loginModal\"  role=\"dialog\" th:fragment=\"loginModal\">\n+<div class=\"modal fade login\" id=\"loginModal\" role=\"dialog\" th:fragment=\"loginModal\">\n     <div class=\"modal-dialog login animated\">\n         <div class=\"modal-content\">\n             <div class=\"modal-header\">\n@@ -188,9 +230,16 @@ <h5 class=\"modal-title\">Регистрация</h5>\n                     <div class=\"content\">\n                         <div class=\"form loginBox\">\n                             <form method=\"POST\" th:action=\"@{/login}\" accept-charset=\"UTF-8\">\n-                                <input id=\"emailLogin\" class=\"form-control\" type=\"text\" placeholder=\"Email\" name=\"email\">\n-                                <input id=\"passwordLogin\" class=\"form-control\" type=\"password\" placeholder=\"Password\" name=\"password\">\n-                                <input class=\"btn btn-default btn-login\" type=\"submit\" value=\"Войти\">\n+                                <input id=\"emailLogin\" class=\"form-control\" type=\"text\" placeholder=\"Email\"\n+                                       name=\"email\">\n+                                <input id=\"passwordLogin\" class=\"form-control\" type=\"password\" placeholder=\"Password\"\n+                                       name=\"password\">\n+                                <input class=\"btn btn-default btn-login\" type=\"submit\" style=\"background: #03A9F4\" value=\"Войти\">\n+                                <div style=\"padding-top: 5px\">\n+                                    <a style=\"display: inline; padding: 15px; padding-left: 0px\" class=\"dropdown-item\" href=\"/login/oauth/google\">\n+                                        <img style=\"max-height: 50px;\" src=\"https://img.icons8.com/fluent/48/000000/google-logo.png\"/>\n+                                    </a>\n+                                </div>\n                             </form>\n                         </div>\n \n@@ -266,6 +315,11 @@ <h5 class=\"modal-title\">Регистрация</h5>\n                             <div class=\"col-auto\">\n                                 <button type=\"submit\" class=\"btn btn-success\">Зарегистрироваться</button>\n                             </div>\n+                            <div style=\"padding-top: 5px\">\n+                                <a style=\"display: inline; padding: 15px;\" class=\"dropdown-item\" href=\"/login/oauth/google\">\n+                                    <img style=\"max-height: 50px;\" src=\"https://img.icons8.com/fluent/48/000000/google-logo.png\"/>\n+                                </a>\n+                            </div>\n                         </div>\n                     </div>\n                 </form>"
  }
]
