[
  {
    "sha": "5d5a42b6d097af15a5d4567b924e2b781b95e3b1",
    "filename": "README.md",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/README.md",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/README.md",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/README.md?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -17,7 +17,8 @@\n 08. spring-08-homework - домашнее задание №8 (Приложение с использованием MongoDB)\n 09. spring-10-homework-be - домашнее задание №10, backend (Переписать приложение с использованием AJAX и REST-контроллеров)\n 10. spring-lO-homework-fe - домашнее задание №10, frontend (Переписать приложение с использованием AJAX и REST-контроллеров)\n-11. spring-12-homework - домашнее задание №12 (Приложение с аутентификацией)\n-12. spring-13-homework - домашнее задание №13 (Приложение с аутентификацией ACL)\n-13. spring-16-homework - домашнее задание №16 (Spring Boot Actuator)\n-14. spring-17-homework - домашнее задание №17 (Docker)\n+11. spring-11-homework - домашнее задание №11 (Приложение на WebFlux)\n+12. spring-12-homework - домашнее задание №12 (Приложение с аутентификацией)\n+13. spring-13-homework - домашнее задание №13 (Приложение с аутентификацией ACL)\n+14. spring-16-homework - домашнее задание №16 (Spring Boot Actuator)\n+15. spring-17-homework - домашнее задание №17 (Docker)"
  },
  {
    "sha": "2ee914a60e923026e99a21c6dd0301ace4a3f4f4",
    "filename": "spring-11-homework/.gitignore",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/.gitignore",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/.gitignore",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/.gitignore?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,34 @@\n+HELP.md\n+target/\n+.mvn/wrapper/\n+!**/src/main/**\n+!**/src/test/**\n+\n+### STS ###\n+.apt_generated\n+.classpath\n+.factorypath\n+.project\n+.settings\n+.springBeans\n+.sts4-cache\n+\n+### IntelliJ IDEA ###\n+.idea\n+*.iws\n+*.iml\n+*.ipr\n+\n+### NetBeans ###\n+/nbproject/private/\n+/nbbuild/\n+/dist/\n+/nbdist/\n+/.nb-gradle/\n+build/\n+\n+### VS Code ###\n+.vscode/\n+/mvnw.cmd\n+/spring-shell.log\n+/mvnw"
  },
  {
    "sha": "0041ab4b943f53cd4204abc59d5851b7e8272791",
    "filename": "spring-11-homework/README.md",
    "status": "added",
    "additions": 26,
    "deletions": 0,
    "changes": 26,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/README.md",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/README.md",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/README.md?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,26 @@\n+# spring-11-homework - домашнее задание №11\n+\n+Использовать WebFlux\n+\n+Цель: разрабатывать Responsive и Resilent приложения на реактивном стеке Spring c помощью Spring Web Flux и Reactive Spring Data Repositories\n+\n+Результат: приложение на реактивном стеке Spring\n+\n+Описание задания: Задание выполняется на основе нереактивного приложения Sping MVC!\n+\n+Требования:\n+1. За основу для выполнения работы можно взять ДЗ с Ajax + REST (классическое веб-приложение для этого луче не использовать).\n+2. Но можно выбрать другую доменную модель (не библиотеку).\n+3. Необходимо использовать Reactive Spring Data Repositories.\n+4. В качестве БД лучше использовать MongoDB или Redis. Использовать PostgreSQL и экспериментальную R2DBC не рекомендуется.\n+5. RxJava vs Project Reactor - на Ваш вкус.\n+6. Вместо классического Spring MVC и embedded Web-сервера использовать WebFlux.\n+7. Опционально: реализовать на Functional Endpoints\n+\n+Описание решения:\n+\n+1. Для выполнения задания создано новое приложение Journal, позволяющее создавать заметки.\n+2. Аутентификация выполнена на основе httpBasic()\n+3. Пользователи хранятся в бд\n+4. Заметки хранятся в бд\n+5. Использован ReactiveMongoRepository\n\\ No newline at end of file"
  },
  {
    "sha": "e09c91dbc4a13aaffb286153e0a9daa51e6b3a97",
    "filename": "spring-11-homework/docker-compose.yml",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/docker-compose.yml",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/docker-compose.yml",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/docker-compose.yml?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,12 @@\n+version: '3'\n+services:\n+  mongo:\n+    image: \"mongo\"\n+    volumes:\n+      - /D/MongoDB/db:/data/db\n+    ports:\n+      - \"27017-27019:27017-27019\"\n+    networks:\n+      - nw\n+networks:\n+  nw:"
  },
  {
    "sha": "95e025a0f27a789e86ead3d8bae6620f392bfbbb",
    "filename": "spring-11-homework/pom.xml",
    "status": "added",
    "additions": 148,
    "deletions": 0,
    "changes": 148,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/pom.xml",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/pom.xml",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/pom.xml?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,148 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+\t<parent>\n+\t\t<groupId>org.springframework.cloud</groupId>\n+\t\t<artifactId>spring-cloud-starter-parent</artifactId>\n+\t\t<version>Hoxton.SR7</version>\n+\t\t<relativePath /> <!-- lookup parent from repository -->\n+\t</parent>\n+\t<groupId>ru.gurkin.spring</groupId>\n+\t<artifactId>journal</artifactId>\n+\t<version>1.0.0-SNAPSHOT</version>\n+\t<name>Journal</name>\n+\t<description>Journal</description>\n+\n+\t<properties>\n+\t\t<java.version>11</java.version>\n+\t\t<maven.compiler.target>11</maven.compiler.target>\n+\t\t<maven.compiler.source>11</maven.compiler.source>\n+\t\t<minimal.maven.version>3.3.9</minimal.maven.version>\n+\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\t</properties>\n+\n+\t<dependencies>\n+\t\t<!-- Spring -->\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-webflux</artifactId>\n+\t\t</dependency>\n+\n+\t\t<!-- Spring Security -->\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-security</artifactId>\n+\t\t</dependency>\n+\n+\t\t<!-- For Spring Security testing -->\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.security</groupId>\n+\t\t\t<artifactId>spring-security-test</artifactId>\n+\t\t</dependency>\n+\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-test</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t\t<exclusions>\n+\t\t\t\t<exclusion>\n+\t\t\t\t\t<groupId>org.junit.vintage</groupId>\n+\t\t\t\t\t<artifactId>junit-vintage-engine</artifactId>\n+\t\t\t\t</exclusion>\n+\t\t\t</exclusions>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>de.flapdoodle.embed</groupId>\n+\t\t\t<artifactId>de.flapdoodle.embed.mongo</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-configuration-processor</artifactId>\n+\t\t\t<optional>true</optional>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t<artifactId>spring-boot-devtools</artifactId>\n+\t\t\t<scope>runtime</scope>\n+\t\t\t<optional>true</optional>\n+\t\t</dependency>\n+\n+\t\t<!-- junit 5 -->\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-engine</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.junit.jupiter</groupId>\n+\t\t\t<artifactId>junit-jupiter-api</artifactId>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\n+\t\t<!-- Lombok -->\n+\t\t<dependency>\n+\t\t\t<groupId>org.projectlombok</groupId>\n+\t\t\t<artifactId>lombok</artifactId>\n+\t\t\t<optional>true</optional>\n+\t\t</dependency>\n+\n+\t\t<!-- Guava -->\n+\t\t<dependency>\n+\t\t\t<groupId>com.google.guava</groupId>\n+\t\t\t<artifactId>guava</artifactId>\n+\t\t\t<version>28.2-jre</version>\n+\t\t</dependency>\n+\t</dependencies>\n+\n+\t<build>\n+\t\t<plugins>\n+\t\t\t<plugin>\n+\t\t\t\t<artifactId>maven-enforcer-plugin</artifactId>\n+\t\t\t\t<executions>\n+\t\t\t\t\t<execution>\n+\t\t\t\t\t\t<id>enforce-maven</id>\n+\t\t\t\t\t\t<goals>\n+\t\t\t\t\t\t\t<goal>enforce</goal>\n+\t\t\t\t\t\t</goals>\n+\t\t\t\t\t\t<configuration>\n+\t\t\t\t\t\t\t<rules>\n+\t\t\t\t\t\t\t\t<dependencyConvergence />\n+\t\t\t\t\t\t\t\t<requireMavenVersion>\n+\t\t\t\t\t\t\t\t\t<version>${minimal.maven.version}</version>\n+\t\t\t\t\t\t\t\t</requireMavenVersion>\n+\t\t\t\t\t\t\t</rules>\n+\t\t\t\t\t\t</configuration>\n+\t\t\t\t\t</execution>\n+\t\t\t\t</executions>\n+\t\t\t</plugin>\n+\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.springframework.boot</groupId>\n+\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<executable>true</executable>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\n+\t\t\t<plugin>\n+\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n+\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n+\t\t\t\t<configuration>\n+\t\t\t\t\t<argLine>-Dfile.encoding=UTF8</argLine>\n+\t\t\t\t</configuration>\n+\t\t\t</plugin>\n+\t\t</plugins>\n+\t</build>\n+\n+</project>"
  },
  {
    "sha": "0021336db0c63c5f84b5f432b1b5f1cab66bf730",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/JournalApplication.java",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/JournalApplication.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/JournalApplication.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/JournalApplication.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,33 @@\n+package ru.gurkin.spring.journal;\n+\n+import org.springframework.boot.SpringApplication;\n+import org.springframework.boot.autoconfigure.SpringBootApplication;\n+import org.springframework.context.ConfigurableApplicationContext;\n+import ru.gurkin.spring.journal.model.JournalUser;\n+import ru.gurkin.spring.journal.model.UserRole;\n+import ru.gurkin.spring.journal.repository.PostRepository;\n+import ru.gurkin.spring.journal.repository.UserRepository;\n+\n+@SpringBootApplication\n+public class JournalApplication {\n+\tpublic static void main(String[] args){\n+\t\tConfigurableApplicationContext context = SpringApplication.run(JournalApplication.class, args);\n+\t\tUserRepository userRepository = context.getBean(UserRepository.class);\n+\n+\t\tJournalUser user1 = userRepository.findByLoginIgnoreCase(\"user1\").block();\n+\t\tif(user1 == null){\n+\t\t\tJournalUser user = new JournalUser(\"user1\");\n+\t\t\tuser.setPassword(\"user1\");\n+\t\t\tuser.setRole(UserRole.USER);\n+\t\t\tuserRepository.save(user).block();\n+\t\t}\n+\n+\t\tJournalUser user2 = userRepository.findByLoginIgnoreCase(\"user2\").block();\n+\t\tif(user2 == null){\n+\t\t\tJournalUser user = new JournalUser(\"user2\");\n+\t\t\tuser.setPassword(\"user2\");\n+\t\t\tuser.setRole(UserRole.USER);\n+\t\t\tuserRepository.save(user).block();\n+\t\t}\n+\t}\n+}"
  },
  {
    "sha": "cc213069b3efe7b334723333432939665aa6d668",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/config/MongoConfig.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/config/MongoConfig.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/config/MongoConfig.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/config/MongoConfig.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,10 @@\n+package ru.gurkin.spring.journal.config;\n+\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.data.mongodb.repository.config.EnableMongoRepositories;\n+\n+@EnableMongoRepositories(\"ru.gurkin.spring.journal.repository\")\n+@Configuration\n+public class MongoConfig {\n+\n+}"
  },
  {
    "sha": "67d711ab4dc365d76186d46b2167d2a09bed9c7b",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/ErrorConstants.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/ErrorConstants.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/ErrorConstants.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/ErrorConstants.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,15 @@\n+package ru.gurkin.spring.journal.model;\n+\n+public class ErrorConstants {\n+\n+\tpublic static final String LOGIN_ERROR = \"Login must be not null or empty\";\n+\tpublic static final String TITLE_FILTER_ERROR = \"TitleFilter must be not null or empty\";\n+\tpublic static final String USER_ERROR = \"User is null\";\n+\tpublic static final String POST_ERROR = \"Post is null\";\n+\tpublic static final String NULL_ID_ERROR = \"Id must be null\";\n+\tpublic static final String NOT_NULL_ID_ERROR = \"Id must be not null\";\n+\tpublic static final String ID_ERROR = \"Id is null\";\n+\tpublic static final String TITLE_ERROR = \"Title must be not null or empty\";\n+\n+\tprivate ErrorConstants(){}\n+}"
  },
  {
    "sha": "0980c53a780c4ce37369c3da8b0569e7a8a95b0b",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/JournalUser.java",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/JournalUser.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/JournalUser.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/JournalUser.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,51 @@\n+package ru.gurkin.spring.journal.model;\n+\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.mongodb.core.index.Indexed;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+import java.util.Objects;\n+\n+@Getter\n+@Setter\n+@NoArgsConstructor\n+@Document(\"users\")\n+public class JournalUser {\n+\t@Id\n+\tprivate String id;\n+\n+\t@Indexed(unique = true)\n+\tprivate String login;\n+\n+\tprivate String password;\n+\n+\tprivate UserRole role;\n+\n+\tpublic JournalUser(String login) {\n+\t\tthis.login = login;\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn \"JournalUser{\" +\n+\t\t\t\t\"id='\" + id + '\\'' +\n+\t\t\t\t\", login='\" + login + '\\'' +\n+\t\t\t\t'}';\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(Object o) {\n+\t\tif (this == o) return true;\n+\t\tif (o == null || getClass() != o.getClass()) return false;\n+\t\tJournalUser journalUser = (JournalUser) o;\n+\t\treturn Objects.equals(id, journalUser.id) && Objects.equals(login, journalUser.login);\n+\t}\n+\n+\t@Override\n+\tpublic int hashCode() {\n+\t\treturn Objects.hash(id, login);\n+\t}\n+}"
  },
  {
    "sha": "1e9a972349f7d72819fea5e392b7079dd25a44f9",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/Post.java",
    "status": "added",
    "additions": 46,
    "deletions": 0,
    "changes": 46,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/Post.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/Post.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/Post.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,46 @@\n+package ru.gurkin.spring.journal.model;\n+\n+import lombok.*;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.mongodb.core.mapping.Document;\n+\n+import java.util.Objects;\n+\n+@Getter\n+@Setter\n+@NoArgsConstructor\n+@AllArgsConstructor(access = AccessLevel.PUBLIC)\n+@Document(\"posts\")\n+public class Post {\n+\t\n+\t@Id\n+\tprivate String id;\n+\t\n+\tprivate String title;\n+\n+\tprivate String body;\n+\n+\tprivate String user;\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn \"Post{\" +\n+\t\t\t\t\"id='\" + id + '\\'' +\n+\t\t\t\t\", title='\" + title + '\\'' +\n+\t\t\t\t\", body=\" + body +\n+\t\t\t\t'}';\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(Object o) {\n+\t\tif (this == o) return true;\n+\t\tif (o == null || getClass() != o.getClass()) return false;\n+\t\tPost post = (Post) o;\n+\t\treturn Objects.equals(id, post.id) && Objects.equals(title, post.title);\n+\t}\n+\n+\t@Override\n+\tpublic int hashCode() {\n+\t\treturn Objects.hash(id, title);\n+\t}\n+}"
  },
  {
    "sha": "bfa2f1b17d086002007be7fbd7b6609f32d63fcd",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/UserRole.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/UserRole.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/UserRole.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/model/UserRole.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,8 @@\n+package ru.gurkin.spring.journal.model;\n+\n+public enum UserRole {\n+    ADMIN,\n+    USER,\n+    ANONIMUS,\n+    ;\n+}"
  },
  {
    "sha": "b1713a0f941961007e48a31441cedba765f1f851",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/repository/PostRepository.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/repository/PostRepository.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/repository/PostRepository.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/repository/PostRepository.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,10 @@\n+package ru.gurkin.spring.journal.repository;\n+\n+import org.springframework.data.mongodb.repository.ReactiveMongoRepository;\n+import reactor.core.publisher.Flux;\n+import ru.gurkin.spring.journal.model.Post;\n+\n+public interface PostRepository extends ReactiveMongoRepository<Post, String> {\n+\n+    Flux<Post> findByTitleLikeIgnoreCase(String titleFilter);\n+}"
  },
  {
    "sha": "c84a693bf4f25c73fd3f76a6bbb32c6079c8c1c9",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/repository/UserRepository.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/repository/UserRepository.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/repository/UserRepository.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/repository/UserRepository.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.gurkin.spring.journal.repository;\n+\n+import org.springframework.data.mongodb.repository.ReactiveMongoRepository;\n+import org.springframework.stereotype.Repository;\n+import reactor.core.publisher.Mono;\n+import ru.gurkin.spring.journal.model.JournalUser;\n+\n+@Repository\n+public interface UserRepository extends ReactiveMongoRepository<JournalUser, String> {\n+\tMono<JournalUser> findByLoginIgnoreCase(String login);\n+}"
  },
  {
    "sha": "c1d5984bc064a40645a1cc5743e7f0e8c6931c3c",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/rest/NotFoundException.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/rest/NotFoundException.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/rest/NotFoundException.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/rest/NotFoundException.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,7 @@\n+package ru.gurkin.spring.journal.rest;\n+\n+class NotFoundException extends RuntimeException{\n+\n+    NotFoundException() {\n+    }\n+}"
  },
  {
    "sha": "04989973ee058dbf557be338d4be9449d52835d6",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/rest/PostController.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/rest/PostController.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/rest/PostController.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/rest/PostController.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,44 @@\n+package ru.gurkin.spring.journal.rest;\n+\n+import org.springframework.web.bind.annotation.*;\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+import ru.gurkin.spring.journal.model.Post;\n+import ru.gurkin.spring.journal.service.PostService;\n+\n+@RestController\n+public class PostController {\n+\n+    private final PostService postService;\n+\n+    public PostController(PostService postService) {\n+        this.postService = postService;\n+    }\n+\n+    @GetMapping(\"/posts\")\n+    public Flux<Post> getPosts() {\n+        return postService.getAll();\n+    }\n+\n+    @GetMapping(\"/posts/{id}\")\n+    public Mono<Post> getPost(@PathVariable(\"id\") String id) {\n+        return postService.getById(id).cache();\n+    }\n+\n+\n+    @PostMapping(\"/posts\")\n+    public Mono<Post> createPost(@RequestBody Post post) {\n+        return postService.create(post);\n+    }\n+\n+    @PutMapping(\"/posts/{id}\")\n+    public Mono<Post> updatePost(@RequestBody Post post) {\n+        return postService.update(post);\n+    }\n+\n+    @DeleteMapping(\"/posts/{id}\")\n+    public void deletePost(@PathVariable(\"id\") String id){\n+        postService.delete(id);\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "478586926331c3b9d7207fcb69288958dc558891",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/JournalUserDetailService.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/JournalUserDetailService.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/JournalUserDetailService.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/JournalUserDetailService.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,28 @@\n+package ru.gurkin.spring.journal.security;\n+\n+import org.springframework.security.core.userdetails.ReactiveUserDetailsService;\n+import org.springframework.security.core.userdetails.User;\n+import org.springframework.security.core.userdetails.UserDetails;\n+import org.springframework.stereotype.Service;\n+import reactor.core.publisher.Mono;\n+import ru.gurkin.spring.journal.service.JournalUserService;\n+\n+@Service\n+public class JournalUserDetailService implements ReactiveUserDetailsService {\n+\n+    private final JournalUserService userService;\n+\n+    public JournalUserDetailService(JournalUserService userService){\n+        this.userService = userService;\n+    }\n+\n+    @Override\n+    public Mono<UserDetails> findByUsername(String userName) {\n+        return userService.getByLogin(userName)\n+                .map(user -> User\n+                            .withUsername(user.getLogin())\n+                            .password(user.getPassword())\n+                            .roles(user.getRole().name())\n+                            .build());\n+    }\n+}"
  },
  {
    "sha": "5a4de82b7d62b377f3e75999af017924fa4395cf",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/SecurityConfiguration.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/SecurityConfiguration.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/SecurityConfiguration.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/SecurityConfiguration.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,39 @@\n+package ru.gurkin.spring.journal.security;\n+\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.security.config.annotation.method.configuration.EnableReactiveMethodSecurity;\n+import org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;\n+import org.springframework.security.config.web.server.ServerHttpSecurity;\n+import org.springframework.security.crypto.password.NoOpPasswordEncoder;\n+import org.springframework.security.crypto.password.PasswordEncoder;\n+import org.springframework.security.web.server.SecurityWebFilterChain;\n+import ru.gurkin.spring.journal.model.UserRole;\n+import ru.gurkin.spring.journal.security.model.AnonymousUserDetailsInfo;\n+\n+@Configuration\n+@EnableWebFluxSecurity\n+@EnableReactiveMethodSecurity\n+public class SecurityConfiguration{\n+\n+    @Bean\n+    public SecurityWebFilterChain springWebFilterChain(ServerHttpSecurity http) {\n+        return http\n+                .csrf()\n+                .disable()\n+                .authorizeExchange()\n+                .pathMatchers(\"/posts\").hasAnyRole(\"USER\")\n+                .anyExchange().permitAll()\n+                .and()\n+                .anonymous().authorities(UserRole.ANONIMUS.name()).principal(new AnonymousUserDetailsInfo())\n+                .and()\n+                .httpBasic()\n+                .and()\n+                .build();\n+    }\n+\n+    @Bean\n+    public PasswordEncoder passwordEncoder() {\n+        return NoOpPasswordEncoder.getInstance();\n+    }\n+}"
  },
  {
    "sha": "ce5c5c6e10c016f0e56c1899f1162cb6b2fbd7ad",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/model/AnonymousUserDetailsInfo.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/model/AnonymousUserDetailsInfo.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/model/AnonymousUserDetailsInfo.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/security/model/AnonymousUserDetailsInfo.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,24 @@\n+package ru.gurkin.spring.journal.security.model;\n+\n+import org.springframework.security.core.GrantedAuthority;\n+import org.springframework.security.core.userdetails.User;\n+import ru.gurkin.spring.journal.model.UserRole;\n+\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+public class AnonymousUserDetailsInfo extends User {\n+\n+    public AnonymousUserDetailsInfo(){\n+        super(\"anonymous\", \"pass\", new HashSet<>());\n+    }\n+\n+    @Override\n+    public Collection<GrantedAuthority> getAuthorities() {\n+        GrantedAuthority authority = UserRole.ANONIMUS::name;\n+        Set<GrantedAuthority> authorities = new HashSet<>();\n+        authorities.add(authority);\n+        return authorities;\n+    }\n+}"
  },
  {
    "sha": "f67528f2398479cabec86873aab98ea94c995ebe",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/JournalUserService.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/JournalUserService.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/JournalUserService.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/JournalUserService.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.gurkin.spring.journal.service;\n+\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+import ru.gurkin.spring.journal.model.JournalUser;\n+\n+public interface JournalUserService {\n+\tFlux<JournalUser> getAll();\n+\n+\tMono<JournalUser> getByLogin(String login);\n+\n+\tMono<JournalUser> getById(String id);\n+\n+\tMono<JournalUser> create(JournalUser model);\n+\n+\tMono<JournalUser> update(JournalUser model);\n+\n+\tvoid delete(String id);\n+}"
  },
  {
    "sha": "14dfea0bb1b3e91b17f8d23239eb07e452a37f87",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/PostService.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/PostService.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/PostService.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/PostService.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,19 @@\n+package ru.gurkin.spring.journal.service;\n+\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+import ru.gurkin.spring.journal.model.Post;\n+\n+public interface PostService {\n+\tFlux<Post> getAll();\n+\n+\tMono<Post> getById(String id);\n+\n+\tMono<Post> create(Post post);\n+\n+\tMono<Post> update(Post post);\n+\n+\tvoid delete(String id);\n+\n+\tFlux<Post> search(String titleFilter);\n+}"
  },
  {
    "sha": "ea7d3157b0984f4d73f25260b5db6cee2d8d88d3",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/impl/JournalUserServiceImpl.java",
    "status": "added",
    "additions": 63,
    "deletions": 0,
    "changes": 63,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/impl/JournalUserServiceImpl.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/impl/JournalUserServiceImpl.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/impl/JournalUserServiceImpl.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,63 @@\n+package ru.gurkin.spring.journal.service.impl;\n+\n+import com.google.common.base.Strings;\n+import org.springframework.stereotype.Service;\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+import ru.gurkin.spring.journal.model.JournalUser;\n+import ru.gurkin.spring.journal.repository.UserRepository;\n+import ru.gurkin.spring.journal.service.JournalUserService;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static ru.gurkin.spring.journal.model.ErrorConstants.*;\n+\n+@Service\n+public class JournalUserServiceImpl implements JournalUserService {\n+\n+\tprivate final UserRepository dao;\n+\t\n+\tpublic JournalUserServiceImpl(UserRepository dao) {\n+\t\tthis.dao = dao;\n+\t}\n+\n+\t@Override\n+\tpublic Flux<JournalUser> getAll() {\n+\t\treturn dao.findAll();\n+\t}\n+\n+\t@Override\n+\tpublic Mono<JournalUser> getByLogin(String login) {\n+\t\tcheckArgument(!Strings.isNullOrEmpty(login), LOGIN_ERROR);\n+\t\treturn dao.findByLoginIgnoreCase(login);\n+\t}\n+\n+\t@Override\n+\tpublic Mono<JournalUser> getById(String id) {\n+\t\tcheckNotNull(id, ID_ERROR);\n+\t\treturn dao.findById(id);\n+\t}\n+\n+\t@Override\n+\tpublic Mono<JournalUser> create(JournalUser journalUser) {\n+\t\tcheckNotNull(journalUser, USER_ERROR);\n+\t\tcheckArgument(journalUser.getId() == null, NULL_ID_ERROR);\n+\t\tcheckArgument(!Strings.isNullOrEmpty(journalUser.getLogin()), LOGIN_ERROR);\n+\t\treturn dao.save(journalUser);\n+\t}\n+\n+\t@Override\n+\tpublic Mono<JournalUser> update(JournalUser journalUser) {\n+\t\tcheckNotNull(journalUser, USER_ERROR);\n+\t\tcheckArgument(journalUser.getId() != null, NOT_NULL_ID_ERROR);\n+\t\tcheckArgument(!Strings.isNullOrEmpty(journalUser.getLogin()), LOGIN_ERROR);\n+\t\treturn dao.save(journalUser);\n+\t}\n+\n+\t@Override\n+\tpublic void delete(String id) {\n+\t\tcheckNotNull(id, ID_ERROR);\n+\t\tdao.deleteById(id);\n+\t}\n+\n+}"
  },
  {
    "sha": "c1637694cc98acfbb00378687bdca0147a8f7147",
    "filename": "spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/impl/PostServiceImpl.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/impl/PostServiceImpl.java",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/impl/PostServiceImpl.java",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/java/ru/gurkin/spring/journal/service/impl/PostServiceImpl.java?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,62 @@\n+package ru.gurkin.spring.journal.service.impl;\n+\n+import com.google.common.base.Strings;\n+import org.springframework.stereotype.Service;\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+import ru.gurkin.spring.journal.model.Post;\n+import ru.gurkin.spring.journal.repository.PostRepository;\n+import ru.gurkin.spring.journal.service.PostService;\n+\n+import static com.google.common.base.Preconditions.checkArgument;\n+import static com.google.common.base.Preconditions.checkNotNull;\n+import static ru.gurkin.spring.journal.model.ErrorConstants.*;\n+\n+@Service\n+public class PostServiceImpl implements PostService {\n+\n+\tprivate final PostRepository dao;\n+\n+\tpublic PostServiceImpl(PostRepository dao) {\n+\t\tthis.dao = dao;\n+\t}\n+\n+\t@Override\n+\tpublic Flux<Post> getAll() {\n+\t\treturn dao.findAll();\n+\t}\n+\n+\t@Override\n+\tpublic Mono<Post> getById(String id) {\n+\t\tcheckNotNull(id, ID_ERROR);\n+\t\treturn dao.findById(id);\n+\t}\n+\n+\t@Override\n+\tpublic Mono<Post> create(Post post) {\n+\t\tcheckNotNull(post, POST_ERROR);\n+\t\tcheckArgument(post.getId() == null, NULL_ID_ERROR);\n+\t\tcheckArgument(!Strings.isNullOrEmpty(post.getTitle()), TITLE_ERROR);\n+\t\treturn dao.save(post);\n+\t}\n+\n+\t@Override\n+\tpublic Mono<Post> update(Post post) {\n+\t\tcheckNotNull(post, POST_ERROR);\n+\t\tcheckArgument(post.getId() != null, NOT_NULL_ID_ERROR);\n+\t\tcheckArgument(!Strings.isNullOrEmpty(post.getTitle()), TITLE_ERROR);\n+\t\treturn dao.save(post);\n+\t}\n+\n+\t@Override\n+\tpublic void delete(String id) {\n+\t\tcheckNotNull(id, ID_ERROR);\n+\t\tdao.deleteById(id);\n+\t}\n+\n+\t@Override\n+\tpublic Flux<Post> search(String titleFilter) {\n+\t\tcheckArgument(!Strings.isNullOrEmpty(titleFilter), TITLE_FILTER_ERROR);\n+\t\treturn dao.findByTitleLikeIgnoreCase(titleFilter);\n+\t}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "29e6785c2ba5fad9da2098f52c4cd6f77f991d89",
    "filename": "spring-11-homework/src/main/resources/application.yml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/resources/application.yml",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/resources/application.yml",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/resources/application.yml?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,19 @@\n+spring:\n+  profiles: \"prod\"\n+  data:\n+    mongodb:\n+      uri: ${MONGO_URL}\n+\n+---\n+spring:\n+  profiles: \"dev\"\n+  data:\n+    mongodb:\n+      uri: ${MONGO_URL}\n+\n+---\n+spring:\n+  profiles: \"test\"\n+  data:\n+    mongodb:\n+      database: journal"
  },
  {
    "sha": "fa8d4003405062fd07ba99bf05bb7f9e8afef19b",
    "filename": "spring-11-homework/src/main/resources/banner.txt",
    "status": "added",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/blob/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/resources/banner.txt",
    "raw_url": "https://github.com/baselix/2020-02-otus-spring-gurkin/raw/236c651f68fb6ce9ab49a9526e22013ec3ba8d29/spring-11-homework/src/main/resources/banner.txt",
    "contents_url": "https://api.github.com/repos/baselix/2020-02-otus-spring-gurkin/contents/spring-11-homework/src/main/resources/banner.txt?ref=236c651f68fb6ce9ab49a9526e22013ec3ba8d29",
    "patch": "@@ -0,0 +1,3 @@\n+ ┬┌─┐┬ ┬┬─┐┌┐┌┌─┐┬\n+ ││ ││ │├┬┘│││├─┤│\n+└┘└─┘└─┘┴└─┘└┘┴ ┴┴─┘\n\\ No newline at end of file"
  }
]
