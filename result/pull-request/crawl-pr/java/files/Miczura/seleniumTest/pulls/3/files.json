[
  {
    "sha": "d92d2c1f94313021729fc8ba58d1e5ef6e1ea259",
    "filename": "src/main/java/pl/allegro/pageObjects/components/ComputersMenu.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/Miczura/seleniumTest/blob/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/components/ComputersMenu.java",
    "raw_url": "https://github.com/Miczura/seleniumTest/raw/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/components/ComputersMenu.java",
    "contents_url": "https://api.github.com/repos/Miczura/seleniumTest/contents/src/main/java/pl/allegro/pageObjects/components/ComputersMenu.java?ref=e538d927bf96935d1aab1b85bae2918740e2f05d",
    "patch": "@@ -12,7 +12,8 @@\n import java.util.ArrayList;\n \n public class ComputersMenu extends AbstractPageObject {\n-    @FindBy( xpath = \"//div[@data-box-name='categories container']/descendant::a[text()=' Dyski i pamięci przenośne ']\")\n+    //@FindBy( xpath = \"//div[@data-box-name='categories container']/descendant::a[text()=' Dyski i pamięci przenośne ']\")\n+    @FindBy( css = \"[data-role='Categories'] a[href*='dyski-i-pamieci-przenosne']\")\n     private WebElement portableDiscsAndMemoriesLink;\n \n     public ComputersMenu(WebDriver driver) {"
  },
  {
    "sha": "16c91d733d57e88663bd6e6e1314fa80081cec59",
    "filename": "src/main/java/pl/allegro/pageObjects/components/ElectronicsMenu.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/Miczura/seleniumTest/blob/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/components/ElectronicsMenu.java",
    "raw_url": "https://github.com/Miczura/seleniumTest/raw/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/components/ElectronicsMenu.java",
    "contents_url": "https://api.github.com/repos/Miczura/seleniumTest/contents/src/main/java/pl/allegro/pageObjects/components/ElectronicsMenu.java?ref=e538d927bf96935d1aab1b85bae2918740e2f05d",
    "patch": "@@ -8,11 +8,12 @@\n import pl.allegro.pageObjects.utils.WaitWrapper;\n \n public class ElectronicsMenu extends AbstractPageObject {\n-    //constatly changing page....\n+    //constantly changing page....\n     //@FindBy(xpath = \"//div[@data-box-name='category - Elektronika']/descendant::a[text()='Komputery']\")\n     //@FindBy(xpath = \"//a[@title='Komputery stacjonarne']\")\n     //@FindBy(xpath=\"//div[@data-box-name='Komputery i tablety stara']/descendant::a[@title='Komputery stacjonarne'][2]\")\n-    @FindBy(xpath=\"//div[@data-box-name='category - Elektronika']/descendant::a[@href='/kategoria/komputery']\")\n+    //@FindBy(xpath=\"//div[@data-box-name='category - Elektronika']/descendant::a[@href='/kategoria/komputery']\")\n+    @FindBy(css=\"[data-box-name='category - Elektronika'] a[href*='komputery']\")\n \n     private WebElement computers;\n "
  },
  {
    "sha": "1004b6c2e3413c19011c64340bb7fb2b02e68e7b",
    "filename": "src/main/java/pl/allegro/pageObjects/components/ExternalAndPortableDiscsMenu.java",
    "status": "modified",
    "additions": 6,
    "deletions": 5,
    "changes": 11,
    "blob_url": "https://github.com/Miczura/seleniumTest/blob/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/components/ExternalAndPortableDiscsMenu.java",
    "raw_url": "https://github.com/Miczura/seleniumTest/raw/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/components/ExternalAndPortableDiscsMenu.java",
    "contents_url": "https://api.github.com/repos/Miczura/seleniumTest/contents/src/main/java/pl/allegro/pageObjects/components/ExternalAndPortableDiscsMenu.java?ref=e538d927bf96935d1aab1b85bae2918740e2f05d",
    "patch": "@@ -22,22 +22,23 @@\n     @FindBy(xpath = \"//section/descendant::h2[text()='Oferty']/following::article/div/div[2]/descendant::span[1]\")\n     private WebElement listOfProducts;\n     @FindBy(xpath = \"//div[@data-box-name='chipsAboveFilters']/descendant::div[text()='do 300 GB']\")\n-    private WebElement filterVelue;\n+    private WebElement filterValue;\n \n     public ExternalAndPortableDiscsMenu(WebDriver driver) {\n         super(driver);\n     }\n \n     @Step(\"Select filter for disc capacity from {0} to {1} Gb\")\n-    public ExternalAndPortableDiscsMenu setupfilteringDiscCapacity(String minCapacity,String maxCapacity){\n+    public ExternalAndPortableDiscsMenu setupFilteringDiscCapacity(String minCapacity, String maxCapacity){\n         WaitWrapper.waitForElement(getDriver(),5,fromCapacityFilter);\n+        fromCapacityFilter.click(); // without that this field may not be filled out\n         fromCapacityFilter.clear();\n         fromCapacityFilter.sendKeys(minCapacity);\n         toCapacityFilter.clear();\n \n         toCapacityFilter.sendKeys(maxCapacity);\n         toCapacityFilter.click();\n-        WaitWrapper.waitForElement(getDriver(),3,filterVelue);\n+        WaitWrapper.waitForElement(getDriver(),3, filterValue);\n         return this;\n     }\n \n@@ -58,11 +59,11 @@ public ExternalAndPortableDiscsMenu selectSortingMethod(){\n             try {\n                 List<WebElement> listOfWebElements = listOfProducts.\n                         findElements(By.xpath(\"//section/descendant::h2[text()='Oferty']/following::article/div/div[2]/descendant::span[1]\"));\n-                List<String> listOfStringsPrises = listOfWebElements.\n+                List<String> listOfStringsPrices = listOfWebElements.\n                         stream().\n                         map(webElement -> webElement.getText().replaceAll(\"zł\", \"\").replaceAll(\",\", \".\").trim()).\n                         collect(Collectors.toList());\n-                return listOfStringsPrises.\n+                return listOfStringsPrices.\n                         subList(0,35).\n                         stream().\n                         map(stringElement -> Double.parseDouble(stringElement.replaceAll(\" \", \"\")))."
  },
  {
    "sha": "17f1dc922d56ebfc6a64c1659f5edd5c050535f8",
    "filename": "src/main/java/pl/allegro/pageObjects/components/PortableDiscsAndMemoriesMenu.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/Miczura/seleniumTest/blob/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/components/PortableDiscsAndMemoriesMenu.java",
    "raw_url": "https://github.com/Miczura/seleniumTest/raw/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/components/PortableDiscsAndMemoriesMenu.java",
    "contents_url": "https://api.github.com/repos/Miczura/seleniumTest/contents/src/main/java/pl/allegro/pageObjects/components/PortableDiscsAndMemoriesMenu.java?ref=e538d927bf96935d1aab1b85bae2918740e2f05d",
    "patch": "@@ -9,7 +9,8 @@\n import pl.allegro.pageObjects.utils.WaitWrapper;\n \n public class PortableDiscsAndMemoriesMenu extends AbstractPageObject {\n-    @FindBy(xpath = \"//div[@data-box-name='categories container']/descendant::a[text()=' Dyski zewnętrzne i przenośne ']\")\n+    //@FindBy(xpath = \"//div[@data-box-name='categories container']/descendant::a[text()=' Dyski zewnętrzne i przenośne ']\")\n+    @FindBy(css = \"[data-role='Categories'] a[href*='dyski-zewnetrzne-i-przenosne']\")\n     private WebElement externalAndPortableDiscs;\n \n     public PortableDiscsAndMemoriesMenu(WebDriver driver) {"
  },
  {
    "sha": "f81b75731e5803fb40340a5b36afe6773be43337",
    "filename": "src/main/java/pl/allegro/pageObjects/pages/MainPage.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/Miczura/seleniumTest/blob/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/pages/MainPage.java",
    "raw_url": "https://github.com/Miczura/seleniumTest/raw/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/pages/MainPage.java",
    "contents_url": "https://api.github.com/repos/Miczura/seleniumTest/contents/src/main/java/pl/allegro/pageObjects/pages/MainPage.java?ref=e538d927bf96935d1aab1b85bae2918740e2f05d",
    "patch": "@@ -11,9 +11,11 @@\n public class MainPage extends AbstractPageObject {\n     private MainCategoriesMenu mainCategoriesMenu;\n \n-    @FindBy(xpath = \"//div[@id='dialog-content']\")\n+    //@FindBy(xpath = \"//div[@id='dialog-content']\")\n+    @FindBy(css = \"div[role='alertdialog']\")\n     WebElement consent;\n-    @FindBy(xpath = \"//button[text()='przejdź dalej']\")\n+    //@FindBy(xpath = \"//button[text()='przejdź dalej']\")\n+    @FindBy(css = \"[data-role='accept-consent']\")\n     WebElement button;\n \n     public MainPage(WebDriver driver){\n@@ -23,7 +25,7 @@ public MainPage(WebDriver driver){\n     @Step(\"Navigate to allegro.pl\")\n     public MainPage navigateToMainPage(){\n         getDriver().manage().window().maximize();\n-        getDriver().get(Url.allegroAddress);\n+        getDriver().get(Url.ALLEGRO_ADDRESS);\n         CookieWrapper.setupConsentManual(getDriver(),consent,button);\n         return this;\n     }"
  },
  {
    "sha": "fee7da3cd202df95523c3ead83a7ce12621ae6b8",
    "filename": "src/main/java/pl/allegro/pageObjects/utils/CookieWrapper.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/Miczura/seleniumTest/blob/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/utils/CookieWrapper.java",
    "raw_url": "https://github.com/Miczura/seleniumTest/raw/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/utils/CookieWrapper.java",
    "contents_url": "https://api.github.com/repos/Miczura/seleniumTest/contents/src/main/java/pl/allegro/pageObjects/utils/CookieWrapper.java?ref=e538d927bf96935d1aab1b85bae2918740e2f05d",
    "patch": "@@ -8,8 +8,8 @@\n \n \n public class CookieWrapper {\n-    //Friday, August 21, 2020 1:58:31 PM\n-    public static final long EPOCHINMILIS =1598018311000L;\n+    //Thursday, August 21, 2025 1:58:31 PM\n+    public static final long EPOCHINMILIS =1755741511L;\n \n     public static void addCookie(WebDriver driver,String name, String value, String domain, String path) {\n         driver.manage().addCookie("
  },
  {
    "sha": "7e8d0fe8db68720db78d9f270e14453973ec803d",
    "filename": "src/main/java/pl/allegro/pageObjects/utils/Url.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Miczura/seleniumTest/blob/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/utils/Url.java",
    "raw_url": "https://github.com/Miczura/seleniumTest/raw/e538d927bf96935d1aab1b85bae2918740e2f05d/src/main/java/pl/allegro/pageObjects/utils/Url.java",
    "contents_url": "https://api.github.com/repos/Miczura/seleniumTest/contents/src/main/java/pl/allegro/pageObjects/utils/Url.java?ref=e538d927bf96935d1aab1b85bae2918740e2f05d",
    "patch": "@@ -1,5 +1,5 @@\n package pl.allegro.pageObjects.utils;\n \n public class Url {\n-    public static final String allegroAddress=\"https://allegro.pl/\";\n+    public static final String ALLEGRO_ADDRESS =\"https://allegro.pl/\";\n }"
  },
  {
    "sha": "61bc59bf6d41825140cf0faeadcb38122cf41f81",
    "filename": "src/test/java/pl/allegro/disks/DiskFilteringAndSortingTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/Miczura/seleniumTest/blob/e538d927bf96935d1aab1b85bae2918740e2f05d/src/test/java/pl/allegro/disks/DiskFilteringAndSortingTest.java",
    "raw_url": "https://github.com/Miczura/seleniumTest/raw/e538d927bf96935d1aab1b85bae2918740e2f05d/src/test/java/pl/allegro/disks/DiskFilteringAndSortingTest.java",
    "contents_url": "https://api.github.com/repos/Miczura/seleniumTest/contents/src/test/java/pl/allegro/disks/DiskFilteringAndSortingTest.java?ref=e538d927bf96935d1aab1b85bae2918740e2f05d",
    "patch": "@@ -35,7 +35,7 @@ public void testIfProductsOnExternalAndPortableDiscsPageAreSortedWithExpectedFil\n        navigateToExternalAndPortableDiscPage();\n         //when\n        externalAndPortableDiscsPage.getExternalAndPortableDiscsMenu()\n-              .setupfilteringDiscCapacity(\"200\",\"300\")\n+              .setupFilteringDiscCapacity(\"200\",\"300\")\n               .selectSortingMethod();\n         //then checking if prices are sorted descending\n        externalAndPortableDiscsPage.getExternalAndPortableDiscsMenu()"
  }
]
