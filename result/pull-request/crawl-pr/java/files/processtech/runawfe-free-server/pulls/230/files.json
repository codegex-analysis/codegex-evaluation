[
  {
    "sha": "a7a90e0097340b40391986d4399f3be963268f95",
    "filename": "wfe-web/src/main/java/ru/runa/wf/web/ftl/component/AbstractSelectFromUserTypeList.java",
    "status": "added",
    "additions": 79,
    "deletions": 0,
    "changes": 79,
    "blob_url": "https://github.com/processtech/runawfe-free-server/blob/48f7cc164c1e9c265a11f555f7c86c2b4954fa87/wfe-web/src/main/java/ru/runa/wf/web/ftl/component/AbstractSelectFromUserTypeList.java",
    "raw_url": "https://github.com/processtech/runawfe-free-server/raw/48f7cc164c1e9c265a11f555f7c86c2b4954fa87/wfe-web/src/main/java/ru/runa/wf/web/ftl/component/AbstractSelectFromUserTypeList.java",
    "contents_url": "https://api.github.com/repos/processtech/runawfe-free-server/contents/wfe-web/src/main/java/ru/runa/wf/web/ftl/component/AbstractSelectFromUserTypeList.java?ref=48f7cc164c1e9c265a11f555f7c86c2b4954fa87",
    "patch": "@@ -0,0 +1,79 @@\n+package ru.runa.wf.web.ftl.component;\n+\n+import freemarker.template.TemplateModel;\n+import freemarker.template.TemplateModelException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import ru.runa.wfe.commons.TypeConversionUtil;\n+import ru.runa.wfe.commons.ftl.FormComponentSubmissionHandler;\n+import ru.runa.wfe.form.Interaction;\n+import ru.runa.wfe.var.UserTypeMap;\n+import ru.runa.wfe.var.VariableDefinition;\n+import ru.runa.wfe.var.dto.WfVariable;\n+\n+public abstract class AbstractSelectFromUserTypeList extends AbstractUserTypeList implements FormComponentSubmissionHandler {\n+\n+    private static final long serialVersionUID = -7344045578574357126L;\n+\n+    protected abstract boolean isMultiple();\n+\n+    @Override\n+    protected UserTypeListModel parseParameters() {\n+        String inputVariableName = getParameterAsString(0);\n+        WfVariable inputVariable = variableProvider.getVariableNotNull(inputVariableName);\n+        String displayVariableName = getParameterAsString(1);\n+        boolean componentView = getParameterAs(boolean.class, 2);\n+        WfVariable displayVariable = variableProvider.getVariableNotNull(displayVariableName);\n+        List<String> displayFields = getMultipleParameter(3);\n+        return new SelectUserTypeListModel(displayVariable, displayFields, componentView, inputVariable);\n+    }\n+\n+    @Override\n+    public Map<String, ? extends Object> extractVariables(Interaction interaction, VariableDefinition variableDefinition,\n+            Map<String, ? extends Object> userInput, Map<String, String> formatErrors) throws Exception {\n+        Object selected = null;\n+        final String variableName = getVariableNameForSubmissionProcessing();\n+        final String[] indexes = (String[]) userInput.get(variableName);\n+        if (indexes != null) {\n+            List<?> list = getParameterVariableValueNotNull(List.class, 1);\n+            if (isMultiple()) {\n+                selected = new ArrayList<>(indexes.length);\n+                for (String index : indexes) {\n+                    ((List<Object>) selected).add(list.get(TypeConversionUtil.convertTo(int.class, index)));\n+                }\n+            } else {\n+                selected = list.get(TypeConversionUtil.convertTo(int.class, indexes[0]));\n+            }\n+        }\n+        final Map<String, Object> result = new HashMap<>(1);\n+        result.put(variableName, selected);\n+        return result;\n+    }\n+\n+    public class SelectUserTypeListModel extends UserTypeListModel {\n+        private final WfVariable inputVariable;\n+\n+        public SelectUserTypeListModel(WfVariable variable, List<String> attributeNames, boolean componentView, WfVariable inputVariable) {\n+            super(variable, attributeNames, componentView);\n+            this.inputVariable = inputVariable;\n+        }\n+\n+        public WfVariable getInputVariable() {\n+            return inputVariable;\n+        }\n+\n+        public String getChecked(TemplateModel arg0) throws TemplateModelException {\n+            boolean checked = false;\n+            if (isMultiple()) {\n+                final UserTypeMap userTypeMap = (UserTypeMap) BEANS_WRAPPER.unwrap(arg0);\n+                final List<UserTypeMap> selectedList = (List<UserTypeMap>) getInputVariable().getValue();\n+                checked = selectedList != null && selectedList.contains(userTypeMap);\n+            }\n+            return checked ? \"checked='true'\" : \"\";\n+        }\n+\n+    }\n+\n+}"
  },
  {
    "sha": "0c093e62dcec0035929f37e16d22fb24ad74be1d",
    "filename": "wfe-web/src/main/java/ru/runa/wf/web/ftl/component/MultipleSelectFromUserTypeList.java",
    "status": "modified",
    "additions": 4,
    "deletions": 65,
    "changes": 69,
    "blob_url": "https://github.com/processtech/runawfe-free-server/blob/48f7cc164c1e9c265a11f555f7c86c2b4954fa87/wfe-web/src/main/java/ru/runa/wf/web/ftl/component/MultipleSelectFromUserTypeList.java",
    "raw_url": "https://github.com/processtech/runawfe-free-server/raw/48f7cc164c1e9c265a11f555f7c86c2b4954fa87/wfe-web/src/main/java/ru/runa/wf/web/ftl/component/MultipleSelectFromUserTypeList.java",
    "contents_url": "https://api.github.com/repos/processtech/runawfe-free-server/contents/wfe-web/src/main/java/ru/runa/wf/web/ftl/component/MultipleSelectFromUserTypeList.java?ref=48f7cc164c1e9c265a11f555f7c86c2b4954fa87",
    "patch": "@@ -1,73 +1,12 @@\n package ru.runa.wf.web.ftl.component;\n \n-import java.util.List;\n-import java.util.Map;\n+public class MultipleSelectFromUserTypeList extends AbstractSelectFromUserTypeList {\n \n-import ru.runa.wfe.commons.TypeConversionUtil;\n-import ru.runa.wfe.commons.ftl.FormComponentSubmissionHandler;\n-import ru.runa.wfe.form.Interaction;\n-import ru.runa.wfe.var.UserTypeMap;\n-import ru.runa.wfe.var.VariableDefinition;\n-import ru.runa.wfe.var.dto.WfVariable;\n-\n-import com.google.common.collect.Lists;\n-import com.google.common.collect.Maps;\n-\n-import freemarker.template.TemplateModel;\n-import freemarker.template.TemplateModelException;\n-\n-public class MultipleSelectFromUserTypeList extends AbstractUserTypeList implements FormComponentSubmissionHandler {\n-    private static final long serialVersionUID = 1L;\n-\n-    @Override\n-    protected UserTypeListModel parseParameters() {\n-        String inputVariableName = getParameterAsString(0);\n-        WfVariable inputVariable = variableProvider.getVariableNotNull(inputVariableName);\n-        String displayVariableName = getParameterAsString(1);\n-        boolean componentView = getParameterAs(boolean.class, 2);\n-        WfVariable displayVariable = variableProvider.getVariableNotNull(displayVariableName);\n-        List<String> displayFields = getMultipleParameter(3);\n-        return new SelectUserTypeListModel(displayVariable, displayFields, componentView, inputVariable);\n-    }\n+    private static final long serialVersionUID = 3883878151144701276L;\n \n     @Override\n-    public Map<String, ? extends Object> extractVariables(Interaction interaction, VariableDefinition variableDefinition,\n-            Map<String, ? extends Object> userInput, Map<String, String> formatErrors) throws Exception {\n-        final Map<String, Object> result = Maps.newHashMap();\n-        List<Object> selected = Lists.newArrayList();\n-        result.put(getVariableNameForSubmissionProcessing(), selected);\n-        String[] indexes = (String[]) userInput.get(getVariableNameForSubmissionProcessing());\n-        if (indexes != null) {\n-            List<?> list = getParameterVariableValueNotNull(List.class, 1);\n-            for (String index : indexes) {\n-                selected.add(list.get(TypeConversionUtil.convertTo(int.class, index)));\n-            }\n-        }\n-        return result;\n-    }\n-\n-    public class SelectUserTypeListModel extends UserTypeListModel {\n-        private final WfVariable inputVariable;\n-\n-        public SelectUserTypeListModel(WfVariable variable, List<String> attributeNames, boolean componentView, WfVariable inputVariable) {\n-            super(variable, attributeNames, componentView);\n-            this.inputVariable = inputVariable;\n-        }\n-\n-        public WfVariable getInputVariable() {\n-            return inputVariable;\n-        }\n-\n-        public String getChecked(TemplateModel arg0) throws TemplateModelException {\n-            UserTypeMap userTypeMap = (UserTypeMap) BEANS_WRAPPER.unwrap(arg0);\n-            List<UserTypeMap> selectedList = (List<UserTypeMap>) getInputVariable().getValue();\n-            boolean checked = selectedList != null && selectedList.contains(userTypeMap);\n-            if (checked) {\n-                return \"checked='true'\";\n-            }\n-            return \"\";\n-        }\n-\n+    protected boolean isMultiple() {\n+        return true;\n     }\n \n }"
  },
  {
    "sha": "8419083d8f75f6776cce59ecbc5b8a7089fb6859",
    "filename": "wfe-web/src/main/java/ru/runa/wf/web/ftl/component/SingleSelectFromUserTypeList.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/processtech/runawfe-free-server/blob/48f7cc164c1e9c265a11f555f7c86c2b4954fa87/wfe-web/src/main/java/ru/runa/wf/web/ftl/component/SingleSelectFromUserTypeList.java",
    "raw_url": "https://github.com/processtech/runawfe-free-server/raw/48f7cc164c1e9c265a11f555f7c86c2b4954fa87/wfe-web/src/main/java/ru/runa/wf/web/ftl/component/SingleSelectFromUserTypeList.java",
    "contents_url": "https://api.github.com/repos/processtech/runawfe-free-server/contents/wfe-web/src/main/java/ru/runa/wf/web/ftl/component/SingleSelectFromUserTypeList.java?ref=48f7cc164c1e9c265a11f555f7c86c2b4954fa87",
    "patch": "@@ -0,0 +1,11 @@\n+package ru.runa.wf.web.ftl.component;\n+\n+public class SingleSelectFromUserTypeList extends AbstractSelectFromUserTypeList {\n+\n+    private static final long serialVersionUID = 7198988804348108048L;\n+\n+    @Override\n+    protected boolean isMultiple() {\n+        return false;\n+    }\n+}"
  },
  {
    "sha": "c83b5fd4f30171c60a97414cbb5a45abd4cee0b5",
    "filename": "wfe-web/src/main/resources/ftl.form.components.xml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/processtech/runawfe-free-server/blob/48f7cc164c1e9c265a11f555f7c86c2b4954fa87/wfe-web/src/main/resources/ftl.form.components.xml",
    "raw_url": "https://github.com/processtech/runawfe-free-server/raw/48f7cc164c1e9c265a11f555f7c86c2b4954fa87/wfe-web/src/main/resources/ftl.form.components.xml",
    "contents_url": "https://api.github.com/repos/processtech/runawfe-free-server/contents/wfe-web/src/main/resources/ftl.form.components.xml?ref=48f7cc164c1e9c265a11f555f7c86c2b4954fa87",
    "patch": "@@ -31,5 +31,6 @@\n \t<component name=\"GetExecutorEmails\" class=\"ru.runa.wf.web.ftl.component.GetExecutorEmails\" />\n \t<component name=\"DisplayUserTypeList\" class=\"ru.runa.wf.web.ftl.component.DisplayUserTypeList\" />\n \t<component name=\"MultipleSelectFromUserTypeList\" class=\"ru.runa.wf.web.ftl.component.MultipleSelectFromUserTypeList\" />\n+\t<component name=\"SingleSelectFromUserTypeList\" class=\"ru.runa.wf.web.ftl.component.SingleSelectFromUserTypeList\" />\n     <component name=\"EditUserTypeList\" class=\"ru.runa.wf.web.ftl.component.EditUserTypeList\" />\n </configuration>"
  },
  {
    "sha": "44144186f49a6f78279f1eee15c7a0934248dc1a",
    "filename": "wfe-web/src/main/resources/templates/SingleSelectFromUserTypeList.ftl",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/processtech/runawfe-free-server/blob/48f7cc164c1e9c265a11f555f7c86c2b4954fa87/wfe-web/src/main/resources/templates/SingleSelectFromUserTypeList.ftl",
    "raw_url": "https://github.com/processtech/runawfe-free-server/raw/48f7cc164c1e9c265a11f555f7c86c2b4954fa87/wfe-web/src/main/resources/templates/SingleSelectFromUserTypeList.ftl",
    "contents_url": "https://api.github.com/repos/processtech/runawfe-free-server/contents/wfe-web/src/main/resources/templates/SingleSelectFromUserTypeList.ftl?ref=48f7cc164c1e9c265a11f555f7c86c2b4954fa87",
    "patch": "@@ -0,0 +1,22 @@\n+<div class=\"inputVariable ${model.uniqueName}\" variable=\"${model.variable.definition.name}\">\n+<table class=\"userTypeList list\">\n+\t<thead>\n+\t\t<tr>\n+\t\t\t<th class=\"list\"></th>\n+\t\t\t<#list model.attributes as attribute>\n+\t\t\t<th class=\"list\">${attribute.name}</th>\n+\t\t\t</#list>\n+\t\t</tr>\n+\t</thead>\n+\t<tbody>\n+\t\t<#list model.variableValue as row>\n+\t\t<tr>\t\t\t\n+\t\t\t<td class=\"list\"><input name=\"${model.inputVariable.definition.name}\" type=\"radio\" value=\"${row?index}\" /></td>\n+\t\t\t<#list model.attributes as attribute>\n+\t\t\t<td class=\"list\">${model.getValue(row, attribute, row?index)}</td>\n+\t\t\t</#list>\n+\t\t</tr>\n+\t\t</#list>\n+\t</tbody>\n+</table>\n+</div>\n\\ No newline at end of file"
  }
]
