[
  {
    "sha": "67765e30c16bb4fcdb71571fa5cc17997c4e2848",
    "filename": "src/main/java/seedu/address/logic/commands/EditCommand.java",
    "status": "modified",
    "additions": 15,
    "deletions": 2,
    "changes": 17,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/commands/EditCommand.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/commands/EditCommand.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/java/seedu/address/logic/commands/EditCommand.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -24,6 +24,7 @@\n import seedu.address.model.person.Name;\n import seedu.address.model.person.Person;\n import seedu.address.model.person.Phone;\n+import seedu.address.model.person.Remark;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -96,10 +97,11 @@ private static Person createEditedPerson(Person personToEdit, EditPersonDescript\n         Name updatedName = editPersonDescriptor.getName().orElse(personToEdit.getName());\n         Phone updatedPhone = editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());\n         Email updatedEmail = editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());\n+        Remark updatedRemark = editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());\n         Address updatedAddress = editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());\n         Set<Tag> updatedTags = editPersonDescriptor.getTags().orElse(personToEdit.getTags());\n \n-        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);\n+        return new Person(updatedName, updatedPhone, updatedEmail, updatedRemark, updatedAddress, updatedTags);\n     }\n \n     @Override\n@@ -128,6 +130,7 @@ public boolean equals(Object other) {\n         private Name name;\n         private Phone phone;\n         private Email email;\n+        private Remark remark;\n         private Address address;\n         private Set<Tag> tags;\n \n@@ -141,6 +144,7 @@ public EditPersonDescriptor(EditPersonDescriptor toCopy) {\n             setName(toCopy.name);\n             setPhone(toCopy.phone);\n             setEmail(toCopy.email);\n+            setRemark(toCopy.remark);\n             setAddress(toCopy.address);\n             setTags(toCopy.tags);\n         }\n@@ -149,7 +153,7 @@ public EditPersonDescriptor(EditPersonDescriptor toCopy) {\n          * Returns true if at least one field is edited.\n          */\n         public boolean isAnyFieldEdited() {\n-            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);\n+            return CollectionUtil.isAnyNonNull(name, phone, email, remark, address, tags);\n         }\n \n         public void setName(Name name) {\n@@ -176,6 +180,14 @@ public void setEmail(Email email) {\n             return Optional.ofNullable(email);\n         }\n \n+        public void setRemark(Remark remark) {\n+            this.remark = remark;\n+        }\n+\n+        public Optional<Remark> getRemark() {\n+            return Optional.ofNullable(remark);\n+        }\n+\n         public void setAddress(Address address) {\n             this.address = address;\n         }\n@@ -219,6 +231,7 @@ public boolean equals(Object other) {\n             return getName().equals(e.getName())\n                     && getPhone().equals(e.getPhone())\n                     && getEmail().equals(e.getEmail())\n+                    && getRemark().equals(e.getRemark())\n                     && getAddress().equals(e.getAddress())\n                     && getTags().equals(e.getTags());\n         }"
  },
  {
    "sha": "69070f10215ee10c652fd56fac5bc73e11c35793",
    "filename": "src/main/java/seedu/address/logic/commands/RemarkCommand.java",
    "status": "added",
    "additions": 90,
    "deletions": 0,
    "changes": 90,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/commands/RemarkCommand.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/commands/RemarkCommand.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/java/seedu/address/logic/commands/RemarkCommand.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -0,0 +1,90 @@\n+package seedu.address.logic.commands;\r\n+\r\n+import seedu.address.commons.core.Messages;\r\n+import seedu.address.commons.core.index.Index;\r\n+import seedu.address.logic.commands.exceptions.CommandException;\r\n+import seedu.address.model.Model;\r\n+import seedu.address.model.person.Person;\r\n+import seedu.address.model.person.Remark;\r\n+\r\n+import java.util.List;\r\n+\r\n+import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;\r\n+import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;\r\n+\r\n+/**\r\n+ * Changes the remark of an existing person in the address book.\r\n+ */\r\n+public class RemarkCommand extends Command {\r\n+\r\n+    public static final String COMMAND_WORD = \"remark\";\r\n+    public static final String MESSAGE_USAGE = COMMAND_WORD + \": Edits the remark of the person identified \"\r\n+            + \"by the index number used in the last person listing. \"\r\n+            + \"Existing remark will be overwritten by the input.\\n\"\r\n+            + \"Parameters: INDEX (must be a positive integer) \"\r\n+            + \"r/ [REMARK]\\n\"\r\n+            + \"Example: \" + COMMAND_WORD + \" 1 \"\r\n+            + \"r/ Likes to swim.\";\r\n+    public static final String MESSAGE_ARGUMENTS = \"Index: %1$d, Remark: %2$s\";\r\n+    public static final String MESSAGE_ADD_REMARK_SUCCESS = \"Added remark to Person: %1$s\";\r\n+    public static final String MESSAGE_DELETE_REMARK_SUCCESS = \"Removed remark from Person: %1$s\";\r\n+//...\r\n+\r\n+    private final Index index;\r\n+    private final Remark remark;\r\n+\r\n+    /**\r\n+     * @param index of the person in the filtered person list to edit the remark\r\n+     * @param remark of the person to be updated to\r\n+     */\r\n+    public RemarkCommand(Index index, Remark remark) {\r\n+        requireAllNonNull(index, remark);\r\n+\r\n+        this.index = index;\r\n+        this.remark = remark;\r\n+    }\r\n+    @Override\r\n+    public CommandResult execute(Model model) throws CommandException {\r\n+        List<Person> lastShownList = model.getFilteredPersonList();\r\n+\r\n+        if (index.getZeroBased() >= lastShownList.size()) {\r\n+            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);\r\n+        }\r\n+\r\n+        Person personToEdit = lastShownList.get(index.getZeroBased());\r\n+        Person editedPerson = new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),\r\n+                remark, personToEdit.getAddress(), personToEdit.getTags());\r\n+\r\n+        model.setPerson(personToEdit, editedPerson);\r\n+        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);\r\n+\r\n+        return new CommandResult(generateSuccessMessage(editedPerson));\r\n+    }\r\n+\r\n+    /**\r\n+     * Generates a command execution success message based on whether the remark is added to or removed from\r\n+     * {@code personToEdit}.\r\n+     */\r\n+    private String generateSuccessMessage(Person personToEdit) {\r\n+        String message = !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;\r\n+        return String.format(message, personToEdit);\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean equals(Object other) {\r\n+        // short circuit if same object\r\n+        if (other == this) {\r\n+            return true;\r\n+        }\r\n+\r\n+        // instanceof handles nulls\r\n+        if (!(other instanceof RemarkCommand)) {\r\n+            return false;\r\n+        }\r\n+\r\n+        // state check\r\n+        RemarkCommand e = (RemarkCommand) other;\r\n+        return index.equals(e.index)\r\n+                && remark.equals(e.remark);\r\n+    }\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "7b352358cdad8672e9e6640a67b33fd1ce11a7ec",
    "filename": "src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "status": "modified",
    "additions": 3,
    "deletions": 1,
    "changes": 4,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/parser/AddCommandParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/java/seedu/address/logic/parser/AddCommandParser.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -17,6 +17,7 @@\n import seedu.address.model.person.Name;\n import seedu.address.model.person.Person;\n import seedu.address.model.person.Phone;\n+import seedu.address.model.person.Remark;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -41,10 +42,11 @@ public AddCommand parse(String args) throws ParseException {\n         Name name = ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());\n         Phone phone = ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());\n         Email email = ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());\n+        Remark remark = new Remark(argMultimap.getValue(PREFIX_EMAIL).get());\n         Address address = ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());\n         Set<Tag> tagList = ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));\n \n-        Person person = new Person(name, phone, email, address, tagList);\n+        Person person = new Person(name, phone, email, remark, address, tagList);\n \n         return new AddCommand(person);\n     }"
  },
  {
    "sha": "575367df21113ea51473f3409d51b9cba989a196",
    "filename": "src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/parser/AddressBookParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/java/seedu/address/logic/parser/AddressBookParser.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -15,6 +15,7 @@\n import seedu.address.logic.commands.FindCommand;\n import seedu.address.logic.commands.HelpCommand;\n import seedu.address.logic.commands.ListCommand;\n+import seedu.address.logic.commands.RemarkCommand;\n import seedu.address.logic.parser.exceptions.ParseException;\n \n /**\n@@ -62,6 +63,9 @@ public Command parseCommand(String userInput) throws ParseException {\n         case ListCommand.COMMAND_WORD:\n             return new ListCommand();\n \n+        case RemarkCommand.COMMAND_WORD:\n+            return new RemarkCommandParser().parse(arguments);\n+\n         case ExitCommand.COMMAND_WORD:\n             return new ExitCommand();\n "
  },
  {
    "sha": "96be13b3772054877f32a657a7ffd8f9c85ad303",
    "filename": "src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/parser/CliSyntax.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/java/seedu/address/logic/parser/CliSyntax.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -11,5 +11,6 @@\n     public static final Prefix PREFIX_EMAIL = new Prefix(\"e/\");\n     public static final Prefix PREFIX_ADDRESS = new Prefix(\"a/\");\n     public static final Prefix PREFIX_TAG = new Prefix(\"t/\");\n+    public static final Prefix PREFIX_REMARK = new Prefix(\"r/\");\n \n }"
  },
  {
    "sha": "178c80715409f8905f557c038023a8968327fadd",
    "filename": "src/main/java/seedu/address/logic/parser/RemarkCommandParser.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/parser/RemarkCommandParser.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/logic/parser/RemarkCommandParser.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/java/seedu/address/logic/parser/RemarkCommandParser.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -0,0 +1,31 @@\n+package seedu.address.logic.parser;\r\n+\r\n+import seedu.address.commons.core.index.Index;\r\n+import seedu.address.commons.exceptions.IllegalValueException;\r\n+import seedu.address.logic.commands.RemarkCommand;\r\n+import seedu.address.logic.parser.exceptions.ParseException;\r\n+import seedu.address.model.person.Remark;\r\n+\r\n+import static java.util.Objects.requireNonNull;\r\n+import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;\r\n+import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;\r\n+\r\n+public class RemarkCommandParser implements Parser<RemarkCommand> {\r\n+    public RemarkCommand parse(String args) throws ParseException {\r\n+        requireNonNull(args);\r\n+        ArgumentMultimap argMultimap = ArgumentTokenizer.tokenize(args,\r\n+                PREFIX_REMARK);\r\n+\r\n+        Index index;\r\n+        try {\r\n+            index = ParserUtil.parseIndex(argMultimap.getPreamble());\r\n+        } catch (IllegalValueException ive) {\r\n+            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,\r\n+                    RemarkCommand.MESSAGE_USAGE), ive);\r\n+        }\r\n+\r\n+        Remark remark = new Remark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));\r\n+\r\n+        return new RemarkCommand(index, remark);\r\n+    }\r\n+}\r"
  },
  {
    "sha": "05b72ac9af9b9bc92041a7faccfb34a74328a3d8",
    "filename": "src/main/java/seedu/address/model/person/Person.java",
    "status": "modified",
    "additions": 11,
    "deletions": 2,
    "changes": 13,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/model/person/Person.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/model/person/Person.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/java/seedu/address/model/person/Person.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -19,6 +19,7 @@\n     private final Name name;\n     private final Phone phone;\n     private final Email email;\n+    private final Remark remark;\n \n     // Data fields\n     private final Address address;\n@@ -27,11 +28,12 @@\n     /**\n      * Every field must be present and not null.\n      */\n-    public Person(Name name, Phone phone, Email email, Address address, Set<Tag> tags) {\n+    public Person(Name name, Phone phone, Email email, Remark remark, Address address, Set<Tag> tags) {\n         requireAllNonNull(name, phone, email, address, tags);\n         this.name = name;\n         this.phone = phone;\n         this.email = email;\n+        this.remark = remark;\n         this.address = address;\n         this.tags.addAll(tags);\n     }\n@@ -48,6 +50,10 @@ public Email getEmail() {\n         return email;\n     }\n \n+    public Remark getRemark() {\n+        return remark;\n+    }\n+\n     public Address getAddress() {\n         return address;\n     }\n@@ -91,14 +97,15 @@ public boolean equals(Object other) {\n         return otherPerson.getName().equals(getName())\n                 && otherPerson.getPhone().equals(getPhone())\n                 && otherPerson.getEmail().equals(getEmail())\n+                && otherPerson.getRemark().equals(getRemark())\n                 && otherPerson.getAddress().equals(getAddress())\n                 && otherPerson.getTags().equals(getTags());\n     }\n \n     @Override\n     public int hashCode() {\n         // use this method for custom fields hashing instead of implementing your own\n-        return Objects.hash(name, phone, email, address, tags);\n+        return Objects.hash(name, phone, email, remark, address, tags);\n     }\n \n     @Override\n@@ -109,6 +116,8 @@ public String toString() {\n                 .append(getPhone())\n                 .append(\"; Email: \")\n                 .append(getEmail())\n+                .append(\"; Remark: \")\n+                .append(getRemark())\n                 .append(\"; Address: \")\n                 .append(getAddress());\n "
  },
  {
    "sha": "3f7470a511b8a12a6f6b04d1b1489a194bbf5f31",
    "filename": "src/main/java/seedu/address/model/person/Remark.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/model/person/Remark.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/model/person/Remark.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/java/seedu/address/model/person/Remark.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -0,0 +1,39 @@\n+package seedu.address.model.person;\r\n+\r\n+import static java.util.Objects.requireNonNull;\r\n+import static seedu.address.commons.util.AppUtil.checkArgument;\r\n+\r\n+public class Remark {\r\n+\r\n+\r\n+    public static final String MESSAGE_CONSTRAINTS =\r\n+            \"Remarks should only contain alphanumeric characters and spaces, they may be blank.\";\r\n+    public final String value;\r\n+\r\n+    /**\r\n+     * Constructs a {@code Phone}.\r\n+     *\r\n+     * @param remark A valid phone number.\r\n+     */\r\n+    public Remark(String remark) {\r\n+        requireNonNull(remark);\r\n+        this.value = remark;\r\n+    }\r\n+\r\n+    @Override\r\n+    public String toString() {\r\n+        return value;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean equals(Object other) {\r\n+        return other == this // short circuit if same object\r\n+                || (other instanceof Remark // instanceof handles nulls\r\n+                && value.equals(((Remark) other).value)); // state check\r\n+    }\r\n+\r\n+    @Override\r\n+    public int hashCode() {\r\n+        return value.hashCode();\r\n+    }\r\n+}\r"
  },
  {
    "sha": "1f68da3458583eb4292874d7890141e7d61cc766",
    "filename": "src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "status": "modified",
    "additions": 7,
    "deletions": 6,
    "changes": 13,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/model/util/SampleDataUtil.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/java/seedu/address/model/util/SampleDataUtil.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -11,6 +11,7 @@\n import seedu.address.model.person.Name;\n import seedu.address.model.person.Person;\n import seedu.address.model.person.Phone;\n+import seedu.address.model.person.Remark;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -20,22 +21,22 @@\n     public static Person[] getSamplePersons() {\n         return new Person[] {\n             new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),\n-                new Address(\"Blk 30 Geylang Street 29, #06-40\"),\n+                new Remark(\"\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),\n                 getTagSet(\"friends\")),\n             new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),\n-                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),\n+                new Remark(\"\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),\n                 getTagSet(\"colleagues\", \"friends\")),\n             new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),\n-                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),\n+                new Remark(\"\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),\n                 getTagSet(\"neighbours\")),\n             new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),\n-                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),\n+                new Remark(\"\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),\n                 getTagSet(\"family\")),\n             new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),\n-                new Address(\"Blk 47 Tampines Street 20, #17-35\"),\n+                new Remark(\"\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),\n                 getTagSet(\"classmates\")),\n             new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),\n-                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),\n+                new Remark(\"\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),\n                 getTagSet(\"colleagues\"))\n         };\n     }"
  },
  {
    "sha": "222cb0b05818def91e64af654ebd44c392877f39",
    "filename": "src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/storage/JsonAdaptedPerson.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/java/seedu/address/storage/JsonAdaptedPerson.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -15,6 +15,7 @@\n import seedu.address.model.person.Name;\n import seedu.address.model.person.Person;\n import seedu.address.model.person.Phone;\n+import seedu.address.model.person.Remark;\n import seedu.address.model.tag.Tag;\n \n /**\n@@ -94,6 +95,8 @@ public Person toModelType() throws IllegalValueException {\n         }\n         final Email modelEmail = new Email(email);\n \n+        Remark modelRemark = new Remark(\"\");\n+\n         if (address == null) {\n             throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));\n         }\n@@ -103,7 +106,7 @@ public Person toModelType() throws IllegalValueException {\n         final Address modelAddress = new Address(address);\n \n         final Set<Tag> modelTags = new HashSet<>(personTags);\n-        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);\n+        return new Person(modelName, modelPhone, modelEmail, modelRemark, modelAddress, modelTags);\n     }\n \n }"
  },
  {
    "sha": "0c2c79b079835ccc4c0431c7181fd31ecd618eda",
    "filename": "src/main/java/seedu/address/ui/PersonCard.java",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/ui/PersonCard.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/java/seedu/address/ui/PersonCard.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/java/seedu/address/ui/PersonCard.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -39,6 +39,8 @@\n     @FXML\n     private Label email;\n     @FXML\n+    private Label remark;\n+    @FXML\n     private FlowPane tags;\n \n     /**\n@@ -52,6 +54,7 @@ public PersonCard(Person person, int displayedIndex) {\n         phone.setText(person.getPhone().value);\n         address.setText(person.getAddress().value);\n         email.setText(person.getEmail().value);\n+        remark.setText(person.getRemark().value);\n         person.getTags().stream()\n                 .sorted(Comparator.comparing(tag -> tag.tagName))\n                 .forEach(tag -> tags.getChildren().add(new Label(tag.tagName)));"
  },
  {
    "sha": "d1a7eb614f8352b847c07754be9b80cd299dd51e",
    "filename": "src/main/resources/view/PersonListCard.fxml",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/resources/view/PersonListCard.fxml",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/main/resources/view/PersonListCard.fxml",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/main/resources/view/PersonListCard.fxml?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -31,6 +31,7 @@\n       <Label fx:id=\"phone\" styleClass=\"cell_small_label\" text=\"\\$phone\" />\n       <Label fx:id=\"address\" styleClass=\"cell_small_label\" text=\"\\$address\" />\n       <Label fx:id=\"email\" styleClass=\"cell_small_label\" text=\"\\$email\" />\n+      <Label fx:id=\"remark\" styleClass=\"cell_small_label\" text=\"\\$remark\" />\n     </VBox>\n   </GridPane>\n </HBox>"
  },
  {
    "sha": "4dabe33192b58dc52539db6149528648eb018fad",
    "filename": "src/test/java/seedu/address/logic/commands/RemarkCommandTest.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/test/java/seedu/address/logic/commands/RemarkCommandTest.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/test/java/seedu/address/logic/commands/RemarkCommandTest.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/test/java/seedu/address/logic/commands/RemarkCommandTest.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -0,0 +1,39 @@\n+package seedu.address.logic.commands;\r\n+\r\n+import org.junit.jupiter.api.Test;\r\n+import seedu.address.model.AddressBook;\r\n+import seedu.address.model.Model;\r\n+import seedu.address.model.ModelManager;\r\n+import seedu.address.model.UserPrefs;\r\n+import seedu.address.model.person.Person;\r\n+import seedu.address.model.person.Remark;\r\n+import seedu.address.testutil.PersonBuilder;\r\n+\r\n+import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;\r\n+import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;\r\n+import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;\r\n+\r\n+/**\r\n+ * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.\r\n+ */\r\n+public class RemarkCommandTest {\r\n+\r\n+    private static final String REMARK_STUB = \"Some remark\";\r\n+\r\n+    private Model model = new ModelManager(getTypicalAddressBook(), new UserPrefs());\r\n+\r\n+    @Test\r\n+    public void execute_addRemarkUnfilteredList_success() {\r\n+        Person firstPerson = model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());\r\n+        Person editedPerson = new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();\r\n+\r\n+        RemarkCommand remarkCommand = new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));\r\n+\r\n+        String expectedMessage = String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);\r\n+\r\n+        Model expectedModel = new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());\r\n+        expectedModel.setPerson(firstPerson, editedPerson);\r\n+\r\n+        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);\r\n+    }\r\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "196f3c91202fa83d8e5a3bcec307e7817e5c3f32",
    "filename": "src/test/java/seedu/address/testutil/PersonBuilder.java",
    "status": "modified",
    "additions": 11,
    "deletions": 1,
    "changes": 12,
    "blob_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/blob/df7e9d03ba139e7a91de1d6217fd680f580de402/src/test/java/seedu/address/testutil/PersonBuilder.java",
    "raw_url": "https://github.com/AY2021S2-CS2103-W17-1/tp/raw/df7e9d03ba139e7a91de1d6217fd680f580de402/src/test/java/seedu/address/testutil/PersonBuilder.java",
    "contents_url": "https://api.github.com/repos/AY2021S2-CS2103-W17-1/tp/contents/src/test/java/seedu/address/testutil/PersonBuilder.java?ref=df7e9d03ba139e7a91de1d6217fd680f580de402",
    "patch": "@@ -8,6 +8,7 @@\n import seedu.address.model.person.Name;\n import seedu.address.model.person.Person;\n import seedu.address.model.person.Phone;\n+import seedu.address.model.person.Remark;\n import seedu.address.model.tag.Tag;\n import seedu.address.model.util.SampleDataUtil;\n \n@@ -24,6 +25,7 @@\n     private Name name;\n     private Phone phone;\n     private Email email;\n+    private Remark remark;\n     private Address address;\n     private Set<Tag> tags;\n \n@@ -57,6 +59,14 @@ public PersonBuilder withName(String name) {\n         return this;\n     }\n \n+    /**\n+     * Sets the {@code Remark} of the {@code Person} that we are building.\n+     */\n+    public PersonBuilder withRemark(String remark) {\n+        this.remark = new Remark(remark);\n+        return this;\n+    }\n+\n     /**\n      * Parses the {@code tags} into a {@code Set<Tag>} and set it to the {@code Person} that we are building.\n      */\n@@ -90,7 +100,7 @@ public PersonBuilder withEmail(String email) {\n     }\n \n     public Person build() {\n-        return new Person(name, phone, email, address, tags);\n+        return new Person(name, phone, email, remark, address, tags);\n     }\n \n }"
  }
]
