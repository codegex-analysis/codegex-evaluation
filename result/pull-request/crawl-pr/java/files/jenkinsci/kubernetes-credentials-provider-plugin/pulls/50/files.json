[
  {
    "sha": "0d79a6f34afdd7318e847b84a02a96ac71d23c08",
    "filename": "docs/examples/README.md",
    "status": "modified",
    "additions": 7,
    "deletions": 1,
    "changes": 8,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/docs/examples/README.md",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/docs/examples/README.md",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/docs/examples/README.md?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -9,7 +9,7 @@ permalink: /examples/\n Credentials are added and updated by adding/updating them as secrets to Kubernetes.\n The format of the Secret is different depending on the type of credential you wish to expose, but will all have several things in common:\n \n-- the label  `\"jenkins.io/credentials-type\"` with a type that is known to the plugin (e.g. `certificate`, `secretFile`, `secretText`, `usernamePassword`, `basicSSHUserPrivateKey`, `aws`, `openstackCredentialv3`)\n+- the label  `\"jenkins.io/credentials-type\"` with a type that is known to the plugin (e.g. `certificate`, `secretFile`, `secretText`, `usernamePassword`, `basicSSHUserPrivateKey`, `aws`, `openstackCredentialv3`, `gitHubApp`)\n - the label  `\"jenkins.io/credentials-scope\"` with a type that is either `global` (default) or `system`\n - an annotation for the credential description: `\"jenkins.io/credentials-description\" : \"certificate credential from Kubernetes\"`\n \n@@ -70,6 +70,12 @@ Only AWS AccessKey and SecretKey:\n {% include_relative openstack-credential-v3.yaml %}\n {% endhighlight %}\n \n+## GitHub App\n+\n+{% highlight yaml linenos %}\n+{% include_relative gitHubApp.yaml %}\n+{% endhighlight %}\n+\n # Custom field mapping\n \n Sometimes you may want the secret to be able to be consumed by another tool as well that has a different requirement for the data fields."
  },
  {
    "sha": "5b0dc8261054739e3ebd3b79daab0f04872a0d0d",
    "filename": "docs/examples/gitHubApp.yaml",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/docs/examples/gitHubApp.yaml",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/docs/examples/gitHubApp.yaml",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/docs/examples/gitHubApp.yaml?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -0,0 +1,18 @@\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+# this is the jenkins id.\n+  name: \"another-test-githubapp\"\n+  labels:\n+# so we know what type it is.\n+    \"jenkins.io/credentials-type\": \"gitHubApp\"\n+  annotations:\n+# description - can not be a label as spaces are not allowed\n+    \"jenkins.io/credentials-description\" : \"credentials from Kubernetes\"\n+type: Opaque\n+stringData:\n+  appID: 1234\n+  privateKey: |-\n+    -----BEGIN PRIVATE KEY-----\n+    ...\n+    -----END PRIVATE KEY-----"
  },
  {
    "sha": "0942ec66edff311ac53b9443c941f4d5c630f415",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 28,
    "deletions": 6,
    "changes": 34,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/pom.xml",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/pom.xml",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/pom.xml?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -126,22 +126,38 @@\n         <artifactId>variant</artifactId>\r\n         <version>1.1</version>\r\n       </dependency>\r\n+      <dependency>\r\n+        <groupId>org.jenkins-ci.plugins</groupId>\r\n+        <artifactId>github-branch-source</artifactId>\r\n+        <version>2.7.1</version>\r\n+      </dependency>\r\n       <dependency>\r\n         <groupId>org.hamcrest</groupId>\r\n         <artifactId>hamcrest-core</artifactId>\r\n         <version>2.2</version>\r\n       </dependency>\r\n       <dependency>\r\n-        <groupId>org.awaitility</groupId>\r\n-        <artifactId>awaitility</artifactId>\r\n-        <version>3.0.0</version>\r\n+        <groupId>org.jenkins-ci.ui</groupId>\r\n+        <artifactId>jquery-detached</artifactId>\r\n+        <version>1.2.1</version>\r\n+      </dependency>\r\n+      <dependency>\r\n+        <groupId>org.jenkins-ci.plugins</groupId>\r\n+        <artifactId>jackson2-api</artifactId>\r\n+        <version>2.10.2</version>\r\n+      </dependency>\r\n+      <dependency>\r\n+        <groupId>org.apache.commons</groupId>\r\n+        <artifactId>commons-lang3</artifactId>\r\n+        <version>3.9</version>\r\n       </dependency>\r\n       <dependency>\r\n-          <groupId>org.jenkins-ci.ui</groupId>\r\n-          <artifactId>jquery-detached</artifactId>\r\n-          <version>1.2.1</version>\r\n+        <groupId>com.infradna.tool</groupId>\r\n+        <artifactId>bridge-method-annotation</artifactId>\r\n+        <version>1.15</version>\r\n       </dependency>\r\n     </dependencies>\r\n+\r\n   </dependencyManagement>\r\n \r\n   <dependencies>\r\n@@ -182,6 +198,12 @@\n       <groupId>org.jenkins-ci.plugins</groupId>\r\n       <artifactId>variant</artifactId>\r\n     </dependency>\r\n+      <!-- GitHub App credentials -->\r\n+    <dependency>\r\n+      <groupId>org.jenkins-ci.plugins</groupId>\r\n+      <artifactId>github-branch-source</artifactId>\r\n+      <optional>true</optional>\r\n+    </dependency>    \r\n     <!-- test deps -->\r\n     <dependency>\r\n       <groupId>junit</groupId>\r"
  },
  {
    "sha": "110e4613c6e22c476e5401cbd42132941583cf56",
    "filename": "src/main/java/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertor.java",
    "status": "added",
    "additions": 62,
    "deletions": 0,
    "changes": 62,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/main/java/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertor.java",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/main/java/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertor.java",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/src/main/java/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertor.java?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -0,0 +1,62 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2021 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package com.cloudbees.jenkins.plugins.kubernetes_credentials_provider.convertors;\n+\n+import com.cloudbees.jenkins.plugins.kubernetes_credentials_provider.CredentialsConvertionException;\n+import com.cloudbees.jenkins.plugins.kubernetes_credentials_provider.SecretToCredentialConverter;\n+import com.cloudbees.jenkins.plugins.kubernetes_credentials_provider.SecretUtils;\n+import hudson.Extension;\n+import io.fabric8.kubernetes.api.model.Secret;\n+import org.jenkinsci.plugins.github_branch_source.GitHubAppCredentials;\n+\n+/**\n+ * SecretToCredentialConvertor that converts {@link GitHubAppCredentials}.\n+ */\n+@Extension\n+public class GitHubAppCredentialsConvertor extends SecretToCredentialConverter {\n+\n+    @Override\n+    public boolean canConvert(String type) {\n+        return \"gitHubApp\".equals(type);\n+    }\n+\n+    @Override\n+    public GitHubAppCredentials convert(Secret secret) throws CredentialsConvertionException {\n+        SecretUtils.requireNonNull(secret.getData(), \"gitHubApp definition contains no data\");\n+\n+        String appIDBase64 = SecretUtils.getNonNullSecretData(secret, \"appID\", \"gitHubApp credential is missing the appID\");\n+\n+        String privateKeyBase64 = SecretUtils.getNonNullSecretData(secret, \"privateKey\", \"gitHubApp credential is missing the privateKey\");\n+\n+        String appID = SecretUtils.requireNonNull(SecretUtils.base64DecodeToString(appIDBase64), \"gitHubApp credential has an invalid appID (must be base64 encoded UTF-8)\");\n+\n+        String privateKey = SecretUtils.requireNonNull(SecretUtils.base64DecodeToString(privateKeyBase64), \"gitHubApp credential has an invalid privateKey (must be base64 encoded data)\");\n+\n+        hudson.util.Secret privateKeySecret = hudson.util.Secret.fromString(privateKey);\n+\n+        return new GitHubAppCredentials(SecretUtils.getCredentialScope(secret), SecretUtils.getCredentialId(secret), SecretUtils.getCredentialDescription(secret), appID, privateKeySecret);\n+\n+    }\n+\n+}"
  },
  {
    "sha": "74f3b7dfb2e0ec6e6d2b5d4ecb8c179215f2f7df",
    "filename": "src/test/java/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest.java",
    "status": "added",
    "additions": 187,
    "deletions": 0,
    "changes": 187,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/java/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest.java",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/java/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest.java",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/src/test/java/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest.java?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -0,0 +1,187 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright 2021 CloudBees, Inc.\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package com.cloudbees.jenkins.plugins.kubernetes_credentials_provider.convertors;\n+\n+import com.cloudbees.jenkins.plugins.kubernetes_credentials_provider.CredentialsConvertionException;\n+import com.cloudbees.plugins.credentials.CredentialsScope;\n+import com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl;\n+import io.fabric8.kubernetes.api.model.Secret;\n+import io.fabric8.kubernetes.client.utils.Serialization;\n+import java.io.InputStream;\n+import org.jenkinsci.plugins.github_branch_source.GitHubAppCredentials;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+\n+import static org.hamcrest.CoreMatchers.containsString;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.hamcrest.CoreMatchers.startsWith;\n+import static org.hamcrest.Matchers.emptyString;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.fail;\n+\n+/**\n+ * Tests {@link GitHubAppCredentialsConvertor}\n+ */\n+public class GitHubAppCredentialsConvertorTest {\n+\n+\n+    @Test\n+    public void canConvert() throws Exception {\n+        GitHubAppCredentialsConvertor convertor = new GitHubAppCredentialsConvertor();\n+        assertThat(\"correct registration of valid type\", convertor.canConvert(\"gitHubApp\"), is(true));\n+        assertThat(\"incorrect type is rejected\", convertor.canConvert(\"something\"), is(false));\n+    }\n+\n+    @Test\n+    public void canConvertAValidSecret() throws Exception {\n+        GitHubAppCredentialsConvertor convertor = new GitHubAppCredentialsConvertor();\n+\n+        try (InputStream is = get(\"valid.yaml\")) {\n+            Secret secret = Serialization.unmarshal(is, Secret.class);\n+            assertThat(\"The Secret was loaded correctly from disk\", notNullValue());\n+            GitHubAppCredentials credential = convertor.convert(secret);\n+            assertThat(credential, notNullValue());\n+            assertThat(\"credential id is mapped correctly\", credential.getId(), is(\"a-test-githubapp\"));\n+            assertThat(\"credential description is mapped correctly\", credential.getDescription(), is(\"credentials from Kubernetes\"));\n+            assertThat(\"credential scope is mapped correctly\", credential.getScope(), is(CredentialsScope.GLOBAL));\n+            assertThat(\"credential appID is mapped correctly\", credential.getAppID(), is(\"1234\"));\n+            assertThat(\"credential privateKey is mapped correctly\", credential.getPrivateKey().getPlainText(), is(notNullValue()));\n+            assertThat(\"credential privateKey is mapped correctly\", credential.getPrivateKey().getPlainText(), startsWith(\"-----BEGIN PRIVATE KEY-----\"));\n+        }\n+    }\n+\n+    @Test\n+    public void canConvertAValidSecretWithNoDescription() throws Exception {\n+        GitHubAppCredentialsConvertor convertor = new GitHubAppCredentialsConvertor();\n+\n+        try (InputStream is = get(\"valid-no-desc.yaml\")) {\n+            Secret secret = Serialization.unmarshal(is, Secret.class);\n+            assertThat(\"The Secret was loaded correctly from disk\", notNullValue());\n+            GitHubAppCredentials credential = convertor.convert(secret);\n+            assertThat(credential, notNullValue());\n+            assertThat(\"credential id is mapped correctly\", credential.getId(), is(\"a-test-githubapp\"));\n+            assertThat(\"credential description is mapped correctly\", credential.getDescription(), is(emptyString()));\n+            assertThat(\"credential scope is mapped correctly\", credential.getScope(), is(CredentialsScope.GLOBAL));\n+            assertThat(\"credential appID is mapped correctly\", credential.getAppID(), is(\"1234\"));\n+            assertThat(\"credential privateKey is mapped correctly\", credential.getPrivateKey().getPlainText(), is(notNullValue()));\n+            assertThat(\"credential privateKey is mapped correctly\", credential.getPrivateKey().getPlainText(), startsWith(\"-----BEGIN PRIVATE KEY-----\"));\n+        }\n+    }\n+\n+    @Test\n+    public void canConvertAValidScopedSecret() throws Exception {\n+        GitHubAppCredentialsConvertor convertor = new GitHubAppCredentialsConvertor();\n+\n+        try (InputStream is = get(\"validScoped.yaml\")) {\n+            Secret secret = Serialization.unmarshal(is, Secret.class);\n+            assertThat(\"The Secret was loaded correctly from disk\", notNullValue());\n+            GitHubAppCredentials credential = convertor.convert(secret);\n+            assertThat(credential, notNullValue());\n+            assertThat(\"credential id is mapped correctly\", credential.getId(), is(\"a-test-githubapp\"));\n+            assertThat(\"credential description is mapped correctly\", credential.getDescription(), is(\"credentials from Kubernetes\"));\n+            assertThat(\"credential scope is mapped correctly\", credential.getScope(), is(CredentialsScope.SYSTEM));\n+            assertThat(\"credential appID is mapped correctly\", credential.getAppID(), is(\"1234\"));\n+            assertThat(\"credential privateKey is mapped correctly\", credential.getPrivateKey().getPlainText(), is(notNullValue()));\n+            assertThat(\"credential privateKey is mapped correctly\", credential.getPrivateKey().getPlainText(), startsWith(\"-----BEGIN PRIVATE KEY-----\"));\n+        }\n+    }\n+\n+    @Test\n+    public void failsToConvertWhenAppIdMissing() throws Exception {\n+        GitHubAppCredentialsConvertor convertor = new GitHubAppCredentialsConvertor();\n+        \n+        try (InputStream is = get(\"missingAppId.yaml\")) {\n+            Secret secret = Serialization.unmarshal(is, Secret.class);\n+            convertor.convert(secret);\n+            fail(\"Exception should have been thrown\");\n+        } catch (CredentialsConvertionException cex) {\n+            assertThat(cex.getMessage(), containsString(\"missing the appID\"));\n+        }\n+    }\n+\n+    \n+    @Test\n+    public void failsToConvertWhenPrivateKeyMissing() throws Exception {\n+        GitHubAppCredentialsConvertor convertor = new GitHubAppCredentialsConvertor();\n+\n+        try (InputStream is = get(\"missingPrivateKey.yaml\")) {\n+            Secret secret = Serialization.unmarshal(is, Secret.class);\n+            convertor.convert(secret);\n+            fail(\"Exception should have been thrown\");\n+        } catch (CredentialsConvertionException cex) {\n+            assertThat(cex.getMessage(), containsString(\"missing the privateKey\"));\n+        }\n+    }\n+\n+    @Test\n+    public void failsToConvertWhenAppIdCorrupt() throws Exception {\n+        GitHubAppCredentialsConvertor convertor = new GitHubAppCredentialsConvertor();\n+        \n+        try (InputStream is = get(\"corruptAppId.yaml\")) {\n+            Secret secret = Serialization.unmarshal(is, Secret.class);\n+            convertor.convert(secret);\n+            fail(\"Exception should have been thrown\");\n+        } catch (CredentialsConvertionException cex) {\n+            assertThat(cex.getMessage(), containsString(\"invalid appID\"));\n+        }\n+    }\n+\n+\n+    @Test\n+    public void failsToConvertWhenPrivateKeyCorrupt() throws Exception {\n+        GitHubAppCredentialsConvertor convertor = new GitHubAppCredentialsConvertor();\n+\n+        try (InputStream is = get(\"corruptPrivateKey.yaml\")) {\n+            Secret secret = Serialization.unmarshal(is, Secret.class);\n+            convertor.convert(secret);\n+            fail(\"Exception should have been thrown\");\n+        } catch (CredentialsConvertionException cex) {\n+            assertThat(cex.getMessage(), containsString(\"invalid privateKey\"));\n+        }\n+    }\n+\n+\n+    @Test\n+    public void failsToConvertWhenDataEmpty() throws Exception {\n+        GitHubAppCredentialsConvertor convertor = new GitHubAppCredentialsConvertor();\n+        \n+        try (InputStream is = get(\"void.yaml\")) {\n+            Secret secret = Serialization.unmarshal(is, Secret.class);\n+            convertor.convert(secret);\n+            fail(\"Exception should have been thrown\");\n+        } catch (CredentialsConvertionException cex) {\n+            assertThat(cex.getMessage(), containsString(\"contains no data\"));\n+        }\n+    }\n+\n+\n+    private static final InputStream get(String resource) {\n+        InputStream is = GitHubAppCredentialsConvertorTest.class.getResourceAsStream(\"GitHubAppCredentialsConvertorTest/\" + resource);\n+        if (is == null) {\n+            fail(\"failed to load resource \" + resource);\n+        }\n+        return is;\n+    }\n+}"
  },
  {
    "sha": "0d3121a9b4c74b8ad10fa1227c67401e76142a29",
    "filename": "src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/corruptAppId.yaml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/corruptAppId.yaml",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/corruptAppId.yaml",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/corruptAppId.yaml?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -0,0 +1,16 @@\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+# this is the jenkins id.\n+  name: \"a-test-githubapp\"\n+  labels:\n+# so we know what type it is.\n+    \"jenkins.io/credentials-type\": \"gitHubApp\"\n+  annotations:\n+# description - can not be a label as spaces are not allowed\n+    \"jenkins.io/credentials-description\" : \"credentials from Kubernetes\"\n+type: Opaque\n+data:\n+# UTF-8 base64 encoded\n+  appID: hello                #not base64\n+  privateKey: UGEkJHdvcmQ=    #Pa$$word"
  },
  {
    "sha": "fa278e537666f050ccc42ada5ecfdd36259e7405",
    "filename": "src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/corruptPrivateKey.yaml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/corruptPrivateKey.yaml",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/corruptPrivateKey.yaml",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/corruptPrivateKey.yaml?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -0,0 +1,16 @@\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+# this is the jenkins id.\n+  name: \"a-test-githubapp\"\n+  labels:\n+# so we know what type it is.\n+    \"jenkins.io/credentials-type\": \"gitHubApp\"\n+  annotations:\n+# description - can not be a label as spaces are not allowed\n+    \"jenkins.io/credentials-description\" : \"credentials from Kubernetes\"\n+type: Opaque\n+data:\n+# UTF-8 base64 encoded\n+  appID: MTIzNA==             #1234\n+  privateKey: bohus           #not valid base64"
  },
  {
    "sha": "0c6301f2c2c728eec53a7f47586f7da9242ec8c1",
    "filename": "src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/missingAppId.yaml",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/missingAppId.yaml",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/missingAppId.yaml",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/missingAppId.yaml?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -0,0 +1,15 @@\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+# this is the jenkins id.\n+  name: \"a-test-githubapp\"\n+  labels:\n+# so we know what type it is.\n+    \"jenkins.io/credentials-type\": \"gitHubApp\"\n+  annotations:\n+# description - can not be a label as spaces are not allowed\n+    \"jenkins.io/credentials-description\" : \"credentials from Kubernetes\"\n+type: Opaque\n+data:\n+# UTF-8 base64 encoded\n+  privateKey: UGEkJHdvcmQ=         #Pa$$word"
  },
  {
    "sha": "b7b10c04b2cd8079f68379547c9352ac24e98889",
    "filename": "src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/missingPrivateKey.yaml",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/missingPrivateKey.yaml",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/missingPrivateKey.yaml",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/missingPrivateKey.yaml?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -0,0 +1,15 @@\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+# this is the jenkins id.\n+  name: \"a-test-githubapp\"\n+  labels:\n+# so we know what type it is.\n+    \"jenkins.io/credentials-type\": \"gitHubApp\"\n+  annotations:\n+# description - can not be a label as spaces are not allowed\n+    \"jenkins.io/credentials-description\" : \"credentials from Kubernetes\"\n+type: Opaque\n+data:\n+# UTF-8 base64 encoded\n+  appID: MTIzNA==                 #1234"
  },
  {
    "sha": "40151b8927f1860d28962481e0c36a78acfe28ff",
    "filename": "src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/valid-no-desc.yaml",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/valid-no-desc.yaml",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/valid-no-desc.yaml",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/valid-no-desc.yaml?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -0,0 +1,13 @@\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+# this is the jenkins id.\n+  name: \"a-test-githubapp\"\n+  labels:\n+# so we know what type it is.\n+    \"jenkins.io/credentials-type\": \"gitHubApp\"\n+type: Opaque\n+data:\n+# UTF-8 base64 encoded\n+  appID: MTIzNA==                    #1234\n+  privateKey: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQ0VNNWE5YjNQQmZxTjIKWmt4bzlFTnJCaTNJMGxvdkhXdzNveW9EMTRId2tTRWxZZVRUYUpQNlBMNzlzWENiVzBqQVFOcjMvL1AwWlZkNApCcXdxMVprMlY0WklpQ0pTRFFvcWluREdmSzdYeFlCRTRpbyttK1U3S3RxWUtCU09HODJtZS8zRTBNRG0xeEJHCjJ6bnl6dTVQTFdrellDeEtlTUw3UlRqTnhZMkNSa01JQjdoRjFEaTRoS2dlbStoQ0VlOGtUWU5PcVp0S3dmL2kKVThva0dIdC9sN3Fla05wLzFCTThKam9RY0s4STY5MWpkZVd5cGU0dnEvcXJ4blRwbU1NY2JyMU9HeVE5SEhPdwppdHk1S3dXMHNZTm9uTjdjd1RhTDB4cm5xVERXdWZkSTlqbVIwK0VKakpDUHRuZHI3Ry9tdFNBVkZRejdVcTgzCkxhMmpERTBIQWdNQkFBRUNnZ0VBYkQ1QlFrSXJLVmNqU0NKaWxkektCcXM4ZVoyaU1jbUpmZFNlNWg1aVNqTEsKVE8xbWlxS3A1czR1STFKUnZTSjA0dFUzZEsraGM0NDJuQlA2aStmd1ZzbzdMTkFxS2J4N2duRnYvVlRCWS9KVwpJQkIrUGwwdXg4OUN4Q3F0Q2Q1QjkvcTF3WnliRldjcDhKbzNURk9hVkVIK1RRNkZ0VVJEZ2JFZjNYdlBiY1laCndBTXZLWEJsdFRDNS9HNmU4clY0VGhRKzlmUHphQ0U1ZmhqR25wTXBLaHhEdHIwZGlIcGNzeTg5bEpqZDVOdUsKeDJENEcxQzJrQUF4a2RWWkVwRXBKd29Uek8xbDN4ZlJ1RUJ4OFBxcE4zSWN5Q3hUZFU1UFhWS0dmYmlTTXcvTgpHMXFRcUpXUFZ4VG5weTJ0clBDb2p5aThsZ01jZDdTcDIyeTVtZUk2SVFLQmdRRHdJM1VuUE5CaWNjejRjRWRlClVWZk5jb0dnc291ME4zMzlVeW5TZ0xvZTJRSUdTalpDL0Z5c2h4UUhmWmEvZE1oRXFhZzdHTy9Jd0lOZHJLZEsKRGIxY0hjaXpNYkJvOUpvT0JSeDd3MkxueDRyd01BakpvWEVrN2ZMOWVMQlFaVytRbXdZR1JUaXI4ZGFvcUc4aApETUdsMFVrdCtPZkFRZDNlOGVCS0dtY0JQUUtCZ1FDTTd3R3NJVmthdlNlaHVjYjIwbjlYVzc5K3kyM1YxOEx4CmNlWVE4Z293QWw0bER1Z052ck51V2kyeFV4QlpXU0NRYVNQbnpITVpLUTJmUzhQRHR3ajVZVjZGZ2RhRXpIRWsKWXM5QTFoNjBvb0F3TlBkcGpWeWFiT0ZNakd3QmEzKzM4SHVRZDVJa3JaYVQwcVM1NExFMEpnU04vS2N3MllLeQoyQml0Sk54amt3S0JnQzRIZmVOQmd1Zjd6RUFxdFdOYzBDbXZNeTJzUzU4RnEvNnN2QzEvUXkyNmh1clJ1c2pvCk9wTlBhUVZ1aTBDemo5ZXBkWGV1ZGZmUy90c3J4djBvMlEwWklHbElzdm5MT09STEVvU2VsUXk4Y09OTk1jSUUKVWYyMEpvbHpZc2htU1JZOHdORGUzOWdGaVJIWEIwWWNmZG5jM2R3VUE4Z1VXQVR0OUFJQVFaSTVBb0dBQ1JuRgorZCtOYVhTZGdvd0VsUnV5cldsM1REREd2dkJYM2srRWs4T05kTnd5U0NKV1NjenV1VW1KZWRIclZGbTFDSjVCCmUwNXdnRWR1WWNMNnVVQ3dpNm9GK0lrUjJURjZmT2NFaXlOSWlGR1dCWWJtRXlMVndBTVg2V0dIOSsrQko5ZVgKb3hTVmsxakNTSGxwdWJjUXVsVmFKZkVTdXN6UTY4dVlqRlc5QlpFQ2dZQTk5UFVYUjBhREFydHNVMW9JL2Yzdwo2eGx1Z3RaRGIvQTV3VUJsRVBsZWdUMkFZZTRGT3M5WE1qZXdtTGZ3UWYxSkJBdXpIbFJmZ1BBWjVRazR2ckF4CkdzZDJaNkRxSW5oVnJnMHlyUG9CU0dmeE05amtmUUlrQWRzRG10eW1PS0ZmK0NSTkk2eUg2Wm4wVjRWdDJUUWQKbERjQTJSNEdEN0dhVGRDR2hnUjZyZz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"
  },
  {
    "sha": "cf80acf3803614d4750145788ebdab7ef9fb6c9b",
    "filename": "src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/valid.yaml",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/valid.yaml",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/valid.yaml",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/valid.yaml?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -0,0 +1,16 @@\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+# this is the jenkins id.\n+  name: \"a-test-githubapp\"\n+  labels:\n+# so we know what type it is.\n+    \"jenkins.io/credentials-type\": \"gitHubApp\"\n+  annotations:\n+# description - can not be a label as spaces are not allowed\n+    \"jenkins.io/credentials-description\" : \"credentials from Kubernetes\"\n+type: Opaque\n+data:\n+# UTF-8 base64 encoded\n+  appID: MTIzNA==                    #1234\n+  privateKey: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQ0VNNWE5YjNQQmZxTjIKWmt4bzlFTnJCaTNJMGxvdkhXdzNveW9EMTRId2tTRWxZZVRUYUpQNlBMNzlzWENiVzBqQVFOcjMvL1AwWlZkNApCcXdxMVprMlY0WklpQ0pTRFFvcWluREdmSzdYeFlCRTRpbyttK1U3S3RxWUtCU09HODJtZS8zRTBNRG0xeEJHCjJ6bnl6dTVQTFdrellDeEtlTUw3UlRqTnhZMkNSa01JQjdoRjFEaTRoS2dlbStoQ0VlOGtUWU5PcVp0S3dmL2kKVThva0dIdC9sN3Fla05wLzFCTThKam9RY0s4STY5MWpkZVd5cGU0dnEvcXJ4blRwbU1NY2JyMU9HeVE5SEhPdwppdHk1S3dXMHNZTm9uTjdjd1RhTDB4cm5xVERXdWZkSTlqbVIwK0VKakpDUHRuZHI3Ry9tdFNBVkZRejdVcTgzCkxhMmpERTBIQWdNQkFBRUNnZ0VBYkQ1QlFrSXJLVmNqU0NKaWxkektCcXM4ZVoyaU1jbUpmZFNlNWg1aVNqTEsKVE8xbWlxS3A1czR1STFKUnZTSjA0dFUzZEsraGM0NDJuQlA2aStmd1ZzbzdMTkFxS2J4N2duRnYvVlRCWS9KVwpJQkIrUGwwdXg4OUN4Q3F0Q2Q1QjkvcTF3WnliRldjcDhKbzNURk9hVkVIK1RRNkZ0VVJEZ2JFZjNYdlBiY1laCndBTXZLWEJsdFRDNS9HNmU4clY0VGhRKzlmUHphQ0U1ZmhqR25wTXBLaHhEdHIwZGlIcGNzeTg5bEpqZDVOdUsKeDJENEcxQzJrQUF4a2RWWkVwRXBKd29Uek8xbDN4ZlJ1RUJ4OFBxcE4zSWN5Q3hUZFU1UFhWS0dmYmlTTXcvTgpHMXFRcUpXUFZ4VG5weTJ0clBDb2p5aThsZ01jZDdTcDIyeTVtZUk2SVFLQmdRRHdJM1VuUE5CaWNjejRjRWRlClVWZk5jb0dnc291ME4zMzlVeW5TZ0xvZTJRSUdTalpDL0Z5c2h4UUhmWmEvZE1oRXFhZzdHTy9Jd0lOZHJLZEsKRGIxY0hjaXpNYkJvOUpvT0JSeDd3MkxueDRyd01BakpvWEVrN2ZMOWVMQlFaVytRbXdZR1JUaXI4ZGFvcUc4aApETUdsMFVrdCtPZkFRZDNlOGVCS0dtY0JQUUtCZ1FDTTd3R3NJVmthdlNlaHVjYjIwbjlYVzc5K3kyM1YxOEx4CmNlWVE4Z293QWw0bER1Z052ck51V2kyeFV4QlpXU0NRYVNQbnpITVpLUTJmUzhQRHR3ajVZVjZGZ2RhRXpIRWsKWXM5QTFoNjBvb0F3TlBkcGpWeWFiT0ZNakd3QmEzKzM4SHVRZDVJa3JaYVQwcVM1NExFMEpnU04vS2N3MllLeQoyQml0Sk54amt3S0JnQzRIZmVOQmd1Zjd6RUFxdFdOYzBDbXZNeTJzUzU4RnEvNnN2QzEvUXkyNmh1clJ1c2pvCk9wTlBhUVZ1aTBDemo5ZXBkWGV1ZGZmUy90c3J4djBvMlEwWklHbElzdm5MT09STEVvU2VsUXk4Y09OTk1jSUUKVWYyMEpvbHpZc2htU1JZOHdORGUzOWdGaVJIWEIwWWNmZG5jM2R3VUE4Z1VXQVR0OUFJQVFaSTVBb0dBQ1JuRgorZCtOYVhTZGdvd0VsUnV5cldsM1REREd2dkJYM2srRWs4T05kTnd5U0NKV1NjenV1VW1KZWRIclZGbTFDSjVCCmUwNXdnRWR1WWNMNnVVQ3dpNm9GK0lrUjJURjZmT2NFaXlOSWlGR1dCWWJtRXlMVndBTVg2V0dIOSsrQko5ZVgKb3hTVmsxakNTSGxwdWJjUXVsVmFKZkVTdXN6UTY4dVlqRlc5QlpFQ2dZQTk5UFVYUjBhREFydHNVMW9JL2Yzdwo2eGx1Z3RaRGIvQTV3VUJsRVBsZWdUMkFZZTRGT3M5WE1qZXdtTGZ3UWYxSkJBdXpIbFJmZ1BBWjVRazR2ckF4CkdzZDJaNkRxSW5oVnJnMHlyUG9CU0dmeE05amtmUUlrQWRzRG10eW1PS0ZmK0NSTkk2eUg2Wm4wVjRWdDJUUWQKbERjQTJSNEdEN0dhVGRDR2hnUjZyZz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K"
  },
  {
    "sha": "838a20e71451a7dda68f892ee663a3d1b4f4d621",
    "filename": "src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/validScoped.yaml",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/validScoped.yaml",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/validScoped.yaml",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/validScoped.yaml?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -0,0 +1,19 @@\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+# this is the jenkins id.\n+  name: \"a-test-githubapp\"\n+  labels:\n+# so we know what type it is.\n+    \"jenkins.io/credentials-type\": \"gitHubApp\"\n+# set the scope (default global)\n+    \"jenkins.io/credentials-scope\": \"system\"\n+  annotations:\n+# description - can not be a label as spaces are not allowed\n+    \"jenkins.io/credentials-description\" : \"credentials from Kubernetes\"\n+type: Opaque\n+data:\n+# UTF-8 base64 encoded\n+  appID: MTIzNA==                    #1234\n+  privateKey: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQ0VNNWE5YjNQQmZxTjIKWmt4bzlFTnJCaTNJMGxvdkhXdzNveW9EMTRId2tTRWxZZVRUYUpQNlBMNzlzWENiVzBqQVFOcjMvL1AwWlZkNApCcXdxMVprMlY0WklpQ0pTRFFvcWluREdmSzdYeFlCRTRpbyttK1U3S3RxWUtCU09HODJtZS8zRTBNRG0xeEJHCjJ6bnl6dTVQTFdrellDeEtlTUw3UlRqTnhZMkNSa01JQjdoRjFEaTRoS2dlbStoQ0VlOGtUWU5PcVp0S3dmL2kKVThva0dIdC9sN3Fla05wLzFCTThKam9RY0s4STY5MWpkZVd5cGU0dnEvcXJ4blRwbU1NY2JyMU9HeVE5SEhPdwppdHk1S3dXMHNZTm9uTjdjd1RhTDB4cm5xVERXdWZkSTlqbVIwK0VKakpDUHRuZHI3Ry9tdFNBVkZRejdVcTgzCkxhMmpERTBIQWdNQkFBRUNnZ0VBYkQ1QlFrSXJLVmNqU0NKaWxkektCcXM4ZVoyaU1jbUpmZFNlNWg1aVNqTEsKVE8xbWlxS3A1czR1STFKUnZTSjA0dFUzZEsraGM0NDJuQlA2aStmd1ZzbzdMTkFxS2J4N2duRnYvVlRCWS9KVwpJQkIrUGwwdXg4OUN4Q3F0Q2Q1QjkvcTF3WnliRldjcDhKbzNURk9hVkVIK1RRNkZ0VVJEZ2JFZjNYdlBiY1laCndBTXZLWEJsdFRDNS9HNmU4clY0VGhRKzlmUHphQ0U1ZmhqR25wTXBLaHhEdHIwZGlIcGNzeTg5bEpqZDVOdUsKeDJENEcxQzJrQUF4a2RWWkVwRXBKd29Uek8xbDN4ZlJ1RUJ4OFBxcE4zSWN5Q3hUZFU1UFhWS0dmYmlTTXcvTgpHMXFRcUpXUFZ4VG5weTJ0clBDb2p5aThsZ01jZDdTcDIyeTVtZUk2SVFLQmdRRHdJM1VuUE5CaWNjejRjRWRlClVWZk5jb0dnc291ME4zMzlVeW5TZ0xvZTJRSUdTalpDL0Z5c2h4UUhmWmEvZE1oRXFhZzdHTy9Jd0lOZHJLZEsKRGIxY0hjaXpNYkJvOUpvT0JSeDd3MkxueDRyd01BakpvWEVrN2ZMOWVMQlFaVytRbXdZR1JUaXI4ZGFvcUc4aApETUdsMFVrdCtPZkFRZDNlOGVCS0dtY0JQUUtCZ1FDTTd3R3NJVmthdlNlaHVjYjIwbjlYVzc5K3kyM1YxOEx4CmNlWVE4Z293QWw0bER1Z052ck51V2kyeFV4QlpXU0NRYVNQbnpITVpLUTJmUzhQRHR3ajVZVjZGZ2RhRXpIRWsKWXM5QTFoNjBvb0F3TlBkcGpWeWFiT0ZNakd3QmEzKzM4SHVRZDVJa3JaYVQwcVM1NExFMEpnU04vS2N3MllLeQoyQml0Sk54amt3S0JnQzRIZmVOQmd1Zjd6RUFxdFdOYzBDbXZNeTJzUzU4RnEvNnN2QzEvUXkyNmh1clJ1c2pvCk9wTlBhUVZ1aTBDemo5ZXBkWGV1ZGZmUy90c3J4djBvMlEwWklHbElzdm5MT09STEVvU2VsUXk4Y09OTk1jSUUKVWYyMEpvbHpZc2htU1JZOHdORGUzOWdGaVJIWEIwWWNmZG5jM2R3VUE4Z1VXQVR0OUFJQVFaSTVBb0dBQ1JuRgorZCtOYVhTZGdvd0VsUnV5cldsM1REREd2dkJYM2srRWs4T05kTnd5U0NKV1NjenV1VW1KZWRIclZGbTFDSjVCCmUwNXdnRWR1WWNMNnVVQ3dpNm9GK0lrUjJURjZmT2NFaXlOSWlGR1dCWWJtRXlMVndBTVg2V0dIOSsrQko5ZVgKb3hTVmsxakNTSGxwdWJjUXVsVmFKZkVTdXN6UTY4dVlqRlc5QlpFQ2dZQTk5UFVYUjBhREFydHNVMW9JL2Yzdwo2eGx1Z3RaRGIvQTV3VUJsRVBsZWdUMkFZZTRGT3M5WE1qZXdtTGZ3UWYxSkJBdXpIbFJmZ1BBWjVRazR2ckF4CkdzZDJaNkRxSW5oVnJnMHlyUG9CU0dmeE05amtmUUlrQWRzRG10eW1PS0ZmK0NSTkk2eUg2Wm4wVjRWdDJUUWQKbERjQTJSNEdEN0dhVGRDR2hnUjZyZz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\n+"
  },
  {
    "sha": "3f530ec68343ab48efe46637c0cabacdb3975460",
    "filename": "src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/void.yaml",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/blob/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/void.yaml",
    "raw_url": "https://github.com/jenkinsci/kubernetes-credentials-provider-plugin/raw/13d46abe42f8610fc12a2ab55586d80be30c6cba/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/void.yaml",
    "contents_url": "https://api.github.com/repos/jenkinsci/kubernetes-credentials-provider-plugin/contents/src/test/resources/com/cloudbees/jenkins/plugins/kubernetes_credentials_provider/convertors/GitHubAppCredentialsConvertorTest/void.yaml?ref=13d46abe42f8610fc12a2ab55586d80be30c6cba",
    "patch": "@@ -0,0 +1,13 @@\n+apiVersion: v1\n+kind: Secret\n+metadata:\n+# this is the jenkins id.\n+  name: \"a-test-githubapp\"\n+  labels:\n+# so we know what type it is.\n+    \"jenkins.io/credentials-type\": \"gitHubApp\"\n+  annotations:\n+# description - can not be a label as spaces are not allowed\n+    \"jenkins.io/credentials-description\" : \"credentials from Kubernetes\"\n+type: Opaque\n+data:"
  }
]
