[
  {
    "sha": "c7b5901551c67d5f01a543808a2e62d3acbb53e4",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/airbnb/lottie-android/blob/a5a27bd8879561d8223962b8119c481df8e66dd6/build.gradle",
    "raw_url": "https://github.com/airbnb/lottie-android/raw/a5a27bd8879561d8223962b8119c481df8e66dd6/build.gradle",
    "contents_url": "https://api.github.com/repos/airbnb/lottie-android/contents/build.gradle?ref=a5a27bd8879561d8223962b8119c481df8e66dd6",
    "patch": "@@ -16,7 +16,7 @@ buildscript {\n   }\n   dependencies {\n     classpath 'org.ajoberstar:grgit:1.9.3'\n-    classpath 'com.android.tools.build:gradle:7.0.0-alpha08'\n+    classpath 'com.android.tools.build:gradle:7.0.0-alpha09'\n     classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion\"\n     classpath \"org.jetbrains.kotlin:kotlin-android-extensions:$kotlinVersion\"\n     classpath 'org.ajoberstar:grgit:1.9.3'"
  },
  {
    "sha": "86067283a96dafde50e854d68f21cf625462d14b",
    "filename": "sample-compose/build.gradle",
    "status": "modified",
    "additions": 4,
    "deletions": 9,
    "changes": 13,
    "blob_url": "https://github.com/airbnb/lottie-android/blob/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/build.gradle",
    "raw_url": "https://github.com/airbnb/lottie-android/raw/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/build.gradle",
    "contents_url": "https://api.github.com/repos/airbnb/lottie-android/contents/sample-compose/build.gradle?ref=a5a27bd8879561d8223962b8119c481df8e66dd6",
    "patch": "@@ -1,7 +1,6 @@\n plugins {\n   id 'com.android.application'\n   id 'kotlin-android'\n-  id 'kotlin-android-extensions'\n   id 'kotlin-kapt'\n }\n \n@@ -37,7 +36,6 @@ android {\n         \"-Xuse-experimental=androidx.compose.animation.ExperimentalAnimationApi\",\n         \"-Xopt-in=androidx.compose.material.ExperimentalMaterialApi\",\n         \"-Xopt-in=kotlin.RequiresOptIn\",\n-        \"-Xopt-in=com.airbnb.mvrx.InternalMavericksApi\"\n     ]\n   }\n   buildFeatures {\n@@ -53,10 +51,6 @@ kapt {\n   correctErrorTypes = true\n }\n \n-androidExtensions {\n-  features = [\"parcelize\"]\n-}\n-\n dependencies {\n   implementation project(':lottie-compose')\n   implementation 'androidx.core:core-ktx:1.3.2'\n@@ -72,7 +66,7 @@ dependencies {\n   implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0'\n   implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'\n \n-  implementation \"androidx.navigation:navigation-ui-ktx:2.3.3\"\n+  implementation \"androidx.navigation:navigation-ui-ktx:2.3.4\"\n \n   implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2'\n   implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2'\n@@ -83,9 +77,10 @@ dependencies {\n   implementation 'com.squareup.retrofit2:retrofit:2.9.0'\n   implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'\n   implementation \"dev.chrisbanes.accompanist:accompanist-coil:0.6.0\"\n-  implementation 'com.airbnb.android:mavericks:2.0.0'\n+  implementation 'com.airbnb.android:mavericks:2.1.0'\n+  implementation 'com.airbnb.android:mavericks-compose:2.1.0-alpha01'\n \n-  testImplementation 'junit:junit:4.13.1'\n+  testImplementation 'junit:junit:4.13.2'\n   androidTestImplementation 'androidx.test.ext:junit:1.1.2'\n   androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\n }\n\\ No newline at end of file"
  },
  {
    "sha": "8b01ac57e2c845253cd5307b8108fd7fe6ad14e4",
    "filename": "sample-compose/src/main/java/com/airbnb/lottie/sample/compose/ComposeActivity.kt",
    "status": "modified",
    "additions": 51,
    "deletions": 57,
    "changes": 108,
    "blob_url": "https://github.com/airbnb/lottie-android/blob/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/ComposeActivity.kt",
    "raw_url": "https://github.com/airbnb/lottie-android/raw/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/ComposeActivity.kt",
    "contents_url": "https://api.github.com/repos/airbnb/lottie-android/contents/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/ComposeActivity.kt?ref=a5a27bd8879561d8223962b8119c481df8e66dd6",
    "patch": "@@ -9,7 +9,6 @@ import androidx.compose.foundation.layout.Box\n import androidx.compose.foundation.layout.padding\n import androidx.compose.material.*\n import androidx.compose.runtime.Composable\n-import androidx.compose.runtime.CompositionLocalProvider\n import androidx.compose.runtime.getValue\n import androidx.compose.ui.Modifier\n import androidx.compose.ui.graphics.Color\n@@ -25,7 +24,6 @@ import com.airbnb.lottie.sample.compose.showcase.ShowcasePage\n import com.airbnb.lottie.sample.compose.ui.LottieTheme\n import com.airbnb.lottie.sample.compose.ui.Teal\n import com.airbnb.lottie.sample.compose.ui.toColorSafe\n-import com.airbnb.lottie.sample.compose.utils.LocalNavController\n import com.airbnb.lottie.sample.compose.utils.getBase64String\n \n class ComposeActivity : AppCompatActivity() {\n@@ -41,65 +39,61 @@ class ComposeActivity : AppCompatActivity() {\n     private fun LottieScaffold() {\n         val navController = rememberNavController()\n \n-        CompositionLocalProvider(\n-            LocalNavController provides navController,\n-        ) {\n-            LottieTheme {\n-                Scaffold(\n-                    bottomBar = {\n-                        BottomNavigation(\n-                            backgroundColor = Color(0xFFF7F7F7),\n-                            elevation = 8.dp,\n-                            contentColor = Teal,\n-                        ) {\n-                            val navBackStackEntry by navController.currentBackStackEntryAsState()\n-                            val currentRoute = navBackStackEntry?.arguments?.getString(KEY_ROUTE)\n+        LottieTheme {\n+            Scaffold(\n+                bottomBar = {\n+                    BottomNavigation(\n+                        backgroundColor = Color(0xFFF7F7F7),\n+                        elevation = 8.dp,\n+                        contentColor = Teal,\n+                    ) {\n+                        val navBackStackEntry by navController.currentBackStackEntryAsState()\n+                        val currentRoute = navBackStackEntry?.arguments?.getString(KEY_ROUTE)\n \n-                            BottomNavItemData.values().forEach { item ->\n-                                BottomNavigationItem(\n-                                    icon = {\n-                                        Icon(\n-                                            painter = painterResource(item.iconRes),\n-                                            contentDescription = null\n-                                        )\n-                                    },\n-                                    label = { Text(stringResource(item.labelRes)) },\n-                                    selected = currentRoute == item.route.route,\n-                                    onClick = {\n-                                        if (currentRoute != item.route.route) {\n-                                            navController.navigate(item.route.route)\n-                                        }\n-                                    },\n-                                )\n-                            }\n+                        BottomNavItemData.values().forEach { item ->\n+                            BottomNavigationItem(\n+                                icon = {\n+                                    Icon(\n+                                        painter = painterResource(item.iconRes),\n+                                        contentDescription = null\n+                                    )\n+                                },\n+                                label = { Text(stringResource(item.labelRes)) },\n+                                selected = currentRoute == item.route.route,\n+                                onClick = {\n+                                    if (currentRoute != item.route.route) {\n+                                        navController.navigate(item.route.route)\n+                                    }\n+                                },\n+                            )\n                         }\n                     }\n-                ) { innerPadding ->\n-                    Box(\n-                        modifier = Modifier.padding(innerPadding)\n-                    ) {\n-                        NavHost(navController, startDestination = Route.Showcase.route) {\n-                            composable(Route.Showcase.route, arguments = Route.Showcase.args) { ShowcasePage() }\n-                            composable(Route.Preview.route, arguments = Route.Preview.args) { PreviewPage() }\n-                            composable(Route.LottieFiles.route, arguments = Route.LottieFiles.args) { LottieFilesPage() }\n-                            composable(Route.Learn.route, arguments = Route.Learn.args) { ShowcasePage() }\n-                            composable(\n-                                Route.Player.fullRoute,\n-                                arguments = Route.Player.args\n-                            ) { entry ->\n-                                val arguments = entry.arguments ?: error(\"No arguments provided to ${Route.Player}\")\n-                                val spec = when {\n-                                    arguments.getString(\"url\") != null -> LottieAnimationSpec.Url(arguments.getBase64String(\"url\"))\n-                                    arguments.getString(\"file\") != null -> LottieAnimationSpec.File(arguments.getBase64String(\"file\"))\n-                                    arguments.getString(\"asset\") != null -> LottieAnimationSpec.Asset(arguments.getBase64String(\"asset\"))\n-                                    else -> error(\"You must specify a url, file, or asset\")\n-                                }\n-                                val backgroundColor = when (arguments.getString(\"backgroundColor\") != null) {\n-                                    true -> arguments.getBase64String(\"backgroundColor\").toColorSafe()\n-                                    else -> null\n-                                }\n-                                PlayerPage(spec, backgroundColor)\n+                }\n+            ) { innerPadding ->\n+                Box(\n+                    modifier = Modifier.padding(innerPadding)\n+                ) {\n+                    NavHost(navController, startDestination = Route.Showcase.route) {\n+                        composable(Route.Showcase.route, arguments = Route.Showcase.args) { ShowcasePage(navController) }\n+                        composable(Route.Preview.route, arguments = Route.Preview.args) { PreviewPage(navController) }\n+                        composable(Route.LottieFiles.route, arguments = Route.LottieFiles.args) { LottieFilesPage(navController) }\n+                        composable(Route.Learn.route, arguments = Route.Learn.args) { ShowcasePage(navController) }\n+                        composable(\n+                            Route.Player.fullRoute,\n+                            arguments = Route.Player.args\n+                        ) { entry ->\n+                            val arguments = entry.arguments ?: error(\"No arguments provided to ${Route.Player}\")\n+                            val spec = when {\n+                                arguments.getString(\"url\") != null -> LottieAnimationSpec.Url(arguments.getBase64String(\"url\"))\n+                                arguments.getString(\"file\") != null -> LottieAnimationSpec.File(arguments.getBase64String(\"file\"))\n+                                arguments.getString(\"asset\") != null -> LottieAnimationSpec.Asset(arguments.getBase64String(\"asset\"))\n+                                else -> error(\"You must specify a url, file, or asset\")\n+                            }\n+                            val backgroundColor = when (arguments.getString(\"backgroundColor\") != null) {\n+                                true -> arguments.getBase64String(\"backgroundColor\").toColorSafe()\n+                                else -> null\n                             }\n+                            PlayerPage(spec, backgroundColor)\n                         }\n                     }\n                 }"
  },
  {
    "sha": "4f1c3ae4bbd3d86e6c44e5cfd94751b04f1c7793",
    "filename": "sample-compose/src/main/java/com/airbnb/lottie/sample/compose/dagger/DaggerMavericksViewModelFactory.kt",
    "status": "modified",
    "additions": 11,
    "deletions": 8,
    "changes": 19,
    "blob_url": "https://github.com/airbnb/lottie-android/blob/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/dagger/DaggerMavericksViewModelFactory.kt",
    "raw_url": "https://github.com/airbnb/lottie-android/raw/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/dagger/DaggerMavericksViewModelFactory.kt",
    "contents_url": "https://api.github.com/repos/airbnb/lottie-android/contents/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/dagger/DaggerMavericksViewModelFactory.kt?ref=a5a27bd8879561d8223962b8119c481df8e66dd6",
    "patch": "@@ -1,24 +1,27 @@\n package com.airbnb.lottie.sample.compose.dagger\n \n-import androidx.fragment.app.FragmentActivity\n+import androidx.activity.ComponentActivity\n import com.airbnb.lottie.sample.compose.LottieComposeApplication\n-import com.airbnb.mvrx.*\n+import com.airbnb.mvrx.MavericksState\n+import com.airbnb.mvrx.MavericksViewModel\n+import com.airbnb.mvrx.MavericksViewModelFactory\n+import com.airbnb.mvrx.ViewModelContext\n \n-inline fun <reified VM : MavericksViewModel<S>, S : MavericksState> daggerMavericksViewModelFactory() = DaggerMavericksViewModelFactory<VM, S>(VM::class.java)\n+inline fun <reified VM : MavericksViewModel<S>, S : MavericksState> daggerMavericksViewModelFactory() =\n+    DaggerMavericksViewModelFactory<VM, S>(VM::class.java)\n \n \n class DaggerMavericksViewModelFactory<VM : MavericksViewModel<S>, S : MavericksState>(\n-        private val viewModelClass: Class<out MavericksViewModel<S>>\n+    private val viewModelClass: Class<out MavericksViewModel<S>>\n ) : MavericksViewModelFactory<VM, S> {\n \n-    override fun create(viewModelContext: ViewModelContext, state: S): VM? {\n+    override fun create(viewModelContext: ViewModelContext, state: S): VM {\n         return createViewModel(viewModelContext.activity, state)\n     }\n \n     private fun <VM : MavericksViewModel<S>, S : MavericksState> createViewModel(\n-            fragmentActivity:\n-            FragmentActivity,\n-            initialState: S\n+        fragmentActivity: ComponentActivity,\n+        initialState: S\n     ): VM {\n         val viewModelFactoryMap = (fragmentActivity.application as LottieComposeApplication).component.viewModelFactories()\n         val viewModelFactory = viewModelFactoryMap[viewModelClass]"
  },
  {
    "sha": "64ffcafe5cfd603a600c1babbd70645f19a63057",
    "filename": "sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesPage.kt",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/airbnb/lottie-android/blob/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesPage.kt",
    "raw_url": "https://github.com/airbnb/lottie-android/raw/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesPage.kt",
    "contents_url": "https://api.github.com/repos/airbnb/lottie-android/contents/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesPage.kt?ref=a5a27bd8879561d8223962b8119c481df8e66dd6",
    "patch": "@@ -16,6 +16,7 @@ import androidx.compose.ui.layout.onGloballyPositioned\n import androidx.compose.ui.platform.LocalDensity\n import androidx.compose.ui.res.stringResource\n import androidx.compose.ui.unit.dp\n+import androidx.navigation.NavController\n import com.airbnb.lottie.sample.compose.R\n import com.airbnb.lottie.sample.compose.composables.Marquee\n \n@@ -26,7 +27,7 @@ enum class LottieFilesTab(@StringRes val stringRes: Int) {\n }\n \n @Composable\n-fun LottieFilesPage() {\n+fun LottieFilesPage(navController: NavController) {\n     var tab by rememberSaveable { mutableStateOf(LottieFilesTab.Recent) }\n \n     Column {\n@@ -36,9 +37,9 @@ fun LottieFilesPage() {\n             onTabSelected = { tab = it },\n         )\n         when (tab) {\n-            LottieFilesTab.Recent -> LottieFilesRecentAndPopularPage(LottieFilesMode.Recent)\n-            LottieFilesTab.Popular -> LottieFilesRecentAndPopularPage(LottieFilesMode.Popular)\n-            LottieFilesTab.Search -> LottieFilesSearchPage()\n+            LottieFilesTab.Recent -> LottieFilesRecentAndPopularPage(navController, LottieFilesMode.Recent)\n+            LottieFilesTab.Popular -> LottieFilesRecentAndPopularPage(navController, LottieFilesMode.Popular)\n+            LottieFilesTab.Search -> LottieFilesSearchPage(navController)\n         }\n     }\n "
  },
  {
    "sha": "36ed4be30116b5e753e94a2582e8f7d05718807e",
    "filename": "sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesRecentsAndPopularPage.kt",
    "status": "modified",
    "additions": 6,
    "deletions": 6,
    "changes": 12,
    "blob_url": "https://github.com/airbnb/lottie-android/blob/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesRecentsAndPopularPage.kt",
    "raw_url": "https://github.com/airbnb/lottie-android/raw/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesRecentsAndPopularPage.kt",
    "contents_url": "https://api.github.com/repos/airbnb/lottie-android/contents/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesRecentsAndPopularPage.kt?ref=a5a27bd8879561d8223962b8119c481df8e66dd6",
    "patch": "@@ -13,23 +13,24 @@ import androidx.compose.material.icons.Icons\n import androidx.compose.material.icons.filled.Repeat\n import androidx.compose.runtime.Composable\n import androidx.compose.runtime.SideEffect\n+import androidx.compose.runtime.getValue\n import androidx.compose.ui.Alignment\n import androidx.compose.ui.Modifier\n import androidx.compose.ui.graphics.Color\n import androidx.compose.ui.unit.dp\n+import androidx.navigation.NavController\n import androidx.navigation.compose.navigate\n import com.airbnb.lottie.sample.compose.Route\n import com.airbnb.lottie.sample.compose.api.AnimationDataV2\n import com.airbnb.lottie.sample.compose.api.LottieFilesApi\n import com.airbnb.lottie.sample.compose.composables.AnimationRow\n import com.airbnb.lottie.sample.compose.dagger.AssistedViewModelFactory\n import com.airbnb.lottie.sample.compose.dagger.daggerMavericksViewModelFactory\n-import com.airbnb.lottie.sample.compose.utils.collectState\n-import com.airbnb.lottie.sample.compose.utils.findNavController\n-import com.airbnb.lottie.sample.compose.utils.mavericksViewModel\n import com.airbnb.mvrx.MavericksState\n import com.airbnb.mvrx.MavericksViewModel\n import com.airbnb.mvrx.MavericksViewModelFactory\n+import com.airbnb.mvrx.compose.collectAsState\n+import com.airbnb.mvrx.compose.mavericksViewModel\n import dagger.assisted.Assisted\n import dagger.assisted.AssistedFactory\n import dagger.assisted.AssistedInject\n@@ -104,10 +105,9 @@ class LottieFilesRecentAndPopularViewModel @AssistedInject constructor(\n }\n \n @Composable\n-fun LottieFilesRecentAndPopularPage(mode: LottieFilesMode) {\n+fun LottieFilesRecentAndPopularPage(navController: NavController, mode: LottieFilesMode) {\n     val viewModel: LottieFilesRecentAndPopularViewModel = mavericksViewModel()\n-    val state = viewModel.collectState()\n-    val navController = findNavController()\n+    val state by viewModel.collectAsState()\n     SideEffect {\n         viewModel.setMode(mode)\n     }"
  },
  {
    "sha": "1e1d34ef7c4d6614424658239c483b15f8ba29fc",
    "filename": "sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesSearchPage.kt",
    "status": "modified",
    "additions": 9,
    "deletions": 8,
    "changes": 17,
    "blob_url": "https://github.com/airbnb/lottie-android/blob/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesSearchPage.kt",
    "raw_url": "https://github.com/airbnb/lottie-android/raw/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesSearchPage.kt",
    "contents_url": "https://api.github.com/repos/airbnb/lottie-android/contents/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/lottiefiles/LottieFilesSearchPage.kt?ref=a5a27bd8879561d8223962b8119c481df8e66dd6",
    "patch": "@@ -12,12 +12,14 @@ import androidx.compose.material.icons.Icons\n import androidx.compose.material.icons.filled.Repeat\n import androidx.compose.runtime.Composable\n import androidx.compose.runtime.SideEffect\n+import androidx.compose.runtime.getValue\n import androidx.compose.ui.Alignment\n import androidx.compose.ui.Modifier\n import androidx.compose.ui.graphics.Color\n import androidx.compose.ui.res.stringResource\n import androidx.compose.ui.tooling.preview.Preview\n import androidx.compose.ui.unit.dp\n+import androidx.navigation.NavController\n import androidx.navigation.compose.navigate\n import com.airbnb.lottie.sample.compose.R\n import com.airbnb.lottie.sample.compose.Route\n@@ -26,16 +28,14 @@ import com.airbnb.lottie.sample.compose.api.LottieFilesApi\n import com.airbnb.lottie.sample.compose.composables.AnimationRow\n import com.airbnb.lottie.sample.compose.dagger.AssistedViewModelFactory\n import com.airbnb.lottie.sample.compose.dagger.daggerMavericksViewModelFactory\n-import com.airbnb.lottie.sample.compose.utils.collectState\n-import com.airbnb.lottie.sample.compose.utils.findNavController\n-import com.airbnb.lottie.sample.compose.utils.mavericksViewModel\n import com.airbnb.mvrx.MavericksState\n import com.airbnb.mvrx.MavericksViewModel\n import com.airbnb.mvrx.MavericksViewModelFactory\n+import com.airbnb.mvrx.compose.collectAsState\n+import com.airbnb.mvrx.compose.mavericksViewModel\n import dagger.assisted.Assisted\n import dagger.assisted.AssistedFactory\n import dagger.assisted.AssistedInject\n-import kotlinx.coroutines.Dispatchers\n import kotlinx.coroutines.Job\n import kotlinx.coroutines.launch\n \n@@ -111,10 +111,9 @@ class LottieFilesSearchViewModel @AssistedInject constructor(\n }\n \n @Composable\n-fun LottieFilesSearchPage() {\n+fun LottieFilesSearchPage(navController: NavController) {\n     val viewModel: LottieFilesSearchViewModel = mavericksViewModel()\n-    val state = viewModel.collectState()\n-    val navController = findNavController()\n+    val state by viewModel.collectAsState()\n     LottieFilesSearchPage(\n         state,\n         viewModel::setQuery,\n@@ -141,7 +140,9 @@ fun LottieFilesSearchPage(\n                 value = state.query,\n                 onValueChange = onQueryChanged,\n                 label = { Text(stringResource(R.string.query)) },\n-                modifier = Modifier.fillMaxWidth().padding(horizontal = 16.dp),\n+                modifier = Modifier\n+                    .fillMaxWidth()\n+                    .padding(horizontal = 16.dp),\n                 singleLine = true\n             )\n             LazyColumn("
  },
  {
    "sha": "9aa1c922ba5b624ba3e9ed6f2b9ee2966d70cf4b",
    "filename": "sample-compose/src/main/java/com/airbnb/lottie/sample/compose/preview/PreviewPage.kt",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/airbnb/lottie-android/blob/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/preview/PreviewPage.kt",
    "raw_url": "https://github.com/airbnb/lottie-android/raw/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/preview/PreviewPage.kt",
    "contents_url": "https://api.github.com/repos/airbnb/lottie-android/contents/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/preview/PreviewPage.kt?ref=a5a27bd8879561d8223962b8119c481df8e66dd6",
    "patch": "@@ -18,18 +18,18 @@ import androidx.compose.ui.tooling.preview.Preview\n import androidx.compose.ui.unit.dp\n import androidx.compose.ui.unit.sp\n import androidx.compose.ui.window.Dialog\n+import androidx.navigation.NavController\n import androidx.navigation.compose.navigate\n+import androidx.navigation.compose.rememberNavController\n import com.airbnb.lottie.sample.compose.R\n import com.airbnb.lottie.sample.compose.Route\n import com.airbnb.lottie.sample.compose.composables.Marquee\n import com.airbnb.lottie.sample.compose.ui.LottieTheme\n-import com.airbnb.lottie.sample.compose.utils.findNavController\n \n @Composable\n-fun PreviewPage() {\n+fun PreviewPage(navController: NavController) {\n     var showingAssetsDialog by remember { mutableStateOf(false) }\n     var showingUrlDialog by remember { mutableStateOf(false) }\n-    val navController = findNavController()\n \n     Column {\n         Marquee(stringResource(R.string.tab_preview))\n@@ -172,9 +172,10 @@ private fun AssetRow(name: String, onClick: () -> Unit) {\n @Preview\n @Composable\n fun PreviewPagePreview() {\n+    val navController = rememberNavController()\n     LottieTheme {\n         Box(modifier = Modifier.background(Color.White)) {\n-            PreviewPage()\n+            PreviewPage(navController)\n         }\n     }\n }"
  },
  {
    "sha": "852d950cb2112963b9393cc656261e3e6e8e820b",
    "filename": "sample-compose/src/main/java/com/airbnb/lottie/sample/compose/showcase/ShowcasePage.kt",
    "status": "modified",
    "additions": 9,
    "deletions": 8,
    "changes": 17,
    "blob_url": "https://github.com/airbnb/lottie-android/blob/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/showcase/ShowcasePage.kt",
    "raw_url": "https://github.com/airbnb/lottie-android/raw/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/showcase/ShowcasePage.kt",
    "contents_url": "https://api.github.com/repos/airbnb/lottie-android/contents/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/showcase/ShowcasePage.kt?ref=a5a27bd8879561d8223962b8119c481df8e66dd6",
    "patch": "@@ -6,28 +6,28 @@ import androidx.compose.foundation.lazy.LazyColumn\n import androidx.compose.foundation.lazy.items\n import androidx.compose.material.Divider\n import androidx.compose.runtime.Composable\n+import androidx.compose.runtime.getValue\n import androidx.compose.ui.Alignment\n import androidx.compose.ui.Modifier\n import androidx.compose.ui.graphics.Color\n import androidx.compose.ui.tooling.preview.Preview\n+import androidx.navigation.NavController\n import androidx.navigation.compose.navigate\n+import androidx.navigation.compose.rememberNavController\n import com.airbnb.lottie.sample.compose.Route\n import com.airbnb.lottie.sample.compose.composables.AnimationRow\n import com.airbnb.lottie.sample.compose.composables.Loader\n import com.airbnb.lottie.sample.compose.composables.Marquee\n import com.airbnb.lottie.sample.compose.ui.LottieTheme\n-import com.airbnb.lottie.sample.compose.utils.collectState\n-import com.airbnb.lottie.sample.compose.utils.findNavController\n-import com.airbnb.lottie.sample.compose.utils.mavericksViewModel\n import com.airbnb.mvrx.Loading\n import com.airbnb.mvrx.Uninitialized\n+import com.airbnb.mvrx.compose.collectAsState\n+import com.airbnb.mvrx.compose.mavericksViewModel\n \n @Composable\n-fun ShowcasePage() {\n+fun ShowcasePage(navController: NavController) {\n     val viewModel: ShowcaseViewModel = mavericksViewModel()\n-    val state = viewModel.collectState()\n-    val featuredAnimations = state.animations\n-    val navController = findNavController()\n+    val featuredAnimations by viewModel.collectAsState(ShowcaseState::animations)\n     Box(\n         modifier = Modifier.fillMaxSize()\n     ) {\n@@ -55,7 +55,8 @@ fun ShowcasePage() {\n @Preview(showBackground = true)\n @Composable\n fun DefaultPreview() {\n+    val navController = rememberNavController()\n     LottieTheme {\n-        ShowcasePage()\n+        ShowcasePage(navController)\n     }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "7571440dc1084ac97cdc3b82f6254106ddafb0a5",
    "filename": "sample-compose/src/main/java/com/airbnb/lottie/sample/compose/utils/MavericksExtensions.kt",
    "status": "removed",
    "additions": 0,
    "deletions": 53,
    "changes": 53,
    "blob_url": "https://github.com/airbnb/lottie-android/blob/0809f914480996a6ec2568c280eeeb5c3577dc78/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/utils/MavericksExtensions.kt",
    "raw_url": "https://github.com/airbnb/lottie-android/raw/0809f914480996a6ec2568c280eeeb5c3577dc78/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/utils/MavericksExtensions.kt",
    "contents_url": "https://api.github.com/repos/airbnb/lottie-android/contents/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/utils/MavericksExtensions.kt?ref=0809f914480996a6ec2568c280eeeb5c3577dc78",
    "patch": "@@ -1,53 +0,0 @@\n-package com.airbnb.lottie.sample.compose.utils\n-\n-\n-import androidx.compose.runtime.Composable\n-import androidx.compose.runtime.collectAsState\n-import androidx.compose.runtime.getValue\n-import androidx.compose.runtime.remember\n-import androidx.compose.ui.platform.LocalContext\n-import androidx.compose.ui.platform.LocalLifecycleOwner\n-import androidx.fragment.app.Fragment\n-import androidx.fragment.app.FragmentActivity\n-import androidx.navigation.NavBackStackEntry\n-import com.airbnb.mvrx.*\n-\n-@Composable\n-fun <VM : MavericksViewModel<S>, S : MavericksState> VM.collectState(): S {\n-    val state by stateFlow.collectAsState(initial = withState(this) { it })\n-    return state\n-}\n-\n-@Composable\n-inline fun <reified VM : MavericksViewModel<S>, reified S : MavericksState> mavericksViewModel(): VM {\n-    val viewModelClass = VM::class\n-    val context = LocalContext.current\n-    val viewModelContext = when (val lifecycleOwner = LocalLifecycleOwner.current) {\n-        is Fragment -> {\n-            val activity = lifecycleOwner.requireActivity()\n-            val args = lifecycleOwner.arguments?.get(Mavericks.KEY_ARG)\n-            FragmentViewModelContext(activity, args, lifecycleOwner)\n-        }\n-        is FragmentActivity -> {\n-            val args = lifecycleOwner.intent.extras?.get(Mavericks.KEY_ARG)\n-            ActivityViewModelContext(lifecycleOwner, args)\n-        }\n-        is NavBackStackEntry -> {\n-            val args = lifecycleOwner.arguments?.get(Mavericks.KEY_ARG)\n-            val activity = context as? FragmentActivity ?: error(\"Local context should be a FragmentActivity but it is a ${context::class.simpleName}!\")\n-            ActivityViewModelContext(activity, args)\n-        }\n-        else -> error(\"Unknown LifecycleOwner ${lifecycleOwner::class.simpleName}. Must be Fragment or Activity for now.\")\n-    }\n-    val activity = context as? FragmentActivity ?: error(\"Composable is not hosted in a FragmentActivity\")\n-    return remember(viewModelClass, activity) {\n-        val keyFactory = { viewModelClass.java.name }\n-        @Suppress(\"RestrictedApi\")\n-        MavericksViewModelProvider.get(\n-            viewModelClass = viewModelClass.java,\n-            stateClass = S::class.java,\n-            viewModelContext = viewModelContext,\n-            key = keyFactory()\n-        )\n-    }\n-}\n\\ No newline at end of file"
  },
  {
    "sha": "17a5871da2c9c6f16356658a10502a5ab498826d",
    "filename": "sample-compose/src/main/java/com/airbnb/lottie/sample/compose/utils/NavigationExtensions.kt",
    "status": "modified",
    "additions": 0,
    "deletions": 8,
    "changes": 8,
    "blob_url": "https://github.com/airbnb/lottie-android/blob/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/utils/NavigationExtensions.kt",
    "raw_url": "https://github.com/airbnb/lottie-android/raw/a5a27bd8879561d8223962b8119c481df8e66dd6/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/utils/NavigationExtensions.kt",
    "contents_url": "https://api.github.com/repos/airbnb/lottie-android/contents/sample-compose/src/main/java/com/airbnb/lottie/sample/compose/utils/NavigationExtensions.kt?ref=a5a27bd8879561d8223962b8119c481df8e66dd6",
    "patch": "@@ -2,14 +2,6 @@ package com.airbnb.lottie.sample.compose.utils\n \n import android.os.Bundle\n import android.util.Base64\n-import androidx.compose.runtime.Composable\n-import androidx.compose.runtime.staticCompositionLocalOf\n-import androidx.navigation.NavController\n import java.nio.charset.StandardCharsets\n \n-val LocalNavController = staticCompositionLocalOf<NavController> { error(\"You must specify a NavController.\") }\n-\n-@Composable\n-fun findNavController() = LocalNavController.current\n-\n fun Bundle.getBase64String(key: String) = String(Base64.decode(getString(key), Base64.DEFAULT), StandardCharsets.UTF_8)"
  }
]
