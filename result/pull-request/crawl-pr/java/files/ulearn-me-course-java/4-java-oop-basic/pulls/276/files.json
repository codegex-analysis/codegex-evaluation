[
  {
    "sha": "5f6ae25c1f91dae8ab16d0ee0f7289227b5ea691",
    "filename": "task03/src/com/example/task03/ComplexNumber.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/blob/c3d978ebd9b786037e925d9cb772cb74893ec82b/task03/src/com/example/task03/ComplexNumber.java",
    "raw_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/raw/c3d978ebd9b786037e925d9cb772cb74893ec82b/task03/src/com/example/task03/ComplexNumber.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/4-java-oop-basic/contents/task03/src/com/example/task03/ComplexNumber.java?ref=c3d978ebd9b786037e925d9cb772cb74893ec82b",
    "patch": "@@ -0,0 +1,45 @@\n+package com.example.task03;\n+\n+import static java.lang.String.format;\n+\n+public class ComplexNumber {\n+    private final double realPart;\n+    private final double imaginaryPart;\n+    private final double complexNumberModulus;\n+\n+    public ComplexNumber(double realPart, double imaginaryPart) {\n+        this.realPart = realPart;\n+        this.imaginaryPart = imaginaryPart;\n+        this.complexNumberModulus = Math.sqrt(Math.pow(realPart, 2) + Math.pow(imaginaryPart, 2));\n+    }\n+\n+    public double getRealPart() {\n+        return realPart;\n+    }\n+\n+    public double getImaginaryPart() {\n+        return imaginaryPart;\n+    }\n+\n+    public double getComplexNumberModulus() {\n+        return complexNumberModulus;\n+    }\n+\n+    public static ComplexNumber foldComplexNumbers(ComplexNumber firstNumber, ComplexNumber secondNumber) {\n+        double resultRealPart = firstNumber.getRealPart() + secondNumber.getRealPart();\n+        double resultImaginaryPart = firstNumber.getImaginaryPart() + secondNumber.getImaginaryPart();\n+        return new ComplexNumber(resultRealPart, resultImaginaryPart);\n+    }\n+\n+    public static ComplexNumber multiplyComplexNumbers(ComplexNumber firstNumber, ComplexNumber secondNumber) {\n+        double freeMember = firstNumber.getRealPart() * secondNumber.getRealPart() -\n+                firstNumber.getImaginaryPart() * secondNumber.getImaginaryPart();\n+        double averageRatio = firstNumber.getRealPart() * secondNumber.getImaginaryPart() +\n+                firstNumber.getImaginaryPart() * secondNumber.getRealPart();\n+        return new ComplexNumber(freeMember, averageRatio);\n+    }\n+\n+    public String toString() {\n+        return format(\"%s + %si\", realPart, imaginaryPart);\n+    }\n+}"
  },
  {
    "sha": "339b02ca3aa983f9e0263ed2b03473a8812571a6",
    "filename": "task03/src/com/example/task03/Task03Main.java",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/blob/c3d978ebd9b786037e925d9cb772cb74893ec82b/task03/src/com/example/task03/Task03Main.java",
    "raw_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/raw/c3d978ebd9b786037e925d9cb772cb74893ec82b/task03/src/com/example/task03/Task03Main.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/4-java-oop-basic/contents/task03/src/com/example/task03/Task03Main.java?ref=c3d978ebd9b786037e925d9cb772cb74893ec82b",
    "patch": "@@ -2,6 +2,11 @@\n \n public class Task03Main {\n     public static void main(String[] args) {\n-\n+        ComplexNumber firstNumber = new ComplexNumber(1, -1);\n+        ComplexNumber secondNumber = new ComplexNumber(3, 6);\n+        System.out.println(firstNumber.toString());\n+        System.out.println(secondNumber.toString());\n+        System.out.println(ComplexNumber.foldComplexNumbers(firstNumber, secondNumber).toString());\n+        System.out.println(ComplexNumber.multiplyComplexNumbers(firstNumber, secondNumber).toString());\n     }\n }"
  }
]
