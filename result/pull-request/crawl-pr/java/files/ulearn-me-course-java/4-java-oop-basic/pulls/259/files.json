[
  {
    "sha": "821385641944ac6f0a8f49d21ee8534c9ecf4f41",
    "filename": "task04/src/com/example/task04/Line.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/blob/11ccbc318c6863914b1b421aae3d88f45c09bf38/task04/src/com/example/task04/Line.java",
    "raw_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/raw/11ccbc318c6863914b1b421aae3d88f45c09bf38/task04/src/com/example/task04/Line.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/4-java-oop-basic/contents/task04/src/com/example/task04/Line.java?ref=11ccbc318c6863914b1b421aae3d88f45c09bf38",
    "patch": "@@ -0,0 +1,29 @@\n+package com.example.task04;\n+\n+public class Line {\n+\n+     private Point p1;\n+     private Point p2;\n+\n+    public Line(Point p1, Point p2){\n+        this.p1 = p1;\n+        this.p2 = p2;\n+    }\n+\n+    public Point getP1(){\n+        return p1;\n+    }\n+\n+    public Point getP2(){\n+        return p2;\n+    }\n+\n+    public  String toString(){\n+        return p1.toString()+p2.toString();\n+    }\n+\n+    public boolean isCollinearLine(Point p){\n+        return Math.abs((p1.distance(p)+p2.distance(p)) - p1.distance(p2)) < 0.01d;\n+    }\n+\n+}"
  },
  {
    "sha": "12c34d098b4793550f0653a5363bd4720754defc",
    "filename": "task04/src/com/example/task04/Point.java",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/blob/11ccbc318c6863914b1b421aae3d88f45c09bf38/task04/src/com/example/task04/Point.java",
    "raw_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/raw/11ccbc318c6863914b1b421aae3d88f45c09bf38/task04/src/com/example/task04/Point.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/4-java-oop-basic/contents/task04/src/com/example/task04/Point.java?ref=11ccbc318c6863914b1b421aae3d88f45c09bf38",
    "patch": "@@ -0,0 +1,19 @@\n+package com.example.task04;\n+\n+public class Point {\n+    final int x;\n+    final int y;\n+\n+    Point(int x, int y) {\n+        this.x = x;\n+        this.y = y;\n+    }\n+\n+    double distance(Point point) {\n+        return Math.sqrt(Math.pow((point.x - x), 2) + Math.pow((point.y - y), 2));\n+    }\n+\n+    public String toString() {\n+        return \"(\" + x + \",\" + y + \")\";\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "797b7b7fc60b7e0f5c10027d09ea42bacde2898a",
    "filename": "task04/src/com/example/task04/Task04Main.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/blob/11ccbc318c6863914b1b421aae3d88f45c09bf38/task04/src/com/example/task04/Task04Main.java",
    "raw_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/raw/11ccbc318c6863914b1b421aae3d88f45c09bf38/task04/src/com/example/task04/Task04Main.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/4-java-oop-basic/contents/task04/src/com/example/task04/Task04Main.java?ref=11ccbc318c6863914b1b421aae3d88f45c09bf38",
    "patch": "@@ -1,7 +1,10 @@\n package com.example.task04;\n \n+\n public class Task04Main {\n     public static void main(String[] args) {\n-\n+        Line  line = new Line(new Point(0,2), new Point(2,0));\n+        System.out.println(line.toString());\n+        System.out.println(line.isCollinearLine(new Point(1,1)));\n     }\n }"
  }
]
