[
  {
    "sha": "23b475625b0bfdf826cd79a073c5bae82e50666e",
    "filename": "task03/src/com/example/task03/ComplexNumber.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/blob/fecf29f68fc7f5790cb6e45fafae8b80e97e3c28/task03/src/com/example/task03/ComplexNumber.java",
    "raw_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/raw/fecf29f68fc7f5790cb6e45fafae8b80e97e3c28/task03/src/com/example/task03/ComplexNumber.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/4-java-oop-basic/contents/task03/src/com/example/task03/ComplexNumber.java?ref=fecf29f68fc7f5790cb6e45fafae8b80e97e3c28",
    "patch": "@@ -0,0 +1,72 @@\n+package com.example.task03;\n+\n+public class ComplexNumber {\n+    private double realPart; //a\n+    private double imaginaryPart; //b\n+\n+    public double getImaginaryPart() {\n+        return imaginaryPart;\n+    }\n+\n+    public double getRealPart() {\n+        return realPart;\n+    }\n+\n+    public void setImaginaryPart(double imaginaryPart) {\n+        this.imaginaryPart = imaginaryPart;\n+    }\n+\n+    public void setRealPart(double realPart) {\n+        this.realPart = realPart;\n+    }\n+\n+    public ComplexNumber(double realPart, double imaginaryPart) {\n+        this.realPart = realPart;\n+        this.imaginaryPart = imaginaryPart;\n+    }\n+\n+    public ComplexNumber() {\n+        this.realPart = 0;\n+        this.imaginaryPart = 0;\n+    }\n+\n+    public ComplexNumber add(ComplexNumber value) {\n+        return new ComplexNumber(this.realPart + value.realPart, this.imaginaryPart + value.imaginaryPart);\n+    }\n+\n+    public ComplexNumber multiply(ComplexNumber value) {\n+        double trueRealPart = this.realPart * value.realPart - this.imaginaryPart * value.imaginaryPart;\n+        double trueImaginaryPart = this.realPart * value.imaginaryPart + this.imaginaryPart * value.realPart;\n+        return new ComplexNumber(realPart = trueRealPart,\n+                imaginaryPart = trueImaginaryPart);\n+    }\n+\n+    public static ComplexNumber add(ComplexNumber first, ComplexNumber second) {\n+        return first.add(second);\n+    }\n+\n+    public static ComplexNumber multiply(ComplexNumber first, ComplexNumber second) {\n+        return first.multiply(second);\n+    }\n+\n+    public String toString() {\n+        if(imaginaryPart > 0 && realPart > 0){\n+            return String.format(\"%s + %si\", realPart, imaginaryPart);\n+        }\n+        if(imaginaryPart < 0 && realPart > 0) {\n+            return String.format(\"%s - %si\", realPart, Math.abs(imaginaryPart));\n+        }\n+        if(realPart == 0 && imaginaryPart == 0){\n+            return \"0\";\n+        }\n+\n+        if(realPart == 0d){\n+            return String.format(\"%si\", imaginaryPart);\n+        }\n+        return realPart + \"\";\n+    }\n+\n+    public void print(){\n+        System.out.println(this.toString());\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "0b3750a4a4d417527d6f1aa8cd897008d4dba45c",
    "filename": "task03/src/com/example/task03/Task03Main.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/blob/fecf29f68fc7f5790cb6e45fafae8b80e97e3c28/task03/src/com/example/task03/Task03Main.java",
    "raw_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/raw/fecf29f68fc7f5790cb6e45fafae8b80e97e3c28/task03/src/com/example/task03/Task03Main.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/4-java-oop-basic/contents/task03/src/com/example/task03/Task03Main.java?ref=fecf29f68fc7f5790cb6e45fafae8b80e97e3c28",
    "patch": "@@ -2,6 +2,10 @@\n \n public class Task03Main {\n     public static void main(String[] args) {\n-\n+        ComplexNumber z1 = new ComplexNumber(5,2);\n+        ComplexNumber z2 = new ComplexNumber(3,1);\n+        ComplexNumber z3 = new ComplexNumber(0,-5);\n+        System.out.println(ComplexNumber.add(z1,z2).toString()); //correct\n+        z3.print();\n     }\n }"
  }
]
