[
  {
    "sha": "821113135876a6eb7a7c0e90067e1165bb9a8aeb",
    "filename": "task05/src/com/example/task05/Point.java",
    "status": "modified",
    "additions": 9,
    "deletions": 7,
    "changes": 16,
    "blob_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/blob/b2f3b406e5664beb0c17585d44303a125b7d7afd/task05/src/com/example/task05/Point.java",
    "raw_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/raw/b2f3b406e5664beb0c17585d44303a125b7d7afd/task05/src/com/example/task05/Point.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/4-java-oop-basic/contents/task05/src/com/example/task05/Point.java?ref=b2f3b406e5664beb0c17585d44303a125b7d7afd",
    "patch": "@@ -5,14 +5,17 @@\n  */\n public class Point {\n \n+    private final double x;\n+    private final double y;\n     /**\n      * Конструктор, инициализирующий координаты точки\n      *\n      * @param x координата по оси абсцисс\n      * @param y координата по оси ординат\n      */\n     public Point(double x, double y) {\n-        throw new AssertionError();\n+        this.x = x;\n+        this.y = y;\n     }\n \n     /**\n@@ -21,8 +24,7 @@ public Point(double x, double y) {\n      * @return координату точки по оси X\n      */\n     public double getX() {\n-        // TODO: реализовать\n-        throw new AssertionError();\n+        return x;\n     }\n \n     /**\n@@ -31,8 +33,7 @@ public double getX() {\n      * @return координату точки по оси Y\n      */\n     public double getY() {\n-        // TODO: реализовать\n-        throw new AssertionError();\n+        return y;\n     }\n \n     /**\n@@ -42,8 +43,9 @@ public double getY() {\n      * @return расстояние от текущей точки до переданной\n      */\n     public double getLength(Point point) {\n-        // TODO: реализовать\n-        throw new AssertionError();\n+        double firstCathetus = this.x - point.x;\n+        double secondCathetus = this.y - point.y;\n+        return Math.sqrt(firstCathetus * firstCathetus + secondCathetus * secondCathetus);\n     }\n \n }"
  },
  {
    "sha": "61eaf5a793106670e33ff8c4dae1e898e4ef595e",
    "filename": "task05/src/com/example/task05/PolygonalLine.java",
    "status": "modified",
    "additions": 24,
    "deletions": 6,
    "changes": 30,
    "blob_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/blob/b2f3b406e5664beb0c17585d44303a125b7d7afd/task05/src/com/example/task05/PolygonalLine.java",
    "raw_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/raw/b2f3b406e5664beb0c17585d44303a125b7d7afd/task05/src/com/example/task05/PolygonalLine.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/4-java-oop-basic/contents/task05/src/com/example/task05/PolygonalLine.java?ref=b2f3b406e5664beb0c17585d44303a125b7d7afd",
    "patch": "@@ -4,14 +4,17 @@\n  * Ломаная линия\n  */\n public class PolygonalLine {\n-\n+    private Point[] points = new Point[0];\n     /**\n      * Устанавливает точки ломаной линии\n      *\n      * @param points массив точек, которыми нужно проинициализировать ломаную линию\n      */\n     public void setPoints(Point[] points) {\n-        // TODO: реализовать\n+        this.points = new Point[points.length];\n+        for (int i = 0; i < points.length; i++){\n+            this.points[i] = new Point(points[i].getX(), points[i].getY());\n+        }\n     }\n \n     /**\n@@ -20,7 +23,13 @@ public void setPoints(Point[] points) {\n      * @param point точка, которую нужно добавить к ломаной\n      */\n     public void addPoint(Point point) {\n-        // TODO: реализовать\n+        Point[] arr = new Point[points.length + 1];\n+        int i = 0;\n+        for (; i < points.length; i++){\n+            arr[i] = new Point(points[i].getX(), points[i].getY());\n+        }\n+        arr[i] = new Point(point.getX(), point.getY());\n+        points = arr;\n     }\n \n     /**\n@@ -30,7 +39,13 @@ public void addPoint(Point point) {\n      * @param y координата по оси ординат\n      */\n     public void addPoint(double x, double y) {\n-        // TODO: реализовать\n+        Point[] arr = new Point[points.length + 1];\n+        int i = 0;\n+        for (; i < points.length; i++){\n+            arr[i] = points[i];\n+        }\n+        arr[i] = new Point(x, y);\n+        points = arr;\n     }\n \n     /**\n@@ -39,8 +54,11 @@ public void addPoint(double x, double y) {\n      * @return длину ломаной линии\n      */\n     public double getLength() {\n-        // TODO: реализовать\n-        throw new AssertionError();\n+        double length = 0;\n+        for (int i = 0; i < points.length-1; i++) {\n+            length += points[i].getLength(points[i+1]);\n+        }\n+        return length;\n     }\n \n }"
  },
  {
    "sha": "17981648fb6e6443b573130fffac063b2e1f1a90",
    "filename": "task05/src/com/example/task05/Task05Main.java",
    "status": "modified",
    "additions": 12,
    "deletions": 1,
    "changes": 13,
    "blob_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/blob/b2f3b406e5664beb0c17585d44303a125b7d7afd/task05/src/com/example/task05/Task05Main.java",
    "raw_url": "https://github.com/ulearn-me-course-java/4-java-oop-basic/raw/b2f3b406e5664beb0c17585d44303a125b7d7afd/task05/src/com/example/task05/Task05Main.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/4-java-oop-basic/contents/task05/src/com/example/task05/Task05Main.java?ref=b2f3b406e5664beb0c17585d44303a125b7d7afd",
    "patch": "@@ -2,6 +2,17 @@\n \n public class Task05Main {\n     public static void main(String[] args) {\n-\n+        Point[] points = {\n+                new Point(1, 2),\n+                new Point(4, 6),\n+                new Point(8, 9),\n+                new Point(12, 12),\n+                new Point(15, 16),\n+        };\n+        PolygonalLine line = new PolygonalLine();\n+        for (Point p : points) {\n+            line.addPoint(p);\n+        }\n+        System.out.println(line.getLength());\n     }\n }"
  }
]
