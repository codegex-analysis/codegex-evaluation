[
  {
    "sha": "2fa6336066dddc7c61adae1ca9f4b1442201f4b5",
    "filename": "task13/src/com.example.task13/Task13Main.java",
    "status": "modified",
    "additions": 14,
    "deletions": 2,
    "changes": 16,
    "blob_url": "https://github.com/ulearn-me-course-java/3-java-control-flow-and-arrays/blob/3b0d84c0d37b8571409807eeb29b79a39367ac60/task13/src/com.example.task13/Task13Main.java",
    "raw_url": "https://github.com/ulearn-me-course-java/3-java-control-flow-and-arrays/raw/3b0d84c0d37b8571409807eeb29b79a39367ac60/task13/src/com.example.task13/Task13Main.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/3-java-control-flow-and-arrays/contents/task13/src/com.example.task13/Task13Main.java?ref=3b0d84c0d37b8571409807eeb29b79a39367ac60",
    "patch": "@@ -1,5 +1,7 @@\n package com.example.task13;\n \n+import java.util.ArrayList;\n+\n public class Task13Main {\n     public static void main(String[] args) {\n         //здесь вы можете вручную протестировать ваше решение, вызывая реализуемый метод и смотря результат\n@@ -12,8 +14,18 @@ public static void main(String[] args) {\n     }\n \n     static int[] removeMoreThen1000(int[] arr) {\n-        //todo напишите здесь свою корректную реализацию этого метода, вместо существующей\n-        return  null;\n+        if (arr == null || arr.length == 0) return arr;\n+        ArrayList<Integer> Array = new ArrayList<>();\n+        for (int i = 0; i < arr.length; i++){\n+            if (arr[i] < 1000) {\n+                Array.add(arr[i]);\n+            }\n+        }\n+        int[] newArr = new int[Array.size()];\n+        for (int i = 0; i < Array.size();i++){\n+            newArr[i] = Array.get(i);\n+        }\n+        return newArr;\n     }\n \n }\n\\ No newline at end of file"
  }
]
