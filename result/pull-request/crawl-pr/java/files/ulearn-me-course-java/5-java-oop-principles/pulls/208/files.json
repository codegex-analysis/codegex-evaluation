[
  {
    "sha": "242561223c6b200f73426ac8b105630e773efde7",
    "filename": "task03/src/com/example/task03/Hours.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/blob/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/Hours.java",
    "raw_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/raw/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/Hours.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/5-java-oop-principles/contents/task03/src/com/example/task03/Hours.java?ref=10fc92b196e8b07082302df08aa8923af11c9a75",
    "patch": "@@ -0,0 +1,28 @@\n+package com.example.task03;\n+\n+public class Hours implements TimeUnit{\n+    private final long amount;\n+\n+    public Hours(long amount) {\n+        this.amount = amount;\n+    }\n+\n+    @Override\n+    public long toMillis() {\n+        return amount * 60 * 60 * 1000;\n+    }\n+\n+    @Override\n+    public long toSeconds() {\n+        return amount * 60 * 60;\n+    }\n+\n+    @Override\n+    public long toMinutes() {\n+        return amount * 60;\n+    }\n+\n+    public long getHours(){\n+        return amount;\n+    }\n+}"
  },
  {
    "sha": "ba79074086cdcbccb930727dc29cb7984f662d46",
    "filename": "task03/src/com/example/task03/Milliseconds.java",
    "status": "modified",
    "additions": 6,
    "deletions": 2,
    "changes": 8,
    "blob_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/blob/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/Milliseconds.java",
    "raw_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/raw/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/Milliseconds.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/5-java-oop-principles/contents/task03/src/com/example/task03/Milliseconds.java?ref=10fc92b196e8b07082302df08aa8923af11c9a75",
    "patch": "@@ -18,11 +18,15 @@ public long toMillis() {\n \n     @Override\n     public long toSeconds() {\n-        return amount / 1000;\n+        return Math.round(amount / 1000f);\n     }\n \n     @Override\n     public long toMinutes() {\n-        return amount / 1000 * 60;\n+        return Math.round(amount / 60000f);\n+    }\n+\n+    public long getHours(){\n+        return Math.round(amount / 3600000f);\n     }\n }"
  },
  {
    "sha": "867f26fcb7a95ad3775d4196a4fd81983ba30905",
    "filename": "task03/src/com/example/task03/Minutes.java",
    "status": "modified",
    "additions": 10,
    "deletions": 8,
    "changes": 18,
    "blob_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/blob/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/Minutes.java",
    "raw_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/raw/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/Minutes.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/5-java-oop-principles/contents/task03/src/com/example/task03/Minutes.java?ref=10fc92b196e8b07082302df08aa8923af11c9a75",
    "patch": "@@ -2,26 +2,28 @@\n \n public class Minutes implements TimeUnit {\n \n+    private final long amount;\n+\n     public Minutes(long amount) {\n-        // TODO: реализовать\n-        throw new UnsupportedOperationException();\n+        this.amount = amount;\n     }\n \n     @Override\n     public long toMillis() {\n-        // TODO: реализовать\n-        throw new UnsupportedOperationException();\n+        return amount * 60 * 1000;\n     }\n \n     @Override\n     public long toSeconds() {\n-        // TODO: реализовать\n-        throw new UnsupportedOperationException();\n+        return amount * 60;\n     }\n \n     @Override\n     public long toMinutes() {\n-        // TODO: реализовать\n-        throw new UnsupportedOperationException();\n+        return amount;\n+    }\n+\n+    public long getHours(){\n+        return Math.round(amount / 60f);\n     }\n }"
  },
  {
    "sha": "d5ba8a164b2806196fd84c1af0d94c28c01576ee",
    "filename": "task03/src/com/example/task03/Seconds.java",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/blob/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/Seconds.java",
    "raw_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/raw/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/Seconds.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/5-java-oop-principles/contents/task03/src/com/example/task03/Seconds.java?ref=10fc92b196e8b07082302df08aa8923af11c9a75",
    "patch": "@@ -23,6 +23,10 @@ public long toSeconds() {\n \n     @Override\n     public long toMinutes() {\n-        return Math.round(amount / 60);\n+        return Math.round(amount / 60f);\n+    }\n+\n+    public long getHours(){\n+        return Math.round(amount / 3600f);\n     }\n }"
  },
  {
    "sha": "cc8bb86388f0a1518f806546a6cb5a762467aff2",
    "filename": "task03/src/com/example/task03/TimeUnit.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/blob/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/TimeUnit.java",
    "raw_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/raw/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/TimeUnit.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/5-java-oop-principles/contents/task03/src/com/example/task03/TimeUnit.java?ref=10fc92b196e8b07082302df08aa8923af11c9a75",
    "patch": "@@ -28,4 +28,5 @@\n      */\n     long toMinutes();\n \n+    long getHours();\n }"
  },
  {
    "sha": "9c977fda34142e12f350e04ba210ef18a09d2faf",
    "filename": "task03/src/com/example/task03/TimeUnitUtils.java",
    "status": "modified",
    "additions": 42,
    "deletions": 15,
    "changes": 57,
    "blob_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/blob/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/TimeUnitUtils.java",
    "raw_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/raw/10fc92b196e8b07082302df08aa8923af11c9a75/task03/src/com/example/task03/TimeUnitUtils.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/5-java-oop-principles/contents/task03/src/com/example/task03/TimeUnitUtils.java?ref=10fc92b196e8b07082302df08aa8923af11c9a75",
    "patch": "@@ -4,24 +4,51 @@\n  * Класс, в котором собраны методы для работы с {@link TimeUnit}\n  */\n public class TimeUnitUtils {\n-\n-    /**\n-     * Конвертирует интервал в секундах в интервал в миллисекундах\n-     *\n-     * @param seconds интервал в секундах\n-     * @return интервал в миллисекундах\n-     */\n     public static Milliseconds toMillis(Seconds seconds) {\n         return new Milliseconds(seconds.toMillis());\n     }\n \n-    /**\n-     * Конвертирует интервал в миллисекундах в интервал в секундах\n-     *\n-     * @param millis интервал в миллисекундах\n-     * @return интервал в секундах\n-     */\n-    public static Seconds toSeconds(Milliseconds millis) {\n-        return new Seconds(millis.toSeconds());\n+    public static Milliseconds toMillis(Minutes minutes) {\n+        return new Milliseconds(minutes.toMillis());\n+    }\n+    public static Milliseconds toMillis(Hours hours) {\n+        return new Milliseconds(hours.toMillis());\n+    }\n+\n+    public static Seconds toSeconds (Milliseconds milliseconds){\n+        return new Seconds(milliseconds.toSeconds());\n+    }\n+\n+    public static Seconds toSeconds (Minutes minutes){\n+        return new Seconds(minutes.toSeconds());\n     }\n+\n+    public static Seconds toSeconds (Hours hours){\n+        return new Seconds(hours.toSeconds());\n+    }\n+\n+    public static Minutes toMinutes(Milliseconds milliseconds){\n+        return new Minutes(milliseconds.toMinutes());\n+    }\n+\n+    public static Minutes toMinutes(Seconds seconds){\n+        return new Minutes(seconds.toMinutes());\n+    }\n+\n+    public static Minutes toMinutes(Hours hours){\n+        return new Minutes(hours.toMinutes());\n+    }\n+\n+    public static Hours getHours(Milliseconds milliseconds){\n+        return new Hours(milliseconds.getHours());\n+    }\n+\n+    public static Hours getHours(Seconds seconds){\n+        return new Hours(seconds.getHours());\n+    }\n+\n+    public static Hours getHours(Minutes minutes){\n+        return new Hours(minutes.getHours());\n+    }\n+\n }"
  }
]
