[
  {
    "sha": "63bc32ecdb962709c2d4eea6b60f7838e7018f30",
    "filename": "task01/src/com/example/task01/Logger.java",
    "status": "added",
    "additions": 84,
    "deletions": 0,
    "changes": 84,
    "blob_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/blob/85c78136809e1d2a3531f31e1cf66f1dde8ee4a7/task01/src/com/example/task01/Logger.java",
    "raw_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/raw/85c78136809e1d2a3531f31e1cf66f1dde8ee4a7/task01/src/com/example/task01/Logger.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/5-java-oop-principles/contents/task01/src/com/example/task01/Logger.java?ref=85c78136809e1d2a3531f31e1cf66f1dde8ee4a7",
    "patch": "@@ -0,0 +1,84 @@\n+package com.example.task01;\n+\n+import javax.annotation.processing.SupportedSourceVersion;\n+import java.text.MessageFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.HashMap;\n+\n+public class Logger {\n+    enum Level {\n+        DEBUG,\n+        INFO,\n+        WARNING,\n+        ERROR\n+    }\n+\n+    private String name;\n+    private static HashMap<String, Logger> loggers = new HashMap<>();\n+    private Level level;\n+    private SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy.MM.dd HH:mm:ss\");\n+\n+    public Logger(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public static Logger getLogger(String name) {\n+        return loggers.containsKey(name) ? loggers.get(name) : new Logger(name);\n+    }\n+\n+    public void setLevel(Level level) {\n+        this.level = level;\n+    }\n+\n+    public Level getLevel() {\n+        return this.level;\n+    }\n+\n+    public void log(Level level, String message) {\n+        if (level.ordinal() >= this.level.ordinal())\n+            System.out.println(MessageFormat.format(\"[{0}] {1} {2} - {3}\",\n+                    level, dateFormat.format(new Date()), name, message));\n+    }\n+\n+    public void log(Level level, String message, Object... params) {\n+        log(level, MessageFormat.format(message, params));\n+    }\n+\n+    public void debug(String message){\n+        log(Level.DEBUG, message);\n+    }\n+\n+    public void debug(String message, Object... params){\n+        debug(String.format(message, params));\n+    }\n+\n+    public void info(String message){\n+        log(Level.INFO, message);\n+    }\n+\n+    public void info(String message, Object... params){\n+        info(String.format(message, params));\n+    }\n+\n+    public void warning(String message){\n+        log(Level.WARNING, message);\n+    }\n+\n+    public void warning(String message, Object... params){\n+        warning(String.format(message, params));\n+    }\n+\n+    public void error(String message){\n+        log(Level.ERROR, message);\n+    }\n+\n+    public void error(String message, Object... params){\n+        error(String.format(message, params));\n+    }\n+}"
  }
]
