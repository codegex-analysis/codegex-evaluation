[
  {
    "sha": "8f5436def6308e8b74a82d1f9d7f6b631ad7d5ca",
    "filename": "task01/src/com/example/task01/Logger.java",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/blob/0152d184088058b6967ebc9a0b23da2a04c8f3a2/task01/src/com/example/task01/Logger.java",
    "raw_url": "https://github.com/ulearn-me-course-java/5-java-oop-principles/raw/0152d184088058b6967ebc9a0b23da2a04c8f3a2/task01/src/com/example/task01/Logger.java",
    "contents_url": "https://api.github.com/repos/ulearn-me-course-java/5-java-oop-principles/contents/task01/src/com/example/task01/Logger.java?ref=0152d184088058b6967ebc9a0b23da2a04c8f3a2",
    "patch": "@@ -0,0 +1,82 @@\n+package com.example.task01;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class Logger {\n+    public enum Level {\n+        DEBUG,\n+        INFO,\n+        WARNING,\n+        ERROR\n+    }\n+\n+    private final String name;\n+    private static HashMap<String, Logger> existLoggers = new HashMap<>();\n+    private Level level;\n+\n+    private Logger(String name) {\n+        this.name = name;\n+    }\n+\n+    public static Logger getLogger(String name) {\n+        return existLoggers.containsKey(name) ? existLoggers.get(name) : new Logger(name);\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setLevel(Level lvl) {\n+        this.level = lvl;\n+    }\n+\n+    public Level getLevel() {\n+        return level;\n+    }\n+\n+    public void debug(String message) {\n+        log(Level.DEBUG, message);\n+    }\n+\n+    public void debug(String format, Object... args) {\n+        log(Level.DEBUG, format, args);\n+    }\n+\n+    public void info(String message) {\n+        log(Level.INFO, message);\n+    }\n+\n+    public void info(String format, Object... args) {\n+        log(Level.DEBUG, format, args);\n+    }\n+\n+    public void warning(String message) {\n+        log(Level.WARNING, message);\n+    }\n+\n+    public void warning(String format, Object... args) {\n+        log(Level.DEBUG, format, args);\n+    }\n+\n+    public void error(String message) {\n+        log(Level.ERROR, message);\n+    }\n+\n+    public void error(String format, Object... args) {\n+        log(Level.DEBUG, format, args);\n+    }\n+\n+    public void log(Level lvl, String message) {\n+        if (lvl.ordinal() < level.ordinal()) return;\n+        SimpleDateFormat dt = new SimpleDateFormat(\"yyyy.MM.dd hh:mm:ss\");\n+        System.out.printf(\"[%s] %s %s - %s%n\", level, dt.format(new Date()), name, message);\n+    }\n+\n+    public void log(Level lvl, String format, Object... args) {\n+        log(level, String.format(format, args));\n+    }\n+\n+}"
  }
]
