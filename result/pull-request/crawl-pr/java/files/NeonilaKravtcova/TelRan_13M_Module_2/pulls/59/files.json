[
  {
    "sha": "e1944bba7d62899d1bd15eedf528aaa3aa70f273",
    "filename": "21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/LogEntry.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/blob/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/LogEntry.java",
    "raw_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/raw/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/LogEntry.java",
    "contents_url": "https://api.github.com/repos/NeonilaKravtcova/TelRan_13M_Module_2/contents/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/LogEntry.java?ref=b6519b699f2645b336e9a2fca68e4350d8016370",
    "patch": "@@ -0,0 +1,36 @@\n+package de.telran;\n+\n+public class LogEntry {\n+\n+    String login;\n+    String url;\n+\n+    public LogEntry(String login, String url) {\n+        this.login = login;\n+        this.url = url;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof LogEntry)) return false;\n+\n+        LogEntry logEntry = (LogEntry) o;\n+\n+        if (!login.equals(logEntry.login)) return false;\n+        return url.equals(logEntry.url);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = login.hashCode();\n+        result = 31 * result + url.hashCode();\n+        return result;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"login \" + login + \", url = \" + url + \"\\n\";\n+    }\n+\n+}"
  },
  {
    "sha": "aa57b9da51465cef4acfb44f5eca97dfe961bb0c",
    "filename": "21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/LogEntryService.java",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/blob/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/LogEntryService.java",
    "raw_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/raw/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/LogEntryService.java",
    "contents_url": "https://api.github.com/repos/NeonilaKravtcova/TelRan_13M_Module_2/contents/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/LogEntryService.java?ref=b6519b699f2645b336e9a2fca68e4350d8016370",
    "patch": "@@ -0,0 +1,22 @@\n+package de.telran;\n+\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+public class LogEntryService {\n+\n+    public Map<String, Long> clickCounter(List<LogEntry> logEntries){\n+        return logEntries\n+                .stream()\n+                .collect(Collectors.groupingBy(entry -> entry.url, Collectors.counting()));\n+    }\n+\n+    public Map<String, Long> getUniqueEntriesByUrl(List<LogEntry> logEntries){\n+        return new HashSet<>(logEntries)\n+                .stream()\n+                .collect(Collectors.groupingBy(entry -> entry.url, Collectors.counting()));\n+    }\n+\n+}"
  },
  {
    "sha": "88458bbf2510b5f3774ba24d79ad86aa9d33aa1d",
    "filename": "21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/Transaction.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/blob/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/Transaction.java",
    "raw_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/raw/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/Transaction.java",
    "contents_url": "https://api.github.com/repos/NeonilaKravtcova/TelRan_13M_Module_2/contents/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/Transaction.java?ref=b6519b699f2645b336e9a2fca68e4350d8016370",
    "patch": "@@ -0,0 +1,13 @@\n+package de.telran;\n+\n+public class Transaction {\n+\n+    long sum;\n+    String account;\n+\n+    public Transaction(long sum, String account) {\n+        this.sum = sum;\n+        this.account = account;\n+    }\n+\n+}"
  },
  {
    "sha": "cdb87ec602b4b904318856c5f4a5a0ee47e06692",
    "filename": "21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/TransactionService.java",
    "status": "added",
    "additions": 16,
    "deletions": 0,
    "changes": 16,
    "blob_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/blob/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/TransactionService.java",
    "raw_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/raw/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/TransactionService.java",
    "contents_url": "https://api.github.com/repos/NeonilaKravtcova/TelRan_13M_Module_2/contents/21_02_26_collectors_exercises_transactions_and_urls/src/de/telran/TransactionService.java?ref=b6519b699f2645b336e9a2fca68e4350d8016370",
    "patch": "@@ -0,0 +1,16 @@\n+package de.telran;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+public class TransactionService {\n+\n+    public Map<String, Long> getTransactionsSums(List<Transaction> transactions){\n+        return transactions\n+                .stream()\n+                .collect(Collectors.groupingBy(transaction -> transaction.account,\n+                        Collectors.summingLong(account -> account.sum)));\n+    }\n+\n+}"
  },
  {
    "sha": "c0a558848568a49a722e6e9d258fc3c89cf34187",
    "filename": "21_02_26_collectors_exercises_transactions_and_urls/test/de/telran/LogEntryServiceTest.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/blob/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/test/de/telran/LogEntryServiceTest.java",
    "raw_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/raw/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/test/de/telran/LogEntryServiceTest.java",
    "contents_url": "https://api.github.com/repos/NeonilaKravtcova/TelRan_13M_Module_2/contents/21_02_26_collectors_exercises_transactions_and_urls/test/de/telran/LogEntryServiceTest.java?ref=b6519b699f2645b336e9a2fca68e4350d8016370",
    "patch": "@@ -0,0 +1,55 @@\n+package de.telran;\n+\n+import org.junit.Test;\n+\n+import java.util.*;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class LogEntryServiceTest {\n+\n+    LogEntry entry01 = new LogEntry(\"Vasya\", \"url_01\");\n+    LogEntry entry02 = new LogEntry(\"Petya\", \"url_01\");\n+    LogEntry entry03 = new LogEntry(\"Pavel\", \"url_02\");\n+    LogEntry entry04 = new LogEntry(\"Stepan\", \"url_01\");\n+    LogEntry entry05 = new LogEntry(\"Vasya\", \"url_01\");\n+    LogEntry entry06 = new LogEntry(\"Vasya\", \"url_01\");\n+    LogEntry entry07 = new LogEntry(\"Olga\", \"url_02\");\n+    LogEntry entry08 = new LogEntry(\"Ivan\", \"url_02\");\n+    LogEntry entry09 = new LogEntry(\"Pavel\", \"url_02\");\n+    LogEntry entry10 = new LogEntry(\"Pavel\", \"url_03\");\n+    LogEntry entry11 = new LogEntry(\"Vasya\", \"url_03\");\n+    LogEntry entry12 = new LogEntry(\"Olga\", \"url_01\");\n+    LogEntry entry13 = new LogEntry(\"Olga\", \"url_02\");\n+    LogEntry entry14 = new LogEntry(\"Pavel\", \"url_01\");\n+    LogEntry entry15 = new LogEntry(\"Vasya\", \"url_01\");\n+    LogEntry entry16 = new LogEntry(\"Vasya\", \"url_04\");\n+\n+    List<LogEntry> logEntries = new ArrayList<>(Arrays.asList(entry01, entry02, entry03, entry04, entry05,\n+            entry06, entry07, entry08, entry09, entry10,\n+            entry11, entry12, entry13, entry14, entry15, entry16));\n+\n+    LogEntryService service = new LogEntryService();\n+\n+    Map<String, Long> res = new HashMap<>();\n+\n+    @Test\n+    public void clickCounterTest(){\n+        res.put(\"url_01\", 8L);\n+        res.put(\"url_02\", 5L);\n+        res.put(\"url_03\", 2L);\n+        res.put(\"url_04\", 1L);\n+        assertEquals(res, service.clickCounter(logEntries));\n+    }\n+\n+    @Test\n+    public void getUniqueEntriesByUrlTest(){\n+        res.put(\"url_01\", 5L);\n+        res.put(\"url_02\", 3L);\n+        res.put(\"url_03\", 2L);\n+        res.put(\"url_04\", 1L);\n+        assertEquals(res, service.getUniqueEntriesByUrl(logEntries));\n+    }\n+\n+}"
  },
  {
    "sha": "9434404eb2e3d08060ed392bcf4fc83c4121bb37",
    "filename": "21_02_26_collectors_exercises_transactions_and_urls/test/de/telran/TransactionServiceTest.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/blob/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/test/de/telran/TransactionServiceTest.java",
    "raw_url": "https://github.com/NeonilaKravtcova/TelRan_13M_Module_2/raw/b6519b699f2645b336e9a2fca68e4350d8016370/21_02_26_collectors_exercises_transactions_and_urls/test/de/telran/TransactionServiceTest.java",
    "contents_url": "https://api.github.com/repos/NeonilaKravtcova/TelRan_13M_Module_2/contents/21_02_26_collectors_exercises_transactions_and_urls/test/de/telran/TransactionServiceTest.java?ref=b6519b699f2645b336e9a2fca68e4350d8016370",
    "patch": "@@ -0,0 +1,38 @@\n+package de.telran;\n+\n+import org.junit.Test;\n+\n+import java.util.*;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+public class TransactionServiceTest {\n+\n+    Transaction tr01 = new Transaction(10, \"Acc01\");\n+    Transaction tr02 = new Transaction(15, \"Acc02\");\n+    Transaction tr03 = new Transaction(30, \"Acc03\");\n+    Transaction tr04 = new Transaction(5, \"Acc01\");\n+    Transaction tr05 = new Transaction(7, \"Acc01\");\n+    Transaction tr06 = new Transaction(15, \"Acc02\");\n+    Transaction tr07 = new Transaction(8, \"Acc03\");\n+    Transaction tr08 = new Transaction(15, \"Acc02\");\n+    Transaction tr09 = new Transaction(15, \"Acc02\");\n+    Transaction tr10 = new Transaction(50, \"Acc04\");\n+\n+    TransactionService service = new TransactionService();\n+\n+    List<Transaction> transactions = new ArrayList<>(Arrays.asList(tr01, tr02, tr03, tr04, tr05,\n+            tr06, tr07, tr08, tr09, tr10));\n+\n+    Map<String, Long> res = new HashMap<>();\n+\n+    @Test\n+    public void getTransactionsSums(){\n+        res.put(\"Acc01\", 22L);\n+        res.put(\"Acc02\", 60L);\n+        res.put(\"Acc03\", 38L);\n+        res.put(\"Acc04\", 50L);\n+        assertEquals(res, service.getTransactionsSums(transactions));\n+    }\n+\n+}"
  }
]
