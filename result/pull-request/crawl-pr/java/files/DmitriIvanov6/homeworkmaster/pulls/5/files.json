[
  {
    "sha": "24d6c65a602d362134723dfde695996bf9592f2d",
    "filename": "src/Lesson4/Lesson4.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/DmitriIvanov6/homeworkmaster/blob/15d5a0d199d341d706b387465f50779dc933db2d/src/Lesson4/Lesson4.java",
    "raw_url": "https://github.com/DmitriIvanov6/homeworkmaster/raw/15d5a0d199d341d706b387465f50779dc933db2d/src/Lesson4/Lesson4.java",
    "contents_url": "https://api.github.com/repos/DmitriIvanov6/homeworkmaster/contents/src/Lesson4/Lesson4.java?ref=15d5a0d199d341d706b387465f50779dc933db2d",
    "patch": "@@ -0,0 +1,7 @@\n+package Lesson4;\n+\n+public class Lesson4 {\n+    public static void main(String[] args) {\n+        TicTacToe.start();\n+    }\n+}"
  },
  {
    "sha": "8fdd622b17a0e3c9311c67bfd3b6cce25880e7d6",
    "filename": "src/Lesson4/TicTacToe.java",
    "status": "added",
    "additions": 308,
    "deletions": 0,
    "changes": 308,
    "blob_url": "https://github.com/DmitriIvanov6/homeworkmaster/blob/15d5a0d199d341d706b387465f50779dc933db2d/src/Lesson4/TicTacToe.java",
    "raw_url": "https://github.com/DmitriIvanov6/homeworkmaster/raw/15d5a0d199d341d706b387465f50779dc933db2d/src/Lesson4/TicTacToe.java",
    "contents_url": "https://api.github.com/repos/DmitriIvanov6/homeworkmaster/contents/src/Lesson4/TicTacToe.java?ref=15d5a0d199d341d706b387465f50779dc933db2d",
    "patch": "@@ -0,0 +1,308 @@\n+package Lesson4;\n+\n+import java.util.Random;\n+import java.util.Scanner;\n+\n+public class TicTacToe {\n+    static void start() {\n+        char[][] field = emptyField();\n+        drawField(field);\n+\n+        while (true) {\n+            doPlayerMove(field);\n+            drawField(field);\n+            if (isWin(field, 'X')) {\n+                System.out.println(\"Поздравляем, вы победитель!\");\n+                break;\n+            }\n+            if (isDraw(field)) {\n+                System.out.println(\"Ничья\");\n+                break;\n+            }\n+\n+            doAICounter(field);\n+            drawField(field);\n+            if (isWin(field, 'O')) {\n+                System.out.println(\"Вы проиграли\");\n+                break;\n+            }\n+        }\n+    }\n+\n+    static boolean isDraw(char[][] field) {\n+        for (int i = 0; i < field.length; i++) {\n+            for (int j = 0; j < field.length; j++) {\n+                if (isFreeCell(field, i, j)) {\n+                    return false;\n+                }\n+            }\n+        }\n+        return true;\n+    }\n+\n+    static boolean isWin(char[][] field, char symbol) {\n+\n+        //Проверка горизонтали\n+        for (int i = 0; i < field.length; i++) {\n+            int wincount = 0;\n+            for (int j = 0; j < field.length; j++) {\n+                if (symbol == field[i][j]) {\n+                    wincount++;\n+                } else if (field[i][j] != symbol && j != 0) {\n+                    break;\n+                }\n+                if (wincount == 4) {\n+                    return true;\n+                }\n+            }\n+        }\n+        //Проверка вертикали\n+        for (int j = 0; j < field.length; j++) {\n+            int wincount = 0;\n+            for (int i = 0; i < field.length; i++) {\n+                if (symbol == field[i][j]) {\n+                    wincount++;\n+                } else if (field[i][j] != symbol && i != 0) {\n+                    break;\n+                }\n+                if (wincount == 4) {\n+                    return true;\n+                }\n+            }\n+        }\n+\n+        // Проверка левых диагоналей, для поля 5 на 5 достаточно проверить лишь 3, при условии 4 фишек в ряд\n+        int i = 1;\n+        int j = 0;\n+        int wincount = 0;\n+        while (i <= 4) {\n+            if (symbol == field[i][j]) {\n+                wincount++;\n+            }\n+            i++;\n+            j++;\n+            if (wincount == 4) {\n+                return true;\n+            }\n+        }\n+        i = 0;\n+        j = 0;\n+        wincount = 0;\n+        while (i <= 4) {\n+            if (symbol == field[i][j]) {\n+                wincount++;\n+            } else if (field[i][j] != symbol && i != 0) {\n+                break;\n+            }\n+            i++;\n+            j++;\n+            if (wincount == 4) {\n+                return true;\n+            }\n+        }\n+        i = 0;\n+        j = 1;\n+        wincount = 0;\n+        while (i <= 3) {\n+            if (symbol == field[i][j]) {\n+                wincount++;\n+            }\n+            i++;\n+            j++;\n+            if (wincount == 4) {\n+                return true;\n+            }\n+        }\n+        // Проверка правых диагоналей\n+        i = 0;\n+        j = 3;\n+        wincount = 0;\n+        while (i <= 3) {\n+            if (symbol == field[i][j]) {\n+                wincount++;\n+            }\n+            i++;\n+            j--;\n+            if (wincount == 4) {\n+                return true;\n+            }\n+        }\n+        i = 0;\n+        j = 4;\n+        wincount = 0;\n+        while (i <= 4) {\n+            if (symbol == field[i][j]) {\n+                wincount++;\n+            } else if (field[i][j] != symbol && i != 0) {\n+                break;\n+            }\n+            i++;\n+            j--;\n+            if (wincount == 4) {\n+                return true;\n+            }\n+        }\n+        i = 1;\n+        j = 4;\n+        wincount = 0;\n+        while (i <= 4) {\n+            if (symbol == field[i][j]) {\n+                wincount++;\n+            }\n+            i++;\n+            j--;\n+            if (wincount == 4) {\n+                return true;\n+            }\n+        }\n+\n+\n+        return false;\n+    }\n+\n+    static void doPlayerMove(char[][] field) {\n+        int h, v;\n+\n+        do {\n+            h = getCoordinate(field.length, 'h');\n+            v = getCoordinate(field.length, 'v');\n+        } while (isOccupiedCell(field, h, v));\n+\n+        field[h][v] = 'X';\n+    }\n+\n+    static int getCoordinate(int length, char symbol) {\n+        Scanner scanner = new Scanner(System.in);\n+        int coordinate;\n+\n+        do {\n+            System.out.printf(\"Пожалуйста введите значение по %s...%n\", symbol);\n+            coordinate = scanner.nextInt() - 1;\n+        } while (coordinate < 0 || coordinate >= length);\n+\n+        return coordinate;\n+    }\n+\n+    static void doAIMove(char[][] field) {\n+        Random random = new Random();\n+        int h, v;\n+\n+        do {\n+            h = random.nextInt(5);\n+            v = random.nextInt(5);\n+        } while (isOccupiedCell(field, h, v));\n+\n+        field[h][v] = 'O';\n+\n+\n+    }\n+\n+    static boolean doAICounterHorizontal(char[][] field) {\n+        boolean movemade = false;\n+        for (int i = 0; i < field.length; i++) {\n+            int h, v;\n+            Random random = new Random();\n+            int wincount = 0;\n+            boolean nowinline = true;\n+            for (int j = 1; j <= 3; j++) {\n+                if (field[i][j] == 'O') {\n+                    nowinline = false;\n+                    break;\n+                }\n+            }\n+            for (int j = 0; j < field.length; j++) {\n+                if ('X' == field[i][j]) {\n+                    wincount++;\n+                } else if (field[i][j] != 'X' && j != 0) {\n+                    break;\n+                }\n+\n+            }\n+            if (wincount >= 2 && nowinline) {\n+                do {\n+                    h = i;\n+                    v = random.nextInt(5);\n+                } while (isOccupiedCell(field, h, v));\n+                field[h][v] = 'O';\n+                movemade = true;\n+                break;\n+            }\n+        }\n+        return movemade;\n+    }\n+\n+    static boolean doAICounterVertical(char[][] field) {\n+        boolean movemade = false;\n+        for (int j = 0; j < field.length; j++) {\n+            int h, v;\n+            Random random = new Random();\n+            int wincount = 0;\n+            boolean nowinline = false;\n+            for (int i = 1; i <= 3; i++) {\n+                if (field[i][j] == 'O') {\n+                    nowinline = true;\n+                    break;\n+                }\n+            }\n+            for (int i = 0; i < field.length; i++) {\n+                if ('X' == field[i][j]) {\n+                    wincount++;\n+                } else if (field[i][j] != 'X' && i != 0) {\n+                    break;\n+                }\n+\n+            }\n+            if (wincount >= 2 && !nowinline) {\n+                do {\n+                    h = random.nextInt(5);\n+                    v = j;\n+                } while (isOccupiedCell(field, h, v));\n+                field[h][v] = 'O';\n+                movemade = true;\n+                break;\n+            }\n+        }\n+        return movemade;\n+    }\n+\n+\n+    static void doAICounter(char[][] field) {\n+        if (!doAICounterHorizontal(field) && !doAICounterVertical(field)) {\n+            doAIMove(field);\n+        }\n+\n+\n+    }\n+\n+\n+    static boolean isFreeCell(char[][] field, int h, int v) {\n+        return !isOccupiedCell(field, h, v);\n+    }\n+\n+    static boolean isOccupiedCell(char[][] field, int h, int v) {\n+        return field[h][v] != '-';\n+    }\n+\n+    static char[][] emptyField() {\n+        return new char[][]{\n+                {'-', '-', '-', '-', '-'},\n+                {'-', '-', '-', '-', '-'},\n+                {'-', '-', '-', '-', '-'},\n+                {'-', '-', '-', '-', '-'},\n+                {'-', '-', '-', '-', '-'}\n+        };\n+    }\n+\n+    static void drawField(char[][] field) {\n+        for (int i = 0; i < field.length; i++) {\n+            for (int j = 0; j < field.length; j++) {\n+                System.out.print(field[i][j]);\n+                System.out.print(\" \");\n+            }\n+            System.out.println();\n+        }\n+        System.out.println();\n+    }\n+\n+\n+}"
  },
  {
    "sha": "87d5a52293cd1c9d9df516c4a25040fcbbdc8d24",
    "filename": "src/Lesson5/Employee.java",
    "status": "added",
    "additions": 31,
    "deletions": 0,
    "changes": 31,
    "blob_url": "https://github.com/DmitriIvanov6/homeworkmaster/blob/15d5a0d199d341d706b387465f50779dc933db2d/src/Lesson5/Employee.java",
    "raw_url": "https://github.com/DmitriIvanov6/homeworkmaster/raw/15d5a0d199d341d706b387465f50779dc933db2d/src/Lesson5/Employee.java",
    "contents_url": "https://api.github.com/repos/DmitriIvanov6/homeworkmaster/contents/src/Lesson5/Employee.java?ref=15d5a0d199d341d706b387465f50779dc933db2d",
    "patch": "@@ -0,0 +1,31 @@\n+package Lesson5;\n+\n+public class Employee {\n+    private String name;\n+    private String position;\n+    private String email;\n+    private String phone;\n+    private int salary;\n+    private int age;\n+\n+    public Employee (String name, String position, String email, String phone, int salary, int age) {\n+        this.name = name;\n+        this.position = position;\n+        this.email = email;\n+        this.phone = phone;\n+        this.salary = salary;\n+        this.age = age;\n+    }\n+\n+    public int getAge() {\n+        return age;\n+    }\n+\n+    public void printInfo() {\n+        System.out.printf(\"Сотрудник Имя: %s, должность: %s, почта %s, телефон %s, з/п: %s, возраст %s%n\", name, position,\n+                email, phone, salary, age);\n+    }\n+\n+\n+\n+}"
  },
  {
    "sha": "9b03da4b1c80fb82d4e78174b7ae501f0098680d",
    "filename": "src/Lesson5/Lesson5.java",
    "status": "added",
    "additions": 23,
    "deletions": 0,
    "changes": 23,
    "blob_url": "https://github.com/DmitriIvanov6/homeworkmaster/blob/15d5a0d199d341d706b387465f50779dc933db2d/src/Lesson5/Lesson5.java",
    "raw_url": "https://github.com/DmitriIvanov6/homeworkmaster/raw/15d5a0d199d341d706b387465f50779dc933db2d/src/Lesson5/Lesson5.java",
    "contents_url": "https://api.github.com/repos/DmitriIvanov6/homeworkmaster/contents/src/Lesson5/Lesson5.java?ref=15d5a0d199d341d706b387465f50779dc933db2d",
    "patch": "@@ -0,0 +1,23 @@\n+package Lesson5;\n+\n+public class Lesson5 {\n+    public static void main(String[] args) {\n+        Employee[] persArray = new Employee[5];\n+        persArray[0] = new Employee(\"Иванов И.И.\", \"фронтэнд\", \"iivanov@nomail.ru\", \"+79991234567\",\n+                30000, 25);\n+        persArray[1] = new Employee(\"Петров П.П.\", \"бэкэнд\", \"ppetrov@nomail.ru\", \"+71231233232\",\n+                30000, 41);\n+        persArray[2] = new Employee(\"Сидоров С.С.\", \"фулстек\", \"sidorovss@nomail.ru\", \"+73113123414\",\n+                60000, 33);\n+        persArray[3] = new Employee(\"Кузнецов В.В.\", \"тестировщик\", \"vvsidorov@nomail.ru\", \"+75435436464\",\n+                15000, 18);\n+        persArray[4] = new Employee(\"Смирнов А.А.\", \"проджект менеджер\", \"bigboss@nomail.ru\", \"+76661726541\",\n+                80000, 52);\n+        for (int i = 0; i < persArray.length; i++) {\n+            if (persArray[i].getAge() > 40) {\n+                persArray[i].printInfo();\n+            }\n+        }\n+    }\n+}\n+"
  }
]
