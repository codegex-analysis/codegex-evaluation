[
  {
    "sha": "bc9a7e466bade695ee98488cc3caa84c9a7bc05a",
    "filename": "README.md",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/LaunchCodeEducation/coding-events/blob/0c285e8ac7015eb7bed802de95b408082fdd29a7/README.md",
    "raw_url": "https://github.com/LaunchCodeEducation/coding-events/raw/0c285e8ac7015eb7bed802de95b408082fdd29a7/README.md",
    "contents_url": "https://api.github.com/repos/LaunchCodeEducation/coding-events/contents/README.md?ref=0c285e8ac7015eb7bed802de95b408082fdd29a7",
    "patch": "@@ -0,0 +1,7 @@\n+# coding-events\n+## Purpose of the app\n+\n+## Current state of the app\n+\n+## Future improvements\n+  ### Person class"
  },
  {
    "sha": "11fdf4df98382dda2b32fda508b8134bc5f7d6b2",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/LaunchCodeEducation/coding-events/blob/0c285e8ac7015eb7bed802de95b408082fdd29a7/build.gradle",
    "raw_url": "https://github.com/LaunchCodeEducation/coding-events/raw/0c285e8ac7015eb7bed802de95b408082fdd29a7/build.gradle",
    "contents_url": "https://api.github.com/repos/LaunchCodeEducation/coding-events/contents/build.gradle?ref=0c285e8ac7015eb7bed802de95b408082fdd29a7",
    "patch": "@@ -20,6 +20,7 @@ repositories {\n }\n \n dependencies {\n+\n \timplementation 'org.springframework.boot:spring-boot-starter-thymeleaf'\n \timplementation 'org.springframework.boot:spring-boot-starter-web'\n \timplementation 'org.springframework.boot:spring-boot-starter-data-jpa'"
  },
  {
    "sha": "e579c8d3e736d9da7a3f875dceb12dc96b825e92",
    "filename": "src/main/java/org/launchcode/codingevents/controllers/EventController.java",
    "status": "modified",
    "additions": 20,
    "deletions": 5,
    "changes": 25,
    "blob_url": "https://github.com/LaunchCodeEducation/coding-events/blob/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/java/org/launchcode/codingevents/controllers/EventController.java",
    "raw_url": "https://github.com/LaunchCodeEducation/coding-events/raw/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/java/org/launchcode/codingevents/controllers/EventController.java",
    "contents_url": "https://api.github.com/repos/LaunchCodeEducation/coding-events/contents/src/main/java/org/launchcode/codingevents/controllers/EventController.java?ref=0c285e8ac7015eb7bed802de95b408082fdd29a7",
    "patch": "@@ -1,15 +1,17 @@\n package org.launchcode.codingevents.controllers;\n \n+import org.launchcode.codingevents.data.EventCategoryRepository;\n import org.launchcode.codingevents.data.EventRepository;\n import org.launchcode.codingevents.models.Event;\n-import org.launchcode.codingevents.models.EventType;\n+import org.launchcode.codingevents.models.EventCategory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Controller;\n import org.springframework.ui.Model;\n import org.springframework.validation.Errors;\n import org.springframework.web.bind.annotation.*;\n \n import javax.validation.Valid;\n+import java.util.Optional;\n \n /**\n  * Created by Chris Bay\n@@ -21,18 +23,31 @@\n     @Autowired\n     private EventRepository eventRepository;\n \n+    @Autowired\n+    private EventCategoryRepository eventCategoryRepository;\n     @GetMapping\n-    public String displayAllEvents(Model model) {\n-        model.addAttribute(\"title\", \"All Events\");\n-        model.addAttribute(\"events\", eventRepository.findAll());\n+    public String displayAllEvents(@RequestParam(required = false) Integer categoryId, Model model) {\n+        if (categoryId == null) {\n+            model.addAttribute(\"title\", \"All Events\");\n+            model.addAttribute(\"events\", eventRepository.findAll());\n+        } else {\n+           Optional<EventCategory> result = eventCategoryRepository.findById(categoryId);\n+           if (result.isEmpty()){\n+               model.addAttribute(\"title\", \"Invalud Category ID:\" + categoryId);\n+           } else {\n+               EventCategory category = result.get();\n+               model.addAttribute(\"title\", \"Event in category: \" + category.getName());\n+               model. addAttribute(\"events\", category.getEvents());\n+           }\n+        }\n         return \"events/index\";\n     }\n \n     @GetMapping(\"create\")\n     public String displayCreateEventForm(Model model) {\n         model.addAttribute(\"title\", \"Create Event\");\n         model.addAttribute(new Event());\n-        model.addAttribute(\"types\", EventType.values());\n+        model.addAttribute(\"categories\", eventCategoryRepository.findAll());\n         return \"events/create\";\n     }\n "
  },
  {
    "sha": "3eef4610fdff070e7a715e7007f61c9d8867e1ad",
    "filename": "src/main/java/org/launchcode/codingevents/models/AbstractEntity.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/LaunchCodeEducation/coding-events/blob/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/java/org/launchcode/codingevents/models/AbstractEntity.java",
    "raw_url": "https://github.com/LaunchCodeEducation/coding-events/raw/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/java/org/launchcode/codingevents/models/AbstractEntity.java",
    "contents_url": "https://api.github.com/repos/LaunchCodeEducation/coding-events/contents/src/main/java/org/launchcode/codingevents/models/AbstractEntity.java?ref=0c285e8ac7015eb7bed802de95b408082fdd29a7",
    "patch": "@@ -0,0 +1,34 @@\n+package org.launchcode.codingevents.models;\n+\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.MappedSuperclass;\n+import java.util.Objects;\n+\n+@MappedSuperclass\n+public abstract class AbstractEntity {\n+\n+    @Id\n+    @GeneratedValue\n+    private int id;\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+        AbstractEntity entity = (AbstractEntity) o;\n+        return id == entity.id;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(id);\n+    }\n+\n+\n+}\n+"
  },
  {
    "sha": "01b530766987be5a1086d441d1bc295eabdca790",
    "filename": "src/main/java/org/launchcode/codingevents/models/Event.java",
    "status": "modified",
    "additions": 25,
    "deletions": 51,
    "changes": 76,
    "blob_url": "https://github.com/LaunchCodeEducation/coding-events/blob/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/java/org/launchcode/codingevents/models/Event.java",
    "raw_url": "https://github.com/LaunchCodeEducation/coding-events/raw/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/java/org/launchcode/codingevents/models/Event.java",
    "contents_url": "https://api.github.com/repos/LaunchCodeEducation/coding-events/contents/src/main/java/org/launchcode/codingevents/models/Event.java?ref=0c285e8ac7015eb7bed802de95b408082fdd29a7",
    "patch": "@@ -1,44 +1,40 @@\n package org.launchcode.codingevents.models;\n \n-import javax.persistence.Entity;\n-import javax.persistence.GeneratedValue;\n-import javax.persistence.Id;\n+import javax.persistence.*;\n+import javax.validation.Valid;\n import javax.validation.constraints.Email;\n import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.NotNull;\n import javax.validation.constraints.Size;\n import java.util.Objects;\n \n /**\n  * Created by Chris Bay\n  */\n @Entity\n-public class Event {\n+public class Event extends AbstractEntity {\n \n-    @Id\n-    @GeneratedValue\n-    private int id;\n \n     @NotBlank(message = \"Name is required\")\n     @Size(min = 3, max = 50, message = \"Name must be between 3 and 50 characters\")\n     private String name;\n \n-    @Size(max = 500, message = \"Description too long!\")\n-    private String description;\n+    @OneToOne(cascade = CascadeType.ALL)\n+    @Valid\n+    @NotNull\n+    private EventDetails eventDetails;\n \n-    @NotBlank(message = \"Email is required\")\n-    @Email(message = \"Invalid email. Try again.\")\n-    private String contactEmail;\n+    @ManyToOne\n+    @NotNull (message = \"Category is required\")\n+    private EventCategory eventCategory;\n \n-    private EventType type;\n-\n-    public Event(String name, String description, String contactEmail, EventType type) {\n+    public Event(String name, EventCategory eventCategory) {\n         this.name = name;\n-        this.description = description;\n-        this.contactEmail = contactEmail;\n-        this.type = type;\n+        this.eventCategory = eventCategory;\n     }\n \n-    public Event() {}\n+    public Event() {\n+    }\n \n     public String getName() {\n         return name;\n@@ -48,49 +44,27 @@ public void setName(String name) {\n         this.name = name;\n     }\n \n-    public String getDescription() {\n-        return description;\n-    }\n-\n-    public void setDescription(String description) {\n-        this.description = description;\n-    }\n-\n-    public String getContactEmail() {\n-        return contactEmail;\n-    }\n-\n-    public void setContactEmail(String contactEmail) {\n-        this.contactEmail = contactEmail;\n+    public EventCategory getEventCategory() {\n+        return eventCategory;\n     }\n \n-    public EventType getType() {\n-        return type;\n+    public void setEventCategory(EventCategory eventCategory) {\n+        this.eventCategory = eventCategory;\n     }\n \n-    public void setType(EventType type) {\n-        this.type = type;\n+    public EventDetails getEventDetails() {\n+        return eventDetails;\n     }\n \n-    public int getId() {\n-        return id;\n+    public void setEventDetails(EventDetails eventDetails) {\n+        this.eventDetails = eventDetails;\n     }\n \n     @Override\n     public String toString() {\n         return name;\n     }\n \n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (o == null || getClass() != o.getClass()) return false;\n-        Event event = (Event) o;\n-        return id == event.id;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(id);\n-    }\n }\n+\n+"
  },
  {
    "sha": "f9fdaf4e94582d2a248052f80244e0f6938fa862",
    "filename": "src/main/java/org/launchcode/codingevents/models/EventCategory.java",
    "status": "modified",
    "additions": 12,
    "deletions": 21,
    "changes": 33,
    "blob_url": "https://github.com/LaunchCodeEducation/coding-events/blob/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/java/org/launchcode/codingevents/models/EventCategory.java",
    "raw_url": "https://github.com/LaunchCodeEducation/coding-events/raw/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/java/org/launchcode/codingevents/models/EventCategory.java",
    "contents_url": "https://api.github.com/repos/LaunchCodeEducation/coding-events/contents/src/main/java/org/launchcode/codingevents/models/EventCategory.java?ref=0c285e8ac7015eb7bed802de95b408082fdd29a7",
    "patch": "@@ -3,27 +3,30 @@\n import javax.persistence.Entity;\n import javax.persistence.GeneratedValue;\n import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n import javax.validation.constraints.Size;\n+import java.util.ArrayList;\n+import java.util.List;\n import java.util.Objects;\n \n /**\n  * Created by Chris Bay\n  */\n @Entity\n-public class EventCategory {\n+public class EventCategory extends AbstractEntity {\n \n-    @Id\n-    @GeneratedValue\n-    private int id;\n \n-    @Size(min=3, message=\"Name must be at least 3 characters long\")\n+    @Size(min = 3, message = \"Name must be at least 3 characters long\")\n     private String name;\n \n+    @OneToMany(mappedBy = \"eventCategory\")\n+    private final List<Event> events = new ArrayList<>();\n     public EventCategory(@Size(min = 3, message = \"Name must be at least 3 characters long\") String name) {\n         this.name = name;\n     }\n \n-    public EventCategory() {}\n+    public EventCategory() {\n+    }\n \n     public String getName() {\n         return name;\n@@ -33,25 +36,13 @@ public void setName(String name) {\n         this.name = name;\n     }\n \n-    public int getId() {\n-        return id;\n+    public List<Event> getEvents() {\n+        return events;\n     }\n \n     @Override\n     public String toString() {\n         return name;\n     }\n \n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (o == null || getClass() != o.getClass()) return false;\n-        EventCategory that = (EventCategory) o;\n-        return id == that.id;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(id);\n-    }\n-}\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "be2e2192122fc8add263ff9c75cbe0a57b41156e",
    "filename": "src/main/java/org/launchcode/codingevents/models/EventDetails.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/LaunchCodeEducation/coding-events/blob/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/java/org/launchcode/codingevents/models/EventDetails.java",
    "raw_url": "https://github.com/LaunchCodeEducation/coding-events/raw/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/java/org/launchcode/codingevents/models/EventDetails.java",
    "contents_url": "https://api.github.com/repos/LaunchCodeEducation/coding-events/contents/src/main/java/org/launchcode/codingevents/models/EventDetails.java?ref=0c285e8ac7015eb7bed802de95b408082fdd29a7",
    "patch": "@@ -0,0 +1,38 @@\n+package org.launchcode.codingevents.models;\n+\n+import javax.persistence.Entity;\n+import javax.validation.constraints.Email;\n+import javax.validation.constraints.NotBlank;\n+import javax.validation.constraints.Size;\n+\n+@Entity\n+public class EventDetails extends AbstractEntity {\n+    @Size(max = 500, message = \"Description too long!\")\n+    private String description;\n+\n+    @NotBlank(message = \"Email is required\")\n+    @Email(message = \"Invalid email. Try again.\")\n+    private String contactEmail;\n+\n+    public EventDetails(@Size(max = 500, message = \"Description too long!\") String description, @NotBlank(message = \"Email is required\") @Email(message = \"Invalid email. Try again.\") String contactEmail) {\n+        this.description = description;\n+        this.contactEmail = contactEmail;\n+    }\n+    public EventDetails(){}\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public String getContactEmail() {\n+        return contactEmail;\n+    }\n+\n+    public void setContactEmail(String contactEmail) {\n+        this.contactEmail = contactEmail;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+}"
  },
  {
    "sha": "027e089b5305d5deceda698065771d5c51d4add5",
    "filename": "src/main/java/org/launchcode/codingevents/models/EventType.java",
    "status": "removed",
    "additions": 0,
    "deletions": 22,
    "changes": 22,
    "blob_url": "https://github.com/LaunchCodeEducation/coding-events/blob/34c1b4f5a9a8fd2f067b8c59ed51a7d3cb5c9a84/src/main/java/org/launchcode/codingevents/models/EventType.java",
    "raw_url": "https://github.com/LaunchCodeEducation/coding-events/raw/34c1b4f5a9a8fd2f067b8c59ed51a7d3cb5c9a84/src/main/java/org/launchcode/codingevents/models/EventType.java",
    "contents_url": "https://api.github.com/repos/LaunchCodeEducation/coding-events/contents/src/main/java/org/launchcode/codingevents/models/EventType.java?ref=34c1b4f5a9a8fd2f067b8c59ed51a7d3cb5c9a84",
    "patch": "@@ -1,22 +0,0 @@\n-package org.launchcode.codingevents.models;\n-\n-/**\n- * Created by Chris Bay\n- */\n-public enum EventType {\n-\n-    CONFERENCE(\"Conference\"),\n-    MEETUP(\"Meetup\"),\n-    WORKSHOP(\"Workshop\"),\n-    SOCIAL(\"Social\");\n-\n-    private final String displayName;\n-\n-    EventType(String displayName) {\n-        this.displayName = displayName;\n-    }\n-\n-    public String getDisplayName() {\n-        return displayName;\n-    }\n-}"
  },
  {
    "sha": "54014f4885d2535d10189af348abe1d8f43c4f28",
    "filename": "src/main/resources/templates/eventCategories/index.html",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/LaunchCodeEducation/coding-events/blob/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/resources/templates/eventCategories/index.html",
    "raw_url": "https://github.com/LaunchCodeEducation/coding-events/raw/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/resources/templates/eventCategories/index.html",
    "contents_url": "https://api.github.com/repos/LaunchCodeEducation/coding-events/contents/src/main/resources/templates/eventCategories/index.html?ref=0c285e8ac7015eb7bed802de95b408082fdd29a7",
    "patch": "@@ -12,7 +12,7 @@\n     </tr>\n     </thead>\n     <tr th:each=\"category : ${categories}\">\n-        <td th:text=\"${category.name}\"></td>\n+        <td> <a th:text=\"${category.name}\" th:href=\"'/events?categoryId=' + ${category.id}\"></a></td>\n     </tr>\n \n </table>"
  },
  {
    "sha": "05254e3d57ca2421622191b58398e0d5edf32634",
    "filename": "src/main/resources/templates/events/create.html",
    "status": "modified",
    "additions": 10,
    "deletions": 9,
    "changes": 19,
    "blob_url": "https://github.com/LaunchCodeEducation/coding-events/blob/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/resources/templates/events/create.html",
    "raw_url": "https://github.com/LaunchCodeEducation/coding-events/raw/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/resources/templates/events/create.html",
    "contents_url": "https://api.github.com/repos/LaunchCodeEducation/coding-events/contents/src/main/resources/templates/events/create.html?ref=0c285e8ac7015eb7bed802de95b408082fdd29a7",
    "patch": "@@ -14,24 +14,25 @@\n     </div>\n     <div class=\"form-group\">\n         <label>Description\n-            <input th:field=\"${event.description}\" class=\"form-control\">\n+            <input th:field=\"${event.eventDetails.description}\" class=\"form-control\">\n         </label>\n-        <p class=\"error\" th:errors=\"${event.description}\"></p>\n+        <p class=\"error\" th:errors=\"${event.eventDetails.description}\"></p>\n     </div>\n     <div class=\"form-group\">\n         <label>Contact Email\n-            <input th:field=\"${event.contactEmail}\" class=\"form-control\">\n+            <input th:field=\"${event.eventDetails.contactEmail}\" class=\"form-control\">\n         </label>\n-        <p class=\"error\" th:errors=\"${event.contactEmail}\"></p>\n+        <p class=\"error\" th:errors=\"${event.eventDetails.contactEmail}\"></p>\n     </div>\n     <div class=\"form-group\">\n-        <label>Type\n-        <select th:field=\"${event.type}\">\n-            <option th:each=\"type : ${types}\"\n-                    th:value=\"${type}\"\n-                    th:text=\"${type.displayName}\"\n+        <label>Category\n+        <select th:field=\"${event.eventCategory}\">\n+            <option th:each=\"eventCategory : ${categories}\"\n+                    th:value=\"${eventCategory.id}\"\n+                    th:text=\"${eventCategory.name}\"\n             ></option>\n         </select>\n+            <p class = \"error\" th:errors = \"${event.eventCategory}\"></p>\n         </label>\n     </div>\n     <div class=\"form-group\">"
  },
  {
    "sha": "52e1ea5d68a6f729cbc3bfd333ab31a82442fb31",
    "filename": "src/main/resources/templates/events/index.html",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/LaunchCodeEducation/coding-events/blob/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/resources/templates/events/index.html",
    "raw_url": "https://github.com/LaunchCodeEducation/coding-events/raw/0c285e8ac7015eb7bed802de95b408082fdd29a7/src/main/resources/templates/events/index.html",
    "contents_url": "https://api.github.com/repos/LaunchCodeEducation/coding-events/contents/src/main/resources/templates/events/index.html?ref=0c285e8ac7015eb7bed802de95b408082fdd29a7",
    "patch": "@@ -12,15 +12,15 @@\n             <th>Name</th>\n             <th>Description</th>\n             <th>Contact Email</th>\n-            <th>Type</th>\n+            <th>Category</th>\n         </tr>\n     </thead>\n     <tr th:each=\"event : ${events}\">\n         <td th:text=\"${event.id}\"></td>\n         <td th:text=\"${event.name}\"></td>\n-        <td th:text=\"${event.description}\"></td>\n-        <td th:text=\"${event.contactEmail}\"></td>\n-        <td th:text=\"${event.type.displayName}\"></td>\n+        <td th:text=\"${event.eventDetails.description}\"></td>\n+        <td th:text=\"${event.eventDetails.contactEmail}\"></td>\n+        <td th:text=\"${event.eventCategory.name}\"></td>\n     </tr>\n </table>\n "
  }
]
