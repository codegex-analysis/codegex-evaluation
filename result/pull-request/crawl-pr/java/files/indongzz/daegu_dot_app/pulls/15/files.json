[
  {
    "sha": "e6265f6367e5d48b4100bf70ad2fc10e420e73c4",
    "filename": "app/build.gradle",
    "status": "modified",
    "additions": 18,
    "deletions": 1,
    "changes": 19,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/build.gradle",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/build.gradle",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/build.gradle?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -31,6 +31,10 @@ android {\n             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n         }\r\n     }\r\n+    compileOptions {\r\n+        sourceCompatibility JavaVersion.VERSION_1_8\r\n+        targetCompatibility JavaVersion.VERSION_1_8\r\n+    }\r\n }\r\n \r\n dependencies {\r\n@@ -47,6 +51,19 @@ dependencies {\n     implementation 'com.google.android.gms:play-services-auth:18.1.0'\r\n     implementation group: 'com.kakao.sdk', name: 'usermgmt', version: '1.30.0'\r\n     implementation 'com.github.applikeysolutions:cosmocalendar:1.0.4'\r\n-    implementation 'com.google.android.material:material:1.3.0-beta01'\r\n+    //noinspection GradleCompatible\r\n     implementation 'com.android.support:design:28.0.0-rc01'\r\n+    implementation 'com.google.android.material:material:1.3.0-alpha03'\r\n+\r\n+    // rxjava, rxandroid\r\n+    implementation 'io.reactivex.rxjava2:rxjava:2.2.7'\r\n+    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'\r\n+\r\n+    // okhttp\r\n+    implementation 'com.squareup.okhttp3:okhttp:3.6.0'\r\n+    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'\r\n+    // retrofit\r\n+    implementation 'com.squareup.retrofit2:retrofit:2.2.0'\r\n+    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'\r\n+    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'\r\n }\r"
  },
  {
    "sha": "ab3017e0e56c1b5bfb04c6cf632bc6fc988c5600",
    "filename": "app/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/AndroidManifest.xml?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -15,7 +15,8 @@\n         android:supportsRtl=\"true\"\n         android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\">\n \n-        <activity android:name=\".MorePage.MyReviewStoryActivity\"></activity>\n+        <activity android:name=\".Network.Map.PlaceGeoUpdateActivity\" />\n+        <activity android:name=\".MorePage.MyReviewStoryActivity\" />\n         <activity android:name=\".MorePage.MyCommentActivity\" />\n         <activity android:name=\".MorePage.MyWishlistActivity\" />\n         <activity android:name=\".MorePage.MyInformationActivity\" />"
  },
  {
    "sha": "d29905e177cc835ee1d894fdf98f5204c620ace5",
    "filename": "app/src/main/java/com/kop/daegudot/KakaoMap/ConvertToMapMainAcitivity.java",
    "status": "added",
    "additions": 71,
    "deletions": 0,
    "changes": 71,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/ConvertToMapMainAcitivity.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/ConvertToMapMainAcitivity.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/KakaoMap/ConvertToMapMainAcitivity.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,71 @@\n+//package com.kop.daegudot.KakaoMap;\n+//\n+//import android.content.Context;\n+//import android.content.Intent;\n+//import android.util.Log;\n+//\n+//import com.kop.daegudot.MySchedule.MainScheduleInfo;\n+//import com.kop.daegudot.MySchedule.SubScheduleInfo;\n+//import com.kop.daegudot.Network.Map.Place;\n+//import com.kop.daegudot.Network.RestApiService;\n+//import com.kop.daegudot.Network.RestfulAdapter;\n+//\n+//import java.util.ArrayList;\n+//import java.util.List;\n+//\n+//import io.reactivex.Observable;\n+//import io.reactivex.android.schedulers.AndroidSchedulers;\n+//import io.reactivex.disposables.CompositeDisposable;\n+//import io.reactivex.observers.DisposableObserver;\n+//import io.reactivex.schedulers.Schedulers;\n+//\n+//public class ConvertToMapMainAcitivity {\n+//    public CompositeDisposable mCompositeDisposable = new CompositeDisposable();\n+//\n+//    public static void convertToMap(Context context) {\n+//\n+//        Intent intent = new Intent(context, MapMainActivity.class);\n+//        context.startActivity(intent);\n+//    }\n+//\n+//    public static void convertToMapWSchedule(Context context, MainScheduleInfo mainSchedule,\n+//                                             ArrayList<SubScheduleInfo> subScheduleList, int pos) {\n+//        Intent intent = new Intent(context, MapMainActivity.class);\n+//        intent.putExtra(\"MainSchedule\", mainSchedule);\n+//        intent.putParcelableArrayListExtra(\"SubScheduleList\", subScheduleList);\n+//        intent.putExtra(\"position\", pos);\n+//        context.startActivity(intent);\n+//    }\n+//\n+//    public void convertToMapwMarker(Context context, String name) {\n+//\n+//    }\n+//\n+//    private void startRx(int m) {\n+//        RestApiService service = RestfulAdapter.getInstance().getServiceApi(null);\n+//        Observable<List<Place>> observable = service.getPlaceList();\n+//\n+//        mCompositeDisposable.add(observable.subscribeOn(Schedulers.io())\n+//                .observeOn(AndroidSchedulers.mainThread())\n+//                .subscribeWith(new DisposableObserver<List<MarkerInfo>>() {\n+//                    @Override\n+//                    public void onNext(List<MarkerInfo> response) {\n+//                        int n = response.size();\n+//                        Log.d(\"RX\", n + \"개\");\n+//                    }\n+//\n+//                    @Override\n+//                    public void onError(Throwable e) {\n+//                        Log.d(\"RX\", e.getMessage());\n+//                    }\n+//\n+//                    @Override\n+//                    public void onComplete() {\n+//                        Log.d(\"RX\", \"complete\");\n+//                     //   updateUI(m);\n+//                    }\n+//                })\n+//        );\n+//    }\n+//\n+//}"
  },
  {
    "sha": "ef318dc15fa90882860dc75cd4787bf49c484c49",
    "filename": "app/src/main/java/com/kop/daegudot/KakaoMap/Documents.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/Documents.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/Documents.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/KakaoMap/Documents.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,50 @@\n+package com.kop.daegudot.KakaoMap;\n+\n+import com.google.gson.annotations.Expose;\n+import com.google.gson.annotations.SerializedName;\n+import com.kop.daegudot.Network.Map.Place;\n+\n+import java.util.List;\n+\n+public class Documents {\n+    @SerializedName(\"documents\")\n+    @Expose\n+    private List<Address> documents = null;\n+    \n+    public List<Address> getDocuments() {\n+        return documents;\n+    }\n+    \n+    public void setDocuments(List<Address> documents) {\n+        this.documents = documents;\n+    }\n+    \n+    public class Address {\n+        @SerializedName(\"place_name\")\n+        @Expose\n+        public String placeName;\n+        @SerializedName(\"address_name\")\n+        @Expose\n+        public String address;\n+        @SerializedName(\"x\")\n+        @Expose\n+        public double x;\n+        @SerializedName(\"y\")\n+        @Expose\n+        public double y;\n+        @SerializedName(\"category_group_code\")\n+        @Expose\n+        public String category;\n+    \n+        @Override\n+        public boolean equals(Object object) {\n+            boolean equalName = false;\n+        \n+            if (object instanceof Address){\n+                equalName = this.placeName.equals(((Address) object).placeName);\n+            }\n+        \n+            return equalName;\n+        }\n+    }\n+}"
  },
  {
    "sha": "857165e45123f184e72625b8d16d95c830484545",
    "filename": "app/src/main/java/com/kop/daegudot/KakaoMap/MapMainActivity.java",
    "status": "modified",
    "additions": 82,
    "deletions": 27,
    "changes": 109,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/MapMainActivity.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/MapMainActivity.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/KakaoMap/MapMainActivity.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -11,11 +11,13 @@\n \n import android.view.View;\n import android.widget.ImageButton;\n+import android.widget.ProgressBar;\n import android.widget.TextView;\n \n import com.google.android.material.bottomsheet.BottomSheetBehavior;\n import com.kop.daegudot.MySchedule.MainScheduleInfo;\n import com.kop.daegudot.MySchedule.SubScheduleInfo;\n+import com.kop.daegudot.Network.Map.Place;\n import com.kop.daegudot.R;\n \n import net.daum.mf.map.api.MapPOIItem;\n@@ -36,19 +38,23 @@\n     \n     MapMarkerItems mMapMarkerItems;     // set map markerItems\n     MapUIControl mMapUIControl;         // to control category and hash tag button\n+    int categoryFlag = 0;\n     \n     // get Main and sub schedule list from previous activity\n     MainScheduleInfo mMainSchedule;\n     ArrayList<SubScheduleInfo> mSubScheduleList;\n     int position = 0; // default = first page\n     \n-    ArrayList<MarkerInfo> mMarkerItems;\n+    // RX PoiItems\n+    ArrayList<Place> mPlaceList;\n     private BottomSheetBehavior mBSBPlace;\n     PlaceBottomSheet placeBottomSheet;\n     private BottomSheetBehavior mBSBSchedule;\n-    //    ScheduleBottomSheet scheduleBottomSheet;\n     ViewPager2 mViewPager;\n     ViewPagerAdapter adapter;\n+    MapPOIItem prevPOIItem = null;\n+    \n+    public ProgressBar progressBar;     // 로딩 중\n     \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n@@ -59,71 +65,64 @@ protected void onCreate(Bundle savedInstanceState) {\n         \n         mTitle = findViewById(R.id.title);\n         mTitle.setText(\"장소 검색\");\n+    \n+        mBackBtn = findViewById(R.id.backBtn);\n+        mBackBtn.setOnClickListener(this);\n+        \n+        progressBar = findViewById(R.id.progress_bar);\n         \n+        /* Map View */\n         mMapView = findViewById(R.id.map_view);\n         \n         mMapView.setPOIItemEventListener(this);\n         mMapView.setMapViewEventListener(this);\n         mMapView.setMapCenterPoint(MapPoint.mapPointWithGeoCoord(35.871344, 128.601705), true);\n-        mMapView.setZoomLevel(6, true);\n-        \n-        mBackBtn = findViewById(R.id.backBtn);\n-        mBackBtn.setOnClickListener(this);\n+        mMapView.setZoomLevel(3, true);\n         \n         // Set Hash Tag button and Category button\n         mMapUIControl = new MapUIControl(this, view);\n         mMapUIControl.setCategoryBtn();\n-        mMapUIControl.setHashBtn();\n         \n         // Set MarkerItems\n         mMapMarkerItems = new MapMarkerItems(this, mMapView);\n         mMapMarkerItems.setMarkerItems();\n-        mMarkerItems = mMapMarkerItems.getMarkerItems();\n+        mMapMarkerItems.startRx2(128.601705,35.871344);\n+        mPlaceList = updatePlaceList();\n         \n         // TODO: get Schedule from DB or add Schedule\n         getSchedule();\n         \n+        /* BottomSheet */\n         placeBottomSheet =\n-                new PlaceBottomSheet(this, mMarkerItems, mMainSchedule, mSubScheduleList);\n+                new PlaceBottomSheet(this, mMainSchedule, mSubScheduleList);\n         \n         CoordinatorLayout placeLayout = (CoordinatorLayout) findViewById(R.id.bottomSheet);\n         mBSBPlace = BottomSheetBehavior.from(placeLayout);\n         mBSBPlace.setState(BottomSheetBehavior.STATE_HIDDEN);\n-\n-//        mBSBPlace.addBottomSheetCallback(new BottomSheetBehavior.BottomSheetCallback() {\n-//            @Override\n-//            public void onStateChanged(@NonNull View bottomSheet, int newState) {\n-//\n-//            }\n-//\n-//            @Override\n-//            public void onSlide(@NonNull View bottomSheet, float slideOffset) {\n-//\n-//            }\n-//        });\n         \n         mViewPager = findViewById(R.id.viewPager);\n         adapter = new ViewPagerAdapter(this, mSubScheduleList);\n         mViewPager.setAdapter(adapter);\n         mViewPager.setNestedScrollingEnabled(false);\n-\n-\n-//        scheduleBottomSheet = new ScheduleBottomSheet(this, mMainSchedule, mSubScheduleList);\n+        \n         NestedScrollView scheduleLayout = (NestedScrollView) findViewById(R.id.scrollView);\n         mBSBSchedule = BottomSheetBehavior.from(scheduleLayout);\n         \n         // move to n일차\n         mViewPager.setCurrentItem(position);\n+        \n     }\n     \n     public void adapterChange(int position, int tag) {\n+        /* update Place list */\n+        mPlaceList = updatePlaceList();\n         ArrayList<String> placeName;\n         ArrayList<String> address;\n         \n         placeName = mSubScheduleList.get(position).getPlaceName();\n         address = mSubScheduleList.get(position).getAddress();\n-        placeName.add(mMarkerItems.get(tag).getName());\n-        address.add(mMarkerItems.get(tag).getAddress());\n+        placeName.add(mPlaceList.get(tag).attractName);\n+        address.add(mPlaceList.get(tag).address);\n         \n         mSubScheduleList.get(position).setAddress(address);\n         mSubScheduleList.get(position).setPlaceName(placeName);\n@@ -177,6 +176,10 @@ public void getSchedule() {\n         mTitle.setText(titleString);\n     }\n     \n+    public ArrayList<Place> updatePlaceList() {\n+        return mMapMarkerItems.getPlaceList();\n+    }\n+    \n     // click event\n     @Override\n     public void onClick(View v) {\n@@ -193,6 +196,8 @@ public void onPOIItemSelected(MapView mapView, MapPOIItem mapPOIItem) {\n         placeBottomSheet.changePlaceBottomSheet(mapPOIItem.getTag());\n         mBSBPlace.setState(BottomSheetBehavior.STATE_EXPANDED);\n         mBSBSchedule.setState(BottomSheetBehavior.STATE_HIDDEN);\n+        prevPOIItem = mapPOIItem;\n+        Log.d(TAG, \"map: \" + mapPOIItem.getItemName() + \" \" + mapPOIItem.getTag());\n     }\n     \n     @Override\n@@ -218,7 +223,6 @@ public void onMapViewInitialized(MapView mapView) {\n     \n     @Override\n     public void onMapViewCenterPointMoved(MapView mapView, MapPoint mapPoint) {\n-    \n     }\n     \n     @Override\n@@ -230,6 +234,7 @@ public void onMapViewZoomLevelChanged(MapView mapView, int i) {\n     public void onMapViewSingleTapped(MapView mapView, MapPoint mapPoint) {\n         mBSBPlace.setState(BottomSheetBehavior.STATE_HIDDEN);\n         mBSBSchedule.setState(BottomSheetBehavior.STATE_EXPANDED);\n+        prevPOIItem = null;\n     }\n     \n     @Override\n@@ -254,6 +259,56 @@ public void onMapViewDragEnded(MapView mapView, MapPoint mapPoint) {\n     \n     @Override\n     public void onMapViewMoveFinished(MapView mapView, MapPoint mapPoint) {\n+        ArrayList<MapPOIItem> lists = mMapMarkerItems.getmMarkerList();\n+\n+        addPOItoMapView(lists);\n+    }\n     \n+    public void changeCategory(int category) {\n+        mBSBPlace.setState(BottomSheetBehavior.STATE_HIDDEN);\n+        mBSBSchedule.setState(BottomSheetBehavior.STATE_EXPANDED);\n+        prevPOIItem = null;\n+        categoryFlag = category;\n+        \n+        ArrayList<MapPOIItem> lists = mMapMarkerItems.getmMarkerList();\n+        addPOItoMapView(lists);\n+    }\n+    \n+    public void addPOItoMapView(ArrayList<MapPOIItem> lists) {\n+        mMapView.removeAllPOIItems();\n+        \n+        for (MapPOIItem item: lists) {\n+            if (mMapView.getMapPointBounds().contains(item.getMapPoint())) {\n+                if (checkCategory(item)) {\n+                    mMapView.addPOIItem(item);\n+                }\n+            }\n+        }\n+        \n+        // 이전에 클릭한 POIItem 띄우기\n+        if (prevPOIItem != null) {\n+            mMapView.selectPOIItem(prevPOIItem, true);\n+        }\n+    }\n+    \n+    public boolean checkCategory(MapPOIItem item) {\n+        boolean bool = false;\n+        String category = mPlaceList.get(item.getTag()).category;\n+        \n+        if (category == null) {\n+            if (categoryFlag == 0) {\n+                bool = true;\n+            }\n+        } else {\n+            if (categoryFlag == 1 && category.equals(\"AD5\")) {  // 숙박\n+                bool = true;\n+            } else if (categoryFlag == 2 && category.equals(\"FD6\")) {  // 음식\n+                bool = true;\n+            } else if (categoryFlag == 3 && category.equals(\"CE7\")) {  // 카페\n+                bool = true;\n+            }\n+        }\n+        \n+        return bool;\n     }\n }"
  },
  {
    "sha": "c3f8015aad190a477ce1ca67f3b1a0b9c165d011",
    "filename": "app/src/main/java/com/kop/daegudot/KakaoMap/MapMarkerItems.java",
    "status": "modified",
    "additions": 262,
    "deletions": 41,
    "changes": 303,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/MapMarkerItems.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/MapMarkerItems.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/KakaoMap/MapMarkerItems.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -1,75 +1,296 @@\n package com.kop.daegudot.KakaoMap;\n \n import android.content.Context;\n+import android.util.Log;\n+import android.view.View;\n \n+import com.kop.daegudot.Network.Map.Place;\n+import com.kop.daegudot.Network.RestApiService;\n+import com.kop.daegudot.Network.RestfulAdapter;\n import com.kop.daegudot.R;\n \n import net.daum.mf.map.api.MapPOIItem;\n+import net.daum.mf.map.api.MapPoint;\n import net.daum.mf.map.api.MapView;\n \n+import java.io.IOException;\n+import java.net.SocketException;\n import java.util.ArrayList;\n+import java.util.List;\n+\n+import io.reactivex.Observable;\n+import io.reactivex.android.schedulers.AndroidSchedulers;\n+import io.reactivex.disposables.CompositeDisposable;\n+import io.reactivex.exceptions.UndeliverableException;\n+import io.reactivex.observers.DisposableObserver;\n+import io.reactivex.plugins.RxJavaPlugins;\n+import io.reactivex.schedulers.Schedulers;\n+import retrofit2.Call;\n+import retrofit2.Callback;\n+import retrofit2.Response;\n \n /** To Set Map MarkerItems\n- *\n+ *    AD5\t숙박\n+ *    FD6\t음식점\n+ *    CE7\t카페\n  */\n \n public class MapMarkerItems {\n+    private final static String TAG = \"MapMarkerItems\";\n     Context mContext;\n-    ArrayList<MarkerInfo> mMarkerItems;\n     MapView mMapView;\n     \n+    CompositeDisposable mCompositeDisposable = new CompositeDisposable();\n+    ArrayList<Place> mPlaceList;\n+    ArrayList<MapPOIItem> mMarkerList;\n+    ArrayList<Documents.Address> mAccomdList, mFoodList, mCafeList;\n+    ArrayList<MapPOIItem> mMarkerCategoryList;\n+    int tagNum = 0;\n+    \n+    private String key = \"KakaoAK \" + \"fede27d02cb9592216a0a526b8683677\";\n     \n     MapMarkerItems(Context context, MapView mapView) {\n         mContext = context;\n         mMapView = mapView;\n+        mMarkerList = new ArrayList<>();\n+        mPlaceList = new ArrayList<>();\n+        mAccomdList = new ArrayList<>();\n+        mFoodList = new ArrayList<>();\n+        mCafeList = new ArrayList<>();\n+        mMarkerCategoryList = new ArrayList<>();\n+        \n+        /* RxJava Error 난 경우 멈추지 않고 계속하기 */\n+        RxJavaPlugins.setErrorHandler(e -> {\n+            if (e instanceof UndeliverableException) {\n+                e = e.getCause();\n+            }\n+            if ((e instanceof IOException) || (e instanceof SocketException)) {\n+                // fine, irrelevant network problem or API that throws on cancellation\n+                return;\n+            }\n+            if (e instanceof InterruptedException) {\n+                // fine, some blocking code was interrupted by a dispose call\n+                return;\n+            }\n+            if ((e instanceof NullPointerException) || (e instanceof IllegalArgumentException)) {\n+                // that's likely a bug in the application\n+                Thread.currentThread().getUncaughtExceptionHandler()\n+                        .uncaughtException(Thread.currentThread(), e);\n+                return;\n+            }\n+            if (e instanceof IllegalStateException) {\n+                // that's a bug in RxJava or in a custom operator\n+                Thread.currentThread().getUncaughtExceptionHandler()\n+                        .uncaughtException(Thread.currentThread(), e);\n+                return;\n+            }\n+            Log.e(\"RxJava_HOOK\", \"Undeliverable exception received, not sure what to do\" + e.getMessage());\n+        });\n+        \n     }\n     \n     public void setMarkerItems() {\n-        // TODO: marker로 표시할 data 받아서 markerinfo에 담기\n+        startRx();\n+    }\n     \n-        /* example Marker Data */\n-        String[] address = {\n-                \"대구광역시 중구 남산로 4길 112\",\n-                \"대구광역시 중구 서성로 6-1\",\n-                \"대구광역시 동구동화사 1길 1\",\n-                \"대구광역시 중구 국채보상로 670\",\n-                \"대구광역시 중구 동성로 2길 80\"\n-        };\n-        String[] attractname = {\"성모당\", \"서상돈 고택\", \"동화사 보사계 유공비\", \"국채보상운동기념공원\", \"2.28기념중앙공원\"};\n-        String[] tel = {\n-                \"053-250-3000\", \"053-256-3762\",\n-                \"53-982-0101-2\", \"053-254-9401\",\n-                \"053-254-9405\"\n-        };\n+    public ArrayList<Place> getPlaceList() {\n+        Log.d(TAG, \"Place n: \" + mPlaceList.size());\n+        for (Place o : mPlaceList) {\n+            Log.d(TAG, \"id: \" + o.id + \" tag: \" + o.tag + \" name: \" + o.attractName);\n+        }\n+        return mPlaceList;\n+    }\n     \n-        mMarkerItems = new ArrayList<>();\n+    public ArrayList<MapPOIItem> getmMarkerList() {\n+        return mMarkerList;\n+    }\n     \n-        for (int i = 0; i < 5; i++) {\n-            MarkerInfo markerItem = new MarkerInfo(mContext);\n-            markerItem.setAddress(address[i]);\n-            markerItem.setName(attractname[i]);\n-            markerItem.setTel(tel[i]);\n-            markerItem.setRate((float) (i + 0.5));\n-            markerItem.setLike(false);\n-            mMarkerItems.add(markerItem);\n+    private void startRx() {\n+        RestApiService service = RestfulAdapter.getInstance().getServiceApi(null);\n+        Observable<List<Place>> observable = service.getPlaceList();\n+        \n+        mCompositeDisposable.add(observable.subscribeOn(Schedulers.io())\n+                        .observeOn(AndroidSchedulers.mainThread())\n+                        .subscribeWith(new DisposableObserver<List<Place>>() {\n+                            @Override\n+                            public void onNext(List<Place> response) {\n+                                Log.d(\"RX\", \"Next\");\n+                                mPlaceList.addAll(response);\n+                            }\n+                    \n+                            @Override\n+                            public void onError(Throwable e) {\n+                                Log.d(\"RX\", e.getMessage());\n+                            }\n+                    \n+                            @Override\n+                            public void onComplete() {\n+                                Log.d(\"RX\", \"complete\");\n+                                \n+                                setServerMarker();\n+                                \n+                                /* Progress Loading done */\n+                                ((MapMainActivity) mContext).progressBar.setVisibility(View.GONE);\n+                            }\n+                        })\n+        );\n+    }\n+    \n+    /* get MapPoint by Address\n+     * set Markers on map\n+     */\n+    private void setServerMarker() {\n+        \n+        for (Place place: mPlaceList) {\n+            if (place.category == null) {\n+                mPlaceList.get(tagNum).tag = tagNum;\n+                MapPOIItem marker = new MapPOIItem();\n+                marker.setItemName(place.attractName);\n+                marker.setTag(tagNum++);\n+                MapPoint mapPoint = MapPoint.mapPointWithGeoCoord(\n+                        Double.parseDouble(place.latitude), Double.parseDouble(place.longitude));\n+                marker.setMapPoint(mapPoint);\n+                marker.setMarkerType(MapPOIItem.MarkerType.CustomImage);\n+                marker.setCustomImageResourceId(R.drawable.blue_pin2);\n+                marker.setSelectedMarkerType(MapPOIItem.MarkerType.CustomImage);\n+                marker.setCustomSelectedImageResourceId(R.drawable.big_yellow_pin);\n+                marker.setShowCalloutBalloonOnTouch(false);\n+                mMapView.addPOIItem(marker);\n+                mMarkerList.add(marker);\n+            }\n+        }\n+    }\n+    \n+    // Get Place by Category\n+    // by using Kakao API\n+    //AD5\t숙박\n+    //FD6\t음식점\n+    //CE7\t카페\n+    public void startRx2(double x, double y) {\n+        Log.d(TAG, \"x: \" + x + \"  y: \" + y);\n+        \n+        RestApiService service = RestfulAdapter.getInstance().getKakaoServiceApi();\n+        \n+        for (int i = 1; i <= 5; i++) {\n+            Call<Documents> call = service.getPlacebyCategory(\n+                    key, \"AD5\", x + \"\", y + \"\", 20000, i);\n+            int finalI = i;\n+            call.enqueue(new Callback<Documents>() {\n+                @Override\n+                public void onResponse(Call<Documents> call, Response<Documents> response) {\n+                    if (response.isSuccessful()) {\n+                        assert response.body() != null;\n+                        Log.d(TAG, response.body().getDocuments().toString());\n+                        ArrayList<Documents.Address> documents =\n+                                (ArrayList<Documents.Address>) response.body().getDocuments();\n+                        mAccomdList.removeAll(documents); // 중복제거\n+                        mAccomdList.addAll(documents);\n+                        setPlaceMarker(mAccomdList);\n+\n+                    call = service.getPlacebyCategory(\n+                            key, \"FD6\", x + \"\", y + \"\", 20000, finalI);\n+                    call.enqueue(new Callback<Documents>() {\n+                        @Override\n+                        public void onResponse(Call<Documents> call, Response<Documents> response) {\n+                            if (response.isSuccessful()) {\n+                                ArrayList<Documents.Address> food =\n+                                        (ArrayList<Documents.Address>) response.body().getDocuments();\n+                                mFoodList.removeAll(food); // 중복 제거\n+                                mFoodList.addAll(food);\n+\n+                                setPlaceMarker(mFoodList);\n+                            } // FD if문 종료\n+                        }\n+\n+                        @Override\n+                        public void onFailure(Call<Documents> call, Throwable t) {\n+                            Log.d(TAG, \"FD6. Failure Code\");\n+                        }\n+                    });\n+                    } else {\n+                        Log.d(TAG, \"code: \" + response.code());\n+                    }   // AD if문 종료\n+            \n+                }\n+        \n+                @Override\n+                public void onFailure(Call<Documents> call, Throwable t) {\n+            \n+                }\n+            });\n         }\n     \n         for (int i = 0; i < 5; i++) {\n-            MapPOIItem marker = new MapPOIItem();\n-            marker.setItemName(mMarkerItems.get(i).getName());\n-            marker.setTag(i);\n-            marker.setMapPoint(mMarkerItems.get(i).getAddressPoint());\n-            marker.setMarkerType(MapPOIItem.MarkerType.CustomImage);\n-            marker.setCustomImageResourceId(R.drawable.blue_pin);\n-            marker.setSelectedMarkerType(MapPOIItem.MarkerType.CustomImage);\n-            marker.setCustomImageAnchor(0.5f, 1.0f);\n-            marker.setCustomSelectedImageResourceId(R.drawable.big_yellow_pin);\n-            marker.setShowCalloutBalloonOnTouch(false);\n-            mMapView.addPOIItem(marker);\n+            Call<Documents> cafeCall = service.getPlacebyCategory(\n+                    key, \"CE7\", x + \"\", y + \"\", 20000, i + 1);\n+            cafeCall.enqueue(new Callback<Documents>() {\n+                @Override\n+                public void onResponse(Call<Documents> call, Response<Documents> response) {\n+                    if (response.isSuccessful()) {\n+                        ArrayList<Documents.Address> cafe =\n+                                (ArrayList<Documents.Address>) response.body().getDocuments();\n+                        mCafeList.removeAll(cafe);\n+                        mCafeList.addAll(cafe);\n+\n+                        setPlaceMarker(mCafeList);\n+                    } else {\n+                        Log.d(TAG, \"Cafe response error code: \" + response.code());\n+                    }\n+                }\n+\n+                @Override\n+                public void onFailure(Call<Documents> call, Throwable t) {\n+                    Log.d(TAG, \"Cafe Failure\");\n+                }\n+            });\n         }\n     }\n-    \n-    public ArrayList<MarkerInfo> getMarkerItems() {\n-        return mMarkerItems;\n+   \n+    // set Markers from kakao\n+    public void setPlaceMarker(ArrayList<Documents.Address> arrayList) {\n+        Log.d(TAG, \"n: \" + arrayList.size());\n+        for (Documents.Address address : arrayList) {\n+            // 추가 안한 경우 추가하기\n+            Place place = new Place();\n+            place.like = true;\n+            place.address = address.address;\n+            place.attractName = address.placeName;\n+            place.category = address.category;\n+            place.tag = tagNum;\n+            if (!mPlaceList.contains(place)) {\n+                mPlaceList.add(place);\n+                MapPOIItem marker = new MapPOIItem();\n+                marker.setItemName(address.placeName);\n+                marker.setTag(tagNum++);\n+                MapPoint mapPoint = MapPoint.mapPointWithGeoCoord(address.y, address.x);\n+                marker.setMapPoint(mapPoint);\n+                marker.setMarkerType(MapPOIItem.MarkerType.CustomImage);\n+                if (place.category.equals(\"AD5\")) {\n+//                    marker.setCustomImageResourceId(R.drawable.blue_pin);\n+                    marker.setCustomImageResourceId(R.drawable.hotel_pin);\n+                } else if (place.category.equals(\"FD6\")) {\n+//                    marker.setCustomImageResourceId(R.drawable.pink_pin);\n+                    marker.setCustomImageResourceId(R.drawable.food_pin);\n+                } else if (place.category.equals(\"CE7\")) {\n+//                    marker.setCustomImageResourceId(R.drawable.green_pin);\n+                    marker.setCustomImageResourceId(R.drawable.cafe_pin);\n+                }\n+                marker.setSelectedMarkerType(MapPOIItem.MarkerType.CustomImage);\n+                marker.setCustomSelectedImageResourceId(R.drawable.big_yellow_pin);\n+                marker.setShowCalloutBalloonOnTouch(false);\n+                \n+                mMapView.addPOIItem(marker);\n+                mMarkerList.add(marker);\n+            }\n+        \n+            /* Progress Loading done */\n+            ((MapMainActivity) mContext).progressBar.setVisibility(View.GONE);\n+        }\n+//        for (Place place: mPlaceList) {\n+//            Log.d(TAG, \"id: \" + place.id + \" tag: \" + place.tag + \" Place: \"+ place.attractName);\n+//        }\n     }\n-}\n+    \n+\n+    \n+}\n\\ No newline at end of file"
  },
  {
    "sha": "6a7179481ae692b3a329866cf5a49958d01688cc",
    "filename": "app/src/main/java/com/kop/daegudot/KakaoMap/MapUIControl.java",
    "status": "modified",
    "additions": 21,
    "deletions": 63,
    "changes": 84,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/MapUIControl.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/MapUIControl.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/KakaoMap/MapUIControl.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -6,25 +6,20 @@\n import android.widget.Button;\n import android.widget.LinearLayout;\n \n+import androidx.core.content.ContextCompat;\n+\n import com.kop.daegudot.R;\n \n-public class MapUIControl implements View.OnClickListener {\n+public class MapUIControl {\n     Context mContext;\n     View mView;\n     \n     Button[] mCategory;\n-    Button[] mHashTag;\n-    \n-    Button mToggleBtn;\n-    \n-    int flag = 1;\n+    int current = 0;\n     \n     MapUIControl(Context context, View view) {\n         mContext = context;\n         mView = view;\n-    \n-        mToggleBtn = mView.findViewById(R.id.toggle_btn);\n-        mToggleBtn.setOnClickListener(this);\n     }\n \n     public void setCategoryBtn() {\n@@ -35,73 +30,36 @@ public void setCategoryBtn() {\n         params.setMargins(margin, 0, margin, 0);\n \n         LinearLayout layout = mView.findViewById(R.id.linear_layout);\n-        String[] catString = {\"카테고리1\", \"카테고리2\", \"카테고리3\", \"카테고리4\", \"카테고리5\"};\n+        String[] catString = {\"명소\", \"숙박\", \"음식\", \"카페\"};\n         int size = catString.length;\n \n         mCategory = new Button[size];\n \n         for (int i = 0; i < size; i++) {\n             mCategory[i] = new Button(mContext);\n+            mCategory[i].setId(1000+i);\n             mCategory[i].setText(catString[i]);\n             mCategory[i].setTextSize(12);\n             mCategory[i].setLayoutParams(params);\n             mCategory[i].setPadding(1, 1, 1, 1);\n-            mCategory[i].setBackground(mContext.getDrawable(R.drawable.round_line_btn));\n+            mCategory[i].setBackground(ContextCompat.getDrawable(mContext, R.drawable.round_line_btn));\n+            final int next = i;\n+            mCategory[i].setOnClickListener(new View.OnClickListener() {\n+                @Override\n+                public void onClick(View v) {\n+                    changeButtonUI(next);\n+                    current = next;\n+                    ((MapMainActivity)mContext).changeCategory(current);\n+                }\n+            });\n             layout.addView(mCategory[i]);\n         }\n     }\n     \n-    \n-    public void setHashBtn() {\n-        int height = (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 30, mContext.getResources().getDisplayMetrics());\n-        int margin = (int)TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 5, mContext.getResources().getDisplayMetrics());\n-        \n-        LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, height);\n-        params.setMargins(margin, 0, margin, 0);\n-        \n-        LinearLayout layout = mView.findViewById(R.id.linear_layout);\n-        String[] catString = {\"해시태그1\", \"해시태그2\", \"해시태그3\", \"해시태그4\", \"해시태그5\"};\n-        int size = catString.length;\n-        \n-        mHashTag = new Button[size];\n-        \n-        for (int i = 0; i < size; i++) {\n-            mHashTag[i] = new Button(mContext);\n-            mHashTag[i].setText(catString[i]);\n-            mHashTag[i].setTextSize(12);\n-            mHashTag[i].setLayoutParams(params);\n-            mHashTag[i].setPadding(1, 1, 1, 1);\n-            mHashTag[i].setBackground(mContext.getDrawable(R.drawable.round_line_btn));\n-            layout.addView(mHashTag[i]);\n-            \n-            mHashTag[i].setVisibility(View.GONE);\n-        }\n-    }\n-    \n-    @Override\n-    public void onClick(View v) {\n-        switch (v.getId()) {\n-            case R.id.toggle_btn:\n-                if (flag == 1) {\n-                    for (Button button : mCategory) {\n-                        button.setVisibility(View.GONE);\n-                    }\n-                    for (Button button : mHashTag) {\n-                        button.setVisibility(View.VISIBLE);\n-                    }\n-                    mToggleBtn.setText(\"카테고리\");\n-                    flag = 0;\n-                } else {\n-                    for (Button button : mCategory) {\n-                        button.setVisibility(View.VISIBLE);\n-                    }\n-                    for (Button button : mHashTag) {\n-                        button.setVisibility(View.GONE);\n-                    }\n-                    mToggleBtn.setText(\"#해시태그\");\n-                    flag = 1;\n-                }\n-                break;\n-        }\n+    public void changeButtonUI(int next) {\n+        mCategory[current].setTextColor(ContextCompat.getColor(mContext, R.color.black));\n+        mCategory[current].setBackground(ContextCompat.getDrawable(mContext, R.drawable.round_line_btn));\n+        mCategory[next].setTextColor(ContextCompat.getColor(mContext, R.color.white));\n+        mCategory[next].setBackground(ContextCompat.getDrawable(mContext, R.drawable.btn_blue));\n     }\n }"
  },
  {
    "sha": "be900baafabce04eb2474420ebde4149d1f637cd",
    "filename": "app/src/main/java/com/kop/daegudot/KakaoMap/PlaceBottomSheet.java",
    "status": "modified",
    "additions": 41,
    "deletions": 52,
    "changes": 93,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/PlaceBottomSheet.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/KakaoMap/PlaceBottomSheet.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/KakaoMap/PlaceBottomSheet.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -7,34 +7,30 @@\n import android.widget.Button;\n import android.widget.RatingBar;\n import android.widget.TextView;\n-import android.widget.Toast;\n \n import androidx.appcompat.app.AlertDialog;\n \n import com.kop.daegudot.MySchedule.MainScheduleInfo;\n import com.kop.daegudot.MySchedule.SubScheduleInfo;\n+import com.kop.daegudot.Network.Map.Place;\n import com.kop.daegudot.R;\n \n-import java.lang.reflect.Array;\n import java.util.ArrayList;\n-import java.util.List;\n \n public class PlaceBottomSheet implements Button.OnClickListener {\n     private final static String TAG = \"PlaceBottomSheet\";\n     private Context mContext;\n-    private ArrayList<MarkerInfo> mMarkerList;\n+    private ArrayList<Place> mPlaceList = null;\n     MainScheduleInfo mMainSchedule;\n     ArrayList<SubScheduleInfo> mSubScheduleList;\n     \n     private int mTag;\n     private Button mHeartBtn;\n     private Button mAddToSchBtn;\n     \n-    PlaceBottomSheet(Context context, ArrayList<MarkerInfo> markerItems,\n+    PlaceBottomSheet(Context context,\n                      MainScheduleInfo mainSchedule, ArrayList<SubScheduleInfo> subScheduleList) {\n         mContext = context;\n-        mMarkerList = markerItems;\n-        \n         mMainSchedule = mainSchedule;\n         mSubScheduleList = subScheduleList;\n     \n@@ -52,35 +48,24 @@ public void changePlaceBottomSheet(int tag) {\n         TextView summary = ((MapMainActivity)mContext).findViewById(R.id.tv_spec);\n         RatingBar rating = ((MapMainActivity)mContext).findViewById(R.id.rating_bar);\n         \n-        MarkerInfo item = mMarkerList.get(tag);\n+        updatePlaceList();\n+        Place item = mPlaceList.get(tag);\n         \n-        title.setText(item.getName());\n-        address.setText(item.getAddress());\n-        summary.setText(item.getSummary());\n-        rating.setRating(item.getRate());\n+        title.setText(item.attractName);\n+        address.setText(item.address);\n+//        summary.setText(item.getAttractContents());\n+        summary.setText(\"너무 길어서 일단 안보이게 하게쑵니다\");\n+        rating.setRating(item.rate);\n         \n-        if (mMarkerList.get(mTag).isLiked()) {\n+        if (mPlaceList.get(mTag).like) {\n             mHeartBtn.setBackgroundResource(R.drawable.full_heart);\n         } else {\n             mHeartBtn.setBackgroundResource(R.drawable.heart);\n         }\n     }\n     \n-    @Override\n-    public void onClick(View v) {\n-        switch(v.getId()) {\n-            case R.id.heart_btn:\n-                if (mMarkerList.get(mTag).isLiked()) { // 좋아요 했으면 취소\n-                    mHeartBtn.setBackgroundResource(R.drawable.heart);\n-                    mMarkerList.get(mTag).setLike(false);\n-                } else {    // 좋아요 안했으면 좋아요\n-                    mHeartBtn.setBackgroundResource(R.drawable.full_heart);\n-                    mMarkerList.get(mTag).setLike(true);\n-                }\n-                break;\n-            case R.id.addToSch_btn:\n-                addToSubscheduleList();\n-        }\n+    public void updatePlaceList() {\n+        mPlaceList = ((MapMainActivity)mContext).updatePlaceList();\n     }\n     \n     public void addToSubscheduleList() {\n@@ -96,31 +81,35 @@ public void addToSubscheduleList() {\n     \n         final int[] checkedItem = {-1};\n         builder.setTitle(\"날짜를 선택하세요\")\n-                .setSingleChoiceItems(list, checkedItem[0], new DialogInterface.OnClickListener(){\n-                    @Override\n-                    public void onClick(DialogInterface dialog, int which) {\n-                        checkedItem[0] = which;\n-                    }\n-                })\n-                .setPositiveButton(\"선택\", new DialogInterface.OnClickListener() {\n-                    @Override\n-                    public void onClick(DialogInterface dialog, int which) {\n-                        int position = checkedItem[0];\n-        \n-                        Log.i(TAG, \"선택한 날짜 position: \" + position);\n-                        \n-                        // position으로 선택한 날짜를, tag로 marker를 알 수 있게 함\n-                        ((MapMainActivity)mContext).adapterChange(position, mTag);\n-                        \n-                        dialog.dismiss();\n-                    }\n-                })\n-                .setNegativeButton(\"취소\", new DialogInterface.OnClickListener() {\n-                    @Override\n-                    public void onClick(DialogInterface dialog, int which) {\n-                        dialog.dismiss();\n-                    }\n+                .setSingleChoiceItems(list, checkedItem[0], (dialog, which) -> checkedItem[0] = which)\n+                .setPositiveButton(\"선택\", (dialog, which) -> {\n+                    int position = checkedItem[0];\n+    \n+                    Log.i(TAG, \"선택한 날짜 position: \" + position);\n+                    \n+                    // position으로 선택한 날짜를, tag로 marker를 알 수 있게 함\n+                    ((MapMainActivity)mContext).adapterChange(position, mTag);\n+                    \n+                    dialog.dismiss();\n                 })\n+                .setNegativeButton(\"취소\", (dialog, which) -> dialog.dismiss())\n                 .show();\n     }\n+    \n+    @Override\n+    public void onClick(View v) {\n+        switch(v.getId()) {\n+            case R.id.heart_btn:\n+                if (mPlaceList.get(mTag).like) { // 좋아요 했으면 취소\n+                    mHeartBtn.setBackgroundResource(R.drawable.heart);\n+                    mPlaceList.get(mTag).like = false;\n+                } else {    // 좋아요 안했으면 좋아요\n+                    mHeartBtn.setBackgroundResource(R.drawable.full_heart);\n+                    mPlaceList.get(mTag).like = true;\n+                }\n+                break;\n+            case R.id.addToSch_btn:\n+                addToSubscheduleList();\n+        }\n+    }\n }"
  },
  {
    "sha": "5630a9b879d20a8c86b7f8ac8229f94c0457a393",
    "filename": "app/src/main/java/com/kop/daegudot/KakaoMap/ScheduleBottomSheet.java",
    "status": "removed",
    "additions": 0,
    "deletions": 88,
    "changes": 88,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/02c386ed5a39b6dcd1c4cfac8b5d5ad648fddc48/app/src/main/java/com/kop/daegudot/KakaoMap/ScheduleBottomSheet.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/02c386ed5a39b6dcd1c4cfac8b5d5ad648fddc48/app/src/main/java/com/kop/daegudot/KakaoMap/ScheduleBottomSheet.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/KakaoMap/ScheduleBottomSheet.java?ref=02c386ed5a39b6dcd1c4cfac8b5d5ad648fddc48",
    "patch": "@@ -1,88 +0,0 @@\n-//package com.kop.daegudot.KakaoMap;\n-//\n-//import android.content.Context;\n-//import android.graphics.Rect;\n-//import android.util.TypedValue;\n-//import android.view.View;\n-//import android.widget.Button;\n-//\n-//import androidx.coordinatorlayout.widget.CoordinatorLayout;\n-//import androidx.recyclerview.widget.ItemTouchHelper;\n-//import androidx.recyclerview.widget.LinearLayoutManager;\n-//import androidx.recyclerview.widget.RecyclerView;\n-//\n-//import com.kop.daegudot.MySchedule.MainScheduleInfo;\n-//import com.kop.daegudot.MySchedule.SubScheduleInfo;\n-//import com.kop.daegudot.R;\n-//\n-//import java.util.ArrayList;\n-//\n-/** previous version\n- *\n- */\n-//\n-//public class ScheduleBottomSheet {\n-//    private Context mContext;\n-//    RecyclerView mRecyclerView;\n-//    ArrayList<SubScheduleInfo> mSubScheduleList;\n-//    MainScheduleInfo mMainSchedule;\n-//\n-//    ItemTouchHelper mItemTouchHelper;\n-//    float oldX;\n-//\n-//    ScheduleBottomSheet(Context context,\n-//                        MainScheduleInfo mainSchedule, ArrayList<SubScheduleInfo> subscheduleList) {\n-//        mContext = context;\n-//        mMainSchedule = mainSchedule;\n-//        mSubScheduleList = subscheduleList;\n-//\n-//        ViewScheduleBottomSheet();\n-//    }\n-//\n-//    public void ViewScheduleBottomSheet() {\n-//        mRecyclerView = ((MapMainActivity) mContext).findViewById(R.id.BSScheduleList);\n-//        LinearLayoutManager layoutManager = new LinearLayoutManager(mContext);\n-//        layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);\n-//\n-//        // TODO: get list of subschedule address name\n-//\n-//        mRecyclerView.setLayoutManager(layoutManager);\n-//\n-//        ScheduleBSAdapter adapter = new ScheduleBSAdapter(mSubScheduleList.get(0).getPlaceName(), mContext);\n-//\n-//\n-////        ScheduleItemTouchHelperCallback mCallback = new ScheduleItemTouchHelperCallback(adapter);\n-////        mItemTouchHelper = new ItemTouchHelper(mCallback);\n-////        mItemTouchHelper.attachToRecyclerView(mRecyclerView);\n-//\n-//        mRecyclerView.setAdapter(adapter);\n-//\n-//        float width = (float) 320 / mSubScheduleList.get(0).getPlaceName().size() - 1;\n-//        mRecyclerView.addItemDecoration(new RecyclerViewDecoration(dpToPx(mContext, width)));\n-//    }\n-//\n-//    // change dp to pixel\n-//    public int dpToPx(Context context, float dp) {\n-//        return (int) TypedValue.applyDimension(\n-//                TypedValue.COMPLEX_UNIT_DIP, dp, context.getResources().getDisplayMetrics());\n-//    }\n-//}\n-//\n-//// RecyclerView 사이 간격 조절\n-//class RecyclerViewDecoration extends RecyclerView.ItemDecoration {\n-//    private final int divWidth;\n-//\n-//    public RecyclerViewDecoration(int divWidth) {\n-//        this.divWidth = divWidth;\n-//    }\n-//\n-//    @Override\n-//    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {\n-//        super.getItemOffsets(outRect, view, parent, state);\n-//        int position = parent.getChildAdapterPosition(view);\n-//\n-//        if (position != parent.getAdapter().getItemCount() -1) {\n-//            outRect.right = divWidth;\n-//        }\n-//    }\n-//}\n\\ No newline at end of file"
  },
  {
    "sha": "681c240ae588e749af473a59161ca94b48b4f7fd",
    "filename": "app/src/main/java/com/kop/daegudot/KakaoMap/ScheduleItemTouchHelperCallback.java",
    "status": "removed",
    "additions": 0,
    "deletions": 52,
    "changes": 52,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/02c386ed5a39b6dcd1c4cfac8b5d5ad648fddc48/app/src/main/java/com/kop/daegudot/KakaoMap/ScheduleItemTouchHelperCallback.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/02c386ed5a39b6dcd1c4cfac8b5d5ad648fddc48/app/src/main/java/com/kop/daegudot/KakaoMap/ScheduleItemTouchHelperCallback.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/KakaoMap/ScheduleItemTouchHelperCallback.java?ref=02c386ed5a39b6dcd1c4cfac8b5d5ad648fddc48",
    "patch": "@@ -1,52 +0,0 @@\n-//package com.kop.daegudot.KakaoMap;\n-//\n-//import android.content.Context;\n-//\n-//import androidx.annotation.NonNull;\n-//import androidx.recyclerview.widget.ItemTouchHelper;\n-//import androidx.recyclerview.widget.RecyclerView;\n-//\n-/** Recyclerview drag to move & swipe to delete\n- * use when it need\n- */\n-//public class ScheduleItemTouchHelperCallback extends ItemTouchHelper.Callback {\n-//  //  Context mContext;\n-//    ScheduleBSAdapter mAdapter;\n-//\n-//    ScheduleItemTouchHelperCallback(ScheduleBSAdapter adapter) {\n-//   //     mContext = context;\n-//        mAdapter = adapter;\n-//    }\n-//\n-//    public interface OnItemMoveListener {\n-//        boolean onItemMove(int fromPosition, int toPosition);\n-//        void onItemSwipe(int position);\n-//    }\n-//\n-//    private OnItemMoveListener mItemMoveListener;\n-//    public void ScheduleItemTouchHelper(OnItemMoveListener listener) {\n-//        mItemMoveListener = listener;\n-//    }\n-//\n-//    @Override\n-//    public int getMovementFlags(@NonNull RecyclerView recyclerView,\n-//                                @NonNull RecyclerView.ViewHolder viewHolder) {\n-//        int dragFlags = ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT;\n-//        int swipeFlags = ItemTouchHelper.DOWN;\n-//        return makeMovementFlags(dragFlags, swipeFlags);\n-//    }\n-//\n-//    @Override\n-//    public boolean onMove(@NonNull RecyclerView recyclerView,\n-//                          @NonNull RecyclerView.ViewHolder viewHolder,\n-//                          @NonNull RecyclerView.ViewHolder target) {\n-//        mAdapter.onItemMove(viewHolder.getAdapterPosition(), target.getAdapterPosition());\n-//        return true;\n-////        return false;\n-//    }\n-//\n-//    @Override\n-//    public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {\n-//        mAdapter.onItemSwipe(viewHolder.getAdapterPosition());\n-//    }\n-//}"
  },
  {
    "sha": "981c818db0f449a04c1d65eaaa1735c70761b2c5",
    "filename": "app/src/main/java/com/kop/daegudot/Login/EmailSignUpActivity.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Login/EmailSignUpActivity.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Login/EmailSignUpActivity.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Login/EmailSignUpActivity.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -105,6 +105,7 @@ public void addData() {\n \n         // Todo:\n         //  db에 회원가입 정보 저장하기 : email, pw, nickName\n+        //LoginActivity.setRegisterInfo(email, pw, 'N');\n     }\n \n     public boolean checkInfo() {"
  },
  {
    "sha": "26593399c3bf7fcce5d4223602a87947c167612c",
    "filename": "app/src/main/java/com/kop/daegudot/Login/KakaoLogin/SessionCallback.java",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Login/KakaoLogin/SessionCallback.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Login/KakaoLogin/SessionCallback.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Login/KakaoLogin/SessionCallback.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -56,6 +56,7 @@ public void onSuccess(MeV2Response result) {\n                             if (email != null) {\n                                 Log.i(\"KAKAO_API\", \"email: \" + email);\n                                 LoginActivity.editor.putString(\"email\", email);\n+                                //LoginActivity.setRegisterInfo(email, \"kakao\", 'k');\n                             } else if (kakaoAccount.emailNeedsAgreement() == OptionalBoolean.TRUE) {\n                                 // get email after get agreement\n                                 Log.e(\"KAKAO_API\", \"need agreeemnt\");"
  },
  {
    "sha": "8c56c1001fd2e0c671369e1318c324227de48cb1",
    "filename": "app/src/main/java/com/kop/daegudot/Login/LoginActivity.java",
    "status": "modified",
    "additions": 108,
    "deletions": 2,
    "changes": 110,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Login/LoginActivity.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Login/LoginActivity.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Login/LoginActivity.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -28,6 +28,18 @@\n import com.kop.daegudot.Login.KakaoLogin.SessionCallback;\n import com.kop.daegudot.MainActivity;\n import com.kop.daegudot.R;\n+import com.kop.daegudot.Network.RestApiService;\n+import com.kop.daegudot.Network.RestfulAdapter;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.security.MessageDigest;\n+import java.security.NoSuchAlgorithmException;\n+\n+import io.reactivex.Observable;\n+import io.reactivex.android.schedulers.AndroidSchedulers;\n+import io.reactivex.disposables.CompositeDisposable;\n+import io.reactivex.observers.DisposableObserver;\n+import io.reactivex.schedulers.Schedulers;\n \n public class LoginActivity extends AppCompatActivity implements View.OnClickListener {\n     // Google Login\n@@ -42,6 +54,10 @@\n \n     SharedPreferences pref ;\n     public static SharedPreferences.Editor editor;\n+    private CompositeDisposable mCompositeDisposable = new CompositeDisposable();\n+\n+    // Register 객체\n+    private static User user;\n \n     @Override\n     protected void onCreate(Bundle savedInstanceState) {\n@@ -50,10 +66,13 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         //   getHashKey();\n \n+        user = new User();\n+\n         pref = getSharedPreferences(\"data\", MODE_PRIVATE);\n         editor = pref.edit();\n \n-        checkAlreadyLogin();\n+        // TODO: 자동로그인 활성화\n+            checkAlreadyLogin();\n \n         /* Google Sign In */\n         findViewById(R.id.signin_google).setOnClickListener(this);\n@@ -93,6 +112,27 @@ public void checkAlreadyLogin() {\n         }\n     }\n \n+    public static void setRegisterInfo(String email, String password, char type) {\n+        user.setEmail(email);\n+        user.setPassword(password);\n+        user.setType(type);\n+    }\n+\n+/*    public void testRx() {\n+        RestfulAdapter restfulAdapter = RestfulAdapter.getInstance();\n+        RestApiService service =  restfulAdapter.getServiceApi();\n+\n+        HashMap<String, Object> hashmap = new HashMap<String, Object> ();\n+        Observable<Long> observable = service.postRegister(hashmap);\n+\n+        *//*\n+        Disposable disposable = observable\n+                .subscribeOn(Schedulers.newThread())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .\n+        *//*\n+    }*/\n+\n     // SignIn Clicked\n     private void googleSignIn() {\n         Intent signInIntent = mGoogleSignInClient.getSignInIntent();\n@@ -139,14 +179,19 @@ private void firebaseAuthWithGoogle(String idToken) {\n                     public void onComplete(@NonNull Task<AuthResult> task) {\n                         if (task.isSuccessful()) {\n                             // Sign in success, update UI with the signed-in user's information\n-\n+                            setRegisterInfo(user.getEmail(), \"google\", 'g');\n                             Log.d(TAG, \"signInWithCredential:success\");\n                             FirebaseUser user = mAuth.getCurrentUser();\n                             editor.putString(\"email\", user.getEmail());\n                             editor.putString(\"passwd\", \"google\");\n                             editor.putString(\"name\", user.getDisplayName());\n                             editor.commit();\n \n+                            Log.i(TAG, \"firebaseAuthWithGoogle email: \" + user.getEmail());\n+                            Log.i(TAG, \"firebaseAuthWithGoogle name: \" + user.getDisplayName());\n+\n+                            setRegisterInfo(user.getEmail(), \"google\", 'g');\n+\n                             updateUI(true);\n                         } else {\n                             // If sign in fails, display a message to the user.\n@@ -184,15 +229,50 @@ public void onClick(View v) {\n     }\n \n     public void convertToEmailLogin() {\n+        String email = \"test\";\n+        String nickname = \"test123\";\n+        String pw = \"test1234\";\n+        char type = 'a';\n+        //String encryptedPassWord = encryptSHA256(pw);\n+\n+        User userRequest = new User(email, nickname, /*encryptedPassWord*/ pw, type);\n+        startRx(userRequest);\n+\n         Intent intent = new Intent(LoginActivity.this, EmailLoginActivity.class);\n         startActivity(intent);\n     }\n \n+    private String encryptSHA256(String pw) {\n+        StringBuilder result = new StringBuilder();\n+\n+        try {\n+            MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n+            byte[] hash = digest.digest(pw.getBytes(\"UTF-8\"));\n+\n+            for (byte b : hash) {\n+                String hex = Integer.toHexString(0xff & b);\n+                if (hex.length() == 1) {\n+                    result.append('0');\n+                }\n+                result.append(hex);\n+            }\n+        } catch (NoSuchAlgorithmException e) {\n+            e.printStackTrace();\n+        } catch (UnsupportedEncodingException e) {\n+            e.printStackTrace();\n+        }\n+\n+        return result.toString();\n+    }\n \n     @Override\n     protected void onDestroy() {\n         super.onDestroy();\n         Session.getCurrentSession().removeCallback(sessionCallback);\n+\n+        if (!mCompositeDisposable.isDisposed()) {\n+            mCompositeDisposable.dispose();\n+        }\n     }\n \n \n@@ -220,4 +300,30 @@ private void getHashKey() {\n         }\n     }\n     */\n+\n+    private void startRx(User userRequest) {\n+        RestfulAdapter restfulAdapter = RestfulAdapter.getInstance();\n+        RestApiService service =  restfulAdapter.getServiceApi(null);\n+        Observable<User> observable = service.requestLogin(userRequest);\n+\n+        mCompositeDisposable.add(observable.subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribeWith(new DisposableObserver<User>() {\n+                    @Override\n+                    public void onNext(User response) {\n+                        Log.d(\"RX\", response.toString());\n+                    }\n+\n+                    @Override\n+                    public void onError(Throwable e) {\n+                        Log.d(\"RX\", e.getMessage());\n+                    }\n+\n+                    @Override\n+                    public void onComplete() {\n+                        Log.d(\"RX\", \"complete\");\n+                    }\n+                })\n+        );\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "5f3e1bc2fc8fdd53dbe5570568547f0dfc7831ce",
    "filename": "app/src/main/java/com/kop/daegudot/Login/User.java",
    "status": "added",
    "additions": 53,
    "deletions": 0,
    "changes": 53,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Login/User.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Login/User.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Login/User.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,53 @@\n+package com.kop.daegudot.Login;\n+\n+public class User {\n+    String email;\n+    String nickName;\n+    String password;\n+    char type;\n+    \n+    public String getEmail() {\n+        return email;\n+    }\n+    \n+    public void setEmail(String email) {\n+        this.email = email;\n+    }\n+    \n+    public String getNickName() {\n+        return nickName;\n+    }\n+    \n+    public void setNickName(String nickName) {\n+        this.nickName = nickName;\n+    }\n+    \n+    public String getPassword() {\n+        return password;\n+    }\n+    \n+    public void setPassword(String password) {\n+        this.password = password;\n+    }\n+    \n+    public char getType() {\n+        return type;\n+    }\n+    \n+    public void setType(char type) {\n+        this.type = type;\n+    }\n+    \n+    // test RX\n+    \n+    public User() {\n+    \n+    }\n+    \n+    public User(String email, String nickname, String password, char type) {\n+        this.email = email;\n+        this.nickName = nickname;\n+        this.password = password;\n+        this.type = type;\n+    }\n+}"
  },
  {
    "sha": "f95e98a7ffefc5d24ab73021a779e415d58f6101",
    "filename": "app/src/main/java/com/kop/daegudot/MainActivity.java",
    "status": "modified",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/MainActivity.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/MainActivity.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/MainActivity.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -6,6 +6,7 @@\n import androidx.fragment.app.FragmentTransaction;\r\n \r\n import android.os.Bundle;\r\n+import android.util.Log;\r\n import android.view.View;\r\n import android.widget.ImageButton;\r\n import android.widget.TextView;\r\n@@ -14,6 +15,17 @@\n import com.kop.daegudot.MorePage.MoreFragment;\r\n import com.kop.daegudot.MySchedule.MyScheduleFragment;\r\n import com.kop.daegudot.Recommend.RecommendFragment;\r\n+import com.kop.daegudot.Network.Contributor;\r\n+import com.kop.daegudot.Network.RestApiService;\r\n+import com.kop.daegudot.Network.RestfulAdapter;\r\n+\r\n+import java.util.List;\r\n+\r\n+import io.reactivex.Observable;\r\n+import io.reactivex.android.schedulers.AndroidSchedulers;\r\n+import io.reactivex.disposables.CompositeDisposable;\r\n+import io.reactivex.observers.DisposableObserver;\r\n+import io.reactivex.schedulers.Schedulers;\r\n \r\n public class MainActivity extends AppCompatActivity {\r\n     private ImageButton[] bottomBtns;\r\n@@ -25,6 +37,7 @@\n \r\n     Fragment currentFragment;\r\n     int mCurrentFragNum;\r\n+    //private CompositeDisposable mCompositeDisposable = new CompositeDisposable();\r\n \r\n     @Override\r\n     protected void onCreate(Bundle savedInstanceState) {\r\n@@ -68,6 +81,8 @@ public void onClick(View v) {\n             });\r\n         }\r\n \r\n+        //startRx();\r\n+\r\n         // MyScheduleFragment 첫 화면\r\n         currentFragment = fragments[0];\r\n         mCurrentFragNum = 0;\r\n@@ -117,4 +132,44 @@ public void changeFragment(int from, int to) {\n         mCurrentFragNum = to;\r\n     }\r\n \r\n+    /**\r\n+     * retrofit + okHttp + rxJava\r\n+     */\r\n+    /*private void startRx() {\r\n+        RestApiService service = RestfulAdapter.getInstance().getServiceApi();\r\n+        Observable<List<Contributor>> observable = service.getObContributors(sName, sRepo);\r\n+\r\n+        mCompositeDisposable.add(observable.subscribeOn(Schedulers.io())\r\n+                .observeOn(AndroidSchedulers.mainThread())\r\n+                .subscribeWith(new DisposableObserver<List<Contributor>>() {\r\n+                    @Override\r\n+                    public void onNext(List<Contributor> contributors) {\r\n+                        for (Contributor c : contributors) {\r\n+                            Log.d(\"RX\", c.toString());\r\n+                        }\r\n+                    }\r\n+\r\n+                    @Override\r\n+                    public void onError(Throwable e) {\r\n+                        Log.d(\"RX\", e.getMessage());\r\n+                    }\r\n+\r\n+                    @Override\r\n+                    public void onComplete() {\r\n+                        Log.d(\"RX\", \"complete\");\r\n+                    }\r\n+                })\r\n+\r\n+\r\n+        );\r\n+    }\r\n+\r\n+    @Override\r\n+    protected void onDestroy() {\r\n+        super.onDestroy();\r\n+\r\n+        if (!mCompositeDisposable.isDisposed()) {\r\n+            mCompositeDisposable.dispose();\r\n+        }\r\n+    }*/\r\n }\r"
  },
  {
    "sha": "fdaaa237ad82978ad09fd8cddcaf33aa6967b429",
    "filename": "app/src/main/java/com/kop/daegudot/MySchedule/SubScheduleAdapter.java",
    "status": "modified",
    "additions": 9,
    "deletions": 4,
    "changes": 13,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/MySchedule/SubScheduleAdapter.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/MySchedule/SubScheduleAdapter.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/MySchedule/SubScheduleAdapter.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -3,6 +3,7 @@\n import android.content.Context;\n import android.content.DialogInterface;\n import android.content.Intent;\n+import android.util.Log;\n import android.view.LayoutInflater;\n import android.view.View;\n import android.view.ViewGroup;\n@@ -13,7 +14,11 @@\n import androidx.appcompat.app.AlertDialog;\n import androidx.recyclerview.widget.RecyclerView;\n \n+//import com.kop.daegudot.KakaoMap.ConvertToMapMainAcitivity;\n import com.kop.daegudot.KakaoMap.MapMainActivity;\n+import com.kop.daegudot.KakaoMap.MarkerInfo;\n+import com.kop.daegudot.Network.RestApiService;\n+import com.kop.daegudot.Network.RestfulAdapter;\n import com.kop.daegudot.R;\n \n import java.util.ArrayList;\n@@ -29,7 +34,7 @@\n         \n         ViewHolder(View itemView) {\n             super(itemView);\n-    \n+            \n             nthDay = itemView.findViewById(R.id.tv_nthDay);\n             detailAddress = itemView.findViewById(R.id.tv_detail);\n             \n@@ -40,12 +45,12 @@\n         @Override\n         public void onClick(View v) {\n             int pos = getAdapterPosition();\n-    \n+            \n             if (pos != RecyclerView.NO_POSITION) {\n                 // 세부 일정 클릭하여 MapMainActivity로 넘어가기\n                 String whatDay = mSubScheduleList.get(pos).getDate();\n                 Toast.makeText(mContext, whatDay, Toast.LENGTH_SHORT).show();\n-        \n+\n                 Intent intent = new Intent(mContext, MapMainActivity.class);\n                 intent.putExtra(\"MainSchedule\", mMainSchedule);\n                 intent.putParcelableArrayListExtra(\"SubScheduleList\", mSubScheduleList);\n@@ -85,5 +90,5 @@ public int getItemCount() {\n         return mSubScheduleList.size();\n     }\n     \n-    \n+\n }"
  },
  {
    "sha": "c8b8d8cb19192f37c68960744c1262f0a7eeb9b4",
    "filename": "app/src/main/java/com/kop/daegudot/Network/AuthenticationInterceptor.java",
    "status": "added",
    "additions": 27,
    "deletions": 0,
    "changes": 27,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/AuthenticationInterceptor.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/AuthenticationInterceptor.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Network/AuthenticationInterceptor.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,27 @@\n+package com.kop.daegudot.Network;\n+\n+import java.io.IOException;\n+\n+import okhttp3.Interceptor;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+\n+public class AuthenticationInterceptor implements Interceptor {\n+\n+    private String authToken;\n+\n+    public AuthenticationInterceptor(String token) {\n+        this.authToken = token;\n+    }\n+\n+    @Override\n+    public Response intercept(Chain chain) throws IOException {\n+        Request original = chain.request();\n+\n+        Request.Builder builder = original.newBuilder()\n+                .header(\"Authorization\", authToken);\n+\n+        Request request = builder.build();\n+        return chain.proceed(request);\n+    }\n+}"
  },
  {
    "sha": "a15242b0a262a8a0f1e6bab78b738fe9fafaa9d0",
    "filename": "app/src/main/java/com/kop/daegudot/Network/Contributor.java",
    "status": "added",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/Contributor.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/Contributor.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Network/Contributor.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,15 @@\n+package com.kop.daegudot.Network;\n+\n+import androidx.annotation.NonNull;\n+\n+public class Contributor {\n+    String login;\n+    String url;\n+    int id;\n+\n+    @NonNull\n+    @Override\n+    public String toString() {\n+        return \"login : \" + login + \" id : \" + id + \" url : \" + url;\n+    }\n+}"
  },
  {
    "sha": "8749094620954a4a5dc04292a796496b77bf9a7e",
    "filename": "app/src/main/java/com/kop/daegudot/Network/Map/Place.java",
    "status": "added",
    "additions": 28,
    "deletions": 0,
    "changes": 28,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/Map/Place.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/Map/Place.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Network/Map/Place.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,28 @@\n+package com.kop.daegudot.Network.Map;\n+\n+// public 으로 변수 변경\n+public class Place {\n+    public long id; // db 고유 번호\n+    public int tag; // 마커 tag 번호\n+    public String address;\n+    public String attractContents;\n+    public String attractName;\n+    public String homepage;\n+    public String telephone;\n+    public float rate;\n+    public boolean like;\n+    public String longitude;\n+    public String latitude;\n+    public String category;\n+    \n+    @Override\n+    public boolean equals(Object object) {\n+        boolean equalName = false;\n+        \n+        if (object instanceof Place){\n+            equalName = this.attractName.equals(((Place) object).attractName);\n+        }\n+        \n+        return equalName;\n+    }\n+}"
  },
  {
    "sha": "d068badeea309561496b4468d433c18aa99b3958",
    "filename": "app/src/main/java/com/kop/daegudot/Network/Map/PlaceGeo.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/Map/PlaceGeo.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/Map/PlaceGeo.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Network/Map/PlaceGeo.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,7 @@\n+package com.kop.daegudot.Network.Map;\n+\n+public class PlaceGeo {\n+    public long id;\n+    public String longitude;\n+    public String latitude;\n+}"
  },
  {
    "sha": "1a1b1897c96242d6963404786d24b86b068fd141",
    "filename": "app/src/main/java/com/kop/daegudot/Network/Map/PlaceGeoUpdateActivity.java",
    "status": "added",
    "additions": 164,
    "deletions": 0,
    "changes": 164,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/Map/PlaceGeoUpdateActivity.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/Map/PlaceGeoUpdateActivity.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Network/Map/PlaceGeoUpdateActivity.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,164 @@\n+package com.kop.daegudot.Network.Map;\n+\n+import android.os.Bundle;\n+import android.os.Handler;\n+import android.util.Log;\n+\n+import androidx.appcompat.app.AppCompatActivity;\n+\n+import com.kop.daegudot.KakaoMap.Documents;\n+import com.kop.daegudot.Network.RestApiService;\n+import com.kop.daegudot.Network.RestfulAdapter;\n+import com.kop.daegudot.R;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import io.reactivex.Observable;\n+import io.reactivex.android.schedulers.AndroidSchedulers;\n+import io.reactivex.disposables.CompositeDisposable;\n+import io.reactivex.observers.DisposableObserver;\n+import io.reactivex.schedulers.Schedulers;\n+import retrofit2.Call;\n+import retrofit2.Callback;\n+import retrofit2.Response;\n+\n+public class PlaceGeoUpdateActivity extends AppCompatActivity {\n+    \n+    CompositeDisposable mCompositeDisposable = new CompositeDisposable();\n+    ArrayList<Place> mPlaceList;\n+    ArrayList<PlaceGeo> mGeoList;\n+    \n+    private String key = \"KakaoAK \" + \"fede27d02cb9592216a0a526b8683677\";\n+    \n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_place_geo_update);\n+\n+        mGeoList = new ArrayList<>();\n+        \n+        startRx();\n+    \n+        new Handler().postDelayed(new Runnable()\n+        {\n+            @Override\n+            public void run()\n+            {\n+                int n = mGeoList.size();\n+                Log.d(\"RX_PRINT!!\", \"total should be: \" + mPlaceList.size() +\n+                         \"  geo: \" + n);\n+                \n+                for (int i = 0; i < n; i++) {\n+                    Log.d(\"RX_PRINT\", \"id: \" + mGeoList.get(i).id);\n+                    Log.d(\"RX_PRINT2\", \"lat long: \" + mGeoList.get(i).latitude +\n+                            \", \" + mGeoList.get(i).longitude);\n+                }\n+                \n+                putGeoRx();\n+            }\n+        }, 5000);   // 5초 뒤 실행\n+    }\n+\n+    private void putGeoRx() {\n+        RestApiService service = RestfulAdapter.getInstance().getServiceApi(null);\n+        Observable<Long> observable = service.updateLocation(mGeoList);\n+    \n+        mCompositeDisposable.add(observable.subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribeWith(new DisposableObserver<Long>() {\n+    \n+                    @Override\n+                    public void onNext(Long aLong) {\n+                        Log.d(\"RX_return\", \"return: \" + aLong);\n+                    }\n+    \n+                    @Override\n+                    public void onError(Throwable e) {\n+                        Log.d(\"RX_resturn\", \"error\");\n+                        e.printStackTrace();\n+                    }\n+    \n+                    @Override\n+                    public void onComplete() {\n+                        Log.d(\"RX_resturn\", \"Complete\");\n+                    }\n+                })\n+        );\n+    }\n+    \n+    private void startRx() {\n+        RestApiService service = RestfulAdapter.getInstance().getServiceApi(null);\n+        Observable<List<Place>> observable = service.getPlaceList();\n+\n+        mCompositeDisposable.add(observable.subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribeWith(new DisposableObserver<List<Place>>() {\n+                    @Override\n+                    public void onNext(List<Place> response) {\n+                        Log.d(\"RX\", \"Next\");\n+                        mPlaceList = (ArrayList<Place>) response;\n+                    }\n+\n+                    @Override\n+                    public void onError(Throwable e) {\n+                        Log.d(\"RX\", e.getMessage());\n+                    }\n+\n+                    @Override\n+                    public void onComplete() {\n+                        Log.d(\"RX\", \"complete\");\n+\n+                        setMarkerRx();\n+                    }\n+                })\n+        );\n+    }\n+\n+    /* get MapPoint by Address\n+     * set Markers on map\n+     */\n+    private void setMarkerRx() {\n+        RestApiService service2 = RestfulAdapter.getInstance().getKakaoServiceApi();\n+\n+        int n = mPlaceList.size();\n+\n+        for (int i = 0; i < n; i++) {\n+            Call<Documents> data = service2.getSearchAddress(key, mPlaceList.get(i).address);\n+            int finalI = i;\n+//            Log.d(\"RX_ADDRESS\", \"!!!address:\" + mPlaceList.get(i).address);\n+            data.enqueue(new Callback<Documents>() {\n+                @Override\n+                public void onResponse(Call<Documents> call, Response<Documents> response) {\n+//                    Log.d(\"RX_ADDRESS\", \"code: \" + response.code());\n+                    Documents body = response.body();\n+\n+                    if (response.body() != null && body.getDocuments().size() != 0) {\n+                        Documents.Address address = body.getDocuments().get(0);\n+//                        Log.d(\"RX_ADDRESSS\", \"address: \" + address.address);\n+                        //                        Log.d(\"RX_ADDRESS\", \"Map: \" + address.y + \" , \" + address.x);\n+//                        mPlaceList.get(finalI).mapPoint =\n+//                                MapPoint.mapPointWithGeoCoord(address.y, address.x);\n+                                \n+                        PlaceGeo place = new PlaceGeo();\n+                        place.id = mPlaceList.get(finalI).id;\n+//                        place.latitude = (float) address.y;\n+//                        place.longitude = (float) address.x;\n+                        place.latitude = String.valueOf(address.y);\n+                        place.longitude = String.valueOf(address.x);\n+                        mGeoList.add(place);\n+                    } else {\n+                        Log.d(\"RX_ADDRESS\", mPlaceList.get(finalI).address);\n+                    }\n+                }\n+\n+                @Override\n+                public void onFailure(Call<Documents> call, Throwable t) {\n+                    Log.d(\"RX_ADDRESS\", \"Failure!!\");\n+                    t.printStackTrace();\n+                }\n+            });\n+        }\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "49a4eea0ddb69a9938eb1198628c30ce69710d59",
    "filename": "app/src/main/java/com/kop/daegudot/Network/Response.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/Response.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/Response.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Network/Response.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,6 @@\n+package com.kop.daegudot.network;\n+\n+public class Response {\n+    long value;\n+\n+}"
  },
  {
    "sha": "557eb6c3735d86d63250964a07cd9689a5ec8c1b",
    "filename": "app/src/main/java/com/kop/daegudot/Network/RestApiService.java",
    "status": "added",
    "additions": 70,
    "deletions": 0,
    "changes": 70,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/RestApiService.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/RestApiService.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Network/RestApiService.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,70 @@\n+package com.kop.daegudot.Network;\n+\n+import com.kop.daegudot.KakaoMap.Documents;\n+import com.kop.daegudot.Login.User;\n+import com.kop.daegudot.Network.Map.Place;\n+import com.kop.daegudot.Network.Map.PlaceGeo;\n+\n+import java.util.List;\n+\n+import io.reactivex.Observable;\n+import retrofit2.Call;\n+import retrofit2.http.Body;\n+import retrofit2.http.GET;\n+import retrofit2.http.Header;\n+import retrofit2.http.Headers;\n+import retrofit2.http.POST;\n+import retrofit2.http.PUT;\n+import retrofit2.http.Path;\n+import retrofit2.http.Query;\n+\n+public interface RestApiService {\n+\n+/*    @GET(\"repos/{owner}/{repo}/contributors\")\n+    Observable<List<Contributor>> getObContributors(@Path(\"owner\") String owner, @Path(\"repo\") String repo);*/\n+\n+    /* Login */\n+    @POST(\"/user/register\")\n+    Observable<Long> registerUser(@Body User userRequest);\n+\n+    @GET(\"/user/register/{email}\")\n+    String checkEmailDup(@Path(\"email\") String email);\n+\n+    @GET(\"/user/register/{nickname}\")\n+    Observable<List<User>> checkNickDup(@Path(\"email\") String nickname);\n+\n+    @POST(\"/user/login\")\n+    Observable<User> requestLogin(@Body User userRequest);\n+\n+    @GET(\"/places/list\")\n+    Observable<List<Place>> getPlaceList();\n+    \n+    @PUT(\"/places/location\")\n+    Observable<Long> updateLocation(@Body List<PlaceGeo> placeGeoList);\n+    \n+    /* get MapPoint by address */\n+    @GET(\"v2/local/search/address.json\")\n+    Call<Documents> getSearchAddress(\n+            @Header(\"Authorization\") String key,\n+            @Query(\"query\") String query\n+    );\n+    \n+    /* get place by category */\n+    @GET(\"v2/local/search/category.json\")\n+    Call<Documents> getPlacebyCategory(\n+            @Header(\"Authorization\") String key,\n+            @Query(\"category_group_code\") String category_group_code,\n+            @Query(\"x\") String x,\n+            @Query(\"y\") String y,\n+            @Query(\"radius\") int radius,\n+            @Query(\"page\") int page\n+    );\n+    \n+    @GET(\"v2/local/search/category.json\")\n+    Call<Documents> getPlacebyCategoryRect(\n+            @Header(\"Authorization\") String key,\n+            @Query(\"category_group_code\") String category_group_code,\n+            @Query(\"rect\") String coord\n+    );\n+    \n+}"
  },
  {
    "sha": "f01cc05eb1b502370ec6c774e95287f9450a6c89",
    "filename": "app/src/main/java/com/kop/daegudot/Network/RestfulAdapter.java",
    "status": "added",
    "additions": 83,
    "deletions": 0,
    "changes": 83,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/RestfulAdapter.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/RestfulAdapter.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Network/RestfulAdapter.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,83 @@\n+package com.kop.daegudot.Network;\n+\n+import android.text.TextUtils;\n+\n+import com.kop.daegudot.Network.RestApiService;\n+import com.kop.daegudot.Network.AuthenticationInterceptor;\n+import com.kop.daegudot.R;\n+\n+import okhttp3.OkHttpClient;\n+import okhttp3.logging.HttpLoggingInterceptor;\n+import retrofit2.Retrofit;\n+import retrofit2.adapter.rxjava2.RxJava2CallAdapterFactory;\n+import retrofit2.converter.gson.GsonConverterFactory;\n+\n+public class RestfulAdapter {\n+\n+    private static String BASE_URL = \"http://14.47.180.109:369/\";\n+    private static String KAKAO_URL = \"https://dapi.kakao.com/\";\n+\n+    private final OkHttpClient.Builder httpClient = new OkHttpClient.Builder();\n+    private final Retrofit.Builder builder = new Retrofit.Builder()\n+            .baseUrl(BASE_URL)\n+            .addConverterFactory(GsonConverterFactory.create());\n+\n+    private Retrofit retrofit = builder.build();\n+\n+    //version 2\n+    public RestApiService getServiceApi(String authToken) {\n+\n+        OkHttpClient.Builder clientBuilder = new OkHttpClient.Builder();\n+\n+        if (!TextUtils.isEmpty(authToken)) {\n+            AuthenticationInterceptor authInterceptor =\n+                    new AuthenticationInterceptor(\"Bearer \" + authToken);\n+            clientBuilder.addInterceptor(authInterceptor);\n+        }\n+        HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();\n+        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\n+        clientBuilder.addInterceptor(loggingInterceptor);\n+\n+        Retrofit retrofit = new Retrofit.Builder()\n+                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())\n+                .addConverterFactory(GsonConverterFactory.create())\n+                .client(clientBuilder.build())\n+                .baseUrl(BASE_URL)\n+                .build();\n+\n+        return retrofit.create(RestApiService.class);\n+    }\n+    \n+    public RestApiService getKakaoServiceApi() {\n+        OkHttpClient.Builder clientBuilder = new OkHttpClient.Builder();\n+    \n+        if (!TextUtils.isEmpty(null)) {\n+            AuthenticationInterceptor authInterceptor =\n+                    new AuthenticationInterceptor(\"Bearer \" + null);\n+            clientBuilder.addInterceptor(authInterceptor);\n+        }\n+        \n+        HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();\n+        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\n+        clientBuilder.addInterceptor(loggingInterceptor);\n+        \n+        Retrofit retrofit = new Retrofit.Builder()\n+                .baseUrl(KAKAO_URL)\n+                .addConverterFactory(GsonConverterFactory.create())\n+                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())\n+                .client(clientBuilder.build()) //added for interceptor\n+                .build();\n+        \n+        return retrofit.create(RestApiService.class);\n+    }\n+\n+    private RestfulAdapter() {}\n+\n+    public static RestfulAdapter getInstance() {\n+        return LazyHolder.instance;\n+    }\n+\n+    private static class LazyHolder {\n+        private static final RestfulAdapter instance = new RestfulAdapter();\n+    }\n+}"
  },
  {
    "sha": "76165da4ef1d378f8246d00e397cfbbe2feaac8a",
    "filename": "app/src/main/java/com/kop/daegudot/Network/User/UserResponse.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/User/UserResponse.java",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/java/com/kop/daegudot/Network/User/UserResponse.java",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/java/com/kop/daegudot/Network/User/UserResponse.java?ref=e48803955ed291f39037d2f2e484a00634d7082c",
    "patch": "@@ -0,0 +1,11 @@\n+package com.kop.daegudot.Network.User;\n+\n+public class UserResponse {\n+    public Long id;\n+    public String email;\n+    public String nickname;\n+    public String password;\n+    public String token;\n+    public char type;\n+\n+}"
  },
  {
    "sha": "a71ff1e9b297ccb1faa48c4b5747c10d736ca658",
    "filename": "app/src/main/res/drawable/big_yellow_pin.png",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/res/drawable/big_yellow_pin.png",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/res/drawable/big_yellow_pin.png",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/res/drawable/big_yellow_pin.png?ref=e48803955ed291f39037d2f2e484a00634d7082c"
  },
  {
    "sha": "d84cbf942bea11fd919f4b4fe6e55605d96658a2",
    "filename": "app/src/main/res/drawable/blue_pin.png",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/res/drawable/blue_pin.png",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/res/drawable/blue_pin.png",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/res/drawable/blue_pin.png?ref=e48803955ed291f39037d2f2e484a00634d7082c"
  },
  {
    "sha": "8a4e8d6ea5abed8f3ec351a29fca5fdd458fe660",
    "filename": "app/src/main/res/drawable/blue_pin2.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/res/drawable/blue_pin2.png",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/res/drawable/blue_pin2.png",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/res/drawable/blue_pin2.png?ref=e48803955ed291f39037d2f2e484a00634d7082c"
  },
  {
    "sha": "ceb8b0e21e473343a7f47665e7d83c047c620442",
    "filename": "app/src/main/res/drawable/cafe_pin.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/res/drawable/cafe_pin.png",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/res/drawable/cafe_pin.png",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/res/drawable/cafe_pin.png?ref=e48803955ed291f39037d2f2e484a00634d7082c"
  },
  {
    "sha": "576a27c9e0330110842a810ccd78a5e43e83ff92",
    "filename": "app/src/main/res/drawable/food_pin.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/indongzz/daegu_dot_app/blob/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/res/drawable/food_pin.png",
    "raw_url": "https://github.com/indongzz/daegu_dot_app/raw/e48803955ed291f39037d2f2e484a00634d7082c/app/src/main/res/drawable/food_pin.png",
    "contents_url": "https://api.github.com/repos/indongzz/daegu_dot_app/contents/app/src/main/res/drawable/food_pin.png?ref=e48803955ed291f39037d2f2e484a00634d7082c"
  }
]
