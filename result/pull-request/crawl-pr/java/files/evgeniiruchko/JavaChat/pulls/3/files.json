[
  {
    "sha": "6c941a5da8447fab6092e64cc83e2f3c02c7c311",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 15,
    "deletions": 0,
    "changes": 15,
    "blob_url": "https://github.com/evgeniiruchko/JavaChat/blob/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/pom.xml",
    "raw_url": "https://github.com/evgeniiruchko/JavaChat/raw/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/pom.xml",
    "contents_url": "https://api.github.com/repos/evgeniiruchko/JavaChat/contents/pom.xml?ref=a469ca3f01dd3b4e49b96be44b9a489a78ee7e40",
    "patch": "@@ -17,4 +17,19 @@\n         <maven.compiler.source>11</maven.compiler.source>\n         <maven.compiler.target>11</maven.compiler.target>\n     </properties>\n+\n+    <dependencies>\n+        <!--Log4j 2-->\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-api</artifactId>\n+            <version>2.4.1</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-core</artifactId>\n+            <version>2.4.1</version>\n+        </dependency>\n+\n+    </dependencies>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "a4276455010177681d402f6aa77713fd15192061",
    "filename": "server/database.db",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/evgeniiruchko/JavaChat/blob/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/server/database.db",
    "raw_url": "https://github.com/evgeniiruchko/JavaChat/raw/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/server/database.db",
    "contents_url": "https://api.github.com/repos/evgeniiruchko/JavaChat/contents/server/database.db?ref=a469ca3f01dd3b4e49b96be44b9a489a78ee7e40"
  },
  {
    "sha": "9b92c01ddd5e666a3a53fa9729cb8ad8fcb660da",
    "filename": "server/pom.xml",
    "status": "modified",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/evgeniiruchko/JavaChat/blob/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/server/pom.xml",
    "raw_url": "https://github.com/evgeniiruchko/JavaChat/raw/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/server/pom.xml",
    "contents_url": "https://api.github.com/repos/evgeniiruchko/JavaChat/contents/server/pom.xml?ref=a469ca3f01dd3b4e49b96be44b9a489a78ee7e40",
    "patch": "@@ -22,5 +22,16 @@\n             <artifactId>sqlite-jdbc</artifactId>\n             <version>3.32.3.2</version>\n         </dependency>\n+        <!--Log4j 2-->\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-api</artifactId>\n+            <version>2.4.1</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.logging.log4j</groupId>\n+            <artifactId>log4j-core</artifactId>\n+            <version>2.4.1</version>\n+        </dependency>\n     </dependencies>\n </project>\n\\ No newline at end of file"
  },
  {
    "sha": "49d8810f30f4f6829a8f5f47072bdbc616309a0d",
    "filename": "server/src/main/java/ru/geekbrains/server/ClientHandler.java",
    "status": "modified",
    "additions": 30,
    "deletions": 2,
    "changes": 32,
    "blob_url": "https://github.com/evgeniiruchko/JavaChat/blob/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/server/src/main/java/ru/geekbrains/server/ClientHandler.java",
    "raw_url": "https://github.com/evgeniiruchko/JavaChat/raw/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/server/src/main/java/ru/geekbrains/server/ClientHandler.java",
    "contents_url": "https://api.github.com/repos/evgeniiruchko/JavaChat/contents/server/src/main/java/ru/geekbrains/server/ClientHandler.java?ref=a469ca3f01dd3b4e49b96be44b9a489a78ee7e40",
    "patch": "@@ -1,11 +1,17 @@\n package ru.geekbrains.server;\n \n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n import java.io.DataInputStream;\n import java.io.DataOutputStream;\n import java.io.IOException;\n import java.net.Socket;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n \n public class ClientHandler {\n+    private static Logger logger = LogManager.getLogger();\n     private Server server;\n     private Socket socket;\n     private DataInputStream in;\n@@ -18,38 +24,48 @@ public ClientHandler(Server server, Socket socket) {\n             this.socket = socket;\n             this.in = new DataInputStream(socket.getInputStream());\n             this.out = new DataOutputStream(socket.getOutputStream());\n+//            ExecutorService executorService = Executors.newCachedThreadPool();\n             new Thread(() -> {\n+//            executorService.execute(() -> {\n                 try {\n                     while (true) {\n                         String str = in.readUTF();\n                         // /auth login1 password1\n                         if (str.startsWith(\"/auth\")) {\n                             String[] subStrings = str.split(\" \", 3);\n                             if (subStrings.length == 3) {\n+                                logger.info(\"Пользователь пытается авторизоваться с логином \" + subStrings[1]);\n                                 String nickFromDB = SQLHandler.getNickByLoginAndPassword(subStrings[1], subStrings[2]);\n                                 if (nickFromDB != null) {\n                                     if (!server.isNickInChat(nickFromDB)) {\n                                         nickname = nickFromDB;\n                                         sendMsg(\"/authok \" + nickname + \" \" + subStrings[1]);\n-                                        server.subscribe(this);\n+                                        server.subscribe(ClientHandler.this);\n+                                        logger.info(\"Упешная авторизация ползователя \" + subStrings[1]);\n                                         break;\n                                     } else {\n+                                        logger.warn(\"Пользователь \" + subStrings[1] + \" уже авторизован в чате\");\n                                         sendMsg(\"This nick already in use\");\n                                     }\n                                 } else {\n+                                    logger.warn(\"Неудачная авторизация \" + subStrings[1]);\n                                     sendMsg(\"Wrong login/password\");\n                                 }\n                             } else {\n+                                logger.warn(\"Пользователь ввёл не все данные для входа\");\n                                 sendMsg(\"Wrong data format\");\n                             }\n                         }\n                         if (str.startsWith(\"/registration\")) {\n                             String[] subStr = str.split(\" \");\n                             // /registration login pass nick\n                             if (subStr.length == 4) {\n+                                logger.info(\"Попытка регистрации. Пользователь ввёл login = \" + subStr[1] + \" password + subStr[3]\");\n                                 if (SQLHandler.tryToRegister(subStr[1], subStr[2], subStr[3])) {\n+                                    logger.info(\"Успешная регистрация пользователя \" + subStr[1]);\n                                     sendMsg(\"Registration complete\");\n                                 } else {\n+                                    logger.warn(\"Неудачная регистрация пользователя \" + subStr[1] + \", с ником \" + subStr[3]);\n                                     sendMsg(\"Incorrect login/password/nickname\");\n                                 }\n                             }\n@@ -61,6 +77,7 @@ public ClientHandler(Server server, Socket socket) {\n                         System.out.println(\"Сообщение от клиента: \" + str);\n                         if (str.startsWith(\"/\")) {\n                             if (str.equals(\"/end\")) {\n+                                logger.info(\"Пользователь \" + nickname + \" выходит из чата\");\n                                 break;\n                             } else if (str.startsWith(\"/w\")) {\n                                 // /w nick hello m8! hi\n@@ -71,9 +88,11 @@ public ClientHandler(Server server, Socket socket) {\n                                         server.unicastMsg(toUserNick, \"from \" + nickname + \": \" + subStrings[2]);\n                                         sendMsg(\"to \" + toUserNick + \": \" + subStrings[2]);\n                                     } else {\n+                                        logger.warn(\"Неудачная попытка отправки личного сообщения от пользователя \" + nickname + \", т.к. пользователя \" + toUserNick + \" нет в чате\");\n                                         sendMsg(\"User with nick '\" + toUserNick + \"' not found in chat room\");\n                                     }\n                                 } else {\n+                                    logger.warn(\"Недостаточно параметров для отправки личного сообщения от пользователя\" + nickname);\n                                     sendMsg(\"Wrong private message\");\n                                 }\n                             }\n@@ -85,23 +104,31 @@ public ClientHandler(Server server, Socket socket) {\n                     e.printStackTrace();\n                 } finally {\n                     try {\n+                        logger.debug(\"Попытка закрытия входящего потока\");\n                         in.close();\n                     } catch (IOException e) {\n+                        logger.error(\"Закрытие входящего потока завершилось неудачно\" , e);\n                         e.printStackTrace();\n                     }\n                     try {\n+                        logger.debug(\"Попытка закрытия исхдящего потока\");\n                         out.close();\n                     } catch (IOException e) {\n+                        logger.error(\"Закрытие исходящего потока завершилось неудачно\" , e);\n                         e.printStackTrace();\n                     }\n                     try {\n+                        logger.debug(\"Попытка закрытия сокета\");\n                         socket.close();\n                     } catch (IOException e) {\n+                        logger.error(\"Закрытие сокета завершилось неудачно\" , e);\n                         e.printStackTrace();\n                     }\n-                    server.unsubscribe(this);\n+                    server.unsubscribe(ClientHandler.this);\n                 }\n             }).start();\n+//            });\n+//            executorService.shutdown();\n         } catch (IOException e) {\n             e.printStackTrace();\n         }\n@@ -111,6 +138,7 @@ public void sendMsg(String msg) {\n         try {\n             out.writeUTF(msg);\n         } catch (IOException e) {\n+            logger.error(\"Неуданая оправка сообщения\" , e);\n             e.printStackTrace();\n         }\n     }"
  },
  {
    "sha": "4ac921ebb35efefabe6914ca76ee8c36ae8d4441",
    "filename": "server/src/main/java/ru/geekbrains/server/SQLHandler.java",
    "status": "modified",
    "additions": 21,
    "deletions": 1,
    "changes": 22,
    "blob_url": "https://github.com/evgeniiruchko/JavaChat/blob/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/server/src/main/java/ru/geekbrains/server/SQLHandler.java",
    "raw_url": "https://github.com/evgeniiruchko/JavaChat/raw/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/server/src/main/java/ru/geekbrains/server/SQLHandler.java",
    "contents_url": "https://api.github.com/repos/evgeniiruchko/JavaChat/contents/server/src/main/java/ru/geekbrains/server/SQLHandler.java?ref=a469ca3f01dd3b4e49b96be44b9a489a78ee7e40",
    "patch": "@@ -1,8 +1,14 @@\n package ru.geekbrains.server;\n \n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+\n+import java.util.logging.Level;\n import java.sql.*;\n \n+\n public class SQLHandler {\n+    private static Logger logger = LogManager.getLogger();\n     private static Connection connection;\n     private static Statement statement;\n \n@@ -11,36 +17,50 @@ public static void connect() {\n             Class.forName(\"org.sqlite.JDBC\");\n             connection = DriverManager.getConnection(\"jdbc:sqlite:server/database.db\");\n             statement = connection.createStatement();\n+            logger.info(\"Успешное подключение к базе данных\");\n         } catch (Exception e) {\n+            logger.error(\"Не удалось подключиться к базе данных \" + connection.toString());\n             e.printStackTrace();\n         }\n     }\n \n     public static void disconnect() {\n         try {\n             connection.close();\n+            logger.info(\"Отключение от базы данных\");\n         } catch (SQLException e) {\n+            logger.error(\"Не удалось отключитсья от базы данных\");\n             e.printStackTrace();\n         }\n     }\n \n     public static String getNickByLoginAndPassword(String login, String password) {\n         try {\n-            ResultSet rs = statement.executeQuery(\"SELECT nickname FROM users WHERE login ='\" + login + \"' AND password = '\" + password + \"'\");\n+            //ResultSet rs = statement.executeQuery(\"SELECT nickname FROM users WHERE login ='\" + login + \"' AND password = '\" + password + \"'\");\n+            logger.debug(\"Проверка комбинации login = \" + login + \" password = \" + password);\n+            PreparedStatement ps = connection.prepareStatement(\"SELECT nickname FROM users WHERE login = ? AND password = ?\");\n+            ps.setString(1, login);\n+            ps.setString(2, password);\n+            ResultSet rs = ps.executeQuery();\n             if (rs.next()) {\n+                logger.debug(\"пользователь найден\");\n                 return rs.getString(\"nickname\");\n             }\n         } catch (SQLException e) {\n             e.printStackTrace();\n         }\n+        logger.debug(\"пользователь не найден\");\n         return null;\n     }\n \n     public static boolean tryToRegister(String login, String password, String nickname) {\n         try {\n+            logger.info(\"Попытка регистрации пользователя с ником \" + nickname + \" и с логином \" + login);\n             statement.executeUpdate(\"INSERT INTO users (login, password, nickname) VALUES ('\" + login + \"','\" + password + \"','\" + nickname + \"')\");\n+            logger.info(\"Пользователь \" + login + \" успешно зарегестрирован\");\n             return true;\n         } catch (SQLException e) {\n+            logger.warn(\"Неудачная регистрация пользователя login = \" + login, \" nickname = \" + nickname);\n             return false;\n         }\n     }"
  },
  {
    "sha": "c2bf6951e253708d7daa5bba1a55c525163a8f8f",
    "filename": "server/src/main/resources/log4j2.xml",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/evgeniiruchko/JavaChat/blob/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/server/src/main/resources/log4j2.xml",
    "raw_url": "https://github.com/evgeniiruchko/JavaChat/raw/a469ca3f01dd3b4e49b96be44b9a489a78ee7e40/server/src/main/resources/log4j2.xml",
    "contents_url": "https://api.github.com/repos/evgeniiruchko/JavaChat/contents/server/src/main/resources/log4j2.xml?ref=a469ca3f01dd3b4e49b96be44b9a489a78ee7e40",
    "patch": "@@ -0,0 +1,30 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<Configuration status=\"debug\" strict=\"true\"\n+               name=\"XMLConfigTest\" packages=\"org.apache.logging.log4j.test\">\n+    <Filter type=\"ThresholdFilter\" level=\"trace\" />\n+\n+    <Appenders>\n+        <Console name=\"STDOUT\">\n+            <Layout type=\"PatternLayout\" pattern=\"%m %n\" />\n+        </Console>\n+        <RollingFile name=\"rollingFile\"\n+                     fileName=\"logs/Server.log\"\n+                     filePattern=\"logs/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz\">\n+            <PatternLayout>\n+                <Pattern>%d %p %c{1.} [%t] %m%n</Pattern>\n+            </PatternLayout>\n+            <Policies>\n+              <!--  <TimeBasedTriggeringPolicy interval = \"1\" /> -->\n+                <SizeBasedTriggeringPolicy size=\"100 MB\" />\n+            </Policies>\n+        </RollingFile>\n+    </Appenders>\n+\n+    <Loggers>\n+        <Root level=\"INFO\">\n+            <AppenderRef ref=\"STDOUT\" />\n+            <AppenderRef ref=\"rollingFile\" />\n+        </Root>\n+    </Loggers>\n+\n+</Configuration>\n\\ No newline at end of file"
  }
]
