[
  {
    "sha": "78d5882f65fe5f370f740088bd7496db5ce4f922",
    "filename": "L12-solid/build.gradle",
    "status": "added",
    "additions": 19,
    "deletions": 0,
    "changes": 19,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/build.gradle",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/build.gradle",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/L12-solid/build.gradle?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -0,0 +1,19 @@\n+plugins {\n+    id 'java'\n+}\n+\n+group 'ru.otus.atm'\n+version '0.1'\n+\n+repositories {\n+    mavenCentral()\n+}\n+\n+dependencies {\n+    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'\n+    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'\n+}\n+\n+test {\n+    useJUnitPlatform()\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "4ba52b81160b40c9517ffb1de0ec91793ff287b4",
    "filename": "L12-solid/src/main/java/ru/otus/atm/Atm.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/Atm.java",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/Atm.java",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/L12-solid/src/main/java/ru/otus/atm/Atm.java?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -0,0 +1,44 @@\n+package ru.otus.atm;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+public class Atm {\n+\n+    Atm(CellsInterface cells) {\n+        this.cells = cells;\n+    }\n+\n+    private final CellsInterface cells;\n+\n+    public Map<Nominals, Integer> getRemains() {\n+        return cells.getRemains();\n+    }\n+\n+\n+    public List<Coin> getCoins(Integer amount) {\n+        var remainsEntry = cells.getRemains().entrySet()\n+                .stream().sorted((o1, o2) -> o2.getKey().getWeight() - o1.getKey().getWeight()).collect(Collectors.toList());\n+        var min = remainsEntry.get(remainsEntry.size() - 1).getKey().getWeight();\n+        if (amount % min != 0) {\n+            throw new AtmException(\"Amount must Be divisible \" + min);\n+        }\n+        List<Nominals> toGet = new ArrayList<>();\n+        for (var line : remainsEntry) {\n+            for (int i = 0; i < line.getValue(); i++) {\n+                if ((amount -= line.getKey().getWeight()) < 0) {\n+                    amount += line.getKey().getWeight();\n+                    break;\n+                } else {\n+                    toGet.add(line.getKey());\n+                }\n+            }\n+        }\n+        if (amount != 0) {\n+            throw new AtmException(\"Not Found Money\");\n+        }\n+        return toGet.stream().map(cells::getCoin).collect(Collectors.toList());\n+    }\n+}"
  },
  {
    "sha": "ca17a28d57f1fa58d579841bcd5042cb5b65bb88",
    "filename": "L12-solid/src/main/java/ru/otus/atm/AtmException.java",
    "status": "added",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/AtmException.java",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/AtmException.java",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/L12-solid/src/main/java/ru/otus/atm/AtmException.java?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -0,0 +1,8 @@\n+package ru.otus.atm;\n+\n+public class AtmException extends RuntimeException{\n+    AtmException(String msg) {\n+        super(msg);\n+    }\n+\n+}"
  },
  {
    "sha": "585a33fa39d686fd104777766347c2153cf2bddf",
    "filename": "L12-solid/src/main/java/ru/otus/atm/Cells.java",
    "status": "added",
    "additions": 30,
    "deletions": 0,
    "changes": 30,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/Cells.java",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/Cells.java",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/L12-solid/src/main/java/ru/otus/atm/Cells.java?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -0,0 +1,30 @@\n+package ru.otus.atm;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+public class Cells implements CellsInterface {\n+\n+    private final Map<Nominals, List<Coin>> store = new HashMap<>();\n+\n+    @Override\n+    public Map<Nominals, Integer> getRemains() {\n+        return store.entrySet()\n+                .stream().collect(Collectors.groupingBy(Map.Entry::getKey, Collectors.summingInt(value -> value.getValue().size())));\n+    }\n+\n+    @Override\n+    public boolean putCoin(Coin coin) {\n+        store.computeIfAbsent(coin.getNominal(), k -> new ArrayList<>());\n+        return store.get(coin.getNominal()).add(coin);\n+    }\n+\n+    @Override\n+    public Coin getCoin(Nominals nominal) {\n+        var cell = store.get(nominal);\n+        return cell.remove(cell.size() - 1);\n+    }\n+}"
  },
  {
    "sha": "70cca8c7dedfed08b48aef3eb07cb16209febb12",
    "filename": "L12-solid/src/main/java/ru/otus/atm/CellsInterface.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/CellsInterface.java",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/CellsInterface.java",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/L12-solid/src/main/java/ru/otus/atm/CellsInterface.java?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -0,0 +1,12 @@\n+package ru.otus.atm;\n+\n+import java.util.Map;\n+\n+public interface CellsInterface {\n+\n+    Map<Nominals, Integer> getRemains();\n+\n+    <T extends Coin> boolean putCoin(T coin);\n+\n+    Coin getCoin(Nominals nominal);\n+}"
  },
  {
    "sha": "52007a713bea0b577d48691aa8b4ce5147e54ab7",
    "filename": "L12-solid/src/main/java/ru/otus/atm/Coin.java",
    "status": "added",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/Coin.java",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/Coin.java",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/L12-solid/src/main/java/ru/otus/atm/Coin.java?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -0,0 +1,6 @@\n+package ru.otus.atm;\n+\n+public interface Coin {\n+\n+    Nominals getNominal();\n+}"
  },
  {
    "sha": "3e8aa1f010ad1ed6d61b0fc6c5359621048cf70a",
    "filename": "L12-solid/src/main/java/ru/otus/atm/Nominals.java",
    "status": "added",
    "additions": 18,
    "deletions": 0,
    "changes": 18,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/Nominals.java",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/Nominals.java",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/L12-solid/src/main/java/ru/otus/atm/Nominals.java?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -0,0 +1,18 @@\n+package ru.otus.atm;\n+\n+public enum Nominals {\n+\n+    ONE_HUNDRED(100),\n+    FIVE_HUNDRED(500),\n+    ONE_THOUSAND(1000);\n+\n+    Nominals(int weight) {\n+        this.weight = weight;\n+    }\n+\n+    private int weight;\n+\n+    public int getWeight() {\n+        return weight;\n+    }\n+}"
  },
  {
    "sha": "7aa63982874d8c6f4261f20574dc02be3e34c01c",
    "filename": "L12-solid/src/main/java/ru/otus/atm/coins/Coins100.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/coins/Coins100.java",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/coins/Coins100.java",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/L12-solid/src/main/java/ru/otus/atm/coins/Coins100.java?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.atm.coins;\n+\n+import ru.otus.atm.Coin;\n+import ru.otus.atm.Nominals;\n+\n+import static ru.otus.atm.Nominals.ONE_HUNDRED;\n+\n+public class Coins100 implements Coin {\n+    @Override\n+    public Nominals getNominal() {\n+        return ONE_HUNDRED;\n+    }\n+}"
  },
  {
    "sha": "faa4d519295549a866600f488f0016303028bc66",
    "filename": "L12-solid/src/main/java/ru/otus/atm/coins/Coins1000.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/coins/Coins1000.java",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/coins/Coins1000.java",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/L12-solid/src/main/java/ru/otus/atm/coins/Coins1000.java?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.atm.coins;\n+\n+import ru.otus.atm.Coin;\n+import ru.otus.atm.Nominals;\n+\n+import static ru.otus.atm.Nominals.ONE_THOUSAND;\n+\n+public class Coins1000 implements Coin {\n+    @Override\n+    public Nominals getNominal() {\n+        return ONE_THOUSAND;\n+    }\n+}"
  },
  {
    "sha": "9c8c25ff22318405af20be5e20aee8c879c37ccf",
    "filename": "L12-solid/src/main/java/ru/otus/atm/coins/Coins500.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/coins/Coins500.java",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/main/java/ru/otus/atm/coins/Coins500.java",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/L12-solid/src/main/java/ru/otus/atm/coins/Coins500.java?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -0,0 +1,13 @@\n+package ru.otus.atm.coins;\n+\n+import ru.otus.atm.Coin;\n+import ru.otus.atm.Nominals;\n+\n+import static ru.otus.atm.Nominals.FIVE_HUNDRED;\n+\n+public class Coins500 implements Coin {\n+    @Override\n+    public Nominals getNominal() {\n+        return FIVE_HUNDRED;\n+    }\n+}"
  },
  {
    "sha": "f5f338ae6a8dbce96ed4d275924258d1b3c4e86b",
    "filename": "L12-solid/src/test/java/ru/otus/atm/AtmTest.java",
    "status": "added",
    "additions": 66,
    "deletions": 0,
    "changes": 66,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/test/java/ru/otus/atm/AtmTest.java",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/L12-solid/src/test/java/ru/otus/atm/AtmTest.java",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/L12-solid/src/test/java/ru/otus/atm/AtmTest.java?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -0,0 +1,66 @@\n+package ru.otus.atm;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import ru.otus.atm.coins.Coins100;\n+import ru.otus.atm.coins.Coins1000;\n+import ru.otus.atm.coins.Coins500;\n+\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static ru.otus.atm.Nominals.*;\n+\n+class AtmTest {\n+\n+    private Atm atm;\n+\n+    @BeforeEach\n+    void setUp() {\n+        Cells cells = new Cells();\n+        int initCount = 10;\n+        for (int i = 0; i < initCount; i++) {\n+            cells.putCoin(new Coins100());\n+            cells.putCoin(new Coins500());\n+            cells.putCoin(new Coins1000());\n+        }\n+        atm = new Atm(cells);\n+    }\n+\n+    @Test\n+    @DisplayName(\"Positive Get Nominals 1000 and 100\")\n+    public void get1000and100CoinsTest() {\n+        var coins = atm.getCoins(1100);\n+        assert (coins.stream().filter(coin -> coin.getNominal().equals(ONE_THOUSAND)).count() == 1);\n+        assert (coins.stream().filter(coin -> coin.getNominal().equals(ONE_HUNDRED)).count() == 1);\n+        var remains = atm.getRemains();\n+        assert remains.get(ONE_HUNDRED) == 9;\n+        assert remains.get(FIVE_HUNDRED) == 10;\n+        assert remains.get(ONE_THOUSAND) == 9;\n+    }\n+\n+    @Test\n+    @DisplayName(\"Positive Get Nominals 1000 and 500 and 100\")\n+    public void get1000and500and100CoinsTest() {\n+        var coins = atm.getCoins(1600);\n+        assert (coins.stream().filter(coin -> coin.getNominal().equals(ONE_THOUSAND)).count() == 1);\n+        assert (coins.stream().filter(coin -> coin.getNominal().equals(FIVE_HUNDRED)).count() == 1);\n+        assert (coins.stream().filter(coin -> coin.getNominal().equals(ONE_HUNDRED)).count() == 1);\n+        var remains = atm.getRemains();\n+        assert remains.get(ONE_HUNDRED) == 9;\n+        assert remains.get(FIVE_HUNDRED) == 9;\n+        assert remains.get(ONE_THOUSAND) == 9;\n+    }\n+\n+    @Test\n+    @DisplayName(\"Throw Amount must Be divisible x\")\n+    public void getCoinsDivisibleTest() {\n+        assertThrows(AtmException.class, () -> atm.getCoins(10120));\n+    }\n+\n+    @Test\n+    @DisplayName(\"Throw Not Found Money\")\n+    public void getMuchCoinsTest() {\n+        assertThrows(AtmException.class, () -> atm.getCoins(50000));\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "481769a8cabf544987ebb1e2980c5119ad63378d",
    "filename": "settings.gradle",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/blummock/otus_java_2020_12/blob/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/settings.gradle",
    "raw_url": "https://github.com/blummock/otus_java_2020_12/raw/ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c/settings.gradle",
    "contents_url": "https://api.github.com/repos/blummock/otus_java_2020_12/contents/settings.gradle?ref=ebb428ec3bc1765e6c6eb8fa61b2729d66b9959c",
    "patch": "@@ -3,5 +3,5 @@ include 'L01-gradle'\n include 'L04-generics'\n include 'L06-reflection'\n include 'L08-gc'\n-\n+include 'L12-solid'\n "
  }
]
