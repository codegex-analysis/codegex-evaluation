[
  {
    "sha": "c9ce0631d06364e091f23c7aa7408d56bb389ef1",
    "filename": "pom.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/pom.xml",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/pom.xml",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/pom.xml?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -156,6 +156,8 @@\n         <module>process-mongodb-persistence-springboot</module>\n         <module>process-optaplanner-quarkus</module>\n         <module>process-optaplanner-springboot</module>\n+        <module>process-postgresql-persistence-quarkus</module>\n+        <module>process-postgresql-persistence-springboot</module>\n         <module>process-quarkus-example</module>\n         <module>process-springboot-example</module>\n         <module>process-scripts-quarkus</module>"
  },
  {
    "sha": "591373187ecb5809243dae34de96925642c2208d",
    "filename": "process-postgresql-persistence-quarkus/README.md",
    "status": "added",
    "additions": 217,
    "deletions": 0,
    "changes": 217,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/README.md",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/README.md",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/README.md?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,217 @@\n+# Process with persistence powered by PostgreSQL \n+\n+## Description\n+\n+A quickstart project that processes deals for travellers. It utilizes process composition to split the work of\n+\n+* submitting a deal\n+* reviewing a deal\n+\n+At the same time shows simplified version of a approval process that waits for human actor to provide review.\n+\n+This example shows\n+\n+* exposing Submit Deal as public service\n+* each process instance is going to be evaluated and asks for review\n+* at any point in time service can be shutdown and when brought back it will keep the state of the instances\n+\n+Note: The use of this example shows that the data sent to PostgreSQL is saved, you can shut down the\n+ application and\n+ restart it\n+and as long as PostgreSQL is running after you restart you should still see the data\n+\n+It utilizes PostgreSQL server as the backend store.\n+\n+* Process (submitDeal.bpmn)\n+<p align=\"center\"><img width=75% height=50% src=\"docs/images/process.png\"></p>\n+\n+* Process Properties (top)\n+<p align=\"center\"><img src=\"docs/images/processProperties.png\"></p>\n+\n+* Process Properties (bottom)\n+<p align=\"center\"><img src=\"docs/images/processProperties2.png\"></p>\n+\n+* Call a deal\n+<p align=\"center\"><img src=\"docs/images/callADeal.png\"></p>\n+\n+* Call a deal (Assignments)\n+<p align=\"center\"><img src=\"docs/images/callADeal2.png\"></p>\n+\n+* Print review the Deal\n+<p align=\"center\"><img src=\"docs/images/printReviewTheDeal.png\"></p>\n+\n+* Subprocess (reviewDeal.bpmn)\n+<p align=\"center\"><img width=75% height=50% src=\"docs/images/subprocess.png\"></p>\n+\n+* Deal Review (top)\n+<p align=\"center\"><img src=\"docs/images/dealReview.png\"></p>\n+\n+* Deal Review (bottom)\n+<p align=\"center\"><img src=\"docs/images/dealReview3.png\"></p>\n+\n+* Review deal user task\t(top)\n+<p align=\"center\"><img src=\"docs/images/reviewDealUserTask.png\"></p>\n+\n+* Review deal user task\t(botom)\n+<p align=\"center\"><img src=\"docs/images/reviewDealUserTask2.png\"></p>\n+\n+* Review deal user task\t(Assignments)\n+<p align=\"center\"><img src=\"docs/images/reviewDealUserTask3.png\"></p>\n+\n+## Infrastructure requirements\n+\n+This quickstart requires a PostgreSQL server to be available with a database, a user and credentials already created\n+, these configurations should then be set in the connection URI parameter in [applications.properties](src/main/resources/application.properties) file with the key\n+ `kogito.persistence.postgresql.connection.uri`, i.e `postgresql.connection.uri=postgresql://kogito-user:kogito-pass@localhost:5432\n+ /kogito` here are the [full settings for URI](https://www.postgresql.org/docs/9.6/static/libpq-connect.html#LIBPQ-CONNSTRING)    \n+ \n+You must set property - `kogito.persistence.type=postgresql` to enable PostgreSQL persistence. There is also a\n+ configuration to allow the application to run DDL scripts during the initialization, this can be enabled with the\n+  property `kogito.persistence.auto.ddl=true`.\n+For more details you can check [applications.properties](src/main/resources/application.properties).\n+\n+Optionally and for convenience, a docker-compose [configuration file](dockerdocker-compose/docker-compose.yml) is\n+ provided in the\n+ path [dockerdocker-compose/](dockerdocker-compose/), where you can just run the command from there:\n+  ```sh\n+  docker-compose up\n+  ```  \n+  In this way a container for PostgreSQL running on port 5432, along with PgAdmin, running on port\n+   8055 to allow the database management.\n+  \n+  The default admin user for PostgreSQL is `postgres` with password `pass`, for PgAdmin the default user created is\n+   `user@user.org` with password `pass`, the database connection could be set in PgAdmin using the hostname `postgres\n+   -container` for the PostgreSQL server, details\n+    defined in\n+    [configuration file](dockerdocker-compose  mpose.yml\n+   ), an initializer script is executed to create the `kogito` database and `kogito-user`.\n+  \n+## Build and run\n+\n+### Prerequisites\n+\n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need:\n+  - GraalVM 19.3+ installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - GraalVM native image needs as well native-image extension: https://www.graalvm.org/docs/reference-manual/native-image/\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too, please refer to GraalVM installation documentation for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```sh\n+mvn clean compile quarkus:dev\n+```\n+\n+NOTE: With dev mode of Quarkus you can take advantage of hot reload for business assets like processes, rules, decision tables and java code. No need to redeploy or restart your running application.\n+\n+### Package and Run in JVM mode\n+\n+```sh\n+mvn clean package\n+java -jar target/quarkus-app/quarkus-run.jar  \n+```\n+\n+or on windows\n+\n+```sh\n+mvn clean package\n+java -jar target\\quarkus-app\\quarkus-run.jar\n+```\n+\n+### Package and Run using Local Native Image\n+Note that this requires GRAALVM_HOME to point to a valid GraalVM installation\n+\n+```sh\n+mvn clean package -Pnative\n+```\n+\n+To run the generated native executable, generated in `target/`, execute\n+\n+```\n+./target/process-postgresql-persistence-quarkus-runner\n+```\n+\n+### OpenAPI (Swagger) documentation\n+[Specification at swagger.io](https://swagger.io/docs/specification/about/)\n+\n+You can take a look at the [OpenAPI definition](http://localhost:8080/openapi?format=json) - automatically generated and included in this service - to determine all available operations exposed by this service. For easy readability you can visualize the OpenAPI definition file using a UI tool like for example available [Swagger UI](https://editor.swagger.io).\n+\n+In addition, various clients to interact with this service can be easily generated using this OpenAPI definition.\n+\n+When running in either Quarkus Development or Native mode, we also leverage the [Quarkus OpenAPI extension](https://quarkus.io/guides/openapi-swaggerui#use-swagger-ui-for-development) that exposes [Swagger UI](http://localhost:8080/swagger-ui/) that you can use to look at available REST endpoints and send test requests.\n+\n+### Submit a deal\n+\n+To make use of this application it is as simple as putting a sending request to `http://localhost:8080/deals`  with following content\n+\n+```json\n+{\n+\"name\" : \"my fancy deal\",\n+\"traveller\" : {\n+  \"firstName\" : \"John\",\n+  \"lastName\" : \"Doe\",\n+  \"email\" : \"jon.doe@example.com\",\n+  \"nationality\" : \"American\",\n+  \"address\" : {\n+  \t\"street\" : \"main street\",\n+  \t\"city\" : \"Boston\",\n+  \t\"zipCode\" : \"10005\",\n+  \t\"country\" : \"US\" }\n+  }\n+}\n+\n+```\n+\n+Complete curl command can be found below:\n+\n+```\n+curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\" : \"my fancy deal\", \"traveller\" : { \"firstName\" : \"John\", \"lastName\" : \"Doe\", \"email\" : \"jon.doe@example.com\", \"nationality\" : \"American\",\"address\" : { \"street\" : \"main street\", \"city\" : \"Boston\", \"zipCode\" : \"10005\", \"country\" : \"US\" }}}' http://localhost:8080/deals\n+```\n+\n+this will then trigger the review user task that you can work with.\n+\n+### Get review task for given deal\n+\n+First you can display all active reviews of deals\n+\n+```\n+curl -H 'Content-Type:application/json' -H 'Accept:application/json' http://localhost:8080/dealreviews\n+```\n+\n+based on the response you can select one of the reviews to see more details\n+\n+```\n+curl -H 'Content-Type:application/json' -H 'Accept:application/json' http://localhost:8080/dealreviews/{uuid}/tasks?user=john\n+```\n+\n+where uuid is the id of the deal review you want to work with.\n+\n+Next you can get the details assigned to review user task by\n+\n+```\n+curl -H 'Content-Type:application/json' -H 'Accept:application/json' http://localhost:8080/dealreviews/{uuid}/review/{tuuid}?user=john\n+```\n+\n+where uuid is the id of the deal review and tuuid is the id of the user task you want to get\n+\n+\n+### Complete review task for given deal\n+\n+Last but not least you can complete review user task by\n+\n+```\n+curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"review\" : \"very good work\"}' http://localhost:8080/dealreviews/{uuid}/review/{tuuid}?user=john\n+```\n+\n+where uuid is the id of the deal review and tuuid is the id of the user task you want to get\n+\n+* Review Log should look similar to\n+\n+```\n+Review of the deal very good work for traveller Doe\n+```\n\\ No newline at end of file"
  },
  {
    "sha": "8504bfc2fc5eca235ead286e054f4fe69310b8bb",
    "filename": "process-postgresql-persistence-quarkus/docker-compose/docker-compose.yml",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docker-compose/docker-compose.yml",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docker-compose/docker-compose.yml",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docker-compose/docker-compose.yml?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,32 @@\n+version: \"3\"\n+\n+services:\n+  postgres-compose:\n+    image: postgres:9.6\n+    environment:\n+      POSTGRES_PASSWORD: pass\n+    ports:\n+      - 5432:5432\n+    volumes:\n+      - ${HOME}/postgresql/data:/var/lib/postgresql/data\n+      - ./sql:/docker-entrypoint-initdb.d/\n+    networks:\n+      - postgres-compose-network\n+    container_name: postgres-container\n+\n+  pgadmin-compose:\n+    image: dpage/pgadmin4:5.0\n+    environment:\n+      PGADMIN_DEFAULT_EMAIL: user@user.org\n+      PGADMIN_DEFAULT_PASSWORD: pass\n+    ports:\n+      - 8055:80\n+    depends_on:\n+      - postgres-compose\n+    networks:\n+      - postgres-compose-network\n+    container_name: pgadmin-container\n+\n+networks:\n+  postgres-compose-network:\n+    driver: bridge\n\\ No newline at end of file"
  },
  {
    "sha": "5b483ec23d3c82833b8bcf4aed326d5e0350acf5",
    "filename": "process-postgresql-persistence-quarkus/docker-compose/sql/init.sql",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docker-compose/sql/init.sql",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docker-compose/sql/init.sql",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docker-compose/sql/init.sql?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,17 @@\n+CREATE ROLE \"kogito-user\" WITH\n+    LOGIN\n+    SUPERUSER\n+    INHERIT\n+    CREATEDB\n+    CREATEROLE\n+    NOREPLICATION\n+    ENCRYPTED PASSWORD 'md54adb613a8ffdd707e032c918d791e2e5';\n+\n+CREATE DATABASE kogito\n+    WITH\n+    OWNER = \"kogito-user\"\n+    ENCODING = 'UTF8'\n+    LC_COLLATE = 'en_US.utf8'\n+    LC_CTYPE = 'en_US.utf8'\n+    TABLESPACE = pg_default\n+    CONNECTION LIMIT = -1;\n\\ No newline at end of file"
  },
  {
    "sha": "2689ad71aee48b47d839106c2a08db6524972179",
    "filename": "process-postgresql-persistence-quarkus/docs/images/callADeal.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/callADeal.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/callADeal.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/callADeal.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "eb44152ccea60c5fa89d2cf96e35645ebeddd03d",
    "filename": "process-postgresql-persistence-quarkus/docs/images/callADeal2.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/callADeal2.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/callADeal2.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/callADeal2.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "a315b1bc161090d80512ce4bd7a979aeb3e2d3ef",
    "filename": "process-postgresql-persistence-quarkus/docs/images/dealReview.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/dealReview.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/dealReview.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/dealReview.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "1647a2bf83a310467432c1b931437dee09bcaa2d",
    "filename": "process-postgresql-persistence-quarkus/docs/images/dealReview3.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/dealReview3.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/dealReview3.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/dealReview3.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "22a04c6773d3c5ce0cc54f535c06f271ef073331",
    "filename": "process-postgresql-persistence-quarkus/docs/images/printReviewTheDeal.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/printReviewTheDeal.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/printReviewTheDeal.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/printReviewTheDeal.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "0205ad412fe8967748810f2351136b16bd0f65ca",
    "filename": "process-postgresql-persistence-quarkus/docs/images/process.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/process.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/process.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/process.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "7ef306a5910eb7feee2507cf1c0f6db45eeecf4c",
    "filename": "process-postgresql-persistence-quarkus/docs/images/processProperties.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/processProperties.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/processProperties.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/processProperties.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "e6520fb418425ff2ba350af3fe33a247da0a9bc6",
    "filename": "process-postgresql-persistence-quarkus/docs/images/processProperties2.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/processProperties2.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/processProperties2.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/processProperties2.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "d6decf4d2de9467b0d891cf1947552fba11cf0e3",
    "filename": "process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "3d0616e8589a0fc5775240c501d75ec481a4ba26",
    "filename": "process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask2.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask2.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask2.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask2.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "93048b66c1c1456c27f06580c254f9c2aba407e4",
    "filename": "process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask3.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask3.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask3.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/reviewDealUserTask3.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "22a74f362c51132b4fa95b3db4bac1cc2d256c2e",
    "filename": "process-postgresql-persistence-quarkus/docs/images/subprocess.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/subprocess.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/docs/images/subprocess.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/docs/images/subprocess.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  },
  {
    "sha": "0cb9217fb2b9254f8c85b272c864864bbfd568fb",
    "filename": "process-postgresql-persistence-quarkus/pom.xml",
    "status": "added",
    "additions": 84,
    "deletions": 0,
    "changes": 84,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/pom.xml",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/pom.xml",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/pom.xml?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,84 @@\n+<?xml version=\"1.0\"?>\n+<project\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+    xmlns=\"http://maven.apache.org/POM/4.0.0\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>process-postgresql-persistence-quarkus</artifactId>\n+\n+  <name>Kogito Example :: Process PostgreSQL Persistence Quarkus</name>\n+  <description>Process with PostgreSQL persistence - Quarkus</description>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-quarkus-bom</artifactId>\n+        <version>${kogito.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+  <dependencies>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-quarkus</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>postgresql-persistence-addon</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-reactive-pg-client</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-smallrye-openapi</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-junit5</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.rest-assured</groupId>\n+      <artifactId>rest-assured</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-test-utils</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+  </dependencies>\n+  <build>\n+    <finalName>${project.artifactId}</finalName>\n+    <plugins>\n+      <plugin>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-maven-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <goals>\n+              <goal>build</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>"
  },
  {
    "sha": "f0b507356ccbea918b588a435e7975fc0e7fcca5",
    "filename": "process-postgresql-persistence-quarkus/src/main/docker/Dockerfile.jvm",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/docker/Dockerfile.jvm",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/docker/Dockerfile.jvm",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/src/main/docker/Dockerfile.jvm?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,22 @@\n+####\n+# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode\n+#\n+# Before building the docker image run:\n+#\n+# mvn package\n+#\n+# Then, build the image with:\n+#\n+# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/process-postgresql-persistence-quarkus-jvm .\n+#\n+# Then run the container using:\n+#\n+# docker run -i --rm -p 8080:8080 quarkus/process-postgresql-persistence-quarkus-jvm\n+#\n+###\n+FROM fabric8/java-alpine-openjdk8-jre\n+ENV JAVA_OPTIONS=\"-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager\"\n+ENV AB_ENABLED=jmx_exporter\n+COPY target/lib/* /deployments/lib/\n+COPY target/*-runner.jar /deployments/app.jar\n+ENTRYPOINT [ \"/deployments/run-java.sh\" ]\n\\ No newline at end of file"
  },
  {
    "sha": "7e40ad573263a7e8b5c0104960004e7807d0839e",
    "filename": "process-postgresql-persistence-quarkus/src/main/docker/Dockerfile.native",
    "status": "added",
    "additions": 22,
    "deletions": 0,
    "changes": 22,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/docker/Dockerfile.native",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/docker/Dockerfile.native",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/src/main/docker/Dockerfile.native?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,22 @@\n+####\n+# This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode\n+#\n+# Before building the docker image run:\n+#\n+# mvn package -Pnative -Dnative-image.docker-build=true\n+#\n+# Then, build the image with:\n+#\n+# docker build -f src/main/docker/Dockerfile.native -t quarkus/process-postgresql-persistence-quarkus .\n+#\n+# Then run the container using:\n+#\n+# docker run -i --rm -p 8080:8080 quarkus/process-postgresql-persistence-quarkus\n+#\n+###\n+FROM registry.access.redhat.com/ubi8/ubi-minimal\n+WORKDIR /work/\n+COPY target/*-runner /work/application\n+RUN chmod 775 /work\n+EXPOSE 8080\n+CMD [\"./application\", \"-Dquarkus.http.host=0.0.0.0\"]\n\\ No newline at end of file"
  },
  {
    "sha": "0c3c0fa8c3cb42463803a3f0f1de68c037b6e050",
    "filename": "process-postgresql-persistence-quarkus/src/main/java/org/acme/deals/Address.java",
    "status": "added",
    "additions": 72,
    "deletions": 0,
    "changes": 72,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/java/org/acme/deals/Address.java",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/java/org/acme/deals/Address.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/src/main/java/org/acme/deals/Address.java?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.acme.deals;\n+\n+public class Address {\n+\n+    private String street;\n+    private String city;\n+    private String zipCode;\n+    private String country;\n+\n+    public Address() {\n+\n+    }\n+\n+    public Address(String street, String city, String zipCode, String country) {\n+        this.street = street;\n+        this.city = city;\n+        this.zipCode = zipCode;\n+        this.country = country;\n+    }\n+\n+    public String getStreet() {\n+        return street;\n+    }\n+\n+    public void setStreet(String street) {\n+        this.street = street;\n+    }\n+\n+    public String getCity() {\n+        return city;\n+    }\n+\n+    public void setCity(String city) {\n+        this.city = city;\n+    }\n+\n+    public String getZipCode() {\n+        return zipCode;\n+    }\n+\n+    public void setZipCode(String zipCode) {\n+        this.zipCode = zipCode;\n+    }\n+\n+    public String getCountry() {\n+        return country;\n+    }\n+\n+    public void setCountry(String country) {\n+        this.country = country;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Address [street=\" + street + \", city=\" + city + \", zipCode=\" + zipCode + \", country=\" + country + \"]\";\n+    }\n+}"
  },
  {
    "sha": "02e90894b30e58f92c0b335722b3e1eaeacab554",
    "filename": "process-postgresql-persistence-quarkus/src/main/java/org/acme/deals/Traveller.java",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/java/org/acme/deals/Traveller.java",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/java/org/acme/deals/Traveller.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/src/main/java/org/acme/deals/Traveller.java?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.acme.deals;\n+\n+public class Traveller {\n+\n+    private String firstName;\n+    private String lastName;\n+    private String email;\n+    private String nationality;\n+    private Address address;\n+\n+    public Traveller() {\n+\n+    }\n+\n+    public Traveller(String firstName, String lastName, String email, String nationality, Address address) {\n+        this.firstName = firstName;\n+        this.lastName = lastName;\n+        this.email = email;\n+        this.nationality = nationality;\n+        this.address = address;\n+    }\n+\n+    public String getFirstName() {\n+        return firstName;\n+    }\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    public String getLastName() {\n+        return lastName;\n+    }\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    public String getEmail() {\n+        return email;\n+    }\n+\n+    public void setEmail(String email) {\n+        this.email = email;\n+    }\n+\n+    public String getNationality() {\n+        return nationality;\n+    }\n+\n+    public void setNationality(String nationality) {\n+        this.nationality = nationality;\n+    }\n+\n+    public Address getAddress() {\n+        return address;\n+    }\n+\n+    public void setAddress(Address address) {\n+        this.address = address;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Traveller [firstName=\" + firstName + \", lastName=\" + lastName + \", email=\" + email + \", nationality=\" + nationality + \", address=\" + address + \"]\";\n+    }\n+}"
  },
  {
    "sha": "f2780c36a8efa7e3e0d1a779bad3cbd76396aa7f",
    "filename": "process-postgresql-persistence-quarkus/src/main/resources/application.properties",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/resources/application.properties",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/resources/application.properties",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/src/main/resources/application.properties?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,12 @@\n+quarkus.swagger-ui.always-include=true\n+\n+# Maximum Java heap to be used during the native image generation\n+quarkus.native.native-image-xmx=4g\n+\n+kogito.persistence.type=postgresql\n+\n+//Details https://www.postgresql.org/docs/9.6/static/libpq-connect.html#LIBPQ-CONNSTRING\n+kogito.persistence.postgresql.connection.uri=postgresql://kogito-user:kogito-pass@localhost:5432/kogito\n+\n+#run create tables scripts\n+kogito.persistence.auto.ddl=true\n\\ No newline at end of file"
  },
  {
    "sha": "360a2c00df5ed3cec0f927720bdf4532c70b7054",
    "filename": "process-postgresql-persistence-quarkus/src/main/resources/org/acme/deals/reviewDeal.bpmn",
    "status": "added",
    "additions": 180,
    "deletions": 0,
    "changes": 180,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/resources/org/acme/deals/reviewDeal.bpmn",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/resources/org/acme/deals/reviewDeal.bpmn",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/src/main/resources/org/acme/deals/reviewDeal.bpmn?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,180 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.omg.org/bpmn20\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:bpsim=\"http://www.bpsim.org/schemas/1.0\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:drools=\"http://www.jboss.org/drools\" id=\"_JmONwEk-EeqlMa7ut9bglw\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd http://www.jboss.org/drools drools.xsd http://www.bpsim.org/schemas/1.0 bpsim.xsd http://www.omg.org/spec/DD/20100524/DC DC.xsd http://www.omg.org/spec/DD/20100524/DI DI.xsd \" exporter=\"jBPM Process Modeler\" exporterVersion=\"2.0\" targetNamespace=\"http://www.omg.org/bpmn20\">\n+  <bpmn2:itemDefinition id=\"_dealItem\" structureRef=\"java.lang.String\"/>\n+  <bpmn2:itemDefinition id=\"_reviewItem\" structureRef=\"java.lang.String\"/>\n+  <bpmn2:itemDefinition id=\"_travellerItem\" structureRef=\"org.acme.deals.Traveller\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_SkippableInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_PriorityInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_CommentInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_DescriptionInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_CreatedByInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_TaskNameInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_GroupIdInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_ContentInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_NotStartedReassignInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_NotCompletedReassignInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_NotStartedNotifyInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_NotCompletedNotifyInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_dealInputXItem\" structureRef=\"java.lang.String\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_travellerInputXItem\" structureRef=\"org.acme.deals.Traveller\"/>\n+  <bpmn2:itemDefinition id=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_reviewOutputXItem\" structureRef=\"java.lang.String\"/>\n+  <bpmn2:process id=\"dealreviews\" drools:packageName=\"org.acme.deals\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"Deal Review\" isExecutable=\"true\">\n+    <bpmn2:extensionElements>\n+      <drools:import name=\"org.acme.travels.Traveller\"/>\n+    </bpmn2:extensionElements>\n+    <bpmn2:property id=\"deal\" itemSubjectRef=\"_dealItem\" name=\"deal\"/>\n+    <bpmn2:property id=\"review\" itemSubjectRef=\"_reviewItem\" name=\"review\"/>\n+    <bpmn2:property id=\"traveller\" itemSubjectRef=\"_travellerItem\" name=\"traveller\"/>\n+    <bpmn2:sequenceFlow id=\"_EECDD765-E29C-4D34-B390-25A729F40206\" sourceRef=\"_3597E33A-1C00-41B3-924E-09EA47F79D93\" targetRef=\"_AF59D427-38A9-4D28-B283-5916E2DABB2F\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"isAutoConnection.source\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+        <drools:metaData name=\"isAutoConnection.target\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+    </bpmn2:sequenceFlow>\n+    <bpmn2:sequenceFlow id=\"_0EF9197C-8AD7-422D-BE5F-E01CF996E44F\" sourceRef=\"_7E3D27D0-6644-4E55-8E41-9F68BD0D1327\" targetRef=\"_3597E33A-1C00-41B3-924E-09EA47F79D93\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"isAutoConnection.source\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+        <drools:metaData name=\"isAutoConnection.target\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+    </bpmn2:sequenceFlow>\n+    <bpmn2:endEvent id=\"_AF59D427-38A9-4D28-B283-5916E2DABB2F\" name=\"End Event 1\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"elementname\">\n+          <drools:metaValue><![CDATA[End Event 1]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+      <bpmn2:incoming>_EECDD765-E29C-4D34-B390-25A729F40206</bpmn2:incoming>\n+    </bpmn2:endEvent>\n+    <bpmn2:userTask id=\"_3597E33A-1C00-41B3-924E-09EA47F79D93\" name=\"Review the deal\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"elementname\">\n+          <drools:metaValue><![CDATA[Review the deal]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+      <bpmn2:incoming>_0EF9197C-8AD7-422D-BE5F-E01CF996E44F</bpmn2:incoming>\n+      <bpmn2:outgoing>_EECDD765-E29C-4D34-B390-25A729F40206</bpmn2:outgoing>\n+      <bpmn2:ioSpecification id=\"_JmONwUk-EeqlMa7ut9bglw\">\n+        <bpmn2:dataInput id=\"_3597E33A-1C00-41B3-924E-09EA47F79D93_TaskNameInputX\" drools:dtype=\"Object\" itemSubjectRef=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_TaskNameInputXItem\" name=\"TaskName\"/>\n+        <bpmn2:dataInput id=\"_3597E33A-1C00-41B3-924E-09EA47F79D93_dealInputX\" drools:dtype=\"java.lang.String\" itemSubjectRef=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_dealInputXItem\" name=\"deal\"/>\n+        <bpmn2:dataInput id=\"_3597E33A-1C00-41B3-924E-09EA47F79D93_travellerInputX\" drools:dtype=\"org.acme.deals.Traveller\" itemSubjectRef=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_travellerInputXItem\" name=\"traveller\"/>\n+        <bpmn2:dataInput id=\"_3597E33A-1C00-41B3-924E-09EA47F79D93_SkippableInputX\" drools:dtype=\"Object\" itemSubjectRef=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_SkippableInputXItem\" name=\"Skippable\"/>\n+        <bpmn2:dataOutput id=\"_3597E33A-1C00-41B3-924E-09EA47F79D93_reviewOutputX\" drools:dtype=\"java.lang.String\" itemSubjectRef=\"__3597E33A-1C00-41B3-924E-09EA47F79D93_reviewOutputXItem\" name=\"review\"/>\n+        <bpmn2:inputSet id=\"_JmONwkk-EeqlMa7ut9bglw\">\n+          <bpmn2:dataInputRefs>_3597E33A-1C00-41B3-924E-09EA47F79D93_TaskNameInputX</bpmn2:dataInputRefs>\n+          <bpmn2:dataInputRefs>_3597E33A-1C00-41B3-924E-09EA47F79D93_dealInputX</bpmn2:dataInputRefs>\n+          <bpmn2:dataInputRefs>_3597E33A-1C00-41B3-924E-09EA47F79D93_travellerInputX</bpmn2:dataInputRefs>\n+          <bpmn2:dataInputRefs>_3597E33A-1C00-41B3-924E-09EA47F79D93_SkippableInputX</bpmn2:dataInputRefs>\n+        </bpmn2:inputSet>\n+        <bpmn2:outputSet id=\"_JmONw0k-EeqlMa7ut9bglw\">\n+          <bpmn2:dataOutputRefs>_3597E33A-1C00-41B3-924E-09EA47F79D93_reviewOutputX</bpmn2:dataOutputRefs>\n+        </bpmn2:outputSet>\n+      </bpmn2:ioSpecification>\n+      <bpmn2:dataInputAssociation id=\"_JmONxEk-EeqlMa7ut9bglw\">\n+        <bpmn2:targetRef>_3597E33A-1C00-41B3-924E-09EA47F79D93_TaskNameInputX</bpmn2:targetRef>\n+        <bpmn2:assignment id=\"_JmONxUk-EeqlMa7ut9bglw\">\n+          <bpmn2:from xsi:type=\"bpmn2:tFormalExpression\" id=\"_JmONxkk-EeqlMa7ut9bglw\"><![CDATA[review]]></bpmn2:from>\n+          <bpmn2:to xsi:type=\"bpmn2:tFormalExpression\" id=\"_JmONx0k-EeqlMa7ut9bglw\">_3597E33A-1C00-41B3-924E-09EA47F79D93_TaskNameInputX</bpmn2:to>\n+        </bpmn2:assignment>\n+      </bpmn2:dataInputAssociation>\n+      <bpmn2:dataInputAssociation id=\"_JmONyEk-EeqlMa7ut9bglw\">\n+        <bpmn2:sourceRef>deal</bpmn2:sourceRef>\n+        <bpmn2:targetRef>_3597E33A-1C00-41B3-924E-09EA47F79D93_dealInputX</bpmn2:targetRef>\n+      </bpmn2:dataInputAssociation>\n+      <bpmn2:dataInputAssociation id=\"_JmONyUk-EeqlMa7ut9bglw\">\n+        <bpmn2:sourceRef>traveller</bpmn2:sourceRef>\n+        <bpmn2:targetRef>_3597E33A-1C00-41B3-924E-09EA47F79D93_travellerInputX</bpmn2:targetRef>\n+      </bpmn2:dataInputAssociation>\n+      <bpmn2:dataInputAssociation id=\"_JmO00Ek-EeqlMa7ut9bglw\">\n+        <bpmn2:targetRef>_3597E33A-1C00-41B3-924E-09EA47F79D93_SkippableInputX</bpmn2:targetRef>\n+        <bpmn2:assignment id=\"_JmO00Uk-EeqlMa7ut9bglw\">\n+          <bpmn2:from xsi:type=\"bpmn2:tFormalExpression\" id=\"_JmO00kk-EeqlMa7ut9bglw\"><![CDATA[true]]></bpmn2:from>\n+          <bpmn2:to xsi:type=\"bpmn2:tFormalExpression\" id=\"_JmO000k-EeqlMa7ut9bglw\">_3597E33A-1C00-41B3-924E-09EA47F79D93_SkippableInputX</bpmn2:to>\n+        </bpmn2:assignment>\n+      </bpmn2:dataInputAssociation>\n+      <bpmn2:dataOutputAssociation id=\"_JmO01Ek-EeqlMa7ut9bglw\">\n+        <bpmn2:sourceRef>_3597E33A-1C00-41B3-924E-09EA47F79D93_reviewOutputX</bpmn2:sourceRef>\n+        <bpmn2:targetRef>review</bpmn2:targetRef>\n+      </bpmn2:dataOutputAssociation>\n+      <bpmn2:potentialOwner id=\"_ee63ef94-6d3c-495b-a0f2-380f51222e99\">\n+        <bpmn2:resourceAssignmentExpression id=\"_JmO01Uk-EeqlMa7ut9bglw\">\n+          <bpmn2:formalExpression id=\"_JmO01kk-EeqlMa7ut9bglw\">john</bpmn2:formalExpression>\n+        </bpmn2:resourceAssignmentExpression>\n+      </bpmn2:potentialOwner>\n+    </bpmn2:userTask>\n+    <bpmn2:startEvent id=\"_7E3D27D0-6644-4E55-8E41-9F68BD0D1327\" name=\"Start Process\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"elementname\">\n+          <drools:metaValue><![CDATA[Start Process]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+      <bpmn2:outgoing>_0EF9197C-8AD7-422D-BE5F-E01CF996E44F</bpmn2:outgoing>\n+    </bpmn2:startEvent>\n+  </bpmn2:process>\n+  <bpmndi:BPMNDiagram id=\"_JmO010k-EeqlMa7ut9bglw\">\n+    <bpmndi:BPMNPlane id=\"_JmO02Ek-EeqlMa7ut9bglw\" bpmnElement=\"dealreviews\">\n+      <bpmndi:BPMNShape id=\"shape__7E3D27D0-6644-4E55-8E41-9F68BD0D1327\" bpmnElement=\"_7E3D27D0-6644-4E55-8E41-9F68BD0D1327\">\n+        <dc:Bounds height=\"56.0\" width=\"56.0\" x=\"387.0\" y=\"315.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape id=\"shape__3597E33A-1C00-41B3-924E-09EA47F79D93\" bpmnElement=\"_3597E33A-1C00-41B3-924E-09EA47F79D93\">\n+        <dc:Bounds height=\"102.0\" width=\"154.0\" x=\"523.0\" y=\"292.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape id=\"shape__AF59D427-38A9-4D28-B283-5916E2DABB2F\" bpmnElement=\"_AF59D427-38A9-4D28-B283-5916E2DABB2F\">\n+        <dc:Bounds height=\"56.0\" width=\"56.0\" x=\"757.0\" y=\"315.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNEdge id=\"edge_shape__7E3D27D0-6644-4E55-8E41-9F68BD0D1327_to_shape__3597E33A-1C00-41B3-924E-09EA47F79D93\" bpmnElement=\"_0EF9197C-8AD7-422D-BE5F-E01CF996E44F\">\n+        <di:waypoint xsi:type=\"dc:Point\" x=\"443.0\" y=\"343.0\"/>\n+        <di:waypoint xsi:type=\"dc:Point\" x=\"523.0\" y=\"343.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge id=\"edge_shape__3597E33A-1C00-41B3-924E-09EA47F79D93_to_shape__AF59D427-38A9-4D28-B283-5916E2DABB2F\" bpmnElement=\"_EECDD765-E29C-4D34-B390-25A729F40206\">\n+        <di:waypoint xsi:type=\"dc:Point\" x=\"677.0\" y=\"343.0\"/>\n+        <di:waypoint xsi:type=\"dc:Point\" x=\"757.0\" y=\"343.0\"/>\n+      </bpmndi:BPMNEdge>\n+    </bpmndi:BPMNPlane>\n+  </bpmndi:BPMNDiagram>\n+  <bpmn2:relationship id=\"_JmO02Uk-EeqlMa7ut9bglw\" type=\"BPSimData\">\n+    <bpmn2:extensionElements>\n+      <bpsim:BPSimData>\n+        <bpsim:Scenario xsi:type=\"bpsim:Scenario\" id=\"default\" name=\"Simulationscenario\">\n+          <bpsim:ScenarioParameters xsi:type=\"bpsim:ScenarioParameters\"/>\n+          <bpsim:ElementParameters xsi:type=\"bpsim:ElementParameters\" elementRef=\"_7E3D27D0-6644-4E55-8E41-9F68BD0D1327\" id=\"_JmO02kk-EeqlMa7ut9bglw\">\n+            <bpsim:TimeParameters xsi:type=\"bpsim:TimeParameters\">\n+              <bpsim:ProcessingTime xsi:type=\"bpsim:Parameter\">\n+                <bpsim:NormalDistribution mean=\"0.0\" standardDeviation=\"0.0\"/>\n+              </bpsim:ProcessingTime>\n+            </bpsim:TimeParameters>\n+          </bpsim:ElementParameters>\n+          <bpsim:ElementParameters xsi:type=\"bpsim:ElementParameters\" elementRef=\"_3597E33A-1C00-41B3-924E-09EA47F79D93\" id=\"_JmO020k-EeqlMa7ut9bglw\">\n+            <bpsim:TimeParameters xsi:type=\"bpsim:TimeParameters\">\n+              <bpsim:ProcessingTime xsi:type=\"bpsim:Parameter\">\n+                <bpsim:NormalDistribution mean=\"0.0\" standardDeviation=\"0.0\"/>\n+              </bpsim:ProcessingTime>\n+            </bpsim:TimeParameters>\n+            <bpsim:ResourceParameters xsi:type=\"bpsim:ResourceParameters\">\n+              <bpsim:Availability xsi:type=\"bpsim:Parameter\">\n+                <bpsim:FloatingParameter value=\"0.0\"/>\n+              </bpsim:Availability>\n+              <bpsim:Quantity xsi:type=\"bpsim:Parameter\">\n+                <bpsim:FloatingParameter value=\"0.0\"/>\n+              </bpsim:Quantity>\n+            </bpsim:ResourceParameters>\n+            <bpsim:CostParameters xsi:type=\"bpsim:CostParameters\">\n+              <bpsim:UnitCost xsi:type=\"bpsim:Parameter\">\n+                <bpsim:FloatingParameter value=\"0.0\"/>\n+              </bpsim:UnitCost>\n+            </bpsim:CostParameters>\n+          </bpsim:ElementParameters>\n+        </bpsim:Scenario>\n+      </bpsim:BPSimData>\n+    </bpmn2:extensionElements>\n+    <bpmn2:source>_JmONwEk-EeqlMa7ut9bglw</bpmn2:source>\n+    <bpmn2:target>_JmONwEk-EeqlMa7ut9bglw</bpmn2:target>\n+  </bpmn2:relationship>\n+</bpmn2:definitions>"
  },
  {
    "sha": "c005aeda445a329769ccc16bb1cc179cf822f0f5",
    "filename": "process-postgresql-persistence-quarkus/src/main/resources/org/acme/deals/submitDeal.bpmn",
    "status": "added",
    "additions": 192,
    "deletions": 0,
    "changes": 192,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/resources/org/acme/deals/submitDeal.bpmn",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/main/resources/org/acme/deals/submitDeal.bpmn",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/src/main/resources/org/acme/deals/submitDeal.bpmn?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,192 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.omg.org/bpmn20\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:bpsim=\"http://www.bpsim.org/schemas/1.0\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:drools=\"http://www.jboss.org/drools\" id=\"_29WqoEk8EeqlMa7ut9bglw\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd http://www.jboss.org/drools drools.xsd http://www.bpsim.org/schemas/1.0 bpsim.xsd http://www.omg.org/spec/DD/20100524/DC DC.xsd http://www.omg.org/spec/DD/20100524/DI DI.xsd \" exporter=\"jBPM Process Modeler\" exporterVersion=\"2.0\" targetNamespace=\"http://www.omg.org/bpmn20\">\n+  <bpmn2:itemDefinition id=\"_nameItem\" structureRef=\"java.lang.String\"/>\n+  <bpmn2:itemDefinition id=\"_reviewItem\" structureRef=\"java.lang.String\"/>\n+  <bpmn2:itemDefinition id=\"_travellerItem\" structureRef=\"org.acme.deals.Traveller\"/>\n+  <bpmn2:itemDefinition id=\"__C3082C6F-963E-40A2-B31B-1E8F336AA4C6_dealInputXItem\" structureRef=\"java.lang.String\"/>\n+  <bpmn2:itemDefinition id=\"__C3082C6F-963E-40A2-B31B-1E8F336AA4C6_travellerInputXItem\" structureRef=\"org.acme.deals.Traveller\"/>\n+  <bpmn2:itemDefinition id=\"__C3082C6F-963E-40A2-B31B-1E8F336AA4C6_reviewOutputXItem\" structureRef=\"java.lang.String\"/>\n+  <bpmn2:process id=\"deals\" drools:packageName=\"org.acme.deals\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"SubmitDeal\" isExecutable=\"true\">\n+    <bpmn2:extensionElements>\n+      <drools:import name=\"org.acme.travels.Traveller\"/>\n+    </bpmn2:extensionElements>\n+    <bpmn2:property id=\"name\" itemSubjectRef=\"_nameItem\" name=\"name\"/>\n+    <bpmn2:property id=\"review\" itemSubjectRef=\"_reviewItem\" name=\"review\"/>\n+    <bpmn2:property id=\"traveller\" itemSubjectRef=\"_travellerItem\" name=\"traveller\"/>\n+    <bpmn2:sequenceFlow id=\"_BCF778A5-0959-49DA-B8FF-DB61025A7DD0\" sourceRef=\"_0BAE98AF-9B65-444E-9B84-E48A3B593DBE\" targetRef=\"_4583DB41-9B89-4729-AC8A-A0666534E616\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"isAutoConnection.source\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+        <drools:metaData name=\"isAutoConnection.target\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+    </bpmn2:sequenceFlow>\n+    <bpmn2:sequenceFlow id=\"_A186F5CE-4300-4506-A89D-50DEDC8F24CF\" sourceRef=\"_C3082C6F-963E-40A2-B31B-1E8F336AA4C6\" targetRef=\"_0BAE98AF-9B65-444E-9B84-E48A3B593DBE\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"isAutoConnection.source\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+        <drools:metaData name=\"isAutoConnection.target\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+    </bpmn2:sequenceFlow>\n+    <bpmn2:sequenceFlow id=\"_E3E55042-CEC7-4574-8315-068794ACBD69\" sourceRef=\"_CBED5120-F3EC-40A0-9A1F-072F37FA1204\" targetRef=\"_C3082C6F-963E-40A2-B31B-1E8F336AA4C6\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"isAutoConnection.source\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+        <drools:metaData name=\"isAutoConnection.target\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+    </bpmn2:sequenceFlow>\n+    <bpmn2:endEvent id=\"_4583DB41-9B89-4729-AC8A-A0666534E616\" name=\"End Event 1\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"elementname\">\n+          <drools:metaValue><![CDATA[End Event 1]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+      <bpmn2:incoming>_BCF778A5-0959-49DA-B8FF-DB61025A7DD0</bpmn2:incoming>\n+    </bpmn2:endEvent>\n+    <bpmn2:scriptTask id=\"_0BAE98AF-9B65-444E-9B84-E48A3B593DBE\" name=\"Print review of the deal\" scriptFormat=\"http://www.java.com/java\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"elementname\">\n+          <drools:metaValue><![CDATA[Print review of the deal]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+      <bpmn2:incoming>_A186F5CE-4300-4506-A89D-50DEDC8F24CF</bpmn2:incoming>\n+      <bpmn2:outgoing>_BCF778A5-0959-49DA-B8FF-DB61025A7DD0</bpmn2:outgoing>\n+      <bpmn2:script><![CDATA[System.out.println(\"Review of the deal \" + review + \" for traveller \" + traveller.getLastName());]]></bpmn2:script>\n+    </bpmn2:scriptTask>\n+    <bpmn2:callActivity id=\"_C3082C6F-963E-40A2-B31B-1E8F336AA4C6\" drools:independent=\"false\" drools:waitForCompletion=\"true\" name=\"Call a deal\" calledElement=\"dealreviews\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"elementname\">\n+          <drools:metaValue><![CDATA[Call a deal]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+      <bpmn2:incoming>_E3E55042-CEC7-4574-8315-068794ACBD69</bpmn2:incoming>\n+      <bpmn2:outgoing>_A186F5CE-4300-4506-A89D-50DEDC8F24CF</bpmn2:outgoing>\n+      <bpmn2:ioSpecification id=\"_29XRsEk8EeqlMa7ut9bglw\">\n+        <bpmn2:dataInput id=\"_C3082C6F-963E-40A2-B31B-1E8F336AA4C6_dealInputX\" drools:dtype=\"java.lang.String\" itemSubjectRef=\"__C3082C6F-963E-40A2-B31B-1E8F336AA4C6_dealInputXItem\" name=\"deal\"/>\n+        <bpmn2:dataInput id=\"_C3082C6F-963E-40A2-B31B-1E8F336AA4C6_travellerInputX\" drools:dtype=\"org.acme.deals.Traveller\" itemSubjectRef=\"__C3082C6F-963E-40A2-B31B-1E8F336AA4C6_travellerInputXItem\" name=\"traveller\"/>\n+        <bpmn2:dataOutput id=\"_C3082C6F-963E-40A2-B31B-1E8F336AA4C6_reviewOutputX\" drools:dtype=\"java.lang.String\" itemSubjectRef=\"__C3082C6F-963E-40A2-B31B-1E8F336AA4C6_reviewOutputXItem\" name=\"review\"/>\n+        <bpmn2:inputSet id=\"_29XRsUk8EeqlMa7ut9bglw\">\n+          <bpmn2:dataInputRefs>_C3082C6F-963E-40A2-B31B-1E8F336AA4C6_dealInputX</bpmn2:dataInputRefs>\n+          <bpmn2:dataInputRefs>_C3082C6F-963E-40A2-B31B-1E8F336AA4C6_travellerInputX</bpmn2:dataInputRefs>\n+        </bpmn2:inputSet>\n+        <bpmn2:outputSet id=\"_29XRskk8EeqlMa7ut9bglw\">\n+          <bpmn2:dataOutputRefs>_C3082C6F-963E-40A2-B31B-1E8F336AA4C6_reviewOutputX</bpmn2:dataOutputRefs>\n+        </bpmn2:outputSet>\n+      </bpmn2:ioSpecification>\n+      <bpmn2:dataInputAssociation id=\"_29XRs0k8EeqlMa7ut9bglw\">\n+        <bpmn2:sourceRef>name</bpmn2:sourceRef>\n+        <bpmn2:targetRef>_C3082C6F-963E-40A2-B31B-1E8F336AA4C6_dealInputX</bpmn2:targetRef>\n+      </bpmn2:dataInputAssociation>\n+      <bpmn2:dataInputAssociation id=\"_29XRtEk8EeqlMa7ut9bglw\">\n+        <bpmn2:sourceRef>traveller</bpmn2:sourceRef>\n+        <bpmn2:targetRef>_C3082C6F-963E-40A2-B31B-1E8F336AA4C6_travellerInputX</bpmn2:targetRef>\n+      </bpmn2:dataInputAssociation>\n+      <bpmn2:dataOutputAssociation id=\"_29XRtUk8EeqlMa7ut9bglw\">\n+        <bpmn2:sourceRef>_C3082C6F-963E-40A2-B31B-1E8F336AA4C6_reviewOutputX</bpmn2:sourceRef>\n+        <bpmn2:targetRef>review</bpmn2:targetRef>\n+      </bpmn2:dataOutputAssociation>\n+    </bpmn2:callActivity>\n+    <bpmn2:startEvent id=\"_CBED5120-F3EC-40A0-9A1F-072F37FA1204\" name=\"Start Proces\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"elementname\">\n+          <drools:metaValue><![CDATA[Start Proces]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+      <bpmn2:outgoing>_E3E55042-CEC7-4574-8315-068794ACBD69</bpmn2:outgoing>\n+    </bpmn2:startEvent>\n+  </bpmn2:process>\n+  <bpmndi:BPMNDiagram id=\"_29XRtkk8EeqlMa7ut9bglw\">\n+    <bpmndi:BPMNPlane id=\"_29XRt0k8EeqlMa7ut9bglw\" bpmnElement=\"deals\">\n+      <bpmndi:BPMNShape id=\"shape__CBED5120-F3EC-40A0-9A1F-072F37FA1204\" bpmnElement=\"_CBED5120-F3EC-40A0-9A1F-072F37FA1204\">\n+        <dc:Bounds height=\"56.0\" width=\"56.0\" x=\"335.0\" y=\"154.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape id=\"shape__C3082C6F-963E-40A2-B31B-1E8F336AA4C6\" bpmnElement=\"_C3082C6F-963E-40A2-B31B-1E8F336AA4C6\">\n+        <dc:Bounds height=\"102.0\" width=\"154.0\" x=\"471.0\" y=\"131.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape id=\"shape__0BAE98AF-9B65-444E-9B84-E48A3B593DBE\" bpmnElement=\"_0BAE98AF-9B65-444E-9B84-E48A3B593DBE\">\n+        <dc:Bounds height=\"102.0\" width=\"154.0\" x=\"700.0\" y=\"131.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNShape id=\"shape__4583DB41-9B89-4729-AC8A-A0666534E616\" bpmnElement=\"_4583DB41-9B89-4729-AC8A-A0666534E616\">\n+        <dc:Bounds height=\"56.0\" width=\"56.0\" x=\"939.0\" y=\"154.0\"/>\n+      </bpmndi:BPMNShape>\n+      <bpmndi:BPMNEdge id=\"edge_shape__CBED5120-F3EC-40A0-9A1F-072F37FA1204_to_shape__C3082C6F-963E-40A2-B31B-1E8F336AA4C6\" bpmnElement=\"_E3E55042-CEC7-4574-8315-068794ACBD69\">\n+        <di:waypoint xsi:type=\"dc:Point\" x=\"391.0\" y=\"182.0\"/>\n+        <di:waypoint xsi:type=\"dc:Point\" x=\"471.0\" y=\"182.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge id=\"edge_shape__C3082C6F-963E-40A2-B31B-1E8F336AA4C6_to_shape__0BAE98AF-9B65-444E-9B84-E48A3B593DBE\" bpmnElement=\"_A186F5CE-4300-4506-A89D-50DEDC8F24CF\">\n+        <di:waypoint xsi:type=\"dc:Point\" x=\"625.0\" y=\"182.0\"/>\n+        <di:waypoint xsi:type=\"dc:Point\" x=\"700.0\" y=\"182.0\"/>\n+      </bpmndi:BPMNEdge>\n+      <bpmndi:BPMNEdge id=\"edge_shape__0BAE98AF-9B65-444E-9B84-E48A3B593DBE_to_shape__4583DB41-9B89-4729-AC8A-A0666534E616\" bpmnElement=\"_BCF778A5-0959-49DA-B8FF-DB61025A7DD0\">\n+        <di:waypoint xsi:type=\"dc:Point\" x=\"854.0\" y=\"182.0\"/>\n+        <di:waypoint xsi:type=\"dc:Point\" x=\"939.0\" y=\"182.0\"/>\n+      </bpmndi:BPMNEdge>\n+    </bpmndi:BPMNPlane>\n+  </bpmndi:BPMNDiagram>\n+  <bpmn2:relationship id=\"_29XRuEk8EeqlMa7ut9bglw\" type=\"BPSimData\">\n+    <bpmn2:extensionElements>\n+      <bpsim:BPSimData>\n+        <bpsim:Scenario xsi:type=\"bpsim:Scenario\" id=\"default\" name=\"Simulationscenario\">\n+          <bpsim:ScenarioParameters xsi:type=\"bpsim:ScenarioParameters\"/>\n+          <bpsim:ElementParameters xsi:type=\"bpsim:ElementParameters\" elementRef=\"_CBED5120-F3EC-40A0-9A1F-072F37FA1204\" id=\"_29XRuUk8EeqlMa7ut9bglw\">\n+            <bpsim:TimeParameters xsi:type=\"bpsim:TimeParameters\">\n+              <bpsim:ProcessingTime xsi:type=\"bpsim:Parameter\">\n+                <bpsim:NormalDistribution mean=\"0.0\" standardDeviation=\"0.0\"/>\n+              </bpsim:ProcessingTime>\n+            </bpsim:TimeParameters>\n+          </bpsim:ElementParameters>\n+          <bpsim:ElementParameters xsi:type=\"bpsim:ElementParameters\" elementRef=\"_C3082C6F-963E-40A2-B31B-1E8F336AA4C6\" id=\"_29XRukk8EeqlMa7ut9bglw\">\n+            <bpsim:TimeParameters xsi:type=\"bpsim:TimeParameters\">\n+              <bpsim:ProcessingTime xsi:type=\"bpsim:Parameter\">\n+                <bpsim:NormalDistribution mean=\"0.0\" standardDeviation=\"0.0\"/>\n+              </bpsim:ProcessingTime>\n+            </bpsim:TimeParameters>\n+            <bpsim:ResourceParameters xsi:type=\"bpsim:ResourceParameters\">\n+              <bpsim:Availability xsi:type=\"bpsim:Parameter\">\n+                <bpsim:FloatingParameter value=\"0.0\"/>\n+              </bpsim:Availability>\n+              <bpsim:Quantity xsi:type=\"bpsim:Parameter\">\n+                <bpsim:FloatingParameter value=\"0.0\"/>\n+              </bpsim:Quantity>\n+            </bpsim:ResourceParameters>\n+            <bpsim:CostParameters xsi:type=\"bpsim:CostParameters\">\n+              <bpsim:UnitCost xsi:type=\"bpsim:Parameter\">\n+                <bpsim:FloatingParameter value=\"0.0\"/>\n+              </bpsim:UnitCost>\n+            </bpsim:CostParameters>\n+          </bpsim:ElementParameters>\n+          <bpsim:ElementParameters xsi:type=\"bpsim:ElementParameters\" elementRef=\"_0BAE98AF-9B65-444E-9B84-E48A3B593DBE\" id=\"_29XRu0k8EeqlMa7ut9bglw\">\n+            <bpsim:TimeParameters xsi:type=\"bpsim:TimeParameters\">\n+              <bpsim:ProcessingTime xsi:type=\"bpsim:Parameter\">\n+                <bpsim:NormalDistribution mean=\"0.0\" standardDeviation=\"0.0\"/>\n+              </bpsim:ProcessingTime>\n+            </bpsim:TimeParameters>\n+            <bpsim:ResourceParameters xsi:type=\"bpsim:ResourceParameters\">\n+              <bpsim:Availability xsi:type=\"bpsim:Parameter\">\n+                <bpsim:FloatingParameter value=\"0.0\"/>\n+              </bpsim:Availability>\n+              <bpsim:Quantity xsi:type=\"bpsim:Parameter\">\n+                <bpsim:FloatingParameter value=\"0.0\"/>\n+              </bpsim:Quantity>\n+            </bpsim:ResourceParameters>\n+            <bpsim:CostParameters xsi:type=\"bpsim:CostParameters\">\n+              <bpsim:UnitCost xsi:type=\"bpsim:Parameter\">\n+                <bpsim:FloatingParameter value=\"0.0\"/>\n+              </bpsim:UnitCost>\n+            </bpsim:CostParameters>\n+          </bpsim:ElementParameters>\n+        </bpsim:Scenario>\n+      </bpsim:BPSimData>\n+    </bpmn2:extensionElements>\n+    <bpmn2:source>_29WqoEk8EeqlMa7ut9bglw</bpmn2:source>\n+    <bpmn2:target>_29WqoEk8EeqlMa7ut9bglw</bpmn2:target>\n+  </bpmn2:relationship>\n+</bpmn2:definitions>"
  },
  {
    "sha": "063694e4278550f4b8ba28751123f1a8e56c1972",
    "filename": "process-postgresql-persistence-quarkus/src/test/java/org/acme/deals/DealsRestIT.java",
    "status": "added",
    "additions": 77,
    "deletions": 0,
    "changes": 77,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/test/java/org/acme/deals/DealsRestIT.java",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/test/java/org/acme/deals/DealsRestIT.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/src/test/java/org/acme/deals/DealsRestIT.java?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.acme.deals;\n+\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.testcontainers.quarkus.PostgreSqlQuarkusTestResource;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.http.ContentType;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+\n+@QuarkusTest\n+@QuarkusTestResource(PostgreSqlQuarkusTestResource.class)\n+public class DealsRestIT {\n+\n+    @Test\n+    public void testDealsRest() {\n+        // test adding new deal\n+        String addDealPayload =\n+                \"{\\\"name\\\" : \\\"my fancy deal\\\", \\\"traveller\\\" : { \\\"firstName\\\" : \\\"John\\\", \\\"lastName\\\" : \\\"Doe\\\", \\\"email\\\" : \\\"jon.doe@example.com\\\", \\\"nationality\\\" : \\\"American\\\",\\\"address\\\" : { \\\"street\\\" : \\\"main street\\\", \\\"city\\\" : \\\"Boston\\\", \\\"zipCode\\\" : \\\"10005\\\", \\\"country\\\" : \\\"US\\\" }}}\";\n+        String dealId = given().contentType(ContentType.JSON).accept(ContentType.JSON).body(addDealPayload)\n+                .when().post(\"/deals\")\n+                .then().log().ifValidationFails().statusCode(201).body(\"id\", notNullValue()).extract().path(\"id\");\n+\n+        // test getting the created deal\n+        given().accept(ContentType.JSON)\n+                .when().get(\"/deals\")\n+                .then().log().ifValidationFails().statusCode(200).body(\"$.size()\", is(1), \"[0].id\", is(dealId));\n+\n+        // test getting order by id\n+        given().accept(ContentType.JSON)\n+                .when().get(\"/deals/\" + dealId)\n+                .then().log().ifValidationFails().statusCode(200).body(\"id\", is(dealId));\n+\n+        // get deals for review\n+        String dealReviewId = given().accept(ContentType.JSON)\n+                .when().get(\"/dealreviews\")\n+                .then().log().ifValidationFails().statusCode(200).body(\"$.size()\", is(1)).body(\"[0].id\", notNullValue()).extract().path(\"[0].id\");\n+\n+        // get task for john\n+        String taskId = given().accept(ContentType.JSON)\n+                .when().get(\"/dealreviews/{uuid}/tasks?user=john\", dealReviewId)\n+                .then().log().ifValidationFails().statusCode(200).body(\"$.size\", is(1)).extract().path(\"[0].id\");\n+\n+        // complete review task\n+        given().contentType(ContentType.JSON).accept(ContentType.JSON).body(\"{\\\"review\\\" : \\\"very good work\\\"}\")\n+                .when().post(\"/dealreviews/{uuid}/review/{tuuid}?user=john\", dealReviewId, taskId)\n+                .then().log().ifValidationFails().statusCode(200);\n+\n+        //verify no deals to review\n+        given().accept(ContentType.JSON)\n+                .when().get(\"/dealreviews\")\n+                .then().log().ifValidationFails().statusCode(200).body(\"$.size()\", is(0));\n+\n+        //verify no deals\n+        given().accept(ContentType.JSON)\n+                .when().get(\"/deals\")\n+                .then().log().ifValidationFails().statusCode(200).body(\"$.size()\", is(0));\n+    }\n+}"
  },
  {
    "sha": "5d1e4e73b724f2452c312fccca5d8def60b9f5d3",
    "filename": "process-postgresql-persistence-quarkus/src/test/resources/application.properties",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/test/resources/application.properties",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-quarkus/src/test/resources/application.properties",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-quarkus/src/test/resources/application.properties?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,5 @@\n+# Quarkus\n+quarkus.http.test-port=0\n+quarkus.log.console.enable=true\n+quarkus.log.console.level=INFO\n+quarkus.log.level=INFO"
  },
  {
    "sha": "f949fecd6bf22ed3a752893a61c07d584da11cca",
    "filename": "process-postgresql-persistence-springboot/README.md",
    "status": "added",
    "additions": 196,
    "deletions": 0,
    "changes": 196,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-springboot/README.md",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-springboot/README.md",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-springboot/README.md?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,196 @@\n+# Process with persistence powered by PostgreSQL \n+\n+## Description\n+\n+A quickstart project that processes deals for travellers. It utilizes process composition to split the work of\n+\n+* submitting a deal\n+* reviewing a deal\n+\n+At the same time shows simplified version of a approval process that waits for human actor to provide review.\n+\n+This example shows\n+\n+* exposing Submit Deal as public service\n+* each process instance is going to be evaluated and asks for review\n+* at any point in time service can be shutdown and when brought back it will keep the state of the instances\n+\n+Note: The use of this example shows that the data sent to PostgreSQL is saved, you can shut down the\n+ application and\n+ restart it\n+and as long as PostgreSQL is running after you restart you should still see the data\n+\n+It utilizes PostgreSQL server as the backend store.\n+\n+* Process (submitDeal.bpmn)\n+<p align=\"center\"><img width=75% height=50% src=\"docs/images/process.png\"></p>\n+\n+* Process Properties (top)\n+<p align=\"center\"><img src=\"docs/images/processProperties.png\"></p>\n+\n+* Process Properties (bottom)\n+<p align=\"center\"><img src=\"docs/images/processProperties2.png\"></p>\n+\n+* Call a deal\n+<p align=\"center\"><img src=\"docs/images/callADeal.png\"></p>\n+\n+* Call a deal (Assignments)\n+<p align=\"center\"><img src=\"docs/images/callADeal2.png\"></p>\n+\n+* Print review the Deal\n+<p align=\"center\"><img src=\"docs/images/printReviewTheDeal.png\"></p>\n+\n+* Subprocess (reviewDeal.bpmn)\n+<p align=\"center\"><img width=75% height=50% src=\"docs/images/subprocess.png\"></p>\n+\n+* Deal Review (top)\n+<p align=\"center\"><img src=\"docs/images/dealReview.png\"></p>\n+\n+* Deal Review (bottom)\n+<p align=\"center\"><img src=\"docs/images/dealReview3.png\"></p>\n+\n+* Review deal user task\t(top)\n+<p align=\"center\"><img src=\"docs/images/reviewDealUserTask.png\"></p>\n+\n+* Review deal user task\t(botom)\n+<p align=\"center\"><img src=\"docs/images/reviewDealUserTask2.png\"></p>\n+\n+* Review deal user task\t(Assignments)\n+<p align=\"center\"><img src=\"docs/images/reviewDealUserTask3.png\"></p>\n+\n+## Infrastructure requirements\n+\n+This quickstart requires a PostgreSQL server to be available with a database, a user and credentials already created\n+, these configurations should then be set in the connection URI parameter in [applications.properties](src/main/resources/application.properties) file with the key\n+ `kogito.persistence.postgresql.connection.uri`, i.e `postgresql.connection.uri=postgresql://kogito-user:kogito-pass@localhost:5432\n+ /kogito` here are the [full settings for URI](https://www.postgresql.org/docs/9.6/static/libpq-connect.html#LIBPQ-CONNSTRING)    \n+ \n+You must set property - `kogito.persistence.type=postgresql` to enable PostgreSQL persistence. There is also a\n+ configuration to allow the application to run DDL scripts during the initialization, this can be enabled with the\n+  property `kogito.persistence.auto.ddl=true`.\n+For more details you can check [applications.properties](src/main/resources/application.properties).\n+\n+Optionally and for convenience, a docker-compose [configuration file](dockerdocker-compose/docker-compose.yml) is\n+ provided in the\n+ path [dockerdocker-compose/](dockerdocker-compose/), where you can just run the command from there:\n+  ```sh\n+  docker-compose up\n+  ```  \n+  In this way a container for PostgreSQL running on port 5432, along with PgAdmin, running on port\n+   8055 to allow the database management.\n+  \n+  The default admin user for PostgreSQL is `postgres` with password `pass`, for PgAdmin the default user created is\n+   `user@user.org` with password `pass`, the database connection could be set in PgAdmin using the hostname `postgres\n+   -container` for the PostgreSQL server, details\n+    defined in\n+    [configuration file](dockerdocker-compose  mpose.yml\n+   ), an initializer script is executed to create the `kogito` database and `kogito-user`.\n+\n+## Build and run\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed \n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+### Compile and Run in Local Dev Mode\n+\n+```\n+mvn clean package spring-boot:run    \n+```\n+\n+NOTE: With dev mode of Quarkus you can take advantage of hot reload for business assets like processes, rules, decision tables and java code. No need to redeploy or restart your running application.\n+\n+\n+### Compile and Run using uberjar\n+\n+```\n+mvn clean package \n+```\n+  \n+To run the generated native executable, generated in `target/`, execute\n+\n+```\n+java -jar target/process-postgresql-persistence-springboot.jar\n+```\n+\n+### OpenAPI (Swagger) documentation\n+[Specification at swagger.io](https://swagger.io/docs/specification/about/)\n+\n+You can take a look at the [OpenAPI definition](http://localhost:8080/v3/api-docs) - automatically generated and included in this service - to determine all available operations exposed by this service. For easy readability you can visualize the OpenAPI definition file using a UI tool like for example available [Swagger UI](https://editor.swagger.io).\n+\n+In addition, various clients to interact with this service can be easily generated using this OpenAPI definition.\n+\n+\n+### Submit a deal\n+\n+To make use of this application it is as simple as putting a sending request to `http://localhost:8080/deals`  with following content \n+\n+```\n+{\n+\"name\" : \"my fancy deal\",\n+\"traveller\" : { \n+  \"firstName\" : \"John\", \n+  \"lastName\" : \"Doe\", \n+  \"email\" : \"jon.doe@example.com\", \n+  \"nationality\" : \"American\",\n+  \"address\" : { \n+  \t\"street\" : \"main street\", \n+  \t\"city\" : \"Boston\", \n+  \t\"zipCode\" : \"10005\", \n+  \t\"country\" : \"US\" }\n+  }\n+}\n+\n+```\n+\n+Complete curl command can be found below:\n+\n+```\n+curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"name\" : \"my fancy deal\", \"traveller\" : { \"firstName\" : \"John\", \"lastName\" : \"Doe\", \"email\" : \"jon.doe@example.com\", \"nationality\" : \"American\",\"address\" : { \"street\" : \"main street\", \"city\" : \"Boston\", \"zipCode\" : \"10005\", \"country\" : \"US\" }}}' http://localhost:8080/deals\n+```\n+\n+this will then trigger the review user task that you can work with.\n+\n+### Get review task for given deal\n+\n+First you can display all active reviews of deals\n+\n+```\n+curl -H 'Content-Type:application/json' -H 'Accept:application/json' http://localhost:8080/dealreviews\n+```\n+\n+based on the response you can select one of the reviews to see more details\n+\n+```\n+curl -H 'Content-Type:application/json' -H 'Accept:application/json' http://localhost:8080/dealreviews/{uuid}/tasks?user=john\n+```\n+\n+where uuid is the id of the deal review you want to work with.\n+\n+Next you can get the details assigned to review user task by\n+\n+```\n+curl -H 'Content-Type:application/json' -H 'Accept:application/json' http://localhost:8080/dealreviews/{uuid}/review/{tuuid}?user=john\n+```\n+\n+where uuid is the id of the deal review and tuuid is the id of the user task you want to get\n+\n+\n+### Complete review task for given deal\n+\n+Last but not least you can complete review user task by\n+\n+```\n+curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"review\" : \"very good work\"}' http://localhost:8080/dealreviews/uuid/review/{tuuid}?user=john\n+```\n+\n+where uuid is the id of the deal review and tuuid is the id of the user task you want to get\n+\n+* Review Log should look similar to \t\n+\n+```\n+Review of the deal very good work for traveller Doe\n+```"
  },
  {
    "sha": "8504bfc2fc5eca235ead286e054f4fe69310b8bb",
    "filename": "process-postgresql-persistence-springboot/docker-compose/docker-compose.yml",
    "status": "added",
    "additions": 32,
    "deletions": 0,
    "changes": 32,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-springboot/docker-compose/docker-compose.yml",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-springboot/docker-compose/docker-compose.yml",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-springboot/docker-compose/docker-compose.yml?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,32 @@\n+version: \"3\"\n+\n+services:\n+  postgres-compose:\n+    image: postgres:9.6\n+    environment:\n+      POSTGRES_PASSWORD: pass\n+    ports:\n+      - 5432:5432\n+    volumes:\n+      - ${HOME}/postgresql/data:/var/lib/postgresql/data\n+      - ./sql:/docker-entrypoint-initdb.d/\n+    networks:\n+      - postgres-compose-network\n+    container_name: postgres-container\n+\n+  pgadmin-compose:\n+    image: dpage/pgadmin4:5.0\n+    environment:\n+      PGADMIN_DEFAULT_EMAIL: user@user.org\n+      PGADMIN_DEFAULT_PASSWORD: pass\n+    ports:\n+      - 8055:80\n+    depends_on:\n+      - postgres-compose\n+    networks:\n+      - postgres-compose-network\n+    container_name: pgadmin-container\n+\n+networks:\n+  postgres-compose-network:\n+    driver: bridge\n\\ No newline at end of file"
  },
  {
    "sha": "5b483ec23d3c82833b8bcf4aed326d5e0350acf5",
    "filename": "process-postgresql-persistence-springboot/docker-compose/sql/init.sql",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-springboot/docker-compose/sql/init.sql",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-springboot/docker-compose/sql/init.sql",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-springboot/docker-compose/sql/init.sql?ref=64be69399c7976c1a211f43156f15e14cf13b68d",
    "patch": "@@ -0,0 +1,17 @@\n+CREATE ROLE \"kogito-user\" WITH\n+    LOGIN\n+    SUPERUSER\n+    INHERIT\n+    CREATEDB\n+    CREATEROLE\n+    NOREPLICATION\n+    ENCRYPTED PASSWORD 'md54adb613a8ffdd707e032c918d791e2e5';\n+\n+CREATE DATABASE kogito\n+    WITH\n+    OWNER = \"kogito-user\"\n+    ENCODING = 'UTF8'\n+    LC_COLLATE = 'en_US.utf8'\n+    LC_CTYPE = 'en_US.utf8'\n+    TABLESPACE = pg_default\n+    CONNECTION LIMIT = -1;\n\\ No newline at end of file"
  },
  {
    "sha": "2689ad71aee48b47d839106c2a08db6524972179",
    "filename": "process-postgresql-persistence-springboot/docs/images/callADeal.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/kiegroup/kogito-examples/blob/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-springboot/docs/images/callADeal.png",
    "raw_url": "https://github.com/kiegroup/kogito-examples/raw/64be69399c7976c1a211f43156f15e14cf13b68d/process-postgresql-persistence-springboot/docs/images/callADeal.png",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-examples/contents/process-postgresql-persistence-springboot/docs/images/callADeal.png?ref=64be69399c7976c1a211f43156f15e14cf13b68d"
  }
]
