[
  {
    "sha": "302bf8935a19dbb4f3f252959bdc360375de24f3",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/docks/navigator/drds/DRGDiagramUtils.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/docks/navigator/drds/DRGDiagramUtils.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/docks/navigator/drds/DRGDiagramUtils.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/docks/navigator/drds/DRGDiagramUtils.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -38,7 +38,7 @@ public static DMNDiagramElement newDRGInstance() {\n     }\n \n     public static JSIDMNDiagram newJSIDRGInstance() {\n-        final JSIDMNDiagram diagram = new JSIDMNDiagram();\n+        final JSIDMNDiagram diagram = JSIDMNDiagram.newInstance();\n         diagram.setId(new Id().getValue());\n         diagram.setName(DRG);\n         return diagram;"
  },
  {
    "sha": "c107a4738432cb1f0171651c78e044bd113c58a2",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/common/DMNDiagramElementsUtils.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/common/DMNDiagramElementsUtils.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/common/DMNDiagramElementsUtils.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/common/DMNDiagramElementsUtils.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -158,7 +158,7 @@ private void renameOtherEligibleDRGs(final List<JSIDMNDiagram> eligibleAsDRGs,\n \n     private List<JSIDMNDiagram> getDmnDiagram(final JSITDefinitions dmnDefinitions) {\n         if (dmnDefinitions.getDMNDI() == null) {\n-            dmnDefinitions.setDMNDI(new JSIDMNDI());\n+            dmnDefinitions.setDMNDI(JSIDMNDI.newInstance());\n         }\n         return dmnDefinitions.getDMNDI().getDMNDiagram();\n     }"
  },
  {
    "sha": "99efdf5f7e40be7e8ea038f136bb9ec596d9b19c",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/common/WrapperUtils.java",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/common/WrapperUtils.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/common/WrapperUtils.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/common/WrapperUtils.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -231,21 +231,21 @@ private static JSIDMNShape stunnerToDDExt(final JSIDMNDiagram diagram,\n                                               final Definitions definitionsStunnerPojo,\n                                               final View<? extends DMNElement> v,\n                                               final String namespaceURI) {\n-        final JSIDMNShape result = new JSIDMNShape();\n+        final JSIDMNShape result = JSIDMNShape.newInstance();\n         final DMNElement definition = v.getDefinition();\n         final String dmnElementId = definition.getId().getValue();\n         final String shapeId = getShapeId(diagram, dmnDiagramElementIds, dmnElementId);\n \n         result.setId(shapeId);\n         result.setDmnElementRef(getDmnElementRef(definitionsStunnerPojo, v, namespaceURI));\n-        final JSIBounds bounds = new JSIBounds();\n+        final JSIBounds bounds = JSIBounds.newInstance();\n         result.setBounds(bounds);\n         bounds.setX(xOfBound(upperLeftBound(v)));\n         bounds.setY(yOfBound(upperLeftBound(v)));\n-        result.setDMNLabel(new JSIDMNLabel());\n+        result.setDMNLabel(JSIDMNLabel.newInstance());\n         // TODO {gcardosi}: HARDCODED\n         result.setIsCollapsed(false);\n-        final JSIDMNStyle style = new JSIDMNStyle();\n+        final JSIDMNStyle style = JSIDMNStyle.newInstance();\n         if (v.getDefinition() instanceof Decision) {\n             final Decision d = (Decision) v.getDefinition();\n             applyBounds(d.getDimensionsSet(), bounds);\n@@ -276,13 +276,13 @@ private static JSIDMNShape stunnerToDDExt(final JSIDMNDiagram diagram,\n             applyBounds(d.getDimensionsSet(), bounds);\n             applyBackgroundStyles(d.getBackgroundSet(), style);\n             applyFontStyle(d.getFontSet(), style);\n-            final JSIDMNDecisionServiceDividerLine dl = new JSIDMNDecisionServiceDividerLine();\n-            final JSIPoint leftPoint = new JSIPoint();\n+            final JSIDMNDecisionServiceDividerLine dl = JSIDMNDecisionServiceDividerLine.newInstance();\n+            final JSIPoint leftPoint = JSIPoint.newInstance();\n             leftPoint.setX(v.getBounds().getUpperLeft().getX());\n             final double dlY = v.getBounds().getUpperLeft().getY() + d.getDividerLineY().getValue();\n             leftPoint.setY(dlY);\n             dl.addWaypoint(leftPoint);\n-            final JSIPoint rightPoint = new JSIPoint();\n+            final JSIPoint rightPoint = JSIPoint.newInstance();\n             rightPoint.setX(v.getBounds().getLowerRight().getX());\n             rightPoint.setY(dlY);\n             dl.addWaypoint(rightPoint);"
  },
  {
    "sha": "1e7621d1f66deb775eff3afa9b553848941e4344",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/AssociationConverter.java",
    "status": "modified",
    "additions": 5,
    "deletions": 5,
    "changes": 10,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/AssociationConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/AssociationConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/AssociationConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -39,7 +39,7 @@\n     @SuppressWarnings(\"unchecked\")\n     public static List<JSITAssociation> dmnFromWB(final Node<View<TextAnnotation>, ?> node) {\n         final TextAnnotation ta = (TextAnnotation) DefinitionUtils.getElementDefinition(node);\n-        final JSITDMNElementReference ta_elementReference = new JSITDMNElementReference();\n+        final JSITDMNElementReference ta_elementReference = JSITDMNElementReference.newInstance();\n         ta_elementReference.setHref(\"#\" + ta.getId().getValue());\n \n         final List<JSITAssociation> result = new ArrayList<>();\n@@ -51,10 +51,10 @@\n                 final View<?> view = (View<?>) sourceNode.getContent();\n                 if (view.getDefinition() instanceof DRGElement) {\n                     final DRGElement drgElement = (DRGElement) view.getDefinition();\n-                    final JSITDMNElementReference sourceRef = new JSITDMNElementReference();\n+                    final JSITDMNElementReference sourceRef = JSITDMNElementReference.newInstance();\n                     sourceRef.setHref(getHref(drgElement));\n \n-                    final JSITAssociation adding = new JSITAssociation();\n+                    final JSITAssociation adding = JSITAssociation.newInstance();\n                     adding.setId(((View<Association>) e.getContent()).getDefinition().getId().getValue());\n                     final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(((View<Association>) e.getContent()).getDefinition().getDescription()));\n                     description.ifPresent(adding::setDescription);\n@@ -72,10 +72,10 @@\n                 final View<?> view = (View<?>) targetNode.getContent();\n                 if (view.getDefinition() instanceof DRGElement) {\n                     final DRGElement drgElement = (DRGElement) view.getDefinition();\n-                    final JSITDMNElementReference targetRef = new JSITDMNElementReference();\n+                    final JSITDMNElementReference targetRef = JSITDMNElementReference.newInstance();\n                     targetRef.setHref(getHref(drgElement));\n \n-                    final JSITAssociation adding = new JSITAssociation();\n+                    final JSITAssociation adding = JSITAssociation.newInstance();\n                     adding.setId(((View<Association>) e.getContent()).getDefinition().getId().getValue());\n                     final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(((View<Association>) e.getContent()).getDefinition().getDescription()));\n                     description.ifPresent(adding::setDescription);"
  },
  {
    "sha": "3710983441c1d9dfc0ed994c375803f92a510923",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/BindingPropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/BindingPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/BindingPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/BindingPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -66,7 +66,7 @@ public static JSITBinding dmnFromWB(final Binding wb,\n         if (Objects.isNull(wb)) {\n             return null;\n         }\n-        final JSITBinding result = new JSITBinding();\n+        final JSITBinding result = JSITBinding.newInstance();\n         final JSITInformationItem convertedParameter = InformationItemPropertyConverter.dmnFromWB(wb.getParameter());\n         final JSITExpression convertedExpression = ExpressionPropertyConverter.dmnFromWB(wb.getExpression(),\n                                                                                          componentWidthsConsumer);"
  },
  {
    "sha": "04a48b749b6c80a4897049fce8d416405c1ce71f",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/BusinessKnowledgeModelConverter.java",
    "status": "modified",
    "additions": 8,
    "deletions": 8,
    "changes": 16,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/BusinessKnowledgeModelConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/BusinessKnowledgeModelConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/BusinessKnowledgeModelConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -111,7 +111,7 @@ public BusinessKnowledgeModelConverter(final FactoryManager factoryManager) {\n     public JSITBusinessKnowledgeModel dmnFromNode(final Node<View<BusinessKnowledgeModel>, ?> node,\n                                                   final Consumer<JSITComponentWidths> componentWidthsConsumer) {\n         final BusinessKnowledgeModel source = (BusinessKnowledgeModel) DefinitionUtils.getElementDefinition(node);\n-        final JSITBusinessKnowledgeModel result = new JSITBusinessKnowledgeModel();\n+        final JSITBusinessKnowledgeModel result = JSITBusinessKnowledgeModel.newInstance();\n         result.setId(source.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(source.getDescription()));\n         description.ifPresent(result::setDescription);\n@@ -135,7 +135,7 @@ public JSITBusinessKnowledgeModel dmnFromNode(final Node<View<BusinessKnowledgeM\n         if (Objects.nonNull(wbFunctionDefinition)) {\n             final String uuid = wbFunctionDefinition.getId().getValue();\n             if (Objects.nonNull(uuid)) {\n-                final JSITComponentWidths componentWidths = new JSITComponentWidths();\n+                final JSITComponentWidths componentWidths = JSITComponentWidths.newInstance();\n                 componentWidths.setDmnElementRef(uuid);\n                 source.getEncapsulatedLogic().getComponentWidths()\n                         .stream()\n@@ -156,24 +156,24 @@ public JSITBusinessKnowledgeModel dmnFromNode(final Node<View<BusinessKnowledgeM\n                 if (view.getDefinition() instanceof DRGElement) {\n                     final DRGElement drgElement = (DRGElement) view.getDefinition();\n                     if (drgElement instanceof BusinessKnowledgeModel) {\n-                        final JSITKnowledgeRequirement iReq = new JSITKnowledgeRequirement();\n+                        final JSITKnowledgeRequirement iReq = JSITKnowledgeRequirement.newInstance();\n                         iReq.setId(getRawId(e.getUUID()));\n-                        final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                        final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                         ri.setHref(getHref(drgElement));\n                         iReq.setRequiredKnowledge(ri);\n                         result.addKnowledgeRequirement(iReq);\n                     } else if (drgElement instanceof KnowledgeSource) {\n-                        final JSITAuthorityRequirement iReq = new JSITAuthorityRequirement();\n+                        final JSITAuthorityRequirement iReq = JSITAuthorityRequirement.newInstance();\n                         iReq.setId(getRawId(e.getUUID()));\n-                        final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                        final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                         ri.setHref(getHref(drgElement));\n                         iReq.setRequiredAuthority(ri);\n                         result.addAuthorityRequirement(iReq);\n                     } else if (drgElement instanceof DecisionService) {\n                         if (e.getContent() instanceof View && ((View) e.getContent()).getDefinition() instanceof KnowledgeRequirement) {\n-                            final JSITKnowledgeRequirement iReq = new JSITKnowledgeRequirement();\n+                            final JSITKnowledgeRequirement iReq = JSITKnowledgeRequirement.newInstance();\n                             iReq.setId(getRawId(e.getUUID()));\n-                            final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                            final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                             ri.setHref(getHref(drgElement));\n                             iReq.setRequiredKnowledge(ri);\n                             result.addKnowledgeRequirement(iReq);"
  },
  {
    "sha": "f7d345bb20602b4cd67cf7c6869d62e4a391b827",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ContextEntryPropertyConverter.java",
    "status": "modified",
    "additions": 2,
    "deletions": 2,
    "changes": 4,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ContextEntryPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ContextEntryPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ContextEntryPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -63,13 +63,13 @@ public static ContextEntry wbFromDMN(final JSITContextEntry dmn,\n \n     public static JSITContextEntry dmnFromWB(final ContextEntry wb,\n                                              final Consumer<JSITComponentWidths> componentWidthsConsumer) {\n-        final JSITContextEntry result = new JSITContextEntry();\n+        final JSITContextEntry result = JSITContextEntry.newInstance();\n \n         final JSITInformationItem variable = InformationItemPropertyConverter.dmnFromWB(wb.getVariable());\n         JSITExpression expression = ExpressionPropertyConverter.dmnFromWB(wb.getExpression(),\n                                                                           componentWidthsConsumer);\n         if (Objects.isNull(expression)) {\n-            final JSITLiteralExpression mockLiteralExpression = new JSITLiteralExpression();\n+            final JSITLiteralExpression mockLiteralExpression = JSITLiteralExpression.newInstance();\n             mockLiteralExpression.setText(ContextEntry.DEFAULT_EXPRESSION_VALUE);\n             expression = getWrappedJSITLiteralExpression(mockLiteralExpression, \"dmn\", \"literalExpression\");\n         }"
  },
  {
    "sha": "accdaa1284fb3dfd2190c93cbb373cc5068cc53b",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ContextPropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ContextPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ContextPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ContextPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -80,7 +80,7 @@ public static Context wbFromDMN(final JSITContext dmn,\n \n     public static JSITContext dmnFromWB(final Context wb,\n                                         final Consumer<JSITComponentWidths> componentWidthsConsumer) {\n-        final JSITContext result = new JSITContext();\n+        final JSITContext result = JSITContext.newInstance();\n         result.setId(wb.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(wb.getDescription()));\n         description.ifPresent(result::setDescription);"
  },
  {
    "sha": "c9b2dce0e09c0d834f259d4dfbe9060895b95ec5",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DMNElementReferenceConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DMNElementReferenceConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DMNElementReferenceConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DMNElementReferenceConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -28,7 +28,7 @@ public static DMNElementReference wbFromDMN(final JSITDMNElementReference dmn) {\n     }\n \n     public static JSITDMNElementReference dmnFromWB(final DMNElementReference wb) {\n-        final JSITDMNElementReference result = new JSITDMNElementReference();\n+        final JSITDMNElementReference result = JSITDMNElementReference.newInstance();\n         result.setHref(wb.getHref());\n \n         return result;"
  },
  {
    "sha": "823990d2e4c025ba355333b62f6272b60e101ab1",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DMNExternalLinksToExtensionElements.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DMNExternalLinksToExtensionElements.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DMNExternalLinksToExtensionElements.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DMNExternalLinksToExtensionElements.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -64,7 +64,7 @@ static void loadExternalLinksIntoExtensionElements(final DRGElement source,\n         removeAllExistingLinks(elements);\n \n         for (final DMNExternalLink link : links.getLinks()) {\n-            final JSITAttachment attachment = new JSITAttachment();\n+            final JSITAttachment attachment = JSITAttachment.newInstance();\n             attachment.setName(link.getDescription());\n             attachment.setUrl(link.getUrl());\n \n@@ -75,7 +75,7 @@ static void loadExternalLinksIntoExtensionElements(final DRGElement source,\n     }\n \n     private static void removeAllExistingLinks(final JSITDMNElement.JSIExtensionElements elements) {\n-        final JSITDMNElement.JSIExtensionElements others = new JSITDMNElement.JSIExtensionElements();\n+        final JSITDMNElement.JSIExtensionElements others = JSITDMNElement.JSIExtensionElements.newInstance();\n         // Add because it is present in the original JSON when unmarshalling\n         others.setAny(new ArrayList<>());\n         final List<Object> any = elements.getAny();\n@@ -91,7 +91,7 @@ private static void removeAllExistingLinks(final JSITDMNElement.JSIExtensionElem\n     private static JSITDMNElement.JSIExtensionElements getOrCreateExtensionElements(final JSITDRGElement target) {\n         // Add because it is present in the original JSON when unmarshalling\n         JSITDMNElement.JSIExtensionElements toReturn = Objects.isNull(target.getExtensionElements())\n-                ? new JSITDMNElement.JSIExtensionElements()\n+                ? JSITDMNElement.JSIExtensionElements.newInstance()\n                 : target.getExtensionElements();\n         if (!Objects.isNull(toReturn) && Objects.isNull(toReturn.getAny())) {\n             toReturn.setAny(new ArrayList<>());"
  },
  {
    "sha": "b15b056600780670050f854a740975696478bd07",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionConverter.java",
    "status": "modified",
    "additions": 11,
    "deletions": 11,
    "changes": 22,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -124,7 +124,7 @@ public DecisionConverter(final FactoryManager factoryManager) {\n     public JSITDecision dmnFromNode(final Node<View<Decision>, ?> node,\n                                     final Consumer<JSITComponentWidths> componentWidthsConsumer) {\n         final Decision source = (Decision) DefinitionUtils.getElementDefinition(node);\n-        final JSITDecision d = new JSITDecision();\n+        final JSITDecision d = JSITDecision.newInstance();\n         d.setId(source.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(source.getDescription()));\n         description.ifPresent(d::setDescription);\n@@ -164,40 +164,40 @@ public JSITDecision dmnFromNode(final Node<View<Decision>, ?> node,\n                 if (view.getDefinition() instanceof DRGElement) {\n                     final DRGElement drgElement = (DRGElement) view.getDefinition();\n                     if (drgElement instanceof Decision) {\n-                        final JSITInformationRequirement iReq = new JSITInformationRequirement();\n+                        final JSITInformationRequirement iReq = JSITInformationRequirement.newInstance();\n                         iReq.setId(getRawId(e.getUUID()));\n-                        final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                        final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                         ri.setHref(getHref(drgElement));\n                         iReq.setRequiredDecision(ri);\n                         d.addInformationRequirement(iReq);\n                     } else if (drgElement instanceof BusinessKnowledgeModel) {\n-                        final JSITKnowledgeRequirement iReq = new JSITKnowledgeRequirement();\n+                        final JSITKnowledgeRequirement iReq = JSITKnowledgeRequirement.newInstance();\n                         iReq.setId(getRawId(e.getUUID()));\n-                        final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                        final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                         ri.setHref(getHref(drgElement));\n                         iReq.setRequiredKnowledge(ri);\n                         d.addKnowledgeRequirement(iReq);\n                     } else if (drgElement instanceof KnowledgeSource) {\n-                        final JSITAuthorityRequirement iReq = new JSITAuthorityRequirement();\n+                        final JSITAuthorityRequirement iReq = JSITAuthorityRequirement.newInstance();\n                         iReq.setId(getRawId(e.getUUID()));\n-                        final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                        final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                         ri.setHref(getHref(drgElement));\n                         iReq.setRequiredAuthority(ri);\n                         d.addAuthorityRequirement(iReq);\n                     } else if (drgElement instanceof InputData) {\n-                        final JSITInformationRequirement iReq = new JSITInformationRequirement();\n+                        final JSITInformationRequirement iReq = JSITInformationRequirement.newInstance();\n                         iReq.setId(getRawId(e.getUUID()));\n-                        final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                        final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                         ri.setHref(getHref(drgElement));\n                         iReq.setRequiredInput(ri);\n                         d.addInformationRequirement(iReq);\n                     } else if (drgElement instanceof DecisionService) {\n                         if (e.getContent() instanceof Child) {\n                             // Stunner relationship of this Decision be encapsulated by the DecisionService, not managed here.\n                         } else if (e.getContent() instanceof View && ((View) e.getContent()).getDefinition() instanceof KnowledgeRequirement) {\n-                            final JSITKnowledgeRequirement iReq = new JSITKnowledgeRequirement();\n+                            final JSITKnowledgeRequirement iReq = JSITKnowledgeRequirement.newInstance();\n                             iReq.setId(getRawId(e.getUUID()));\n-                            final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                            final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                             ri.setHref(getHref(drgElement));\n                             iReq.setRequiredKnowledge(ri);\n                             d.addKnowledgeRequirement(iReq);"
  },
  {
    "sha": "6eda9d2d34bd557ffdc1d2c882cbc50fc1b54bba",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionRulePropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionRulePropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionRulePropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionRulePropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -83,7 +83,7 @@ public static DecisionRule wbFromDMN(final JSITDecisionRule dmn) {\n     }\n \n     public static JSITDecisionRule dmnFromWB(final DecisionRule wb) {\n-        final JSITDecisionRule result = new JSITDecisionRule();\n+        final JSITDecisionRule result = JSITDecisionRule.newInstance();\n         result.setId(wb.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(wb.getDescription()));\n         description.ifPresent(result::setDescription);"
  },
  {
    "sha": "12ac4d858f0888b34304e4aec05e8bc5cc5797e8",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionServiceConverter.java",
    "status": "modified",
    "additions": 4,
    "deletions": 4,
    "changes": 8,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionServiceConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionServiceConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionServiceConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -152,7 +152,7 @@ private static boolean isOutputDecision(final View<?> childView,\n     public JSITDecisionService dmnFromNode(final Node<View<DecisionService>, ?> node,\n                                            final Consumer<JSITComponentWidths> componentWidthsConsumer) {\n         final DecisionService source = (DecisionService) DefinitionUtils.getElementDefinition(node);\n-        final JSITDecisionService ds = new JSITDecisionService();\n+        final JSITDecisionService ds = JSITDecisionService.newInstance();\n         ds.setId(source.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(source.getDescription()));\n         description.ifPresent(ds::setDescription);\n@@ -183,7 +183,7 @@ public JSITDecisionService dmnFromNode(final Node<View<DecisionService>, ?> node\n                     final DRGElement drgElement = (DRGElement) targetNodeView.getDefinition();\n                     if (drgElement instanceof Decision) {\n                         final Decision decision = (Decision) drgElement;\n-                        final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                        final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                         ri.setHref(\"#\" + decision.getId().getValue());\n                         if (isOutputDecision(targetNode.getContent(), node.getContent())) {\n                             candidate_outputDecision.add(ri);\n@@ -204,15 +204,15 @@ public JSITDecisionService dmnFromNode(final Node<View<DecisionService>, ?> node\n         reqInputs.stream()\n                 .sorted(Comparator.comparing(x -> x.getName().getValue()))\n                 .map(x -> {\n-                    final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                    final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                     ri.setHref(\"#\" + x.getId().getValue());\n                     return ri;\n                 })\n                 .forEach(ri -> candidate_inputData.add(Js.uncheckedCast(ri)));\n         reqDecisions.stream()\n                 .sorted(Comparator.comparing(x -> x.getName().getValue()))\n                 .map(x -> {\n-                    final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                    final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                     ri.setHref(\"#\" + x.getId().getValue());\n                     return ri;\n                 })"
  },
  {
    "sha": "3ac3c7dbc05ebabb52cccb0a8ba4f5c9557a960b",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionTablePropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionTablePropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionTablePropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DecisionTablePropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -128,7 +128,7 @@ public static DecisionTable wbFromDMN(final JSITDecisionTable dmn) {\n     }\n \n     public static JSITDecisionTable dmnFromWB(final DecisionTable wb) {\n-        final JSITDecisionTable result = new JSITDecisionTable();\n+        final JSITDecisionTable result = JSITDecisionTable.newInstance();\n         result.setId(wb.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(wb.getDescription()));\n         description.ifPresent(result::setDescription);"
  },
  {
    "sha": "9867c454022091423b5810473d9854bcb357de5d",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DefinitionsConverter.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DefinitionsConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DefinitionsConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/DefinitionsConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -123,12 +123,12 @@ public static JSITDefinitions dmnFromWB(final Definitions wb, final boolean igno\n         if (Objects.isNull(wb)) {\n             return null;\n         }\n-        final JSITDefinitions result = new JSITDefinitions();\n+        final JSITDefinitions result = JSITDefinitions.newInstance();\n \n         // TODO currently DMN wb UI does not offer feature to set these required DMN properties, setting some hardcoded defaults for now.\n         final String defaultId = Objects.nonNull(wb.getId()) ? wb.getId().getValue() : UUID.uuid();\n         final String defaultName = Objects.nonNull(wb.getName()) ? wb.getName().getValue() : UUID.uuid(8);\n-        final JSIDMNDI dmnDMNDI = new JSIDMNDI();\n+        final JSIDMNDI dmnDMNDI = JSIDMNDI.newInstance();\n         final String defaultNamespace = !StringUtils.isEmpty(wb.getNamespace().getValue())\n                 ? wb.getNamespace().getValue()\n                 : DMNModelInstrumentedBase.Namespace.DEFAULT.getUri() + UUID.uuid();\n@@ -203,7 +203,7 @@ public static JSITDefinitions dmnFromWB(final Definitions wb, final boolean igno\n         return dmnDiagramElements\n                 .stream()\n                 .map(dmnDiagramElement -> {\n-                    final JSIDMNDiagram diagram = new JSIDMNDiagram();\n+                    final JSIDMNDiagram diagram = JSIDMNDiagram.newInstance();\n                     diagram.setId(dmnDiagramElement.getId().getValue());\n                     diagram.setName(dmnDiagramElement.getName().getValue());\n                     return diagram;"
  },
  {
    "sha": "d754f02fbb4e570da56751300b3e53550fd3becc",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ExpressionPropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ExpressionPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ExpressionPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ExpressionPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -114,7 +114,7 @@ public static JSITExpression dmnFromWB(final Expression wb,\n \n         final String uuid = wb.getId().getValue();\n         if (Objects.nonNull(uuid)) {\n-            final JSITComponentWidths componentWidths = new JSITComponentWidths();\n+            final JSITComponentWidths componentWidths = JSITComponentWidths.newInstance();\n             componentWidths.setDmnElementRef(uuid);\n             wb.getComponentWidths()\n                     .stream()"
  },
  {
    "sha": "79387a492f51ec98947b4eaed4161373a3b16b8b",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/FunctionDefinitionPropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/FunctionDefinitionPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/FunctionDefinitionPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/FunctionDefinitionPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -158,7 +158,7 @@ public static JSITFunctionDefinition dmnFromWB(final FunctionDefinition wb,\n         if (Objects.isNull(wb)) {\n             return null;\n         }\n-        final JSITFunctionDefinition result = new JSITFunctionDefinition();\n+        final JSITFunctionDefinition result = JSITFunctionDefinition.newInstance();\n         result.setId(wb.getId().getValue());\n         // TODO {gcardosi} add because  present in original json\n         if (Objects.isNull(result.getFormalParameter())) {"
  },
  {
    "sha": "40fc40a02694d5aff5d64570460ae96240a34c45",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ImportConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ImportConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ImportConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ImportConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -81,7 +81,7 @@ private static Import createWBImport(final JSITImport dmn,\n     }\n \n     static JSITImport dmnFromWb(final Import wb) {\n-        final JSITImport result = new JSITImport();\n+        final JSITImport result = JSITImport.newInstance();\n         result.setImportType(wb.getImportType());\n         result.setLocationURI(wb.getLocationURI().getValue());\n         result.setNamespace(wb.getNamespace());"
  },
  {
    "sha": "6d397aebfe5dc2465e32d3362681cce4774b5ebb",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ImportedValuesConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ImportedValuesConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ImportedValuesConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ImportedValuesConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -53,7 +53,7 @@ public static JSITImportedValues dmnFromWB(final ImportedValues wb) {\n         if (Objects.isNull(wb)) {\n             return null;\n         }\n-        final JSITImportedValues dmn = new JSITImportedValues();\n+        final JSITImportedValues dmn = JSITImportedValues.newInstance();\n         dmn.setNamespace(wb.getNamespace());\n         dmn.setLocationURI(wb.getLocationURI().getValue());\n         dmn.setImportType(wb.getImportType());"
  },
  {
    "sha": "df6f9973d5c29b30347549a7b744336d7e137e47",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InformationItemPrimaryPropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InformationItemPrimaryPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InformationItemPrimaryPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InformationItemPrimaryPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -51,7 +51,7 @@ public static JSITInformationItem dmnFromWB(final InformationItemPrimary wb,\n         if (Objects.isNull(wb)) {\n             return null;\n         }\n-        final JSITInformationItem result = new JSITInformationItem();\n+        final JSITInformationItem result = JSITInformationItem.newInstance();\n         result.setId(wb.getId().getValue());\n         result.setName(getParentName(parent));\n "
  },
  {
    "sha": "c2492795267cfd39ecb49611e81e2c1913963c35",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InformationItemPropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InformationItemPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InformationItemPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InformationItemPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -47,7 +47,7 @@ public static JSITInformationItem dmnFromWB(final InformationItem wb) {\n         if (Objects.isNull(wb)) {\n             return null;\n         }\n-        final JSITInformationItem result = new JSITInformationItem();\n+        final JSITInformationItem result = JSITInformationItem.newInstance();\n         result.setId(wb.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(wb.getDescription()));\n         description.ifPresent(result::setDescription);"
  },
  {
    "sha": "c975a360edec0e39cd96e1da54468e04ad780884",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InputClausePropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InputClausePropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InputClausePropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InputClausePropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -53,7 +53,7 @@ public static InputClause wbFromDMN(final JSITInputClause dmn) {\n     }\n \n     public static JSITInputClause dmnFromWB(final InputClause wb) {\n-        final JSITInputClause result = new JSITInputClause();\n+        final JSITInputClause result = JSITInputClause.newInstance();\n         result.setId(wb.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(wb.getDescription()));\n         description.ifPresent(result::setDescription);"
  },
  {
    "sha": "3d4fb5b70cca2311e70d6e57918cff8195ba1b49",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InputDataConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InputDataConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InputDataConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InputDataConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -85,7 +85,7 @@ public InputDataConverter(final FactoryManager factoryManager) {\n     public JSITInputData dmnFromNode(final Node<View<InputData>, ?> node,\n                                      final Consumer<JSITComponentWidths> componentWidthsConsumer) {\n         final InputData source = (InputData) DefinitionUtils.getElementDefinition(node);\n-        final JSITInputData result = new JSITInputData();\n+        final JSITInputData result = JSITInputData.newInstance();\n         result.setId(source.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(source.getDescription()));\n         description.ifPresent(result::setDescription);"
  },
  {
    "sha": "33835fe762f26cd9d6b5cb47dd152db00286dbcd",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InvocationPropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InvocationPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InvocationPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/InvocationPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -85,7 +85,7 @@ public static JSITInvocation dmnFromWB(final Invocation wb,\n         if (Objects.isNull(wb)) {\n             return null;\n         }\n-        final JSITInvocation result = new JSITInvocation();\n+        final JSITInvocation result = JSITInvocation.newInstance();\n         result.setId(wb.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(wb.getDescription()));\n         description.ifPresent(result::setDescription);"
  },
  {
    "sha": "887bd56177edf88bc821d6181b81cd7ed1c60cf3",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ItemDefinitionPropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ItemDefinitionPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ItemDefinitionPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ItemDefinitionPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -116,7 +116,7 @@ public static JSITItemDefinition dmnFromWB(final ItemDefinition wb) {\n         if (Objects.isNull(wb)) {\n             return null;\n         }\n-        final JSITItemDefinition result = new JSITItemDefinition();\n+        final JSITItemDefinition result = JSITItemDefinition.newInstance();\n         result.setId(wb.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(wb.getDescription()));\n         description.ifPresent(result::setDescription);"
  },
  {
    "sha": "70ad24508feb4f1509b375b191b0e6ce800591c9",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/KnowledgeSourceConverter.java",
    "status": "modified",
    "additions": 7,
    "deletions": 7,
    "changes": 14,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/KnowledgeSourceConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/KnowledgeSourceConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/KnowledgeSourceConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -92,7 +92,7 @@ public KnowledgeSourceConverter(final FactoryManager factoryManager) {\n     public JSITKnowledgeSource dmnFromNode(final Node<View<KnowledgeSource>, ?> node,\n                                            final Consumer<JSITComponentWidths> componentWidthsConsumer) {\n         final KnowledgeSource source = (KnowledgeSource) DefinitionUtils.getElementDefinition(node);\n-        final JSITKnowledgeSource result = new JSITKnowledgeSource();\n+        final JSITKnowledgeSource result = JSITKnowledgeSource.newInstance();\n         result.setId(source.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(source.getDescription()));\n         description.ifPresent(result::setDescription);\n@@ -111,23 +111,23 @@ public JSITKnowledgeSource dmnFromNode(final Node<View<KnowledgeSource>, ?> node\n                 if (view.getDefinition() instanceof DRGElement) {\n                     final DRGElement drgElement = (DRGElement) view.getDefinition();\n                     if (drgElement instanceof Decision) {\n-                        final JSITAuthorityRequirement iReq = new JSITAuthorityRequirement();\n+                        final JSITAuthorityRequirement iReq = JSITAuthorityRequirement.newInstance();\n                         iReq.setId(getRawId(e.getUUID()));\n-                        final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                        final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                         ri.setHref(getHref(drgElement));\n                         iReq.setRequiredDecision(ri);\n                         result.addAuthorityRequirement(iReq);\n                     } else if (drgElement instanceof KnowledgeSource) {\n-                        final JSITAuthorityRequirement iReq = new JSITAuthorityRequirement();\n+                        final JSITAuthorityRequirement iReq = JSITAuthorityRequirement.newInstance();\n                         iReq.setId(getRawId(e.getUUID()));\n-                        final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                        final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                         ri.setHref(getHref(drgElement));\n                         iReq.setRequiredAuthority(ri);\n                         result.addAuthorityRequirement(iReq);\n                     } else if (drgElement instanceof InputData) {\n-                        final JSITAuthorityRequirement iReq = new JSITAuthorityRequirement();\n+                        final JSITAuthorityRequirement iReq = JSITAuthorityRequirement.newInstance();\n                         iReq.setId(getRawId(e.getUUID()));\n-                        final JSITDMNElementReference ri = new JSITDMNElementReference();\n+                        final JSITDMNElementReference ri = JSITDMNElementReference.newInstance();\n                         ri.setHref(getHref(drgElement));\n                         iReq.setRequiredInput(ri);\n                         result.addAuthorityRequirement(iReq);"
  },
  {
    "sha": "6bbaaafa777438618714df4e29f5f626e7049e3c",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ListPropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ListPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ListPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/ListPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -66,7 +66,7 @@ public static List wbFromDMN(final JSITList dmn,\n \n     public static JSITList dmnFromWB(final List wb,\n                                      final Consumer<JSITComponentWidths> componentWidthsConsumer) {\n-        final JSITList result = new JSITList();\n+        final JSITList result = JSITList.newInstance();\n         result.setId(wb.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(wb.getDescription()));\n         description.ifPresent(result::setDescription);"
  },
  {
    "sha": "526c7cfbddc67b46d75b0afe100059caabe754ae",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/LiteralExpressionPropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/LiteralExpressionPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/LiteralExpressionPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/LiteralExpressionPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -85,7 +85,7 @@ public static JSITLiteralExpression dmnFromWB(final IsLiteralExpression wb) {\n     static class JSITLiteralExpressionFactory {\n \n         JSITLiteralExpression make() {\n-            return new JSITLiteralExpression();\n+            return JSITLiteralExpression.newInstance();\n         }\n     }\n }"
  },
  {
    "sha": "bab2d99ad09c1ffdc8593fc59aae04527d22a6a1",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/OutputClausePropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/OutputClausePropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/OutputClausePropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/OutputClausePropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -58,7 +58,7 @@ public static OutputClause wbFromDMN(final JSITOutputClause dmn) {\n     }\n \n     public static JSITOutputClause dmnFromWB(final OutputClause wb) {\n-        final JSITOutputClause result = new JSITOutputClause();\n+        final JSITOutputClause result = JSITOutputClause.newInstance();\n         result.setId(wb.getId().getValue());\n         result.setName(wb.getName());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(wb.getDescription()));"
  },
  {
    "sha": "40555bc04afed5b7b64d039098a9ed28dab5d34d",
    "filename": "kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/RelationPropertyConverter.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/kie-wb-common/blob/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/RelationPropertyConverter.java",
    "raw_url": "https://github.com/kiegroup/kie-wb-common/raw/6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/RelationPropertyConverter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kie-wb-common/contents/kie-wb-common-dmn/kie-wb-common-dmn-client/src/main/java/org/kie/workbench/common/dmn/client/marshaller/converters/RelationPropertyConverter.java?ref=6cfce2904b5eb6f1f8bd3d7cc9c5ae56565061b3",
    "patch": "@@ -73,7 +73,7 @@ public static Relation wbFromDMN(final JSITRelation dmn,\n \n     public static JSITRelation dmnFromWB(final Relation wb,\n                                          final Consumer<JSITComponentWidths> componentWidthsConsumer) {\n-        final JSITRelation result = new JSITRelation();\n+        final JSITRelation result = JSITRelation.newInstance();\n         result.setId(wb.getId().getValue());\n         final Optional<String> description = Optional.ofNullable(DescriptionPropertyConverter.dmnFromWB(wb.getDescription()));\n         description.ifPresent(result::setDescription);"
  }
]
