[
  {
    "sha": "0a01a59aa8c186d850339672716c4ccc8f2d3d4c",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/main/java/org/drools/workbench/screens/scenariosimulation/model/FactMappingValidationError.java",
    "status": "modified",
    "additions": 37,
    "deletions": 5,
    "changes": 42,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/main/java/org/drools/workbench/screens/scenariosimulation/model/FactMappingValidationError.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/main/java/org/drools/workbench/screens/scenariosimulation/model/FactMappingValidationError.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/main/java/org/drools/workbench/screens/scenariosimulation/model/FactMappingValidationError.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -16,6 +16,7 @@\n package org.drools.workbench.screens.scenariosimulation.model;\n \n import org.drools.scenariosimulation.api.model.FactMapping;\n+import org.drools.workbench.screens.scenariosimulation.utils.ScenarioSimulationI18nServerMessage;\n import org.jboss.errai.common.client.api.annotations.Portable;\n \n /**\n@@ -24,18 +25,33 @@\n @Portable\n public class FactMappingValidationError {\n \n-    protected String errorId;\n-\n-    protected String errorMessage;\n+    private String errorId;\n+    private String errorMessage;\n+    private ScenarioSimulationI18nServerMessage serverMessage;\n+    private String[] parameters;\n \n     public static FactMappingValidationError createFieldChangedError(FactMapping factMapping, String newType) {\n         return new FactMappingValidationError(extractFactMappingId(factMapping),\n-                                              \"Field type has changed: old '\" + factMapping.getClassName() + \"', current '\" + newType + \"'\");\n+                                              ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_CHANGED_ERROR,\n+                                              factMapping.getClassName(),\n+                                              newType);\n     }\n \n     public static FactMappingValidationError createNodeChangedError(FactMapping factMapping, String newType) {\n         return new FactMappingValidationError(extractFactMappingId(factMapping),\n-                                              \"Node type has changed: old '\" + factMapping.getFactIdentifier().getClassName() + \"', current '\" + newType + \"'\");\n+                                              ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_NODE_CHANGED_ERROR,\n+                                              factMapping.getFactIdentifier().getClassName(),\n+                                              newType);\n+    }\n+\n+    public static FactMappingValidationError createFieldAddedConstraintError(FactMapping factMapping) {\n+        return new FactMappingValidationError(extractFactMappingId(factMapping),\n+                                              ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_ADDED_CONSTRAINT_ERROR);\n+    }\n+\n+    public static FactMappingValidationError createFieldRemovedConstraintError(FactMapping factMapping) {\n+        return new FactMappingValidationError(extractFactMappingId(factMapping),\n+                                              ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_REMOVED_CONSTRAINT_ERROR);\n     }\n \n     public static FactMappingValidationError createGenericError(FactMapping factMapping, String genericError) {\n@@ -55,11 +71,27 @@ public FactMappingValidationError(String errorId, String errorMessage) {\n         this.errorMessage = errorMessage;\n     }\n \n+    public FactMappingValidationError(String errorId,\n+                                      ScenarioSimulationI18nServerMessage serverMessage,\n+                                      String ... parameters) {\n+        this.errorId = errorId;\n+        this.serverMessage = serverMessage;\n+        this.parameters = parameters;\n+    }\n+\n     public String getErrorId() {\n         return errorId;\n     }\n \n     public String getErrorMessage() {\n         return errorMessage;\n     }\n+\n+    public ScenarioSimulationI18nServerMessage getServerMessage() {\n+        return serverMessage;\n+    }\n+\n+    public String[] getParameters() {\n+        return parameters;\n+    }\n }"
  },
  {
    "sha": "6481092ff58037184588dd0a808914c38d252d7e",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/main/java/org/drools/workbench/screens/scenariosimulation/utils/ScenarioSimulationI18nServerMessage.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/main/java/org/drools/workbench/screens/scenariosimulation/utils/ScenarioSimulationI18nServerMessage.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/main/java/org/drools/workbench/screens/scenariosimulation/utils/ScenarioSimulationI18nServerMessage.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/main/java/org/drools/workbench/screens/scenariosimulation/utils/ScenarioSimulationI18nServerMessage.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.drools.workbench.screens.scenariosimulation.utils;\n+\n+public enum ScenarioSimulationI18nServerMessage {\n+\n+    SCENARIO_VALIDATION_NODE_CHANGED_ERROR,\n+    SCENARIO_VALIDATION_FIELD_CHANGED_ERROR,\n+    SCENARIO_VALIDATION_FIELD_ADDED_CONSTRAINT_ERROR,\n+    SCENARIO_VALIDATION_FIELD_REMOVED_CONSTRAINT_ERROR;\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "86ee8ba3577cd07dd6505a3be27d325447f63cd7",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/test/java/org/drools/workbench/screens/scenariosimulation/model/FactMappingValidationErrorTest.java",
    "status": "added",
    "additions": 90,
    "deletions": 0,
    "changes": 90,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/test/java/org/drools/workbench/screens/scenariosimulation/model/FactMappingValidationErrorTest.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/test/java/org/drools/workbench/screens/scenariosimulation/model/FactMappingValidationErrorTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-api/src/test/java/org/drools/workbench/screens/scenariosimulation/model/FactMappingValidationErrorTest.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.drools.workbench.screens.scenariosimulation.model;\n+\n+import org.drools.scenariosimulation.api.model.ExpressionIdentifier;\n+import org.drools.scenariosimulation.api.model.FactIdentifier;\n+import org.drools.scenariosimulation.api.model.FactMapping;\n+import org.drools.scenariosimulation.api.model.FactMappingType;\n+import org.drools.workbench.screens.scenariosimulation.utils.ScenarioSimulationI18nServerMessage;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static junit.framework.TestCase.assertEquals;\n+import static org.drools.scenariosimulation.api.utils.ConstantsHolder.VALUE;\n+import static org.junit.Assert.assertNull;\n+\n+public class FactMappingValidationErrorTest {\n+\n+    private FactMapping factMapping;\n+\n+    @Before\n+    public void setup() {\n+        factMapping = new FactMapping(FactIdentifier.create(\"myType\", \"tMYTYPE\"),\n+                                      ExpressionIdentifier.create(VALUE, FactMappingType.GIVEN));\n+        factMapping.setFactAlias(\"FactAlias\");\n+        factMapping.setExpressionAlias(\"ExpressionAlias\");\n+    }\n+\n+    @Test\n+    public void createFieldChangedError() {\n+        FactMappingValidationError error = FactMappingValidationError.createFieldChangedError(factMapping, \"tNEWTYPE\");\n+        assertEquals(\"FactAlias.ExpressionAlias\", error.getErrorId());\n+        assertEquals(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_CHANGED_ERROR, error.getServerMessage());\n+        assertEquals(2, error.getParameters().length);\n+        assertEquals(\"tMYTYPE\", error.getParameters()[0]);\n+        assertEquals(\"tNEWTYPE\", error.getParameters()[1]);\n+        assertNull(error.getErrorMessage());\n+    }\n+\n+    @Test\n+    public void createFieldAddedConstraintError() {\n+        FactMappingValidationError error = FactMappingValidationError.createFieldAddedConstraintError(factMapping);\n+        assertEquals(\"FactAlias.ExpressionAlias\", error.getErrorId());\n+        assertEquals(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_ADDED_CONSTRAINT_ERROR, error.getServerMessage());\n+        assertEquals(0, error.getParameters().length);\n+        assertNull(error.getErrorMessage());\n+    }\n+\n+    @Test\n+    public void createFieldRemovedConstraintError() {\n+        FactMappingValidationError error = FactMappingValidationError.createFieldRemovedConstraintError(factMapping);\n+        assertEquals(\"FactAlias.ExpressionAlias\", error.getErrorId());\n+        assertEquals(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_REMOVED_CONSTRAINT_ERROR, error.getServerMessage());\n+        assertEquals(0, error.getParameters().length);\n+        assertNull(error.getErrorMessage());\n+    }\n+\n+    @Test\n+    public void createNodeChangedError() {\n+        FactMappingValidationError error = FactMappingValidationError.createNodeChangedError(factMapping, \"tNEWTYPE\");\n+        assertEquals(\"FactAlias.ExpressionAlias\", error.getErrorId());\n+        assertEquals(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_NODE_CHANGED_ERROR, error.getServerMessage());\n+        assertEquals(2, error.getParameters().length);\n+        assertEquals(\"tMYTYPE\", error.getParameters()[0]);\n+        assertEquals(\"tNEWTYPE\", error.getParameters()[1]);\n+        assertNull(error.getErrorMessage());\n+    }\n+\n+    @Test\n+    public void createGenericError() {\n+        FactMappingValidationError error = FactMappingValidationError.createGenericError(factMapping, \"err\");\n+        assertEquals(\"FactAlias.ExpressionAlias\", error.getErrorId());\n+        assertNull(error.getServerMessage());\n+        assertEquals(\"err\", error.getErrorMessage());\n+        assertNull(error.getParameters());\n+    }\n+}"
  },
  {
    "sha": "1ca03fed208e37a925abbc02ca0ded2c4a87cd60",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/main/java/org/drools/workbench/screens/scenariosimulation/backend/server/DMNScenarioValidation.java",
    "status": "modified",
    "additions": 62,
    "deletions": 7,
    "changes": 69,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/main/java/org/drools/workbench/screens/scenariosimulation/backend/server/DMNScenarioValidation.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/main/java/org/drools/workbench/screens/scenariosimulation/backend/server/DMNScenarioValidation.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/main/java/org/drools/workbench/screens/scenariosimulation/backend/server/DMNScenarioValidation.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -29,6 +29,7 @@\n import org.kie.dmn.api.core.DMNType;\n import org.kie.dmn.core.impl.BaseDMNTypeImpl;\n import org.kie.dmn.feel.lang.Type;\n+import org.kie.dmn.feel.lang.types.BuiltInType;\n \n import static org.drools.scenariosimulation.backend.util.DMNSimulationUtils.extractDMNModel;\n import static org.drools.scenariosimulation.backend.util.DMNSimulationUtils.extractDMNRuntime;\n@@ -69,9 +70,9 @@\n \n             String nodeName = factMapping.getFactIdentifier().getName();\n \n-            DMNType rootDMNType;\n+            DMNType factDMNType;\n             try {\n-                rootDMNType = dmnModel.getDecisionByName(nodeName) != null ?\n+                factDMNType = dmnModel.getDecisionByName(nodeName) != null ?\n                         dmnModel.getDecisionByName(nodeName).getResultType() :\n                         dmnModel.getInputByName(nodeName).getType();\n             } catch (NullPointerException e) {\n@@ -82,10 +83,9 @@\n             List<String> steps = expressionElementToString(factMapping);\n \n             try {\n-                DMNType fieldType = navigateDMNType(rootDMNType, steps);\n-\n-                if (!isDMNFactMappingValid(factMapping.getClassName(), factMapping, fieldType)) {\n-                    errors.add(createFieldChangedError(factMapping, fieldType.getName()));\n+                DMNType fieldType = navigateDMNType(factDMNType, steps);\n+                if (!isDMNFactMappingValid(factMapping, fieldType)) {\n+                    errors.add(defineFieldChangedError(factMapping, factDMNType, fieldType));\n                 }\n             } catch (IllegalStateException e) {\n                 errors.add(createGenericError(factMapping, e.getMessage()));\n@@ -94,9 +94,21 @@\n         return errors;\n     }\n \n-    private boolean isDMNFactMappingValid(String typeName, FactMapping factMapping, DMNType dmnType) {\n+    private FactMappingValidationError defineFieldChangedError(FactMapping factMapping, DMNType factType, DMNType fieldType) {\n+        String typeName = factMapping.getClassName();\n+        if (isConstraintAdded(typeName, fieldType)) {\n+            return FactMappingValidationError.createFieldAddedConstraintError(factMapping);\n+        }\n+        if (isConstraintRemoved(typeName, factType, fieldType)) {\n+            return FactMappingValidationError.createFieldRemovedConstraintError(factMapping);\n+        }\n+        return createFieldChangedError(factMapping, fieldType.getName());\n+    }\n+\n+    private boolean isDMNFactMappingValid(FactMapping factMapping, DMNType dmnType) {\n         // NOTE: Any/Undefined is a special case where collection is true\n         Type rootType = getRootType((BaseDMNTypeImpl) dmnType);\n+        String typeName = factMapping.getClassName();\n         boolean isCoherent = UNKNOWN.equals(rootType) || ScenarioSimulationSharedUtils.isList(typeName) ==\n                 dmnType.isCollection();\n         if (!isCoherent) {\n@@ -109,6 +121,49 @@ private boolean isDMNFactMappingValid(String typeName, FactMapping factMapping,\n         return Objects.equals(factMappingType, dmnType.getName());\n     }\n \n+    /**\n+     * To define if a constraint (allowed values) were added in a DMNType fieldType given a typeName, the following conditions\n+     * are requires:\n+     * - typeName MUST BE a BuiltInType (eg. STRING, NUMERIC ..)\n+     * - DMNType fieldType MUST have at least one defined Allowed Values\n+     * - DMNType fieldType MUST have a Base Type. It's name MUST be equals to given typeName.\n+     * @param typeName TypeName present in the scesim file\n+     * @param fieldType DMNType of field under analysis\n+     * @return\n+     */\n+    private boolean isConstraintAdded(String typeName, DMNType fieldType) {\n+        boolean isTypeNameBuiltInType = !Objects.equals(UNKNOWN, BuiltInType.determineTypeFromName(typeName));\n+        boolean hasFieldTypeAllowedValues = fieldType.getAllowedValues() != null && !fieldType.getAllowedValues().isEmpty();\n+        boolean hasFieldTypeBaseType = Objects.nonNull(fieldType.getBaseType());\n+        if (isTypeNameBuiltInType && hasFieldTypeBaseType && hasFieldTypeAllowedValues) {\n+            Type baseType = getRootType((BaseDMNTypeImpl) fieldType.getBaseType());\n+            return Objects.equals(typeName, baseType.getName());\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * To define if a constraint (allowed values) were removed in a DMNType fieldType given a typeName, the following conditions\n+     * are requires:\n+     * - DMNType fieldType MUST DON'T have Allowed Values defined\n+     * - DMNType fieldType MUST DON'T have a Base Type.\n+     * - typeName MUST BE a DMNType factType's field. The field's DMNType MUST BE the same of given fieldType DMNType\n+     * @param typeName\n+     * @param factType Fact DMNType\n+     * @param fieldType Field DMNType\n+     * @return\n+     */\n+    private boolean isConstraintRemoved(String typeName, DMNType factType, DMNType fieldType) {\n+        boolean hasFieldTypeAllowedValues = fieldType.getAllowedValues() != null && !fieldType.getAllowedValues().isEmpty();\n+        boolean hasFieldTypeBaseType = Objects.nonNull(fieldType.getBaseType());\n+        boolean isTypeNameFactTypeField = factType.getFields().containsKey(typeName);\n+        if (!hasFieldTypeBaseType && !hasFieldTypeAllowedValues && isTypeNameFactTypeField) {\n+            DMNType typeNameDMNType = factType.getFields().get(typeName);\n+            return Objects.equals(fieldType.getNamespace(), typeNameDMNType.getNamespace());\n+        }\n+        return false;\n+    }\n+\n     protected DMNModel getDMNModel(KieContainer kieContainer, String dmnPath) {\n         return extractDMNModel(extractDMNRuntime(kieContainer), dmnPath);\n     }"
  },
  {
    "sha": "509abb1ed2d7b44bb63b5c6a4c8d96853e30a7e3",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/AbstractScenarioValidationTest.java",
    "status": "added",
    "additions": 94,
    "deletions": 0,
    "changes": 94,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/AbstractScenarioValidationTest.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/AbstractScenarioValidationTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/AbstractScenarioValidationTest.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -0,0 +1,94 @@\n+/*\n+ * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.drools.workbench.screens.scenariosimulation.backend.server;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.drools.workbench.screens.scenariosimulation.model.FactMappingValidationError;\n+import org.drools.workbench.screens.scenariosimulation.utils.ScenarioSimulationI18nServerMessage;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+public abstract class AbstractScenarioValidationTest {\n+\n+    protected void checkResult(List<FactMappingValidationError> validationErrors, ExpectedError... expectedErrors) {\n+        if (expectedErrors.length == 0) {\n+            assertEquals(0, validationErrors.size());\n+        }\n+\n+        for (ExpectedError expectedError : expectedErrors) {\n+            if (expectedError.getErrorMessage() != null) {\n+                assertTrue(validationErrors.stream().anyMatch(validationError -> Objects.equals(expectedError.getErrorMessage(), validationError.getErrorMessage())));\n+            } else {\n+                assertTrue(validationErrors.stream().anyMatch(validationError -> checkValidationErrorWithExpected(validationError, expectedError)));\n+            }\n+        }\n+    }\n+\n+    protected boolean checkValidationErrorWithExpected(FactMappingValidationError validationError, ExpectedError expectedError) {\n+        if (validationError.getErrorMessage() != null) {\n+            return false;\n+        }\n+\n+        boolean isSameServerMessage = validationError.getServerMessage().equals(expectedError.getServerMessage());\n+        boolean parametersSameLength = validationError.getParameters().length == expectedError.getParameters().size();\n+\n+        if (isSameServerMessage && parametersSameLength) {\n+            if (expectedError.getParameters().isEmpty()) {\n+                return true;\n+            }\n+\n+            for (int i = 0; i < validationError.getParameters().length; i++) {\n+                if (!Objects.equals(validationError.getParameters()[i], expectedError.getParameters().get(i))) {\n+                    return false;\n+                }\n+            }\n+\n+            return true;\n+        }\n+\n+        return false;\n+    }\n+\n+    static class ExpectedError {\n+        private String errorMessage;\n+        private ScenarioSimulationI18nServerMessage serverMessage;\n+        private List<String> parameters;\n+\n+        public ExpectedError(String errorMessage) {\n+            this.errorMessage = errorMessage;\n+        }\n+\n+        public ExpectedError(ScenarioSimulationI18nServerMessage serverMessage, List<String> parameters) {\n+            this.serverMessage = serverMessage;\n+            this.parameters = parameters;\n+        }\n+\n+        public String getErrorMessage() {\n+            return errorMessage;\n+        }\n+\n+        public ScenarioSimulationI18nServerMessage getServerMessage() {\n+            return serverMessage;\n+        }\n+\n+        public List<String> getParameters() {\n+            return parameters;\n+        }\n+    }\n+}"
  },
  {
    "sha": "8ff72c78e06435c4b4228474fa88d0b1ee35ea47",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/DMNScenarioValidationTest.java",
    "status": "modified",
    "additions": 51,
    "deletions": 21,
    "changes": 72,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/DMNScenarioValidationTest.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/DMNScenarioValidationTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/DMNScenarioValidationTest.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -15,6 +15,7 @@\n  */\n package org.drools.workbench.screens.scenariosimulation.backend.server;\n \n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n@@ -29,6 +30,7 @@\n import org.drools.scenariosimulation.api.model.Settings;\n import org.drools.scenariosimulation.api.model.Simulation;\n import org.drools.workbench.screens.scenariosimulation.model.FactMappingValidationError;\n+import org.drools.workbench.screens.scenariosimulation.utils.ScenarioSimulationI18nServerMessage;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n@@ -38,19 +40,19 @@\n import org.kie.dmn.api.core.DMNType;\n import org.kie.dmn.api.core.ast.DecisionNode;\n import org.kie.dmn.core.impl.BaseDMNTypeImpl;\n+import org.kie.dmn.feel.lang.types.BuiltInType;\n+import org.kie.dmn.feel.runtime.UnaryTestImpl;\n import org.mockito.Mock;\n-import org.mockito.runners.MockitoJUnitRunner;\n+import org.mockito.junit.MockitoJUnitRunner;\n \n import static org.drools.scenariosimulation.api.utils.ConstantsHolder.VALUE;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertTrue;\n-import static org.mockito.Matchers.anyString;\n+import static org.mockito.ArgumentMatchers.anyString;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.spy;\n import static org.mockito.Mockito.when;\n \n @RunWith(MockitoJUnitRunner.class)\n-public class DMNScenarioValidationTest {\n+public class DMNScenarioValidationTest extends AbstractScenarioValidationTest {\n \n     @Mock\n     private DMNModel dmnModelMock;\n@@ -131,7 +133,7 @@ protected DMNModel getDMNModel(KieContainer kieContainer, String dmnPath) {\n         // parentFM is not valid anymore\n         parentFM.addExpressionElement(\"notExisting\", \"notExisting\");\n         errorsTest2 = validationSpy.validate(test2, settingsLocal, null);\n-        checkResult(errorsTest2, \"Impossible to find field 'notExisting' in type 'tPARENT'\");\n+        checkResult(errorsTest2, new ExpectedError(\"Impossible to find field 'notExisting' in type 'tPARENT'\"));\n \n         // nameWrongTypeFM has a wrong type\n         FactMapping nameWrongTypeFM = test2.getScesimModelDescriptor().addFactMapping(\n@@ -141,8 +143,42 @@ protected DMNModel getDMNModel(KieContainer kieContainer, String dmnPath) {\n         nameWrongTypeFM.addExpressionElement(\"name\", Integer.class.getCanonicalName());\n         errorsTest2 = validationSpy.validate(test2, settingsLocal, null);\n         checkResult(errorsTest2,\n-                    \"Impossible to find field 'notExisting' in type 'tPARENT'\",\n-                    \"Field type has changed: old 'java.lang.Integer', current 'tNAME'\");\n+                    new ExpectedError(\"Impossible to find field 'notExisting' in type 'tPARENT'\"),\n+                    new ExpectedError(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_CHANGED_ERROR, Arrays.asList(\"java.lang.Integer\", \"tNAME\")));\n+\n+        // color parameter - Constraint added for its type (string to tColor with allowed values)\n+        FactMapping colorsAddedConstraintFM = test2.getScesimModelDescriptor().addFactMapping(\n+                myComplexFactIdentifier,\n+                ExpressionIdentifier.create(\"parent3\", FactMappingType.GIVEN));\n+        colorsAddedConstraintFM.addExpressionElement(\"tMYCOMPLEXTYPE\", \"tMYCOMPLEXTYPE\");\n+        colorsAddedConstraintFM.addExpressionElement(\"color\", BuiltInType.STRING.getName());\n+\n+        createDMNType(\"myComplexType\", \"myComplexType\", \"color\");\n+        DMNType baseDMNType = initDMNType(BuiltInType.STRING);\n+        when(mapOfMockDecisions.get(\"myComplexType\").getResultType().getFields().get(\"color\").getAllowedValues()).thenReturn(Arrays.asList(new UnaryTestImpl(null, \"Value\")));\n+        when(mapOfMockDecisions.get(\"myComplexType\").getResultType().getFields().get(\"color\").getBaseType()).thenReturn(baseDMNType);\n+\n+        errorsTest2 = validationSpy.validate(test2, settingsLocal, null);\n+        checkResult(errorsTest2,\n+                    new ExpectedError(\"Impossible to find field 'notExisting' in type 'tPARENT'\"),\n+                    new ExpectedError(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_CHANGED_ERROR, Arrays.asList(\"java.lang.Integer\", \"tNAME\")),\n+                    new ExpectedError(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_ADDED_CONSTRAINT_ERROR, Collections.emptyList()));\n+\n+        // age parameter - Constraint removed for its type (tAge to numeric without allowed values)\n+        FactMapping ageConstraintFM = test2.getScesimModelDescriptor().addFactMapping(\n+                myComplexFactIdentifier,\n+                ExpressionIdentifier.create(\"parent4\", FactMappingType.GIVEN));\n+        ageConstraintFM.addExpressionElement(\"tMYCOMPLEXTYPE\", \"tMYCOMPLEXTYPE\");\n+        ageConstraintFM.addExpressionElement(\"age\", \"age\");\n+\n+        createDMNType(\"myComplexType\", \"myComplexType\", \"age\");\n+\n+        errorsTest2 = validationSpy.validate(test2, settingsLocal, null);\n+        checkResult(errorsTest2,\n+                    new ExpectedError(\"Impossible to find field 'notExisting' in type 'tPARENT'\"),\n+                    new ExpectedError(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_CHANGED_ERROR, Arrays.asList(\"java.lang.Integer\", \"tNAME\")),\n+                    new ExpectedError(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_ADDED_CONSTRAINT_ERROR, Collections.emptyList()),\n+                    new ExpectedError(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_REMOVED_CONSTRAINT_ERROR, Collections.emptyList()));\n \n         // Test 3 - list\n         Simulation test3 = new Simulation();\n@@ -179,19 +215,7 @@ protected DMNModel getDMNModel(KieContainer kieContainer, String dmnPath) {\n \n         when(dmnModelMock.getDecisionByName(anyString())).thenReturn(null);\n         List<FactMappingValidationError> errorsTest4 = validationSpy.validate(test4, settingsLocal, null);\n-        checkResult(errorsTest4, \"Node type has changed: old 'tMYSIMPLETYPE', current 'node not found'\");\n-    }\n-\n-    private void checkResult(List<FactMappingValidationError> validationErrors, String... expectedErrors) {\n-        if (expectedErrors.length == 0) {\n-            assertEquals(0, validationErrors.size());\n-        }\n-\n-        for (String expectedError : expectedErrors) {\n-            assertTrue(\"Expected error: '\" + expectedError + \"' not found\",\n-                       validationErrors.stream().anyMatch(\n-                               validationError -> Objects.equals(expectedError, validationError.getErrorMessage())));\n-        }\n+        checkResult(errorsTest4, new ExpectedError(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_NODE_CHANGED_ERROR, Arrays.asList(\"tMYSIMPLETYPE\", \"node not found\")));\n     }\n \n     private void createDMNType(String decisionName, String rootType, String... steps) {\n@@ -237,6 +261,12 @@ private DMNType initDMNType(String name) {\n         return dmnTypeMock;\n     }\n \n+    private DMNType initDMNType(BuiltInType type) {\n+        BaseDMNTypeImpl dmnTypeMock = mock(BaseDMNTypeImpl.class);\n+        when(dmnTypeMock.getFeelType()).thenReturn(type);\n+        return dmnTypeMock;\n+    }\n+\n     private String createDMNTypeName(String name) {\n         return \"t\" + name.toUpperCase();\n     }"
  },
  {
    "sha": "c388a070d3ee916906b0a6dd2d2056e26e75d44b",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/RULEScenarioValidationTest.java",
    "status": "modified",
    "additions": 8,
    "deletions": 20,
    "changes": 28,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/RULEScenarioValidationTest.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/RULEScenarioValidationTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-backend/src/test/java/org/drools/workbench/screens/scenariosimulation/backend/server/RULEScenarioValidationTest.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -15,9 +15,9 @@\n  */\n package org.drools.workbench.screens.scenariosimulation.backend.server;\n \n+import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Objects;\n \n import org.drools.scenariosimulation.api.model.ExpressionIdentifier;\n import org.drools.scenariosimulation.api.model.FactIdentifier;\n@@ -27,20 +27,19 @@\n import org.drools.scenariosimulation.api.model.Settings;\n import org.drools.scenariosimulation.api.model.Simulation;\n import org.drools.workbench.screens.scenariosimulation.model.FactMappingValidationError;\n+import org.drools.workbench.screens.scenariosimulation.utils.ScenarioSimulationI18nServerMessage;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.kie.api.runtime.KieContainer;\n import org.mockito.Mock;\n-import org.mockito.runners.MockitoJUnitRunner;\n+import org.mockito.junit.MockitoJUnitRunner;\n \n import static org.drools.scenariosimulation.api.utils.ConstantsHolder.VALUE;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertTrue;\n import static org.mockito.Mockito.when;\n \n @RunWith(MockitoJUnitRunner.class)\n-public class RULEScenarioValidationTest {\n+public class RULEScenarioValidationTest extends AbstractScenarioValidationTest {\n \n     @Mock\n     private KieContainer kieContainerMock;\n@@ -86,7 +85,7 @@ public void validate() {\n         mySimpleType.addExpressionElement(\"notValidClass\", \"notValidClass\");\n \n         errorsTest1 = validation.validate(test1, settingsLocal, kieContainerMock);\n-        checkResult(errorsTest1, \"Impossible to load class notValidClass\");\n+        checkResult(errorsTest1, new ExpectedError(\"Impossible to load class notValidClass\"));\n \n         // Test 2 - nested field\n         Simulation test2 = new Simulation();\n@@ -111,7 +110,7 @@ public void validate() {\n         // parentFM is not valid anymore\n         parentFM.addExpressionElement(\"notExisting\", String.class.getCanonicalName());\n         errorsTest2 = validation.validate(test2, settingsLocal, kieContainerMock);\n-        checkResult(errorsTest2, \"Impossible to find field with name 'notExisting' in class org.drools.workbench.screens.scenariosimulation.backend.server.SampleBean\");\n+        checkResult(errorsTest2, new ExpectedError(\"Impossible to find field with name 'notExisting' in class org.drools.workbench.screens.scenariosimulation.backend.server.SampleBean\"));\n \n         // nameWrongTypeFM has a wrong type\n         FactMapping nameWrongTypeFM = test2.getScesimModelDescriptor().addFactMapping(\n@@ -121,8 +120,8 @@ public void validate() {\n         nameWrongTypeFM.addExpressionElement(\"name\", Integer.class.getCanonicalName());\n         errorsTest2 = validation.validate(test2, settingsLocal, kieContainerMock);\n         checkResult(errorsTest2,\n-                    \"Impossible to find field with name 'notExisting' in class org.drools.workbench.screens.scenariosimulation.backend.server.SampleBean\",\n-                    \"Field type has changed: old 'java.lang.Integer', current 'java.lang.String'\");\n+                    new ExpectedError(\"Impossible to find field with name 'notExisting' in class org.drools.workbench.screens.scenariosimulation.backend.server.SampleBean\"),\n+                    new ExpectedError(ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_FIELD_CHANGED_ERROR, Arrays.asList(\"java.lang.Integer\", \"java.lang.String\")));\n \n         // Test 3 - list\n         Simulation test3 = new Simulation();\n@@ -145,15 +144,4 @@ public void validate() {\n         checkResult(errorsTest3);\n     }\n \n-    private void checkResult(List<FactMappingValidationError> validationErrors, String... expectedErrors) {\n-        if (expectedErrors.length == 0) {\n-            assertEquals(0, validationErrors.size());\n-        }\n-\n-        for (String expectedError : expectedErrors) {\n-            assertTrue(\"Expected error: '\" + expectedError + \"' not found\",\n-                       validationErrors.stream().anyMatch(\n-                               validationError -> Objects.equals(expectedError, validationError.getErrorMessage())));\n-        }\n-    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "9ad5e6e7c49c238aebf3b30034e24b2381a737fc",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/commands/ScenarioSimulationEventHandler.java",
    "status": "modified",
    "additions": 59,
    "deletions": 33,
    "changes": 92,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/commands/ScenarioSimulationEventHandler.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/commands/ScenarioSimulationEventHandler.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/commands/ScenarioSimulationEventHandler.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -405,44 +405,70 @@ public void onEvent(SetPropertyHeaderEvent event) {\n         context.getStatus().setClassName(event.getFactType());\n         context.getStatus().setPropertyNameElements(event.getPropertyNameElements());\n         context.getStatus().setValueClassName(event.getValueClassName());\n-        if (context.getAbstractScesimGridModelByGridWidget(event.getGridWidget()).isSelectedColumnEmpty()) {\n-            commonExecution(new SetPropertyHeaderCommand(event.getGridWidget(), event.getFactMappingValueType()), true);\n-        } else if (context.getAbstractScesimGridModelByGridWidget(event.getGridWidget()).isSameSelectedColumnProperty(event.getPropertyNameElements())) {\n+        if (isSameFactProperty(event.getGridWidget(), event.getPropertyNameElements()) &&\n+                isSameSelectedColumnType(event.getGridWidget(), event.getValueClassName())) {\n             return;\n-        } else if (context.getAbstractScesimGridModelByGridWidget(event.getGridWidget()).isSameSelectedColumnType(event.getValueClassName())) {\n-            org.uberfire.mvp.Command okDeleteCommand = () -> {\n-                context.getStatus().setKeepData(false);\n-                commonExecution(new SetPropertyHeaderCommand(event.getGridWidget(), event.getFactMappingValueType()), true);\n-            };\n-            org.uberfire.mvp.Command okPreserveCommand = () -> {\n-                context.getStatus().setKeepData(true);\n-                commonExecution(new SetPropertyHeaderCommand(event.getGridWidget(), event.getFactMappingValueType()), true);\n-            };\n-            preserveDeletePopupPresenter.show(ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioMainTitle(),\n-                                              ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioMainQuestion(),\n-                                              ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioText1(),\n-                                              ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioTextQuestion(),\n-                                              ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioTextOption1(),\n-                                              ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioTextOption2(),\n-                                              ScenarioSimulationEditorConstants.INSTANCE.preserveValues(),\n-                                              ScenarioSimulationEditorConstants.INSTANCE.deleteValues(),\n-                                              okPreserveCommand,\n-                                              okDeleteCommand);\n-        } else if (!context.getAbstractScesimGridModelByGridWidget(event.getGridWidget()).isSameSelectedColumnType(event.getValueClassName())) {\n-            org.uberfire.mvp.Command okPreserveCommand = () -> {\n-                context.getStatus().setKeepData(false);\n+        } else {\n+            if (isSelectedColumnEmpty(event.getGridWidget())) {\n                 commonExecution(new SetPropertyHeaderCommand(event.getGridWidget(), event.getFactMappingValueType()), true);\n-            };\n-            deletePopupPresenter.show(ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioMainTitle(),\n-                                      ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioMainQuestion(),\n-                                      ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioText1(),\n-                                      ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioTextQuestion(),\n-                                      ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioTextDanger(),\n-                                      ScenarioSimulationEditorConstants.INSTANCE.deleteValues(),\n-                                      okPreserveCommand);\n+            } else {\n+                if (!isSameFactProperty(event.getGridWidget(), event.getPropertyNameElements()) &&\n+                        !isSameSelectedColumnType(event.getGridWidget(), event.getValueClassName())) {\n+                    showDeletePopup(event);\n+                } else {\n+                    showPreserveDeletePopup(event);\n+                }\n+            }\n         }\n     }\n \n+    private boolean isSelectedColumnEmpty(GridWidget gridWidget) {\n+        return context.getAbstractScesimGridModelByGridWidget(gridWidget).isSelectedColumnEmpty();\n+    }\n+\n+    private boolean isSameFactProperty(GridWidget gridWidget, List<String> propertyNameElements) {\n+        return context.getAbstractScesimGridModelByGridWidget(gridWidget).isSameSelectedColumnProperty(propertyNameElements);\n+    }\n+\n+    private boolean isSameSelectedColumnType(GridWidget gridWidget, String valueTypeName) {\n+        return context.getAbstractScesimGridModelByGridWidget(gridWidget).isSameSelectedColumnType(valueTypeName);\n+    }\n+\n+    private void showDeletePopup(SetPropertyHeaderEvent event) {\n+        org.uberfire.mvp.Command okPreserveCommand = () -> {\n+            context.getStatus().setKeepData(false);\n+            commonExecution(new SetPropertyHeaderCommand(event.getGridWidget(), event.getFactMappingValueType()), true);\n+        };\n+        deletePopupPresenter.show(ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioMainTitle(),\n+                                  ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioMainQuestion(),\n+                                  ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioText1(),\n+                                  ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioTextQuestion(),\n+                                  null,\n+                                  ScenarioSimulationEditorConstants.INSTANCE.deleteValues(),\n+                                  okPreserveCommand);\n+    }\n+\n+    private void showPreserveDeletePopup(SetPropertyHeaderEvent event) {\n+        org.uberfire.mvp.Command okDeleteCommand = () -> {\n+            context.getStatus().setKeepData(false);\n+            commonExecution(new SetPropertyHeaderCommand(event.getGridWidget(), event.getFactMappingValueType()), true);\n+        };\n+        org.uberfire.mvp.Command okPreserveCommand = () -> {\n+            context.getStatus().setKeepData(true);\n+            commonExecution(new SetPropertyHeaderCommand(event.getGridWidget(), event.getFactMappingValueType()), true);\n+        };\n+        preserveDeletePopupPresenter.show(ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioMainTitle(),\n+                                          ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioMainQuestion(),\n+                                          ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioText1(),\n+                                          ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioTextQuestion(),\n+                                          ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioTextOption1(),\n+                                          ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioTextOption2(),\n+                                          ScenarioSimulationEditorConstants.INSTANCE.preserveValues(),\n+                                          ScenarioSimulationEditorConstants.INSTANCE.deleteValues(),\n+                                          okPreserveCommand,\n+                                          okDeleteCommand);\n+    }\n+\n     @Override\n     public void onEvent(UndoEvent event) {\n         final CommandResult<ScenarioSimulationViolation> status = scenarioCommandRegistryManager.undo(context);"
  },
  {
    "sha": "8f173a103c0592cfd5cc57b77fa68637a3f89650",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/editor/ScenarioSimulationEditorPresenter.java",
    "status": "modified",
    "additions": 4,
    "deletions": 1,
    "changes": 5,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/editor/ScenarioSimulationEditorPresenter.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/editor/ScenarioSimulationEditorPresenter.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/editor/ScenarioSimulationEditorPresenter.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -56,6 +56,7 @@\n import org.drools.workbench.screens.scenariosimulation.client.popup.CustomBusyPopup;\n import org.drools.workbench.screens.scenariosimulation.client.producers.AbstractScenarioSimulationProducer;\n import org.drools.workbench.screens.scenariosimulation.client.resources.i18n.ScenarioSimulationEditorConstants;\n+import org.drools.workbench.screens.scenariosimulation.client.resources.i18n.ScenarioSimulationEditorI18nServerManager;\n import org.drools.workbench.screens.scenariosimulation.client.rightpanel.CheatSheetView;\n import org.drools.workbench.screens.scenariosimulation.client.rightpanel.SettingsPresenter;\n import org.drools.workbench.screens.scenariosimulation.client.rightpanel.SettingsView;\n@@ -538,10 +539,12 @@ protected Command getValidateCommand() {\n                 StringBuilder errorMessage = new StringBuilder(ScenarioSimulationEditorConstants.INSTANCE.validationErrorMessage());\n                 errorMessage.append(\":<br/>\");\n                 for (FactMappingValidationError validationError : result) {\n+                    String message = validationError.getErrorMessage() != null ? validationError.getErrorMessage() :\n+                            ScenarioSimulationEditorI18nServerManager.retrieveMessage(validationError);\n                     errorMessage.append(\"<b>\");\n                     errorMessage.append(validationError.getErrorId());\n                     errorMessage.append(\"</b> - \");\n-                    errorMessage.append(validationError.getErrorMessage());\n+                    errorMessage.append(message);\n                     errorMessage.append(\"<br/>\");\n                 }\n "
  },
  {
    "sha": "0fc050784b1cfb45ac7d349826e8b869a9d96de3",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/events/SetPropertyHeaderEvent.java",
    "status": "modified",
    "additions": 1,
    "deletions": 5,
    "changes": 6,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/events/SetPropertyHeaderEvent.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/events/SetPropertyHeaderEvent.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/events/SetPropertyHeaderEvent.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -34,7 +34,7 @@\n     private final String factType;\n     private final List<String> propertyNameElements;\n     private final String valueClassName;\n-    private FactMappingValueType factMappingValueType;\n+    private final FactMappingValueType factMappingValueType;\n \n     /**\n      * Use this constructor to modify the <i>property</i> level header\n@@ -83,10 +83,6 @@ public FactMappingValueType getFactMappingValueType() {\n         return factMappingValueType;\n     }\n \n-    public void setFactMappingValueType(FactMappingValueType factMappingValueType) {\n-        this.factMappingValueType = factMappingValueType;\n-    }\n-\n     @Override\n     protected void dispatch(SetPropertyHeaderEventHandler handler) {\n         handler.onEvent(this);"
  },
  {
    "sha": "d6e612b158142a4007543c24bcf6b9d235466e4b",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/models/AbstractScesimGridModel.java",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/models/AbstractScesimGridModel.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/models/AbstractScesimGridModel.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/models/AbstractScesimGridModel.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -698,7 +698,8 @@ public boolean isSameSelectedColumnProperty(int columnIndex, List<String> proper\n         String propertyName = String.join(\".\", propertyNameElements);\n         ScesimModelDescriptor simulationDescriptor = abstractScesimModel.getScesimModelDescriptor();\n         final FactMapping factMappingByIndex = simulationDescriptor.getFactMappingByIndex(columnIndex);\n-        return factMappingByIndex.getExpressionAlias().equals(propertyName);\n+        String expressionElement = factMappingByIndex.getExpressionElements().stream().map(ExpressionElement::getStep).collect(Collectors.joining(\".\"));\n+        return Objects.equals(expressionElement, propertyName);\n     }\n \n     /**"
  },
  {
    "sha": "ba7eb688d649ffc4beb522f92b925595f2dabed3",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/popup/DeletePopupView.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/popup/DeletePopupView.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/popup/DeletePopupView.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/popup/DeletePopupView.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -39,7 +39,7 @@ public void show(final String mainTitleText,\n                      final String textDangerText,\n                      final String okDeleteButtonText,\n                      final Command okDeleteCommand) {\n-        textDanger.setInnerText(textDangerText);\n+        conditionalShow(textDanger, textDangerText);\n         super.show(mainTitleText, mainQuestionText, text1Text, textQuestionText,\n                    okDeleteButtonText,\n                    okDeleteCommand);"
  },
  {
    "sha": "3e6e2653b4c38711a206a216fad53da29b71b29f",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants.java",
    "status": "modified",
    "additions": 8,
    "deletions": 0,
    "changes": 8,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -435,4 +435,12 @@\n     String createLabelMapDescription();\n \n     String defineLabelMapDescription();\n+\n+    String scenarioValidationNodeChangedError(String oldType, String newType);\n+\n+    String scenarioValidationFieldChangedError(String oldType, String newType);\n+\n+    String scenarioValidationFieldAddedConstraintError();\n+\n+    String scenarioValidationFieldRemovedConstraintError();\n }"
  },
  {
    "sha": "ed7384a15690f131c4e8696a74f5ddf50e4d5dc8",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorI18nServerManager.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorI18nServerManager.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorI18nServerManager.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorI18nServerManager.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.drools.workbench.screens.scenariosimulation.client.resources.i18n;\n+\n+import org.drools.workbench.screens.scenariosimulation.model.FactMappingValidationError;\n+\n+public class ScenarioSimulationEditorI18nServerManager {\n+\n+    private ScenarioSimulationEditorI18nServerManager() {\n+        // Util Class\n+    }\n+\n+    public static String retrieveMessage(FactMappingValidationError error) {\n+        if (error != null && error.getServerMessage() != null) {\n+            switch (error.getServerMessage()) {\n+                case SCENARIO_VALIDATION_NODE_CHANGED_ERROR:\n+                    return ScenarioSimulationEditorConstants.INSTANCE.scenarioValidationNodeChangedError(error.getParameters()[0],\n+                                                                                                         error.getParameters()[1]);\n+                case SCENARIO_VALIDATION_FIELD_CHANGED_ERROR:\n+                    return ScenarioSimulationEditorConstants.INSTANCE.scenarioValidationFieldChangedError(error.getParameters()[0],\n+                                                                                                          error.getParameters()[1]);\n+                case SCENARIO_VALIDATION_FIELD_ADDED_CONSTRAINT_ERROR:\n+                    return ScenarioSimulationEditorConstants.INSTANCE.scenarioValidationFieldAddedConstraintError();\n+                case SCENARIO_VALIDATION_FIELD_REMOVED_CONSTRAINT_ERROR:\n+                    return ScenarioSimulationEditorConstants.INSTANCE.scenarioValidationFieldRemovedConstraintError();\n+            }\n+        }\n+        throw new IllegalArgumentException();\n+    }\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "77d9fb02954c82f82b29b598c65650a78f2e022f",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants.properties",
    "status": "modified",
    "additions": 6,
    "deletions": 1,
    "changes": 7,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants.properties",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants.properties",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants.properties?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -117,7 +117,7 @@ preserveDeleteScenarioMainQuestion=Preserve or delete scenario values?\n preserveDeleteScenarioText1=This column contains scenario input values that might not correspond with the test statement after this change.\n preserveDeleteScenarioTextQuestion=Select how you want to continue:\n preserveDeleteScenarioTextOption1=Preserve existing scenario values in this column.\n-preserveDeleteScenarioTextOption2=Delete all scenario values in this column. (This action cannot be undone.)\n+preserveDeleteScenarioTextOption2=Delete all scenario values in this column.\n preserveValues=Preserve Values\n # ChangeInstanceTypeConfirmPopup\n changeType=Change Type\n@@ -231,3 +231,8 @@ createLabelListDescription= - create a list using a guided form\n defineLabelListDescription= - define a list using an expression\n defineLabelMapDescription= - define a map using an expression\n createLabelMapDescription= - create a map using a guided form\n+\n+scenarioValidationNodeChangedError=Node type has changed: old ''{0}'', current ''{1}''\n+scenarioValidationFieldChangedError=Field type has changed: old ''{0}'', current ''{1}''\n+scenarioValidationFieldAddedConstraintError=A constraint has been added for this type. This requires to redefine its related column.\n+scenarioValidationFieldRemovedConstraintError=A constraint has been removed for this type. This requires to redefine its related column."
  },
  {
    "sha": "bcc89ff484bc118d17017b84721d7fcd01aa0b65",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_es.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_es.properties",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_es.properties",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_es.properties?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -113,7 +113,7 @@ preserveDeleteScenarioMainQuestion=¿Conservar o eliminar los valores del escena\n preserveDeleteScenarioText1=Esta columna contiene valores de entrada del escenario que podrían no corresponder con la declaración de prueba después de este cambio.\n preserveDeleteScenarioTextQuestion=Seleccionar cómo desea continuar:\n preserveDeleteScenarioTextOption1=Conservar los valores de los escenarios existentes en esta columna.\n-preserveDeleteScenarioTextOption2=Eliminar todos los valores del escenario en esta columna. (Esta acción no puede deshacerse.)\n+preserveDeleteScenarioTextOption2=Eliminar todos los valores del escenario en esta columna.\n preserveValues=Conservar los valores\n # ChangeInstanceTypeConfirmPopup\n changeType=Cambiar el tipo"
  },
  {
    "sha": "aa194fe35b2aae460634ada6003b89485feeddae",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_fr.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_fr.properties",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_fr.properties",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_fr.properties?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -113,7 +113,7 @@ preserveDeleteScenarioMainQuestion=Conserver ou supprimer les valeurs de scénar\n preserveDeleteScenarioText1=Cette colonne contient des valeurs d’entrée de scénario qui ne correspondront peut-être pas au rapport de test après cette modification.\n preserveDeleteScenarioTextQuestion=Sélectionnez la méthode que vous souhaitez appliquer :\n preserveDeleteScenarioTextOption1=Conserver les valeurs de scénario existantes dans cette colonne.\n-preserveDeleteScenarioTextOption2=Supprimer toutes les valeurs de scénario de cette colonne. (Cette action ne peut pas être annulée.)\n+preserveDeleteScenarioTextOption2=Supprimer toutes les valeurs de scénario de cette colonne.\n preserveValues=Conserver les valeurs\n # ChangeInstanceTypeConfirmPopup\n changeType=Changer de type"
  },
  {
    "sha": "571085a7e4cd00db946ae90c234beb38d497fa5e",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_ja.properties",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_ja.properties",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_ja.properties",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/main/resources/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorConstants_ja.properties?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -113,7 +113,7 @@ preserveDeleteScenarioMainQuestion=シナリオの値を保持または削除し\n preserveDeleteScenarioText1=この列には、この変更後にテストステートメントと一致しなくなる可能性のあるシナリオ入力値が含まれています。\n preserveDeleteScenarioTextQuestion=続行方法を選択してください:\n preserveDeleteScenarioTextOption1=この列の既存のシナリオ値を保持します。\n-preserveDeleteScenarioTextOption2=この列のすべてのシナリオ値を削除します。(このアクションは取り消せません。)\n+preserveDeleteScenarioTextOption2=この列のすべてのシナリオ値を削除します。\n preserveValues=値の保持\n # ChangeInstanceTypeConfirmPopup\n changeType=タイプの変更"
  },
  {
    "sha": "71b460594352abf7e86a6c37f55b3e1a461702c5",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/commands/ScenarioSimulationEventHandlerTest.java",
    "status": "modified",
    "additions": 89,
    "deletions": 13,
    "changes": 102,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/commands/ScenarioSimulationEventHandlerTest.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/commands/ScenarioSimulationEventHandlerTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/commands/ScenarioSimulationEventHandlerTest.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -104,12 +104,13 @@\n import static org.drools.workbench.screens.scenariosimulation.client.TestProperties.ROW_INDEX;\n import static org.drools.workbench.screens.scenariosimulation.client.TestProperties.VALUE_CLASS_NAME;\n import static org.junit.Assert.assertEquals;\n-import static org.mockito.Matchers.anyBoolean;\n-import static org.mockito.Matchers.anyListOf;\n-import static org.mockito.Matchers.anyObject;\n-import static org.mockito.Matchers.anyString;\n-import static org.mockito.Matchers.eq;\n-import static org.mockito.Matchers.isA;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyBoolean;\n+import static org.mockito.ArgumentMatchers.anyList;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.ArgumentMatchers.isA;\n+import static org.mockito.ArgumentMatchers.isNull;\n import static org.mockito.Mockito.doReturn;\n import static org.mockito.Mockito.mock;\n import static org.mockito.Mockito.never;\n@@ -239,7 +240,7 @@ public void setEventBus() {\n     @Test\n     public void unregisterHandlers() {\n         scenarioSimulationEventHandler.unregisterHandlers();\n-        verify(handlerRegistrationListMock, times(1)).forEach(anyObject());\n+        verify(handlerRegistrationListMock, times(1)).forEach(any());\n     }\n \n     @Test\n@@ -304,7 +305,7 @@ public void onImportEvent() {\n         ImportEvent event = new ImportEvent(GridWidget.SIMULATION);\n         scenarioSimulationEventHandler.onEvent(event);\n         verify(fileUploadPopupPresenterMock, times(1))\n-                .show(anyListOf(String.class),\n+                .show(anyList(),\n                       eq(ScenarioSimulationEditorConstants.INSTANCE.selectImportFile()),\n                       eq(ScenarioSimulationEditorConstants.INSTANCE.uploadWarning()),\n                       eq(ScenarioSimulationEditorConstants.INSTANCE.importLabel()),\n@@ -431,30 +432,56 @@ public void onSetPropertyHeaderEvent() {\n         SetPropertyHeaderEvent event = new SetPropertyHeaderEvent(GridWidget.SIMULATION, FULL_PACKAGE, CLASS_NAME, MULTIPART_VALUE_ELEMENTS, VALUE_CLASS_NAME, FactMappingValueType.NOT_EXPRESSION);\n         when(scenarioGridModelMock.getSelectedColumn()).thenReturn(null);\n         scenarioSimulationEventHandler.onEvent(event);\n+        verify(scenarioSimulationEventHandler, never()).onEvent(isA(ScenarioNotificationEvent.class));\n         verify(scenarioSimulationEventHandler, never()).commonExecution(isA(SetPropertyHeaderCommand.class), anyBoolean());\n+        verify(preserveDeletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any(), any() );\n+        verify(deletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any());\n         //\n         doReturn(gridColumnMock).when(scenarioGridModelMock).getSelectedColumn();\n         when(scenarioGridModelMock.isAlreadyAssignedProperty(MULTIPART_VALUE_ELEMENTS)).thenReturn(true);\n         scenarioSimulationEventHandler.onEvent(event);\n         verify(scenarioSimulationEventHandler, times(1)).onEvent(isA(ScenarioNotificationEvent.class));\n         verify(scenarioSimulationEventHandler, never()).commonExecution(isA(SetPropertyHeaderCommand.class), anyBoolean());\n+        verify(preserveDeletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any(), any() );\n+        verify(deletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any());\n         //\n         reset(scenarioSimulationEventHandler);\n         when(scenarioGridModelMock.isAlreadyAssignedProperty(MULTIPART_VALUE_ELEMENTS)).thenReturn(false);\n         when(scenarioGridModelMock.isSelectedColumnEmpty()).thenReturn(true);\n         scenarioSimulationEventHandler.onEvent(event);\n         verify(scenarioSimulationEventHandler, never()).onEvent(isA(ScenarioNotificationEvent.class));\n-        verify(scenarioSimulationEventHandler).commonExecution(isA(SetPropertyHeaderCommand.class), eq(true));\n+        verify(scenarioSimulationEventHandler, never()).commonExecution(isA(SetPropertyHeaderCommand.class), anyBoolean());\n+        verify(preserveDeletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any(), any() );\n+        verify(deletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any());\n         //\n         reset(scenarioSimulationEventHandler);\n+        when(scenarioGridModelMock.isAlreadyAssignedProperty(MULTIPART_VALUE_ELEMENTS)).thenReturn(false);\n         when(scenarioGridModelMock.isSelectedColumnEmpty()).thenReturn(false);\n-        when(scenarioGridModelMock.isSameSelectedColumnProperty(anyListOf(String.class))).thenReturn(true);\n         scenarioSimulationEventHandler.onEvent(event);\n+        verify(scenarioSimulationEventHandler, never()).onEvent(isA(ScenarioNotificationEvent.class));\n         verify(scenarioSimulationEventHandler, never()).commonExecution(isA(SetPropertyHeaderCommand.class), anyBoolean());\n+        verify(preserveDeletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any(), any() );\n+        verify(deletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any());\n         //\n-        when(scenarioGridModelMock.isSameSelectedColumnProperty(anyListOf(String.class))).thenReturn(false);\n+        reset(scenarioSimulationEventHandler);\n+        when(scenarioGridModelMock.isAlreadyAssignedProperty(MULTIPART_VALUE_ELEMENTS)).thenReturn(false);\n+        when(scenarioGridModelMock.isSelectedColumnEmpty()).thenReturn(true);\n+        when(scenarioGridModelMock.isSameSelectedColumnProperty(anyList())).thenReturn(false);\n+        when(scenarioGridModelMock.isSameSelectedColumnType(anyString())).thenReturn(true);\n+        scenarioSimulationEventHandler.onEvent(event);\n+        verify(scenarioSimulationEventHandler, never()).onEvent(isA(ScenarioNotificationEvent.class));\n+        verify(scenarioSimulationEventHandler, times(1)).commonExecution(isA(SetPropertyHeaderCommand.class), eq(true));\n+        verify(preserveDeletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any(), any() );\n+        verify(deletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any());\n+        //\n+        reset(scenarioSimulationEventHandler);\n+        when(scenarioGridModelMock.isAlreadyAssignedProperty(MULTIPART_VALUE_ELEMENTS)).thenReturn(false);\n+        when(scenarioGridModelMock.isSelectedColumnEmpty()).thenReturn(false);\n+        when(scenarioGridModelMock.isSameSelectedColumnProperty(anyList())).thenReturn(false);\n         when(scenarioGridModelMock.isSameSelectedColumnType(anyString())).thenReturn(true);\n         scenarioSimulationEventHandler.onEvent(event);\n+        verify(scenarioSimulationEventHandler, never()).onEvent(isA(ScenarioNotificationEvent.class));\n+        verify(scenarioSimulationEventHandler, never()).commonExecution(isA(SetPropertyHeaderCommand.class), anyBoolean());\n         verify(preserveDeletePopupPresenterMock, times(1))\n                 .show(eq(ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioMainTitle()),\n                       eq(ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioMainQuestion()),\n@@ -466,19 +493,68 @@ public void onSetPropertyHeaderEvent() {\n                       eq(ScenarioSimulationEditorConstants.INSTANCE.deleteValues()),\n                       isA(org.uberfire.mvp.Command.class),\n                       isA(org.uberfire.mvp.Command.class));\n+        verify(deletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any());\n+        //\n+        reset(scenarioSimulationEventHandler, preserveDeletePopupPresenterMock);\n+        when(scenarioGridModelMock.isAlreadyAssignedProperty(MULTIPART_VALUE_ELEMENTS)).thenReturn(false);\n+        when(scenarioGridModelMock.isSelectedColumnEmpty()).thenReturn(true);\n+        when(scenarioGridModelMock.isSameSelectedColumnProperty(anyList())).thenReturn(true);\n+        when(scenarioGridModelMock.isSameSelectedColumnType(anyString())).thenReturn(false);\n+        scenarioSimulationEventHandler.onEvent(event);\n+        verify(scenarioSimulationEventHandler, never()).onEvent(isA(ScenarioNotificationEvent.class));\n+        verify(scenarioSimulationEventHandler, times(1)).commonExecution(isA(SetPropertyHeaderCommand.class), eq(true));\n+        verify(preserveDeletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any(), any() );\n+        verify(deletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any());\n+        //\n+        reset(scenarioSimulationEventHandler);\n+        when(scenarioGridModelMock.isAlreadyAssignedProperty(MULTIPART_VALUE_ELEMENTS)).thenReturn(false);\n+        when(scenarioGridModelMock.isSelectedColumnEmpty()).thenReturn(false);\n+        when(scenarioGridModelMock.isSameSelectedColumnProperty(anyList())).thenReturn(true);\n+        when(scenarioGridModelMock.isSameSelectedColumnType(anyString())).thenReturn(false);\n+        scenarioSimulationEventHandler.onEvent(event);\n+        verify(scenarioSimulationEventHandler, never()).onEvent(isA(ScenarioNotificationEvent.class));\n         verify(scenarioSimulationEventHandler, never()).commonExecution(isA(SetPropertyHeaderCommand.class), anyBoolean());\n+        verify(preserveDeletePopupPresenterMock, times(1))\n+                .show(eq(ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioMainTitle()),\n+                      eq(ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioMainQuestion()),\n+                      eq(ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioText1()),\n+                      eq(ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioTextQuestion()),\n+                      eq(ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioTextOption1()),\n+                      eq(ScenarioSimulationEditorConstants.INSTANCE.preserveDeleteScenarioTextOption2()),\n+                      eq(ScenarioSimulationEditorConstants.INSTANCE.preserveValues()),\n+                      eq(ScenarioSimulationEditorConstants.INSTANCE.deleteValues()),\n+                      isA(org.uberfire.mvp.Command.class),\n+                      isA(org.uberfire.mvp.Command.class));\n+        verify(deletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any());\n         //\n+        reset(scenarioSimulationEventHandler, preserveDeletePopupPresenterMock);\n+        when(scenarioGridModelMock.isAlreadyAssignedProperty(MULTIPART_VALUE_ELEMENTS)).thenReturn(false);\n+        when(scenarioGridModelMock.isSelectedColumnEmpty()).thenReturn(true);\n+        when(scenarioGridModelMock.isSameSelectedColumnProperty(anyList())).thenReturn(false);\n         when(scenarioGridModelMock.isSameSelectedColumnType(anyString())).thenReturn(false);\n         scenarioSimulationEventHandler.onEvent(event);\n+        verify(scenarioSimulationEventHandler, never()).onEvent(isA(ScenarioNotificationEvent.class));\n+        verify(scenarioSimulationEventHandler, times(1)).commonExecution(isA(SetPropertyHeaderCommand.class), eq(true));\n+        verify(preserveDeletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any(), any() );\n+        verify(deletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any());\n+        //\n+        reset(scenarioSimulationEventHandler);\n+        when(scenarioGridModelMock.isAlreadyAssignedProperty(MULTIPART_VALUE_ELEMENTS)).thenReturn(false);\n+        when(scenarioGridModelMock.isSelectedColumnEmpty()).thenReturn(false);\n+        when(scenarioGridModelMock.isSameSelectedColumnProperty(anyList())).thenReturn(false);\n+        when(scenarioGridModelMock.isSameSelectedColumnType(anyString())).thenReturn(false);\n+        scenarioSimulationEventHandler.onEvent(event);\n+        verify(scenarioSimulationEventHandler, never()).onEvent(isA(ScenarioNotificationEvent.class));\n+        verify(scenarioSimulationEventHandler, never()).commonExecution(isA(SetPropertyHeaderCommand.class), anyBoolean());\n+        verify(preserveDeletePopupPresenterMock, never()).show(anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), anyString(), any(), any() );\n         verify(deletePopupPresenterMock, times(1))\n                 .show(eq(ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioMainTitle()),\n                       eq(ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioMainQuestion()),\n                       eq(ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioText1()),\n                       eq(ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioTextQuestion()),\n-                      eq(ScenarioSimulationEditorConstants.INSTANCE.deleteScenarioTextDanger()),\n+                      isNull(),\n                       eq(ScenarioSimulationEditorConstants.INSTANCE.deleteValues()),\n                       isA(org.uberfire.mvp.Command.class));\n-        verify(scenarioSimulationEventHandler, never()).commonExecution(isA(SetPropertyHeaderCommand.class), anyBoolean());\n     }\n \n     @Test"
  },
  {
    "sha": "781f59161b873475653023db6efa40b82adf67f4",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/editor/ScenarioSimulationEditorPresenterTest.java",
    "status": "modified",
    "additions": 6,
    "deletions": 0,
    "changes": 6,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/editor/ScenarioSimulationEditorPresenterTest.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/editor/ScenarioSimulationEditorPresenterTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/editor/ScenarioSimulationEditorPresenterTest.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -48,13 +48,15 @@\n import org.drools.workbench.screens.scenariosimulation.client.handlers.ScenarioSimulationHasBusyIndicatorDefaultErrorCallback;\n import org.drools.workbench.screens.scenariosimulation.client.popup.ConfirmPopupPresenter;\n import org.drools.workbench.screens.scenariosimulation.client.producers.AbstractScenarioSimulationProducer;\n+import org.drools.workbench.screens.scenariosimulation.client.resources.i18n.ScenarioSimulationEditorConstants;\n import org.drools.workbench.screens.scenariosimulation.client.rightpanel.CheatSheetPresenter;\n import org.drools.workbench.screens.scenariosimulation.client.rightpanel.SettingsPresenter;\n import org.drools.workbench.screens.scenariosimulation.client.rightpanel.TestToolsPresenter;\n import org.drools.workbench.screens.scenariosimulation.client.rightpanel.TestToolsView;\n import org.drools.workbench.screens.scenariosimulation.client.type.ScenarioSimulationResourceType;\n import org.drools.workbench.screens.scenariosimulation.model.FactMappingValidationError;\n import org.drools.workbench.screens.scenariosimulation.model.SimulationRunResult;\n+import org.drools.workbench.screens.scenariosimulation.utils.ScenarioSimulationI18nServerMessage;\n import org.guvnor.common.services.shared.test.TestResultMessage;\n import org.jboss.errai.common.client.api.ErrorCallback;\n import org.jboss.errai.common.client.api.RemoteCallback;\n@@ -698,10 +700,14 @@ public void getValidationCallback() {\n \n         String errorMessage = \"errorMessage\";\n         String errorId = \"errorId\";\n+        String errorId2 = \"errorId2\";\n         validationErrors.add(new FactMappingValidationError(errorId, errorMessage));\n+        validationErrors.add(new FactMappingValidationError(\"errorId2\", ScenarioSimulationI18nServerMessage.SCENARIO_VALIDATION_NODE_CHANGED_ERROR, \"p1\", \"p2\"));\n         presenterSpy.getValidationCallback().callback(validationErrors);\n         verify(confirmPopupPresenterMock, times(1)).show(anyString(), contains(errorId));\n         verify(confirmPopupPresenterMock, times(1)).show(anyString(), contains(errorMessage));\n+        verify(confirmPopupPresenterMock, times(1)).show(anyString(), contains(errorId2));\n+        verify(confirmPopupPresenterMock, times(1)).show(anyString(), contains(ScenarioSimulationEditorConstants.INSTANCE.scenarioValidationNodeChangedError(\"p1\", \"p2\")));\n     }\n \n     @Test"
  },
  {
    "sha": "3d364208230adad18831e7412fcc9bd0d12225ee",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/models/AbstractScesimGridModelTest.java",
    "status": "modified",
    "additions": 17,
    "deletions": 10,
    "changes": 27,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/models/AbstractScesimGridModelTest.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/models/AbstractScesimGridModelTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/models/AbstractScesimGridModelTest.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -16,6 +16,7 @@\n \n package org.drools.workbench.screens.scenariosimulation.client.models;\n \n+import java.util.Arrays;\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n@@ -24,6 +25,7 @@\n \n import com.ait.lienzo.test.LienzoMockitoTestRunner;\n import org.drools.scenariosimulation.api.model.AbstractScesimData;\n+import org.drools.scenariosimulation.api.model.ExpressionElement;\n import org.drools.scenariosimulation.api.model.ExpressionIdentifier;\n import org.drools.scenariosimulation.api.model.FactIdentifier;\n import org.drools.scenariosimulation.api.model.FactMapping;\n@@ -66,15 +68,16 @@\n import static org.drools.workbench.screens.scenariosimulation.client.TestProperties.ROW_INDEX;\n import static org.drools.workbench.screens.scenariosimulation.client.TestProperties.VALUE_CLASS_NAME;\n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertSame;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n-import static org.mockito.Matchers.any;\n-import static org.mockito.Matchers.anyDouble;\n-import static org.mockito.Matchers.anyInt;\n-import static org.mockito.Matchers.eq;\n-import static org.mockito.Matchers.isA;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyDouble;\n+import static org.mockito.ArgumentMatchers.anyInt;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.ArgumentMatchers.isA;\n import static org.mockito.Mockito.atLeast;\n import static org.mockito.Mockito.doNothing;\n import static org.mockito.Mockito.doReturn;\n@@ -467,11 +470,6 @@ public void commonAddColumn() {\n         verify(abstractScesimGridModelSpy, times(0)).checkSimulation();\n     }\n \n-    @Test\n-    public void commonAddRow() {\n-        abstractScesimGridModelSpy.commonAddRow(ROW_INDEX);\n-    }\n-\n     @Test\n     public void updateIndexColumn() {\n         abstractScesimGridModelSpy.updateIndexColumn();\n@@ -740,4 +738,13 @@ public void destroyAllTextAreaDOMElementFactoryResources() {\n         verify(scenarioExpressionCellTextAreaSingletonDOMElementFactorySpy, times(1)).destroyResources();\n         verify(scenarioHeaderTextBoxSingletonDOMElementFactorySpy, times(1)).destroyResources();\n     }\n+\n+    @Test\n+    public void isSameSelectedColumnProperty() {\n+        List<ExpressionElement> expressionList = Arrays.asList(new ExpressionElement(\"Fact\"), new ExpressionElement(\"property\"));\n+        when(factMappingMock.getExpressionElements()).thenReturn(expressionList);\n+        assertTrue(abstractScesimGridModelSpy.isSameSelectedColumnProperty(1, Arrays.asList(\"Fact\", \"property\")));\n+        assertFalse(abstractScesimGridModelSpy.isSameSelectedColumnProperty(1, Arrays.asList(\"Fact\", \"property2\")));\n+        assertFalse(abstractScesimGridModelSpy.isSameSelectedColumnProperty(1, Arrays.asList(\"property2\")));\n+    }\n }\n\\ No newline at end of file"
  },
  {
    "sha": "4ec09eacd1200c886e12d00f9533b285284f96ab",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/popup/DeletePopupViewTest.java",
    "status": "modified",
    "additions": 1,
    "deletions": 2,
    "changes": 3,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/popup/DeletePopupViewTest.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/popup/DeletePopupViewTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/popup/DeletePopupViewTest.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -29,7 +29,6 @@\n import static org.drools.workbench.screens.scenariosimulation.client.TestProperties.TEXT1_TEXT;\n import static org.drools.workbench.screens.scenariosimulation.client.TestProperties.TEXT_DANGER_TEXT;\n import static org.drools.workbench.screens.scenariosimulation.client.TestProperties.TEXT_QUESTION_TEXT;\n-import static org.mockito.Matchers.eq;\n import static org.mockito.Mockito.spy;\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.verify;\n@@ -71,7 +70,7 @@ public void show() {\n                    MAIN_QUESTION_TEXT,\n                    TEXT1_TEXT,\n                    TEXT_QUESTION_TEXT);\n-        verify(textDangerMock, times(1)).setInnerText(eq(TEXT_DANGER_TEXT));\n+        verify(((DeletePopupView) popupView), times(1)).conditionalShow(textDangerMock, TEXT_DANGER_TEXT);\n     }\n \n }\n\\ No newline at end of file"
  },
  {
    "sha": "e6919409ed73f269469f183091d9f72fee28a62c",
    "filename": "drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorI18nServerManagerTest.java",
    "status": "added",
    "additions": 88,
    "deletions": 0,
    "changes": 88,
    "blob_url": "https://github.com/kiegroup/drools-wb/blob/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorI18nServerManagerTest.java",
    "raw_url": "https://github.com/kiegroup/drools-wb/raw/3c7ca6918026e3b10ebc1a5c5313e183b2faecbb/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorI18nServerManagerTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/drools-wb/contents/drools-wb-screens/drools-wb-scenario-simulation-editor/drools-wb-scenario-simulation-editor-client/src/test/java/org/drools/workbench/screens/scenariosimulation/client/resources/i18n/ScenarioSimulationEditorI18nServerManagerTest.java?ref=3c7ca6918026e3b10ebc1a5c5313e183b2faecbb",
    "patch": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.drools.workbench.screens.scenariosimulation.client.resources.i18n;\n+\n+import com.google.gwtmockito.GwtMockitoTestRunner;\n+import org.drools.scenariosimulation.api.model.ExpressionIdentifier;\n+import org.drools.scenariosimulation.api.model.FactIdentifier;\n+import org.drools.scenariosimulation.api.model.FactMapping;\n+import org.drools.scenariosimulation.api.model.FactMappingType;\n+import org.drools.workbench.screens.scenariosimulation.model.FactMappingValidationError;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.drools.scenariosimulation.api.utils.ConstantsHolder.VALUE;\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(GwtMockitoTestRunner.class)\n+public class ScenarioSimulationEditorI18nServerManagerTest {\n+\n+    private FactMapping factMapping;\n+\n+    @Before\n+    public void setup() {\n+        factMapping = new FactMapping(FactIdentifier.create(\"myType\", \"tMYTYPE\"),\n+                                      ExpressionIdentifier.create(VALUE, FactMappingType.GIVEN));\n+        factMapping.setFactAlias(\"FactAlias\");\n+        factMapping.setExpressionAlias(\"ExpressionAlias\");\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void retrieveMessageNullParameter() {\n+        ScenarioSimulationEditorI18nServerManager.retrieveMessage(null);\n+    }\n+\n+    @Test(expected = IllegalArgumentException.class)\n+    public void retrieveMessageNullServerMessage() {\n+        ScenarioSimulationEditorI18nServerManager.retrieveMessage(FactMappingValidationError.createGenericError(factMapping, \"error\"));\n+    }\n+\n+    @Test\n+    public void retrieveMessageFieldAddedConstraint() {\n+        FactMappingValidationError error = FactMappingValidationError.createFieldAddedConstraintError(factMapping);\n+        String message = ScenarioSimulationEditorI18nServerManager.retrieveMessage(error);\n+        String expected = ScenarioSimulationEditorConstants.INSTANCE.scenarioValidationFieldAddedConstraintError();\n+        assertEquals(expected, message);\n+    }\n+\n+    @Test\n+    public void retrieveMessageFieldRemovedConstraint() {\n+        FactMappingValidationError error = FactMappingValidationError.createFieldRemovedConstraintError(factMapping);\n+        String message = ScenarioSimulationEditorI18nServerManager.retrieveMessage(error);\n+        String expected = ScenarioSimulationEditorConstants.INSTANCE.scenarioValidationFieldRemovedConstraintError();\n+        assertEquals(expected, message);\n+    }\n+\n+    @Test\n+    public void retrieveMessageFieldChangedError() {\n+        String newType = \"newType\";\n+        FactMappingValidationError error = FactMappingValidationError.createFieldChangedError(factMapping, newType);\n+        String message = ScenarioSimulationEditorI18nServerManager.retrieveMessage(error);\n+        String expected = ScenarioSimulationEditorConstants.INSTANCE.scenarioValidationFieldChangedError(\"tMYTYPE\", newType);\n+        assertEquals(expected, message);\n+    }\n+\n+    @Test\n+    public void retrieveMessageNodeChangedError() {\n+        String newType = \"newType\";\n+        FactMappingValidationError error = FactMappingValidationError.createNodeChangedError(factMapping, newType);\n+        String message = ScenarioSimulationEditorI18nServerManager.retrieveMessage(error);\n+        String expected = ScenarioSimulationEditorConstants.INSTANCE.scenarioValidationNodeChangedError(\"tMYTYPE\", newType);\n+        assertEquals(expected, message);\n+    }\n+}"
  }
]
