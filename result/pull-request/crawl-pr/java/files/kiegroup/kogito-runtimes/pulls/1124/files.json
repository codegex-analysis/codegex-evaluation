[
  {
    "sha": "c62a04445a306a6468629584eb3b2daa813244d3",
    "filename": "addons/events/knative-eventing-addon/src/main/java/org/kie/kogito/events/knative/ce/extensions/KogitoProcessExtension.java",
    "status": "modified",
    "additions": 43,
    "deletions": 39,
    "changes": 82,
    "blob_url": "https://github.com/kiegroup/kogito-runtimes/blob/4727da1628abf73d3e78424c5c157c1cbdf3533a/addons/events/knative-eventing-addon/src/main/java/org/kie/kogito/events/knative/ce/extensions/KogitoProcessExtension.java",
    "raw_url": "https://github.com/kiegroup/kogito-runtimes/raw/4727da1628abf73d3e78424c5c157c1cbdf3533a/addons/events/knative-eventing-addon/src/main/java/org/kie/kogito/events/knative/ce/extensions/KogitoProcessExtension.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-runtimes/contents/addons/events/knative-eventing-addon/src/main/java/org/kie/kogito/events/knative/ce/extensions/KogitoProcessExtension.java?ref=4727da1628abf73d3e78424c5c157c1cbdf3533a",
    "patch": "@@ -22,7 +22,7 @@\n import java.util.Objects;\n import java.util.Set;\n \n-import org.kie.kogito.services.event.impl.ProcessInstanceEventBody;\n+import org.kie.kogito.event.CloudEventExtensionConstants;\n \n import io.cloudevents.CloudEventExtensions;\n import io.cloudevents.Extension;\n@@ -34,25 +34,17 @@\n  */\n public class KogitoProcessExtension implements Extension {\n \n-    // these keys don't have the period cause CloudEvents serialized on JSON won't have them\n-\n-    public static final String PROCESS_INSTANCE_ID = ProcessInstanceEventBody.PROCESS_ID_META_DATA.replace(\".\", \"\");\n-    public static final String ROOT_PROCESS_INSTANCE_ID = ProcessInstanceEventBody.ROOT_PROCESS_ID_META_DATA.replace(\".\", \"\");\n-    public static final String ROOT_PROCESS_ID = ProcessInstanceEventBody.ROOT_PROCESS_ID_META_DATA.replace(\".\", \"\");\n-    public static final String PROCESS_INSTANCE_STATE = ProcessInstanceEventBody.STATE_META_DATA.replace(\".\", \"\");\n-    public static final String PROCESS_ID = \"kogitoprocessid\";\n-    public static final String ADDONS = \"kogitoaddons\";\n-    public static final String PARENT_PROCESS_INSTANCE_ID = \"kogitoparentprocessinstanceid\";\n-    public static final String REF_ID = \"kogitoreferenceid\";\n     static final Set<String> ALL_KEYS = new HashSet<>(\n             Arrays.asList(\n-                    PROCESS_INSTANCE_ID,\n-                    ROOT_PROCESS_INSTANCE_ID,\n-                    PROCESS_ID,\n-                    ROOT_PROCESS_ID,\n-                    ADDONS,\n-                    PARENT_PROCESS_INSTANCE_ID,\n-                    PROCESS_INSTANCE_STATE, REF_ID));\n+                    CloudEventExtensionConstants.PROCESS_INSTANCE_ID,\n+                    CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_INSTANCE_ID,\n+                    CloudEventExtensionConstants.PROCESS_ID,\n+                    CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_ID,\n+                    CloudEventExtensionConstants.ADDONS,\n+                    CloudEventExtensionConstants.PROCESS_PARENT_PROCESS_INSTANCE_ID,\n+                    CloudEventExtensionConstants.PROCESS_INSTANCE_STATE,\n+                    CloudEventExtensionConstants.PROCESS_REFERENCE_ID,\n+                    CloudEventExtensionConstants.PROCESS_START_FROM_NODE));\n \n     private final Map<String, Object> innerValues;\n     private String kogitoProcessInstanceId;\n@@ -63,6 +55,7 @@\n     private String kogitoParentProcessinstanceId;\n     private String kogitoProcessInstanceState;\n     private String kogitoReferenceId;\n+    private String kogitoStartFromNode;\n \n     public KogitoProcessExtension() {\n         this.innerValues = new HashMap<>();\n@@ -74,7 +67,7 @@ public String getKogitoProcessInstanceId() {\n \n     public void setKogitoProcessInstanceId(String kogitoProcessInstanceId) {\n         this.kogitoProcessInstanceId = kogitoProcessInstanceId;\n-        this.innerValues.put(PROCESS_INSTANCE_ID, this.kogitoProcessInstanceId);\n+        this.innerValues.put(CloudEventExtensionConstants.PROCESS_INSTANCE_ID, this.kogitoProcessInstanceId);\n     }\n \n     public String getKogitoRootProcessInstanceId() {\n@@ -83,7 +76,7 @@ public String getKogitoRootProcessInstanceId() {\n \n     public void setKogitoRootProcessInstanceId(String kogitoRootProcessInstanceId) {\n         this.kogitoRootProcessInstanceId = kogitoRootProcessInstanceId;\n-        this.innerValues.put(ROOT_PROCESS_INSTANCE_ID, this.kogitoRootProcessInstanceId);\n+        this.innerValues.put(CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_INSTANCE_ID, this.kogitoRootProcessInstanceId);\n     }\n \n     public String getKogitoProcessId() {\n@@ -92,7 +85,7 @@ public String getKogitoProcessId() {\n \n     public void setKogitoProcessId(String kogitoProcessId) {\n         this.kogitoProcessId = kogitoProcessId;\n-        this.innerValues.put(PROCESS_ID, this.kogitoProcessId);\n+        this.innerValues.put(CloudEventExtensionConstants.PROCESS_ID, this.kogitoProcessId);\n     }\n \n     public String getKogitoRootProcessId() {\n@@ -101,7 +94,7 @@ public String getKogitoRootProcessId() {\n \n     public void setKogitoRootProcessId(String kogitoRootProcessId) {\n         this.kogitoRootProcessId = kogitoRootProcessId;\n-        this.innerValues.put(ROOT_PROCESS_ID, this.kogitoRootProcessId);\n+        this.innerValues.put(CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_ID, this.kogitoRootProcessId);\n     }\n \n     public String getKogitoAddons() {\n@@ -110,7 +103,7 @@ public String getKogitoAddons() {\n \n     public void setKogitoAddons(String kogitoAddons) {\n         this.kogitoAddons = kogitoAddons;\n-        this.innerValues.put(ADDONS, this.kogitoAddons);\n+        this.innerValues.put(CloudEventExtensionConstants.ADDONS, this.kogitoAddons);\n     }\n \n     public String getKogitoParentProcessinstanceId() {\n@@ -119,7 +112,7 @@ public String getKogitoParentProcessinstanceId() {\n \n     public void setKogitoParentProcessinstanceId(String kogitoParentProcessinstanceId) {\n         this.kogitoParentProcessinstanceId = kogitoParentProcessinstanceId;\n-        this.innerValues.put(PARENT_PROCESS_INSTANCE_ID, this.kogitoParentProcessinstanceId);\n+        this.innerValues.put(CloudEventExtensionConstants.PROCESS_PARENT_PROCESS_INSTANCE_ID, this.kogitoParentProcessinstanceId);\n     }\n \n     public String getKogitoProcessInstanceState() {\n@@ -128,7 +121,7 @@ public String getKogitoProcessInstanceState() {\n \n     public void setKogitoProcessInstanceState(String kogitoProcessInstanceState) {\n         this.kogitoProcessInstanceState = kogitoProcessInstanceState;\n-        this.innerValues.put(PROCESS_INSTANCE_STATE, this.kogitoProcessInstanceState);\n+        this.innerValues.put(CloudEventExtensionConstants.PROCESS_INSTANCE_STATE, this.kogitoProcessInstanceState);\n     }\n \n     public String getKogitoReferenceId() {\n@@ -137,19 +130,29 @@ public String getKogitoReferenceId() {\n \n     public void setKogitoReferenceId(String kogitoReferenceId) {\n         this.kogitoReferenceId = kogitoReferenceId;\n-        this.innerValues.put(REF_ID, this.kogitoReferenceId);\n+        this.innerValues.put(CloudEventExtensionConstants.PROCESS_REFERENCE_ID, this.kogitoReferenceId);\n+    }\n+\n+    public String getKogitoStartFromNode() {\n+        return kogitoStartFromNode;\n+    }\n+\n+    public void setKogitoStartFromNode(String kogitoStartFromNode) {\n+        this.kogitoStartFromNode = kogitoStartFromNode;\n+        this.innerValues.put(CloudEventExtensionConstants.PROCESS_START_FROM_NODE, this.kogitoStartFromNode);\n     }\n \n     @Override\n     public void readFrom(CloudEventExtensions extensions) {\n-        this.setKogitoAddons(getExtension(extensions, ADDONS));\n-        this.setKogitoParentProcessinstanceId(getExtension(extensions, PARENT_PROCESS_INSTANCE_ID));\n-        this.setKogitoProcessId(getExtension(extensions, PROCESS_ID));\n-        this.setKogitoProcessInstanceId(getExtension(extensions, PROCESS_INSTANCE_ID));\n-        this.setKogitoProcessInstanceState(getExtension(extensions, PROCESS_INSTANCE_STATE));\n-        this.setKogitoReferenceId(getExtension(extensions, REF_ID));\n-        this.setKogitoRootProcessId(getExtension(extensions, ROOT_PROCESS_ID));\n-        this.setKogitoRootProcessInstanceId(getExtension(extensions, ROOT_PROCESS_INSTANCE_ID));\n+        this.setKogitoAddons(getExtension(extensions, CloudEventExtensionConstants.ADDONS));\n+        this.setKogitoParentProcessinstanceId(getExtension(extensions, CloudEventExtensionConstants.PROCESS_PARENT_PROCESS_INSTANCE_ID));\n+        this.setKogitoProcessId(getExtension(extensions, CloudEventExtensionConstants.PROCESS_ID));\n+        this.setKogitoProcessInstanceId(getExtension(extensions, CloudEventExtensionConstants.PROCESS_INSTANCE_ID));\n+        this.setKogitoProcessInstanceState(getExtension(extensions, CloudEventExtensionConstants.PROCESS_INSTANCE_STATE));\n+        this.setKogitoReferenceId(getExtension(extensions, CloudEventExtensionConstants.PROCESS_REFERENCE_ID));\n+        this.setKogitoRootProcessId(getExtension(extensions, CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_ID));\n+        this.setKogitoRootProcessInstanceId(getExtension(extensions, CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_INSTANCE_ID));\n+        this.setKogitoStartFromNode(getExtension(extensions, CloudEventExtensionConstants.PROCESS_START_FROM_NODE));\n     }\n \n     private String getExtension(CloudEventExtensions extensions, String key) {\n@@ -185,21 +188,22 @@ public boolean equals(Object o) {\n                 Objects.equals(kogitoAddons, that.kogitoAddons) &&\n                 Objects.equals(kogitoParentProcessinstanceId, that.kogitoParentProcessinstanceId) &&\n                 Objects.equals(kogitoProcessInstanceState, that.kogitoProcessInstanceState) &&\n-                Objects.equals(kogitoReferenceId, that.kogitoReferenceId);\n+                Objects.equals(kogitoReferenceId, that.kogitoReferenceId) &&\n+                Objects.equals(kogitoStartFromNode, that.kogitoStartFromNode);\n     }\n \n     @Override\n     public int hashCode() {\n         return Objects.hash(kogitoProcessInstanceId, kogitoRootProcessInstanceId, kogitoProcessId, kogitoRootProcessId, kogitoAddons, kogitoParentProcessinstanceId, kogitoProcessInstanceState,\n-                kogitoReferenceId);\n+                kogitoReferenceId, kogitoStartFromNode);\n     }\n \n     @Override\n     public String toString() {\n         return \"KogitoProcessExtension{\" +\n-                \"kogitoProcessinstanceId='\" + kogitoProcessInstanceId + '\\'' +\n-                \", kogitoProcessId='\" + kogitoProcessId + '\\'' +\n-                \", kogitoReferenceId='\" + kogitoReferenceId + '\\'' +\n+                \"procInstanceId='\" + kogitoProcessInstanceId + '\\'' +\n+                \", processId='\" + kogitoProcessId + '\\'' +\n+                \", referenceId='\" + kogitoReferenceId + '\\'' +\n                 '}';\n     }\n }"
  },
  {
    "sha": "d3f6b18c4e3149796f97d299a106774db4ee51d1",
    "filename": "addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/CloudEventConverterTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 2,
    "changes": 5,
    "blob_url": "https://github.com/kiegroup/kogito-runtimes/blob/4727da1628abf73d3e78424c5c157c1cbdf3533a/addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/CloudEventConverterTest.java",
    "raw_url": "https://github.com/kiegroup/kogito-runtimes/raw/4727da1628abf73d3e78424c5c157c1cbdf3533a/addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/CloudEventConverterTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-runtimes/contents/addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/CloudEventConverterTest.java?ref=4727da1628abf73d3e78424c5c157c1cbdf3533a",
    "patch": "@@ -20,6 +20,7 @@\n import java.util.UUID;\n \n import org.junit.jupiter.api.Test;\n+import org.kie.kogito.event.CloudEventExtensionConstants;\n import org.kie.kogito.services.event.AbstractProcessDataEvent;\n \n import com.fasterxml.jackson.databind.ObjectMapper;\n@@ -91,7 +92,7 @@ void verifyDataEventCloudEventConversion() throws IOException {\n     void verifyDataEventWithProcessDataCloudEventConversion() throws IOException {\n         // this is a typical HTTP post message\n         final String messageJson = \"{\\n\" +\n-                \"  \\\"kogitoReferenceId\\\": \\\"12345\\\",\\n\" +\n+                \"  \\\"\" + CloudEventExtensionConstants.PROCESS_REFERENCE_ID + \"\\\": \\\"12345\\\",\\n\" +\n                 \"  \\\"specversion\\\": \\\"0.3\\\",\\n\" +\n                 \"  \\\"id\\\": \\\"21627e26-31eb-43e7-8343-92a696fd96b1\\\",\\n\" +\n                 \"  \\\"source\\\": \\\"/process/instance/12345\\\",\\n\" +\n@@ -112,7 +113,7 @@ void verifyDataEventWithProcessDataCloudEventConversion() throws IOException {\n         final String convertedEvent = new String(objectMapper.writeValueAsBytes(event));\n         assertThat(convertedEvent)\n                 .contains(\"jan.kowalski@example.com\")\n-                .contains(\"kogitoReferenceId\")\n+                .contains(CloudEventExtensionConstants.PROCESS_REFERENCE_ID)\n                 .contains(\"12345\");\n     }\n "
  },
  {
    "sha": "60a6e7bacdefafe9ea8b23958c6eb90e39520b7a",
    "filename": "addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/extensions/KogitoProcessExtensionTest.java",
    "status": "modified",
    "additions": 11,
    "deletions": 10,
    "changes": 21,
    "blob_url": "https://github.com/kiegroup/kogito-runtimes/blob/4727da1628abf73d3e78424c5c157c1cbdf3533a/addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/extensions/KogitoProcessExtensionTest.java",
    "raw_url": "https://github.com/kiegroup/kogito-runtimes/raw/4727da1628abf73d3e78424c5c157c1cbdf3533a/addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/extensions/KogitoProcessExtensionTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-runtimes/contents/addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/extensions/KogitoProcessExtensionTest.java?ref=4727da1628abf73d3e78424c5c157c1cbdf3533a",
    "patch": "@@ -20,6 +20,7 @@\n \n import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n+import org.kie.kogito.event.CloudEventExtensionConstants;\n \n import io.cloudevents.CloudEvent;\n import io.cloudevents.core.builder.CloudEventBuilder;\n@@ -38,14 +39,14 @@ static void setupTest() {\n     void verifyKogitoExtensionCanBeRead() {\n         final KogitoProcessExtension kpe = new KogitoProcessExtension();\n         kpe.readFrom(getExampleCloudEvent());\n-        assertThat(kpe.getValue(KogitoProcessExtension.REF_ID)).isNotNull().isInstanceOf(String.class).isEqualTo(\"12345\");\n-        assertThat(kpe.getValue(KogitoProcessExtension.PROCESS_ID)).isNotNull().isInstanceOf(String.class).isEqualTo(\"super_process\");\n-        assertThat((String) kpe.getValue(KogitoProcessExtension.PROCESS_INSTANCE_ID)).isBlank();\n-        assertThat((String) kpe.getValue(KogitoProcessExtension.PROCESS_INSTANCE_STATE)).isBlank();\n-        assertThat((String) kpe.getValue(KogitoProcessExtension.ROOT_PROCESS_INSTANCE_ID)).isBlank();\n-        assertThat((String) kpe.getValue(KogitoProcessExtension.ROOT_PROCESS_ID)).isBlank();\n-        assertThat((String) kpe.getValue(KogitoProcessExtension.PARENT_PROCESS_INSTANCE_ID)).isBlank();\n-        assertThat((String) kpe.getValue(KogitoProcessExtension.ADDONS)).isBlank();\n+        assertThat(kpe.getValue(CloudEventExtensionConstants.PROCESS_REFERENCE_ID)).isNotNull().isInstanceOf(String.class).isEqualTo(\"12345\");\n+        assertThat(kpe.getValue(CloudEventExtensionConstants.PROCESS_ID)).isNotNull().isInstanceOf(String.class).isEqualTo(\"super_process\");\n+        assertThat((String) kpe.getValue(CloudEventExtensionConstants.PROCESS_INSTANCE_ID)).isBlank();\n+        assertThat((String) kpe.getValue(CloudEventExtensionConstants.PROCESS_INSTANCE_STATE)).isBlank();\n+        assertThat((String) kpe.getValue(CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_INSTANCE_ID)).isBlank();\n+        assertThat((String) kpe.getValue(CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_ID)).isBlank();\n+        assertThat((String) kpe.getValue(CloudEventExtensionConstants.PROCESS_PARENT_PROCESS_INSTANCE_ID)).isBlank();\n+        assertThat((String) kpe.getValue(CloudEventExtensionConstants.ADDONS)).isBlank();\n     }\n \n     @Test\n@@ -60,8 +61,8 @@ private CloudEvent getExampleCloudEvent() {\n                 .withType(\"example.demo\")\n                 .withSource(URI.create(\"http://example.com\"))\n                 .withData(\"application/json\", \"{}\".getBytes())\n-                .withExtension(KogitoProcessExtension.REF_ID, \"12345\")\n-                .withExtension(KogitoProcessExtension.PROCESS_ID, \"super_process\")\n+                .withExtension(CloudEventExtensionConstants.PROCESS_REFERENCE_ID, \"12345\")\n+                .withExtension(CloudEventExtensionConstants.PROCESS_ID, \"super_process\")\n                 .build();\n     }\n }"
  },
  {
    "sha": "d9aab834385f4537a0473cea31779a8e8ff0387f",
    "filename": "addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/http/CloudEventListenerResourceTest.java",
    "status": "modified",
    "additions": 12,
    "deletions": 15,
    "changes": 27,
    "blob_url": "https://github.com/kiegroup/kogito-runtimes/blob/4727da1628abf73d3e78424c5c157c1cbdf3533a/addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/http/CloudEventListenerResourceTest.java",
    "raw_url": "https://github.com/kiegroup/kogito-runtimes/raw/4727da1628abf73d3e78424c5c157c1cbdf3533a/addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/http/CloudEventListenerResourceTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-runtimes/contents/addons/events/knative-eventing-addon/src/test/java/org/kie/kogito/events/knative/ce/http/CloudEventListenerResourceTest.java?ref=4727da1628abf73d3e78424c5c157c1cbdf3533a",
    "patch": "@@ -15,8 +15,6 @@\n  */\n package org.kie.kogito.events.knative.ce.http;\n \n-import java.io.IOException;\n-import java.net.URISyntaxException;\n import java.nio.charset.StandardCharsets;\n import java.util.UUID;\n \n@@ -26,6 +24,7 @@\n \n import org.hamcrest.Matchers;\n import org.junit.jupiter.api.Test;\n+import org.kie.kogito.event.CloudEventExtensionConstants;\n \n import io.cloudevents.jackson.JsonFormat;\n import io.quarkus.test.junit.QuarkusTest;\n@@ -51,7 +50,7 @@ void verifyHttpRequestUnsupportedMediaType() {\n                 .header(\"ce-source\", \"/from/unit/test\")\n                 .header(\"ce-specversion\", \"1.0\")\n                 .header(\"ce-id\", UUID.randomUUID().toString())\n-                .header(\"ce-kogitoReferenceId\", \"12345\")\n+                .header(\"ce-\" + CloudEventExtensionConstants.PROCESS_REFERENCE_ID, \"12345\")\n                 .header(HttpHeaders.CONTENT_TYPE, MediaType.TEXT_PLAIN)\n                 .post(\"/\")\n                 .then()\n@@ -67,17 +66,17 @@ void verifyHttpRequestWithJSONPayloadExpectsString() {\n                 .header(\"ce-source\", source)\n                 .header(\"ce-specversion\", \"1.0\")\n                 .header(\"ce-id\", UUID.randomUUID().toString())\n-                .header(\"ce-kogitoReferenceId\", \"12345\")\n+                .header(\"ce-\" + CloudEventExtensionConstants.PROCESS_REFERENCE_ID, \"12345\")\n                 .header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON)\n                 .post(\"/\")\n                 .then()\n                 .statusCode(Response.Status.OK.getStatusCode())\n                 .body(Matchers.equalTo(\"{ \\\"message\\\": \\\"Hola Mundo!\\\" }\"))\n-                .header(\"ce-kogitoreferenceid\", \"12345\");\n+                .header(\"ce-\" + CloudEventExtensionConstants.PROCESS_REFERENCE_ID, \"12345\");\n     }\n \n     @Test\n-    void verifyHttpRequestWithJSONPayloadExpectsPOJO() throws URISyntaxException, IOException {\n+    void verifyHttpRequestWithJSONPayloadExpectsPOJO() {\n         final String source = \"/from/unit/test\";\n \n         Message msg = given()\n@@ -87,7 +86,7 @@ void verifyHttpRequestWithJSONPayloadExpectsPOJO() throws URISyntaxException, IO\n                 .header(\"ce-source\", source)\n                 .header(\"ce-specversion\", \"1.0\")\n                 .header(\"ce-id\", UUID.randomUUID().toString())\n-                .header(\"ce-kogitoReferenceId\", \"12345\")\n+                .header(\"ce-\" + CloudEventExtensionConstants.PROCESS_REFERENCE_ID, \"12345\")\n                 .header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON)\n                 .post(\"/\")\n                 .then()\n@@ -99,23 +98,21 @@ void verifyHttpRequestWithJSONPayloadExpectsPOJO() throws URISyntaxException, IO\n     }\n \n     @Test\n-    void verifyHttpRequestWithCEPayloadExpectsPOJO() throws URISyntaxException, IOException {\n+    void verifyHttpRequestWithCEPayloadExpectsPOJO() {\n         final String source = \"/from/unit/test\";\n-\n-        final Message msg = given().when()\n-                .body(\"{\\\"kogitoReferenceId\\\":\\\"12345!\\\", \\\"data\\\":{\\\"message\\\":\\\"Hi World!\\\"},\\\"id\\\":\\\"x10\\\",\\\"source\\\":\\\"/from/unit/test\\\",\\\"specversion\\\":\\\"1.0\\\",\\\"type\\\":\\\"myevent\\\",\\\"datacontenttype\\\":\\\"application/json\\\"}\")\n+        given().when()\n+                .body(\"{\\\"\" + CloudEventExtensionConstants.PROCESS_REFERENCE_ID\n+                        + \"\\\":\\\"12345!\\\", \\\"data\\\":{\\\"message\\\":\\\"Hi World!\\\"},\\\"id\\\":\\\"x10\\\",\\\"source\\\":\\\"/from/unit/test\\\",\\\"specversion\\\":\\\"1.0\\\",\\\"type\\\":\\\"myevent\\\",\\\"datacontenttype\\\":\\\"application/json\\\"}\")\n                 .contentType(MediaType.valueOf(JsonFormat.CONTENT_TYPE).withCharset(StandardCharsets.UTF_8.name()).toString())\n                 .post(\"/\")\n                 .then()\n                 .statusCode(Response.Status.OK.getStatusCode())\n                 .header(\"ce-source\", source)\n-                .header(\"ce-kogitoReferenceId\", \"12345!\")\n-                .extract().body().as(Message.class);\n-\n+                .header(\"ce-\" + CloudEventExtensionConstants.PROCESS_REFERENCE_ID, \"12345!\");\n     }\n \n     @Test\n-    void verifyHttpRequestWithCEPayloadExpectsString() throws URISyntaxException, IOException {\n+    void verifyHttpRequestWithCEPayloadExpectsString() {\n         final String source = \"/from/unit/test\";\n         final Message msg = given().when()\n                 .body(\"{\\\"data\\\":{\\\"message\\\":\\\"Hi World!\\\"},\\\"id\\\":\\\"x10\\\",\\\"source\\\":\\\"/from/unit/test\\\",\\\"specversion\\\":\\\"1.0\\\",\\\"type\\\":\\\"myevent\\\",\\\"datacontenttype\\\":\\\"application/json\\\"}\")"
  },
  {
    "sha": "623265d324e5d160d85c4063a8ed49ca7edcf522",
    "filename": "api/kogito-events-api/pom.xml",
    "status": "modified",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/kiegroup/kogito-runtimes/blob/4727da1628abf73d3e78424c5c157c1cbdf3533a/api/kogito-events-api/pom.xml",
    "raw_url": "https://github.com/kiegroup/kogito-runtimes/raw/4727da1628abf73d3e78424c5c157c1cbdf3533a/api/kogito-events-api/pom.xml",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-runtimes/contents/api/kogito-events-api/pom.xml?ref=4727da1628abf73d3e78424c5c157c1cbdf3533a",
    "patch": "@@ -28,6 +28,18 @@\n       <groupId>org.reactivestreams</groupId>\n       <artifactId>reactive-streams</artifactId>\n     </dependency>\n+\n+    <!-- Tests -->\n+    <dependency>\n+      <groupId>org.junit.jupiter</groupId>\n+      <artifactId>junit-jupiter-engine</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.assertj</groupId>\n+      <artifactId>assertj-core</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n \n </project>"
  },
  {
    "sha": "ed0d29a507fc9e721140750f4ae0bdda32371289",
    "filename": "api/kogito-events-api/src/main/java/org/kie/kogito/event/AbstractDataEvent.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/kiegroup/kogito-runtimes/blob/4727da1628abf73d3e78424c5c157c1cbdf3533a/api/kogito-events-api/src/main/java/org/kie/kogito/event/AbstractDataEvent.java",
    "raw_url": "https://github.com/kiegroup/kogito-runtimes/raw/4727da1628abf73d3e78424c5c157c1cbdf3533a/api/kogito-events-api/src/main/java/org/kie/kogito/event/AbstractDataEvent.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-runtimes/contents/api/kogito-events-api/src/main/java/org/kie/kogito/event/AbstractDataEvent.java?ref=4727da1628abf73d3e78424c5c157c1cbdf3533a",
    "patch": "@@ -65,13 +65,22 @@\n \n     private T data;\n \n+    @JsonProperty(CloudEventExtensionConstants.PROCESS_INSTANCE_ID)\n     private String kogitoProcessinstanceId;\n+\n     @JsonInclude(JsonInclude.Include.NON_EMPTY)\n+    @JsonProperty(CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_INSTANCE_ID)\n     private String kogitoRootProcessinstanceId;\n+\n+    @JsonProperty(CloudEventExtensionConstants.PROCESS_ID)\n     private String kogitoProcessId;\n+\n     @JsonInclude(JsonInclude.Include.NON_EMPTY)\n+    @JsonProperty(CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_ID)\n     private String kogitoRootProcessId;\n+\n     @JsonInclude(JsonInclude.Include.NON_EMPTY)\n+    @JsonProperty(CloudEventExtensionConstants.ADDONS)\n     private String kogitoAddons;\n \n     public AbstractDataEvent() {"
  },
  {
    "sha": "34c29086aa40ece7e9b32267aa219023187225b2",
    "filename": "api/kogito-events-api/src/main/java/org/kie/kogito/event/CloudEventExtensionConstants.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/kiegroup/kogito-runtimes/blob/4727da1628abf73d3e78424c5c157c1cbdf3533a/api/kogito-events-api/src/main/java/org/kie/kogito/event/CloudEventExtensionConstants.java",
    "raw_url": "https://github.com/kiegroup/kogito-runtimes/raw/4727da1628abf73d3e78424c5c157c1cbdf3533a/api/kogito-events-api/src/main/java/org/kie/kogito/event/CloudEventExtensionConstants.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-runtimes/contents/api/kogito-events-api/src/main/java/org/kie/kogito/event/CloudEventExtensionConstants.java?ref=4727da1628abf73d3e78424c5c157c1cbdf3533a",
    "patch": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.event;\n+\n+/**\n+ * Includes all naming required for Kogito CloudEvent constants.\n+ * Must respect the required naming from the CloudEvent Specification.\n+ *\n+ * @see <a href=\"https://github.com/cloudevents/spec/blob/v1.0.1/spec.md#attribute-naming-convention\">Attribute Naming Convention</a>\n+ */\n+public final class CloudEventExtensionConstants {\n+\n+    public static final String PROCESS_INSTANCE_ID = \"kogitoprocinstanceid\";\n+    public static final String PROCESS_REFERENCE_ID = \"kogitoprocrefid\";\n+    public static final String PROCESS_INSTANCE_STATE = \"kogitoprocist\";\n+    public static final String PROCESS_ID = \"kogitoprocid\";\n+    public static final String PROCESS_PARENT_PROCESS_INSTANCE_ID = \"kogitoparentprociid\";\n+    public static final String PROCESS_ROOT_PROCESS_INSTANCE_ID = \"kogitorootprociid\";\n+    public static final String PROCESS_ROOT_PROCESS_ID = \"kogitorootprocid\";\n+    public static final String PROCESS_START_FROM_NODE = \"kogitoprocstartfrom\";\n+    public static final String ADDONS = \"kogitoaddons\";\n+\n+    private CloudEventExtensionConstants() {\n+        // utility class\n+    }\n+\n+}"
  },
  {
    "sha": "44b209e5e127c46c85d64082bd5b57e7e8b3bf8f",
    "filename": "api/kogito-events-api/src/test/java/org/kie/kogito/event/CloudEventExtensionConstantsTest.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/kiegroup/kogito-runtimes/blob/4727da1628abf73d3e78424c5c157c1cbdf3533a/api/kogito-events-api/src/test/java/org/kie/kogito/event/CloudEventExtensionConstantsTest.java",
    "raw_url": "https://github.com/kiegroup/kogito-runtimes/raw/4727da1628abf73d3e78424c5c157c1cbdf3533a/api/kogito-events-api/src/test/java/org/kie/kogito/event/CloudEventExtensionConstantsTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-runtimes/contents/api/kogito-events-api/src/test/java/org/kie/kogito/event/CloudEventExtensionConstantsTest.java?ref=4727da1628abf73d3e78424c5c157c1cbdf3533a",
    "patch": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2021 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.kie.kogito.event;\n+\n+import java.util.regex.Pattern;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+class CloudEventExtensionConstantsTest {\n+\n+    @Test\n+    void verifyKeysNamingConvention() {\n+        final Pattern nameValidation = Pattern.compile(\"^[a-z0-9]{1,20}$\");\n+        assertThat(CloudEventExtensionConstants.ADDONS).matches(nameValidation);\n+        assertThat(CloudEventExtensionConstants.PROCESS_ID).matches(nameValidation);\n+        assertThat(CloudEventExtensionConstants.PROCESS_PARENT_PROCESS_INSTANCE_ID).matches(nameValidation);\n+        assertThat(CloudEventExtensionConstants.PROCESS_INSTANCE_ID).matches(nameValidation);\n+        assertThat(CloudEventExtensionConstants.PROCESS_INSTANCE_STATE).matches(nameValidation);\n+        assertThat(CloudEventExtensionConstants.PROCESS_REFERENCE_ID).matches(nameValidation);\n+        assertThat(CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_ID).matches(nameValidation);\n+        assertThat(CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_INSTANCE_ID).matches(nameValidation);\n+        assertThat(CloudEventExtensionConstants.PROCESS_START_FROM_NODE).matches(nameValidation);\n+    }\n+\n+}\n\\ No newline at end of file"
  },
  {
    "sha": "b5500d972113abf6781e2d70cf78912878d763b9",
    "filename": "api/kogito-services/src/main/java/org/kie/kogito/services/event/AbstractProcessDataEvent.java",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/kiegroup/kogito-runtimes/blob/4727da1628abf73d3e78424c5c157c1cbdf3533a/api/kogito-services/src/main/java/org/kie/kogito/services/event/AbstractProcessDataEvent.java",
    "raw_url": "https://github.com/kiegroup/kogito-runtimes/raw/4727da1628abf73d3e78424c5c157c1cbdf3533a/api/kogito-services/src/main/java/org/kie/kogito/services/event/AbstractProcessDataEvent.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-runtimes/contents/api/kogito-services/src/main/java/org/kie/kogito/services/event/AbstractProcessDataEvent.java?ref=4727da1628abf73d3e78424c5c157c1cbdf3533a",
    "patch": "@@ -16,17 +16,26 @@\n package org.kie.kogito.services.event;\n \n import org.kie.kogito.event.AbstractDataEvent;\n+import org.kie.kogito.event.CloudEventExtensionConstants;\n \n import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n \n public abstract class AbstractProcessDataEvent<T> extends AbstractDataEvent<T> {\n \n+    @JsonProperty(CloudEventExtensionConstants.PROCESS_PARENT_PROCESS_INSTANCE_ID)\n     @JsonInclude(JsonInclude.Include.NON_EMPTY)\n     protected String kogitoParentProcessinstanceId;\n+\n+    @JsonProperty(CloudEventExtensionConstants.PROCESS_ROOT_PROCESS_ID)\n     @JsonInclude(JsonInclude.Include.NON_EMPTY)\n     protected String kogitoProcessinstanceState;\n+\n+    @JsonProperty(CloudEventExtensionConstants.PROCESS_REFERENCE_ID)\n     @JsonInclude(JsonInclude.Include.NON_EMPTY)\n     protected String kogitoReferenceId;\n+\n+    @JsonProperty(CloudEventExtensionConstants.PROCESS_START_FROM_NODE)\n     @JsonInclude(JsonInclude.Include.NON_EMPTY)\n     protected String kogitoStartFromNode;\n "
  },
  {
    "sha": "bdcea920d5f7f1e117edf060c1cde049af749fe5",
    "filename": "jbpm/jbpm-flow/src/test/java/org/kie/kogito/event/impl/EventImplTest.java",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/kiegroup/kogito-runtimes/blob/4727da1628abf73d3e78424c5c157c1cbdf3533a/jbpm/jbpm-flow/src/test/java/org/kie/kogito/event/impl/EventImplTest.java",
    "raw_url": "https://github.com/kiegroup/kogito-runtimes/raw/4727da1628abf73d3e78424c5c157c1cbdf3533a/jbpm/jbpm-flow/src/test/java/org/kie/kogito/event/impl/EventImplTest.java",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-runtimes/contents/jbpm/jbpm-flow/src/test/java/org/kie/kogito/event/impl/EventImplTest.java?ref=4727da1628abf73d3e78424c5c157c1cbdf3533a",
    "patch": "@@ -24,6 +24,7 @@\n import org.junit.jupiter.api.Test;\n import org.kie.kogito.Application;\n import org.kie.kogito.Model;\n+import org.kie.kogito.event.CloudEventExtensionConstants;\n import org.kie.kogito.process.Process;\n import org.kie.kogito.process.ProcessInstance;\n import org.kie.kogito.process.ProcessInstances;\n@@ -137,8 +138,8 @@ void testSigCloudEvent() {\n                 \"\\\"source\\\": \\\"\\\",\" +\n                 \"\\\"type\\\": \\\"dummyTopic\\\",\" +\n                 \"\\\"time\\\": \\\"2019-10-01T12:02:23.812262+02:00[Europe/Warsaw]\\\",\" +\n-                \"\\\"kogitoReferenceId\\\": \\\"1\\\",\" +\n-                \"\\\"kogitoProcessinstanceId\\\": \\\"1\\\",\" +\n+                \"\\\"\" + CloudEventExtensionConstants.PROCESS_REFERENCE_ID + \"\\\": \\\"1\\\",\" +\n+                \"\\\"\" + CloudEventExtensionConstants.PROCESS_INSTANCE_ID + \"\\\": \\\"1\\\",\" +\n                 \"\\\"data\\\": {\\\"dummyField\\\" : \\\"pepe\\\"}}\";\n \n         consumer.consume(application, process, payload, trigger);\n@@ -159,7 +160,7 @@ void testCloudEvent() {\n                 \"\\\"source\\\": \\\"\\\",\" +\n                 \"\\\"type\\\": \\\"dummyTopic\\\",\" +\n                 \"\\\"time\\\": \\\"2019-10-01T12:02:23.812262+02:00[Europe/Warsaw]\\\",\" +\n-                \"\\\"kogitoProcessinstanceId\\\": \\\"1\\\",\" +\n+                \"\\\"\" + CloudEventExtensionConstants.PROCESS_INSTANCE_ID + \"\\\": \\\"1\\\",\" +\n                 \"\\\"data\\\": {\\\"dummyField\\\" : \\\"pepe\\\"}}\";\n \n         consumer.consume(application, process, payload, trigger);\n@@ -189,7 +190,7 @@ void testCloudEventMarshaller() {\n         DummyEvent dataEvent = new DummyEvent(\"pepe\");\n         String jsonString = marshaller.marshall(dataEvent, DummyCloudEvent::new, Optional.empty());\n         assertTrue(jsonString.contains(\"\\\"dummyField\\\":\\\"pepe\\\"\"));\n-        assertTrue(jsonString.contains(\"\\\"kogitoProcessinstanceId\\\":\\\"1\\\"\"));\n+        assertTrue(jsonString.contains(\"\\\"\" + CloudEventExtensionConstants.PROCESS_INSTANCE_ID + \"\\\":\\\"1\\\"\"));\n     }\n \n     @Test"
  },
  {
    "sha": "bcd40a4cbd6483d72efa134c835ace57fa8c316c",
    "filename": "kogito-ide-config/src/main/resources/eclipse.importorder",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/kiegroup/kogito-runtimes/blob/4727da1628abf73d3e78424c5c157c1cbdf3533a/kogito-ide-config/src/main/resources/eclipse.importorder",
    "raw_url": "https://github.com/kiegroup/kogito-runtimes/raw/4727da1628abf73d3e78424c5c157c1cbdf3533a/kogito-ide-config/src/main/resources/eclipse.importorder",
    "contents_url": "https://api.github.com/repos/kiegroup/kogito-runtimes/contents/kogito-ide-config/src/main/resources/eclipse.importorder?ref=4727da1628abf73d3e78424c5c157c1cbdf3533a",
    "patch": "@@ -4,4 +4,5 @@\n 1=javax\n 2=org\n 3=com\n-4=#\n\\ No newline at end of file\n+4=io\n+5=#\n\\ No newline at end of file"
  }
]
