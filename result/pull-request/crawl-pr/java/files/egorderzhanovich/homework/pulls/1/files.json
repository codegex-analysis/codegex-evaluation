[
  {
    "sha": "a28835ef33f887c585aeccca0d814785533097fb",
    "filename": "src/HM/main/Main.java",
    "status": "modified",
    "additions": 19,
    "deletions": 7,
    "changes": 26,
    "blob_url": "https://github.com/egorderzhanovich/homework/blob/4325c17b70cd58d6e0b2b754f798395b08398b29/src/HM/main/Main.java",
    "raw_url": "https://github.com/egorderzhanovich/homework/raw/4325c17b70cd58d6e0b2b754f798395b08398b29/src/HM/main/Main.java",
    "contents_url": "https://api.github.com/repos/egorderzhanovich/homework/contents/src/HM/main/Main.java?ref=4325c17b70cd58d6e0b2b754f798395b08398b29",
    "patch": "@@ -1,12 +1,22 @@\n package HM.main;\n \n-import HM.arrays.ArraysHM;\n-import HM.arrays.Contidional;\n-import HM.arrays.Loops;\n+import HM.marchTwelve.ArraysH;\n+import HM.marchTwelve.Loops;\n+import HM.marchTwelve.Recursion;\n \n public class Main {\n     public static void main(String[] args) {\n-        ArraysHM arr = new ArraysHM();\n+\n+       /* Loops l = new Loops();\n+        l.totalPath();\n+        l.findAmountOfAmeba();\n+        l.sumOfEvenNumbers();\n+        ArraysH a = new ArraysH();\n+        a.createArrays();\n+        Recursion r = new Recursion();\n+        r.recursion(1,2);\n+*/\n+      /*  ArraysHM arr = new ArraysHM();\n \n \n        /*     //Создать и заполнить массив случайными числами, отсортировать массив по возрастанию, используя метод сортировки пузырьком.\n@@ -20,8 +30,10 @@ public static void main(String[] args) {\n \n              //Создать зубчатый (рваный) двумерный массив, заполненный случайными числами, вывести его элементы на экран. Каждая строка зубчатого двумерного массива должны быть произвольной длины. Длина строки должна выбираться случайно. Использовать класс Random или Math.random().\n              arr.twoDimArray();\n-*/\n-        Contidional c = new Contidional();\n-        c.switchConstruction();\n+\n+              Contidional c = new Contidional();\n+                 c.switchConstruction();\n+                 */\n+\n     }\n }"
  },
  {
    "sha": "06e8645bea46177a5c4101bf55b9988a791ffcf5",
    "filename": "src/HM/marchTwelve/ArraysH.java",
    "status": "added",
    "additions": 70,
    "deletions": 0,
    "changes": 70,
    "blob_url": "https://github.com/egorderzhanovich/homework/blob/4325c17b70cd58d6e0b2b754f798395b08398b29/src/HM/marchTwelve/ArraysH.java",
    "raw_url": "https://github.com/egorderzhanovich/homework/raw/4325c17b70cd58d6e0b2b754f798395b08398b29/src/HM/marchTwelve/ArraysH.java",
    "contents_url": "https://api.github.com/repos/egorderzhanovich/homework/contents/src/HM/marchTwelve/ArraysH.java?ref=4325c17b70cd58d6e0b2b754f798395b08398b29",
    "patch": "@@ -0,0 +1,70 @@\n+package HM.marchTwelve;\n+\n+import java.util.Random;\n+import java.util.Scanner;\n+import java.util.Arrays;\n+\n+public class ArraysH {\n+\n+    public void createArrays(){\n+        Random rnd = new Random();\n+        int number = getInt();\n+        int array[] = new int[number];\n+        int counterOfEvenNumbers = 0;\n+\n+        //Создать массив из n случайных целых чисел из отрезка [0;n] и вывести его на экран.\n+        for (int i = 0; i < array.length; i++) {\n+            array[i] = rnd.nextInt(50)+1;\n+            if(array[i]%2 ==0){\n+                counterOfEvenNumbers++;\n+            }\n+        }\n+        System.out.println(\"Массив заполненный случайными числами:\");\n+        System.out.println(Arrays.toString(array));\n+\n+        //Создать второй массив только из чётных элементов первого массива, если они там есть, и вывести его на экран.\n+        int j = 0;\n+        int evenArray[] = new int[counterOfEvenNumbers];\n+\n+        for (int i = 0; i < array.length; i++) {\n+            if(array[i]%2 ==0){\n+                evenArray[j] = array[i];\n+                j++;\n+            }\n+        }\n+        System.out.println(\"Массив заполненный четныйми числами взятых из массива выше:\");\n+        System.out.println(Arrays.toString(evenArray));\n+\n+\n+    }\n+\n+\n+    //Пользователь вводит с клавиатуры число большее 3, которое сохраняется в переменную n.\n+    //\n+    //Если пользователь ввёл не подходящее число, то программа\n+    //должна выдать соответствующее сообщение.\n+    public int getInt(){\n+        String input = \"\";\n+        int result;\n+        while (true) {\n+            try {\n+                Scanner scan = new Scanner(System.in);\n+                System.out.println(\"Введите число большее 3:\");\n+                input = scan.next();\n+                result = Integer.parseInt(input);\n+            } catch(Exception e) {\n+                System.out.println(\"Вы ввели не число\");\n+                continue;\n+            }\n+\n+            if (result <3) {\n+                System.out.println(\"Введите число большее 3!\");\n+            }\n+            else {\n+                break;\n+            }\n+        }\n+        return result;\n+    }\n+\n+}"
  },
  {
    "sha": "c9a5b1967d5bf8bfd22236000051811f2b8054e1",
    "filename": "src/HM/marchTwelve/Loops.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/egorderzhanovich/homework/blob/4325c17b70cd58d6e0b2b754f798395b08398b29/src/HM/marchTwelve/Loops.java",
    "raw_url": "https://github.com/egorderzhanovich/homework/raw/4325c17b70cd58d6e0b2b754f798395b08398b29/src/HM/marchTwelve/Loops.java",
    "contents_url": "https://api.github.com/repos/egorderzhanovich/homework/contents/src/HM/marchTwelve/Loops.java?ref=4325c17b70cd58d6e0b2b754f798395b08398b29",
    "patch": "@@ -0,0 +1,42 @@\n+package HM.marchTwelve;\n+\n+public class Loops {\n+\n+\n+\n+    //Начав тренировки, спортсмен в первый день пробежал 10 км. Каждый день он увеличивал дневную норму на 10% нормы предыдущего дня.\n+    //Напишите программу, определяющую какой\n+    //суммарный путь пробежит спортсмен за 7 дней?\n+    public void totalPath(){\n+        double totalPath = 10.0;\n+        double nextDayPath = totalPath;\n+        for (int i = 1; i <7; i++) {\n+            nextDayPath =  nextDayPath+ nextDayPath/10.0;\n+            totalPath+=nextDayPath;\n+        }\n+        System.out.printf(\"Суммарный путь, который спортсмен пробежал за 7 дней равен: %.2f\",totalPath );\n+    }\n+\n+\n+\n+    //Одноклеточная амеба каждые 3 часа делится на 2 клетки. Необходимо определить, сколько амеб будет через 3, 6, 9, 12,..., 24 часа.\n+    public void findAmountOfAmeba(){\n+        int UnicellularAmeba = 1;\n+        int amountOfAmeba=UnicellularAmeba*2;\n+        for(int i = 3; i < 24; i=i+3){\n+            amountOfAmeba =  amountOfAmeba*2;\n+        }\n+        System.out.println(\"\\nОдноклеточная амеба разделилась за 24 часа на \" + amountOfAmeba + \" клеток\");\n+    }\n+\n+\n+\n+    //Напишите программу, определяющую сумму всех нечетных чисел от 1 до 99.\n+    public void sumOfEvenNumbers(){\n+        int sumOfEvenNumbers = 0;\n+        for (int i = 0; i <= 99; i=i+2) {\n+            sumOfEvenNumbers +=i;\n+        }\n+        System.out.println(\"Сумма четный чисел в диапазоне от 1 до 99 равна: \" + sumOfEvenNumbers);\n+    }\n+}"
  },
  {
    "sha": "ff9707ce8e10b606ec75b740ca1b946bc9a2c28e",
    "filename": "src/HM/marchTwelve/Recursion.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/egorderzhanovich/homework/blob/4325c17b70cd58d6e0b2b754f798395b08398b29/src/HM/marchTwelve/Recursion.java",
    "raw_url": "https://github.com/egorderzhanovich/homework/raw/4325c17b70cd58d6e0b2b754f798395b08398b29/src/HM/marchTwelve/Recursion.java",
    "contents_url": "https://api.github.com/repos/egorderzhanovich/homework/contents/src/HM/marchTwelve/Recursion.java?ref=4325c17b70cd58d6e0b2b754f798395b08398b29",
    "patch": "@@ -0,0 +1,24 @@\n+package HM.marchTwelve;\n+\n+public class Recursion {\n+\n+    //Дано натуральное число n>1. Используя рекурсию, необходимо проверить, является ли оно простым.\n+    // Программа должна вывести фразу «Is number <your number> simple - YES», если число простое и «Is number <your number> simple - NO», если число составное.\n+    //Для вывода информации используйте метод printf\n+    public static void recursion(int n,int a) {\n+\n+        if (n < 2) {\n+            System.out.printf(\"\\\"Is number %d simple - NO\\\"\", n);\n+        } else if (n == 2) {\n+            System.out.printf(\"\\\"Is number %d simple - YES\\\"\", n);\n+        } else if (n % a == 0) {\n+            System.out.printf(\"\\\"Is number %d simple - NO\\\"\", n);\n+        } else if (a < n / 2) {\n+            recursion(n,a+1);\n+        } else {\n+            System.out.printf(\"\\\"Is number %d simple - YES\\\"\", n);\n+        }\n+\n+    }\n+\n+}"
  }
]
