[
  {
    "sha": "8fc9d535a3daf10f84e5b12452424997f655e726",
    "filename": "build.gradle",
    "status": "modified",
    "additions": 5,
    "deletions": 4,
    "changes": 9,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/build.gradle",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/build.gradle",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/build.gradle?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -16,7 +16,8 @@ ext {\n   javadocsBaseUrl = nexusBaseUrl + \"/content/sites/javadocs/com/adaptris\"\n   repoUsername = project.findProperty(\"repoUsername\") ?: \"set in gradle.properties\"\n   repoPassword = project.findProperty(\"repoPassword\") ?: \"set in gradle.properties\"\n-  componentName=\"Interlok Installer Java FX\"\n+  componentName = \"Interlok Installer\"\n+  componentDesc = \"Interlok installer built using JavaFX\"\n   organizationName = \"Adaptris Ltd\"\n   organizationUrl = \"http://interlok.adaptris.net\"\n } \n@@ -25,7 +26,7 @@ repositories {\n   mavenCentral()\n   maven { url \"$nexusBaseUrl/content/groups/public\" }\n   maven { url \"$nexusBaseUrl/content/groups/interlok\" }\n-  maven { url \"https://repo.gradle.org/gradle/libs-releases-local/\" } // Required for JavaFx dependencies\n+  maven { url \"https://repo.gradle.org/gradle/libs-releases-local/\" } // Required for JavaFx and Gradle Tooling API dependencies\n }\n \n dependencies {\n@@ -106,8 +107,8 @@ publishing {\n       artifact sourcesJar { classifier \"sources\" }\n \n       pom.withXml {\n-        asNode().appendNode(\"name\", \"Interlok Installer\")\n-        asNode().appendNode(\"description\", \"Interlok installer built using JavaFX\")\n+        asNode().appendNode(\"name\", componentName)\n+        asNode().appendNode(\"description\", componentDesc)\n         def properties = asNode().appendNode(\"properties\")\n         properties.appendNode(\"target\", \"4.0.0+\")\n         properties.appendNode(\"license\", \"false\")"
  },
  {
    "sha": "c204ac8e929153e3e7f0d58848edeedb9ba84805",
    "filename": "src/main/java/com/adaptris/installer/InstallerWizard.java",
    "status": "modified",
    "additions": 0,
    "deletions": 12,
    "changes": 12,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/InstallerWizard.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/InstallerWizard.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/java/com/adaptris/installer/InstallerWizard.java?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -8,7 +8,6 @@\n public class InstallerWizard {\n \n   private Parent prepareInstaller;\n-  private Parent licenseAgreement;\n   private Parent installDirectory;\n   private Parent optionalComponents;\n   private Parent installProgress;\n@@ -40,17 +39,6 @@ public Parent loadPrepareInstallerNode() {\n     return fxmlLoader.loadOrExit(\"/views/prepare_installer.fxml\");\n   }\n \n-  public void goToLicenseAgreement(Scene scene) {\n-    if (Objects.isNull(licenseAgreement)) {\n-      licenseAgreement = loadLicenseAgreementNode();\n-    }\n-    scene.setRoot(licenseAgreement);\n-  }\n-\n-  public Parent loadLicenseAgreementNode() {\n-    return fxmlLoader.loadOrExit(\"/views/license_agreement.fxml\");\n-  }\n-\n   public void goToInstallDirectory(Scene scene) {\n     if (Objects.isNull(installDirectory)) {\n       installDirectory = loadInstallDirectoryNode();"
  },
  {
    "sha": "f76e934c8a2e74b9845e5d4958e8db1b74b9e5f1",
    "filename": "src/main/java/com/adaptris/installer/controllers/InstallDirectoryController.java",
    "status": "modified",
    "additions": 0,
    "deletions": 5,
    "changes": 5,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/controllers/InstallDirectoryController.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/controllers/InstallDirectoryController.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/java/com/adaptris/installer/controllers/InstallDirectoryController.java?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -73,9 +73,4 @@ private void handleNext(ActionEvent event) throws IOException {\n     installerWizard.goToOptionalComponents(((Button) event.getSource()).getScene());\n   }\n \n-  @FXML\n-  private void handlePrevious(ActionEvent event) throws IOException {\n-    installerWizard.goToLicenseAgreement(((Button) event.getSource()).getScene());\n-  }\n-\n }"
  },
  {
    "sha": "bbf306f7421fa0192d1f0c24d8aaac9ecb0aaede",
    "filename": "src/main/java/com/adaptris/installer/controllers/LicenseAgreementController.java",
    "status": "removed",
    "additions": 0,
    "deletions": 38,
    "changes": 38,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/main/java/com/adaptris/installer/controllers/LicenseAgreementController.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/main/java/com/adaptris/installer/controllers/LicenseAgreementController.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/java/com/adaptris/installer/controllers/LicenseAgreementController.java?ref=97c9a5caddfa35454dd471dee1c42097b4b2fd1f",
    "patch": "@@ -1,38 +0,0 @@\n-package com.adaptris.installer.controllers;\n-\n-import java.io.IOException;\n-\n-import com.adaptris.installer.helpers.LicenseLoader;\n-\n-import javafx.event.ActionEvent;\n-import javafx.fxml.FXML;\n-import javafx.scene.control.Button;\n-import javafx.scene.control.CheckBox;\n-import javafx.scene.control.TextArea;\n-\n-public class LicenseAgreementController extends CancelAwareInstallerController {\n-\n-  @FXML\n-  private TextArea textArea;\n-  @FXML\n-  private CheckBox checkBox;\n-  @FXML\n-  private Button nextButton;\n-\n-  @FXML\n-  private void initialize() throws IOException {\n-    String licenseText = new LicenseLoader().load();\n-    textArea.setText(licenseText);\n-  }\n-\n-  @FXML\n-  private void handleAgree(ActionEvent event) {\n-    nextButton.setDisable(!checkBox.isSelected());\n-  }\n-\n-  @FXML\n-  private void handleNext(ActionEvent event) throws IOException {\n-    installerWizard.goToInstallDirectory(((Button) event.getSource()).getScene());\n-  }\n-\n-}"
  },
  {
    "sha": "032857ea93718a5b56d9d15a0e24286d4bcf8804",
    "filename": "src/main/java/com/adaptris/installer/controllers/OptionalComponentsController.java",
    "status": "modified",
    "additions": 16,
    "deletions": 4,
    "changes": 20,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/controllers/OptionalComponentsController.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/controllers/OptionalComponentsController.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/java/com/adaptris/installer/controllers/OptionalComponentsController.java?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -7,7 +7,7 @@\n \n import com.adaptris.installer.InstallerDataHolder;\n import com.adaptris.installer.OptionalComponentCell;\n-import com.adaptris.installer.models.OptionalComponent;\n+import com.adaptris.installer.utils.FxUtils;\n import com.adaptris.installer.utils.MatchUtils;\n \n import javafx.collections.FXCollections;\n@@ -20,6 +20,7 @@\n import javafx.scene.control.CheckBox;\n import javafx.scene.control.TableCell;\n import javafx.scene.control.TableColumn;\n+import javafx.scene.control.TableRow;\n import javafx.scene.control.TableView;\n import javafx.scene.control.TextField;\n import javafx.scene.control.Tooltip;\n@@ -61,6 +62,17 @@ private void initialize() {\n     allCheckBox.setOnAction(handleSelectAllCheckbox());\n     selectColumn.setGraphic(allCheckBox);\n \n+    nameColumn.setCellFactory(tc -> {\n+      return new TableCell<>() {\n+        @Override\n+        public void updateItem(String name, boolean empty) {\n+          super.updateItem(name, empty);\n+          setText(name);\n+          setTooltip(new Tooltip(getIdOrNameForTooltip(getTableRow(), name)));\n+        }\n+      };\n+    });\n+\n     descriptionColumn.setCellFactory(tc -> {\n       return new TableCell<>() {\n         @Override\n@@ -72,7 +84,7 @@ public void updateItem(String desc, boolean empty) {\n       };\n     });\n \n-    optionalComponentCells.addAll(convertToCells(InstallerDataHolder.getInstance().getOptionalComponents()));\n+    optionalComponentCells.addAll(FxUtils.convertToCells(InstallerDataHolder.getInstance().getOptionalComponents()));\n \n     FilteredList<OptionalComponentCell> filteredOptionalComponentCells = new FilteredList<>(\n         FXCollections.observableList(optionalComponentCells));\n@@ -84,8 +96,8 @@ public void updateItem(String desc, boolean empty) {\n     });\n   }\n \n-  private List<OptionalComponentCell> convertToCells(List<OptionalComponent> optionalComponents) {\n-    return optionalComponents.stream().map(oc -> new OptionalComponentCell(oc)).collect(Collectors.toList());\n+  private String getIdOrNameForTooltip(TableRow<OptionalComponentCell> tableRow, String name) {\n+    return tableRow != null ? FxUtils.getIdOrName(tableRow.getItem(), name) : name;\n   }\n \n   private boolean match(OptionalComponentCell occ, String str) {"
  },
  {
    "sha": "86f6ba1b19e8202e6cbd015b25c1ca50e289957b",
    "filename": "src/main/java/com/adaptris/installer/controllers/PrepareInstallerController.java",
    "status": "modified",
    "additions": 1,
    "deletions": 1,
    "changes": 2,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/controllers/PrepareInstallerController.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/controllers/PrepareInstallerController.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/java/com/adaptris/installer/controllers/PrepareInstallerController.java?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -84,7 +84,7 @@ protected void succeeded() {\n     }\n \n     private void goToLicenseAgreement() {\n-      installerWizard.goToLicenseAgreement(progressBar.getScene());\n+      installerWizard.goToInstallDirectory(progressBar.getScene());\n     }\n \n   }"
  },
  {
    "sha": "4d37e7705590c6474519152f40a12939b5314494",
    "filename": "src/main/java/com/adaptris/installer/helpers/GradleBuildRunner.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/helpers/GradleBuildRunner.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/helpers/GradleBuildRunner.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/java/com/adaptris/installer/helpers/GradleBuildRunner.java?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -1,8 +1,6 @@\n package com.adaptris.installer.helpers;\n \n-import java.io.IOException;\n import java.io.OutputStream;\n-import java.net.URISyntaxException;\n import java.nio.file.Path;\n \n import org.gradle.tooling.BuildLauncher;\n@@ -24,7 +22,7 @@ public GradleBuildRunner(OutputStream standardOutput, OutputStream standardError\n     this.progressListener = progressListener;\n   }\n \n-  public void run(Path buildGradleDirPath) throws URISyntaxException, IOException {\n+  public void run(Path buildGradleDirPath) {\n     GradleConnector connector = GradleConnector.newConnector().forProjectDirectory(buildGradleDirPath.toFile());\n \n     BuildLauncher buildLauncher = connector.connect().newBuild()"
  },
  {
    "sha": "3845be2e9d4b562a3497b626fcc7f5123db5f9de",
    "filename": "src/main/java/com/adaptris/installer/helpers/InterlokInstaller.java",
    "status": "modified",
    "additions": 1,
    "deletions": 3,
    "changes": 4,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/helpers/InterlokInstaller.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/helpers/InterlokInstaller.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/java/com/adaptris/installer/helpers/InterlokInstaller.java?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -2,7 +2,6 @@\n \n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n-import java.net.URISyntaxException;\n import java.nio.file.Path;\n import java.util.function.Consumer;\n import java.util.regex.Matcher;\n@@ -18,8 +17,7 @@\n public class InterlokInstaller {\n   private LogHelper log = LogHelper.getInstance();\n \n-  public void install(InterlokProject interlokProject, Consumer<Double> updateProgress, Consumer<String> updateMessage)\n-      throws URISyntaxException, IOException {\n+  public void install(InterlokProject interlokProject, Consumer<Double> updateProgress, Consumer<String> updateMessage) throws IOException {\n     log.info(\"Installing Interlok in '\" + interlokProject.getDirectory() + \"'\");\n \n     Path buildGradleDirPath = new BuildGradleFileGenerator().generate(interlokProject);"
  },
  {
    "sha": "2a9e5e015cca64730b3e7f580cb04b8f8452d699",
    "filename": "src/main/java/com/adaptris/installer/helpers/LicenseLoader.java",
    "status": "removed",
    "additions": 0,
    "deletions": 13,
    "changes": 13,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/main/java/com/adaptris/installer/helpers/LicenseLoader.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/main/java/com/adaptris/installer/helpers/LicenseLoader.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/java/com/adaptris/installer/helpers/LicenseLoader.java?ref=97c9a5caddfa35454dd471dee1c42097b4b2fd1f",
    "patch": "@@ -1,13 +0,0 @@\n-package com.adaptris.installer.helpers;\n-\n-import java.io.IOException;\n-\n-import com.adaptris.installer.utils.ResourceUtils;\n-\n-public class LicenseLoader {\n-\n-  public String load() throws IOException {\n-    return ResourceUtils.toString(\"/LICENSE.txt\");\n-  }\n-\n-}"
  },
  {
    "sha": "9203808c76b46c73201f5b342de82bce2c8c1586",
    "filename": "src/main/java/com/adaptris/installer/utils/FxUtils.java",
    "status": "added",
    "additions": 29,
    "deletions": 0,
    "changes": 29,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/utils/FxUtils.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/utils/FxUtils.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/java/com/adaptris/installer/utils/FxUtils.java?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -0,0 +1,29 @@\n+package com.adaptris.installer.utils;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import com.adaptris.installer.OptionalComponentCell;\n+import com.adaptris.installer.models.OptionalComponent;\n+\n+public class FxUtils {\n+\n+  private FxUtils() {\n+  }\n+\n+  public static int sort(OptionalComponentCell occ1, OptionalComponentCell occ2) {\n+    return occ1.getName().compareToIgnoreCase(occ2.getName());\n+  }\n+\n+  public static List<OptionalComponentCell> convertToCells(List<OptionalComponent> optionalComponents) {\n+    return optionalComponents.stream().map(oc -> new OptionalComponentCell(oc)).sorted(FxUtils::sort).collect(Collectors.toList());\n+  }\n+\n+  public static String getIdOrName(OptionalComponentCell occ, String name) {\n+    if (occ != null) {\n+      return occ.getOptionalComponent().getId();\n+    }\n+    return name;\n+  }\n+\n+}"
  },
  {
    "sha": "901c74643452a9e664277afbde093a3791dfafe0",
    "filename": "src/main/java/com/adaptris/installer/utils/MatchUtils.java",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/utils/MatchUtils.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/java/com/adaptris/installer/utils/MatchUtils.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/java/com/adaptris/installer/utils/MatchUtils.java?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -15,9 +15,11 @@ public static boolean match(String str, String... matchers) {\n     String lowerCaseFilter = str.toLowerCase();\n \n     for (String matcher : matchers) {\n-      boolean match = matcher.toLowerCase().contains(lowerCaseFilter);\n-      if (match) {\n-        return true;\n+      if (StringUtils.isNotBlank(matcher)) {\n+        boolean match = matcher.toLowerCase().contains(lowerCaseFilter);\n+        if (match) {\n+          return true;\n+        }\n       }\n     }\n "
  },
  {
    "sha": "8889ce2e7225652778b5d48b2c27eb44e0575279",
    "filename": "src/main/resources/LICENSE.txt",
    "status": "removed",
    "additions": 0,
    "deletions": 78,
    "changes": 78,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/main/resources/LICENSE.txt",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/main/resources/LICENSE.txt",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/resources/LICENSE.txt?ref=97c9a5caddfa35454dd471dee1c42097b4b2fd1f",
    "patch": "@@ -1,78 +0,0 @@\n-SOFTWARE LICENCE TERMS & CONDITIONS\n-\n-Please read the terms of this Software Licence Agreement carefully before opening the software package.  This is a legal agreement between you the Licensee and Adaptris Limited for the software. By opening the software package, you the Licensee agree to these terms.  If you do not agree to all these terms, promptly return the unused software to your place of purchase for a refund.\n-\n-1. INTERPRETATION\n-In these terms and conditions (\"terms\") the following expressions will have the following meanings:\n- \"Adaptris\" means Adaptris Limited whose registered office is at Old Tavern, Market Square, Petworth, West Sussex, GU28 0AH.\n-\"Contract\" means the contract of sale concluded between the Licensee and Adaptris;\n-\"Licence\" means the licence granted by Adaptris to the Licensee in respect of the Software in accordance with clauses 9.1 and 9.2 of these terms;\n-\"Licensee\" means the person(s) or entity who purchases the Software;\n-\"Price\" means the price paid by the Licensee to Adaptris for the Software;\n- \"Software\" the software (including any computer program and related documentation) to be licensed by Adaptris to the Licensee in accordance with these terms.\n-\n-2. SCOPE OF CONTRACT\n-2.1 Neither the Licensee nor Adaptris will be bound by any variation, waiver of or addition to these terms except as agreed in writing by an authorised signatory of the Licensee and an authorised signatory of Adaptris.\n-2.2 Any terms and conditions used by the Licensee in the course of its business will not apply to the Contract.\n-2.3 These terms contain the whole agreement between the parties and supersede any prior oral or written agreement between them.  The Licensee and Adaptris confirm that they have not entered into the Contract on the basis of any representations that are not expressly incorporated in these terms.\n-\n-3. INSPECTION\n-3.1 The Licensee will inspect the Software immediately after it has been unpacked.\n-3.2 The Licensee will be deemed to have accepted the Software as satisfactory, undamaged and in accordance with these terms once the Licensee opens the Software package.  Unless the Licensee notifies Adaptris in writing within four days of receipt of the Software.\n-3.3 The Licensee agrees that the period of four days referred to in clause 3.2 is a reasonable period, given the nature of the Software.\n-\n-4. RISK\n-4.1 The risk in the Software will pass to the Licensee once the Price has been paid by the Licensee to Adaptris.\n-\n-5. WARRANTIES AND REPRESENTATIONS\n-5.1 Adaptris warrants that it has title to the Software or will have such title at the time this Contract is agreed.\n-5.2 Adaptris warrants that the Software will be provided in accordance with reasonable professional standards.\n-5.3 Except as expressly stated in these terms all warranties and conditions whether express or implied by statute usage trade custom or otherwise relating to the quality or nature of the Software or their life or wear or fitness for any particular purpose or use under any specific conditions are expressly excluded, to the extent that such exclusion is permitted by law.  ADAPTRIS SPECIFICALLY EXCLUDES ANY IMPLIED WARRANTY OF SATISFACTORY QUALITY, FITNESS FOR PURPOSE, OR NON-INFRINGEMENT.\n-5.4 Measurements, dimensions, weights, colours and other details contained in Adaptris' catalogues, sale manuals, photographs, drawings, illustrations and price lists and Adaptris' samples constitute only an approximate guide and do not form part of the Contract.  No warranty is given that the Software will correspond exactly with those specified.\n-\n-6. RETURNS\n-6.1 Adaptris is not obliged to accept the return of the Software other than as provided in this clause 6. The Licensee will pay to Adaptris a sum equal to 15 percent of the Price subject to a minimum charge of £50, in respect of such return.\n-6.2 Software must be properly and securely packed by the Licensee, clearly marked on the outside packaging and any accompanying paperwork.\n-6.3 No Software will be accepted for return by Adaptris if the alleged defect has been caused by an accident, neglect or misuse by the Licensee.\n-\n-7. PATENTS AND COPYRIGHT\n-7.1 Adaptris will have no liability in respect of any infringement by the Software of any third party's intellectual property rights.\n-7.2 All specifications, drawings and technical documents issued by Adaptris either before or after conclusion of the Contract are issued solely for the Licensee's use in connection with the Software and the Licensee may not copy reproduce or communicate to any third party the contents of such documents without Adaptris' written consent.\n-\n-8. SOFTWARE\n-8.1 Title and Licence\n-8.1.1 The Software is protected by copyright law and/or contains proprietary information protected by law.  All Software  remain the sole property of Adaptris.  Unless and to the extent that a separate software licence is entered into for the Software the provisions of clauses 9.1 and 9.2 apply.\n-8.1.2 Adaptris grants the Licensee a personal, non-transferable and non-exclusive right to use the Software.  The Licence takes effect from the time the Licensee accepts it.  By opening the packaging of the Software, the Licensee agrees to be bound by these terms.  If the Licensee does not agree with these terms, Adaptris is unwilling to licence the Software to the Licensee.\n-8.1.3 The Licensee will use its best efforts to ensure that any user of the Software complies with the terms of this licence and refrains from taking any steps such as reverse assembly or compilation, to derive a source code equivalent of the Software, except to the extent and as permitted by law.\n-8.2 Software Use\n-8.2.1 The Licensee is permitted to make a single archive copy of the Software, provided the Software shall not be otherwise reproduced, copied, or, except for the documentation, disclosed to others in whole or in part, and provided that the archive copy shall maintain the same copyright notice and proprietary marketing including diskette or CD-ROM marking, as appears on the original Software.\n-8.2.2 The Software together with any archive copy of it, shall be either returned to Adaptris or destroyed when no longer used, or when the Licence is terminated in accordance with clause 9.3.\n-8.2.3 If the Licensee is in material breach of one or more of these terms, Adaptris may terminate the Licence immediately on written notice to the Licensee.\n-8.2.4 The Licensee warrants that it will not reverse, engineer, decompile or disassemble the Software, except and only to the extent that such activity is expressly permitted by applicable law notwithstanding this limitation.\n-8.3 Limited Warranty\n-8.3.1 Adaptris warrants that the Software will operate substantially as described in its user documentation for a period of 90 days from the date of acceptance of these terms (\"Warranty Period\").  Adaptris shall use reasonable commercial efforts to remedy any defect in the Software that causes breach of the foregoing warranty, provided that the Licensee notifies Adaptris of the defect in writing within the Warranty Period and Adaptris is able to reproduce such defect.  If Adaptris is unable to remedy such defect, Adaptris shall refund the Price to the Licensee.  THE FOREGOING IS THE LICENSEE'S SOLE REMEDY FOR BREACH OF THE WARRANTY CONTAINED IN THIS CLAUSE.\n-8.3.2 Any statements relating to the Software made in any brochure or advertising material or verbally by or on behalf of Adaptris shall not be binding on Adaptris.\n-8.3.3 Adaptris bears no responsibility for supplying assistance, for fixing or communicating known errors to the Licensee pertaining to the Software, save during the Warranty Period.\n-8.4 User Responsibilities\n-8.4.1 The Licensee is liable for the damage or destruction of the Software howsoever caused.\n-8.5 Enhancements\n-8.5.1 Adaptris reserves the right to change and improve the Software without notice.\n-\n-9. GENERAL\n-9.1 Adaptris will not be affected by any delay or failure in exercising or any partial exercising of its rights under these terms unless it has signed an express written waiver or release.\n-9.2 The Licensee will not assign its rights under these terms without the prior written consent of Adaptris.\n-9.3 No agreement may be cancelled by the Licensee without Adaptris' written consent, which will be subject to Adaptris' right to be indemnified by the Licensee in respect of all costs, claims, losses and expenses caused by such cancellation, including any consequential loss and loss of profits.\n-9.4 Any notice given under these terms will be duly served on the Licensee if it is left at or sent by first class post or commercial courier to its address last known to Adaptris or on Adaptris if it is left at or sent by first class post or commercial courier to its address last known to the Licensee.  It will be assumed that any notice sent by post will be delivered on the fifth working day after posting.\n-9.5 This Contract will be construed in accordance with the laws of England and Adaptris and the Licensee submit to the non-exclusive jurisdiction of the English courts.\n-9.6 All rights afforded to third parties to these terms by operation of the Contracts (Rights of Third Parties) Act 1998 are hereby expressly excluded.\n-\n-\n-READ THE TERMS OF THESE SUPPLEMENTAL LICENCE TERMS AND THE ASSOCIATED END-USER LICENCE AGREEMENT (COLLECTIVELY \"EULA\") CAREFULLY BEFORE OPENING THE SOFTWARE MEDIA PACKAGE.\n-\n-THIS IS A LEGAL AGREEMENT BETWEEN YOU (EITHER AN INDIVIDUAL OR A SINGLE ENTITY) AND ADAPTRIS LIMITED (\"ADAPTRIS\"), FOR THE SOFTWARE PRODUCT IDENTIFIED ABOVE, WHICH INCLUDES COMPUTER SOFTWARE AND MAY INCLUDE ASSOCIATED MEDIA, PRINTED MATERIALS, AND \"ONLINE\" OR ELECTRONIC DOCUMENTATION (\"SOFTWARE\").  BY OPENING THE SOFTWARE MEDIA PACKAGE, YOU AGREE TO THE TERMS OF THIS EULA.\n-\n-IF YOU ARE ACCESSING THE SOFTWARE ELECTRONICALLY, INDICATE YOUR ACCEPTANCE OF THESE TERMS BY SELECTING THE \"ACCEPT\" BUTTON AT THE END OF THIS EULA.  IF YOU DO NOT AGREE TO ALL THESE TERMS, PROMPTLY RETURN THE UNUSED SOFTWARE TO YOUR PLACE OF PURCHASE FOR A REFUND OR, IF THE SOFTWARE IS ACCESSED ELECTRONICALLY, SELECT THE \"DECLINE\" BUTTON AT THE END OF THIS EULA.\n-\n-1.\tAPACHE SOFTWARE.  Without limiting the terms of paragraph 5 of the Software Licence Agreement (\"WARRANTIES AND REPRESENTATIONS\"), User acknowledges that the Products include software developed by the Apache Software Foundation  (http://www.apache.org/).  Copyright (c) 1999-2000 The Apache Software Foundation.  All rights reserved.  The names \"Xerces\", \"The Jakarta Project\", \"Tomcat\", \"Struts\" and \"Apache Software Foundation\" must not be used to endorse or promote products derived from the Products without prior written permission.  Any product derived from the Products may not be called \"Apache\", nor may \"Apache\" appear in their name, without prior written permission.  For written permission, please contact apache@apache.org.    No GNU public license or similar open source licenses contained within the Products shall be removed or modified and no proprietary rights notices or agreements accompanying the Products shall be deleted.  THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE  DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n-\n-2.\tIAIK SOFTWARE.  Without limiting the terms of paragraph 5 of the Software Licence Agreement (\"WARRANTIES AND REPRESENTATIONS\"), User acknowledges that the Products include software developed by the Institute for Applied Information Processing and Communications, Graz University of Technology (\"IAIK\") (http://jcewww.iaik.at).  IAIK grants the Licensee (\"Adaptris\") a non-exclusive, non-sublicensable licence to run the respective number of IAIK-Crypto Software-based Applications that have been developed by the Licensee under a Developers Licence. These licences are transferable to customers or other third parties (\"User\"), which means that if the User acquires a certain number of licences for IAIK-Crypto Software-based Applications (\"the Products\") from Adaptris, the respective number of runtime licences are transferred to User.  Full details of IAIK's licence terms are available from http://jcewww.iaik.at/sales/licences/commercial/index.php."
  },
  {
    "sha": "fb6f5062b7f2b7df57817380a7c61d0c7074a6af",
    "filename": "src/main/resources/css/license_agreement.css",
    "status": "removed",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/main/resources/css/license_agreement.css",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/main/resources/css/license_agreement.css",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/resources/css/license_agreement.css?ref=97c9a5caddfa35454dd471dee1c42097b4b2fd1f",
    "patch": "@@ -1,2 +0,0 @@\n-.license-agreement {\n-}"
  },
  {
    "sha": "cd815eacdb7a19adde38efd38a31a341c10f15d4",
    "filename": "src/main/resources/img/optionals/interlok-jslt.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/resources/img/optionals/interlok-jslt.png",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/resources/img/optionals/interlok-jslt.png",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/resources/img/optionals/interlok-jslt.png?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4"
  },
  {
    "sha": "00cbb96e4073cf61a7c480f0976b501a6bb6ce1c",
    "filename": "src/main/resources/img/optionals/interlok-rest-metrics-jvm.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/resources/img/optionals/interlok-rest-metrics-jvm.png",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/resources/img/optionals/interlok-rest-metrics-jvm.png",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/resources/img/optionals/interlok-rest-metrics-jvm.png?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4"
  },
  {
    "sha": "b6a0169ed9788025aa7cffc76be17412c744eb27",
    "filename": "src/main/resources/img/optionals/interlok-rest-metrics-profiler.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/resources/img/optionals/interlok-rest-metrics-profiler.png",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/resources/img/optionals/interlok-rest-metrics-profiler.png",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/resources/img/optionals/interlok-rest-metrics-profiler.png?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4"
  },
  {
    "sha": "567008627a990a1310d3a61cef2f71377bf8dc29",
    "filename": "src/main/resources/img/optionals/interlok-rest-provider-prometheus.png",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/resources/img/optionals/interlok-rest-provider-prometheus.png",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/resources/img/optionals/interlok-rest-provider-prometheus.png",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/resources/img/optionals/interlok-rest-provider-prometheus.png?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4"
  },
  {
    "sha": "c0808f0a4587409ca73fddbd5f5c38f6c4e00fd9",
    "filename": "src/main/resources/views/install_directory.fxml",
    "status": "modified",
    "additions": 0,
    "deletions": 1,
    "changes": 1,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/resources/views/install_directory.fxml",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/main/resources/views/install_directory.fxml",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/resources/views/install_directory.fxml?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -47,7 +47,6 @@\n \t\t<HBox spacing=\"10\" alignment=\"center_right\">\n \t\t\t<children>\n \t\t\t\t<Button text=\"Cancel\" onAction=\"#handleCancel\"></Button>\n-\t\t\t\t<Button text=\"Previous\" onAction=\"#handlePrevious\"></Button>\n \t\t\t\t<Button fx:id=\"nextButton\" text=\"Next\" disable=\"true\" onAction=\"#handleNext\"></Button>\n \t\t\t</children>\n \t\t</HBox>"
  },
  {
    "sha": "782d6737682de07d4271cac7000c9b1f8932497d",
    "filename": "src/main/resources/views/license_agreement.fxml",
    "status": "removed",
    "additions": 0,
    "deletions": 47,
    "changes": 47,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/main/resources/views/license_agreement.fxml",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/main/resources/views/license_agreement.fxml",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/main/resources/views/license_agreement.fxml?ref=97c9a5caddfa35454dd471dee1c42097b4b2fd1f",
    "patch": "@@ -1,47 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-\n-<?import java.net.*?>\n-<?import javafx.geometry.*?>\n-<?import javafx.collections.*?> \n-<?import javafx.scene.control.*?>\n-<?import javafx.scene.control.cell.*?> \n-<?import javafx.scene.layout.*?>\n-<?import javafx.scene.text.*?>\n-<?import fxmltableview.*?>\n-<?import java.lang.Object?> \n-\n-\n-<VBox fx:controller=\"com.adaptris.installer.controllers.LicenseAgreementController\" \n-    xmlns:fx=\"http://javafx.com/fxml\" styleClass=\"license-agreement\" spacing=\"10\">\n-    \n-\t<padding><Insets top=\"100\" right=\"20\" bottom=\"20\" left=\"20\"/></padding>\n-\t\n-\t<children>\n-\t\t<Label text=\"Installation and Use of Adaptris Interlok Requires Acceptance of the Following License Agreement:\"></Label>\n-\t\t<VBox prefHeight=\"430\" spacing=\"10\">\n-\t\t\n-\t\t\t<padding><Insets top=\"0\" bottom=\"0\" /></padding>\n-\t\t\t\n-\t\t\t<children>\n-\t\t\t\t<VBox spacing=\"10\">\n-\t\t\t\t\t<children>\n-\t\t\t\t\t\t<TextArea fx:id=\"textArea\" editable=\"false\" prefHeight=\"410\"></TextArea>\n-\t\t\t\t\t\t<HBox spacing=\"10\" alignment=\"center_right\">\n-\t\t\t\t\t\t\t<children>\n-\t\t\t\t\t\t\t\t<CheckBox fx:id=\"checkBox\" text=\"I accept the terms of the license Agreement\" onAction=\"#handleAgree\"></CheckBox>\n-\t\t\t\t\t\t\t</children>\n-\t\t\t\t\t\t</HBox>\n-\t\t\t\t\t</children>\n-\t\t\t\t</VBox>\n-\t\t\t</children>\n-\t\t</VBox>\n-\t\t<HBox spacing=\"10\" alignment=\"center_right\">\n-\t\t\t<Button text=\"Cancel\" onAction=\"#handleCancel\"></Button>\n-\t\t\t<Button fx:id=\"nextButton\" text=\"Next\" disable=\"true\" onAction=\"#handleNext\"></Button>\n-\t\t</HBox>\n-\t</children>\n-\t<stylesheets>\n-\t\t<URL value=\"@/css/license_agreement.css\" />\n-\t</stylesheets>\n-</VBox>\n-"
  },
  {
    "sha": "1ec3c3087ea25817f7f290c8fded3c0edd7127c3",
    "filename": "src/test/java/com/adaptris/installer/helpers/LicenseLoaderTest.java",
    "status": "removed",
    "additions": 0,
    "deletions": 23,
    "changes": 23,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/test/java/com/adaptris/installer/helpers/LicenseLoaderTest.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/97c9a5caddfa35454dd471dee1c42097b4b2fd1f/src/test/java/com/adaptris/installer/helpers/LicenseLoaderTest.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/test/java/com/adaptris/installer/helpers/LicenseLoaderTest.java?ref=97c9a5caddfa35454dd471dee1c42097b4b2fd1f",
    "patch": "@@ -1,23 +0,0 @@\n-package com.adaptris.installer.helpers;\n-\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-\n-import java.io.IOException;\n-import java.net.URISyntaxException;\n-import java.nio.file.Files;\n-import java.nio.file.Paths;\n-\n-import org.junit.jupiter.api.Test;\n-\n-public class LicenseLoaderTest {\n-\n-  @Test\n-  public void testLoad() throws IOException, URISyntaxException {\n-    String licenseText = new LicenseLoader().load();\n-\n-    // Just the first few chars to not deal with the end of line characters\n-    assertEquals(Files.readString(Paths.get(getClass().getResource(\"/LICENSE.txt\").toURI())).substring(0, 10),\n-        licenseText.substring(0, 10));\n-  }\n-\n-}"
  },
  {
    "sha": "9c549a9cfaac4946c9f69a51b59ddfa0bae3895c",
    "filename": "src/test/java/com/adaptris/installer/utils/FxUtilsTest.java",
    "status": "added",
    "additions": 75,
    "deletions": 0,
    "changes": 75,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/test/java/com/adaptris/installer/utils/FxUtilsTest.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/test/java/com/adaptris/installer/utils/FxUtilsTest.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/test/java/com/adaptris/installer/utils/FxUtilsTest.java?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -0,0 +1,75 @@\n+package com.adaptris.installer.utils;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import com.adaptris.installer.OptionalComponentCell;\n+import com.adaptris.installer.models.OptionalComponent;\n+\n+import javafx.scene.control.TableRow;\n+\n+public class FxUtilsTest {\n+\n+  @Test\n+  public void testConvertToCells() {\n+    OptionalComponent oc1 = newOptionalComponent(\"interlok-json\", \"Interlok Transform/JSON\",\n+        \"Everything JSON related; transformations, schemas, json-path (xpath-alike), splitting\", \"json,transform,jdbc\");\n+    OptionalComponent oc2 = newOptionalComponent(\"interlok-jslt\", \"Interlok Transform/JSLT\", \"Support for JSON transforms via JSLT\",\n+        \"jslt,json\");\n+\n+    List<OptionalComponentCell> cells = FxUtils.convertToCells(List.of(oc1, oc2));\n+\n+    assertEquals(2, cells.size());\n+    assertEquals(oc2.getName(), cells.get(0).getName());\n+    assertEquals(oc1.getName(), cells.get(1).getName());\n+  }\n+\n+  @Test\n+  public void testSort() {\n+    OptionalComponentCell occ1 = newOptionalComponentCell(\"interlok-json\", \"Interlok Transform/JSON\",\n+        \"Everything JSON related; transformations, schemas, json-path (xpath-alike), splitting\", \"json,transform,jdbc\");\n+    OptionalComponentCell occ2 = newOptionalComponentCell(\"interlok-jslt\", \"Interlok Transform/JSLT\",\n+        \"Support for JSON transforms via JSLT\", \"jslt,json\");\n+\n+    assertEquals(0, FxUtils.sort(occ1, occ1));\n+    assertTrue(FxUtils.sort(occ1, occ2) > 0);\n+    assertTrue(FxUtils.sort(occ2, occ1) < 0);\n+  }\n+\n+  @Test\n+  public void testGetIdOrName() {\n+    OptionalComponentCell occ1 = newOptionalComponentCell(\"interlok-json\", \"Interlok Transform/JSON\",\n+        \"Everything JSON related; transformations, schemas, json-path (xpath-alike), splitting\", \"json,transform,jdbc\");\n+\n+    String idOrName = FxUtils.getIdOrName(occ1, \"Interlok Transform/JSON\");\n+\n+    assertEquals(occ1.getOptionalComponent().getId(), idOrName);\n+  }\n+\n+  @Test\n+  public void testGetIdOrNameNullOptionalComponent() {\n+    OptionalComponentCell occ1 = null;\n+\n+    String idOrName = FxUtils.getIdOrName(occ1, \"Interlok Transform/JSON\");\n+\n+    assertEquals(\"Interlok Transform/JSON\", idOrName);\n+  }\n+\n+  private OptionalComponentCell newOptionalComponentCell(String id, String name, String description, String tags) {\n+    return new OptionalComponentCell(new OptionalComponent(id, name, description, tags));\n+  }\n+\n+  private OptionalComponent newOptionalComponent(String id, String name, String description, String tags) {\n+    return new OptionalComponent(id, name, description, tags);\n+  }\n+\n+  public static class TestTableRow extends TableRow<OptionalComponentCell> {\n+    public TestTableRow() {\n+    }\n+  }\n+\n+}"
  },
  {
    "sha": "3665257fadbddaf2930905dfaf32468281f20e4c",
    "filename": "src/test/java/com/adaptris/installer/utils/MatchUtilsTest.java",
    "status": "modified",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/test/java/com/adaptris/installer/utils/MatchUtilsTest.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/test/java/com/adaptris/installer/utils/MatchUtilsTest.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/test/java/com/adaptris/installer/utils/MatchUtilsTest.java?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -22,6 +22,16 @@ public void testMatchEmptyString() {\n     assertTrue(MatchUtils.match(\"\", \"match\", \"value\"));\n   }\n \n+  @Test\n+  public void testMatchWithNullMatcher() {\n+    assertTrue(MatchUtils.match(\"val\", null, \"value\"));\n+  }\n+\n+  @Test\n+  public void testMatchDoesntMatchOnlyNullMatcher() {\n+    assertFalse(MatchUtils.match(\"different\", null, null));\n+  }\n+\n   @Test\n   public void testMatchDoesntMatch() {\n     assertFalse(MatchUtils.match(\"different\", \"value\"));"
  },
  {
    "sha": "0c8a73d75770d50bbc3b45ad0097a17a1dfbd2c0",
    "filename": "src/test/java/com/adaptris/installer/utils/ResourceUtilsTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/adaptris/interlok-installer/blob/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/test/java/com/adaptris/installer/utils/ResourceUtilsTest.java",
    "raw_url": "https://github.com/adaptris/interlok-installer/raw/f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4/src/test/java/com/adaptris/installer/utils/ResourceUtilsTest.java",
    "contents_url": "https://api.github.com/repos/adaptris/interlok-installer/contents/src/test/java/com/adaptris/installer/utils/ResourceUtilsTest.java?ref=f5efa9286b027ad3d9b91e0a1b6533843a9f3ca4",
    "patch": "@@ -14,11 +14,11 @@\n \n   @Test\n   public void testToString() throws IOException, URISyntaxException {\n-    String licenseText = ResourceUtils.toString(\"/LICENSE.txt\");\n+    String fileContent = ResourceUtils.toString(\"/installer.properties\");\n \n     // Just the first few chars to not deal with the end of line characters\n-    assertEquals(Files.readString(Paths.get(getClass().getResource(\"/LICENSE.txt\").toURI())).substring(0, 10),\n-        licenseText.substring(0, 10));\n+    assertEquals(Files.readString(Paths.get(getClass().getResource(\"/installer.properties\").toURI())).substring(0, 10),\n+        fileContent.substring(0, 10));\n   }\n \n   @Test"
  }
]
