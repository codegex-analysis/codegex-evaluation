[
  {
    "sha": "1be96012dc74f0c1850225a306a766e124aa97f9",
    "filename": "src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_1/Main.java",
    "status": "added",
    "additions": 52,
    "deletions": 0,
    "changes": 52,
    "blob_url": "https://github.com/yuriy-tsarenko/java_essential_courses/blob/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_1/Main.java",
    "raw_url": "https://github.com/yuriy-tsarenko/java_essential_courses/raw/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_1/Main.java",
    "contents_url": "https://api.github.com/repos/yuriy-tsarenko/java_essential_courses/contents/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_1/Main.java?ref=349a6a4d8672a1bc1b6195bbbb12d197a8cddf91",
    "patch": "@@ -0,0 +1,52 @@\n+package com.java_essential.Cherednichenko.homework.lesson_8.task_1;\n+\n+import java.util.*;\n+\n+import org.apache.log4j.Logger;\n+\n+public class Main {\n+    private static final Logger log = Logger.getLogger(Main.class);\n+\n+    public static void main(String[] args) {\n+        List<Worker> workerList = new ArrayList<>();\n+        int thisYear = 2021;\n+        int year;\n+        String name;\n+        String nameOfPosition;\n+        for (int i = 0; i < 5; i++) {\n+            name = getScanner(\" FullName of Worker\");\n+            nameOfPosition = getScanner(\" NameOfPosition of Worker\");\n+            try {\n+                year = Integer.parseInt(getScanner(\" Year of Worker\"));\n+                if (year > thisYear) {\n+                    throw new Exception();\n+                }\n+                workerList.add(new Worker(name, nameOfPosition, year));\n+            } catch (Exception e) {\n+                log.info(e);\n+                System.out.println(\"Wrong year: \" + name);\n+            }\n+        }\n+        workerList = comparatorForWorker(workerList);\n+        System.out.println(\"Result: \");\n+        for (Worker worker : workerList) {\n+            System.out.println(worker.getFullName());\n+        }\n+    }\n+\n+    public static String getScanner(String text) {\n+        Scanner scanner = new Scanner(System.in);\n+        System.out.println(\"Please, input \" + text);\n+        return scanner.next();\n+    }\n+\n+    public static List<Worker> comparatorForWorker(List<Worker> workerList) {\n+        workerList.sort(new Comparator<Worker>() {\n+            @Override\n+            public int compare(Worker o1, Worker o2) {\n+                return o1.getFullName().compareTo(o2.getFullName());\n+            }\n+        });\n+        return workerList;\n+    }\n+}"
  },
  {
    "sha": "ea8ff8ecafe9b18111b846eb28f25b81ffd0e227",
    "filename": "src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_1/Worker.java",
    "status": "added",
    "additions": 17,
    "deletions": 0,
    "changes": 17,
    "blob_url": "https://github.com/yuriy-tsarenko/java_essential_courses/blob/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_1/Worker.java",
    "raw_url": "https://github.com/yuriy-tsarenko/java_essential_courses/raw/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_1/Worker.java",
    "contents_url": "https://api.github.com/repos/yuriy-tsarenko/java_essential_courses/contents/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_1/Worker.java?ref=349a6a4d8672a1bc1b6195bbbb12d197a8cddf91",
    "patch": "@@ -0,0 +1,17 @@\n+package com.java_essential.Cherednichenko.homework.lesson_8.task_1;\n+\n+public class Worker {\n+    private String fullName;\n+    private String nameOfPosition;\n+    private int year;\n+\n+    public Worker(String fullName, String nameOfPosition, int year) {\n+        this.fullName = fullName;\n+        this.nameOfPosition = nameOfPosition;\n+        this.year = year;\n+    }\n+\n+    public String getFullName() {\n+        return fullName;\n+    }\n+}"
  },
  {
    "sha": "538a9e67890fa861a68231a412a0826f57c4b282",
    "filename": "src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_2/Main.java",
    "status": "added",
    "additions": 41,
    "deletions": 0,
    "changes": 41,
    "blob_url": "https://github.com/yuriy-tsarenko/java_essential_courses/blob/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_2/Main.java",
    "raw_url": "https://github.com/yuriy-tsarenko/java_essential_courses/raw/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_2/Main.java",
    "contents_url": "https://api.github.com/repos/yuriy-tsarenko/java_essential_courses/contents/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_2/Main.java?ref=349a6a4d8672a1bc1b6195bbbb12d197a8cddf91",
    "patch": "@@ -0,0 +1,41 @@\n+package com.java_essential.Cherednichenko.homework.lesson_8.task_2;\n+\n+import java.util.Arrays;\n+import java.util.Comparator;\n+import java.util.Scanner;\n+\n+public class Main {\n+    public static void main(String[] args) {\n+        Price[] prices = new Price[2];\n+        for (int i = 0; i < prices.length; i++) {\n+            prices[i] = new Price();\n+            prices[i].setNameOfGood(getScanner(\"NameOfGood\"));\n+            prices[i].setNameOfStorage(getScanner(\"NameOfStorage\"));\n+            try {\n+                prices[i].setPriceOfGood(Double.parseDouble(getScanner(\"Price\")));\n+            } catch (Exception e) {\n+                System.out.println(\"Wrong price\");\n+            }\n+        }\n+        prices = comparatorForPrices(prices);\n+        for (Price p : prices) {\n+            System.out.println(p.getNameOfStorage());\n+        }\n+    }\n+\n+    public static String getScanner(String text) {\n+        Scanner scanner = new Scanner(System.in);\n+        System.out.println(\"Please, input \" + text);\n+        return scanner.next();\n+    }\n+\n+    public static Price[] comparatorForPrices(Price[] prices) {\n+        Arrays.sort(prices, new Comparator<Price>() {\n+            @Override\n+            public int compare(Price o1, Price o2) {\n+                return o1.getNameOfStorage().compareTo(o2.getNameOfStorage());\n+            }\n+        });\n+        return prices;\n+    }\n+}"
  },
  {
    "sha": "fa74bfd745030407d09e2cc6aef9bd42967cba30",
    "filename": "src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_2/Price.java",
    "status": "added",
    "additions": 34,
    "deletions": 0,
    "changes": 34,
    "blob_url": "https://github.com/yuriy-tsarenko/java_essential_courses/blob/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_2/Price.java",
    "raw_url": "https://github.com/yuriy-tsarenko/java_essential_courses/raw/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_2/Price.java",
    "contents_url": "https://api.github.com/repos/yuriy-tsarenko/java_essential_courses/contents/src/main/java/com/java_essential/Cherednichenko/homework/lesson_8/task_2/Price.java?ref=349a6a4d8672a1bc1b6195bbbb12d197a8cddf91",
    "patch": "@@ -0,0 +1,34 @@\n+package com.java_essential.Cherednichenko.homework.lesson_8.task_2;\n+\n+public class Price {\n+    private String nameOfGood;\n+    private String nameOfStorage;\n+    private double priceOfGood;\n+\n+    public Price() {\n+    }\n+\n+    public String getNameOfGood() {\n+        return nameOfGood;\n+    }\n+\n+    public void setNameOfGood(String nameOfGood) {\n+        this.nameOfGood = nameOfGood;\n+    }\n+\n+    public String getNameOfStorage() {\n+        return nameOfStorage;\n+    }\n+\n+    public void setNameOfStorage(String nameOfStorage) {\n+        this.nameOfStorage = nameOfStorage;\n+    }\n+\n+    public double getPriceOfGood() {\n+        return priceOfGood;\n+    }\n+\n+    public void setPriceOfGood(double priceOfGood) {\n+        this.priceOfGood = priceOfGood;\n+    }\n+}"
  },
  {
    "sha": "6c5f911585967eeb562bb55e840516961abf9cc8",
    "filename": "src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Device.java",
    "status": "added",
    "additions": 51,
    "deletions": 0,
    "changes": 51,
    "blob_url": "https://github.com/yuriy-tsarenko/java_essential_courses/blob/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Device.java",
    "raw_url": "https://github.com/yuriy-tsarenko/java_essential_courses/raw/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Device.java",
    "contents_url": "https://api.github.com/repos/yuriy-tsarenko/java_essential_courses/contents/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Device.java?ref=349a6a4d8672a1bc1b6195bbbb12d197a8cddf91",
    "patch": "@@ -0,0 +1,51 @@\n+package com.java_essential.Cherednichenko.homework.lesson_9;\n+\n+import java.util.Objects;\n+\n+public class Device {\n+    private String manufacturer;\n+    private float price;\n+    private String serialNumber;\n+\n+    public Device(String manufacturer, float price, String serialNumber) {\n+        this.manufacturer = manufacturer;\n+        this.price = price;\n+        this.serialNumber = serialNumber;\n+    }\n+\n+    public String getManufacturer() {\n+        return manufacturer;\n+    }\n+\n+    public float getPrice() {\n+        return price;\n+    }\n+\n+    public String getSerialNumber() {\n+        return serialNumber;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Device{\" +\n+                \"manufacturer='\" + manufacturer + '\\'' +\n+                \", price=\" + price +\n+                \", serialNumber='\" + serialNumber + '\\'' +\n+                '}';\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof Device)) return false;\n+        Device device = (Device) o;\n+        return Float.compare(device.price, price) == 0 &&\n+                Objects.equals(manufacturer, device.manufacturer) &&\n+                Objects.equals(serialNumber, device.serialNumber);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(manufacturer, price, serialNumber);\n+    }\n+}"
  },
  {
    "sha": "430952fb8d846b37613d879c777e319a47932aeb",
    "filename": "src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/EthernetAdapter.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/yuriy-tsarenko/java_essential_courses/blob/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/EthernetAdapter.java",
    "raw_url": "https://github.com/yuriy-tsarenko/java_essential_courses/raw/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/EthernetAdapter.java",
    "contents_url": "https://api.github.com/repos/yuriy-tsarenko/java_essential_courses/contents/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/EthernetAdapter.java?ref=349a6a4d8672a1bc1b6195bbbb12d197a8cddf91",
    "patch": "@@ -0,0 +1,40 @@\n+package com.java_essential.Cherednichenko.homework.lesson_9;\n+\n+import java.util.Objects;\n+\n+public class EthernetAdapter extends Device {\n+    private int speed;\n+    private String mac;\n+\n+    public EthernetAdapter(String manufacturer, float price, String serialNumber, int speed, String mac) {\n+        super(manufacturer, price, serialNumber);\n+        this.speed = speed;\n+        this.mac = mac;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"EthernetAdapter{\" +\n+                \"manufacturer='\" + super.getManufacturer() + '\\'' +\n+                \", price=\" + super.getPrice() +\n+                \", serialNumber='\" + super.getSerialNumber() + '\\'' +\n+                \"speed=\" + speed +\n+                \", mac='\" + mac + '\\'' +\n+                '}';\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof EthernetAdapter)) return false;\n+        if (!super.equals(o)) return false;\n+        EthernetAdapter that = (EthernetAdapter) o;\n+        return speed == that.speed &&\n+                Objects.equals(mac, that.mac);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(super.hashCode(), speed, mac);\n+    }\n+}"
  },
  {
    "sha": "2cf4c486844a10fa658bd92f477e3db4380baf1c",
    "filename": "src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Main.java",
    "status": "added",
    "additions": 24,
    "deletions": 0,
    "changes": 24,
    "blob_url": "https://github.com/yuriy-tsarenko/java_essential_courses/blob/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Main.java",
    "raw_url": "https://github.com/yuriy-tsarenko/java_essential_courses/raw/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Main.java",
    "contents_url": "https://api.github.com/repos/yuriy-tsarenko/java_essential_courses/contents/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Main.java?ref=349a6a4d8672a1bc1b6195bbbb12d197a8cddf91",
    "patch": "@@ -0,0 +1,24 @@\n+package com.java_essential.Cherednichenko.homework.lesson_9;\n+\n+public class Main {\n+    public static void main(String[] args) {\n+        Device device = new Device(\"Samsung\",120,\"AB1234567CD \");\n+        Device device1 = new Device(\"Samsung1\",1201,\"AB1234567CD1 \");\n+        Monitor monitor = new Monitor(1280,1024,\"Samsung\",120,\"AB1234567CD \");\n+        EthernetAdapter ethernetAdapter= new EthernetAdapter(\"Samsung\",120,\"AB1234567CD \",1000,\"A1:13:F4:12\");\n+        System.out.println(device.toString());\n+        System.out.println(monitor.toString());\n+        System.out.println(ethernetAdapter.toString());\n+        System.out.println(device.hashCode());\n+        System.out.println(monitor.hashCode());\n+        System.out.println(ethernetAdapter.hashCode());\n+        System.out.println(monitor.equals(device));///false\n+        System.out.println(ethernetAdapter.equals(device));//false\n+        System.out.println(device.equals(monitor));//true\n+        System.out.println(device.equals(ethernetAdapter));//true\n+        System.out.println(device1.equals(monitor));//false\n+        System.out.println(device1.equals(ethernetAdapter));//false\n+        System.out.println(monitor.equals(device1));///false\n+        System.out.println(ethernetAdapter.equals(device1));//false\n+    }\n+}"
  },
  {
    "sha": "7761832d8440cdf29f6c3b8256b14c0391adaf80",
    "filename": "src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Monitor.java",
    "status": "added",
    "additions": 40,
    "deletions": 0,
    "changes": 40,
    "blob_url": "https://github.com/yuriy-tsarenko/java_essential_courses/blob/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Monitor.java",
    "raw_url": "https://github.com/yuriy-tsarenko/java_essential_courses/raw/349a6a4d8672a1bc1b6195bbbb12d197a8cddf91/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Monitor.java",
    "contents_url": "https://api.github.com/repos/yuriy-tsarenko/java_essential_courses/contents/src/main/java/com/java_essential/Cherednichenko/homework/lesson_9/Monitor.java?ref=349a6a4d8672a1bc1b6195bbbb12d197a8cddf91",
    "patch": "@@ -0,0 +1,40 @@\n+package com.java_essential.Cherednichenko.homework.lesson_9;\n+\n+import java.util.Objects;\n+\n+public class Monitor extends Device {\n+    private int resolutionX;\n+    private int resolutionY;\n+\n+    public Monitor(int resolutionX, int resolutionY, String manufacturer, float price, String serialNumber) {\n+        super(manufacturer, price, serialNumber);\n+        this.resolutionX = resolutionX;\n+        this.resolutionY = resolutionY;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"Monitor{\" +\n+                \"manufacturer='\" + super.getManufacturer() + '\\'' +\n+                \", price=\" + super.getPrice() +\n+                \", serialNumber='\" + super.getSerialNumber() + '\\'' +\n+                \"resolutionX=\" + resolutionX +\n+                \", resolutionY=\" + resolutionY +\n+                '}';\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof Monitor)) return false;\n+        if (!super.equals(o)) return false;\n+        Monitor monitor = (Monitor) o;\n+        return resolutionX == monitor.resolutionX &&\n+                resolutionY == monitor.resolutionY;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(super.hashCode(), resolutionX, resolutionY);\n+    }\n+}"
  }
]
