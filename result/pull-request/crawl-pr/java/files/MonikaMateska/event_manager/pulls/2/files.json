[
  {
    "sha": "c621d680b01a560ffe0a4edf8c2190c610e5b486",
    "filename": "src/main/java/wp_project/event_manager/service/LocationService.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/MonikaMateska/event_manager/blob/864458af47d8edcafa8e580366813caa300a1ecd/src/main/java/wp_project/event_manager/service/LocationService.java",
    "raw_url": "https://github.com/MonikaMateska/event_manager/raw/864458af47d8edcafa8e580366813caa300a1ecd/src/main/java/wp_project/event_manager/service/LocationService.java",
    "contents_url": "https://api.github.com/repos/MonikaMateska/event_manager/contents/src/main/java/wp_project/event_manager/service/LocationService.java?ref=864458af47d8edcafa8e580366813caa300a1ecd",
    "patch": "@@ -2,8 +2,12 @@\n \n import wp_project.event_manager.model.Location;\n \n+import java.util.List;\n+\n public interface LocationService {\n \n+    List<Location> listAll();\n+\n     Location findById(Long id);\n \n     Location create(Long latitude, Long longitude, String name);"
  },
  {
    "sha": "630c7123bdbfd0322fb9377d430770da21a82140",
    "filename": "src/main/java/wp_project/event_manager/service/UserService.java",
    "status": "modified",
    "additions": 4,
    "deletions": 0,
    "changes": 4,
    "blob_url": "https://github.com/MonikaMateska/event_manager/blob/864458af47d8edcafa8e580366813caa300a1ecd/src/main/java/wp_project/event_manager/service/UserService.java",
    "raw_url": "https://github.com/MonikaMateska/event_manager/raw/864458af47d8edcafa8e580366813caa300a1ecd/src/main/java/wp_project/event_manager/service/UserService.java",
    "contents_url": "https://api.github.com/repos/MonikaMateska/event_manager/contents/src/main/java/wp_project/event_manager/service/UserService.java?ref=864458af47d8edcafa8e580366813caa300a1ecd",
    "patch": "@@ -3,8 +3,12 @@\n import wp_project.event_manager.model.Role;\n import wp_project.event_manager.model.User;\n \n+import java.util.List;\n+\n public interface UserService {\n \n+    List<User> listAll();\n+\n     User findByUsername(String username);\n \n     User create(String username, String password, Role role);"
  },
  {
    "sha": "c95d10c302d3a5a468cafa71c3c89bf862da2345",
    "filename": "src/main/java/wp_project/event_manager/service/impl/LocationServiceImpl.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/MonikaMateska/event_manager/blob/864458af47d8edcafa8e580366813caa300a1ecd/src/main/java/wp_project/event_manager/service/impl/LocationServiceImpl.java",
    "raw_url": "https://github.com/MonikaMateska/event_manager/raw/864458af47d8edcafa8e580366813caa300a1ecd/src/main/java/wp_project/event_manager/service/impl/LocationServiceImpl.java",
    "contents_url": "https://api.github.com/repos/MonikaMateska/event_manager/contents/src/main/java/wp_project/event_manager/service/impl/LocationServiceImpl.java?ref=864458af47d8edcafa8e580366813caa300a1ecd",
    "patch": "@@ -6,6 +6,8 @@\n import wp_project.event_manager.repository.LocationRepository;\n import wp_project.event_manager.service.LocationService;\n \n+import java.util.List;\n+\n @Service\n public class LocationServiceImpl implements LocationService {\n     private final LocationRepository locationRepository;\n@@ -14,6 +16,11 @@ public LocationServiceImpl(LocationRepository locationRepository) {\n         this.locationRepository = locationRepository;\n     }\n \n+    @Override\n+    public List<Location> listAll() {\n+        return this.locationRepository.findAll();\n+    }\n+\n     @Override\n     public Location findById(Long id) {\n         return this.locationRepository.findById(id).orElseThrow(InvalidLocationIdException::new);"
  },
  {
    "sha": "eae657e518d427101967a85d0b9c854c01db6193",
    "filename": "src/main/java/wp_project/event_manager/service/impl/UserServiceImpl.java",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/MonikaMateska/event_manager/blob/864458af47d8edcafa8e580366813caa300a1ecd/src/main/java/wp_project/event_manager/service/impl/UserServiceImpl.java",
    "raw_url": "https://github.com/MonikaMateska/event_manager/raw/864458af47d8edcafa8e580366813caa300a1ecd/src/main/java/wp_project/event_manager/service/impl/UserServiceImpl.java",
    "contents_url": "https://api.github.com/repos/MonikaMateska/event_manager/contents/src/main/java/wp_project/event_manager/service/impl/UserServiceImpl.java?ref=864458af47d8edcafa8e580366813caa300a1ecd",
    "patch": "@@ -7,6 +7,8 @@\n import wp_project.event_manager.repository.UserRepository;\n import wp_project.event_manager.service.UserService;\n \n+import java.util.List;\n+\n @Service\n public class UserServiceImpl implements UserService {\n     private final UserRepository userRepository;\n@@ -15,6 +17,11 @@ public UserServiceImpl(UserRepository userRepository) {\n         this.userRepository = userRepository;\n     }\n \n+    @Override\n+    public List<User> listAll() {\n+        return this.userRepository.findAll();\n+    }\n+\n     @Override\n     public User findByUsername(String username) {\n         return this.userRepository.findById(username).orElseThrow(InvalidUserIdException::new);"
  },
  {
    "sha": "9e5b1c08ecb6e010d414bedb0bb13992656a7619",
    "filename": "src/main/java/wp_project/event_manager/web/EventsController.java",
    "status": "added",
    "additions": 95,
    "deletions": 0,
    "changes": 95,
    "blob_url": "https://github.com/MonikaMateska/event_manager/blob/864458af47d8edcafa8e580366813caa300a1ecd/src/main/java/wp_project/event_manager/web/EventsController.java",
    "raw_url": "https://github.com/MonikaMateska/event_manager/raw/864458af47d8edcafa8e580366813caa300a1ecd/src/main/java/wp_project/event_manager/web/EventsController.java",
    "contents_url": "https://api.github.com/repos/MonikaMateska/event_manager/contents/src/main/java/wp_project/event_manager/web/EventsController.java?ref=864458af47d8edcafa8e580366813caa300a1ecd",
    "patch": "@@ -0,0 +1,95 @@\n+package wp_project.event_manager.web;\n+\n+import org.springframework.stereotype.Controller;\n+import org.springframework.ui.Model;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.PostMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import wp_project.event_manager.model.Event;\n+import wp_project.event_manager.model.Location;\n+import wp_project.event_manager.model.User;\n+import wp_project.event_manager.service.EventService;\n+import wp_project.event_manager.service.LocationService;\n+import wp_project.event_manager.service.UserService;\n+\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n+\n+@Controller\n+public class EventsController {\n+\n+    private final EventService eventService;\n+    private final LocationService locationService;\n+    private final UserService userService;\n+\n+    public EventsController(EventService eventService, LocationService locationService, UserService userService) {\n+        this.eventService = eventService;\n+        this.locationService = locationService;\n+        this.userService = userService;\n+    }\n+\n+    @GetMapping({\"/\", \"/events\"})\n+    public String showEvents(@RequestParam(required = false) String nameSearch,\n+                             @RequestParam(required = false) Long locationId,\n+                             @RequestParam(required = false) Date time,\n+                             Model model) {\n+        List<Event> events;\n+        List<Location> locations;\n+\n+        events = this.eventService.listEventsByNameAndLocationAndTime(nameSearch, locationId, time);\n+        locations = this.locationService.listAll();\n+        model.addAttribute(\"events\", events);\n+        model.addAttribute(\"locations\", locations);\n+        return \"list.html\";\n+    }\n+\n+    @GetMapping(\"/events/create\")\n+    public String showCreate(Model model) {\n+        List<Location> locations = this.locationService.listAll();\n+        List<User> users = this.userService.listAll();\n+        model.addAttribute(\"locations\", locations);\n+        model.addAttribute(\"users\", users);\n+        return \"form.html\";\n+    }\n+\n+    @GetMapping(\"/events/{id}/edit\")\n+    public String showEdit(@PathVariable Long id, Model model) {\n+        Event event = this.eventService.findById(id);\n+\n+        List<Location> locations = this.locationService.listAll();\n+        List<User> users = this.userService.listAll();\n+\n+        model.addAttribute(\"event\", event);\n+        model.addAttribute(\"locations\", locations);\n+        model.addAttribute(\"users\", users);\n+        return \"form.html\";\n+    }\n+\n+    @PostMapping(\"/events\")\n+    public String create(@RequestParam String name,\n+                         @RequestParam List<String> attendeeUsernames,\n+                         @RequestParam Long locationId,\n+                         @RequestParam Date time) {\n+        this.eventService.create(name, attendeeUsernames, locationId, time, new ArrayList<>());\n+        return \"redirect:/events\";\n+    }\n+\n+    @PostMapping(\"/events/{id}\")\n+    public String update(@PathVariable Long id,\n+                         @RequestParam String name,\n+                         @RequestParam List<String> attendeeUsernames,\n+                         @RequestParam Long locationId,\n+                         @RequestParam Date time,\n+                         @RequestParam List<Long> commentIds) {\n+        this.eventService.update(id, name, attendeeUsernames, locationId, time, commentIds);\n+        return \"redirect:/events\";\n+    }\n+\n+    @PostMapping(\"/events/{id}/delete\")\n+    public String delete(@PathVariable Long id) {\n+        this.eventService.delete(id);\n+        return \"redirect:/events\";\n+    }\n+}"
  }
]
