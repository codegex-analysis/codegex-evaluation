[
  {
    "sha": "296276080ebf29718f1a3d8e58e1b2320684c0a7",
    "filename": "src/main/java/org/geotools/data/dxf/DXFDataStore.java",
    "status": "modified",
    "additions": 13,
    "deletions": 3,
    "changes": 16,
    "blob_url": "https://github.com/FluiditLtd/gt-dxf/blob/a721497ee8aef04be34062c03cd205cb2fff6c89/src/main/java/org/geotools/data/dxf/DXFDataStore.java",
    "raw_url": "https://github.com/FluiditLtd/gt-dxf/raw/a721497ee8aef04be34062c03cd205cb2fff6c89/src/main/java/org/geotools/data/dxf/DXFDataStore.java",
    "contents_url": "https://api.github.com/repos/FluiditLtd/gt-dxf/contents/src/main/java/org/geotools/data/dxf/DXFDataStore.java?ref=a721497ee8aef04be34062c03cd205cb2fff6c89",
    "patch": "@@ -17,6 +17,7 @@\n \n import java.awt.geom.AffineTransform;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.net.URL;\n import java.util.ArrayList;\n \n@@ -36,6 +37,7 @@\n  * @source $URL: http://svn.osgeo.org/geotools/branches/2.7.x/build/maven/javadoc/../../../modules/unsupported/dxf/src/main/java/org/geotools/data/dxf/DXFDataStore.java $\n  */\n public class DXFDataStore extends AbstractFileDataStore {\n+    private InputStream stream;\n     private URL url;\n     private FeatureReader featureReader;\n     private String srs;\n@@ -46,10 +48,15 @@\n     private AffineTransform transform;\n \n     public DXFDataStore(URL url, String srs, AffineTransform transform) throws IOException {\n-        this(url, srs, null, transform);\n+        this(url, null, srs, null, transform);\n     }\n \n-    public DXFDataStore(URL url, String srs, String targetSrs, AffineTransform transform) throws IOException {\n+    public DXFDataStore(InputStream stream, String srs, AffineTransform transform) throws IOException {\n+        this(null, stream, srs, null, transform);\n+    }\n+\n+    public DXFDataStore(URL url, InputStream stream, String srs, String targetSrs, AffineTransform transform) throws IOException {\n+        this.stream = stream;\n         this.url = url;\n         this.strippedFileName = getURLTypeName(url);\n         this.srs = srs;\n@@ -73,6 +80,9 @@ public ReferencedEnvelope getBounds(Query query) throws IOException {\n     }\n \n     static String getURLTypeName(URL url) throws IOException {\n+        if (url == null) {\n+            return \"\";\n+        }\n         String file = url.getFile();\n         if (file.length() == 0) {\n             return \"unknown_dxf\";\n@@ -149,7 +159,7 @@ public void resetFeatureReader(String typeName) throws IOException {\n \n         if (featureReader == null) {\n             try {\n-                featureReader = new DXFFeatureReader(url, typeName, srs, targetSrs, geometryType, dxfInsertsFilter, transform);\n+                featureReader = new DXFFeatureReader(url, stream, typeName, srs, targetSrs, geometryType, dxfInsertsFilter, transform);\n             } catch (DXFParseException e) {\n                 throw new IOException(\"DXF parse exception\" + e.getLocalizedMessage());\n             }"
  },
  {
    "sha": "aefadd8b20e2fdf39f9b0b21ed8d8e072e54d9be",
    "filename": "src/main/java/org/geotools/data/dxf/DXFDataStoreFactory.java",
    "status": "modified",
    "additions": 30,
    "deletions": 1,
    "changes": 31,
    "blob_url": "https://github.com/FluiditLtd/gt-dxf/blob/a721497ee8aef04be34062c03cd205cb2fff6c89/src/main/java/org/geotools/data/dxf/DXFDataStoreFactory.java",
    "raw_url": "https://github.com/FluiditLtd/gt-dxf/raw/a721497ee8aef04be34062c03cd205cb2fff6c89/src/main/java/org/geotools/data/dxf/DXFDataStoreFactory.java",
    "contents_url": "https://api.github.com/repos/FluiditLtd/gt-dxf/contents/src/main/java/org/geotools/data/dxf/DXFDataStoreFactory.java?ref=a721497ee8aef04be34062c03cd205cb2fff6c89",
    "patch": "@@ -8,10 +8,12 @@\n import java.io.File;\n import java.io.FileNotFoundException;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.net.URL;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.Map;\n+\n import org.geotools.data.DataStore;\n import org.geotools.data.DataStoreFactorySpi;\n import org.geotools.data.FileDataStore;\n@@ -21,6 +23,7 @@\n import org.opengis.referencing.NoSuchAuthorityCodeException;\n \n public class DXFDataStoreFactory implements FileDataStoreFactorySpi {\n+    public static final DataStoreFactorySpi.Param PARAM_INPUT_STREAM = new DataStoreFactorySpi.Param(\"stream\", InputStream.class, \"input stream of a .dxf file\");\n     public static final DataStoreFactorySpi.Param PARAM_URL = new DataStoreFactorySpi.Param(\"url\", URL.class, \"url to a .dxf file\");\n     public static final DataStoreFactorySpi.Param PARAM_SRS = new DataStoreFactorySpi.Param(\"srs\", String.class, \"srs for the .dxf file\");\n     public static final DataStoreFactorySpi.Param PARAM_TARGET_SRS = new DataStoreFactorySpi.Param(\"target srs\", String.class, \"target srs; optional; used for converting text rotation angles\");\n@@ -42,6 +45,13 @@ public String getDescription() {\n         return new String[] {\".dxf\", \".dxf.gz\", \".dxf.zip\"};\n     }\n \n+    /**\n+     * @return true if stream is not empty\n+     */\n+    public boolean canProcess(InputStream stream) throws IOException {\n+       return stream.available() > 0;\n+    }\n+\n     /**\n      * @return true if the file of the f parameter exists\n      */\n@@ -62,6 +72,14 @@ public boolean canProcess(String srs) throws NoSuchAuthorityCodeException, Facto\n      */\n     public boolean canProcess(Map params) {\n         boolean result = false;\n+        if (params.containsKey(PARAM_INPUT_STREAM.key)) {\n+            try {\n+                InputStream stream = (InputStream)PARAM_INPUT_STREAM.lookUp(params);\n+                result = canProcess(stream);\n+            } catch (IOException ioe) {\n+                result = false;\n+            }\n+        }\n         if (params.containsKey(PARAM_URL.key)) {\n             try {\n                 URL url = (URL)PARAM_URL.lookUp(params);\n@@ -132,11 +150,22 @@ public FileDataStore createDataStore(URL url) throws IOException {\n         }\n     }\n \n+    public FileDataStore createDataStore(InputStream stream) throws IOException {\n+        Map params = new HashMap();\n+        params.put(PARAM_INPUT_STREAM.key, stream);\n+\n+        return createDataStore(params);\n+    }\n+\n     public FileDataStore createDataStore(Map params) throws IOException {\n         if(!canProcess(params)) {\n             throw new FileNotFoundException( \"DXF file not found: \" + params);\n         }\n-        return new DXFDataStore((URL)params.get(PARAM_URL.key), (String)params.get(PARAM_SRS.key), (String)params.get(PARAM_TARGET_SRS.key), (AffineTransform)params.get(PARAM_AFFINE_TRANSFORM.key));\n+        if (params.containsKey(PARAM_INPUT_STREAM.key)) {\n+            return new DXFDataStore(null, (InputStream)params.get(PARAM_INPUT_STREAM.key), (String)params.get(PARAM_SRS.key), (String)params.get(PARAM_TARGET_SRS.key), (AffineTransform)params.get(PARAM_AFFINE_TRANSFORM.key));\n+        } else {\n+            return new DXFDataStore((URL)params.get(PARAM_URL.key), null, (String)params.get(PARAM_SRS.key), (String)params.get(PARAM_TARGET_SRS.key), (AffineTransform)params.get(PARAM_AFFINE_TRANSFORM.key));\n+        }\n     }\n \n     public DataStore createNewDataStore(Map params) throws IOException {"
  },
  {
    "sha": "2bbeb1237d7a58d07be4b85ebf15070ce69cab1a",
    "filename": "src/main/java/org/geotools/data/dxf/DXFFeatureReader.java",
    "status": "modified",
    "additions": 7,
    "deletions": 3,
    "changes": 10,
    "blob_url": "https://github.com/FluiditLtd/gt-dxf/blob/a721497ee8aef04be34062c03cd205cb2fff6c89/src/main/java/org/geotools/data/dxf/DXFFeatureReader.java",
    "raw_url": "https://github.com/FluiditLtd/gt-dxf/raw/a721497ee8aef04be34062c03cd205cb2fff6c89/src/main/java/org/geotools/data/dxf/DXFFeatureReader.java",
    "contents_url": "https://api.github.com/repos/FluiditLtd/gt-dxf/contents/src/main/java/org/geotools/data/dxf/DXFFeatureReader.java?ref=a721497ee8aef04be34062c03cd205cb2fff6c89",
    "patch": "@@ -78,22 +78,26 @@\n     private AffineTransform2D transform = null;\n     private MathTransform crsTransform = null;\n \n-    public DXFFeatureReader(URL url, String typeName, String srs, String targetCrs, GeometryType geometryType, ArrayList dxfInsertsFilter, AffineTransform transform) throws IOException, DXFParseException {\n+    public DXFFeatureReader(URL url, InputStream stream, String typeName, String srs, String targetCrs, GeometryType geometryType, ArrayList dxfInsertsFilter, AffineTransform transform) throws IOException, DXFParseException {\n         InputStream cis = null;\n         DXFLineNumberReader lnr = null;\n         if (transform != null)\n             this.transform = new AffineTransform2D(transform);\n \n         try {\n-            cis = new BufferedInputStream(url.openStream(), 64 * 1024);\n+            if (stream != null) {\n+                cis = new BufferedInputStream(stream, 64 * 1024);\n+            } else {\n+                cis = new BufferedInputStream(url.openStream(), 64 * 1024);\n+            }\n             cis.mark(9192);\n             try {\n                 GZIPInputStream gzip = new GZIPInputStream(cis, 64 * 1024);\n                 cis = gzip;\n             } catch (IOException ex) {\n                 try {\n                     cis.reset();\n-                    if (url.getFile().toString().toLowerCase().endsWith(\".zip\")) {\n+                    if (url != null && url.getFile().toString().toLowerCase().endsWith(\".zip\")) {\n                         ZipInputStream zip = new ZipInputStream(cis);\n                         if (zip.getNextEntry() != null)\n                             cis = zip;"
  }
]
