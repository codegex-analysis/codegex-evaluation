[
  {
    "sha": "70d3e8863444e1bdc1147079e682943d9a9ad96a",
    "filename": "Jenkinsfile",
    "status": "modified",
    "additions": 81,
    "deletions": 46,
    "changes": 127,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/Jenkinsfile",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/Jenkinsfile",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/Jenkinsfile?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -3,11 +3,11 @@ pipeline {\n   options { ansiColor('xterm') }\n   environment {\n     PACKAGE         = 'kframework'\n-    VERSION         = '5.0.0'\n     ROOT_URL        = 'https://github.com/kframework/k/releases/download'\n     SHORT_REV       = \"\"\"${sh(returnStdout: true, script: 'git rev-parse --short=7 HEAD').trim()}\"\"\"\n     LONG_REV        = \"\"\"${sh(returnStdout: true, script: 'git rev-parse HEAD').trim()}\"\"\"\n-    K_RELEASE_TAG   = \"v${env.VERSION}-${env.SHORT_REV}\"\n+    VERSION         = \"\"\"${sh(returnStdout: true, script: 'cat package/version').trim()}\"\"\"\n+    K_RELEASE_TAG   = \"v${env.VERSION}\"\n     MAKE_EXTRA_ARGS = '' // Example: 'DEBUG=--debug' to see stack traces\n   }\n   stages {\n@@ -44,6 +44,13 @@ pipeline {\n         stage('Build and Package K on Linux') {\n           stages {\n             stage('Build and Package on Ubuntu Bionic') {\n+              when {\n+                anyOf {\n+                  branch 'release'\n+                  changeRequest()\n+                }\n+                beforeAgent true\n+              }\n               stages {\n                 stage('Build on Ubuntu Bionic') {\n                   agent {\n@@ -116,7 +123,7 @@ pipeline {\n             }\n             stage('Build and Package on Ubuntu Focal') {\n               when {\n-                branch 'master'\n+                branch 'release'\n                 beforeAgent true\n               }\n               stages {\n@@ -175,7 +182,7 @@ pipeline {\n             }\n             stage('Build and Package on Debian Buster') {\n               when {\n-                branch 'master'\n+                branch 'release'\n                 beforeAgent true\n               }\n               stages {\n@@ -237,7 +244,7 @@ pipeline {\n             }\n             stage('Build and Package on Arch Linux') {\n               when {\n-                branch 'master'\n+                branch 'release'\n                 beforeAgent true\n               }\n               stages {\n@@ -300,7 +307,7 @@ pipeline {\n             }\n             stage('Build Platform Independent K Binary') {\n               when {\n-                branch 'master'\n+                branch 'release'\n                 beforeAgent true\n               }\n               agent {\n@@ -330,7 +337,7 @@ pipeline {\n         }\n         stage('Build and Package on Mac OS') {\n           when {\n-            branch 'master'\n+            branch 'release'\n             beforeAgent true\n           }\n           options { timeout(time: 150, unit: 'MINUTES') }\n@@ -422,16 +429,16 @@ pipeline {\n     }\n     stage('DockerHub') {\n       when {\n-        branch 'master'\n+        branch 'release'\n         beforeAgent true\n       }\n       environment {\n-        DOCKERHUB_TOKEN   = credentials('rvdockerhub')\n-        BIONIC_COMMIT_TAG = \"ubuntu-bionic-${env.SHORT_REV}\"\n-        BIONIC_BRANCH_TAG = \"ubuntu-bionic-${env.BRANCH_NAME}\"\n-        FOCAL_COMMIT_TAG = \"ubuntu-focal-${env.SHORT_REV}\"\n-        FOCAL_BRANCH_TAG = \"ubuntu-focal-${env.BRANCH_NAME}\"\n-        DOCKERHUB_REPO    = \"runtimeverificationinc/kframework-k\"\n+        DOCKERHUB_TOKEN    = credentials('rvdockerhub')\n+        BIONIC_VERSION_TAG = \"ubuntu-bionic-${env.VERSION}\"\n+        BIONIC_BRANCH_TAG  = \"ubuntu-bionic-${env.BRANCH_NAME}\"\n+        FOCAL_VERSION_TAG  = \"ubuntu-focal-${env.VERSION}\"\n+        FOCAL_BRANCH_TAG   = \"ubuntu-focal-${env.BRANCH_NAME}\"\n+        DOCKERHUB_REPO     = \"runtimeverificationinc/kframework-k\"\n       }\n       stages {\n         stage('Build Image') {\n@@ -442,27 +449,26 @@ pipeline {\n             sh '''\n                 mv bionic/kframework_${VERSION}_amd64.deb kframework_amd64_bionic.deb\n                 docker login --username \"${DOCKERHUB_TOKEN_USR}\" --password \"${DOCKERHUB_TOKEN_PSW}\"\n-                docker image build . --file package/docker/Dockerfile.ubuntu-bionic --tag \"${DOCKERHUB_REPO}:${BIONIC_COMMIT_TAG}\"\n-                docker image push \"${DOCKERHUB_REPO}:${BIONIC_COMMIT_TAG}\"\n-                docker tag \"${DOCKERHUB_REPO}:${BIONIC_COMMIT_TAG}\" \"${DOCKERHUB_REPO}:${BIONIC_BRANCH_TAG}\"\n+                docker image build . --file package/docker/Dockerfile.ubuntu-bionic --tag \"${DOCKERHUB_REPO}:${BIONIC_VERSION_TAG}\"\n+                docker image push \"${DOCKERHUB_REPO}:${BIONIC_VERSION_TAG}\"\n+                docker tag \"${DOCKERHUB_REPO}:${BIONIC_VERSION_TAG}\" \"${DOCKERHUB_REPO}:${BIONIC_BRANCH_TAG}\"\n                 docker push \"${DOCKERHUB_REPO}:${BIONIC_BRANCH_TAG}\"\n             '''\n             dir('focal') { unstash 'focal' }\n             sh '''\n                 mv focal/kframework_${VERSION}_amd64.deb kframework_amd64_focal.deb\n                 docker login --username \"${DOCKERHUB_TOKEN_USR}\" --password \"${DOCKERHUB_TOKEN_PSW}\"\n-                docker image build . --file package/docker/Dockerfile.ubuntu-focal --tag \"${DOCKERHUB_REPO}:${FOCAL_COMMIT_TAG}\"\n-                docker image push \"${DOCKERHUB_REPO}:${FOCAL_COMMIT_TAG}\"\n-                docker tag \"${DOCKERHUB_REPO}:${FOCAL_COMMIT_TAG}\" \"${DOCKERHUB_REPO}:${FOCAL_BRANCH_TAG}\"\n+                docker image build . --file package/docker/Dockerfile.ubuntu-focal --tag \"${DOCKERHUB_REPO}:${FOCAL_VERSION_TAG}\"\n+                docker image push \"${DOCKERHUB_REPO}:${FOCAL_VERSION_TAG}\"\n+                docker tag \"${DOCKERHUB_REPO}:${FOCAL_VERSION_TAG}\" \"${DOCKERHUB_REPO}:${FOCAL_BRANCH_TAG}\"\n                 docker push \"${DOCKERHUB_REPO}:${FOCAL_BRANCH_TAG}\"\n             '''\n- \n           }\n         }\n         stage('Test Bionic Image') {\n           agent {\n             docker {\n-              image \"${DOCKERHUB_REPO}:${BIONIC_COMMIT_TAG}\"\n+              image \"${DOCKERHUB_REPO}:${BIONIC_VERSION_TAG}\"\n               args '-u 0'\n               reuseNode true\n             }\n@@ -479,7 +485,7 @@ pipeline {\n         stage('Test Focal Image') {\n           agent {\n             docker {\n-              image \"${DOCKERHUB_REPO}:${FOCAL_COMMIT_TAG}\"\n+              image \"${DOCKERHUB_REPO}:${FOCAL_VERSION_TAG}\"\n               args '-u 0'\n               reuseNode true\n             }\n@@ -498,7 +504,7 @@ pipeline {\n     }\n     stage('Deploy') {\n       when {\n-        branch 'master'\n+        branch 'release'\n         beforeAgent true\n       }\n       agent {\n@@ -529,37 +535,38 @@ pipeline {\n             cd k-release\n             git fetch --all\n \n+            release_commit=\"$(git merge-base $LONG_REV origin/master)\"\n+            git checkout $release_commit\n+\n             git tag -d \"${K_RELEASE_TAG}\"         || true\n             git push -d origin \"${K_RELEASE_TAG}\" || true\n             hub release delete \"${K_RELEASE_TAG}\" || true\n \n-            git tag \"${K_RELEASE_TAG}\" \"${LONG_REV}\"\n+            git tag \"${K_RELEASE_TAG}\" \"${release_commit}\"\n             git push origin \"${K_RELEASE_TAG}\"\n \n-            COMMIT_DATE=$(date '+%Y%m%d%H%M' --date=\"$(git show --no-patch --format='%ci' ${K_RELEASE_TAG})\")\n-\n             LOCAL_BOTTLE_NAME=$(find ../mojave -name \"kframework--${VERSION}.mojave.bottle*.tar.gz\")\n             BOTTLE_NAME=$(echo ${LOCAL_BOTTLE_NAME#../mojave/} | sed 's!kframework--!kframework-!')\n \n-            mv ../kframework-${VERSION}-src.tar.gz                      kframework-${VERSION}-src_${COMMIT_DATE}.tar.gz\n-            mv ../bionic/kframework_${VERSION}_amd64.deb                kframework_${VERSION}_amd64_bionic_${COMMIT_DATE}.deb\n-            mv ../focal/kframework_${VERSION}_amd64.deb                 kframework_${VERSION}_amd64_focal_${COMMIT_DATE}.deb\n-            mv ../buster/kframework_${VERSION}_amd64.deb                kframework_${VERSION}_amd64_buster_${COMMIT_DATE}.deb\n-            mv ../arch/kframework-git-${VERSION}-1-x86_64.pkg.tar.zst   kframework-git-${VERSION}-1-x86_64_${COMMIT_DATE}.pkg.tar.zst\n+            mv ../kframework-${VERSION}-src.tar.gz                      kframework-${VERSION}-src.tar.gz\n+            mv ../bionic/kframework_${VERSION}_amd64.deb                kframework_${VERSION}_amd64_bionic.deb\n+            mv ../focal/kframework_${VERSION}_amd64.deb                 kframework_${VERSION}_amd64_focal.deb\n+            mv ../buster/kframework_${VERSION}_amd64.deb                kframework_${VERSION}_amd64_buster.deb\n+            mv ../arch/kframework-git-${VERSION}-1-x86_64.pkg.tar.zst   kframework-git-${VERSION}-1-x86_64.pkg.tar.zst\n             mv $LOCAL_BOTTLE_NAME                                       $BOTTLE_NAME\n-            mv ../k-nightly.tar.gz                                      k-nightly_${COMMIT_DATE}.tar.gz\n+            mv ../k-nightly.tar.gz                                      k-nightly_${VERSION}.tar.gz\n \n-            echo \"K Framework Release ${K_RELEASE_TAG}\"  > release.md\n-            echo ''                                     >> release.md\n-            cat k-distribution/INSTALL.md               >> release.md\n-            hub release create                                                                                 \\\n-                --attach kframework-${VERSION}-src_${COMMIT_DATE}.tar.gz'#Source tar.gz'                       \\\n-                --attach kframework_${VERSION}_amd64_bionic_${COMMIT_DATE}.deb'#Ubuntu Bionic (18.04) Package' \\\n-                --attach kframework_${VERSION}_amd64_focal_${COMMIT_DATE}.deb'#Ubuntu Focal (20.04) Package'   \\\n-                --attach kframework_${VERSION}_amd64_buster_${COMMIT_DATE}.deb'#Debian Buster (10) Package'    \\\n-                --attach kframework-git-${VERSION}-1-x86_64_${COMMIT_DATE}.pkg.tar.zst'#Arch Package'          \\\n-                --attach $BOTTLE_NAME'#Mac OS X Homebrew Bottle'                                               \\\n-                --attach k-nightly_${COMMIT_DATE}.tar.gz'#Platform Indepdendent K Binary'                      \\\n+            echo \"K Framework Release ${VERSION}\"  > release.md\n+            echo ''                               >> release.md\n+            cat k-distribution/INSTALL.md         >> release.md\n+            hub release create                                                                  \\\n+                --attach kframework-${VERSION}-src.tar.gz'#Source tar.gz'                       \\\n+                --attach kframework_${VERSION}_amd64_bionic.deb'#Ubuntu Bionic (18.04) Package' \\\n+                --attach kframework_${VERSION}_amd64_focal.deb'#Ubuntu Focal (20.04) Package'   \\\n+                --attach kframework_${VERSION}_amd64_buster.deb'#Debian Buster (10) Package'    \\\n+                --attach kframework-git-${VERSION}-1-x86_64.pkg.tar.zst'#Arch Package'          \\\n+                --attach $BOTTLE_NAME'#Mac OS X Homebrew Bottle'                                \\\n+                --attach k-nightly_${VERSION}.tar.gz'#Platform Indepdendent K Binary'           \\\n                 --file release.md \"${K_RELEASE_TAG}\"\n           '''\n         }\n@@ -578,7 +585,7 @@ pipeline {\n     }\n     stage('Update Dependents') {\n       when {\n-        branch 'master'\n+        branch 'release'\n         beforeAgent true\n       }\n       steps {\n@@ -591,7 +598,7 @@ pipeline {\n     }\n     stage('GitHub Pages') {\n       when {\n-        branch 'master'\n+        branch 'release'\n         beforeAgent true\n       }\n       agent {\n@@ -627,5 +634,33 @@ pipeline {\n         }\n       }\n     }\n+    stage('Trigger Release') {\n+      when {\n+        branch 'master'\n+        beforeAgent true\n+      }\n+      agent {\n+        dockerfile {\n+          additionalBuildArgs '--build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g)'\n+          reuseNode true\n+        }\n+      }\n+      options { skipDefaultCheckout() }\n+      post { failure { slackSend color: '#cb2431' , channel: '#k' , message: \"Failed to trigger Release: ${env.BUILD_URL}\" } }\n+      steps {\n+        sh '''\n+          git clone 'https://github.com/kframework/k' k-release\n+          cd k-release\n+          git fetch --all\n+          git checkout -B release origin/release\n+          git merge origin/master\n+          ./package/version.sh bump\n+          ./package/version.sh sub\n+          git add -u\n+          git commit -m \"Set Version: $(cat package/version)\"\n+          git push origin release\n+        '''\n+      }\n+    }\n   }\n }"
  },
  {
    "sha": "a0651e32f8f0e258de27c7f4fbc01cdeb0b1eeb7",
    "filename": "install-k",
    "status": "modified",
    "additions": 5,
    "deletions": 3,
    "changes": 8,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/install-k",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/install-k",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/install-k?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -1,5 +1,7 @@\n #!/bin/sh -e\n \n+K_VERSION=5.0.0\n+\n if [ `id -u` -ne 0 ]; then\n   echo \"$0: error: This script must be run as root.\"\n   exit 1\n@@ -37,6 +39,6 @@ esac\n \n apt-get update\n apt-get install -y curl\n-curl -L https://github.com/kframework/k/releases/download/$TAG/kframework_5.0.0_amd64_$CODENAME.deb -o kframework_5.0.0_amd64.deb\n-apt-get install -y ./kframework_5.0.0_amd64.deb\n-rm -f kframework_5.0.0_amd64.deb\n+curl -L https://github.com/kframework/k/releases/download/$TAG/kframework_${K_VERSION}_amd64_$CODENAME.deb -o kframework_${K_VERSION}_amd64.deb\n+apt-get install -y ./kframework_${K_VERSION}_amd64.deb\n+rm -f kframework_${K_VERSION}_amd64.deb"
  },
  {
    "sha": "241560a5fc61197cceaa6fbfcbc85e277bfa0782",
    "filename": "k-distribution/src/main/assembly/bin.xml",
    "status": "modified",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/k-distribution/src/main/assembly/bin.xml",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/k-distribution/src/main/assembly/bin.xml",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/k-distribution/src/main/assembly/bin.xml?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -67,6 +67,15 @@\n       <directory>${project.build.directory}/lib</directory>\n       <outputDirectory>/lib/kframework</outputDirectory>\n     </fileSet>\n+    <fileSet>\n+      <directory>${project.parent.basedir}/package</directory>\n+      <outputDirectory>/lib</outputDirectory>\n+      <includes>\n+        <include>version</include>\n+        <include>version.commit</include>\n+        <include>version.date</include>\n+      </includes>\n+    </fileSet>\n     <fileSet>\n       <directory>${project.basedir}/../llvm-backend/target/build/install/bin</directory>\n       <outputDirectory>/bin</outputDirectory>"
  },
  {
    "sha": "7ac9fd7a0a5fbdfe0ced2aabfc3a42bbcad4f286",
    "filename": "k-distribution/tests/regression-new/help/Makefile",
    "status": "modified",
    "additions": 21,
    "deletions": 14,
    "changes": 35,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/k-distribution/tests/regression-new/help/Makefile",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/k-distribution/tests/regression-new/help/Makefile",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/k-distribution/tests/regression-new/help/Makefile?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -5,20 +5,27 @@ KRUN_FLAGS=--help\n KOMPILE_FLAGS=--syntax-module TEST\n \n 1.test:\n-\t${KAST} --help | grep -q -- \"--version\"\n-\t${KDEP} --help | grep -q -- \"--version\"\n-\t${KEQ} --help | grep -q -- \"--version\"\n-\t${KOMPILE} --help | grep -q -- \"--version\"\n-\t${KPROVE} --help | grep -q -- \"--version\"\n-\t${KRUN} --help | grep -q -- \"--version\"\n-\t${KSERVER} --help | grep -q -- \"--version\"\n-\t${KAST} --version | grep -q RV-K\n-\t${KDEP} --version | grep -q RV-K\n-\t${KEQ} --version | grep -q RV-K\n-\t${KOMPILE} --version | grep -q RV-K\n-\t${KPROVE} --version | grep -q RV-K\n-\t${KRUN} --version | grep -q RV-K\n-\t${KSERVER} --version | grep -q RV-K\n+\t${KAST}    --help    | grep -q -- \"--version\"\n+\t${KDEP}    --help    | grep -q -- \"--version\"\n+\t${KEQ}     --help    | grep -q -- \"--version\"\n+\t${KOMPILE} --help    | grep -q -- \"--version\"\n+\t${KPROVE}  --help    | grep -q -- \"--version\"\n+\t${KRUN}    --help    | grep -q -- \"--version\"\n+\t${KSERVER} --help    | grep -q -- \"--version\"\n+\t${KAST}    --version | grep -q $(shell cat ../../../../package/version)\n+\t${KDEP}    --version | grep -q $(shell cat ../../../../package/version)\n+\t${KEQ}     --version | grep -q $(shell cat ../../../../package/version)\n+\t${KOMPILE} --version | grep -q $(shell cat ../../../../package/version)\n+\t${KPROVE}  --version | grep -q $(shell cat ../../../../package/version)\n+\t${KRUN}    --version | grep -q $(shell cat ../../../../package/version)\n+\t${KSERVER} --version | grep -q $(shell cat ../../../../package/version)\n+\t${KAST}    --version | grep -q $(shell cat ../../../../package/version.commit)\n+\t${KDEP}    --version | grep -q $(shell cat ../../../../package/version.commit)\n+\t${KEQ}     --version | grep -q $(shell cat ../../../../package/version.commit)\n+\t${KOMPILE} --version | grep -q $(shell cat ../../../../package/version.commit)\n+\t${KPROVE}  --version | grep -q $(shell cat ../../../../package/version.commit)\n+\t${KRUN}    --version | grep -q $(shell cat ../../../../package/version.commit)\n+\t${KSERVER} --version | grep -q $(shell cat ../../../../package/version.commit)\n \n \n include ../../../include/kframework/ktest.mak"
  },
  {
    "sha": "5d4a2828fc4adb4ed3866af9e2833ad07dff4941",
    "filename": "kernel/pom.xml",
    "status": "modified",
    "additions": 0,
    "deletions": 7,
    "changes": 7,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/kernel/pom.xml",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/kernel/pom.xml",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/kernel/pom.xml?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -182,13 +182,6 @@\n       <type>exe</type>\n     </dependency>\n \n-    <!--Custom serializer-->\n-    <!--<dependency>\n-      <groupId>com.esotericsoftware</groupId>\n-      <artifactId>kryo</artifactId>\n-      <version>5.0.0-RC4</version> - Crashes when serializing Att.\n-      <version>4.0.2</version> - Doesn't work out of the box. Serialized classes need default constructor.\n-    </dependency>-->\n     <dependency>\n       <groupId>de.ruedigermoeller</groupId>\n       <artifactId>fst</artifactId>"
  },
  {
    "sha": "430f70fac5dc6e7642d0ecbc3365eb9226160d13",
    "filename": "kernel/src/main/java/org/kframework/utils/file/JarInfo.java",
    "status": "modified",
    "additions": 11,
    "deletions": 15,
    "changes": 26,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/kernel/src/main/java/org/kframework/utils/file/JarInfo.java",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/kernel/src/main/java/org/kframework/utils/file/JarInfo.java",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/kernel/src/main/java/org/kframework/utils/file/JarInfo.java?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -1,6 +1,8 @@\n // Copyright (c) 2014-2019 K Team. All Rights Reserved.\n package org.kframework.utils.file;\n \n+import org.apache.commons.io.FileUtils;\n+\n import org.kframework.utils.errorsystem.KEMException;\n import org.kframework.utils.errorsystem.KExceptionManager;\n \n@@ -71,23 +73,17 @@ public JarInfo(KExceptionManager kem) {\n     }\n \n     public void printVersionMessage() {\n+        String kBase = getKBase();\n         try {\n-            URL url = JarInfo.class.getResource(\"versionMarker\");\n-            URLConnection conn = url.openConnection();\n-            if (!(conn instanceof JarURLConnection)) {\n-                System.out.println(\"K framework internal build\");\n-                return;\n-            }\n-            Manifest mf = ((JarURLConnection)conn).getManifest();\n-            String revision = mf.getMainAttributes().getValue(\"Implementation-Revision\");\n-            String branch = mf.getMainAttributes().getValue(\"Implementation-Branch\");\n-            Date date = new Date(Long.parseLong(mf.getMainAttributes().getValue(\"Implementation-Date\")));\n-            System.out.println(\"RV-K version \" + JarInfo.class.getPackage().getImplementationVersion());\n-            System.out.println(\"Git revision: \" + revision);\n-            System.out.println(\"Git branch: \" + branch);\n-            System.out.println(\"Build date: \" + date.toString());\n+            String version       = FileUtils.readFileToString(new File(kBase + \"/lib/version\")).trim();\n+            String versionCommit = FileUtils.readFileToString(new File(kBase + \"/lib/version.commit\")).trim();\n+            String versionDate   = FileUtils.readFileToString(new File(kBase + \"/lib/version.date\")).trim();\n+\n+            System.out.println(\"K version:    \" + version);\n+            System.out.println(\"Git revision: \" + versionCommit);\n+            System.out.println(\"Build date:   \" + versionDate);\n         } catch (IOException e) {\n-            throw KEMException.internalError(\"Could not load version info. Check your build system?\");\n+            throw KEMException.internalError(\"Could not load version info.\");\n         }\n     }\n }"
  },
  {
    "sha": "0062ac971805f7b700058db4bb0f5c5b771dda76",
    "filename": "package/version",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/package/version",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/package/version",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/package/version?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -0,0 +1 @@\n+5.0.0"
  },
  {
    "sha": "21586efa9294dbd2984440796c7a656ac7bcc609",
    "filename": "package/version.commit",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.commit",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.commit",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/package/version.commit?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -0,0 +1 @@\n+4e21e16"
  },
  {
    "sha": "c9a1ba4e50cc13207dbec2636c074a978231a887",
    "filename": "package/version.date",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.date",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.date",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/package/version.date?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -0,0 +1 @@\n+Wed Mar 17 16:34:54 UTC 2021"
  },
  {
    "sha": "7ed6ff82de6bcc2a78243fc9c54d3ef5ac14da69",
    "filename": "package/version.major",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.major",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.major",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/package/version.major?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -0,0 +1 @@\n+5"
  },
  {
    "sha": "573541ac9702dd3969c9bc859d2b91ec1f7e6e56",
    "filename": "package/version.minor",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.minor",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.minor",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/package/version.minor?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -0,0 +1 @@\n+0"
  },
  {
    "sha": "573541ac9702dd3969c9bc859d2b91ec1f7e6e56",
    "filename": "package/version.patch",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.patch",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.patch",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/package/version.patch?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -0,0 +1 @@\n+0"
  },
  {
    "sha": "5ac5fa88bde7962355ed123b6a861275f26176d9",
    "filename": "package/version.release-tag",
    "status": "added",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.release-tag",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.release-tag",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/package/version.release-tag?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -0,0 +1 @@\n+5.0.0-4e21e16"
  },
  {
    "sha": "340895a45be24176c7fd6b486d2bf8d7329ca947",
    "filename": "package/version.sh",
    "status": "added",
    "additions": 78,
    "deletions": 0,
    "changes": 78,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.sh",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/package/version.sh",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/package/version.sh?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -0,0 +1,78 @@\n+#!/usr/bin/env bash\n+\n+set -xeuo pipefail\n+\n+UPSTREAM=\"${UPSTREAM:-origin}\"\n+MASTER=\"${MASTER:-master}\"\n+RELEASE=\"${RELEASE:-release}\"\n+\n+notif() { echo \"== $@\" >&2 ; }\n+fatal() { echo \"[FATAL] $@\" ; exit 1 ; }\n+\n+major_version_file=\"package/version.major\"\n+minor_version_file=\"package/version.minor\"\n+patch_version_file=\"package/version.patch\"\n+commit_version_file=\"package/version.commit\"\n+version_file=\"package/version\"\n+release_tag_file=\"package/version.release-tag\"\n+version_date_file=\"package/version.date\"\n+\n+version_bump() {\n+    local master_commit master_major master_minor master_patch master_commit\n+    local release_commit release_patch release_minor release_major\n+    local release_tag version_date\n+\n+    master_commit=\"$(git rev-parse --short=7 ${UPSTREAM}/${MASTER})\"\n+    release_commit=\"$(git rev-parse --short=7 ${UPSTREAM}/${RELEASE})\"\n+\n+    master_major=\"$(git show $master_commit:$major_version_file)\"\n+    master_minor=\"$(git show $master_commit:$minor_version_file)\"\n+    master_patch=\"$(git show $master_commit:$patch_version_file)\"\n+\n+    release_major=\"$(git show $release_commit:$major_version_file)\"\n+    release_minor=\"$(git show $release_commit:$minor_version_file)\"\n+    release_patch=\"$(git show $release_commit:$patch_version_file)\"\n+\n+    if [[ \"$master_major\" -gt \"$release_major\" ]]; then\n+        echo 0 > $minor_version_file\n+        echo 0 > $patch_version_file\n+    elif [[ \"$master_minor\" -gt \"$release_minor\" ]]; then\n+        echo 0 > $patch_version_file\n+    else\n+        echo $(($release_patch + 1)) > $patch_version_file\n+    fi\n+    echo \"$master_commit\" > $commit_version_file\n+\n+    major=\"$(cat $major_version_file)\"\n+    minor=\"$(cat $minor_version_file)\"\n+    patch=\"$(cat $patch_version_file)\"\n+    commit=\"$(cat $commit_version_file)\"\n+    version=\"${major}.${minor}.${patch}\"\n+    echo \"$version\" > $version_file\n+\n+    release_tag=\"${version}-${commit}\"\n+    echo \"$release_tag\" > $release_tag_file\n+\n+    version_date=\"$(date)\"\n+    echo \"$version_date\" > $version_date_file\n+\n+    notif \"Version: ${release_tag}\"\n+}\n+\n+version_sub() {\n+    local version\n+    version=\"$(cat $version_file)\"\n+    sed --in-place 's/K_VERSION=5.0.0/K_VERSION='${version}'/'                                                         install-k\n+    sed --in-place 's/name = \"k-5.0.0\";/name = \"k-'${version}'\";/'                                                     nix/k.nix\n+    sed --in-place 's/pkgver=5.0.0/pkgver='${version}'/'                                                               package/arch/PKGBUILD\n+    sed --in-place 's/kframework (5.0.0) unstable; urgency=medium/kframework ('${version}') unstable; urgency=medium/' package/debian/changelog\n+    sed --in-place 's/K_VERSION=5.0.0/K_VERSION='${version}'/'                                                         src/main/scripts/test-in-container-debian\n+}\n+\n+version_command=\"$1\"\n+\n+case \"$version_command\" in\n+    bump) version_bump \"$@\"                    ;;\n+    sub)  version_sub  \"$@\"                    ;;\n+    *)    fatal \"No command: $version_command\" ;;\n+esac"
  },
  {
    "sha": "6e4c117894604b6d9cd84130a2537c01df2fff2e",
    "filename": "src/main/scripts/test-in-container-debian",
    "status": "modified",
    "additions": 2,
    "deletions": 1,
    "changes": 3,
    "blob_url": "https://github.com/kframework/k/blob/a8131a747b327c50f802557d0071ba4f39115cbb/src/main/scripts/test-in-container-debian",
    "raw_url": "https://github.com/kframework/k/raw/a8131a747b327c50f802557d0071ba4f39115cbb/src/main/scripts/test-in-container-debian",
    "contents_url": "https://api.github.com/repos/kframework/k/contents/src/main/scripts/test-in-container-debian?ref=a8131a747b327c50f802557d0071ba4f39115cbb",
    "patch": "@@ -1,7 +1,8 @@\n #!/bin/sh -ex\n+K_VERSION=5.0.0\n export DEBIAN_FRONTEND=noninteractive\n apt-get update\n apt-get upgrade --yes\n apt-get install --yes opam\n-apt-get install --yes ./kframework_5.0.0_amd64.deb\n+apt-get install --yes ./kframework_${K_VERSION}_amd64.deb\n \"$(dirname \"$0\")/test-in-container\""
  }
]
