[
  {
    "sha": "c6b6517d53ce170bc00473f3c2cb687af4c388f4",
    "filename": "out/production/java_3/Main.class",
    "status": "modified",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Hekit47/java_3/blob/893adff1eb9ff80046160d7866183eefd153d650/out/production/java_3/Main.class",
    "raw_url": "https://github.com/Hekit47/java_3/raw/893adff1eb9ff80046160d7866183eefd153d650/out/production/java_3/Main.class",
    "contents_url": "https://api.github.com/repos/Hekit47/java_3/contents/out/production/java_3/Main.class?ref=893adff1eb9ff80046160d7866183eefd153d650"
  },
  {
    "sha": "8b013531590ebe847b8b4d17e4d7cf44070bb3d7",
    "filename": "src/Apple.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Hekit47/java_3/blob/893adff1eb9ff80046160d7866183eefd153d650/src/Apple.java",
    "raw_url": "https://github.com/Hekit47/java_3/raw/893adff1eb9ff80046160d7866183eefd153d650/src/Apple.java",
    "contents_url": "https://api.github.com/repos/Hekit47/java_3/contents/src/Apple.java?ref=893adff1eb9ff80046160d7866183eefd153d650",
    "patch": "@@ -0,0 +1,5 @@\n+public class Apple extends Fruit {\n+    public Apple() {\n+        super(1.0f);\n+    }\n+}"
  },
  {
    "sha": "c9e3ad64c0ad3c0fb48f37a044ddc843489be8d2",
    "filename": "src/Box.java",
    "status": "added",
    "additions": 39,
    "deletions": 0,
    "changes": 39,
    "blob_url": "https://github.com/Hekit47/java_3/blob/893adff1eb9ff80046160d7866183eefd153d650/src/Box.java",
    "raw_url": "https://github.com/Hekit47/java_3/raw/893adff1eb9ff80046160d7866183eefd153d650/src/Box.java",
    "contents_url": "https://api.github.com/repos/Hekit47/java_3/contents/src/Box.java?ref=893adff1eb9ff80046160d7866183eefd153d650",
    "patch": "@@ -0,0 +1,39 @@\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+\n+public class Box<T extends Fruit> {\n+\n+\n+    ArrayList<T> box;\n+\n+    @SafeVarargs\n+    public Box(T... fruits){\n+        box = new ArrayList<>(Arrays.asList(fruits));\n+    }\n+\n+    public ArrayList<T> getBox(){\n+        return box;\n+    }\n+\n+    public void addFruit(T fruit){\n+        box.add(fruit);\n+    }\n+\n+    public float getWeight() {\n+        float totalWeight = 0.0f;\n+        for (T t : box) {\n+            totalWeight = totalWeight + t.getWeight();\n+        }\n+        return totalWeight;\n+    }\n+\n+    public boolean compare(Box<? extends Fruit> boxWithSomething) {\n+        return Math.abs(getWeight() - boxWithSomething.getWeight()) < 0.0001f;\n+    }\n+\n+    public void replaceFruitsToAnotherBox(Box<T> anotherBox) {\n+        anotherBox.box.addAll(this.box);\n+        this.box.clear();\n+    }\n+\n+}"
  },
  {
    "sha": "cbe40ec50b42cc8fdcb0027902620356674fe1a2",
    "filename": "src/Fruit.java",
    "status": "added",
    "additions": 11,
    "deletions": 0,
    "changes": 11,
    "blob_url": "https://github.com/Hekit47/java_3/blob/893adff1eb9ff80046160d7866183eefd153d650/src/Fruit.java",
    "raw_url": "https://github.com/Hekit47/java_3/raw/893adff1eb9ff80046160d7866183eefd153d650/src/Fruit.java",
    "contents_url": "https://api.github.com/repos/Hekit47/java_3/contents/src/Fruit.java?ref=893adff1eb9ff80046160d7866183eefd153d650",
    "patch": "@@ -0,0 +1,11 @@\n+public class Fruit {\n+    float weight;\n+\n+    public Fruit(float weight){\n+        this.weight = weight;\n+    }\n+\n+    public float getWeight(){\n+        return weight;\n+    }\n+}"
  },
  {
    "sha": "78721836657854ce565d953fb5e93fa4d4c2184e",
    "filename": "src/Main.java",
    "status": "modified",
    "additions": 81,
    "deletions": 1,
    "changes": 82,
    "blob_url": "https://github.com/Hekit47/java_3/blob/893adff1eb9ff80046160d7866183eefd153d650/src/Main.java",
    "raw_url": "https://github.com/Hekit47/java_3/raw/893adff1eb9ff80046160d7866183eefd153d650/src/Main.java",
    "contents_url": "https://api.github.com/repos/Hekit47/java_3/contents/src/Main.java?ref=893adff1eb9ff80046160d7866183eefd153d650",
    "patch": "@@ -1,9 +1,89 @@\n-import java.lang.reflect.Array;\n+import java.util.Arrays;\n \n public class Main {\n \n \n \n+    public static void main(String[] args){\n+\n+        taskOne();\n+        taskTwo();\n+        taskThree();\n+    }\n+\n+    private static void taskThree() {\n+        System.out.println(\"---------------------------------------\");\n+        System.out.println(\"taskThree\");\n+        Box<Apple> boxWithApple = new Box<>(new Apple(), new Apple(), new Apple());\n+        Box<Orange> boxWithOranges = new Box<>(new Orange(), new Orange());\n+        Box<Orange> anotherBoxWithOranges = new Box<>();\n+        boxInfo(\"Коробка с яблоками весит: \", boxWithApple.getWeight());\n+        boxInfo(\"Коробка с апельсинами весит: \", boxWithOranges.getWeight());\n+        compare(boxWithApple, boxWithOranges);\n+        System.out.println(\"Добавим еще одно яблоко в коробку.\");\n+        boxWithApple.addFruit(new Apple());\n+        boxInfo(\"Коробка с яблоками весит: \", boxWithApple.getWeight());\n+        boxInfo(\"Коробка с апельсинами весит: \", boxWithOranges.getWeight());\n+        compare(boxWithApple, boxWithOranges);\n+\n+        boxWithOranges.replaceFruitsToAnotherBox(anotherBoxWithOranges);\n+        System.out.println(boxWithOranges.getBox());\n+        System.out.println(anotherBoxWithOranges.getBox());\n+    }\n+\n+    private static void compare(Box<Apple> boxWithApple, Box<Orange> boxWithOranges) {\n+        System.out.println(\"Вес коробок одинаковый -  \" + boxWithApple.compare(boxWithOranges));\n+    }\n+\n+    private static void boxInfo(String s, float weight) {\n+        System.out.println(s + weight);\n+    }\n+\n+\n+    private static void taskTwo() {\n+        System.out.println(\"---------------------------------------\");\n+        System.out.println(\"taskTwo\");\n+        Integer[] intArr = {1, 2, 3, 4, 5};\n+        String[] strArr = {\"one\", \"two\",\"three\",\"four\",\"five\"};\n+        arrayToArrayList(intArr);\n+        arrayToArrayList(strArr);\n+        info(Arrays.toString(intArr));\n+        info(Arrays.toString(strArr));\n+    }\n+\n+    private static void info(String s) {\n+        System.out.println(s);\n+    }\n+\n+\n+    private static void taskOne() {\n+        System.out.println(\"---------------------------------------\");\n+        System.out.println(\"taskOne\");\n+        Integer[] intArr = {1, 2, 3, 4, 5};\n+        String[] strArr = {\"one\", \"two\",\"three\",\"four\",\"five\"};\n+        try {\n+            exchangeObjects(intArr, 0, 2);\n+            exchangeObjects(strArr, 0, 2);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        info(\"Swap result in integer array: \" + Arrays.toString(intArr));\n+        info(\"Swap result in string array: \" + Arrays.toString(strArr));\n+    }\n+\n+\n+    private static void exchangeObjects(Object[] arr, int replaceIndex1, int replaceIndex2) throws Exception {\n+        if (replaceIndex1 < 0 || replaceIndex1 > arr.length ||\n+                replaceIndex2 < 0 || replaceIndex2 > arr.length || replaceIndex1 == replaceIndex2) {\n+           throw new Exception(\"Неправильно указаны позиции элементов для замены\");\n+        }\n+        Object temp = arr[replaceIndex1];\n+        arr[replaceIndex1] = arr[replaceIndex2];\n+        arr[replaceIndex2] = temp;\n+    }\n+\n+    private static <T> void arrayToArrayList(T[] arr){\n+    }\n \n \n }"
  },
  {
    "sha": "c94639c2216195130d9236034b9a9853204958b1",
    "filename": "src/Orange.java",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/Hekit47/java_3/blob/893adff1eb9ff80046160d7866183eefd153d650/src/Orange.java",
    "raw_url": "https://github.com/Hekit47/java_3/raw/893adff1eb9ff80046160d7866183eefd153d650/src/Orange.java",
    "contents_url": "https://api.github.com/repos/Hekit47/java_3/contents/src/Orange.java?ref=893adff1eb9ff80046160d7866183eefd153d650",
    "patch": "@@ -0,0 +1,5 @@\n+public class Orange extends Fruit {\n+    public Orange() {\n+        super(1.5f);\n+    }\n+}"
  }
]
