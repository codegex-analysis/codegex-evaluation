[
  {
    "sha": "df62fddde3ab7a85d7d19b0ffb8ef09a0d85412b",
    "filename": ".github/ISSUE_TEMPLATE/bug_report.md",
    "status": "modified",
    "additions": 3,
    "deletions": 0,
    "changes": 3,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/.github/ISSUE_TEMPLATE/bug_report.md",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/.github/ISSUE_TEMPLATE/bug_report.md",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/.github/ISSUE_TEMPLATE/bug_report.md?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -6,6 +6,8 @@ about: Report a reproducible bug or regression in this library.\n # Bug\n \n <!--\n+  Before submitting it, please ensure that this was not already asked in another issue, or on StackOverflow. Ideally, you should always refer to StackOverflow first.\n+  \n   Please provide a clear and concise description of what the bug is.\n   Include screenshots or gifs if needed.\n   Please test using the latest release of the library, as maybe your bug has been already fixed.\n@@ -50,4 +52,5 @@ Describe what you expected to happen:\n \n <!--\n  Please add minimal runnable repro as explained above so that the bug can be tested in isolation.\n+ Use the example project to reproduce it.\n -->"
  },
  {
    "sha": "84ba286011134537a985538455f56fe699ca6ab5",
    "filename": ".npmignore",
    "status": "modified",
    "additions": 10,
    "deletions": 1,
    "changes": 11,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/.npmignore",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/.npmignore",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/.npmignore?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -62,4 +62,13 @@ local.properties\n example\n \n # Git\n-.git \n\\ No newline at end of file\n+.git \n+\n+# GitHub\n+.github/*\n+\n+# Docs\n+submitting-a-pull-request.md\n+\n+# Vscode\n+.vscode/*"
  },
  {
    "sha": "a7b3c0c64eb5efbef334859489429a7d2c443ef7",
    "filename": "CHANGELOG.md",
    "status": "modified",
    "additions": 143,
    "deletions": 0,
    "changes": 143,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/CHANGELOG.md",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/CHANGELOG.md?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -12,6 +12,149 @@ This project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html\n \n ### Fixed\n \n+## [7.2.3] 2021-03-18\n+\n+### Fixed\n+\n+- (Android) Fix: Notification drawer doesn't close after click on action that navigates you to app [#1914](https://github.com/zo0r/react-native-push-notification/issues/1914)\n+- (iOS) Fix: foreground notification property [#1916](https://github.com/zo0r/react-native-push-notification/pull/1916)\n+\n+## [7.2.2] 2021-03-04\n+\n+### Fixed\n+\n+- (Android) Fix: Could not invoke RNPushNotification.getDeliveredNotifications. [#1878](https://github.com/zo0r/react-native-push-notification/issues/1878)\n+- (fix) deep clone details and notifications. [#1793](https://github.com/zo0r/react-native-push-notification/issues/1793)\n+\n+## [7.2.1] 2021-02-11\n+\n+### Fixed\n+\n+- (iOS) Fix `playSound` options on local notifications. [#1858](https://github.com/zo0r/react-native-push-notification/issues/1858#issuecomment-775714298)\n+\n+## [7.2.0] 2021-01-24\n+\n+### Features\n+\n+- (Android) Handle localization for notification title and body [#1837](https://github.com/zo0r/react-native-push-notification/pull/1837)\n+\n+## [7.1.1] 2021-01-20\n+\n+### Fixed\n+\n+- (Android) unsubscribeFromTopic function fix [#1831](https://github.com/zo0r/react-native-push-notification/pull/1831)\n+\n+## [7.1.0] 2021-01-16\n+\n+# Features\n+\n+- (Android) Add hooks to intent handling and bundle parsing [#1819](https://github.com/zo0r/react-native-push-notification/pull/1819)\n+ \n+## [7.0.0] 2020-12-23\n+\n+### Breaking changes\n+\n+- (iOS) Replace deprecated local notification methods on iOS [#1751](https://github.com/zo0r/react-native-push-notification/pull/1751)\n+- (Android) Rename the Android package from `RNPushNotification` to `ReactNativePushNotification` resolve [#893](https://github.com/zo0r/react-native-push-notification/issues/893)\n+- (Android) Allow `userInfo` to be stored in scheduled notification as in iOS (mapped as `data` on press or list scheduled notifications).\n+\n+### Features\n+\n+- (Android) silent channel using playSound flag\n+- (Android) implement 'bigLargeIcon' for Android notifications (must be combined with BigPicture) [#1730](https://github.com/zo0r/react-native-push-notification/pull/1730)\n+- (Android) notification with inline reply [#612](https://github.com/zo0r/react-native-push-notification/pull/612)\n+- (Android) Support using drawable as Android small icon [#1787](https://github.com/zo0r/react-native-push-notification/pull/1787)\n+\n+## [6.1.3] 2020-11-09\n+\n+### Fixed\n+\n+- (Android) Null pointer exception when trying to create channel [#1734](https://github.com/zo0r/react-native-push-notification/issues/1734)\n+\n+## [6.1.2] 2020-10-29\n+\n+### Fixed\n+\n+- (Android) Fix for vibration on notifs for Android API >= 26 [#1686](https://github.com/zo0r/react-native-push-notification/pull/1686)\n+\n+## [6.1.1] 2020-09-29\n+\n+### Fixed\n+\n+- (Android) Fix a crash when the application is in background [#1676](https://github.com/zo0r/react-native-push-notification/issues/1676)\n+\n+## [6.1.0] 2020-09-28\n+\n+### Features\n+\n+- (Android) Allow a default channel in the `AndroidManifest`:\n+  ```xml\n+        <meta-data android:name=\"com.dieam.reactnativepushnotification.default_notification_channel_id\" android:value=\"...\"/>\n+  ```\n+  If not defined, fallback to the Firebase value of:\n+  ```xml\n+        <meta-data android:name=\"com.google.firebase.messaging.default_notification_channel_id\" android:value=\"...\"/>\n+  ```\n+  If not defined, fallback to the default Firebase channel id `fcm_fallback_notification_channel`\n+\n+## [6.0.0] 2020-09-26\n+\n+### Breaking changes\n+\n+- (Android) Channel Management: In order to limit the scope of responsability of this library, developers are now responsible of the creation of the channels. You can find the documentation at https://github.com/zo0r/react-native-push-notification#channel-management-android. These changes are also made to allow improvements in the future of the library. Here the list of impacts:\n+  - You must create your channels before triggering a notification.\n+  - These entries in `AndroidManifest` are deprecated:\n+  ```xml\n+        <meta-data android:name=\"com.dieam.reactnativepushnotification.notification_channel_name\" android:value=\"...\"/>\n+        <meta-data android:name=\"com.dieam.reactnativepushnotification.notification_channel_description\" android:value=\"...\"/>\n+        <meta-data android:name=\"com.dieam.reactnativepushnotification.channel_create_default\" android:value=\"...\"/>\n+  ```\n+  -  Followings options changed on Android in `localNotification` and `localNotificationSchedule`:\n+     - `channelId` becomes mandatory (warning if not provided)\n+     - `channelName` is deprecated\n+     - `channelDescription` is deprecated\n+     - `importance` is deprecated\n+  - These changes help to avoid an issue [#1649](https://github.com/zo0r/react-native-push-notification/issues/1649)\n+- (Android) Remove check for the intent `BOOT_COMPLETED`, this should allow more intent action such as `QUICKBOOT_POWERON`. It's recommended to update `AndroidManifest`, the `RNPushNotificationBootEventReceiver` to:\n+  ```xml\n+        <receiver android:name=\"com.dieam.reactnativepushnotification.modules.RNPushNotificationBootEventReceiver\">\n+            <intent-filter>\n+                <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n+                <action android:name=\"android.intent.action.QUICKBOOT_POWERON\" />\n+                <action android:name=\"com.htc.intent.action.QUICKBOOT_POWERON\"/>\n+            </intent-filter>\n+        </receiver>\n+  ```\n+- `@react-native-community/push-notification-ios` is now a `peerDependency`, please make sure that you installed this library with NPM or YARN.\n+- (Android) Fix a bug where notification data are not inside `data` property after been pressed by user. When sending notification + data and app in background.\n+- (Android) Add more fields from the firebase notification part. (Thanks to @fattomhk with this PR [#1626](https://github.com/zo0r/react-native-push-notification/pull/1626))\n+  - `notificationPriority`\n+  - `image`\n+  - `tag`\n+  - `visibility`\n+- (Android) `data.twi_body` is no more used to trigger a notification in notification-center. Revert of [#744](https://github.com/zo0r/react-native-push-notification/pull/744)\n+\n+### Fixed\n+\n+- (iOS) upgrade `@react-native-community/push-notification-ios`, fixe the value of `userInteraction` [@react-native-community/push-notification-ios#122](https://github.com/react-native-community/push-notification-ios/pull/122).\n+\n+## [5.1.1] 2020-09-15\n+\n+### Fixed\n+\n+- (Android) Fatal Exception: java.lang.NullPointerException [#1641](https://github.com/zo0r/react-native-push-notification/issues/1641)\n+\n+## [5.1.0] 2020-08-31\n+\n+### Features\n+\n+- (Android) Add support for specifying a delegate FirebaseMessagingService [#1589](https://github.com/zo0r/react-native-push-notification/pull/1589)\n+- (Android) Add support of `when`, `usesChronometer` and `timeoutAfter`.\n+\n+### Fixed\n+\n+- (Android) Fix a bug where `userInteraction` is not set, notification when app in background pressed by user.\n+\n \n ## [5.0.1] 2020-08-04\n "
  },
  {
    "sha": "88de2242c5058e1107ec5622d856ad3d81a01e90",
    "filename": "README.md",
    "status": "modified",
    "additions": 163,
    "deletions": 82,
    "changes": 245,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/README.md",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/README.md",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/README.md?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -6,9 +6,9 @@\n React Native Local and Remote Notifications for iOS and Android\n \n \n-## 🎉 Version 5.x is live ! 🎉\n+## 🎉 Version 7.x is live ! 🎉\n \n-Check out for changes in the CHANGELOG:\n+Check out for changes and migration in the CHANGELOG:\n \n [Changelog](https://github.com/zo0r/react-native-push-notification/blob/master/CHANGELOG.md)\n \n@@ -56,9 +56,26 @@ Having a problem? Read the [troubleshooting](./trouble-shooting.md) guide before\n \n ## iOS manual Installation\n \n-The component uses PushNotificationIOS for the iOS part.\n+The component uses PushNotificationIOS for the iOS part. You should follow their [installation instructions](https://github.com/react-native-community/react-native-push-notification-ios).\n \n-[Please see: PushNotificationIOS](https://github.com/react-native-community/react-native-push-notification-ios)\n+When done, modify the following method in the file `AppDelegate.m`:\n+```objective-c\n+// Called when a notification is delivered to a foreground app.\n+-(void)userNotificationCenter:(UNUserNotificationCenter *)center\n+      willPresentNotification:(UNNotification *)notification\n+        withCompletionHandler:(void (^)(UNNotificationPresentationOptions options))completionHandler\n+{\n+  // Still call the JS onNotification handler so it can display the new message right away\n+  NSDictionary *userInfo = notification.request.content.userInfo;\n+  [RNCPushNotificationIOS didReceiveRemoteNotification:userInfo\n+                                fetchCompletionHandler:^void (UIBackgroundFetchResult result){}];\n+\n+  // allow showing foreground notifications\n+  completionHandler(UNNotificationPresentationOptionSound | UNNotificationPresentationOptionAlert | UNNotificationPresentationOptionBadge);\n+  // or if you wish to hide all notification while in foreground replace it with \n+  // completionHandler(UNNotificationPresentationOptionNone);\n+}\n+```\n \n ## Android manual Installation\n \n@@ -89,17 +106,9 @@ In your `android/app/src/main/AndroidManifest.xml`\n     <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\"/>\n \n     <application ....>\n-        <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_channel_name\"\n-                android:value=\"YOUR NOTIFICATION CHANNEL NAME\"/>\n-        <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_channel_description\"\n-                    android:value=\"YOUR NOTIFICATION CHANNEL DESCRIPTION\"/>\n-\n-        <!-- Change the value to true to enable pop-up for in foreground (remote-only, for local use ignoreInForeground) -->\n+        <!-- Change the value to true to enable pop-up for in foreground on receiving remote notifications (for prevent duplicating while showing local notifications set this to false) -->\n         <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_foreground\"\n                     android:value=\"false\"/>\n-        <!-- Change the value to false if you don't want the creation of the default channel -->\n-        <meta-data  android:name=\"com.dieam.reactnativepushnotification.channel_create_default\"\n-                    android:value=\"true\"/>\n         <!-- Change the resource name to your App's accent color - or any other color you want -->\n         <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_color\"\n                     android:resource=\"@color/white\"/> <!-- or @android:color/{name} to use a standard color -->\n@@ -109,6 +118,8 @@ In your `android/app/src/main/AndroidManifest.xml`\n         <receiver android:name=\"com.dieam.reactnativepushnotification.modules.RNPushNotificationBootEventReceiver\">\n             <intent-filter>\n                 <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n+                <action android:name=\"android.intent.action.QUICKBOOT_POWERON\" />\n+                <action android:name=\"com.htc.intent.action.QUICKBOOT_POWERON\"/>\n             </intent-filter>\n         </receiver>\n \n@@ -220,10 +231,12 @@ public class MainApplication extends Application implements ReactApplication {\n ## Usage\n \n **DO NOT USE `.configure()` INSIDE A COMPONENT, EVEN `App`**\n+> If you do, notification handlers will not fire, because they are not loaded. Instead, use `.configure()` in the app's first file, usually `index.js`.\n+\n \n ```javascript\n import PushNotificationIOS from \"@react-native-community/push-notification-ios\";\n-var PushNotification = require(\"react-native-push-notification\");\n+import PushNotification from \"react-native-push-notification\";\n \n // Must be outside of any component LifeCycle (such as `componentDidMount`).\n PushNotification.configure({\n@@ -294,7 +307,7 @@ Notification object example:\n     foreground: false, // BOOLEAN: If the notification was received in foreground or not\n     userInteraction: false, // BOOLEAN: If the notification was opened by the user from the notification area or not\n     message: 'My Notification Message', // STRING: The notification message\n-    data: {}, // OBJECT: The push data\n+    data: {}, // OBJECT: The push data or the defined userInfo in local notifications\n }\n ```\n \n@@ -307,6 +320,7 @@ EXAMPLE:\n ```javascript\n PushNotification.localNotification({\n   /* Android Only Properties */\n+  channelId: \"your-channel-id\", // (required) channelId, if the channel doesn't exist, notification will not trigger.\n   ticker: \"My Notification Ticker\", // (optional)\n   showWhen: true, // (optional) default: true\n   autoCancel: true, // (optional) default: true\n@@ -316,6 +330,8 @@ PushNotification.localNotification({\n   bigText: \"My big text that will be shown when notification is expanded\", // (optional) default: \"message\" prop\n   subText: \"This is a subText\", // (optional) default: none\n   bigPictureUrl: \"https://www.example.tld/picture.jpg\", // (optional) default: undefined\n+  bigLargeIcon: \"ic_launcher\", // (optional) default: undefined\n+  bigLargeIconUrl: \"https://www.example.tld/bigicon.jpg\", // (optional) default: undefined\n   color: \"red\", // (optional) default: system default\n   vibrate: true, // (optional) default: true\n   vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000\n@@ -325,19 +341,20 @@ PushNotification.localNotification({\n   ongoing: false, // (optional) set whether this is an \"ongoing\" notification\n   priority: \"high\", // (optional) set notification priority, default: high\n   visibility: \"private\", // (optional) set notification visibility, default: private\n-  importance: \"high\", // (optional) set notification importance, default: high\n-  ignoreInForeground: false, // (optional) if true, the notification will not be visible when the app is in the foreground (useful for parity with how iOS notifications appear)\n+  ignoreInForeground: false, // (optional) if true, the notification will not be visible when the app is in the foreground (useful for parity with how iOS notifications appear). should be used in combine with `com.dieam.reactnativepushnotification.notification_foreground` setting\n   shortcutId: \"shortcut-id\", // (optional) If this notification is duplicative of a Launcher shortcut, sets the id of the shortcut, in case the Launcher wants to hide the shortcut, default undefined\n-  channelId: \"your-custom-channel-id\", // (optional) custom channelId, if the channel doesn't exist, it will be created with options passed above (importance, vibration, sound). Once the channel is created, the channel will not be update. Make sure your channelId is different if you change these options. If you have created a custom channel, it will apply options of the channel.\n-  onlyAlertOnce: false, //(optional) alert will open only once with sound and notify, default: false\n-    \n+  onlyAlertOnce: false, // (optional) alert will open only once with sound and notify, default: false\n+  \n+  when: null, // (optional) Add a timestamp (Unix timestamp value in milliseconds) pertaining to the notification (usually the time the event occurred). For apps targeting Build.VERSION_CODES.N and above, this time is not shown anymore by default and must be opted into by using `showWhen`, default: null.\n+  usesChronometer: false, // (optional) Show the `when` field as a stopwatch. Instead of presenting `when` as a timestamp, the notification will show an automatically updating display of the minutes and seconds since when. Useful when showing an elapsed time (like an ongoing phone call), default: false.\n+  timeoutAfter: null, // (optional) Specifies a duration in milliseconds after which this notification should be canceled, if it is not already canceled, default: null\n+\n   messageId: \"google:message_id\", // (optional) added as `message_id` to intent extras so opening push notification can find data stored by @react-native-firebase/messaging module. \n \n-  actions: '[\"Yes\", \"No\"]', // (Android only) See the doc for notification actions to know more\n+  actions: [\"Yes\", \"No\"], // (Android only) See the doc for notification actions to know more\n   invokeApp: true, // (optional) This enable click on actions to bring back the application to foreground or stay in background, default: true\n \n   /* iOS only properties */\n-  alertAction: \"view\", // (optional) default: view\n   category: \"\", // (optional) default: empty string\n \n   /* iOS and Android properties */\n@@ -391,14 +408,15 @@ In the location notification json specify the full file name:\n \n ## Channel Management (Android)\n \n-To use custom channels, create them at startup and pass the matching `channelId` through to `PushNotification.localNotification`\n+To use channels, create them at startup and pass the matching `channelId` through to `PushNotification.localNotification` or `PushNotification.localNotificationSchedule`.\n \n ```javascript\n   PushNotification.createChannel(\n     {\n-      channelId: \"custom-channel-id\", // (required)\n-      channelName: \"Custom channel\", // (required)\n-      channelDescription: \"A custom channel to categorise your custom notifications\", // (optional) default: undefined.\n+      channelId: \"channel-id\", // (required)\n+      channelName: \"My channel\", // (required)\n+      channelDescription: \"A channel to categorise your notifications\", // (optional) default: undefined.\n+      playSound: false, // (optional) default: true\n       soundName: \"default\", // (optional) See `soundName` parameter of `localNotification` function\n       importance: 4, // (optional) default: 4. Int value of the Android notification importance\n       vibrate: true, // (optional) default: true. Creates the default vibration patten if true.\n@@ -407,47 +425,9 @@ To use custom channels, create them at startup and pass the matching `channelId`\n   );\n ```\n \n-Channels with ids that do not exist are generated on the fly when you pass options to `PushNotification.localNotification` or `PushNotification.localNotificationSchedule`.\n-\n-The pattern of `channel_id` is:\n-\n-```\n-rn-push-notification-channel-id-(importance: default \"4\")(-soundname, default if playSound \"-default\")-(vibration, default \"300\")\n-```\n-\n-By default, 1 channel is created:\n-\n-- rn-push-notification-channel-id-4-default-300 (used for remote notification if none already exist).\n-\n-you can avoid the default creation by using this:\n-\n-```xml\n-  <meta-data  android:name=\"com.dieam.reactnativepushnotification.channel_create_default\"\n-          android:value=\"false\"/>\n-```\n-\n-**NOTE: Without channel, remote notifications don't work**\n-\n-In the notifications options, you can provide a custom channel id with `channelId: \"your-custom-channel-id\"`, if the channel doesn't exist, it will be created with options passed above (importance, vibration, sound). Once the channel is created, the channel will not be update. Make sure your `channelId` is different if you change these options. If you have created a custom channel in another way, it will apply options of the channel.\n-\n-Custom and generated channels can have custom name and description in the `AndroidManifest.xml`, only if the library is responsible of the creation of the channel.\n-You can also use `channelName` and `channelDescription` when you use to override the name or description. Once the channel is created, you won't be able to update them.\n+**NOTE: Without channel, notifications don't work**\n \n-```xml\n-  <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_channel_name.[CHANNEL_ID]\"\n-          android:value=\"YOUR NOTIFICATION CHANNEL NAME FOR CHANNEL_ID\"/>\n-  <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_channel_description.[CHANNEL_ID]\"\n-              android:value=\"YOUR NOTIFICATION CHANNEL DESCRIPTION FOR CHANNEL_ID\"/>\n-```\n-\n-For example:\n-\n-```xml\n-  <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_channel_name.rn-push-notification-channel-id-4-300\"\n-          android:value=\"YOUR NOTIFICATION CHANNEL NAME FOR SILENT CHANNEL\"/>\n-  <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_channel_description.rn-push-notification-channel-id-4-300\"\n-              android:value=\"YOUR NOTIFICATION CHANNEL DESCRIPTION FOR SILENT CHANNEL\"/>\n-```\n+In the notifications options, you must provide a channel id with `channelId: \"your-channel-id\"`, if the channel doesn't exist the notification might not e triggered. Once the channel is created, the channel cannot be update. Make sure your `channelId` is different if you change these options. If you have created a channel in another way, it will apply options of the channel.\n \n If you want to use a different default channel for remote notification, refer to the documentation of Firebase:\n \n@@ -459,6 +439,22 @@ If you want to use a different default channel for remote notification, refer to\n       android:value=\"@string/default_notification_channel_id\" />\n ```\n \n+For local notifications, the same kind of option is available:\n+\n+- you can use:\n+  ```xml\n+    <meta-data\n+        android:name=\"com.dieam.reactnativepushnotification.default_notification_channel_id\"\n+        android:value=\"@string/default_notification_channel_id\" />\n+  ```\n+- If not defined, fallback to the Firebase value defined in the `AndroidManifest`:\n+  ```xml\n+    <meta-data\n+        android:name=\"com.google.firebase.messaging.default_notification_channel_id\"\n+        android:value=\"...\" />\n+  ```\n+- If not defined, fallback to the default Firebase channel id `fcm_fallback_notification_channel`\n+\n ### List channels\n \n You can list available channels with:\n@@ -520,20 +516,18 @@ PushNotification.cancelLocalNotifications({id: '123'});\n \n Cancels all scheduled notifications AND clears the notifications alerts that are in the notification centre.\n \n-_NOTE: there is currently no api for removing specific notification alerts from the notification centre._\n-\n ### 3) removeAllDeliveredNotifications\n \n ```javascript\n-PushNotificationIOS.removeAllDeliveredNotifications();\n+PushNotification.removeAllDeliveredNotifications();\n ```\n \n Remove all delivered notifications from Notification Center\n \n ### 4) getDeliveredNotifications\n \n ```javascript\n-PushNotificationIOS.getDeliveredNotifications(callback);\n+PushNotification.getDeliveredNotifications(callback);\n ```\n \n Provides you with a list of the app’s notifications that are still displayed in Notification Center\n@@ -556,7 +550,7 @@ A delivered notification is an object containing:\n ### 5) removeDeliveredNotifications\n \n ```javascript\n-PushNotificationIOS.removeDeliveredNotifications(identifiers);\n+PushNotification.removeDeliveredNotifications(identifiers);\n ```\n \n Removes the specified notifications from Notification Center\n@@ -570,7 +564,7 @@ Removes the specified notifications from Notification Center\n ### 6) getScheduledLocalNotifications\n \n ```javascript\n-PushNotificationIOS.getScheduledLocalNotifications(callback);\n+PushNotification.getScheduledLocalNotifications(callback);\n ```\n \n Provides you with a list of the app’s scheduled local notifications that are yet to be displayed\n@@ -583,15 +577,16 @@ Provides you with a list of the app’s scheduled local notifications that are y\n \n Returns an array of local scheduled notification objects containing:\n \n-| Name           | Type   | Description                               |\n-| -------------- | ------ | ----------------------------------------- |\n-| id             | number | The identifier of this notification.      |\n-| date           | Date   | The fire date of this notification.       |\n-| title          | string | The title of this notification.           |\n-| message        | string | The message body of this notification.    |\n-| soundName      | string | The sound name of this notification.      |\n-| repeatInterval | number | The repeat interval of this notification. |\n-| number         | number | App notification badge count number.      |\n+| Name           | Type   | Description                                              |\n+| -------------- | ------ | -------------------------------------------------------- |\n+| id             | number | The identifier of this notification.                     |\n+| date           | Date   | The fire date of this notification.                      |\n+| title          | string | The title of this notification.                          |\n+| message        | string | The message body of this notification.                   |\n+| soundName      | string | The sound name of this notification.                     |\n+| repeatInterval | number | (Android only) The repeat interval of this notification. |\n+| number         | number | App notification badge count number.                     |\n+| data           | any    | The user info of this notification.                      |\n \n ## Abandon Permissions\n \n@@ -639,6 +634,12 @@ Available options:\n \n More information: https://developer.android.com/reference/android/app/NotificationManager#IMPORTANCE_DEFAULT\n \n+## Show notifications while the app is in foreground\n+\n+If you want a consistent results in Android & iOS with the most flexibility, it is best to handle it manually by prompting a local notification when `onNotification` is triggered by a remote push notification on foreground (check `notification.foreground` prop).\n+\n+Watch out for an infinite loop triggering `onNotification` - remote & local notification will trigger it. You can overcome this by marking local notifications' data.\n+\n ## Notification while idle\n \n (optional) Specify `allowWhileIdle` to set if the notification should be allowed to execute even when the system is on low-power idle modes.\n@@ -654,6 +655,10 @@ https://developer.android.com/training/monitoring-device-state/doze-standby\n \n (optional) Specify `repeatType` and optionally `repeatTime` (Android-only) while scheduling the local notification. Check the local notification example above.\n \n+### iOS\n+Property `repeatType` can only be `day`.\n+\n+### Android\n Property `repeatType` could be one of `month`, `week`, `day`, `hour`, `minute`, `time`. If specified as time, it should be accompanied by one more parameter `repeatTime` which should the number of milliseconds between each interval.\n \n ## Notification Actions\n@@ -672,7 +677,40 @@ Make sure you have the receiver in `AndroidManifest.xml`:\n   <receiver android:name=\"com.dieam.reactnativepushnotification.modules.RNPushNotificationActions\" />\n ```\n \n-For iOS, you can use this [package](https://github.com/holmesal/react-native-ios-notification-actions) to add notification actions.\n+Notifications with inline reply: \n+\n+You must register an action as \"ReplyInput\", this will show in the notifications an input to write in. \n+\n+EXAMPLE:\n+```javascript\n+PushNotification.localNotificationSchedule({\n+  message: \"My Notification Message\", // (required)\n+  date: new Date(Date.now() + (60 * 1000)), // in 60 secs\n+  actions: [\"ReplyInput\"],\n+  reply_placeholder_text: \"Write your response...\", // (required)\n+  reply_button_text: \"Reply\" // (required)\n+});\n+```\n+\n+To get the text from the notification: \n+\n+```javascript\n+...\n+if(notification.action === \"ReplyInput\"){\n+  console.log(\"texto\", notification.reply_text)// this will contain the inline reply text. \n+}\n+...\n+```\n+\n+For iOS, you can use:\n+\n+```javascript\n+PushNotification.setNotificationCategories(categories);\n+```\n+\n+And use the `category` field in the notification.\n+\n+Documentation [here](https://github.com/react-native-push-notification-ios/push-notification-ios#how-to-perform-different-action-based-on-user-selected-action) to add notification actions.\n \n ## Set application badge icon\n \n@@ -688,6 +726,49 @@ Uses the [ShortcutBadger](https://github.com/leolin310148/ShortcutBadger) on And\n \n `PushNotification.unsubscribeFromTopic(topic: string)` Unsubscribe from a topic (works only with Firebase)\n \n+## Android Custom Notification Handling\n+\n+Unlike iOS, Android apps handle the creation of their own notifications. React Native Push Notifications does a \"best guess\" to create and handle incoming notifications. However, when using 3rd party notification platforms and tools, the initial notification creation process may need to be customized.\n+\n+### Customizing Notification Creation\n+\n+If your notification service uses a custom data payload format, React Native Push Notifications will not be able to parse the data correctly to create an initial notification.\n+\n+For these cases, you should:\n+\n+1. Remove the intent handler configuration for React Native Push Notifications from your `android/app/src/main/AndroidManifest.xml`.\n+2. Implement initial notification creation as per the instructions from your Provider.\n+\n+### Handling Custom Payloads\n+\n+Data payloads of notifications from 3rd party services may not match the format expected by React Native Push Notification. When tapped, these notifications will not pass the details and data to the `onNotification()` event handler. Custom `IntentHandlers` allow you to fix this so that correct `notification` objects are sent to your `onNotification()` method.\n+\n+Custom handlers are added in Application init or `MainActivity.onCreate()` methods:\n+\n+```\n+RNPushNotification.IntentHandlers.add(new RNPushNotification.RNIntentHandler() {\n+  @Override\n+  public void onNewIntent(Intent intent) {\n+    // If your provider requires some parsing on the intent before the data can be\n+    // used, add that code here. Otherwise leave empty.\n+  }\n+\n+  @Nullable\n+  @Override\n+  public Bundle getBundleFromIntent(Intent intent) {\n+    // This should return the bundle data that will be serialized to the `notification.data`\n+    // property sent to the `onNotification()` handler. Return `null` if there is no data\n+    // or this is not an intent from your provider.\n+    \n+    // Example:\n+    if (intent.hasExtra(\"MY_NOTIFICATION_PROVIDER_DATA_KEY\")) {\n+      return intent.getBundleExtra(\"MY_NOTIFICATION_PROVIDER_DATA_KEY\");\n+    }\n+    return null;\n+  }\n+});\n+```\n+\n ## Checking Notification Permissions\n \n `PushNotification.checkPermissions(callback: Function)` Check permissions"
  },
  {
    "sha": "0e940916ee8ef53ca7c1979af5f84602b7394614",
    "filename": "android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotification.java",
    "status": "modified",
    "additions": 32,
    "deletions": 8,
    "changes": 40,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotification.java",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotification.java",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotification.java?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -8,8 +8,8 @@\n import android.content.Intent;\n import android.content.IntentFilter;\n import android.os.Bundle;\n-\n import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n import androidx.core.app.NotificationManagerCompat;\n \n import com.dieam.reactnativepushnotification.helpers.ApplicationBadgeHelper;\n@@ -28,6 +28,7 @@\n \n import java.io.IOException;\n import java.security.SecureRandom;\n+import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.Map;\n \n@@ -41,6 +42,16 @@\n \n public class RNPushNotification extends ReactContextBaseJavaModule implements ActivityEventListener {\n     public static final String LOG_TAG = \"RNPushNotification\";// all logging should use this tag\n+    public static final String KEY_TEXT_REPLY = \"key_text_reply\";\n+\n+    public interface RNIntentHandler {\n+        void onNewIntent(Intent intent);\n+  \n+        @Nullable\n+        Bundle getBundleFromIntent(Intent intent);\n+    }\n+  \n+    public static ArrayList<RNIntentHandler> IntentHandlers = new ArrayList();\n \n     private RNPushNotificationHelper mRNPushNotificationHelper;\n     private final SecureRandom mRandomNumberGenerator = new SecureRandom();\n@@ -57,15 +68,11 @@ public RNPushNotification(ReactApplicationContext reactContext) {\n         mRNPushNotificationHelper = new RNPushNotificationHelper(applicationContext);\n         // This is used to delivery callbacks to JS\n         mJsDelivery = new RNPushNotificationJsDelivery(reactContext);\n-\n-        mRNPushNotificationHelper.checkOrCreateDefaultChannel();\n     }\n \n-\n-\n     @Override\n     public String getName() {\n-        return \"RNPushNotification\";\n+        return \"ReactNativePushNotification\";\n     }\n \n     @Override\n@@ -80,19 +87,36 @@ private Bundle getBundleFromIntent(Intent intent) {\n         if (intent.hasExtra(\"notification\")) {\n             bundle = intent.getBundleExtra(\"notification\");\n         } else if (intent.hasExtra(\"google.message_id\")) {\n-            bundle = intent.getExtras();\n+            bundle = new Bundle();\n+\n+            bundle.putBundle(\"data\", intent.getExtras());\n+        }\n+\n+        if (bundle == null) {\n+            for (RNIntentHandler handler : IntentHandlers) {\n+                bundle = handler.getBundleFromIntent(intent);\n+            }\n+        }\n+\n+        if(null != bundle && !bundle.getBoolean(\"foreground\", false) && !bundle.containsKey(\"userInteraction\")) {\n+          bundle.putBoolean(\"userInteraction\", true);\n         }\n+\n         return bundle;\n     }\n \n     @Override\n     public void onNewIntent(Intent intent) {\n+        for (RNIntentHandler handler : IntentHandlers) {\n+            handler.onNewIntent(intent);\n+        }\n+        \n         Bundle bundle = this.getBundleFromIntent(intent);\n         if (bundle != null) {\n             mJsDelivery.notifyNotification(bundle);\n         }\n     }\n-    \n+\n     @ReactMethod\n     public void invokeApp(ReadableMap data) {\n         Bundle bundle = null;"
  },
  {
    "sha": "ada960388e95b801e0bb7316d3b2d4efee9356c1",
    "filename": "android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationActions.java",
    "status": "modified",
    "additions": 13,
    "deletions": 1,
    "changes": 14,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationActions.java",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationActions.java",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationActions.java?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -13,8 +13,10 @@\n import com.facebook.react.ReactApplication;\n import com.facebook.react.ReactInstanceManager;\n import com.facebook.react.bridge.ReactContext;\n+import androidx.core.app.RemoteInput;\n \n import static com.dieam.reactnativepushnotification.modules.RNPushNotification.LOG_TAG;\n+import static com.dieam.reactnativepushnotification.modules.RNPushNotification.KEY_TEXT_REPLY;\n \n public class RNPushNotificationActions extends BroadcastReceiver {\n     @Override\n@@ -28,7 +30,15 @@ public void onReceive(final Context context, Intent intent) {\n       }\n \n       final Bundle bundle = intent.getBundleExtra(\"notification\");\n+      Bundle remoteInput = null;\n \n+      if(android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.KITKAT_WATCH){\n+          remoteInput = RemoteInput.getResultsFromIntent(intent);\n+      }\n+      if (remoteInput != null) {\n+          // Add to reply_text the text written by the user in the notification\n+          bundle.putCharSequence(\"reply_text\", remoteInput.getCharSequence(KEY_TEXT_REPLY));\n+      }\n       // Dismiss the notification popup.\n       NotificationManager manager = (NotificationManager) context.getSystemService(context.NOTIFICATION_SERVICE);\n       int notificationID = Integer.parseInt(bundle.getString(\"id\"));\n@@ -51,6 +61,8 @@ public void onReceive(final Context context, Intent intent) {\n           RNPushNotificationHelper helper = new RNPushNotificationHelper((Application) context.getApplicationContext());\n \n           helper.invokeApp(bundle);\n+\n+          context.sendBroadcast(new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS));\n       } else {\n \n         // We need to run this on the main thread, as the React code assumes that is true.\n@@ -87,4 +99,4 @@ public void onReactContextInitialized(ReactContext context) {\n         });\n       }\n     }\n-}\n\\ No newline at end of file\n+}"
  },
  {
    "sha": "a2d3d5657797563b4be5394f3a59cd02465ab589",
    "filename": "android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationAttributes.java",
    "status": "modified",
    "additions": 89,
    "deletions": 46,
    "changes": 135,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationAttributes.java",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationAttributes.java",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationAttributes.java?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -10,6 +10,8 @@\n import org.json.JSONException;\n import org.json.JSONObject;\n \n+import java.util.Iterator;\n+\n import static com.dieam.reactnativepushnotification.modules.RNPushNotification.LOG_TAG;\n \n public class RNPushNotificationAttributes {\n@@ -28,8 +30,6 @@\n     private static final String BIG_PICTURE_URL = \"bigPictureUrl\";\n     private static final String SHORTCUT_ID = \"shortcutId\";\n     private static final String CHANNEL_ID = \"channelId\";\n-    private static final String CHANNEL_NAME = \"channelName\";\n-    private static final String CHANNEL_DESCRIPTION = \"channelDescription\";\n     private static final String NUMBER = \"number\";\n     private static final String SOUND = \"sound\";\n     private static final String COLOR = \"color\";\n@@ -44,10 +44,16 @@\n     private static final String TAG = \"tag\";\n     private static final String REPEAT_TYPE = \"repeatType\";\n     private static final String REPEAT_TIME = \"repeatTime\";\n+    private static final String WHEN = \"when\";\n+    private static final String USES_CHRONOMETER = \"usesChronometer\";\n+    private static final String TIMEOUT_AFTER = \"timeoutAfter\";\n     private static final String ONLY_ALERT_ONCE = \"onlyAlertOnce\";\n     private static final String ONGOING = \"ongoing\";\n+    private static final String REPLY_BUTTON_TEXT = \"reply_button_text\";\n+    private static final String REPLAY_PLACEHOLDER_TEXT = \"reply_placeholder_text\";\n     private static final String ALLOW_WHILE_IDLE = \"allowWhileIdle\";\n     private static final String IGNORE_IN_FOREGROUND = \"ignoreInForeground\";\n+    private static final String USER_INFO = \"userInfo\";\n \n     private final String id;\n     private final String message;\n@@ -65,8 +71,6 @@\n     private final String shortcutId;\n     private final String number;\n     private final String channelId;\n-    private final String channelName;\n-    private final String channelDescription;\n     private final String sound;\n     private final String color;\n     private final String group;\n@@ -80,10 +84,16 @@\n     private final String tag;\n     private final String repeatType;\n     private final double repeatTime;\n+    private final double when;\n+    private final boolean usesChronometer;\n+    private final double timeoutAfter;\n     private final boolean onlyAlertOnce;\n     private final boolean ongoing;\n+    private final String reply_button_text;\n+    private final String reply_placeholder_text;\n     private final boolean allowWhileIdle;\n     private final boolean ignoreInForeground;\n+    private final String userInfo;\n \n     public RNPushNotificationAttributes(Bundle bundle) {\n         id = bundle.getString(ID);\n@@ -102,8 +112,6 @@ public RNPushNotificationAttributes(Bundle bundle) {\n         shortcutId = bundle.getString(SHORTCUT_ID);\n         number = bundle.getString(NUMBER);\n         channelId = bundle.getString(CHANNEL_ID);\n-        channelName = bundle.getString(CHANNEL_NAME);\n-        channelDescription = bundle.getString(CHANNEL_DESCRIPTION);\n         sound = bundle.getString(SOUND);\n         color = bundle.getString(COLOR);\n         group = bundle.getString(GROUP);\n@@ -117,10 +125,16 @@ public RNPushNotificationAttributes(Bundle bundle) {\n         tag = bundle.getString(TAG);\n         repeatType = bundle.getString(REPEAT_TYPE);\n         repeatTime = bundle.getDouble(REPEAT_TIME);\n+        when = bundle.getDouble(WHEN);\n+        usesChronometer = bundle.getBoolean(USES_CHRONOMETER);\n+        timeoutAfter = bundle.getDouble(TIMEOUT_AFTER);\n         onlyAlertOnce = bundle.getBoolean(ONLY_ALERT_ONCE);\n         ongoing = bundle.getBoolean(ONGOING);\n+        reply_button_text = bundle.getString(REPLY_BUTTON_TEXT);\n+        reply_placeholder_text = bundle.getString(REPLAY_PLACEHOLDER_TEXT);\n         allowWhileIdle = bundle.getBoolean(ALLOW_WHILE_IDLE);\n         ignoreInForeground = bundle.getBoolean(IGNORE_IN_FOREGROUND);\n+        userInfo = bundle.getString(USER_INFO);\n     }\n \n     private RNPushNotificationAttributes(JSONObject jsonObject) {\n@@ -141,8 +155,6 @@ private RNPushNotificationAttributes(JSONObject jsonObject) {\n             shortcutId = jsonObject.has(SHORTCUT_ID) ? jsonObject.getString(SHORTCUT_ID) : null;\n             number = jsonObject.has(NUMBER) ? jsonObject.getString(NUMBER) : null;\n             channelId = jsonObject.has(CHANNEL_ID) ? jsonObject.getString(CHANNEL_ID) : null;\n-            channelName = jsonObject.has(CHANNEL_NAME) ? jsonObject.getString(CHANNEL_NAME) : null;\n-            channelDescription = jsonObject.has(CHANNEL_DESCRIPTION) ? jsonObject.getString(CHANNEL_DESCRIPTION) : null;\n             sound = jsonObject.has(SOUND) ? jsonObject.getString(SOUND) : null;\n             color = jsonObject.has(COLOR) ? jsonObject.getString(COLOR) : null;\n             group = jsonObject.has(GROUP) ? jsonObject.getString(GROUP) : null;\n@@ -156,10 +168,16 @@ private RNPushNotificationAttributes(JSONObject jsonObject) {\n             tag = jsonObject.has(TAG) ? jsonObject.getString(TAG) : null;\n             repeatType = jsonObject.has(REPEAT_TYPE) ? jsonObject.getString(REPEAT_TYPE) : null;\n             repeatTime = jsonObject.has(REPEAT_TIME) ? jsonObject.getDouble(REPEAT_TIME) : 0.0;\n+            when = jsonObject.has(WHEN) ? jsonObject.getDouble(WHEN) : -1;\n+            usesChronometer = jsonObject.has(USES_CHRONOMETER) ? jsonObject.getBoolean(USES_CHRONOMETER) : false;\n+            timeoutAfter = jsonObject.has(TIMEOUT_AFTER) ? jsonObject.getDouble(TIMEOUT_AFTER) : -1;\n             onlyAlertOnce = jsonObject.has(ONLY_ALERT_ONCE) ? jsonObject.getBoolean(ONLY_ALERT_ONCE) : false;\n             ongoing = jsonObject.has(ONGOING) ? jsonObject.getBoolean(ONGOING) : false;\n+            reply_button_text = jsonObject.has(REPLY_BUTTON_TEXT) ? jsonObject.getString(REPLY_BUTTON_TEXT) : null;\n+            reply_placeholder_text = jsonObject.has(REPLAY_PLACEHOLDER_TEXT) ? jsonObject.getString(REPLAY_PLACEHOLDER_TEXT) : null;\n             allowWhileIdle = jsonObject.has(ALLOW_WHILE_IDLE) ? jsonObject.getBoolean(ALLOW_WHILE_IDLE) : false;\n             ignoreInForeground = jsonObject.has(IGNORE_IN_FOREGROUND) ? jsonObject.getBoolean(IGNORE_IN_FOREGROUND) : false;\n+            userInfo = jsonObject.has(USER_INFO) ? jsonObject.getString(USER_INFO) : null;\n         } catch (JSONException e) {\n             throw new IllegalStateException(\"Exception while initializing RNPushNotificationAttributes from JSON\", e);\n         }\n@@ -168,6 +186,7 @@ private RNPushNotificationAttributes(JSONObject jsonObject) {\n     @NonNull\n     public static RNPushNotificationAttributes fromJson(String notificationAttributesJson) throws JSONException {\n         JSONObject jsonObject = new JSONObject(notificationAttributesJson);\n+        \n         return new RNPushNotificationAttributes(jsonObject);\n     }\n \n@@ -179,41 +198,49 @@ public static RNPushNotificationAttributes fromJson(String notificationAttribute\n      * @return true all fields in userInfo object match, false otherwise\n      */\n     public boolean matches(ReadableMap userInfo) {\n-        Bundle bundle = toBundle();\n+        try {\n+          if(this.userInfo == null) {\n+            return false;\n+          }\n+\n+          JSONObject jsonObject = new JSONObject(this.userInfo);\n \n-        ReadableMapKeySetIterator iterator = userInfo.keySetIterator();\n-        while (iterator.hasNextKey()) {\n-            String key = iterator.nextKey();\n+          ReadableMapKeySetIterator iterator = userInfo.keySetIterator();\n+          while (iterator.hasNextKey()) {\n+              String key = iterator.nextKey();\n \n-            if (!bundle.containsKey(key))\n-                return false;\n+              if (!jsonObject.has(key))\n+                  return false;\n \n-            switch (userInfo.getType(key)) {\n-                case Null: {\n-                    if (bundle.get(key) != null)\n-                        return false;\n-                    break;\n-                }\n-                case Boolean: {\n-                    if (userInfo.getBoolean(key) != bundle.getBoolean(key))\n-                        return false;\n-                    break;\n-                }\n-                case Number: {\n-                    if ((userInfo.getDouble(key) != bundle.getDouble(key)) && (userInfo.getInt(key) != bundle.getInt(key)))\n-                        return false;\n-                    break;\n-                }\n-                case String: {\n-                    if (!userInfo.getString(key).equals(bundle.getString(key)))\n-                        return false;\n-                    break;\n-                }\n-                case Map:\n-                    return false;//there are no maps in the bundle\n-                case Array:\n-                    return false;//there are no arrays in the bundle\n-            }\n+              switch (userInfo.getType(key)) {\n+                  case Null: {\n+                      if (jsonObject.get(key) != null)\n+                          return false;\n+                      break;\n+                  }\n+                  case Boolean: {\n+                      if (userInfo.getBoolean(key) != jsonObject.getBoolean(key))\n+                          return false;\n+                      break;\n+                  }\n+                  case Number: {\n+                      if ((userInfo.getDouble(key) != jsonObject.getDouble(key)) && (userInfo.getInt(key) != jsonObject.getInt(key)))\n+                          return false;\n+                      break;\n+                  }\n+                  case String: {\n+                      if (!userInfo.getString(key).equals(jsonObject.getString(key)))\n+                          return false;\n+                      break;\n+                  }\n+                  case Map:\n+                      return false;//there are no maps in the jsonObject\n+                  case Array:\n+                      return false;//there are no arrays in the jsonObject\n+              }\n+          }\n+        } catch(JSONException e) {\n+          return false;\n         }\n \n         return true;\n@@ -237,8 +264,6 @@ public Bundle toBundle() {\n         bundle.putString(SHORTCUT_ID, shortcutId);\n         bundle.putString(NUMBER, number);\n         bundle.putString(CHANNEL_ID, channelId);\n-        bundle.putString(CHANNEL_NAME, channelName);\n-        bundle.putString(CHANNEL_DESCRIPTION, channelDescription);\n         bundle.putString(SOUND, sound);\n         bundle.putString(COLOR, color);\n         bundle.putString(GROUP, group);\n@@ -252,10 +277,16 @@ public Bundle toBundle() {\n         bundle.putString(TAG, tag);\n         bundle.putString(REPEAT_TYPE, repeatType);\n         bundle.putDouble(REPEAT_TIME, repeatTime);\n+        bundle.putDouble(WHEN, when);\n+        bundle.putBoolean(USES_CHRONOMETER, usesChronometer);\n+        bundle.putDouble(TIMEOUT_AFTER, timeoutAfter);\n         bundle.putBoolean(ONLY_ALERT_ONCE, onlyAlertOnce);\n         bundle.putBoolean(ONGOING, ongoing);\n+        bundle.putString(REPLY_BUTTON_TEXT, reply_button_text);\n+        bundle.putString(REPLAY_PLACEHOLDER_TEXT, reply_placeholder_text);\n         bundle.putBoolean(ALLOW_WHILE_IDLE, allowWhileIdle);\n         bundle.putBoolean(IGNORE_IN_FOREGROUND, ignoreInForeground);\n+        bundle.putString(USER_INFO, userInfo);\n         return bundle;\n     }\n \n@@ -278,8 +309,6 @@ public JSONObject toJson() {\n             jsonObject.put(SHORTCUT_ID, shortcutId);\n             jsonObject.put(NUMBER, number);\n             jsonObject.put(CHANNEL_ID, channelId);\n-            jsonObject.put(CHANNEL_NAME, channelName);\n-            jsonObject.put(CHANNEL_DESCRIPTION, channelDescription);\n             jsonObject.put(SOUND, sound);\n             jsonObject.put(COLOR, color);\n             jsonObject.put(GROUP, group);\n@@ -293,10 +322,16 @@ public JSONObject toJson() {\n             jsonObject.put(TAG, tag);\n             jsonObject.put(REPEAT_TYPE, repeatType);\n             jsonObject.put(REPEAT_TIME, repeatTime);\n+            jsonObject.put(WHEN, when);\n+            jsonObject.put(USES_CHRONOMETER, usesChronometer);\n+            jsonObject.put(TIMEOUT_AFTER, timeoutAfter);\n             jsonObject.put(ONLY_ALERT_ONCE, onlyAlertOnce);\n             jsonObject.put(ONGOING, ongoing);\n+            jsonObject.put(REPLY_BUTTON_TEXT, reply_button_text);\n+            jsonObject.put(REPLAY_PLACEHOLDER_TEXT, reply_placeholder_text);\n             jsonObject.put(ALLOW_WHILE_IDLE, allowWhileIdle);\n             jsonObject.put(IGNORE_IN_FOREGROUND, ignoreInForeground);\n+            jsonObject.put(USER_INFO, userInfo);\n         } catch (JSONException e) {\n             Log.e(LOG_TAG, \"Exception while converting RNPushNotificationAttributes to \" +\n                     \"JSON. Returning an empty object\", e);\n@@ -325,8 +360,6 @@ public String toString() {\n                 \", shortcutId='\" + shortcutId + '\\'' +\n                 \", number='\" + number + '\\'' +\n                 \", channelId='\" + channelId + '\\'' +\n-                \", channelName='\" + channelId + '\\'' +\n-                \", channelDescription='\" + channelDescription + '\\'' +\n                 \", sound='\" + sound + '\\'' +\n                 \", color='\" + color + '\\'' +\n                 \", group='\" + group + '\\'' +\n@@ -340,10 +373,16 @@ public String toString() {\n                 \", tag='\" + tag + '\\'' +\n                 \", repeatType='\" + repeatType + '\\'' +\n                 \", repeatTime=\" + repeatTime +\n+                \", when=\" + when +\n+                \", usesChronometer=\" + usesChronometer +\n+                \", timeoutAfter=\" + timeoutAfter +\n                 \", onlyAlertOnce=\" + onlyAlertOnce +\n                 \", ongoing=\" + ongoing +\n+                \", reply_button_text=\" + reply_button_text +\n+                \", reply_placeholder_text=\" + reply_placeholder_text +\n                 \", allowWhileIdle=\" + allowWhileIdle +\n                 \", ignoreInForeground=\" + ignoreInForeground +\n+                \", userInfo=\" + userInfo +\n                 '}';\n     }\n \n@@ -367,6 +406,10 @@ public String getNumber() {\n         return number;\n     }\n \n+    public String getUserInfo() {\n+        return userInfo;\n+    }\n+\n     public String getRepeatType() {\n         return repeatType;\n     }"
  },
  {
    "sha": "6552a87ec30b0f63d602fafb715fbe4db5ec0b2e",
    "filename": "android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationBootEventReceiver.java",
    "status": "modified",
    "additions": 22,
    "deletions": 24,
    "changes": 46,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationBootEventReceiver.java",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationBootEventReceiver.java",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationBootEventReceiver.java?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -20,32 +20,30 @@\n     public void onReceive(Context context, Intent intent) {\n         Log.i(LOG_TAG, \"RNPushNotificationBootEventReceiver loading scheduled notifications\");\n \n-        if (\"android.intent.action.BOOT_COMPLETED\".equals(intent.getAction())) {\n-            SharedPreferences sharedPreferences = context.getSharedPreferences(RNPushNotificationHelper.PREFERENCES_KEY, Context.MODE_PRIVATE);\n-            Set<String> ids = sharedPreferences.getAll().keySet();\n-\n-            Application applicationContext = (Application) context.getApplicationContext();\n-            RNPushNotificationHelper rnPushNotificationHelper = new RNPushNotificationHelper(applicationContext);\n-\n-            for (String id : ids) {\n-                try {\n-                    String notificationAttributesJson = sharedPreferences.getString(id, null);\n-                    if (notificationAttributesJson != null) {\n-                        RNPushNotificationAttributes notificationAttributes = RNPushNotificationAttributes.fromJson(notificationAttributesJson);\n-\n-                        if (notificationAttributes.getFireDate() < System.currentTimeMillis()) {\n-                            Log.i(LOG_TAG, \"RNPushNotificationBootEventReceiver: Showing notification for \" +\n-                                    notificationAttributes.getId());\n-                            rnPushNotificationHelper.sendToNotificationCentre(notificationAttributes.toBundle());\n-                        } else {\n-                            Log.i(LOG_TAG, \"RNPushNotificationBootEventReceiver: Scheduling notification for \" +\n-                                    notificationAttributes.getId());\n-                            rnPushNotificationHelper.sendNotificationScheduledCore(notificationAttributes.toBundle());\n-                        }\n+        SharedPreferences sharedPreferences = context.getSharedPreferences(RNPushNotificationHelper.PREFERENCES_KEY, Context.MODE_PRIVATE);\n+        Set<String> ids = sharedPreferences.getAll().keySet();\n+\n+        Application applicationContext = (Application) context.getApplicationContext();\n+        RNPushNotificationHelper rnPushNotificationHelper = new RNPushNotificationHelper(applicationContext);\n+\n+        for (String id : ids) {\n+            try {\n+                String notificationAttributesJson = sharedPreferences.getString(id, null);\n+                if (notificationAttributesJson != null) {\n+                    RNPushNotificationAttributes notificationAttributes = RNPushNotificationAttributes.fromJson(notificationAttributesJson);\n+\n+                    if (notificationAttributes.getFireDate() < System.currentTimeMillis()) {\n+                        Log.i(LOG_TAG, \"RNPushNotificationBootEventReceiver: Showing notification for \" +\n+                                notificationAttributes.getId());\n+                        rnPushNotificationHelper.sendToNotificationCentre(notificationAttributes.toBundle());\n+                    } else {\n+                        Log.i(LOG_TAG, \"RNPushNotificationBootEventReceiver: Scheduling notification for \" +\n+                                notificationAttributes.getId());\n+                        rnPushNotificationHelper.sendNotificationScheduledCore(notificationAttributes.toBundle());\n                     }\n-                } catch (Exception e) {\n-                    Log.e(LOG_TAG, \"Problem with boot receiver loading notification \" + id, e);\n                 }\n+            } catch (Exception e) {\n+                Log.e(LOG_TAG, \"Problem with boot receiver loading notification \" + id, e);\n             }\n         }\n     }"
  },
  {
    "sha": "e179277531339aad0d738b5f221dded6116c96e4",
    "filename": "android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationConfig.java",
    "status": "modified",
    "additions": 8,
    "deletions": 19,
    "changes": 27,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationConfig.java",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationConfig.java",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationConfig.java?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -8,9 +8,8 @@\n import android.util.Log;\n \n class RNPushNotificationConfig {\n-    private static final String KEY_CHANNEL_CREATE_DEFAULT = \"com.dieam.reactnativepushnotification.channel_create_default\";\n-    private static final String KEY_CHANNEL_NAME = \"com.dieam.reactnativepushnotification.notification_channel_name\";\n-    private static final String KEY_CHANNEL_DESCRIPTION = \"com.dieam.reactnativepushnotification.notification_channel_description\";\n+    private static final String KEY_NOTIFICATION_FIREBASE_DEFAULT_CHANNEL_ID = \"com.google.firebase.messaging.default_notification_channel_id\";\n+    private static final String KEY_NOTIFICATION_DEFAULT_CHANNEL_ID = \"com.dieam.reactnativepushnotification.default_notification_channel_id\";\n     private static final String KEY_NOTIFICATION_FOREGROUND = \"com.dieam.reactnativepushnotification.notification_foreground\";\n     private static final String KEY_NOTIFICATION_COLOR = \"com.dieam.reactnativepushnotification.notification_color\";\n \n@@ -46,18 +45,6 @@ private String getStringValue(String key, String defaultValue) {\n         return defaultValue;\n     }\n \n-    public String getChannelName(String channel_id) {\n-        String overrided = this.getStringValue(KEY_CHANNEL_NAME, \"rn-push-notification-channel\");  \n-\n-        return this.getStringValue(KEY_CHANNEL_NAME + \".\" + channel_id, overrided);\n-    }\n-    \n-    public String getChannelDescription(String channel_id) {\n-        String overrided = this.getStringValue(KEY_CHANNEL_DESCRIPTION, \"\");  \n-        \n-        return this.getStringValue(KEY_CHANNEL_DESCRIPTION + \".\" + channel_id, overrided);\n-    }\n-\n     public int getNotificationColor() {\n         try {\n             int resourceId = metadata.getInt(KEY_NOTIFICATION_COLOR);\n@@ -79,13 +66,15 @@ public boolean getNotificationForeground() {\n         return false;\n     }\n \n-    public boolean getChannelCreateDefault() {\n+    public String getNotificationDefaultChannelId() {\n         try {\n-            return metadata.getBoolean(KEY_CHANNEL_CREATE_DEFAULT, true);\n+            return getStringValue(KEY_NOTIFICATION_DEFAULT_CHANNEL_ID,\n+              getStringValue(KEY_NOTIFICATION_FIREBASE_DEFAULT_CHANNEL_ID, \"fcm_fallback_notification_channel\")\n+            );\n         } catch (Exception e) {\n-            Log.w(RNPushNotification.LOG_TAG, \"Unable to find \" + KEY_CHANNEL_CREATE_DEFAULT + \" in manifest. Falling back to default\");\n+            Log.w(RNPushNotification.LOG_TAG, \"Unable to find \" + KEY_NOTIFICATION_DEFAULT_CHANNEL_ID + \" in manifest. Falling back to default\");\n         }\n         // Default\n-        return true;\n+        return \"fcm_fallback_notification_channel\";\n     }\n }"
  },
  {
    "sha": "662415dfe9be5cebaa276c18eb40a2af2101aa17",
    "filename": "android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java",
    "status": "modified",
    "additions": 103,
    "deletions": 109,
    "changes": 212,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationHelper.java?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -23,6 +23,7 @@\n import android.os.Bundle;\n import android.service.notification.StatusBarNotification;\n import android.util.Log;\n+import androidx.core.app.RemoteInput;\n \n import androidx.annotation.RequiresApi;\n import androidx.core.app.NotificationCompat;\n@@ -46,11 +47,11 @@\n \n import static com.dieam.reactnativepushnotification.modules.RNPushNotification.LOG_TAG;\n import static com.dieam.reactnativepushnotification.modules.RNPushNotificationAttributes.fromJson;\n+import static com.dieam.reactnativepushnotification.modules.RNPushNotification.KEY_TEXT_REPLY;\n \n public class RNPushNotificationHelper {\n     public static final String PREFERENCES_KEY = \"rn_push_notification\";\n     private static final long DEFAULT_VIBRATION = 300L;\n-    private static final String NOTIFICATION_CHANNEL_ID = \"rn-push-notification-channel-id\";\n \n     private Context context;\n     private RNPushNotificationConfig config;\n@@ -187,16 +188,17 @@ public void sendNotificationScheduledCore(Bundle bundle) {\n \n     public void sendToNotificationCentre(final Bundle bundle) {\n       RNPushNotificationPicturesAggregator aggregator = new RNPushNotificationPicturesAggregator(new RNPushNotificationPicturesAggregator.Callback() {\n-        public void call(Bitmap largeIconImage, Bitmap bigPictureImage) {\n-          sendToNotificationCentreWithPicture(bundle, largeIconImage, bigPictureImage);\n+        public void call(Bitmap largeIconImage, Bitmap bigPictureImage, Bitmap bigLargeIconImage) {\n+          sendToNotificationCentreWithPicture(bundle, largeIconImage, bigPictureImage, bigLargeIconImage);\n         }\n       });\n \n       aggregator.setLargeIconUrl(context, bundle.getString(\"largeIconUrl\"));\n+      aggregator.setBigLargeIconUrl(context, bundle.getString(\"bigLargeIconUrl\"));\n       aggregator.setBigPictureUrl(context, bundle.getString(\"bigPictureUrl\"));\n     }\n \n-    public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconBitmap, Bitmap bigPictureBitmap) {\n+    public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconBitmap, Bitmap bigPictureBitmap, Bitmap bigLargeIconBitmap) {\n         try {\n             Class intentClass = getMainActivityClass();\n             if (intentClass == null) {\n@@ -206,7 +208,7 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB\n \n             if (bundle.getString(\"message\") == null) {\n                 // this happens when a 'data' notification is received - we do not synthesize a local notification in this case\n-                Log.d(LOG_TAG, \"Cannot send to notification centre because there is no 'message' field in: \" + bundle);\n+                Log.d(LOG_TAG, \"Ignore this message if you sent data-only notification. Cannot send to notification centre because there is no 'message' field in: \" + bundle);\n                 return;\n             }\n \n@@ -219,9 +221,8 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB\n             Resources res = context.getResources();\n             String packageName = context.getPackageName();\n \n-            String channel_id = NOTIFICATION_CHANNEL_ID;\n-\n             String title = bundle.getString(\"title\");\n+            boolean headsUp = bundle.getBoolean(\"headsUp\", false);\n             if (title == null) {\n                 ApplicationInfo appInfo = context.getApplicationInfo();\n                 title = context.getPackageManager().getApplicationLabel(appInfo).toString();\n@@ -252,44 +253,6 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB\n                 }\n             }\n \n-            int importance = 4; // Same as HIGH for lower version\n-\n-            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\n-                importance = NotificationManager.IMPORTANCE_HIGH;\n-\n-                final String importanceString = bundle.getString(\"importance\");\n-\n-                if (importanceString != null) {\n-                    switch (importanceString.toLowerCase()) {\n-                        case \"default\":\n-                            importance = NotificationManager.IMPORTANCE_DEFAULT;\n-                            break;\n-                        case \"max\":\n-                            importance = NotificationManager.IMPORTANCE_MAX;\n-                            break;\n-                        case \"high\":\n-                            importance = NotificationManager.IMPORTANCE_HIGH;\n-                            break;\n-                        case \"low\":\n-                            importance = NotificationManager.IMPORTANCE_LOW;\n-                            break;\n-                        case \"min\":\n-                            importance = NotificationManager.IMPORTANCE_MIN;\n-                            break;\n-                        case \"none\":\n-                            importance = NotificationManager.IMPORTANCE_NONE;\n-                            break;\n-                        case \"unspecified\":\n-                            importance = NotificationManager.IMPORTANCE_UNSPECIFIED;\n-                            break;\n-                        default:\n-                            importance = NotificationManager.IMPORTANCE_HIGH;\n-                    }\n-                }\n-            }\n-\n-            channel_id = channel_id + \"-\" + importance;\n-\n             int visibility = NotificationCompat.VISIBILITY_PRIVATE;\n             final String visibilityString = bundle.getString(\"visibility\");\n \n@@ -308,7 +271,13 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB\n                         visibility = NotificationCompat.VISIBILITY_PRIVATE;\n                 }\n             }\n+            \n+            String channel_id = bundle.getString(\"channelId\");\n \n+            if(channel_id == null) {\n+                channel_id = this.config.getNotificationDefaultChannelId();\n+            }\n+            \n             NotificationCompat.Builder notification = new NotificationCompat.Builder(context, channel_id)\n                     .setContentTitle(title)\n                     .setTicker(bundle.getString(\"ticker\"))\n@@ -354,9 +323,12 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB\n             String smallIcon = bundle.getString(\"smallIcon\");\n \n             if (smallIcon != null && !smallIcon.isEmpty()) {\n-              smallIconResId = res.getIdentifier(smallIcon, \"mipmap\", packageName);\n+                smallIconResId = res.getIdentifier(smallIcon, \"drawable\", packageName);\n+                if (smallIconResId == 0) {\n+                    smallIconResId = res.getIdentifier(smallIcon, \"mipmap\", packageName);\n+                }\n             } else if(smallIcon == null) {\n-              smallIconResId = res.getIdentifier(\"ic_notification\", \"mipmap\", packageName);\n+                smallIconResId = res.getIdentifier(\"ic_notification\", \"mipmap\", packageName);\n             }\n \n             if (smallIconResId == 0) {\n@@ -376,9 +348,12 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB\n                 String largeIcon = bundle.getString(\"largeIcon\");\n \n                 if (largeIcon != null && !largeIcon.isEmpty()) {\n-                  largeIconResId = res.getIdentifier(largeIcon, \"mipmap\", packageName);\n+                    largeIconResId = res.getIdentifier(largeIcon, \"drawable\", packageName);\n+                    if (largeIconResId == 0) {\n+                        largeIconResId = res.getIdentifier(largeIcon, \"mipmap\", packageName);\n+                    }\n                 } else if(largeIcon == null) {\n-                  largeIconResId = res.getIdentifier(\"ic_launcher\", \"mipmap\", packageName);\n+                    largeIconResId = res.getIdentifier(\"ic_launcher\", \"mipmap\", packageName);\n                 }\n \n                 // Before Lolipop there was no large icon for notifications.\n@@ -410,10 +385,26 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB\n             NotificationCompat.Style style;\n \n             if(bigPictureBitmap != null) {\n+\n+              // Big large icon\n+              if(bigLargeIconBitmap == null) {\n+                  int bigLargeIconResId = 0;\n+\n+                  String bigLargeIcon = bundle.getString(\"bigLargeIcon\");\n+\n+                  if (bigLargeIcon != null && !bigLargeIcon.isEmpty()) {\n+                    bigLargeIconResId = res.getIdentifier(bigLargeIcon, \"mipmap\", packageName);\n+                    if (bigLargeIconResId != 0) {\n+                      bigLargeIconBitmap = BitmapFactory.decodeResource(res, bigLargeIconResId);\n+                    }\n+                  }\n+              }\n+\n               style = new NotificationCompat.BigPictureStyle()\n                       .bigPicture(bigPictureBitmap)\n                       .setBigContentTitle(title)\n-                      .setSummaryText(message);\n+                      .setSummaryText(message)\n+                      .bigLargeIcon(bigLargeIconBitmap);\n             }\n             else {\n               style = new NotificationCompat.BigTextStyle().bigText(bigText);\n@@ -437,16 +428,9 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB\n \n             if (!bundle.containsKey(\"playSound\") || bundle.getBoolean(\"playSound\")) {\n                 String soundName = bundle.getString(\"soundName\");\n-                if (soundName == null) {\n-                    soundName = \"default\";\n-                }\n \n                 soundUri = getSoundUri(soundName);\n \n-                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) { // API 26 and higher\n-                    channel_id = channel_id + \"-\" + soundName;\n-                }\n-\n                 notification.setSound(soundUri);\n             }\n \n@@ -484,8 +468,6 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB\n                 if (vibration == 0)\n                     vibration = DEFAULT_VIBRATION;\n \n-                channel_id = channel_id + \"-\" + vibration;\n-\n                 vibratePattern = new long[]{0, vibration};\n \n                 notification.setVibrate(vibratePattern); \n@@ -498,23 +480,25 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB\n               if (shortcutId != null) {\n                 notification.setShortcutId(shortcutId);\n               }\n+ \n+              Long timeoutAfter = (long) bundle.getDouble(\"timeoutAfter\");\n+  \n+              if (timeoutAfter != null && timeoutAfter >= 0) {\n+                notification.setTimeoutAfter(timeoutAfter);\n+              }\n             }\n \n-            // Override channel_id if there is one provided\n-            String customChannelId = bundle.getString(\"channelId\");\n-            \n-            if (customChannelId != null) {\n-              channel_id = customChannelId;\n+            Long when = (long) bundle.getDouble(\"when\");\n+  \n+            if (when != null && when >= 0) {\n+              notification.setWhen(when);\n             }\n \n-            // Override channel_name, channel_description if there is one provided\n-            String channel_name = bundle.getString(\"channelName\");\n-            String channel_description = bundle.getString(\"channelDescription\");\n-            \n-            checkOrCreateChannel(notificationManager, channel_id, channel_name, channel_description, soundUri, importance, vibratePattern);\n-\n+            notification.setUsesChronometer(bundle.getBoolean(\"usesChronometer\", false));\n+                \n             notification.setChannelId(channel_id);\n-            notification.setContentIntent(pendingIntent);\n+            if (headsUp) notification.setFullScreenIntent(pendingIntent, true);\n+            else notification.setContentIntent(pendingIntent);\n \n             JSONArray actionsArray = null;\n             try {\n@@ -553,13 +537,35 @@ public void sendToNotificationCentreWithPicture(Bundle bundle, Bitmap largeIconB\n \n                     PendingIntent pendingActionIntent = PendingIntent.getBroadcast(context, notificationID, actionIntent,\n                             PendingIntent.FLAG_UPDATE_CURRENT);\n-\n-                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n-                      notification.addAction(new NotificationCompat.Action.Builder(icon, action, pendingActionIntent).build());\n-                    } else {\n-                      notification.addAction(icon, action, pendingActionIntent);\n+                    if(action.equals(\"ReplyInput\")){\n+                        //Action with inline reply\n+                        if(android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.KITKAT_WATCH){\n+                            RemoteInput remoteInput = new RemoteInput.Builder(KEY_TEXT_REPLY)\n+                                    .setLabel(bundle.getString(\"reply_placeholder_text\"))\n+                                    .build();\n+                            NotificationCompat.Action replyAction = new NotificationCompat.Action.Builder(\n+                                    icon, bundle.getString(\"reply_button_text\"), pendingActionIntent)\n+                                    .addRemoteInput(remoteInput)\n+                                    .setAllowGeneratedReplies(true)\n+                                    .build();\n+\n+                            notification.addAction(replyAction);\n+                        }\n+                        else{\n+                            // The notification will not have action\n+                            break;\n+                        }\n+                    }\n+                    else{\n+                        // Add \"action\" for later identifying which button gets pressed\n+                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n+                          notification.addAction(new NotificationCompat.Action.Builder(icon, action, pendingActionIntent).build());\n+                        } else {\n+                          notification.addAction(icon, action, pendingActionIntent);\n+                        }\n                     }\n                 }\n+\n             }\n \n             // Remove the notification from the shared preferences once it has been shown\n@@ -719,10 +725,15 @@ public void clearDeliveredNotifications(ReadableArray identifiers) {\n \n     @RequiresApi(api = Build.VERSION_CODES.M)\n     public WritableArray getDeliveredNotifications() {\n+      WritableArray result = Arguments.createArray();\n+  \n+      if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {\n+        return result;\n+      }\n+\n       NotificationManager notificationManager = notificationManager();\n       StatusBarNotification delivered[] = notificationManager.getActiveNotifications();\n       Log.i(LOG_TAG, \"Found \" + delivered.length + \" delivered notifications\");\n-      WritableArray result = Arguments.createArray();\n       /*\n         * stay consistent to the return structure in\n         * https://facebook.github.io/react-native/docs/pushnotificationios.html#getdeliverednotifications\n@@ -761,6 +772,7 @@ public WritableArray getScheduledLocalNotifications() {\n                 notificationMap.putString(\"id\", notification.getId());\n                 notificationMap.putString(\"repeatInterval\", notification.getRepeatType());\n                 notificationMap.putString(\"soundName\", notification.getSound());\n+                notificationMap.putString(\"data\", notification.getUserInfo());\n \n                 scheduled.pushMap(notificationMap);\n             } catch (JSONException e) {\n@@ -830,26 +842,6 @@ private NotificationManager notificationManager() {\n         return (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n     }\n \n-    public void checkOrCreateDefaultChannel() {\n-      if(!this.config.getChannelCreateDefault()) {\n-        return;\n-      }\n-\n-      NotificationManager manager = notificationManager();\n-\n-      int importance = 4; // Default value of HIGH for lower version\n-\n-      if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {\n-          importance = NotificationManager.IMPORTANCE_HIGH;\n-      }\n-\n-      Uri soundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);\n-      \n-      // Instanciate a default channel with default sound.\n-      String channel_id_sound = NOTIFICATION_CHANNEL_ID + \"-\" + importance + \"-default-\" + DEFAULT_VIBRATION;\n-      checkOrCreateChannel(manager, channel_id_sound, null, null, soundUri, importance, new long[] {0, DEFAULT_VIBRATION});\n-    }\n-\n     public List<String> listChannels() {\n       List<String> channels = new ArrayList<>();\n       \n@@ -921,15 +913,14 @@ private boolean checkOrCreateChannel(NotificationManager manager, String channel\n \n         NotificationChannel channel = manager.getNotificationChannel(channel_id);\n \n-        if(channel_name == null) {\n-          channel_name = this.config.getChannelName(channel_id);\n-        }\n-\n-        if(channel_description == null) {\n-          channel_description = this.config.getChannelDescription(channel_id);\n-        }\n-\n-        if (channel == null || !channel.getName().equals(channel_name) || !channel.getDescription().equals(channel_description)) {\n+        if (\n+          channel == null && channel_name != null && channel_description != null ||\n+          channel != null &&\n+          (\n+            channel_name != null && !channel_name.equals(channel.getName()) ||\n+            channel_description != null && !channel_description.equals(channel.getDescription())\n+          )\n+        ) {\n             // If channel doesn't exist create a new one.\n             // If channel name or description is updated then update the existing channel.\n             channel = new NotificationChannel(channel_id, channel_name, importance);\n@@ -951,8 +942,10 @@ private boolean checkOrCreateChannel(NotificationManager manager, String channel\n             }\n \n             manager.createNotificationChannel(channel);\n+\n             return true;\n         }\n+\n         return false;\n     }\n \n@@ -962,15 +955,16 @@ public boolean createChannel(ReadableMap channelInfo) {\n \n         String channelId = channelInfo.getString(\"channelId\");\n         String channelName = channelInfo.getString(\"channelName\");\n-        String channelDescription = channelInfo.hasKey(\"channelDescription\") ? channelInfo.getString(\"channelDescription\") : null;\n+        String channelDescription = channelInfo.hasKey(\"channelDescription\") ? channelInfo.getString(\"channelDescription\") : \"\";\n+        boolean playSound = !channelInfo.hasKey(\"playSound\") || channelInfo.getBoolean(\"playSound\");\n         String soundName = channelInfo.hasKey(\"soundName\") ? channelInfo.getString(\"soundName\") : \"default\";\n         int importance = channelInfo.hasKey(\"importance\") ? channelInfo.getInt(\"importance\") : 4;\n         boolean vibrate = channelInfo.hasKey(\"vibrate\") && channelInfo.getBoolean(\"vibrate\");\n-        long[] vibratePattern = vibrate ? new long[] { DEFAULT_VIBRATION } : null;\n+        long[] vibratePattern = vibrate ? new long[] { 0, DEFAULT_VIBRATION } : null;\n \n         NotificationManager manager = notificationManager();\n \n-        Uri soundUri = getSoundUri(soundName);\n+        Uri soundUri = playSound ? getSoundUri(soundName) : null;\n \n         return checkOrCreateChannel(manager, channelId, channelName, channelDescription, soundUri, importance, vibratePattern);\n     }"
  },
  {
    "sha": "ca78c0363ffa66abf074f6b8ef3e4c722e272561",
    "filename": "android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationListenerService.java",
    "status": "modified",
    "additions": 15,
    "deletions": 2,
    "changes": 17,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationListenerService.java",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationListenerService.java",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationListenerService.java?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -18,18 +18,31 @@\n \n public class RNPushNotificationListenerService extends FirebaseMessagingService {\n \n-    private RNReceivedMessageHandler mMessageReceivedHandler = new RNReceivedMessageHandler(this);\n+    private RNReceivedMessageHandler mMessageReceivedHandler;\n+    private FirebaseMessagingService mFirebaseServiceDelegate;\n+\n+    public RNPushNotificationListenerService() {\n+        super();\n+        this.mMessageReceivedHandler = new RNReceivedMessageHandler(this);\n+    }\n+\n+    public RNPushNotificationListenerService(FirebaseMessagingService delegate) {\n+        super();\n+        this.mFirebaseServiceDelegate = delegate;\n+        this.mMessageReceivedHandler = new RNReceivedMessageHandler(delegate);\n+    }\n \n     @Override\n     public void onNewToken(String token) {\n         final String deviceToken = token;\n+        final FirebaseMessagingService serviceRef = (this.mFirebaseServiceDelegate == null) ? this : this.mFirebaseServiceDelegate;\n         Log.d(LOG_TAG, \"Refreshed token: \" + deviceToken);\n \n         Handler handler = new Handler(Looper.getMainLooper());\n         handler.post(new Runnable() {\n             public void run() {\n                 // Construct and load our normal React JS code bundle\n-                final ReactInstanceManager mReactInstanceManager = ((ReactApplication) getApplication()).getReactNativeHost().getReactInstanceManager();\n+                final ReactInstanceManager mReactInstanceManager = ((ReactApplication)serviceRef.getApplication()).getReactNativeHost().getReactInstanceManager();\n                 ReactContext context = mReactInstanceManager.getCurrentReactContext();\n                 // If it's constructed, send a notification\n                 if (context != null) {"
  },
  {
    "sha": "733bcbe44eaf1f4661c42b4392e2f4504b32c9e2",
    "filename": "android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationPicturesAggregator.java",
    "status": "modified",
    "additions": 40,
    "deletions": 3,
    "changes": 43,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationPicturesAggregator.java",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationPicturesAggregator.java",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationPicturesAggregator.java?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -22,13 +22,14 @@\n \n public class RNPushNotificationPicturesAggregator {\n   interface Callback {\n-    public void call(Bitmap largeIconImage, Bitmap bigPictureImage);\n+    public void call(Bitmap largeIconImage, Bitmap bigPictureImage, Bitmap bigLargeIconImage);\n   }\n \n   private AtomicInteger count = new AtomicInteger(0);\n \n   private Bitmap largeIconImage;\n   private Bitmap bigPictureImage;\n+  private Bitmap bigLargeIconImage;\n \n   private Callback callback;\n \n@@ -108,6 +109,42 @@ public void onFailureImpl(DataSource dataSource) {\n     });\n   }\n   \n+  public void setBigLargeIcon(Bitmap bitmap) {\n+    this.bigLargeIconImage = bitmap;\n+    this.finished();\n+  }\n+\n+  public void setBigLargeIconUrl(Context context, String url) {\n+    if(null == url) {\n+      this.setBigLargeIcon(null);\n+      return;\n+    }\n+\n+    Uri uri = null;\n+\n+    try {\n+      uri = Uri.parse(url);\n+    } catch(Exception ex) {\n+      Log.e(LOG_TAG, \"Failed to parse bigLargeIconUrl\", ex);\n+      this.setBigLargeIcon(null);\n+      return;\n+    }\n+\n+    final RNPushNotificationPicturesAggregator aggregator = this;\n+\n+    this.downloadRequest(context, uri, new BaseBitmapDataSubscriber() {\n+      @Override\n+      public void onNewResultImpl(@Nullable Bitmap bitmap) {\n+        aggregator.setBigLargeIcon(bitmap);\n+      }\n+\n+      @Override\n+      public void onFailureImpl(DataSource dataSource) {\n+        aggregator.setBigLargeIcon(null);\n+      }\n+    });\n+  }\n+\n   private void downloadRequest(Context context, Uri uri, BaseBitmapDataSubscriber subscriber) {\n     ImageRequest imageRequest = ImageRequestBuilder\n       .newBuilderWithSource(uri)\n@@ -128,8 +165,8 @@ private void finished() {\n     synchronized(this.count) {\n       int val = this.count.incrementAndGet();\n \n-      if(val >= 2 && this.callback != null) {\n-        this.callback.call(this.largeIconImage, this.bigPictureImage);\n+      if(val >= 3 && this.callback != null) {\n+        this.callback.call(this.largeIconImage, this.bigPictureImage, this.bigLargeIconImage);\n       }\n     }\n   }"
  },
  {
    "sha": "c779f5fb24766a984bbfcc2c016360ee214662f1",
    "filename": "android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationPublisher.java",
    "status": "modified",
    "additions": 0,
    "deletions": 2,
    "changes": 2,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationPublisher.java",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationPublisher.java",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNPushNotificationPublisher.java?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -39,8 +39,6 @@ private void handleLocalNotification(Context context, Bundle bundle) {\n \n         Application applicationContext = (Application) context.getApplicationContext();\n         RNPushNotificationHelper pushNotificationHelper = new RNPushNotificationHelper(applicationContext);\n-\n-        boolean isForeground = pushNotificationHelper.isApplicationInForeground();\n         \n         Log.v(LOG_TAG, \"sendNotification: \" + bundle);\n "
  },
  {
    "sha": "b255f89eb49437709681d626388ba57b6a74910f",
    "filename": "android/src/main/java/com/dieam/reactnativepushnotification/modules/RNReceivedMessageHandler.java",
    "status": "modified",
    "additions": 86,
    "deletions": 47,
    "changes": 133,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNReceivedMessageHandler.java",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNReceivedMessageHandler.java",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/android/src/main/java/com/dieam/reactnativepushnotification/modules/RNReceivedMessageHandler.java?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -9,8 +9,11 @@\n import android.os.Bundle;\n import android.os.Handler;\n import android.os.Looper;\n+import android.content.Context;\n import android.util.Log;\n+import android.net.Uri;\n import androidx.annotation.NonNull;\n+import androidx.core.app.NotificationCompat;\n \n import com.dieam.reactnativepushnotification.helpers.ApplicationBadgeHelper;\n import com.facebook.react.ReactApplication;\n@@ -42,44 +45,79 @@ public void handleReceivedMessage(RemoteMessage message) {\n         // data has it\n         if (remoteNotification != null) {\n             // ^ It's null when message is from GCM\n-            bundle.putString(\"title\", remoteNotification.getTitle());\n-            bundle.putString(\"message\", remoteNotification.getBody());\n-            bundle.putString(\"sound\", remoteNotification.getSound());\n-            bundle.putString(\"color\", remoteNotification.getColor());\n-        }\n+            RNPushNotificationConfig config = new RNPushNotificationConfig(mFirebaseMessagingService.getApplication());  \n \n-        Map<String, String> notificationData = message.getData();\n+            String title = getLocalizedString(remoteNotification.getTitle(), remoteNotification.getTitleLocalizationKey(), remoteNotification.getTitleLocalizationArgs());\n+            String body = getLocalizedString(remoteNotification.getBody(), remoteNotification.getBodyLocalizationKey(), remoteNotification.getBodyLocalizationArgs());\n \n-        // Copy `twi_body` to `message` to support Twilio\n-        if (notificationData.containsKey(\"twi_body\")) {\n-            bundle.putString(\"message\", notificationData.get(\"twi_body\"));\n-        }\n-        JSONObject data = getPushData(notificationData.get(\"data\"));\n-\n-        if (data != null) {\n-            if (!bundle.containsKey(\"message\")) {\n-                bundle.putString(\"message\", data.optString(\"alert\", null));\n+            bundle.putString(\"title\", title);\n+            bundle.putString(\"message\", body);\n+            bundle.putString(\"sound\", remoteNotification.getSound());\n+            bundle.putString(\"color\", remoteNotification.getColor());\n+            bundle.putString(\"tag\", remoteNotification.getTag());\n+            \n+            if(remoteNotification.getChannelId() != null) {\n+              bundle.putString(\"channelId\", remoteNotification.getChannelId());\n             }\n-            if (!bundle.containsKey(\"title\")) {\n-                bundle.putString(\"title\", data.optString(\"title\", null));\n+            else {\n+              bundle.putString(\"channelId\", config.getNotificationDefaultChannelId());\n             }\n-            if (!bundle.containsKey(\"sound\")) {\n-                bundle.putString(\"soundName\", data.optString(\"sound\", null));\n+\n+            Integer visibilty = remoteNotification.getVisibility();\n+            String visibilityString = \"private\";\n+\n+            if (visibilty != null) {\n+                switch (visibilty) {\n+                    case NotificationCompat.VISIBILITY_PUBLIC:\n+                        visibilityString = \"public\";\n+                        break;\n+                    case NotificationCompat.VISIBILITY_SECRET:\n+                        visibilityString = \"secret\";\n+                        break;\n+                }\n             }\n-            if (!bundle.containsKey(\"color\")) {\n-                bundle.putString(\"color\", data.optString(\"color\", null));\n+          \n+            bundle.putString(\"visibility\", visibilityString);\n+\n+            Integer priority = remoteNotification.getNotificationPriority();\n+            String priorityString = \"high\";\n+            \n+            if (priority != null) {\n+              switch (priority) {\n+                  case NotificationCompat.PRIORITY_MAX:\n+                      priorityString = \"max\";\n+                      break;\n+                  case NotificationCompat.PRIORITY_LOW:\n+                      priorityString = \"low\";\n+                      break;\n+                  case NotificationCompat.PRIORITY_MIN:\n+                      priorityString = \"min\";\n+                      break;\n+                  case NotificationCompat.PRIORITY_DEFAULT:\n+                      priorityString = \"default\";\n+                      break;\n+              }\n             }\n \n-            final int badge = data.optInt(\"badge\", -1);\n-            if (badge >= 0) {\n-                ApplicationBadgeHelper.INSTANCE.setApplicationIconBadgeNumber(mFirebaseMessagingService, badge);\n+            bundle.putString(\"priority\", priorityString);\n+\n+            Uri uri = remoteNotification.getImageUrl();\n+\n+            if(uri != null) {\n+                String imageUrl = uri.toString();\n+              \n+                bundle.putString(\"bigPictureUrl\", imageUrl);\n+                bundle.putString(\"largeIconUrl\", imageUrl);\n             }\n         }\n \n         Bundle dataBundle = new Bundle();\n+        Map<String, String> notificationData = message.getData();\n+        \n         for(Map.Entry<String, String> entry : notificationData.entrySet()) {\n             dataBundle.putString(entry.getKey(), entry.getValue());\n         }\n+\n         bundle.putParcelable(\"data\", dataBundle);\n \n         Log.v(LOG_TAG, \"onMessageReceived: \" + bundle);\n@@ -113,14 +151,6 @@ public void onReactContextInitialized(ReactContext context) {\n         });\n     }\n \n-    private JSONObject getPushData(String dataString) {\n-        try {\n-            return new JSONObject(dataString);\n-        } catch (Exception e) {\n-            return null;\n-        }\n-    }\n-\n     private void handleRemotePushNotification(ReactApplicationContext context, Bundle bundle) {\n \n         // If notification ID is not provided by the user for push notification, generate one at random\n@@ -129,9 +159,12 @@ private void handleRemotePushNotification(ReactApplicationContext context, Bundl\n             bundle.putString(\"id\", String.valueOf(randomNumberGenerator.nextInt()));\n         }\n \n-        RNPushNotificationConfig config = new RNPushNotificationConfig(mFirebaseMessagingService.getApplication());\n+        Application applicationContext = (Application) context.getApplicationContext();\n+\n+        RNPushNotificationConfig config = new RNPushNotificationConfig(mFirebaseMessagingService.getApplication());  \n+        RNPushNotificationHelper pushNotificationHelper = new RNPushNotificationHelper(applicationContext);\n \n-        boolean isForeground = isApplicationInForeground();\n+        boolean isForeground = pushNotificationHelper.isApplicationInForeground();\n \n         RNPushNotificationJsDelivery jsDelivery = new RNPushNotificationJsDelivery(context);\n         bundle.putBoolean(\"foreground\", isForeground);\n@@ -146,25 +179,31 @@ private void handleRemotePushNotification(ReactApplicationContext context, Bundl\n         if (config.getNotificationForeground() || !isForeground) {\n             Log.v(LOG_TAG, \"sendNotification: \" + bundle);\n \n-            Application applicationContext = (Application) context.getApplicationContext();\n-            RNPushNotificationHelper pushNotificationHelper = new RNPushNotificationHelper(applicationContext);\n             pushNotificationHelper.sendToNotificationCentre(bundle);\n         }\n     }\n \n-    private boolean isApplicationInForeground() {\n-        ActivityManager activityManager = (ActivityManager) mFirebaseMessagingService.getSystemService(ACTIVITY_SERVICE);\n-        List<RunningAppProcessInfo> processInfos = activityManager.getRunningAppProcesses();\n-        if (processInfos != null) {\n-            for (RunningAppProcessInfo processInfo : processInfos) {\n-                if (processInfo.processName.equals(mFirebaseMessagingService.getPackageName())\n-                    && processInfo.importance == RunningAppProcessInfo.IMPORTANCE_FOREGROUND\n-                    && processInfo.pkgList.length > 0) {\n-                    return true;\n+    private String getLocalizedString(String text, String locKey, String[] locArgs) {\n+        if(text != null) {\n+          return text;\n+        }\n+\n+        Context context = mFirebaseMessagingService.getApplicationContext();\n+        String packageName = context.getPackageName();\n+\n+        String result = null;\n+\n+        if (locKey != null) {\n+            int id = context.getResources().getIdentifier(locKey, \"string\", packageName);\n+            if (id != 0) {\n+                if (locArgs != null) {\n+                    result = context.getResources().getString(id, (Object[]) locArgs);\n+                } else {\n+                    result = context.getResources().getString(id);\n                 }\n             }\n         }\n-        return false;\n-    }\n \n+        return result;\n+    }\n }"
  },
  {
    "sha": "3496c045b42c013779394f565ddab273596f527f",
    "filename": "component/index.android.js",
    "status": "modified",
    "additions": 5,
    "deletions": 1,
    "changes": 6,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/component/index.android.js",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/component/index.android.js",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/component/index.android.js?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -2,7 +2,7 @@\n \n import { NativeModules, DeviceEventEmitter } from \"react-native\";\n \n-let RNPushNotification = NativeModules.RNPushNotification;\n+let RNPushNotification = NativeModules.ReactNativePushNotification;\n let _notifHandlers = new Map();\n \n var DEVICE_NOTIF_EVENT = 'remoteNotificationReceived';\n@@ -32,6 +32,10 @@ NotificationsComponent.prototype.subscribeToTopic = function(topic) {\n \tRNPushNotification.subscribeToTopic(topic);\n };\n \n+NotificationsComponent.prototype.unsubscribeFromTopic = function(topic) {\n+\tRNPushNotification.unsubscribeFromTopic(topic);\n+};\n+\n NotificationsComponent.prototype.cancelLocalNotifications = function(details) {\n \tRNPushNotification.cancelLocalNotifications(details);\n };"
  },
  {
    "sha": "eb08ef637528b802911cfc31fdc6fdfb00679d57",
    "filename": "example/App.js",
    "status": "modified",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/App.js",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/App.js",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/example/App.js?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -112,6 +112,13 @@ export default class App extends Component {\n           }}>\n           <Text>Console.Log Scheduled Local Notifications</Text>\n         </TouchableOpacity>\n+        <TouchableOpacity\n+          style={styles.button}\n+          onPress={() => {\n+            this.notif.getDeliveredNotifications(notifs => console.log(notifs));\n+          }}>\n+          <Text>Console.Log Delivered Notifications</Text>\n+        </TouchableOpacity>\n         <TouchableOpacity\n           style={styles.button}\n           onPress={() => {"
  },
  {
    "sha": "c57ccfc9c2a63afd524829417e0eb816debdde0f",
    "filename": "example/NotifService.js",
    "status": "modified",
    "additions": 44,
    "deletions": 3,
    "changes": 47,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/NotifService.js",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/NotifService.js",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/example/NotifService.js?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -6,6 +6,8 @@ export default class NotifService {\n     this.lastId = 0;\n     this.lastChannelCounter = 0;\n \n+    this.createDefaultChannels();\n+\n     NotificationHandler.attachRegister(onRegister);\n     NotificationHandler.attachNotification(onNotification);\n \n@@ -21,6 +23,31 @@ export default class NotifService {\n     });\n   }\n \n+  createDefaultChannels() {\n+    PushNotification.createChannel(\n+      {\n+        channelId: \"default-channel-id\", // (required)\n+        channelName: `Default channel`, // (required)\n+        channelDescription: \"A default channel\", // (optional) default: undefined.\n+        soundName: \"default\", // (optional) See `soundName` parameter of `localNotification` function\n+        importance: 4, // (optional) default: 4. Int value of the Android notification importance\n+        vibrate: true, // (optional) default: true. Creates the default vibration patten if true.\n+      },\n+      (created) => console.log(`createChannel 'default-channel-id' returned '${created}'`) // (optional) callback returns whether the channel was created, false means it already existed.\n+    );\n+    PushNotification.createChannel(\n+      {\n+        channelId: \"sound-channel-id\", // (required)\n+        channelName: `Sound channel`, // (required)\n+        channelDescription: \"A sound channel\", // (optional) default: undefined.\n+        soundName: \"sample.mp3\", // (optional) See `soundName` parameter of `localNotification` function\n+        importance: 4, // (optional) default: 4. Int value of the Android notification importance\n+        vibrate: true, // (optional) default: true. Creates the default vibration patten if true.\n+      },\n+      (created) => console.log(`createChannel 'sound-channel-id' returned '${created}'`) // (optional) callback returns whether the channel was created, false means it already existed.\n+    );\n+  }\n+\n   createOrUpdateChannel() {\n     this.lastChannelCounter++;\n     PushNotification.createChannel(\n@@ -44,6 +71,7 @@ export default class NotifService {\n     this.lastId++;\n     PushNotification.localNotification({\n       /* Android Only Properties */\n+      channelId: soundName ? 'sound-channel-id' : 'default-channel-id',\n       ticker: 'My Notification Ticker', // (optional)\n       autoCancel: true, // (optional) default: true\n       largeIcon: 'ic_launcher', // (optional) default: \"ic_launcher\"\n@@ -55,12 +83,16 @@ export default class NotifService {\n       vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000\n       tag: 'some_tag', // (optional) add tag to message\n       group: 'group', // (optional) add group to message\n+      groupSummary: false, // (optional) set this notification to be the group summary for a group of notifications, default: false\n       ongoing: false, // (optional) set whether this is an \"ongoing\" notification\n       actions: ['Yes', 'No'], // (Android only) See the doc for notification actions to know more\n       invokeApp: true, // (optional) This enable click on actions to bring back the application to foreground or stay in background, default: true\n       \n+      when: null, // (optionnal) Add a timestamp pertaining to the notification (usually the time the event occurred). For apps targeting Build.VERSION_CODES.N and above, this time is not shown anymore by default and must be opted into by using `showWhen`, default: null.\n+      usesChronometer: false, // (optional) Show the `when` field as a stopwatch. Instead of presenting `when` as a timestamp, the notification will show an automatically updating display of the minutes and seconds since when. Useful when showing an elapsed time (like an ongoing phone call), default: false.\n+      timeoutAfter: null, // (optional) Specifies a duration in milliseconds after which this notification should be canceled, if it is not already canceled, default: null\n+\n       /* iOS only properties */\n-      alertAction: 'view', // (optional) default: view\n       category: '', // (optional) default: empty string\n       \n       /* iOS and Android properties */\n@@ -80,6 +112,7 @@ export default class NotifService {\n       date: new Date(Date.now() + 30 * 1000), // in 30 secs\n \n       /* Android Only Properties */\n+      channelId: soundName ? 'sound-channel-id' : 'default-channel-id',\n       ticker: 'My Notification Ticker', // (optional)\n       autoCancel: true, // (optional) default: true\n       largeIcon: 'ic_launcher', // (optional) default: \"ic_launcher\"\n@@ -91,12 +124,16 @@ export default class NotifService {\n       vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000\n       tag: 'some_tag', // (optional) add tag to message\n       group: 'group', // (optional) add group to message\n+      groupSummary: false, // (optional) set this notification to be the group summary for a group of notifications, default: false\n       ongoing: false, // (optional) set whether this is an \"ongoing\" notification\n       actions: ['Yes', 'No'], // (Android only) See the doc for notification actions to know more\n       invokeApp: false, // (optional) This enable click on actions to bring back the application to foreground or stay in background, default: true\n \n+      when: null, // (optionnal) Add a timestamp pertaining to the notification (usually the time the event occurred). For apps targeting Build.VERSION_CODES.N and above, this time is not shown anymore by default and must be opted into by using `showWhen`, default: null.\n+      usesChronometer: false, // (optional) Show the `when` field as a stopwatch. Instead of presenting `when` as a timestamp, the notification will show an automatically updating display of the minutes and seconds since when. Useful when showing an elapsed time (like an ongoing phone call), default: false.\n+      timeoutAfter: null, // (optional) Specifies a duration in milliseconds after which this notification should be canceled, if it is not already canceled, default: null\n+    \n       /* iOS only properties */\n-      alertAction: 'view', // (optional) default: view\n       category: '', // (optional) default: empty string\n       \n       /* iOS and Android properties */\n@@ -105,8 +142,8 @@ export default class NotifService {\n       message: 'My Notification Message', // (required)\n       userInfo: { sceen: \"home\" }, // (optional) default: {} (using null throws a JSON value '<null>' error)\n       playSound: !!soundName, // (optional) default: true\n-      number: 10, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)\n       soundName: soundName ? soundName : 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)\n+      number: 10, // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)\n     });\n   }\n \n@@ -133,4 +170,8 @@ export default class NotifService {\n   getScheduledLocalNotifications(callback) {\n     PushNotification.getScheduledLocalNotifications(callback);\n   }\n+\n+  getDeliveredNotifications(callback) {\n+    PushNotification.getDeliveredNotifications(callback);\n+  }\n }"
  },
  {
    "sha": "7e9056b6f660050b1aa35205286d913126b5e6f1",
    "filename": "example/android/app/src/main/AndroidManifest.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 6,
    "changes": 8,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/android/app/src/main/AndroidManifest.xml",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/android/app/src/main/AndroidManifest.xml",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/example/android/app/src/main/AndroidManifest.xml?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -32,6 +32,8 @@\n       <receiver android:name=\"com.dieam.reactnativepushnotification.modules.RNPushNotificationBootEventReceiver\">\n           <intent-filter>\n               <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n+              <action android:name=\"android.intent.action.QUICKBOOT_POWERON\" />\n+              <action android:name=\"com.htc.intent.action.QUICKBOOT_POWERON\"/>\n           </intent-filter>\n       </receiver>\n \n@@ -43,14 +45,8 @@\n           </intent-filter>\n       </service>\n \n-      <meta-data  android:name=\"com.dieam.reactnativepushnotification.channel_create_default\"\n-                  android:value=\"true\"/>\n       <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_foreground\"\n                   android:value=\"false\"/>\n-      <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_channel_name\"\n-                  android:value=\"Example-Channel\"/>\n-      <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_channel_description\"\n-                  android:value=\"Super channel description\"/>\n       <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_color\"\n                   android:resource=\"@android:color/white\"/>\n     </application>"
  },
  {
    "sha": "3ea30b7255b09d2fad4b57fb1f887174f194a616",
    "filename": "example/android/app/src/main/res/values/strings.xml",
    "status": "modified",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/android/app/src/main/res/values/strings.xml",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/android/app/src/main/res/values/strings.xml",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/example/android/app/src/main/res/values/strings.xml?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -1,3 +1,5 @@\n <resources>\n     <string name=\"app_name\">example</string>\n+    <string name=\"loc_key_title\">Exemple title loc_key</string>\n+    <string name=\"loc_key_message\">Exemple message loc_key: %1$s</string>\n </resources>"
  },
  {
    "sha": "00f500b3910164e0ff23f47d00f6859df95122d9",
    "filename": "example/ios/Podfile",
    "status": "modified",
    "additions": 5,
    "deletions": 75,
    "changes": 80,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/ios/Podfile",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/ios/Podfile",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/example/ios/Podfile?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -1,94 +1,24 @@\n-platform :ios, '9.0'\n+platform :ios, '10.0'\n+require_relative '../node_modules/react-native/scripts/react_native_pods'\n require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'\n \n-def add_flipper_pods!(versions = {})\n-  versions['Flipper'] ||= '~> 0.33.1'\n-  versions['DoubleConversion'] ||= '1.1.7'\n-  versions['Flipper-Folly'] ||= '~> 2.1'\n-  versions['Flipper-Glog'] ||= '0.3.6'\n-  versions['Flipper-PeerTalk'] ||= '~> 0.0.4'\n-  versions['Flipper-RSocket'] ||= '~> 1.0'\n-\n-  pod 'FlipperKit', versions['Flipper'], :configuration => 'Debug'\n-  pod 'FlipperKit/FlipperKitLayoutPlugin', versions['Flipper'], :configuration => 'Debug'\n-  pod 'FlipperKit/SKIOSNetworkPlugin', versions['Flipper'], :configuration => 'Debug'\n-  pod 'FlipperKit/FlipperKitUserDefaultsPlugin', versions['Flipper'], :configuration => 'Debug'\n-  pod 'FlipperKit/FlipperKitReactPlugin', versions['Flipper'], :configuration => 'Debug'\n-\n-  # List all transitive dependencies for FlipperKit pods\n-  # to avoid them being linked in Release builds\n-  pod 'Flipper', versions['Flipper'], :configuration => 'Debug'\n-  pod 'Flipper-DoubleConversion', versions['DoubleConversion'], :configuration => 'Debug'\n-  pod 'Flipper-Folly', versions['Flipper-Folly'], :configuration => 'Debug'\n-  pod 'Flipper-Glog', versions['Flipper-Glog'], :configuration => 'Debug'\n-  pod 'Flipper-PeerTalk', versions['Flipper-PeerTalk'], :configuration => 'Debug'\n-  pod 'Flipper-RSocket', versions['Flipper-RSocket'], :configuration => 'Debug'\n-  pod 'FlipperKit/Core', versions['Flipper'], :configuration => 'Debug'\n-  pod 'FlipperKit/CppBridge', versions['Flipper'], :configuration => 'Debug'\n-  pod 'FlipperKit/FBCxxFollyDynamicConvert', versions['Flipper'], :configuration => 'Debug'\n-  pod 'FlipperKit/FBDefines', versions['Flipper'], :configuration => 'Debug'\n-  pod 'FlipperKit/FKPortForwarding', versions['Flipper'], :configuration => 'Debug'\n-  pod 'FlipperKit/FlipperKitHighlightOverlay', versions['Flipper'], :configuration => 'Debug'\n-  pod 'FlipperKit/FlipperKitLayoutTextSearchable', versions['Flipper'], :configuration => 'Debug'\n-  pod 'FlipperKit/FlipperKitNetworkPlugin', versions['Flipper'], :configuration => 'Debug'\n-end\n-\n-# Post Install processing for Flipper\n-def flipper_post_install(installer)\n-  installer.pods_project.targets.each do |target|\n-    if target.name == 'YogaKit'\n-      target.build_configurations.each do |config|\n-        config.build_settings['SWIFT_VERSION'] = '4.1'\n-      end\n-    end\n-  end\n-end\n-\n target 'example' do\n   # Pods for example\n-  pod 'FBLazyVector', :path => \"../node_modules/react-native/Libraries/FBLazyVector\"\n-  pod 'FBReactNativeSpec', :path => \"../node_modules/react-native/Libraries/FBReactNativeSpec\"\n-  pod 'RCTRequired', :path => \"../node_modules/react-native/Libraries/RCTRequired\"\n-  pod 'RCTTypeSafety', :path => \"../node_modules/react-native/Libraries/TypeSafety\"\n-  pod 'React', :path => '../node_modules/react-native/'\n-  pod 'React-Core', :path => '../node_modules/react-native/'\n-  pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules'\n-  pod 'React-Core/DevSupport', :path => '../node_modules/react-native/'\n-  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'\n-  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'\n-  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'\n-  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'\n-  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'\n-  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'\n-  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'\n-  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'\n-  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'\n-  pod 'React-Core/RCTWebSocket', :path => '../node_modules/react-native/'\n-\n-  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'\n-  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'\n-  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'\n-  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'\n-  pod 'ReactCommon/callinvoker', :path => \"../node_modules/react-native/ReactCommon\"\n-  pod 'ReactCommon/turbomodule/core', :path => \"../node_modules/react-native/ReactCommon\"\n-  pod 'Yoga', :path => '../node_modules/react-native/ReactCommon/yoga', :modular_headers => true\n+  config = use_native_modules!\n \n-  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'\n-  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'\n-  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'\n+  use_react_native!(:path => config[\"reactNativePath\"])\n \n   target 'exampleTests' do\n     inherit! :complete\n     # Pods for testing\n   end\n \n-  use_native_modules!\n \n   # Enables Flipper.\n   #\n   # Note that if you have use_frameworks! enabled, Flipper will not work and\n   # you should disable these next few lines.\n-  add_flipper_pods!\n+  use_flipper!\n   post_install do |installer|\n     flipper_post_install(installer)\n   end"
  },
  {
    "sha": "dfed099b2f7c5813dcc8d5bf630bb2e5835a78d4",
    "filename": "example/ios/Podfile.lock",
    "status": "modified",
    "additions": 268,
    "deletions": 261,
    "changes": 529,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/ios/Podfile.lock",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/ios/Podfile.lock",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/example/ios/Podfile.lock?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -3,297 +3,301 @@ PODS:\n   - CocoaAsyncSocket (7.6.4)\n   - CocoaLibEvent (1.0.0)\n   - DoubleConversion (1.1.6)\n-  - FBLazyVector (0.62.2)\n-  - FBReactNativeSpec (0.62.2):\n-    - Folly (= 2018.10.22.00)\n-    - RCTRequired (= 0.62.2)\n-    - RCTTypeSafety (= 0.62.2)\n-    - React-Core (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - ReactCommon/turbomodule/core (= 0.62.2)\n-  - Flipper (0.33.1):\n-    - Flipper-Folly (~> 2.1)\n-    - Flipper-RSocket (~> 1.0)\n+  - FBLazyVector (0.63.3)\n+  - FBReactNativeSpec (0.63.3):\n+    - Folly (= 2020.01.13.00)\n+    - RCTRequired (= 0.63.3)\n+    - RCTTypeSafety (= 0.63.3)\n+    - React-Core (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - ReactCommon/turbomodule/core (= 0.63.3)\n+  - Flipper (0.54.0):\n+    - Flipper-Folly (~> 2.2)\n+    - Flipper-RSocket (~> 1.1)\n   - Flipper-DoubleConversion (1.1.7)\n-  - Flipper-Folly (2.1.1):\n+  - Flipper-Folly (2.3.0):\n     - boost-for-react-native\n     - CocoaLibEvent (~> 1.0)\n     - Flipper-DoubleConversion\n     - Flipper-Glog\n-    - OpenSSL-Universal (= 1.0.2.19)\n+    - OpenSSL-Universal (= 1.0.2.20)\n   - Flipper-Glog (0.3.6)\n   - Flipper-PeerTalk (0.0.4)\n-  - Flipper-RSocket (1.0.0):\n-    - Flipper-Folly (~> 2.0)\n-  - FlipperKit (0.33.1):\n-    - FlipperKit/Core (= 0.33.1)\n-  - FlipperKit/Core (0.33.1):\n-    - Flipper (~> 0.33.1)\n+  - Flipper-RSocket (1.1.0):\n+    - Flipper-Folly (~> 2.2)\n+  - FlipperKit (0.54.0):\n+    - FlipperKit/Core (= 0.54.0)\n+  - FlipperKit/Core (0.54.0):\n+    - Flipper (~> 0.54.0)\n     - FlipperKit/CppBridge\n     - FlipperKit/FBCxxFollyDynamicConvert\n     - FlipperKit/FBDefines\n     - FlipperKit/FKPortForwarding\n-  - FlipperKit/CppBridge (0.33.1):\n-    - Flipper (~> 0.33.1)\n-  - FlipperKit/FBCxxFollyDynamicConvert (0.33.1):\n-    - Flipper-Folly (~> 2.1)\n-  - FlipperKit/FBDefines (0.33.1)\n-  - FlipperKit/FKPortForwarding (0.33.1):\n+  - FlipperKit/CppBridge (0.54.0):\n+    - Flipper (~> 0.54.0)\n+  - FlipperKit/FBCxxFollyDynamicConvert (0.54.0):\n+    - Flipper-Folly (~> 2.2)\n+  - FlipperKit/FBDefines (0.54.0)\n+  - FlipperKit/FKPortForwarding (0.54.0):\n     - CocoaAsyncSocket (~> 7.6)\n     - Flipper-PeerTalk (~> 0.0.4)\n-  - FlipperKit/FlipperKitHighlightOverlay (0.33.1)\n-  - FlipperKit/FlipperKitLayoutPlugin (0.33.1):\n+  - FlipperKit/FlipperKitHighlightOverlay (0.54.0)\n+  - FlipperKit/FlipperKitLayoutPlugin (0.54.0):\n     - FlipperKit/Core\n     - FlipperKit/FlipperKitHighlightOverlay\n     - FlipperKit/FlipperKitLayoutTextSearchable\n     - YogaKit (~> 1.18)\n-  - FlipperKit/FlipperKitLayoutTextSearchable (0.33.1)\n-  - FlipperKit/FlipperKitNetworkPlugin (0.33.1):\n+  - FlipperKit/FlipperKitLayoutTextSearchable (0.54.0)\n+  - FlipperKit/FlipperKitNetworkPlugin (0.54.0):\n     - FlipperKit/Core\n-  - FlipperKit/FlipperKitReactPlugin (0.33.1):\n+  - FlipperKit/FlipperKitReactPlugin (0.54.0):\n     - FlipperKit/Core\n-  - FlipperKit/FlipperKitUserDefaultsPlugin (0.33.1):\n+  - FlipperKit/FlipperKitUserDefaultsPlugin (0.54.0):\n     - FlipperKit/Core\n-  - FlipperKit/SKIOSNetworkPlugin (0.33.1):\n+  - FlipperKit/SKIOSNetworkPlugin (0.54.0):\n     - FlipperKit/Core\n     - FlipperKit/FlipperKitNetworkPlugin\n-  - Folly (2018.10.22.00):\n+  - Folly (2020.01.13.00):\n     - boost-for-react-native\n     - DoubleConversion\n-    - Folly/Default (= 2018.10.22.00)\n+    - Folly/Default (= 2020.01.13.00)\n     - glog\n-  - Folly/Default (2018.10.22.00):\n+  - Folly/Default (2020.01.13.00):\n     - boost-for-react-native\n     - DoubleConversion\n     - glog\n   - glog (0.3.5)\n-  - OpenSSL-Universal (1.0.2.19):\n-    - OpenSSL-Universal/Static (= 1.0.2.19)\n-  - OpenSSL-Universal/Static (1.0.2.19)\n-  - RCTRequired (0.62.2)\n-  - RCTTypeSafety (0.62.2):\n-    - FBLazyVector (= 0.62.2)\n-    - Folly (= 2018.10.22.00)\n-    - RCTRequired (= 0.62.2)\n-    - React-Core (= 0.62.2)\n-  - React (0.62.2):\n-    - React-Core (= 0.62.2)\n-    - React-Core/DevSupport (= 0.62.2)\n-    - React-Core/RCTWebSocket (= 0.62.2)\n-    - React-RCTActionSheet (= 0.62.2)\n-    - React-RCTAnimation (= 0.62.2)\n-    - React-RCTBlob (= 0.62.2)\n-    - React-RCTImage (= 0.62.2)\n-    - React-RCTLinking (= 0.62.2)\n-    - React-RCTNetwork (= 0.62.2)\n-    - React-RCTSettings (= 0.62.2)\n-    - React-RCTText (= 0.62.2)\n-    - React-RCTVibration (= 0.62.2)\n-  - React-Core (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - OpenSSL-Universal (1.0.2.20):\n+    - OpenSSL-Universal/Static (= 1.0.2.20)\n+  - OpenSSL-Universal/Static (1.0.2.20)\n+  - RCTRequired (0.63.3)\n+  - RCTTypeSafety (0.63.3):\n+    - FBLazyVector (= 0.63.3)\n+    - Folly (= 2020.01.13.00)\n+    - RCTRequired (= 0.63.3)\n+    - React-Core (= 0.63.3)\n+  - React (0.63.3):\n+    - React-Core (= 0.63.3)\n+    - React-Core/DevSupport (= 0.63.3)\n+    - React-Core/RCTWebSocket (= 0.63.3)\n+    - React-RCTActionSheet (= 0.63.3)\n+    - React-RCTAnimation (= 0.63.3)\n+    - React-RCTBlob (= 0.63.3)\n+    - React-RCTImage (= 0.63.3)\n+    - React-RCTLinking (= 0.63.3)\n+    - React-RCTNetwork (= 0.63.3)\n+    - React-RCTSettings (= 0.63.3)\n+    - React-RCTText (= 0.63.3)\n+    - React-RCTVibration (= 0.63.3)\n+  - React-callinvoker (0.63.3)\n+  - React-Core (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n-    - React-Core/Default (= 0.62.2)\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-Core/Default (= 0.63.3)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/CoreModulesHeaders (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/CoreModulesHeaders (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n     - React-Core/Default\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/Default (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/Default (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/DevSupport (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/DevSupport (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n-    - React-Core/Default (= 0.62.2)\n-    - React-Core/RCTWebSocket (= 0.62.2)\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n-    - React-jsinspector (= 0.62.2)\n+    - React-Core/Default (= 0.63.3)\n+    - React-Core/RCTWebSocket (= 0.63.3)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n+    - React-jsinspector (= 0.63.3)\n     - Yoga\n-  - React-Core/RCTActionSheetHeaders (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/RCTActionSheetHeaders (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n     - React-Core/Default\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/RCTAnimationHeaders (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/RCTAnimationHeaders (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n     - React-Core/Default\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/RCTBlobHeaders (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/RCTBlobHeaders (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n     - React-Core/Default\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/RCTImageHeaders (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/RCTImageHeaders (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n     - React-Core/Default\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/RCTLinkingHeaders (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/RCTLinkingHeaders (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n     - React-Core/Default\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/RCTNetworkHeaders (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/RCTNetworkHeaders (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n     - React-Core/Default\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/RCTSettingsHeaders (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/RCTSettingsHeaders (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n     - React-Core/Default\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/RCTTextHeaders (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/RCTTextHeaders (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n     - React-Core/Default\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/RCTVibrationHeaders (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/RCTVibrationHeaders (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n     - React-Core/Default\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-Core/RCTWebSocket (0.62.2):\n-    - Folly (= 2018.10.22.00)\n+  - React-Core/RCTWebSocket (0.63.3):\n+    - Folly (= 2020.01.13.00)\n     - glog\n-    - React-Core/Default (= 0.62.2)\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-jsiexecutor (= 0.62.2)\n+    - React-Core/Default (= 0.63.3)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-jsiexecutor (= 0.63.3)\n     - Yoga\n-  - React-CoreModules (0.62.2):\n-    - FBReactNativeSpec (= 0.62.2)\n-    - Folly (= 2018.10.22.00)\n-    - RCTTypeSafety (= 0.62.2)\n-    - React-Core/CoreModulesHeaders (= 0.62.2)\n-    - React-RCTImage (= 0.62.2)\n-    - ReactCommon/turbomodule/core (= 0.62.2)\n-  - React-cxxreact (0.62.2):\n+  - React-CoreModules (0.63.3):\n+    - FBReactNativeSpec (= 0.63.3)\n+    - Folly (= 2020.01.13.00)\n+    - RCTTypeSafety (= 0.63.3)\n+    - React-Core/CoreModulesHeaders (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-RCTImage (= 0.63.3)\n+    - ReactCommon/turbomodule/core (= 0.63.3)\n+  - React-cxxreact (0.63.3):\n     - boost-for-react-native (= 1.63.0)\n     - DoubleConversion\n-    - Folly (= 2018.10.22.00)\n+    - Folly (= 2020.01.13.00)\n     - glog\n-    - React-jsinspector (= 0.62.2)\n-  - React-jsi (0.62.2):\n+    - React-callinvoker (= 0.63.3)\n+    - React-jsinspector (= 0.63.3)\n+  - React-jsi (0.63.3):\n     - boost-for-react-native (= 1.63.0)\n     - DoubleConversion\n-    - Folly (= 2018.10.22.00)\n+    - Folly (= 2020.01.13.00)\n     - glog\n-    - React-jsi/Default (= 0.62.2)\n-  - React-jsi/Default (0.62.2):\n+    - React-jsi/Default (= 0.63.3)\n+  - React-jsi/Default (0.63.3):\n     - boost-for-react-native (= 1.63.0)\n     - DoubleConversion\n-    - Folly (= 2018.10.22.00)\n+    - Folly (= 2020.01.13.00)\n     - glog\n-  - React-jsiexecutor (0.62.2):\n+  - React-jsiexecutor (0.63.3):\n     - DoubleConversion\n-    - Folly (= 2018.10.22.00)\n+    - Folly (= 2020.01.13.00)\n     - glog\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-  - React-jsinspector (0.62.2)\n-  - React-RCTActionSheet (0.62.2):\n-    - React-Core/RCTActionSheetHeaders (= 0.62.2)\n-  - React-RCTAnimation (0.62.2):\n-    - FBReactNativeSpec (= 0.62.2)\n-    - Folly (= 2018.10.22.00)\n-    - RCTTypeSafety (= 0.62.2)\n-    - React-Core/RCTAnimationHeaders (= 0.62.2)\n-    - ReactCommon/turbomodule/core (= 0.62.2)\n-  - React-RCTBlob (0.62.2):\n-    - FBReactNativeSpec (= 0.62.2)\n-    - Folly (= 2018.10.22.00)\n-    - React-Core/RCTBlobHeaders (= 0.62.2)\n-    - React-Core/RCTWebSocket (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - React-RCTNetwork (= 0.62.2)\n-    - ReactCommon/turbomodule/core (= 0.62.2)\n-  - React-RCTImage (0.62.2):\n-    - FBReactNativeSpec (= 0.62.2)\n-    - Folly (= 2018.10.22.00)\n-    - RCTTypeSafety (= 0.62.2)\n-    - React-Core/RCTImageHeaders (= 0.62.2)\n-    - React-RCTNetwork (= 0.62.2)\n-    - ReactCommon/turbomodule/core (= 0.62.2)\n-  - React-RCTLinking (0.62.2):\n-    - FBReactNativeSpec (= 0.62.2)\n-    - React-Core/RCTLinkingHeaders (= 0.62.2)\n-    - ReactCommon/turbomodule/core (= 0.62.2)\n-  - React-RCTNetwork (0.62.2):\n-    - FBReactNativeSpec (= 0.62.2)\n-    - Folly (= 2018.10.22.00)\n-    - RCTTypeSafety (= 0.62.2)\n-    - React-Core/RCTNetworkHeaders (= 0.62.2)\n-    - ReactCommon/turbomodule/core (= 0.62.2)\n-  - React-RCTSettings (0.62.2):\n-    - FBReactNativeSpec (= 0.62.2)\n-    - Folly (= 2018.10.22.00)\n-    - RCTTypeSafety (= 0.62.2)\n-    - React-Core/RCTSettingsHeaders (= 0.62.2)\n-    - ReactCommon/turbomodule/core (= 0.62.2)\n-  - React-RCTText (0.62.2):\n-    - React-Core/RCTTextHeaders (= 0.62.2)\n-  - React-RCTVibration (0.62.2):\n-    - FBReactNativeSpec (= 0.62.2)\n-    - Folly (= 2018.10.22.00)\n-    - React-Core/RCTVibrationHeaders (= 0.62.2)\n-    - ReactCommon/turbomodule/core (= 0.62.2)\n-  - ReactCommon/callinvoker (0.62.2):\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+  - React-jsinspector (0.63.3)\n+  - React-RCTActionSheet (0.63.3):\n+    - React-Core/RCTActionSheetHeaders (= 0.63.3)\n+  - React-RCTAnimation (0.63.3):\n+    - FBReactNativeSpec (= 0.63.3)\n+    - Folly (= 2020.01.13.00)\n+    - RCTTypeSafety (= 0.63.3)\n+    - React-Core/RCTAnimationHeaders (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - ReactCommon/turbomodule/core (= 0.63.3)\n+  - React-RCTBlob (0.63.3):\n+    - FBReactNativeSpec (= 0.63.3)\n+    - Folly (= 2020.01.13.00)\n+    - React-Core/RCTBlobHeaders (= 0.63.3)\n+    - React-Core/RCTWebSocket (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-RCTNetwork (= 0.63.3)\n+    - ReactCommon/turbomodule/core (= 0.63.3)\n+  - React-RCTImage (0.63.3):\n+    - FBReactNativeSpec (= 0.63.3)\n+    - Folly (= 2020.01.13.00)\n+    - RCTTypeSafety (= 0.63.3)\n+    - React-Core/RCTImageHeaders (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - React-RCTNetwork (= 0.63.3)\n+    - ReactCommon/turbomodule/core (= 0.63.3)\n+  - React-RCTLinking (0.63.3):\n+    - FBReactNativeSpec (= 0.63.3)\n+    - React-Core/RCTLinkingHeaders (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - ReactCommon/turbomodule/core (= 0.63.3)\n+  - React-RCTNetwork (0.63.3):\n+    - FBReactNativeSpec (= 0.63.3)\n+    - Folly (= 2020.01.13.00)\n+    - RCTTypeSafety (= 0.63.3)\n+    - React-Core/RCTNetworkHeaders (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - ReactCommon/turbomodule/core (= 0.63.3)\n+  - React-RCTSettings (0.63.3):\n+    - FBReactNativeSpec (= 0.63.3)\n+    - Folly (= 2020.01.13.00)\n+    - RCTTypeSafety (= 0.63.3)\n+    - React-Core/RCTSettingsHeaders (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - ReactCommon/turbomodule/core (= 0.63.3)\n+  - React-RCTText (0.63.3):\n+    - React-Core/RCTTextHeaders (= 0.63.3)\n+  - React-RCTVibration (0.63.3):\n+    - FBReactNativeSpec (= 0.63.3)\n+    - Folly (= 2020.01.13.00)\n+    - React-Core/RCTVibrationHeaders (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+    - ReactCommon/turbomodule/core (= 0.63.3)\n+  - ReactCommon/turbomodule/core (0.63.3):\n     - DoubleConversion\n-    - Folly (= 2018.10.22.00)\n+    - Folly (= 2020.01.13.00)\n     - glog\n-    - React-cxxreact (= 0.62.2)\n-  - ReactCommon/turbomodule/core (0.62.2):\n-    - DoubleConversion\n-    - Folly (= 2018.10.22.00)\n-    - glog\n-    - React-Core (= 0.62.2)\n-    - React-cxxreact (= 0.62.2)\n-    - React-jsi (= 0.62.2)\n-    - ReactCommon/callinvoker (= 0.62.2)\n-  - RNCPushNotificationIOS (1.4.0):\n-    - React\n+    - React-callinvoker (= 0.63.3)\n+    - React-Core (= 0.63.3)\n+    - React-cxxreact (= 0.63.3)\n+    - React-jsi (= 0.63.3)\n+  - RNCPushNotificationIOS (1.8.0):\n+    - React-Core\n   - Yoga (1.14.0)\n   - YogaKit (1.18.1):\n     - Yoga (~> 1.14)\n@@ -302,30 +306,31 @@ DEPENDENCIES:\n   - DoubleConversion (from `../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec`)\n   - FBLazyVector (from `../node_modules/react-native/Libraries/FBLazyVector`)\n   - FBReactNativeSpec (from `../node_modules/react-native/Libraries/FBReactNativeSpec`)\n-  - Flipper (~> 0.33.1)\n+  - Flipper (~> 0.54.0)\n   - Flipper-DoubleConversion (= 1.1.7)\n-  - Flipper-Folly (~> 2.1)\n+  - Flipper-Folly (~> 2.2)\n   - Flipper-Glog (= 0.3.6)\n   - Flipper-PeerTalk (~> 0.0.4)\n-  - Flipper-RSocket (~> 1.0)\n-  - FlipperKit (~> 0.33.1)\n-  - FlipperKit/Core (~> 0.33.1)\n-  - FlipperKit/CppBridge (~> 0.33.1)\n-  - FlipperKit/FBCxxFollyDynamicConvert (~> 0.33.1)\n-  - FlipperKit/FBDefines (~> 0.33.1)\n-  - FlipperKit/FKPortForwarding (~> 0.33.1)\n-  - FlipperKit/FlipperKitHighlightOverlay (~> 0.33.1)\n-  - FlipperKit/FlipperKitLayoutPlugin (~> 0.33.1)\n-  - FlipperKit/FlipperKitLayoutTextSearchable (~> 0.33.1)\n-  - FlipperKit/FlipperKitNetworkPlugin (~> 0.33.1)\n-  - FlipperKit/FlipperKitReactPlugin (~> 0.33.1)\n-  - FlipperKit/FlipperKitUserDefaultsPlugin (~> 0.33.1)\n-  - FlipperKit/SKIOSNetworkPlugin (~> 0.33.1)\n+  - Flipper-RSocket (~> 1.1)\n+  - FlipperKit (~> 0.54.0)\n+  - FlipperKit/Core (~> 0.54.0)\n+  - FlipperKit/CppBridge (~> 0.54.0)\n+  - FlipperKit/FBCxxFollyDynamicConvert (~> 0.54.0)\n+  - FlipperKit/FBDefines (~> 0.54.0)\n+  - FlipperKit/FKPortForwarding (~> 0.54.0)\n+  - FlipperKit/FlipperKitHighlightOverlay (~> 0.54.0)\n+  - FlipperKit/FlipperKitLayoutPlugin (~> 0.54.0)\n+  - FlipperKit/FlipperKitLayoutTextSearchable (~> 0.54.0)\n+  - FlipperKit/FlipperKitNetworkPlugin (~> 0.54.0)\n+  - FlipperKit/FlipperKitReactPlugin (~> 0.54.0)\n+  - FlipperKit/FlipperKitUserDefaultsPlugin (~> 0.54.0)\n+  - FlipperKit/SKIOSNetworkPlugin (~> 0.54.0)\n   - Folly (from `../node_modules/react-native/third-party-podspecs/Folly.podspec`)\n   - glog (from `../node_modules/react-native/third-party-podspecs/glog.podspec`)\n   - RCTRequired (from `../node_modules/react-native/Libraries/RCTRequired`)\n   - RCTTypeSafety (from `../node_modules/react-native/Libraries/TypeSafety`)\n   - React (from `../node_modules/react-native/`)\n+  - React-callinvoker (from `../node_modules/react-native/ReactCommon/callinvoker`)\n   - React-Core (from `../node_modules/react-native/`)\n   - React-Core/DevSupport (from `../node_modules/react-native/`)\n   - React-Core/RCTWebSocket (from `../node_modules/react-native/`)\n@@ -343,7 +348,6 @@ DEPENDENCIES:\n   - React-RCTSettings (from `../node_modules/react-native/Libraries/Settings`)\n   - React-RCTText (from `../node_modules/react-native/Libraries/Text`)\n   - React-RCTVibration (from `../node_modules/react-native/Libraries/Vibration`)\n-  - ReactCommon/callinvoker (from `../node_modules/react-native/ReactCommon`)\n   - ReactCommon/turbomodule/core (from `../node_modules/react-native/ReactCommon`)\n   - \"RNCPushNotificationIOS (from `../node_modules/@react-native-community/push-notification-ios`)\"\n   - Yoga (from `../node_modules/react-native/ReactCommon/yoga`)\n@@ -380,6 +384,8 @@ EXTERNAL SOURCES:\n     :path: \"../node_modules/react-native/Libraries/TypeSafety\"\n   React:\n     :path: \"../node_modules/react-native/\"\n+  React-callinvoker:\n+    :path: \"../node_modules/react-native/ReactCommon/callinvoker\"\n   React-Core:\n     :path: \"../node_modules/react-native/\"\n   React-CoreModules:\n@@ -421,42 +427,43 @@ SPEC CHECKSUMS:\n   boost-for-react-native: 39c7adb57c4e60d6c5479dd8623128eb5b3f0f2c\n   CocoaAsyncSocket: 694058e7c0ed05a9e217d1b3c7ded962f4180845\n   CocoaLibEvent: 2fab71b8bd46dd33ddb959f7928ec5909f838e3f\n-  DoubleConversion: 5805e889d232975c086db112ece9ed034df7a0b2\n-  FBLazyVector: 4aab18c93cd9546e4bfed752b4084585eca8b245\n-  FBReactNativeSpec: 5465d51ccfeecb7faa12f9ae0024f2044ce4044e\n-  Flipper: 6c1f484f9a88d30ab3e272800d53688439e50f69\n+  DoubleConversion: cde416483dac037923206447da6e1454df403714\n+  FBLazyVector: 878b59e31113e289e275165efbe4b54fa614d43d\n+  FBReactNativeSpec: 7da9338acfb98d4ef9e5536805a0704572d33c2f\n+  Flipper: be611d4b742d8c87fbae2ca5f44603a02539e365\n   Flipper-DoubleConversion: 38631e41ef4f9b12861c67d17cb5518d06badc41\n-  Flipper-Folly: 2de3d03e0acc7064d5e4ed9f730e2f217486f162\n+  Flipper-Folly: e4493b013c02d9347d5e0cb4d128680239f6c78a\n   Flipper-Glog: 1dfd6abf1e922806c52ceb8701a3599a79a200a6\n   Flipper-PeerTalk: 116d8f857dc6ef55c7a5a75ea3ceaafe878aadc9\n-  Flipper-RSocket: 1260a31c05c238eabfa9bb8a64e3983049048371\n-  FlipperKit: 6dc9b8f4ef60d9e5ded7f0264db299c91f18832e\n-  Folly: 30e7936e1c45c08d884aa59369ed951a8e68cf51\n-  glog: 1f3da668190260b06b429bb211bfbee5cd790c28\n-  OpenSSL-Universal: 8b48cc0d10c1b2923617dfe5c178aa9ed2689355\n-  RCTRequired: cec6a34b3ac8a9915c37e7e4ad3aa74726ce4035\n-  RCTTypeSafety: 93006131180074cffa227a1075802c89a49dd4ce\n-  React: 29a8b1a02bd764fb7644ef04019270849b9a7ac3\n-  React-Core: b12bffb3f567fdf99510acb716ef1abd426e0e05\n-  React-CoreModules: 4a9b87bbe669d6c3173c0132c3328e3b000783d0\n-  React-cxxreact: e65f9c2ba0ac5be946f53548c1aaaee5873a8103\n-  React-jsi: b6dc94a6a12ff98e8877287a0b7620d365201161\n-  React-jsiexecutor: 1540d1c01bb493ae3124ed83351b1b6a155db7da\n-  React-jsinspector: 512e560d0e985d0e8c479a54a4e5c147a9c83493\n-  React-RCTActionSheet: f41ea8a811aac770e0cc6e0ad6b270c644ea8b7c\n-  React-RCTAnimation: 49ab98b1c1ff4445148b72a3d61554138565bad0\n-  React-RCTBlob: a332773f0ebc413a0ce85942a55b064471587a71\n-  React-RCTImage: e70be9b9c74fe4e42d0005f42cace7981c994ac3\n-  React-RCTLinking: c1b9739a88d56ecbec23b7f63650e44672ab2ad2\n-  React-RCTNetwork: 73138b6f45e5a2768ad93f3d57873c2a18d14b44\n-  React-RCTSettings: 6e3738a87e21b39a8cb08d627e68c44acf1e325a\n-  React-RCTText: fae545b10cfdb3d247c36c56f61a94cfd6dba41d\n-  React-RCTVibration: 4356114dbcba4ce66991096e51a66e61eda51256\n-  ReactCommon: ed4e11d27609d571e7eee8b65548efc191116eb3\n-  RNCPushNotificationIOS: dc1c0c6aa18a128df123598149f42e848d26a4ac\n-  Yoga: 3ebccbdd559724312790e7742142d062476b698e\n+  Flipper-RSocket: 64e7431a55835eb953b0bf984ef3b90ae9fdddd7\n+  FlipperKit: ab353d41aea8aae2ea6daaf813e67496642f3d7d\n+  Folly: b73c3869541e86821df3c387eb0af5f65addfab4\n+  glog: 40a13f7840415b9a77023fbcae0f1e6f43192af3\n+  OpenSSL-Universal: ff34003318d5e1163e9529b08470708e389ffcdd\n+  RCTRequired: 48884c74035a0b5b76dbb7a998bd93bcfc5f2047\n+  RCTTypeSafety: edf4b618033c2f1c5b7bc3d90d8e085ed95ba2ab\n+  React: f36e90f3ceb976546e97df3403e37d226f79d0e3\n+  React-callinvoker: 18874f621eb96625df7a24a7dc8d6e07391affcd\n+  React-Core: ac3d816b8e3493970153f4aaf0cff18af0bb95e6\n+  React-CoreModules: 4016d3a4e518bcfc4f5a51252b5a05692ca6f0e1\n+  React-cxxreact: ffc9129013b87cb36cf3f30a86695a3c397b0f99\n+  React-jsi: df07aa95b39c5be3e41199921509bfa929ed2b9d\n+  React-jsiexecutor: b56c03e61c0dd5f5801255f2160a815f4a53d451\n+  React-jsinspector: 8e68ffbfe23880d3ee9bafa8be2777f60b25cbe2\n+  React-RCTActionSheet: 53ea72699698b0b47a6421cb1c8b4ab215a774aa\n+  React-RCTAnimation: 1befece0b5183c22ae01b966f5583f42e69a83c2\n+  React-RCTBlob: 0b284339cbe4b15705a05e2313a51c6d8b51fa40\n+  React-RCTImage: d1756599ebd4dc2cb19d1682fe67c6b976658387\n+  React-RCTLinking: 9af0a51c6d6a4dd1674daadafffc6d03033a6d18\n+  React-RCTNetwork: 332c83929cc5eae0b3bbca4add1d668e1fc18bda\n+  React-RCTSettings: d6953772cfd55f2c68ad72b7ef29efc7ec49f773\n+  React-RCTText: 65a6de06a7389098ce24340d1d3556015c38f746\n+  React-RCTVibration: 8e9fb25724a0805107fc1acc9075e26f814df454\n+  ReactCommon: 4167844018c9ed375cc01a843e9ee564399e53c3\n+  RNCPushNotificationIOS: 61a7c72bd1ebad3568025957d001e0f0e7b32191\n+  Yoga: 7d13633d129fd179e01b8953d38d47be90db185a\n   YogaKit: f782866e155069a2cca2517aafea43200b01fd5a\n \n-PODFILE CHECKSUM: 56c2537f71f3f02200d6918c542a8e89a0b422fa\n+PODFILE CHECKSUM: 2ce9d926fa5d7b425b9668ca074ec805d1ac1617\n \n-COCOAPODS: 1.9.3\n+COCOAPODS: 1.10.0"
  },
  {
    "sha": "bc6e7614d8d1546cfbd2861cd355fdc26224287d",
    "filename": "example/ios/example.xcodeproj/project.pbxproj",
    "status": "modified",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/ios/example.xcodeproj/project.pbxproj",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/ios/example.xcodeproj/project.pbxproj",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/example/ios/example.xcodeproj/project.pbxproj?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -213,6 +213,7 @@\n \t\t\t\t00E356EA1AD99517003FC87E /* Sources */,\n \t\t\t\t00E356EB1AD99517003FC87E /* Frameworks */,\n \t\t\t\t00E356EC1AD99517003FC87E /* Resources */,\n+\t\t\t\tCEF8B2703D93599E45D6BF6B /* [CP] Copy Pods Resources */,\n \t\t\t);\n \t\t\tbuildRules = (\n \t\t\t);\n@@ -234,6 +235,7 @@\n \t\t\t\t13B07F8C1A680F5B00A75B9A /* Frameworks */,\n \t\t\t\t13B07F8E1A680F5B00A75B9A /* Resources */,\n \t\t\t\t00DD1BFF1BD5951E006B06BC /* Bundle React Native code and images */,\n+\t\t\t\t14C94C1C1903F2189AE891A6 /* [CP] Copy Pods Resources */,\n \t\t\t);\n \t\t\tbuildRules = (\n \t\t\t);\n@@ -380,6 +382,24 @@\n \t\t\tshellPath = /bin/sh;\n \t\t\tshellScript = \"export NODE_BINARY=node\\n../node_modules/react-native/scripts/react-native-xcode.sh\";\n \t\t};\n+\t\t14C94C1C1903F2189AE891A6 /* [CP] Copy Pods Resources */ = {\n+\t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\tbuildActionMask = 2147483647;\n+\t\t\tfiles = (\n+\t\t\t);\n+\t\t\tinputPaths = (\n+\t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-example/Pods-example-resources.sh\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t);\n+\t\t\tname = \"[CP] Copy Pods Resources\";\n+\t\t\toutputPaths = (\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t);\n+\t\t\trunOnlyForDeploymentPostprocessing = 0;\n+\t\t\tshellPath = /bin/sh;\n+\t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-example/Pods-example-resources.sh\\\"\\n\";\n+\t\t\tshowEnvVarsInLog = 0;\n+\t\t};\n \t\t2D02E4CB1E0B4B27006451C7 /* Bundle React Native Code And Images */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n \t\t\tbuildActionMask = 2147483647;\n@@ -482,6 +502,24 @@\n \t\t\tshellScript = \"diff \\\"${PODS_PODFILE_DIR_PATH}/Podfile.lock\\\" \\\"${PODS_ROOT}/Manifest.lock\\\" > /dev/null\\nif [ $? != 0 ] ; then\\n    # print error to STDERR\\n    echo \\\"error: The sandbox is not in sync with the Podfile.lock. Run 'pod install' or update your CocoaPods installation.\\\" >&2\\n    exit 1\\nfi\\n# This output is used by Xcode 'outputs' to avoid re-running this script phase.\\necho \\\"SUCCESS\\\" > \\\"${SCRIPT_OUTPUT_FILE_0}\\\"\\n\";\n \t\t\tshowEnvVarsInLog = 0;\n \t\t};\n+\t\tCEF8B2703D93599E45D6BF6B /* [CP] Copy Pods Resources */ = {\n+\t\t\tisa = PBXShellScriptBuildPhase;\n+\t\t\tbuildActionMask = 2147483647;\n+\t\t\tfiles = (\n+\t\t\t);\n+\t\t\tinputPaths = (\n+\t\t\t\t\"${PODS_ROOT}/Target Support Files/Pods-example-exampleTests/Pods-example-exampleTests-resources.sh\",\n+\t\t\t\t\"${PODS_CONFIGURATION_BUILD_DIR}/React-Core/AccessibilityResources.bundle\",\n+\t\t\t);\n+\t\t\tname = \"[CP] Copy Pods Resources\";\n+\t\t\toutputPaths = (\n+\t\t\t\t\"${TARGET_BUILD_DIR}/${UNLOCALIZED_RESOURCES_FOLDER_PATH}/AccessibilityResources.bundle\",\n+\t\t\t);\n+\t\t\trunOnlyForDeploymentPostprocessing = 0;\n+\t\t\tshellPath = /bin/sh;\n+\t\t\tshellScript = \"\\\"${PODS_ROOT}/Target Support Files/Pods-example-exampleTests/Pods-example-exampleTests-resources.sh\\\"\\n\";\n+\t\t\tshowEnvVarsInLog = 0;\n+\t\t};\n \t\tFD10A7F022414F080027D42C /* Start Packager */ = {\n \t\t\tisa = PBXShellScriptBuildPhase;\n \t\t\tbuildActionMask = 2147483647;"
  },
  {
    "sha": "c703e13b0e7ebd79d8568b76d45aa6f865c14323",
    "filename": "example/ios/example/AppDelegate.m",
    "status": "modified",
    "additions": 24,
    "deletions": 9,
    "changes": 33,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/ios/example/AppDelegate.m",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/ios/example/AppDelegate.m",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/example/ios/example/AppDelegate.m?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -6,7 +6,7 @@\n #import <RNCPushNotificationIOS.h>\n #import <UserNotifications/UserNotifications.h>\n \n-#if DEBUG\n+#if FB_SONARKIT_ENABLED\n #import <FlipperKit/FlipperClient.h>\n #import <FlipperKitLayoutPlugin/FlipperKitLayoutPlugin.h>\n #import <FlipperKitUserDefaultsPlugin/FKUserDefaultsPlugin.h>\n@@ -29,7 +29,7 @@ @implementation AppDelegate\n \n - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n {\n-#if DEBUG\n+#if FB_SONARKIT_ENABLED\n   InitializeFlipper(application);\n #endif\n \n@@ -40,7 +40,12 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(\n \n   // Define UNUserNotificationCenter\n   UNUserNotificationCenter *center = [UNUserNotificationCenter currentNotificationCenter];\n-  center.delegate = self;\n+  \n+  [center requestAuthorizationWithOptions:(UNAuthorizationOptionAlert + UNAuthorizationOptionSound + UNAuthorizationOptionBadge)completionHandler:^(BOOL granted, NSError * _Nullable error) {\n+    if (granted) {\n+      center.delegate = self; \n+    }\n+  }];\n   \n   rootView.backgroundColor = [[UIColor alloc] initWithRed:1.0f green:1.0f blue:1.0f alpha:1];\n \n@@ -52,6 +57,11 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(\n   return YES;\n }\n \n+-(void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions options))completionHandler\n+{\n+  completionHandler(UNAuthorizationOptionSound | UNAuthorizationOptionAlert | UNAuthorizationOptionBadge);\n+}\n+\n // Required to register for notifications\n - (void)application:(UIApplication *)application didRegisterUserNotificationSettings:(UIUserNotificationSettings *)notificationSettings\n {\n@@ -73,17 +83,22 @@ - (void)application:(UIApplication *)application didFailToRegisterForRemoteNotif\n {\n  [RNCPushNotificationIOS didFailToRegisterForRemoteNotificationsWithError:error];\n }\n-// Required for the localNotification event.\n-- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification\n+\n+// IOS 10+ Required for localNotification event\n+- (void)userNotificationCenter:(UNUserNotificationCenter *)center\n+didReceiveNotificationResponse:(UNNotificationResponse *)response\n+         withCompletionHandler:(void (^)(void))completionHandler\n {\n- [RNCPushNotificationIOS didReceiveLocalNotification:notification];\n+  [RNCPushNotificationIOS didReceiveNotificationResponse:response];\n+  completionHandler();\n }\n \n-//Called when a notification is delivered to a foreground app.\n--(void)userNotificationCenter:(UNUserNotificationCenter *)center willPresentNotification:(UNNotification *)notification withCompletionHandler:(void (^)(UNNotificationPresentationOptions options))completionHandler\n+// IOS 4-10 Required for the localNotification event.\n+- (void)application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)notification\n {\n-  completionHandler(UNAuthorizationOptionSound | UNAuthorizationOptionAlert | UNAuthorizationOptionBadge);\n+ [RNCPushNotificationIOS didReceiveLocalNotification:notification];\n }\n+\n - (NSURL *)sourceURLForBridge:(RCTBridge *)bridge\n {\n #if DEBUG"
  },
  {
    "sha": "867a10807b288d255675dd393fa7e8b0816defa1",
    "filename": "example/package.json",
    "status": "modified",
    "additions": 3,
    "deletions": 3,
    "changes": 6,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/package.json",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/example/package.json",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/example/package.json?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -11,9 +11,9 @@\n     \"pod-install\": \"cd ios && pod install\"\n   },\n   \"dependencies\": {\n-    \"@react-native-community/push-notification-ios\": \"^1.4.0\",\n-    \"react\": \"16.11.0\",\n-    \"react-native\": \"0.62.2\",\n+    \"@react-native-community/push-notification-ios\": \"^1.7.0\",\n+    \"react\": \"16.13.1\",\n+    \"react-native\": \"0.63.3\",\n     \"react-native-push-notification\": \"zo0r/react-native-push-notification#dev\"\n   },\n   \"devDependencies\": {"
  },
  {
    "sha": "47f67900c69be2130b663ca90cc7e055bc75f22c",
    "filename": "index.js",
    "status": "modified",
    "additions": 85,
    "deletions": 43,
    "changes": 128,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/index.js",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/index.js",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/index.js?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -4,16 +4,11 @@\n \n 'use strict';\n \n-import { AppState } from \"react-native\";\n+import { AppState, Platform } from 'react-native';\n+import { component } from './component';\n \n-var RNNotificationsComponent = require( './component' );\n-\n-var RNNotifications = RNNotificationsComponent.component;\n-\n-let Platform = require('react-native').Platform;\n-\n-var Notifications = {\n-  handler: RNNotifications,\n+const Notifications = {\n+  handler: component,\n   onRegister: false,\n   onRegistrationError: false,\n   onNotification: false,\n@@ -145,7 +140,11 @@ Notifications.unregister = function() {\n  * @param {String}    details.ticker -  ANDROID ONLY: The ticker displayed in the status bar.\n  * @param {Object}    details.userInfo -  iOS ONLY: The userInfo used in the notification alert.\n  */\n-Notifications.localNotification = function(details) {\n+Notifications.localNotification = function({...details}) {\n+  if ('android' === Platform.os && details && !details.channelId) {\n+    console.warn('No channel id passed, notifications may not work.');\n+  }\n+\n   if (details && typeof details.id === 'number') {\n     if (isNaN(details.id)) {\n       console.warn('NaN value has been passed as id');\n@@ -172,15 +171,15 @@ Notifications.localNotification = function(details) {\n     }\n \n     // for valid fields see: https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/PayloadKeyReference.html\n-    // alertTitle only valid for apple watch: https://developer.apple.com/library/ios/documentation/iPhone/Reference/UILocalNotification_Class/#//apple_ref/occ/instp/UILocalNotification/alertTitle\n \n-    this.handler.presentLocalNotification({\n-      alertTitle: details.title,\n-      alertBody: details.message,\n-      alertAction: details.alertAction,\n+    this.handler.addNotificationRequest({\n+      id: (!details.id ? Math.floor(Math.random() * Math.pow(2, 32)).toString() : details.id),\n+      title: details.title,\n+      body: details.message,\n+      badge: details.number,\n+      sound: soundName,\n+      isSilent: details.playSound === false,\n       category: details.category,\n-      soundName: soundName,\n-      applicationIconBadgeNumber: details.number,\n       userInfo: details.userInfo\n     });\n   } else {\n@@ -207,6 +206,10 @@ Notifications.localNotification = function(details) {\n     if(details && Array.isArray(details.actions)) {\n       details.actions = JSON.stringify(details.actions);\n     }\n+\n+    if(details.userInfo) {\n+      details.userInfo = JSON.stringify(details.userInfo);\n+    }\n   \n     this.handler.presentLocalNotification(details);\n   }\n@@ -217,7 +220,11 @@ Notifications.localNotification = function(details) {\n  * @param {Object}    details (same as localNotification)\n  * @param {Date}    details.date - The date and time when the system should deliver the notification\n  */\n-Notifications.localNotificationSchedule = function(details) {\n+Notifications.localNotificationSchedule = function({...details}) {\n+  if ('android' === Platform.os && details && !details.channelId) {\n+    console.warn('No channel id passed, notifications may not work.');\n+  }\n+  \n   if (details && typeof details.id === 'number') {\n     if(isNaN(details.id)) {\n       console.warn('NaN value has been passed as id');\n@@ -242,25 +249,22 @@ Notifications.localNotificationSchedule = function(details) {\n     }\n \n     const iosDetails = {\n+      id: (!details.id ? Math.floor(Math.random() * Math.pow(2, 32)).toString() : details.id),\n       fireDate: details.date.toISOString(),\n-      alertTitle: details.title,\n-      alertBody: details.message,\n+      title: details.title,\n+      body: details.message,\n+      sound: soundName,\n+      isSilent: details.playSound === false,\n       category: details.category,\n-      soundName: soundName,\n       userInfo: details.userInfo,\n-      repeatInterval: details.repeatType,\n-      category: details.category,\n+      repeats: (details.repeatType && details.repeatType == \"day\"),\n     };\n \n     if (details.number) {\n-      iosDetails.applicationIconBadgeNumber = parseInt(details.number, 10);\n+      iosDetails.badge = parseInt(details.number, 10);\n     }\n \n-    // ignore Android only repeatType\n-    if (!details.repeatType || details.repeatType === 'time') {\n-      delete iosDetails.repeatInterval;\n-    }\n-    this.handler.scheduleLocalNotification(iosDetails);\n+    this.handler.addNotificationRequest(iosDetails);\n   } else {\n     if (details && typeof details.number === 'number') {\n       if (isNaN(details.number)) {\n@@ -286,6 +290,10 @@ Notifications.localNotificationSchedule = function(details) {\n       details.actions = JSON.stringify(details.actions);\n     }\n \n+    if(details.userInfo) {\n+      details.userInfo = JSON.stringify(details.userInfo);\n+    }\n+\n     details.fireDate = details.date.getTime();\n     delete details.date;\n     // ignore iOS only repeatType\n@@ -318,7 +326,7 @@ Notifications._onRemoteFetch = function(notificationData) {\n   }\n };\n \n-Notifications._onAction = function(notification) {\n+Notifications._onAction = function({...notification}) {\n   if ( typeof notification.data === 'string' ) {\n     try {\n       notification.data = JSON.parse(notificationData.data);\n@@ -338,7 +346,8 @@ Notifications._transformNotificationObject = function(data, isFromBackground = n\n   if ( isFromBackground === null ) {\n     isFromBackground = (\n       data.foreground === false ||\n-      AppState.currentState === 'background'\n+      AppState.currentState === 'background' ||\n+      AppState.currentState === 'unknown'\n     );\n   }\n \n@@ -350,13 +359,15 @@ Notifications._transformNotificationObject = function(data, isFromBackground = n\n     _notification = {\n       id: notifData?.id,\n       foreground: !isFromBackground,\n-      userInteraction: isFromBackground,\n+      userInteraction: notifData?.userInteraction === 1 || false,\n       message: data.getMessage(),\n       data: notifData,\n       badge: data.getBadgeCount(),\n       title: data.getTitle(),\n       soundName: data.getSound(),\n       fireDate: Date.parse(data._fireDate),\n+      action: data.getActionIdentifier(),\n+      reply_text: data.getUserText(),\n       finish: (res) => data.finish(res)\n     };\n \n@@ -378,6 +389,15 @@ Notifications._transformNotificationObject = function(data, isFromBackground = n\n         /* void */\n       }\n     }\n+    \n+    if ( typeof _notification.userInfo === 'string' ) {\n+      try {\n+        _notification.userInfo = JSON.parse(_notification.userInfo);\n+      } catch(e) {\n+        /* void */\n+      }\n+    }\n+\n \n     _notification.data = {\n       ...(typeof _notification.userInfo === 'object' ? _notification.userInfo : {}),\n@@ -448,16 +468,24 @@ Notifications.scheduleLocalNotification = function() {\n   return this.callNative('scheduleLocalNotification', arguments);\n };\n \n-Notifications.cancelLocalNotifications = function() {\n-  return this.callNative('cancelLocalNotifications', arguments);\n+Notifications.cancelLocalNotifications = function(userInfo) {\n+  if ( Platform.OS === 'ios' ) {\n+    return this.callNative('removePendingNotificationRequests', [[userInfo.id]]);\n+  } else {\n+    return this.callNative('cancelLocalNotifications', [userInfo]);\n+  }\n };\n \n Notifications.clearLocalNotification = function() {\n     return this.callNative('clearLocalNotification', arguments);\n };\n \n Notifications.cancelAllLocalNotifications = function() {\n-  return this.callNative('cancelAllLocalNotifications', arguments);\n+  if ( Platform.OS === 'ios' ) {\n+    return this.callNative('removeAllPendingNotificationRequests', arguments);\n+  } else if (Platform.OS === 'android') {\n+    return this.callNative('cancelAllLocalNotifications', arguments);\n+  }\n };\n \n Notifications.setApplicationIconBadgeNumber = function() {\n@@ -505,17 +533,22 @@ Notifications.getScheduledLocalNotifications = function(callback) {\n \t\t\tif(Platform.OS === 'ios'){\n \t\t\t\tmappedNotifications = notifications.map(notif => {\n \t\t\t\t\treturn ({\n-\t\t\t\t\t\tsoundName: notif.soundName,\n-\t\t\t\t\t\trepeatInterval: notif.repeatInterval,\n-\t\t\t\t\t\tid: notif.userInfo?.id,\n-            date: new Date(notif.fireDate),\n-\t\t\t\t\t\tnumber: notif?.applicationIconBadgeNumber,\n-\t\t\t\t\t\tmessage: notif?.alertBody,\n-\t\t\t\t\t\ttitle: notif?.alertTitle,\n+\t\t\t\t\t\tsoundName: notif?.sound,\n+\t\t\t\t\t\tid: notif.id,\n+                        date: (notif.date ? new Date(notif.date) : null),\n+\t\t\t\t\t\tnumber: notif?.badge,\n+\t\t\t\t\t\tmessage: notif?.body,\n+            title: notif?.title,\n+            data: notif?.userInfo\n \t\t\t\t\t})\n \t\t\t\t})\n \t\t\t} else if(Platform.OS === 'android') {\n \t\t\t\tmappedNotifications = notifications.map(notif => {\n+\n+          try {\n+            notif.data = JSON.parse(notif.data);\n+          } catch(e) { }\n+\n \t\t\t\t\treturn ({\n \t\t\t\t\t\tsoundName: notif.soundName,\n \t\t\t\t\t\trepeatInterval: notif.repeatInterval,\n@@ -524,14 +557,19 @@ Notifications.getScheduledLocalNotifications = function(callback) {\n \t\t\t\t\t\tnumber: notif.number,\n \t\t\t\t\t\tmessage: notif.message,\n \t\t\t\t\t\ttitle: notif.title,\n+\t\t\t\t\t\tdata: notif.data,\n \t\t\t\t\t})\n \t\t\t\t})\n \t\t\t}\n \t\t}\n \t\tcallback(mappedNotifications);\n \t}\n \n-\treturn this.callNative('getScheduledLocalNotifications', [mapNotifications]);\n+  if(Platform.OS === 'ios'){\n+    return this.callNative('getPendingNotificationRequests', [mapNotifications]);\n+  } else {\n+    return this.callNative('getScheduledLocalNotifications', [mapNotifications]);\n+  }\n }\n \n Notifications.removeDeliveredNotifications = function() {\n@@ -562,4 +600,8 @@ Notifications.deleteChannel = function() {\n   return this.callNative('deleteChannel', arguments);\n };\n \n+Notifications.setNotificationCategories = function() {\n+  return this.callNative('setNotificationCategories', arguments);\n+}\n+\n module.exports = Notifications;"
  },
  {
    "sha": "aa3f039a1439e0de5620dc48998cf4253b4ccbd0",
    "filename": "package.json",
    "status": "modified",
    "additions": 2,
    "deletions": 4,
    "changes": 6,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/package.json",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/package.json",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/package.json?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -1,6 +1,6 @@\n {\n   \"name\": \"react-native-push-notification\",\n-  \"version\": \"5.0.1\",\n+  \"version\": \"7.2.3\",\n   \"description\": \"React Native Local and Remote Notifications\",\n   \"main\": \"index.js\",\n   \"scripts\": {\n@@ -23,10 +23,8 @@\n     \"type\": \"git\",\n     \"url\": \"git+ssh://git@github.com:zo0r/react-native-push-notification.git\"\n   },\n-  \"dependencies\": {\n-    \"@react-native-community/push-notification-ios\": \"^1.4.0\"\n-  },\n   \"peerDependencies\": {\n+    \"@react-native-community/push-notification-ios\": \"^1.8.0\",\n     \"react-native\": \">=0.33\"\n   },\n   \"author\": \"zo0r <http://zo0r.me>\","
  },
  {
    "sha": "e2f3ebe02720a51430144d90c3249aca701073b2",
    "filename": "trouble-shooting.md",
    "status": "modified",
    "additions": 26,
    "deletions": 45,
    "changes": 71,
    "blob_url": "https://github.com/5e-Healthcare/react-native-push-notification/blob/19954e6b005c3ad9706896e22b2a0c36cfd61324/trouble-shooting.md",
    "raw_url": "https://github.com/5e-Healthcare/react-native-push-notification/raw/19954e6b005c3ad9706896e22b2a0c36cfd61324/trouble-shooting.md",
    "contents_url": "https://api.github.com/repos/5e-Healthcare/react-native-push-notification/contents/trouble-shooting.md?ref=19954e6b005c3ad9706896e22b2a0c36cfd61324",
    "patch": "@@ -7,6 +7,31 @@ Known bugs and issues:\n  * (Android) Tapping an alert in the notification centre will sometimes not result in `onNotification` being called [issue 281](https://github.com/zo0r/react-native-push-notification/issues/281)\n  * (Android) Not all local notification features are supported yet (PRs welcome)\n  * (iOS) The OS can penalise your app for not calling the completion handler and will stop (or delay) sending notifications to your app. This will be supported from RN-0.38 [PR 227](https://github.com/zo0r/react-native-push-notification/pull/277)\n+ * (Android and iOS) Don't use a string to get the date for schedule a local notification, it only works with remote debugger enabled, [explanation](https://stackoverflow.com/a/41881765/8519917).\n+  \n+\n+  ```javascript\n+  // It doesn't works with the javascript engine used by React Native \n+  const date = new Date(\"10-10-2020 12:30\");\n+  ```\n+  A good practice to get valid date could be:\n+\n+  ```javascript\n+  // Get date to schedule a local notification today at 12:30:00\n+  const hour = 12;\n+  const minute = 30;\n+  const second = 0;\n+\n+  const now = new Date();\n+  const date = new Date(\n+    now.getFullYear(),\n+    now.getMonth(),\n+    now.getDate(),\n+    hour,\n+    minute,\n+    second\n+  );\n+  ```\n  \n # Android tips\n \n@@ -25,7 +50,7 @@ Known bugs and issues:\n   \n # About notifications...\n \n-There are a number of different types of notifications, and they have subtly different behaviours.  There are essentially 4 types, let's call them _local notifications_ (1), _noisy remote push notifications_ (2), _silent remote push notifications_ (3) and _mixed remote push notifications_ (4).\n+There are a number of different types of notifications, and they have subtly different behaviours.  There are essentially 4 types, let's call them _local notifications_ (1), _noisy remote push notifications_ (2) and _silent remote push notifications_ (3).\n \n ## 1. local notifications\n \n@@ -178,50 +203,6 @@ The crucial bit of an iOS silent notification is presence of the `\"content-avail\n \n After you have processed the notification you must call isn't `finish` method (as of RN 0.38).\n \n-## 4. _mixed_ remote push notifications\n-\n-_Mixed_ remote push notifications are both delivered to your app AND to the notification center.\n-\n-#### Android _mixed_ remote push notifications\n-\n-Android doesn't directly support mixed notifications.  If you try to combine the above approaches you will see a _noisy_ notification but it will not be delivered to your app.  This library does however provide a basic work-around.  By adding `message` field to a _silent_ notification the library will synthesize a local notification as well as deliver a _silent_ notification to your app.  Something like this:\n-\n-```json\n-{\n-  \"to\": \"<token>\",\n-  \"time_to_live\": 86400,\n-  \"collapse_key\": \"new_message\",\n-  \"delay_while_idle\": false,\n-  \"data\": {\n-    \"title\": \"title\",\n-    \"message\": \"this is a mixed test 14:03:29.676\",\n-    \"your-key\": \"your-value\"\n-  }\n-}\n-```\n-\n-The resulting local notification will include the message as well as a few other (optional) fields: _title_, _sound_ and _colour_\n-\n-#### iOS _mixed_ remote push notifications\n-\n-Just combine the above _silent_ and _noisy_ notifications and send to APNS:\n-\n-```json\n-{\n-  \"aps\": {\n-    \"alert\": {\n-      \"body\": \"body 16:03:49.889\",\n-      \"title\": \"title\"\n-    },\n-    \"badge\": 1,\n-    \"sound\": \"default\"\n-  },\n-  \"payload\": \"{\\\"your-key\\\":\\\"your-value\\\"}\"\n-}\n-```\n-\n-It will be delivered to both the notification centre **and** your app if the app is running in the background, but only to your app if it's running in the foreground.\n-\n #### Some useful links\n \n  * http://www.fantageek.com/blog/2016/04/15/push-notification-in-practice/"
  }
]
