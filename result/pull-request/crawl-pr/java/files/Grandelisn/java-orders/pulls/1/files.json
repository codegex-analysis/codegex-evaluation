[
  {
    "sha": "549e00a2a96fa9d7c5dbc9859664a78d980158c2",
    "filename": "javaorders/.gitignore",
    "status": "added",
    "additions": 33,
    "deletions": 0,
    "changes": 33,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/.gitignore",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/.gitignore",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/.gitignore?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,33 @@\n+HELP.md\n+target/\n+!.mvn/wrapper/maven-wrapper.jar\n+!**/src/main/**/target/\n+!**/src/test/**/target/\n+\n+### STS ###\n+.apt_generated\n+.classpath\n+.factorypath\n+.project\n+.settings\n+.springBeans\n+.sts4-cache\n+\n+### IntelliJ IDEA ###\n+.idea\n+*.iws\n+*.iml\n+*.ipr\n+\n+### NetBeans ###\n+/nbproject/private/\n+/nbbuild/\n+/dist/\n+/nbdist/\n+/.nb-gradle/\n+build/\n+!**/src/main/**/build/\n+!**/src/test/**/build/\n+\n+### VS Code ###\n+.vscode/"
  },
  {
    "sha": "f017ce67437b1af6f504dfa7bf7e37ae994e798e",
    "filename": "javaorders/.mvn/wrapper/MavenWrapperDownloader.java",
    "status": "added",
    "additions": 150,
    "deletions": 0,
    "changes": 150,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/.mvn/wrapper/MavenWrapperDownloader.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/.mvn/wrapper/MavenWrapperDownloader.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/.mvn/wrapper/MavenWrapperDownloader.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright 2007-present the original author or authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.net.*;\n+import java.io.*;\n+import java.nio.channels.*;\n+import java.util.Properties;\n+\n+public class MavenWrapperDownloader\n+{\n+\n+    private static final String WRAPPER_VERSION = \"0.5.6\";\n+\n+    /**\n+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.\n+     */\n+    private static final String DEFAULT_DOWNLOAD_URL = \"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/\"\n+        + WRAPPER_VERSION + \"/maven-wrapper-\" + WRAPPER_VERSION + \".jar\";\n+\n+    /**\n+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to\n+     * use instead of the default one.\n+     */\n+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =\n+        \".mvn/wrapper/maven-wrapper.properties\";\n+\n+    /**\n+     * Path where the maven-wrapper.jar will be saved to.\n+     */\n+    private static final String MAVEN_WRAPPER_JAR_PATH =\n+        \".mvn/wrapper/maven-wrapper.jar\";\n+\n+    /**\n+     * Name of the property which should be used to override the default download url for the wrapper.\n+     */\n+    private static final String PROPERTY_NAME_WRAPPER_URL = \"wrapperUrl\";\n+\n+    public static void main(String args[])\n+    {\n+        System.out.println(\"- Downloader started\");\n+        File baseDirectory = new File(args[0]);\n+        System.out.println(\"- Using base directory: \" + baseDirectory.getAbsolutePath());\n+\n+        // If the maven-wrapper.properties exists, read it and check if it contains a custom\n+        // wrapperUrl parameter.\n+        File mavenWrapperPropertyFile = new File(baseDirectory,\n+            MAVEN_WRAPPER_PROPERTIES_PATH);\n+        String url = DEFAULT_DOWNLOAD_URL;\n+        if (mavenWrapperPropertyFile.exists())\n+        {\n+            FileInputStream mavenWrapperPropertyFileInputStream = null;\n+            try\n+            {\n+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);\n+                Properties mavenWrapperProperties = new Properties();\n+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);\n+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL,\n+                    url);\n+            } catch (IOException e)\n+            {\n+                System.out.println(\"- ERROR loading '\" + MAVEN_WRAPPER_PROPERTIES_PATH + \"'\");\n+            } finally\n+            {\n+                try\n+                {\n+                    if (mavenWrapperPropertyFileInputStream != null)\n+                    {\n+                        mavenWrapperPropertyFileInputStream.close();\n+                    }\n+                } catch (IOException e)\n+                {\n+                    // Ignore ...\n+                }\n+            }\n+        }\n+        System.out.println(\"- Downloading from: \" + url);\n+\n+        File outputFile = new File(baseDirectory.getAbsolutePath(),\n+            MAVEN_WRAPPER_JAR_PATH);\n+        if (!outputFile.getParentFile()\n+            .exists())\n+        {\n+            if (!outputFile.getParentFile()\n+                .mkdirs())\n+            {\n+                System.out.println(\n+                    \"- ERROR creating output directory '\" + outputFile.getParentFile()\n+                        .getAbsolutePath() + \"'\");\n+            }\n+        }\n+        System.out.println(\"- Downloading to: \" + outputFile.getAbsolutePath());\n+        try\n+        {\n+            downloadFileFromURL(url,\n+                outputFile);\n+            System.out.println(\"Done\");\n+            System.exit(0);\n+        } catch (Throwable e)\n+        {\n+            System.out.println(\"- Error downloading\");\n+            e.printStackTrace();\n+            System.exit(1);\n+        }\n+    }\n+\n+    private static void downloadFileFromURL(\n+        String urlString,\n+        File destination) throws Exception\n+    {\n+        if (System.getenv(\"MVNW_USERNAME\") != null && System.getenv(\"MVNW_PASSWORD\") != null)\n+        {\n+            String username = System.getenv(\"MVNW_USERNAME\");\n+            char[] password = System.getenv(\"MVNW_PASSWORD\")\n+                .toCharArray();\n+            Authenticator.setDefault(new Authenticator()\n+            {\n+                @Override\n+                protected PasswordAuthentication getPasswordAuthentication()\n+                {\n+                    return new PasswordAuthentication(username,\n+                        password);\n+                }\n+            });\n+        }\n+        URL website = new URL(urlString);\n+        ReadableByteChannel rbc;\n+        rbc = Channels.newChannel(website.openStream());\n+        FileOutputStream fos = new FileOutputStream(destination);\n+        fos.getChannel()\n+            .transferFrom(rbc,\n+                0,\n+                Long.MAX_VALUE);\n+        fos.close();\n+        rbc.close();\n+    }\n+\n+}"
  },
  {
    "sha": "2cc7d4a55c0cd0092912bf49ae38b3a9e3fd0054",
    "filename": "javaorders/.mvn/wrapper/maven-wrapper.jar",
    "status": "added",
    "additions": 0,
    "deletions": 0,
    "changes": 0,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/.mvn/wrapper/maven-wrapper.jar",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/.mvn/wrapper/maven-wrapper.jar",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/.mvn/wrapper/maven-wrapper.jar?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896"
  },
  {
    "sha": "642d572ce90e5085986bdd9c9204b9404f028084",
    "filename": "javaorders/.mvn/wrapper/maven-wrapper.properties",
    "status": "added",
    "additions": 2,
    "deletions": 0,
    "changes": 2,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/.mvn/wrapper/maven-wrapper.properties",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/.mvn/wrapper/maven-wrapper.properties",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/.mvn/wrapper/maven-wrapper.properties?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,2 @@\n+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip\n+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
  },
  {
    "sha": "a16b5431b4c3cab50323a3f558003fd0abd87dad",
    "filename": "javaorders/mvnw",
    "status": "added",
    "additions": 310,
    "deletions": 0,
    "changes": 310,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/mvnw",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/mvnw",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/mvnw?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,310 @@\n+#!/bin/sh\n+# ----------------------------------------------------------------------------\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#    https://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+# ----------------------------------------------------------------------------\n+\n+# ----------------------------------------------------------------------------\n+# Maven Start Up Batch script\n+#\n+# Required ENV vars:\n+# ------------------\n+#   JAVA_HOME - location of a JDK home dir\n+#\n+# Optional ENV vars\n+# -----------------\n+#   M2_HOME - location of maven2's installed home dir\n+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+#     e.g. to debug Maven itself, use\n+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+# ----------------------------------------------------------------------------\n+\n+if [ -z \"$MAVEN_SKIP_RC\" ] ; then\n+\n+  if [ -f /etc/mavenrc ] ; then\n+    . /etc/mavenrc\n+  fi\n+\n+  if [ -f \"$HOME/.mavenrc\" ] ; then\n+    . \"$HOME/.mavenrc\"\n+  fi\n+\n+fi\n+\n+# OS specific support.  $var _must_ be set to either true or false.\n+cygwin=false;\n+darwin=false;\n+mingw=false\n+case \"`uname`\" in\n+  CYGWIN*) cygwin=true ;;\n+  MINGW*) mingw=true;;\n+  Darwin*) darwin=true\n+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n+    if [ -z \"$JAVA_HOME\" ]; then\n+      if [ -x \"/usr/libexec/java_home\" ]; then\n+        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n+      else\n+        export JAVA_HOME=\"/Library/Java/Home\"\n+      fi\n+    fi\n+    ;;\n+esac\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  if [ -r /etc/gentoo-release ] ; then\n+    JAVA_HOME=`java-config --jre-home`\n+  fi\n+fi\n+\n+if [ -z \"$M2_HOME\" ] ; then\n+  ## resolve links - $0 may be a link to maven's home\n+  PRG=\"$0\"\n+\n+  # need this for relative symlinks\n+  while [ -h \"$PRG\" ] ; do\n+    ls=`ls -ld \"$PRG\"`\n+    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n+    if expr \"$link\" : '/.*' > /dev/null; then\n+      PRG=\"$link\"\n+    else\n+      PRG=\"`dirname \"$PRG\"`/$link\"\n+    fi\n+  done\n+\n+  saveddir=`pwd`\n+\n+  M2_HOME=`dirname \"$PRG\"`/..\n+\n+  # make it fully qualified\n+  M2_HOME=`cd \"$M2_HOME\" && pwd`\n+\n+  cd \"$saveddir\"\n+  # echo Using m2 at $M2_HOME\n+fi\n+\n+# For Cygwin, ensure paths are in UNIX format before anything is touched\n+if $cygwin ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\n+fi\n+\n+# For Mingw, ensure paths are in UNIX format before anything is touched\n+if $mingw ; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ]; then\n+  javaExecutable=\"`which javac`\"\n+  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n+    # readlink(1) is not available as standard on Solaris 10.\n+    readLink=`which readlink`\n+    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n+      if $darwin ; then\n+        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n+      else\n+        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n+      fi\n+      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n+      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n+      JAVA_HOME=\"$javaHome\"\n+      export JAVA_HOME\n+    fi\n+  fi\n+fi\n+\n+if [ -z \"$JAVACMD\" ] ; then\n+  if [ -n \"$JAVA_HOME\"  ] ; then\n+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n+      # IBM's JDK on AIX uses strange locations for the executables\n+      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n+    else\n+      JAVACMD=\"$JAVA_HOME/bin/java\"\n+    fi\n+  else\n+    JAVACMD=\"`which java`\"\n+  fi\n+fi\n+\n+if [ ! -x \"$JAVACMD\" ] ; then\n+  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n+  echo \"  We cannot execute $JAVACMD\" >&2\n+  exit 1\n+fi\n+\n+if [ -z \"$JAVA_HOME\" ] ; then\n+  echo \"Warning: JAVA_HOME environment variable is not set.\"\n+fi\n+\n+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n+\n+# traverses directory structure from process work directory to filesystem root\n+# first directory with .mvn subdirectory is considered project base directory\n+find_maven_basedir() {\n+\n+  if [ -z \"$1\" ]\n+  then\n+    echo \"Path not specified to find_maven_basedir\"\n+    return 1\n+  fi\n+\n+  basedir=\"$1\"\n+  wdir=\"$1\"\n+  while [ \"$wdir\" != '/' ] ; do\n+    if [ -d \"$wdir\"/.mvn ] ; then\n+      basedir=$wdir\n+      break\n+    fi\n+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n+    if [ -d \"${wdir}\" ]; then\n+      wdir=`cd \"$wdir/..\"; pwd`\n+    fi\n+    # end of workaround\n+  done\n+  echo \"${basedir}\"\n+}\n+\n+# concatenates all lines of a file\n+concat_lines() {\n+  if [ -f \"$1\" ]; then\n+    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n+  fi\n+}\n+\n+BASE_DIR=`find_maven_basedir \"$(pwd)\"`\n+if [ -z \"$BASE_DIR\" ]; then\n+  exit 1;\n+fi\n+\n+##########################################################################################\n+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+# This allows using the maven wrapper in projects that prohibit checking in binary data.\n+##########################################################################################\n+if [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n+    fi\n+else\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n+    fi\n+    if [ -n \"$MVNW_REPOURL\" ]; then\n+      jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    else\n+      jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    fi\n+    while IFS=\"=\" read key value; do\n+      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n+      esac\n+    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n+    if [ \"$MVNW_VERBOSE\" = true ]; then\n+      echo \"Downloading from: $jarUrl\"\n+    fi\n+    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n+    if $cygwin; then\n+      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n+    fi\n+\n+    if command -v wget > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found wget ... using wget\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            wget \"$jarUrl\" -O \"$wrapperJarPath\"\n+        else\n+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n+        fi\n+    elif command -v curl > /dev/null; then\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Found curl ... using curl\"\n+        fi\n+        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n+            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        else\n+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n+        fi\n+\n+    else\n+        if [ \"$MVNW_VERBOSE\" = true ]; then\n+          echo \"Falling back to using Java to download\"\n+        fi\n+        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n+        # For Cygwin, switch paths to Windows format before running javac\n+        if $cygwin; then\n+          javaClass=`cygpath --path --windows \"$javaClass\"`\n+        fi\n+        if [ -e \"$javaClass\" ]; then\n+            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n+                fi\n+                # Compiling the Java class\n+                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n+            fi\n+            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n+                # Running the downloader\n+                if [ \"$MVNW_VERBOSE\" = true ]; then\n+                  echo \" - Running MavenWrapperDownloader.java ...\"\n+                fi\n+                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n+            fi\n+        fi\n+    fi\n+fi\n+##########################################################################################\n+# End of extension\n+##########################################################################################\n+\n+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\n+if [ \"$MVNW_VERBOSE\" = true ]; then\n+  echo $MAVEN_PROJECTBASEDIR\n+fi\n+MAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n+\n+# For Cygwin, switch paths to Windows format before running java\n+if $cygwin; then\n+  [ -n \"$M2_HOME\" ] &&\n+    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n+  [ -n \"$JAVA_HOME\" ] &&\n+    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n+  [ -n \"$CLASSPATH\" ] &&\n+    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n+  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\n+fi\n+\n+# Provide a \"standardized\" way to retrieve the CLI args that will\n+# work with both Windows and non-Windows executions.\n+MAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\n+export MAVEN_CMD_LINE_ARGS\n+\n+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+exec \"$JAVACMD\" \\\n+  $MAVEN_OPTS \\\n+  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n+  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\""
  },
  {
    "sha": "c8d43372c986d97911cdc21bd87e0cbe3d83bdda",
    "filename": "javaorders/mvnw.cmd",
    "status": "added",
    "additions": 182,
    "deletions": 0,
    "changes": 182,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/mvnw.cmd",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/mvnw.cmd",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/mvnw.cmd?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,182 @@\n+@REM ----------------------------------------------------------------------------\n+@REM Licensed to the Apache Software Foundation (ASF) under one\n+@REM or more contributor license agreements.  See the NOTICE file\n+@REM distributed with this work for additional information\n+@REM regarding copyright ownership.  The ASF licenses this file\n+@REM to you under the Apache License, Version 2.0 (the\n+@REM \"License\"); you may not use this file except in compliance\n+@REM with the License.  You may obtain a copy of the License at\n+@REM\n+@REM    https://www.apache.org/licenses/LICENSE-2.0\n+@REM\n+@REM Unless required by applicable law or agreed to in writing,\n+@REM software distributed under the License is distributed on an\n+@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+@REM KIND, either express or implied.  See the License for the\n+@REM specific language governing permissions and limitations\n+@REM under the License.\n+@REM ----------------------------------------------------------------------------\n+\n+@REM ----------------------------------------------------------------------------\n+@REM Maven Start Up Batch script\n+@REM\n+@REM Required ENV vars:\n+@REM JAVA_HOME - location of a JDK home dir\n+@REM\n+@REM Optional ENV vars\n+@REM M2_HOME - location of maven2's installed home dir\n+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n+@REM     e.g. to debug Maven itself, use\n+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n+@REM ----------------------------------------------------------------------------\n+\n+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n+@echo off\n+@REM set title of command window\n+title %0\n+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n+@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n+\n+@REM set %HOME% to equivalent of $HOME\n+if \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n+\n+@REM Execute a user defined script before this one\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n+@REM check for pre script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\n+if exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n+:skipRcPre\n+\n+@setlocal\n+\n+set ERROR_CODE=0\n+\n+@REM To isolate internal variables from possible post scripts, we use another setlocal\n+@setlocal\n+\n+@REM ==== START VALIDATION ====\n+if not \"%JAVA_HOME%\" == \"\" goto OkJHome\n+\n+echo.\n+echo Error: JAVA_HOME not found in your environment. >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+:OkJHome\n+if exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n+\n+echo.\n+echo Error: JAVA_HOME is set to an invalid directory. >&2\n+echo JAVA_HOME = \"%JAVA_HOME%\" >&2\n+echo Please set the JAVA_HOME variable in your environment to match the >&2\n+echo location of your Java installation. >&2\n+echo.\n+goto error\n+\n+@REM ==== END VALIDATION ====\n+\n+:init\n+\n+@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n+@REM Fallback to current working directory if not found.\n+\n+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\n+IF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n+\n+set EXEC_DIR=%CD%\n+set WDIR=%EXEC_DIR%\n+:findBaseDir\n+IF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\n+cd ..\n+IF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\n+set WDIR=%CD%\n+goto findBaseDir\n+\n+:baseDirFound\n+set MAVEN_PROJECTBASEDIR=%WDIR%\n+cd \"%EXEC_DIR%\"\n+goto endDetectBaseDir\n+\n+:baseDirNotFound\n+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%\n+cd \"%EXEC_DIR%\"\n+\n+:endDetectBaseDir\n+\n+IF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n+\n+@setlocal EnableExtensions EnableDelayedExpansion\n+for /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n+\n+:endReadAdditionalConfig\n+\n+SET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\n+set WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\n+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n+\n+set DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+\n+FOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n+    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n+)\n+\n+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\n+if exist %WRAPPER_JAR% (\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Found %WRAPPER_JAR%\n+    )\n+) else (\n+    if not \"%MVNW_REPOURL%\" == \"\" (\n+        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n+    )\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n+        echo Downloading from: %DOWNLOAD_URL%\n+    )\n+\n+    powershell -Command \"&{\"^\n+\t\t\"$webclient = new-object System.Net.WebClient;\"^\n+\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n+\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n+\t\t\"}\"^\n+\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n+\t\t\"}\"\n+    if \"%MVNW_VERBOSE%\" == \"true\" (\n+        echo Finished downloading %WRAPPER_JAR%\n+    )\n+)\n+@REM End of extension\n+\n+@REM Provide a \"standardized\" way to retrieve the CLI args that will\n+@REM work with both Windows and non-Windows executions.\n+set MAVEN_CMD_LINE_ARGS=%*\n+\n+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\n+if ERRORLEVEL 1 goto error\n+goto end\n+\n+:error\n+set ERROR_CODE=1\n+\n+:end\n+@endlocal & set ERROR_CODE=%ERROR_CODE%\n+\n+if not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n+@REM check for post script, once with legacy .bat ending and once with .cmd ending\n+if exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\n+if exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n+:skipRcPost\n+\n+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\n+if \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n+\n+if \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n+\n+exit /B %ERROR_CODE%"
  },
  {
    "sha": "c5cd0ff966a8a54d574349b883aa3d3a4eef7ab2",
    "filename": "javaorders/pom.xml",
    "status": "added",
    "additions": 56,
    "deletions": 0,
    "changes": 56,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/pom.xml",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/pom.xml",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/pom.xml?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,56 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.4.3</version>\n+        <relativePath/> <!-- lookup parent from repository -->\n+    </parent>\n+    <groupId>com.lambdaschool</groupId>\n+    <artifactId>javaorders</artifactId>\n+    <version>0.0.1-SNAPSHOT</version>\n+    <name>javaorders</name>\n+    <description>Demo project for Spring Boot</description>\n+    <properties>\n+        <java.version>11</java.version>\n+    </properties>\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-data-jpa</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-devtools</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-test</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.springframework.boot</groupId>\n+                <artifactId>spring-boot-maven-plugin</artifactId>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+</project>"
  },
  {
    "sha": "9ae56b3c0cd367f3a2bcc6f10f4c6e9c5d33e40b",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/SeedData.java",
    "status": "added",
    "additions": 655,
    "deletions": 0,
    "changes": 655,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/SeedData.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/SeedData.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/SeedData.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,655 @@\n+package com.lambdaschool.orders;\n+\n+//import com.github.javafaker.Faker;\n+import com.lambdaschool.orders.models.Agent;\n+import com.lambdaschool.orders.models.Customer;\n+import com.lambdaschool.orders.models.Order;\n+import com.lambdaschool.orders.models.Payment;\n+import com.lambdaschool.orders.repositories.AgentsRepository;\n+import com.lambdaschool.orders.repositories.CustomersRepository;\n+import com.lambdaschool.orders.repositories.OrdersRepository;\n+import com.lambdaschool.orders.repositories.PaymentRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.CommandLineRunner;\n+import org.springframework.stereotype.Component;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import java.util.HashSet;\n+import java.util.Locale;\n+import java.util.Random;\n+import java.util.Set;\n+\n+@Transactional\n+@Component\n+public class SeedData\n+        implements CommandLineRunner {\n+    /**\n+     * Connects the customer table to this SeedData method\n+     */\n+    @Autowired\n+    private CustomersRepository custrepos;\n+\n+    /**\n+     * Connects the agents table to this SeedData method\n+     */\n+    @Autowired\n+    private AgentsRepository agentrepos;\n+\n+    /**\n+     * Connects the orders table to this SeedData method\n+     */\n+    @Autowired\n+    private OrdersRepository ordersrepos;\n+\n+    /**\n+     * Connects the payment table to this SeedData method\n+     */\n+    @Autowired\n+    private PaymentRepository paymentrepos;\n+\n+    /**\n+     * A Random generator is needed to randomly generate faker data.\n+     */\n+    private Random random = new Random();\n+\n+    /**\n+     * Generates test, seed data for our application\n+     * First a set of known data is seeded into our database.\n+     * Second a random set of data using Java Faker is seeded into our database.\n+     * Note this process does not remove data from the database. So if data exists in the database\n+     * prior to running this process, that data remains in the database.\n+     *\n+     * @param args The parameter is required by the parent interface but is not used in this process.\n+     */\n+    @Transactional\n+    @Override\n+    public void run(String[] args) throws\n+            Exception {\n+        Payment pay1 = new Payment(\"Cash\");\n+        Payment pay2 = new Payment(\"Gift Card\");\n+        Payment pay3 = new Payment(\"Credit Card\");\n+        Payment pay4 = new Payment(\"Mobile Pay\");\n+\n+        pay1 = paymentrepos.save(pay1);\n+        pay2 = paymentrepos.save(pay2);\n+        pay3 = paymentrepos.save(pay3);\n+        pay4 = paymentrepos.save(pay4);\n+\n+        Agent a01 = new Agent(\"Ramasundar\",\n+                \"Bangalore\",\n+                0.15,\n+                \"077-25814763\",\n+                \"\");\n+        Agent a02 = new Agent(\"Alex\",\n+                \"London\",\n+                0.13,\n+                \"075-12458969\",\n+                \"\");\n+        Agent a03 = new Agent(\"Alford\",\n+                \"New York\",\n+                0.12,\n+                \"044-25874365\",\n+                \"\");\n+        Agent a04 = new Agent(\"Ravi\",\n+                \"Bangalore\",\n+                0.15,\n+                \"077-45625874\",\n+                \"\");\n+        Agent a05 = new Agent(\"Santakumar\",\n+                \"Chennai\",\n+                0.14,\n+                \"007-22388644\",\n+                \"\");\n+        Agent a06 = new Agent(\"Lucida\",\n+                \"San Jose\",\n+                0.12,\n+                \"044-52981425\",\n+                \"\");\n+        Agent a07 = new Agent(\"Anderson\",\n+                \"Brisban\",\n+                0.13,\n+                \"045-21447739\",\n+                \"\");\n+        Agent a08 = new Agent(\"Subbarao\",\n+                \"Bangalore\",\n+                0.14,\n+                \"077-12346674\",\n+                \"\");\n+        Agent a09 = new Agent(\"Mukesh\",\n+                \"Mumbai\",\n+                0.11,\n+                \"029-12358964\",\n+                \"\");\n+        Agent a10 = new Agent(\"McDen\",\n+                \"London\",\n+                0.15,\n+                \"078-22255588\",\n+                \"\");\n+        Agent a11 = new Agent(\"Ivan\",\n+                \"Torento\",\n+                0.15,\n+                \"008-22544166\",\n+                \"\");\n+        Agent a12 = new Agent(\"Benjamin\",\n+                \"Hampshair\",\n+                0.11,\n+                \"008-22536178\",\n+                \"\");\n+\n+        Customer c01 = new Customer(\n+                \"Holmes\",\n+                \"London\",\n+                \"London\",\n+                \"UK\",\n+                \"2\",\n+                6000.00,\n+                5000.00,\n+                7000.00,\n+                4000.00,\n+                \"BBBBBBB\",\n+                a03);\n+        Customer c02 = new Customer(\n+                \"Micheal\",\n+                \"New York\",\n+                \"New York\",\n+                \"USA\",\n+                \"2\",\n+                3000.00,\n+                5000.00,\n+                2000.00,\n+                6000.00,\n+                \"CCCCCCC\",\n+                a08);\n+        Customer c03 = new Customer(\n+                \"Albert\",\n+                \"New York\",\n+                \"New York\",\n+                \"USA\",\n+                \"3\",\n+                5000.00,\n+                7000.00,\n+                6000.00,\n+                6000.00,\n+                \"BBBBSBB\",\n+                a08);\n+        Customer c04 = new Customer(\n+                \"Ravindran\",\n+                \"Bangalore\",\n+                \"Bangalore\",\n+                \"India\",\n+                \"2\",\n+                5000.00,\n+                7000.00,\n+                4000.00,\n+                8000.00,\n+                \"AVAVAVA\",\n+                a11);\n+        Customer c05 = new Customer(\n+                \"Cook\",\n+                \"London\",\n+                \"London\",\n+                \"UK\",\n+                \"2\",\n+                4000.00,\n+                9000.00,\n+                7000.00,\n+                6000.00,\n+                \"FSDDSDF\",\n+                a06);\n+        Customer c06 = new Customer(\n+                \"Stuart\",\n+                \"London\",\n+                \"London\",\n+                \"UK\",\n+                \"1\",\n+                6000.00,\n+                8000.00,\n+                3000.00,\n+                11000.00,\n+                \"GFSGERS\",\n+                a03);\n+        Customer c07 = new Customer(\n+                \"Bolt\",\n+                \"New York\",\n+                \"New York\",\n+                \"USA\",\n+                \"3\",\n+                5000.00,\n+                7000.00,\n+                9000.00,\n+                3000.00,\n+                \"DDNRDRH\",\n+                a08);\n+        Customer c08 = new Customer(\n+                \"Fleming\",\n+                \"Brisban\",\n+                \"Brisban\",\n+                \"Australia\",\n+                \"2\",\n+                7000.00,\n+                7000.00,\n+                9000.00,\n+                5000.00,\n+                \"NHBGVFC\",\n+                a05);\n+        Customer c09 = new Customer(\n+                \"Jacks\",\n+                \"Brisban\",\n+                \"Brisban\",\n+                \"Australia\",\n+                \"1\",\n+                7000.00,\n+                7000.00,\n+                7000.00,\n+                7000.00,\n+                \"WERTGDF\",\n+                a05);\n+        Customer c10 = new Customer(\n+                \"Yearannaidu\",\n+                \"Chennai\",\n+                \"Chennai\",\n+                \"India\",\n+                \"1\",\n+                8000.00,\n+                7000.00,\n+                7000.00,\n+                8000.00,\n+                \"ZZZZBFV\",\n+                a10);\n+        Customer c11 = new Customer(\n+                \"Sasikant\",\n+                \"Mumbai\",\n+                \"Mumbai\",\n+                \"India\",\n+                \"1\",\n+                7000.00,\n+                11000.00,\n+                7000.00,\n+                11000.00,\n+                \"147-25896312\",\n+                a02);\n+        Customer c12 = new Customer(\n+                \"Ramanathan\",\n+                \"Chennai\",\n+                \"Chennai\",\n+                \"India\",\n+                \"1\",\n+                7000.00,\n+                11000.00,\n+                9000.00,\n+                9000.00,\n+                \"GHRDWSD\",\n+                a10);\n+        Customer c13 = new Customer(\n+                \"Avinash\",\n+                \"Mumbai\",\n+                \"Mumbai\",\n+                \"India\",\n+                \"2\",\n+                7000.00,\n+                11000.00,\n+                9000.00,\n+                9000.00,\n+                \"113-12345678\",\n+                a02);\n+        Customer c14 = new Customer(\n+                \"Winston\",\n+                \"Brisban\",\n+                \"Brisban\",\n+                \"Australia\",\n+                \"1\",\n+                5000.00,\n+                8000.00,\n+                7000.00,\n+                6000.00,\n+                \"AAAAAAA\",\n+                a05);\n+        Customer c15 = new Customer(\n+                \"Karl\",\n+                \"London\",\n+                \"London\",\n+                \"UK\",\n+                \"0\",\n+                4000.00,\n+                6000.00,\n+                7000.00,\n+                3000.00,\n+                \"AAAABAA\",\n+                a06);\n+        Customer c16 = new Customer(\n+                \"Shilton\",\n+                \"Torento\",\n+                \"Torento\",\n+                \"Canada\",\n+                \"1\",\n+                10000.00,\n+                7000.00,\n+                6000.00,\n+                11000.00,\n+                \"DDDDDDD\",\n+                a04);\n+        Customer c17 = new Customer(\n+                \"Charles\",\n+                \"Hampshair\",\n+                \"Hampshair\",\n+                \"UK\",\n+                \"3\",\n+                6000.00,\n+                4000.00,\n+                5000.00,\n+                5000.00,\n+                \"MMMMMMM\",\n+                a09);\n+        Customer c18 = new Customer(\n+                \"Srinivas\",\n+                \"Bangalore\",\n+                \"Bangalore\",\n+                \"India\",\n+                \"2\",\n+                8000.00,\n+                4000.00,\n+                3000.00,\n+                9000.00,\n+                \"AAAAAAB\",\n+                a07);\n+        Customer c19 = new Customer(\n+                \"Steven\",\n+                \"San Jose\",\n+                \"San Jose\",\n+                \"USA\",\n+                \"1\",\n+                5000.00,\n+                7000.00,\n+                9000.00,\n+                3000.00,\n+                \"KRFYGJK\",\n+                a10);\n+        Customer c20 = new Customer(\n+                \"Karolina\",\n+                \"Torento\",\n+                \"Torento\",\n+                \"Canada\",\n+                \"1\",\n+                7000.00,\n+                7000.00,\n+                9000.00,\n+                5000.00,\n+                \"HJKORED\",\n+                a04);\n+        Customer c21 = new Customer(\n+                \"Martin\",\n+                \"Torento\",\n+                \"Torento\",\n+                \"Canada\",\n+                \"2\",\n+                8000.00,\n+                7000.00,\n+                7000.00,\n+                8000.00,\n+                \"MJYURFD\",\n+                a04);\n+        Customer c22 = new Customer(\n+                \"Ramesh\",\n+                \"Mumbai\",\n+                \"Mumbai\",\n+                \"India\",\n+                \"3\",\n+                8000.00,\n+                7000.00,\n+                3000.00,\n+                12000.00,\n+                \"Phone No\",\n+                a02);\n+        Customer c23 = new Customer(\n+                \"Rangarappa\",\n+                \"Bangalore\",\n+                \"Bangalore\",\n+                \"India\",\n+                \"2\",\n+                8000.00,\n+                11000.00,\n+                7000.00,\n+                12000.00,\n+                \"AAAATGF\",\n+                a01);\n+        Customer c24 = new Customer(\n+                \"Venkatpati\",\n+                \"Bangalore\",\n+                \"Bangalore\",\n+                \"India\",\n+                \"2\",\n+                8000.00,\n+                11000.00,\n+                7000.00,\n+                12000.00,\n+                \"JRTVFDD\",\n+                a07);\n+        Customer c25 = new Customer(\n+                \"Sundariya\",\n+                \"Chennai\",\n+                \"Chennai\",\n+                \"India\",\n+                \"3\",\n+                7000.00,\n+                11000.00,\n+                7000.00,\n+                11000.00,\n+                \"PPHGRTS\",\n+                a10);\n+\n+        Order o01 = new Order(1000.00,\n+                600.00,\n+                c13,\n+                \"SOD\");\n+        o01.getPayments()\n+                .add(pay1);\n+\n+        Order o02 = new Order(\n+                3000.00,\n+                500.00,\n+                c19,\n+                \"SOD\");\n+        o02.getPayments()\n+                .add(pay2);\n+\n+        Order o03 = new Order(4500.00,\n+                900.00,\n+                c07,\n+                \"SOD\");\n+        o03.getPayments()\n+                .add(pay3);\n+        o03.getPayments()\n+                .add(pay2);\n+\n+        Order o04 = new Order(2000.00,\n+                0.00,\n+                c16,\n+                \"SOD\");\n+        o04.getPayments()\n+                .add(pay4);\n+\n+        Order o05 = new Order(4000.00,\n+                600.00,\n+                c22,\n+                \"SOD\");\n+        o05.getPayments()\n+                .add(pay2);\n+\n+        Order o06 = new Order(2000.00,\n+                0.00,\n+                c12,\n+                \"SOD\");\n+        o06.getPayments()\n+                .add(pay3);\n+\n+        Order o07 = new Order(3500.00,\n+                2000.00,\n+                c02,\n+                \"SOD\");\n+        o07.getPayments()\n+                .add(pay4);\n+\n+        Order o08 = new Order(2500.00,\n+                400.00,\n+                c03,\n+                \"SOD\");\n+        o08.getPayments()\n+                .add(pay1);\n+\n+        Order o09 = new Order(500.00,\n+                0.00,\n+                c23,\n+                \"SOD\");\n+        o09.getPayments()\n+                .add(pay3);\n+\n+        Order o10 = new Order(4000.00,\n+                700.00,\n+                c07,\n+                \"SOD\");\n+        o10.getPayments()\n+                .add(pay4);\n+\n+        Order o11 = new Order(1500.00,\n+                600.00,\n+                c08,\n+                \"SOD\");\n+        o11.getPayments()\n+                .add(pay2);\n+\n+        Order o12 = new Order(2500.00,\n+                0.00,\n+                c25,\n+                \"SOD\");\n+        o12.getPayments()\n+                .add(pay1);\n+\n+        agentrepos.save(a01);\n+        agentrepos.save(a02);\n+        agentrepos.save(a03);\n+        agentrepos.save(a04);\n+        agentrepos.save(a05);\n+        agentrepos.save(a06);\n+        agentrepos.save(a07);\n+        agentrepos.save(a08);\n+        agentrepos.save(a09);\n+        agentrepos.save(a10);\n+        agentrepos.save(a11);\n+        agentrepos.save(a12);\n+\n+        custrepos.save(c01);\n+        custrepos.save(c02);\n+        custrepos.save(c03);\n+        custrepos.save(c04);\n+        custrepos.save(c05);\n+        custrepos.save(c06);\n+        custrepos.save(c07);\n+        custrepos.save(c08);\n+        custrepos.save(c09);\n+        custrepos.save(c10);\n+        custrepos.save(c11);\n+        custrepos.save(c12);\n+        custrepos.save(c13);\n+        custrepos.save(c14);\n+        custrepos.save(c15);\n+        custrepos.save(c16);\n+        custrepos.save(c17);\n+        custrepos.save(c18);\n+        custrepos.save(c19);\n+        custrepos.save(c20);\n+        custrepos.save(c21);\n+        custrepos.save(c22);\n+        custrepos.save(c23);\n+        custrepos.save(c24);\n+        custrepos.save(c25);\n+\n+        ordersrepos.save(o01);\n+        ordersrepos.save(o02);\n+        ordersrepos.save(o03);\n+        ordersrepos.save(o04);\n+        ordersrepos.save(o05);\n+        ordersrepos.save(o06);\n+        ordersrepos.save(o07);\n+        ordersrepos.save(o08);\n+        ordersrepos.save(o09);\n+        ordersrepos.save(o10);\n+        ordersrepos.save(o11);\n+        ordersrepos.save(o12);\n+\n+        //Begins the faker data\n+\n+//        Faker dataFaker = new Faker(new Locale(\"en-US\"));\n+//        Set<String> customerNames = new HashSet<>();\n+//        for (int i = 0; i < 100; i++) {\n+//            customerNames.add(dataFaker.name()\n+//                    .fullName());\n+//        }\n+//\n+//        for (String theName : customerNames) {\n+//            String custcity = dataFaker.address()\n+//                    .city();\n+//            String tempWorkingarea = dataFaker.address()\n+//                    .cityName();\n+//            String tempCustcountry = dataFaker.address()\n+//                    .country();\n+//            String tempGrade = dataFaker.country()\n+//                    .countryCode2();\n+//            double tempOpeningamt = dataFaker.number()\n+//                    .randomDouble(2,\n+//                            0,\n+//                            10000);\n+//            double tempReceiveamt = dataFaker.number()\n+//                    .randomDouble(2,\n+//                            0,\n+//                            10000);\n+//            double tempPaymentamt = dataFaker.number()\n+//                    .randomDouble(2,\n+//                            0,\n+//                            10000);\n+//            double tempOutstandingamt = dataFaker.number()\n+//                    .randomDouble(2,\n+//                            0,\n+//                            10000);\n+//            String tempPhone = dataFaker.phoneNumber()\n+//                    .phoneNumber();\n+//\n+//            Customer fakeCustomer = new Customer(theName,\n+//                    custcity,\n+//                    tempWorkingarea,\n+//                    tempCustcountry,\n+//                    tempGrade,\n+//                    tempOpeningamt,\n+//                    tempReceiveamt,\n+//                    tempPaymentamt,\n+//                    tempOutstandingamt,\n+//                    tempPhone,\n+//                    a10);\n+//\n+//            int randomNumber = random.nextInt(10); // random number 0 through 9\n+//            for (int i = 0; i < randomNumber; i++) {\n+//                double tempGetOrdamount = dataFaker.number()\n+//                        .randomDouble(2,\n+//                                0,\n+//                                10000);\n+//                double tempGetAdvanceamount = dataFaker.number()\n+//                        .randomDouble(2,\n+//                                0,\n+//                                10000);\n+//                String tempGetOrderdescription = dataFaker.lorem()\n+//                        .characters();\n+//\n+//                Order newOrder = new Order(tempGetOrdamount,\n+//                        tempGetAdvanceamount,\n+//                        fakeCustomer,\n+//                        tempGetOrderdescription);\n+//\n+//                newOrder.getPayments().add(pay1);\n+//                fakeCustomer.getOrders()\n+//                        .add(newOrder);\n+//            }\n+//\n+//            // this actually saves the faker data.\n+//            custrepos.save(fakeCustomer);\n+//        }\n+    }\n+}"
  },
  {
    "sha": "85403a92c3783999b005b1ee5d79b673a372a089",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/controllers/AgentController.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/controllers/AgentController.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/controllers/AgentController.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/controllers/AgentController.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,44 @@\n+package com.lambdaschool.orders.controllers;\n+\n+import com.lambdaschool.orders.models.Agent;\n+import com.lambdaschool.orders.services.AgentService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequestMapping(\"/agents\")\n+public class AgentController {\n+\n+    @Autowired\n+    private AgentService agentservice;\n+\n+    //http://localhose:2019/agents\n+    @GetMapping(value=\"/\", produces = {\"application/json\"})\n+    public ResponseEntity<?> getAllAgents() {\n+        List<Agent> agentList = agentservice.findAllAgents();\n+        return new ResponseEntity<>(agentList, HttpStatus.OK);\n+    }\n+\n+    //http://localhost:2019/agents/id/{id}\n+    @GetMapping(value=\"/id/{agentid}\", produces={\"application/json\"})\n+    public ResponseEntity<?> findAgentById(@PathVariable long agentid) {\n+        Agent agent = agentservice.findById(agentid);\n+        return new ResponseEntity<>(agent, HttpStatus.OK);\n+    }\n+\n+    //http://localhost:2019/agents/name/{String name}\n+    @GetMapping(value=\"/name/{agentname}\", produces = {\"application/json\"})\n+    public ResponseEntity<?> findAgentByName(@PathVariable String agentname) {\n+        Agent agent = agentservice.findByName(agentname);\n+        return new ResponseEntity<>(agent, HttpStatus.OK);\n+    }\n+\n+\n+}"
  },
  {
    "sha": "5d6516c4a59c854d825db5548360cd978c89a2d9",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/controllers/CustomerController.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/controllers/CustomerController.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/controllers/CustomerController.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/controllers/CustomerController.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,38 @@\n+package com.lambdaschool.orders.controllers;\n+\n+import com.lambdaschool.orders.models.Customer;\n+import com.lambdaschool.orders.services.CustomerService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.List;\n+\n+@RestController\n+@RequestMapping(\"/customers\")\n+public class CustomerController {\n+    @Autowired\n+    CustomerService custservice;\n+\n+    @GetMapping(value=\"/orders\")\n+    public ResponseEntity<?> getAllCustomers() {\n+        List<Customer> custlist = custservice.findAllCustomers();\n+        return new ResponseEntity<>(custlist, HttpStatus.OK);\n+    }\n+\n+    @GetMapping(value=\"/customer/{custid}\")\n+    public ResponseEntity<?> getCustomerById(@PathVariable long custid) {\n+        Customer  customer= custservice.getCustomerById(custid);\n+        return new ResponseEntity<>(customer, HttpStatus.OK);\n+    }\n+\n+    @GetMapping(value=\"/namelike/{name}\")\n+    public ResponseEntity<?> getCustByNameLike(@PathVariable String name) {\n+        List<Customer> customers = custservice.custNameLike(name);\n+        return new ResponseEntity<>(customers, HttpStatus.OK);\n+    }\n+}"
  },
  {
    "sha": "331cb84eac3fff03fff6ad673e54e55f1ab9cc4a",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/controllers/OrdersController.java",
    "status": "added",
    "additions": 35,
    "deletions": 0,
    "changes": 35,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/controllers/OrdersController.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/controllers/OrdersController.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/controllers/OrdersController.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,35 @@\n+package com.lambdaschool.orders.controllers;\n+\n+import com.lambdaschool.orders.models.Order;\n+import com.lambdaschool.orders.services.OrdersService;\n+import org.apache.coyote.Response;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@RestController\n+@RequestMapping(\"/orders\")\n+public class OrdersController {\n+    @Autowired\n+    private OrdersService orderservice;\n+\n+    @GetMapping(value=\"/\")\n+    public ResponseEntity<?> getAllOrders() {\n+        List<Order> orders = orderservice.findAllOrders();\n+        return new ResponseEntity<>(orders, HttpStatus.OK);\n+    }\n+\n+    @GetMapping(value=\"/order/{ordnum}\")\n+    public ResponseEntity<?> getOrderById(@PathVariable long ordnum) {\n+        Order order = orderservice.findOrderById(ordnum);\n+        return new ResponseEntity<>(order, HttpStatus.OK);\n+    }\n+\n+}"
  },
  {
    "sha": "14c28c066887f2e58d9456e5d990deadaddd6e41",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/models/Agent.java",
    "status": "added",
    "additions": 97,
    "deletions": 0,
    "changes": 97,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/models/Agent.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/models/Agent.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/models/Agent.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,97 @@\n+package com.lambdaschool.orders.models;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import javax.persistence.*;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Entity\n+@Table(name=\"agents\")\n+public class Agent {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    private long agentcode;\n+\n+    @Column(nullable=false, unique=true)\n+    private String agentname;\n+    private double commission;\n+    private String country;\n+\n+    @Column(unique = true)\n+    private String phone;\n+    private String workingarea;\n+\n+    @OneToMany(mappedBy = \"agent\", cascade= CascadeType.ALL, orphanRemoval = true)\n+    @JsonIgnoreProperties(value=\"agent\")\n+    List<Customer> customers = new ArrayList<>();\n+\n+    public Agent() {\n+    }\n+\n+    public Agent(long agentcode, String agentname, double commission, String country, String phone, String workingarea) {\n+        this.agentcode = agentcode;\n+        this.agentname = agentname;\n+        this.commission = commission;\n+        this.country = country;\n+        this.phone = phone;\n+        this.workingarea = workingarea;\n+    }\n+\n+    public Agent(String agentname, String country , double commission, String phone, String workingarea) {\n+\n+        this.agentname = agentname;\n+        this.commission = commission;\n+        this.country = country;\n+        this.phone = phone;\n+        this.workingarea = workingarea;\n+    }\n+\n+    public long getAgentcode() {\n+        return agentcode;\n+    }\n+\n+    public void setAgentcode(long agentcode) {\n+        this.agentcode = agentcode;\n+    }\n+\n+    public String getAgentname() {\n+        return agentname;\n+    }\n+\n+    public void setAgentname(String agentname) {\n+        this.agentname = agentname;\n+    }\n+\n+    public double getCommission() {\n+        return commission;\n+    }\n+\n+    public void setCommission(double commission) {\n+        this.commission = commission;\n+    }\n+\n+    public String getCountry() {\n+        return country;\n+    }\n+\n+    public void setCountry(String country) {\n+        this.country = country;\n+    }\n+\n+    public String getPhone() {\n+        return phone;\n+    }\n+\n+    public void setPhone(String phone) {\n+        this.phone = phone;\n+    }\n+\n+    public String getWorkingarea() {\n+        return workingarea;\n+    }\n+\n+    public void setWorkingarea(String workingarea) {\n+        this.workingarea = workingarea;\n+    }\n+}"
  },
  {
    "sha": "5437c4459b3fb1aceb7af1824332ad9f5f74c4f9",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/models/Customer.java",
    "status": "added",
    "additions": 156,
    "deletions": 0,
    "changes": 156,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/models/Customer.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/models/Customer.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/models/Customer.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,156 @@\n+package com.lambdaschool.orders.models;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import javax.persistence.*;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Entity\n+@Table(name=\"customers\")\n+public class Customer\n+{\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    private long custcode;\n+    private String custcity;\n+    private String custcountry;\n+    private String custname;\n+    private String grade;\n+    private double openingamt;\n+    private double outstandingamt;\n+    private double paymentamt;\n+    private String phone;\n+    private double receiveamt;\n+    private String workingarea;\n+\n+    @ManyToOne()\n+    @JoinColumn(name=\"agentcode\", nullable=false)\n+    @JsonIgnoreProperties(value=\"customers\")\n+    private Agent agent;\n+\n+    @OneToMany(mappedBy = \"customer\", cascade = CascadeType.ALL, orphanRemoval = true)\n+    @JsonIgnoreProperties(value=\"customer\")\n+    List<Order> orders = new ArrayList<>();\n+\n+    public Customer() {\n+    }\n+\n+    public Customer(String custname, String custcity, String workingarea, String custcountry, String grade, double openingamt, double outstandingamt, double paymentamt, double recievingamt, String phone, Agent agent) {\n+        this.custcity = custcity;\n+        this.custcountry = custcountry;\n+        this.custname = custname;\n+        this.grade = grade;\n+        this.openingamt = openingamt;\n+        this.outstandingamt = outstandingamt;\n+        this.paymentamt = paymentamt;\n+        this.phone = phone;\n+        this.receiveamt = recievingamt;\n+        this.workingarea = workingarea;\n+        this.agent = agent;\n+    }\n+\n+    public long getCustcode() {\n+        return custcode;\n+    }\n+\n+    public void setCustcode(long custcode) {\n+        this.custcode = custcode;\n+    }\n+\n+    public String getCustcity() {\n+        return custcity;\n+    }\n+\n+    public void setCustcity(String custcity) {\n+        this.custcity = custcity;\n+    }\n+\n+    public String getCustcountry() {\n+        return custcountry;\n+    }\n+\n+    public void setCustcountry(String custcountry) {\n+        this.custcountry = custcountry;\n+    }\n+\n+    public String getCustname() {\n+        return custname;\n+    }\n+\n+    public void setCustname(String custname) {\n+        this.custname = custname;\n+    }\n+\n+    public String getGrade() {\n+        return grade;\n+    }\n+\n+    public void setGrade(String grade) {\n+        this.grade = grade;\n+    }\n+\n+    public double getOpeningamt() {\n+        return openingamt;\n+    }\n+\n+    public void setOpeningamt(double openingamt) {\n+        this.openingamt = openingamt;\n+    }\n+\n+    public double getOutstandingamt() {\n+        return outstandingamt;\n+    }\n+\n+    public void setOutstandingamt(double outstandingamt) {\n+        this.outstandingamt = outstandingamt;\n+    }\n+\n+    public double getPaymentamt() {\n+        return paymentamt;\n+    }\n+\n+    public void setPaymentamt(double paymentamt) {\n+        this.paymentamt = paymentamt;\n+    }\n+\n+    public String getPhone() {\n+        return phone;\n+    }\n+\n+    public void setPhone(String phone) {\n+        this.phone = phone;\n+    }\n+\n+    public double getRecieveamt() {\n+        return receiveamt;\n+    }\n+\n+    public void setRecieveamt(double recieveamt) {\n+        this.receiveamt = recieveamt;\n+    }\n+\n+    public String getWorkingarea() {\n+        return workingarea;\n+    }\n+\n+    public void setWorkingarea(String workingarea) {\n+        this.workingarea = workingarea;\n+    }\n+\n+    public Agent getAgent() {\n+        return agent;\n+    }\n+\n+    public void setAgent(Agent agent) {\n+        this.agent = agent;\n+    }\n+\n+    public List<Order> getOrders() {\n+        return orders;\n+    }\n+\n+    public void setOrders(List<Order> orders) {\n+        this.orders = orders;\n+    }\n+}"
  },
  {
    "sha": "ba54a70b4f3977b4129268690e5d855d6d05291b",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/models/Order.java",
    "status": "added",
    "additions": 96,
    "deletions": 0,
    "changes": 96,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/models/Order.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/models/Order.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/models/Order.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,96 @@\n+package com.lambdaschool.orders.models;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import javax.persistence.*;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+@Entity\n+@Table(name=\"orders\")\n+public class Order\n+{\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    private long ordnum;\n+    private double advanceamount;\n+    private double ordamount;\n+    private String orderdescription;\n+\n+    @ManyToOne\n+    @JoinColumn(name=\"custcode\", nullable=false)\n+    @JsonIgnoreProperties(value=\"orders\")\n+    private Customer customer;\n+\n+    @ManyToMany()\n+    @JoinTable(name=\"orderspayments\", joinColumns = @JoinColumn(name=\"ordnum\"), inverseJoinColumns = @JoinColumn(name=\"paymentid\"))\n+    @JsonIgnoreProperties(value=\"orders\")\n+    private Set<Payment> payments = new HashSet<>();\n+\n+    public Order() {\n+    }\n+\n+    public Order(long ordnum, double advanceamount, double ordamount, String orderdescription, Customer customer, Set<Payment> payments) {\n+        this.ordnum = ordnum;\n+        this.advanceamount = advanceamount;\n+        this.ordamount = ordamount;\n+        this.orderdescription = orderdescription;\n+        this.customer = customer;\n+        this.payments = payments;\n+    }\n+\n+    public Order(double advanceamount, double ordamount, Customer customer, String orderdescription) {\n+        this.advanceamount = advanceamount;\n+        this.ordamount = ordamount;\n+        this.orderdescription = orderdescription;\n+        this.customer = customer;\n+    }\n+\n+    public long getOrdnum() {\n+        return ordnum;\n+    }\n+\n+    public void setOrdnum(long ordnum) {\n+        this.ordnum = ordnum;\n+    }\n+\n+    public double getAdvanceamount() {\n+        return advanceamount;\n+    }\n+\n+    public void setAdvanceamount(double advanceamount) {\n+        this.advanceamount = advanceamount;\n+    }\n+\n+    public double getOrdamount() {\n+        return ordamount;\n+    }\n+\n+    public void setOrdamount(double ordamount) {\n+        this.ordamount = ordamount;\n+    }\n+\n+    public String getOrderdescription() {\n+        return orderdescription;\n+    }\n+\n+    public void setOrderdescription(String orderdescription) {\n+        this.orderdescription = orderdescription;\n+    }\n+\n+    public Customer getCustomer() {\n+        return customer;\n+    }\n+\n+    public void setCustomer(Customer customer) {\n+        this.customer = customer;\n+    }\n+\n+    public Set<Payment> getPayments() {\n+        return payments;\n+    }\n+\n+    public void setPayments(Set<Payment> payments) {\n+        this.payments = payments;\n+    }\n+}"
  },
  {
    "sha": "ee6e1528590642e41d3433355b8e5af5cd450921",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/models/Payment.java",
    "status": "added",
    "additions": 54,
    "deletions": 0,
    "changes": 54,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/models/Payment.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/models/Payment.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/models/Payment.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,54 @@\n+package com.lambdaschool.orders.models;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+import javax.persistence.*;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+@Entity\n+@Table(name=\"payments\")\n+public class Payment\n+{\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    private long paymentid;\n+\n+    @Column(unique = true, nullable = false)\n+    private String type;\n+\n+    @ManyToMany(mappedBy = \"payments\")\n+    @JsonIgnoreProperties(value=\"payments\")\n+    private Set<Order> orders = new HashSet<>();\n+\n+    public Payment() {\n+    }\n+\n+    public Payment(String type) {\n+        this.type = type;\n+    }\n+\n+    public long getPaymentid() {\n+        return paymentid;\n+    }\n+\n+    public void setPaymentid(long paymentid) {\n+        this.paymentid = paymentid;\n+    }\n+\n+    public String getType() {\n+        return type;\n+    }\n+\n+    public void setType(String type) {\n+        this.type = type;\n+    }\n+\n+    public Set<Order> getOrders() {\n+        return orders;\n+    }\n+\n+    public void setOrders(Set<Order> orders) {\n+        this.orders = orders;\n+    }\n+}"
  },
  {
    "sha": "fe0de189c8b72c2f8052a7ca8cdd9d8846240938",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/repositories/AgentsRepository.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/repositories/AgentsRepository.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/repositories/AgentsRepository.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/repositories/AgentsRepository.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,9 @@\n+package com.lambdaschool.orders.repositories;\n+\n+import com.lambdaschool.orders.models.Agent;\n+import org.springframework.data.repository.CrudRepository;\n+\n+public interface AgentsRepository extends CrudRepository<Agent, Long>\n+{\n+    Agent findAgentByAgentname(String name);\n+}"
  },
  {
    "sha": "9830c1cdb8b221fff9358119e4886e7219b870a6",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/repositories/CustomersRepository.java",
    "status": "added",
    "additions": 10,
    "deletions": 0,
    "changes": 10,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/repositories/CustomersRepository.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/repositories/CustomersRepository.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/repositories/CustomersRepository.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,10 @@\n+package com.lambdaschool.orders.repositories;\n+\n+import com.lambdaschool.orders.models.Customer;\n+import org.springframework.data.repository.CrudRepository;\n+\n+import java.util.List;\n+\n+public interface CustomersRepository extends CrudRepository<Customer, Long> {\n+    List<Customer> findCustomersByCustnameContainingIgnoreCase(String name);\n+}"
  },
  {
    "sha": "a8ebf2ca1cab72611a62771c11ef6034e25008c8",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/repositories/OrdersRepository.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/repositories/OrdersRepository.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/repositories/OrdersRepository.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/repositories/OrdersRepository.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,7 @@\n+package com.lambdaschool.orders.repositories;\n+\n+import com.lambdaschool.orders.models.Order;\n+import org.springframework.data.repository.CrudRepository;\n+\n+public interface OrdersRepository extends CrudRepository<Order, Long> {\n+}"
  },
  {
    "sha": "e1b6ad98e8df9c5393fb8acd99368cf2378212f6",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/repositories/PaymentRepository.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/repositories/PaymentRepository.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/repositories/PaymentRepository.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/repositories/PaymentRepository.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,7 @@\n+package com.lambdaschool.orders.repositories;\n+\n+import com.lambdaschool.orders.models.Payment;\n+import org.springframework.data.repository.CrudRepository;\n+\n+public interface PaymentRepository extends CrudRepository<Payment, Long> {\n+}"
  },
  {
    "sha": "7281d31e4319424969e6c0ff064539e84d54ba2a",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/services/AgentService.java",
    "status": "added",
    "additions": 13,
    "deletions": 0,
    "changes": 13,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/AgentService.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/AgentService.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/services/AgentService.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,13 @@\n+package com.lambdaschool.orders.services;\n+\n+import com.lambdaschool.orders.models.Agent;\n+import com.lambdaschool.orders.models.Customer;\n+\n+import java.util.List;\n+\n+public interface AgentService {\n+    Agent save(Agent agent);\n+    List<Agent> findAllAgents();\n+    Agent findById(long id);\n+    Agent findByName(String name);\n+}"
  },
  {
    "sha": "5712107f606bac6832198c73ee6b9513e30fe4c6",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/services/AgentServiceImpl.java",
    "status": "added",
    "additions": 48,
    "deletions": 0,
    "changes": 48,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/AgentServiceImpl.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/AgentServiceImpl.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/services/AgentServiceImpl.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,48 @@\n+package com.lambdaschool.orders.services;\n+\n+import com.lambdaschool.orders.models.Agent;\n+import com.lambdaschool.orders.repositories.AgentsRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.persistence.EntityNotFoundException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Transactional\n+@Service(value = \"agentServices\")\n+public class AgentServiceImpl implements AgentService{\n+    @Autowired\n+    private AgentsRepository agentrepo;\n+\n+    @Transactional\n+    @Override\n+    public Agent save(Agent agent) {\n+        return agentrepo.save(agent);\n+    }\n+\n+    @Override\n+    public List<Agent> findAllAgents() {\n+        List<Agent> agentList = new ArrayList<>();\n+        agentrepo.findAll().iterator().forEachRemaining(agentList::add);\n+        return agentList;\n+    }\n+\n+    @Override\n+    public Agent findById(long id) {\n+        Agent agent  = agentrepo.findById(id)\n+                .orElseThrow(()->new EntityNotFoundException(\"agent \"+id+\" not found\"));\n+        return agent;\n+    }\n+\n+    @Override\n+    public Agent findByName(String name) {\n+        Agent agent = agentrepo.findAgentByAgentname(name);\n+        if (agent == null)\n+        {\n+            throw new EntityNotFoundException(\"Agent \"+ name+ \" not found\");\n+        }\n+        return agent;\n+    }\n+}"
  },
  {
    "sha": "3e8fe370d29220f03911c5234827b3107fccf4e0",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/services/CustomerService.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/CustomerService.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/CustomerService.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/services/CustomerService.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,12 @@\n+package com.lambdaschool.orders.services;\n+\n+import com.lambdaschool.orders.models.Customer;\n+\n+import java.util.List;\n+\n+public interface CustomerService {\n+    Customer save(Customer customer);\n+    List<Customer> findAllCustomers();\n+    Customer getCustomerById(long id);\n+    List<Customer> custNameLike(String name);\n+}"
  },
  {
    "sha": "7f903649729b7440def56169e0657256e9703779",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/services/CustomerServiceImpl.java",
    "status": "added",
    "additions": 44,
    "deletions": 0,
    "changes": 44,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/CustomerServiceImpl.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/CustomerServiceImpl.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/services/CustomerServiceImpl.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,44 @@\n+package com.lambdaschool.orders.services;\n+\n+import com.lambdaschool.orders.models.Customer;\n+import com.lambdaschool.orders.repositories.CustomersRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.persistence.EntityNotFoundException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Transactional\n+@Service(value=\"customerServices\")\n+public class CustomerServiceImpl implements CustomerService {\n+    @Autowired\n+    CustomersRepository custrepo;\n+\n+    @Transactional\n+    @Override\n+    public Customer save(Customer customer) {\n+        return custrepo.save(customer);\n+    }\n+\n+    @Override\n+    public List<Customer> findAllCustomers() {\n+        List<Customer> custList = new ArrayList<>();\n+        custrepo.findAll().iterator().forEachRemaining(custList::add);\n+        return custList;\n+    }\n+\n+    @Override\n+    public Customer getCustomerById(long id) {\n+        Customer customer = custrepo.findById(id)\n+                .orElseThrow(()-> new EntityNotFoundException(\"Customer with id: \"+id+\" not found\"));\n+        return customer;\n+    }\n+\n+    @Override\n+    public List<Customer> custNameLike(String name) {\n+        List<Customer> customers = custrepo.findCustomersByCustnameContainingIgnoreCase(name);\n+        return customers;\n+    }\n+}"
  },
  {
    "sha": "2ac81b5725ebf527d18367fa1d7541630eaef467",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/services/OrdersService.java",
    "status": "added",
    "additions": 12,
    "deletions": 0,
    "changes": 12,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/OrdersService.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/OrdersService.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/services/OrdersService.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,12 @@\n+package com.lambdaschool.orders.services;\n+\n+\n+import com.lambdaschool.orders.models.Order;\n+\n+import java.util.List;\n+\n+public interface OrdersService {\n+    public Order save(Order order);\n+    List<Order> findAllOrders();\n+    Order findOrderById(long id);\n+}"
  },
  {
    "sha": "1e317e0da9c3c89cfab361702b4f8cab65603449",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/services/OrdersServiceImpl.java",
    "status": "added",
    "additions": 38,
    "deletions": 0,
    "changes": 38,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/OrdersServiceImpl.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/OrdersServiceImpl.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/services/OrdersServiceImpl.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,38 @@\n+package com.lambdaschool.orders.services;\n+\n+import com.lambdaschool.orders.models.Order;\n+import com.lambdaschool.orders.repositories.OrdersRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import javax.persistence.EntityNotFoundException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+@Transactional\n+@Service\n+public class OrdersServiceImpl implements OrdersService {\n+    @Autowired\n+    private OrdersRepository orderrepo;\n+\n+    @Transactional\n+    @Override\n+    public Order save(Order order) {\n+        return orderrepo.save(order);\n+    }\n+\n+    @Override\n+    public List<Order> findAllOrders() {\n+        List<Order> orders = new ArrayList<>();\n+        orderrepo.findAll().iterator().forEachRemaining(orders::add);\n+        return orders;\n+    }\n+\n+    @Override\n+    public Order findOrderById(long id) {\n+        Order order = orderrepo.findById(id)\n+                .orElseThrow(()->new EntityNotFoundException(\"Order with number: \"+id+\" not found\"));\n+        return order;\n+    }\n+}"
  },
  {
    "sha": "b81eb4f5428361093ca72fb6e58251edfd075867",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/services/PaymentServiceImpl.java",
    "status": "added",
    "additions": 20,
    "deletions": 0,
    "changes": 20,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/PaymentServiceImpl.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/PaymentServiceImpl.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/services/PaymentServiceImpl.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,20 @@\n+package com.lambdaschool.orders.services;\n+\n+import com.lambdaschool.orders.models.Payment;\n+import com.lambdaschool.orders.repositories.PaymentRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+@Transactional\n+@Service\n+public class PaymentServiceImpl implements PaymentServices {\n+    @Autowired\n+    private PaymentRepository paymentrepo;\n+\n+    @Transactional\n+    @Override\n+    public Payment save(Payment payment) {\n+        return paymentrepo.save(payment);\n+    }\n+}"
  },
  {
    "sha": "70c3df5697103dff2ed282b121334f8c7b8b0fe5",
    "filename": "javaorders/src/main/java/com/lambdaschool/orders/services/PaymentServices.java",
    "status": "added",
    "additions": 7,
    "deletions": 0,
    "changes": 7,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/PaymentServices.java",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/java/com/lambdaschool/orders/services/PaymentServices.java",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/java/com/lambdaschool/orders/services/PaymentServices.java?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,7 @@\n+package com.lambdaschool.orders.services;\n+\n+import com.lambdaschool.orders.models.Payment;\n+\n+public interface PaymentServices {\n+    public Payment save(Payment payment);\n+}"
  },
  {
    "sha": "6e7eb8b0b3f8f537a0b9437d67011abbf7849efc",
    "filename": "javaorders/src/main/resources/data.sql",
    "status": "added",
    "additions": 92,
    "deletions": 0,
    "changes": 92,
    "blob_url": "https://github.com/Grandelisn/java-orders/blob/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/resources/data.sql",
    "raw_url": "https://github.com/Grandelisn/java-orders/raw/d58068e2c81aed568a58dadc8fcfbeb408ed4896/javaorders/src/main/resources/data.sql",
    "contents_url": "https://api.github.com/repos/Grandelisn/java-orders/contents/javaorders/src/main/resources/data.sql?ref=d58068e2c81aed568a58dadc8fcfbeb408ed4896",
    "patch": "@@ -0,0 +1,92 @@\n+DELETE\n+FROM orders;\n+\n+DELETE\n+FROM customers;\n+\n+DELETE\n+FROM agents;\n+\n+INSERT INTO AGENTS (agentcode, agentname, workingarea, commission, phone, country)\n+            VALUES (1, 'Ramasundar', 'Bangalore', 0.15, '077-25814763', ''),\n+                   (2, 'Alex', 'London', 0.13, '075-12458969', ''),\n+                   (3, 'Alford', 'New York', 0.12, '044-25874365', ''),\n+                   (4, 'Ravi', 'Bangalore', 0.15, '077-45625874', ''),\n+                   (5, 'Santakumar', 'Chennai', 0.14, '007-22388644', ''),\n+                   (6, 'Lucida', 'San Jose', 0.12, '044-52981425', ''),\n+                   (7, 'Anderson', 'Brisban', 0.13, '045-21447739', ''),\n+                   (8, 'Subbarao', 'Bangalore', 0.14, '077-12346674', ''),\n+                   (9, 'Mukesh', 'Mumbai', 0.11, '029-12358964', ''),\n+                   (10, 'McDen', 'London', 0.15, '078-22255588', ''),\n+                   (11, 'Ivan', 'Torento', 0.15, '008-22544166', ''),\n+                   (12, 'Benjamin', 'Hampshair', 0.11, '008-22536178', '');\n+\n+INSERT INTO CUSTOMERS (custcode, custname, custcity, workingarea, custcountry, grade, openingamt, receiveamt, paymentamt, outstandingamt, phone, agentcode)\n+               VALUES (1, 'Holmes', 'London', 'London', 'UK', '2', 6000.00, 5000.00, 7000.00, 4000.00, 'BBBBBBB', 3),\n+                      (2, 'Micheal', 'New York', 'New York', 'USA', '2', 3000.00, 5000.00, 2000.00, 6000.00, 'CCCCCCC', 8),\n+                      (3, 'Albert', 'New York', 'New York', 'USA', '3', 5000.00, 7000.00, 6000.00, 6000.00, 'BBBBSBB', 8),\n+                      (4, 'Ravindran', 'Bangalore', 'Bangalore', 'India', '2', 5000.00, 7000.00, 4000.00, 8000.00, 'AVAVAVA', 11),\n+                      (5, 'Cook', 'London', 'London', 'UK', '2', 4000.00, 9000.00, 7000.00, 6000.00, 'FSDDSDF', 6),\n+                      (6, 'Stuart', 'London', 'London', 'UK', '1', 6000.00, 8000.00, 3000.00, 11000.00, 'GFSGERS', 3),\n+                      (7, 'Bolt', 'New York', 'New York', 'USA', '3', 5000.00, 7000.00, 9000.00, 3000.00, 'DDNRDRH', 8),\n+                      (8, 'Fleming', 'Brisban', 'Brisban', 'Australia', '2', 7000.00, 7000.00, 9000.00, 5000.00, 'NHBGVFC', 5),\n+                      (9, 'Jacks', 'Brisban', 'Brisban', 'Australia', '1', 7000.00, 7000.00, 7000.00, 7000.00, 'WERTGDF', 5),\n+                      (10, 'Yearannaidu', 'Chennai', 'Chennai', 'India', '1', 8000.00, 7000.00, 7000.00, 8000.00, 'ZZZZBFV', 10),\n+                      (11, 'Sasikant', 'Mumbai', 'Mumbai', 'India', '1', 7000.00, 11000.00, 7000.00, 11000.00, '147-25896312', 2),\n+                      (12, 'Ramanathan', 'Chennai', 'Chennai', 'India', '1', 7000.00, 11000.00, 9000.00, 9000.00, 'GHRDWSD', 10),\n+                      (13, 'Avinash', 'Mumbai', 'Mumbai', 'India', '2', 7000.00, 11000.00, 9000.00, 9000.00, '113-12345678',2),\n+                      (14, 'Winston', 'Brisban', 'Brisban', 'Australia', '1', 5000.00, 8000.00, 7000.00, 6000.00, 'AAAAAAA', 5),\n+                      (15, 'Karl', 'London', 'London', 'UK', '0', 4000.00, 6000.00, 7000.00, 3000.00, 'AAAABAA', 6),\n+                      (16, 'Shilton', 'Torento', 'Torento', 'Canada', '1', 10000.00, 7000.00, 6000.00, 11000.00, 'DDDDDDD', 4),\n+                      (17, 'Charles', 'Hampshair', 'Hampshair', 'UK', '3', 6000.00, 4000.00, 5000.00, 5000.00, 'MMMMMMM', 9),\n+                      (18, 'Srinivas', 'Bangalore', 'Bangalore', 'India', '2', 8000.00, 4000.00, 3000.00, 9000.00, 'AAAAAAB', 7),\n+                      (19, 'Steven', 'San Jose', 'San Jose', 'USA', '1', 5000.00, 7000.00, 9000.00, 3000.00, 'KRFYGJK', 10),\n+                      (20, 'Karolina', 'Torento', 'Torento', 'Canada', '1', 7000.00, 7000.00, 9000.00, 5000.00, 'HJKORED', 4),\n+                      (21, 'Martin', 'Torento', 'Torento', 'Canada', '2', 8000.00, 7000.00, 7000.00, 8000.00, 'MJYURFD', 4),\n+                      (22, 'Ramesh', 'Mumbai', 'Mumbai', 'India', '3', 8000.00, 7000.00, 3000.00, 12000.00, 'Phone No', 2),\n+                      (23, 'Rangarappa', 'Bangalore', 'Bangalore', 'India', '2', 8000.00, 11000.00, 7000.00, 12000.00, 'AAAATGF', 1),\n+                      (24, 'Venkatpati', 'Bangalore', 'Bangalore', 'India', '2', 8000.00, 11000.00, 7000.00, 12000.00, 'JRTVFDD', 7),\n+                      (25, 'Sundariya', 'Chennai', 'Chennai', 'India', '3', 7000.00, 11000.00, 7000.00, 11000.00, 'PPHGRTS', 10);\n+\n+INSERT INTO ORDERS (ordnum, ordamount, advanceamount, custcode, orderdescription)\n+            VALUES (1, 1000.00, 600.00, 13, 'SOD'),\n+                   (2, 3000.00, 500.00, 19, 'SOD'),\n+                   (3, 4500.00, 900.00, 7, 'SOD'),\n+                   (4, 2000.00, 0.00, 16, 'SOD'),\n+                   (5, 4000.00, 600.00, 22, 'SOD'),\n+                   (6, 2000.00, 0.00, 12, 'SOD'),\n+                   (7, 3500.00, 2000.00, 2, 'SOD'),\n+                   (8, 2500.00, 400.00, 03, 'SOD'),\n+                   (9, 500.00, 0.00, 23, 'SOD'),\n+                   (10, 4000.00, 700.00, 7, 'SOD'),\n+                   (11, 1500.00, 600.00, 8, 'SOD'),\n+                   (12, 2500.00, 0.00, 25, 'SOD');\n+\n+INSERT INTO PAYMENTS (paymentid, type)\n+              VALUES (1, 'Cash'),\n+                     (2, 'Gift Card'),\n+                     (3, 'Credit Card'),\n+                     (4, 'Mobile Pay');\n+\n+INSERT INTO ORDERSPAYMENTS (ordnum, paymentid)\n+                    VALUES (1, 1),\n+                           (2, 2),\n+                           (3, 3),\n+                           (3, 2),\n+                           (4, 4),\n+                           (5, 2),\n+                           (6, 3),\n+                           (7, 4),\n+                           (8, 1),\n+                           (9, 3),\n+                           (10, 4),\n+                           (11, 2),\n+                           (12, 1);\n+                           \n+/*\n+We must tell hibernate the ids that have already been used.\n+The number must be larger than the last used id.\n+50 > 25 so we are good!\n+ */\n+\n+ alter sequence hibernate_sequence restart with 50;"
  }
]
