[
  {
    "sha": "c25848f703081b6fc10faae6f54f4731159c335c",
    "filename": "src/main/java/com/acme/dbo/txlog/Facade.java",
    "status": "modified",
    "additions": 57,
    "deletions": 4,
    "changes": 61,
    "blob_url": "https://github.com/eugene-krivosheyev/java-application-development/blob/760e2f3e090b29bea227674b3fb30938842fada7/src/main/java/com/acme/dbo/txlog/Facade.java",
    "raw_url": "https://github.com/eugene-krivosheyev/java-application-development/raw/760e2f3e090b29bea227674b3fb30938842fada7/src/main/java/com/acme/dbo/txlog/Facade.java",
    "contents_url": "https://api.github.com/repos/eugene-krivosheyev/java-application-development/contents/src/main/java/com/acme/dbo/txlog/Facade.java?ref=760e2f3e090b29bea227674b3fb30938842fada7",
    "patch": "@@ -1,11 +1,64 @@\n package com.acme.dbo.txlog;\n \n public class Facade {\n-    public static void log(int message) {\n-        System.out.println(\"primitive: \" + message);\n+\n+    public static final String PRIMITIVE_PREFIX = \"primitive: \";\n+    public static final String CHAR_PREFIX = \"char: \";\n+    public static final String STRING_PREFIX = \"string: \";\n+    public static final String REFERENCE_PREFIX = \"reference: \";\n+\n+    //Вариант с type switching\n+    /* public static void log (Object message){\n+\n+        if ((message instanceof Integer)|(message instanceof Byte)|(message instanceof Boolean)) {\n+            logMessage(outputDecorate(PRIMITIVE_PREFIX, message));\n+        }\n+        else if ((message instanceof Character)) {\n+            logMessage(outputDecorate(CHAR_PREFIX, message));\n+        }\n+        else if ((message instanceof String)) {\n+            logMessage(outputDecorate(STRING_PREFIX, message));\n+        }\n+        else {\n+            logMessage(outputDecorate(REFERENCE_PREFIX, message));\n+        }\n+    }\n+    */\n+\n+    public static void log (Object message){\n+        logMessage(outputDecorate(REFERENCE_PREFIX, message));\n+    }\n+\n+    public static void log (String message){\n+        logMessage(outputDecorate(STRING_PREFIX, message));\n+    }\n+\n+    public static void log (char message){\n+        logMessage(outputDecorate(CHAR_PREFIX, message));\n+    }\n+\n+    public static void log (int message){\n+        logMessage(outputDecorate(PRIMITIVE_PREFIX, message));\n     }\n \n-    public static void log(byte message) {\n-        System.out.println(\"primitive: \" + message);\n+    public static void log (byte message){\n+        logMessage(outputDecorate(PRIMITIVE_PREFIX, message));\n     }\n+\n+    public static void log (boolean message){\n+        logMessage(outputDecorate(PRIMITIVE_PREFIX, message));\n+    }\n+\n+\n+\n+\n+\n+    private static void logMessage(String message) {\n+        System.out.println(message);\n+    }\n+\n+    private static String outputDecorate(String prefix, Object message) {\n+        return prefix + message;\n+    }\n+\n }"
  },
  {
    "sha": "9462b80623bc875b6fa25aa9811573ec654195dd",
    "filename": "src/test/java/com/acme/dbo/txlog/iteration01/LoggerTest.java",
    "status": "modified",
    "additions": 3,
    "deletions": 4,
    "changes": 7,
    "blob_url": "https://github.com/eugene-krivosheyev/java-application-development/blob/760e2f3e090b29bea227674b3fb30938842fada7/src/test/java/com/acme/dbo/txlog/iteration01/LoggerTest.java",
    "raw_url": "https://github.com/eugene-krivosheyev/java-application-development/raw/760e2f3e090b29bea227674b3fb30938842fada7/src/test/java/com/acme/dbo/txlog/iteration01/LoggerTest.java",
    "contents_url": "https://api.github.com/repos/eugene-krivosheyev/java-application-development/contents/src/test/java/com/acme/dbo/txlog/iteration01/LoggerTest.java?ref=760e2f3e090b29bea227674b3fb30938842fada7",
    "patch": "@@ -32,7 +32,7 @@ public void shouldLogInteger() throws IOException {\n \n         //region then\n         assertSysoutContains(\"primitive: \");\n-        assertSysoutEquals(\"primitive: 1\\nprimitive: 0\\nprimitive: -1\\n\");\n+        assertSysoutEquals(\"primitive: 1\\r\\nprimitive: 0\\r\\nprimitive: -1\\r\\n\");\n         //endregion\n     }\n \n@@ -52,8 +52,8 @@ public void shouldLogByte() throws IOException {\n         //endregion\n     }\n \n-    /*\n-    TODO: implement Logger solution to match specification as tests\n+\n+    //TODO: implement Logger solution to match specification as tests\n \n     @Test\n     public void shouldLogChar() throws IOException {\n@@ -109,5 +109,4 @@ public void shouldLogReference() throws IOException {\n         //endregion\n     }\n \n-    */\n }\n\\ No newline at end of file"
  }
]
