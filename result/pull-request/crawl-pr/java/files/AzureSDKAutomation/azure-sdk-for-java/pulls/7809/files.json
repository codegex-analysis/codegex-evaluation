[
  {
    "sha": "9a46308f5b1596acec178145d3c45264c261b1f6",
    "filename": "eng/versioning/version_client.txt",
    "status": "modified",
    "additions": 1,
    "deletions": 0,
    "changes": 1,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/eng/versioning/version_client.txt",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/eng/versioning/version_client.txt",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/eng/versioning/version_client.txt?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -210,6 +210,7 @@ com.azure.resourcemanager:azure-resourcemanager-redisenterprise;1.0.0-beta.2;1.0\n com.azure.resourcemanager:azure-resourcemanager-hybridkubernetes;1.0.0-beta.1;1.0.0-beta.2\n com.azure.resourcemanager:azure-resourcemanager-iothub;1.0.0-beta.1;1.0.0-beta.2\n com.azure.resourcemanager:azure-resourcemanager-datadog;1.0.0-beta.1;1.0.0-beta.2\n+com.azure.resourcemanager:azure-resourcemanager-keyvault-generated;1.0.0-beta.1;1.0.0-beta.1\n \n # Unreleased dependencies: Copy the entry from above, prepend \"unreleased_\" and remove the current\n # version. Unreleased dependencies are only valid for dependency versions."
  },
  {
    "sha": "17fc4a4129e425e3a461a7f430de5d25d0d523a7",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/CHANGELOG.md",
    "status": "added",
    "additions": 5,
    "deletions": 0,
    "changes": 5,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/CHANGELOG.md",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/CHANGELOG.md",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/CHANGELOG.md?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,5 @@\n+# Release History\n+\n+## 1.0.0-beta.1 (2021-03-12)\n+\n+- Azure Resource Manager KeyVault client library for Java. This package contains Microsoft Azure SDK for KeyVault Management SDK. The Azure management API provides a RESTful set of web services that interact with Azure Key Vault. Package tag package-2019-09. For documentation on how to use this package, please see [Azure Management Libraries for Java](https://aka.ms/azsdk/java/mgmt)."
  },
  {
    "sha": "62c0f163feb8f192dfc0339f4b634d53ad61af09",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/README.md",
    "status": "added",
    "additions": 99,
    "deletions": 0,
    "changes": 99,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/README.md",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/README.md",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/README.md?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,99 @@\n+# Azure Resource Manager KeyVault client library for Java\n+\n+Azure Resource Manager KeyVault client library for Java.\n+\n+This package contains Microsoft Azure SDK for KeyVault Management SDK. The Azure management API provides a RESTful set of web services that interact with Azure Key Vault. Package tag package-2019-09. For documentation on how to use this package, please see [Azure Management Libraries for Java](https://aka.ms/azsdk/java/mgmt).\n+\n+## We'd love to hear your feedback\n+\n+We're always working on improving our products and the way we communicate with our users. So we'd love to learn what's working and how we can do better.\n+\n+If you haven't already, please take a few minutes to [complete this short survey][survey] we have put together.\n+\n+Thank you in advance for your collaboration. We really appreciate your time!\n+\n+## Documentation\n+\n+Various documentation is available to help you get started\n+\n+- [API reference documentation][docs]\n+\n+## Getting started\n+\n+### Prerequisites\n+\n+- [Java Development Kit (JDK)][jdk] with version 8 or above\n+- [Azure Subscription][azure_subscription]\n+\n+### Adding the package to your product\n+\n+[//]: # ({x-version-update-start;com.azure.resourcemanager:azure-resourcemanager-keyvault-generated;current})\n+```xml\n+<dependency>\n+    <groupId>com.azure.resourcemanager</groupId>\n+    <artifactId>azure-resourcemanager-keyvault-generated</artifactId>\n+    <version>1.0.0-beta.1</version>\n+</dependency>\n+```\n+[//]: # ({x-version-update-end})\n+\n+### Include the recommended packages\n+\n+Azure Management Libraries require a `TokenCredential` implementation for authentication and an `HttpClient` implementation for HTTP client.\n+\n+[Azure Identity][azure_identity] package and [Azure Core Netty HTTP][azure_core_http_netty] package provide the default implementation.\n+\n+### Authentication\n+\n+By default, Azure Active Directory token authentication depends on correct configure of following environment variables.\n+\n+- `AZURE_CLIENT_ID` for Azure client ID.\n+- `AZURE_TENANT_ID` for Azure tenant ID.\n+- `AZURE_CLIENT_SECRET` or `AZURE_CLIENT_CERTIFICATE_PATH` for client secret or client certificate.\n+\n+In addition, Azure subscription ID can be configured via environment variable `AZURE_SUBSCRIPTION_ID`.\n+\n+With above configuration, `azure` client can be authenticated by following code:\n+\n+```java\n+AzureProfile profile = new AzureProfile(AzureEnvironment.AZURE);\n+TokenCredential credential = new DefaultAzureCredentialBuilder()\n+    .authorityHost(profile.getEnvironment().getActiveDirectoryEndpoint())\n+    .build();\n+KeyVaultManager manager = KeyVaultManager\n+    .authenticate(credential, profile);\n+```\n+\n+The sample code assumes global Azure. Please change `AzureEnvironment.AZURE` variable if otherwise.\n+\n+See [Authentication][authenticate] for more options.\n+\n+## Key concepts\n+\n+See [API design][design] for general introduction on design and key concepts on Azure Management Libraries.\n+\n+## Examples\n+\n+## Troubleshooting\n+\n+## Next steps\n+\n+## Contributing\n+\n+For details on contributing to this repository, see the [contributing guide](https://github.com/Azure/azure-sdk-for-java/blob/master/CONTRIBUTING.md).\n+\n+1. Fork it\n+1. Create your feature branch (`git checkout -b my-new-feature`)\n+1. Commit your changes (`git commit -am 'Add some feature'`)\n+1. Push to the branch (`git push origin my-new-feature`)\n+1. Create new Pull Request\n+\n+<!-- LINKS -->\n+[survey]: https://microsoft.qualtrics.com/jfe/form/SV_ehN0lIk2FKEBkwd?Q_CHL=DOCS\n+[docs]: https://azure.github.io/azure-sdk-for-java/\n+[jdk]: https://docs.microsoft.com/java/azure/jdk/\n+[azure_subscription]: https://azure.microsoft.com/free/\n+[azure_identity]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/identity/azure-identity\n+[azure_core_http_netty]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/core/azure-core-http-netty\n+[authenticate]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/resourcemanager/docs/AUTH.md\n+[design]: https://github.com/Azure/azure-sdk-for-java/blob/master/sdk/resourcemanager/docs/DESIGN.md"
  },
  {
    "sha": "8ef1fc9bbea29d7a9d4fd32e7d255538b207d900",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/pom.xml",
    "status": "added",
    "additions": 67,
    "deletions": 0,
    "changes": 67,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/pom.xml",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/pom.xml",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/pom.xml?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,67 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>com.azure</groupId>\n+        <artifactId>azure-client-sdk-parent</artifactId>\n+        <version>1.7.0</version> <!-- {x-version-update;com.azure:azure-client-sdk-parent;current} -->\n+        <relativePath>../../parents/azure-client-sdk-parent</relativePath>\n+    </parent>\n+\n+    <groupId>com.azure.resourcemanager</groupId>\n+    <artifactId>azure-resourcemanager-keyvault-generated</artifactId>\n+    <version>1.0.0-beta.1</version> <!-- {x-version-update;com.azure.resourcemanager:azure-resourcemanager-keyvault-generated;current} -->\n+    <packaging>jar</packaging>\n+\n+    <name>Microsoft Azure SDK for KeyVault Management</name>\n+    <description>This package contains Microsoft Azure SDK for KeyVault Management SDK. For documentation on how to use this package, please see https://aka.ms/azsdk/java/mgmt. The Azure management API provides a RESTful set of web services that interact with Azure Key Vault. Package tag package-2019-09.</description>\n+    <url>https://github.com/Azure/azure-sdk-for-java</url>\n+\n+    <licenses>\n+        <license>\n+            <name>The MIT License (MIT)</name>\n+            <url>http://opensource.org/licenses/MIT</url>\n+            <distribution>repo</distribution>\n+        </license>\n+    </licenses>\n+\n+    <scm>\n+        <url>https://github.com/Azure/azure-sdk-for-java</url>\n+        <connection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</connection>\n+        <developerConnection>scm:git:git@github.com:Azure/azure-sdk-for-java.git</developerConnection>\n+        <tag>HEAD</tag>\n+    </scm>\n+    <developers>\n+        <developer>\n+            <id>microsoft</id>\n+            <name>Microsoft</name>\n+        </developer>\n+    </developers>\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+        <legal><![CDATA[[INFO] Any downloads listed may be third party software.  Microsoft grants you no rights for third party software.]]></legal>\n+    </properties>\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.azure</groupId>\n+            <artifactId>azure-core</artifactId>\n+            <version>1.14.0</version> <!-- {x-version-update;com.azure:azure-core;dependency} -->\n+        </dependency>\n+        <dependency>\n+            <groupId>com.azure</groupId>\n+            <artifactId>azure-core-management</artifactId>\n+            <version>1.2.0</version> <!-- {x-version-update;com.azure:azure-core-management;dependency} -->\n+        </dependency>\n+    </dependencies>\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.jacoco</groupId>\n+                <artifactId>jacoco-maven-plugin</artifactId>\n+                <version>0.8.5</version> <!-- {x-version-update;org.jacoco:jacoco-maven-plugin;external_dependency} -->\n+                <configuration>\n+                    <skip>true</skip>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+</project>"
  },
  {
    "sha": "724dcbfd4583a77920de74ce009420d753ad0e6f",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/KeyVaultManager.java",
    "status": "added",
    "additions": 266,
    "deletions": 0,
    "changes": 266,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/KeyVaultManager.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/KeyVaultManager.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/KeyVaultManager.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,266 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated;\n+\n+import com.azure.core.credential.TokenCredential;\n+import com.azure.core.http.HttpClient;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.AddDatePolicy;\n+import com.azure.core.http.policy.BearerTokenAuthenticationPolicy;\n+import com.azure.core.http.policy.HttpLogOptions;\n+import com.azure.core.http.policy.HttpLoggingPolicy;\n+import com.azure.core.http.policy.HttpPipelinePolicy;\n+import com.azure.core.http.policy.HttpPolicyProviders;\n+import com.azure.core.http.policy.RequestIdPolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.management.profile.AzureProfile;\n+import com.azure.core.util.Configuration;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.fluent.KeyVaultManagementClient;\n+import com.azure.resourcemanager.keyvault.generated.implementation.KeyVaultManagementClientBuilder;\n+import com.azure.resourcemanager.keyvault.generated.implementation.KeysImpl;\n+import com.azure.resourcemanager.keyvault.generated.implementation.OperationsImpl;\n+import com.azure.resourcemanager.keyvault.generated.implementation.PrivateEndpointConnectionsImpl;\n+import com.azure.resourcemanager.keyvault.generated.implementation.PrivateLinkResourcesImpl;\n+import com.azure.resourcemanager.keyvault.generated.implementation.VaultsImpl;\n+import com.azure.resourcemanager.keyvault.generated.models.Keys;\n+import com.azure.resourcemanager.keyvault.generated.models.Operations;\n+import com.azure.resourcemanager.keyvault.generated.models.PrivateEndpointConnections;\n+import com.azure.resourcemanager.keyvault.generated.models.PrivateLinkResources;\n+import com.azure.resourcemanager.keyvault.generated.models.Vaults;\n+import java.time.Duration;\n+import java.time.temporal.ChronoUnit;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Objects;\n+\n+/**\n+ * Entry point to KeyVaultManager. The Azure management API provides a RESTful set of web services that interact with\n+ * Azure Key Vault.\n+ */\n+public final class KeyVaultManager {\n+    private Vaults vaults;\n+\n+    private PrivateEndpointConnections privateEndpointConnections;\n+\n+    private PrivateLinkResources privateLinkResources;\n+\n+    private Operations operations;\n+\n+    private Keys keys;\n+\n+    private final KeyVaultManagementClient clientObject;\n+\n+    private KeyVaultManager(HttpPipeline httpPipeline, AzureProfile profile, Duration defaultPollInterval) {\n+        Objects.requireNonNull(httpPipeline, \"'httpPipeline' cannot be null.\");\n+        Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+        this.clientObject =\n+            new KeyVaultManagementClientBuilder()\n+                .pipeline(httpPipeline)\n+                .endpoint(profile.getEnvironment().getResourceManagerEndpoint())\n+                .subscriptionId(profile.getSubscriptionId())\n+                .defaultPollInterval(defaultPollInterval)\n+                .buildClient();\n+    }\n+\n+    /**\n+     * Creates an instance of KeyVault service API entry point.\n+     *\n+     * @param credential the credential to use.\n+     * @param profile the Azure profile for client.\n+     * @return the KeyVault service API instance.\n+     */\n+    public static KeyVaultManager authenticate(TokenCredential credential, AzureProfile profile) {\n+        Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+        Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+        return configure().authenticate(credential, profile);\n+    }\n+\n+    /**\n+     * Gets a Configurable instance that can be used to create KeyVaultManager with optional configuration.\n+     *\n+     * @return the Configurable instance allowing configurations.\n+     */\n+    public static Configurable configure() {\n+        return new KeyVaultManager.Configurable();\n+    }\n+\n+    /** The Configurable allowing configurations to be set. */\n+    public static final class Configurable {\n+        private final ClientLogger logger = new ClientLogger(Configurable.class);\n+\n+        private HttpClient httpClient;\n+        private HttpLogOptions httpLogOptions;\n+        private final List<HttpPipelinePolicy> policies = new ArrayList<>();\n+        private RetryPolicy retryPolicy;\n+        private Duration defaultPollInterval;\n+\n+        private Configurable() {\n+        }\n+\n+        /**\n+         * Sets the http client.\n+         *\n+         * @param httpClient the HTTP client.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withHttpClient(HttpClient httpClient) {\n+            this.httpClient = Objects.requireNonNull(httpClient, \"'httpClient' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the logging options to the HTTP pipeline.\n+         *\n+         * @param httpLogOptions the HTTP log options.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withLogOptions(HttpLogOptions httpLogOptions) {\n+            this.httpLogOptions = Objects.requireNonNull(httpLogOptions, \"'httpLogOptions' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Adds the pipeline policy to the HTTP pipeline.\n+         *\n+         * @param policy the HTTP pipeline policy.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withPolicy(HttpPipelinePolicy policy) {\n+            this.policies.add(Objects.requireNonNull(policy, \"'policy' cannot be null.\"));\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the retry policy to the HTTP pipeline.\n+         *\n+         * @param retryPolicy the HTTP pipeline retry policy.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withRetryPolicy(RetryPolicy retryPolicy) {\n+            this.retryPolicy = Objects.requireNonNull(retryPolicy, \"'retryPolicy' cannot be null.\");\n+            return this;\n+        }\n+\n+        /**\n+         * Sets the default poll interval, used when service does not provide \"Retry-After\" header.\n+         *\n+         * @param defaultPollInterval the default poll interval.\n+         * @return the configurable object itself.\n+         */\n+        public Configurable withDefaultPollInterval(Duration defaultPollInterval) {\n+            this.defaultPollInterval = Objects.requireNonNull(defaultPollInterval, \"'retryPolicy' cannot be null.\");\n+            if (this.defaultPollInterval.isNegative()) {\n+                throw logger.logExceptionAsError(new IllegalArgumentException(\"'httpPipeline' cannot be negative\"));\n+            }\n+            return this;\n+        }\n+\n+        /**\n+         * Creates an instance of KeyVault service API entry point.\n+         *\n+         * @param credential the credential to use.\n+         * @param profile the Azure profile for client.\n+         * @return the KeyVault service API instance.\n+         */\n+        public KeyVaultManager authenticate(TokenCredential credential, AzureProfile profile) {\n+            Objects.requireNonNull(credential, \"'credential' cannot be null.\");\n+            Objects.requireNonNull(profile, \"'profile' cannot be null.\");\n+\n+            StringBuilder userAgentBuilder = new StringBuilder();\n+            userAgentBuilder\n+                .append(\"azsdk-java\")\n+                .append(\"-\")\n+                .append(\"com.azure.resourcemanager.keyvault.generated\")\n+                .append(\"/\")\n+                .append(\"1.0.0-beta.1\");\n+            if (!Configuration.getGlobalConfiguration().get(\"AZURE_TELEMETRY_DISABLED\", false)) {\n+                userAgentBuilder\n+                    .append(\" (\")\n+                    .append(Configuration.getGlobalConfiguration().get(\"java.version\"))\n+                    .append(\"; \")\n+                    .append(Configuration.getGlobalConfiguration().get(\"os.name\"))\n+                    .append(\"; \")\n+                    .append(Configuration.getGlobalConfiguration().get(\"os.version\"))\n+                    .append(\"; auto-generated)\");\n+            } else {\n+                userAgentBuilder.append(\" (auto-generated)\");\n+            }\n+\n+            if (retryPolicy == null) {\n+                retryPolicy = new RetryPolicy(\"Retry-After\", ChronoUnit.SECONDS);\n+            }\n+            List<HttpPipelinePolicy> policies = new ArrayList<>();\n+            policies.add(new UserAgentPolicy(userAgentBuilder.toString()));\n+            policies.add(new RequestIdPolicy());\n+            HttpPolicyProviders.addBeforeRetryPolicies(policies);\n+            policies.add(retryPolicy);\n+            policies.add(new AddDatePolicy());\n+            policies\n+                .add(\n+                    new BearerTokenAuthenticationPolicy(\n+                        credential, profile.getEnvironment().getManagementEndpoint() + \"/.default\"));\n+            HttpPolicyProviders.addAfterRetryPolicies(policies);\n+            policies.add(new HttpLoggingPolicy(httpLogOptions));\n+            HttpPipeline httpPipeline =\n+                new HttpPipelineBuilder()\n+                    .httpClient(httpClient)\n+                    .policies(policies.toArray(new HttpPipelinePolicy[0]))\n+                    .build();\n+            return new KeyVaultManager(httpPipeline, profile, defaultPollInterval);\n+        }\n+    }\n+\n+    /** @return Resource collection API of Vaults. */\n+    public Vaults vaults() {\n+        if (this.vaults == null) {\n+            this.vaults = new VaultsImpl(clientObject.getVaults(), this);\n+        }\n+        return vaults;\n+    }\n+\n+    /** @return Resource collection API of PrivateEndpointConnections. */\n+    public PrivateEndpointConnections privateEndpointConnections() {\n+        if (this.privateEndpointConnections == null) {\n+            this.privateEndpointConnections =\n+                new PrivateEndpointConnectionsImpl(clientObject.getPrivateEndpointConnections(), this);\n+        }\n+        return privateEndpointConnections;\n+    }\n+\n+    /** @return Resource collection API of PrivateLinkResources. */\n+    public PrivateLinkResources privateLinkResources() {\n+        if (this.privateLinkResources == null) {\n+            this.privateLinkResources = new PrivateLinkResourcesImpl(clientObject.getPrivateLinkResources(), this);\n+        }\n+        return privateLinkResources;\n+    }\n+\n+    /** @return Resource collection API of Operations. */\n+    public Operations operations() {\n+        if (this.operations == null) {\n+            this.operations = new OperationsImpl(clientObject.getOperations(), this);\n+        }\n+        return operations;\n+    }\n+\n+    /** @return Resource collection API of Keys. */\n+    public Keys keys() {\n+        if (this.keys == null) {\n+            this.keys = new KeysImpl(clientObject.getKeys(), this);\n+        }\n+        return keys;\n+    }\n+\n+    /**\n+     * @return Wrapped service client KeyVaultManagementClient providing direct access to the underlying auto-generated\n+     *     API implementation, based on Azure REST API.\n+     */\n+    public KeyVaultManagementClient serviceClient() {\n+        return this.clientObject;\n+    }\n+}"
  },
  {
    "sha": "8da3c1b3e9c9d8aa67c923d0ca1545f2784aa111",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/KeyVaultManagementClient.java",
    "status": "added",
    "additions": 82,
    "deletions": 0,
    "changes": 82,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/KeyVaultManagementClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/KeyVaultManagementClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/KeyVaultManagementClient.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,82 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent;\n+\n+import com.azure.core.http.HttpPipeline;\n+import java.time.Duration;\n+\n+/** The interface for KeyVaultManagementClient class. */\n+public interface KeyVaultManagementClient {\n+    /**\n+     * Gets Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms\n+     * part of the URI for every service call.\n+     *\n+     * @return the subscriptionId value.\n+     */\n+    String getSubscriptionId();\n+\n+    /**\n+     * Gets server parameter.\n+     *\n+     * @return the endpoint value.\n+     */\n+    String getEndpoint();\n+\n+    /**\n+     * Gets Api Version.\n+     *\n+     * @return the apiVersion value.\n+     */\n+    String getApiVersion();\n+\n+    /**\n+     * Gets The HTTP pipeline to send requests through.\n+     *\n+     * @return the httpPipeline value.\n+     */\n+    HttpPipeline getHttpPipeline();\n+\n+    /**\n+     * Gets The default poll interval for long-running operation.\n+     *\n+     * @return the defaultPollInterval value.\n+     */\n+    Duration getDefaultPollInterval();\n+\n+    /**\n+     * Gets the VaultsClient object to access its operations.\n+     *\n+     * @return the VaultsClient object.\n+     */\n+    VaultsClient getVaults();\n+\n+    /**\n+     * Gets the PrivateEndpointConnectionsClient object to access its operations.\n+     *\n+     * @return the PrivateEndpointConnectionsClient object.\n+     */\n+    PrivateEndpointConnectionsClient getPrivateEndpointConnections();\n+\n+    /**\n+     * Gets the PrivateLinkResourcesClient object to access its operations.\n+     *\n+     * @return the PrivateLinkResourcesClient object.\n+     */\n+    PrivateLinkResourcesClient getPrivateLinkResources();\n+\n+    /**\n+     * Gets the OperationsClient object to access its operations.\n+     *\n+     * @return the OperationsClient object.\n+     */\n+    OperationsClient getOperations();\n+\n+    /**\n+     * Gets the KeysClient object to access its operations.\n+     *\n+     * @return the KeysClient object.\n+     */\n+    KeysClient getKeys();\n+}"
  },
  {
    "sha": "931edb07cd6d851c46055271d8f6378d102312ab",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/KeysClient.java",
    "status": "added",
    "additions": 170,
    "deletions": 0,
    "changes": 170,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/KeysClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/KeysClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/KeysClient.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,170 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.KeyInner;\n+import com.azure.resourcemanager.keyvault.generated.models.KeyCreateParameters;\n+\n+/** An instance of this class provides access to all the operations defined in KeysClient. */\n+public interface KeysClient {\n+    /**\n+     * Creates the first version of a new key if it does not exist. If it already exists, then the existing key is\n+     * returned without any write operations being performed. This API does not create subsequent versions, and does not\n+     * update existing keys.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the key vault which contains the key to be created.\n+     * @param keyName The name of the key to be created.\n+     * @param parameters The parameters used to create the specified key.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the key resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    KeyInner createIfNotExist(\n+        String resourceGroupName, String vaultName, String keyName, KeyCreateParameters parameters);\n+\n+    /**\n+     * Creates the first version of a new key if it does not exist. If it already exists, then the existing key is\n+     * returned without any write operations being performed. This API does not create subsequent versions, and does not\n+     * update existing keys.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the key vault which contains the key to be created.\n+     * @param keyName The name of the key to be created.\n+     * @param parameters The parameters used to create the specified key.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the key resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<KeyInner> createIfNotExistWithResponse(\n+        String resourceGroupName, String vaultName, String keyName, KeyCreateParameters parameters, Context context);\n+\n+    /**\n+     * Gets the current version of the specified key from the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key to be retrieved.\n+     * @param keyName The name of the key to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the current version of the specified key from the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    KeyInner get(String resourceGroupName, String vaultName, String keyName);\n+\n+    /**\n+     * Gets the current version of the specified key from the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key to be retrieved.\n+     * @param keyName The name of the key to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the current version of the specified key from the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<KeyInner> getWithResponse(String resourceGroupName, String vaultName, String keyName, Context context);\n+\n+    /**\n+     * Lists the keys in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the keys to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<KeyInner> list(String resourceGroupName, String vaultName);\n+\n+    /**\n+     * Lists the keys in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the keys to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<KeyInner> list(String resourceGroupName, String vaultName, Context context);\n+\n+    /**\n+     * Gets the specified version of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key version to be retrieved.\n+     * @param keyName The name of the key version to be retrieved.\n+     * @param keyVersion The version of the key to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified version of the specified key in the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    KeyInner getVersion(String resourceGroupName, String vaultName, String keyName, String keyVersion);\n+\n+    /**\n+     * Gets the specified version of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key version to be retrieved.\n+     * @param keyName The name of the key version to be retrieved.\n+     * @param keyVersion The version of the key to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified version of the specified key in the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<KeyInner> getVersionWithResponse(\n+        String resourceGroupName, String vaultName, String keyName, String keyVersion, Context context);\n+\n+    /**\n+     * Lists the versions of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key versions to be retrieved.\n+     * @param keyName The name of the key versions to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<KeyInner> listVersions(String resourceGroupName, String vaultName, String keyName);\n+\n+    /**\n+     * Lists the versions of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key versions to be retrieved.\n+     * @param keyName The name of the key versions to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<KeyInner> listVersions(String resourceGroupName, String vaultName, String keyName, Context context);\n+}"
  },
  {
    "sha": "b9344bc31604cf612a5cef5c6aeb9de32306157d",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/OperationsClient.java",
    "status": "added",
    "additions": 36,
    "deletions": 0,
    "changes": 36,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/OperationsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/OperationsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/OperationsClient.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,36 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.OperationInner;\n+\n+/** An instance of this class provides access to all the operations defined in OperationsClient. */\n+public interface OperationsClient {\n+    /**\n+     * Lists all of the available Key Vault Rest API operations.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Storage operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OperationInner> list();\n+\n+    /**\n+     * Lists all of the available Key Vault Rest API operations.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Storage operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<OperationInner> list(Context context);\n+}"
  },
  {
    "sha": "f4dda9bfc8ac4ed0c008976f6f427d0e876490b5",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/PrivateEndpointConnectionsClient.java",
    "status": "added",
    "additions": 149,
    "deletions": 0,
    "changes": 149,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/PrivateEndpointConnectionsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/PrivateEndpointConnectionsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/PrivateEndpointConnectionsClient.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,149 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.PrivateEndpointConnectionInner;\n+\n+/** An instance of this class provides access to all the operations defined in PrivateEndpointConnectionsClient. */\n+public interface PrivateEndpointConnectionsClient {\n+    /**\n+     * Gets the specified private endpoint connection associated with the key vault.\n+     *\n+     * @param resourceGroupName Name of the resource group that contains the key vault.\n+     * @param vaultName The name of the key vault.\n+     * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified private endpoint connection associated with the key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateEndpointConnectionInner get(\n+        String resourceGroupName, String vaultName, String privateEndpointConnectionName);\n+\n+    /**\n+     * Gets the specified private endpoint connection associated with the key vault.\n+     *\n+     * @param resourceGroupName Name of the resource group that contains the key vault.\n+     * @param vaultName The name of the key vault.\n+     * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified private endpoint connection associated with the key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<PrivateEndpointConnectionInner> getWithResponse(\n+        String resourceGroupName, String vaultName, String privateEndpointConnectionName, Context context);\n+\n+    /**\n+     * Updates the specified private endpoint connection associated with the key vault.\n+     *\n+     * @param resourceGroupName Name of the resource group that contains the key vault.\n+     * @param vaultName The name of the key vault.\n+     * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key vault.\n+     * @param properties The intended state of private endpoint connection.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return private endpoint connection resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateEndpointConnectionInner put(\n+        String resourceGroupName,\n+        String vaultName,\n+        String privateEndpointConnectionName,\n+        PrivateEndpointConnectionInner properties);\n+\n+    /**\n+     * Updates the specified private endpoint connection associated with the key vault.\n+     *\n+     * @param resourceGroupName Name of the resource group that contains the key vault.\n+     * @param vaultName The name of the key vault.\n+     * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key vault.\n+     * @param properties The intended state of private endpoint connection.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return private endpoint connection resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<PrivateEndpointConnectionInner> putWithResponse(\n+        String resourceGroupName,\n+        String vaultName,\n+        String privateEndpointConnectionName,\n+        PrivateEndpointConnectionInner properties,\n+        Context context);\n+\n+    /**\n+     * Deletes the specified private endpoint connection associated with the key vault.\n+     *\n+     * @param resourceGroupName Name of the resource group that contains the key vault.\n+     * @param vaultName The name of the key vault.\n+     * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return private endpoint connection resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<PrivateEndpointConnectionInner>, PrivateEndpointConnectionInner> beginDelete(\n+        String resourceGroupName, String vaultName, String privateEndpointConnectionName);\n+\n+    /**\n+     * Deletes the specified private endpoint connection associated with the key vault.\n+     *\n+     * @param resourceGroupName Name of the resource group that contains the key vault.\n+     * @param vaultName The name of the key vault.\n+     * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return private endpoint connection resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<PrivateEndpointConnectionInner>, PrivateEndpointConnectionInner> beginDelete(\n+        String resourceGroupName, String vaultName, String privateEndpointConnectionName, Context context);\n+\n+    /**\n+     * Deletes the specified private endpoint connection associated with the key vault.\n+     *\n+     * @param resourceGroupName Name of the resource group that contains the key vault.\n+     * @param vaultName The name of the key vault.\n+     * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return private endpoint connection resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateEndpointConnectionInner delete(\n+        String resourceGroupName, String vaultName, String privateEndpointConnectionName);\n+\n+    /**\n+     * Deletes the specified private endpoint connection associated with the key vault.\n+     *\n+     * @param resourceGroupName Name of the resource group that contains the key vault.\n+     * @param vaultName The name of the key vault.\n+     * @param privateEndpointConnectionName Name of the private endpoint connection associated with the key vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return private endpoint connection resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateEndpointConnectionInner delete(\n+        String resourceGroupName, String vaultName, String privateEndpointConnectionName, Context context);\n+}"
  },
  {
    "sha": "c1e66ed2befceb68c285821fad789d098c038748",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/PrivateLinkResourcesClient.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/PrivateLinkResourcesClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/PrivateLinkResourcesClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/PrivateLinkResourcesClient.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,42 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.PrivateLinkResourceListResultInner;\n+\n+/** An instance of this class provides access to all the operations defined in PrivateLinkResourcesClient. */\n+public interface PrivateLinkResourcesClient {\n+    /**\n+     * Gets the private link resources supported for the key vault.\n+     *\n+     * @param resourceGroupName Name of the resource group that contains the key vault.\n+     * @param vaultName The name of the key vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the private link resources supported for the key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    PrivateLinkResourceListResultInner listByVault(String resourceGroupName, String vaultName);\n+\n+    /**\n+     * Gets the private link resources supported for the key vault.\n+     *\n+     * @param resourceGroupName Name of the resource group that contains the key vault.\n+     * @param vaultName The name of the key vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the private link resources supported for the key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<PrivateLinkResourceListResultInner> listByVaultWithResponse(\n+        String resourceGroupName, String vaultName, Context context);\n+}"
  },
  {
    "sha": "32db635e7bf2fd1522478dc47ccc74af88e05f97",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/VaultsClient.java",
    "status": "added",
    "additions": 410,
    "deletions": 0,
    "changes": 410,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/VaultsClient.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/VaultsClient.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/VaultsClient.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,410 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent;\n+\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.Resource;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.polling.SyncPoller;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.CheckNameAvailabilityResultInner;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.DeletedVaultInner;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.VaultAccessPolicyParametersInner;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.VaultInner;\n+import com.azure.resourcemanager.keyvault.generated.models.AccessPolicyUpdateKind;\n+import com.azure.resourcemanager.keyvault.generated.models.VaultCheckNameAvailabilityParameters;\n+import com.azure.resourcemanager.keyvault.generated.models.VaultCreateOrUpdateParameters;\n+import com.azure.resourcemanager.keyvault.generated.models.VaultPatchParameters;\n+\n+/** An instance of this class provides access to all the operations defined in VaultsClient. */\n+public interface VaultsClient {\n+    /**\n+     * Create or update a key vault in the specified subscription.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the server belongs.\n+     * @param vaultName Name of the vault.\n+     * @param parameters Parameters to create or update the vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return resource information with extended details.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<VaultInner>, VaultInner> beginCreateOrUpdate(\n+        String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters);\n+\n+    /**\n+     * Create or update a key vault in the specified subscription.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the server belongs.\n+     * @param vaultName Name of the vault.\n+     * @param parameters Parameters to create or update the vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return resource information with extended details.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<VaultInner>, VaultInner> beginCreateOrUpdate(\n+        String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context);\n+\n+    /**\n+     * Create or update a key vault in the specified subscription.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the server belongs.\n+     * @param vaultName Name of the vault.\n+     * @param parameters Parameters to create or update the vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return resource information with extended details.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    VaultInner createOrUpdate(String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters);\n+\n+    /**\n+     * Create or update a key vault in the specified subscription.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the server belongs.\n+     * @param vaultName Name of the vault.\n+     * @param parameters Parameters to create or update the vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return resource information with extended details.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    VaultInner createOrUpdate(\n+        String resourceGroupName, String vaultName, VaultCreateOrUpdateParameters parameters, Context context);\n+\n+    /**\n+     * Update a key vault in the specified subscription.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the server belongs.\n+     * @param vaultName Name of the vault.\n+     * @param parameters Parameters to patch the vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return resource information with extended details.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    VaultInner update(String resourceGroupName, String vaultName, VaultPatchParameters parameters);\n+\n+    /**\n+     * Update a key vault in the specified subscription.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the server belongs.\n+     * @param vaultName Name of the vault.\n+     * @param parameters Parameters to patch the vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return resource information with extended details.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<VaultInner> updateWithResponse(\n+        String resourceGroupName, String vaultName, VaultPatchParameters parameters, Context context);\n+\n+    /**\n+     * Deletes the specified Azure key vault.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n+     * @param vaultName The name of the vault to delete.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void delete(String resourceGroupName, String vaultName);\n+\n+    /**\n+     * Deletes the specified Azure key vault.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n+     * @param vaultName The name of the vault to delete.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<Void> deleteWithResponse(String resourceGroupName, String vaultName, Context context);\n+\n+    /**\n+     * Gets the specified Azure key vault.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n+     * @param vaultName The name of the vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified Azure key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    VaultInner getByResourceGroup(String resourceGroupName, String vaultName);\n+\n+    /**\n+     * Gets the specified Azure key vault.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n+     * @param vaultName The name of the vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified Azure key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<VaultInner> getByResourceGroupWithResponse(String resourceGroupName, String vaultName, Context context);\n+\n+    /**\n+     * Update access policies in a key vault in the specified subscription.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n+     * @param vaultName Name of the vault.\n+     * @param operationKind Name of the operation.\n+     * @param parameters Access policy to merge into the vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return parameters for updating the access policy in a vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    VaultAccessPolicyParametersInner updateAccessPolicy(\n+        String resourceGroupName,\n+        String vaultName,\n+        AccessPolicyUpdateKind operationKind,\n+        VaultAccessPolicyParametersInner parameters);\n+\n+    /**\n+     * Update access policies in a key vault in the specified subscription.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n+     * @param vaultName Name of the vault.\n+     * @param operationKind Name of the operation.\n+     * @param parameters Access policy to merge into the vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return parameters for updating the access policy in a vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<VaultAccessPolicyParametersInner> updateAccessPolicyWithResponse(\n+        String resourceGroupName,\n+        String vaultName,\n+        AccessPolicyUpdateKind operationKind,\n+        VaultAccessPolicyParametersInner parameters,\n+        Context context);\n+\n+    /**\n+     * The List operation gets information about the vaults associated with the subscription and within the specified\n+     * resource group.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of vaults.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<VaultInner> listByResourceGroup(String resourceGroupName);\n+\n+    /**\n+     * The List operation gets information about the vaults associated with the subscription and within the specified\n+     * resource group.\n+     *\n+     * @param resourceGroupName The name of the Resource Group to which the vault belongs.\n+     * @param top Maximum number of results to return.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of vaults.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<VaultInner> listByResourceGroup(String resourceGroupName, Integer top, Context context);\n+\n+    /**\n+     * The List operation gets information about the vaults associated with the subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of vaults.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<VaultInner> listBySubscription();\n+\n+    /**\n+     * The List operation gets information about the vaults associated with the subscription.\n+     *\n+     * @param top Maximum number of results to return.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of vaults.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<VaultInner> listBySubscription(Integer top, Context context);\n+\n+    /**\n+     * Gets information about the deleted vaults in a subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the deleted vaults in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DeletedVaultInner> listDeleted();\n+\n+    /**\n+     * Gets information about the deleted vaults in a subscription.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return information about the deleted vaults in a subscription.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<DeletedVaultInner> listDeleted(Context context);\n+\n+    /**\n+     * Gets the deleted Azure key vault.\n+     *\n+     * @param vaultName The name of the vault.\n+     * @param location The location of the deleted vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the deleted Azure key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    DeletedVaultInner getDeleted(String vaultName, String location);\n+\n+    /**\n+     * Gets the deleted Azure key vault.\n+     *\n+     * @param vaultName The name of the vault.\n+     * @param location The location of the deleted vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the deleted Azure key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<DeletedVaultInner> getDeletedWithResponse(String vaultName, String location, Context context);\n+\n+    /**\n+     * Permanently deletes the specified vault. aka Purges the deleted Azure key vault.\n+     *\n+     * @param vaultName The name of the soft-deleted vault.\n+     * @param location The location of the soft-deleted vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginPurgeDeleted(String vaultName, String location);\n+\n+    /**\n+     * Permanently deletes the specified vault. aka Purges the deleted Azure key vault.\n+     *\n+     * @param vaultName The name of the soft-deleted vault.\n+     * @param location The location of the soft-deleted vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the completion.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    SyncPoller<PollResult<Void>, Void> beginPurgeDeleted(String vaultName, String location, Context context);\n+\n+    /**\n+     * Permanently deletes the specified vault. aka Purges the deleted Azure key vault.\n+     *\n+     * @param vaultName The name of the soft-deleted vault.\n+     * @param location The location of the soft-deleted vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void purgeDeleted(String vaultName, String location);\n+\n+    /**\n+     * Permanently deletes the specified vault. aka Purges the deleted Azure key vault.\n+     *\n+     * @param vaultName The name of the soft-deleted vault.\n+     * @param location The location of the soft-deleted vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    void purgeDeleted(String vaultName, String location, Context context);\n+\n+    /**\n+     * The List operation gets information about the vaults associated with the subscription.\n+     *\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of vault resources.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<Resource> list();\n+\n+    /**\n+     * The List operation gets information about the vaults associated with the subscription.\n+     *\n+     * @param top Maximum number of results to return.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return list of vault resources.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    PagedIterable<Resource> list(Integer top, Context context);\n+\n+    /**\n+     * Checks that the vault name is valid and is not already in use.\n+     *\n+     * @param vaultName The name of the vault.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the CheckNameAvailability operation response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    CheckNameAvailabilityResultInner checkNameAvailability(VaultCheckNameAvailabilityParameters vaultName);\n+\n+    /**\n+     * Checks that the vault name is valid and is not already in use.\n+     *\n+     * @param vaultName The name of the vault.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the CheckNameAvailability operation response.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    Response<CheckNameAvailabilityResultInner> checkNameAvailabilityWithResponse(\n+        VaultCheckNameAvailabilityParameters vaultName, Context context);\n+}"
  },
  {
    "sha": "9de9588baf2359486dff9dbc25b48167d1155766",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/CheckNameAvailabilityResultInner.java",
    "status": "added",
    "additions": 75,
    "deletions": 0,
    "changes": 75,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/CheckNameAvailabilityResultInner.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/CheckNameAvailabilityResultInner.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/CheckNameAvailabilityResultInner.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,75 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent.models;\n+\n+import com.azure.core.annotation.Immutable;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.models.Reason;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/** The CheckNameAvailability operation response. */\n+@Immutable\n+public final class CheckNameAvailabilityResultInner {\n+    @JsonIgnore private final ClientLogger logger = new ClientLogger(CheckNameAvailabilityResultInner.class);\n+\n+    /*\n+     * A boolean value that indicates whether the name is available for you to\n+     * use. If true, the name is available. If false, the name has already been\n+     * taken or is invalid and cannot be used.\n+     */\n+    @JsonProperty(value = \"nameAvailable\", access = JsonProperty.Access.WRITE_ONLY)\n+    private Boolean nameAvailable;\n+\n+    /*\n+     * The reason that a vault name could not be used. The Reason element is\n+     * only returned if NameAvailable is false.\n+     */\n+    @JsonProperty(value = \"reason\", access = JsonProperty.Access.WRITE_ONLY)\n+    private Reason reason;\n+\n+    /*\n+     * An error message explaining the Reason value in more detail.\n+     */\n+    @JsonProperty(value = \"message\", access = JsonProperty.Access.WRITE_ONLY)\n+    private String message;\n+\n+    /**\n+     * Get the nameAvailable property: A boolean value that indicates whether the name is available for you to use. If\n+     * true, the name is available. If false, the name has already been taken or is invalid and cannot be used.\n+     *\n+     * @return the nameAvailable value.\n+     */\n+    public Boolean nameAvailable() {\n+        return this.nameAvailable;\n+    }\n+\n+    /**\n+     * Get the reason property: The reason that a vault name could not be used. The Reason element is only returned if\n+     * NameAvailable is false.\n+     *\n+     * @return the reason value.\n+     */\n+    public Reason reason() {\n+        return this.reason;\n+    }\n+\n+    /**\n+     * Get the message property: An error message explaining the Reason value in more detail.\n+     *\n+     * @return the message value.\n+     */\n+    public String message() {\n+        return this.message;\n+    }\n+\n+    /**\n+     * Validates the instance.\n+     *\n+     * @throws IllegalArgumentException thrown if the instance is not valid.\n+     */\n+    public void validate() {\n+    }\n+}"
  },
  {
    "sha": "9edf1e0c864e295ee3f524af2fce46400f540e24",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/DeletedVaultInner.java",
    "status": "added",
    "additions": 99,
    "deletions": 0,
    "changes": 99,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/DeletedVaultInner.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/DeletedVaultInner.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/DeletedVaultInner.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,99 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.models.DeletedVaultProperties;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/** Deleted vault information with extended details. */\n+@Fluent\n+public final class DeletedVaultInner {\n+    @JsonIgnore private final ClientLogger logger = new ClientLogger(DeletedVaultInner.class);\n+\n+    /*\n+     * The resource ID for the deleted key vault.\n+     */\n+    @JsonProperty(value = \"id\", access = JsonProperty.Access.WRITE_ONLY)\n+    private String id;\n+\n+    /*\n+     * The name of the key vault.\n+     */\n+    @JsonProperty(value = \"name\", access = JsonProperty.Access.WRITE_ONLY)\n+    private String name;\n+\n+    /*\n+     * The resource type of the key vault.\n+     */\n+    @JsonProperty(value = \"type\", access = JsonProperty.Access.WRITE_ONLY)\n+    private String type;\n+\n+    /*\n+     * Properties of the vault\n+     */\n+    @JsonProperty(value = \"properties\")\n+    private DeletedVaultProperties properties;\n+\n+    /**\n+     * Get the id property: The resource ID for the deleted key vault.\n+     *\n+     * @return the id value.\n+     */\n+    public String id() {\n+        return this.id;\n+    }\n+\n+    /**\n+     * Get the name property: The name of the key vault.\n+     *\n+     * @return the name value.\n+     */\n+    public String name() {\n+        return this.name;\n+    }\n+\n+    /**\n+     * Get the type property: The resource type of the key vault.\n+     *\n+     * @return the type value.\n+     */\n+    public String type() {\n+        return this.type;\n+    }\n+\n+    /**\n+     * Get the properties property: Properties of the vault.\n+     *\n+     * @return the properties value.\n+     */\n+    public DeletedVaultProperties properties() {\n+        return this.properties;\n+    }\n+\n+    /**\n+     * Set the properties property: Properties of the vault.\n+     *\n+     * @param properties the properties value to set.\n+     * @return the DeletedVaultInner object itself.\n+     */\n+    public DeletedVaultInner withProperties(DeletedVaultProperties properties) {\n+        this.properties = properties;\n+        return this;\n+    }\n+\n+    /**\n+     * Validates the instance.\n+     *\n+     * @throws IllegalArgumentException thrown if the instance is not valid.\n+     */\n+    public void validate() {\n+        if (properties() != null) {\n+            properties().validate();\n+        }\n+    }\n+}"
  },
  {
    "sha": "eb88e1d3b5f0a5ce5ef88c378ea205c4b8e7575a",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/KeyInner.java",
    "status": "added",
    "additions": 188,
    "deletions": 0,
    "changes": 188,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/KeyInner.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/KeyInner.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/KeyInner.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,188 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.annotation.JsonFlatten;\n+import com.azure.core.management.Resource;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.models.JsonWebKeyCurveName;\n+import com.azure.resourcemanager.keyvault.generated.models.JsonWebKeyOperation;\n+import com.azure.resourcemanager.keyvault.generated.models.JsonWebKeyType;\n+import com.azure.resourcemanager.keyvault.generated.models.KeyAttributes;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.List;\n+import java.util.Map;\n+\n+/** The key resource. */\n+@JsonFlatten\n+@Fluent\n+public class KeyInner extends Resource {\n+    @JsonIgnore private final ClientLogger logger = new ClientLogger(KeyInner.class);\n+\n+    /*\n+     * The attributes of the key.\n+     */\n+    @JsonProperty(value = \"properties.attributes\")\n+    private KeyAttributes attributes;\n+\n+    /*\n+     * The type of the key. For valid values, see JsonWebKeyType.\n+     */\n+    @JsonProperty(value = \"properties.kty\")\n+    private JsonWebKeyType kty;\n+\n+    /*\n+     * The keyOps property.\n+     */\n+    @JsonProperty(value = \"properties.keyOps\", access = JsonProperty.Access.WRITE_ONLY)\n+    private List<JsonWebKeyOperation> keyOps;\n+\n+    /*\n+     * The key size in bits. For example: 2048, 3072, or 4096 for RSA.\n+     */\n+    @JsonProperty(value = \"properties.keySize\", access = JsonProperty.Access.WRITE_ONLY)\n+    private Integer keySize;\n+\n+    /*\n+     * The elliptic curve name. For valid values, see JsonWebKeyCurveName.\n+     */\n+    @JsonProperty(value = \"properties.curveName\")\n+    private JsonWebKeyCurveName curveName;\n+\n+    /*\n+     * The URI to retrieve the current version of the key.\n+     */\n+    @JsonProperty(value = \"properties.keyUri\", access = JsonProperty.Access.WRITE_ONLY)\n+    private String keyUri;\n+\n+    /*\n+     * The URI to retrieve the specific version of the key.\n+     */\n+    @JsonProperty(value = \"properties.keyUriWithVersion\", access = JsonProperty.Access.WRITE_ONLY)\n+    private String keyUriWithVersion;\n+\n+    /**\n+     * Get the attributes property: The attributes of the key.\n+     *\n+     * @return the attributes value.\n+     */\n+    public KeyAttributes attributes() {\n+        return this.attributes;\n+    }\n+\n+    /**\n+     * Set the attributes property: The attributes of the key.\n+     *\n+     * @param attributes the attributes value to set.\n+     * @return the KeyInner object itself.\n+     */\n+    public KeyInner withAttributes(KeyAttributes attributes) {\n+        this.attributes = attributes;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the kty property: The type of the key. For valid values, see JsonWebKeyType.\n+     *\n+     * @return the kty value.\n+     */\n+    public JsonWebKeyType kty() {\n+        return this.kty;\n+    }\n+\n+    /**\n+     * Set the kty property: The type of the key. For valid values, see JsonWebKeyType.\n+     *\n+     * @param kty the kty value to set.\n+     * @return the KeyInner object itself.\n+     */\n+    public KeyInner withKty(JsonWebKeyType kty) {\n+        this.kty = kty;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the keyOps property: The keyOps property.\n+     *\n+     * @return the keyOps value.\n+     */\n+    public List<JsonWebKeyOperation> keyOps() {\n+        return this.keyOps;\n+    }\n+\n+    /**\n+     * Get the keySize property: The key size in bits. For example: 2048, 3072, or 4096 for RSA.\n+     *\n+     * @return the keySize value.\n+     */\n+    public Integer keySize() {\n+        return this.keySize;\n+    }\n+\n+    /**\n+     * Get the curveName property: The elliptic curve name. For valid values, see JsonWebKeyCurveName.\n+     *\n+     * @return the curveName value.\n+     */\n+    public JsonWebKeyCurveName curveName() {\n+        return this.curveName;\n+    }\n+\n+    /**\n+     * Set the curveName property: The elliptic curve name. For valid values, see JsonWebKeyCurveName.\n+     *\n+     * @param curveName the curveName value to set.\n+     * @return the KeyInner object itself.\n+     */\n+    public KeyInner withCurveName(JsonWebKeyCurveName curveName) {\n+        this.curveName = curveName;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the keyUri property: The URI to retrieve the current version of the key.\n+     *\n+     * @return the keyUri value.\n+     */\n+    public String keyUri() {\n+        return this.keyUri;\n+    }\n+\n+    /**\n+     * Get the keyUriWithVersion property: The URI to retrieve the specific version of the key.\n+     *\n+     * @return the keyUriWithVersion value.\n+     */\n+    public String keyUriWithVersion() {\n+        return this.keyUriWithVersion;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public KeyInner withLocation(String location) {\n+        super.withLocation(location);\n+        return this;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public KeyInner withTags(Map<String, String> tags) {\n+        super.withTags(tags);\n+        return this;\n+    }\n+\n+    /**\n+     * Validates the instance.\n+     *\n+     * @throws IllegalArgumentException thrown if the instance is not valid.\n+     */\n+    public void validate() {\n+        if (attributes() != null) {\n+            attributes().validate();\n+        }\n+    }\n+}"
  },
  {
    "sha": "adf3ba626464e23e316c640044c23931e1749bcc",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/OperationInner.java",
    "status": "added",
    "additions": 164,
    "deletions": 0,
    "changes": 164,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/OperationInner.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/OperationInner.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/OperationInner.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,164 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.annotation.JsonFlatten;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.models.OperationDisplay;\n+import com.azure.resourcemanager.keyvault.generated.models.ServiceSpecification;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/** Key Vault REST API operation definition. */\n+@JsonFlatten\n+@Fluent\n+public class OperationInner {\n+    @JsonIgnore private final ClientLogger logger = new ClientLogger(OperationInner.class);\n+\n+    /*\n+     * Operation name: {provider}/{resource}/{operation}\n+     */\n+    @JsonProperty(value = \"name\")\n+    private String name;\n+\n+    /*\n+     * Display metadata associated with the operation.\n+     */\n+    @JsonProperty(value = \"display\")\n+    private OperationDisplay display;\n+\n+    /*\n+     * The origin of operations.\n+     */\n+    @JsonProperty(value = \"origin\")\n+    private String origin;\n+\n+    /*\n+     * Property to specify whether the action is a data action.\n+     */\n+    @JsonProperty(value = \"isDataAction\")\n+    private Boolean isDataAction;\n+\n+    /*\n+     * One property of operation, include metric specifications.\n+     */\n+    @JsonProperty(value = \"properties.serviceSpecification\")\n+    private ServiceSpecification serviceSpecification;\n+\n+    /**\n+     * Get the name property: Operation name: {provider}/{resource}/{operation}.\n+     *\n+     * @return the name value.\n+     */\n+    public String name() {\n+        return this.name;\n+    }\n+\n+    /**\n+     * Set the name property: Operation name: {provider}/{resource}/{operation}.\n+     *\n+     * @param name the name value to set.\n+     * @return the OperationInner object itself.\n+     */\n+    public OperationInner withName(String name) {\n+        this.name = name;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the display property: Display metadata associated with the operation.\n+     *\n+     * @return the display value.\n+     */\n+    public OperationDisplay display() {\n+        return this.display;\n+    }\n+\n+    /**\n+     * Set the display property: Display metadata associated with the operation.\n+     *\n+     * @param display the display value to set.\n+     * @return the OperationInner object itself.\n+     */\n+    public OperationInner withDisplay(OperationDisplay display) {\n+        this.display = display;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the origin property: The origin of operations.\n+     *\n+     * @return the origin value.\n+     */\n+    public String origin() {\n+        return this.origin;\n+    }\n+\n+    /**\n+     * Set the origin property: The origin of operations.\n+     *\n+     * @param origin the origin value to set.\n+     * @return the OperationInner object itself.\n+     */\n+    public OperationInner withOrigin(String origin) {\n+        this.origin = origin;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the isDataAction property: Property to specify whether the action is a data action.\n+     *\n+     * @return the isDataAction value.\n+     */\n+    public Boolean isDataAction() {\n+        return this.isDataAction;\n+    }\n+\n+    /**\n+     * Set the isDataAction property: Property to specify whether the action is a data action.\n+     *\n+     * @param isDataAction the isDataAction value to set.\n+     * @return the OperationInner object itself.\n+     */\n+    public OperationInner withIsDataAction(Boolean isDataAction) {\n+        this.isDataAction = isDataAction;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the serviceSpecification property: One property of operation, include metric specifications.\n+     *\n+     * @return the serviceSpecification value.\n+     */\n+    public ServiceSpecification serviceSpecification() {\n+        return this.serviceSpecification;\n+    }\n+\n+    /**\n+     * Set the serviceSpecification property: One property of operation, include metric specifications.\n+     *\n+     * @param serviceSpecification the serviceSpecification value to set.\n+     * @return the OperationInner object itself.\n+     */\n+    public OperationInner withServiceSpecification(ServiceSpecification serviceSpecification) {\n+        this.serviceSpecification = serviceSpecification;\n+        return this;\n+    }\n+\n+    /**\n+     * Validates the instance.\n+     *\n+     * @throws IllegalArgumentException thrown if the instance is not valid.\n+     */\n+    public void validate() {\n+        if (display() != null) {\n+            display().validate();\n+        }\n+        if (serviceSpecification() != null) {\n+            serviceSpecification().validate();\n+        }\n+    }\n+}"
  },
  {
    "sha": "1cb4b4c14bddbf5e235c8cb08645f779276437ee",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/PrivateEndpointConnectionInner.java",
    "status": "added",
    "additions": 146,
    "deletions": 0,
    "changes": 146,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/PrivateEndpointConnectionInner.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/PrivateEndpointConnectionInner.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/PrivateEndpointConnectionInner.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,146 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.annotation.JsonFlatten;\n+import com.azure.core.management.Resource;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.models.PrivateEndpoint;\n+import com.azure.resourcemanager.keyvault.generated.models.PrivateEndpointConnectionProvisioningState;\n+import com.azure.resourcemanager.keyvault.generated.models.PrivateLinkServiceConnectionState;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.Map;\n+\n+/** Private endpoint connection resource. */\n+@JsonFlatten\n+@Fluent\n+public class PrivateEndpointConnectionInner extends Resource {\n+    @JsonIgnore private final ClientLogger logger = new ClientLogger(PrivateEndpointConnectionInner.class);\n+\n+    /*\n+     * Modified whenever there is a change in the state of private endpoint\n+     * connection.\n+     */\n+    @JsonProperty(value = \"etag\")\n+    private String etag;\n+\n+    /*\n+     * Properties of the private endpoint object.\n+     */\n+    @JsonProperty(value = \"properties.privateEndpoint\")\n+    private PrivateEndpoint privateEndpoint;\n+\n+    /*\n+     * Approval state of the private link connection.\n+     */\n+    @JsonProperty(value = \"properties.privateLinkServiceConnectionState\")\n+    private PrivateLinkServiceConnectionState privateLinkServiceConnectionState;\n+\n+    /*\n+     * Provisioning state of the private endpoint connection.\n+     */\n+    @JsonProperty(value = \"properties.provisioningState\", access = JsonProperty.Access.WRITE_ONLY)\n+    private PrivateEndpointConnectionProvisioningState provisioningState;\n+\n+    /**\n+     * Get the etag property: Modified whenever there is a change in the state of private endpoint connection.\n+     *\n+     * @return the etag value.\n+     */\n+    public String etag() {\n+        return this.etag;\n+    }\n+\n+    /**\n+     * Set the etag property: Modified whenever there is a change in the state of private endpoint connection.\n+     *\n+     * @param etag the etag value to set.\n+     * @return the PrivateEndpointConnectionInner object itself.\n+     */\n+    public PrivateEndpointConnectionInner withEtag(String etag) {\n+        this.etag = etag;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the privateEndpoint property: Properties of the private endpoint object.\n+     *\n+     * @return the privateEndpoint value.\n+     */\n+    public PrivateEndpoint privateEndpoint() {\n+        return this.privateEndpoint;\n+    }\n+\n+    /**\n+     * Set the privateEndpoint property: Properties of the private endpoint object.\n+     *\n+     * @param privateEndpoint the privateEndpoint value to set.\n+     * @return the PrivateEndpointConnectionInner object itself.\n+     */\n+    public PrivateEndpointConnectionInner withPrivateEndpoint(PrivateEndpoint privateEndpoint) {\n+        this.privateEndpoint = privateEndpoint;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the privateLinkServiceConnectionState property: Approval state of the private link connection.\n+     *\n+     * @return the privateLinkServiceConnectionState value.\n+     */\n+    public PrivateLinkServiceConnectionState privateLinkServiceConnectionState() {\n+        return this.privateLinkServiceConnectionState;\n+    }\n+\n+    /**\n+     * Set the privateLinkServiceConnectionState property: Approval state of the private link connection.\n+     *\n+     * @param privateLinkServiceConnectionState the privateLinkServiceConnectionState value to set.\n+     * @return the PrivateEndpointConnectionInner object itself.\n+     */\n+    public PrivateEndpointConnectionInner withPrivateLinkServiceConnectionState(\n+        PrivateLinkServiceConnectionState privateLinkServiceConnectionState) {\n+        this.privateLinkServiceConnectionState = privateLinkServiceConnectionState;\n+        return this;\n+    }\n+\n+    /**\n+     * Get the provisioningState property: Provisioning state of the private endpoint connection.\n+     *\n+     * @return the provisioningState value.\n+     */\n+    public PrivateEndpointConnectionProvisioningState provisioningState() {\n+        return this.provisioningState;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public PrivateEndpointConnectionInner withLocation(String location) {\n+        super.withLocation(location);\n+        return this;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public PrivateEndpointConnectionInner withTags(Map<String, String> tags) {\n+        super.withTags(tags);\n+        return this;\n+    }\n+\n+    /**\n+     * Validates the instance.\n+     *\n+     * @throws IllegalArgumentException thrown if the instance is not valid.\n+     */\n+    public void validate() {\n+        if (privateEndpoint() != null) {\n+            privateEndpoint().validate();\n+        }\n+        if (privateLinkServiceConnectionState() != null) {\n+            privateLinkServiceConnectionState().validate();\n+        }\n+    }\n+}"
  },
  {
    "sha": "2ae6791480560cf842573110a3f28936ffb3a17a",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/PrivateLinkResourceListResultInner.java",
    "status": "added",
    "additions": 55,
    "deletions": 0,
    "changes": 55,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/PrivateLinkResourceListResultInner.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/PrivateLinkResourceListResultInner.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/PrivateLinkResourceListResultInner.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,55 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.models.PrivateLinkResource;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.List;\n+\n+/** A list of private link resources. */\n+@Fluent\n+public final class PrivateLinkResourceListResultInner {\n+    @JsonIgnore private final ClientLogger logger = new ClientLogger(PrivateLinkResourceListResultInner.class);\n+\n+    /*\n+     * Array of private link resources\n+     */\n+    @JsonProperty(value = \"value\")\n+    private List<PrivateLinkResource> value;\n+\n+    /**\n+     * Get the value property: Array of private link resources.\n+     *\n+     * @return the value value.\n+     */\n+    public List<PrivateLinkResource> value() {\n+        return this.value;\n+    }\n+\n+    /**\n+     * Set the value property: Array of private link resources.\n+     *\n+     * @param value the value value to set.\n+     * @return the PrivateLinkResourceListResultInner object itself.\n+     */\n+    public PrivateLinkResourceListResultInner withValue(List<PrivateLinkResource> value) {\n+        this.value = value;\n+        return this;\n+    }\n+\n+    /**\n+     * Validates the instance.\n+     *\n+     * @throws IllegalArgumentException thrown if the instance is not valid.\n+     */\n+    public void validate() {\n+        if (value() != null) {\n+            value().forEach(e -> e.validate());\n+        }\n+    }\n+}"
  },
  {
    "sha": "c2a2d06d2f075e7e300a7b62ba3ac268f1b0f07a",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/VaultAccessPolicyParametersInner.java",
    "status": "added",
    "additions": 75,
    "deletions": 0,
    "changes": 75,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/VaultAccessPolicyParametersInner.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/VaultAccessPolicyParametersInner.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/VaultAccessPolicyParametersInner.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,75 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.management.ProxyResource;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.models.VaultAccessPolicyProperties;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+/** Parameters for updating the access policy in a vault. */\n+@Fluent\n+public final class VaultAccessPolicyParametersInner extends ProxyResource {\n+    @JsonIgnore private final ClientLogger logger = new ClientLogger(VaultAccessPolicyParametersInner.class);\n+\n+    /*\n+     * The resource type of the access policy.\n+     */\n+    @JsonProperty(value = \"location\", access = JsonProperty.Access.WRITE_ONLY)\n+    private String location;\n+\n+    /*\n+     * Properties of the access policy\n+     */\n+    @JsonProperty(value = \"properties\", required = true)\n+    private VaultAccessPolicyProperties properties;\n+\n+    /**\n+     * Get the location property: The resource type of the access policy.\n+     *\n+     * @return the location value.\n+     */\n+    public String location() {\n+        return this.location;\n+    }\n+\n+    /**\n+     * Get the properties property: Properties of the access policy.\n+     *\n+     * @return the properties value.\n+     */\n+    public VaultAccessPolicyProperties properties() {\n+        return this.properties;\n+    }\n+\n+    /**\n+     * Set the properties property: Properties of the access policy.\n+     *\n+     * @param properties the properties value to set.\n+     * @return the VaultAccessPolicyParametersInner object itself.\n+     */\n+    public VaultAccessPolicyParametersInner withProperties(VaultAccessPolicyProperties properties) {\n+        this.properties = properties;\n+        return this;\n+    }\n+\n+    /**\n+     * Validates the instance.\n+     *\n+     * @throws IllegalArgumentException thrown if the instance is not valid.\n+     */\n+    public void validate() {\n+        if (properties() == null) {\n+            throw logger\n+                .logExceptionAsError(\n+                    new IllegalArgumentException(\n+                        \"Missing required property properties in model VaultAccessPolicyParametersInner\"));\n+        } else {\n+            properties().validate();\n+        }\n+    }\n+}"
  },
  {
    "sha": "402745152368f8621ff1426daf8082803658b315",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/VaultInner.java",
    "status": "added",
    "additions": 74,
    "deletions": 0,
    "changes": 74,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/VaultInner.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/VaultInner.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/VaultInner.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,74 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.fluent.models;\n+\n+import com.azure.core.annotation.Fluent;\n+import com.azure.core.management.Resource;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.models.VaultProperties;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import java.util.Map;\n+\n+/** Resource information with extended details. */\n+@Fluent\n+public final class VaultInner extends Resource {\n+    @JsonIgnore private final ClientLogger logger = new ClientLogger(VaultInner.class);\n+\n+    /*\n+     * Properties of the vault\n+     */\n+    @JsonProperty(value = \"properties\", required = true)\n+    private VaultProperties properties;\n+\n+    /**\n+     * Get the properties property: Properties of the vault.\n+     *\n+     * @return the properties value.\n+     */\n+    public VaultProperties properties() {\n+        return this.properties;\n+    }\n+\n+    /**\n+     * Set the properties property: Properties of the vault.\n+     *\n+     * @param properties the properties value to set.\n+     * @return the VaultInner object itself.\n+     */\n+    public VaultInner withProperties(VaultProperties properties) {\n+        this.properties = properties;\n+        return this;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public VaultInner withLocation(String location) {\n+        super.withLocation(location);\n+        return this;\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override\n+    public VaultInner withTags(Map<String, String> tags) {\n+        super.withTags(tags);\n+        return this;\n+    }\n+\n+    /**\n+     * Validates the instance.\n+     *\n+     * @throws IllegalArgumentException thrown if the instance is not valid.\n+     */\n+    public void validate() {\n+        if (properties() == null) {\n+            throw logger\n+                .logExceptionAsError(\n+                    new IllegalArgumentException(\"Missing required property properties in model VaultInner\"));\n+        } else {\n+            properties().validate();\n+        }\n+    }\n+}"
  },
  {
    "sha": "b8b64813b1fe5ff29a0dcfa9f1c1aaa4ad733603",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/package-info.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/package-info.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/package-info.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/models/package-info.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,9 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+/**\n+ * Package containing the inner data models for KeyVaultManagementClient. The Azure management API provides a RESTful\n+ * set of web services that interact with Azure Key Vault.\n+ */\n+package com.azure.resourcemanager.keyvault.generated.fluent.models;"
  },
  {
    "sha": "701bc9105a4531d29af6ff2ffca2b679bd407edc",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/package-info.java",
    "status": "added",
    "additions": 9,
    "deletions": 0,
    "changes": 9,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/package-info.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/package-info.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/fluent/package-info.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,9 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+/**\n+ * Package containing the service clients for KeyVaultManagementClient. The Azure management API provides a RESTful set\n+ * of web services that interact with Azure Key Vault.\n+ */\n+package com.azure.resourcemanager.keyvault.generated.fluent;"
  },
  {
    "sha": "d0d72a84f82c651f893d170e5cf912a5a77d7b35",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/CheckNameAvailabilityResultImpl.java",
    "status": "added",
    "additions": 42,
    "deletions": 0,
    "changes": 42,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/CheckNameAvailabilityResultImpl.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/CheckNameAvailabilityResultImpl.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/CheckNameAvailabilityResultImpl.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,42 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.implementation;\n+\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.CheckNameAvailabilityResultInner;\n+import com.azure.resourcemanager.keyvault.generated.models.CheckNameAvailabilityResult;\n+import com.azure.resourcemanager.keyvault.generated.models.Reason;\n+\n+public final class CheckNameAvailabilityResultImpl implements CheckNameAvailabilityResult {\n+    private CheckNameAvailabilityResultInner innerObject;\n+\n+    private final com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager;\n+\n+    CheckNameAvailabilityResultImpl(\n+        CheckNameAvailabilityResultInner innerObject,\n+        com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager) {\n+        this.innerObject = innerObject;\n+        this.serviceManager = serviceManager;\n+    }\n+\n+    public Boolean nameAvailable() {\n+        return this.innerModel().nameAvailable();\n+    }\n+\n+    public Reason reason() {\n+        return this.innerModel().reason();\n+    }\n+\n+    public String message() {\n+        return this.innerModel().message();\n+    }\n+\n+    public CheckNameAvailabilityResultInner innerModel() {\n+        return this.innerObject;\n+    }\n+\n+    private com.azure.resourcemanager.keyvault.generated.KeyVaultManager manager() {\n+        return this.serviceManager;\n+    }\n+}"
  },
  {
    "sha": "d1f9a7c920015e865fefdd755c49d96d2e7d6537",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/DeletedVaultImpl.java",
    "status": "added",
    "additions": 45,
    "deletions": 0,
    "changes": 45,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/DeletedVaultImpl.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/DeletedVaultImpl.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/DeletedVaultImpl.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,45 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.implementation;\n+\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.DeletedVaultInner;\n+import com.azure.resourcemanager.keyvault.generated.models.DeletedVault;\n+import com.azure.resourcemanager.keyvault.generated.models.DeletedVaultProperties;\n+\n+public final class DeletedVaultImpl implements DeletedVault {\n+    private DeletedVaultInner innerObject;\n+\n+    private final com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager;\n+\n+    DeletedVaultImpl(\n+        DeletedVaultInner innerObject, com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager) {\n+        this.innerObject = innerObject;\n+        this.serviceManager = serviceManager;\n+    }\n+\n+    public String id() {\n+        return this.innerModel().id();\n+    }\n+\n+    public String name() {\n+        return this.innerModel().name();\n+    }\n+\n+    public String type() {\n+        return this.innerModel().type();\n+    }\n+\n+    public DeletedVaultProperties properties() {\n+        return this.innerModel().properties();\n+    }\n+\n+    public DeletedVaultInner innerModel() {\n+        return this.innerObject;\n+    }\n+\n+    private com.azure.resourcemanager.keyvault.generated.KeyVaultManager manager() {\n+        return this.serviceManager;\n+    }\n+}"
  },
  {
    "sha": "07c1ef450c18d650bacb7fdd61415e9400e0a913",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyImpl.java",
    "status": "added",
    "additions": 175,
    "deletions": 0,
    "changes": 175,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyImpl.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyImpl.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyImpl.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,175 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.implementation;\n+\n+import com.azure.core.management.Region;\n+import com.azure.core.util.Context;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.KeyInner;\n+import com.azure.resourcemanager.keyvault.generated.models.JsonWebKeyCurveName;\n+import com.azure.resourcemanager.keyvault.generated.models.JsonWebKeyOperation;\n+import com.azure.resourcemanager.keyvault.generated.models.JsonWebKeyType;\n+import com.azure.resourcemanager.keyvault.generated.models.Key;\n+import com.azure.resourcemanager.keyvault.generated.models.KeyAttributes;\n+import com.azure.resourcemanager.keyvault.generated.models.KeyCreateParameters;\n+import com.azure.resourcemanager.keyvault.generated.models.KeyProperties;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+public final class KeyImpl implements Key, Key.Definition {\n+    private KeyInner innerObject;\n+\n+    private final com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager;\n+\n+    KeyImpl(KeyInner innerObject, com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager) {\n+        this.innerObject = innerObject;\n+        this.serviceManager = serviceManager;\n+    }\n+\n+    public String id() {\n+        return this.innerModel().id();\n+    }\n+\n+    public String name() {\n+        return this.innerModel().name();\n+    }\n+\n+    public String type() {\n+        return this.innerModel().type();\n+    }\n+\n+    public String location() {\n+        return this.innerModel().location();\n+    }\n+\n+    public Map<String, String> tags() {\n+        Map<String, String> inner = this.innerModel().tags();\n+        if (inner != null) {\n+            return Collections.unmodifiableMap(inner);\n+        } else {\n+            return Collections.emptyMap();\n+        }\n+    }\n+\n+    public KeyAttributes attributes() {\n+        return this.innerModel().attributes();\n+    }\n+\n+    public JsonWebKeyType kty() {\n+        return this.innerModel().kty();\n+    }\n+\n+    public List<JsonWebKeyOperation> keyOps() {\n+        List<JsonWebKeyOperation> inner = this.innerModel().keyOps();\n+        if (inner != null) {\n+            return Collections.unmodifiableList(inner);\n+        } else {\n+            return Collections.emptyList();\n+        }\n+    }\n+\n+    public Integer keySize() {\n+        return this.innerModel().keySize();\n+    }\n+\n+    public JsonWebKeyCurveName curveName() {\n+        return this.innerModel().curveName();\n+    }\n+\n+    public String keyUri() {\n+        return this.innerModel().keyUri();\n+    }\n+\n+    public String keyUriWithVersion() {\n+        return this.innerModel().keyUriWithVersion();\n+    }\n+\n+    public Region region() {\n+        return Region.fromName(this.regionName());\n+    }\n+\n+    public String regionName() {\n+        return this.location();\n+    }\n+\n+    public KeyInner innerModel() {\n+        return this.innerObject;\n+    }\n+\n+    private com.azure.resourcemanager.keyvault.generated.KeyVaultManager manager() {\n+        return this.serviceManager;\n+    }\n+\n+    private String resourceGroupName;\n+\n+    private String vaultName;\n+\n+    private String keyName;\n+\n+    private KeyCreateParameters createParameters;\n+\n+    public KeyImpl withExistingVault(String resourceGroupName, String vaultName) {\n+        this.resourceGroupName = resourceGroupName;\n+        this.vaultName = vaultName;\n+        return this;\n+    }\n+\n+    public Key create() {\n+        this.innerObject =\n+            serviceManager\n+                .serviceClient()\n+                .getKeys()\n+                .createIfNotExistWithResponse(resourceGroupName, vaultName, keyName, createParameters, Context.NONE)\n+                .getValue();\n+        return this;\n+    }\n+\n+    public Key create(Context context) {\n+        this.innerObject =\n+            serviceManager\n+                .serviceClient()\n+                .getKeys()\n+                .createIfNotExistWithResponse(resourceGroupName, vaultName, keyName, createParameters, context)\n+                .getValue();\n+        return this;\n+    }\n+\n+    KeyImpl(String name, com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager) {\n+        this.innerObject = new KeyInner();\n+        this.serviceManager = serviceManager;\n+        this.keyName = name;\n+        this.createParameters = new KeyCreateParameters();\n+    }\n+\n+    public Key refresh() {\n+        this.innerObject =\n+            serviceManager\n+                .serviceClient()\n+                .getKeys()\n+                .getWithResponse(resourceGroupName, vaultName, keyName, Context.NONE)\n+                .getValue();\n+        return this;\n+    }\n+\n+    public Key refresh(Context context) {\n+        this.innerObject =\n+            serviceManager\n+                .serviceClient()\n+                .getKeys()\n+                .getWithResponse(resourceGroupName, vaultName, keyName, context)\n+                .getValue();\n+        return this;\n+    }\n+\n+    public KeyImpl withProperties(KeyProperties properties) {\n+        this.createParameters.withProperties(properties);\n+        return this;\n+    }\n+\n+    public KeyImpl withTags(Map<String, String> tags) {\n+        this.createParameters.withTags(tags);\n+        return this;\n+    }\n+}"
  },
  {
    "sha": "6541d1611ec4818f9913c53a109f67ab34807801",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyVaultManagementClientBuilder.java",
    "status": "added",
    "additions": 149,
    "deletions": 0,
    "changes": 149,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyVaultManagementClientBuilder.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyVaultManagementClientBuilder.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyVaultManagementClientBuilder.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,149 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.implementation;\n+\n+import com.azure.core.annotation.ServiceClientBuilder;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpPipelineBuilder;\n+import com.azure.core.http.policy.CookiePolicy;\n+import com.azure.core.http.policy.RetryPolicy;\n+import com.azure.core.http.policy.UserAgentPolicy;\n+import com.azure.core.management.AzureEnvironment;\n+import com.azure.core.management.serializer.SerializerFactory;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import java.time.Duration;\n+\n+/** A builder for creating a new instance of the KeyVaultManagementClientImpl type. */\n+@ServiceClientBuilder(serviceClients = {KeyVaultManagementClientImpl.class})\n+public final class KeyVaultManagementClientBuilder {\n+    /*\n+     * Subscription credentials which uniquely identify Microsoft Azure\n+     * subscription. The subscription ID forms part of the URI for every\n+     * service call.\n+     */\n+    private String subscriptionId;\n+\n+    /**\n+     * Sets Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms\n+     * part of the URI for every service call.\n+     *\n+     * @param subscriptionId the subscriptionId value.\n+     * @return the KeyVaultManagementClientBuilder.\n+     */\n+    public KeyVaultManagementClientBuilder subscriptionId(String subscriptionId) {\n+        this.subscriptionId = subscriptionId;\n+        return this;\n+    }\n+\n+    /*\n+     * server parameter\n+     */\n+    private String endpoint;\n+\n+    /**\n+     * Sets server parameter.\n+     *\n+     * @param endpoint the endpoint value.\n+     * @return the KeyVaultManagementClientBuilder.\n+     */\n+    public KeyVaultManagementClientBuilder endpoint(String endpoint) {\n+        this.endpoint = endpoint;\n+        return this;\n+    }\n+\n+    /*\n+     * The environment to connect to\n+     */\n+    private AzureEnvironment environment;\n+\n+    /**\n+     * Sets The environment to connect to.\n+     *\n+     * @param environment the environment value.\n+     * @return the KeyVaultManagementClientBuilder.\n+     */\n+    public KeyVaultManagementClientBuilder environment(AzureEnvironment environment) {\n+        this.environment = environment;\n+        return this;\n+    }\n+\n+    /*\n+     * The default poll interval for long-running operation\n+     */\n+    private Duration defaultPollInterval;\n+\n+    /**\n+     * Sets The default poll interval for long-running operation.\n+     *\n+     * @param defaultPollInterval the defaultPollInterval value.\n+     * @return the KeyVaultManagementClientBuilder.\n+     */\n+    public KeyVaultManagementClientBuilder defaultPollInterval(Duration defaultPollInterval) {\n+        this.defaultPollInterval = defaultPollInterval;\n+        return this;\n+    }\n+\n+    /*\n+     * The HTTP pipeline to send requests through\n+     */\n+    private HttpPipeline pipeline;\n+\n+    /**\n+     * Sets The HTTP pipeline to send requests through.\n+     *\n+     * @param pipeline the pipeline value.\n+     * @return the KeyVaultManagementClientBuilder.\n+     */\n+    public KeyVaultManagementClientBuilder pipeline(HttpPipeline pipeline) {\n+        this.pipeline = pipeline;\n+        return this;\n+    }\n+\n+    /*\n+     * The serializer to serialize an object into a string\n+     */\n+    private SerializerAdapter serializerAdapter;\n+\n+    /**\n+     * Sets The serializer to serialize an object into a string.\n+     *\n+     * @param serializerAdapter the serializerAdapter value.\n+     * @return the KeyVaultManagementClientBuilder.\n+     */\n+    public KeyVaultManagementClientBuilder serializerAdapter(SerializerAdapter serializerAdapter) {\n+        this.serializerAdapter = serializerAdapter;\n+        return this;\n+    }\n+\n+    /**\n+     * Builds an instance of KeyVaultManagementClientImpl with the provided parameters.\n+     *\n+     * @return an instance of KeyVaultManagementClientImpl.\n+     */\n+    public KeyVaultManagementClientImpl buildClient() {\n+        if (endpoint == null) {\n+            this.endpoint = \"https://management.azure.com\";\n+        }\n+        if (environment == null) {\n+            this.environment = AzureEnvironment.AZURE;\n+        }\n+        if (defaultPollInterval == null) {\n+            this.defaultPollInterval = Duration.ofSeconds(30);\n+        }\n+        if (pipeline == null) {\n+            this.pipeline =\n+                new HttpPipelineBuilder()\n+                    .policies(new UserAgentPolicy(), new RetryPolicy(), new CookiePolicy())\n+                    .build();\n+        }\n+        if (serializerAdapter == null) {\n+            this.serializerAdapter = SerializerFactory.createDefaultManagementSerializerAdapter();\n+        }\n+        KeyVaultManagementClientImpl client =\n+            new KeyVaultManagementClientImpl(\n+                pipeline, serializerAdapter, defaultPollInterval, environment, subscriptionId, endpoint);\n+        return client;\n+    }\n+}"
  },
  {
    "sha": "a2f7ba5959f6a027246752977d68e8a37209c3c4",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyVaultManagementClientImpl.java",
    "status": "added",
    "additions": 354,
    "deletions": 0,
    "changes": 354,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyVaultManagementClientImpl.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyVaultManagementClientImpl.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeyVaultManagementClientImpl.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,354 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.implementation;\n+\n+import com.azure.core.annotation.ServiceClient;\n+import com.azure.core.http.HttpHeaders;\n+import com.azure.core.http.HttpPipeline;\n+import com.azure.core.http.HttpResponse;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.management.AzureEnvironment;\n+import com.azure.core.management.exception.ManagementError;\n+import com.azure.core.management.exception.ManagementException;\n+import com.azure.core.management.polling.PollResult;\n+import com.azure.core.management.polling.PollerFactory;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.core.util.polling.AsyncPollResponse;\n+import com.azure.core.util.polling.LongRunningOperationStatus;\n+import com.azure.core.util.polling.PollerFlux;\n+import com.azure.core.util.serializer.SerializerAdapter;\n+import com.azure.core.util.serializer.SerializerEncoding;\n+import com.azure.resourcemanager.keyvault.generated.fluent.KeyVaultManagementClient;\n+import com.azure.resourcemanager.keyvault.generated.fluent.KeysClient;\n+import com.azure.resourcemanager.keyvault.generated.fluent.OperationsClient;\n+import com.azure.resourcemanager.keyvault.generated.fluent.PrivateEndpointConnectionsClient;\n+import com.azure.resourcemanager.keyvault.generated.fluent.PrivateLinkResourcesClient;\n+import com.azure.resourcemanager.keyvault.generated.fluent.VaultsClient;\n+import java.io.IOException;\n+import java.lang.reflect.Type;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n+import java.time.Duration;\n+import java.util.Map;\n+import reactor.core.publisher.Flux;\n+import reactor.core.publisher.Mono;\n+\n+/** Initializes a new instance of the KeyVaultManagementClientImpl type. */\n+@ServiceClient(builder = KeyVaultManagementClientBuilder.class)\n+public final class KeyVaultManagementClientImpl implements KeyVaultManagementClient {\n+    private final ClientLogger logger = new ClientLogger(KeyVaultManagementClientImpl.class);\n+\n+    /**\n+     * Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of\n+     * the URI for every service call.\n+     */\n+    private final String subscriptionId;\n+\n+    /**\n+     * Gets Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms\n+     * part of the URI for every service call.\n+     *\n+     * @return the subscriptionId value.\n+     */\n+    public String getSubscriptionId() {\n+        return this.subscriptionId;\n+    }\n+\n+    /** server parameter. */\n+    private final String endpoint;\n+\n+    /**\n+     * Gets server parameter.\n+     *\n+     * @return the endpoint value.\n+     */\n+    public String getEndpoint() {\n+        return this.endpoint;\n+    }\n+\n+    /** Api Version. */\n+    private final String apiVersion;\n+\n+    /**\n+     * Gets Api Version.\n+     *\n+     * @return the apiVersion value.\n+     */\n+    public String getApiVersion() {\n+        return this.apiVersion;\n+    }\n+\n+    /** The HTTP pipeline to send requests through. */\n+    private final HttpPipeline httpPipeline;\n+\n+    /**\n+     * Gets The HTTP pipeline to send requests through.\n+     *\n+     * @return the httpPipeline value.\n+     */\n+    public HttpPipeline getHttpPipeline() {\n+        return this.httpPipeline;\n+    }\n+\n+    /** The serializer to serialize an object into a string. */\n+    private final SerializerAdapter serializerAdapter;\n+\n+    /**\n+     * Gets The serializer to serialize an object into a string.\n+     *\n+     * @return the serializerAdapter value.\n+     */\n+    SerializerAdapter getSerializerAdapter() {\n+        return this.serializerAdapter;\n+    }\n+\n+    /** The default poll interval for long-running operation. */\n+    private final Duration defaultPollInterval;\n+\n+    /**\n+     * Gets The default poll interval for long-running operation.\n+     *\n+     * @return the defaultPollInterval value.\n+     */\n+    public Duration getDefaultPollInterval() {\n+        return this.defaultPollInterval;\n+    }\n+\n+    /** The VaultsClient object to access its operations. */\n+    private final VaultsClient vaults;\n+\n+    /**\n+     * Gets the VaultsClient object to access its operations.\n+     *\n+     * @return the VaultsClient object.\n+     */\n+    public VaultsClient getVaults() {\n+        return this.vaults;\n+    }\n+\n+    /** The PrivateEndpointConnectionsClient object to access its operations. */\n+    private final PrivateEndpointConnectionsClient privateEndpointConnections;\n+\n+    /**\n+     * Gets the PrivateEndpointConnectionsClient object to access its operations.\n+     *\n+     * @return the PrivateEndpointConnectionsClient object.\n+     */\n+    public PrivateEndpointConnectionsClient getPrivateEndpointConnections() {\n+        return this.privateEndpointConnections;\n+    }\n+\n+    /** The PrivateLinkResourcesClient object to access its operations. */\n+    private final PrivateLinkResourcesClient privateLinkResources;\n+\n+    /**\n+     * Gets the PrivateLinkResourcesClient object to access its operations.\n+     *\n+     * @return the PrivateLinkResourcesClient object.\n+     */\n+    public PrivateLinkResourcesClient getPrivateLinkResources() {\n+        return this.privateLinkResources;\n+    }\n+\n+    /** The OperationsClient object to access its operations. */\n+    private final OperationsClient operations;\n+\n+    /**\n+     * Gets the OperationsClient object to access its operations.\n+     *\n+     * @return the OperationsClient object.\n+     */\n+    public OperationsClient getOperations() {\n+        return this.operations;\n+    }\n+\n+    /** The KeysClient object to access its operations. */\n+    private final KeysClient keys;\n+\n+    /**\n+     * Gets the KeysClient object to access its operations.\n+     *\n+     * @return the KeysClient object.\n+     */\n+    public KeysClient getKeys() {\n+        return this.keys;\n+    }\n+\n+    /**\n+     * Initializes an instance of KeyVaultManagementClient client.\n+     *\n+     * @param httpPipeline The HTTP pipeline to send requests through.\n+     * @param serializerAdapter The serializer to serialize an object into a string.\n+     * @param defaultPollInterval The default poll interval for long-running operation.\n+     * @param environment The Azure environment.\n+     * @param subscriptionId Subscription credentials which uniquely identify Microsoft Azure subscription. The\n+     *     subscription ID forms part of the URI for every service call.\n+     * @param endpoint server parameter.\n+     */\n+    KeyVaultManagementClientImpl(\n+        HttpPipeline httpPipeline,\n+        SerializerAdapter serializerAdapter,\n+        Duration defaultPollInterval,\n+        AzureEnvironment environment,\n+        String subscriptionId,\n+        String endpoint) {\n+        this.httpPipeline = httpPipeline;\n+        this.serializerAdapter = serializerAdapter;\n+        this.defaultPollInterval = defaultPollInterval;\n+        this.subscriptionId = subscriptionId;\n+        this.endpoint = endpoint;\n+        this.apiVersion = \"2019-09-01\";\n+        this.vaults = new VaultsClientImpl(this);\n+        this.privateEndpointConnections = new PrivateEndpointConnectionsClientImpl(this);\n+        this.privateLinkResources = new PrivateLinkResourcesClientImpl(this);\n+        this.operations = new OperationsClientImpl(this);\n+        this.keys = new KeysClientImpl(this);\n+    }\n+\n+    /**\n+     * Gets default client context.\n+     *\n+     * @return the default client context.\n+     */\n+    public Context getContext() {\n+        return Context.NONE;\n+    }\n+\n+    /**\n+     * Merges default client context with provided context.\n+     *\n+     * @param context the context to be merged with default client context.\n+     * @return the merged context.\n+     */\n+    public Context mergeContext(Context context) {\n+        for (Map.Entry<Object, Object> entry : this.getContext().getValues().entrySet()) {\n+            context = context.addData(entry.getKey(), entry.getValue());\n+        }\n+        return context;\n+    }\n+\n+    /**\n+     * Gets long running operation result.\n+     *\n+     * @param activationResponse the response of activation operation.\n+     * @param httpPipeline the http pipeline.\n+     * @param pollResultType type of poll result.\n+     * @param finalResultType type of final result.\n+     * @param context the context shared by all requests.\n+     * @param <T> type of poll result.\n+     * @param <U> type of final result.\n+     * @return poller flux for poll result and final result.\n+     */\n+    public <T, U> PollerFlux<PollResult<T>, U> getLroResult(\n+        Mono<Response<Flux<ByteBuffer>>> activationResponse,\n+        HttpPipeline httpPipeline,\n+        Type pollResultType,\n+        Type finalResultType,\n+        Context context) {\n+        return PollerFactory\n+            .create(\n+                serializerAdapter,\n+                httpPipeline,\n+                pollResultType,\n+                finalResultType,\n+                defaultPollInterval,\n+                activationResponse,\n+                context);\n+    }\n+\n+    /**\n+     * Gets the final result, or an error, based on last async poll response.\n+     *\n+     * @param response the last async poll response.\n+     * @param <T> type of poll result.\n+     * @param <U> type of final result.\n+     * @return the final result, or an error.\n+     */\n+    public <T, U> Mono<U> getLroFinalResultOrError(AsyncPollResponse<PollResult<T>, U> response) {\n+        if (response.getStatus() != LongRunningOperationStatus.SUCCESSFULLY_COMPLETED) {\n+            String errorMessage;\n+            ManagementError managementError = null;\n+            HttpResponse errorResponse = null;\n+            PollResult.Error lroError = response.getValue().getError();\n+            if (lroError != null) {\n+                errorResponse =\n+                    new HttpResponseImpl(\n+                        lroError.getResponseStatusCode(), lroError.getResponseHeaders(), lroError.getResponseBody());\n+\n+                errorMessage = response.getValue().getError().getMessage();\n+                String errorBody = response.getValue().getError().getResponseBody();\n+                if (errorBody != null) {\n+                    // try to deserialize error body to ManagementError\n+                    try {\n+                        managementError =\n+                            this\n+                                .getSerializerAdapter()\n+                                .deserialize(errorBody, ManagementError.class, SerializerEncoding.JSON);\n+                        if (managementError.getCode() == null || managementError.getMessage() == null) {\n+                            managementError = null;\n+                        }\n+                    } catch (IOException | RuntimeException ioe) {\n+                        logger.logThrowableAsWarning(ioe);\n+                    }\n+                }\n+            } else {\n+                // fallback to default error message\n+                errorMessage = \"Long running operation failed.\";\n+            }\n+            if (managementError == null) {\n+                // fallback to default ManagementError\n+                managementError = new ManagementError(response.getStatus().toString(), errorMessage);\n+            }\n+            return Mono.error(new ManagementException(errorMessage, errorResponse, managementError));\n+        } else {\n+            return response.getFinalResult();\n+        }\n+    }\n+\n+    private static final class HttpResponseImpl extends HttpResponse {\n+        private final int statusCode;\n+\n+        private final byte[] responseBody;\n+\n+        private final HttpHeaders httpHeaders;\n+\n+        HttpResponseImpl(int statusCode, HttpHeaders httpHeaders, String responseBody) {\n+            super(null);\n+            this.statusCode = statusCode;\n+            this.httpHeaders = httpHeaders;\n+            this.responseBody = responseBody == null ? null : responseBody.getBytes(StandardCharsets.UTF_8);\n+        }\n+\n+        public int getStatusCode() {\n+            return statusCode;\n+        }\n+\n+        public String getHeaderValue(String s) {\n+            return httpHeaders.getValue(s);\n+        }\n+\n+        public HttpHeaders getHeaders() {\n+            return httpHeaders;\n+        }\n+\n+        public Flux<ByteBuffer> getBody() {\n+            return Flux.just(ByteBuffer.wrap(responseBody));\n+        }\n+\n+        public Mono<byte[]> getBodyAsByteArray() {\n+            return Mono.just(responseBody);\n+        }\n+\n+        public Mono<String> getBodyAsString() {\n+            return Mono.just(new String(responseBody, StandardCharsets.UTF_8));\n+        }\n+\n+        public Mono<String> getBodyAsString(Charset charset) {\n+            return Mono.just(new String(responseBody, charset));\n+        }\n+    }\n+}"
  },
  {
    "sha": "bdf66abbc7b4ee2784940f04b0b9392215bae397",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeysClientImpl.java",
    "status": "added",
    "additions": 1205,
    "deletions": 0,
    "changes": 1205,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeysClientImpl.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeysClientImpl.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeysClientImpl.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,1205 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.implementation;\n+\n+import com.azure.core.annotation.BodyParam;\n+import com.azure.core.annotation.ExpectedResponses;\n+import com.azure.core.annotation.Get;\n+import com.azure.core.annotation.HeaderParam;\n+import com.azure.core.annotation.Headers;\n+import com.azure.core.annotation.Host;\n+import com.azure.core.annotation.HostParam;\n+import com.azure.core.annotation.PathParam;\n+import com.azure.core.annotation.Put;\n+import com.azure.core.annotation.QueryParam;\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceInterface;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.annotation.UnexpectedResponseExceptionType;\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.PagedResponse;\n+import com.azure.core.http.rest.PagedResponseBase;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.http.rest.RestProxy;\n+import com.azure.core.management.exception.ManagementException;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.FluxUtil;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.fluent.KeysClient;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.KeyInner;\n+import com.azure.resourcemanager.keyvault.generated.models.KeyCreateParameters;\n+import com.azure.resourcemanager.keyvault.generated.models.KeyListResult;\n+import reactor.core.publisher.Mono;\n+\n+/** An instance of this class provides access to all the operations defined in KeysClient. */\n+public final class KeysClientImpl implements KeysClient {\n+    private final ClientLogger logger = new ClientLogger(KeysClientImpl.class);\n+\n+    /** The proxy service used to perform REST calls. */\n+    private final KeysService service;\n+\n+    /** The service client containing this operation class. */\n+    private final KeyVaultManagementClientImpl client;\n+\n+    /**\n+     * Initializes an instance of KeysClientImpl.\n+     *\n+     * @param client the instance of the service client containing this operation class.\n+     */\n+    KeysClientImpl(KeyVaultManagementClientImpl client) {\n+        this.service = RestProxy.create(KeysService.class, client.getHttpPipeline(), client.getSerializerAdapter());\n+        this.client = client;\n+    }\n+\n+    /**\n+     * The interface defining all the services for KeyVaultManagementClientKeys to be used by the proxy service to\n+     * perform REST calls.\n+     */\n+    @Host(\"{$host}\")\n+    @ServiceInterface(name = \"KeyVaultManagementCl\")\n+    private interface KeysService {\n+        @Headers({\"Content-Type: application/json\"})\n+        @Put(\n+            \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults\"\n+                + \"/{vaultName}/keys/{keyName}\")\n+        @ExpectedResponses({200})\n+        @UnexpectedResponseExceptionType(ManagementException.class)\n+        Mono<Response<KeyInner>> createIfNotExist(\n+            @HostParam(\"$host\") String endpoint,\n+            @PathParam(\"subscriptionId\") String subscriptionId,\n+            @PathParam(\"resourceGroupName\") String resourceGroupName,\n+            @PathParam(\"vaultName\") String vaultName,\n+            @PathParam(\"keyName\") String keyName,\n+            @QueryParam(\"api-version\") String apiVersion,\n+            @BodyParam(\"application/json\") KeyCreateParameters parameters,\n+            @HeaderParam(\"Accept\") String accept,\n+            Context context);\n+\n+        @Headers({\"Content-Type: application/json\"})\n+        @Get(\n+            \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults\"\n+                + \"/{vaultName}/keys/{keyName}\")\n+        @ExpectedResponses({200})\n+        @UnexpectedResponseExceptionType(ManagementException.class)\n+        Mono<Response<KeyInner>> get(\n+            @HostParam(\"$host\") String endpoint,\n+            @PathParam(\"subscriptionId\") String subscriptionId,\n+            @PathParam(\"resourceGroupName\") String resourceGroupName,\n+            @PathParam(\"vaultName\") String vaultName,\n+            @PathParam(\"keyName\") String keyName,\n+            @QueryParam(\"api-version\") String apiVersion,\n+            @HeaderParam(\"Accept\") String accept,\n+            Context context);\n+\n+        @Headers({\"Content-Type: application/json\"})\n+        @Get(\n+            \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults\"\n+                + \"/{vaultName}/keys\")\n+        @ExpectedResponses({200})\n+        @UnexpectedResponseExceptionType(ManagementException.class)\n+        Mono<Response<KeyListResult>> list(\n+            @HostParam(\"$host\") String endpoint,\n+            @PathParam(\"subscriptionId\") String subscriptionId,\n+            @PathParam(\"resourceGroupName\") String resourceGroupName,\n+            @PathParam(\"vaultName\") String vaultName,\n+            @QueryParam(\"api-version\") String apiVersion,\n+            @HeaderParam(\"Accept\") String accept,\n+            Context context);\n+\n+        @Headers({\"Content-Type: application/json\"})\n+        @Get(\n+            \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults\"\n+                + \"/{vaultName}/keys/{keyName}/versions/{keyVersion}\")\n+        @ExpectedResponses({200})\n+        @UnexpectedResponseExceptionType(ManagementException.class)\n+        Mono<Response<KeyInner>> getVersion(\n+            @HostParam(\"$host\") String endpoint,\n+            @PathParam(\"subscriptionId\") String subscriptionId,\n+            @PathParam(\"resourceGroupName\") String resourceGroupName,\n+            @PathParam(\"vaultName\") String vaultName,\n+            @PathParam(\"keyName\") String keyName,\n+            @PathParam(\"keyVersion\") String keyVersion,\n+            @QueryParam(\"api-version\") String apiVersion,\n+            @HeaderParam(\"Accept\") String accept,\n+            Context context);\n+\n+        @Headers({\"Content-Type: application/json\"})\n+        @Get(\n+            \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.KeyVault/vaults\"\n+                + \"/{vaultName}/keys/{keyName}/versions\")\n+        @ExpectedResponses({200})\n+        @UnexpectedResponseExceptionType(ManagementException.class)\n+        Mono<Response<KeyListResult>> listVersions(\n+            @HostParam(\"$host\") String endpoint,\n+            @PathParam(\"subscriptionId\") String subscriptionId,\n+            @PathParam(\"resourceGroupName\") String resourceGroupName,\n+            @PathParam(\"vaultName\") String vaultName,\n+            @PathParam(\"keyName\") String keyName,\n+            @QueryParam(\"api-version\") String apiVersion,\n+            @HeaderParam(\"Accept\") String accept,\n+            Context context);\n+\n+        @Headers({\"Content-Type: application/json\"})\n+        @Get(\"{nextLink}\")\n+        @ExpectedResponses({200})\n+        @UnexpectedResponseExceptionType(ManagementException.class)\n+        Mono<Response<KeyListResult>> listNext(\n+            @PathParam(value = \"nextLink\", encoded = true) String nextLink,\n+            @HostParam(\"$host\") String endpoint,\n+            @HeaderParam(\"Accept\") String accept,\n+            Context context);\n+\n+        @Headers({\"Content-Type: application/json\"})\n+        @Get(\"{nextLink}\")\n+        @ExpectedResponses({200})\n+        @UnexpectedResponseExceptionType(ManagementException.class)\n+        Mono<Response<KeyListResult>> listVersionsNext(\n+            @PathParam(value = \"nextLink\", encoded = true) String nextLink,\n+            @HostParam(\"$host\") String endpoint,\n+            @HeaderParam(\"Accept\") String accept,\n+            Context context);\n+    }\n+\n+    /**\n+     * Creates the first version of a new key if it does not exist. If it already exists, then the existing key is\n+     * returned without any write operations being performed. This API does not create subsequent versions, and does not\n+     * update existing keys.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the key vault which contains the key to be created.\n+     * @param keyName The name of the key to be created.\n+     * @param parameters The parameters used to create the specified key.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the key resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<Response<KeyInner>> createIfNotExistWithResponseAsync(\n+        String resourceGroupName, String vaultName, String keyName, KeyCreateParameters parameters) {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        if (this.client.getSubscriptionId() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getSubscriptionId() is required and cannot be null.\"));\n+        }\n+        if (resourceGroupName == null) {\n+            return Mono\n+                .error(new IllegalArgumentException(\"Parameter resourceGroupName is required and cannot be null.\"));\n+        }\n+        if (vaultName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter vaultName is required and cannot be null.\"));\n+        }\n+        if (keyName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter keyName is required and cannot be null.\"));\n+        }\n+        if (parameters == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter parameters is required and cannot be null.\"));\n+        } else {\n+            parameters.validate();\n+        }\n+        final String accept = \"application/json\";\n+        return FluxUtil\n+            .withContext(\n+                context ->\n+                    service\n+                        .createIfNotExist(\n+                            this.client.getEndpoint(),\n+                            this.client.getSubscriptionId(),\n+                            resourceGroupName,\n+                            vaultName,\n+                            keyName,\n+                            this.client.getApiVersion(),\n+                            parameters,\n+                            accept,\n+                            context))\n+            .subscriberContext(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext())));\n+    }\n+\n+    /**\n+     * Creates the first version of a new key if it does not exist. If it already exists, then the existing key is\n+     * returned without any write operations being performed. This API does not create subsequent versions, and does not\n+     * update existing keys.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the key vault which contains the key to be created.\n+     * @param keyName The name of the key to be created.\n+     * @param parameters The parameters used to create the specified key.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the key resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<Response<KeyInner>> createIfNotExistWithResponseAsync(\n+        String resourceGroupName, String vaultName, String keyName, KeyCreateParameters parameters, Context context) {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        if (this.client.getSubscriptionId() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getSubscriptionId() is required and cannot be null.\"));\n+        }\n+        if (resourceGroupName == null) {\n+            return Mono\n+                .error(new IllegalArgumentException(\"Parameter resourceGroupName is required and cannot be null.\"));\n+        }\n+        if (vaultName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter vaultName is required and cannot be null.\"));\n+        }\n+        if (keyName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter keyName is required and cannot be null.\"));\n+        }\n+        if (parameters == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter parameters is required and cannot be null.\"));\n+        } else {\n+            parameters.validate();\n+        }\n+        final String accept = \"application/json\";\n+        context = this.client.mergeContext(context);\n+        return service\n+            .createIfNotExist(\n+                this.client.getEndpoint(),\n+                this.client.getSubscriptionId(),\n+                resourceGroupName,\n+                vaultName,\n+                keyName,\n+                this.client.getApiVersion(),\n+                parameters,\n+                accept,\n+                context);\n+    }\n+\n+    /**\n+     * Creates the first version of a new key if it does not exist. If it already exists, then the existing key is\n+     * returned without any write operations being performed. This API does not create subsequent versions, and does not\n+     * update existing keys.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the key vault which contains the key to be created.\n+     * @param keyName The name of the key to be created.\n+     * @param parameters The parameters used to create the specified key.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the key resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<KeyInner> createIfNotExistAsync(\n+        String resourceGroupName, String vaultName, String keyName, KeyCreateParameters parameters) {\n+        return createIfNotExistWithResponseAsync(resourceGroupName, vaultName, keyName, parameters)\n+            .flatMap(\n+                (Response<KeyInner> res) -> {\n+                    if (res.getValue() != null) {\n+                        return Mono.just(res.getValue());\n+                    } else {\n+                        return Mono.empty();\n+                    }\n+                });\n+    }\n+\n+    /**\n+     * Creates the first version of a new key if it does not exist. If it already exists, then the existing key is\n+     * returned without any write operations being performed. This API does not create subsequent versions, and does not\n+     * update existing keys.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the key vault which contains the key to be created.\n+     * @param keyName The name of the key to be created.\n+     * @param parameters The parameters used to create the specified key.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the key resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public KeyInner createIfNotExist(\n+        String resourceGroupName, String vaultName, String keyName, KeyCreateParameters parameters) {\n+        return createIfNotExistAsync(resourceGroupName, vaultName, keyName, parameters).block();\n+    }\n+\n+    /**\n+     * Creates the first version of a new key if it does not exist. If it already exists, then the existing key is\n+     * returned without any write operations being performed. This API does not create subsequent versions, and does not\n+     * update existing keys.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the key vault which contains the key to be created.\n+     * @param keyName The name of the key to be created.\n+     * @param parameters The parameters used to create the specified key.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the key resource.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Response<KeyInner> createIfNotExistWithResponse(\n+        String resourceGroupName, String vaultName, String keyName, KeyCreateParameters parameters, Context context) {\n+        return createIfNotExistWithResponseAsync(resourceGroupName, vaultName, keyName, parameters, context).block();\n+    }\n+\n+    /**\n+     * Gets the current version of the specified key from the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key to be retrieved.\n+     * @param keyName The name of the key to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the current version of the specified key from the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<Response<KeyInner>> getWithResponseAsync(String resourceGroupName, String vaultName, String keyName) {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        if (this.client.getSubscriptionId() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getSubscriptionId() is required and cannot be null.\"));\n+        }\n+        if (resourceGroupName == null) {\n+            return Mono\n+                .error(new IllegalArgumentException(\"Parameter resourceGroupName is required and cannot be null.\"));\n+        }\n+        if (vaultName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter vaultName is required and cannot be null.\"));\n+        }\n+        if (keyName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter keyName is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        return FluxUtil\n+            .withContext(\n+                context ->\n+                    service\n+                        .get(\n+                            this.client.getEndpoint(),\n+                            this.client.getSubscriptionId(),\n+                            resourceGroupName,\n+                            vaultName,\n+                            keyName,\n+                            this.client.getApiVersion(),\n+                            accept,\n+                            context))\n+            .subscriberContext(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext())));\n+    }\n+\n+    /**\n+     * Gets the current version of the specified key from the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key to be retrieved.\n+     * @param keyName The name of the key to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the current version of the specified key from the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<Response<KeyInner>> getWithResponseAsync(\n+        String resourceGroupName, String vaultName, String keyName, Context context) {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        if (this.client.getSubscriptionId() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getSubscriptionId() is required and cannot be null.\"));\n+        }\n+        if (resourceGroupName == null) {\n+            return Mono\n+                .error(new IllegalArgumentException(\"Parameter resourceGroupName is required and cannot be null.\"));\n+        }\n+        if (vaultName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter vaultName is required and cannot be null.\"));\n+        }\n+        if (keyName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter keyName is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        context = this.client.mergeContext(context);\n+        return service\n+            .get(\n+                this.client.getEndpoint(),\n+                this.client.getSubscriptionId(),\n+                resourceGroupName,\n+                vaultName,\n+                keyName,\n+                this.client.getApiVersion(),\n+                accept,\n+                context);\n+    }\n+\n+    /**\n+     * Gets the current version of the specified key from the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key to be retrieved.\n+     * @param keyName The name of the key to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the current version of the specified key from the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<KeyInner> getAsync(String resourceGroupName, String vaultName, String keyName) {\n+        return getWithResponseAsync(resourceGroupName, vaultName, keyName)\n+            .flatMap(\n+                (Response<KeyInner> res) -> {\n+                    if (res.getValue() != null) {\n+                        return Mono.just(res.getValue());\n+                    } else {\n+                        return Mono.empty();\n+                    }\n+                });\n+    }\n+\n+    /**\n+     * Gets the current version of the specified key from the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key to be retrieved.\n+     * @param keyName The name of the key to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the current version of the specified key from the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public KeyInner get(String resourceGroupName, String vaultName, String keyName) {\n+        return getAsync(resourceGroupName, vaultName, keyName).block();\n+    }\n+\n+    /**\n+     * Gets the current version of the specified key from the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key to be retrieved.\n+     * @param keyName The name of the key to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the current version of the specified key from the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Response<KeyInner> getWithResponse(\n+        String resourceGroupName, String vaultName, String keyName, Context context) {\n+        return getWithResponseAsync(resourceGroupName, vaultName, keyName, context).block();\n+    }\n+\n+    /**\n+     * Lists the keys in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the keys to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<KeyInner>> listSinglePageAsync(String resourceGroupName, String vaultName) {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        if (this.client.getSubscriptionId() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getSubscriptionId() is required and cannot be null.\"));\n+        }\n+        if (resourceGroupName == null) {\n+            return Mono\n+                .error(new IllegalArgumentException(\"Parameter resourceGroupName is required and cannot be null.\"));\n+        }\n+        if (vaultName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter vaultName is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        return FluxUtil\n+            .withContext(\n+                context ->\n+                    service\n+                        .list(\n+                            this.client.getEndpoint(),\n+                            this.client.getSubscriptionId(),\n+                            resourceGroupName,\n+                            vaultName,\n+                            this.client.getApiVersion(),\n+                            accept,\n+                            context))\n+            .<PagedResponse<KeyInner>>map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null))\n+            .subscriberContext(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext())));\n+    }\n+\n+    /**\n+     * Lists the keys in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the keys to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<KeyInner>> listSinglePageAsync(\n+        String resourceGroupName, String vaultName, Context context) {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        if (this.client.getSubscriptionId() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getSubscriptionId() is required and cannot be null.\"));\n+        }\n+        if (resourceGroupName == null) {\n+            return Mono\n+                .error(new IllegalArgumentException(\"Parameter resourceGroupName is required and cannot be null.\"));\n+        }\n+        if (vaultName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter vaultName is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        context = this.client.mergeContext(context);\n+        return service\n+            .list(\n+                this.client.getEndpoint(),\n+                this.client.getSubscriptionId(),\n+                resourceGroupName,\n+                vaultName,\n+                this.client.getApiVersion(),\n+                accept,\n+                context)\n+            .map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null));\n+    }\n+\n+    /**\n+     * Lists the keys in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the keys to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    private PagedFlux<KeyInner> listAsync(String resourceGroupName, String vaultName) {\n+        return new PagedFlux<>(\n+            () -> listSinglePageAsync(resourceGroupName, vaultName), nextLink -> listNextSinglePageAsync(nextLink));\n+    }\n+\n+    /**\n+     * Lists the keys in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the keys to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    private PagedFlux<KeyInner> listAsync(String resourceGroupName, String vaultName, Context context) {\n+        return new PagedFlux<>(\n+            () -> listSinglePageAsync(resourceGroupName, vaultName, context),\n+            nextLink -> listNextSinglePageAsync(nextLink, context));\n+    }\n+\n+    /**\n+     * Lists the keys in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the keys to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedIterable<KeyInner> list(String resourceGroupName, String vaultName) {\n+        return new PagedIterable<>(listAsync(resourceGroupName, vaultName));\n+    }\n+\n+    /**\n+     * Lists the keys in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the keys to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedIterable<KeyInner> list(String resourceGroupName, String vaultName, Context context) {\n+        return new PagedIterable<>(listAsync(resourceGroupName, vaultName, context));\n+    }\n+\n+    /**\n+     * Gets the specified version of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key version to be retrieved.\n+     * @param keyName The name of the key version to be retrieved.\n+     * @param keyVersion The version of the key to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified version of the specified key in the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<Response<KeyInner>> getVersionWithResponseAsync(\n+        String resourceGroupName, String vaultName, String keyName, String keyVersion) {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        if (this.client.getSubscriptionId() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getSubscriptionId() is required and cannot be null.\"));\n+        }\n+        if (resourceGroupName == null) {\n+            return Mono\n+                .error(new IllegalArgumentException(\"Parameter resourceGroupName is required and cannot be null.\"));\n+        }\n+        if (vaultName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter vaultName is required and cannot be null.\"));\n+        }\n+        if (keyName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter keyName is required and cannot be null.\"));\n+        }\n+        if (keyVersion == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter keyVersion is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        return FluxUtil\n+            .withContext(\n+                context ->\n+                    service\n+                        .getVersion(\n+                            this.client.getEndpoint(),\n+                            this.client.getSubscriptionId(),\n+                            resourceGroupName,\n+                            vaultName,\n+                            keyName,\n+                            keyVersion,\n+                            this.client.getApiVersion(),\n+                            accept,\n+                            context))\n+            .subscriberContext(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext())));\n+    }\n+\n+    /**\n+     * Gets the specified version of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key version to be retrieved.\n+     * @param keyName The name of the key version to be retrieved.\n+     * @param keyVersion The version of the key to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified version of the specified key in the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<Response<KeyInner>> getVersionWithResponseAsync(\n+        String resourceGroupName, String vaultName, String keyName, String keyVersion, Context context) {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        if (this.client.getSubscriptionId() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getSubscriptionId() is required and cannot be null.\"));\n+        }\n+        if (resourceGroupName == null) {\n+            return Mono\n+                .error(new IllegalArgumentException(\"Parameter resourceGroupName is required and cannot be null.\"));\n+        }\n+        if (vaultName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter vaultName is required and cannot be null.\"));\n+        }\n+        if (keyName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter keyName is required and cannot be null.\"));\n+        }\n+        if (keyVersion == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter keyVersion is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        context = this.client.mergeContext(context);\n+        return service\n+            .getVersion(\n+                this.client.getEndpoint(),\n+                this.client.getSubscriptionId(),\n+                resourceGroupName,\n+                vaultName,\n+                keyName,\n+                keyVersion,\n+                this.client.getApiVersion(),\n+                accept,\n+                context);\n+    }\n+\n+    /**\n+     * Gets the specified version of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key version to be retrieved.\n+     * @param keyName The name of the key version to be retrieved.\n+     * @param keyVersion The version of the key to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified version of the specified key in the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<KeyInner> getVersionAsync(\n+        String resourceGroupName, String vaultName, String keyName, String keyVersion) {\n+        return getVersionWithResponseAsync(resourceGroupName, vaultName, keyName, keyVersion)\n+            .flatMap(\n+                (Response<KeyInner> res) -> {\n+                    if (res.getValue() != null) {\n+                        return Mono.just(res.getValue());\n+                    } else {\n+                        return Mono.empty();\n+                    }\n+                });\n+    }\n+\n+    /**\n+     * Gets the specified version of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key version to be retrieved.\n+     * @param keyName The name of the key version to be retrieved.\n+     * @param keyVersion The version of the key to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified version of the specified key in the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public KeyInner getVersion(String resourceGroupName, String vaultName, String keyName, String keyVersion) {\n+        return getVersionAsync(resourceGroupName, vaultName, keyName, keyVersion).block();\n+    }\n+\n+    /**\n+     * Gets the specified version of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key version to be retrieved.\n+     * @param keyName The name of the key version to be retrieved.\n+     * @param keyVersion The version of the key to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the specified version of the specified key in the specified key vault.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    public Response<KeyInner> getVersionWithResponse(\n+        String resourceGroupName, String vaultName, String keyName, String keyVersion, Context context) {\n+        return getVersionWithResponseAsync(resourceGroupName, vaultName, keyName, keyVersion, context).block();\n+    }\n+\n+    /**\n+     * Lists the versions of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key versions to be retrieved.\n+     * @param keyName The name of the key versions to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<KeyInner>> listVersionsSinglePageAsync(\n+        String resourceGroupName, String vaultName, String keyName) {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        if (this.client.getSubscriptionId() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getSubscriptionId() is required and cannot be null.\"));\n+        }\n+        if (resourceGroupName == null) {\n+            return Mono\n+                .error(new IllegalArgumentException(\"Parameter resourceGroupName is required and cannot be null.\"));\n+        }\n+        if (vaultName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter vaultName is required and cannot be null.\"));\n+        }\n+        if (keyName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter keyName is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        return FluxUtil\n+            .withContext(\n+                context ->\n+                    service\n+                        .listVersions(\n+                            this.client.getEndpoint(),\n+                            this.client.getSubscriptionId(),\n+                            resourceGroupName,\n+                            vaultName,\n+                            keyName,\n+                            this.client.getApiVersion(),\n+                            accept,\n+                            context))\n+            .<PagedResponse<KeyInner>>map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null))\n+            .subscriberContext(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext())));\n+    }\n+\n+    /**\n+     * Lists the versions of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key versions to be retrieved.\n+     * @param keyName The name of the key versions to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<KeyInner>> listVersionsSinglePageAsync(\n+        String resourceGroupName, String vaultName, String keyName, Context context) {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        if (this.client.getSubscriptionId() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getSubscriptionId() is required and cannot be null.\"));\n+        }\n+        if (resourceGroupName == null) {\n+            return Mono\n+                .error(new IllegalArgumentException(\"Parameter resourceGroupName is required and cannot be null.\"));\n+        }\n+        if (vaultName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter vaultName is required and cannot be null.\"));\n+        }\n+        if (keyName == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter keyName is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        context = this.client.mergeContext(context);\n+        return service\n+            .listVersions(\n+                this.client.getEndpoint(),\n+                this.client.getSubscriptionId(),\n+                resourceGroupName,\n+                vaultName,\n+                keyName,\n+                this.client.getApiVersion(),\n+                accept,\n+                context)\n+            .map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null));\n+    }\n+\n+    /**\n+     * Lists the versions of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key versions to be retrieved.\n+     * @param keyName The name of the key versions to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    private PagedFlux<KeyInner> listVersionsAsync(String resourceGroupName, String vaultName, String keyName) {\n+        return new PagedFlux<>(\n+            () -> listVersionsSinglePageAsync(resourceGroupName, vaultName, keyName),\n+            nextLink -> listVersionsNextSinglePageAsync(nextLink));\n+    }\n+\n+    /**\n+     * Lists the versions of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key versions to be retrieved.\n+     * @param keyName The name of the key versions to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    private PagedFlux<KeyInner> listVersionsAsync(\n+        String resourceGroupName, String vaultName, String keyName, Context context) {\n+        return new PagedFlux<>(\n+            () -> listVersionsSinglePageAsync(resourceGroupName, vaultName, keyName, context),\n+            nextLink -> listVersionsNextSinglePageAsync(nextLink, context));\n+    }\n+\n+    /**\n+     * Lists the versions of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key versions to be retrieved.\n+     * @param keyName The name of the key versions to be retrieved.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedIterable<KeyInner> listVersions(String resourceGroupName, String vaultName, String keyName) {\n+        return new PagedIterable<>(listVersionsAsync(resourceGroupName, vaultName, keyName));\n+    }\n+\n+    /**\n+     * Lists the versions of the specified key in the specified key vault.\n+     *\n+     * @param resourceGroupName The name of the resource group which contains the specified key vault.\n+     * @param vaultName The name of the vault which contains the key versions to be retrieved.\n+     * @param keyName The name of the key versions to be retrieved.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedIterable<KeyInner> listVersions(\n+        String resourceGroupName, String vaultName, String keyName, Context context) {\n+        return new PagedIterable<>(listVersionsAsync(resourceGroupName, vaultName, keyName, context));\n+    }\n+\n+    /**\n+     * Get the next page of items.\n+     *\n+     * @param nextLink The nextLink parameter.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<KeyInner>> listNextSinglePageAsync(String nextLink) {\n+        if (nextLink == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter nextLink is required and cannot be null.\"));\n+        }\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        return FluxUtil\n+            .withContext(context -> service.listNext(nextLink, this.client.getEndpoint(), accept, context))\n+            .<PagedResponse<KeyInner>>map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null))\n+            .subscriberContext(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext())));\n+    }\n+\n+    /**\n+     * Get the next page of items.\n+     *\n+     * @param nextLink The nextLink parameter.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<KeyInner>> listNextSinglePageAsync(String nextLink, Context context) {\n+        if (nextLink == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter nextLink is required and cannot be null.\"));\n+        }\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        context = this.client.mergeContext(context);\n+        return service\n+            .listNext(nextLink, this.client.getEndpoint(), accept, context)\n+            .map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null));\n+    }\n+\n+    /**\n+     * Get the next page of items.\n+     *\n+     * @param nextLink The nextLink parameter.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<KeyInner>> listVersionsNextSinglePageAsync(String nextLink) {\n+        if (nextLink == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter nextLink is required and cannot be null.\"));\n+        }\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        return FluxUtil\n+            .withContext(context -> service.listVersionsNext(nextLink, this.client.getEndpoint(), accept, context))\n+            .<PagedResponse<KeyInner>>map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null))\n+            .subscriberContext(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext())));\n+    }\n+\n+    /**\n+     * Get the next page of items.\n+     *\n+     * @param nextLink The nextLink parameter.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return the page of keys.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<KeyInner>> listVersionsNextSinglePageAsync(String nextLink, Context context) {\n+        if (nextLink == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter nextLink is required and cannot be null.\"));\n+        }\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        context = this.client.mergeContext(context);\n+        return service\n+            .listVersionsNext(nextLink, this.client.getEndpoint(), accept, context)\n+            .map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null));\n+    }\n+}"
  },
  {
    "sha": "b6ff192944d1e96b283d30d05fbb954970b759d1",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeysImpl.java",
    "status": "added",
    "additions": 162,
    "deletions": 0,
    "changes": 162,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeysImpl.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeysImpl.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/KeysImpl.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,162 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.implementation;\n+\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.http.rest.SimpleResponse;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.fluent.KeysClient;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.KeyInner;\n+import com.azure.resourcemanager.keyvault.generated.models.Key;\n+import com.azure.resourcemanager.keyvault.generated.models.Keys;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+\n+public final class KeysImpl implements Keys {\n+    @JsonIgnore private final ClientLogger logger = new ClientLogger(KeysImpl.class);\n+\n+    private final KeysClient innerClient;\n+\n+    private final com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager;\n+\n+    public KeysImpl(\n+        KeysClient innerClient, com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager) {\n+        this.innerClient = innerClient;\n+        this.serviceManager = serviceManager;\n+    }\n+\n+    public Key get(String resourceGroupName, String vaultName, String keyName) {\n+        KeyInner inner = this.serviceClient().get(resourceGroupName, vaultName, keyName);\n+        if (inner != null) {\n+            return new KeyImpl(inner, this.manager());\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public Response<Key> getWithResponse(String resourceGroupName, String vaultName, String keyName, Context context) {\n+        Response<KeyInner> inner = this.serviceClient().getWithResponse(resourceGroupName, vaultName, keyName, context);\n+        if (inner != null) {\n+            return new SimpleResponse<>(\n+                inner.getRequest(),\n+                inner.getStatusCode(),\n+                inner.getHeaders(),\n+                new KeyImpl(inner.getValue(), this.manager()));\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public PagedIterable<Key> list(String resourceGroupName, String vaultName) {\n+        PagedIterable<KeyInner> inner = this.serviceClient().list(resourceGroupName, vaultName);\n+        return Utils.mapPage(inner, inner1 -> new KeyImpl(inner1, this.manager()));\n+    }\n+\n+    public PagedIterable<Key> list(String resourceGroupName, String vaultName, Context context) {\n+        PagedIterable<KeyInner> inner = this.serviceClient().list(resourceGroupName, vaultName, context);\n+        return Utils.mapPage(inner, inner1 -> new KeyImpl(inner1, this.manager()));\n+    }\n+\n+    public Key getVersion(String resourceGroupName, String vaultName, String keyName, String keyVersion) {\n+        KeyInner inner = this.serviceClient().getVersion(resourceGroupName, vaultName, keyName, keyVersion);\n+        if (inner != null) {\n+            return new KeyImpl(inner, this.manager());\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public Response<Key> getVersionWithResponse(\n+        String resourceGroupName, String vaultName, String keyName, String keyVersion, Context context) {\n+        Response<KeyInner> inner =\n+            this.serviceClient().getVersionWithResponse(resourceGroupName, vaultName, keyName, keyVersion, context);\n+        if (inner != null) {\n+            return new SimpleResponse<>(\n+                inner.getRequest(),\n+                inner.getStatusCode(),\n+                inner.getHeaders(),\n+                new KeyImpl(inner.getValue(), this.manager()));\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    public PagedIterable<Key> listVersions(String resourceGroupName, String vaultName, String keyName) {\n+        PagedIterable<KeyInner> inner = this.serviceClient().listVersions(resourceGroupName, vaultName, keyName);\n+        return Utils.mapPage(inner, inner1 -> new KeyImpl(inner1, this.manager()));\n+    }\n+\n+    public PagedIterable<Key> listVersions(\n+        String resourceGroupName, String vaultName, String keyName, Context context) {\n+        PagedIterable<KeyInner> inner =\n+            this.serviceClient().listVersions(resourceGroupName, vaultName, keyName, context);\n+        return Utils.mapPage(inner, inner1 -> new KeyImpl(inner1, this.manager()));\n+    }\n+\n+    public Key getById(String id) {\n+        String resourceGroupName = Utils.getValueFromIdByName(id, \"resourceGroups\");\n+        if (resourceGroupName == null) {\n+            throw logger\n+                .logExceptionAsError(\n+                    new IllegalArgumentException(\n+                        String\n+                            .format(\"The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.\", id)));\n+        }\n+        String vaultName = Utils.getValueFromIdByName(id, \"vaults\");\n+        if (vaultName == null) {\n+            throw logger\n+                .logExceptionAsError(\n+                    new IllegalArgumentException(\n+                        String.format(\"The resource ID '%s' is not valid. Missing path segment 'vaults'.\", id)));\n+        }\n+        String keyName = Utils.getValueFromIdByName(id, \"keys\");\n+        if (keyName == null) {\n+            throw logger\n+                .logExceptionAsError(\n+                    new IllegalArgumentException(\n+                        String.format(\"The resource ID '%s' is not valid. Missing path segment 'keys'.\", id)));\n+        }\n+        return this.getWithResponse(resourceGroupName, vaultName, keyName, Context.NONE).getValue();\n+    }\n+\n+    public Response<Key> getByIdWithResponse(String id, Context context) {\n+        String resourceGroupName = Utils.getValueFromIdByName(id, \"resourceGroups\");\n+        if (resourceGroupName == null) {\n+            throw logger\n+                .logExceptionAsError(\n+                    new IllegalArgumentException(\n+                        String\n+                            .format(\"The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.\", id)));\n+        }\n+        String vaultName = Utils.getValueFromIdByName(id, \"vaults\");\n+        if (vaultName == null) {\n+            throw logger\n+                .logExceptionAsError(\n+                    new IllegalArgumentException(\n+                        String.format(\"The resource ID '%s' is not valid. Missing path segment 'vaults'.\", id)));\n+        }\n+        String keyName = Utils.getValueFromIdByName(id, \"keys\");\n+        if (keyName == null) {\n+            throw logger\n+                .logExceptionAsError(\n+                    new IllegalArgumentException(\n+                        String.format(\"The resource ID '%s' is not valid. Missing path segment 'keys'.\", id)));\n+        }\n+        return this.getWithResponse(resourceGroupName, vaultName, keyName, context);\n+    }\n+\n+    private KeysClient serviceClient() {\n+        return this.innerClient;\n+    }\n+\n+    private com.azure.resourcemanager.keyvault.generated.KeyVaultManager manager() {\n+        return this.serviceManager;\n+    }\n+\n+    public KeyImpl define(String name) {\n+        return new KeyImpl(name, this.manager());\n+    }\n+}"
  },
  {
    "sha": "32034337d7981078bd8d5e096a0a8247031f9975",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/OperationImpl.java",
    "status": "added",
    "additions": 50,
    "deletions": 0,
    "changes": 50,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/OperationImpl.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/OperationImpl.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/OperationImpl.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,50 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.implementation;\n+\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.OperationInner;\n+import com.azure.resourcemanager.keyvault.generated.models.Operation;\n+import com.azure.resourcemanager.keyvault.generated.models.OperationDisplay;\n+import com.azure.resourcemanager.keyvault.generated.models.ServiceSpecification;\n+\n+public final class OperationImpl implements Operation {\n+    private OperationInner innerObject;\n+\n+    private final com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager;\n+\n+    OperationImpl(\n+        OperationInner innerObject, com.azure.resourcemanager.keyvault.generated.KeyVaultManager serviceManager) {\n+        this.innerObject = innerObject;\n+        this.serviceManager = serviceManager;\n+    }\n+\n+    public String name() {\n+        return this.innerModel().name();\n+    }\n+\n+    public OperationDisplay display() {\n+        return this.innerModel().display();\n+    }\n+\n+    public String origin() {\n+        return this.innerModel().origin();\n+    }\n+\n+    public Boolean isDataAction() {\n+        return this.innerModel().isDataAction();\n+    }\n+\n+    public ServiceSpecification serviceSpecification() {\n+        return this.innerModel().serviceSpecification();\n+    }\n+\n+    public OperationInner innerModel() {\n+        return this.innerObject;\n+    }\n+\n+    private com.azure.resourcemanager.keyvault.generated.KeyVaultManager manager() {\n+        return this.serviceManager;\n+    }\n+}"
  },
  {
    "sha": "023cbc825fa3c963da16c52f4b5f88fcb72354f9",
    "filename": "sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/OperationsClientImpl.java",
    "status": "added",
    "additions": 269,
    "deletions": 0,
    "changes": 269,
    "blob_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/blob/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/OperationsClientImpl.java",
    "raw_url": "https://github.com/AzureSDKAutomation/azure-sdk-for-java/raw/8523110ea9c9743410b370951bdfdc186be39723/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/OperationsClientImpl.java",
    "contents_url": "https://api.github.com/repos/AzureSDKAutomation/azure-sdk-for-java/contents/sdk/keyvault/azure-resourcemanager-keyvault-generated/src/main/java/com/azure/resourcemanager/keyvault/generated/implementation/OperationsClientImpl.java?ref=8523110ea9c9743410b370951bdfdc186be39723",
    "patch": "@@ -0,0 +1,269 @@\n+// Copyright (c) Microsoft Corporation. All rights reserved.\n+// Licensed under the MIT License.\n+// Code generated by Microsoft (R) AutoRest Code Generator.\n+\n+package com.azure.resourcemanager.keyvault.generated.implementation;\n+\n+import com.azure.core.annotation.ExpectedResponses;\n+import com.azure.core.annotation.Get;\n+import com.azure.core.annotation.HeaderParam;\n+import com.azure.core.annotation.Headers;\n+import com.azure.core.annotation.Host;\n+import com.azure.core.annotation.HostParam;\n+import com.azure.core.annotation.PathParam;\n+import com.azure.core.annotation.QueryParam;\n+import com.azure.core.annotation.ReturnType;\n+import com.azure.core.annotation.ServiceInterface;\n+import com.azure.core.annotation.ServiceMethod;\n+import com.azure.core.annotation.UnexpectedResponseExceptionType;\n+import com.azure.core.http.rest.PagedFlux;\n+import com.azure.core.http.rest.PagedIterable;\n+import com.azure.core.http.rest.PagedResponse;\n+import com.azure.core.http.rest.PagedResponseBase;\n+import com.azure.core.http.rest.Response;\n+import com.azure.core.http.rest.RestProxy;\n+import com.azure.core.management.exception.ManagementException;\n+import com.azure.core.util.Context;\n+import com.azure.core.util.FluxUtil;\n+import com.azure.core.util.logging.ClientLogger;\n+import com.azure.resourcemanager.keyvault.generated.fluent.OperationsClient;\n+import com.azure.resourcemanager.keyvault.generated.fluent.models.OperationInner;\n+import com.azure.resourcemanager.keyvault.generated.models.OperationListResult;\n+import reactor.core.publisher.Mono;\n+\n+/** An instance of this class provides access to all the operations defined in OperationsClient. */\n+public final class OperationsClientImpl implements OperationsClient {\n+    private final ClientLogger logger = new ClientLogger(OperationsClientImpl.class);\n+\n+    /** The proxy service used to perform REST calls. */\n+    private final OperationsService service;\n+\n+    /** The service client containing this operation class. */\n+    private final KeyVaultManagementClientImpl client;\n+\n+    /**\n+     * Initializes an instance of OperationsClientImpl.\n+     *\n+     * @param client the instance of the service client containing this operation class.\n+     */\n+    OperationsClientImpl(KeyVaultManagementClientImpl client) {\n+        this.service =\n+            RestProxy.create(OperationsService.class, client.getHttpPipeline(), client.getSerializerAdapter());\n+        this.client = client;\n+    }\n+\n+    /**\n+     * The interface defining all the services for KeyVaultManagementClientOperations to be used by the proxy service to\n+     * perform REST calls.\n+     */\n+    @Host(\"{$host}\")\n+    @ServiceInterface(name = \"KeyVaultManagementCl\")\n+    private interface OperationsService {\n+        @Headers({\"Content-Type: application/json\"})\n+        @Get(\"/providers/Microsoft.KeyVault/operations\")\n+        @ExpectedResponses({200})\n+        @UnexpectedResponseExceptionType(ManagementException.class)\n+        Mono<Response<OperationListResult>> list(\n+            @HostParam(\"$host\") String endpoint,\n+            @QueryParam(\"api-version\") String apiVersion,\n+            @HeaderParam(\"Accept\") String accept,\n+            Context context);\n+\n+        @Headers({\"Content-Type: application/json\"})\n+        @Get(\"{nextLink}\")\n+        @ExpectedResponses({200})\n+        @UnexpectedResponseExceptionType(ManagementException.class)\n+        Mono<Response<OperationListResult>> listNext(\n+            @PathParam(value = \"nextLink\", encoded = true) String nextLink,\n+            @HostParam(\"$host\") String endpoint,\n+            @HeaderParam(\"Accept\") String accept,\n+            Context context);\n+    }\n+\n+    /**\n+     * Lists all of the available Key Vault Rest API operations.\n+     *\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Storage operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<OperationInner>> listSinglePageAsync() {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        return FluxUtil\n+            .withContext(\n+                context -> service.list(this.client.getEndpoint(), this.client.getApiVersion(), accept, context))\n+            .<PagedResponse<OperationInner>>map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null))\n+            .subscriberContext(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext())));\n+    }\n+\n+    /**\n+     * Lists all of the available Key Vault Rest API operations.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Storage operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<OperationInner>> listSinglePageAsync(Context context) {\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        context = this.client.mergeContext(context);\n+        return service\n+            .list(this.client.getEndpoint(), this.client.getApiVersion(), accept, context)\n+            .map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null));\n+    }\n+\n+    /**\n+     * Lists all of the available Key Vault Rest API operations.\n+     *\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Storage operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    private PagedFlux<OperationInner> listAsync() {\n+        return new PagedFlux<>(() -> listSinglePageAsync(), nextLink -> listNextSinglePageAsync(nextLink));\n+    }\n+\n+    /**\n+     * Lists all of the available Key Vault Rest API operations.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Storage operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    private PagedFlux<OperationInner> listAsync(Context context) {\n+        return new PagedFlux<>(\n+            () -> listSinglePageAsync(context), nextLink -> listNextSinglePageAsync(nextLink, context));\n+    }\n+\n+    /**\n+     * Lists all of the available Key Vault Rest API operations.\n+     *\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Storage operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedIterable<OperationInner> list() {\n+        return new PagedIterable<>(listAsync());\n+    }\n+\n+    /**\n+     * Lists all of the available Key Vault Rest API operations.\n+     *\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Storage operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.COLLECTION)\n+    public PagedIterable<OperationInner> list(Context context) {\n+        return new PagedIterable<>(listAsync(context));\n+    }\n+\n+    /**\n+     * Get the next page of items.\n+     *\n+     * @param nextLink The nextLink parameter.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Storage operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<OperationInner>> listNextSinglePageAsync(String nextLink) {\n+        if (nextLink == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter nextLink is required and cannot be null.\"));\n+        }\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        return FluxUtil\n+            .withContext(context -> service.listNext(nextLink, this.client.getEndpoint(), accept, context))\n+            .<PagedResponse<OperationInner>>map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null))\n+            .subscriberContext(context -> context.putAll(FluxUtil.toReactorContext(this.client.getContext())));\n+    }\n+\n+    /**\n+     * Get the next page of items.\n+     *\n+     * @param nextLink The nextLink parameter.\n+     * @param context The context to associate with this operation.\n+     * @throws IllegalArgumentException thrown if parameters fail the validation.\n+     * @throws ManagementException thrown if the request is rejected by server.\n+     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.\n+     * @return result of the request to list Storage operations.\n+     */\n+    @ServiceMethod(returns = ReturnType.SINGLE)\n+    private Mono<PagedResponse<OperationInner>> listNextSinglePageAsync(String nextLink, Context context) {\n+        if (nextLink == null) {\n+            return Mono.error(new IllegalArgumentException(\"Parameter nextLink is required and cannot be null.\"));\n+        }\n+        if (this.client.getEndpoint() == null) {\n+            return Mono\n+                .error(\n+                    new IllegalArgumentException(\n+                        \"Parameter this.client.getEndpoint() is required and cannot be null.\"));\n+        }\n+        final String accept = \"application/json\";\n+        context = this.client.mergeContext(context);\n+        return service\n+            .listNext(nextLink, this.client.getEndpoint(), accept, context)\n+            .map(\n+                res ->\n+                    new PagedResponseBase<>(\n+                        res.getRequest(),\n+                        res.getStatusCode(),\n+                        res.getHeaders(),\n+                        res.getValue().value(),\n+                        res.getValue().nextLink(),\n+                        null));\n+    }\n+}"
  }
]
